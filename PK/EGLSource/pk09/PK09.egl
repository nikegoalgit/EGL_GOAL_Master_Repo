package pk09;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import in1.common.*;
import pk.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=PK09 ****
// ------------------------------------------------------------
// ------------------------------------------------------------
// ------------------------------------------------------------
// ----- pk09  -  PICKING HOLD & RELEASE MENU.            -----
// -----          THIS APPLICATION GIVES THE USER THE     -----
// -----          ABILITY CHOICE OF 2 APPLICATIONS TO     -----
// -----          transfer to (pk0i & pk06).              -----
// ------------------------------------------------------------
// ------------------------------------------------------------
// ------------------------------------------------------------
// ----- MAINTENANCE LOG:                                 -----
// -----                                                  -----
// ----- NAME   DATE       DESCRIPTION                    -----
// ----- jbc    07/22/89   created                        -----
// ----- CBRINE 08/11/95   CANADA Added XCTCD to PKWREC   -----
// -----                                                  -----
// -----                                                  -----
// ------------------------------------------------------------
// ------------------------------------------------------------
// ------------------------------------------------------------
// *********************
Program PK09 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  PK09W01 PK09W01; // record
  PKWREC PKWREC; // record
  TA9REC TA9REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XWHTBL {deleteAfterUse = yes}; // table
  use PK09M.PK09M001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    PK09001: PK09001();
    goto PK09001;
  end // end main
end // end PK09

// PICKING hold/release menu
Function PK09001()
   /* ------------------------------------------------------------*/
   /* Format map output area for display of map.*/
   /* ------------------------------------------------------------*/

  XPPK001();

  PK09010(); /* Format map output area*/

  PK09M001.XXXRVNBR = "00"; /* Application revision number*/

  converse PK09M001 ;

   /* ------------------------------------------------------------*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process input request if not a cancel and no errors found.*/
   /* ------------------------------------------------------------*/

  PK09030(); /* Check attention identifier*/

  PK09040(); /* Reset fields to normal intensity*/

  PK09050(); /* Verify the data that was entered*/

  if (converseVar.eventKey not pa2 /* Not a cancel request*/
   && converseVar.validationMsgNum == 0) /* and no errors were found*/
    PK09060(); /* Process valid input request*/
  end


end // end PK09001

// Format the output display
Function PK09010()
   /* ------------------------------------------------------------*/
   /* If first time through or no errors, format the map heading.*/
   /* Highlight warehouse code if warehouse not valid.*/
   /* Indicate sound audible alarm for any error message.*/
   /* ------------------------------------------------------------*/

  if (PK09W01.PK09WSW1 == " " /* First time through*/
   || converseVar.validationMsgNum == 0) /* or no error messages*/

    PK09020(); /* Format map heading area*/

  end

  if (converseVar.validationMsgNum != 0) /* Error message to display*/

    if (PKWREC.XWHABRV == " ") /* Warehouse missing or invalid*/

      if (PK09W01.PK09WMNO == converseVar.validationMsgNum) /* Warehouse only field in error*/

        set PK09M001.XWHCD cursor, modified, bold; /* Highlight warehouse*/
      else
        set PK09M001.XWHCD modified, bold; /* Highlight warehouse*/

      end

      PK09M001.XWHABRV = " "; /* Clear abbreviation*/
      PK09M001.XXXERRID = "PK09002 "; /* Error location*/

    end

    set PK09M001 alarm; /* Indicate sound alarm*/

  end

  PK09W01.PK09WSW1 = "N"; /* Set first time switch*/


end // end PK09010

// Format the map heading
Function PK09020()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* ------------------------------------------------------------*/

  set PK09M001 initial; /* Clear map storage area*/

  PK09M001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  PK09M001.XWHCD = PKWREC.XWHCD; /* Warehouse code*/
  PK09M001.XWHABRV = PKWREC.XWHABRV; /* Warehouse abbreviation*/

  PK09M001.CAITEM = COMMAREA.CAITEM; /* Application item*/
  COMMAREA.CAITEM = " "; /* Clear application item*/

  if (PK09M001.XWHCD != " ")
    set PK09M001.PK09MOPT cursor;
  end

end // end PK09020

// Check attention identifier
Function PK09030()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/

    XSPF1(); /* Exit to the HELP facility*/

    PK09M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    PK09M001.XXXERRID = "PK09200 "; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed or*/
    COMMAREA.CATOAP = "PK0A";
    XSEXIT();
    PK09M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    PK09M001.XXXERRID = "PK09004 "; /* Error location*/

  end


  if (converseVar.eventKey is pf4) /* PF4 was pressed*/

    XSPF4(); /* Exit to system main menu*/

    PK09M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    PK09M001.XXXERRID = "PK09004 "; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set PK09M001 initial; /* Clear the map fields*/

    PKWREC.XWHCD = PK09W01.XWHCD; /* Restore warehouse code*/
    PKWREC.XWHABRV = PK09W01.XWHABRV; /* and warehouse abbreviation*/
    PK09W01.PK09WSW1 = " "; /* Reset first time switch*/

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(12); /* Indicate invalid attention key*/
    PK09M001.XXXERRID = "PK09004 "; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end


end // end PK09030

// Reset highlighted fields
Function PK09040()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set PK09M001.XWHCD initialAttributes; /* Warehouse code*/
  set PK09M001.PK09MOPT cursor, initialAttributes; /* Menu selection*/
  set PK09M001.CATOAP initialAttributes; /* FAST PATH to application*/
  set PK09M001.CAITEM initialAttributes; /* FAST PATH application data*/


end // end PK09040

// Verify data that was entered
Function PK09050()
   /* ------------------------------------------------------------*/
   /* Save and verify warehouse code.*/
   /* Report a warehouse error only if this is a cancel request.*/
   /* Ensure that a TO application was entered if application*/
   /* data was entered.  If a TO application was entered, ensure*/
   /* that no menu selection was entered.  If it was entered,*/
   /* verify the menu selection.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pa2) /* Not a cancel request*/
    PKWREC.XWHCD = PK09M001.XWHCD; /* Save warehouse code*/
  end

  XPPK002(); /* Verify warehouse code*/

  PK09W01.PK09WMNO = converseVar.validationMsgNum; /* Save any error found*/

  if (converseVar.eventKey not pa2) /* Not a cancel request*/
    converseLib.validationFailed(0); /* Clear error message number*/
  end

  if (PK09M001.CAITEM > " " /* Application data was entered and*/
   && PK09M001.CATOAP <= " ") /* no TO application was entered*/

    set PK09M001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(15); /* Indicate enter only with FAST PATH*/
    PK09M001.XXXERRID = "PK09006 "; /* Error location*/

  end



end // end PK09050

// Process valid input request
Function PK09060()
   /* ------------------------------------------------------------*/
   /* Transfer to requested application or exit via FAST PATH.*/
   /* If control is returned, ensure that warehouse is valid.*/
   /* ------------------------------------------------------------*/

  if (PK09M001.CATOAP == " ") /* No FAST PATH request*/

    if (PK09M001.PK09MOPT > 0) /* Menu selection was entered*/

      PK09070(); /* Transfer to the selected application*/

    end

  else

    PK09080(); /* Execute FAST PATH request*/

  end

  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    if (PK09W01.PK09WMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PK09W01.PK09WMNO);
    end /* Restore any warehouse error*/
  end

  if (converseVar.validationMsgNum == 0) /* No errors were found*/

    PK09W01.XWHCD = PKWREC.XWHCD; /* Save warehouse code*/
    PK09W01.XWHABRV = PKWREC.XWHABRV; /* and warehouse abbreviation*/

    if (PK09M001.CAITEM > " ") /* Application data entered*/
      COMMAREA.CAITEM = PK09M001.CAITEM; /* Save in common area*/
    end

  end


end // end PK09060

// Invoke selected application
Function PK09070()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* Move customer, carrier and order fields to the user area.*/
   /* If the request failed, display the returned error message.*/
   /* ------------------------------------------------------------*/

  if (PK09M001.PK09MOPT == 1)
    COMMAREA.CAUSERA = PKWREC.PKWGRPLV;
    COMMAREA.CATOAP = "PK0I";

    XSEXIT(); /* Invoke selected application*/
    set PK09M001.PK09MOPT cursor, modified, bold; /* Highlight selection*/
    PK09M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    PK09M001.XXXERRID = "PK09011 "; /* Error location*/
  else

    COMMAREA.CAUSERA = PKWREC.PKWGRPLV;
    COMMAREA.CATOAP = "PK06";

    XSEXIT(); /* Invoke selected application*/
    set PK09M001.PK09MOPT cursor, modified, bold; /* Highlight selection*/
    PK09M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    PK09M001.XXXERRID = "PK09011 "; /* Error location*/
  end


end // end PK09070

// Execute FAST PATH request
Function PK09080()
   /* ------------------------------------------------------------*/
   /* Transfer to requested application via FAST PATH.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (PK09M001.CATOAP == COMMAREA.CACURRAP) /* TO app same as current*/

    set PK09M001.CATOAP cursor, bold; /* Highlight TO application*/
    converseLib.validationFailed(1); /* Indicate invalid request*/
    PK09M001.XXXERRID = "PK09012 "; /* Process name*/

    return; /* Return to previous process*/

  end

  PKWREC.XWHCD = PK09M001.XWHCD; /* Warehouse code*/
  COMMAREA.CATOAP = PK09M001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = PK09M001.CAITEM; /* Application data*/
  COMMAREA.CAUSERA = PKWREC.PKWGRPLV; /* Application user area*/

  XSEXIT(); /* Transfer to requested application*/

  set PK09M001.CATOAP cursor, modified, bold; /* Highlight to application*/
  PK09M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
  converseLib.validationFailed(); /* Force alarm to sound*/
  PK09M001.XXXERRID = "PK09012 "; /* Process name*/


end // end PK09080

//*** RECORD=PK09W01 ****
// Working Storage for pk0i - menu portion of application
// ***********************
Record PK09W01 type basicRecord
  10 XWHCD XWHCD ; 
  10 XWHABRV XWHABRV ; 
  10 PK09WMNO PK09WMNO ; 
  10 PK09WSW1 PK09WSW1 ; 
end // end PK09W01

// Error message number
DataItem PK09WMNO smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// First time through switch
DataItem PK09WSW1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

