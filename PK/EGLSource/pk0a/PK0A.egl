package pk0a;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import in1.common.*;
import ku.common.*;
import pk.common.*;
import sy.common.*;
import ta.common.*;
import tp.common.*;
import ts.common.*;
//*** PROGRAM=PK0A ****
// This application displays the "PICKING MASTER MENU".
// It controls entry to the subordinate picking functions.
// 
//   DATE     NAME              COMMENTS
// --------   ---------------   -------------------------------
// 03/19/87   Stephen Popa      New application.
// 11/29/88   JOHN WOOD         ADDED NONCSP OPT ON CALLS
// 11/29/88   JOHN WOOD         ADDED XSSEGTR LOGIC
// 08/17/89   jim campbell      add carton class dimension opt
// 09/06/89   jim campbell      change opt12 to carton pack fac
// 01/24/90   RICH GUTMAN       xwhcd 51 & select 8/9 to pw0v/w
// 04/15/91   judy carey        changed option 6 & 7 to go to
//                              pw0d if warehouse is 51
// 05/28/90   s johnson         added option 21
// 09/25/91   Sara Henderson    Allow whse 07 to access pw0v/w.
// 04/07/92   Sara Henderson    Allow whse 02 access to pw0v/w.
//                              Comment out access to whse 04
//                              until phase II.
// 04/27/92   Sara Henderson    Allow whse 04 access to pw0v/w.
// 07/14/92   George Ray        dis-allow all whse access, PW09
// 09/08/95   RYONKE            Added warehouse specific logic
//                              for Canada warehouse (whse=42).
// 02/21/96   Phil Anderson     Add Fast Pick menu options (20
//                              & 21).
// 04/30/98   Abhijit J         Disable Fast Pick menu options
//                              (20 & 21) as per T.Hannah
// 04/26/00   Ernie Smith       Add option 22 (GN0A) for NSC.
//            (GDS)             But it is not enabled yet.
// 02/26/01   APHIL2            Allow option 22 (GN0A) for
//            (dlvrusa)         warehouse's 04, 07, 09, 42, 51.
//                              Also added option 23 for
//                              carrier assignment. This
//                              option invokes GN0B.
// *********************
Program PK0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  PK0AW01 PK0AW01; // record
  PKWREC PKWREC; // record
  PKXREC PKXREC; // record
  PKYREC PKYREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TPWREC TPWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PK0AT1; // table
  use PK0AT2; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use PK0AM.PK0AM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPK001: XPPK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage areas.*/
     /* Clear common PICKING work areas.*/
     /* ------------------------------------------------------------*/

    set PKXREC empty; /* Initialize customer key array*/
    set PKYREC empty; /* Initialize order key array*/
    set PK0AW01 empty; /* Initialize working storage*/
    set TPWREC empty; /* Fast pick application record*/

    PK0AW01.XWHCD = PKWREC.XWHCD; /* Initialize warehouse code*/
    PK0AW01.XWHABRV = PKWREC.XWHABRV; /* and warehouse abbreviation*/

    PK0AW01.PK0AWMNO = converseVar.validationMsgNum; /* Initial warehouse error message*/

    PKWREC.PKWINDEX = 0; /* Initialize array index*/
    PKWREC.PKWCNTRL = " "; /* Initialize inquiry control*/

    PKWREC.PKWFRMDT[1] = 0; /* Initialize binary date field*/
    PKWREC.PKWFRMDT[2] = 0; /* Initialize binary date field*/
    PKWREC.PKWFRMDT[3] = 0; /* Initialize binary date field*/

    PKWREC.PKWTODT[1] = 0; /* Initialize binary date field*/
    PKWREC.PKWTODT[2] = 0; /* Initialize binary date field*/
    PKWREC.PKWTODT[3] = 0; /* Initialize binary date field*/

    goto PK0A001; /* Converse PICKING Master Menu*/


    PK0A001: PK0A001();
    goto PK0A001; /* Converse PICKING Master Menu*/


  end // end main
end // end PK0A

// PICKING Master Menu
Function PK0A001()
   /* ------------------------------------------------------------*/
   /* Format map output area for display of map.*/
   /* ------------------------------------------------------------*/

  PK0A100(); /* Format map output area*/

  PK0AM001.XXXRVNBR = "00"; /* Application revision number*/

  converse PK0AM001 ;

   /* ------------------------------------------------------------*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process input request if not a cancel and no errors found.*/
   /* ------------------------------------------------------------*/

  PK0A200(); /* Check attention identifier*/

  PK0A300(); /* Reset fields to normal intensity*/

  PK0A400(); /* Verify the data that was entered*/

  if (converseVar.eventKey not pa2 /* Not a cancel request*/
   && converseVar.validationMsgNum == 0) /* and no errors were found*/
    PK0A500(); /* Process valid input request*/
  end


end // end PK0A001

// Format the output display
Function PK0A100()
   /* ------------------------------------------------------------*/
   /* If first time through or no errors, format the map heading.*/
   /* Highlight warehouse code if warehouse not valid.*/
   /* Indicate sound audible alarm for any error message.*/
   /* ------------------------------------------------------------*/

  if (PK0AW01.PK0AWSW1 == " " /* First time through*/
   || converseVar.validationMsgNum == 0) /* or no error messages*/

    PK0A110(); /* Format map heading area*/

  end

  if (converseVar.validationMsgNum != 0) /* Error message to display*/

    if (PKWREC.XWHABRV == " ") /* Warehouse missing or invalid*/

      if (PK0AW01.PK0AWMNO == converseVar.validationMsgNum) /* Warehouse only field in error*/

        set PK0AM001.XWHCD cursor, modified, bold; /* Highlight warehouse*/
      else
        set PK0AM001.XWHCD modified, bold; /* Highlight warehouse*/

      end

      PK0AM001.XWHSABRV = " "; /* Clear abbreviation*/
      PK0AM001.XXXERRID = "PK0A100 "; /* Error location*/

    end

    set PK0AM001 alarm; /* Indicate sound alarm*/

  end

  PK0AW01.PK0AWSW1 = "N"; /* Set first time switch*/


end // end PK0A100

// Format the map heading
Function PK0A110()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* ------------------------------------------------------------*/

  set PK0AM001 initial; /* Clear map storage area*/

  PK0AM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  PK0AM001.XWHCD = PK0AW01.XWHCD; /* Warehouse code*/
  PK0AM001.XWHSABRV = PK0AW01.XWHABRV; /* Warehouse abbreviation*/

  PK0AM001.CAITEM = COMMAREA.CAITEM; /* Application item*/
  COMMAREA.CAITEM = " "; /* Clear application item*/


end // end PK0A110

// Check attention identifier
Function PK0A200()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/

    XSPF1(); /* Exit to the HELP facility*/

    PK0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    PK0AM001.XXXERRID = "PK0A200 "; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3 /* PF3 was pressed or*/
   || converseVar.eventKey is pf4) /* PF4 was pressed*/

    XSPF4(); /* Exit to system main menu*/

    PK0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    PK0AM001.XXXERRID = "PK0A200 "; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set PK0AM001 initial; /* Clear the map fields*/

    PKWREC.XWHCD = PK0AW01.XWHCD; /* Restore warehouse code*/
    PKWREC.XWHABRV = PK0AW01.XWHABRV; /* and warehouse abbreviation*/
    PK0AW01.PK0AWSW1 = " "; /* Reset first time switch*/

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(12); /* Indicate invalid attention key*/
    PK0AM001.XXXERRID = "PK0A200 "; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end


end // end PK0A200

// Reset highlighted fields
Function PK0A300()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set PK0AM001.XWHCD initialAttributes; /* Warehouse code*/
  set PK0AM001.PK0AMSEL cursor, initialAttributes; /* Menu selection*/
  set PK0AM001.KUCCOID initialAttributes; /* Company identification*/
  set PK0AM001.KUMSTRID initialAttributes; /* Store identification*/
  set PK0AM001.XNXCD initialAttributes; /* Department code*/
  set PK0AM001.OP1CUOID initialAttributes; /* Order number*/
  set PK0AM001.OP1NORID initialAttributes; /* Sub-order number*/
  set PK0AM001.CATOAP initialAttributes; /* FAST PATH to application*/
  set PK0AM001.CAITEM initialAttributes; /* FAST PATH application data*/


end // end PK0A300

// Verify data that was entered
Function PK0A400()
   /* ------------------------------------------------------------*/
   /* Save and verify warehouse code.*/
   /* Report a warehouse error only if this is a cancel request.*/
   /* Ensure that a TO application was entered if application*/
   /* data was entered.  If a TO application was entered, ensure*/
   /* that no menu selection was entered.  If it was entered,*/
   /* verify the menu selection.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pa2) /* Not a cancel request*/
    PKWREC.XWHCD = PK0AM001.XWHCD; /* Save warehouse code*/
  end

  XPPK002(); /* Verify warehouse code*/

  PK0AW01.PK0AWMNO = converseVar.validationMsgNum; /* Save any error found*/

  if (converseVar.eventKey not pa2) /* Not a cancel request*/
    converseLib.validationFailed(0); /* Clear error message number*/
  end

  if (PK0AM001.CAITEM > " " /* Application data was entered and*/
   && PK0AM001.CATOAP <= " ") /* no TO application was entered*/

    set PK0AM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(15); /* Indicate enter only with FAST PATH*/
    PK0AM001.XXXERRID = "PK0A400 "; /* Error location*/

  end

  if (PK0AM001.CATOAP > " ") /* TO application specified and*/

    PK0A410(); /* See if anything else was entered*/

  else

    if (PK0AM001.PK0AMSEL > 0) /* Menu selection was entered*/

      PK0A420(); /* Verify the menu selection*/

      if (sysVar.arrayIndex == 0) /* Invalid menu selection*/

        set PK0AM001.PK0AMSEL cursor, modified, bold;
                                   /* Highlight selection*/
        converseLib.validationFailed(5); /* Indicate invalid selection*/
        PK0AM001.XXXERRID = "PK0A400 "; /* Error location*/

      end

    end

  end


end // end PK0A400

// Verify FAST PATH request
Function PK0A410()
   /* ------------------------------------------------------------*/
   /* Check to see if any other data was entered on the screen.*/
   /* ------------------------------------------------------------*/

  PK0A411(); /* Check company, carrier and order*/

  if (converseVar.validationMsgNum != 0) /* If error was found*/

    converseLib.validationFailed(16); /* Change to FAST PATH error*/
    PK0AM001.XXXERRID = "PK0A410 "; /* Error location*/

  end

  if (PK0AM001.PK0AMSEL > 0) /* Map selection was entered*/

    set PK0AM001.PK0AMSEL cursor, modified, bold; /* Highlight selection*/
    converseLib.validationFailed(16); /* Indicate FAST PATH conflict*/
    PK0AM001.XXXERRID = "PK0A410 "; /* Error location*/

  end


end // end PK0A410

// Verify that no key was entered
Function PK0A411()
   /* ------------------------------------------------------------*/
   /* Check to see if any other data was entered on the screen.*/
   /* ------------------------------------------------------------*/

  if (PK0AM001.OP1NORID > 0) /* Sub-order number was entered*/

    set PK0AM001.OP1NORID cursor, modified, bold; /* Highlight sub-order*/
    converseLib.validationFailed(18); /* Indicate do not enter*/
    PK0AM001.XXXERRID = "PK0A411 "; /* Error location*/

  end

  if (PK0AM001.OP1CUOID > 0) /* Order number was entered*/

    set PK0AM001.OP1CUOID cursor, modified, bold; /* Highlight order*/
    converseLib.validationFailed(18); /* Indicate do not enter*/
    PK0AM001.XXXERRID = "PK0A411 "; /* Error location*/

  end

  if (PK0AM001.XNXCD > 0) /* Department code was entered*/

    set PK0AM001.XNXCD cursor, modified, bold; /* Highlight department*/
    converseLib.validationFailed(17); /* Indicate do not enter*/
    PK0AM001.XXXERRID = "PK0A411 "; /* Error location*/

  end

  if (PK0AM001.KUMSTRID > 0) /* Store identification was entered*/

    set PK0AM001.KUMSTRID cursor, modified, bold; /* Highlight store*/
    converseLib.validationFailed(17); /* Indicate do not enter*/
    PK0AM001.XXXERRID = "PK0A411 "; /* Error location*/

  end

  if (PK0AM001.KUCCOID > 0) /* Company identification was entered*/

    set PK0AM001.KUCCOID cursor, modified, bold; /* Highlight company*/
    converseLib.validationFailed(17); /* Indicate do not enter*/
    PK0AM001.XXXERRID = "PK0A411 "; /* Error location*/

  end


end // end PK0A411

// Verify the menu selection
Function PK0A420()
   /* ------------------------------------------------------------*/
   /* Verify the menu selection against the selection table.*/
   /* Ensure that any initial keys entered are valid.*/
   /* ------------------------------------------------------------*/

  if (PK0AM001.PK0AMSEL in PK0AT1.PK0AMSEL /* Verify selection*/
  )                                        /* NEXT SENTENCE*/
  end

   /* ------------------------------------------------------------*/
   /* This is a patch area used to disable certain menu selections.*/
   /* ------------------------------------------------------------*/

  if (sysVar.arrayIndex > 0)
    if (sysVar.arrayIndex == 9 /* global lane change.*/
     || sysVar.arrayIndex == 16) /* trailer table.*/
      set PK0AM001.PK0AMSEL cursor, modified, bold; /* Highlight selection*/
      converseLib.validationFailed(377); /* Application not available*/
      PK0AM001.XXXERRID = "PK0A420 "; /* Error location*/
      return;
    else
      if (sysVar.arrayIndex == 22 /* GN0A selection*/
       || sysVar.arrayIndex == 23) /* GN0B selection*/
        /* IF PK0AM001.XWHCD NE '42'; /* Not Canada*/
        if (PK0AM001.XWHCD != "04" /* Not Memphis*/
         && PK0AM001.XWHCD != "07" /* Not Wilsonville*/
         && PK0AM001.XWHCD != "09" /* Not Promo*/
         && PK0AM001.XWHCD != "42" /* Not Canada*/
         && PK0AM001.XWHCD != "51") /* Not DCMS*/
          set PK0AM001.PK0AMSEL cursor, modified, bold; /* Highlight sel cd*/
          converseLib.validationFailed(370); /* Application not available for*/
                                   /* warehouse*/
          PK0AM001.XXXERRID = "PK0A420 "; /* Error location*/
          return;
        end
      else
        if (sysVar.arrayIndex == 20 /* fast pick selection*/
         || sysVar.arrayIndex == 21) /* fast pick planning selection*/
          /* IF PK0AM001.XWHCD NE '51';   /* Memphis apparel*/
          set PK0AM001.PK0AMSEL cursor, modified, bold; /* Highlight company*/
          converseLib.validationFailed(370); /* Application not available for*/
                                   /* warehouse*/
          PK0AM001.XXXERRID = "PK0A420 "; /* Error location*/
          return;
          /* END;*/
        end
      end
    end
  end


  if (PK0AM001.PK0AMSEL == 1 /* Order Inquiry*/
   || PK0AM001.PK0AMSEL == 2) /* or Line Item Inquiry*/

    if (PK0AM001.KUCCOID > 0  /* Company number*/
     || PK0AM001.KUMSTRID > 0 /* or store number*/
     || PK0AM001.XNXCD > 0)   /* or department number was entered*/

      set PK0AM001.KUCCOID cursor, modified, bold; /* Highlight company*/
      set PK0AM001.KUMSTRID modified, bold; /* Highlight store*/
      set PK0AM001.XNXCD modified, bold; /* Highlight department*/

      converseLib.validationFailed(10); /* Indicate enter only order*/
      PK0AM001.XXXERRID = "PK0A420 "; /* Error location*/
    end

    return; /* Return to previous process*/
  end

  if (PK0AM001.PK0AMSEL == 3 /* Customer Inquiry*/
   || PK0AM001.PK0AMSEL == 14) /* or Hold / Release*/

    if (PK0AM001.OP1CUOID > 0 /* Order number*/
     || PK0AM001.OP1NORID > 0) /* or sub-order number was entered*/

      set PK0AM001.OP1CUOID cursor, modified, bold; /* Highlight order*/
      set PK0AM001.OP1NORID modified, bold; /* Highlight sub-order*/

      converseLib.validationFailed(6); /* Indicate enter only customer*/
      PK0AM001.XXXERRID = "PK0A420 "; /* Error location*/
    end

    return; /* Return to previous process*/
  end


  if (PK0AM001.PK0AMSEL == 22 /* GN0A Delivery Note Update*/
   || PK0AM001.PK0AMSEL == 23) /* GN0B Selection*/

    if (PK0AM001.KUCCOID > 0  /* Company ID*/
     || PK0AM001.KUMSTRID > 0 /* or Store*/
     || PK0AM001.XNXCD > 0    /* or Department*/
     || PK0AM001.OP1CUOID > 0 /* or Order number*/
     || PK0AM001.OP1NORID > 0) /* or NIKE sub-order number entered*/

      if (PK0AM001.OP1NORID > 0)
        set PK0AM001.OP1NORID cursor, modified, bold;
      end

      if (PK0AM001.OP1CUOID > 0)
        set PK0AM001.OP1CUOID cursor, modified, bold;
      end

      if (PK0AM001.XNXCD > 0)
        set PK0AM001.XNXCD cursor, modified, bold;
      end

      if (PK0AM001.KUMSTRID > 0)
        set PK0AM001.KUMSTRID cursor, modified, bold;
      end

      if (PK0AM001.KUCCOID > 0)
        set PK0AM001.KUCCOID cursor, modified, bold;
      end

      converseLib.validationFailed(530); /* No Cust/Ord for opt 22*/
      PK0AM001.XXXERRID = "PK0A420 "; /* Error location*/
    end

    return; /* Return to previous process*/
  end


  PK0A411(); /* See if anything else was entered*/


end // end PK0A420

// Process valid input request
Function PK0A500()
   /* ------------------------------------------------------------*/
   /* Transfer to requested application or exit via FAST PATH.*/
   /* If control is returned, ensure that warehouse is valid.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    /* NEXT SENTENCE*/
  else
    return;
  end

  if (PK0AM001.CATOAP == " ") /* No FAST PATH request*/

    if (PK0AM001.PK0AMSEL > 0) /* Menu selection was entered*/

      PK0A510(); /* Transfer to the selected application*/

    end

  else

    PK0A520(); /* Execute FAST PATH request*/

  end

  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    if (PK0AW01.PK0AWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PK0AW01.PK0AWMNO);
    end /* Restore any warehouse error*/
  end

  if (converseVar.validationMsgNum == 0) /* No errors were found*/

    PK0AW01.XWHCD = PKWREC.XWHCD; /* Save warehouse code*/
    PK0AW01.XWHABRV = PKWREC.XWHABRV; /* and warehouse abbreviation*/

    if (PK0AM001.CAITEM > " ") /* Application data entered*/
      COMMAREA.CAITEM = PK0AM001.CAITEM; /* Save in common area*/
    end

  end


end // end PK0A500

// Invoke selected application
Function PK0A510()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* Move customer, carrier and order fields to the user area.*/
   /* If the request failed, display the returned error message.*/
   /* ------------------------------------------------------------*/

  if (PK0AM001.XWHCD in XWHTBL.XWHCD) /* Warehouse code*/
    if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Warehouse code*/
      PKWREC.XWHCD = PK0AM001.XWHCD; /* Warehouse code*/
      PKWREC.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex]; /* Warehouse abbrv*/
      PK0AM001.XWHSABRV = XWHTBL.XWHSABRV[sysVar.arrayIndex]; /* Warehouse abbrv*/
    else
      converseLib.validationFailed(002);
      return;
    end
  else
    converseLib.validationFailed(002);
    return;
  end

  COMMAREA.XWHCD = PK0AM001.XWHCD; /* Warehouse code*/

   /* ------------------------------------------------------------*/
   /* If warehouse on map is 51, 07 or 02; then check table*/
   /* PK0AT2 else check table PK0AT1*/
   /* ------------------------------------------------------------*/

  if (PK0AM001.XWHCD == "51" /* Memphis apparel*/
   || PK0AM001.XWHCD == "07" /* Wilsonville*/
   || PK0AM001.XWHCD == "02" /* Greenland*/
   || PK0AM001.XWHCD == "04" /* Memphis footwear*/
   || PK0AM001.XWHCD == "42") /* Canada*/

     /* From select tbl 2*/
    if (PK0AM001.PK0AMSEL in PK0AT2.PK0AMSEL)
      COMMAREA.CATOAP = PK0AT2.CATOAP[sysVar.arrayIndex];
    end /* Obtain application*/
  else
     /* From select tbl 1*/
    if (PK0AM001.PK0AMSEL in PK0AT1.PK0AMSEL)
      COMMAREA.CATOAP = PK0AT1.CATOAP[sysVar.arrayIndex];
    end /* Obtain application*/
  end

  if (PK0AM001.XWHCD == "51" /* Memphis apparel*/
   || PK0AM001.XWHCD == "07" /* Wilsonville*/
   || PK0AM001.XWHCD == "02" /* Greenland*/
   || PK0AM001.XWHCD == "04" /* Memphis footwear*/
   || PK0AM001.XWHCD == "42") /* Canada*/

    if (sysVar.arrayIndex != 0) /* match found on table*/
      if (PK0AM001.PK0AMSEL == 6) /* selection is pick planning*/
        PKWREC.PKWSELSW = "PP";
      end

      if (PK0AM001.PK0AMSEL == 7) /* selection is picking*/
        PKWREC.PKWSELSW = "PK";
      end

      if (PK0AM001.PK0AMSEL == 20) /* fast pick selection*/
        TPWREC.TPW-SEL-RUN-MODE = "PK";
      end

      if (PK0AM001.PK0AMSEL == 21) /* fast pick planning*/
        TPWREC.TPW-SEL-RUN-MODE = "PP";
      end

    end
  end

  if (sysVar.arrayIndex == 0) /* Selection not in table*/

    converseLib.validationFailed(29); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1PGMNM = "PK0A510 "; /* Process name*/
    TA1REC.TA1LOC = "OBTAIN APPLICATION FROM SELECTION TABLE";
    TA1REC.TA1MAP = "PK0AM001"; /* Map name*/
    SQLCA.SQLCAREC = PK0AM001.PK0AMSEL; /* Menu selection*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    PK0AM001.XXXERRID = "PK0A510 "; /* Error location*/
    return; /* Return to previous process*/

  end

  if (PK0AM001.KUCCOID > 0  /* Company was entered*/
   || PK0AM001.KUMSTRID > 0 /* or store was entered*/
   || PK0AM001.XNXCD > 0)   /* or department was entered*/

    PKWREC.PKWINDEX = 1; /* Inquiry array index*/

    PKWREC.PKWFRMAP[1] = "PK0A"; /* Previous application*/
    PKWREC.PKWSLTYP[1] = "M"; /* Inquiry selection type*/
    PKXREC.PKXKUACT[1] = "S"; /* Customer action field*/

    PKXREC.KUCCOID[1] = PK0AM001.KUCCOID; /* Company identification*/
    PKXREC.KUMSTRID[1] = PK0AM001.KUMSTRID; /* Store identification*/
    PKXREC.XNXCD[1] = PK0AM001.XNXCD; /* Department code*/

    PKXREC.XWHCD = PKWREC.XWHCD; /* Save warehouse code*/
    PKXREC.XWHABRV = PKWREC.XWHABRV; /* and warehouse abbreviation*/

    PKWREC.PKWARRAY[1] = PKXREC.PKWARRAY; /* Customer key array*/

  end

  if (PK0AM001.OP1CUOID > 0 /* Order number was entered*/
   || PK0AM001.OP1NORID > 0) /* or sub-order number was entered*/

    PKWREC.PKWINDEX = 1; /* Inquiry array index*/

    PKWREC.PKWFRMAP[1] = "PK0A"; /* Previous application*/
    PKWREC.PKWSLTYP[1] = "M"; /* Inquiry selection type*/
    PKYREC.PKYORACT[1] = "S"; /* Order action field*/

    PKYREC.PK1CUOID[1] = PK0AM001.OP1CUOID; /* Order number*/
    PKYREC.PK1NORID[1] = PK0AM001.OP1NORID; /* Sub-order number*/

    PKYREC.XWHCD = PKWREC.XWHCD; /* Save warehouse code*/
    PKYREC.XWHABRV = PKWREC.XWHABRV; /* and warehouse abbreviation*/

    PKWREC.PKWARRAY[1] = PKYREC.PKWARRAY; /* Order key array*/

  end

  if (PK0AM001.PK0AMSEL == 20 /* fast pick selection*/
   || PK0AM001.PK0AMSEL == 21) /* fast pick planning*/
    TPWREC.XWH-WHSE-CD = PKWREC.XWHCD;
    COMMAREA.CAUSERA = TPWREC.TPWGRPLV; /* Fast pick user area*/
  else
    COMMAREA.CAUSERA = PKWREC.PKWGRPLV; /* Picking user area*/
  end

  XSEXIT(); /* Invoke selected application*/

  PKWREC.PKWINDEX = 0; /* Reset array index*/
  PKWREC.PKWCNTRL = " "; /* Reset inquiry control*/

  set PK0AM001.PK0AMSEL cursor, modified, bold; /* Highlight selection*/

  PK0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
  converseLib.validationFailed(); /* Force alarm to sound*/
  PK0AM001.XXXERRID = "PK0A510 "; /* Error location*/


end // end PK0A510

// Execute FAST PATH request
Function PK0A520()
   /* ------------------------------------------------------------*/
   /* Transfer to requested application via FAST PATH.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (PK0AM001.CATOAP == COMMAREA.CACURRAP)
                                   /* TO application same as current*/

    set PK0AM001.CATOAP cursor, bold; /* Highlight TO application*/
    converseLib.validationFailed(1); /* Indicate invalid request*/
    PK0AM001.XXXERRID = "PK0A520 "; /* Process name*/

    return; /* Return to previous process*/

  end

  PKWREC.XWHCD = PK0AM001.XWHCD; /* Warehouse code*/

  COMMAREA.CATOAP = PK0AM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = PK0AM001.CAITEM; /* Application data*/

  COMMAREA.CAUSERA = PKWREC.PKWGRPLV; /* Application user area*/

  XSEXIT(); /* Transfer to requested application*/

  set PK0AM001.CATOAP cursor, modified, bold; /* Highlight to application*/
  PK0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
  converseLib.validationFailed(); /* Force alarm to sound*/
  PK0AM001.XXXERRID = "PK0A520 "; /* Process name*/


end // end PK0A520

//*** RECORD=PK0AW01 ****
// Working Storage for PK0A - PICKING Master Menu
// ***********************
Record PK0AW01 type basicRecord
  10 XWHCD XWHCD ; 
  10 XWHABRV XWHABRV ; 
  10 PK0AWMNO PK0AWMNO ; 
  10 PK0AWSW1 PK0AWSW1 ; 
end // end PK0AW01

// Error message number
DataItem PK0AWMNO smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// First time through switch
DataItem PK0AWSW1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

