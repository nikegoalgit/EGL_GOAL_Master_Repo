package pk07;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import in1.common.*;
import pk.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=PK07 ****
// This application displays the "PICK SELECTION MASTER MENU".
// It controls entry to the subordinate selection functions.
// 
//   DATE     NAME              COMMENTS
// --------   ---------------   -------------------------------
// 03/24/87   Stephen Popa      New application.
// 11/30/88   JOHN WOOD         ADDED NONCSP OPTION TO CALLS
// 11/30/88   JOHN WOOD         ADDED XSSEGTR LOGIC
// 05/12/93   Rob Morgan        Make whse 2,4,7 & 51 invalid.
// 08/11/95   CBRINE            CANADA Added XCTCD to PKWREC
// *********************
Program PK07 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  PK07W01 PK07W01; // record
  PKWREC PKWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PK07T {deleteAfterUse = yes}; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use PK07M.PK07M001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPK001: XPPK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage areas.*/
     /* Clear common PICKING work areas.*/
     /* ------------------------------------------------------------*/

    set PK07W01 empty; /* Initialize working storage*/

    PK07W01.XWHCD = PKWREC.XWHCD; /* Initialize warehouse code*/
    PK07W01.XWHABRV = PKWREC.XWHABRV; /* and warehouse abbreviation*/

    PK07W01.PK07WMNO = converseVar.validationMsgNum; /* Initial warehouse error message*/

    PKWREC.PKWINDEX = 0; /* Initialize array index*/
    PKWREC.PKWCNTRL = " "; /* Initialize inquiry control*/

    goto PK07001; /* Converse PICK SELECTION Master Menu*/


    PK07001: PK07001();
    goto PK07001; /* Converse PICK SELECTION Master Menu*/


  end // end main
end // end PK07

// PICK SELECTION Master Menu
Function PK07001()
   /* ------------------------------------------------------------*/
   /* Format map output area for display of map.*/
   /* ------------------------------------------------------------*/

  PK07100(); /* Format map output area*/

  PK07M001.XXXRVNBR = "00"; /* Application revision number*/

  converse PK07M001 ;

   /* ------------------------------------------------------------*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process input request if not a cancel and no errors found.*/
   /* ------------------------------------------------------------*/

  PK07200(); /* Check attention identifier*/

  PK07300(); /* Reset fields to normal intensity*/

  PK07400(); /* Verify the entered data*/

  if (converseVar.eventKey not pa2 /* Not a cancel request*/
   && converseVar.validationMsgNum == 0) /* and no errors were found*/
    PK07500(); /* Process valid input request*/
  end


end // end PK07001

// Format the output display
Function PK07100()
   /* ------------------------------------------------------------*/
   /* If first time through or no errors, format the map heading.*/
   /* Highlight warehouse code if warehouse not valid.*/
   /* Indicate sound audible alarm for any error message.*/
   /* ------------------------------------------------------------*/

  if (PK07W01.PK07WSW1 == " " /* First time through*/
   || converseVar.validationMsgNum == 0) /* or no error messages*/

    PK07110(); /* Format map heading area*/

  end

  if (converseVar.validationMsgNum != 0) /* Error message to display*/

    if (PKWREC.XWHABRV == " ") /* Warehouse missing or invalid*/

      if (PK07W01.PK07WMNO == converseVar.validationMsgNum) /* Warehouse only field in error*/

        set PK07M001.XWHCD cursor, modified, bold; /* Highlight warehouse*/
      else
        set PK07M001.XWHCD modified, bold; /* Highlight warehouse*/

      end

      PK07M001.XWHABRV = " "; /* Clear abbreviation*/
      PK07M001.XXXERRID = "PK07100 "; /* Error location*/

    end

    set PK07M001 alarm; /* Indicate sound alarm*/

  end

  PK07W01.PK07WSW1 = "N"; /* Set first time switch*/


end // end PK07100

// Format the map heading
Function PK07110()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* ------------------------------------------------------------*/

  set PK07M001 initial; /* Clear map storage area*/

  PK07M001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  PK07M001.XWHCD = PK07W01.XWHCD; /* Warehouse code*/
  PK07M001.XWHABRV = PK07W01.XWHABRV; /* Warehouse abbreviation*/

  PK07M001.CAITEM = COMMAREA.CAITEM; /* Application item*/
  COMMAREA.CAITEM = " "; /* Clear application item*/


end // end PK07110

// Check attention identifier
Function PK07200()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/

    XSPF1(); /* Exit to the HELP facility*/

    PK07M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    PK07M001.XXXERRID = "PK07200 "; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    PKWREC.XWHCD = PK07M001.XWHCD; /* Save warehouse code*/

    COMMAREA.CATOAP = "PK0A"; /* To application*/
    COMMAREA.CAUSERA = PKWREC.PKWGRPLV; /* Application user area*/

    XSEXIT(); /* Exit to application main menu*/

    PK07M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    PK07M001.XXXERRID = "PK07200 "; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf4) /* PF4 was pressed*/

    XSPF4(); /* Exit to system main menu*/

    PK07M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    PK07M001.XXXERRID = "PK07200 "; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set PK07M001 initial; /* Clear map storage area*/

    PKWREC.XWHCD = PK07W01.XWHCD; /* Restore warehouse code*/
    PKWREC.XWHABRV = PK07W01.XWHABRV; /* and warehouse abbreviation*/
    PK07W01.PK07WSW1 = " "; /* Reset first time switch*/

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(12); /* Indicate invalid attention key*/
    PK07M001.XXXERRID = "PK07200 "; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end


end // end PK07200

// Reset highlighted fields
Function PK07300()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set PK07M001.XWHCD initialAttributes; /* Warehouse code*/
  set PK07M001.PK07MSEL cursor, initialAttributes; /* Menu selection*/
  set PK07M001.CATOAP initialAttributes; /* FAST PATH to application*/
  set PK07M001.CAITEM initialAttributes; /* FAST PATH application data*/


end // end PK07300

// Verify data that was entered
Function PK07400()
   /* ------------------------------------------------------------*/
   /* Save and verify warehouse code.*/
   /* Ensure that a TO application was entered if application*/
   /* data was entered.  If a TO application was entered, ensure*/
   /* that no menu selection was entered.  If it was entered,*/
   /* verify the menu selection against the selection table.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pa2) /* Not a cancel request*/
    PKWREC.XWHCD = PK07M001.XWHCD; /* Save warehouse code*/
  end

  XPPK002(); /* Verify warehouse code*/

  if (converseVar.validationMsgNum == 0) /* Good return from XPPK002*/

    if (PKWREC.XWHCD == "02" /* These warehouses should not*/
     || PKWREC.XWHCD == "04" /* be using this menu system*/
     || PKWREC.XWHCD == "07" 
     || PKWREC.XWHCD == "51")

      converseLib.validationFailed(2); /* Indicate invalid warehouse*/
      set PK07M001.XWHCD cursor, modified, bold; /* Highlight warehouse*/
    end
  end

  PK07W01.PK07WMNO = converseVar.validationMsgNum; /* Save any error found*/


  if (PK07M001.CAITEM > " " /* Application data was entered and*/
   && PK07M001.CATOAP <= " ") /* no TO application was entered*/

    set PK07M001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(15); /* Indicate enter only with FAST PATH*/
    PK07M001.XXXERRID = "PK07400 "; /* Error location*/

  end

  if (PK07M001.CATOAP > " " /* TO application specified and*/
   && PK07M001.PK07MSEL > 0) /* menu selection was entered*/

    set PK07M001.PK07MSEL cursor, modified, bold; /* Highlight selection*/
    converseLib.validationFailed(16); /* Indicate FAST PATH conflict*/
    PK07M001.XXXERRID = "PK07400 "; /* Error location*/

  else

    if (PK07M001.PK07MSEL > 0) /* Menu selection was entered*/

      if (PK07M001.PK07MSEL in PK07T.PK07MSEL)
        return;
      end /* Verify selection*/

      set PK07M001.PK07MSEL cursor, modified, bold; /* Highlight selection*/
      converseLib.validationFailed(5); /* Indicate invalid selection*/
      PK07M001.XXXERRID = "PK07400 "; /* Error location*/

    end

  end


end // end PK07400

// Process valid input request
Function PK07500()
   /* ------------------------------------------------------------*/
   /* Transfer to requested application or exit via FAST PATH.*/
   /* If control is returned, ensure that warehouse is valid.*/
   /* ------------------------------------------------------------*/

  if (PK07M001.CATOAP == " ") /* No FAST PATH request*/

    if (PK07M001.PK07MSEL > 0) /* Menu selection was entered*/

      PK07510(); /* Transfer to the selected application*/

    end

  else

    PK07520(); /* Execute FAST PATH request*/

  end

  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    if (PK07W01.PK07WMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PK07W01.PK07WMNO);
    end /* Restore any warehouse error*/
  end

  if (converseVar.validationMsgNum == 0) /* No errors were found*/

    PK07W01.XWHCD = PKWREC.XWHCD; /* Save warehouse code*/
    PK07W01.XWHABRV = PKWREC.XWHABRV; /* and warehouse abbreviation*/

    if (PK07M001.CAITEM > " ") /* Application data entered*/
      COMMAREA.CAITEM = PK07M001.CAITEM; /* Save in common area*/
    end

  end


end // end PK07500

// Invoke selected application
Function PK07510()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* If the request failed, display the returned error message.*/
   /* ------------------------------------------------------------*/

  if (PK07M001.PK07MSEL in PK07T.PK07MSEL)
    COMMAREA.CATOAP = PK07T.CATOAP[sysVar.arrayIndex];
  end /* Obtain application*/

  if (sysVar.arrayIndex == 0) /* Selection not in table*/

    converseLib.validationFailed(29); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1PGMNM = "PK07510 "; /* Process name*/
    TA1REC.TA1LOC = "OBTAIN APPLICATION FROM SELECTION TABLE";
    TA1REC.TA1MAP = "PK07M001"; /* Map name*/
    SQLCA.SQLCAREC = PK07M001.PK07MSEL; /* Menu selection*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    PK07M001.XXXERRID = "PK07510 "; /* Error location*/
    return; /* Return to previous process*/

  end

  PKWREC.XWHCD = PK07M001.XWHCD; /* Save warehouse code*/

  COMMAREA.CAUSERA = PKWREC.PKWGRPLV; /* Application user area*/

  XSEXIT(); /* Invoke selected application*/

  set PK07M001.PK07MSEL cursor, modified, bold; /* Highlight selection*/
  PK07M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
  converseLib.validationFailed(); /* Force alarm to sound*/
  PK07M001.XXXERRID = "PK07510 "; /* Error location*/


end // end PK07510

// Execute FAST PATH request
Function PK07520()
   /* ------------------------------------------------------------*/
   /* Transfer to requested application via FAST PATH.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (PK07M001.CATOAP == COMMAREA.CACURRAP)
                                   /* To application same as current*/

    set PK07M001.CATOAP cursor, modified, bold; /* Highlight TO application*/
    converseLib.validationFailed(1); /* Indicate invalid request*/
    PK07M001.XXXERRID = "PK07520 "; /* Error location*/

    return; /* Return to previous process*/

  end

  PKWREC.XWHCD = PK07M001.XWHCD; /* Save warehouse code*/

  COMMAREA.CATOAP = PK07M001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = PK07M001.CAITEM; /* Application data*/

  COMMAREA.CAUSERA = PKWREC.PKWGRPLV; /* Application user area*/

  XSEXIT(); /* Transfer to requested application*/

  set PK07M001.CATOAP cursor, modified, bold; /* Highlight TO application*/
  PK07M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
  converseLib.validationFailed(); /* Force alarm to sound*/
  PK07M001.XXXERRID = "PK07520 "; /* Error location*/


end // end PK07520

//*** RECORD=PK07W01 ****
// Working Storage for PK07 - PICK SELECTION Master Menu
// ***********************
Record PK07W01 type basicRecord
  10 XWHCD XWHCD ; 
  10 XWHABRV XWHABRV ; 
  10 PK07WMNO PK07WMNO ; 
  10 PK07WSW1 PK07WSW1 ; 
end // end PK07W01

// Error message number
DataItem PK07WMNO smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// First time through switch
DataItem PK07WSW1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

