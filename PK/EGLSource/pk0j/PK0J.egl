package pk0j;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import in1.common.*;
import pk.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=PK0J ****
// This application displays the Development Model Menu.
// It provides entry to the subordinate applications.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      11/10/88  USERID  New application.
// CANADA   08/11/95  CBRINE  Added XCTCD to PKWREC
// *********************
Program PK0J type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  PK0JW00 PK0JW00; // record
  PK0JW01 PK0JW01; // record
  PKWREC PKWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PK0JT1; // table
  use XWHTBL; // table
  use PK0JM.PK0JM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPK001: XPPK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set PK0JM001 initial; /* M001 input/output*/
    set PK0JW00 empty; /* Working storage*/
    set PK0JW01 empty; /* M001 display storage*/

    PK0JW00.PK0JW-FORMAT-MAP-SWITCH = "Y"; /* Format the map switch*/
    PK0JW00.PK0JW-REQUEST-FOR-DATA-SWITCH = "N";
                                                   /* Request for data switch*/

     /* ------------------------------------------------------------*/
     /* If data was passed in the COMMAREA, use as the initial key.*/
     /* ------------------------------------------------------------*/

    if (COMMAREA.XWHCD > " ") /* Data was passed*/

      PK0JM001.XWHCD = COMMAREA.XWHCD; /* GPC code*/

      PK0JW00.PK0JW-REQUEST-FOR-DATA-SWITCH = "Y";
                                                   /* Request for data switch*/

    end

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto PK0J001; /* Converse the main process*/

    PK0J001: PK0J001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto PK0J001; /* Converse the main process*/

  end // end main
end // end PK0J

// Main process to display a map
Function PK0J001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  PK0J100(); /* Obtain the data to display*/

  PK0J200(); /* Format and display the map*/

  PK0J300(); /* Check attention identifier*/

  PK0J400(); /* Reset fields to normal intensity*/

  PK0J500(); /* Verify the data that was entered*/

  PK0J600(); /* Process valid input request*/

end // end PK0J001

// Obtain the data to display
Function PK0J100()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (PK0JW00.PK0JW-REQUEST-FOR-DATA-SWITCH != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0)           /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Clear the map display storage area and save the key fields.*/
   /* ------------------------------------------------------------*/

  set PK0JW01 empty; /* M001 display storage*/

  PK0JW01.XWHCD = PK0JM001.XWHCD; /* GPC code*/

   /* ------------------------------------------------------------*/
   /* Obtain the WAREHOUSE description.*/
   /* ------------------------------------------------------------*/

  if (PK0JW01.XWHCD in XWHTBL.XWHCD)
    PK0JW01.XWHSABRV = XWHTBL.XWHSABRV[sysVar.arrayIndex];
  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  PK0JW00.PK0JW-REQUEST-FOR-DATA-SWITCH = "N";
                                                 /* Request for data switch*/

end // end PK0J100

// Format and converse the map
Function PK0J200()
   /* ------------------------------------------------------------*/
   /* If obtain data failed or no error, format data to display.*/
   /* ------------------------------------------------------------*/

  if (PK0JW00.PK0JW-REQUEST-FOR-DATA-SWITCH == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0)           /* or no error found*/

    if (PK0JW00.PK0JW-FORMAT-MAP-SWITCH == "Y") /* Map must be formatted*/
      PK0J210(); /* Format the data on the map*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  PK0JM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  PK0JM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  PK0JM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAMSG != " " /* or message text*/
   || converseVar.validationMsgNum != 0) /* or message text*/

    PK0JM001.XXXMODID = COMMAREA.XXXPRCNM; /* Module identification*/

    set PK0JM001 alarm; /* Indicate sound alarm*/

    if (COMMAREA.CAMSG != " ") /* or message text*/
      PK0JM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
    end
  end

  converse PK0JM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  COMMAREA.XXXPRCNM = " "; /* Module identification*/
  COMMAREA.CAMSGNO = " "; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = PK0JM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = PK0JM001.CAITEM; /* Application data*/

end // end PK0J200

// Format the display data
Function PK0J210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set PK0JM001 initial; /* M001 input/output area*/

  PK0JW00.PK0JW-FORMAT-MAP-SWITCH = "N"; /* Format the map switch*/

   /* ------------------------------------------------------------*/
   /* Format the map key fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  PK0JM001.XWHCD = COMMAREA.XWHCD; /* GPC code*/
  PK0JM001.XWHSABRV = PK0JW01.XWHSABRV; /* GPC description*/

end // end PK0J210

// Check attention identifier
Function PK0J300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (PK0JW00.PK0JW-REQUEST-FOR-DATA-SWITCH == "Y")
                                                /* Request for data pending*/
      set PK0JW01 empty; /* M001 display storage*/
    end

    PK0JW00.PK0JW-FORMAT-MAP-SWITCH = "Y"; /* Format the map switch*/
    PK0JW00.PK0JW-REQUEST-FOR-DATA-SWITCH = "N";
                                                 /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (PK0JM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      XSPKS01(); /* Exit to another application*/

      set PK0JM001.CATOAP cursor, bold; /* Highlight*/

    else

      COMMAREA.XXXPRCNM = "300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "PK0JM001"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "PK0A"; /* TO application*/
    end

    XSPKS01(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    COMMAREA.XXXPRCNM = "300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end

end // end PK0J300

// Reset highlighted fields
Function PK0J400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set PK0JM001.XWHCD initialAttributes;
  set PK0JM001.PK0JM-MENU-SELECTION initialAttributes; /* Menu selection*/
  set PK0JM001.CATOAP initialAttributes; /* FAST PATH to application*/
  set PK0JM001.CAITEM initialAttributes; /* FAST PATH application data*/

   /* ------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* ------------------------------------------------------------*/

  return; /* Return to previous process*/

end // end PK0J400

// Verify data that was entered
Function PK0J500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    COMMAREA.XXXPRCNM = "500"; /* Module identification*/
    set PK0JM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Indicate only with FAST PATH*/

  end

   /* ------------------------------------------------------------*/
   /* Verify the General Product Class code.*/
   /* ------------------------------------------------------------*/

  if (PK0JM001.XWHCD in XWHTBL.XWHCD /* Code in table*/
   && XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/

    PK0JM001.XWHSABRV = XWHTBL.XWHSABRV[sysVar.arrayIndex]; /* Save description*/

  else

    /* ------------------------------------------------------------*/
     /* If not found or inactive, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/

    PK0JM001.XWHSABRV = " "; /* Clear description*/

    COMMAREA.XXXPRCNM = "500"; /* Module identification*/
    set PK0JM001.XWHCD cursor, bold; /* Highlight*/
    converseLib.validationFailed(8); /* Field missing or invalid*/

  end

   /* ------------------------------------------------------------*/
   /* Verify the menu selection that was entered.*/
   /* ------------------------------------------------------------*/

  if (PK0JM001.PK0JM-MENU-SELECTION in PK0JT1.PK0JM-MENU-SELECTION)
                                                      /* Selection in table*/

     /* NEXT SENTENCE*/

  else

    /* ------------------------------------------------------------*/
     /* If not found, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/

    COMMAREA.XXXPRCNM = "500"; /* Module identification*/
    set PK0JM001.PK0JM-MENU-SELECTION cursor, bold; /* Highlight*/
    converseLib.validationFailed(8); /* Field missing or invalid*/

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end

end // end PK0J500

// Process valid input request
Function PK0J600()
   /* ------------------------------------------------------------*/
   /* Update the modifiable data in the COMMAREA.*/
   /* ------------------------------------------------------------*/

  COMMAREA.XWHCD = PK0JM001.XWHCD;
  PKWREC.XWHCD = PK0JM001.XWHCD;

   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* ------------------------------------------------------------*/

  if (PK0JM001.PK0JM-MENU-SELECTION in PK0JT1.PK0JM-MENU-SELECTION
  ) /* NEXT SENTENCE*/
  end

  COMMAREA.CATOAP = PK0JT1.CATOAP[sysVar.arrayIndex];

  COMMAREA.CAFRMAPP = "PK0J";

  XSPKS01(); /* Exit to another application*/

   /* ------------------------------------------------------------*/
   /* If the request failed, display the returned error message.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CATOAP = " "; /* TO application*/

  set PK0JM001.PK0JM-MENU-SELECTION cursor, bold; /* Highlight*/

end // end PK0J600

//*** RECORD=PK0JW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record PK0JW00 type basicRecord
  10 PK0JW-FORMAT-MAP-SWITCH PK0JW-FORMAT-MAP-SWITCH ; 
  10 PK0JW-REQUEST-FOR-DATA-SWITCH PK0JW-REQUEST-FOR-DATA-SWITCH ; 
end // end PK0JW00

//*** RECORD=PK0JW01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record PK0JW01 type basicRecord
  10 XWHCD XWHCD ; 
  10 XWHSABRV XWHSABRV ; 
end // end PK0JW01

// Menu selection code
DataItem PK0JM-MENU-SELECTION num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem PK0JW-FORMAT-MAP-SWITCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem PK0JW-REQUEST-FOR-DATA-SWITCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end