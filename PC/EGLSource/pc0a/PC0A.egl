package pc0a;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import pc.common.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=PC0A ****
// This application displays the "PRODUCTION ORDER MENU".
// It provides entry to the subordinate applications.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 04/15/88   rlesow   New application.
// 03/18/91   GAMEN    Add option 37 - oets maintenance
// 01/03/92   CHAERT   Add option  7 - SALES ORD/CUST PO INQRY
// 08/14/92   LSUTTO   Add option 16 - LETTER OF CREDIT MENU
// 08/21/92   GAMEN    Add option 17 - Customer/style spcl inst
// 09/21/92   KSANFO   Add option 24 - Ftwr SS Autoload
// 01/20/93   SDIFLE   Add option 18 - POID-SEASON Inq/Maint
// 02/01/93   KSANFO   Add option 25 - CUSTOM LOGO AUTOLOAD
// 09/21/93   GAMEN    Remove reference to PC-XXXMSGNO-CHAR.
// 10/15/93   dhales   check PCw-XXXMSGNO-CHAR is numeric
//                     in pc0a100
// 03/14/97   AELKIN   Add option 38 - PPR MENU
// 06/02/97   jniese   ppr - pca365 - new ppr screens
// 12/17/97   DRAMSE   Add option 19
// 09/28/98   NREDDY   PO Menu's to display sceen names
// 07/17/01   SVANJA   Removed option 25 - CUSTOM LOGO AUTOLOAD
// 05/13/02    MRAGHU Removed Option 6 - BLANK P.O. NUMBER
//  from the MENU changed PC0A400 and MAP definitions
// *********************
Program PC0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PC00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  PCWREC PCWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PC0AT {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use PC0AM.PC0AM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPC001: XPPC001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the PRODUCTION ORDER Master Menu.*/
     /* ------------------------------------------------------------*/

    goto PC0A001; /* Converse the Master Menu*/

    PC0A001: PC0A001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the PRODUCTION ORDER Master Menu.*/
     /* ------------------------------------------------------------*/

    goto PC0A001; /* Converse the Master Menu*/

  end // end main
end // end PC0A

// production order master menu
Function PC0A001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  PC0A100(); /* Format and display the map*/

  PC0A200(); /* Check attention identifier*/

  PC0A300(); /* Reset fields to normal intensity*/

  PC0A400(); /* Verify the data that was entered*/

  PC0A500(); /* Process valid input request*/

end // end PC0A001

// Format and display the map
Function PC0A100()
   /* ------------------------------------------------------------*/
   /* If no error to display, format the map output area.*/
   /* Indicate sound audible alarm for any error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message*/

    set PC0AM001 initial; /* Clear map output area*/

    PC0AM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

    PC0AM001.XGPCD = PCWREC.XGPCD;

    PC0AM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
    COMMAREA.CAITEM = " "; /* Clear application data*/

  else

    set PC0AM001 alarm; /* Indicate sound alarm*/

  end

  if (PCWREC.PCW-XXXMSGNO-CHAR not numeric)
    PCWREC.XXXMSGNO = 0;
  end

  if (PCWREC.XXXMSGNO != 0)

    if (PCWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PCWREC.XXXMSGNO);
    end
                                   /* Error message passed back from*/
                                  /* called application*/
    PCWREC.XXXMSGNO = 0; /* Rest error message*/

    set PC0AM001 alarm; /* Indicate sound alarm*/

  end

  converse PC0AM001 ;

end // end PC0A100

// Check attention identifier
Function PC0A200()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set PC0AM001 initial; /* Clear the map fields*/

    exit stack; /* Exit to redisplay map*/

  end

  if (PC0AM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      COMMAREA.CATOAP = PC0AM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = PC0AM001.CAITEM; /* Application data*/

      XSPCS01(); /* Exit to another application*/

    else

      converseLib.validationFailed(5); /* Indicate PF key not valid*/

    end

    set PC0AM001.CATOAP cursor, modified, bold; /* Highlight*/

    PC0AM001.XXXPRCNM = "PC0A200"; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "PC0AM001"; /* Move map name for help*/
    end

    XSPCS01(); /* Exit to another application*/

    PC0AM001.XXXPRCNM = "PC0A200"; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    PC0AM001.XXXPRCNM = "PC0A200"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      set PC0AM001 initial; /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end PC0A200

// Reset highlighted fields
Function PC0A300()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set PC0AM001.PC0AMSEL initialAttributes; /* Menu selection*/
  set PC0AM001.CATOAP initialAttributes; /* FAST PATH to application*/
  set PC0AM001.CAITEM initialAttributes; /* FAST PATH application data*/

end // end PC0A300

// Verify data that was entered
Function PC0A400()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Verify the menu selection that was entered.*/
   /* Exit to redisplay the map if any error was found.*/
   /* ------------------------------------------------------------*/

  if (PC0AM001.CAITEM > " ") /* Application data was entered*/
    /**/
    set PC0AM001.CAITEM cursor, modified, bold; /* Highlight*/
    /**/
    converseLib.validationFailed(7); /* Indicate enter only with FAST PATH*/
    PC0AM001.XXXPRCNM = "PC0A400"; /* Process name*/
    /**/
  end

  PC0A410(); /* Verify the gpc code entered*/

  if (PC0AM001.PC0AMSEL > 0) /* Menu selection was entered*/
    /**/
    PC0A420(); /* Verify the menu selection*/
    /**/
  end

  if (PC0AM001.PC0AMSEL == 23 /* Footwear autoload selected*/
   && PC0AM001.XGPCD != "02") /* and gpc code not equal footwear*/
    /**/
    set PC0AM001.PC0AMSEL cursor, modified, bold; /* Highlight*/
    /**/
    converseLib.validationFailed(138); /* Set error message*/
    PC0AM001.XXXPRCNM = "PC0A400"; /* Process name*/
    /**/
  end

  if (PC0AM001.PC0AMSEL == 22 /* Apparel autoload selected*/
   && PC0AM001.XGPCD != "03") /* and gpc code not equal apparel*/
    /**/
    set PC0AM001.PC0AMSEL cursor, modified, bold; /* Highlight*/
    /**/
    converseLib.validationFailed(138); /* Set error message*/
    PC0AM001.XXXPRCNM = "PC0A400"; /* Process name*/
    /**/
  end

  /* IF PC0AM001.PC0AMSEL EQ 25        /* Apparel custom logo autoload*/
  /* AND PC0AM001.XGPCD NE '03';     /* and gpc code not equal apparel*/
  /* ;*/
  /* SET PC0AM001.PC0AMSEL CURSOR,MODIFIED,BRIGHT; /* Highlight*/
  /* ;*/
  /* MOVE 138 TO EZEMNO;             /* Set error message*/
  /* MOVE 'PC0A400' TO PC0AM001.XXXPRCNM;   /* Process name*/
  /* ;*/
  /* END;*/

  if (PC0AM001.PC0AMSEL == 6) /* Inquiry by Blank PO Nbr*/
  /* AND PC0AM001.XGPCD NE '03';     /* and gpc code not equal apparel*/
    /**/
    set PC0AM001.PC0AMSEL cursor, modified, bold; /* Highlight*/
    /**/
    converseLib.validationFailed(138); /* Set error message*/
    PC0AM001.XXXPRCNM = "PC0A400"; /* Process name*/
    /**/
  end

  if (PC0AM001.PC0AMSEL == 18 /* Poid-season inq/maint*/
   && PC0AM001.XGPCD != "03") /* and gpc code not equal apparel*/
    /**/
    set PC0AM001.PC0AMSEL cursor, modified, bold; /* Highlight*/
    /**/
    converseLib.validationFailed(138); /* Set error message*/
    PC0AM001.XXXPRCNM = "PC0A400"; /* Process name*/
    /**/
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    /**/
    exit stack; /* Exit to redisplay map*/
    /**/
  end

end // end PC0A400

// Validate the gpc code
Function PC0A410()
   /* ------------------------------------------------------------*/
   /* Verify the gpc code against the gpc code table.*/
   /* Return an error message if the gpc code is not found.*/
   /* ------------------------------------------------------------*/

  if (PC0AM001.XGPCD in XGPTBL.XGPCD)
    return;
  end /* Verify selection*/

  set PC0AM001.XGPCD cursor, modified, bold; /* Highlight*/

  converseLib.validationFailed(28); /* Indicate invalid selection*/
  PC0AM001.XXXPRCNM = "PC0A410"; /* Process name*/

end // end PC0A410

// Validate the menu selection
Function PC0A420()
   /* ------------------------------------------------------------*/
   /* Verify the menu selection against the selection table.*/
   /* Return an error message if the selection is not found.*/
   /* ------------------------------------------------------------*/

  if (PC0AM001.PC0AMSEL in PC0AT.PC0AMSEL)
    return;
  end /* Verify selection*/

  set PC0AM001.PC0AMSEL cursor, modified, bold; /* Highlight*/

  converseLib.validationFailed(9); /* Indicate invalid selection*/
  PC0AM001.XXXPRCNM = "PC0A420"; /* Process name*/

end // end PC0A420

// Process valid input request
Function PC0A500()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* If the request failed, display the returned error message.*/
   /* ------------------------------------------------------------*/

  COMMAREA.XGPCD = PC0AM001.XGPCD;

  PCWREC.XGPCD = PC0AM001.XGPCD;

  if (PC0AM001.PC0AMSEL > 0) /* Menu selection was entered*/

    PCWREC.PCWMAP = PC0AM001.PC0AMSEL;

    COMMAREA.CAUSERA = PCWREC.CAUSERA; /* Move common p.o. record to*/
     /* to commarea*/
    COMMAREA.CATOAP = PC0AT.CATOAP[sysVar.arrayIndex]; /* TO application*/

    sysVar.transferName = COMMAREA.CATOAP;

    XSPCS01(); /* Exit to another application*/

    set PC0AM001.PC0AMSEL cursor, modified, bold; /* Highlight*/

    PC0AM001.XXXPRCNM = "PC0A500"; /* Process name*/

  end

end // end PC0A500

