package pc0d;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import pc.common.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=PC0D ****
// ************************************************************
// *
// *   THIS PROGRAM IS USED TO SUBMIT THE FOOTWEAR BATCH AUTO-
// *   LOAD OF THE INLINE (PO TYPE 'FT').  ALL FACTORIES WILL
// *   LOAD AT THE SAME TIME.
// *
// *   THE USER  WILL ENTER THE BUY YEAR YY AND THE BUY MONTH
// *   MM ON THE MAP, THE PROGRAM WILL SUPPLY THE CENTRY.
// *
// *   THE USER WILL HIT THE ENTER KEY TO SUBMIT THE JOB.
// *
// *   DATE       USERID           COMMENTS
// *  _______    ________         ________________________
// *  9/13/89    GWITZI           NEW APPLICATION
// * 12/05/89    JWOOD            REMOVED TARREC FROM LIST
// * 12/05/89    JWOOD            REPLACED TA0PM001 WITH NEW
// * 07/17/90    JWOOD            REmoved ut2rec form t&l list
// * 11/14/90    mchris           changed jcl tables to run
// *                              ta0131 rather than ta0141
// *                              to allow for flexibility in
// *                              report distribution.
// * 11/21/90    mchris           changed to only select po's
// *                              with a delivery month that
// *                              is 3 months out for all
// *                              countries.
// * 12/12/90    mchris           changed copies of 3 for
// *                              pc1501 rpt to 1 copy.
// * 01/09/91    chaert           changed PC0D500. allow PF9
// *                              to be pressed before enter.
// * 04/16/91    lsutto           changed output to 'N' for
// *                              bundle processing.
// * 11/30/93    GAMEN            Chage to use theatre of oper
// *                              logic.
// * 04/12/95    SLEWIS           chg l/c tape permissions
// * 04/15/96    GAMEN            Add Wing Man to be able to
// *                              submit Footwear Tape request.
// * 02/14/97    GAMEN            Happy Valentines Day! Remove
// *                              ability to submit B-grade
// *                              tape.
// * 12/01/97    BMUSTI           MODIFIED JCL TABLE
// * 03/26/98    KGRAHA           Add Kathryn Smith to PC0D016
// *                              so she's authorized to
// *                              submit apparel Nissho tape.
// *                              Add Kevin Graham and Jake
// *                              to footwear and apparel.
// * 04/08/98    DRAMSE           Added JGIORG for Ftwr tape
// *                              request. PC0D016
// * 05/01/98    NREDDY           Split for Equipment
// * 12/03/98    DRAMSE           Added TPARK1 for Equip tape
// * 12/02/99    DRAMSE           Added SMILL1 for Equip tape
// *                              Modified PC0D016
// * 03/16/00    VSANKA           Added SHARBE for Equip tape
// *                              Modified PC0D016
// * 05/13/00    MNADEL           1. Added HSTOCK AND WMAN for
// *                                 Apparel Tape.
// *                              2. Added DPARIS AND HSTOCk
// *                                 for Footwear Tape.
// *                              3. Added DPARIS, HSTOCk and
// *                                 WMAN for Equip Tape.
// * 09/19/00    VMATT           Added userid's KDRISC and
// *                             JTEISH for footwear and
// *                             equipment in PC0D016.
// *                             In PC0D016 changed userid of
// *                             Sally Lambert(From SHARBE
// *                             to SLAMB2) in equipment.
// * 03/29/01    SKUMA4          Modified the PC0D JCL tables
// *                             and SGRP PC0DS96
// *                             to allow 2 as a valid return
// *                             code.
// * 10/29/01    VMATT           Added userid's JTEISH and
// *                             DMCLEN for apparel in PC0D016.
// * 01/08/02    ATHELA          CHANGED TO SUBMIT REPORT FOR
// *                             MISSING BANK RULES
// ************************************************************
// *********************
Program PC0D type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PC00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  PC0DW01 PC0DW01; // record
  PCFREC PCFREC; // record
  PCWREC PCWREC; // record
  PCYREC PCYREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  XCTHREC XCTHREC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PC0DT01; // table
  use PC0DT02; // table
  use PC0DT03 {deleteAfterUse = yes}; // table
  use PC0DT04 {deleteAfterUse = yes}; // table
  use PC0DT05 {deleteAfterUse = yes}; // table
  use PC0DT11 {deleteAfterUse = yes}; // table
  use PC0DT22 {deleteAfterUse = yes}; // table
  use PC0DT33 {deleteAfterUse = yes}; // table
  use PC0DT44 {deleteAfterUse = yes}; // table
  use PC0DT55 {deleteAfterUse = yes}; // table
  use PC0DTMO; // table
  use PC0DM.PC0DM001,  // forms
      PC0DM.PC0DM010, 
      PC0DM.PC0DM020, 
      PC0DM.PC0DM030, 
      PC0DM.PC0DM040, 
      PC0DM.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPC001: XPPC001();

     /* ------------------------------------------------------------*/

     /* ------------------------------------------------------------*/

    set PC0DW01 empty; /* Initialize working storage*/
    set PCYREC empty; /* Initialize IOMOD passing record*/
    set PCFREC empty; /* Initialize IOMOD passing record*/

    set ERRSQLCA empty; /* Initialize*/
    set SQLCA empty; /* Initialize*/

    set TA1REC empty; /* Initialize*/
    set TA2REC empty; /* Initialize date record*/
    set XCTHREC empty; /* Initialize user record*/
    set TA6REC empty; /* Initialize Jcl record*/
    set TAEREC empty; /* Initialize*/

    set PC0DM001 initial; /* Initialize map*/

    set XX0XW01 empty; /* Initialize*/

    PC0DWLIX = 0; /* Initialize line index*/

    set PC0DM001.PC0DMSEL[1] cursor;
    PC0D000: PC0D000();
    goto PC0D010;
    PC0D010: PC0D010();
    goto PC0D010;
  end // end main
end // end PC0D

// GET CURRENT DATE
Function PC0D000()

   /* ----------------------------------------------------------*/
   /* CURRENT DATE*/
   /* ----------------------------------------------------------*/

  set TA2REC empty; /* Clear date record*/
  TA2REC.TA2DTOPT = "GETDATE"; /* Move in option*/

  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation*/

  if (sysVar.errorCode == "00000000") /* Good call*/
    if (TA2REC.TA2RTNCD == 0000) /* Valid date*/
      PC0DW01.PC0DWCDT = TA2REC.TA2GRGGN; /* Current date*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql commarea*/
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "PC0D"; /* Process name*/
      TA1REC.TA1LOC = "SELECT DATE ROUTINE     ";

      call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes}; /* Error diagnosis routine*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      PC0DM010.XXXPRCNM = "PC0D000"; /* Process name*/

    end
  end

   /* ----------------------------------------------------------*/
   /* INITIALIZE SELECTION FIELDS*/
   /* ----------------------------------------------------------*/

  move "A" to PC0DW01.PC0DWSEL[1] for all;

   /* ------------------------------------------------------------*/
      /* CALL SUB-ROUTINE TO FIND WHICH ENVIRONMENT*/
      /* THE PROGRAM IS EXECUTING IN, DEVELOPMENT*/
      /* OR PRODUCTION.*/
   /* ------------------------------------------------------------*/
  set XCTHREC empty;
  call "XC0910" (XCTHREC) {isNoRefresh = yes, isExternal = yes};

  if (XCTHREC.XCTH-THEATER-RUNTYPE == " ")
    PC0DM010.XXXPRCNM = "PC0D000"; /* module identification*/
    converseLib.validationFailed(8); /* System not available*/
    return;
  end


end // end PC0D000

// PROGRAM PROCESS CONTROL
Function PC0D010()

   /* ------------------------------------------------------------*/
   /* This is the main process used for this program. Process-*/
   /* ing always returns to the top of this process and falls to*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1)     NOT USED      (OBTAIN DATA TO DISPLAY).*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process the entered data.*/

   /* In all PF Key functions "EZEFLO" is used to redisplay the*/
   /* map when an error is found.*/

   /* "EZEFLO" is also used to redisplay the map when a major*/
   /* error occurs.*/
   /* ------------------------------------------------------------*/


  PC0D012(); /* Format and display the map*/

  PC0D013(); /* Check attention identifier*/

  PC0D014(); /* Reset fields to normal intensity*/

  PC0D015(); /* Verify the entered data*/

  PC0D016(); /* Process the entered data*/


end // end PC0D010

// DISPLAY SELECT MAP
Function PC0D012()

   /* tcs change begin for pcf137  ------------------**/
  if (PC0DM001.PC0DMSEL[1] == PC0DW01.PC0DWSEL[1]
   && PC0DM001.PC0DMSEL[2] == PC0DW01.PC0DWSEL[2]
   && PC0DM001.PC0DMSEL[3] == PC0DW01.PC0DWSEL[3]
   && PC0DM001.PC0DMSEL[4] == PC0DW01.PC0DWSEL[4]
   && converseVar.validationMsgNum == 0)
    return;
  end
   /* tcs change end   for pcf137  ------------------**/

  if (converseVar.validationMsgNum == 0)

      /* NEXT SENTENCE*/

  else

    if (converseVar.validationMsgNum == 190
     && COMMAREA.CAMSG > " ") /* ===> Job info message*/
      converseLib.validationFailed(0); /* ===> reset Job submitted message*/
      PC0DM010.XXXPRCNM = "PC0D012"; /* PROCESS NAME*/
      PC0DM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info message*/
      COMMAREA.CAMSG = " "; /* ===> reset Job info message*/
    end

    set PC0DM010 alarm; /* Sound alarm*/

  end

  PC0DM010.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  converse PC0DM001 ;


end // end PC0D012

// CHECK ATTENTION IDENTIFIERS
Function PC0D013()

   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set PC0DM001 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (PC0DM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set PCWREC empty; /* Clear the system record*/
      COMMAREA.CATOAP = PC0DM001.CATOAP; /* To application*/
      COMMAREA.CAITEM = PC0DM001.CAITEM; /* To application*/

      XSPCS01(); /* Exit to another application*/

    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      PC0DM001.XXXPRCNM = "PC0D013"; /* Process name*/
    end

    set PC0DM001.CATOAP cursor, bold; /* Highlight*/
    PC0DM001.XXXPRCNM = "PC0D013"; /* Process name*/
    return; /* Exit to redisplay map*/
  end


  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD0G";
    XSPCS01();
  end

  if (converseVar.eventKey is pf21)
    COMMAREA.CATOAP = "PC0A";
    XSPCS01();

    PC0DM001.XXXPRCNM = "PC0D013"; /* Process name*/
    exit stack; /* Redisplay map*/
  end

  if (converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    XSPCS01(); /* Exit to another application*/

    PC0DM001.XXXPRCNM = "PC0D013"; /* Process name*/
    exit stack; /* Redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3  was pressed*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    COMMAREA.CATOAP = "LC0A"; /* Set to p.o. menu*/

    XSPCS01(); /* Exit to another application*/

    PC0DM001.XXXPRCNM = "PC0D013"; /* Process name*/
    exit stack; /* Redisplay map*/
  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    PC0DM001.XXXPRCNM = "PC0D013"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa3)

      converseLib.clearScreen();
       /* Clear screen before display*/

    end

    exit stack; /* Exit to redisplay map*/
  end


end // end PC0D013

// RESET HIGHLIGHTED FIELDS
Function PC0D014()

   /* ------------------------------------------------------------*/
   /* RESET FIELD ATTRIBUTES TO NORMAL*/
   /* ------------------------------------------------------------*/

  set PC0DM001.CATOAP initialAttributes; /* Commarea TO application*/
  set PC0DM001.CAITEM initialAttributes; /* Commarea application data*/



  set PC0DM001.PC0DMSEL[1] initialAttributes;
  set PC0DM001.PC0DMSEL[2] initialAttributes;
   /* tcs addition begin for  pcf137 ---------------------**/
  set PC0DM001.PC0DMSEL[3] initialAttributes;

   /* tcs addition end   for  pcf137 ---------------------**/
  set PC0DM001.PC0DMSEL[4] initialAttributes;
end // end PC0D014

// PROCESS THE ENTERED DATA
Function PC0D015()

   /* ------------------------------------------------------------*/
   /* First check to see if a fast path was requested.*/
   /* ------------------------------------------------------------*/

  if (PC0DM001.CAITEM > " ") /* Application data was entered*/

    set PC0DM001.CAITEM cursor, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    PC0DM010.XXXPRCNM = "PC0D015"; /* Process name*/
    return;

  end

   /* ------------------------------------------------------------*/
   /* Then see if anything was entered*/
   /* ------------------------------------------------------------*/

   /* tcs change   begin for pcf137 --------------------------**/
  if (PC0DM001.PC0DMSEL[1] == " "
   && PC0DM001.PC0DMSEL[2] == " "
   && PC0DM001.PC0DMSEL[3] == " "
   && PC0DM001.PC0DMSEL[4] == " "
   && PC0DM001.PC0DMSEL[5] == " "
   && PC0DM001.PC0DMSEL[6] == " ") /* none selected*/
    exit stack;
  end

  PC0DW01.PC0DWCNT = 0;
  if (PC0DM001.PC0DMSEL[1] > " ")
    PC0DW01.PC0DWCNT = PC0DW01.PC0DWCNT + 1;
  end

  if (PC0DM001.PC0DMSEL[2] > " ")
    PC0DW01.PC0DWCNT = PC0DW01.PC0DWCNT + 1;
  end

  if (PC0DM001.PC0DMSEL[3] > " ")
    PC0DW01.PC0DWCNT = PC0DW01.PC0DWCNT + 1;
  end

  if (PC0DM001.PC0DMSEL[4] > " ")
    PC0DW01.PC0DWCNT = PC0DW01.PC0DWCNT + 1;
  end

  if (PC0DM001.PC0DMSEL[5] > " ")
    PC0DW01.PC0DWCNT = PC0DW01.PC0DWCNT + 1;
  end

  if (PC0DM001.PC0DMSEL[6] > " ")
    PC0DW01.PC0DWCNT = PC0DW01.PC0DWCNT + 1;
  end

  if (PC0DW01.PC0DWCNT > 1)
    set PC0DM001.PC0DMSEL[1] cursor, bold; /* Highlight data*/
    converseLib.validationFailed(144); /* Enter only ONE row*/
    PC0DM010.XXXPRCNM = "PC0D015"; /* Process name*/
    return;
  end

end // end PC0D015

Function PC0D016()
   /* ------------------------------------------------------------*/
   /* If any errors so far don't do nothin'*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum > 0)
    return;
  end

   /* ------------------------------------------------------------*/
   /* If Apparel Nissho tape (pc2601) requested*/
   /* ------------------------------------------------------------*/

  if (PC0DM001.PC0DMSEL[1] > " ")
    if (COMMAREA.CACHGFL == "Y"
     && COMMAREA.CACLVL[3] == "Y")
      PC0D100();
    else
      PC0DM010.XXXPRCNM = "PC0D016"; /* module identification*/
      converseLib.validationFailed(163); /* not authorized for this screen*/
      return;
    end
  end


   /* ------------------------------------------------------------*/
   /* If Regular Footwear Nissho tape (pc2601) requested*/
   /* ------------------------------------------------------------*/

  if (PC0DM001.PC0DMSEL[2] > " ")
    if (COMMAREA.CACHGFL == "Y"
     && COMMAREA.CACLVL[1] == "Y")
      PC0D200();
    else
      PC0DM010.XXXPRCNM = "PC0D016"; /* module identification*/
      converseLib.validationFailed(163); /* not authorized for this screen*/
      return;
    end
  end


   /* tcs addition begin for pcf137 -----------------------------**/
   /* ------------------------------------------------------------*/
   /* If Regular Equipment Nissho tape (pc7501) requested*/
   /* ------------------------------------------------------------*/

  if (PC0DM001.PC0DMSEL[3] > " ")
    if (COMMAREA.CACHGFL == "Y"
     && COMMAREA.CACLVL[2] == "Y")
      PC0D300();
    else
      PC0DM010.XXXPRCNM = "PC0D016"; /* module identification*/
      converseLib.validationFailed(163); /* not authorized for this screen*/
      return;
    end
  end

   /* tcs addition end   for pcf137 -----------------------------**/

  if (PC0DM001.PC0DMSEL[4] > " ")
    if (COMMAREA.CACHGFL == "Y"
     && COMMAREA.CACLVL[4] == "Y")
      PC0D700();
    else
      PC0DM010.XXXPRCNM = "PC0D016"; /* module identification*/
      converseLib.validationFailed(163); /* not authorized for this screen*/
      return;
    end
  end
  if (PC0DM001.PC0DMSEL[5] > " " || PC0DM001.PC0DMSEL[6] > " ")
    PC0D800();
  end
  move PC0DM001.PC0DMSEL to PC0DW01.PC0DWSEL[1] for all;

end // end PC0D016

// PROGRAM PROCESS CONTROL
Function PC0D100()

   /* ------------------------------------------------------------*/
   /* This is the main process used for this program. Process-*/
   /* ing always returns to the top of this process and falls to*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1)     NOT USED      (OBTAIN DATA TO DISPLAY).*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process the entered data.*/

   /* In all PF Key functions "ezertn" is used to redisplay the*/
   /* map when an error is found.*/

   /* "ezertn" is also used to redisplay the map when a major*/
   /* error occurs.*/
   /* ------------------------------------------------------------*/


  PC0D120(); /* Format and display the map*/

  PC0D130(); /* Check attention identifier*/

  PC0D140(); /* Reset fields to normal intensity*/

  PC0D150(); /* Verify the entered data*/

  PC0D160(); /* Process the entered data*/


end // end PC0D100

// DISPLAY SELECT MAP
Function PC0D120()


  if (converseVar.validationMsgNum == 0)

      /* NEXT SENTENCE*/

  else

    if (converseVar.validationMsgNum == 190
     && COMMAREA.CAMSG > " ") /* ===> Job info message*/
      converseLib.validationFailed(0); /* ===> reset Job submitted message*/
      PC0DM010.XXXPRCNM = "PC0D200"; /* PROCESS NAME*/
      PC0DM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info message*/
      COMMAREA.CAMSG = " "; /* ===> reset Job info message*/
    end

    set PC0DM010 alarm; /* Sound alarm*/

  end

  PC0DM010.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  converse PC0DM010 ;


end // end PC0D120

// CHECK ATTENTION IDENTIFIERS
Function PC0D130()

   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set PC0DM010 initial; /* Clear the map fields*/
    return; /* Exit to redisplay map*/
  end

  if (PC0DM010.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set PCWREC empty; /* Clear the system record*/
      COMMAREA.CATOAP = PC0DM010.CATOAP; /* To application*/
      COMMAREA.CAITEM = PC0DM010.CAITEM; /* To application*/

      XSPCS01(); /* Exit to another application*/

    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      PC0DM010.XXXPRCNM = "PC0D130"; /* Process name*/
    end

    set PC0DM010.CATOAP cursor, bold; /* Highlight*/
    PC0DM010.XXXPRCNM = "PC0D130"; /* Process name*/
    return; /* Exit to redisplay map*/
  end


  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD0G";
    XSPCS01();
  end

  if (converseVar.eventKey is pf21)
    COMMAREA.CATOAP = "PC0A";
    XSPCS01();

    PC0DM010.XXXPRCNM = "PC0D130"; /* Process name*/
    return; /* Redisplay map*/
  end

  if (converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    XSPCS01(); /* Exit to another application*/

    PC0DM010.XXXPRCNM = "PC0D130"; /* Process name*/
    return; /* Redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3  was pressed*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    COMMAREA.CATOAP = "PC0D"; /* Set to p.o. menu*/

    XSPCS01(); /* Exit to another application*/

    PC0DM010.XXXPRCNM = "PC0D130"; /* Process name*/
    return; /* Redisplay map*/
  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf9)  /* PF9 was not pressed*/

    PC0DM010.XXXPRCNM = "PC0D130"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa3)

      converseLib.clearScreen();
       /* Clear screen before display*/

    end

    return; /* Exit to redisplay map*/
  end


end // end PC0D130

// RESET HIGHLIGHTED FIELDS
Function PC0D140()

   /* ------------------------------------------------------------*/
   /* RESET FIELD ATTRIBUTES TO NORMAL*/
   /* ------------------------------------------------------------*/

  set PC0DM010.CATOAP initialAttributes; /* Commarea TO application*/
  set PC0DM010.CAITEM initialAttributes; /* Commarea application data*/

  set PC0DM010.PC0DMLCD initialAttributes; /* l/c open date*/

  set PC0DM010.PC0DMNYY initialAttributes; /* 'normal' country po year*/
  set PC0DM010.PC0DMNMM initialAttributes; /* 'normal' country po month*/
  set PC0DM010.PC0DMEYY initialAttributes; /* exception country po year*/
  set PC0DM010.PC0DMEMM initialAttributes; /* exception country po month*/

  set PC0DM010.PC0DMMS1 initialAttributes; /* exception country po month*/
  set PC0DM010.PC0DMMS2 initialAttributes; /* exception country po month*/
  set PC0DM010.PC0DMMS3 initialAttributes; /* exception country po month*/

end // end PC0D140

// PROCESS THE ENTERED DATA
Function PC0D150()

   /* ------------------------------------------------------------*/
   /* First check to see if a fast path was requested.*/
   /* ------------------------------------------------------------*/

  if (PC0DM010.CAITEM > " ") /* Application data was entered*/

    set PC0DM010.CAITEM cursor, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    PC0DM010.XXXPRCNM = "PC0D150"; /* Process name*/
    return;

  end


   /* ------------------------------------------------------------*/
    /* otherwise...  validate screen fields*/
   /* ------------------------------------------------------------*/

  set PC0DM010.PC0DMLCD cursor; /* Highlight*/
  PC0DW01.PC0DWERR = "N"; /* clear out edit error flag*/

   /* ------------------------------------------------------------*/
   /* validate l/c open date*/
   /* ------------------------------------------------------------*/

  set TA2REC empty;
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = 01;
  TA2REC.TA2GRCYM = PC0DM010.PC0DMLCD;
  PC0DS02(); /* edit date range*/

  if (TA2REC.TA2RTNCD != 0)
    set PC0DM010.PC0DMLCD cursor, bold;
    PC0DW01.PC0DWERR = "Y";
    PC0DM010.XXXPRCNM = "PC0D150"; /* Process name*/
    PC0DW01.PC0DWLCD = "000000";
    converseLib.validationFailed(38); /* Indicate missing or invalid*/
    return;
  else
    set PC0DM010.PC0DMLCD initialAttributes;
    PC0DW01.PC0DWLCD = PC0DM010.PC0DMLCD;
  end


   /* ------------------------------------------------------------*/
   /* If Pf9 was pressed dont display the message*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf9
   && PC0DW01.PC0DWERR == "N") /* no edit errors indicated*/
    return;
  end


  if (PC0DW01.PC0DWERR == "N") /* no edit errors indicated*/
    PC0D151(); /* show data at bottom of screen*/
    PC0DM010.VAGen_EZEMSG = "PRESS PF9 TO SUBMIT THIS JOB";
  else
    PC0DM010.VAGen_EZEMSG = "                            ";
  end

end // end PC0D150

// enlighten screen messages
Function PC0D151()

   /* ------------------------------------------------------------*/
   /* First find the normal and exception monthes that will*/
         /* have po(s) opened.*/
   /* ------------------------------------------------------------*/

  PC0DW01.PC0DWLCD = PC0DM010.PC0DMLCD;

  PC0DW01.PC0DWNMM = PC0DW01.PC0DWLCM;
  PC0DW01.PC0DWNMM = PC0DW01.PC0DWNMM + 2;
  PC0DW01.PC0DWEMM = PC0DW01.PC0DWNMM + 1;

  PC0DM010.PC0DMNYY = PC0DW01.PC0DWLYR;
  PC0DM010.PC0DMEYY = PC0DW01.PC0DWLYR;

  if (PC0DW01.PC0DWNMM == 13)
    PC0DW01.PC0DWNMM = 1; /* make normal month = jan*/
    PC0DW01.PC0DWEMM = 2; /* make except month = feb*/
    PC0DM010.PC0DMNYY = PC0DW01.PC0DWLYR + 1;
    PC0DM010.PC0DMEYY = PC0DW01.PC0DWLYR + 1;
  end

  if (PC0DW01.PC0DWNMM == 14)
    PC0DW01.PC0DWNMM = 2; /* make normal month = feb*/
    PC0DW01.PC0DWEMM = 3; /* make except month = mar*/
    PC0DM010.PC0DMNYY = PC0DW01.PC0DWLYR + 1;
    PC0DM010.PC0DMEYY = PC0DW01.PC0DWLYR + 1;
  end

  if (PC0DW01.PC0DWEMM == 13)
    PC0DW01.PC0DWEMM = 1; /* make except month = jan*/
    PC0DM010.PC0DMEYY = PC0DW01.PC0DWLYR + 1;
  end

  if (PC0DW01.PC0DWNMM in PC0DTMO.PC0DTMM)
    PC0DM010.PC0DMNMM = PC0DTMO.PC0DTAB[sysVar.arrayIndex];
  end

  if (PC0DW01.PC0DWEMM in PC0DTMO.PC0DTMM)
    PC0DM010.PC0DMEMM = PC0DTMO.PC0DTAB[sysVar.arrayIndex];
  end

   /* ------------------------------------------------------------*/
   /* Then set hidden screen fields to normal*/
   /* ------------------------------------------------------------*/

   /* SET PC0DM010.PC0DMNMM NORMAL;*/
   /* SET PC0DM010.PC0DMNMM PROTECT;*/
  set PC0DM010.PC0DMEMM normal;
  set PC0DM010.PC0DMEMM protect;
   /* SET PC0DM010.PC0DMNYY NORMAL;*/
   /* SET PC0DM010.PC0DMNYY PROTECT;*/
  set PC0DM010.PC0DMEYY normal;
  set PC0DM010.PC0DMEYY protect;
  set PC0DM010.PC0DMMS1 normal;
  set PC0DM010.PC0DMMS1 protect;
   /* SET PC0DM010.PC0DMMS2 NORMAL;*/
   /* SET PC0DM010.PC0DMMS2 PROTECT;*/
  set PC0DM010.PC0DMMS3 normal;
  set PC0DM010.PC0DMMS3 protect;

end // end PC0D151

// PROCESS THE VALID DATA
Function PC0D160()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end

   /* ------------------------------------------------------------*/
      /* CALL SUB-ROUTINE TO FIND WHICH ENVIRONMENT*/
      /* THE PROGRAM IS EXECUTING IN, DEVELOPMENT*/
      /* OR PRODUCTION.*/
   /* ------------------------------------------------------------*/
  if (XCTHREC.XCTH-THEATER-RUNTYPE == "PROD") /* if on production system*/
    PC0D161(); /* format production jcl*/
  else
    PC0D162(); /* format development jcl*/
  end
  move "A" to PC0DW01.PC0DWSEL[1] for all; /* re-init selection fields*/

end // end PC0D160

// PROCESS THE prod jcl
Function PC0D161()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end


   /* ------------------------------------------------------------*/
   /* If PF9 WAS pressed AND no messages:*/
   /* CREATE THE APPROPRIATE JCL*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PC0DW01.PC0DWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PC0DW01.PC0DWLIX > 0) /* Until end of table*/

    if (PC0DT01.TARTYPE[PC0DWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DW01.PC0DWJCL; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DT01.TARJCL[PC0DWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PC0DT01.TARTYPE[PC0DWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PC0DT01.TARJCL[PC0DWLIX] == "/*EOF") /* End of table*/

      PC0DW01.PC0DWLIX = 0; /* Indicate end of table*/

    else

      PC0DW01.PC0DWLIX = PC0DW01.PC0DWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PC0DS96(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PC0DM010.XXXPRCNM = "PC0D610"; /* Process name*/
    PC0DM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/
    PC0DM010.PC0DMMSG = " "; /* blank out screen message to submit*/
                                   /* job*/

  else

    PC0DM010.XXXPRCNM = "PC0D610"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    return;

  end

end // end PC0D161

// PROCESS THE TEST JCL
Function PC0D162()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end


   /* ------------------------------------------------------------*/
   /* If PF9 WAS pressed AND no messages:*/
   /* CREATE THE APPROPRIATE JCL*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PC0DW01.PC0DWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PC0DW01.PC0DWLIX > 0) /* Until end of table*/

    if (PC0DT11.TARTYPE[PC0DWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DW01.PC0DWJCL; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DT11.TARJCL[PC0DWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PC0DT11.TARTYPE[PC0DWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PC0DT11.TARJCL[PC0DWLIX] == "/*EOF") /* End of table*/

      PC0DW01.PC0DWLIX = 0; /* Indicate end of table*/

    else

      PC0DW01.PC0DWLIX = PC0DW01.PC0DWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PC0DS96(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PC0DM010.XXXPRCNM = "PC0D600"; /* Process name*/
    PC0DM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/
    PC0DM010.PC0DMMSG = " "; /* blank out pf9 submit message*/

  else

    PC0DM010.XXXPRCNM = "PC0D600"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    return;

  end

end // end PC0D162

// PROGRAM PROCESS CONTROL
Function PC0D200()

   /* ------------------------------------------------------------*/
   /* This is the main process used for this program. Process-*/
   /* ing always returns to the top of this process and falls to*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1)     NOT USED      (OBTAIN DATA TO DISPLAY).*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process the entered data.*/

   /* In all PF Key functions "ezertn" is used to redisplay the*/
   /* map when an error is found.*/

   /* "ezertn" is also used to redisplay the map when a major*/
   /* error occurs.*/
   /* ------------------------------------------------------------*/


  PC0D220(); /* Format and display the map*/

  PC0D230(); /* Check attention identifier*/

  PC0D240(); /* Reset fields to normal intensity*/

  PC0D250(); /* Verify the entered data*/

  PC0D260(); /* Process the entered data*/


end // end PC0D200

// DISPLAY SELECT MAP
Function PC0D220()


  if (converseVar.validationMsgNum == 0)

      /* NEXT SENTENCE*/

  else

    if (converseVar.validationMsgNum == 190
     && COMMAREA.CAMSG > " ") /* ===> Job info message*/
      converseLib.validationFailed(0); /* ===> reset Job submitted message*/
      PC0DM020.XXXPRCNM = "PC0D220"; /* PROCESS NAME*/
      PC0DM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info message*/
      COMMAREA.CAMSG = " "; /* ===> reset Job info message*/
    end

    set PC0DM020 alarm; /* Sound alarm*/

  end

  PC0DM020.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  converse PC0DM020 ;


end // end PC0D220

// CHECK ATTENTION IDENTIFIERS
Function PC0D230()

   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set PC0DM020 initial; /* Clear the map fields*/
    return; /* Exit to redisplay map*/
  end

  if (PC0DM020.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set PCWREC empty; /* Clear the system record*/
      COMMAREA.CATOAP = PC0DM020.CATOAP; /* To application*/
      COMMAREA.CAITEM = PC0DM020.CAITEM; /* To application*/

      XSPCS01(); /* Exit to another application*/

    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      PC0DM020.XXXPRCNM = "PC0D230"; /* Process name*/
    end

    set PC0DM020.CATOAP cursor, bold; /* Highlight*/
    PC0DM020.XXXPRCNM = "PC0D230"; /* Process name*/
    return; /* Exit to redisplay map*/
  end


  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD0G";
    XSPCS01();
  end

  if (converseVar.eventKey is pf21)
    COMMAREA.CATOAP = "PC0A";
    XSPCS01();

    PC0DM020.XXXPRCNM = "PC0D230"; /* Process name*/
    return; /* Redisplay map*/
  end

  if (converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    XSPCS01(); /* Exit to another application*/

    PC0DM020.XXXPRCNM = "PC0D230"; /* Process name*/
    return; /* Redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3  was pressed*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    COMMAREA.CATOAP = "PC0D"; /* Set to p.o. menu*/

    XSPCS01(); /* Exit to another application*/

    PC0DM020.XXXPRCNM = "PC0D230"; /* Process name*/
    return; /* Redisplay map*/
  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf9)  /* PF9 was not pressed*/

    PC0DM020.XXXPRCNM = "PC0D230"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    return; /* Exit to redisplay map*/
  end


end // end PC0D230

// RESET HIGHLIGHTED FIELDS
Function PC0D240()

   /* ------------------------------------------------------------*/
   /* RESET FIELD ATTRIBUTES TO NORMAL*/
   /* ------------------------------------------------------------*/

  set PC0DM020.CATOAP initialAttributes; /* Commarea TO application*/
  set PC0DM020.CAITEM initialAttributes; /* Commarea application data*/

end // end PC0D240

// PROCESS THE ENTERED DATA
Function PC0D250()

   /* ------------------------------------------------------------*/
   /* First check to see if a fast path was requested.*/
   /* ------------------------------------------------------------*/

  if (PC0DM020.CAITEM > " ") /* Application data was entered*/

    set PC0DM020.CAITEM cursor, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    PC0DM020.XXXPRCNM = "PC0D250"; /* Process name*/
    return;

  end


   /* ------------------------------------------------------------*/
   /* If Pf9 was pressed dont display the message*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf9)
    PC0DM020.VAGen_EZEMSG = "                            ";
    return;
  else
    PC0DM020.VAGen_EZEMSG = "PRESS PF9 TO SUBMIT THIS JOB";
    return;
  end

end // end PC0D250

// PROCESS THE VALID DATA
Function PC0D260()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end

   /* ------------------------------------------------------------*/
      /* CALL SUB-ROUTINE TO FIND WHICH ENVIRONMENT*/
      /* THE PROGRAM IS EXECUTING IN, DEVELOPMENT*/
      /* OR PRODUCTION.*/
   /* ------------------------------------------------------------*/
  if (XCTHREC.XCTH-THEATER-RUNTYPE == "PROD") /* if on production system*/
    PC0D261(); /* format production jcl*/
  else
    PC0D262(); /* format development jcl*/
  end

end // end PC0D260

// PROCESS THE prod jcl
Function PC0D261()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end


   /* ------------------------------------------------------------*/
   /* If PF9 WAS pressed AND no messages:*/
   /* CREATE THE APPROPRIATE JCL*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PC0DW01.PC0DWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PC0DW01.PC0DWLIX > 0) /* Until end of table*/

    if (PC0DT02.TARTYPE[PC0DWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DW01.PC0DWJCL; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DT02.TARJCL[PC0DWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PC0DT02.TARTYPE[PC0DWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PC0DT02.TARJCL[PC0DWLIX] == "/*EOF") /* End of table*/

      PC0DW01.PC0DWLIX = 0; /* Indicate end of table*/

    else

      PC0DW01.PC0DWLIX = PC0DW01.PC0DWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PC0DS96(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PC0DM020.XXXPRCNM = "PC0D261"; /* Process name*/
    PC0DM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/

  else

    PC0DM020.XXXPRCNM = "PC0D261"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    return;

  end

end // end PC0D261

// PROCESS THE prod jcl
Function PC0D262()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end


   /* ------------------------------------------------------------*/
   /* If PF9 WAS pressed AND no messages:*/
   /* CREATE THE APPROPRIATE JCL*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PC0DW01.PC0DWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PC0DW01.PC0DWLIX > 0) /* Until end of table*/

    if (PC0DT22.TARTYPE[PC0DWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DW01.PC0DWJCL; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DT22.TARJCL[PC0DWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PC0DT22.TARTYPE[PC0DWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PC0DT22.TARJCL[PC0DWLIX] == "/*EOF") /* End of table*/

      PC0DW01.PC0DWLIX = 0; /* Indicate end of table*/

    else

      PC0DW01.PC0DWLIX = PC0DW01.PC0DWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PC0DS96(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PC0DM020.XXXPRCNM = "PC0D262"; /* Process name*/
    PC0DM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/

  else

    PC0DM020.XXXPRCNM = "PC0D262"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    return;

  end

end // end PC0D262

// PROGRAM PROCESS CONTROL
Function PC0D300()

   /* ------------------------------------------------------------*/
   /* This is the main process used for this program. Process-*/
   /* ing always returns to the top of this process and falls to*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1)     NOT USED      (OBTAIN DATA TO DISPLAY).*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process the entered data.*/

   /* In all PF Key functions "ezertn" is used to redisplay the*/
   /* map when an error is found.*/

   /* "ezertn" is also used to redisplay the map when a major*/
   /* error occurs.*/
   /* ------------------------------------------------------------*/


  PC0D320(); /* Format and display the map*/

  PC0D330(); /* Check attention identifier*/

  PC0D340(); /* Reset fields to normal intensity*/

  PC0D350(); /* Verify the entered data*/

  PC0D360(); /* Process the entered data*/


end // end PC0D300

// DISPLAY SELECT MAP
Function PC0D320()


  if (converseVar.validationMsgNum == 0)

      /* NEXT SENTENCE*/

  else

    if (converseVar.validationMsgNum == 190
     && COMMAREA.CAMSG > " ") /* ===> Job info message*/
      converseLib.validationFailed(0); /* ===> reset Job submitted message*/
      PC0DM030.XXXPRCNM = "PC0D320"; /* PROCESS NAME*/
      PC0DM030.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info message*/
      COMMAREA.CAMSG = " "; /* ===> reset Job info message*/
    end

    set PC0DM030 alarm; /* Sound alarm*/

  end

  PC0DM030.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  converse PC0DM030 ;


end // end PC0D320

// CHECK ATTENTION IDENTIFIERS
Function PC0D330()

   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set PC0DM030 initial; /* Clear the map fields*/
    return; /* Exit to redisplay map*/
  end

  if (PC0DM030.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set PCWREC empty; /* Clear the system record*/
      COMMAREA.CATOAP = PC0DM030.CATOAP; /* To application*/
      COMMAREA.CAITEM = PC0DM030.CAITEM; /* To application*/

      XSPCS01(); /* Exit to another application*/

    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      PC0DM030.XXXPRCNM = "PC0D330"; /* Process name*/
    end

    set PC0DM030.CATOAP cursor, bold; /* Highlight*/
    PC0DM030.XXXPRCNM = "PC0D330"; /* Process name*/
    return; /* Exit to redisplay map*/
  end


  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD0G";
    XSPCS01();
  end

  if (converseVar.eventKey is pf21)
    COMMAREA.CATOAP = "PC0A";
    XSPCS01();

    PC0DM030.XXXPRCNM = "PC0D330"; /* Process name*/
    return; /* Redisplay map*/
  end

  if (converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    XSPCS01(); /* Exit to another application*/

    PC0DM030.XXXPRCNM = "PC0D330"; /* Process name*/
    return; /* Redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3  was pressed*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    COMMAREA.CATOAP = "PC0D"; /* Set to p.o. menu*/

    XSPCS01(); /* Exit to another application*/

    PC0DM030.XXXPRCNM = "PC0D330"; /* Process name*/
    return; /* Redisplay map*/
  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf9)  /* PF9 was not pressed*/

    PC0DM030.XXXPRCNM = "PC0D330"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    return; /* Exit to redisplay map*/
  end


end // end PC0D330

// RESET HIGHLIGHTED FIELDS
Function PC0D340()

   /* ------------------------------------------------------------*/
   /* RESET FIELD ATTRIBUTES TO NORMAL*/
   /* ------------------------------------------------------------*/

  set PC0DM030.CATOAP initialAttributes; /* Commarea TO application*/
  set PC0DM030.CAITEM initialAttributes; /* Commarea application data*/

end // end PC0D340

// PROCESS THE ENTERED DATA
Function PC0D350()

   /* ------------------------------------------------------------*/
   /* First check to see if a fast path was requested.*/
   /* ------------------------------------------------------------*/

  if (PC0DM030.CAITEM > " ") /* Application data was entered*/

    set PC0DM030.CAITEM cursor, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    PC0DM030.XXXPRCNM = "PC0D350"; /* Process name*/
    return;

  end


   /* ------------------------------------------------------------*/
   /* If Pf9 was pressed dont display the message*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf9)
    PC0DM030.VAGen_EZEMSG = "                            ";
    return;
  else
    PC0DM030.VAGen_EZEMSG = "PRESS PF9 TO SUBMIT THIS JOB";
    return;
  end

end // end PC0D350

// PROCESS THE VALID DATA
Function PC0D360()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end

   /* ------------------------------------------------------------*/
      /* CALL SUB-ROUTINE TO FIND WHICH ENVIRONMENT*/
      /* THE PROGRAM IS EXECUTING IN, DEVELOPMENT*/
      /* OR PRODUCTION.*/
   /* ------------------------------------------------------------*/
  if (XCTHREC.XCTH-THEATER-RUNTYPE == "PROD") /* if on production system*/
    PC0D361(); /* format production jcl*/
  else
    PC0D362(); /* format development jcl*/
  end

end // end PC0D360

// PROCESS THE prod jcl
Function PC0D361()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end


   /* ------------------------------------------------------------*/
   /* If PF9 WAS pressed AND no messages:*/
   /* CREATE THE APPROPRIATE JCL*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PC0DW01.PC0DWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PC0DW01.PC0DWLIX > 0) /* Until end of table*/

    if (PC0DT03.TARTYPE[PC0DWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DW01.PC0DWJCL; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DT03.TARJCL[PC0DWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PC0DT03.TARTYPE[PC0DWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PC0DT03.TARJCL[PC0DWLIX] == "/*EOF") /* End of table*/

      PC0DW01.PC0DWLIX = 0; /* Indicate end of table*/

    else

      PC0DW01.PC0DWLIX = PC0DW01.PC0DWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PC0DS96(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PC0DM030.XXXPRCNM = "PC0D361"; /* Process name*/
    PC0DM030.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/

  else

    PC0DM030.XXXPRCNM = "PC0D361"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    return;

  end

end // end PC0D361

// PROCESS THE prod jcl
Function PC0D362()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end


   /* ------------------------------------------------------------*/
   /* If PF9 WAS pressed AND no messages:*/
   /* CREATE THE APPROPRIATE JCL*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PC0DW01.PC0DWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PC0DW01.PC0DWLIX > 0) /* Until end of table*/

    if (PC0DT33.TARTYPE[PC0DWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DW01.PC0DWJCL; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DT33.TARJCL[PC0DWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PC0DT33.TARTYPE[PC0DWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PC0DT33.TARJCL[PC0DWLIX] == "/*EOF") /* End of table*/

      PC0DW01.PC0DWLIX = 0; /* Indicate end of table*/

    else

      PC0DW01.PC0DWLIX = PC0DW01.PC0DWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PC0DS96(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PC0DM030.XXXPRCNM = "PC0D362"; /* Process name*/
    PC0DM030.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/

  else

    PC0DM030.XXXPRCNM = "PC0D362"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    return;

  end

end // end PC0D362

// PROGRAM PROCESS CONTROL
Function PC0D700()

   /* ------------------------------------------------------------*/
   /* This is the main process used for this program. Process-*/
   /* ing always returns to the top of this process and falls to*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1)     NOT USED      (OBTAIN DATA TO DISPLAY).*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process the entered data.*/

   /* In all PF Key functions "ezertn" is used to redisplay the*/
   /* map when an error is found.*/

   /* "ezertn" is also used to redisplay the map when a major*/
   /* error occurs.*/
   /* ------------------------------------------------------------*/


  PC0D720(); /* Format and display the map*/

  PC0D730(); /* Check attention identifier*/

  PC0D740(); /* Reset fields to normal intensity*/

  PC0D750(); /* Verify the entered data*/

  PC0D760(); /* Process the entered data*/


end // end PC0D700

// DISPLAY SELECT MAP
Function PC0D720()


  if (converseVar.validationMsgNum == 0)

      /* NEXT SENTENCE*/

  else

    if (converseVar.validationMsgNum == 190
     && COMMAREA.CAMSG > " ") /* ===> Job info message*/
      converseLib.validationFailed(0); /* ===> reset Job submitted message*/
      PC0DM010.XXXPRCNM = "PC0D700"; /* PROCESS NAME*/
      PC0DM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info message*/
      COMMAREA.CAMSG = " "; /* ===> reset Job info message*/
    end

    set PC0DM010 alarm; /* Sound alarm*/

  end

  PC0DM010.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  converse PC0DM010 ;


end // end PC0D720

// CHECK ATTENTION IDENTIFIERS
Function PC0D730()

   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set PC0DM010 initial; /* Clear the map fields*/
    return; /* Exit to redisplay map*/
  end

  if (PC0DM010.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set PCWREC empty; /* Clear the system record*/
      COMMAREA.CATOAP = PC0DM010.CATOAP; /* To application*/
      COMMAREA.CAITEM = PC0DM010.CAITEM; /* To application*/

      XSPCS01(); /* Exit to another application*/

    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      PC0DM010.XXXPRCNM = "PC0D730"; /* Process name*/
    end

    set PC0DM010.CATOAP cursor, bold; /* Highlight*/
    PC0DM010.XXXPRCNM = "PC0D730"; /* Process name*/
    return; /* Exit to redisplay map*/
  end


  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD0G";
    XSPCS01();
  end

  if (converseVar.eventKey is pf21)
    COMMAREA.CATOAP = "PC0A";
    XSPCS01();

    PC0DM010.XXXPRCNM = "PC0D730"; /* Process name*/
    return; /* Redisplay map*/
  end

  if (converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    XSPCS01(); /* Exit to another application*/

    PC0DM010.XXXPRCNM = "PC0D730"; /* Process name*/
    return; /* Redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3  was pressed*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    COMMAREA.CATOAP = "PC0D"; /* Set to p.o. menu*/

    XSPCS01(); /* Exit to another application*/

    PC0DM010.XXXPRCNM = "PC0D730"; /* Process name*/
    return; /* Redisplay map*/
  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf9)  /* PF9 was not pressed*/

    PC0DM010.XXXPRCNM = "PC0D730"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa3)

      converseLib.clearScreen();
       /* Clear screen before display*/

    end

    return; /* Exit to redisplay map*/
  end


end // end PC0D730

// RESET HIGHLIGHTED FIELDS
Function PC0D740()

   /* ------------------------------------------------------------*/
   /* RESET FIELD ATTRIBUTES TO NORMAL*/
   /* ------------------------------------------------------------*/

  set PC0DM010.CATOAP initialAttributes; /* Commarea TO application*/
  set PC0DM010.CAITEM initialAttributes; /* Commarea application data*/

  set PC0DM010.PC0DMLCD initialAttributes; /* l/c open date*/

  set PC0DM010.PC0DMNYY initialAttributes; /* 'normal' country po year*/
  set PC0DM010.PC0DMNMM initialAttributes; /* 'normal' country po month*/
  set PC0DM010.PC0DMEYY initialAttributes; /* exception country po year*/
  set PC0DM010.PC0DMEMM initialAttributes; /* exception country po month*/

  set PC0DM010.PC0DMMS1 initialAttributes; /* exception country po month*/
  set PC0DM010.PC0DMMS2 initialAttributes; /* exception country po month*/
  set PC0DM010.PC0DMMS3 initialAttributes; /* exception country po month*/

end // end PC0D740

// PROCESS THE ENTERED DATA
Function PC0D750()

   /* ------------------------------------------------------------*/
   /* First check to see if a fast path was requested.*/
   /* ------------------------------------------------------------*/

  if (PC0DM010.CAITEM > " ") /* Application data was entered*/

    set PC0DM010.CAITEM cursor, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    PC0DM010.XXXPRCNM = "PC0D750"; /* Process name*/
    return;

  end


   /* ------------------------------------------------------------*/
    /* otherwise...  validate screen fields*/
   /* ------------------------------------------------------------*/

  set PC0DM010.PC0DMLCD cursor; /* Highlight*/
  PC0DW01.PC0DWERR = "N"; /* clear out edit error flag*/

   /* ------------------------------------------------------------*/
   /* validate l/c open date*/
   /* ------------------------------------------------------------*/

  set TA2REC empty;
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = 01;
  TA2REC.TA2GRCYM = PC0DM010.PC0DMLCD;
  PC0DS02(); /* edit date range*/

  if (TA2REC.TA2RTNCD != 0)
    set PC0DM010.PC0DMLCD cursor, bold;
    PC0DW01.PC0DWERR = "Y";
    PC0DM010.XXXPRCNM = "PC0D750"; /* Process name*/
    PC0DW01.PC0DWLCD = "000000";
    converseLib.validationFailed(38); /* Indicate missing or invalid*/
    return;
  else
    set PC0DM010.PC0DMLCD initialAttributes;
    PC0DW01.PC0DWLCD = PC0DM010.PC0DMLCD;
  end


   /* ------------------------------------------------------------*/
   /* If Pf9 was pressed dont display the message*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf9
   && PC0DW01.PC0DWERR == "N") /* no edit errors indicated*/
    return;
  end


  if (PC0DW01.PC0DWERR == "N") /* no edit errors indicated*/
    PC0D751(); /* show data at bottom of screen*/
    PC0DM010.VAGen_EZEMSG = "PRESS PF9 TO SUBMIT THIS JOB";
  else
    PC0DM010.VAGen_EZEMSG = "                            ";
  end

end // end PC0D750

// enlighten screen messages
Function PC0D751()

   /* ------------------------------------------------------------*/
   /* First find the normal and exception monthes that will*/
         /* have po(s) opened.*/
   /* ------------------------------------------------------------*/

  PC0DW01.PC0DWLCD = PC0DM010.PC0DMLCD;

  PC0DW01.PC0DWNMM = PC0DW01.PC0DWLCM;
  PC0DW01.PC0DWNMM = PC0DW01.PC0DWNMM + 2;
  PC0DW01.PC0DWEMM = PC0DW01.PC0DWNMM + 1;

  PC0DM010.PC0DMNYY = PC0DW01.PC0DWLYR;
  PC0DM010.PC0DMEYY = PC0DW01.PC0DWLYR;

  if (PC0DW01.PC0DWNMM == 13)
    PC0DW01.PC0DWNMM = 1; /* make normal month = jan*/
    PC0DW01.PC0DWEMM = 2; /* make except month = feb*/
    PC0DM010.PC0DMNYY = PC0DW01.PC0DWLYR + 1;
    PC0DM010.PC0DMEYY = PC0DW01.PC0DWLYR + 1;
  end

  if (PC0DW01.PC0DWNMM == 14)
    PC0DW01.PC0DWNMM = 2; /* make normal month = feb*/
    PC0DW01.PC0DWEMM = 3; /* make except month = mar*/
    PC0DM010.PC0DMNYY = PC0DW01.PC0DWLYR + 1;
    PC0DM010.PC0DMEYY = PC0DW01.PC0DWLYR + 1;
  end

  if (PC0DW01.PC0DWEMM == 13)
    PC0DW01.PC0DWEMM = 1; /* make except month = jan*/
    PC0DM010.PC0DMEYY = PC0DW01.PC0DWLYR + 1;
  end

  if (PC0DW01.PC0DWNMM in PC0DTMO.PC0DTMM)
    PC0DM010.PC0DMNMM = PC0DTMO.PC0DTAB[sysVar.arrayIndex];
  end

  if (PC0DW01.PC0DWEMM in PC0DTMO.PC0DTMM)
    PC0DM010.PC0DMEMM = PC0DTMO.PC0DTAB[sysVar.arrayIndex];
  end

   /* ------------------------------------------------------------*/
   /* Then set hidden screen fields to normal*/
   /* ------------------------------------------------------------*/

   /* SET PC0DM010.PC0DMNMM NORMAL;*/
   /* SET PC0DM010.PC0DMNMM PROTECT;*/
  set PC0DM010.PC0DMEMM normal;
  set PC0DM010.PC0DMEMM protect;
   /* SET PC0DM010.PC0DMNYY NORMAL;*/
   /* SET PC0DM010.PC0DMNYY PROTECT;*/
  set PC0DM010.PC0DMEYY normal;
  set PC0DM010.PC0DMEYY protect;
  set PC0DM010.PC0DMMS1 normal;
  set PC0DM010.PC0DMMS1 protect;
   /* SET PC0DM010.PC0DMMS2 NORMAL;*/
   /* SET PC0DM010.PC0DMMS2 PROTECT;*/
  set PC0DM010.PC0DMMS3 normal;
  set PC0DM010.PC0DMMS3 protect;

end // end PC0D751

// PROCESS THE VALID DATA
Function PC0D760()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end

   /* ------------------------------------------------------------*/
      /* CALL SUB-ROUTINE TO FIND WHICH ENVIRONMENT*/
      /* THE PROGRAM IS EXECUTING IN, DEVELOPMENT*/
      /* OR PRODUCTION.*/
   /* ------------------------------------------------------------*/
  if (XCTHREC.XCTH-THEATER-RUNTYPE == "PROD") /* if on production system*/
    PC0D761(); /* format production jcl*/
  else
    PC0D762(); /* format development jcl*/
  end
  move "A" to PC0DW01.PC0DWSEL[1] for all; /* re-init selection fields*/

end // end PC0D760

// PROCESS THE prod jcl
Function PC0D761()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end


   /* ------------------------------------------------------------*/
   /* If PF9 WAS pressed AND no messages:*/
   /* CREATE THE APPROPRIATE JCL*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PC0DW01.PC0DWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PC0DW01.PC0DWLIX > 0) /* Until end of table*/

    if (PC0DT04.TARTYPE[PC0DWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DW01.PC0DWJCL; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DT04.TARJCL[PC0DWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PC0DT04.TARTYPE[PC0DWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PC0DT04.TARJCL[PC0DWLIX] == "/*EOF") /* End of table*/

      PC0DW01.PC0DWLIX = 0; /* Indicate end of table*/

    else

      PC0DW01.PC0DWLIX = PC0DW01.PC0DWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PC0DS96(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PC0DM010.XXXPRCNM = "PC0D610"; /* Process name*/
    PC0DM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/
    PC0DM010.PC0DMMSG = " "; /* blank out screen message to submit*/
                                   /* job*/

  else

    PC0DM010.XXXPRCNM = "PC0D610"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    return;

  end

end // end PC0D761

// PROCESS THE TEST JCL
Function PC0D762()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end


   /* ------------------------------------------------------------*/
   /* If PF9 WAS pressed AND no messages:*/
   /* CREATE THE APPROPRIATE JCL*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PC0DW01.PC0DWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PC0DW01.PC0DWLIX > 0) /* Until end of table*/

    if (PC0DT44.TARTYPE[PC0DWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DW01.PC0DWJCL; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DT44.TARJCL[PC0DWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PC0DT44.TARTYPE[PC0DWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PC0DT44.TARJCL[PC0DWLIX] == "/*EOF") /* End of table*/

      PC0DW01.PC0DWLIX = 0; /* Indicate end of table*/

    else

      PC0DW01.PC0DWLIX = PC0DW01.PC0DWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PC0DS96(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PC0DM010.XXXPRCNM = "PC0D600"; /* Process name*/
    PC0DM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/
    PC0DM010.PC0DMMSG = " "; /* blank out pf9 submit message*/

  else

    PC0DM010.XXXPRCNM = "PC0D600"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    return;

  end

end // end PC0D762

Function PC0D800()


  PC0D820(); /* Format and display the map*/

  PC0D830(); /* Check attention identifier*/

  PC0D840(); /* Reset fields to normal intensity*/

  PC0D850(); /* Verify the entered data*/

  PC0D860(); /* Process the entered data*/


end // end PC0D800

Function PC0D820()

  if (converseVar.validationMsgNum == 0)

       /* NEXT SENTENCE*/

  else

    if (converseVar.validationMsgNum == 190
     && COMMAREA.CAMSG > " ") /* ===> Job info message*/
      converseLib.validationFailed(0); /* ===> reset Job submitted message*/
      PC0DM040.XXXPRCNM = "PC0D820"; /* PROCESS NAME*/
      PC0DM040.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info message*/
      COMMAREA.CAMSG = " "; /* ===> reset Job info message*/
    end

    set PC0DM040 alarm; /* Sound alarm*/

  end

  if (PC0DMSEL[5] > " ")
    PC0DM040.FTEQ1 = "FOOTWEAR";
    PC0DM040.FTEQ2 = "FOOTWEAR";
  else
    PC0DM040.FTEQ1 = "EQUIPMENT";
    PC0DM040.FTEQ2 = "EQUIPMENT";
  end
  PC0DM040.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  converse PC0DM040 ;
end // end PC0D820

// CHECK ATTENTION IDENTIFIERS
Function PC0D830()

   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set PC0DM040 initial; /* Clear the map fields*/
    return; /* Exit to redisplay map*/
  end

  if (PC0DM040.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set PCWREC empty; /* Clear the system record*/
      COMMAREA.CATOAP = PC0DM040.CATOAP; /* To application*/
      COMMAREA.CAITEM = PC0DM040.CAITEM; /* To application*/

      XSPCS01(); /* Exit to another application*/

    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      PC0DM040.XXXPRCNM = "PC0D830"; /* Process name*/
    end

    set PC0DM040.CATOAP cursor, bold; /* Highlight*/
    PC0DM020.XXXPRCNM = "PC0D830"; /* Process name*/
    return; /* Exit to redisplay map*/
  end


  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD0G";
    XSPCS01();
  end

  if (converseVar.eventKey is pf21)
    COMMAREA.CATOAP = "PC0A";
    XSPCS01();

    PC0DM020.XXXPRCNM = "PC0D830"; /* Process name*/
    return; /* Redisplay map*/
  end

  if (converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    XSPCS01(); /* Exit to another application*/

    PC0DM020.XXXPRCNM = "PC0D830"; /* Process name*/
    return; /* Redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3  was pressed*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    COMMAREA.CATOAP = "PC0D"; /* Set to p.o. menu*/

    XSPCS01(); /* Exit to another application*/

    PC0DM020.XXXPRCNM = "PC0D830"; /* Process name*/
    return; /* Redisplay map*/
  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf9)  /* PF9 was not pressed*/

    PC0DM020.XXXPRCNM = "PC0D830"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    return; /* Exit to redisplay map*/
  end


end // end PC0D830

// RESET HIGHLIGHTED FIELDS
Function PC0D840()

   /* ------------------------------------------------------------*/
   /* RESET FIELD ATTRIBUTES TO NORMAL*/
   /* ------------------------------------------------------------*/

  set PC0DM040.CATOAP initialAttributes; /* Commarea TO application*/
  set PC0DM040.CAITEM initialAttributes; /* Commarea application data*/

end // end PC0D840

// PROCESS THE ENTERED DATA
Function PC0D850()

   /* ------------------------------------------------------------*/
   /* First check to see if a fast path was requested.*/
   /* ------------------------------------------------------------*/

  if (PC0DM040.CAITEM > " ") /* Application data was entered*/

    set PC0DM040.CAITEM cursor, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    PC0DM040.XXXPRCNM = "PC0D850"; /* Process name*/
    return;

  end


   /* ------------------------------------------------------------*/
   /* If Pf9 was pressed dont display the message*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf9)
    PC0DM020.VAGen_EZEMSG = "                            ";
    return;
  else
    PC0DM040.VAGen_EZEMSG = "PRESS PF9 TO SUBMIT THIS JOB";
    return;
  end

end // end PC0D850

// PROCESS THE VALID DATA
Function PC0D860()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end

   /* ------------------------------------------------------------*/
      /* CALL SUB-ROUTINE TO FIND WHICH ENVIRONMENT*/
      /* THE PROGRAM IS EXECUTING IN, DEVELOPMENT*/
      /* OR PRODUCTION.*/
   /* ------------------------------------------------------------*/
  if (XCTHREC.XCTH-THEATER-RUNTYPE == "PROD") /* if on production system*/
    PC0D861(); /* format production jcl*/
  else
    PC0D862(); /* format development jcl*/
  end

end // end PC0D860

// PROCESS THE prod jcl
Function PC0D861()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end


   /* ------------------------------------------------------------*/
   /* If PF9 WAS pressed AND no messages:*/
   /* CREATE THE APPROPRIATE JCL*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PC0DW01.PC0DWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PC0DW01.PC0DWLIX > 0) /* Until end of table*/

    if (PC0DT05.TARTYPE[PC0DWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      if (PC0DM001.PC0DMSEL[5] > " ")
        TA6REC.TARJCL[TA6INDEX] = "F"; /* JCL*/
      else
        TA6REC.TARJCL[TA6INDEX] = "E"; /* JCL*/
      end


      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DT05.TARJCL[PC0DWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PC0DT05.TARTYPE[PC0DWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PC0DT05.TARJCL[PC0DWLIX] == "/*EOF") /* End of table*/

      PC0DW01.PC0DWLIX = 0; /* Indicate end of table*/

    else

      PC0DW01.PC0DWLIX = PC0DW01.PC0DWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PC0DS96(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PC0DM040.XXXPRCNM = "PC0D861"; /* Process name*/
    PC0DM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/

  else

    PC0DM040.XXXPRCNM = "PC0D861"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    return;

  end

end // end PC0D861

// PROCESS THE prod jcl
Function PC0D862()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PC0DW01.PC0DWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end


   /* ------------------------------------------------------------*/
   /* If PF9 WAS pressed AND no messages:*/
   /* CREATE THE APPROPRIATE JCL*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PC0DW01.PC0DWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PC0DW01.PC0DWLIX > 0) /* Until end of table*/

    if (PC0DT55.TARTYPE[PC0DWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      if (PC0DM001.PC0DMSEL[5] > " ")
        TA6REC.TARJCL[TA6INDEX] = "F"; /* JCL*/
      else
        TA6REC.TARJCL[TA6INDEX] = "E"; /* JCL*/
      end
      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PC0DT55.TARJCL[PC0DWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PC0DT55.TARTYPE[PC0DWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PC0DT55.TARJCL[PC0DWLIX] == "/*EOF") /* End of table*/

      PC0DW01.PC0DWLIX = 0; /* Indicate end of table*/

    else

      PC0DW01.PC0DWLIX = PC0DW01.PC0DWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PC0DS96(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PC0DM040.XXXPRCNM = "PC0D862"; /* Process name*/
    PC0DM040.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/

  else

    PC0DM040.XXXPRCNM = "PC0D862"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    return;

  end

end // end PC0D862

// date validation yymm
Function PC0DS02()

   /* ------------------------------------------------------------*/
   /* validate/format from YYMM to CCYYMM.*/
   /* ------------------------------------------------------------*/

  TA2REC.TA2DTOPT = "GREGGREG"; /* option*/

  TA2REC.TA2GRGDD = 01; /* dd to be validated*/

  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* date routine*/

   /* ------------------------------------------------------------*/
   /* Indicate error if the date doesn't pass the verification.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call successful*/
   || TA2REC.TA2RTNCD >= 888)        /* and subroutine completed*/

    TAEREC.TAEDESC1 = sysVar.errorCode;
    TAEREC.TAEDESC2 = TA2REC.TA2GROUP;

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "PC0DS02 DATE EDIT YYMM";

    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

    PC0DM010.XXXPRCNM = "PC0DS02"; /* Module identification*/
    converseLib.validationFailed(10); /* System error occurred*/

    exit stack; /* exit to display map*/

  end


end // end PC0DS02

// SUBMIT JCL TO INTERNAL READER
Function PC0DS96()

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "Y"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* CICS job completed message*/

  TA6-MAX-COND-CODE = 02; /* 00 and 02 are normal EOJ codes*/
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end

   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    converseLib.validationFailed(190); /* Return message*/
    PC0DM010.XXXPRCNM = "PC0DS96"; /* Process name*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/

    converseLib.validationFailed(86); /* Indicate user cancelled*/
    PC0DM010.XXXPRCNM = "PC0DS96"; /* Process name*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    PC0DM010.XXXPRCNM = "PC0DS96"; /* Process name*/

  end

  return; /* Exit to display map*/


end // end PC0DS96

//*** RECORD=PC0DW01 ****
// ************************************************************
// *
// *     WORKING STORAGE FOR PC0D
// *
// *
// *   DATE             USERID        COMMENTS
// * ________         __________     ________________________
// * 09/20/89          gwitzi         new record
// *
// ************************************************************
// ***********************
Record PC0DW01 type basicRecord
  10 PC0DWLIX PC0DWLIX ; 
  10 PC0DWSEL PC0DWSEL [6] ; 
  10 PC0DWERR PC0DWERR ; 
  10 PC0DWNMM PC0DWNMM ; 
  10 PC0DWEMM PC0DWEMM ; 
  10 PC0DWCDT PC0DWCDT ; 
    15 PC0DWCCC PC0DWCCC ; 
    15 PC0DWYYY PC0DWYYY ; 
    15 PC0DWMMM PC0DWMMM ; 
    15 PC0DWDDD PC0DWDDD ; 
  10 PC0DWJCL PC0DWJCL ; 
    15 PC0DWLCD PC0DWLCD ; 
      20 PC0DWLYR PC0DWLYR ; 
        25 PC0DWLCC PC0DWLCC ; 
        25 PC0DWLCY PC0DWLCY ; 
      20 PC0DWLCM PC0DWLCM ; 
    15 * char(74) ; 
  10 PC0DWCNT PC0DWCNT ; 
end // end PC0DW01

//      centry
DataItem PC0DWCCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date
DataItem PC0DWCDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PC0DWCNT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//      day
DataItem PC0DWDDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// except month
DataItem PC0DWEMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// edit error flag
DataItem PC0DWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PC0DWJCL char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// l/c open cc
DataItem PC0DWLCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// l/c open date
DataItem PC0DWLCD num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// l/c open mm
DataItem PC0DWLCM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// l/c open yy
DataItem PC0DWLCY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line index
DataItem PC0DWLIX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// l/c open year
DataItem PC0DWLYR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//      month
DataItem PC0DWMMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// normal month
DataItem PC0DWNMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line index
DataItem PC0DWSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//      year
DataItem PC0DWYYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

