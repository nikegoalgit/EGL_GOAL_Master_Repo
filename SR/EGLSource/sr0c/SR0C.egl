package sr0c;
import az.common.*;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import fy.common.*;
import in1.common.*;
import iv.common.*;
import ku.common.*;
import ob.common.*;
import op.common.*;
import os.common.*;
import pc.common.*;
import pk.common.*;
import pw.common.*;
import sm.common.*;
import sp.common.*;
import sr.common.*;
import sw.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=SR0C ****
// This application allows a user to inquire on and maintain a
// row in a DSHIP.VSRORD01 table.
// 
// The screen is displayed for the user to enter the key to the
// table row for which data is to be displayed.
// 
// The entered data is verified to be complete and correct.
// The requested table row is selected and the data is
// formatted and displayed to the user.
// 
// If the user has sufficient security to change the data, the
// modifiable fields remain unprotected.  Otherwise, they are
// protected from modification by the user.
// 
// If any data is modified, it is verified and, if complete and
// correct, the table row is updated with the changed data.
// The screen is redisplayed to the user, indicating that the
// update was completed.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      08/17/95  HKEMPE  New application.
// SR#0     11/01/95  HKEMPE  Re-read the order after stop ship
//                            processing.
// SR#0     04/25/96  HCOOK   Re-read the order table and
//                            display the new data after the
//                            user overtypes the order number.
// ASN      10/22/97  DKESLE  Added returning to SR0T
//                            Protect fields when MOVERS whse
//                            and ASN not sent.
// ASN      12/15/97  CBRINE  Added separate temp storage rec
//                            from SR0T (SR0CW04).
// ASN      02/26/98  dkesle  show expected weight on screen
//                            when movers whse and pick-stat=Y
// ASN      03/12/98  CBRINE  Added new table DSHIP.VSPBOL01
// ASN      04/06/98  dkesle  Added scrolling thru multiple
//                            schedules if from sr0t
// ASN      05/08/98  dkesle  removed sr0cw-hold-bol-sub
//                            field
// ASN      05/18/98  dkesle  if coming from sr0t, only scroll
//                            through passed bol
// maint    06/11/98  AJALiS  For direct shipments bypass AZ
//                            database, in SR0C-19000 and
//                            in SR0C-50000.
//                            SRWREC.XXXMSGNO initialized in
//                            SR0C-10000
// RETROFT  08/04/98  marbuc  For DCMS orders stop shipment
//                            can not be changed (SR0CM001)
// GDS4NSC  04/13/00  HKEMPE  Created a new process/statement
//                            that provides the option to
//                            verify/retrieve order data
//                            from VORHDR01 or from VOPPKH01.
//                            All facilities converting to SAP
//                            need to access VOPPKH01 since the
//                            orders won't be stored any longer
//                            on VORHDR01.
// DLVRUSA  03/20/01  RNUNNA  Modified to exclude Display and/
//                            or entry of invoice special
//                            instruction.
//                            Modified SR0CS-SELECT-ORDER to
//                            refer to XSPKS-SELECT-ORDER
//                            instead of XX0XS-SELECT-ORDER.
//                    sbhara  Modified to add the prepaid flag
//                            Mainatainence feature
// WMS-SUPP 11/27/01  VDASAR  Modified to add the prepaid flag
//                            Mainatainence feature to be upda
//                            -ted in VOPPK04 also as it is do
//                            -ing for SRORD01 in the above
//                            US GO-live change.
// TT15738  12/28/01  RBALAM  Added IF condition to not to
//                            look VOPPKH04 when update
//                            something for COLEHAAN orders.
// *********************
Program SR0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SR00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AZFREC AZFREC; // record
  COMMAREA COMMAREA ; // record
  OP1REC OP1REC; // record
  OPHREC OPHREC; // record
  PWPREC PWPREC; // record
  SQLCA SQLCA; // record
  SR0CW00 SR0CW00; // record
  SR0CW01 SR0CW01; // record
  SR0CW02 SR0CW02; // record
  SR0CW04 SR0CW04; // record
  SR0CW05 SR0CW05; // record
  SR1REC SR1REC; // record
  SR2REC SR2REC; // record
  SRFREC SRFREC; // record
  SRWREC SRWREC; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TF1REC TF1REC; // record
  VAZCIT01 VAZCIT01; // record
  VAZCTN01 VAZCTN01; // record
  VAZHDR01 VAZHDR01; // record
  VAZORD01 VAZORD01; // record
  VSPBOL01 VSPBOL01; // record
  XPCREC XPCREC; // record
  XPSRMW01 XPSRMW01; // record
  XX0XW01 XX0XW01; // record
  XX0XW03 XX0XW03; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XWHTBL {deleteAfterUse = yes}; // table
  use SR0CM.SR0CM001,  // forms
      SR0CM.XXSRM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPSR-00000: XPSR-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set SR0CM001 initial; /* M001 input/output*/
    set SR0CW00 empty; /* Working storage*/
    set SR0CW01 empty; /* M001 display storage*/
    set SR0CW02 empty; /* Temporary storage record from SR0R*/
    set SR0CW04 empty; /* Temporary storage record from SR0T*/
    set OP1REC empty; /* Order header table row*/
    set SRFREC empty; /* SR1170 passing record*/
    set SR1REC empty; /* ShipRec batch/schedule table row*/
    set SR2REC empty; /* ShipRec order table row*/
    set TF1REC empty; /* Picking carrier table row*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    SR0CW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    SR0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    SR0CW00.SR0CW-MAP-KEY-CHNG = "N"; /* Map key changed flag*/

     /* ------------------------------------------------------------*/
     /* Initialize any fields passed from another application.*/
     /* ------------------------------------------------------------*/

    if (SRWREC.SRWXWHCD != " ")
      SR0CW01.XWHCD = SRWREC.SRWXWHCD; /* Warehouse code*/
      SR0CM001.XWHCD = SRWREC.SRWXWHCD; /* Warehouse code*/
      if (SR0CM001.XWHCD == "42") /* If Canada warehouse*/
        SR0CW01.SR0CW-UNIT-OF-MEASURE = "M"; /* Use metric system*/
        SR0CM001.SR0CM-UNIT-OF-MEASURE = "M"; /* Use metric system*/
      else
        SR0CW01.SR0CW-UNIT-OF-MEASURE = "U";
        SR0CM001.SR0CM-UNIT-OF-MEASURE = "U";
      end
      if (SR0CM001.XWHCD in XWHTBL.XWHCD)
        SR0CW00.XWTCD = XWHTBL.XWTCD[sysVar.arrayIndex];
      end
      if (SR0CM001.XWHCD in XWHTBL.XWHCD)
        SR0CW00.XWHSTKLF = XWHTBL.XWHSTKLF[sysVar.arrayIndex];
      end
      if (SRWREC.SRWCUOID != 0) /* Passed parameters*/
        SR0CM001.PK1PKSCH = SRWREC.SRWPKID; /* Schedule nbr*/
        SR0CM001.OP1CUOID = SRWREC.SRWCUOID; /* Cust ord id*/
        SR0CM001.OP1NORID = SRWREC.SRWNORID; /* Nike ord id*/
        SR0CW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
      end
    end

    if ((COMMAREA.CAFROMAP == "SR0R" /* If from SR0R*/
     || COMMAREA.CAFROMAP == "SR0T") /* If from SR0T*/
     && SRWREC.SRWRETFL == "Y")      /* and must return to SR0R/SR0T*/

      SR0CW00.SR0CW-ALL-ORDERS-FL = SRWREC.SRWMISCF[1];

      if (SRWREC.PK1BLLAD[2] == 1) /* If only one order*/
        SR0CW00.SR0CW-ALL-ORDERS-FL = "Y";
      end

      if (COMMAREA.CAFROMAP == "SR0R") /* If from SR0R*/
        TA5REC.TA5APPID = "SRFR"; /* Temp storage id for SR0R*/
        SR0CW02.XXX-TEMP-STG-LNTH = 304; /* Temporary storage length*/
      else
        TA5REC.TA5APPID = "STF2"; /* Temp storage id for SR0T*/
        SR0CW04.XXX-TEMP-STG-LNTH = 334; /* Temporary storage length*/
      end

      SR0CW00.XXX-HI-PAGE-NBR = SRWREC.SR2BLLSU[2]; /* Maximum page nbr*/

      SR0CW00.XXX-INX-LMT-NBR = 10;

      SR0CW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    end

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto SR0C-00000; /* Converse the main process*/


    SR0C-00000: SR0C-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto SR0C-00000; /* Converse the main process*/


  end // end main
end // end SR0C

// Main process to display a map
Function SR0C-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  SR0C-10000(); /* Obtain the data to display*/

  SR0C-20000(); /* Format and display the map*/

  SR0C-30000(); /* Check attention identifier*/

  SR0C-40000(); /* Verify the entered data*/

  SR0C-50000(); /* Process valid input request*/


end // end SR0C-00000

// Obtain the data to display
Function SR0C-10000()

   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if ((COMMAREA.CAFROMAP == "SR0R" /* If from SR0R*/
   || COMMAREA.CAFROMAP == "SR0T") /* or from SR0T*/
   && SRWREC.SRWRETFL == "Y"       /* and must return to SR0R/SR0T*/
   && converseVar.validationMsgNum == 0) /* and no error*/

    SR0CW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

  else

    if (SR0CW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
     || converseVar.validationMsgNum != 0) /* or an error was found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Set up proper key fields when request is from SR0R.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAFROMAP == "SR0R" /* If from SR0R*/
   && SRWREC.SRWRETFL == "Y"      /* and must return to SR0R/SR0T*/
   && SR0CW00.SR0CW-MAP-KEY-CHNG == "N")
                                 /* Key was not chngd on map*/

    SR0CW00.SR0CW-GOOD-ORDER-FL = "N";

    while (SR0CW00.SR0CW-GOOD-ORDER-FL == "N")

      SR0CW00.XXX-INX-FLD-NBR = SR0CW00.XXX-INX-FLD-NBR + 1;

      if (SR0CW00.XXX-INX-FLD-NBR > SR0CW00.XXX-INX-LMT-NBR
       || SR0CW02.OP1CUOID[XXX-INX-FLD-NBR] == 0)

        SR0CW00.XXX-CURR-PAGE-NBR = SR0CW00.XXX-CURR-PAGE-NBR + 1;

        if (SR0CW00.XXX-CURR-PAGE-NBR > SR0CW00.XXX-HI-PAGE-NBR)
          COMMAREA.CAUSERA = SRWREC.CAUSERA; /* User area*/
          COMMAREA.CATOAP = COMMAREA.CAFROMAP; /* TO application*/
          XSEXIT(); /* Exit to another application*/
        end

        set SR0CW02 empty;

        SR0CW02.XXX-TEMP-STG-LNTH = SR0CW00.XXX-TEMP-STG-LNTH;
        TA5REC.TA5TSQIX = SR0CW00.XXX-CURR-PAGE-NBR;

        SR0CS-TA0050-R(); /* Read temporary storage*/

        XXX-INX-FLD-NBR = 1;

      end

      if (SR0CW00.SR0CW-ALL-ORDERS-FL == "Y"
       || SR0CW02.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "S") /* If selected*/

        SR0CW00.SR0CW-GOOD-ORDER-FL = "Y";

        SR0CM001.XWHCD = SRWREC.SRWXWHCD;
        SR0CM001.PK1PKSCH = SR0CW02.PK1PKSCH[XXX-INX-FLD-NBR];
        SR0CM001.OP1CUOID = SR0CW02.OP1CUOID[XXX-INX-FLD-NBR];
        SR0CM001.OP1NORID = SR0CW02.OP1NORID[XXX-INX-FLD-NBR];
        SR0C-11000(); /* get correct sr0rd row*/
        SR0CM001.SR0CM-UNIT-OF-MEASURE = SRWREC.SRWMISCF[2];

      end

    end

  end

   /* ------------------------------------------------------------*/
   /* Set up proper key fields when request is from SR0T.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAFROMAP == "SR0T" /* If from SR0T*/
   && SRWREC.SRWRETFL == "Y"      /* and must return to SR0R/SR0T*/
   && SR0CW00.SR0CW-MAP-KEY-CHNG == "N")
                                 /* Key was not chngd on map*/

    if (SR0CW00.SR0CW-END-OF-SCHED-FL == "N")
      SR0CW-VSRORD01-ROW-INDEX = SR0CW-VSRORD01-ROW-INDEX + 1;
      if (SR0CW-VSRORD01-ROW[SR0CW-VSRORD01-ROW-INDEX] == " ")
        SR0CW00.SR0CW-END-OF-SCHED-FL = "Y";
      else
        SR2REC.SR2GRP = SR0CW05.SR0CW-VSRORD01-ROW[SR0CW-VSRORD01-ROW-INDEX];
        SR0CS-IO0800-S(); /* re-select srord row because row might*/
                                   /* have*/
                       /* been updated by this program since the*/
                       /* time that this program tabled the rows*/
        SR0CM001.PK1PKSCH = SR2REC.PK1PKSCH;
        SR0CW00.XXX-MAP-FMAT-FL = "Y";
      end
    end

    if (SR0CW00.SR0CW-END-OF-SCHED-FL != "N")
      SR0CW00.SR0CW-GOOD-ORDER-FL = "N";

      while (SR0CW00.SR0CW-GOOD-ORDER-FL == "N")

        SR0CW00.XXX-INX-FLD-NBR = SR0CW00.XXX-INX-FLD-NBR + 1;

        if (SR0CW00.XXX-INX-FLD-NBR > SR0CW00.XXX-INX-LMT-NBR
         || SR0CW04.OP1CUOID[XXX-INX-FLD-NBR] == 0)

          SR0CW00.XXX-CURR-PAGE-NBR = SR0CW00.XXX-CURR-PAGE-NBR + 1;

          if (SR0CW00.XXX-CURR-PAGE-NBR > SR0CW00.XXX-HI-PAGE-NBR)
            COMMAREA.CAUSERA = SRWREC.CAUSERA; /* User area*/
            COMMAREA.CATOAP = COMMAREA.CAFROMAP; /* TO application*/
            XSEXIT(); /* Exit to another application*/
          end

          set SR0CW04 empty;

          SR0CW04.XXX-TEMP-STG-LNTH = SR0CW00.XXX-TEMP-STG-LNTH;
          TA5REC.TA5TSQIX = SR0CW00.XXX-CURR-PAGE-NBR;

          SR0CS-TA0050-T-R(); /* Read temporary storage*/

          XXX-INX-FLD-NBR = 1;

        end

        if (SR0CW00.SR0CW-ALL-ORDERS-FL == "Y"
         || SR0CW04.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "S") /* If selected*/

          SR0CW00.SR0CW-GOOD-ORDER-FL = "Y";

          SR0CM001.XWHCD = SRWREC.SRWXWHCD;
          if (SR0CW04.SR0CW-MULTI-SCHED-FL[XXX-INX-FLD-NBR] == "N")
            SR0CM001.PK1PKSCH = SR0CW04.PK1PKSCH[XXX-INX-FLD-NBR];
          else
            SR0CM001.PK1PKSCH = -1;
          end
          SR0CM001.OP1CUOID = SR0CW04.OP1CUOID[XXX-INX-FLD-NBR];
          SR0CM001.OP1NORID = SR0CW04.OP1NORID[XXX-INX-FLD-NBR];
          SR0C-11000(); /* get correct srord row*/
          SR0CM001.SR0CM-UNIT-OF-MEASURE = SRWREC.SRWMISCF[2];

        end

      end

    end

  end

   /* ------------------------------------------------------------*/
   /* Initialize SRWREC.XXXMSGNO*/
   /* ------------------------------------------------------------*/
  SRWREC.XXXMSGNO = 0;

   /* ------------------------------------------------------------*/
   /* Set up proper key fields when request is not from sr0r*/
   /* or from sr0t*/
   /* ------------------------------------------------------------*/

  if ((COMMAREA.CAFROMAP != "SR0R" && COMMAREA.CAFROMAP != "SR0T")
   || SRWREC.SRWRETFL != "Y" /* and must return to SR0R/SR0T*/
   || SR0CW00.SR0CW-MAP-KEY-CHNG != "N")
    if (SR0CW00.SR0CW-MAP-KEY-CHNG == "Y")
      SR0CM001.PK1PKSCH = 0;
      if (SR0CM001.XWHCD == "42") /* If Canada warehouse*/
        SR0CM001.SR0CM-UNIT-OF-MEASURE = "M"; /* Use metric system*/
      else
        SR0CM001.SR0CM-UNIT-OF-MEASURE = "U";
      end
    end
    SR0C-11000(); /* get correct srord row*/
  end

   /* ------------------------------------------------------------*/
   /* Save the key data in display storage.*/
   /* ------------------------------------------------------------*/

  set SR0CW01 empty;
  SR0CW01.XWHCD = SR0CM001.XWHCD;
  SR0CW01.OP1CUOID = SR0CM001.OP1CUOID;
  SR0CW01.OP1NORID = SR0CM001.OP1NORID;
  SR0CW01.SR0CW-UNIT-OF-MEASURE = SR0CM001.SR0CM-UNIT-OF-MEASURE;

  if (converseVar.validationMsgNum == 0)
    SR0CW01.PK1PKSCH = SR0CM001.PK1PKSCH;
  else
    return;
  end

   /* ------------------------------------------------------------*/
   /* sr2rec (dship.vsrord01) row has been picked*/
   /* ------------------------------------------------------------*/


   /* ------------------------------------------------------------*/
   /* Verify if the order is good, not deallocated/balanced/released.*/
   /* ------------------------------------------------------------*/

  if (SR2REC.SR2DALFL == "Y") /* If order is deallocated*/
    SRWREC.XXXERRID = "10000"; /* Message location*/
    converseLib.validationFailed(65); /* Order deallocated - cannot change*/
    set SR0CM001.OP1CUOID cursor, bold; /* Highlight*/
    set SR0CM001.OP1NORID bold;
  else

    set SR1REC empty;

    SR1REC.XWHCD = SR2REC.XWHCD; /* Warehouse code*/
    SR1REC.PK1PKSCH = SR2REC.PK1PKSCH; /* Schedule nbr*/

    SR0CS-IO0790-S(); /* Select batch/schedule table*/

    if (SQLCA.VAGen_SQLCODE == 0) /* If found*/

      if (SR1REC.SR1BTST == "B") /* If schedule balanced*/
        SRWREC.XXXERRID = "10000"; /* Message location*/
        converseLib.validationFailed(39); /* Batch header status is balanced*/
        set SR0CM001.PK1PKSCH bold; /* Highlight*/
      else

        if (SR1REC.SR1BTST == "R") /* If schedule released*/
          SRWREC.XXXERRID = "10000"; /* Message location*/
          converseLib.validationFailed(40); /* Batch header status is released*/
          set SR0CM001.PK1PKSCH bold; /* Highlight*/
        end

      end

    else
      SRWREC.XXXERRID = "10000"; /* Message location*/
      converseLib.validationFailed(38); /* Batch header not found*/
      set SR0CM001.PK1PKSCH bold; /* Highlight*/
    end

  end

  if (converseVar.validationMsgNum != 0) /* If error*/
    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* Verify BOL changes when BOL is passed.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAFROMAP == "SR0R" /* If from SR0R*/
   && SRWREC.SRWRETFL == "Y"      /* and must return to SR0R*/
   && SR0CW00.SR0CW-MAP-KEY-CHNG == "N")
                                  /* Key was not chngd on map*/

    if (SR2REC.PK1BLLAD != SRWREC.PK1BLLAD[1]
     || SR2REC.SR2BLLSU != SRWREC.SR2BLLSU[1]) /* If BOL changed*/

      SRWREC.XXXERRID = "10000"; /* Message location*/
      converseLib.validationFailed(185); /* BOL has changed*/
      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Check for Direct Ship Schedule*/
   /* ------------------------------------------------------------*/

  SR0C-12000();

  if (SR0CM001.XWHCD != " ")
    if (SR0CM001.XWHCD in XWHTBL.XWHCD)
      SR0CW00.XWTCD = XWHTBL.XWTCD[sysVar.arrayIndex];
    end
    if (SR0CM001.XWHCD in XWHTBL.XWHCD)
      SR0CW00.XWHSTKLF = XWHTBL.XWHSTKLF[sysVar.arrayIndex];
    end
  end

   /* ------------------------------------------------------------*/
   /* Save the data from dship.vsrord01 row in display storage.*/
   /* ------------------------------------------------------------*/

  if (SR2REC.SR1SHPDT == 0)
    SR0CW01.SR1SHPDT = SR1REC.SR1SHPDT; /* Shipped date*/
  else
    SR0CW01.SR1SHPDT = SR2REC.SR1SHPDT; /* Shipped date*/
  end

  SR0CW01.PK1BLLAD = SR2REC.PK1BLLAD; /* Bill of lading*/
  SR0CW01.SR2BLLSU = SR2REC.SR2BLLSU; /* BOL sub nbr*/

  SR0CW01.SR2WOGNB = SR2REC.SR2WOGNB; /* WOG nbr*/
  SR0CW01.OP1CUPO = SR2REC.OP1CUPO; /* Customer PO nbr*/

  SR0CW01.TF1CARCD = SR2REC.TF1CARCD; /* Carrier code*/

  if (SR2REC.TF1CARNM == " ") /* If no carrier name*/

    set TF1REC empty;

    TF1REC.TF1CARCD = SR2REC.TF1CARCD;

    SR0CS-IO0860-S(); /* Select carrier table;*/

    SR0CW01.TF1CARNM = TF1REC.TF1CARNM; /* Carrier name*/

  end

  SR0CW01.SR2SHPCG = SR2REC.SR2SHPCG; /* Shipping charges*/
  SR0CW01.TF2PRONO = SR2REC.TF2PRONO; /* Pro nbr*/

  SR0CW01.PK1NBCTN = SR2REC.PK1NBCTN; /* Nbr of cartons*/
  SR0CW01.SR2TNBCT = SR2REC.SR2TNBCT; /* BOL cartons*/
  SR0CW01.PK1WT = SR2REC.PK1WT; /* Weight*/

  SR0CW01.SR2TOTCF = SR2REC.SR2TOTCF; /* Volume*/

  SR0CW01.SR-STOP-ORD-SHP-FL = SR2REC.SR-STOP-ORD-SHP-FL;
                                  /* Stopped ship flag*/
  SR0CW01.SR2QTYSH = SR2REC.SR2QTYSH; /* Units shipped*/

  /* dlvrusa start*/
  /* MOVE SR2REC.SR2SPINI TO SR0CW01.SR2SPINI;/* Special invoice instruction*/
  /* dlvrusa end*/

  /* DLVRUSA START SBHARA 04/12/01*/
  SR0CW01.OP1FTIND = SR2REC.OP1FTIND; /* PREPAID FLAG*/
  /* DLVRUSA START SBHARA 04/12/01*/

   /* ------------------------------------------------------------*/
   /* If this is a MOVERS warehouse*/
   /* If multiple BOL's, Process pop-window*/
   /* Get Shipping Charges, Carton count and Weight from AZ tables*/
   /* ------------------------------------------------------------*/

  if (SR0CW00.XWTCD == "01" && SR0CW00.XWHSTKLF == "Y")
    if (SR0CW01.SR2BLLSU == 99) /* multiple BOL's*/
      if (COMMAREA.CAFROMAP == "SR0T")
        SR0CW01.SR2BLLSU = SRWREC.SR2BLLSU[1];
      else
        SR0C-18000(); /* bring up pop-up window*/
        SR0CW01.SR2BLLSU = XPSRMW01.XPSR-SELECTED-SUB-NBR; /* bill of lading sub nbr*/
      end
      SR0CS-180(); /* calc pk1wt*/
    end
    SR0C-19000(); /* set switches to allow/not allow*/
                                   /* updating*/
  end


   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  SR0CW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end SR0C-10000

// Obtain srord row
Function SR0C-11000()

   /* ------------------------------------------------------------*/
   /* Set flags*/
   /* ------------------------------------------------------------*/

  SR0CW00.SR0CW-ALLOW-STOP-SHP-UPD-FL = "N";
  SR0CW00.SR0CW-ALLOW-SHIP-FIELDS-UPD-FL = "N";
  SR0CW00.SR0CW-DISP-ASN-NOT-SENT-MSG-FL = "Y";
  SR0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Select the row to display from the dship.vsrord01 table.*/
   /* ------------------------------------------------------------*/

  set SR2REC empty; /* Clear row storage area*/

  SR2REC.XWHCD = SR0CM001.XWHCD; /* Warehouse code*/
  SR2REC.OP1CUOID = SR0CM001.OP1CUOID; /* Cust ord id*/
  SR2REC.OP1NORID = SR0CM001.OP1NORID; /* Nike ord id*/

  if (SR0CM001.PK1PKSCH > 0 /* 2nd time thru from sr0c, from sr0r*/
  )                         /* or from sr0t but not multi sched*/
    SR2REC.PK1PKSCH = SR0CM001.PK1PKSCH; /* Schedule nbr*/

    SR0CS-IO0800-S(); /* Select order table*/

    if (SQLCA.VAGen_SQLCODE == 0) /* If found*/

    else
      SRWREC.XXXERRID = "10000"; /* Message location*/
      converseLib.validationFailed(25); /* Order not found*/
      set SR0CM001.OP1CUOID cursor, bold; /* Highlight*/
      set SR0CM001.OP1NORID bold;
      set SR0CM001.PK1PKSCH bold;
    end

  else

    SR2REC.PK1PKSCH = -1; /* Schedule is a wildcard*/

    SR0CS-IO0800-SS(); /* Scan order table*/

    SR0CS-IO0800-SN(); /* Fetch next row*/

    if (SQLCA.VAGen_SQLCODE == 0)
      if (SR0CM001.PK1PKSCH == 0) /* first time thru from sr0c*/
        SR0CW-VSRORD01-ROW[1] = SR2REC.SR2GRP;
        SR0CS-IO0800-SN(); /* see if second row*/
        if (SQLCA.VAGen_SQLCODE == 0) /* if second row, put*/
          SRWREC.XXXERRID = "10000"; /* error msg*/
          converseLib.validationFailed(106); /* multiple schedules exist*/
        else
          SR2REC.SR2GRP = SR0CW-VSRORD01-ROW[1];
          SR0CM001.PK1PKSCH = SR2REC.PK1PKSCH;
        end
        SR0CS-IO0800-CS();
      else /* from sr0t and multi sched*/
        SR0CW00.SR0CW-VSRORD01-ROW-INDEX = 0;
        set SR0CW05 empty;
        while (SQLCA.VAGen_SQLCODE == 0) /* store srord rows*/
          if (SR2REC.PK1BLLAD == SRWREC.PK1BLLAD[1])
            SR0CW-VSRORD01-ROW-INDEX = SR0CW-VSRORD01-ROW-INDEX + 1;
            SR0CW-VSRORD01-ROW[SR0CW-VSRORD01-ROW-INDEX] = SR2REC.SR2GRP;
          end
          SR0CS-IO0800-SN(); /* get next srord row*/
        end
        SR0CS-IO0800-CS();
        SR2REC.SR2GRP = SR0CW05.SR0CW-VSRORD01-ROW[1];
        SR0CM001.PK1PKSCH = SR2REC.PK1PKSCH;
        SR0CW00.SR0CW-VSRORD01-ROW-INDEX = 1;
        SR0CW00.SR0CW-END-OF-SCHED-FL = "N";
      end
    else
      SRWREC.XXXERRID = "10000"; /* Message location*/
      converseLib.validationFailed(25); /* Order not found*/
      set SR0CM001.OP1CUOID cursor, bold; /* Highlight*/
      set SR0CM001.OP1NORID bold;
    end

  end

end // end SR0C-11000

// Check for direct ship schedule
Function SR0C-12000()
   /* ------------------------------------------------------------*/
   /* Direct ship schedules start with 99.*/
   /* Find the first number in the schedule (not = 0)*/
   /* Check to see if the first two number are 9*/
   /* ------------------------------------------------------------*/

  SR0CW00.SR0CW-DIRECT-SHIP-FL = "N";
  SR0CW00.SR0CW-SUB = 1;

  SR0CW00.SR0CW-SCHED = SR2REC.PK1PKSCH; /* Schedule nbr*/

  if (SR0CW00.SR0CW-SCHED > 0)

    while (SR0CW00.SR0CW-SUB < 10
     && SR0CW00.SR0CW-SCHED-DIGIT[SR0CW-SUB] == 0)
      SR0CW00.SR0CW-SUB = SR0CW00.SR0CW-SUB + 1;
    end

    if (SR0CW00.SR0CW-SUB <= 9)
      if (SR0CW00.SR0CW-SCHED-DIGIT[SR0CW-SUB] == 9)
        SR0CW00.SR0CW-SUB = SR0CW00.SR0CW-SUB + 1;
        if (SR0CW00.SR0CW-SCHED-DIGIT[SR0CW-SUB] == 9)
          SR0CW00.SR0CW-DIRECT-SHIP-FL = "Y";
        end
      end
    end
  end


end // end SR0C-12000

// Process pop-up window
Function SR0C-18000()

   /* ------------------------------------------------------------*/
   /* Bring up pop-up window to get BOL sub nbr to use.*/
   /* ------------------------------------------------------------*/

  set XPSRMW01 empty; /* initialize pop-up window work area*/
  SRWREC.XXXERRID = "SR0C"; /* initialize error id*/

  XPSR-500(); /* process pop-up window*/

  if (converseVar.eventKey is pa2)
    converseLib.clearScreen();
     /* reset screen*/
    exit stack;
  else

    if (XPSRMW01.TF1CARCD[XPSR-SUB-NBR-SCHED-IDX] != 
    SR0CW01.TF1CARCD) /* Carrier cd*/
      SR0CW01.TF1CARCD = XPSRMW01.TF1CARCD[XPSR-SUB-NBR-SCHED-IDX];
      set TF1REC empty;
      TF1REC.TF1CARCD = SR0CW01.TF1CARCD;
      SR0CS-IO0860-S(); /* Select carrier table;*/
      SR0CW01.TF1CARNM = TF1REC.TF1CARNM; /* Carrier name*/
    end

    SR0CW01.PK1NBCTN = XPSRMW01.XPSR-CARTON-COUNT[XPSR-SUB-NBR-SCHED-IDX]; /* Nbr of cartons*/
    SR0CS-300(); /* get BOL carton count*/
    SR0CW01.SR2TNBCT = AZFREC.AZF-AZ-CRTN-CNT; /* BOL cartons*/
    SR0CS-310(); /* get charges & weight*/
    SR0CW01.SR2SHPCG = AZFREC.PK-CRTN-CHARGE-AMT; /* shipping charges*/
    SR0CW01.PK1WT = AZFREC.IO-TOT-PK-ACTL-CRTN-WT; /* weight*/
  end


end // end SR0C-18000

// see if order sent
Function SR0C-19000()

  VAZORD01.XWH-WHSE-CD = SR0CW01.XWHCD;
  VAZORD01.PK-BILL-OF-LADING = SR0CW01.PK1BLLAD;
  VAZORD01.PK-BOL-SUB-NBR = SR0CW01.SR2BLLSU;
  VAZORD01.OP-CUST-ORD-ID = SR0CW01.OP1CUOID;
  VAZORD01.OP-NIKE-ORD-ID = SR0CW01.OP1NORID;

  if (SR0CW01.PK1PKSCH >= 9900000)
    SR0CW00.SR0CW-ALLOW-STOP-SHP-UPD-FL = "Y";
    SR0CW00.SR0CW-DISP-ASN-NOT-SENT-MSG-FL = "N";
  else
    SR0CS-150(); /* select unique AZ order*/

    if (VAZORD01.AZ-ORD-STAT-CD == "ST")
      SR0CW00.SR0CW-ALLOW-STOP-SHP-UPD-FL = "Y";
      SR0CW00.SR0CW-DISP-ASN-NOT-SENT-MSG-FL = "N";
    end

    if (VAZORD01.AZ-ORD-STAT-CD == "ST"
     || VAZORD01.AZ-ORD-STAT-CD == "RE")
      SR0CW00.SR0CW-ALLOW-SHIP-FIELDS-UPD-FL = "Y";
    end
  end

end // end SR0C-19000

// Format and converse the map
Function SR0C-20000()

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (SR0CW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    SR0C-21000(); /* Format the data in the map*/
    SR0C-22000(); /* set autoskip fields*/
    SR0C-23000(); /* Check change authorization*/
  end

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  SR0CW00.SR0CW-PF3-PF5-FL = "N";

  if (COMMAREA.CAFROMAP == "SR0R" /* If from SR0R*/
   && SRWREC.SRWRETFL == "Y"      /* and must return to SR0R*/
  )                              
    SR0CM001.SR0CM-MESSAGE = "TO CONTINUE SR0R REQUEST - PLEASE PRESS ENTER";

  else
    if (COMMAREA.CAFROMAP == "SR0T" /* If from SR0T*/
     && SRWREC.SRWRETFL == "Y"      /* and must return to SR0T*/
    )                              
      SR0CM001.SR0CM-MESSAGE = "TO CONTINUE SR0T REQUEST - PLEASE PRESS ENTER";

    end

  end

   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* Error was found*/
    if (SR0CW00.SR0CW-DISP-ASN-NOT-SENT-MSG-FL == "Y")
      SRWREC.XXXMSGNO = 221;
    end
  else
    SRWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* allow modification of schedule number if multiple*/
   /* schedules found*/
   /* ------------------------------------------------------------*/

  if (SRWREC.XXXMSGNO == 106) /* Order in multiple schedule*/
    set SR0CM001.PK1PKSCH cursor, bold;
  else
    set SR0CM001.PK1PKSCH skip;
  end

  if (SRWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (COMMAREA.CAFROMAP == "SR0R" /* If from SR0R*/
     && SRWREC.SRWRETFL == "Y"      /* and must return to SR0R*/
    )                              
      if (SRWREC.XXXERRID == "10000") /* and error from SR0R-10000*/
        SR0CW00.SR0CW-PF3-PF5-FL = "Y";
        SR0CM001.SR0CM-MESSAGE = "PRESS PF3 TO RETURN TO SR0R OR PF5 TO BYPASS THIS ORDER";
      end
    else
      if (COMMAREA.CAFROMAP == "SR0T" /* If from SR0T*/
       && SRWREC.SRWRETFL == "Y"      /* and must return to SR0R*/
      )                              
        if (SRWREC.XXXERRID == "10000") /* and error from SR0T-10000*/
          SR0CW00.SR0CW-PF3-PF5-FL = "Y";
          SR0CM001.SR0CM-MESSAGE = "PRESS PF3 TO RETURN TO SR0T OR PF5 TO BYPASS THIS ORDER";
        end

      end

    end

    if (SRWREC.XXXMSGNO != 0) /* Message to display*/
      if (SRWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(SRWREC.XXXMSGNO);
      end /* Message number*/
    else
      SR0CM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
    end

    SR0CM001.XXXERRID = SRWREC.XXXERRID;
                                   /* Message location*/

    set SR0CM001 alarm; /* Indicate sound alarm*/

  end

  converse SR0CM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  SRWREC.XXXERRID = " "; /* Message location*/
  SRWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = SR0CM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = SR0CM001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set SR0CM001.XWHCD normal; /* Warehouse code*/
  set SR0CM001.OP1CUOID normal; /* Cust ord id*/
  set SR0CM001.OP1NORID normal; /* Nike ord id*/
  set SR0CM001.SR2WOGNB normal; /* WOG nbr*/
  set SR0CM001.OP1CUPO normal; /* Customer PO nbr*/
  set SR0CM001.TF2PRONO normal; /* Pro Number*/
  set SR0CM001.SR2SHPCG normal; /* Shipping charges*/
  set SR0CM001.PK1WT[1] normal; /* Weight*/
  set SR0CM001.SR2TOTCF[1] normal; /* Volume*/
  set SR0CM001.PK1NBCTN normal; /* cartons*/
  set SR0CM001.SR-STOP-ORD-SHP-FL normal; /* Stopped ship flag*/
  /* dlvrusa start*/
  /* SET SR0CM001.SR2SPINI NORMAL;    /* Special invoice instruction*/
  /* dlvrusa end*/

   /* dlvrusa start sbhara*/
  set SR0CM001.OP1FTIND normal; /* prepaid freight charges*/
   /* dlvrusa end   sbhara*/
  set SR0CM001.CATOAP normal; /* TO application*/
  set SR0CM001.CAITEM normal; /* Application data*/


end // end SR0C-20000

// Format the data in the map
Function SR0C-21000()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set SR0CM001 initial; /* M001 input/output area*/

  SR0CW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* If warehouse is missing, position the cursor on that field.*/
   /* ------------------------------------------------------------*/

  if (SRWREC.SRWXWHCD == " ") /* Warehouse code missing*/
    set SR0CM001.XWHCD cursor; /* Position cursor*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  SR0CM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  SR0CM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  SR0CM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  SR0CM001.XWHCD = SR0CW01.XWHCD; /* warehouse code*/
  SR0CM001.SR0CM-UNIT-OF-MEASURE = SR0CW01.SR0CW-UNIT-OF-MEASURE;

  SR0CM001.PK1PKSCH = SR0CW01.PK1PKSCH; /* Shipped date*/
  SR0CM001.SR1SHPDT = SR0CW01.SR1SHPDT; /* Shipped date*/

  SR0CM001.OP1CUOID = SR0CW01.OP1CUOID; /* customer order id*/
  SR0CM001.OP1NORID = SR0CW01.OP1NORID; /* customer order id*/
  SR0CM001.PK1BLLAD = SR0CW01.PK1BLLAD; /* Bill of lading*/
  SR0CM001.SR2BLLSU = SR0CW01.SR2BLLSU; /* BOL sub nbr*/

  SR0CM001.SR2WOGNB = SR0CW01.SR2WOGNB; /* WOG nbr*/
  SR0CM001.OP1CUPO = SR0CW01.OP1CUPO; /* Customer PO nbr*/

  SR0CM001.TF1CARCD = SR0CW01.TF1CARCD; /* Carrier code*/
  SR0CM001.TF1CARNM = SR0CW01.TF1CARNM; /* Carrier name*/

  SR0CM001.SR2SHPCG = SR0CW01.SR2SHPCG; /* Shipping charges*/
  SR0CM001.TF2PRONO = SR0CW01.TF2PRONO; /* Pro nbr*/

  SR0CM001.PK1NBCTN = SR0CW01.PK1NBCTN; /* Nbr of cartons*/
  SR0CM001.SR2TNBCT = SR0CW01.SR2TNBCT; /* BOL cartons*/

  if (SR0CM001.SR0CM-UNIT-OF-MEASURE == "U")

    SR0CM001.PK1WT[1] = SR0CW01.PK1WT; /* Weight in lbs*/
    SR0CM001.SR0CMUMW[1] = "LB";

    SR0CM001.PK1WT[2] = mathLib.round(SR0CW01.PK1WT / 2.2046, -mathLib.decimals(SR0CM001.PK1WT[2])); /* Weight in kilos*/
    SR0CM001.SR0CMUMW[2] = "KG";

    SR0CM001.SR2TOTCF[1] = SR0CW01.SR2TOTCF;
                                   /* Volume in cubic feet*/
    SR0CM001.SR0CMUMV[1] = "FT";

    SR0CM001.SR2TOTCF[2] = mathLib.round(SR0CW01.SR2TOTCF * .0280, -mathLib.decimals(SR0CM001.SR2TOTCF[2])); /* Volume in meter*/
    SR0CM001.SR0CMUMV[2] = "M.";

  else

    SR0CM001.PK1WT[1] = mathLib.round(SR0CW01.PK1WT / 2.2046, -mathLib.decimals(SR0CM001.PK1WT[1])); /* Weight in kilos*/
    SR0CM001.SR0CMUMW[1] = "KG";

    SR0CM001.PK1WT[2] = SR0CW01.PK1WT; /* Weight in lbs*/
    SR0CM001.SR0CMUMW[2] = "LB";

    SR0CM001.SR2TOTCF[1] = mathLib.round(SR0CW01.SR2TOTCF * .0280, -mathLib.decimals(SR0CM001.SR2TOTCF[1])); /* Volume in meter*/
    SR0CM001.SR0CMUMV[1] = "M.";

    SR0CM001.SR2TOTCF[2] = SR0CW01.SR2TOTCF;
                                   /* Volume in cubic feet*/
    SR0CM001.SR0CMUMV[2] = "FT";

  end

  SR0CM001.SR-STOP-ORD-SHP-FL = SR0CW01.SR-STOP-ORD-SHP-FL;
  SR0CM001.SR2QTYSH = SR0CW01.SR2QTYSH; /* Units shipped*/
                                   /* Stopped ship flag*/
  /* dlvrusa start*/
  /* MOVE SR0CW01.SR2SPINI TO SR0CM001.SR2SPINI;/* Special invoice instru*/
  /* dlvrusa end*/

   /* DLVRUSA START SBHARA 04/12/01*/
  SR0CM001.OP1FTIND = SR0CW01.OP1FTIND; /* MOVE THE PREPAID FLAG*/
   /* DLVRUSA END   SBHARA 04/12/01*/

end // end SR0C-21000

// Set autoskip fields
Function SR0C-22000()

  set SR0CM001.PK1WT[2] skip;
  set SR0CM001.SR2TOTCF[2] skip;

  if ((COMMAREA.CAFROMAP == "SR0R" /* If from SR0R*/
   || COMMAREA.CAFROMAP == "SR0T") /* or from SR0T*/
   && SRWREC.SRWRETFL == "Y")      /* and must return to SR0R/SR0T*/
    set SR0CM001.SR0CM-UNIT-OF-MEASURE skip;
  end


   /* ------------------------------------------------------------*/
   /* Format any descriptions for codes that are displayed.*/
   /* ------------------------------------------------------------*/

  if (SR0CM001.XWHCD in XWHTBL.XWHCD /* Code in table*/
   && XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/

    SR0CM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
                                   /* Description*/
    if (SR1REC.TF1CARNM == "DCMS") /* For orders on DCMS*/
      set SR0CM001.SR-STOP-ORD-SHP-FL skip; /* the stop shipment can*/
    end /* not be changed*/
    if (SR0CW00.XWTCD == "01"
     && SR0CW00.XWHSTKLF == "Y"
     && SR0CW00.SR0CW-DIRECT-SHIP-FL == "N")
      if (SR0CW00.SR0CW-ALLOW-STOP-SHP-UPD-FL == "N")
        set SR0CM001.SR-STOP-ORD-SHP-FL skip; /* stop shipment*/
        set SR0CM001.TF2PRONO skip; /* pro number*/
      end
      if (SR0CW00.SR0CW-ALLOW-SHIP-FIELDS-UPD-FL == "N")
        set SR0CM001.SR2SHPCG skip; /* Shipping Charges*/
        set SR0CM001.PK1NBCTN skip; /* Cartons*/
        set SR0CM001.PK1WT[1] skip; /* Weight*/
        set SR0CM001.SR2TOTCF[1] skip; /* Cubic Feet*/
      end
    else
      set SR0CM001.TF2PRONO skip; /* pro number*/
    end
  else

    SR0CM001.XWHABRV = " "; /* No description*/
    set SR0CM001.OP1CUPO skip; /* Customer PO nbr*/
    set SR0CM001.SR2SHPCG skip; /* Shipping charges*/
    set SR0CM001.PK1NBCTN skip; /* Cartons*/
    set SR0CM001.PK1WT[1] skip; /* Weight*/
    set SR0CM001.SR2TOTCF[1] skip; /* Cubic Feet*/
    set SR0CM001.TF2PRONO skip; /* pro number*/

  end

   /* *DLVRUSA START SBHARA 04/12/01*/

  if (SR1REC.XWHCD == "04" /* MEMPHIS FOOT -SAP*/
   || SR1REC.XWHCD == "07" /* WILSONVILLE  -SAP*/
   || SR1REC.XWHCD == "09" /* PROMO        -SAP*/
   || SR1REC.XWHCD == "42" /* CANADA       -SAP*/
   || SR1REC.XWHCD == "51") /* MEMPHIS APPL -SAP*/
    /* NEXT SENTENCE*/
  else
    set SR0CM001.OP1FTIND skip;
  end
   /* *DLVRUSA END   SBHARA 04/12/01*/

end // end SR0C-22000

// Check change authorization
Function SR0C-23000()
   /* ------------------------------------------------------------*/
   /* If requested data was found and the user is authorized to*/
   /* change data on the screen, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (SR0CW00.XXX-RQT-DATA-FL == "N" /* Requested data was found*/
   && COMMAREA.CACHGFL == "Y")       /* and user authorized to changed data*/

    if (SR0CW01.SR-STOP-ORD-SHP-FL == "Y") /* If stopped ship*/
       /* next sentence*/
    else

      if (COMMAREA.CAFROMAP == "SR0R" /* If from SR0R*/
       && SRWREC.SRWRETFL == "Y"      /* and must return to SR0R*/
       && SRWREC.SRWRETOP == "I")     /* and inquire option*/
        /* next sentence*/
      else
        return; /* Return to previous process*/
      end

    end

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, protect the modifiable fields on the screen.*/
   /* ------------------------------------------------------------*/

  set SR0CM001.SR2WOGNB skip; /* WOG nbr*/
  set SR0CM001.OP1CUPO skip; /* Customer PO nbr*/
  set SR0CM001.TF2PRONO skip; /* Pro Number*/
  set SR0CM001.SR2SHPCG skip; /* Shipping charges*/
  set SR0CM001.PK1NBCTN skip; /* Nbr of cartons*/
  set SR0CM001.PK1WT skip; /* Weight*/
  set SR0CM001.SR2TOTCF skip; /* Volume*/
  set SR0CM001.SR-STOP-ORD-SHP-FL skip; /* Stopped ship flag*/
  /* dlvrusa start*/
  /* SET SR0CM001.SR2SPINI AUTOSKIP;  /* Special invoice instruction*/
  /* dlvrusa end*/

  /* dlvrusa start  SBHARA 04/12/01*/
  set SR0CM001.OP1FTIND skip; /* PREPAID FLAG*/
  /* dlvrusa end    SBHARA 04/02/01*/




end // end SR0C-23000

// Check attention identifier
Function SR0C-30000()
   /* ------------------------------------------------------------*/
   /* If from SR0R/SR0T, return to previous process.*/
   /* ------------------------------------------------------------*/

  if ((COMMAREA.CAFROMAP == "SR0R" /* If from SR0R*/
   || COMMAREA.CAFROMAP == "SR0T") /* or from SR0T*/
   && SRWREC.SRWRETFL == "Y")      /* and must return to SR0R/SR0T*/

    if (SR0CW00.SR0CW-PF3-PF5-FL == "Y")

      if (converseVar.eventKey is pf3) /* Return to SR0R/SR0T*/
        if (COMMAREA.CAFROMAP == "SR0R") /* If from SR0R*/
          COMMAREA.CATOAP = "SR0R"; /* TO application*/
        else
          COMMAREA.CATOAP = "SR0T"; /* TO application*/
        end
        COMMAREA.CAUSERA = SRWREC.CAUSERA; /* User area*/
        XSEXIT();

      end

      if (converseVar.eventKey is pf5) /* Bypass order*/
        return; /* Return to previous process*/
      end

    end

  end

   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set SR0CW00 empty;
    set SR0CW01 empty; /* M001 display storage*/

    SR0CW01.XWHCD = SR0CM001.XWHCD;
    SR0CW01.SR0CW-UNIT-OF-MEASURE = SR0CM001.SR0CM-UNIT-OF-MEASURE;

    SR0CW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    SR0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (SR0CM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set SR0CM001.CATOAP cursor, bold; /* Highlight*/

      SRWREC.SRWRETFL = "N"; /* set not returning flag*/
      XSSRS-EXIT(); /* Exit to another application*/

    else

      SRWREC.XXXERRID = "30000"; /* Message location*/
      converseLib.validationFailed(114); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1  /* PF1 was pressed*/
   || converseVar.eventKey is pf3  /* or PF3 was pressed*/
   || converseVar.eventKey is pf4  /* or PF4 was pressed*/
   || converseVar.eventKey is pf13 /* or PF13 was pressed*/
   || converseVar.eventKey is pf15 /* or PF15 was pressed*/
   || converseVar.eventKey is pf16 /* or PF16 was pressed*/
   || converseVar.eventKey is pf17 /* or PF17 was pressed*/
   || converseVar.eventKey is pf18 /* or PF18 was pressed*/
   || converseVar.eventKey is pf20) /* or PF20 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "SR0CM001"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      if (COMMAREA.CAFROMAP == "SR0R" /* If from SR0R*/
       && SRWREC.SRWRETFL == "Y")     /* must return to SR0R*/
        COMMAREA.CATOAP = "SR0R";
        XSEXIT();
      else
        if (COMMAREA.CAFROMAP == "SR0T" /* If from SR0T*/
         && SRWREC.SRWRETFL == "Y")     /* must return to SR0T*/
          COMMAREA.CATOAP = "SR0T";
          XSEXIT();
        else
          COMMAREA.CATOAP = "SR0A"; /* System Menu*/
        end

      end

    end

    if (converseVar.eventKey is enter) /* If enter was pressed*/
      if (COMMAREA.CAFROMAP == "SR0R") /* If from SR0R*/
        if (SRWREC.PK1BLLAD[2] > 1 /* Multiple orders being processed*/
         && SRWREC.SRWRETFL == "Y") /* Must return to SR0R*/
          COMMAREA.CATOAP = "SR0R"; /* Send control to SR0R*/
          SRWREC.SRWMISCF[3] = "Y"; /* Send control to SR0RM002*/
          COMMAREA.CAUSERA = SRWREC.SRWGRP;
          XSEXIT();
        end
      else
        if (COMMAREA.CAFROMAP == "SR0T") /* If from SR0T*/
          if (SRWREC.PK1BLLAD[2] > 1 /* Multiple orders being processed*/
           && SRWREC.SRWRETFL == "Y") /* Must return to SR0T*/
            COMMAREA.CATOAP = "SR0T"; /* Send control to SR0T*/
            SRWREC.SRWMISCF[3] = "Y"; /* Send control to SR0TM002*/
            COMMAREA.CAUSERA = SRWREC.SRWGRP;
            XSEXIT();
          end
        end
      end
    end

    XSSRS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    SRWREC.XXXERRID = "30000"; /* Message location*/
    converseLib.validationFailed(12); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end

end // end SR0C-30000

// Verify data that was entered
Function SR0C-40000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    SRWREC.XXXERRID = "40000"; /* Message location*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    set SR0CM001.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If key field changed, determine if any other field changed.*/
   /* ------------------------------------------------------------*/

  if (SR0CM001.XWHCD != SR0CW01.XWHCD       /* Warehouse code changed*/
   || SR0CM001.PK1PKSCH != SR0CW01.PK1PKSCH /* or schedule nbr changed*/
   || SR0CM001.OP1CUOID != SR0CW01.OP1CUOID /* or cust ord id changed*/
   || SR0CM001.OP1NORID != SR0CW01.OP1NORID /* or nike ord id changed*/
   || SR0CM001.SR0CM-UNIT-OF-MEASURE != SR0CW01.SR0CW-UNIT-OF-MEASURE)

    SR0C-41000(); /* Highlight other changed fields*/

    /* ------------------------------------------------------------*/
    /* Determine if all the required key fields were entered.*/
    /* ------------------------------------------------------------*/

    SR0C-42000(); /* Check for required key fields*/

  else

    /* ------------------------------------------------------------*/
    /* Edit entered data.*/
    /* ------------------------------------------------------------*/

    SR0C-43000(); /* Verify entered data*/

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to display map*/

  end


end // end SR0C-40000

// Highlight other changed fields
Function SR0C-41000()
   /* ------------------------------------------------------------*/
   /* If a modifiable field was changed, indicate that field may*/
   /* not be changed when key is changed or a PF key is pressed.*/
   /* ------------------------------------------------------------*/

  /* dlvrusa start*/
  /* IF SR0CM001.SR2SPINI NE SR0CW01.SR2SPINI;/* Special invoice instruction*/
  /* ;*/
  /* MOVE '41000' TO SRWREC.XXXERRID;/* Message location*/
  /* MOVE 183 TO EZEMNO;            /* Field may not change*/
  /* SET SR0CM001.SR2SPINI CURSOR,BRIGHT;/* Highlight*/
  /* ;*/
  /* END;*/
  /* dlvrusa end*/

   /* DLVRUSA START SBHARA 04/12/01*/
  if (SR0CM001.OP1FTIND != SR0CW01.OP1FTIND
  ) /* next sentence*/
    SRWREC.XXXERRID = "43000"; /* Message location*/
    converseLib.validationFailed(183); /* Field may not change*/
    set SR0CM001.OP1FTIND cursor, bold; /* Highlight*/
  end
   /* DLVRUSA END   SBHARA 04/12/01*/

  if (SR0CM001.SR-STOP-ORD-SHP-FL != SR0CW01.SR-STOP-ORD-SHP-FL)
                                   /* Stopped ship flag*/
    SRWREC.XXXERRID = "41000"; /* Message location*/
    converseLib.validationFailed(183); /* Field may not change*/
    set SR0CM001.SR-STOP-ORD-SHP-FL cursor, bold; /* Highlight*/

  end

  if (SR0CW01.SR0CW-UNIT-OF-MEASURE == "U") /* English system*/
    SR0CW00.PK1WT = SR0CM001.PK1WT[1];
    SR0CW00.SR2TOTCF = SR0CM001.SR2TOTCF[1];
  else /* Metric system,*/
    SR0CW00.PK1WT = SR0CM001.PK1WT[1] * 2.2046;
    SR0CW00.SR2TOTCF = SR0CM001.SR2TOTCF[1] / .0280;
  end

  if (SR0CW00.SR2TOTCF != SR0CW01.SR2TOTCF) /* Volume*/

    SRWREC.XXXERRID = "41000"; /* Message location*/
    converseLib.validationFailed(183); /* Field may not change*/
    set SR0CM001.SR2TOTCF[1] cursor, bold; /* Highlight*/

  end

  if (SR0CW00.PK1WT != SR0CW01.PK1WT) /* Weight in lbs*/

    SRWREC.XXXERRID = "41000"; /* Message location*/
    converseLib.validationFailed(183); /* Field may not change*/
    set SR0CM001.PK1WT[1] cursor, bold; /* Highlight*/

  end

  if (SR0CM001.PK1NBCTN != SR0CW01.PK1NBCTN) /* Shipping charges changed*/

    SRWREC.XXXERRID = "41000"; /* Message location*/
    converseLib.validationFailed(183); /* Field may not change*/
    set SR0CM001.PK1NBCTN cursor, bold; /* Highlight*/

  end

  if (SR0CM001.SR2SHPCG != SR0CW01.SR2SHPCG) /* Shipping charges changed*/

    SRWREC.XXXERRID = "41000"; /* Message location*/
    converseLib.validationFailed(183); /* Field may not change*/
    set SR0CM001.SR2SHPCG cursor, bold; /* Highlight*/

  end

  if (SR0CM001.TF2PRONO != SR0CW01.TF2PRONO) /* Pro Number changed*/

    SRWREC.XXXERRID = "41000"; /* Message location*/
    converseLib.validationFailed(183); /* Field may not change*/
    set SR0CM001.TF2PRONO cursor, bold; /* Highlight*/

  end

  if (SR0CM001.OP1CUPO != SR0CW01.OP1CUPO) /* Customer PO changed*/

    SRWREC.XXXERRID = "41000"; /* Message location*/
    converseLib.validationFailed(183); /* Field may not change*/
    set SR0CM001.OP1CUPO cursor, bold; /* Highlight*/

  end

  if (SR0CM001.SR2WOGNB != SR0CW01.SR2WOGNB) /* WOG nbr changed*/

    SRWREC.XXXERRID = "41000"; /* Message location*/
    converseLib.validationFailed(183); /* Field may not change*/
    set SR0CM001.SR2WOGNB cursor, bold; /* Highlight*/

  end


end // end SR0C-41000

// Check for required key fields
Function SR0C-42000()
   /* ------------------------------------------------------------*/
   /* Verify that required key fields were entered.*/
   /* ------------------------------------------------------------*/

  if (SR0CM001.OP1NORID >= 0) /* If cust ord id entered*/
    /* next sentence*/
  else
    SRWREC.XXXERRID = "42000"; /* Message location*/
    converseLib.validationFailed(24); /* Required field*/
    set SR0CM001.OP1NORID cursor, bold;
  end

  if (SR0CM001.OP1CUOID != 0) /* If cust ord id entered*/
    /* next sentence*/
  else
    SRWREC.XXXERRID = "42000"; /* Message location*/
    converseLib.validationFailed(24); /* Required field*/
    set SR0CM001.OP1CUOID cursor, bold;
  end

  if (SR0CM001.SR0CM-UNIT-OF-MEASURE == " ")
    SRWREC.XXXERRID = "42000"; /* Message location*/
    converseLib.validationFailed(24); /* Required field*/
    set SR0CM001.SR0CM-UNIT-OF-MEASURE cursor, bold;
  else

    if (SR0CM001.SR0CM-UNIT-OF-MEASURE == "U"
     || SR0CM001.SR0CM-UNIT-OF-MEASURE == "M") /* UOM english or metric*/
      /* next sentence*/
    else
      SRWREC.XXXERRID = "42000"; /* Message location*/
      converseLib.validationFailed(188); /* UOM must be 'U' or 'M'*/
      set SR0CM001.SR0CM-UNIT-OF-MEASURE cursor, bold;
    end

  end

  if (SR0CM001.XWHCD == " ") /* If no warehouse entered*/

    SRWREC.XXXERRID = "42000"; /* Message location*/
    converseLib.validationFailed(24); /* Required field*/
    set SR0CM001.XWHCD cursor, bold;

  else

    if (SR0CM001.XWHCD in XWHTBL.XWHCD) /* If whse code in corp table*/

      if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* If active*/
        if (SR0CM001.XWHCD in XWHTBL.XWHCD)
          SR0CW00.XWTCD = XWHTBL.XWTCD[sysVar.arrayIndex];
        end
        if (SR0CM001.XWHCD in XWHTBL.XWHCD)
          SR0CW00.XWHSTKLF = XWHTBL.XWHSTKLF[sysVar.arrayIndex];
        end
      else
        SRWREC.XXXERRID = "42000"; /* Message location*/
        converseLib.validationFailed(2); /* Inactive whse*/
        set SR0CM001.XWHCD cursor, bold;
      end

    else
      SRWREC.XXXERRID = "42000"; /* Message location*/
      converseLib.validationFailed(1); /* Invalid whse*/
      set SR0CM001.XWHCD cursor, bold;
    end

  end


end // end SR0C-42000

// Verify changed data
Function SR0C-43000()
   /* ------------------------------------------------------------*/
   /* Edit modified data fields.*/
   /* ------------------------------------------------------------*/

  if (SR0CM001.SR-STOP-ORD-SHP-FL != SR0CW01.SR-STOP-ORD-SHP-FL)
                                   /* Stopped ship flag changed*/
    if (SR0CM001.SR-STOP-ORD-SHP-FL == "Y"
     || SR0CM001.SR-STOP-ORD-SHP-FL == "N")
      /* next sentence*/
    else
      SRWREC.XXXERRID = "43000"; /* Message location*/
      converseLib.validationFailed(180); /* Field may not change*/
      set SR0CM001.SR-STOP-ORD-SHP-FL cursor, bold; /* Highlight*/
    end

  end

   /* dlvrusa start  sbhara 04/12/01*/

  if (SR0CM001.OP1FTIND != SR0CW01.OP1FTIND) /* flag modified*/
    if (SR0CM001.OP1FTIND == "Y" /* check for valid values*/
     || SR0CM001.OP1FTIND == "N")
      /* next sentence*/
    else
      SRWREC.XXXERRID = "43000"; /* Message location*/
      converseLib.validationFailed(262); /* Field may not change*/
      set SR0CM001.OP1FTIND cursor, bold; /* Highlight*/
    end
  end

   /* dlvrusa end    sbhara 04/12/01*/

  if (SR0CM001.SR0CM-UNIT-OF-MEASURE != SR0CW01.SR0CW-UNIT-OF-MEASURE)

    if (SR0CW01.SR0CW-UNIT-OF-MEASURE == "U")
      SR0CW00.PK1WT = SR0CM001.PK1WT[1];
      SR0CW00.SR2TOTCF = SR0CM001.SR2TOTCF[1];
    else
      SR0CW00.PK1WT = SR0CM001.PK1WT[1] * 2.2046;
      SR0CW00.SR2TOTCF = SR0CM001.SR2TOTCF[1] / .0280;
    end

    if (SR0CW00.SR2TOTCF != SR0CW01.SR2TOTCF)
      SRWREC.XXXERRID = "43000"; /* Message location*/
      converseLib.validationFailed(183); /* Cannot be changed due to UOM*/
      set SR0CM001.SR0CM-UNIT-OF-MEASURE bold;
      set SR0CM001.SR2TOTCF cursor, bold; /* Highlight*/
    end

    if (SR0CW00.PK1WT != SR0CW01.PK1WT)
      SRWREC.XXXERRID = "43000"; /* Message location*/
      converseLib.validationFailed(183); /* Cannot be changed due to UOM*/
      set SR0CM001.SR0CM-UNIT-OF-MEASURE bold;
      set SR0CM001.PK1WT cursor, bold; /* Highlight*/
    end

  end

  if (SR0CM001.SR2SHPCG != SR0CW01.SR2SHPCG) /* Shipping charges changed*/

    if (SR0CM001.SR2SHPCG > 12000)
      SRWREC.XXXERRID = "43000"; /* Message location*/
      converseLib.validationFailed(107); /* Shipping charges is over $12,000*/
      set SR0CM001.SR2SHPCG cursor, bold; /* Highlight*/
    end

  end

  if (SR0CM001.SR2WOGNB != SR0CW01.SR2WOGNB) /* With Other Goods*/

    if (SR0CM001.SR2WOGNB != 0)

      set OP1REC empty;

      SR0CW00.SR0CW-SR2WOGNB-UNPACK = SR0CM001.SR2WOGNB;
      OP1REC.OP1PARTN = SR0CW00.OP1PARTN;
      OP1REC.OP1CUOID = SR0CW00.SR0CW-OP1CUOID-UNPACK;
      OP1REC.OP1NORID = SR0CW00.SR0CW-OP1NORID-UNPACK;

      SR0CS-SELECT-ORDER(); /* Select order fr VORHDR01/VOPPKH01*/

      if (SQLCA.VAGen_SQLCODE == +100) /* Not found*/

        SR0CW01.SR2GRP = SR2REC.SR2GRP;

        set SR2REC empty;

        SR0CS-IO0800-SS();

        SR0CS-IO0800-SN();

        if (SQLCA.VAGen_SQLCODE == +100) /* If not found*/
          SRWREC.XXXERRID = "43000"; /* Message location*/
          converseLib.validationFailed(68); /* Order not in orders and shiprec db*/
          set SR0CM001.SR2WOGNB cursor, bold; /* Highlight*/
        end

        SR0CS-IO0800-CS();

        SR2REC.SR2GRP = SR0CW01.SR2GRP;

      end

    end

  end


end // end SR0C-43000

// Process valid input request
Function SR0C-50000()
   /* ------------------------------------------------------------*/
   /* Save any work record fields that may have been modified.*/
   /* ------------------------------------------------------------*/

  SRWREC.SRWXWHCD = SR0CM001.XWHCD; /* Warehouse code*/

   /* ------------------------------------------------------------*/
   /* If the key fields changed, request the data to display.*/
   /* ------------------------------------------------------------*/

  if (SR0CM001.XWHCD != SR0CW01.XWHCD       /* Warhouse code changed*/
   || SR0CM001.OP1CUOID != SR0CW01.OP1CUOID /* or cust ord id changed*/
   || SR0CM001.OP1NORID != SR0CW01.OP1NORID) /* or nike ord id changed*/

    SR0CW00.SR0CW-MAP-KEY-CHNG = "Y"; /* Shows key changed*/

    SR0CW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    return; /* Return to previous process*/

  end

  SR0CW00.SR0CW-MAP-KEY-CHNG = "N"; /* Shows key not changed*/

  if (SR0CM001.SR0CM-UNIT-OF-MEASURE != SR0CW01.SR0CW-UNIT-OF-MEASURE)

    SR0CW01.SR0CW-UNIT-OF-MEASURE = SR0CM001.SR0CM-UNIT-OF-MEASURE;
    SR0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map falg*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If no modifiable data changed, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (SR0CW01.SR0CW-UNIT-OF-MEASURE == "U")
    SR0CW00.PK1WT = SR0CM001.PK1WT[1];
    SR0CW00.SR2TOTCF = SR0CM001.SR2TOTCF[1];
  else
    SR0CW00.PK1WT = SR0CM001.PK1WT[1] * 2.2046;
    SR0CW00.SR2TOTCF = SR0CM001.SR2TOTCF[1] / .0280;
  end

  if (SR0CM001.SR2WOGNB == SR0CW01.SR2WOGNB
   && SR0CM001.OP1CUPO == SR0CW01.OP1CUPO
   && SR0CM001.SR2SHPCG == SR0CW01.SR2SHPCG
   && SR0CM001.PK1NBCTN == SR0CW01.PK1NBCTN
   && SR0CW00.PK1WT == SR0CW01.PK1WT
   && SR0CW00.SR2TOTCF == SR0CW01.SR2TOTCF
   && SR0CM001.SR-STOP-ORD-SHP-FL == SR0CW01.SR-STOP-ORD-SHP-FL
   /* dlvrusa start sbhara 04/12/01*/
   && SR0CM001.OP1FTIND == SR0CW01.OP1FTIND
   /* dlvrusa end   sbhara 04/12/01*/
   /* dlvrusa start*/
   /* AND SR0CM001.SR2SPINI EQ*/
   /* SR0CW01.SR2SPINI*/
   /* dlvrusa end*/
   && SR0CM001.TF2PRONO == SR0CW01.TF2PRONO)

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If order has been stopped ship, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (SR2REC.SR-STOP-ORD-SHP-FL == "Y") /* If stopped ship*/

    SR0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Obtain the current date and time.*/
   /* ------------------------------------------------------------*/

  XX0XS01(); /* Obtain date and time*/

   /* ------------------------------------------------------------*/
   /* Update the changed data in the table row.*/
   /* ------------------------------------------------------------*/

  SR0CW00.SR0CW-AZHDR-UPD-FL = "N";
  SR0CW00.SR0CW-AZORD-UPD-FL = "N";
  SR0CW00.SR0CW-SPBOL-UPD-FL = "N";

  if (SR0CM001.SR2WOGNB != SR2REC.SR2WOGNB) /* With Other Goods*/
    SR2REC.SR2WOGNB = SR0CM001.SR2WOGNB;
  end

  if (SR0CM001.OP1CUPO != SR2REC.OP1CUPO) /* Customer PO*/
    SR2REC.OP1CUPO = SR0CM001.OP1CUPO;
    if (SR0CW00.XWTCD == "01" && SR0CW00.XWHSTKLF == "Y" /* Mover's whse*/
     && SR0CW01.PK1PKSCH < 9900000)                      /* Not Direct shipment*/
      SR0CW00.SR0CW-AZORD-UPD-FL = "Y";
    end
  end

  if (SR0CM001.TF2PRONO != SR2REC.TF2PRONO) /* Pro Number*/
    SR2REC.TF2PRONO = SR0CM001.TF2PRONO;
    if (SR0CW00.XWTCD == "01" && SR0CW00.XWHSTKLF == "Y" /* Mover's whse*/
     && SR0CW01.PK1PKSCH < 9900000)                      /* Not Direct shipment*/
      SR0CW00.SR0CW-AZHDR-UPD-FL = "Y";
    end
  end

  if (SR0CM001.SR2SHPCG != SR0CW01.SR2SHPCG) /* Ship charges*/
    if (SR0CW00.XWTCD == "01" && SR0CW00.XWHSTKLF == "Y" /* Mover's whse*/
     && SR2REC.SR2BLLSU == 99)                           /* Multiple BOL's*/
      SR0CW00.SR0CW-SPBOL-UPD-FL = "Y";
    else
      SR2REC.SR2SHPCG = SR0CM001.SR2SHPCG;
    end
  end

  if (SR0CM001.PK1NBCTN != SR0CW01.PK1NBCTN) /* Nbr of crtn*/
    if (SR0CW00.XWTCD == "01" && SR0CW00.XWHSTKLF == "Y") /* Mover's whse*/
      if (SR0CW01.PK1PKSCH < 9900000) /* Not Direct shipment*/
        SR0CW00.SR0CW-AZHDR-UPD-FL = "Y";
        SR0CW00.SR0CW-AZORD-UPD-FL = "Y";
      end
      if (SR2REC.SR2BLLSU == 99) /* Multiple BOL's*/
        SR0CW00.SR0CW-SPBOL-UPD-FL = "Y";
      else
        SR2REC.PK1NBCTN = SR0CM001.PK1NBCTN;
      end
    else
      SR2REC.PK1NBCTN = SR0CM001.PK1NBCTN;
    end
  end

  if (SR0CM001.SR0CM-UNIT-OF-MEASURE == "U")
    if (SR0CM001.PK1WT[1] != SR0CW01.PK1WT) /* Weight*/
      if (SR0CW00.XWTCD == "01" && SR0CW00.XWHSTKLF == "Y") /* Mover's whse*/
        if (SR0CW01.PK1PKSCH < 9900000) /* Not Direct shipment*/
          SR0CW00.SR0CW-AZHDR-UPD-FL = "Y";
          SR0CW00.SR0CW-AZORD-UPD-FL = "Y";
        end
        if (SR2REC.SR2BLLSU == 99) /* Multiple BOL's*/
          SR0CW00.SR0CW-SPBOL-UPD-FL = "Y";
        else
          SR2REC.PK1WT = SR0CM001.PK1WT[1];
        end
      else
        SR2REC.PK1WT = SR0CM001.PK1WT[1];
      end
    end

    if (SR0CM001.SR2TOTCF[1] != SR2REC.SR2TOTCF) /* Volume*/
      SR2REC.SR2TOTCF = SR0CM001.SR2TOTCF[1];
    end

  else

    SR0CW00.PK1WT = SR0CM001.PK1WT[1] * 2.2046;
    if (SR0CW00.PK1WT != SR0CW01.PK1WT) /* Weight*/
      if (SR0CW00.XWTCD == "01" && SR0CW00.XWHSTKLF == "Y") /* Mover's whse*/
        if (SR0CW01.PK1PKSCH < 9900000) /* Not Direct shipment*/
          SR0CW00.SR0CW-AZHDR-UPD-FL = "Y";
          SR0CW00.SR0CW-AZORD-UPD-FL = "Y";
        end
        if (SR2REC.SR2BLLSU == 99) /* Multiple BOL's*/
          SR0CW00.SR0CW-SPBOL-UPD-FL = "Y";
        else
          SR2REC.PK1WT = SR0CW00.PK1WT;
        end
      else
        SR2REC.PK1WT = SR0CW00.PK1WT;
      end
    end

    SR0CW00.SR2TOTCF = SR0CM001.SR2TOTCF[1] / .0280;
    if (SR0CW00.SR2TOTCF != SR2REC.SR2TOTCF) /* Volume*/
      SR2REC.SR2TOTCF = SR0CW00.SR2TOTCF;
    end

  end

  /* dlvrusa start*/
  /* IF SR0CM001.SR2SPINI NE SR2REC.SR2SPINI;/* Special invoice instruction*/
  /* MOVE SR0CM001.SR2SPINI TO SR2REC.SR2SPINI;*/
  /* END;*/
  /* dlvrusa end*/

  /* DLVRUSA START SBHARA 04/13/01*/
  if (SR0CM001.OP1FTIND != SR2REC.OP1FTIND) /* PREPAID FLAG CHANGES*/
    SR2REC.OP1FTIND = SR0CM001.OP1FTIND; /* UPDATE THE TABLE*/
  end

  /* DLVRUSA START SBHARA 04/13/01*/

  SR2REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  SR2REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

  SR0CS-IO0800-U(); /* Update the table row*/

  if (converseVar.validationMsgNum != 0)
    return;
  end

  if (SR0CM001.XWHCD != "02") /* for COLEHAAN should not update*/
                                   /* VOPPKH04*/

    /* WMS-SUPP START VDASAR 11/27/01*/
    /* update the prepaid flag in Voppkh01 is so in srord01*/
    OPHREC.XWHCD = SR2REC.XWHCD;
    OP1REC.OP1CUOID = SR2REC.OP1CUOID;
    OP1REC.OP1NORID = SR2REC.OP1NORID;
    SR0CS-SELECT-ORDER(); /* Select order from VOPPKH01*/

    if (SR0CM001.OP1FTIND != OPHREC.OP1FTIND) /* PREPAID FLAG CHANGES*/
      OPHREC.OP1FTIND = SR0CM001.OP1FTIND; /* UPDATE THE TABLE*/

      OPHREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
      OPHREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

      SR0CS-IO1650-FU(); /* Update the table row*/

      if (converseVar.validationMsgNum != 0)
        return;
      end
    end

    /* WMS-SUPP end   VDASAR 11/27/01*/
  end
   /* ------------------------------------------------------------*/
   /* Call SR1170 to process stop shipment.*/
   /* ------------------------------------------------------------*/

  if (SR0CM001.SR-STOP-ORD-SHP-FL != SR2REC.SR-STOP-ORD-SHP-FL
   && SR0CM001.SR-STOP-ORD-SHP-FL == "Y") /* Stopped ship*/

    set SRFREC empty;

    SRFREC.XWHCD = SR0CM001.XWHCD;
    SRFREC.PK1PKSCH = SR0CM001.PK1PKSCH;
    SRFREC.OP1CUOID = SR0CM001.OP1CUOID;
    SRFREC.OP1NORID = SR0CM001.OP1NORID;

    SRFREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
    SRFREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

    SR0CS-SR1170(); /* Stopped ship subroutine*/

  end

   /* ------------------------------------------------------------*/
   /* Recalculate total bol cartons when nbr of cartons changed.*/
   /* Sr2rec doesn't need to be updated for movers whse with mult BOL's*/
   /* ------------------------------------------------------------*/

  if (SR0CW00.XWTCD == "01" && SR0CW00.XWHSTKLF == "Y" /* Mover's whse*/
   && SR2REC.SR2BLLSU == 99)                           /* Multiple BOL's*/

  else
    if (SR0CM001.PK1NBCTN != SR0CW01.PK1NBCTN) /* Nbr of cartons*/

      SR0CW01.SR2TNBCT = 0;

      set SR2REC empty;

      SR2REC.XWHCD = SR0CW01.XWHCD;
      SR2REC.PK1BLLAD = SR0CW01.PK1BLLAD;
      SR2REC.SR2BLLSU = SR0CW01.SR2BLLSU;

      SR0CS-IO0800-S3(); /* Select cursor dship.vsrord01*/

      SR0CS-IO0800-N3(); /* Fetch first row*/

      while (SQLCA.VAGen_SQLCODE == 0)

        SR0CW01.SR2TNBCT = SR0CW01.SR2TNBCT + SR2REC.PK1NBCTN;

        SR0CS-IO0800-N3(); /* Fetch next row*/

      end

      SR0CS-IO0800-C3(); /* Close dship.vsrord01 cursor*/

      /* ------------------------------------------------------------*/
      /* Update BOL cartons.*/
      /* ------------------------------------------------------------*/


      set SR2REC empty;

      SR2REC.XWHCD = SR0CW01.XWHCD;
      SR2REC.PK1BLLAD = SR0CW01.PK1BLLAD;
      SR2REC.SR2BLLSU = SR0CW01.SR2BLLSU;


      SR0CS-IO0800-S3(); /* Select cursor dship.vsrord01*/

      SR0CS-IO0800-N3(); /* Fetch first row*/

      while (SQLCA.VAGen_SQLCODE == 0)

        SR2REC.SR2TNBCT = SR0CW01.SR2TNBCT;
        SR2REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
        SR2REC.ZZZCHGDT = XX0XW01.XX0XWDAT;

        SR0CS-IO0800-U(); /* Update dship.vsrord01*/

        SR0CS-IO0800-N3(); /* Fetch next row*/

      end

      SR0CS-IO0800-C3(); /* Close dship.vsrord01 cursor*/

    end
  end

  if (SR0CW00.SR0CW-AZHDR-UPD-FL == "Y")

    set VAZHDR01 empty;
    VAZHDR01.XWH-WHSE-CD = SR0CW01.XWHCD;
    VAZHDR01.PK-BILL-OF-LADING = SR0CW01.PK1BLLAD;
    VAZHDR01.PK-BOL-SUB-NBR = SR0CW01.SR2BLLSU;
    SR0CS-VAZHDR01-S(); /* get original azhdr*/
    if (SR0CM001.TF2PRONO != SR0CW01.TF2PRONO) /* Pro Number*/
      VAZHDR01.TF-PRO-NBR = SR0CM001.TF2PRONO;
    end
    if (SR0CM001.PK1NBCTN != SR0CW01.PK1NBCTN) /* Nbr of crtn*/
      VAZHDR01.SR-TOT-NBR-CARTONS = VAZHDR01.SR-TOT-NBR-CARTONS       + (SR0CM001.PK1NBCTN - SR0CW01.PK1NBCTN);
    end
    if (SR0CM001.PK1WT[1] != SR0CW01.PK1WT) /* weight*/
      VAZHDR01.AZ-TOT-SHPMT-WT = VAZHDR01.AZ-TOT-SHPMT-WT       + (SR0CM001.PK1WT[1] - SR0CW01.PK1WT);
    end
    VAZHDR01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
    VAZHDR01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;
    SR0CS-VAZHDR01-U(); /* update azhdr with crtn # or wgt*/
                                   /* change*/

  end

  if (SR0CW00.SR0CW-AZORD-UPD-FL == "Y"
  )
    VAZORD01.XWH-WHSE-CD = SR0CW01.XWHCD;
    VAZORD01.PK-BILL-OF-LADING = SR0CW01.PK1BLLAD;
    VAZORD01.PK-BOL-SUB-NBR = SR0CW01.SR2BLLSU;
    VAZORD01.OP-CUST-ORD-ID = SR0CW01.OP1CUOID;
    VAZORD01.OP-NIKE-ORD-ID = SR0CW01.OP1NORID;

    SR0CS-VAZORD01-S(); /* get original azord*/

    if (SR0CM001.OP1CUPO != VAZORD01.OP-CUST-PO)
      VAZORD01.OP-CUST-PO = SR0CM001.OP1CUPO;
    end

    if (SR0CM001.PK1NBCTN != SR0CW01.PK1NBCTN) /* Nbr of crtn*/
      VAZORD01.AZ-TOT-ORD-CARTONS = VAZORD01.AZ-TOT-ORD-CARTONS       + (SR0CM001.PK1NBCTN - SR0CW01.PK1NBCTN);
    end
    if (SR0CM001.PK1WT[1] != SR0CW01.PK1WT) /* weight*/
      VAZORD01.AZ-TOT-ORD-CART-WT = VAZORD01.AZ-TOT-ORD-CART-WT       + (SR0CM001.PK1WT[1] - SR0CW01.PK1WT);
    end

    VAZORD01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
    VAZORD01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;
    SR0CS-VAZORD01-U(); /* update azord with po, crtn # or wgt*/
                                   /* change*/

  end

  if (SR0CW00.SR0CW-SPBOL-UPD-FL == "Y")

    SR0CS-200(); /* Select DSHIP.VSPBOL01*/

    if (VAGen_SQLCODE == 0) /* If record exists*/
      SR0CS-210(); /* Update it*/
    else
      SR0CS-220(); /* Otherwise, build it*/
      SR0CS-230(); /* and insert it*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Commit all changes and refresh the data to be displayed.*/
   /* ------------------------------------------------------------*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit(); /* Commit all changes*/

  SRWREC.XXXERRID = "50000"; /* Message location*/

  SR0CW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/


end // end SR0C-50000

// Select dship.vazord01
Function SR0CS-150()
   /* -------------------------------------------------------------*/

                 /* select unique dship.vazord01*/

   /* ------------------------------------------------------------*/


  call "VAZORD01" ("S ", SQLCA, VAZORD01) {isNoRefresh = yes, isExternal = yes}; /* access AZ order*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "SR0CS-150"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "SELECT VAZORD01"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAZORD01"; /* Table view name*/
  SR0CW00.SR0CW-LIT1 = "WHS ";
  SR0CW00.SR0CW-WHS = SR0CM001.XWHCD;
  SR0CW00.SR0CW-LIT2 = " SCH ";
  SR0CW00.SR0CW-SCH = SR0CM001.PK1PKSCH;
  SR0CW00.SR0CW-LIT3 = " BOL ";
  SR0CW00.SR0CW-NBR = SR0CM001.PK1BLLAD;
  SR0CW00.SR0CW-SUB-NBR = SR0CM001.SR2BLLSU;
  TA1REC.TA1TBLKE = SR0CW00.SR0CW-ERR-KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end SR0CS-150

// get PK1WT for movers' whse
Function SR0CS-180()
   /* -------------------------------------------------------------*/

  SR0CS-200(); /* select dship.vspbol01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    if (VSPBOL01.SHP-CHG-OVRD-AMT > 0)
      SR0CW01.SR2SHPCG = VSPBOL01.SHP-CHG-OVRD-AMT; /* Shipping charges*/
    end
    if (VSPBOL01.CRTN-OVRD-QTY > 0)
      SR0CW01.PK1NBCTN = VSPBOL01.CRTN-OVRD-QTY; /* Nbr of cartons*/
    end
    if (VSPBOL01.CRTN-OVRD-TOT-QTY > 0)
      SR0CW01.SR2TNBCT = VSPBOL01.CRTN-OVRD-TOT-QTY; /* BOL cartons*/
    end
    if (VSPBOL01.CRTN-OVRD-WT > 0)
      SR0CW01.PK1WT = VSPBOL01.CRTN-OVRD-WT; /* Weight*/
      return;
    end
  end

  /* If weight found on VSPBOL01 record, we don't need to go futher...*/

  if (SR2REC.SR1PKSFL == "Y") /* use weight summed in IO VAZCTN01*/
    SR0CW01.PK1WT = AZFREC.IO-TOT-PK-ACTL-CRTN-WT; /* weight*/
  else
    SR0CS-181(); /* get weight from packing list item records*/
    SR0CW01.PK1WT = SR0CW-EXPC-TOT-ORD-WT;
  end


end // end SR0CS-180

// calculate expected weight
Function SR0CS-181()
  SR0CS35(); /* declare vsplit01 cursor*/
  SR0CW01.SR0CW-EXPC-TOT-ORD-WT = 0;
  SR0CW01.SR0CW-PREV-CRTN-NBR = 0;
  SR0CS36(); /* fetch first vsplit01 row*/

  while (SQLCA.VAGen_SQLCODE == 0)
    if (PWPREC.PKDNCSQN == SR0CW01.SR0CW-PREV-CRTN-NBR)

    else
      SR0CW01.SR0CW-EXPC-TOT-ORD-WT = SR0CW01.SR0CW-EXPC-TOT-ORD-WT                    + PWPREC.PK-EXPC-CRTN-WT;
      SR0CW01.SR0CW-PREV-CRTN-NBR = PWPREC.PKDNCSQN;
    end
    SR0CS36(); /* fetch next vsplit01 row*/
  end

  SR0CS37(); /* close vsplit01 cursor*/

end // end SR0CS-181

// Select dship.vspbol01
Function SR0CS-200()
   /* -------------------------------------------------------------*/

                 /* select unique dship.vspbol01*/

   /* ------------------------------------------------------------*/

  set VSPBOL01 empty;
  SQLCA.VAGen_SQLCODE = 0;

  VSPBOL01.XWH-WHSE-CD = SR0CW01.XWHCD;
  VSPBOL01.PK-PICK-SCHED-NBR = SR0CW01.PK1PKSCH;
  VSPBOL01.OP-CUST-ORD-ID = SR0CW01.OP1CUOID;
  VSPBOL01.OP-NIKE-ORD-ID = SR0CW01.OP1NORID;
  VSPBOL01.PK-BILL-OF-LADING = SR0CW01.PK1BLLAD;
  VSPBOL01.PK-BOL-SUB-NBR = SR0CW01.SR2BLLSU;

  call "VSPBOL01" ("S ", SQLCA, VSPBOL01) {isNoRefresh = yes, isExternal = yes}; /* access VSPBOL01*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or not found*/

      return;

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "SR0CS-200"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "SELECT VSPBOL01"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSPBOL01"; /* Table view name*/
  SR0CW00.SR0CW-LIT1 = "WHS ";
  SR0CW00.SR0CW-WHS = SR0CM001.XWHCD;
  SR0CW00.SR0CW-LIT2 = " SCH ";
  SR0CW00.SR0CW-SCH = SR0CM001.PK1PKSCH;
  SR0CW00.SR0CW-LIT3 = " BOL ";
  SR0CW00.SR0CW-NBR = SR0CM001.PK1BLLAD;
  SR0CW00.SR0CW-SUB-NBR = SR0CM001.SR2BLLSU;
  TA1REC.TA1TBLKE = SR0CW00.SR0CW-ERR-KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end SR0CS-200

// update dship.vspbol01
Function SR0CS-210()
   /* -------------------------------------------------------------*/

               /* update dship.vspbol01*/

   /* ------------------------------------------------------------*/


  if (SR0CM001.SR2SHPCG != SR0CW01.SR2SHPCG) /* Shipping charges*/
    VSPBOL01.SHP-CHG-OVRD-AMT = SR0CM001.SR2SHPCG;
    VSPBOL01.SR-SHP-CHG = SR0CW01.SR2SHPCG;
  end

  if (SR0CM001.PK1NBCTN != SR0CW01.PK1NBCTN) /* Nbr of cartons*/
    VSPBOL01.CRTN-OVRD-QTY = SR0CM001.PK1NBCTN;
    VSPBOL01.CRTN-OVRD-TOT-QTY = SR0CM001.SR2TNBCT;
    VSPBOL01.PK-NBR-OF-CARTONS = SR0CW01.PK1NBCTN;
    VSPBOL01.SR-TOT-NBR-CARTONS = SR0CW01.SR2TNBCT;
  end

  if (SR0CM001.PK1WT[1] != SR0CW01.PK1WT) /* Weight*/
    VSPBOL01.CRTN-OVRD-WT = SR0CM001.PK1WT[1];
    VSPBOL01.PK-WEIGHT = SR0CW01.PK1WT;
  end

  VSPBOL01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* Change date*/
  VSPBOL01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* Change time*/

  call "VSPBOL01" ("U ", SQLCA, VSPBOL01) {isNoRefresh = yes, isExternal = yes}; /* update AZ order*/


   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "SR0CS-210"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "UPDATE VSPBOL01"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSPBOL01"; /* Table view name*/
  SR0CW00.SR0CW-LIT1 = "WHS ";
  SR0CW00.SR0CW-WHS = SR0CM001.XWHCD;
  SR0CW00.SR0CW-LIT2 = " SCH ";
  SR0CW00.SR0CW-SCH = SR0CM001.PK1PKSCH;
  SR0CW00.SR0CW-LIT3 = " BOL ";
  SR0CW00.SR0CW-NBR = SR0CM001.PK1BLLAD;
  SR0CW00.SR0CW-SUB-NBR = SR0CM001.SR2BLLSU;
  TA1REC.TA1TBLKE = SR0CW00.SR0CW-ERR-KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end SR0CS-210

// build dship.vspbol01 record
Function SR0CS-220()
   /* -------------------------------------------------------------*/

               /* build dship.vspbol01 record*/

   /* ------------------------------------------------------------*/

  set VSPBOL01 empty;

  VSPBOL01.XWH-WHSE-CD = SR2REC.XWHCD;
  VSPBOL01.PK-PICK-SCHED-NBR = SR2REC.PK1PKSCH;
  VSPBOL01.OP-CUST-ORD-ID = SR2REC.OP1CUOID;
  VSPBOL01.OP-NIKE-ORD-ID = SR2REC.OP1NORID;
  VSPBOL01.PK-BILL-OF-LADING = SR2REC.PK1BLLAD;
  VSPBOL01.PK-BOL-SUB-NBR = SR0CM001.SR2BLLSU;
  VSPBOL01.SR-TOT-NBR-CARTONS = SR0CW01.SR2TNBCT;
  VSPBOL01.PK-WEIGHT = SR0CW01.PK1WT;
  VSPBOL01.PK-NBR-OF-CARTONS = SR0CW01.PK1NBCTN;
  VSPBOL01.SR-SHP-CHG = SR0CW01.SR2SHPCG;

  if (SR0CM001.SR2SHPCG != SR0CW01.SR2SHPCG) /* Shipping charges*/
    VSPBOL01.SHP-CHG-OVRD-AMT = SR0CM001.SR2SHPCG;
  end

  if (SR0CM001.PK1NBCTN != SR0CW01.PK1NBCTN) /* Nbr of cartons*/
    VSPBOL01.CRTN-OVRD-QTY = SR0CM001.PK1NBCTN;
    VSPBOL01.CRTN-OVRD-TOT-QTY = SR0CM001.SR2TNBCT;
  end

  if (SR0CM001.PK1WT[1] != SR0CW01.PK1WT) /* Weight*/
    VSPBOL01.CRTN-OVRD-WT = SR0CM001.PK1WT[1];
  end

  VSPBOL01.TF-CARR-CD = SR2REC.TF1CARCD;
  VSPBOL01.TF-CARR-NM = SR2REC.TF1CARNM;
  VSPBOL01.TF-PRO-NBR = SR2REC.TF2PRONO;
  VSPBOL01.OP-ONETIME-SHIP-FL = SR2REC.OP11TMSF;
  VSPBOL01.OP-CUST-PO = SR2REC.OP1CUPO;
  VSPBOL01.SR-PICK-STAT-FL = SR2REC.SR1PKSFL;
  VSPBOL01.SR-PICK-STAT-DT = SR2REC.SR1PKSDT;
  VSPBOL01.TS-NIKE-PL-NBR = SR2REC.TSIPLNBR;
  VSPBOL01.SR-SPC-IVC-INST = SR2REC.SR2SPINI;
  VSPBOL01.SR-EST-PK-WT = SR2REC.SR-EST-PK-WT;
  VSPBOL01.SR-TOT-ORD-FT3 = SR2REC.SR2TOTCF;
  VSPBOL01.SR-SHP-QTY = SR2REC.SR2QTYSH;
  VSPBOL01.SR-SHP-DT = SR2REC.SR1SHPDT;

  VSPBOL01.ZZ-SDT = XX0XW01.XX0XWDAT; /* Insert date*/


end // end SR0CS-220

// insert dship.vspbol01
Function SR0CS-230()
   /* -------------------------------------------------------------*/

               /* insert dship.vspbol01*/

   /* ------------------------------------------------------------*/

  SQLCA.VAGen_SQLCODE = 0;
  call "VSPBOL01" ("A ", SQLCA, VSPBOL01) {isNoRefresh = yes, isExternal = yes}; /* update AZ order*/


   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "SR0CS-230"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "INSERT VSPBOL01"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSPBOL01"; /* Table view name*/
  SR0CW00.SR0CW-LIT1 = "WHS ";
  SR0CW00.SR0CW-WHS = SR0CM001.XWHCD;
  SR0CW00.SR0CW-LIT2 = " SCH ";
  SR0CW00.SR0CW-SCH = SR0CM001.PK1PKSCH;
  SR0CW00.SR0CW-LIT3 = " BOL ";
  SR0CW00.SR0CW-NBR = SR0CM001.PK1BLLAD;
  SR0CW00.SR0CW-SUB-NBR = SR0CM001.SR2BLLSU;
  TA1REC.TA1TBLKE = SR0CW00.SR0CW-ERR-KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end SR0CS-230

// get BOL carton count
Function SR0CS-300()
   /* -------------------------------------------------------------*/

   /* get the count of all carton for this BOL*/

   /* ------------------------------------------------------------*/

  set AZFREC empty;
  set VAZCTN01 empty;

  VAZCTN01.XWH-WHSE-CD = SR0CW01.XWHCD;
  VAZCTN01.PK-BILL-OF-LADING = SR0CW01.PK1BLLAD;
  VAZCTN01.PK-BOL-SUB-NBR = SR0CW01.SR2BLLSU;
  VAZCTN01.OP-CUST-ORD-ID = -1;
  VAZCTN01.OP-NIKE-ORD-ID = -1;
  VAZCTN01.PK-PICK-SCHED-NBR = -1;
  VAZCTN01.PK-MOVERS-STAT-CD = "*";

  SQLCA.VAGen_SQLCODE = 0;
  AZFREC.AZFTASK = "C ";

  call "VAZCTN01" (AZFREC, SQLCA, VAZCTN01) {isNoRefresh = yes, isExternal = yes}; /* get count of crtns*/
  if (SQLCA.VAGen_SQLCODE == 0)
  else
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "COUNT";
    TA1REC.TA1DBASE = "DSHIP";
    TA1REC.TA1TBLVU = "VAZCTN01";
    TA1REC.TA1PGMNM = SRWREC.XXXERRID;
    SR0CW00.SR0CW-LIT1 = "WHS ";
    SR0CW00.SR0CW-WHS = SR0CM001.XWHCD;
    SR0CW00.SR0CW-LIT2 = " SCH ";
    SR0CW00.SR0CW-SCH = SR0CM001.PK1PKSCH;
    SR0CW00.SR0CW-LIT3 = " BOL ";
    SR0CW00.SR0CW-NBR = SR0CM001.PK1BLLAD;
    SR0CW00.SR0CW-SUB-NBR = SR0CM001.SR2BLLSU;
    TA1REC.TA1TBLKE = SR0CW00.SR0CW-ERR-KEY; /* Table key*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    exit stack;
  end


end // end SR0CS-300

// get tot chgs & wt for order
Function SR0CS-310()
   /* ****************************************************************/

   /* get the total charges and weight for this order/bol*/

   /* ****************************************************************/


  set AZFREC empty;
  set VAZCTN01 empty;

  VAZCTN01.XWH-WHSE-CD = SR0CW01.XWHCD;
  VAZCTN01.PK-BILL-OF-LADING = SR0CW01.PK1BLLAD;
  VAZCTN01.PK-BOL-SUB-NBR = SR0CW01.SR2BLLSU;
  VAZCTN01.OP-CUST-ORD-ID = SR0CW01.OP1CUOID;
  VAZCTN01.OP-NIKE-ORD-ID = SR0CW01.OP1NORID;
  VAZCTN01.PK-PICK-SCHED-NBR = -1;
  VAZCTN01.PK-CRTN-SEQ-NBR = -1;

  SQLCA.VAGen_SQLCODE = 0;
  AZFREC.AZFTASK = "SA";
  call "VAZCTN01" (AZFREC, SQLCA, VAZCTN01) {isNoRefresh = yes, isExternal = yes}; /* get sum of charges*/

  if (SQLCA.VAGen_SQLCODE == 0)
  else
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSHIP";
    TA1REC.TA1TBLVU = "VAZCTN01";
    TA1REC.TA1PGMNM = "SR0CS310";
    TA1REC.TA1LOC = "GETTING SUM VAZCTN01";
    SR0CW00.SR0CW-LIT1 = "WHS ";
    SR0CW00.SR0CW-WHS = SR0CM001.XWHCD;
    SR0CW00.SR0CW-LIT2 = " SCH ";
    SR0CW00.SR0CW-SCH = SR0CM001.PK1PKSCH;
    SR0CW00.SR0CW-LIT3 = " BOL ";
    SR0CW00.SR0CW-NBR = SR0CM001.PK1BLLAD;
    SR0CW00.SR0CW-SUB-NBR = SR0CM001.SR2BLLSU;
    TA1REC.TA1TBLKE = SR0CW00.SR0CW-ERR-KEY; /* Table key*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    exit stack;
  end


end // end SR0CS-310

// Select the table row
Function SR0CS-IO0790-S()
   /* ------------------------------------------------------------*/
   /* Select requested row from dship.vsrhdr01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0790" ("S ", SQLCA, SR1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not found or not available, return an error message.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "IO0790S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 100)    /* and not found*/

    converseLib.validationFailed(38); /* ShipRec header does not exists*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  end

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not availble*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2"; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "SELECT UNIQUE VSRHDR01"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP"; /* Data base name*/
  TA1REC.TA1TBLVU = "VSRHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = SR1REC.SR1KEYS; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;


end // end SR0CS-IO0790-S

// Close selected set cursor
Function SR0CS-IO0800-C3()
   /* ------------------------------------------------------------*/
   /* Close cursor on dship.vsrord01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0800" ("C3", SQLCA, SR2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "IO0800C3"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(124); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  converseLib.clearScreen();
   /* Clear screen before display*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "CLOSE CURSOR ON VSRORD01"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSRORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = SR2REC.SR2KEY2; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end SR0CS-IO0800-C3

// Close selected set cursor
Function SR0CS-IO0800-CS()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0800" ("CS", SQLCA, SR2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "IO0800CS"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(124); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSRORD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SR0CS-IO0800-CS

// Fetch next row in cursor
Function SR0CS-IO0800-N3()
   /* ------------------------------------------------------------*/
   /* Fetch next row in cursor.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0800" ("N3", SQLCA, SR2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* If found*/
     || SQLCA.VAGen_SQLCODE == +100) /* or not found*/
      return;
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "IO0800N3"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "FETCH FROM VSRORD01 CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSRORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = SR2REC.SR2KEY2; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end SR0CS-IO0800-N3

// Select the table row
Function SR0CS-IO0800-S()
   /* ------------------------------------------------------------*/
   /* Select requested row from dship.vsrord01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0800" ("S ", SQLCA, SR2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == 0 /* If found*/
     || SQLCA.VAGen_SQLCODE == +100) /* or not found*/
      return;
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not found or not available, return an error message.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "IO0800S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not availble*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2"; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "SELECT UNIQUE VSRORD01"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP"; /* Data base name*/
  TA1REC.TA1TBLVU = "VSRORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = SR2REC.SR2KEYS; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;


end // end SR0CS-IO0800-S

// Select set and open cursor
Function SR0CS-IO0800-S3()
   /* ------------------------------------------------------------*/
   /* Selected the requested set of rows from dship.vsrord01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0800" ("S3", SQLCA, SR2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "IO0800S3"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "SELECT SCAN VSRORD01"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSRORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = SR2REC.SR2KEY2; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end SR0CS-IO0800-S3

// Fetch next row in cursor
Function SR0CS-IO0800-SN()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0800" ("SN", SQLCA, SR2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* If found*/
     || SQLCA.VAGen_SQLCODE == +100) /* or not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "IO0800SN"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSRORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = SR2REC.SR2KEYS; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SR0CS-IO0800-SN

// Select set and open cursor
Function SR0CS-IO0800-SS()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0800" ("SS", SQLCA, SR2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "IO0800SS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSRORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = SR2REC.SR2KEYS; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SR0CS-IO0800-SS

// Update table row
Function SR0CS-IO0800-U()
   /* ------------------------------------------------------------*/
   /* Update requested row from dship.vsrord01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0800" ("U ", SQLCA, SR2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* If found*/
      return;
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* If not found*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/

      SRWREC.XXXERRID = "IO0800U"; /* Message location*/
      converseLib.validationFailed(141); /* Update by another*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "IO0800U"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2"; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE VSRORD01"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP"; /* Data base name*/
  TA1REC.TA1TBLVU = "VSRORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = SR2REC.SR2KEYS; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;


end // end SR0CS-IO0800-U

// Select the table row
Function SR0CS-IO0860-S()
   /* ------------------------------------------------------------*/
   /* Select requested row from dpick.vcarr001.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0860" ("S ", SQLCA, TF1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* If found*/
     || SQLCA.VAGen_SQLCODE == +100) /* or not found*/
      return;
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "IO0860S"; /* Message location*/

  if (sysVar.errorCode == "00000000"
   && SQLCA.VAGen_SQLCODE == -911) /* If resource not available*/

    converseLib.validationFailed(134); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2"; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "READING DB2 VCARR001"; /* Description*/
  TA1REC.TA1DBASE = "DPICK"; /* Data base name*/
  TA1REC.TA1TBLVU = "VCARR001"; /* Table view name*/
  TA1REC.TA1TBLKE = TF1REC.TF1KEYS; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;


end // end SR0CS-IO0860-S

// Update table row
Function SR0CS-IO1650-FU()
   /* ------------------------------------------------------------*/
   /* Update requested row from dship.vsrord01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO1650" ("FU", SQLCA, OPHREC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* If found*/
      return;
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* If not found*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/

      SRWREC.XXXERRID = "IO1650U"; /* Message location*/
      converseLib.validationFailed(025); /* Update by another*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "IO1650U"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2"; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE VOPPKH01"; /* Description*/
  TA1REC.TA1DBASE = "DPICK"; /* Data base name*/
  TA1REC.TA1TBLVU = "VOPPKH01"; /* Table view name*/
  TA1REC.TA1TBLKE = OPHREC.OP1KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;


end // end SR0CS-IO1650-FU

// Select the table row
Function SR0CS-SELECT-ORDER()
   /* ------------------------------------------------------------*/
   /* Select requested row from dorder.vorhdr01 or voppkh04.*/
   /* ------------------------------------------------------------*/

  XX0XW03.XWHCD = SR0CM001.XWHCD;
                                  /* Move whse to working record*/
  /* DLVRUSA START*/

  OP1REC.XWHCD = SR0CM001.XWHCD;

  /* XX0XS-SELECT-ORDER;            /* Select order fr VORHDR01/VOPPKH01*/
  XSPKS-SELECT-ORDER(); /* Select order fr VORHDR01/VOPPKH04*/

  /* DLVRUSA END*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == 0 /* If found*/
     || SQLCA.VAGen_SQLCODE == +100) /* or not found*/
      return;
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not found or not available, return an error message.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "ORDER-S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not availble*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2"; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "SELECT UNIQUE ORDER"; /* Description*/
  TA1REC.TA1DBASE = "DORDER"; /* Data base name*/
  TA1REC.TA1TBLVU = "ORH-OPPK"; /* Table view name*/
  TA1REC.TA1TBLKE = OP1REC.OP1KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;


end // end SR0CS-SELECT-ORDER

// Stopped ship subroutine
Function SR0CS-SR1170()
   /* ------------------------------------------------------------*/
   /* Call the subroutine to process the stop shipment request.*/
   /* ------------------------------------------------------------*/

  try
    call "SR1170" (SRFREC) {isNoRefresh = yes, isExternal = yes};
  end /* Stop shipment*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SRFREC.SRF-RTN-CD == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    TA1REC.TA1-GROUP = SRFREC.TA1-GROUP; /* Error information*/
    TAEREC.SQLCAREC = SRFREC.SQLCAREC; /* SQL Commarea*/

  else

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "PROCESS STOP ORDER SHIPMENT"; /* Description*/
    TAEREC.TAEDESC1 = "CALL TO SUBROUTINE SR1170 FAILED";
    TAEREC.TAEDESC2 = sysVar.errorCode; /* CSP return code*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  SRWREC.XXXERRID = "SR1170"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SRFREC.SRF-RTN-CD == 1)        /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error reporting*/

  exit stack; /* Exit to display map*/


end // end SR0CS-SR1170

// Read temp storage from SR0R
Function SR0CS-TA0050-R()
   /* ------------------------------------------------------------*/
   /* Read next page of orders from temporary storage queue.*/
   /* ------------------------------------------------------------*/

  SR0CW02.XXX-TEMP-STG-LNTH = 304;
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (SR0CW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  SRWREC.XXXERRID = "TA0050R"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(124); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "READ TEMP STORAGE FROM SR0R"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SR0CS-TA0050-R

// Read temp storage from SR0T
Function SR0CS-TA0050-T-R()
   /* ------------------------------------------------------------*/
   /* Read next page of orders from temporary storage queue.*/
   /* ------------------------------------------------------------*/

  SR0CW04.XXX-TEMP-STG-LNTH = 334;
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (SR0CW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Read page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  SRWREC.XXXERRID = "TA0050TR"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(124); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "READ TEMP STORAGE FROM SR0T"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SR0CS-TA0050-T-R

// select vazhdr01 row
Function SR0CS-VAZHDR01-S()

  try
    call "VAZHDR01" ("S ", SQLCA, VAZHDR01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* If found*/
    return;
  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "VAZHDRS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2"; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "SELECT VAZHDR01"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP"; /* Data base name*/
  TA1REC.TA1TBLVU = "VAZHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VAZHDR01.VAZHDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;

end // end SR0CS-VAZHDR01-S

// Update vazhdr01 row
Function SR0CS-VAZHDR01-U()

  try
    call "VAZHDR01" ("U ", SQLCA, VAZHDR01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* If found*/
    return;
  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "VAZHDRU"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2"; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE VAZHDR01"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP"; /* Data base name*/
  TA1REC.TA1TBLVU = "VAZHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VAZHDR01.VAZHDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;

end // end SR0CS-VAZHDR01-U

// select vazord01 row
Function SR0CS-VAZORD01-S()

  try
    call "VAZORD01" ("S ", SQLCA, VAZORD01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* If found*/
    return;
  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "VAZORDS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2"; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "SELECT VAZORD01"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP"; /* Data base name*/
  TA1REC.TA1TBLVU = "VAZORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = VAZORD01.VAZORD01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;

end // end SR0CS-VAZORD01-S

// Update vazord01 row
Function SR0CS-VAZORD01-U()

  try
    call "VAZORD01" ("U ", SQLCA, VAZORD01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* If found*/
    return;
  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "VAZORDU"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2"; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE VAZORD01"; /* Description*/
  TA1REC.TA1DBASE = "DSHIP"; /* Data base name*/
  TA1REC.TA1TBLVU = "VAZORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = VAZORD01.VAZORD01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;

end // end SR0CS-VAZORD01-U

// Declare Cursor for Vsplit01
Function SR0CS35()
  set SQLCA empty;
  set PWPREC empty;

  PWPREC.XWHCD = SR0CW01.XWHCD;
  PWPREC.TSIPLNBR = SR2REC.TSIPLNBR;
  SR0CW01.SR0CW-CUST-ORD-ID = SR0CW01.OP1CUOID;
  PWPREC.OP1PARTN = SR0CW01.SR0CW-CUST-ORD-DIGIT[9];
  PWPREC.OP1CUOID = SR0CW01.OP1CUOID;
  PWPREC.OP1NORID = SR0CW01.OP1NORID;

  call "IO5760" ("SB", SQLCA, PWPREC) {isNoRefresh = yes, isExternal = yes}; /* select scan*/

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(28); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(29); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "SR0CS35 "; /* Process name*/
    TA1REC.TA1LOC = "DECLARE CURSOR FOR VSPLIT01 TABLE";
    TA1REC.TA1MAP = "SR0CM001"; /* Map name*/
    TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSPLIT01"; /* Table view name*/
    TA1REC.TA1TBLKE = PWPREC.PWPKEY;

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    SR0CM001.XXXERRID = "SR0CS35"; /* Error location*/
    return; /* Return to previous process*/
  end
   /* *************************************************************/
end // end SR0CS35

// Fetch row of Vsplit01
Function SR0CS36()

  set SQLCA empty;

  call "IO5760" ("NB", SQLCA, PWPREC) {isNoRefresh = yes, isExternal = yes}; /* select next*/

      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(28); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(29); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "SR0CS36"; /* Process name*/
    TA1REC.TA1LOC = "OBTAIN SPLIT ITEM TABLE ROW";
    TA1REC.TA1MAP = "SR0CM001"; /* Map name*/
    TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSPLIT01"; /* Table view name*/
    TA1REC.TA1TBLKE = PWPREC.PWPKEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    SR0CM001.XXXERRID = "SR0CS36"; /* Error location*/
    return; /* Return to previous process*/
  end

end // end SR0CS36

// Close Cursor for VSPLIT01
Function SR0CS37()

  set SQLCA empty;

  call "IO5760" ("CB", SQLCA, PWPREC) {isNoRefresh = yes, isExternal = yes}; /* select next*/

      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(28); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(29); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "SR0CS37 "; /* Process name*/
    TA1REC.TA1LOC = "CLOSE CURSOR OF VSPLIT01 TAB";
    TA1REC.TA1MAP = "SR0CM001"; /* Map name*/
    TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSPLIT01"; /* Table view name*/
    TA1REC.TA1TBLKE = PWPREC.PWPKEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    SR0CM001.XXXERRID = "SR0CS37"; /* Error location*/
    return; /* Return to previous process*/
  end

end // end SR0CS37

// Multiple BOLs pop-up window
Function XPSR-500()
   /* ************************************************************/
   /* *  Multiple BOLs processing is done accordingly:          **/
   /* *    - setup the key and open cursor for dship.vazctn01   **/
   /* *    - fetch each row and save BOL sub nbr, carrier code  **/
   /* *      and carton count                                   **/
   /* *    - close cursor                                       **/
   /* *    - format and display XXSRM001 map                    **/
   /* *    - check if selection has been made before exiting    **/
   /* ************************************************************/

  set VAZCTN01 empty; /* Initialize record area*/

  XPSR-510(); /* Open cursor for BOL Sub's*/
  XPSR-520(); /* Fetch next BOL Sub*/

  XPSRMW01.XPSR-SUB-NBR-SCHED-IDX = 1; /* Bol sub nbr index*/

  while (SQLCA.VAGen_SQLCODE == 0)

    XPSRMW01.SR2BLLSU[XPSR-SUB-NBR-SCHED-IDX] = VAZCTN01.PK-BOL-SUB-NBR;

    XPSR-570(); /* get carton count*/

    XPSRMW01.XPSR-CARTON-COUNT[XPSR-SUB-NBR-SCHED-IDX] = AZFREC.AZF-AZ-CRTN-CNT;

    XPSR-560(); /* get carrier code*/

    XPSRMW01.TF1CARCD[XPSR-SUB-NBR-SCHED-IDX] = VAZHDR01.TF-CARR-CD;

    XPSRMW01.XPSR-TOTAL-SUB-NBR = XPSRMW01.XPSR-SUB-NBR-SCHED-IDX;

    XPSRMW01.XPSR-SUB-NBR-SCHED-IDX = XPSRMW01.XPSR-SUB-NBR-SCHED-IDX + 1;

    if (XPSRMW01.XPSR-SUB-NBR-SCHED-IDX > 99)

      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1PGMNM = "XPSR-500";
      TA1REC.TA1LOC = "BOL SUB TBL SIZE EXCEEDED";
      TA1REC.TA1MAP = "SR0TM001";
      TA1REC.TA1DBASE = "DSHIP   ";
      TA1REC.TA1TBLVU = "VAZCTN01";
      TA1REC.TA1TBLKE = VAZCTN01.VAZCTN01-KEY;

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};

    end

    XPSR-520(); /* Fetch next dship.vazctn01 row*/

  end

  XPSR-530(); /* Close cursor*/

  set XXSRM001 initial; /* Clear pop-up window*/

  XPSRMW01.XPSR-SUB-NBR-SCHED-IDX = 1; /* Initialize bol sub nbr index*/

  while (XPSRMW01.XPSR-POPUP-WINDOW-DONE-FL == " ") /* Pop-up window done*/

    XPSR-540(); /* Format display pop-up window*/

  end

  converseLib.clearScreen();
   /* Re-set original map*/

end // end XPSR-500

// Cursor 'S5' - VAZCTN01
Function XPSR-510()

  VAZCTN01.XWH-WHSE-CD = SR0CW01.XWHCD;
  VAZCTN01.PK-PICK-SCHED-NBR = SR0CW01.PK1PKSCH;
  VAZCTN01.OP-CUST-ORD-ID = SR0CW01.OP1CUOID;
  VAZCTN01.OP-NIKE-ORD-ID = SR0CW01.OP1NORID;
  VAZCTN01.PK-BILL-OF-LADING = SR0CW01.PK1BLLAD;
  VAZCTN01.PK-BOL-SUB-NBR = -1;

  try
    call "VAZCTN01" ("S5", SQLCA, VAZCTN01) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000")

    if (SQLCA.VAGen_SQLCODE == 0)
      return;
    else

      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
      SRWREC.XXXERRID = "XPSR-510"; /* Module identification*/

      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(134); /* Data in use by another appl*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(124); /* Unexpected error occurred*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      end

    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "XPSR-510"; /* Process name*/
  TA1REC.TA1LOC = "SELECT SCAN BOL IN AZCTN";
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAZCTN01"; /* Table view name*/
  TA1REC.TA1TBLKE = VAZCTN01.VAZCTN01-KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diag routine*/

end // end XPSR-510

// Fetch 'N5' - VAZCtn01
Function XPSR-520()

  try
    call "VAZCTN01" ("N5", SQLCA, VAZCTN01) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000")

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    else

      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
      SRWREC.XXXERRID = "XPSR-520"; /* Module identification*/

      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(134); /* Data in use by another*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(124); /* Unexpected error occurred*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      end

    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "XPSR-520"; /* Process name*/
  TA1REC.TA1LOC = "SELECT NEXT BOL IN AZCTN";
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAZCTN01"; /* Table view name*/
  TA1REC.TA1TBLKE = VAZCTN01.VAZCTN01-KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diag routine*/

end // end XPSR-520

// Close 'C5' - VAZCtn01
Function XPSR-530()

  try
    call "VAZCTN01" ("C5", SQLCA, VAZCTN01) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000")

    if (SQLCA.VAGen_SQLCODE == 0)
      return;
    else

      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
      SRWREC.XXXERRID = "XPSR-530"; /* Module identification*/

      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(134); /* Data in use by another*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(124); /* Unexpected error occurred*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      end

    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "XPSR-530"; /* Process name*/
  TA1REC.TA1LOC = "CLOSE SCAN BOL IN AZCTN";
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAZCTN01"; /* Table view name*/
  TA1REC.TA1TBLKE = VAZCTN01.VAZCTN01-KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diag routine*/

end // end XPSR-530

// Format and display XXSRM001
Function XPSR-540()

  if (converseVar.eventKey is pa2)

    converseLib.validationFailed(178); /* Continue or cancel*/
    SRWREC.XXXERRID = "XPSR-540"; /* Module identification*/
    XPSRMW01.XPSR-POPUP-WINDOW-DONE-FL = "Y"; /* Pop-up window done*/
    return;

  end

  XPSR-550(); /* Check for select bol sub nbr*/

  if (converseVar.validationMsgNum == 0) /* If no error*/

    if (converseVar.eventKey is pf8) /* Forward browsing*/

      if (XPSRMW01.XPSR-SUB-NBR-SELECTED-FL == " ")
        if (XPSRMW01.XPSR-IDX-OF-MAP-LAST-SUB-NBR < 
        XPSRMW01.XPSR-TOTAL-SUB-NBR)
                                   /* Continue fward brws*/
          XPSRMW01.XPSR-SUB-NBR-SCHED-IDX = XPSRMW01.XPSR-IDX-OF-MAP-LAST-SUB-NBR + 1;
        else
          converseLib.validationFailed(98); /* Last page*/
          SRWREC.XXXERRID = "XPSR-540"; /* Module identification*/
        end
      else
        converseLib.validationFailed(177); /* Select is done, no browsing*/
        SRWREC.XXXERRID = "XPSR-540"; /* Module identification*/
      end

    else

      if (converseVar.eventKey is pf7) /* Backward browsing*/

        if (XPSRMW01.XPSR-SUB-NBR-SELECTED-FL == " ")
          if (XPSRMW01.XPSR-IDX-OF-MAP-FIRST-SUB-NBR > 10)
                                   /* Continue backward browsing*/
            XPSRMW01.XPSR-SUB-NBR-SCHED-IDX = XPSRMW01.XPSR-IDX-OF-MAP-FIRST-SUB-NBR - 10;
          else
            converseLib.validationFailed(99); /* No scroll back past 1st page*/
            SRWREC.XXXERRID = "XPSR-540"; /* Module identification*/
          end
        else
          converseLib.validationFailed(177); /* Select is done, no browsing*/
          SRWREC.XXXERRID = "XPSR-540"; /* Module identification*/
        end

      else
        if (converseVar.eventKey is enter)

          if (XPSRMW01.XPSR-SUB-NBR-SELECTED-FL == " ")
            if (XPSRMW01.XPSR-SUB-NBR-SCHED-IDX == 1 /* First time around*/
             && XXSRM001.PK1BLLAD == 0)             
               /* Next sentence*/
            else
              converseLib.validationFailed(143); /* Need to select*/
              SRWREC.XXXERRID = "XPSR-540"; /* Module identification*/
            end
          else
            XPSRMW01.XPSR-POPUP-WINDOW-DONE-FL = "Y";
                                   /* Pop-up window done*/
            return;
          end

        else

          converseLib.validationFailed(12); /* Invalid attention key*/
          SRWREC.XXXERRID = "XPSR-540"; /* Module identification*/

        end

      end

    end

    if (converseVar.validationMsgNum == 0) /* If no error*/

      set XXSRM001 initial; /* Clear pop-up window*/

      XXSRM001.OP1CUOID = SR0CW01.OP1CUOID;
      XXSRM001.PK1PKSCH = SR0CW01.PK1PKSCH;
      XXSRM001.XXSRMHDR = "             LIST OF BOLS "; /* heading*/
      XXSRM001.XXSRMTR1 = "              SELECT & ENTER          ";
      XXSRM001.XXSRMTR2 = "   PF7:BACK                   PF8:FRWD";

      XPSRMW01.XPSR-POPUP-WINDOW-IDX = 1;

      while (XPSRMW01.XPSR-SUB-NBR-SCHED-IDX <= XPSRMW01.XPSR-TOTAL-SUB-NBR
       && XPSRMW01.XPSR-POPUP-WINDOW-IDX <= 10)

        XXSRM001.PK1BLLAD[XPSR-POPUP-WINDOW-IDX] = SR0CW01.PK1BLLAD;

        XXSRM001.SR2BLLSU[XPSR-POPUP-WINDOW-IDX] = XPSRMW01.SR2BLLSU[XPSR-SUB-NBR-SCHED-IDX];

        XXSRM001.XXSRMCRT[XPSR-POPUP-WINDOW-IDX] = XPSRMW01.XPSR-CARTON-COUNT[XPSR-SUB-NBR-SCHED-IDX];

        XXSRM001.TF1CARCD[XPSR-POPUP-WINDOW-IDX] = XPSRMW01.TF1CARCD[XPSR-SUB-NBR-SCHED-IDX];

        set XXSRM001.XXSRMSEL[XPSR-POPUP-WINDOW-IDX] normal;
        set XXSRM001.XXSRMSEL[XPSR-POPUP-WINDOW-IDX] underline;

        if (XPSRMW01.XPSR-POPUP-WINDOW-IDX == 1)

          XPSRMW01.XPSR-IDX-OF-MAP-FIRST-SUB-NBR = XPSRMW01.XPSR-SUB-NBR-SCHED-IDX;

        end

        XPSRMW01.XPSR-IDX-OF-MAP-LAST-SUB-NBR = XPSRMW01.XPSR-SUB-NBR-SCHED-IDX;

        XPSRMW01.XPSR-SUB-NBR-SCHED-IDX = XPSRMW01.XPSR-SUB-NBR-SCHED-IDX + 1;

        XPSRMW01.XPSR-POPUP-WINDOW-IDX = XPSRMW01.XPSR-POPUP-WINDOW-IDX + 1;

      end

    end

  end

  XXSRM001.XXXERRID = SRWREC.XXXERRID;

  converse XXSRM001 ;

end // end XPSR-540

// Check for selected BOL sub nbr
Function XPSR-550()

  XPSRMW01.XPSR-POPUP-WINDOW-IDX = 1;

  while (XPSRMW01.XPSR-POPUP-WINDOW-IDX <= 10
   && XXSRM001.TF1CARCD[XPSR-POPUP-WINDOW-IDX] > 0)

    if (XXSRM001.XXSRMSEL[XPSR-POPUP-WINDOW-IDX] > " ")

      if (XXSRM001.XXSRMSEL[XPSR-POPUP-WINDOW-IDX] == "S")

        if (XPSRMW01.XPSR-SUB-NBR-SELECTED-FL == "Y")

          XPSRMW01.XPSR-SUB-NBR-SCHED-IDX = XPSRMW01.XPSR-IDX-OF-MAP-FIRST-SUB-NBR            + XPSRMW01.XPSR-POPUP-WINDOW-IDX - 1;

          if (XPSRMW01.SR2BLLSU[XPSR-SUB-NBR-SCHED-IDX]
           == XPSRMW01.XPSR-SELECTED-SUB-NBR)

            if (converseVar.eventKey is enter)
               /* Next sentence*/
            else

              converseLib.validationFailed(177); /* Select is done, no browsing*/
              set XXSRM001.XXSRMSEL[XPSR-POPUP-WINDOW-IDX] cursor, bold;
              SRWREC.XXXERRID = "XPSR-550"; /* Module identification*/

            end

          else

            converseLib.validationFailed(96); /* Cannot select more than one line*/
            set XXSRM001.XXSRMSEL[XPSR-POPUP-WINDOW-IDX] cursor, bold;
            SRWREC.XXXERRID = "XPSR-550"; /* Module identification*/

          end

        else

          XPSRMW01.XPSR-SUB-NBR-SELECTED-FL = "Y";

          XPSRMW01.XPSR-SUB-NBR-SCHED-IDX = XPSRMW01.XPSR-IDX-OF-MAP-FIRST-SUB-NBR            + XPSRMW01.XPSR-POPUP-WINDOW-IDX - 1;

          XPSRMW01.XPSR-SELECTED-SUB-NBR = XPSRMW01.SR2BLLSU[XPSR-SUB-NBR-SCHED-IDX];

        end

      else

        converseLib.validationFailed(95); /* Select value must be 's'*/
        set XXSRM001.XXSRMSEL[XPSR-POPUP-WINDOW-IDX] cursor, bold;
        SRWREC.XXXERRID = "XPSR-550"; /* Module identification*/

      end

    else

      if (XPSRMW01.XPSR-SUB-NBR-SELECTED-FL == "Y")

        XPSRMW01.XPSR-SUB-NBR-SCHED-IDX = XPSRMW01.XPSR-IDX-OF-MAP-FIRST-SUB-NBR          + XPSRMW01.XPSR-POPUP-WINDOW-IDX - 1;

        if (XPSRMW01.SR2BLLSU[XPSR-SUB-NBR-SCHED-IDX]
         == XPSRMW01.XPSR-SELECTED-SUB-NBR)

          XPSRMW01.XPSR-SUB-NBR-SELECTED-FL = " ";

          XPSRMW01.XPSR-SELECTED-SUB-NBR = 0;

        end

      end

    end

    XPSRMW01.XPSR-POPUP-WINDOW-IDX = XPSRMW01.XPSR-POPUP-WINDOW-IDX + 1;

  end


end // end XPSR-550

// * select unique dship.vazhdr01
Function XPSR-560()

  set VAZHDR01 empty; /* read AZ hdr for carrier nbr*/
  VAZHDR01.XWH-WHSE-CD = VAZCTN01.XWH-WHSE-CD;
  VAZHDR01.PK-BILL-OF-LADING = VAZCTN01.PK-BILL-OF-LADING;
  VAZHDR01.PK-BOL-SUB-NBR = VAZCTN01.PK-BOL-SUB-NBR;

  call "VAZHDR01" ("S ", SQLCA, VAZHDR01) {isNoRefresh = yes, isExternal = yes}; /* select AZ hdr*/

  if (sysVar.errorCode == "00000000")

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    else

      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
      SRWREC.XXXERRID = "XPSR-560"; /* Module identification*/

      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(134); /* Data in use by another*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(124); /* Unexpected error occurred*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      end

    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "XPSR-560"; /* Process name*/
  TA1REC.TA1LOC = "SELECT UNIQUE VAZHDR01";
  TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAZHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VAZHDR01.VAZHDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diag routine*/

end // end XPSR-560

// * get carton count
Function XPSR-570()

  set AZFREC empty;
  VAZCTN01.PK-MOVERS-STAT-CD = "*";
  AZFREC.AZFTASK = "C ";

  call "VAZCTN01" (AZFREC, SQLCA, VAZCTN01) {isNoRefresh = yes, isExternal = yes}; /* get count of crtns*/

  if (SQLCA.VAGen_SQLCODE == 0)
  else
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "COUNT";
    TA1REC.TA1DBASE = "DSHIP";
    TA1REC.TA1TBLVU = "VAZCTN01";
    TA1REC.TA1PGMNM = SRWREC.XXXERRID;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    exit stack;
  end


end // end XPSR-570

//*** RECORD=SR0CW00 ****
// ***********************************************************
// *  This is the working storage for SR0R misc data.        *
// *                                                         *
// ***********************************************************
// ***********************
Record SR0CW00 type basicRecord
  10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 XXX-INX-FLD-NBR XXX-INX-FLD-NBR ; 
  10 XXX-INX-LMT-NBR XXX-INX-LMT-NBR ; 
  10 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
  10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
  10 SR0CW-END-OF-SCHED-FL SR0CW-END-OF-SCHED-FL ; 
  10 SR0CW-ALL-ORDERS-FL SR0CW-ALL-ORDERS-FL ; 
  10 SR0CW-GOOD-ORDER-FL SR0CW-GOOD-ORDER-FL ; 
  10 SR0CW-PF3-PF5-FL SR0CW-PF3-PF5-FL ; 
  10 SR0CW-SR2WOGNB-UNPACK SR0CW-SR2WOGNB-UNPACK ; 
    15 SR0CW-OP1CUOID-UNPACK SR0CW-OP1CUOID-UNPACK ; 
      20 * num(8) ; 
      20 OP1PARTN OP1PARTN ; 
    15 SR0CW-OP1NORID-UNPACK SR0CW-OP1NORID-UNPACK ; 
  10 PK1WT PK1WT ; 
  10 SR2TOTCF SR2TOTCF ; 
  10 SR0CW-MAP-KEY-CHNG SR0CW-MAP-KEY-CHNG ; 
  10 XWTCD XWTCD ; 
  10 XWHSTKLF XWHSTKLF ; 
  10 SR0CW-ALLOW-STOP-SHP-UPD-FL SR0CW-ALLOW-STOP-SHP-UPD-FL ; 
  10 SR0CW-ALLOW-SHIP-FIELDS-UPD-FL SR0CW-ALLOW-SHIP-FIELDS-UPD-FL ; 
  10 SR0CW-DISP-ASN-NOT-SENT-MSG-FL SR0CW-DISP-ASN-NOT-SENT-MSG-FL ; 
  10 SR0CW-DIRECT-SHIP-FL SR0CW-DIRECT-SHIP-FL ; 
  10 SR0CW-SPBOL-UPD-FL SR0CW-SPBOL-UPD-FL ; 
  10 SR0CW-AZHDR-UPD-FL SR0CW-AZHDR-UPD-FL ; 
  10 SR0CW-AZORD-UPD-FL SR0CW-AZORD-UPD-FL ; 
  10 SR0CW-SCHED SR0CW-SCHED ; 
    15 SR0CW-SCHED-DIGIT SR0CW-SCHED-DIGIT [9] ; 
  10 SR0CW-SUB SR0CW-SUB ; 
  10 * char(1) ; 
  10 SR0CW-ERR-KEY SR0CW-ERR-KEY ; 
    15 SR0CW-LIT1 SR0CW-LIT1 ; 
    15 SR0CW-WHS SR0CW-WHS ; 
    15 SR0CW-LIT2 SR0CW-LIT2 ; 
    15 SR0CW-SCH SR0CW-SCH ; 
    15 SR0CW-LIT3 SR0CW-LIT3 ; 
    15 SR0CW-NBR SR0CW-NBR ; 
    15 * char(1) ; 
    15 SR0CW-SUB-NBR SR0CW-SUB-NBR ; 
  10 SR0CW-VSRORD01-ROW-INDEX SR0CW-VSRORD01-ROW-INDEX ; 
end // end SR0CW00

//*** RECORD=SR0CW01 ****
// ***********************************************************
// *  This is the working storage for SR0R Order List screen *
// *  (SR0RM200) for FROM BOL.                               *
// ***********************************************************
// DLVRUSA     04/12/01   SBHARA OP1FTIND  ADDED
// ***********************
Record SR0CW01 type basicRecord
  10 XWHCD XWHCD ; 
  10 SR0CW-UNIT-OF-MEASURE SR0CW-UNIT-OF-MEASURE ; 
  10 PK1PKSCH PK1PKSCH ; 
  10 OP1CUOID OP1CUOID ; 
  10 OP1NORID OP1NORID ; 
  10 PK1BLLAD PK1BLLAD ; 
  10 SR2BLLSU SR2BLLSU ; 
  10 SR1SHPDT SR1SHPDT ; 
  10 SR2WOGNB SR2WOGNB ; 
  10 OP1CUPO OP1CUPO ; 
  10 TF1CARCD TF1CARCD ; 
  10 TF1CARNM TF1CARNM ; 
  10 SR2SHPCG SR2SHPCG ; 
  10 TF2PRONO TF2PRONO ; 
  10 PK1NBCTN PK1NBCTN ; 
  10 SR2TNBCT SR2TNBCT ; 
  10 PK1WT PK1WT ; 
  10 SR2TOTCF SR2TOTCF ; 
  10 SR2QTYSH SR2QTYSH ; 
  10 SR-STOP-ORD-SHP-FL SR-STOP-ORD-SHP-FL ; 
  10 SR2SPINI SR2SPINI ; 
  10 ZZZCHGCT ZZZCHGCT ; 
  10 SR2GRP SR2GRP ; 
  10 SR0CW-PREV-CRTN-NBR SR0CW-PREV-CRTN-NBR ; 
  10 SR0CW-EXPC-TOT-ORD-WT SR0CW-EXPC-TOT-ORD-WT ; 
  10 SR0CW-CUST-ORD-ID SR0CW-CUST-ORD-ID ; 
    15 SR0CW-CUST-ORD-DIGIT SR0CW-CUST-ORD-DIGIT [9] ; 
  10 OP1FTIND OP1FTIND ; 
end // end SR0CW01

//*** RECORD=SR0CW02 ****
// ***********************************************************
// *  This is the working storage for SR0R Order List screen *
// *  (SR0RM200) for FROM BOL.                               *
// ***********************************************************
// ***********************
Record SR0CW02 type basicRecord
  10 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  10 SR0CW-ORDER-DATA SR0CW-ORDER-DATA [10] ; 
    15 XXX-LN-SEL-IND XXX-LN-SEL-IND ; 
    15 OP1CUOID OP1CUOID ; 
    15 OP1NORID OP1NORID ; 
    15 PK1PKSCH PK1PKSCH ; 
    15 PK1NBCTN PK1NBCTN ; 
    15 SR2QTYSH SR2QTYSH ; 
    15 PK1WT PK1WT ; 
    15 SR2SHPCG SR2SHPCG ; 
    15 ZZZCHGCT ZZZCHGCT ; 
end // end SR0CW02

//*** RECORD=SR0CW04 ****
// ***********************************************************
// *  This is the working storage for the temp storage record*
// *  passed from SR0T.                                      *
// ***********************************************************
// ***********************
Record SR0CW04 type basicRecord
  10 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  10 SR0CW-ORDER-DATA-4 SR0CW-ORDER-DATA-4 [10] ; 
    15 XXX-LN-SEL-IND XXX-LN-SEL-IND ; 
    15 OP1CUOID OP1CUOID ; 
    15 OP1NORID OP1NORID ; 
    15 AZ-ORD-STAT-CD AZ-ORD-STAT-CD ; 
    15 PK1PKSCH PK1PKSCH ; 
    15 SR0CW-MULTI-SCHED-FL SR0CW-MULTI-SCHED-FL ; 
    15 PK1NBCTN PK1NBCTN ; 
    15 SR2QTYSH SR2QTYSH ; 
    15 PK1WT PK1WT ; 
    15 SR2SHPCG SR2SHPCG ; 
    15 ZZZCHGCT ZZZCHGCT ; 
end // end SR0CW04

//*** RECORD=SR0CW05 ****
// ***********************************************************
// *  This is the table used for storing rows from the       *
// *  vsrord01 db2 table for use in scrolling thru orders   *
// ***********************************************************
// ***********************
Record SR0CW05 type basicRecord
  10 SR0CW-VSRORD01-ROW SR0CW-VSRORD01-ROW [2500] ; 
end // end SR0CW05

//*** RECORD=SRFREC ****
// ;************************* sr0cw04 *************************
// ;
// ;     passing-record for sr1170 stop shipment subroutine
// ;
// ;***********************************************************
// **********************
Record SRFREC type basicRecord
  5 XWHCD XWHCD ; 
  5 PK1PKSCH PK1PKSCH ; 
  5 OP1CUOID OP1CUOID ; 
  5 OP1NORID OP1NORID ; 
  5 SR1PKSDT SR1PKSDT ; 
  5 ZZZCHGDT ZZZCHGDT ; 
  5 ZZZCHGTM ZZZCHGTM ; 
  5 SRF-RTN-CD SRF-RTN-CD ; 
  5 TA1-GROUP TA1-GROUP ; 
  5 SQLCAREC SQLCAREC ; 
  5 * char(2189) ; 
end // end SRFREC

DataItem SR0CW-ALL-ORDERS-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XWH_STK_LOC_FL
DataItem SR0CW-ALLOW-SHIP-FIELDS-UPD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XWH_STK_LOC_FL
DataItem SR0CW-ALLOW-STOP-SHP-UPD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-AZHDR-UPD-FL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-AZORD-UPD-FL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-CUST-ORD-DIGIT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SR0CW-CUST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XWH_STK_LOC_FL
DataItem SR0CW-DIRECT-SHIP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XWH_STK_LOC_FL
DataItem SR0CW-DISP-ASN-NOT-SENT-MSG-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-END-OF-SCHED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-ERR-KEY char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-EXPC-TOT-ORD-WT decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SR0CW-GOOD-ORDER-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-LIT1 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-LIT2 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-LIT3 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-MAP-KEY-CHNG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-MULTI-SCHED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-NBR num(13)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-cust-ord-id
DataItem SR0CW-OP1CUOID-UNPACK num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// op-nike-ord-id
DataItem SR0CW-OP1NORID-UNPACK num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Order data
DataItem SR0CW-ORDER-DATA char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Order data
DataItem SR0CW-ORDER-DATA-4 char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-PF3-PF5-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-PREV-CRTN-NBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SR0CW-SCH num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XWH_STK_LOC_FL
DataItem SR0CW-SCHED num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XWH_STK_LOC_FL
DataItem SR0CW-SCHED-DIGIT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XWH_STK_LOC_FL
DataItem SR0CW-SPBOL-UPD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sr-wog-nbr
DataItem SR0CW-SR2WOGNB-UNPACK num(13)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-SUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SR0CW-SUB-NBR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SR0CW-UNIT-OF-MEASURE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Temporary storage length
DataItem SR0CW-VSRORD01-ROW char(346)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// Index for map fields
DataItem SR0CW-VSRORD01-ROW-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem SR0CW-WHS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// return code
DataItem SRF-RTN-CD num(1)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = " ", inputRequired = no
}
end

