package ae09;

import ab.common.AB-LOGO-PLC-CD;
import ab.common.ABWREC;
import ab.common.AE09TBL;
import corpcom2.XP1REC;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPXX001;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPG202;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XDM-DIM-CD;
import corpz3.ZZ-CHNG-CNT;
import corpz3.ZZ-SDT;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import op.common.OP-CUST-ORD-ID;
import op.common.OP-LINE-ITEM-NBR;
import op.common.OP-ORD-PART-CHAR;
import op.common.OPABREC;
import pc.common.PC3REC;
import pc.common.PC6REC;
import pg.common.PG2REC;
import sy.common.SY-COLR-CD-ID;
import sy.common.SY-STY-NBR;
import ta.common.TA1REC;
import ta.common.TAEREC;
import vv.common.VCRSTH02;
//*** PROGRAM=AE09 ****
// CRESTED LOGO PLACEMENT INFORMATION SCREEN
// 
// Overview:  ADD/MAINTENACE CRESTED LOGO INFORMATION
// 
// Date Created:  05/10/93
// 
// Maintenance History:
// 
//     Date     By Whom       Overview of Changes Made
// ------------------------------------------------------------
//   05/10/93    slb         Program Created
//   01/06/94    slb         Add an edit to edit the logo
//                           placement against a new table
//                           logotbl.
//   04/28/94    jather      log 1003. renamed causera to
//                           ca-user-workarea-4k to hold opwrec
//                           which has increased to 3072 bytes.
//   06/06/95    CRAINE      ADDED CODES BL AND BR TO AE09TBL
//   07/07/95    ALUFT (PDG) Recompiled with expanded table
//                           DABUY.VCRSTH01.
//   07/??/95    ALUFT (PDG) Added AE09S02 to read VCRSTH01,
//                           to determine if AE09 screen is
//                           displayed, or we transfer to AE08.
// Y2KFIX   12/22/97  ksumme  Y2K MODIFICATIONS MADE TO:
//                            regen only to pull in new
//                               ABWREC and XP1REC
// *********************
Program AE09 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  ABWREC ABWREC; // record
  AE09W01 AE09W01; // record
  AE09W02 AE09W02; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  OPABREC OPABREC; // record
  PC3REC PC3REC; // record
  PC6REC PC6REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record
  VCRSTH02 VCRSTH02; // record
  VCRSTI01 VCRSTI01; // record
  XP1REC XP1REC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use AE09TBL {deleteAfterUse = yes}; // table
  use AE09M.AE09M001,  // forms
      AE09M.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AE09-0000: AE09-0000();
    ;
    ;
    goto AE09-0001;
    ;
    ;
    AE09-0001: AE09-0001();
     /* --------------------------------------------------------------*/
     /* FLOW TO CONVERSE THE PROTOTYPE PROCESS.*/
     /* ----------------------------------------------------------------*/
    ;
    goto AE09-0001;
    ;
  end // end main
end // end AE09

// Application Initialization
Function AE09-0000()
  ;
   /* ****************************************************/
   /* *** DO NOT ALLOW AE09 TO BE RUN UNLESS CAFROMAP ****/
   /* *** IS OM0O, OP0J, OM0Q, OM0J OR OM0B           ****/
   /* *** or AE08.                                    ****/
   /* ****************************************************/
  ;
  if (COMMAREA.CAFROMAP == "OM0Q"
   || COMMAREA.CAFROMAP == "OP0J"
   || COMMAREA.CAFROMAP == "OM0O"
   || COMMAREA.CAFROMAP == "OM0J"
   || COMMAREA.CAFROMAP == "OM0B"
   || COMMAREA.CAFROMAP == "AE08")
    /* CONTINUE*/
  else
    COMMAREA.CAMSG = "CANNOT FAST PATH TO AE09";
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    XSEXIT();
  end
  ;
     /* **********************************************************/
     /* * this process performs the following functions:        **/
     /* *     - checks entry security                           **/
     /* *     - moves the working storage and order processing  **/
     /* *       record from the incoming common area            **/
     /* *     - initializes the map fields                      **/
     /* **********************************************************/
  ;
  ;
      /* check entry security*/
  ;
  XSENTRY();
  ;
   /* ****************************************************/
   /* *** set segmented trans id                      ****/
   /* ****************************************************/
  ;
  CAEZSAP = sysVar.transactionID;
  CAEZSG12 = "AE";
  CAEZSG4 = "9";
  sysVar.transactionID = CAEZSAP;
  ;
   /* ********************************************/
   /* INITIALIZE PROGRAM*/
  ;
  set ABWREC empty;
  set OPABREC empty;
  set AE09W01 empty;
  set AE09W02 empty;
  ;
   /* *************************************************************/
   /* retrieve user common area*/
  ;
  OPABREC.OPAB-COMMON-REC = COMMAREA.CA-USER-WORKAREA-4K;
  ;
  ;
   /* ----------------------------------------------------------------*/
   /* Read DABUY.VCRSTH02, the cresting header record, to determine*/
   /* if AB-ALL-ITM-FL, entered on AE08, = 'Y'.  If so, this indicates*/
   /* that AE09 does not need to be accessed, and we will transfer*/
   /* instead to AE08, keeping the CAFROMAP = the program which*/
   /* transferred to AE09.*/
   /* ----------------------------------------------------------------*/
  ;
  AE09S02();
  ;
  if (AE09W01.AE09W-DATA-FLAG == "Y") /* contains AB-ALL-ITM-FL from table*/
    CACURRAP = COMMAREA.CAFROMAP;
    COMMAREA.CATOAP = "AE08";
    XSEXIT();
  else
    AE09W01.AE09W-DATA-FLAG = " ";
  end
  ;
  ;
   /* ********************************************/
   /* INITIALIZE MAP*/
  ;
  set AE09M001 initial;
  ;
  AE09M001.XXXCURDT = VGVar.currentShortGregorianDate;
  ;
  AE09M001.SY-STY-NBR = OPABREC.SY-STY-NBR;
  AE09M001.SY-COLR-CD-ID = OPABREC.SY-COLR-CD-ID;
  ;
  AE09M001.AB-NIKE-SELCOLR-FL = "Y"; /* /default nike selects*/
  ;
end // end AE09-0000

// Driver process for 100 map
Function AE09-0001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  AE09-1100(); /* Obtain the data to display*/
  ;
  AE09-1200(); /* Format and display the map*/
  ;
  AE09-1300(); /* check attention keys*/
  ;
  AE09-1400(); /* Reset fields to normal intensity -*/
  ;
  AE09-1500(); /* Verify the entered data*/
  ;
  AE09-1600(); /* Process valid input request*/
  ;
  ;
end // end AE09-0001

// Obtain the data to display
Function AE09-1100()
   /* ------------------------------------------------------------*/
   /* If data was not requested, return to the previous process.*/
   /* Purge any existing queue in temporary storage.*/
   /* Check for User Response and process appropriate data base.*/
   /* If no errors found from data retrieve, indicate that the*/
     /* request for data was completed.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (converseVar.validationMsgNum != 0 /* Errors detected*/
   && converseVar.validationMsgNum != 13) /* update error from contension*/
    return; /* Return to previous process*/
  end
  ;
  ;
  AE09S01(); /* Process DABUY.VCRSTI01 rows*/
  ;
   /* ------------------------------------------------------------*/
   /* Retrieve style and color descriptions from dprodg.vsyclr01.*/
   /* ------------------------------------------------------------*/
  ;
  set PG2REC empty;
  PG2REC.SY1STNBR = OPABREC.SY-STY-NBR;
  PG2REC.SY2CLRID = OPABREC.SY-COLR-CD-ID;
  PG2REC.XGPCD = "03";
  PG2REC.XDMCD = OPABREC.XDM-DIM-CD;
  ;
  XSPG202();
  ;
   /* ------------------------------------------------------------*/
   /* Check to see the po has already been printed*/
   /* ------------------------------------------------------------*/
  ;
  AE09W-PO-PRINT-FLAG = "N";
  ;
  AE09S11(); /* OPEN DPRODC.VPOITM01*/
  ;
  while (SQLCA.VAGen_SQLCODE != 100
   && AE09W-PO-PRINT-FLAG == "N")
    AE09S12(); /* FETCH DPRODC.VPOITM01*/
  end
  ;
  AE09S13(); /* CLOSE DPRODC.VPOITM01*/
  ;
  if (AE09W01.AE09W-PO-PRINT-FLAG == "Y")
    converseLib.validationFailed(187); /* po already printed*/
    if (COMMAREA.CAALVL[4] == "Y"
     && COMMAREA.CACLVL[4] == "Y"
     && COMMAREA.CAILVL[4] == "Y")
      return;
    else
      converseLib.validationFailed(186); /* po already printed - no data change*/
    end
  end
  ;
end // end AE09-1100

// Format and display map 1
Function AE09-1200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (converseVar.validationMsgNum == 0   
   || converseVar.validationMsgNum == 186 /* po already exists - no data change allowed*/
   || converseVar.validationMsgNum == 187) /* po already exists*/
    set AE09M001 initial;
    ;
    AE09M001.SY-STY-NBR = OPABREC.SY-STY-NBR;
    AE09M001.SY-COLR-CD-ID = OPABREC.SY-COLR-CD-ID;
    ;
    AE09M001.SY-SHORT-STY-NM = PG2REC.SY1SSTNM;
    AE09M001.SY-STY-COLR-ABRV = PG2REC.SY2CLRAB;
    ;
    AE09M001.AB-LOGO-PLC-CD = AE09W02.AB-LOGO-PLC-CD;
    AE09M001.AB-NIKE-SELCOLR-FL = AE09W02.AB-NIKE-SELCOLR-FL;
    AE09M001.AB-COLR-SEL-DESC1 = AE09W02.AB-COLR-SEL-DESC1;
    AE09M001.AB-COLR-SEL-DESC2 = AE09W02.AB-COLR-SEL-DESC2;
    AE09M001.AB-COLR-SEL-DESC3 = AE09W02.AB-COLR-SEL-DESC3;
    AE09M001.AB-COLR-SEL-DESC4 = AE09W02.AB-COLR-SEL-DESC4;
    AE09M001.AB-COLR-SEL-DESC5 = AE09W02.AB-COLR-SEL-DESC5;
    AE09M001.AB-COLR-SEL-DESC6 = AE09W02.AB-COLR-SEL-DESC6;
    ;
    set AE09M001.AB-LOGO-PLC-CD cursor; /* Set cursor at map dtl area*/
    ;
  end
  ;
  if (converseVar.validationMsgNum == 186)
    set AE09M001.XXXPRCNM cursor;
    set AE09M001.AB-LOGO-PLC-CD skip;
    set AE09M001.AB-NIKE-SELCOLR-FL skip;
    set AE09M001.AB-COLR-SEL-DESC1 skip;
    set AE09M001.AB-COLR-SEL-DESC2 skip;
    set AE09M001.AB-COLR-SEL-DESC3 skip;
    set AE09M001.AB-COLR-SEL-DESC4 skip;
    set AE09M001.AB-COLR-SEL-DESC5 skip;
    set AE09M001.AB-COLR-SEL-DESC6 skip;
  end
  ;
  if (converseVar.validationMsgNum != 0) /* Message to display*/
   /* SET AE09M001 CLEAR;*/
    set AE09M001 alarm; /* Indicate sound alarm*/
    AE09M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  end
  ;
  ;
  AE09M001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  AE09M001.XXXPRCNM = "AE09"; /* APPL NAME*/
  ;
  ;
  converse AE09M001 ;
  ;
  ;
   /* ----------------------------------------------------------*/
    /* Clear Message Work Area*/
   /* ----------------------------------------------------------*/
  ;
  converseLib.validationFailed(0); /* RESET ERROR MESSAGE NUMBER*/
  ;
  ;
end // end AE09-1200

// Check attention identifier
Function AE09-1300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    ABWREC.ABWPRCSN = "1300"; /* Process number*/
    AE09M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  ;
end // end AE09-1300

// Reset highlighted flds
Function AE09-1400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set AE09M001.AB-LOGO-PLC-CD initialAttributes;
  set AE09M001.AB-NIKE-SELCOLR-FL initialAttributes;
  set AE09M001.AB-COLR-SEL-DESC1 initialAttributes;
  set AE09M001.AB-COLR-SEL-DESC2 initialAttributes;
  set AE09M001.AB-COLR-SEL-DESC3 initialAttributes;
  set AE09M001.AB-COLR-SEL-DESC4 initialAttributes;
  set AE09M001.AB-COLR-SEL-DESC5 initialAttributes;
  set AE09M001.AB-COLR-SEL-DESC6 initialAttributes;
  ;
  AE09M001.XXXPRCNM = "AE09    "; /* Reset process name*/
  ABWREC.ABWERLOC = "AE09    "; /* Reset process name*/
  ;
  ;
end // end AE09-1400

// Verify the entered data
Function AE09-1500()
   /* ------------------------------------------------------------*/
   /* Verify any changed data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/
  ;
  AE09S19();
  ;
  if (converseVar.validationMsgNum != 0) /* Errors found*/
    ;
    converseLib.clearScreen();
    
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  ;
end // end AE09-1500

// converse LOGOTBL pop up window
Function AE09-1510()
   /* ------------------------------------------------------------*/
  ;
              /* CONVERSE POP UP WINDOW*/
  ;
      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/
  ;
   /* ------------------------------------------------------------*/
  ;
   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/
  ;
  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/
    ;
     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/
    ;
    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end
    ;
    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "              SELECT & ENTER          ";
    XX0XM001.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";
    ;
     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/
    ;
    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && AE09TBL.AB-LOGO-PLC-CD[XX0XWCT1] != "99") /* Or end of data*/
        XX0XM001.XX0XMCD[XX0XWCT2] = AE09TBL.AB-LOGO-PLC-CD[XX0XWCT1];
        XX0XM001.XX0XMDES[XX0XWCT2] = AE09TBL.AB-LOGO-DESC[XX0XWCT1];
        XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
        if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
          XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
        end
        set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
        XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end
    ;
     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/
    ;
    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        XX0XM001.XX0XMCD[XX0XWCT2] = AE09TBL.AB-LOGO-PLC-CD[XX0XWCT1];
        XX0XM001.XX0XMDES[XX0XWCT2] = AE09TBL.AB-LOGO-DESC[XX0XWCT1];
        XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
        set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
        XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end
  ;
  ;
  converse XX0XM001 ;
  ;
  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/
  ;
     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/
  ;
  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end
  ;
    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/
  ;
  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && AE09TBL.AB-LOGO-PLC-CD[XX0XWCT1] == "99") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/
        ;
         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/
        ;
        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end
  ;
  ;
end // end AE09-1510

// Process valid input request
Function AE09-1600()
   /* ------------------------------------------------------------*/
   /* Update any changed data.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (AE09W01.AE09W-UPDATE-FLAG == "Y") /* * detail info changed*/
    XX0XS01(); /* Get system date/time*/
    ;
    if (AE09W01.AE09W-DATA-FLAG == "N")
      AE09-1610(); /* Create new DB record*/
    else
      AE09-1620(); /* update existing db record*/
    end
    ;
  end
  ;
  ;
  if (converseVar.validationMsgNum == 0)
    if (converseVar.eventKey is enter)
      COMMAREA.CA-USER-WORKAREA-4K = OPABREC.OPAB-COMMON-REC;
      COMMAREA.CACURRAP = "AE09";
      COMMAREA.CATOAP = OPABREC.OPAB-TO-APPL;
      COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
      COMMAREA.CACURRAP = COMMAREA.CATOAP;
      COMMAREA.CATOAP = " ";
      sysVar.transferName = COMMAREA.CACURRAP;
      transfer to transaction sysVar.transferName passing COMMAREA;
    end
  end
  ;
  ;
end // end AE09-1600

// Insert DABUY.VCRSTI01 row
Function AE09-1610()
   /* ------------------------------------------------------------*/
   /* Move update items to corresponding DB fields.*/
   /* Call IO module to perform actual create DB record process.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *==================**/
   /* *  Build DB Keys   **/
   /* *==================**/
  ;
  set VCRSTI01 empty; /* Reset Wk Storage field*/
  ;
   /* *=================================**/
   /* *  Move Update Items into VCRSTI01**/
   /* *=================================**/
  ;
  ;
  VCRSTI01.OP-CUST-ORD-ID = OPABREC.OP-CUST-ORD-ID;
  VCRSTI01.OP-ORD-PART-CHAR = OPABREC.OP-ORD-PART-CHAR;
  VCRSTI01.OP-LINE-ITEM-NBR = OPABREC.OP-LINE-ITEM-NBR;
  VCRSTI01.XDM-DIM-CD = OPABREC.XDM-DIM-CD;
  VCRSTI01.SY-STY-NBR = OPABREC.SY-STY-NBR;
  VCRSTI01.SY-COLR-CD-ID = OPABREC.SY-COLR-CD-ID;
  ;
  VCRSTI01.AB-LOGO-PLC-CD = AE09W02.AB-LOGO-PLC-CD;
  VCRSTI01.AB-NIKE-SELCOLR-FL = AE09W02.AB-NIKE-SELCOLR-FL;
  VCRSTI01.AB-COLR-SEL-DESC1 = AE09W02.AB-COLR-SEL-DESC1;
  VCRSTI01.AB-COLR-SEL-DESC2 = AE09W02.AB-COLR-SEL-DESC2;
  VCRSTI01.AB-COLR-SEL-DESC3 = AE09W02.AB-COLR-SEL-DESC3;
  VCRSTI01.AB-COLR-SEL-DESC4 = AE09W02.AB-COLR-SEL-DESC4;
  VCRSTI01.AB-COLR-SEL-DESC5 = AE09W02.AB-COLR-SEL-DESC5;
  VCRSTI01.AB-COLR-SEL-DESC6 = AE09W02.AB-COLR-SEL-DESC6;
  ;
  VCRSTI01.ZZZSDT = XX0XW01.XX0XWDAT; /* CREATION DATE*/
  VCRSTI01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VCRSTI01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VCRSTI01.ZZZCHGCT = 0; /* CHANGE COUNT*/
  ;
  ;
   /* *==============================**/
   /* *  Insert DABUY.VCRSTI01  Row  **/
   /* *==============================**/
  ;
  try
    call "IO6740" ("A ", SQLCA, VCRSTI01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to calling process*/
    ;
  end
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "1610"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "INSERT SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCRSTI01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE09M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE09-1610

// Update DABUY.VCRSTI01 row
Function AE09-1620()
   /* ------------------------------------------------------------*/
   /* Move update items to corresponding DB fields.*/
   /* Call IO module to perform actual update process.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *==================**/
   /* *  Build DB Keys   **/
   /* *==================**/
  ;
  set VCRSTI01 empty; /* Reset Wk Storage field*/
  ;
  VCRSTI01.OP-CUST-ORD-ID = OPABREC.OP-CUST-ORD-ID;
  VCRSTI01.OP-ORD-PART-CHAR = OPABREC.OP-ORD-PART-CHAR;
  VCRSTI01.OP-LINE-ITEM-NBR = OPABREC.OP-LINE-ITEM-NBR;
  VCRSTI01.SY-STY-NBR = OPABREC.SY-STY-NBR;
  VCRSTI01.SY-COLR-CD-ID = OPABREC.SY-COLR-CD-ID;
  VCRSTI01.XDM-DIM-CD = "00";
  ;
  VCRSTI01.AB-LOGO-PLC-CD = AE09W02.AB-LOGO-PLC-CD;
  VCRSTI01.AB-NIKE-SELCOLR-FL = AE09W02.AB-NIKE-SELCOLR-FL;
  VCRSTI01.AB-COLR-SEL-DESC1 = AE09W02.AB-COLR-SEL-DESC1;
  VCRSTI01.AB-COLR-SEL-DESC2 = AE09W02.AB-COLR-SEL-DESC2;
  VCRSTI01.AB-COLR-SEL-DESC3 = AE09W02.AB-COLR-SEL-DESC3;
  VCRSTI01.AB-COLR-SEL-DESC4 = AE09W02.AB-COLR-SEL-DESC4;
  VCRSTI01.AB-COLR-SEL-DESC5 = AE09W02.AB-COLR-SEL-DESC5;
  VCRSTI01.AB-COLR-SEL-DESC6 = AE09W02.AB-COLR-SEL-DESC6;
  ;
  VCRSTI01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VCRSTI01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VCRSTI01.ZZZCHGCT = AE09W02.ZZ-CHNG-CNT; /* Change cnt*/
  ;
  ;
  ;
   /* *==============================**/
   /* *  Update DABUY.VSAFTY01  Row  **/
   /* *==============================**/
  ;
  try
    call "IO6740" ("U ", SQLCA, VCRSTI01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    AE09W02.ZZ-CHNG-CNT = AE09W02.ZZ-CHNG-CNT + 1;
    ;
    return; /* Return to calling process*/
    ;
  end
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row updated by other user/s*/
      ABWREC.ABWSWR = "Y"; /* reselect same row*/
      ABWREC.ABWPRCSN = "1620"; /* Process number*/
      converseLib.validationFailed(13); /* Indicate concurrent update*/
      exit stack; /* Exit to redisplay map*/
    else
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end
    end
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "1620"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "UPDATE SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCRSTI01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE09M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE09-1620

// Retrieve logo placement info
Function AE09S01()
  ;
  ;
   /* ------------------------------------------------------------*/
   /* get cresting information from dabuy.vcrsti01*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set VCRSTI01 empty; /* initialize db record*/
  VCRSTI01.OP-CUST-ORD-ID = OPABREC.OP-CUST-ORD-ID; /* SO NUMBER*/
  VCRSTI01.OP-ORD-PART-CHAR = OPABREC.OP-ORD-PART-CHAR; /* SO NUMBER*/
  VCRSTI01.OP-LINE-ITEM-NBR = OPABREC.OP-LINE-ITEM-NBR; /* SO NUMBER*/
  VCRSTI01.SY-STY-NBR = OPABREC.SY-STY-NBR;
  VCRSTI01.SY-COLR-CD-ID = OPABREC.SY-COLR-CD-ID;
  VCRSTI01.XDM-DIM-CD = OPABREC.XDM-DIM-CD;
  ;
  ;
   /* *=============================**/
   /* *  Access DABUY.VCRSTI01 DB   **/
   /* *=============================**/
  ;
  try
    call "IO6740" ("S ", SQLCA, VCRSTI01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      AE09W02.AB-LOGO-PLC-CD = VCRSTI01.AB-LOGO-PLC-CD;
      AE09W02.AB-NIKE-SELCOLR-FL = VCRSTI01.AB-NIKE-SELCOLR-FL;
      AE09W02.AB-COLR-SEL-DESC1 = VCRSTI01.AB-COLR-SEL-DESC1;
      AE09W02.AB-COLR-SEL-DESC2 = VCRSTI01.AB-COLR-SEL-DESC2;
      AE09W02.AB-COLR-SEL-DESC3 = VCRSTI01.AB-COLR-SEL-DESC3;
      AE09W02.AB-COLR-SEL-DESC4 = VCRSTI01.AB-COLR-SEL-DESC4;
      AE09W02.AB-COLR-SEL-DESC5 = VCRSTI01.AB-COLR-SEL-DESC5;
      AE09W02.AB-COLR-SEL-DESC6 = VCRSTI01.AB-COLR-SEL-DESC6;
      AE09W02.ZZ-CHNG-CNT = VCRSTI01.ZZZCHGCT;
      AE09W01.AE09W-DATA-FLAG = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      AE09W02.AB-LOGO-PLC-CD = " ";
      AE09W02.AB-NIKE-SELCOLR-FL = " ";
      AE09W02.AB-COLR-SEL-DESC1 = " ";
      AE09W02.AB-COLR-SEL-DESC2 = " ";
      AE09W02.AB-COLR-SEL-DESC3 = " ";
      AE09W02.AB-COLR-SEL-DESC4 = " ";
      AE09W02.AB-COLR-SEL-DESC5 = " ";
      AE09W02.AB-COLR-SEL-DESC6 = " ";
      AE09W01.AE09W-DATA-FLAG = "N";
      return;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S01 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DABUY.VCRSTI01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCRSTI01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AE09M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE09S01

// Retrieve Contact Header Info.
Function AE09S02()
  ;
   /* ------------------------------------------------------------*/
   /* get contact header information from DABUY.VCRSTH02*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set VCRSTH02 empty; /* initialize db record*/
  VCRSTH02.OP-CUST-ORD-ID = OPABREC.OP-CUST-ORD-ID; /* SO NUMBER*/
  VCRSTH02.OP-ORD-PART-CHAR = OPABREC.OP-ORD-PART-CHAR; /* SO NUMBER*/
  ;
  ;
   /* *=============================**/
   /* *  Access DABUY.VCRSTH02 DB   **/
   /* *=============================**/
  ;
  try
    call "VCRSTH02" ("S ", SQLCA, VCRSTH02) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save AB-ALL-ITM-FL TO Working Storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      AE09W01.AE09W-DATA-FLAG = VCRSTH02.AB-ALL-ITM-FL;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S02 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DABUY.VCRSTH02 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCRSTH02"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AE09M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE09S02

// Edit Logo Placement
Function AE09S10()
  AE09W01.AE09W-AB-LOGO-PLC-CD = AE09M001.AB-LOGO-PLC-CD;
  ;
  XP1REC.XP1ERRFL = " "; /* Reset error indicator*/
  ;
  if (AE09W01.AE09W-AB-LOGO-PLC-CD == "?") /* XP1REC field eq spaces*/
    AE09S15();
  end
  ;
  if (XP1REC.XP1ERRFL == "1") /* Erroneous data detected*/
    ;
    AE09W01.AE09W-AB-LOGO-PLC-CD = " "; /* Space out save field*/
    set AE09M001.AB-LOGO-PLC-CD cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 182; /* Indicate error message*/
    converseLib.validationFailed(182);
    ABWREC.ABWPRCSN = "S10 "; /* Process number*/
  else
    AE09M001.AB-LOGO-PLC-CD = AE09W01.AE09W-AB-LOGO-PLC-CD;
  end
  ;
  if (AE09W01.AE09W-AB-LOGO-PLC-CD in AE09TBL.AB-LOGO-PLC-CD)
    /* -------- MOVE values from CSP Table to AE09W01 ------*/
    AE09W01.AE09W-AB-LOGO-PLC-CD = AE09TBL.AB-LOGO-PLC-CD[sysVar.arrayIndex];
  else /* ELSE(CODE is not on table)*/
    XP1REC.XP1ERRFL = "1"; /* MOVE error code to XP1REC*/
    AE09W01.AE09W-AB-LOGO-PLC-CD = " "; /* Space out save field*/
    set AE09M001.AB-LOGO-PLC-CD cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 182; /* Indicate error message*/
    converseLib.validationFailed(182);
    ABWREC.ABWPRCSN = "S10 "; /* Process number*/
  end /* END of 'IF' statement*/
  ;
  ;
   /* ***************  end of logo plc code retrieval ***********/
end // end AE09S10

// SELECT SET PO Number
Function AE09S11()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select cursor' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  ;
   /* ----- move values to record before insert -----*/
  set PC6REC empty;
  ;
  PC6REC.XGPCD = "03";
  PC6REC.OP1CUOID = OPABREC.OP-CUST-ORD-ID;
  PC6REC.OP1PARTN = OPABREC.OP-ORD-PART-CHAR;
  PC6REC.SY1STNBR = OPABREC.SY-STY-NBR;
  PC6REC.SY2CLRID = OPABREC.SY-COLR-CD-ID;
  PC6REC.XDMCD = OPABREC.XDM-DIM-CD;
  ;
   /* ----- wildcard unknown values ------*/
  PC6REC.OP1NORID = -1;
  PC6REC.YSMXDV = "*";
  PC6REC.PC2CUXID = "*";
  PC6REC.PC4ORTYP = "*";
  PC6REC.PC6STAT = "*";
  ;
   /* *===================================**/
   /* *  Select Set from DPRODc.Vpoitm01  **/
   /* *===================================**/
  ;
  try
    call "IO3310" ("SK", SQLCA, PC6REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, Return to calling process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return; /* Return to calling process*/
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S11 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOITM01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE09M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
end // end AE09S11

// FETCH ONE PO-NUMBER
Function AE09S12()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *===================================**/
   /* *  Select Next from DPRODc.Vpoitm01  **/
   /* *===================================**/
  ;
  try
    call "IO3310" ("NK", SQLCA, PC6REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, save style name, then return to calling*/
                  /* process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      AE09S14();
      return; /* Return to calling process*/
      ;
    end
    if (SQLCA.VAGen_SQLCODE == +100) /* If no PO found just return*/
      ;
      return; /* Return to calling process*/
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S12 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT NEXT TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOITM01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE09M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
end // end AE09S12

// CLOSE SET PO-NUMBER
Function AE09S13()
   /* ------------------------------------------------------------*/
   /* Close set on Dprodc.Vpoitm01*/
   /* ------------------------------------------------------------*/
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  ;
  try
    call "IO3310" ("CK", SQLCA, PC6REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, save style name, then return to calling*/
                  /* process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return; /* Return to calling process*/
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S13 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SET TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOITM01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE09M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
end // end AE09S13

// retrieve contact information
Function AE09S14()
  ;
  ;
   /* ------------------------------------------------------------*/
   /* check print flag on po header*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set PC3REC empty; /* initialize db record*/
  PC3REC.PC3PONBR = PC6REC.PC3PONBR; /* PO NUMBER*/
  PC3REC.XGPCD = "03";
  ;
  ;
   /* *=============================**/
   /* *  Access DPRODC.VPOHRD01 db  **/
   /* *=============================**/
  ;
  try
    call "IO3270" ("S ", SQLCA, PC3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      if (PC3REC.PC3PRTIN == "Y")
        AE09W01.AE09W-PO-PRINT-FLAG = "Y";
      end
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      return;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S14 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODC.VPOHDR01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOHDR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AE09M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE09S14

// Logo Plc Codes Pop-up window
Function AE09S15()
  ;
                      /* Logo Placement Codes pop-up window*/
  ;
  XP1REC.XXXSTAT = " ";
  ;
  if (AE09W01.AE09W-AB-LOGO-PLC-CD == "?")
    XPXX001(); /* init for pop up window*/
    XX0XW02.XGPCD = XP1REC.XGPCD;
    XX0XW02.XX0XWHDR = "   LOGO PLACEMENT CODES";
    ;
    while (XX0XW02.XX0XWEND == "N")
      ;
      AE09-1510(); /* perform pop up window routine*/
      ;
    end
    ;
    if (XX0XW02.XX0XWPIX > 0)
      AE09W01.AE09W-AB-LOGO-PLC-CD = AE09TBL.AB-LOGO-PLC-CD[XX0XWPIX];
    end
    ;
  end
  ;
  ;
   /* *********  end of Logo Plc Code retrieval  *************/
end // end AE09S15

// Validate map detail data
Function AE09S19()
   /* ------------------------------------------------------------*/
    /* Evaluate map detail data to determine the kind of data*/
     /* base update action necessary for each line. If valid*/
     /* update found, then assign update code. Otherwise, ignore*/
     /* map detail line.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  AE09W01.AE09W-UPDATE-FLAG = " "; /* reset update flag*/
  ;
  if (AE09M001.AB-LOGO-PLC-CD == AE09W02.AB-LOGO-PLC-CD
   && AE09M001.AB-NIKE-SELCOLR-FL == AE09W02.AB-NIKE-SELCOLR-FL
   && AE09M001.AB-COLR-SEL-DESC1 == AE09W02.AB-COLR-SEL-DESC1
   && AE09M001.AB-COLR-SEL-DESC2 == AE09W02.AB-COLR-SEL-DESC2
   && AE09M001.AB-COLR-SEL-DESC3 == AE09W02.AB-COLR-SEL-DESC3
   && AE09M001.AB-COLR-SEL-DESC4 == AE09W02.AB-COLR-SEL-DESC4
   && AE09M001.AB-COLR-SEL-DESC5 == AE09W02.AB-COLR-SEL-DESC5
   && AE09M001.AB-COLR-SEL-DESC6 == AE09W02.AB-COLR-SEL-DESC6
   && AE09M001.AB-LOGO-PLC-CD > " "
   && AE09M001.AB-NIKE-SELCOLR-FL > " ")
  else
    if (AE09M001.AB-LOGO-PLC-CD != AE09W02.AB-LOGO-PLC-CD
     || AE09M001.AB-LOGO-PLC-CD == "  ")
      AE09S10();
      if (XP1REC.XP1ERRFL == "1"
       || converseVar.validationMsgNum != 0)
        return;
      end
    end
    if (AE09M001.AB-NIKE-SELCOLR-FL == "Y"
     || AE09M001.AB-NIKE-SELCOLR-FL == "N")
    else
      converseLib.validationFailed(183);
      ABWREC.ABWPRCSN = "S19";
      set AE09M001.AB-NIKE-SELCOLR-FL cursor, bold;
      return;
    end
    if (AE09M001.AB-COLR-SEL-DESC1 == " "
     && AE09M001.AB-COLR-SEL-DESC2 == " "
     && AE09M001.AB-COLR-SEL-DESC3 == " "
     && AE09M001.AB-COLR-SEL-DESC4 == " "
     && AE09M001.AB-COLR-SEL-DESC5 == " "
     && AE09M001.AB-COLR-SEL-DESC6 == " ")
      if (AE09M001.AB-NIKE-SELCOLR-FL == "N")
        converseLib.validationFailed(184);
        ABWREC.ABWPRCSN = "S19";
        set AE09M001.AB-NIKE-SELCOLR-FL cursor, bold;
        return;
      end
  /* ELSE;*/
  /* IF AE09M001.AB-NIKE-SELCOLR-FL = 'Y';*/
  /* MOVE 185 TO EZEMNO;*/
  /* MOVE 'S19' TO ABWREC.ABWPRCSN;*/
  /* SET AE09M001.AB-NIKE-SELCOLR-FL CURSOR,BRIGHT;*/
   /* EZERTN;*/
  /* END;*/
    end
    AE09W01.AE09W-UPDATE-FLAG = "Y";
    AE09W02.AB-LOGO-PLC-CD = AE09M001.AB-LOGO-PLC-CD;
    AE09W02.AB-NIKE-SELCOLR-FL = AE09M001.AB-NIKE-SELCOLR-FL;
    AE09W02.AB-COLR-SEL-DESC1 = AE09M001.AB-COLR-SEL-DESC1;
    AE09W02.AB-COLR-SEL-DESC2 = AE09M001.AB-COLR-SEL-DESC2;
    AE09W02.AB-COLR-SEL-DESC3 = AE09M001.AB-COLR-SEL-DESC3;
    AE09W02.AB-COLR-SEL-DESC4 = AE09M001.AB-COLR-SEL-DESC4;
    AE09W02.AB-COLR-SEL-DESC5 = AE09M001.AB-COLR-SEL-DESC5;
    AE09W02.AB-COLR-SEL-DESC6 = AE09M001.AB-COLR-SEL-DESC6;
  end
  ;
  ;
end // end AE09S19

//*** RECORD=AE09W01 ****
// ********************************
// Application Working Storage (1).
// ********************************
// ***********************
Record AE09W01 type basicRecord
  10 AE09W-UPDATE-FLAG AE09W-UPDATE-FLAG ; 
  10 AE09W-DATA-FLAG AE09W-DATA-FLAG ; 
  10 AE09W-PO-PRINT-FLAG AE09W-PO-PRINT-FLAG ; 
  10 AE09W-AB-LOGO-PLC-CD AE09W-AB-LOGO-PLC-CD ; 
end // end AE09W01

//*** RECORD=AE09W02 ****
// *****************************************************
// Application Working Storage (2): Map Detail Save Area
// *****************************************************
// ***********************
Record AE09W02 type basicRecord
  10 AE09WLEN AE09WLEN ; 
  10 AB-LOGO-PLC-CD AB-LOGO-PLC-CD ; 
  10 AB-NIKE-SELCOLR-FL AB-NIKE-SELCOLR-FL ; 
  10 AB-COLR-SEL-DESC1 AB-COLR-SEL-DESC1 ; 
  10 AB-COLR-SEL-DESC2 AB-COLR-SEL-DESC2 ; 
  10 AB-COLR-SEL-DESC3 AB-COLR-SEL-DESC3 ; 
  10 AB-COLR-SEL-DESC4 AB-COLR-SEL-DESC4 ; 
  10 AB-COLR-SEL-DESC5 AB-COLR-SEL-DESC5 ; 
  10 AB-COLR-SEL-DESC6 AB-COLR-SEL-DESC6 ; 
  10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
  10 ZZ-SDT ZZ-SDT ; 
end // end AE09W02

//*** RECORD=VCRSTI01 ****
// ****** CRESTED CONTACT INFORMATION RECORD        ***********
// 
// DB2 TABLE:           DABUY.VCRSTI01
// 
// COPYLIB MEMBER:      DCL0????
// 
// I/O MOD:             IO????
// DATE CREATED:        01/11/93
// 
// MAINTENANCE LOG:
// 
//   DATE    INIT.      COMMENT
// --------  --------   ---------------------------------------
// 04/26/93  SB         INITIAL RECORD CREATION
// ************************
Record VCRSTI01 type basicRecord
  5 VCRSTI01-GROUP VCRSTI01-GROUP ; 
    10 VCRSTI01-KEY VCRSTI01-KEY ; 
      15 OP-CUST-ORD-ID OP-CUST-ORD-ID ; 
      15 OP-ORD-PART-CHAR OP-ORD-PART-CHAR ; 
      15 OP-LINE-ITEM-NBR OP-LINE-ITEM-NBR ; 
    10 SY-STY-NBR SY-STY-NBR ; 
    10 SY-COLR-CD-ID SY-COLR-CD-ID ; 
    10 XDM-DIM-CD XDM-DIM-CD ; 
    10 AB-LOGO-PLC-CD AB-LOGO-PLC-CD ; 
    10 AB-NIKE-SELCOLR-FL AB-NIKE-SELCOLR-FL ; 
    10 AB-COLR-SEL-DESC1 AB-COLR-SEL-DESC1 ; 
    10 AB-COLR-SEL-DESC2 AB-COLR-SEL-DESC2 ; 
    10 AB-COLR-SEL-DESC3 AB-COLR-SEL-DESC3 ; 
    10 AB-COLR-SEL-DESC4 AB-COLR-SEL-DESC4 ; 
    10 AB-COLR-SEL-DESC5 AB-COLR-SEL-DESC5 ; 
    10 AB-COLR-SEL-DESC6 AB-COLR-SEL-DESC6 ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end VCRSTI01

DataItem AB-COLR-SEL-DESC1 char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AB-COLR-SEL-DESC2 char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AB-COLR-SEL-DESC3 char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AB-COLR-SEL-DESC4 char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AB-COLR-SEL-DESC5 char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AB-COLR-SEL-DESC6 char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AB-NIKE-SELCOLR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AE09W-AB-LOGO-PLC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AE09W-DATA-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AE09W-PO-PRINT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Valid update indicator
DataItem AE09W-UPDATE-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Temporary storage length
DataItem AE09WLEN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group item for record level
DataItem VCRSTI01-GROUP char(243)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem VCRSTI01-KEY char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

