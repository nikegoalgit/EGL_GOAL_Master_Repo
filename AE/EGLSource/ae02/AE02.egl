package ae02;

import ab.common.*;
import corpcom2.XP1REC;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPAB001;
import corpcom3.XSABS03;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XDMCD;
import corpx1.XDVCD;
import corpx1.XGPCD;
import corpx1.XSETBL;
import corpx2.XSECD;
import corpx2.XSNYR;
import corpx2.XWHCD;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import fy.common.FY2REC;
import ku.common.KUCCOID;
import ku.common.KUMSTRID;
import op.common.OP1CUOID;
import op.common.OP1NORID;
import op.common.OP1PARTN;
import pc.common.PC2REC;
import pc.common.PC4ORTYP;
import pg.common.PG1REC;
import pg.common.PG1SC4CD;
import pg.common.PG2REC;
import sy.common.SY1SSTNM;
import sy.common.SY1STNBR;
import sy.common.SY2CLRAB;
import sy.common.SY2CLRID;
import sy.common.SY5SZID;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VCRSTE01;
//*** PROGRAM=AE02 ****
// This application is a prototype for the Apparel Forecast/Buy
// system.  It will display multiple rows from a DB2 table for
// the user to view and/or modify.
// 
// Upon initial entry, the table is read and columns from the
// selected rows are formatted and saved in temporary storage,
// one display page per queue record.
// 
// The records are retrieved from temporary storage one at a
// time, for display to the user.  The user may page forward
// and backward, to view the rows that were selected.
// 
// The user may exit to any allowed application via FAST PATH
// or PF key at any time.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 06/28/88   userid   New application.
// 08/15/90   cross    fix to totals and pf7, pf8
// 05-02-94   LREIN    Changed fcty/sty edit fail to produce
//                     an error and highlight error fcty field
// Y2KFIX   12/11/97  ksumme  Y2K MODIFICATIONS MADE TO:
//                     AE02-1200, AE02-1300,
//                     AE02-1500, AE02-6120
//         (global table changes: VCRSTB02, AB3REC, AB4REC,
//                                XP1REC, XPAB020)
// *********************
Program AE02 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AB2REC AB2REC; // record
  AB3REC AB3REC; // record
  AB4REC AB4REC; // record
  ABWREC ABWREC; // record
  AE02W01 AE02W01; // record
  AE02W02 AE02W02; // record
  AE02W03 AE02W03; // record
  AE02W04 AE02W04; // record
  AE02W05 AE02W05; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FY1REC FY1REC; // record
  FY2REC FY2REC; // record
  PC2REC PC2REC; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VCRSTB01 VCRSTB01; // record
  VCRSTE01 VCRSTE01; // record
  XP1REC XP1REC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSETBL {deleteAfterUse = yes}; // table
  use AE02M.AE02M001, // form
  		AE02M.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAB001: XPAB001();
    ;
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Apparel Buy Prototype process.*/
     /* ------------------------------------------------------------*/
    ;
    set ABWREC empty; /* Initialize working storage*/
    set AE02W01 empty; /* Initialize working storage*/
    set AE02W02 empty; /* Initialize working storage*/
    set AE02W03 empty; /* Initialize working storage*/
    set AE02W04 empty; /* Initialize working storage*/
    set AE02W05 empty; /* Initialize working storage*/
    set SQLCA empty; /* Initialize working storage*/
    set ERRSQLCA empty; /* Initialize working storage*/
    set TA1REC empty; /* Initialize working storage*/
    set TA5REC empty; /* Initialize working storage*/
    set AB2REC empty; /* Initialize rec*/
    set XX0XW01 empty; /* Initialize working storage*/
    set XX0XW02 empty; /* Initialize working storage*/
    set AE02M001 initial; /* Initialize map output area*/
    ABWREC.ABWAPPL = "AE02"; /* Initialize appl ID for this appl*/
    ABWREC.ABWPRCSN = "0000"; /* Initialize process number to zero*/
    AE02W01.AE02WSZM = 10; /* set index maximum for screen array*/
    move " " to AE02W03.XSECD[1] for all;
    AE02W01.AE02WSZT = sysVar.arrayIndex; /* set index max for internal table*/
    ;
    ABWREC.ABWPRCSN = "M001"; /* Indicate map # 1*/
    ABWREC.XXXMAPNM = ABWREC.ABWERLOC; /* Move map name to afwrec*/
    ABWREC.ABWPRCSN = "0000"; /* Re-Initialize process name*/
    ;
    ;
    ;
    ABWREC.ABWMAP = "1"; /* Indicate map to be displayed*/
    ABWREC.ABWSWR = "N"; /* Indicate request for data*/
    ABWREC.ABWTSL = +576; /* set the tsq size*/
    ;
    goto AE02-0001; /* Converse Apparel Buy Prototype*/
    ;
    ;
    ;
    ;
    AE02-0001: AE02-0001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/
    ;
    goto AE02-0001; /* Converse Transportation Prototype*/
    ;
    ;
  end // end main
end // end AE02

// Choose which map to display
Function AE02-0001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  AE02-1000(); /* Obtain the data to display*/
  ;
  AE02-2000(); /* Format and display the map*/
  ;
  AE02-3000(); /* Check attention identifier*/
  ;
  AE02-4000(); /* Reset fields to normal intensity*/
  ;
  AE02-5000(); /* Verify the entered data*/
  ;
  AE02-6000(); /* Process valid input request*/
  ;
  ;
  ;
end // end AE02-0001

// create new tsq data for new sy
Function AE02-1000()
  ;
   /* ------------------------------------------------------------*/
   /* If data was not requested, return to the previous process.*/
   /* Purge any existing queue in temporary storage.*/
   /* Select and open the cursor for the set to be formatted.*/
   /* Fetch and format the data in the page.*/
   /* If the page is full, add the page to the storage queue.*/
   /* At end of rows, add any partial page to the queue.*/
   /* At end of rows, close the selected set cursor.*/
   /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (ABWREC.ABWSWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0
   || AE02W01.AE02W-UPDATE-PENDING == "Y") /* update pending*/
    return; /* Return to previous process*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* create new tsq data for style change*/
   /* ------------------------------------------------------------*/
  AE02-1100(); /* Purge any temporary storage*/
  ;
  AE02-1200(); /* Select set and open the cursor*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    ;
    ABWREC.ABWSWC = "N"; /* Initialize end of file switch*/
    ;
    set AE02W04 empty; /* Clear temporary storage record*/
    AE02W04.AE02WMX4 = 0; /* Initialize tsq array number*/
    ;
    while (ABWREC.ABWSWC == "N") /* Until cursor end of file*/
      ;
      AE02-1300(); /* Obtain data and format page*/
      ;
      if (AE02W04.AE02WMX4 >= AE02W01.AE02WSZM) /* Page is full*/
        AE02-1400(); /* Add page to temporary storage*/
      end
      ;
      if (converseVar.validationMsgNum != 0) /* Errors were found*/
        ABWREC.ABWSWC = "Y"; /* Force end of file*/
      end
      ;
    end
    ;
  end
  ;
  if (converseVar.validationMsgNum == 0 /* No errors were found*/
   && AE02W04.AE02WMX4 > 0)             /* Page contains data to be written*/
    AE02-1400(); /* Add page to temporary storage*/
  end
  ;
  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    AE02-1500(); /* Close the selected set cursor*/
  end
  ;
  ABWREC.ABWTSP = 1; /* use first page*/
  set AB2REC empty; /* Clear temporary storage record*/
  ;
end // end AE02-1000

// Purge any temporary storage
Function AE02-1100()
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = ABWREC.ABWAPPL; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  call "TA0050" (AE02W02, TA5REC) {isNoRefresh = yes}; /* Temporary storage*/
                                         /* ; subroutine*/
  ;
  if (TA5REC.TA5RTNCD != 0) /* Error was found*/
    ;
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    ABWREC.ABWPRCSN = "1100"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/
    ;
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/
    ;
  end
  ;
  ABWREC.ABWTSP = 0; /* Reset current page number*/
  ABWREC.TA5TSQIX = 0; /* Reset highest page number*/
  ;
  ;
end // end AE02-1100

// OPEN CURSOR FOR VCRSTB01
Function AE02-1200()
  ;
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  set VCRSTB01 empty;
  ;
  VCRSTB01.XGPCD = "03"; /* GPC CODE*/
  VCRSTB01.SY1STNBR = "*"; /* style number*/
  VCRSTB01.SY2CLRID = "*"; /* style color*/
  VCRSTB01.KUCCOID = -1; /* CUST NUMBER*/
  VCRSTB01.KUMSTRID = -1; /* CUST STORE*/
  VCRSTB01.AB7PBYTP = "*"; /* buy type*/
  VCRSTB01.AB7PBYST = "*"; /* status*/
  ;
  if (AE02W05.SY1STNBR > " ")
    VCRSTB01.SY1STNBR = AE02W05.SY1STNBR; /* style number*/
  end
  ;
  if (AE02W05.SY2CLRID > " ")
    VCRSTB01.SY2CLRID = AE02W05.SY2CLRID; /* style color*/
  end
  ;
  if (AE02W05.KUCCOID > 0)
    VCRSTB01.KUCCOID = AE02W05.KUCCOID; /* cust number*/
  end
  ;
  if (AE02W05.KUMSTRID > 0)
    VCRSTB01.KUMSTRID = AE02W05.KUMSTRID; /* STORE ID*/
  end
  ;
  if (AE02W05.AB7PBYTP > " ")
    VCRSTB01.AB7PBYTP = AE02W05.AB7PBYTP; /* buy type*/
  end
  ;
  if (AE02W05.AB7PBYST > " ")
    VCRSTB01.AB7PBYST = AE02W05.AB7PBYST; /* status*/
  end
  ;
   /* ---------------- y2k out begin --------------------------------*/
   /*  */
   /* CALL IO6610 'S1',SQLCA,VCRSTB01 (NOMAPS,NONCSP,REPLY;/* Select table*/
   /*  */
   /* ---------------- y2k out end ----------------------------------*/
   /* ---------------- y2k in begin --------------------------------*/
   /*  */
  try
    call "VCRSTB02" ("S1", SQLCA, VCRSTB01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table*/
   /*  */
   /* ---------------- y2k in end ----------------------------------*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      ;
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
      ;
    else
      ;
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      ;
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      ;
    end
    ;
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "1200"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCRSTB01"; /* Table view name*/
    TA1REC.TA1TBLKE = VCRSTB01.VCRSTB01-KEY; /* Table key*/
    ;
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/
    ;
    AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
end // end AE02-1200

// FETCH ROW & PROCESS VCRSTB01
Function AE02-1300()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/
  ;
  set VCRSTB01 empty;
  ;
   /* ----------------- Y2K OUT BEGIN ------------------------------*/
   /*  */
   /* CALL IO6610 'N1',SQLCA,VCRSTB01 (NOMAPS,NONCSP,REPLY;/* Fth next row*/
   /*  */
   /* ----------------- Y2K OUT END --------------------------------*/
   /* ----------------- Y2K IN BEGIN ------------------------------*/
   /*  */
  try
    call "VCRSTB02" ("N1", SQLCA, VCRSTB01) {isNoRefresh = yes, isExternal = yes};
  end /* Fth next row*/
   /*  */
   /* ----------------- Y2K IN END --------------------------------*/
   /* ****************************************************/
  ;
  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    ;
    ABWREC.ABWSWC = "Y"; /* Indicate end of file*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "1300"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCRSTB01"; /* Table view name*/
    ;
    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/
    ;
    AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  AE02W04.AE02WMX4 = AE02W04.AE02WMX4 + 1; /* Increment line index*/
  AE02W01.AE02WIDX = 1;
  AE02W04.AE02W-QUANTITY[AE02WMX4] = 0;
  AE02W01.AE02W-QUANTITY = 0;
  while (AE02W01.AE02WIDX <= 10)
    AE02W01.AE02W-QUANTITY = AE02W01.AE02W-QUANTITY +     VCRSTB01.AB7PBYQY[AE02WIDX];
    AE02W01.AE02WIDX = AE02W01.AE02WIDX + 1;
  end
  ;
  AE02W04.AE02W-QUANTITY[AE02WMX4] = AE02W01.AE02W-QUANTITY;
  ;
  AE02W04.AE02W-CREDIT-APPROVAL[AE02WMX4] = "N";
  AE02W04.AE02W-DISC-APPROVAL[AE02WMX4] = "N";
  if (VCRSTB01.AB7PBYST == " ")
    AE02W04.AE02W-CREDIT-APPROVAL[AE02WMX4] = "Y";
    AE02W04.AE02W-DISC-APPROVAL[AE02WMX4] = "Y";
  else
    if (VCRSTB01.AB7PBYST == "C")
      AE02W04.AE02W-DISC-APPROVAL[AE02WMX4] = "Y";
    else
      if (VCRSTB01.AB7PBYST == "D"
       || VCRSTB01.AB7PBYST == "M")
        AE02W04.AE02W-CREDIT-APPROVAL[AE02WMX4] = "Y";
      end
    end
  end
  ;
   /* Save data to display*/
  AE02W04.AE02W-QUANTITY[AE02WMX4] = AE02W01.AE02W-QUANTITY;
  AE02W04.AB7PBYTP[AE02WMX4] = VCRSTB01.AB7PBYTP;
  AE02W04.AB7PBSDT[AE02WMX4] = VCRSTB01.AB7PBSDT;
  AE02W04.AB7PBYST[AE02WMX4] = VCRSTB01.AB7PBYST;
  AE02W04.AB7PBADT[AE02WMX4] = VCRSTB01.AB7PBADT;
  AE02W04.XGPCD[AE02WMX4] = VCRSTB01.XGPCD;
  AE02W04.KUCCOID[AE02WMX4] = VCRSTB01.KUCCOID;
  AE02W04.KUMSTRID[AE02WMX4] = VCRSTB01.KUMSTRID;
  AE02W04.OP1CUOID[AE02WMX4] = VCRSTB01.OP1CUOID;
  AE02W04.OP1NORID[AE02WMX4] = VCRSTB01.OP1NORID;
  AE02W04.OP1PARTN[AE02WMX4] = VCRSTB01.OP1PARTN;
  AE02W04.SY1STNBR[AE02WMX4] = VCRSTB01.SY1STNBR;
  AE02W04.SY2CLRID[AE02WMX4] = VCRSTB01.SY2CLRID;
  AE02W04.AE02W-AB-EMB-DISC-ID[AE02WMX4] = VCRSTB01.AB-EMB-DISC-ID;
  AE02W04.XSECD[AE02WMX4] = VCRSTB01.XSECD; /* season*/
  AE02W04.XSNYR[AE02WMX4] = VCRSTB01.XSNYR; /* year*/
  AE02W04.XDVCD[AE02WMX4] = VCRSTB01.XDVCD; /* div code*/
  AE02W04.ZZZCHGCT[AE02WMX4] = VCRSTB01.ZZZCHGCT; /* change count*/
  AE02W04.PC4ORTYP[AE02WMX4] = VCRSTB01.PC4ORTYP; /* order type*/
  AE02W04.FY1FCTYC[AE02WMX4] = VCRSTB01.FY1FCTYC; /* Fcty code*/
  ;
  AE02W03.AE02WMX3 = AE02W03.AE02WMX3 + 1;
  ;
end // end AE02-1300

// Add page to temporary storage
Function AE02-1400()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  AE02W04.AE02WLEN = ABWREC.ABWTSL; /* Temporary storage length*/
  TA5REC.TA5APPID = ABWREC.ABWAPPL; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (AE02W04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
                                    /* ;subroutine*/
  ;
  if (TA5REC.TA5RTNCD != 0) /* Error was found*/
    ;
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "115 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/
    ;
    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/
    ;
    AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    ;
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ABWREC.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
  ;
  set AE02W04 empty; /* Clear temporary storage record*/
  ;
  ;
end // end AE02-1400

// CLOSE CURSOR FOR VCRSTB01
Function AE02-1500()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
   /* ------------------- Y2K OUT BEGIN ---------------------------*/
   /*  */
   /* CALL IO6610 'C1',SQLCA,VCRSTB01 (NOMAPS,NONCSP,REPLY; /* Close tbl set*/
   /*  */
   /* ------------------- Y2K OUT END -----------------------------*/
   /* ------------------- Y2K OUT BEGIN ---------------------------*/
   /*  */
  try
    call "VCRSTB02" ("C1", SQLCA, VCRSTB01) {isNoRefresh = yes, isExternal = yes};
  end /* Close tbl set*/
   /*  */
   /* ------------------- Y2K OUT END -----------------------------*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    ;
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "1500"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCRSTB01"; /* Table view name*/
    ;
    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/
    ;
    AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    ;
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
end // end AE02-1500

// Format and display the map
Function AE02-2000()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AE02M001 alarm; /* Indicate sound alarm*/
  end
  ;
  if (converseVar.validationMsgNum == 0 /* No error message to display*/
   || ABWREC.ABWFIRST == " ")           /* or first time through*/
    if (AE02W01.AE02W-UPDATE-PENDING != "Y") /* update not pending*/
      set AE02M001 initial; /* Clear map output area*/
      AE02M001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
      if (converseVar.validationMsgNum == 0) /* No error message to display*/
        AE02-2100(); /* Format the data on the page*/
      end
      ABWREC.ABWFIRST = "N"; /* turn 'first time through' OFF*/
    end
    ;
    if (converseVar.validationMsgNum == 0) /* No error message to display*/
      if (ABWREC.ABWNMO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(ABWREC.ABWNMO);
      end /* Information message number*/
    end
    ;
  end
  ;
  if (converseVar.validationMsgNum == 9999)
    converseLib.validationFailed(0); /* Information message number*/
    if (AE02W01.AE02W-UPDATE-PENDING != "Y")
      set AE02M001 initial; /* Clear map output area*/
      AE02-2100(); /* Format the data on the page*/
    else
      AE02W01.AE02W-UPDATE-PENDING = "N";
      ABWREC.ABWIXM = 1;
      while (ABWREC.ABWIXM <= 10)
        if (AE02W04.SY1STNBR[ABWIXM] == " ")
          AE02-2120();
        else
          AE02-2150();
        end
        ABWREC.ABWIXM = ABWREC.ABWIXM + 1;
      end
    end
  end
  ABWREC.ABWNMO = 0; /* Reset information message number*/
  ;
  if (converseVar.validationMsgNum != 0) /* With message to display*/
    set AE02M001 alarm; /* Sound alarm*/
  end
  ;
  ;
  ;
  converse AE02M001 ;
  ;
  ;
end // end AE02-2000

// Format the selected data
Function AE02-2100()
   /* ------------------------------------------------------------*/
   /* Obtain the next page from temporary storage.*/
   /* Format the plan sequence data in the map.*/
   /* ------------------------------------------------------------*/
  ;
  AE02M001.SY1STNBR = AE02W05.SY1STNBR;
  AE02M001.SY2CLRID = AE02W05.SY2CLRID;
  AE02M001.KUCCOID = AE02W05.KUCCOID;
  AE02M001.KUMSTRID = AE02W05.KUMSTRID;
  AE02M001.AB7PBYTP = AE02W05.AB7PBYTP;
  AE02M001.AB7PBYST = AE02W05.AB7PBYST;
  ;
  AE02M001.AE02MPGN = ABWREC.ABWTSP;
  AE02M001.AE02MPGS = ABWREC.TA5TSQIX;
  ;
  if (AE02W03.AE02WMX3 <= 0)
    ABWREC.ABWPRCSN = "2100"; /* Process number*/
    AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    if (ABWREC.ABWFIRST != " ")
      converseLib.validationFailed(05); /* Indicate no data to display*/
    else
      converseLib.validationFailed(0);
    end
    ABWREC.ABWIXM = 1; /* Initialize line index*/
    while (ABWREC.ABWIXM <= 10) /* Until end of lines*/
      AE02-2110(); /* clear fields*/
      AE02-2120(); /* protect fields*/
      ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
    end
    return; /* Return to previous process*/
  end
  ;
              /* (Process scroll request)*/
  ;
  if (ABWREC.ABWTSP != ABWREC.TA5TSQIX /* desired page not current*/
   || AE02W04.AE02WMX4 <= 0)           /* no data contained in aE02w04record*/
    AE02-2130(); /* obtain temporary storage page;*/
  end
  ;
  set AE02M001.SY1STNBR cursor;
  ABWREC.ABWIXM = 1; /* Initialize line index*/
  while (ABWREC.ABWIXM <= 10) /* Until end of lines*/
    if (AE02W04.SY1STNBR[ABWIXM] > " ")
      AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM] = AE02W04.AB7PBYTP[ABWIXM];
      AE02M001.AE02M-AB-PRPS-BUY-STAT[ABWIXM] = AE02W04.AB7PBYST[ABWIXM];
      AE02M001.AE02M-CU-CO-ID[ABWIXM] = AE02W04.KUCCOID[ABWIXM];
      AE02M001.AE02M-CU-STOR-ID[ABWIXM] = AE02W04.KUMSTRID[ABWIXM];
      AE02M001.AE02M-OP-CUST-ORD-ID[ABWIXM] = AE02W04.OP1CUOID[ABWIXM];
      AE02M001.AE02M-OP-NIKE-ORD-ID[ABWIXM] = AE02W04.OP1NORID[ABWIXM];
      AE02M001.AE02M-SY-STY-NBR[ABWIXM] = AE02W04.SY1STNBR[ABWIXM];
      AE02M001.AE02M-SY-COLR-CD-ID[ABWIXM] = AE02W04.SY2CLRID[ABWIXM];
      AE02M001.AE02M-QUANTITY[ABWIXM] = AE02W04.AE02W-QUANTITY[ABWIXM];
      AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM] = AE02W04.AE02W-AB-EMB-DISC-ID[ABWIXM];
      AE02M001.AE02M-CREDIT-APPROVAL[ABWIXM] = AE02W04.AE02W-CREDIT-APPROVAL[ABWIXM];
      AE02M001.AE02M-DISC-APPROVAL[ABWIXM] = AE02W04.AE02W-DISC-APPROVAL[ABWIXM];
      AE02M001.FY1FCTYC[ABWIXM] = AE02W04.FY1FCTYC[ABWIXM];
    else
      AE02-2110(); /* clear fields*/
      AE02-2120(); /* protect fields*/
    end
    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
  end
  ;
  ;
end // end AE02-2100

// clear lower map fields
Function AE02-2110()
  AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM] = " ";
  AE02M001.AE02M-AB-PRPS-BUY-STAT[ABWIXM] = " ";
  AE02M001.AE02M-OP-NIKE-ORD-ID[ABWIXM] = 0;
  AE02M001.AE02M-SY-STY-NBR[ABWIXM] = " ";
  AE02M001.AE02M-SY-COLR-CD-ID[ABWIXM] = " ";
  AE02M001.AE02M-DISC-APPROVAL[ABWIXM] = " ";
  AE02M001.AE02M-CREDIT-APPROVAL[ABWIXM] = " ";
  AE02M001.FY1FCTYC[ABWIXM] = " ";
  AE02M001.AE02M-CU-CO-ID[ABWIXM] = 0;
  AE02M001.AE02M-CU-STOR-ID[ABWIXM] = 0;
  AE02M001.AE02M-OP-CUST-ORD-ID[ABWIXM] = 0;
  AE02M001.AE02M-QUANTITY[ABWIXM] = 0;
  AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM] = 0;
  ;
end // end AE02-2110

// protect lower map fields
Function AE02-2120()
  set AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM] skip, invisible;
  set AE02M001.AE02M-AB-PRPS-BUY-STAT[ABWIXM] skip, invisible;
  set AE02M001.AE02M-CU-CO-ID[ABWIXM] skip, invisible;
  set AE02M001.AE02M-CU-STOR-ID[ABWIXM] skip, invisible;
  set AE02M001.AE02M-OP-CUST-ORD-ID[ABWIXM] skip, invisible;
  set AE02M001.AE02M-OP-NIKE-ORD-ID[ABWIXM] skip, invisible;
  set AE02M001.AE02M-SY-STY-NBR[ABWIXM] skip, invisible;
  set AE02M001.AE02M-SY-COLR-CD-ID[ABWIXM] skip, invisible;
  set AE02M001.AE02M-QUANTITY[ABWIXM] skip, invisible;
  set AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM] skip, invisible;
  set AE02M001.AE02M-CREDIT-APPROVAL[ABWIXM] skip, invisible;
  set AE02M001.AE02M-DISC-APPROVAL[ABWIXM] skip, invisible;
  set AE02M001.FY1FCTYC[ABWIXM] skip, invisible;
  ;
end // end AE02-2120

// obtain tsq record
Function AE02-2130()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  AE02W04.AE02WLEN = ABWREC.ABWTSL; /* Temporary storage length*/
  TA5REC.TA5APPID = ABWREC.ABWAPPL; /* Application identification*/
  TA5REC.TA5TSQIX = ABWREC.ABWTSP; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (AE02W04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
                                    /* ;subroutine*/
  ;
  if (TA5REC.TA5RTNCD != 0) /* Error was found*/
    ;
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "2130"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/
    ;
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/
    ;
    AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    ;
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  ;
end // end AE02-2130

// Reset lower map fields
Function AE02-2150()
  set AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM] initialAttributes;
  set AE02M001.AE02M-AB-PRPS-BUY-STAT[ABWIXM] initialAttributes;
  set AE02M001.AE02M-CU-CO-ID[ABWIXM] initialAttributes;
  set AE02M001.AE02M-CU-STOR-ID[ABWIXM] initialAttributes;
  set AE02M001.AE02M-OP-CUST-ORD-ID[ABWIXM] initialAttributes;
  set AE02M001.AE02M-OP-NIKE-ORD-ID[ABWIXM] initialAttributes;
  set AE02M001.AE02M-SY-STY-NBR[ABWIXM] initialAttributes;
  set AE02M001.AE02M-SY-COLR-CD-ID[ABWIXM] initialAttributes;
  set AE02M001.AE02M-QUANTITY[ABWIXM] initialAttributes;
  set AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM] initialAttributes;
  set AE02M001.AE02M-CREDIT-APPROVAL[ABWIXM] initialAttributes;
  set AE02M001.AE02M-DISC-APPROVAL[ABWIXM] initialAttributes;
  set AE02M001.FY1FCTYC[ABWIXM] initialAttributes;
  ;
end // end AE02-2150

// Check attention identifier
Function AE02-3000()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    converseLib.clearScreen();
     /* Clear the map fields*/
    ;
    converseLib.validationFailed(); /* bypass all processing.*/
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  ;
  if (AE02M001.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      COMMAREA.CATOAP = AE02M001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = AE02M001.CAITEM; /* Application data*/
      ;
      XSABS03(); /* Exit to another application*/
      ;
    else
      ;
      converseLib.validationFailed(4); /* Indicate PF key not valid*/
      ;
    end
    ;
    set AE02M001.CATOAP cursor, modified, bold; /* Highlight*/
    ;
    ABWREC.ABWPRCSN = "3000"; /* Process number*/
    AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    XSABS03(); /* Exit to another application*/
    ;
    ABWREC.ABWPRCSN = "3000"; /* Process number*/
    AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  ;
  ;
  ;
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8)  /* and PF8 was not pressed*/
    ;
    ABWREC.ABWPRCSN = "3000"; /* Process number*/
    AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ;
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      ;
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      ;
    end
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  ;
end // end AE02-3000

// Reset highlighted fields
Function AE02-4000()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to defined intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set AE02M001.SY1STNBR initialAttributes;
  set AE02M001.SY2CLRID initialAttributes;
  set AE02M001.KUCCOID initialAttributes;
  set AE02M001.KUMSTRID initialAttributes;
  set AE02M001.AB7PBYTP initialAttributes;
  set AE02M001.AB7PBYST initialAttributes;
  ;
  ;
  set AE02M001.CATOAP initialAttributes; /* Commarea TO application*/
  set AE02M001.CAITEM initialAttributes; /* Commarea application data*/
  ;
  ;
end // end AE02-4000

// Verify the entered data
Function AE02-5000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Determine whether a valid request to scroll was entered.*/
   /* If not a scroll request, verify any changed data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (AE02M001.CAITEM > " ") /* Application data was entered*/
    ;
    set AE02M001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    ABWREC.ABWPRCSN = "5000"; /* Process number*/
    AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    ;
  end
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/
    AE02-5100(); /* Verify scroll request*/
  else
    AE02-5200(); /* Verify selection criteria*/
    if (ABWREC.ABWSWR == "N")
      AE02-5300(); /* Verify any changed data*/
      if (AE02W01.AE02W-CHANGE-FLAG == "N")
        if (ABWREC.TA5TSQIX == 0) /* no data selected yet*/
          ABWREC.ABWSWR = "Y"; /* select data*/
        end
        exit stack;
      end
    end
    if (ABWREC.ABWSWR == "Y") /* If new selection criteria entered*/
      exit stack; /* Go back to start of appl*/
    end
  end
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  ;
end // end AE02-5000

// Verify scroll request
Function AE02-5100()
   /* ------------------------------------------------------------*/
   /* Ensure that pages exist to scroll forward or back.*/
   /* Indicate an error for any data that was modified.*/
   /* ------------------------------------------------------------*/
  ;
  ABWREC.ABWSWR = "N"; /* initialize switch to 'OFF'*/
  XP1REC.XP1MNO = 0;
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && ABWREC.ABWTSP < 2)          /* and no previous pages*/
    ;
    ABWREC.ABWPRCSN = "5100"; /* Process number*/
    AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && ABWREC.ABWTSP >= ABWREC.TA5TSQIX) /* and no more pages*/
    ;
    ABWREC.ABWPRCSN = "5100"; /* Process number*/
    AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
  ;
  ;
end // end AE02-5100

// Edit selection criteria
Function AE02-5200()
   /* ============================================================*/
   /* ===== E D I T    S E L E C T I O N    C R I T E R I A  =====*/
   /* =====                                                  =====*/
   /* ===== Compare selection criteria on screen to data on  =====*/
   /* ===== working storatge record, if any has changed,     =====*/
   /* ===== validate all selection criteria fields and turn  =====*/
   /* ===== on switch which allows later processing to purge =====*/
   /* ===== temporary storage and re-load it with newly      =====*/
   /* ===== selected data.                                   =====*/
   /* ============================================================*/
  ;
  ABWREC.ABWSWR = "N"; /* initialize switch to 'OFF'*/
  XP1REC.XP1MNO = 0;
  ;
   /* *************************************************************/
  if (AE02M001.SY1STNBR != AE02W05.SY1STNBR)
    AE02W05.SY1STNBR = AE02M001.SY1STNBR;
    ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
  end
  ;
  if (AE02M001.SY2CLRID != AE02W05.SY2CLRID)
    if (AE02W05.SY1STNBR == " "
     && AE02M001.SY2CLRID != " ")
      XP1REC.XP1MNO = 54;
      set AE02M001.SY2CLRID bold;
      set AE02M001.SY1STNBR cursor, bold;
    else
      AE02W05.SY2CLRID = AE02M001.SY2CLRID;
      ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
    end
  end
  ;
  if (AE02M001.KUCCOID != AE02W05.KUCCOID)
    AE02W05.KUCCOID = AE02M001.KUCCOID;
    ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
  end
  ;
  if (AE02M001.KUMSTRID != AE02W05.KUMSTRID)
    if (AE02W05.KUCCOID < 1
     && AE02M001.KUMSTRID > 0)
      XP1REC.XP1MNO = 160;
      set AE02M001.KUMSTRID bold;
      set AE02M001.KUCCOID cursor, bold;
    else
      if (AE02M001.KUMSTRID > 0)
        if (AE02M001.KUMSTRID < 0
         || AE02M001.KUMSTRID > 9999)
          XP1REC.XP1MNO = 161;
          set AE02M001.KUMSTRID cursor, bold;
        else
          AE02W05.KUMSTRID = AE02M001.KUMSTRID;
          ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
        end
      else
        AE02W05.KUMSTRID = AE02M001.KUMSTRID;
        ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
      end
    end
  end
  ;
  if (AE02M001.AB7PBYTP != AE02W05.AB7PBYTP)
    AE02W05.AB7PBYTP = AE02M001.AB7PBYTP;
    ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
  end
  ;
  if (AE02M001.AB7PBYST != AE02W05.AB7PBYST)
    AE02W05.AB7PBYST = AE02M001.AB7PBYST;
    ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
  end
  ;
  ;
   /* *************************************************************/
  ;
  if (ABWREC.ABWSWR == "Y") /* if any selection criteria changed*/
    /* ============================================================*/
    /* ===       Put in edits of selection criteria HERE        ===*/
    /* ===  (If any errors found turn re-select switch 'OFF')   ===*/
    /* ============================================================*/
    set AE02W04 empty; /* clear array*/
    AE02-5270(); /* edit action/special action codes*/
    AE02-5250(); /* edit CUSTOMER code*/
    AE02-5210(); /* edit style number*/
    ABWREC.ABWIXM = 1; /* Initialize line index*/
    while (ABWREC.ABWIXM <= 10) /* Until end of lines*/
      AE02-2110(); /* clear fields*/
      AE02-2120(); /* protect fields*/
      ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
    end
    ;
    set AE02W03 empty;
  end
  if (XP1REC.XP1MNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(XP1REC.XP1MNO);
  end
  converseLib.clearScreen();
  
  ;
   /* ====================== END OF PROCESS ======================*/
end // end AE02-5200

// Edit STYLE
Function AE02-5210()
  if (AE02W05.SY1STNBR == " ") /* aE02w05 Field eq spaces*/
    AE02W01.SY1STNBR = " "; /* Space out specific style wk*/
    AE02M001.SY1SSTNM = " "; /* Space out desc*/
    AE02W05.SY1SSTNM = " "; /* Space out desc*/
    return; /* Return to calling process*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *==================================**/
   /* *  Check Style in DPRODG.VSYCLR01  **/
   /* *==================================**/
  ;
  AE02-5220(); /* Select set style*/
  ;
  if (AE02M001.SY2CLRID > " ")
    while (AE02M001.SY2CLRID != PG2REC.SY2CLRID
     && SQLCA.VAGen_SQLCODE != 100)
      AE02-5230(); /* Validate style*/
    end
  else
    AE02-5230(); /* Validate style*/
  end
  ;
  AE02-5240(); /* Close style cursor*/
  ;
  ;
  ;
end // end AE02-5210

// select set style cursor
Function AE02-5220()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  set PG2REC empty; /* Reset rec work area*/
  ;
  PG2REC.XGPCD = XP1REC.XGPCD; /* GPC cd*/
  PG2REC.SY1STNBR = AE02W05.SY1STNBR; /* Style no.*/
  ;
  ;
  ;
   /* *===================================**/
   /* *  Select Set from DPRODG.VSYCLR01  **/
   /* *===================================**/
  ;
  try
    call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to calling process*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "5220"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE02-5220

// process style row
Function AE02-5230()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call and validate.*/
   /* For validation purposes only one (1) valid row retrieved*/
     /* will be enough to satisfy the existence check.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/
      AE02W05.SY1SSTNM = PG2REC.SY1SSTNM; /* move style desc*/
      AE02M001.SY1SSTNM = PG2REC.SY1SSTNM; /* move style desc*/
      AE02W01.AE02WFND = "Y"; /* STYLE FOUND*/
      if (AE02W05.SY2CLRID > " ")
        AE02W05.SY2CLRAB = PG2REC.SY2CLRAB; /* move COLOR desc*/
        AE02M001.SY2CLRAB = PG2REC.SY2CLRAB; /* move COLOR desc*/
      end
      return; /* Return to calling process*/
      ;
    end
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      if (AE02W01.AE02WFND != "Y") /* Style was not valid*/
        AE02W05.SY1STNBR = " "; /* Space out wk storage*/
        AE02W05.SY1SSTNM = " "; /* Space out desc*/
        AE02M001.SY1SSTNM = " "; /* Space out desc*/
        set AE02M001.SY1STNBR cursor, bold; /* Highlight field*/
        XP1REC.XP1MNO = 38; /* Indicate error message*/
      end
      if (AE02W05.SY2CLRID > " "
       && AE02W01.AE02WFND == "Y") /* Style was valid*/
        AE02W05.SY2CLRID = " "; /* Space out wk storage*/
        AE02W05.SY2CLRAB = " "; /* Space out desc*/
        AE02M001.SY2CLRAB = " "; /* Space out desc*/
        XP1REC.XP1MNO = 91; /* Indicate error message*/
        set AE02M001.SY2CLRID cursor, bold; /* Highlight field*/
      end
      ABWREC.ABWPRCSN = "5230"; /* Process number*/
      return; /* Exit to calling rtn*/
      ;
    end
    ;
  end
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "5230"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE02-5230

// close style cursor
Function AE02-5240()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO3120" ("CS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close set*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to calling process*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  ABWREC.ABWPRCSN = "5240"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  converseLib.validationFailed(10); /* Indicate system error*/
  ;
  converseLib.clearScreen();
   /* Clear screen before redisplay*/
  ;
  ;
  ;
end // end AE02-5240

// edit customer/store
Function AE02-5250()
  if (AE02W05.KUCCOID < 1) /* aE02w05 Field eq spaces*/
    return; /* Return to calling process*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *==================================**/
   /* *  Check cust in dprodc.vprdcu01   **/
   /* *==================================**/
  ;
  AE02-5251(); /* Select set customer*/
  ;
  AE02-5252(); /* Validate customer*/
  ;
  AE02-5253(); /* Close set customer*/
  ;
  ;
  ;
end // end AE02-5250

// select set cust cursor
Function AE02-5251()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  set PC2REC empty; /* Reset rec work area*/
  ;
  PC2REC.XGPCD = XP1REC.XGPCD; /* GPC cd*/
  PC2REC.KUCCOID = AE02W05.KUCCOID; /* customer*/
  PC2REC.KUMSTRID = AE02W05.KUMSTRID; /* store*/
  PC2REC.XNXCD = -1; /* wildcard dept.*/
  ;
  ;
  ;
   /* *===================================**/
   /* *  Select Set from DPRODc.Vprdcu01  **/
   /* *===================================**/
  ;
  try
    call "IO3340" ("S3", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to calling process*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "5251"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE02-5251

// process customer row
Function AE02-5252()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call and validate.*/
   /* For validation purposes only one (1) valid row retrieved*/
     /* will be enough to satisfy the existence check.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO3340" ("N3", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/
      return; /* Return to calling process*/
      ;
    end
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      set AE02M001.KUCCOID cursor, bold; /* Highlight field*/
      XP1REC.XP1MNO = 158; /* Indicate error message*/
      ABWREC.ABWPRCSN = "5252";
      return; /* Exit to calling rtn*/
      ;
    end
    ;
  end
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "5252"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODC.VPRDCU01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE02-5252

// close customer cursor
Function AE02-5253()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO3340" ("C3", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close set*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to calling process*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  ABWREC.ABWPRCSN = "5253"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  converseLib.validationFailed(10); /* Indicate system error*/
  ;
  converseLib.clearScreen();
   /* Clear screen before redisplay*/
  ;
  ;
  ;
end // end AE02-5253

// EDIT ACTION/STATUS CODES
Function AE02-5270()
             /* ----------------------------*/
             /* |edit special BUY STATUS   |*/
             /* ----------------------------*/
  ;
  if (AE02W05.AB7PBYST == " ") /* ab0xw05 Field eq spaces*/
    AE02M001.AB7PBYST = " "; /* Move blank ACTION CD*/
  else
    ;
    if (AE02W05.AB7PBYST != "C" /**/
     && AE02W05.AB7PBYST != "N" /**/
     && AE02W05.AB7PBYST != "D" /**/
     && AE02W05.AB7PBYST != "M") /**/
      AE02W05.AB7PBYST = " "; /* Move blank BUY STATUS*/
      set AE02M001.AB7PBYST cursor, bold; /* Highlight field*/
      XP1REC.XP1MNO = 151; /**/
      ABWREC.ABWPRCSN = "5270"; /* Process number*/
    end
  end
  ;
             /* ----------------------------*/
             /* |edit special action code  |*/
             /* ----------------------------*/
  if (AE02W05.AB7PBYTP == " ") /* ab0xw05 Field eq spaces*/
    AE02M001.AB7PBYTP = " "; /* Move blank ACTION CODE*/
  else
    ;
    if (AE02W05.AB7PBYTP != "B" /* BOUGHT*/
     && AE02W05.AB7PBYTP != "S") /* SKIP*/
      AE02W05.AB7PBYTP = " "; /* Move blank action*/
      set AE02M001.AB7PBYTP cursor, bold; /* Highlight field*/
      XP1REC.XP1MNO = 152;
      ABWREC.ABWPRCSN = "5270"; /* Process number*/
    end
  end
  ;
  ;
end // end AE02-5270

// Verify any changed data
Function AE02-5300()
   /* ------------------------------------------------------------*/
   /* Return to the previous process if no data was changed.*/
   /* Verify the data that was changed.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  AE02W01.AE02W-CHANGE-FLAG = "N";
  ABWREC.ABWIXM = 1; /* Initialize line index*/
  ABWREC.ABWIDX1 = 1; /* Initialize line index*/
  AE02W03.AE02WTRQ = 0; /* Initialize wk tot qty*/
  
  while (ABWREC.ABWIXM <= 10) /* Until end of lines*/
    if (AE02W04.AB7PBYTP[ABWIDX1] != AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM]
     || AE02W04.AE02W-AB-EMB-DISC-ID[ABWIDX1] != 
    AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM])
      if (AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM] != "B"
       && AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM] != "S")
        XP1REC.XP1MNO = 153;
        set AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM] cursor, bold;
        ABWREC.ABWPRCSN = "5300"; /* process number*/
      else
        if (AE02W04.PC4ORTYP[ABWIDX1] == "EM")
          if (AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM] == "B"
           && AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM] == 99)
            XP1REC.XP1MNO = 154;
            set AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM] cursor, bold;
            ABWREC.ABWPRCSN = "5300"; /* PROCESS NUMBER*/
          else
            if (AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM] < 1
             || AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM] > 99)
              XP1REC.XP1MNO = 155;
              set AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM] cursor, bold;
              ABWREC.ABWPRCSN = "5300"; /* PROCESS NUMBER*/
            else
              if (AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM] == "S"
               && AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM] == 99)
                AE02W-CHANGE-FLAG = "Y";
              else
                AE02S-0010(); /* GET STYLE TO CHECK PRODUCT TYPE*/
                if (PG2REC.XPRCD == "22")
                  AE02S-0020(); /* EDIT DISC*/
                else
                  AE02W-CHANGE-FLAG = "Y";
                end
              end
            end
          end
        else
          if (AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM] == "S"
           && AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM] == 99)
            AE02W-CHANGE-FLAG = "Y";
          else
            AE02S-0010(); /* GET STYLE TO CHECK PRODUCT TYPE*/
            if (PG2REC.XPRCD == "22")
              AE02S-0020(); /* EDIT DISC*/
            else
              AE02W-CHANGE-FLAG = "Y";
            end
          end
        end
      end
    end
    if (AE02W04.FY1FCTYC[ABWIDX1] != 
    AE02M001.FY1FCTYC[ABWIXM]) /* fcty cd changed*/
      AE02S-0030(); /* Edit fcty cd*/
    end
    ;
    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
    ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Increment line index*/
    ;
  end
  ;
  if (XP1REC.XP1MNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(XP1REC.XP1MNO);
  end
  ;
   /* EZERTN                        ; Return to previous process*/
  ;
  ;
  ;
end // end AE02-5300

// Process valid input request
Function AE02-6000()
   /* ------------------------------------------------------------*/
   /* If a scroll request, adjust temporary storage page number.*/
   /* Update any changed data.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Scroll back requested*/
    ;
    ABWREC.ABWTSP = ABWREC.ABWTSP - 1; /* Decrement page number*/
    AE02W04.AE02WMX4 = 0;
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  if (converseVar.eventKey is pf8) /* Scroll FWRD requested*/
    ;
    ABWREC.ABWTSP = ABWREC.ABWTSP + 1; /* Increment page number*/
    AE02W04.AE02WMX4 = 0;
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
  if (converseVar.eventKey is enter) /* update requested*/
    ;
    if (AE02W01.AE02W-UPDATE-PENDING != "Y")
      ABWREC.ABWNMO = 89;
      set AE02M001.SY1STNBR skip;
      set AE02M001.SY2CLRID skip;
      set AE02M001.KUMSTRID skip;
      set AE02M001.KUCCOID skip;
      set AE02M001.AB7PBYTP skip;
      set AE02M001.AB7PBYST skip;
      ABWREC.ABWIXM = 1;
      while (ABWREC.ABWIXM <= 10
       && AE02M001.AE02M-SY-STY-NBR[ABWIXM] > " ")
        set AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM] skip;
        set AE02M001.AE02M-AB-PRPS-BUY-STAT[ABWIXM] skip;
        set AE02M001.AE02M-SY-STY-NBR[ABWIXM] skip;
        set AE02M001.AE02M-SY-COLR-CD-ID[ABWIXM] skip;
        set AE02M001.AE02M-CU-CO-ID[ABWIXM] skip;
        set AE02M001.AE02M-CU-STOR-ID[ABWIXM] skip;
        set AE02M001.AE02M-OP-CUST-ORD-ID[ABWIXM] skip;
        set AE02M001.AE02M-OP-NIKE-ORD-ID[ABWIXM] skip;
        set AE02M001.AE02M-QUANTITY[ABWIXM] skip;
        set AE02M001.AE02M-CREDIT-APPROVAL[ABWIXM] skip;
        set AE02M001.AE02M-DISC-APPROVAL[ABWIXM] skip;
        set AE02M001.FY1FCTYC[ABWIXM] skip;
        ABWIXM = ABWIXM + 1;
      end
      AE02W01.AE02W-UPDATE-PENDING = "Y";
      return;
    end
    ;
    AE02W01.AE02W-UPDATE-PENDING = "N";
    ABWREC.ABWNMO = 0;
    ;
    AE02-6100(); /* Update  data - dabuy.vCRSTb01 table*/
    ;
    ABWREC.ABWNMO = 045;
  end
end // end AE02-6000

// UPDATE VCRSTB01 TABLE
Function AE02-6100()
  ;
  ABWREC.ABWIXM = 1; /* Initialize line index*/
  ABWREC.ABWIDX1 = 1; /* Initialize line index*/
  ;
  ;
  while (ABWREC.ABWIXM <= AE02W04.AE02WMX4) /* Until end of lines*/
    if (AE02W04.AB7PBYTP[ABWIDX1] != AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM]
     || AE02W04.AE02W-AB-EMB-DISC-ID[ABWIDX1] != 
    AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM]
     || AE02W04.FY1FCTYC[ABWIDX1] != 
    AE02M001.FY1FCTYC[ABWIXM])
      ;
      AE02-6120(); /* obtain unique record*/
      AE02-6130();
      ;
    end
    ;
    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
    ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Increment line index*/
    ;
  end
  ;
  AE02-6140(); /* Update TSQ record.*/
  ;
   /* EZERTN                        ; Return to previous process*/
  ;
  ;
  ;
end // end AE02-6100

// UPDATE VCRSTB01 ROW
Function AE02-6120()
   /* ------------------------------------------------------------*/
   /* Format the data from the internal array.*/
   /* ------------------------------------------------------------*/
  ;
  set VCRSTB01 empty;
  VCRSTB01.XGPCD = AE02W04.XGPCD[ABWIDX1]; /* GPC CODE*/
  VCRSTB01.XSECD = AE02W04.XSECD[ABWIDX1]; /* SEASON CODE*/
  VCRSTB01.XSNYR = AE02W04.XSNYR[ABWIDX1]; /* SEASON YEAR*/
  VCRSTB01.KUCCOID = AE02W04.KUCCOID[ABWIDX1]; /* cust NUMBER*/
  VCRSTB01.KUMSTRID = AE02W04.KUMSTRID[ABWIDX1]; /* STORE ID*/
  VCRSTB01.XDVCD = AE02W04.XDVCD[ABWIDX1]; /* DIVISION CODE*/
  VCRSTB01.SY1STNBR = AE02W04.SY1STNBR[ABWIDX1]; /* style number*/
  VCRSTB01.SY2CLRID = AE02W04.SY2CLRID[ABWIDX1]; /* color id*/
  VCRSTB01.OP1PARTN = AE02W04.OP1PARTN[ABWIDX1];
  VCRSTB01.OP1CUOID = AE02W04.OP1CUOID[ABWIDX1];
  VCRSTB01.OP1NORID = AE02W04.OP1NORID[ABWIDX1];
  VCRSTB01.AB7PBYST = AE02W04.AB7PBYST[ABWIDX1]; /* status*/
  VCRSTB01.AB7PBSDT = AE02W04.AB7PBSDT[ABWIDX1]; /* status dt*/
  VCRSTB01.PC4ORTYP = AE02W04.PC4ORTYP[ABWIDX1]; /* order type*/
  ;
  XX0XS01();
  XP1REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  XP1REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VCRSTB01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VCRSTB01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  VCRSTB01.AB-EMB-DISC-ID = AE02M001.AE02M-AB-EMB-DISC-ID[ABWIDX1];
  VCRSTB01.AB7PBYTP = AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM];
  VCRSTB01.FY1FCTYC = AE02M001.FY1FCTYC[ABWIDX1]; /* fcty*/
  ;
  if (AE02M001.AE02M-AB-PRPS-ACT-TYP[ABWIXM] != AE02W04.AB7PBYTP[ABWIDX1]) /**/
    VCRSTB01.AB7PBADT = XX0XW01.XX0XWDAT; /* update type date*/
  else
    VCRSTB01.AB7PBADT = AE02W04.AB7PBADT[ABWIDX1]; /* move type date*/
  end
  ;
  VCRSTB01.ZZZCHGCT = AE02W04.ZZZCHGCT[ABWIDX1];
   /* ------------------------------------------------------------*/
   /* update row in the table.*/
   /* ------------------------------------------------------------*/
   /* If any error, indicate a system error.*/
   /* Format the data in the internal  array display line.*/
   /* ------------------------------------------------------------*/
  ;
   /* ------------------- Y2K OUT BEGIN ---------------------------*/
   /*  */
   /* CALL IO6610 'U ',SQLCA,VCRSTB01 (NOMAPS,NONCSP,REPLY;*/
   /*  */
   /* ------------------- Y2K OUT END -----------------------------*/
   /* ------------------- Y2K IN BEGIN ---------------------------*/
   /*  */
  try
    call "VCRSTB02" ("U ", SQLCA, VCRSTB01) {isNoRefresh = yes, isExternal = yes};
  end
   /*  */
   /* ------------------- Y2K IN END -----------------------------*/
   /* ****************************************************/
  ;
  if (sysVar.errorCode == "00000000") /* successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* no sql errors*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.commit(); /* ; commit*/
      return; /* return*/
    end
  end
  ;
  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "6120"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "UPDATE CRSTB01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCRSTB01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/
  ;
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end AE02-6120

// update row to ws array
Function AE02-6130()
   /* ------------------------------------------------------------*/
   /* Format the data to the internal array.*/
   /* ------------------------------------------------------------*/
  ;
  AE02W04.ZZZCHGCT[ABWIDX1] = AE02W04.ZZZCHGCT[ABWIDX1] + 1;
  AE02W04.AB7PBYTP[ABWIDX1] = VCRSTB01.AB7PBYTP; /* action type*/
  AE02W04.AE02W-AB-EMB-DISC-ID[ABWIDX1] = VCRSTB01.AB-EMB-DISC-ID;
  AE02W04.FY1FCTYC[ABWIDX1] = VCRSTB01.FY1FCTYC;
  ;
  ;
end // end AE02-6130

// update page to temp. storage
Function AE02-6140()
   /* ------------------------------------------------------------*/
   /* Update the page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  AE02W04.AE02WLEN = ABWREC.ABWTSL; /* Temporary storage length*/
  TA5REC.TA5APPID = ABWREC.ABWAPPL; /* Application identification*/
  TA5REC.TA5TSQIX = ABWREC.ABWTSP; /* Highest page number*/
  TA5REC.TA5FNCCD = "U"; /* Function code*/
  ;
  try
    call "TA0050" (AE02W04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
                                    /* ;subroutine*/
  ;
  if (TA5REC.TA5RTNCD != 0) /* Error was found*/
    ;
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "6140"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "UPDATE PAGE TO TEMPORARY STORAGE";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/
    ;
    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/
    ;
    AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    ;
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  set AE02W04 empty; /* Clear temporary storage record*/
  ;
  ;
end // end AE02-6140

// Determine style product type
Function AE02S-0010()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  set PG2REC empty; /* Reset rec work area*/
  ;
  PG2REC.XGPCD = "03"; /* GPC cd*/
  PG2REC.SY1STNBR = AE02W04.SY1STNBR[ABWIDX1]; /* Style no.*/
  PG2REC.SY2CLRID = AE02W04.SY2CLRID[ABWIDX1]; /* color id.*/
  PG2REC.XDMCD = "00"; /* diminsion code*/
  ;
  ;
  ;
   /* *===================================**/
   /* *  Select unique from DPRODG.VSYCLR01  **/
   /* *===================================**/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to calling process*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "5220"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE02S-0010

// VERIFY DISC NUMBER
Function AE02S-0020()
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify if DISC NUMBER IS FOUND ON DABUY.VCRSTE01*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set VCRSTE01 empty; /* initialize db record*/
  VCRSTE01.XGPCD = XP1REC.XGPCD; /* gpc cd*/
  VCRSTE01.KUCCOID = AE02M001.AE02M-CU-CO-ID[ABWIXM]; /* CUST NUMBER*/
  VCRSTE01.KUMSTRID = AE02M001.AE02M-CU-STOR-ID[ABWIXM]; /* STORE*/
  VCRSTE01.AB-EMB-DISC-ID = AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM];
  ;
  ;
   /* *=============================**/
   /* *  Access DFCTY.VFCTY001 DB   **/
   /* *=============================**/
  ;
  try
    call "IO6630" ("S ", SQLCA, VCRSTE01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      if (VCRSTE01.AB-EMB-DISC-STAT == "I") /* DISC STATUS = INACTIVE*/
        XP1REC.XP1MNO = 156;
        ABWREC.ABWPRCSN = "S20 ";
        set AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM] cursor, bold;
        return;
      else
        AE02W01.AE02W-CHANGE-FLAG = "Y";
        if (AE02W04.AB7PBYST[ABWIDX1] == "M"
         || AE02W04.AB7PBYST[ABWIDX1] == "D")
          AE02M001.AE02M-AB-PRPS-BUY-STAT[ABWIDX1] = " ";
          AE02W04.AB7PBYST[ABWIDX1] = " ";
          AE02M001.AE02M-DISC-APPROVAL[ABWIDX1] = "Y";
          AE02W04.AE02W-DISC-APPROVAL[ABWIDX1] = "Y";
        end
        if (AE02W04.AB7PBYST[ABWIDX1] == "N")
          AE02W04.AB7PBYST[ABWIDX1] = "C";
          AE02M001.AE02M-AB-PRPS-BUY-STAT[ABWIDX1] = "C";
          AE02M001.AE02M-DISC-APPROVAL[ABWIDX1] = "Y";
          AE02W04.AE02W-DISC-APPROVAL[ABWIDX1] = "Y";
        end
        return;

      end
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      set AE02M001.AE02M-AB-EMB-DISC-ID[ABWIXM] cursor, bold;
      XP1REC.XP1MNO = 157; /* Indicate error message*/
      ABWREC.ABWPRCSN = "S20 "; /* Process number*/
      return; /* Return to calling process*/
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S20 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DABUY.VCRSTE01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCRSTE01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE02S-0020

// Edit factory code
Function AE02S-0030()
   /* ------------------------------------------------------------*/
   /* Edit fcty code if one is entered*/
   /* Otherwise default it from the Buy Plan tbl (DABUY.VBPLAN01)*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (AE02M001.FY1FCTYC[ABWIXM] > "    ")
    AE02S-0040(); /* Code exists on fcty code table*/
    if (XP1REC.XP1MNO == 0) /* Edit fcty/style on fcty code table*/
      AE02S-0050(); /* declare cursor*/
      AE02S-0052(); /* fetch cursor*/
      AE02S-0054(); /* close cursor*/
    end
  else
    AE02S-0060(); /* Default factory from fcty/sty tbl*/
  end
  ;
end // end AE02S-0030

// Select unique factory code
Function AE02S-0040()
   /* ------------------------------------------------------------*/
   /* Verify if Factory cd entered is found in DFCTY.VFCTY001*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set FY1REC empty; /* initialize db record*/
  FY1REC.XGPCD = "03"; /* gpc cd*/
  FY1REC.FY1FCTYC = AE02M001.FY1FCTYC[ABWIXM]; /* Fld office*/
  ;
  ;
   /* *=============================**/
   /* *  Access DFCTY.VFCTY001 DB   **/
   /* *=============================**/
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      AE02W01.AE02W-CHANGE-FLAG = "Y";
  /* MOVE 'XD' TO ae02M001.ae02MOTO(ABWIXM);*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      set AE02M001.FY1FCTYC[ABWIXM] cursor, bold;
      XP1REC.XP1MNO = 41; /* Indicate error message*/
      ABWREC.ABWPRCSN = "0040"; /* Process number*/
      return; /* Return to calling process*/
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "52G "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DFCTY.VFCTY001 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE02S-0040

// Select set from factory/style
Function AE02S-0050()
   /* ------------------------------------------------------------*/
   /* Verify if Factory/Style combination is valid*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set FY2REC empty; /* initialize db record*/
  FY2REC.XGPCD = "03"; /* gpc cd*/
  FY2REC.FY1FCTYC = AE02M001.FY1FCTYC[ABWIXM]; /* factory*/
  FY2REC.SY1STNBR = AE02M001.AE02M-SY-STY-NBR[ABWIXM]; /* style*/
  FY2REC.XSECD = "*"; /* season code*/
  FY2REC.XSNYR = -1; /* season code*/
  FY2REC.XXXSTAT = "*"; /* season code*/
  ;
  ;
   /* *=============================**/
   /* *  Access DFCTY.VFCTY001 DB   **/
   /* *=============================**/
  ;
  try
    call "IO2980" ("S1", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* Normal return code*/
      return;
    end
    ;
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S21 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DFCTY.VFYSTY01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE02S-0050

// Fetch row from factory/style
Function AE02S-0052()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *===================================**/
   /* *  Select Next from DFCTY.VFCTY001  **/
   /* *===================================**/
  ;
  try
    call "IO2980" ("N1", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, save style name, then return to calling*/
                  /* process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    if (SQLCA.VAGen_SQLCODE == +100) /* If no row found for fcty/style*/
      XP1REC.XP1MNO = 88;
      set AE02M001.FY1FCTYC[ABWIXM] cursor, bold;
      return; /* Return to calling process*/
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S12 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT NEXT TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
end // end AE02S-0052

// Close cursor on factory/style
Function AE02S-0054()
   /* ------------------------------------------------------------*/
   /* Close set on Dprodc.Vpoitm01*/
   /* ------------------------------------------------------------*/
  ;
  ;
  ;
  try
    call "IO2980" ("C1", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return; /* Return to calling process*/
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "D02 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S23 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SET TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
end // end AE02S-0054

// Default factory from fcty/sty
Function AE02S-0060()
  ABWREC.ABWSWC = "Y";
  AE02W01.AE02W-DFLT-FCTY1 = "    ";
  AE02W01.AE02W-DFLT-FCTY2 = "    ";
  AE02S-0070(); /* declare cursor*/
  AE02S-0072(); /* fetch cursor*/
  if (ABWREC.ABWSWC == "Y")
    AE02W01.AE02W-DFLT-FCTY1 = FY2REC.FY1FCTYC;
    AE02W01.AE02W-DFLT-FCTY2 = FY2REC.FY1FCTYC;
    AE02S-0072(); /* fetch cursor*/
    if (ABWREC.ABWSWC == "Y")
      AE02W01.AE02W-DFLT-FCTY2 = FY2REC.FY1FCTYC;
    end
    AE02S-0074(); /* close cursor*/
  end
  ;
  if (AE02W01.AE02W-DFLT-FCTY1 > "    ")
    if (AE02W01.AE02W-DFLT-FCTY1 == AE02W01.AE02W-DFLT-FCTY2)
      AE02M001.FY1FCTYC[ABWIXM] = AE02W01.AE02W-DFLT-FCTY1;
    else
      AE02S-0080(); /* foreign factory flag 1*/
      AE02S-0090(); /* foreign factory flag 2*/
      if (AE02W01.AE02W-FOREIGN-IND1 == "Y"
       && AE02W01.AE02W-FOREIGN-IND2 == "Y")
        AE02M001.FY1FCTYC[ABWIXM] = "XOF";
      else
        if (AE02W01.AE02W-FOREIGN-IND1 == "N"
         && AE02W01.AE02W-FOREIGN-IND2 == "N")
          AE02M001.FY1FCTYC[ABWIXM] = "XDM";
        else
          AE02M001.FY1FCTYC[ABWIXM] = "XXX";
        end
      end
    end
  else
    AE02M001.FY1FCTYC[ABWIXM] = "XXX";
  end
  ;
  if (AE02W04.FY1FCTYC[ABWIDX1]
   != AE02M001.FY1FCTYC[ABWIXM])
    AE02W01.AE02W-CHANGE-FLAG = "Y";
  end
  ;
  return;
  ;
end // end AE02S-0060

// Select set from fcty/sty
Function AE02S-0070()
   /* ------------------------------------------------------------*/
   /* Select set using style/season/year*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set FY2REC empty; /* initialize db record*/
  FY2REC.XGPCD = "03"; /* gpc cd*/
  FY2REC.FY1FCTYC = "*"; /* factory*/
  FY2REC.SY1STNBR = AE02M001.AE02M-SY-STY-NBR[ABWIXM]; /* style*/
  FY2REC.XSECD = AE02W04.XSECD[ABWIXM]; /* season code*/
  FY2REC.XSNYR = AE02W04.XSNYR[ABWIXM]; /* season year*/
  FY2REC.XXXSTAT = "*"; /* status*/
  ;
  ;
   /* *=============================**/
   /* *  Access DFCTY.VFCTY001 DB   **/
   /* *=============================**/
  ;
  try
    call "IO2980" ("S2", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* Normal return code*/
      return;
    end
    ;
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S21 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DFCTY.VFYSTY01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE02S-0070

// Fetch row from fcty/sty
Function AE02S-0072()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *===================================**/
   /* *  Select Next from DFCTY.VFYSTY001  **/
   /* *===================================**/
  ;
  try
    call "IO2980" ("N2", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, save style name, then return to calling*/
                  /* process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ABWREC.ABWSWC = "N";
      return;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S12 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT NEXT TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
end // end AE02S-0072

// Close cursor on fcty/sty
Function AE02S-0074()
   /* ------------------------------------------------------------*/
   /* Close set on DFCTY.VFYSTY01*/
   /* ------------------------------------------------------------*/
  ;
  ;
  ;
  try
    call "IO2980" ("C2", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return; /* Return to calling process*/
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "D02 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S23 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SET TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
end // end AE02S-0074

// Check foreign flag on fcty 1
Function AE02S-0080()
  ;
  ;
   /* ------------------------------------------------------------*/
   /* retrieve foreign factory flag from DFCTY.VFCTY001*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set FY1REC empty; /* initialize db record*/
  FY1REC.XGPCD = "03"; /* gpc cd*/
  FY1REC.FY1FCTYC = AE02W01.AE02W-DFLT-FCTY1; /* fld office*/
  ;
  ;
   /* *=============================**/
   /* *  Access DFCTY.VFCTY001 DB   **/
   /* *=============================**/
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      AE02W01.AE02W-FOREIGN-IND1 = FY1REC.FY1FRGN;
      return;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S24 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DFCTY.VFCTY001 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE02S-0080

// Check foreign flag on fcty 2
Function AE02S-0090()
   /* ------------------------------------------------------------*/
   /* retrieve foreign factory flag from DFCTY.VFCTY001*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set FY1REC empty; /* initialize db record*/
  FY1REC.XGPCD = "03"; /* gpc cd*/
  FY1REC.FY1FCTYC = AE02W01.AE02W-DFLT-FCTY2; /* fld office*/
  ;
  ;
   /* *=============================**/
   /* *  Access DFCTY.VFCTY001 DB   **/
   /* *=============================**/
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      AE02W01.AE02W-FOREIGN-IND2 = FY1REC.FY1FRGN;
      return;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S24 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DFCTY.VFCTY001 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AE02M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE02S-0090

//*** RECORD=AE02W01 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record AE02W01 type basicRecord
  10 AE02WIDX AE02WIDX ; 
  10 AE02W-QUANTITY AE02W-QUANTITY ; 
  10 AE02W-UPDATE-PENDING AE02W-UPDATE-PENDING ; 
  10 AE02WFND AE02WFND ; 
  10 SY1STNBR SY1STNBR ; 
  10 AE02WSZT AE02WSZT ; 
  10 AE02WSZM AE02WSZM ; 
  10 AE02W-CHANGE-FLAG AE02W-CHANGE-FLAG ; 
  10 AE02W-DFLT-FCTY1 AE02W-DFLT-FCTY1 ; 
  10 AE02W-DFLT-FCTY2 AE02W-DFLT-FCTY2 ; 
  10 AE02W-FOREIGN-IND1 AE02W-FOREIGN-IND1 ; 
  10 AE02W-FOREIGN-IND2 AE02W-FOREIGN-IND2 ; 
  10 FY1FCTYC FY1FCTYC ; 
end // end AE02W01

//*** RECORD=AE02W02 ****
// Temporary storage record for TSXX - Transportation Prototype
// ***********************
Record AE02W02 type basicRecord
  10 ABWLEN ABWLEN ; 
  10 * char(4092) ; 
end // end AE02W02

//*** RECORD=AE02W03 ****
// ************************************************************
// Temporary storage record - for VCRSTB01 MAINTENANCE
// ************************************************************
// ***********************
Record AE02W03 type basicRecord
  5 AE02WGP3 AE02WGP3 ; 
    10 AE02WMX3 AE02WMX3 ; 
    10 AE02WTRQ AE02WTRQ ; 
    10 AE02WAY3 AE02WAY3 [5] ; 
      15 XSECD XSECD ; 
      15 ZZZCHGCT ZZZCHGCT ; 
end // end AE02W03

//*** RECORD=AE02W04 ****
// Temporary storage record for AB0D
// ***********************
Record AE02W04 type basicRecord
  5 * char(576) ; 
    10 AE02WLEN AE02WLEN ; 
    10 AE02WMX4 AE02WMX4 ; 
    10 * char(57) [10] ; 
      15 XGPCD XGPCD ; 
      15 AB7PBYTP AB7PBYTP ; 
      15 AB7PBADT AB7PBADT ; 
      15 AB7PBYST AB7PBYST ; 
      15 AB7PBSDT AB7PBSDT ; 
      15 KUCCOID KUCCOID ; 
      15 KUMSTRID KUMSTRID ; 
      15 OP1CUOID OP1CUOID ; 
      15 OP1NORID OP1NORID ; 
      15 OP1PARTN OP1PARTN ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
      15 AE02W-QUANTITY AE02W-QUANTITY ; 
      15 AE02W-AB-EMB-DISC-ID AE02W-AB-EMB-DISC-ID ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 AE02W-DISC-APPROVAL AE02W-DISC-APPROVAL ; 
      15 AE02W-CREDIT-APPROVAL AE02W-CREDIT-APPROVAL ; 
      15 XSECD XSECD ; 
      15 XSNYR XSNYR ; 
      15 XDVCD XDVCD ; 
      15 PC4ORTYP PC4ORTYP ; 
      15 ZZZCHGCT ZZZCHGCT ; 
end // end AE02W04

//*** RECORD=AE02W05 ****
// Temporary table record for AE02 - 2nd Half
// ***********************
Record AE02W05 type basicRecord
  10 SY1STNBR SY1STNBR ; 
  10 SY1SSTNM SY1SSTNM ; 
  10 SY2CLRID SY2CLRID ; 
  10 SY2CLRAB SY2CLRAB ; 
  10 AB7PBYTP AB7PBYTP ; 
  10 KUCCOID KUCCOID ; 
  10 KUMSTRID KUMSTRID ; 
  10 AB7PBYST AB7PBYST ; 
end // end AE02W05

//*** RECORD=VCRSTB01 ****
// ****** SEASON/FACTORY/STYLE/COLOR/BUY MONTH/SIZE ***********
// 
// DB2 TABLE:           DABUY.VCRSTB01
// 
// COPYLIB MEMBER:      DCL01122
// 
// I/O MOD:             IO????
// DATE CREATED:        01/07/93
// 
// MAINTENANCE LOG:
// 
//   DATE      INIT.      COMMENT
// --------    --------   -------------------------------------
// 01/07/93    SB         INITIAL RECORD CREATION
// 12/06/1997  TTHAN1     Y2KFIX - CHANGE SIZE OF AB3BUYMO FORM
//                        4 TO 6.
// ************************
Record VCRSTB01 type basicRecord
  5 VCRSTB01-GROUP VCRSTB01-GROUP ; 
    10 VCRSTB01-KEY VCRSTB01-KEY ; 
      15 XGPCD XGPCD ; 
      15 XSECD XSECD ; 
      15 XSNYR XSNYR ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 XWHCD XWHCD ; 
      15 KUCCOID KUCCOID ; 
      15 KUMSTRID KUMSTRID ; 
      15 PG1SC4CD PG1SC4CD ; 
      15 XDVCD XDVCD ; 
      15 PC4ORTYP PC4ORTYP ; 
      15 AB3BUYMO AB3BUYMO ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
      15 XDMCD XDMCD ; 
    10 AB7PBYTP AB7PBYTP ; 
    10 AB7PBADT AB7PBADT ; 
    10 AB7PBYST AB7PBYST ; 
    10 AB7PBSDT AB7PBSDT ; 
    10 OP1PARTN OP1PARTN ; 
    10 OP1CUOID OP1CUOID ; 
    10 OP1NORID OP1NORID ; 
    10 AB-EMB-DISC-ID AB-EMB-DISC-ID ; 
    10 SY5SZID SY5SZID [10] ; 
    10 AB7PBYQY AB7PBYQY [10] ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end VCRSTB01

// PC_PO_NBR
DataItem AE02W-AB-EMB-DISC-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// change flag
DataItem AE02W-CHANGE-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AE02W-CREDIT-APPROVAL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Default factory 1
DataItem AE02W-DFLT-FCTY1 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Default factory 2
DataItem AE02W-DFLT-FCTY2 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AE02W-DISC-APPROVAL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Foreign flag 1
DataItem AE02W-FOREIGN-IND1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Foreign flag 2
DataItem AE02W-FOREIGN-IND2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws-quantity
DataItem AE02W-QUANTITY int {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// update flag
DataItem AE02W-UPDATE-PENDING char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// array for temp. record
DataItem AE02WAY3 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// style found
DataItem AE02WFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temporary record
DataItem AE02WGP3 char(26)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// INDEX
DataItem AE02WIDX num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// Temporary storage length
DataItem AE02WLEN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// maximum array size
DataItem AE02WMX3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// total running qty for this sty
DataItem AE02WTRQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end
// max. loaded into the array
DataItem AE02WMX4 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ab0x map array size
DataItem AE02WSZM num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// array size of temp. record
DataItem AE02WSZT num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// group item for record level
DataItem VCRSTB01-GROUP char(127)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem VCRSTB01-KEY char(39)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

