package ae06;

import ab.common.*;
import corpcom2.XP1REC;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPAB001;
import corpcom3.XPTA0P;
import corpcom3.XSABS03;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XSETBL;
import ku.common.KUCCOID;
import ku.common.KUMSTRID;
import pc.common.PC2REC;
import pc.common.PC4ORTYP;
import pg.common.PG1REC;
import pg.common.PG2REC;
import sy.common.SY1SSTNM;
import sy.common.SY1STNBR;
import sy.common.SY2CLRAB;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TA6REC;
import ta.common.TAEREC;
import ta.common.TARJCL;
import ta.common.TARTYPE;
//*** PROGRAM=AE06 ****
// This application allows the user to submit a batch job which
// will create the Size Break Table.
// 
// This application will validate the information entered by
// the user, and then write and submit JCL (Job Control
// Language).
// 
// Job Control Language statements are formatted and submitted
// through the Internal Reader Transient Data Queue (INTR).
// The job executes in batch and all output is routed to the
// remote destination specified through this application.
// 
// The JCL for each job is stored as a table.
// There are two formats available for a JCL statement.
// They are either a fixed or a variable format.
// 
// A fixed statement is identified in the table by a blank JCL
// statement type (TARTYPE).  These statements are written
// directly to the internal reader with no changes.
// 
// Variable statements are those that contain data that may
// change each time the job is submitted.  They are identified
// by a non-blank statement type.  The type determines the data
// that is to be substituted and the columns into which it is
// to be placed, as follows:
// 
// TARTYPE         JCL statement        Variable        Columns
// -------         -------------        --------        -------
//    J                JOB              TARUSRID          5-10
//                     " "              TARUSRNM         27-46
//    N  (Test only)  NOTIFY            TARUSRID         23-28
//    O               OUTPUT            TARCOPY            34
//                    "    "            TARDEST          41-46
//    P             Parameters          TARJCL            1-80
// 
// The data in working storage is substituted and the statement
// is written to the internal reader.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, from the menu, only.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          03/23/89  JRAMOS  New application.
//          03/21/90  wkinca  modify notify on job card in jcl.
//          07/16/90  jwood   removed ut2rec from t&r list
// Y2KFIX   12/11/97  KSUMME  Y2K MODIFICATIONS MADE TO:
//                            (global chg due to table chg:
//                             XP1REC, AB3REC, XPAB020)
// *********************
Program AE06 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AB3REC AB3REC; // record
  ABPREC ABPREC; // record
  ABWREC ABWREC; // record
  AE06W01 AE06W01; // record
  AE06W02 AE06W02; // record
  AE06W03 AE06W03; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  PC2REC PC2REC; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  XP1REC XP1REC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use AE06T01; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use AE06M.AE06M001, // form
  		 AE06M.TA0PM001,
  		 AE06M.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAB001: XPAB001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse Apparel Buy Create Color Breakout Process*/
     /* ------------------------------------------------------------*/
    ;
    set AE06M001 initial; /* Initialize map output area*/
    set AE06W01 empty; /* Initialize working storage*/
    set AE06W02 empty; /* Initialize working storage*/
    set AE06W03 empty; /* Initialize working storage*/
    set ABPREC empty; /* Initialize working storage*/
    set ABWREC empty; /* Initialize working storage*/
    set ERRSQLCA empty; /* Initialize working storage*/
    set PG1REC empty; /* Initialize working storage*/
    set PG2REC empty; /* Initialize working storage*/
    set SQLCA empty; /* Initialize working storage*/
    set TAEREC empty; /* Initialize working storage*/
    set TA1REC empty; /* Initialize working storage*/
    set XX0XW01 empty; /* Initialize working storage*/
    set XX0XW02 empty; /* Initialize working storage*/
    ABWREC.ABWAPPL = "AE06"; /* Initialize appl id*/
    ABWREC.ABWPRCSN = "0000"; /* Initialize process number*/
    ;
                     /* (Set map item values)*/
    ;
    ABWREC.ABWMAP = "1"; /* Indicate map to be displayed*/
    AE06M001.XXXCURDT = VGVar.currentShortGregorianDate; /* To map current date*/
    AE06M001.KUCCOID = -1; /* Wildcard customer*/
    AE06M001.KUMSTRID = -1; /* Wildcard store*/
    AE06M001.AE06MSEL = 1; /* default to sort option one*/
    ;
    AE06W02.KUCCOID = -1;
    AE06W02.KUMSTRID = -1;
    AE06W02.AE06WSEL = 1;
                     /* (Process COMMAREA items:)*/
    ;
    if (COMMAREA.CAITEM > " ") /* Application data exists*/
      AE06M001.CAITEM = COMMAREA.CAITEM; /* Applic data to map*/
      set AE06M001.CAITEM modified; /* MDT on*/
      COMMAREA.CAITEM = " "; /* Clear applic data*/
    end
    ;
    ;
    ;
    goto AE06-0001; /* Converse the main process*/
    ;
    ;
    AE06-0001: AE06-0001();
    ;
    goto AE06-0001; /* Converse the main process*/
    ;
  end // end main
end // end AE06

// Application main process
Function AE06-0001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* -- Display the first (and only) map.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *================================================**/
   /* *  Define Map Environment, Assign/Edit Defaults  **/
   /* *================================================**/
  ;
  ABWREC.ABWPRCSN = "M001"; /* Indicate map to system*/
  ABWREC.XXXMAPNM = ABWREC.ABWERLOC; /* Move map name to afwrec*/
  ABWREC.ABWPRCSN = "0000"; /* Re-initialize process name*/
  ;
  ;
  if (ABWREC.ABWFIRST == " ") /* First time through*/
    ;
    if (XP1REC.XP1MNO == 0) /* No errors found*/
      ABWREC.ABWPRCSN = "001 "; /* Process number*/
      AE06M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    end
    ;
  end
  ;
  ;
   /* *===============**/
   /* *  Display map  **/
   /* *===============**/
  ;
  AE06-1000(); /* Display map*/
  ;
  ;
end // end AE06-0001

// Driver process for application
Function AE06-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  AE06-1100(); /* Format and display the map*/
  ;
  AE06-1200(); /* Check attention identifier*/
  ;
  AE06-1300(); /* Reset fields to normal intensity*/
  ;
  AE06-1400(); /* Validate selection criteria*/
  ;
  AE06-1500(); /* Process valid input request*/
  ;
  ;
end // end AE06-1000

// Format and display the map
Function AE06-1100()
   /* ------------------------------------------------------------*/
   /* -If no error to display, format and display the map.*/
   /* -Indicate sound audible alarm for any errors detected.*/
   /* -Note that validation is done first (for the defaults)*/
     /* before the first screen is displayed. In this way, the*/
     /* user does not have to press enter to activate the*/
     /* validation process. When the first screen is displayed,*/
     /* all fields have been validated and the results shown.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (XP1REC.XP1MNO != 0) /* Error message to display*/
    set AE06M001 alarm; /* Indicate sound alarm*/
  end
  ;
  if (XP1REC.XP1MNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(XP1REC.XP1MNO);
  end /* Move message no. for display*/
  ;
  XP1REC.XP1MNO = 0; /* Reset work message area*/
  ;
  ;
  ;
  converse AE06M001 ;
  ;
  ABWREC.ABWFIRST = "N"; /* Set first time switch off*/
  ;
  ;
end // end AE06-1100

// Check attention identifier
Function AE06-1200()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    ABWREC.ABWPRCSN = "1200"; /* Process number*/
    AE06M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    set AE06M001.SY1STNBR cursor; /* set cursor*/
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  ;
  if (AE06M001.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = AE06M001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = AE06M001.CAITEM; /* Application data*/
      XSABS03(); /* Exit to another application*/
      XP1REC.XP1MNO = converseVar.validationMsgNum;
                                   /* Save EZEMNO to common msg area*/
    else
      XP1REC.XP1MNO = 4; /* Indicate PF key not valid*/
    end
    ;
    set AE06M001.CATOAP cursor, modified, bold; /* Highlight*/
    ABWREC.ABWPRCSN = "1200"; /* Process number*/
    AE06M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  ;
  if (AE06M001.CAITEM > " ") /* Application data was entered*/
    set AE06M001.CAITEM cursor, modified, bold; /* Highlight data*/
    XP1REC.XP1MNO = 7; /* Enter only with fast path*/
    ABWREC.ABWPRCSN = "1200"; /* Process number*/
    AE06M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    exit stack; /* Redisplay map*/
  end
  ;
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "AB0MM001"; /* Appl find code*/
    end
    ;
    XSABS03(); /* Exit to another application*/
    ;
    exit stack; /* Exit to redisplay map*/
  end
  ;
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    ABWREC.ABWPRCSN = "1200"; /* Process number*/
    AE06M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    XP1REC.XP1MNO = 4; /* Indicate invalid attention key*/
    ;
    ;
    if (converseVar.eventKey is pa1) /* PA1 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
end // end AE06-1200

// Reset highlighted fields
Function AE06-1300()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  set AE06M001.SY1STNBR initialAttributes; /* STYLE NUMBER*/
  set AE06M001.SY2CLRID initialAttributes; /* STYLE COLOR*/
  set AE06M001.KUCCOID initialAttributes; /* CUSTOMER*/
  set AE06M001.KUMSTRID initialAttributes; /* STORE*/
  set AE06M001.PC4ORTYP initialAttributes; /* ORDER TYPE*/
  set AE06M001.AB7PBYTP initialAttributes; /* ACTION TYPE*/
  set AE06M001.AB7PBYST initialAttributes; /* BUY STATUS*/
  set AE06M001.AE06MSEL initialAttributes; /* selection field*/
  ;
  set AE06M001.CATOAP initialAttributes; /* TO application*/
  set AE06M001.CAITEM initialAttributes; /* Application data*/
  ;
  ;
  ;
  ;
  ;
end // end AE06-1300

// Edit selection criteria
Function AE06-1400()
   /* ============================================================*/
   /* ===== E D I T    S E L E C T I O N    C R I T E R I A  =====*/
   /* =====                                                  =====*/
   /* ===== Compare selection criteria on screen to data on  =====*/
   /* ===== working storatge record, if any has changed,     =====*/
   /* ===== validate all selection criteria fields and turn  =====*/
   /* ===== on switch which allows later processing to purge =====*/
   /* ===== temporary storage and re-load it with newly      =====*/
   /* ===== selected data.                                   =====*/
   /* ============================================================*/
  ;
  ABWREC.ABWSWR = "N"; /* initialize switch to 'OFF'*/
  XP1REC.XP1MNO = 0;
  ;
   /* *************************************************************/
  if (AE06M001.AE06MSEL != AE06W02.AE06WSEL)
    AE06W02.AE06WSEL = AE06M001.AE06MSEL;
    AE06-1480(); /* edit sort selection code*/
  end
  ;
  if (AE06M001.AB7PBYTP != AE06W02.AB7PBYTP)
    AE06W02.AB7PBYTP = AE06M001.AB7PBYTP;
    AE06-1470(); /* edit action code*/
  end
  ;
  if (AE06M001.AB7PBYST != AE06W02.AB7PBYST)
    AE06W02.AB7PBYST = AE06M001.AB7PBYST;
    AE06-1475(); /* edit status code*/
  end
  ;
  if (AE06M001.PC4ORTYP != AE06W02.PC4ORTYP)
    AE06W02.PC4ORTYP = AE06M001.PC4ORTYP;
    AE06-1460(); /* edit po type*/
  end
  ;
  if (AE06M001.KUCCOID != AE06W02.KUCCOID
   || AE06M001.KUMSTRID != AE06W02.KUMSTRID)
    AE06W02.KUCCOID = AE06M001.KUCCOID;
    AE06W02.KUMSTRID = AE06M001.KUMSTRID;
    if (AE06W02.KUCCOID == 0
     && AE06W02.KUMSTRID == 0)
      XP1REC.XP1MNO = 174;
      set AE06M001.KUMSTRID bold;
      set AE06M001.KUCCOID cursor, bold;
    else
      if (AE06W02.KUCCOID == -1
       && AE06W02.KUMSTRID != -1)
        XP1REC.XP1MNO = 175;
        set AE06M001.KUMSTRID bold;
        set AE06M001.KUCCOID cursor, bold;
      else
        if (AE06W02.KUCCOID < 1
         && AE06W02.KUMSTRID != -1)
          XP1REC.XP1MNO = 160;
          set AE06M001.KUMSTRID bold;
          set AE06M001.KUCCOID cursor, bold;
        else
          if (AE06W02.KUCCOID == 0)
            XP1REC.XP1MNO = 176;
            set AE06M001.KUMSTRID bold;
            set AE06M001.KUCCOID cursor, bold;
          else
            AE06-1490(); /* edit cust/store*/
          end
        end
      end
    end
  end
  ;
  if (AE06M001.SY1STNBR != AE06W02.SY1STNBR
   || AE06M001.SY2CLRID != AE06W02.SY2CLRID)
    AE06W02.SY1STNBR = AE06M001.SY1STNBR;
    AE06W02.SY2CLRID = AE06M001.SY2CLRID;
    if (AE06W02.SY1STNBR == " "
     && AE06W02.SY2CLRID != " ")
      XP1REC.XP1MNO = 54;
      set AE06M001.SY2CLRID bold;
      set AE06M001.SY1STNBR cursor, bold;
    else
      AE06-1410(); /* edit style number*/
    end
  end
  ;
  if (XP1REC.XP1MNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(XP1REC.XP1MNO);
  end
  converseLib.clearScreen();
  
  ;
   /* ====================== END OF PROCESS ======================*/
end // end AE06-1400

// Edit STYLE
Function AE06-1410()
  if (AE06W02.SY1STNBR == " ") /* AE06w05 Field eq spaces*/
    AE06M001.SY1SSTNM = " "; /* Space out desc*/
    AE06W02.SY1SSTNM = " "; /* Space out desc*/
    if (AE06W02.SY2CLRID == " ")
      AE06W02.SY2CLRAB = " "; /* space out desc*/
      AE06M001.SY2CLRAB = " "; /* space out desc*/
    end
    return; /* Return to calling process*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *==================================**/
   /* *  Check Style in DPRODG.VSYCLR01  **/
   /* *==================================**/
  ;
  AE06-1420(); /* Select set style*/
  ;
  if (AE06M001.SY2CLRID > " ")
    while (AE06M001.SY2CLRID != PG2REC.SY2CLRID
     && SQLCA.VAGen_SQLCODE != 100)
      AE06-1430(); /* Validate style*/
    end
  else
    AE06M001.SY2CLRAB = " "; /* spaces out desc*/
    AE06W02.SY2CLRAB = " "; /* spaces out desc*/
    AE06-1430(); /* Validate style*/
  end
  ;
  AE06-1440(); /* Close style cursor*/
  ;
  ;
  ;
end // end AE06-1410

// select set style cursor
Function AE06-1420()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  set PG2REC empty; /* Reset rec work area*/
  ;
  PG2REC.XGPCD = XP1REC.XGPCD; /* GPC cd*/
  PG2REC.SY1STNBR = AE06W02.SY1STNBR; /* Style no.*/
  ;
  ;
  ;
   /* *===================================**/
   /* *  Select Set from DPRODG.VSYCLR01  **/
   /* *===================================**/
  ;
  try
    call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to calling process*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "1420"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE06M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE06-1420

// process style row
Function AE06-1430()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call and validate.*/
   /* For validation purposes only one (1) valid row retrieved*/
     /* will be enough to satisfy the existence check.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/
      AE06W02.SY1SSTNM = PG2REC.SY1SSTNM; /* move style desc*/
      AE06M001.SY1SSTNM = PG2REC.SY1SSTNM; /* move style desc*/
      AE06W01.AE06WSTF = "Y"; /* STYLE FOUND*/
      if (AE06W02.SY2CLRID > " "
       && AE06W02.SY2CLRID == PG2REC.SY2CLRID)
        AE06W02.SY2CLRAB = PG2REC.SY2CLRAB; /* move COLOR desc*/
        AE06M001.SY2CLRAB = PG2REC.SY2CLRAB; /* move COLOR desc*/
      end
      return; /* Return to calling process*/
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      if (AE06W01.AE06WSTF != "Y") /* Style was not valid*/
        AE06W02.SY1STNBR = " "; /* Space out wk storage*/
        AE06W02.SY1SSTNM = " "; /* Space out desc*/
        AE06M001.SY1SSTNM = " "; /* Space out desc*/
        set AE06M001.SY1STNBR cursor, bold; /* Highlight field*/
        XP1REC.XP1MNO = 38; /* Indicate error message*/
      end
      if (AE06W02.SY2CLRID > " "
       && AE06W01.AE06WSTF == "Y") /* Style was valid*/
        AE06W02.SY2CLRID = " "; /* Space out wk storage*/
        AE06W02.SY2CLRAB = " "; /* Space out desc*/
        AE06M001.SY2CLRAB = " "; /* Space out desc*/
        XP1REC.XP1MNO = 91; /* Indicate error message*/
        set AE06M001.SY2CLRID cursor, bold; /* Highlight field*/
      end
      ABWREC.ABWPRCSN = "1430"; /* Process number*/
      return; /* Exit to calling rtn*/
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "1430"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AE06M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE06-1430

// close style cursor
Function AE06-1440()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO3120" ("CS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close set*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to calling process*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  ABWREC.ABWPRCSN = "1440"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE06M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  converseLib.validationFailed(10); /* Indicate system error*/
  ;
  converseLib.clearScreen();
   /* Clear screen before redisplay*/
  ;
  ;
  ;
end // end AE06-1440

// edit po type
Function AE06-1460()
             /* ----------------------------*/
             /* |edit po type              |*/
             /* ----------------------------*/
  ;
  if (AE06W02.PC4ORTYP != "EM"
   && AE06W02.PC4ORTYP != "CD"
   && AE06W02.PC4ORTYP != "  ")
    AE06W02.PC4ORTYP = "  "; /* Move blank po type*/
    set AE06M001.PC4ORTYP cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 173; /* Indicate po type not valid*/
    ABWREC.ABWPRCSN = "1460"; /* Process number*/
  end
  ;
end // end AE06-1460

// edit action code
Function AE06-1470()
             /* ----------------------------*/
             /* |edit action codes |*/
             /* ----------------------------*/
  if (AE06W02.AB7PBYTP == " ") /* AE06W02 Field eq spaces*/
    AE06M001.AB7PBYTP = " "; /* Move blank ACTION CODE*/
  else
    ;
    if (AE06W02.AB7PBYTP != "B" /* buy*/
     && AE06W02.AB7PBYTP != "S") /* skip*/
      AE06W02.AB7PBYTP = " "; /* Move blank action*/
      set AE06M001.AB7PBYTP cursor, bold; /* Highlight field*/
      XP1REC.XP1MNO = 80;
      ABWREC.ABWPRCSN = "1470"; /* Process number*/
    end
  end
  ;
  ;
end // end AE06-1470

// edit status code
Function AE06-1475()
             /* --------------------*/
             /* |edit Status  codes |*/
             /* --------------------*/
  ;
  if (AE06W02.AB7PBYST == " ") /* AE06W02 Field eq spaces*/
    AE06M001.AB7PBYST = " "; /* Move blank action cd*/
  else
    ;
    if (AE06W02.AB7PBYST != "C" /* no credit approval*/
     && AE06W02.AB7PBYST != "D" /* no disc approval*/
     && AE06W02.AB7PBYST != "N" /* no credit/disc approval*/
     && AE06W02.AB7PBYST != "M") /* customer minimums*/
      AE06W02.AB7PBYST = " "; /* Move blank action  cd*/
      set AE06M001.AB7PBYST cursor, bold; /* Highlight field*/
      XP1REC.XP1MNO = 81; /* Indicate pop-up window not available*/
      ABWREC.ABWPRCSN = "1475"; /* Process number*/
    end
  end
  ;
end // end AE06-1475

// edit sort selection
Function AE06-1480()
             /* ----------------------------*/
             /* |edit sort selection codes |*/
             /* ----------------------------*/
  ;
  if (AE06W02.AE06WSEL != "1"
   && AE06W02.AE06WSEL != "2")
    AE06W02.AE06WSEL = " "; /* Move blank action  cd*/
    set AE06M001.AE06MSEL cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 90; /* Indicate sort selection not valid*/
    ABWREC.ABWPRCSN = "1480"; /* Process number*/
  end
  ;
end // end AE06-1480

// Edit Customer No., Store
Function AE06-1490()
  if (AE06W02.KUCCOID == -1 /* ae06w02 Field wildcarded*/
   && AE06W02.KUMSTRID == -1)
    return; /* Return to calling process*/
  end
  ;
  AE06S02(); /* select set cust edit*/
  AE06S03(); /* fetch next cust edit*/
  AE06S04(); /* close set cust edit*/
  ;
end // end AE06-1490

// Process valid input request
Function AE06-1500()
   /* ------------------------------------------------------------*/
   /* Check for validation errors*/
   /* ------------------------------------------------------------*/
  ;
  if (XP1REC.XP1MNO != 0 /* Validation errors are present*/
   && XP1REC.XP1MNO != 24) /* Not OK to submit*/
    exit stack; /* Redisplay map with message*/
  end
  ;
  AE06S01(); /* PERFORM PREPARE SUBMIT SCREEN*/
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  ;
  if (TA3REC.TA3RGNID == "03")
    AE06W01.AE06WIXT = 1;
  else
    if ("/*EOF" in AE06T01.TARJCL)
      AE06W01.AE06WIXT = sysVar.arrayIndex;
      AE06W01.AE06WIXT = AE06W01.AE06WIXT + 1;
    else
      AE06W01.AE06WIXT = 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (AE06W01.AE06WIXT > 0) /* Until end of table*/
    ;
    if (AE06T01.TARTYPE[AE06WIXT] == "P") /* Parameters statement*/
      ;
      AE06T01.TARJCL[AE06WIXT] = AE06W03.TARJCL;
      ;
    end
    ;
    ;
    /* ------------------------------------------------------------*/
     /* Format the Job Control Language statement from the table.*/
    /* ------------------------------------------------------------*/
    ;
    TA6REC.TARJCL[TA6INDEX] = AE06T01.TARJCL[AE06WIXT]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = AE06T01.TARTYPE[AE06WIXT]; /* Type*/
    ;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
    ;
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (AE06T01.TARJCL[AE06WIXT] == "/*EOF") /* End of table*/
      AE06W01.AE06WIXT = 0; /* Indicate end of table*/
    else
      AE06W01.AE06WIXT = AE06W01.AE06WIXT + 1; /* Increment table index*/
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  AE06-1510(); /* Submit the JCL*/
  ;
  ;
end // end AE06-1500

// Submit Job/Select Printer
Function AE06-1510()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "Y"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* send message to terminal*/
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
  ;
   /* ------------------------*/
   /* Fix process location*/
   /* ------------------------*/
  ;
  ABWREC.ABWPRCSN = "1510"; /* Process number*/
  AE06M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    XP1REC.XP1MNO = 22; /* Indicate job was submitted*/
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    XP1REC.XP1MNO = 23; /* Indicate user cancelled*/
  else
    XP1REC.XP1MNO = 10; /* Indicate system error*/
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end AE06-1510

// Set up batch parameters
Function AE06S01()
  ;
  set AE06W03 empty;
  ;
  ;
  if (AE06W02.SY1STNBR > " ")
    AE06W03.SY1STNBR = AE06W02.SY1STNBR;
  end
  ;
  if (AE06W02.SY2CLRID > " ")
    AE06W03.SY2CLRID = AE06W02.SY2CLRID;
  end
  ;
  AE06W03.KUCCOID = AE06W02.KUCCOID;
  ;
  AE06W03.KUMSTRID = AE06W02.KUMSTRID;
  ;
  if (AE06W02.PC4ORTYP > " ")
    AE06W03.PC4ORTYP = AE06W02.PC4ORTYP;
  end
  ;
  if (AE06W02.AB7PBYTP > " ")
    AE06W03.AB7PBYTP = AE06W02.AB7PBYTP;
  end
  ;
  if (AE06W02.AB7PBYST > " ")
    AE06W03.AB7PBYST = AE06W02.AB7PBYST;
  end
  ;
  AE06W03.AE06WSEL = AE06W02.AE06WSEL;
  ;
  ;
end // end AE06S01

// Select VPRDCU01 - Cust edit
Function AE06S02()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  set PC2REC empty; /* Reset rec work area*/
  ;
  PC2REC.XNXCD = -1; /* dept.*/
  PC2REC.XGPCD = XP1REC.XGPCD; /* gpc cd*/
  PC2REC.KUCCOID = AE06W02.KUCCOID; /* cust.*/
  PC2REC.KUMSTRID = AE06W02.KUMSTRID; /* store*/
  ;
  ;
   /* *===================================**/
   /* *  Select Set from Dprodc.vprdcu01  **/
   /* *===================================**/
  ;
  try
    call "IO3340" ("S3", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to calling process*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end
  ;
  if (sysVar.errorCode == "00000000") /* call successful*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S02 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE06M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE06S02

// Fetch Vprdcu01 - Cust edit
Function AE06S03()
   /* ------------------------------------------------------------*/
                /* *** Process dprodc.vprdcu01****/
   /* Select the target row on a 'select next' call and store*/
     /* data into program-defined area. If first row retrieved,*/
     /* obtain and format size descriptions.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  ;
  try
    call "IO3340" ("N3", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/
      ;
      return; /* return to calling process*/
    end
    if (SQLCA.VAGen_SQLCODE == 100)
      set AE06M001.KUCCOID cursor, bold; /* highligh field*/
      XP1REC.XP1MNO = 158; /* indicate error message*/
      ABWREC.ABWPRCSN = "S03";
      return; /* return to calling process*/
    end
    ;
  end
  ;
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S03 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODC.VPRDCU01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AE06M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE06S03

// Close vprdcu01 - Cust edit
Function AE06S04()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO3340" ("C3", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close set*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to calling process*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  ABWREC.ABWPRCSN = "S04 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE06M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  converseLib.validationFailed(10); /* Indicate system error*/
  ;
  converseLib.clearScreen();
   /* Clear screen before redisplay*/
  ;
  ;
  ;
end // end AE06S04

//*** RECORD=AE06W01 ****
// ********************************
// Application Working Storage (1).
// ********************************
// ***********************
Record AE06W01 type basicRecord
  10 TARJCL TARJCL ; 
  10 TARTYPE TARTYPE ; 
  10 AE06WIXT AE06WIXT ; 
  10 AE06WSTF AE06WSTF ; 
end // end AE06W01

//*** RECORD=AE06W02 ****
// selection criteria for abo2
// ***********************
Record AE06W02 type basicRecord
  15 SY1STNBR SY1STNBR ; 
  15 SY1SSTNM SY1SSTNM ; 
  15 SY2CLRID SY2CLRID ; 
  15 SY2CLRAB SY2CLRAB ; 
  15 KUCCOID KUCCOID ; 
  15 KUMSTRID KUMSTRID ; 
  15 AB7PBYTP AB7PBYTP ; 
  15 AB7PBYST AB7PBYST ; 
  15 PC4ORTYP PC4ORTYP ; 
  15 AE06WSEL AE06WSEL ; 
end // end AE06W02

//*** RECORD=AE06W03 ****
// Online->Batch parameter layout
// ***********************
Record AE06W03 type basicRecord
  10 TARJCL TARJCL ; 
    15 SY1STNBR SY1STNBR ; 
    15 SY1SSTNM SY1SSTNM ; 
    15 SY2CLRID SY2CLRID ; 
    15 SY2CLRAB SY2CLRAB ; 
    15 KUCCOID KUCCOID ; 
    15 KUMSTRID KUMSTRID ; 
    15 PC4ORTYP PC4ORTYP ; 
    15 AB7PBYTP AB7PBYTP ; 
    15 AB7PBYST AB7PBYST ; 
    15 AE06WSEL AE06WSEL ; 
    15 * char(34) ; 
end // end AE06W03

// JCL table index
DataItem AE06WIXT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SORT SELECTION OPTION
DataItem AE06WSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AE06WSTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

