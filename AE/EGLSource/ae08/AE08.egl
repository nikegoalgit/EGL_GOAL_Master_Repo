package ae08;

import ab.common.AB-ALL-ITM-FL;
import ab.common.AB-CRST-ADD-COMNT1;
import ab.common.AB-CRST-ADD-COMNT2;
import ab.common.AB-CRST-ADD-COMNT3;
import ab.common.AB-CRST-ADD-COMNT4;
import ab.common.AB-CRST-ADD-COMNT5;
import ab.common.AB-CRST-CTCT-NM;
import ab.common.AB-CRST-LOGO-NM;
import ab.common.AB-ICON-FILE-NM1;
import ab.common.AB-ICON-FILE-NM2;
import ab.common.AB-ICON-FILE-NM3;
import ab.common.AB-LOGO-COLR-QTY1;
import ab.common.AB-LOGO-COLR-QTY2;
import ab.common.AB-LOGO-COLR-QTY3;
import ab.common.AB-LOGO-PLC-CD1;
import ab.common.AB-LOGO-PLC-CD2;
import ab.common.AB-LOGO-PLC-CD3;
import ab.common.ABWREC;
import ab.common.AE09TBL;
import corpcom2.XX0XW01;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.CU-CO-NM;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXX-INTL-PHONE-NBR;
import corpz3.ZZ-CHNG-CNT;
import corpz3.ZZ-SDT;
import ku.common.KUCREC;
import om.common.OMWREC;
import op.common.OP1REC;
import op.common.OPABREC;
import op.common.OPWREC;
import pc.common.PC3REC;
import pc.common.PC6REC;
import ta.common.TA1REC;
import ta.common.TAEREC;
import vv.common.VCRSTH02;
//*** PROGRAM=AE08 ****
// CRESTED CONTACT INFORMATION SCREEN
// 
// Overview:  ADD/MAINTENACE CONTACT INFORMATION
// 
// Date Created:  04/26/93
// 
// Maintenance History:
// 
//     Date     By Whom       Overview of Changes Made
// ------------------------------------------------------------
//   04/26/93                Program Created
//   04/28/94   jather       log 1003. renamed causera to
//                           ca-user-workarea-4k to hold opwrec
//                           which has increased to 3072 bytes.
//   07/07/95   aluft (PDG)  Recomplied with new view of table
//                           DABUY.VCRSTH02, with new fields
//   07/26/95   aluft (PDG)  Added new fields to screen to
//                           update corresponding new fields on
//                           DABUY.VCRSTH02
// Y2KFIX   03/12/98  ksumme  Y2K MODIFICATIONS MADE TO:
//                           regen to pick up xx0xs01
//   08/27/98   udafon #178  Increased size of OMWREC to 3505
//                           bytes. Re-compiled application.
// *********************
Program AE08 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  ABWREC ABWREC; // record
  AE08W01 AE08W01; // record
  AE08W02 AE08W02; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  OMWREC OMWREC; // record
  OP1REC OP1REC; // record
  OPABREC OPABREC; // record
  OPWREC OPWREC; // record
  PC3REC PC3REC; // record
  PC6REC PC6REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record
  VCRSTH02 VCRSTH02; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use AE09TBL {deleteAfterUse = yes}; // table
  use AE08M.AE08M001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AE08-0000: AE08-0000();
    ;
    ;
    goto AE08-0001;
    ;
    ;
    AE08-0001: AE08-0001();
     /* --------------------------------------------------------------*/
     /* FLOW TO CONVERSE THE PROTOTYPE PROCESS.*/
     /* ----------------------------------------------------------------*/
    ;
    goto AE08-0001;
    ;
  end // end main
end // end AE08

// Application Initialization
Function AE08-0000()
   /* ****************************************************/
   /* *** do not allow AE08 to be run unless cafromap ****/
   /* *** is OM0O, OP0J, OM0Q, OM0J or OM0B           ****/
   /* *** or AE09 (if ALL-ITEM-FL is 'Y')             ****/
   /* ****************************************************/
  ;
  if (COMMAREA.CAFROMAP == "OM0Q"
   || COMMAREA.CAFROMAP == "OP0J"
   || COMMAREA.CAFROMAP == "OM0O"
   || COMMAREA.CAFROMAP == "OM0J"
   || COMMAREA.CAFROMAP == "OM0B"
   || COMMAREA.CAFROMAP == "AE09")
     /* CONTINUE*/
  else
    COMMAREA.CAMSG = "CANNOT FAST PATH TO AE08";
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    XSEXIT();
  end
  ;
     /* **********************************************************/
     /* * this process performs the following functions:        **/
     /* *     - checks entry security                           **/
     /* *     - moves the working storage and order processing  **/
     /* *       record from the incoming common area            **/
     /* *     - initializes the map fields                      **/
     /* **********************************************************/
  ;
  ;
      /* check entry security*/
  ;
  XSENTRY();
  ;
   /* ****************************************************/
   /* *** set segmented trans id                      ****/
   /* ****************************************************/
  ;
  CAEZSAP = sysVar.transactionID;
  CAEZSG12 = "AE";
  CAEZSG4 = "8";
  sysVar.transactionID = CAEZSAP;
  ;
   /* ********************************************/
   /* INITIALIZE PROGRAM*/
  ;
  set ABWREC empty;
  set OPABREC empty;
  set OP1REC empty;
  set OMWREC empty;
  set OPWREC empty;
  set AE08W01 empty;
  set AE08W02 empty;
  ;
   /* *************************************************************/
      /* retrieve user common area*/
  ;
  OPABREC.OPAB-COMMON-REC = COMMAREA.CA-USER-WORKAREA-4K;
  ;
   /* Check to see if the Company name has been passed the COMMAREA*/
   /* in OMWREC.KUMSTRNM.*/
   /* If not, fill OP1REC from COMMAREA, in order to*/
   /* retrieve company information.*/
  ;
  OMWREC.OMWSGRP = OPABREC.OPAB-SYS-GRP;
  if (OMWREC.KUMSTRNM > " ")
    AE08W02.CU-CO-NM = OMWREC.KUMSTRNM;
  else
    OPWREC.OPWSGRP = OPABREC.OPAB-SYS-GRP;
    OP1REC.OP1GROUP = OPWREC.OP1GROUP;
  end
  ;
   /* ********************************************/
   /* INITIALIZE MAP*/
  ;
  set AE08M001 initial;
  ;
  AE08M001.XXXCURDT = VGVar.currentShortGregorianDate;
  ;
  AE08M001.OP-CUST-ORD-ID = OPABREC.OP-CUST-ORD-ID;
  ;
  ;
end // end AE08-0000

// Driver process for 100 map
Function AE08-0001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  AE08-1100(); /* Obtain the data to display*/
  ;
  AE08-1200(); /* Format and display the map*/
  ;
  AE08-1300(); /* Check attention keys*/
  ;
  AE08-1400(); /* Reset fields to normal intensity -*/
  ;
  AE08-1500(); /* Verify the entered data*/
  ;
  AE08-1600(); /* Process valid input request*/
  ;
  ;
end // end AE08-0001

// Obtain the data to display
Function AE08-1100()
   /* ------------------------------------------------------------*/
   /* If data was not requested, return to the previous process.*/
   /* Purge any existing queue in temporary storage.*/
   /* Check for User Response and process appropriate data base.*/
   /* If no errors found from data retrieve, indicate that the*/
   /* request for data was completed.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (converseVar.validationMsgNum != 0 /* Errors detected*/
   && converseVar.validationMsgNum != 13) /* update error from contension*/
    return; /* Return to previous process*/
  end
  ;
  ;
  AE08S01(); /* Process DABUY.VCRSTH02 rows*/
  ;
   /* ------------------------------------------------------------*/
   /* If the Company Name was not passed in the COMMAREA (OMWREC.KUMSTRNM),*/
   /* then retrieve it from DCUST.VCMPNY01.*/
   /* ------------------------------------------------------------*/
  ;
  if (AE08W02.CU-CO-NM > " ")
  else
    AE08S02(); /* Retrieve Company name from*/
  end /* DCUST.VCMNPY01*/
  ;
   /* ------------------------------------------------------------*/
   /* This will check to see if a po exists and if it's been printed.*/
   /* If the po has been printed an warning message will appear and*/
   /* only viewing will be allowed except for production people.*/
   /* ------------------------------------------------------------*/
  ;
  AE08W-PO-PRINT-FLAG = "N";
  ;
  AE08S11(); /* open dprodc.vpoitm01*/
  while (SQLCA.VAGen_SQLCODE != 100
   && AE08W-PO-PRINT-FLAG == "N")
    AE08S12(); /* fetch dprodc.vpoitm01*/
  end
  AE08S13(); /* close dprodc.vpoitm01*/
  ;
  if (AE08W01.AE08W-PO-PRINT-FLAG == "Y")
    converseLib.validationFailed(187); /* po already printed*/
    if (COMMAREA.CAALVL[4] == "Y"
     && COMMAREA.CACLVL[4] == "Y"
     && COMMAREA.CAILVL[4] == "Y")
      return;
    else
      converseLib.validationFailed(186); /* po already printed- no data change*/
    end
  end
end // end AE08-1100

// Format and display map 1
Function AE08-1200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0   
   || converseVar.validationMsgNum == 186 /* po already exists - no data change allowed*/
   || converseVar.validationMsgNum == 187) /* po already exists*/
    ;
    set AE08M001 initial;
    ;
    AE08M001.OP-CUST-ORD-ID = OPABREC.OP-CUST-ORD-ID;
    ;
    AE08M001.CU-CO-NM = AE08W02.CU-CO-NM;
    AE08M001.AB-CRST-CTCT-NM = AE08W02.AB-CRST-CTCT-NM;
    AE08M001.XXX-INTL-PHONE-NBR = AE08W02.XXX-INTL-PHONE-NBR;
    AE08M001.AB-CRST-LOGO-NM = AE08W02.AB-CRST-LOGO-NM;
    AE08M001.AB-ICON-FILE-NM1 = AE08W02.AB-ICON-FILE-NM1;
    AE08M001.AB-ICON-FILE-NM2 = AE08W02.AB-ICON-FILE-NM2;
    AE08M001.AB-ICON-FILE-NM3 = AE08W02.AB-ICON-FILE-NM3;
    AE08M001.AB-LOGO-PLC-CD1 = AE08W02.AB-LOGO-PLC-CD1;
    AE08M001.AB-LOGO-PLC-CD2 = AE08W02.AB-LOGO-PLC-CD2;
    AE08M001.AB-LOGO-PLC-CD3 = AE08W02.AB-LOGO-PLC-CD3;
    AE08M001.AB-LOGO-COLR-QTY1 = AE08W02.AB-LOGO-COLR-QTY1;
    AE08M001.AB-LOGO-COLR-QTY2 = AE08W02.AB-LOGO-COLR-QTY2;
    AE08M001.AB-LOGO-COLR-QTY3 = AE08W02.AB-LOGO-COLR-QTY3;
    AE08M001.AB-CRST-ADD-COMNT1 = AE08W02.AB-CRST-ADD-COMNT1;
    AE08M001.AB-CRST-ADD-COMNT2 = AE08W02.AB-CRST-ADD-COMNT2;
    AE08M001.AB-CRST-ADD-COMNT3 = AE08W02.AB-CRST-ADD-COMNT3;
    AE08M001.AB-CRST-ADD-COMNT4 = AE08W02.AB-CRST-ADD-COMNT4;
    AE08M001.AB-CRST-ADD-COMNT5 = AE08W02.AB-CRST-ADD-COMNT5;
    AE08M001.AB-ALL-ITM-FL = AE08W02.AB-ALL-ITM-FL;
    ;
    set AE08M001.AB-CRST-CTCT-NM cursor; /* Set cursor at map dtl area*/
  end
  ;
  if (converseVar.validationMsgNum == 186)
    set AE08M001.XXXPRCNM cursor;
    set AE08M001.AB-CRST-CTCT-NM skip;
    set AE08M001.XXX-INTL-PHONE-NBR skip;
    set AE08M001.AB-CRST-LOGO-NM skip;
    set AE08M001.AB-ICON-FILE-NM1 skip;
    set AE08M001.AB-ICON-FILE-NM2 skip;
    set AE08M001.AB-ICON-FILE-NM3 skip;
    set AE08M001.AB-LOGO-PLC-CD1 skip;
    set AE08M001.AB-LOGO-PLC-CD2 skip;
    set AE08M001.AB-LOGO-PLC-CD3 skip;
    set AE08M001.AB-LOGO-COLR-QTY1 skip;
    set AE08M001.AB-LOGO-COLR-QTY2 skip;
    set AE08M001.AB-LOGO-COLR-QTY3 skip;
    set AE08M001.AB-CRST-ADD-COMNT1 skip;
    set AE08M001.AB-CRST-ADD-COMNT2 skip;
    set AE08M001.AB-CRST-ADD-COMNT3 skip;
    set AE08M001.AB-CRST-ADD-COMNT4 skip;
    set AE08M001.AB-CRST-ADD-COMNT5 skip;
    set AE08M001.AB-ALL-ITM-FL skip;
  end
  ;
  if (converseVar.validationMsgNum != 0) /* Message to display*/
    set AE08M001 alarm; /* Indicate sound alarm*/
    AE08M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  end
  ;
  ;
  AE08M001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  AE08M001.XXXPRCNM = "AE08"; /* APPL NAME*/
  ;
  ;
  converse AE08M001 ;
  ;
  ;
   /* ----------------------------------------------------------*/
    /* Clear Message Work Area*/
   /* ----------------------------------------------------------*/
  ;
  converseLib.validationFailed(0); /* RESET ERROR MESSAGE NUMBER*/
  ;
  ;
end // end AE08-1200

// Check attention identifier
Function AE08-1300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    ABWREC.ABWPRCSN = "1300"; /* Process number*/
    AE08M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ;
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  ;
end // end AE08-1300

// Reset highlighted flds
Function AE08-1400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set AE08M001.OP-CUST-ORD-ID initialAttributes; /* Reset so number*/
  set AE08M001.AB-CRST-CTCT-NM initialAttributes; /* Reset Contact name*/
  set AE08M001.XXX-INTL-PHONE-NBR initialAttributes; /* Reset Contact phone*/
  set AE08M001.AB-CRST-LOGO-NM initialAttributes; /* Reset Logo Name*/
  set AE08M001.AB-ICON-FILE-NM1 initialAttributes; /* Reset Icon File ID 1*/
  set AE08M001.AB-ICON-FILE-NM2 initialAttributes; /* Reset Icon File ID 2*/
  set AE08M001.AB-ICON-FILE-NM3 initialAttributes; /* Reset Icon File ID 3*/
  set AE08M001.AB-LOGO-PLC-CD1 initialAttributes; /* Reset Logo Place CD 1*/
  set AE08M001.AB-LOGO-PLC-CD2 initialAttributes; /* Reset Logo Place CD 2*/
  set AE08M001.AB-LOGO-PLC-CD3 initialAttributes; /* Reset Logo Place CD 3*/
  set AE08M001.AB-LOGO-COLR-QTY1 initialAttributes; /* Reset Logo Color qty 1*/
  set AE08M001.AB-LOGO-COLR-QTY2 initialAttributes; /* Reset Logo Color qty 2*/
  set AE08M001.AB-LOGO-COLR-QTY3 initialAttributes; /* Reset Logo Color qty 3*/
  set AE08M001.AB-CRST-ADD-COMNT1 initialAttributes; /* Reset comments 1*/
  set AE08M001.AB-CRST-ADD-COMNT2 initialAttributes; /* Reset comments 2*/
  set AE08M001.AB-CRST-ADD-COMNT3 initialAttributes; /* Reset comments 3*/
  set AE08M001.AB-CRST-ADD-COMNT4 initialAttributes; /* Reset comments 4*/
  set AE08M001.AB-CRST-ADD-COMNT5 initialAttributes; /* Reset comments 5*/
  set AE08M001.AB-ALL-ITM-FL initialAttributes; /* Reset All Item Flag*/
  ;
  AE08M001.XXXPRCNM = "AE08    "; /* Reset process name*/
  ABWREC.ABWERLOC = "AE08    "; /* Reset process name*/
  ;
  ;
end // end AE08-1400

// Verify the entered data
Function AE08-1500()
   /* ------------------------------------------------------------*/
   /* Verify any changed data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/
  ;
  AE08S19();
  ;
  if (converseVar.validationMsgNum != 0) /* Errors found*/
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  ;
end // end AE08-1500

// Process valid input request
Function AE08-1600()
   /* ------------------------------------------------------------*/
   /* Update any changed data.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (AE08W01.AE08W-UPDATE-FLAG == "Y") /* * detail info changed*/
    XX0XS01(); /* Get system date/time*/
    ;
    if (AE08W01.AE08W-DATA-FLAG == "N")
      AE08-1610(); /* Create new DB record*/
    else
      AE08-1620(); /* update existing db record*/
    end
    ;
  end
  ;
  ;
  if (converseVar.validationMsgNum == 0)
    if (converseVar.eventKey is enter)
      COMMAREA.CA-USER-WORKAREA-4K = OPABREC.OPAB-COMMON-REC;
      /* ----------------------------------------------------------------*/
      /* If we are not here from AE09, and the ALL-ITEM-FLAG is 'N',*/
      /* and there is a complete Crest Item key in the COMMAREA,*/
      /* then transfer now to AE09 for additional data entry.*/
      /* ----------------------------------------------------------------*/
      if (AE08W02.AB-ALL-ITM-FL == "N"
       && COMMAREA.CAFROMAP != "AE09"
       && OPABREC.OP-CUST-ORD-ID > 0
       && OPABREC.OP-NIKE-ORD-ID > 0)
        COMMAREA.CATOAP = "AE09";
      else
        COMMAREA.CATOAP = OPABREC.OPAB-TO-APPL;
      end
      /* ----------------------------------------------------------------*/
      /* If we are here from AE09 and the ALL-ITEM-FLAG is 'Y',*/
      /* then transfer now to the OPAB-TO-APPL which was passed to AE09.*/
      /* ----------------------------------------------------------------*/
      if (COMMAREA.CAFROMAP == "AE09"
       && AE08W02.AB-ALL-ITM-FL == "Y")
      else
        COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
      end
      COMMAREA.CACURRAP = COMMAREA.CATOAP;
      COMMAREA.CATOAP = " ";
      sysVar.transferName = COMMAREA.CACURRAP;
      transfer to transaction sysVar.transferName passing COMMAREA;
    end
  end
  ;
end // end AE08-1600

// Insert DABUY.VCRSTH02 row
Function AE08-1610()
   /* ------------------------------------------------------------*/
   /* Move update items to corresponding DB fields.*/
   /* Call IO module to perform actual create DB record process.*/
   /* ------------------------------------------------------------*/
  ;
   /* *==================**/
   /* *  Build DB Keys   **/
   /* *==================**/
  ;
  set VCRSTH02 empty; /* Reset Wk Storage field*/
  ;
   /* *=================================**/
   /* *  Move Update Items into VCRSTH02**/
   /* *=================================**/
  ;
  VCRSTH02.OP-CUST-ORD-ID = OPABREC.OP-CUST-ORD-ID;
  VCRSTH02.OP-ORD-PART-CHAR = OPABREC.OP-ORD-PART-CHAR;
  ;
  VCRSTH02.AB-CRST-CTCT-NM = AE08W02.AB-CRST-CTCT-NM;
  VCRSTH02.XXX-INTL-PHONE-NBR = AE08W02.XXX-INTL-PHONE-NBR;
  VCRSTH02.AB-CRST-LOGO-NM = AE08W02.AB-CRST-LOGO-NM;
  VCRSTH02.AB-ICON-FILE-NM1 = AE08W02.AB-ICON-FILE-NM1;
  VCRSTH02.AB-ICON-FILE-NM2 = AE08W02.AB-ICON-FILE-NM2;
  VCRSTH02.AB-ICON-FILE-NM3 = AE08W02.AB-ICON-FILE-NM3;
  VCRSTH02.AB-LOGO-PLC-CD1 = AE08W02.AB-LOGO-PLC-CD1;
  VCRSTH02.AB-LOGO-PLC-CD2 = AE08W02.AB-LOGO-PLC-CD2;
  VCRSTH02.AB-LOGO-PLC-CD3 = AE08W02.AB-LOGO-PLC-CD3;
  VCRSTH02.AB-LOGO-COLR-QTY1 = AE08W02.AB-LOGO-COLR-QTY1;
  VCRSTH02.AB-LOGO-COLR-QTY2 = AE08W02.AB-LOGO-COLR-QTY2;
  VCRSTH02.AB-LOGO-COLR-QTY3 = AE08W02.AB-LOGO-COLR-QTY3;
  VCRSTH02.AB-CRST-ADD-COMNT1 = AE08W02.AB-CRST-ADD-COMNT1;
  VCRSTH02.AB-CRST-ADD-COMNT2 = AE08W02.AB-CRST-ADD-COMNT2;
  VCRSTH02.AB-CRST-ADD-COMNT3 = AE08W02.AB-CRST-ADD-COMNT3;
  VCRSTH02.AB-CRST-ADD-COMNT4 = AE08W02.AB-CRST-ADD-COMNT4;
  VCRSTH02.AB-CRST-ADD-COMNT5 = AE08W02.AB-CRST-ADD-COMNT5;
  VCRSTH02.AB-ALL-ITM-FL = AE08W02.AB-ALL-ITM-FL;
  ;
  VCRSTH02.ZZZSDT = XX0XW01.XX0XWDAT; /* CREATION DATE*/
  VCRSTH02.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VCRSTH02.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VCRSTH02.ZZZCHGCT = 0; /* CHANGE COUNT*/
  ;
   /* *==============================**/
   /* *  Insert DABUY.VCRSTH02  Row  **/
   /* *==============================**/
  ;
  try
    call "VCRSTH02" ("A ", SQLCA, VCRSTH02) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to calling process*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "1610"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "INSERT SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCRSTH02"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE08M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
end // end AE08-1610

// Update DABUY.VCRSTH02 row
Function AE08-1620()
   /* ------------------------------------------------------------*/
   /* Move update items to corresponding DB fields.*/
   /* Call IO module to perform actual update process.*/
   /* ------------------------------------------------------------*/
  ;
   /* *==================**/
   /* *  Build DB Keys   **/
   /* *==================**/
  ;
  set VCRSTH02 empty; /* Reset Wk Storage field*/
  ;
  VCRSTH02.OP-CUST-ORD-ID = OPABREC.OP-CUST-ORD-ID;
  VCRSTH02.OP-ORD-PART-CHAR = OPABREC.OP-ORD-PART-CHAR;
  ;
  VCRSTH02.AB-CRST-CTCT-NM = AE08W02.AB-CRST-CTCT-NM;
  VCRSTH02.XXX-INTL-PHONE-NBR = AE08W02.XXX-INTL-PHONE-NBR;
  VCRSTH02.AB-CRST-LOGO-NM = AE08W02.AB-CRST-LOGO-NM;
  VCRSTH02.AB-ICON-FILE-NM1 = AE08W02.AB-ICON-FILE-NM1;
  VCRSTH02.AB-ICON-FILE-NM2 = AE08W02.AB-ICON-FILE-NM2;
  VCRSTH02.AB-ICON-FILE-NM3 = AE08W02.AB-ICON-FILE-NM3;
  VCRSTH02.AB-LOGO-PLC-CD1 = AE08W02.AB-LOGO-PLC-CD1;
  VCRSTH02.AB-LOGO-PLC-CD2 = AE08W02.AB-LOGO-PLC-CD2;
  VCRSTH02.AB-LOGO-PLC-CD3 = AE08W02.AB-LOGO-PLC-CD3;
  VCRSTH02.AB-LOGO-COLR-QTY1 = AE08W02.AB-LOGO-COLR-QTY1;
  VCRSTH02.AB-LOGO-COLR-QTY2 = AE08W02.AB-LOGO-COLR-QTY2;
  VCRSTH02.AB-LOGO-COLR-QTY3 = AE08W02.AB-LOGO-COLR-QTY3;
  VCRSTH02.AB-CRST-ADD-COMNT1 = AE08W02.AB-CRST-ADD-COMNT1;
  VCRSTH02.AB-CRST-ADD-COMNT2 = AE08W02.AB-CRST-ADD-COMNT2;
  VCRSTH02.AB-CRST-ADD-COMNT3 = AE08W02.AB-CRST-ADD-COMNT3;
  VCRSTH02.AB-CRST-ADD-COMNT4 = AE08W02.AB-CRST-ADD-COMNT4;
  VCRSTH02.AB-CRST-ADD-COMNT5 = AE08W02.AB-CRST-ADD-COMNT5;
  VCRSTH02.AB-ALL-ITM-FL = AE08W02.AB-ALL-ITM-FL;
  ;
  VCRSTH02.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VCRSTH02.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VCRSTH02.ZZZCHGCT = AE08W02.ZZ-CHNG-CNT; /* Change cnt*/
  ;
  ;
   /* *==============================**/
   /* *  Update DABUY.VCRSTH02  Row  **/
   /* *==============================**/
  ;
  try
    call "VCRSTH02" ("U ", SQLCA, VCRSTH02) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    AE08W02.ZZ-CHNG-CNT = AE08W02.ZZ-CHNG-CNT + 1;
    ;
    return; /* Return to calling process*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row updated by other user/s*/
      ABWREC.ABWSWR = "Y"; /* reselect same row*/
      ABWREC.ABWPRCSN = "1620"; /* Process number*/
      converseLib.validationFailed(13); /* Indicate concurrent update*/
      exit stack; /* Exit to redisplay map*/
    else
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end
    end
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "1620"; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "UPDATE SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCRSTH02"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE08M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
end // end AE08-1620

// Retrieve Contact information
Function AE08S01()
  ;
   /* ------------------------------------------------------------*/
   /* get contact information from DABUY.VCRSTH02*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set VCRSTH02 empty; /* initialize db record*/
  VCRSTH02.OP-CUST-ORD-ID = OPABREC.OP-CUST-ORD-ID; /* SO NUMBER*/
  VCRSTH02.OP-ORD-PART-CHAR = OPABREC.OP-ORD-PART-CHAR; /* PART CHAR*/
  ;
  ;
   /* *=============================**/
   /* *  Access DABUY.VCRSTH02 DB   **/
   /* *=============================**/
  ;
  try
    call "VCRSTH02" ("S ", SQLCA, VCRSTH02) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      AE08W02.AB-CRST-CTCT-NM = VCRSTH02.AB-CRST-CTCT-NM;
      AE08W02.XXX-INTL-PHONE-NBR = VCRSTH02.XXX-INTL-PHONE-NBR;
      AE08W02.AB-CRST-LOGO-NM = VCRSTH02.AB-CRST-LOGO-NM;
      AE08W02.AB-ICON-FILE-NM1 = VCRSTH02.AB-ICON-FILE-NM1;
      AE08W02.AB-ICON-FILE-NM2 = VCRSTH02.AB-ICON-FILE-NM2;
      AE08W02.AB-ICON-FILE-NM3 = VCRSTH02.AB-ICON-FILE-NM3;
      AE08W02.AB-LOGO-PLC-CD1 = VCRSTH02.AB-LOGO-PLC-CD1;
      AE08W02.AB-LOGO-PLC-CD2 = VCRSTH02.AB-LOGO-PLC-CD2;
      AE08W02.AB-LOGO-PLC-CD3 = VCRSTH02.AB-LOGO-PLC-CD3;
      AE08W02.AB-LOGO-COLR-QTY1 = VCRSTH02.AB-LOGO-COLR-QTY1;
      AE08W02.AB-LOGO-COLR-QTY2 = VCRSTH02.AB-LOGO-COLR-QTY2;
      AE08W02.AB-LOGO-COLR-QTY3 = VCRSTH02.AB-LOGO-COLR-QTY3;
      AE08W02.AB-CRST-ADD-COMNT1 = VCRSTH02.AB-CRST-ADD-COMNT1;
      AE08W02.AB-CRST-ADD-COMNT2 = VCRSTH02.AB-CRST-ADD-COMNT2;
      AE08W02.AB-CRST-ADD-COMNT3 = VCRSTH02.AB-CRST-ADD-COMNT3;
      AE08W02.AB-CRST-ADD-COMNT4 = VCRSTH02.AB-CRST-ADD-COMNT4;
      AE08W02.AB-CRST-ADD-COMNT5 = VCRSTH02.AB-CRST-ADD-COMNT5;
      if (VCRSTH02.AB-ALL-ITM-FL == "Y"
       || VCRSTH02.AB-ALL-ITM-FL == "N")
        AE08W02.AB-ALL-ITM-FL = VCRSTH02.AB-ALL-ITM-FL;
      else
        AE08W02.AB-ALL-ITM-FL = "Y";
      end
      AE08W02.ZZ-CHNG-CNT = VCRSTH02.ZZZCHGCT;
      AE08W01.AE08W-DATA-FLAG = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      AE08W02.AB-CRST-CTCT-NM = " ";
      AE08W02.XXX-INTL-PHONE-NBR = " ";
      AE08W02.AB-CRST-LOGO-NM = " ";
      AE08W02.AB-ICON-FILE-NM1 = " ";
      AE08W02.AB-ICON-FILE-NM2 = " ";
      AE08W02.AB-ICON-FILE-NM3 = " ";
      AE08W02.AB-LOGO-PLC-CD1 = " ";
      AE08W02.AB-LOGO-PLC-CD2 = " ";
      AE08W02.AB-LOGO-PLC-CD3 = " ";
      AE08W02.AB-LOGO-COLR-QTY1 = 0;
      AE08W02.AB-LOGO-COLR-QTY2 = 0;
      AE08W02.AB-LOGO-COLR-QTY3 = 0;
      AE08W02.AB-CRST-ADD-COMNT1 = " ";
      AE08W02.AB-CRST-ADD-COMNT2 = " ";
      AE08W02.AB-CRST-ADD-COMNT3 = " ";
      AE08W02.AB-CRST-ADD-COMNT4 = " ";
      AE08W02.AB-CRST-ADD-COMNT5 = " ";
      AE08W02.AB-ALL-ITM-FL = " ";
      AE08W01.AE08W-DATA-FLAG = "N";
      return;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S01 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DABUY.VCRSTH02 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCRSTH02"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AE08M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE08S01

// Retrieve Company Name
Function AE08S02()
  ;
  ;
   /* ------------------------------------------------------------*/
   /* get company information from DCUST.VCMPNY01*/
   /* ------------------------------------------------------------*/
  ;
      /* build KUCREC key - Company*/
  ;
  set KUCREC empty;
  ;
   /* ------------------------------------------------------------*/
   /* If the Company ID was passed to AE08 in the COMMAREA, use it.*/
   /* If not, read DORDER.VORHDR01 (the Order Header) using*/
   /* PART-CHAR and CUSTOMER ORDER ID to get the Company  ID.*/
   /* ------------------------------------------------------------*/
   /* If the Company ID is not found in DORDER.VORHDR01, then display*/
   /* If not, read DORDER.VORHDR01 (the Order Header) using*/
   /* PART-CHAR and CUSTOMER ORDER ID to get the Company  ID.*/
   /* ------------------------------------------------------------*/
  ;
  if (OP1REC.OP1KEY > " ")
  else
    ;
    AE08S03();
    ;
    if (OP1REC.OP1KEY > " ")
    else
      AE08W02.CU-CO-NM = "COMPANY NAME NOT FOUND IN DB  ";
      return;
    end
  end
  ;
  KUCREC.KUCCOID = OP1REC.KUCCOID;
  set SQLCA empty;
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  ;
   /* ------------------------------------------------------------*/
   /* If successful call, save company name to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      AE08W02.CU-CO-NM = KUCREC.KUCCONM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      AE08W02.CU-CO-NM = "COMPANY NAME NOT FOUND IN DB  ";
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S02 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DCUST.VCMPNY01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DCUST   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCMPNY01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AE08M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE08S02

// Retrieve Company ID
Function AE08S03()
  ;
  ;
   /* ------------------------------------------------------------*/
   /* get Company ID from DORDER.VORHDR01*/
   /* ------------------------------------------------------------*/
  ;
      /* build OP1REC key - Order Header*/
  ;
  set OP1REC empty;
  ;
  OP1REC.OP1PARTN = OPABREC.OP-ORD-PART-CHAR; /* Partition Character*/
  OP1REC.OP1CUOID = OPABREC.OP-CUST-ORD-ID; /* Cust. Order #*/
  OP1REC.OP1NORID = OPABREC.OP-NIKE-ORD-ID; /* NIKE Order #*/
  set SQLCA empty;
  ;
  call "IO0430" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful call, return*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S03 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DORDER.VORHDR01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VORHDR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AE08M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE08S03

// SELECT SET PO Number
Function AE08S11()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select cursor' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  ;
   /* ----- move values to record before insert -----*/
  set PC6REC empty;
  ;
  PC6REC.XGPCD = "03";
  PC6REC.OP1CUOID = OPABREC.OP-CUST-ORD-ID;
  PC6REC.OP1PARTN = OPABREC.OP-ORD-PART-CHAR;
  PC6REC.XDMCD = "00";
  ;
   /* ----- wildcard unknown values ------*/
  PC6REC.OP1NORID = -1;
  PC6REC.SY1STNBR = "*";
  PC6REC.SY2CLRID = "*";
  PC6REC.YSMXDV = "*";
  PC6REC.PC2CUXID = "*";
  PC6REC.PC4ORTYP = "*";
  PC6REC.PC6STAT = "*";
  ;
   /* *===================================**/
   /* *  Select Set from DPRODc.Vpoitm01  **/
   /* *===================================**/
  ;
  try
    call "IO3310" ("SK", SQLCA, PC6REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, Return to calling process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return; /* Return to calling process*/
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S11 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOITM01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE08M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
end // end AE08S11

// FETCH ONE PO-NUMBER
Function AE08S12()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
   /* *===================================**/
   /* *  Select Next from DPRODc.Vpoitm01  **/
   /* *===================================**/
  ;
  try
    call "IO3310" ("NK", SQLCA, PC6REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, save style name, then return to calling*/
                  /* process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      AE08S14();
      return; /* Return to calling process*/
      ;
    end
    if (SQLCA.VAGen_SQLCODE == +100) /* If no PO found just return*/
      ;
      return; /* Return to calling process*/
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S12 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT NEXT TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOITM01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE08M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
end // end AE08S12

// CLOSE SET PO-NUMBER
Function AE08S13()
   /* ------------------------------------------------------------*/
   /* Close set on Dprodc.Vpoitm01*/
   /* ------------------------------------------------------------*/
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  ;
  try
    call "IO3310" ("CK", SQLCA, PC6REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, save style name, then return to calling*/
                  /* process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return; /* Return to calling process*/
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S13 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SET TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOITM01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  AE08M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
end // end AE08S13

// retrieve contact information
Function AE08S14()
  ;
  ;
   /* ------------------------------------------------------------*/
   /* check print flag on po header*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set PC3REC empty; /* initialize db record*/
  PC3REC.PC3PONBR = PC6REC.PC3PONBR; /* PO NUMBER*/
  PC3REC.XGPCD = "03";
  ;
  ;
   /* *=============================**/
   /* *  Access DPRODC.VPOHRD01 db  **/
   /* *=============================**/
  ;
  try
    call "IO3270" ("S ", SQLCA, PC3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      if (PC3REC.PC3PRTIN == "Y")
        AE08W01.AE08W-PO-PRINT-FLAG = "Y";
      end
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      return;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S14 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODC.VPOHDR01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOHDR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AE08M001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AE08S14

// Validate map detail data
Function AE08S19()
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Evaluate map detail data to determine the kind of data*/
   /* base update action necessary for each line. If valid*/
   /* update found, then assign update code. Otherwise, ignore*/
   /* map detail line.*/
   /* ------------------------------------------------------------*/
  ;
  AE08W01.AE08W-UPDATE-FLAG = " "; /* reset update flag*/
  ;
   /* ------------------------------------------------------------*/
   /* Ensure that non-required fields are not low-values due to an*/
   /* Erase EOF keystroke...*/
   /* -------------------------------------------------------------*/
  ;
  if (AE08M001.AB-ICON-FILE-NM1 is blanks
   && AE08M001.AB-ICON-FILE-NM1 not blanks)
    AE08M001.AB-ICON-FILE-NM1 = " ";
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  if (AE08M001.AB-ICON-FILE-NM2 is blanks
   && AE08M001.AB-ICON-FILE-NM2 not blanks)
    AE08M001.AB-ICON-FILE-NM2 = " ";
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  if (AE08M001.AB-ICON-FILE-NM3 is blanks
   && AE08M001.AB-ICON-FILE-NM3 not blanks)
    AE08M001.AB-ICON-FILE-NM3 = " ";
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  if (AE08M001.AB-LOGO-COLR-QTY1 < 0)
    AE08M001.AB-LOGO-COLR-QTY1 = 0;
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  if (AE08M001.AB-LOGO-COLR-QTY2 < 0)
    AE08M001.AB-LOGO-COLR-QTY2 = 0;
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  if (AE08M001.AB-LOGO-COLR-QTY3 < 0)
    AE08M001.AB-LOGO-COLR-QTY3 = 0;
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  if (AE08M001.AB-LOGO-PLC-CD1 is blanks
   && AE08M001.AB-LOGO-PLC-CD1 not blanks)
    AE08M001.AB-LOGO-PLC-CD1 = " ";
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  if (AE08M001.AB-LOGO-PLC-CD2 is blanks
   && AE08M001.AB-LOGO-PLC-CD2 not blanks)
    AE08M001.AB-LOGO-PLC-CD2 = " ";
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  if (AE08M001.AB-LOGO-PLC-CD3 is blanks
   && AE08M001.AB-LOGO-PLC-CD3 not blanks)
    AE08M001.AB-LOGO-PLC-CD3 = " ";
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  if (AE08M001.AB-CRST-ADD-COMNT1 is blanks
   && AE08M001.AB-CRST-ADD-COMNT1 not blanks)
    AE08M001.AB-CRST-ADD-COMNT1 = " ";
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  if (AE08M001.AB-CRST-ADD-COMNT2 is blanks
   && AE08M001.AB-CRST-ADD-COMNT2 not blanks)
    AE08M001.AB-CRST-ADD-COMNT2 = " ";
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  if (AE08M001.AB-CRST-ADD-COMNT3 is blanks
   && AE08M001.AB-CRST-ADD-COMNT3 not blanks)
    AE08M001.AB-CRST-ADD-COMNT3 = " ";
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  if (AE08M001.AB-CRST-ADD-COMNT4 is blanks
   && AE08M001.AB-CRST-ADD-COMNT4 not blanks)
    AE08M001.AB-CRST-ADD-COMNT4 = " ";
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  if (AE08M001.AB-CRST-ADD-COMNT5 is blanks
   && AE08M001.AB-CRST-ADD-COMNT5 not blanks)
    AE08M001.AB-CRST-ADD-COMNT5 = " ";
    AE08W01.AE08W-UPDATE-FLAG = "Y";
                                   /* Update db w/good initialized value.*/
  end
  ;
  ;
  if (AE08M001.AB-CRST-CTCT-NM == AE08W02.AB-CRST-CTCT-NM
   && AE08M001.XXX-INTL-PHONE-NBR == AE08W02.XXX-INTL-PHONE-NBR
   && AE08M001.AB-CRST-LOGO-NM == AE08W02.AB-CRST-LOGO-NM
   && AE08M001.AB-ICON-FILE-NM1 == AE08W02.AB-ICON-FILE-NM1
   && AE08M001.AB-ICON-FILE-NM2 == AE08W02.AB-ICON-FILE-NM2
   && AE08M001.AB-ICON-FILE-NM3 == AE08W02.AB-ICON-FILE-NM3
   && AE08M001.AB-LOGO-PLC-CD1 == AE08W02.AB-LOGO-PLC-CD1
   && AE08M001.AB-LOGO-PLC-CD2 == AE08W02.AB-LOGO-PLC-CD2
   && AE08M001.AB-LOGO-PLC-CD3 == AE08W02.AB-LOGO-PLC-CD3
   && AE08M001.AB-LOGO-COLR-QTY1 == AE08W02.AB-LOGO-COLR-QTY1
   && AE08M001.AB-LOGO-COLR-QTY2 == AE08W02.AB-LOGO-COLR-QTY2
   && AE08M001.AB-LOGO-COLR-QTY3 == AE08W02.AB-LOGO-COLR-QTY3
   && AE08M001.AB-CRST-ADD-COMNT1 == AE08W02.AB-CRST-ADD-COMNT1
   && AE08M001.AB-CRST-ADD-COMNT2 == AE08W02.AB-CRST-ADD-COMNT2
   && AE08M001.AB-CRST-ADD-COMNT3 == AE08W02.AB-CRST-ADD-COMNT3
   && AE08M001.AB-CRST-ADD-COMNT4 == AE08W02.AB-CRST-ADD-COMNT4
   && AE08M001.AB-CRST-ADD-COMNT5 == AE08W02.AB-CRST-ADD-COMNT5
   && AE08M001.AB-ALL-ITM-FL == AE08W02.AB-ALL-ITM-FL
   && AE08M001.AB-CRST-CTCT-NM > " "
   && AE08M001.XXX-INTL-PHONE-NBR > " "
   && (AE08M001.AB-ALL-ITM-FL == "Y"
   || AE08M001.AB-ALL-ITM-FL == "N"))
    ;
  else
    ;
    AE08W01.AE08W-UPDATE-FLAG = " "; /* reset update flag*/
    ;
    if (AE08M001.AB-CRST-CTCT-NM != " ")
    else
      converseLib.validationFailed(180); /* "CUSTOMER CONTACT NAME MUST BE*/
                                   /* ENTERED"*/
      set AE08M001.AB-CRST-CTCT-NM cursor, bold;
      ABWREC.ABWPRCSN = "S19";
      return;
    end
    ;
    if (AE08M001.XXX-INTL-PHONE-NBR != " ")
    else
      converseLib.validationFailed(181); /* "CONTACT PHONE NUMBER MUST BE*/
                                   /* ENTERED"*/
      ABWREC.ABWPRCSN = "S19";
      set AE08M001.XXX-INTL-PHONE-NBR cursor, bold;
      return;
    end
    ;
    if (AE08M001.AB-CRST-LOGO-NM != " ")
    else
      converseLib.validationFailed(189); /* "LOGO NAME MUST BE ENTERED"*/
      ABWREC.ABWPRCSN = "S19";
      set AE08M001.AB-CRST-LOGO-NM cursor, bold;
      return;
    end
    ;
    /* All Item flag must be 'Y' or 'N'*/
    ;
    if (AE08M001.AB-ALL-ITM-FL == "Y"
     || AE08M001.AB-ALL-ITM-FL == "N")
    else
      converseLib.validationFailed(118); /* " 'Y' OR 'N' ONLY PLEASE"*/
      ABWREC.ABWPRCSN = "S19";
      set AE08M001.AB-ALL-ITM-FL cursor, bold;
      return;
    end
    ;
    /* PAIR EDITS #1*/
    /* If Icon file ID / Logo Placement Code pair not entered, pass.*/
    /* If an Icon file ID is entered, there must be a corresponding*/
    /* Logo Placement Code, and it must be present on the AE09TBL.*/
    ;
    if (AE08M001.AB-ICON-FILE-NM1 == " "
     || (AE08M001.AB-ICON-FILE-NM1 != " "
     && AE08M001.AB-LOGO-PLC-CD1 in AE09TBL.AB-LOGO-PLC-CD))
    else
      converseLib.validationFailed(182); /* "LOGO PLACEMENT MISSING OR INVALID"*/
      set AE08M001.AB-LOGO-PLC-CD1 cursor, bold;
      ABWREC.ABWPRCSN = "S19";
      return;
    end
    ;
    if (AE08M001.AB-ICON-FILE-NM2 == " "
     || (AE08M001.AB-ICON-FILE-NM2 != " "
     && AE08M001.AB-LOGO-PLC-CD2 in AE09TBL.AB-LOGO-PLC-CD))
    else
      converseLib.validationFailed(182); /* "LOGO PLACEMENT MISSING OR INVALID"*/
      set AE08M001.AB-LOGO-PLC-CD2 cursor, bold;
      ABWREC.ABWPRCSN = "S19";
      return;
    end
    ;
    if (AE08M001.AB-ICON-FILE-NM3 == " "
     || (AE08M001.AB-ICON-FILE-NM3 != " "
     && AE08M001.AB-LOGO-PLC-CD3 in AE09TBL.AB-LOGO-PLC-CD))
    else
      converseLib.validationFailed(182); /* "LOGO PLACEMENT MISSING OR INVALID"*/
      set AE08M001.AB-LOGO-PLC-CD3 cursor, bold;
      ABWREC.ABWPRCSN = "S19";
      return;
    end
    ;
    /* PAIR EDITS #2*/
    /* If a Logo Placement Code is entered, there must be a*/
    /* corresponding Icon File #.*/
    ;
    if (AE08M001.AB-LOGO-PLC-CD1 != " "
     && AE08M001.AB-ICON-FILE-NM1 == " ")
      converseLib.validationFailed(190); /* "ICON FILE # IS MISSING"*/
      set AE08M001.AB-ICON-FILE-NM1 cursor, bold;
      ABWREC.ABWPRCSN = "S19";
      return;
    end
    ;
    if (AE08M001.AB-LOGO-PLC-CD2 != " "
     && AE08M001.AB-ICON-FILE-NM2 == " ")
      converseLib.validationFailed(190); /* "ICON FILE # IS MISSING"*/
      set AE08M001.AB-ICON-FILE-NM2 cursor, bold;
      ABWREC.ABWPRCSN = "S19";
      return;
    end
    ;
    if (AE08M001.AB-LOGO-PLC-CD3 != " "
     && AE08M001.AB-ICON-FILE-NM3 == " ")
      converseLib.validationFailed(190); /* "ICON FILE # IS MISSING"*/
      set AE08M001.AB-ICON-FILE-NM3 cursor, bold;
      ABWREC.ABWPRCSN = "S19";
      return;
    end
    ;
    /* PAIR EDITS #3*/
    /* If a Logo Color Quantity is entered and valid, there must be a*/
    /* corresponding Icon File # / Logo Placement*/
    ;
    if (AE08M001.AB-LOGO-COLR-QTY1 > 0
     && AE08M001.AB-ICON-FILE-NM1 == " ")
      converseLib.validationFailed(190); /* "ICON FILE # IS MISSING"*/
      set AE08M001.AB-ICON-FILE-NM1 cursor, bold;
      set AE08M001.AB-LOGO-COLR-QTY1 bold;
      ABWREC.ABWPRCSN = "S19";
      return;
    end
    ;
    if (AE08M001.AB-LOGO-COLR-QTY2 > 0
     && AE08M001.AB-ICON-FILE-NM2 == " ")
      converseLib.validationFailed(190); /* "ICON FILE # IS MISSING"*/
      set AE08M001.AB-ICON-FILE-NM2 cursor, bold;
      set AE08M001.AB-LOGO-COLR-QTY2 bold;
      ABWREC.ABWPRCSN = "S19";
      return;
    end
    ;
    if (AE08M001.AB-LOGO-COLR-QTY3 > 0
     && AE08M001.AB-ICON-FILE-NM3 == " ")
      converseLib.validationFailed(190); /* "ICON FILE # IS MISSING"*/
      set AE08M001.AB-ICON-FILE-NM3 cursor, bold;
      set AE08M001.AB-LOGO-COLR-QTY3 bold;
      ABWREC.ABWPRCSN = "S19";
      return;
    end
    ;
    ;
    /* All validation edits have been passed, and fields have been*/
    /* changed, so set the Update flag to 'Y'*/
    ;
    AE08W01.AE08W-UPDATE-FLAG = "Y";
    ;
  end
  ;
  ;
  AE08W02.AB-CRST-CTCT-NM = AE08M001.AB-CRST-CTCT-NM;
  AE08W02.XXX-INTL-PHONE-NBR = AE08M001.XXX-INTL-PHONE-NBR;
  AE08W02.AB-CRST-LOGO-NM = AE08M001.AB-CRST-LOGO-NM;
  AE08W02.AB-ICON-FILE-NM1 = AE08M001.AB-ICON-FILE-NM1;
  AE08W02.AB-ICON-FILE-NM2 = AE08M001.AB-ICON-FILE-NM2;
  AE08W02.AB-ICON-FILE-NM3 = AE08M001.AB-ICON-FILE-NM3;
  AE08W02.AB-LOGO-PLC-CD1 = AE08M001.AB-LOGO-PLC-CD1;
  AE08W02.AB-LOGO-PLC-CD2 = AE08M001.AB-LOGO-PLC-CD2;
  AE08W02.AB-LOGO-PLC-CD3 = AE08M001.AB-LOGO-PLC-CD3;
  AE08W02.AB-LOGO-COLR-QTY1 = AE08M001.AB-LOGO-COLR-QTY1;
  AE08W02.AB-LOGO-COLR-QTY2 = AE08M001.AB-LOGO-COLR-QTY2;
  AE08W02.AB-LOGO-COLR-QTY3 = AE08M001.AB-LOGO-COLR-QTY3;
  AE08W02.AB-CRST-ADD-COMNT1 = AE08M001.AB-CRST-ADD-COMNT1;
  AE08W02.AB-CRST-ADD-COMNT2 = AE08M001.AB-CRST-ADD-COMNT2;
  AE08W02.AB-CRST-ADD-COMNT3 = AE08M001.AB-CRST-ADD-COMNT3;
  AE08W02.AB-CRST-ADD-COMNT4 = AE08M001.AB-CRST-ADD-COMNT4;
  AE08W02.AB-CRST-ADD-COMNT5 = AE08M001.AB-CRST-ADD-COMNT5;
  AE08W02.AB-ALL-ITM-FL = AE08M001.AB-ALL-ITM-FL;
  ;
  ;
end // end AE08S19

//*** RECORD=AE08W01 ****
// ********************************
// Application Working Storage (1).
// ********************************
// ***********************
Record AE08W01 type basicRecord
  10 AE08W-UPDATE-FLAG AE08W-UPDATE-FLAG ; 
  10 AE08W-DATA-FLAG AE08W-DATA-FLAG ; 
  10 AE08W-PO-PRINT-FLAG AE08W-PO-PRINT-FLAG ; 
end // end AE08W01

//*** RECORD=AE08W02 ****
// *****************************************************
// Application Working Storage (2): Map Detail Save Area
// *****************************************************
// ***********************
Record AE08W02 type basicRecord
  10 AE08WLEN AE08WLEN ; 
  10 CU-CO-NM CU-CO-NM ; 
  10 AB-CRST-CTCT-NM AB-CRST-CTCT-NM ; 
  10 XXX-INTL-PHONE-NBR XXX-INTL-PHONE-NBR ; 
  10 AB-CRST-LOGO-NM AB-CRST-LOGO-NM ; 
  10 AB-ICON-FILE-NM1 AB-ICON-FILE-NM1 ; 
  10 AB-ICON-FILE-NM2 AB-ICON-FILE-NM2 ; 
  10 AB-ICON-FILE-NM3 AB-ICON-FILE-NM3 ; 
  10 AB-LOGO-COLR-QTY1 AB-LOGO-COLR-QTY1 ; 
  10 AB-LOGO-COLR-QTY2 AB-LOGO-COLR-QTY2 ; 
  10 AB-LOGO-COLR-QTY3 AB-LOGO-COLR-QTY3 ; 
  10 AB-LOGO-PLC-CD1 AB-LOGO-PLC-CD1 ; 
  10 AB-LOGO-PLC-CD2 AB-LOGO-PLC-CD2 ; 
  10 AB-LOGO-PLC-CD3 AB-LOGO-PLC-CD3 ; 
  10 AB-CRST-ADD-COMNT1 AB-CRST-ADD-COMNT1 ; 
  10 AB-CRST-ADD-COMNT2 AB-CRST-ADD-COMNT2 ; 
  10 AB-CRST-ADD-COMNT3 AB-CRST-ADD-COMNT3 ; 
  10 AB-CRST-ADD-COMNT4 AB-CRST-ADD-COMNT4 ; 
  10 AB-CRST-ADD-COMNT5 AB-CRST-ADD-COMNT5 ; 
  10 AB-ALL-ITM-FL AB-ALL-ITM-FL ; 
  10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
  10 ZZ-SDT ZZ-SDT ; 
end // end AE08W02

DataItem AE08W-DATA-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AE08W-PO-PRINT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Valid update indicator
DataItem AE08W-UPDATE-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AE08WLEN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

