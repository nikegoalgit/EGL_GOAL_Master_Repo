package gn0b;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import gn0a.*;
import in1.common.*;
import ku.common.*;
import op.common.*;
import pg.common.*;
import pk.common.*;
import sm.common.*;
import sr.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import ts.common.*;
//*** PROGRAM=GN0B ****
// ************************************************************
// *
// * application: gn0b - traffic alert - carrier assignment
// *
// * this application builds screens from the order to post
// * table for all order with traffic alert.  once an order is
// * selected, a secondary screen is used to update/assign a
// * carrier code to the order.
// *
// * maint log
// * ref       where    who      what
// * -------- -------- -------- -------------------------------
// * dlvrusa  05/01/01 msurge   original creation
// ************************************************************
// *********************
Program GN0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "GN00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  GN0BW01 GN0BW01; // record
  KULREC KULREC; // record
  KUYREC KUYREC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  TA1REC TA1REC; // record
  TF1REC TF1REC; // record
  VOPPKT02 VOPPKT02; // record
  WGN1041 WGN1041; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XWHTBL {deleteAfterUse = yes}; // table
  use XPPTBL {deleteAfterUse = yes}; // table
  use GN0BM.GN0BM001,  // forms
      GN0BM.GN0BM005
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    GN0B-PROGRAM-CTRL: GN0B-PROGRAM-CTRL();
  end // end main
end // end GN0B

// build screen array control
Function GN0B-BLD-SCR-ARR()
   /* *************************************************************/

      /* control the screen table building process*/

   /* *************************************************************/

  set WGN1041 empty;
  GN0BW01.GN0BWPON = " "; /* clear prev ord nbr*/

      /* set up the selection criteria*/

  WGN1041.XWHCD = GN0BM001.XWHCD; /* warehouse*/
  WGN1041.KUCCOID = GN0BM001.GN0BW-SEL-KUCCOID; /* company*/
  WGN1041.KUMSTRID = GN0BM001.GN0BW-SEL-KUMSTRID; /* store*/
  WGN1041.XNX-DEPT-ID-XREF = GN0BM001.GN0BW-SEL-XNXCD; /* dept xref*/
  WGN1041.XPP-PICK-PRTY-CD = GN0BM001.GN0BW-SEL-XPP; /* pick priority*/
  WGN1041.OP-CUST-NEED-DT = GN0BM001.GN0BW-SEL-CUNDT;
                                                      /* customer need date*/

      /* set working storage fields to selection*/

  GN0BW01.XWHCD = GN0BM001.XWHCD; /* set warehouse*/
  GN0BW01.XWHABRV = GN0BM001.XWHABRV; /* set warehouse abrv*/
  GN0BW01.GN0BW-SEL-KUCCOID = GN0BM001.GN0BW-SEL-KUCCOID;
                                                         /* set select cust*/
  GN0BW01.GN0BW-SEL-KUMSTRID = GN0BM001.GN0BW-SEL-KUMSTRID;
                                                        /* set select store*/
  GN0BW01.GN0BW-SEL-XNXCD = GN0BM001.GN0BW-SEL-XNXCD;
                                                      /* set select deptity*/
  GN0BW01.GN0BW-SEL-XPP = GN0BM001.GN0BW-SEL-XPP;
                                            /* set select priorityneed date*/
  GN0BW01.GN0BW-SEL-CUNDT = GN0BM001.GN0BW-SEL-CUNDT;
                                                    /* set select need date*/

      /* set indexes for table load/reload*/

  GN0BW01.GN0BWSCM = 0; /* reset curr table max*/
  GN0BW01.GN0BWSSS = 1; /* reset screen table index*/
  GN0BS-OPE-VOPPKH04(); /* select set*/
  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end
  GN0BS-FET-VOPPKH04(); /* fetch*/
  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end

      /* load table*/

  while (SQLCA.VAGen_SQLCODE == 0 /* while row found*/
   && GN0BW01.GN0BWSCM < GN0BW01.GN0BWSMX) /* and not table ovfl*/
    if (SQLCA.VAGen_SQLCODE == 0)
      GN0BW01.GN0BWSCM = GN0BW01.GN0BWSCM + 1; /* add 1 to index*/
      GN0BW01.WGN1041-GROUP[GN0BWSCM] = WGN1041.WGN1041-GROUP; /* load*/
      GN0BW01.GN0BWSEL[GN0BWSCM] = " "; /* clear sel fl*/
    end
    GN0BS-FET-VOPPKH04(); /* fetch*/
  end

  if (GN0BW01.GN0BWSCM >= GN0BW01.GN0BWSMX) /* move data than tbl entries*/
    GN0BW01.GN0BW-GN-MORE-DATA = "Y";
  else
    GN0BW01.GN0BW-GN-MORE-DATA = "N";
  end

  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end

  GN0BS-CLS-VOPPKH04(); /* close set*/

   /* *************************************************************/
end // end GN0B-BLD-SCR-ARR

// build screen control
Function GN0B-BLD-SCR-CTRL()
   /* *************************************************************/

      /* control the screen building process*/

   /* *************************************************************/

      /* clear map area*/

  set GN0BM001 initial;
  GN0BM001.XXXCURDT = VGVar.currentShortGregorianDate;
  GN0BM001.XXXRVNBR = "00";

      /* set selection fields*/

  GN0BM001.XWHCD = GN0BW01.XWHCD; /* set warehouse*/
  GN0BM001.XWHABRV = GN0BW01.XWHABRV; /* set warehouse abrv*/
  GN0BM001.GN0BW-SEL-KUCCOID = GN0BW01.GN0BW-SEL-KUCCOID;
                                                         /* set select cust*/
  GN0BM001.GN0BW-SEL-KUMSTRID = GN0BW01.GN0BW-SEL-KUMSTRID;
                                                        /* set select store*/
  GN0BM001.GN0BW-SEL-XNXCD = GN0BW01.GN0BW-SEL-XNXCD;
                                                         /* set select dept*/
  GN0BM001.GN0BW-SEL-XPP = GN0BW01.GN0BW-SEL-XPP;
                                                     /* set select priority*/
  GN0BM001.GN0BW-SEL-CUNDT = GN0BW01.GN0BW-SEL-CUNDT;
                                                    /* set select need date*/

      /* check to see if no records selected*/

  if (converseVar.validationMsgNum == 0)
    if (GN0BW01.GN0BWSCM <= 0) /* no table*/
      if (GN0BM001.GN0BW-SEL-KUCCOID is modified /* if selection criteria set*/
       || GN0BM001.GN0BW-SEL-KUMSTRID is modified
       || GN0BM001.GN0BW-SEL-XNXCD is modified   
       || GN0BM001.GN0BW-SEL-XPP is modified     
       || GN0BM001.GN0BW-SEL-CUNDT is modified) 
        converseLib.validationFailed(270); /* no records selected*/
      end
    end
  end


  GN0BW01.GN0BWSSB = 1; /* init screen sub*/
  GN0BW01.GN0BWS1 = GN0BW01.GN0BWSSS; /* init screen tab sub*/
  while (GN0BW01.GN0BWSSB <= GN0BW01.GN0BWSSM /* screen sub lt screen max*/
   && GN0BW01.GN0BWS1 <= GN0BW01.GN0BWSCM) /* screen tab sub lt cur max*/

    WGN1041.WGN1041-GROUP = GN0BW01.WGN1041-GROUP[GN0BWS1];

    set GN0BM001.GN0BMNSL[GN0BWSSB] normal;
    set GN0BM001.GN0BMNSL[GN0BWSSB] underline;

    GN0BM001.OP-CUST-ORD-ID[GN0BWSSB] = WGN1041.OP-CUST-ORD-ID;
                              /* DELIVERY NOTE NUMBER*/
    GN0BW01.GN0BWCOC = WGN1041.KUCCOID; /* format co number*/
    GN0BW01.GN0BWCOP = "."; /* literal '.'*/
    GN0BW01.GN0BWCOS = WGN1041.KUMSTRID; /* format store number*/
    GN0BW01.GN0BWCOQ = "."; /* literal '.'*/
    GN0BW01.GN0BWCOD = WGN1041.XNX-DEPT-ID-XREF; /* format dept number*/
    sysVar.arrayIndex = 1;
    while (sysVar.arrayIndex < 8 /* zero suppress customer number*/
     && GN0BW01.GN0BWCOO[sysVar.arrayIndex] <= "0")
      GN0BW01.GN0BWCOO[sysVar.arrayIndex] = " ";
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* increm index*/
    end
    GN0BM001.GN0BMCN[GN0BWSSB] = GN0BW01.GN0BWCON; /* fmt cust nbr*/

    GN0BM001.KUMSTSNM[GN0BWSSB] = WGN1041.WGN1041-STORE-NM;
                                                              /* store name*/
    GN0BM001.XPP-PICK-PRTY-CD[GN0BWSSB] = WGN1041.XPP-PICK-PRTY-CD;
                                  /* priority*/
    GN0BM001.OP-CUST-NEED-DT[GN0BWSSB] = WGN1041.OP-CUST-NEED-DT;
                                  /* need date*/
    GN0BM001.ZZ-SDT[GN0BWSSB] = WGN1041.ZZZSDT; /* create dt*/

  /* &*&E WGN1041.GR-ORD-STAT-CD TO GN0BM001.GR-ORD-STAT-CD(GN0BWSSB);*/

  /* &*&E WGN1041.tf-CARr-CD TO GN0BM001.CARCD(GN0BWSSB);*/

    GN0BW01.GN0BWSSB = GN0BW01.GN0BWSSB + 1; /* increment screen sub*/
    GN0BW01.GN0BWS1 = GN0BW01.GN0BWS1 + 1; /* tab sub*/

  end

   /* *************************************************************/
end // end GN0B-BLD-SCR-CTRL

// build traffic screen
Function GN0B-BLD-TRAF-SCR()
   /* *************************************************************/

      /* control the traffic alert assignment  screen building*/

   /* *************************************************************/

      /* clear map area*/

  set GN0BM005 initial;
  GN0BM005.XXXCURDT = VGVar.currentShortGregorianDate;
  GN0BM005.XXXRVNBR = "00";

      /* get carrier information*/

  GN0BM005.TF1CARCD = WGN1041.TF-CARR-CD; /* move code*/
  if (WGN1041.TF-CARR-CD > " ")
    TF1REC.TF1CARCD = WGN1041.TF-CARR-CD; /* build key*/
    GN0BS-S-VCARR001(); /* get carrier info*/
    if (converseVar.validationMsgNum != 0) /* error?*/
      return;
    end
    if (SQLCA.VAGen_SQLCODE == 0)
      GN0BM005.TF1ABRV = TF1REC.TF1ABRV; /* move abbreviation*/
    else
      GN0BM005.TF1ABRV = "*UNKNOWN"; /* move abbreviation*/
      converseLib.validationFailed(078); /* carrier is invalid*/
    end
    if (SQLCA.VAGen_SQLCODE == 0
     && TF1REC.XXXSTAT == "I")
      converseLib.validationFailed(274); /* carrier is inactive*/
    end
  end

      /* get otp text (spec instructions)*/

  VOPPKT02.XWHCD = WGN1041.XWHCD;
  VOPPKT02.OP1CUOID = WGN1041.OP-CUST-ORD-ID;
  VOPPKT02.OP1NORID = WGN1041.OP-NIKE-ORD-ID;
  VOPPKT02.OP1NTMAL = +001;

  GN0BS-SS-VOPPKT02(); /* sel set order text*/
  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end
  GN0BS-NXT-VOPPKT02(); /* fetch order text*/
  GN0BW01.GN0BWS2 = 1; /* init sub*/
  while (SQLCA.VAGen_SQLCODE == 0 /* not end of set*/
   && GN0BW01.GN0BWS2 <= 10) /* not end of table*/
    if (VOPPKT02.XNDCD == "TRAF") /* traffic instruction*/
      GN0BM005.OP4TXT[GN0BWS2] = VOPPKT02.OP4TXT; /* move instruction*/
      GN0BW01.GN0BWS2 = GN0BW01.GN0BWS2 + 1; /* increm index*/
    end
    GN0BS-NXT-VOPPKT02(); /* fetch order text*/
  end
  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end
  GN0BS-CLS-VOPPKT02(); /* close set order text*/

      /* format misc fields*/

  GN0BM005.XWHCD = WGN1041.XWHCD; /* warehouse*/
  /* IF WGN1041.XWHCD IN XWHTBL.XWHCD;*/
  /* MOVE XWHTBL.XWHSABRV(EZETST) TO GN0BM005.XWHSABRV;*/
  /* END;*/

  GN0BM005.XPP-PICK-PRTY-CD = WGN1041.XPP-PICK-PRTY-CD; /* pick priori*/
  if (WGN1041.XPP-PICK-PRTY-CD in XPPTBL.XPPCD)
    GN0BM005.XPPABRV = XPPTBL.XPPABRV[sysVar.arrayIndex];
  end

  GN0BM005.KUMSTSNM = WGN1041.WGN1041-STORE-NM; /* store short nm*/

  GN0BM005.OP5ALTNM = WGN1041.OP-ALT-NM; /* store short nm*/
  GN0BM005.OP11TMSF = WGN1041.OP-ONETIME-SHIP-FL; /* onetime flag*/
  GN0BM005.XXXADDR1 = WGN1041.XXX-ADDR1; /* address line 1*/
  GN0BM005.XXXADDR2 = WGN1041.XXX-ADDR2; /* address line 2*/
  GN0BM005.XXXADDR3 = WGN1041.XXX-ADDR3; /* address line 3*/
  GN0BM005.XXXCITY = WGN1041.XXX-CITY; /* city*/
  GN0BM005.XSTCD = WGN1041.XST-ST-CD; /* state*/
  GN0BM005.XXXZIP = WGN1041.XXX-ZIP; /* zip*/
  /* &*&WGN1041.XCT-CTRY-CD TO GN0BM005.Xct-ctry-cd;/* country*/

  if (WGN1041.PK-TOT-ORD-WT > 0) /* total order weight*/
    GN0BM005.PK-TOT-ORD-WT = mathLib.round(WGN1041.PK-TOT-ORD-WT * 2.2046, -mathLib.decimals(GN0BM005.PK-TOT-ORD-WT));
                                   /* Weigth conversion to lbs*/
  end

  if (WGN1041.PK-TOT-ORD-QTY > 0) /* total order quantity*/
    GN0BM005.PK-TOT-ORD-QTY = WGN1041.PK-TOT-ORD-QTY;
  end

  if (WGN1041.OP-CUST-NEED-DT > 0) /* customer need date*/
    GN0BM005.OP-CUST-NEED-DT = WGN1041.OP-CUST-NEED-DT; /* move to map*/
  end

  GN0BM005.OP-CUST-ORD-ID = WGN1041.OP-CUST-ORD-ID; /* fmt ord nbr*/

  GN0BW01.GN0BWCOC = WGN1041.KUCCOID; /* format co number*/
  GN0BW01.GN0BWCOP = "."; /* literal '.'*/
  GN0BW01.GN0BWCOS = WGN1041.KUMSTRID; /* format store number*/
  GN0BW01.GN0BWCOQ = "."; /* literal '.'*/
  GN0BW01.GN0BWCOD = WGN1041.XNX-DEPT-ID-XREF; /* format dept number*/
  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex < 8 /* zero suppress customer number*/
   && GN0BW01.GN0BWCOO[sysVar.arrayIndex] <= "0")
    GN0BW01.GN0BWCOO[sysVar.arrayIndex] = " ";
    sysVar.arrayIndex = sysVar.arrayIndex + 1; /* increm index*/
  end
  GN0BM005.GN0BMFCN = GN0BW01.GN0BWCON; /* fmt cust nbr*/

  GN0BW01.WGN1041-GROUP[GN0BWS1] = WGN1041.WGN1041-GROUP;

   /* *************************************************************/
end // end GN0B-BLD-TRAF-SCR

// control summary map processing
Function GN0B-CTRL-SUMM-MAP()
   /* *************************************************************/

      /* control the summary screen processing*/

   /* *************************************************************/



  GN0B-DISP-SUMM-MAP(); /* converse summary screen*/

  if (converseVar.eventKey is pa1 /* pa keys are invalid*/
   || converseVar.eventKey is pa2 
   || converseVar.eventKey is pa3)
    converseLib.clearScreen();
     /* force map send*/
    converseLib.validationFailed(088); /* key pressed is not valid*/
    return;
  end

  if (GN0BM001.CATOAP > " ")
    if (GN0BM001.CAITEM is modified)
      COMMAREA.CAITEM = GN0BM001.CAITEM;
    end
    COMMAREA.CATOAP = GN0BM001.CATOAP;
    XSEXIT();
    set GN0BM001.CATOAP cursor, bold;
    GN0BM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    return;
  end

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "PK0A";
    XSEXIT();
    GN0BM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    return;
  end

  if (converseVar.eventKey is pf4)
    XSPF4();
    exit program;
  end

      /* edit reselect fields*/

  if (GN0BM001.XWHCD is modified /* are any of the selection flds*/
   /* modified*/
   || GN0BM001.GN0BW-SEL-KUCCOID is modified
   || GN0BM001.GN0BW-SEL-KUMSTRID is modified
   || GN0BM001.GN0BW-SEL-XNXCD is modified
   || GN0BM001.GN0BW-SEL-XPP is modified
   || GN0BM001.GN0BW-SEL-CUNDT is modified)
    if (GN0BM001.XWHCD is modified) /* are any of the selection flds*/
      if (GN0BM001.XWHCD > " "
       && GN0BM001.XWHCD < "99")
        GN0BW01.XWHCD = GN0BM001.XWHCD;
        if (GN0BM001.XWHCD in XWHTBL.XWHCD)
          GN0BW01.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
          GN0BM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
        else
          set GN0BM001.XWHCD cursor, modified, bold;
          converseLib.validationFailed(071); /* warehouse invalid*/
        end
      end
    end
    GN0B-BLD-SCR-ARR();
    GN0B-BLD-SCR-CTRL(); /* build screen*/
    return; /* return to converse*/
  end

      /* edit summary screen line selection codes*/

  GN0BS-EDT-SEL-CODE(); /* edit select fields*/
  if (converseVar.validationMsgNum != 0)
    return;
  end

      /* check for main process key*/
      /* process select code 's' table records*/

  if (converseVar.eventKey is enter)
    GN0BW01.GN0BWSCT = 0; /* clear count*/
    GN0BW01.GN0BWS1 = 1; /* clear index*/
    while (GN0BW01.GN0BWS1 <= GN0BW01.GN0BWSCM /* not eot*/
     && converseVar.eventKey not pf3        /* pf3 checked for return from*/
     /* below*/
     && converseVar.validationMsgNum == 0) /* no errors*/
      if (GN0BW01.GN0BWSEL[GN0BWS1] == "S")
        GN0BW01.GN0BWSCT = GN0BW01.GN0BWSCT + 1; /* count recs selected*/
        GN0BW01.GN0BWSEL[GN0BWS1] = " "; /* clear select request*/
        WGN1041.WGN1041-GROUP = GN0BW01.WGN1041-GROUP[GN0BWS1];
        GN0BW01.GN0BWFFL = "Y"; /* set first time fl*/
        GN0BW01.GN0BWM5F = "N"; /* set process loop fl*/
        while (GN0BW01.GN0BWM5F == "N")
          GN0B-CTRL-TRAF-SCR(); /* control detail screen processing*/
        end
      end
      GN0BW01.GN0BWS1 = GN0BW01.GN0BWS1 + 1; /* increm index*/
    end
    if (GN0BW01.GN0BWSCT == 0)
      converseLib.validationFailed(273); /* no selections have been made*/
    else
      GN0B-BLD-SCR-ARR(); /* build screen array*/
      GN0B-BLD-SCR-CTRL(); /* build screen*/
    end
    return;
  end

      /* check for page backward*/

  if (converseVar.eventKey is pf7)
    GN0BW01.GN0BWS1 = GN0BW01.GN0BWSSS - GN0BW01.GN0BWSSM; /* check for max*/
    if (GN0BW01.GN0BWS1 < 1) /* less than minimum?*/
      converseLib.validationFailed(007); /* end of page backward*/
    else
      GN0BW01.GN0BWSSS = GN0BW01.GN0BWSSS - GN0BW01.GN0BWSSM; /* page back*/
      GN0B-BLD-SCR-CTRL(); /* build screen*/
    end
    return;
  end

      /* check for page forward*/

  if (converseVar.eventKey is pf8)
    GN0BW01.GN0BWS1 = GN0BW01.GN0BWSSS + GN0BW01.GN0BWSSM; /* check for max*/
    if (GN0BW01.GN0BWS1 > GN0BW01.GN0BWSCM) /* greater curr max?*/
      if (GN0BW01.GN0BW-GN-MORE-DATA == "N") /* no more data*/
        converseLib.validationFailed(008); /* end of page forward*/
      else
        converseLib.validationFailed(085); /* more data than entries in table*/
      end
    else
      GN0BW01.GN0BWSSS = GN0BW01.GN0BWSSS + GN0BW01.GN0BWSSM; /* page frwd*/
      GN0B-BLD-SCR-CTRL(); /* build screen*/
    end
    return;
  end

  converseLib.validationFailed(088); /* key pressed is not valid*/



   /* *************************************************************/
end // end GN0B-CTRL-SUMM-MAP

// control traffic scr processing
Function GN0B-CTRL-TRAF-SCR()
   /* *************************************************************/

      /* control the traffic screen processing*/

   /* *************************************************************/

  if (GN0BW01.GN0BWFFL == "Y")
    GN0B-BLD-TRAF-SCR(); /* build screen (get wgn1041)*/
    if (converseVar.validationMsgNum == 086) /* deadlock*/
       /* next sentence*/
    else
      GN0BW01.GN0BWFFL = "N"; /* set flag off*/
    end
  end

  GN0B-DISP-TRAF-SCR(); /* converse summary screen*/

  if (converseVar.eventKey is pa1 /* pa keys are invalid*/
   || converseVar.eventKey is pa2 
   || converseVar.eventKey is pa3)
    converseLib.clearScreen();
     /* force map send*/
    converseLib.validationFailed(088); /* key pressed is not valid*/
    return;
  end

  if (GN0BM005.CATOAP > " ")
    if (GN0BM005.CAITEM is modified)
      COMMAREA.CAITEM = GN0BM005.CAITEM;
    end
    COMMAREA.CATOAP = GN0BM005.CATOAP;
    XSEXIT();

    set GN0BM005.CATOAP cursor, bold;
    GN0BM005.VAGen_EZEMSG = COMMAREA.CAMSG;
    return;
  end

  if (converseVar.eventKey is pf3)
    GN0BW01.GN0BWM5F = "Y";
    return;
  end

  if (converseVar.eventKey is pf4)
    XSPF4();
    exit program;
  end

  if (converseVar.eventKey is pf5)
    GN0BW01.GN0BWM5F = "Y";
    return;
  end

      /* edit entered fields*/

  GN0BS-EDT-TRAF-FLD(); /* edit fields*/

  if (converseVar.eventKey is enter) /* edit only*/
    if (((GN0BM005.GN0BMBCA == "Y" /* if (bypass assignment and no carrier)*/
     && GN0BM005.TF1CARCD == " ")  /* or*/
     || (GN0BM005.GN0BMBCA != "Y"  /* (no bypass assignment and carrier)*/
     && GN0BM005.TF1CARCD != " ")) /**/
     && converseVar.validationMsgNum == 0) /* no errors*/
      converseLib.validationFailed(090); /* press f12 to process*/
    else
      if (GN0BM005.GN0BMBCA == "Y" /* bypass-assignment and carrier set*/
       && GN0BM005.TF1CARCD != " ") /**/
        converseLib.validationFailed(091); /* only one should be set*/
      end
    end
    return;
  end

  if (converseVar.validationMsgNum > 0) /* some error*/
    return;
  end

  if (converseVar.eventKey is pf12) /* if update carrier*/
    if (((GN0BM005.GN0BMBCA == "Y" /* if (bypass assignment and no carrier)*/
     && GN0BM005.TF1CARCD == " ")  /* or*/
     || GN0BM005.TF1CARCD != " ")  /* valid carrier*/
     && GN0BW01.GN0BWFFL == "N"    /* no prev deadlock error*/
     && converseVar.validationMsgNum == 0) /* no errors*/

      GN0BS-UPD-VOPPKH04(); /* update tables*/
      if (converseVar.validationMsgNum == 0) /* no error*/
        GN0BW01.GN0BWM5F = "Y";
      end
      return;
    end

  end

  converseLib.validationFailed(088); /* key pressed is not valid*/


   /* *************************************************************/
end // end GN0B-CTRL-TRAF-SCR

// disp summary map
Function GN0B-DISP-SUMM-MAP()
   /* *************************************************************/



  converseLib.clearScreen();
   /* set the other map to page*/


  converse GN0BM001 ;


      /* if fields are modified, then set modified*/

  if (GN0BM001.XWHCD is modified)
    set GN0BM001.XWHCD modified;
  end

  if (GN0BM001.GN0BW-SEL-KUCCOID is modified)
    set GN0BM001.GN0BW-SEL-KUCCOID modified;
  end

  if (GN0BM001.GN0BW-SEL-KUMSTRID is modified)
    set GN0BM001.GN0BW-SEL-KUMSTRID modified;
  end

  if (GN0BM001.GN0BW-SEL-XNXCD is modified)
    set GN0BM001.GN0BW-SEL-XNXCD modified;
  end
  if (GN0BM001.GN0BW-SEL-XPP is modified)
    set GN0BM001.GN0BW-SEL-XPP modified;
  end

  if (GN0BM001.GN0BW-SEL-CUNDT is modified)
    set GN0BM001.GN0BW-SEL-CUNDT modified;
  end

  if (GN0BM001.CATOAP is modified)
    set GN0BM001.CATOAP modified;
  end

  if (GN0BM001.CAITEM is modified)
    set GN0BM001.CAITEM modified;
  end

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= GN0BW01.GN0BWSSM) /* while not screen max*/
    if (GN0BM001.GN0BMNSL[sysVar.arrayIndex] is modified)
      set GN0BM001.GN0BMNSL[sysVar.arrayIndex] modified;
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end



   /* *************************************************************/
end // end GN0B-DISP-SUMM-MAP

// disp traf alert assignment map
Function GN0B-DISP-TRAF-SCR()
   /* *************************************************************/
   /*  */
   /* display traffic alert assignment map*/
   /*  */
   /* *************************************************************/



  converseLib.clearScreen();
   /* set the other map to page*/


  converse GN0BM005 ;



      /* if fields are modified, then set modified*/

  if (GN0BM005.TF1CARCD is modified)
    set GN0BM005.TF1CARCD modified;
  end

  if (GN0BM005.GN0BMBCA is modified)
    set GN0BM005.GN0BMBCA modified;
  end

  if (GN0BM005.CATOAP is modified)
    set GN0BM005.CATOAP modified;
  end

  if (GN0BM005.CAITEM is modified)
    set GN0BM005.CAITEM modified;
  end



   /* *************************************************************/
end // end GN0B-DISP-TRAF-SCR

// init pgm areas
Function GN0B-INITIALIZE()
   /* *************************************************************/

      /* initialize program work areas*/

   /* *************************************************************/


      /* set global csp controls*/

  VGVar.handleHardIOErrors = 1; /* set return on error*/
  converseVar.commitOnConverse = 1; /* set commit on converse*/

      /* clear working storage records*/

  set SQLCA empty;
  set KULREC empty;
  set WGN1041 empty;
  set SY1REC empty;
  set TA1REC empty;
  set TF1REC empty;
  set KUYREC empty;
  set GN0BW01 empty;
  set XX0XW01 empty;
  GN0BW01.GN0BWSSM = 13; /* summary screen max entries*/
  GN0BW01.GN0BWSMX = 117; /* table max*/


      /* clear maps initially*/

  set GN0BM001 initial;
  set GN0BM005 initial;


      /* init ta1rec areas*/

  TA1REC.TA1TYPE = "DB2 ";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1PGMNM = "GN0B";


      /* set up warehouse*/

  if (COMMAREA.XWHCD > " "
   && COMMAREA.XWHCD < "99")
    GN0BW01.XWHCD = COMMAREA.XWHCD;
    GN0BM001.XWHCD = COMMAREA.XWHCD;
    if (COMMAREA.XWHCD in XWHTBL.XWHCD)
      GN0BW01.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
      GN0BM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
    end
  end



   /* *************************************************************/
end // end GN0B-INITIALIZE

// program control
Function GN0B-PROGRAM-CTRL()
   /* *************************************************************/

      /* this process controls program execution*/

   /* *************************************************************/



  if (COMMAREA.CASYSINT != "CSP")
    COMMAREA.CASYSINT = "CSP";
    COMMAREA.CAUSERID = "DEMO";
    COMMAREA.XWHCD = "04";
    COMMAREA.CAFROMAP = "PK0A";
    COMMAREA.CACURRAP = "GN0B";
  end

  XSENTRY(); /* check entry security*/

   /* ****************************************************/
   /* *** set segmented trans id                      ****/
   /* ****************************************************/

  COMMAREA.CAEZSAP = sysVar.transactionID;
  COMMAREA.CAEZSG12 = "GN";
  COMMAREA.CAEZSG4 = "B";
  sysVar.transactionID = COMMAREA.CAEZSAP;

   /* *************************************************************/
  GN0B-INITIALIZE(); /* init areas*/

     /* build table only if warehouse is valid*/

  if (GN0BM001.XWHCD > " " /* is warehouse valid?*/
   && GN0BM001.XWHCD != "99"
   && GN0BM001.XWHCD in XWHTBL.XWHCD)
    GN0B-BLD-SCR-ARR(); /* control screen table build*/
    GN0B-BLD-SCR-CTRL(); /* control screen build*/
  else
    set GN0BM001.XWHCD cursor, modified, bold;
    converseLib.validationFailed(071); /* warehouse is not valid*/
  end

  GN0BW01.GN0BWM1F = "N";
  while (GN0BW01.GN0BWM1F == "N")
    GN0B-CTRL-SUMM-MAP(); /* control summary screen usage*/
  end



   /* *************************************************************/
end // end GN0B-PROGRAM-CTRL

// abort from bad db2 rc
Function GN0BS-ABORT-DB2()



      /* *********************************************************/
      /* * this statement group performs an abort when a bad    **/
      /* * db2 rc is encountered.                               **/
      /* *********************************************************/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* invoke syncpoint rollback*/
  call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
  COMMAREA.CAUSERA = " "; /* clear user commarea*/
  XSPF4(); /* invoke master menu*/
  exit program;

   /* *************************************************************/
end // end GN0BS-ABORT-DB2

// close set dorder.voppkh04
Function GN0BS-CLS-VOPPKH04()
      /* *********************************************************/
      /* * this statement group performs a close set for        **/
      /* * the dorder.voppkh04 table.                           **/
      /* *********************************************************/

      /* issue close set request*/

  WGN1041.WGN1041-FUNCTION-CD = "C"; /* set iomod function*/
  call "GN1040" (WGN1041) {isNoRefresh = yes, isExternal = yes}; /* i/o mod for close set*/

      /* check db2 return code*/

  SQLCA.SQLCAREC = WGN1041.WGN1041-ERROR-INFO; /* SQL RETURN*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VOPPKH04"; /* table view*/
    TA1REC.TA1TBLKE = " "; /* key value*/
    TA1REC.TA1LOCAT[3] = "GN0BS-CS"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "GN1041  "; /* i/o mod name*/
    GN0BS-ABORT-DB2(); /* abort*/
  end



   /* *************************************************************/
end // end GN0BS-CLS-VOPPKH04

// close set dorder.voppkt02
Function GN0BS-CLS-VOPPKT02()
      /* *********************************************************/
      /* * this statement group performs a close set for        **/
      /* * the dorder.voppkt02 table.                           **/
      /* *********************************************************/

      /* issue close set request*/

  call "VOPPKT02" ("C1", SQLCA, VOPPKT02) {isNoRefresh = yes, isExternal = yes}; /* for close set*/

      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VOPPKT02"; /* table view*/
    TA1REC.TA1TBLKE = " "; /* key value*/
    TA1REC.TA1LOCAT[3] = "GN0BS-CL"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "VOPPKT02"; /* i/o mod name*/
    GN0BS-ABORT-DB2(); /* abort*/
  end



   /* *************************************************************/
end // end GN0BS-CLS-VOPPKT02

// edit summary line select codes
Function GN0BS-EDT-SEL-CODE()
   /* *************************************************************/

      /* control summary screen line selection edit/save*/

   /* *************************************************************/

  sysVar.arrayIndex = GN0BW01.GN0BWSSM; /* set to screen max*/
  while (sysVar.arrayIndex > 0)
    if (GN0BM001.GN0BMNSL[sysVar.arrayIndex] is modified)
      if (GN0BM001.GN0BMNSL[sysVar.arrayIndex] == "S"
       || GN0BM001.GN0BMNSL[sysVar.arrayIndex] == " ")
        set GN0BM001.GN0BMNSL[sysVar.arrayIndex] underline;
        GN0BW01.GN0BWS1 = GN0BW01.GN0BWSSS + sysVar.arrayIndex - 1;
        if (GN0BM001.GN0BMNSL[sysVar.arrayIndex] == "S")
          GN0BW01.GN0BWSEL[GN0BWS1] = "S"; /* set sel cd in table*/
        else
          WGN1041.WGN1041-GROUP = GN0BW01.WGN1041-GROUP[GN0BWS1];
          GN0BW01.GN0BWSEL[GN0BWS1] = " "; /* set sel cd in table*/
        end
      else
        set GN0BM001.GN0BMNSL[sysVar.arrayIndex] cursor, modified, bold, underline;
        converseLib.validationFailed(272); /* selection code in not valid*/
      end
    end
    sysVar.arrayIndex = sysVar.arrayIndex - 1;
  end

   /* *************************************************************/
end // end GN0BS-EDT-SEL-CODE

// edit traffic fields
Function GN0BS-EDT-TRAF-FLD()
   /* *************************************************************/

      /* control traffic field edits*/

   /* *************************************************************/


      /* check record selection code*/

  if (GN0BM005.TF1CARCD is modified
   && GN0BM005.TF1CARCD != WGN1041.TF-CARR-CD) /* really changed?*/
    if (GN0BM005.TF1CARCD <= " ")
      GN0BM005.TF1ABRV = " "; /* clear abbrev*/
    else
      TF1REC.TF1CARCD = GN0BM005.TF1CARCD;
      GN0BS-S-VCARR001(); /* get carrier*/
      if (converseVar.validationMsgNum != 0) /* error?*/
        return;
      end
      if (SQLCA.VAGen_SQLCODE == 100) /* if not found*/
        set GN0BM005.TF1CARCD cursor, modified, bold;
        GN0BM005.TF1ABRV = " "; /* clear abbrev*/
        converseLib.validationFailed(078); /* carrier is invalid*/
      else /* assume 0 rc*/
        GN0BM005.TF1ABRV = TF1REC.TF1ABRV; /* set abbrev*/
        if (TF1REC.XXXSTAT != "A")
          set GN0BM005.TF1CARCD cursor, modified, bold;
          converseLib.validationFailed(274); /* carrier is inactive*/
        else /* check to see if valid for warehouse*/
          sysVar.arrayIndex = 1;
          while (sysVar.arrayIndex <= 15 /* not end of table*/
           && TF1REC.XWHCD[sysVar.arrayIndex] > " ") /* not end of table*/
            if (WGN1041.XWHCD == TF1REC.XWHCD[sysVar.arrayIndex]) /* if found, get out*/
              return; /* get out*/
            end
            sysVar.arrayIndex = sysVar.arrayIndex + 1; /* next loop*/
          end
          set GN0BM005.TF1CARCD cursor, modified, bold;
          converseLib.validationFailed(315); /* carrier is not valid for warehouse*/
        end
      end
    end
  else
    if (GN0BM005.GN0BMBCA is modified)
      if (GN0BM005.GN0BMBCA == "Y"
       || GN0BM005.GN0BMBCA == " ")
       /*  */
      else
        set GN0BM005.GN0BMBCA cursor, modified, bold;
        converseLib.validationFailed(087); /* bypass carrier assign flag invalid*/
      end
    else
      GN0BM005.TF1ABRV = " "; /* clear abbrev*/
      set GN0BM005.TF1CARCD cursor, modified, bold;
      converseLib.validationFailed(089); /* please enter carrier*/
    end
  end

   /* *************************************************************/
end // end GN0BS-EDT-TRAF-FLD

// select next dorder.voppkh04
Function GN0BS-FET-VOPPKH04()
      /* *********************************************************/
      /* * this statement group performs a select next for      **/
      /* * the dorder.voppkh04 table.                           **/
      /* *********************************************************/

      /* issue select next to get request*/

  WGN1041.WGN1041-FUNCTION-CD = "F"; /* set iomod function*/
  call "GN1040" (WGN1041) {isNoRefresh = yes, isExternal = yes}; /* i/o mod for select next*/

      /* check db2 return code*/

  SQLCA.SQLCAREC = WGN1041.WGN1041-ERROR-INFO; /* SQL RETURN*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100) /* check for end of set rc*/
         /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(086); /* file deadlock - try again*/
      GN0BS-POST-BAD-DB2(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VOPPKH04"; /* table view*/
      TA1REC.TA1TBLKE = WGN1041.WGN1041-KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "GN0BS-SN"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "GN1040  "; /* i/o mod name*/
      GN0BS-ABORT-DB2(); /* abort*/
    end
  end



   /* *************************************************************/
end // end GN0BS-FET-VOPPKH04

// select next dorder.voppkt02
Function GN0BS-NXT-VOPPKT02()
      /* *********************************************************/
      /* * this statement group performs a select next for      **/
      /* * the dorder.voppkt02 table.                           **/
      /* *********************************************************/

      /* issue select next to get request*/

  call "VOPPKT02" ("N1", SQLCA, VOPPKT02) {isNoRefresh = yes, isExternal = yes}; /* FOselect next*/

      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100) /* check for end of set rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(086); /* file deadlock - try again*/
      GN0BS-POST-BAD-DB2(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VOPPKT02"; /* table view*/
      TA1REC.TA1TBLKE = VOPPKT02.VOPPKT02-KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "GN0BS-NX"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "VOPPKT02"; /* i/o mod name*/
      GN0BS-ABORT-DB2(); /* abort*/
    end
  end



   /* *************************************************************/
end // end GN0BS-NXT-VOPPKT02

// select set dorder.voppkh04
Function GN0BS-OPE-VOPPKH04()
      /* *********************************************************/
      /* * this statement group performs a select set for       **/
      /* * the dorder.voppkh04 table.                           **/
      /* *********************************************************/

      /* issue select set request*/

  WGN1041.WGN1041-FUNCTION-CD = "O"; /* set iomod function*/
  call "GN1040" (WGN1041) {isNoRefresh = yes, isExternal = yes}; /* i/o mod for select set*/

      /* check db2 return code*/

  SQLCA.SQLCAREC = WGN1041.WGN1041-ERROR-INFO; /* SQL RETURN*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(086); /* file deadlock - try again*/
      GN0BS-POST-BAD-DB2(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VOPPKH04"; /* table view*/
      TA1REC.TA1TBLKE = WGN1041.WGN1041-KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "GN0BS-OP"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "GN1040  "; /* i/o mod name*/
      GN0BS-ABORT-DB2(); /* abort*/
    end
  end



   /* *************************************************************/
end // end GN0BS-OPE-VOPPKH04

// post bad db2 rc
Function GN0BS-POST-BAD-DB2()
      /* *********************************************************/
      /* * this statement group performs an abort when a bad    **/
      /* * db2 rc is encountered.                               **/
      /* *********************************************************/

  TA1REC.TA1FUNC = "POST"; /* set post function*/
  call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
  TA1REC.TA1FUNC = "RETN"; /* set retn function*/

   /* *************************************************************/
end // end GN0BS-POST-BAD-DB2

// select unique dpick.vcarr001
Function GN0BS-S-VCARR001()
      /* *********************************************************/
      /* * this statement group performs a select unique for    **/
      /* * the dpick.vcarr001 table.                            **/
      /* *********************************************************/

      /* issue select unique to get request*/

  call "IO0860" ("S ", SQLCA, TF1REC) {isNoRefresh = yes, isExternal = yes};
                                   /* i/o mod for select unique*/

      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100) /* check for notfnd rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(086); /* file deadlock - try again*/
      GN0BS-POST-BAD-DB2(); /* post*/
    else
      TA1REC.TA1DBASE = "DPICK   "; /* data base name*/
      TA1REC.TA1TBLVU = "VCARR001"; /* table view*/
      TA1REC.TA1TBLKE = TF1REC.TF1KEYS; /* key value*/
      TA1REC.TA1LOCAT[3] = "GN0B-S-V"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0860  "; /* i/o mod name*/
      GN0BS-ABORT-DB2(); /* abort*/
    end
  end



   /* *************************************************************/
end // end GN0BS-S-VCARR001

// select set dorder.voppkt02
Function GN0BS-SS-VOPPKT02()
      /* *********************************************************/
      /* * this statement group performs a select set for       **/
      /* * the dorder.voppkt02 table.                           **/
      /* *********************************************************/

      /* issue select set request*/

  call "VOPPKT02" ("S1", SQLCA, VOPPKT02) {isNoRefresh = yes, isExternal = yes}; /* select set*/

      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(086); /* file deadlock - try again*/
      GN0BS-POST-BAD-DB2(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VOPPKT02"; /* table view*/
      TA1REC.TA1TBLKE = VOPPKT02.VOPPKT02-KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "GN0BS-SS"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "VOPPKT02"; /* i/o mod name*/
      GN0BS-ABORT-DB2(); /* abort*/
    end
  end

   /* *************************************************************/
end // end GN0BS-SS-VOPPKT02

// update dorder.voppkh04
Function GN0BS-UPD-ORD-HDR()
      /* *********************************************************/
      /* * this statement group performs an update for          **/
      /* * the dorder.voppkh04 table.                           **/
      /* *********************************************************/

      /* update change date and time*/

  WGN1041.ZZZCHGDT = XX0XW01.XX0XWDAT;
  WGN1041.ZZZCHGTM = XX0XW01.XX0XWTIM;

      /* issue update request*/

  WGN1041.WGN1041-FUNCTION-CD = "U"; /* set iomod function*/
  call "GN1040" (WGN1041) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for update*/

      /* check db2 return code*/

  SQLCA.SQLCAREC = WGN1041.WGN1041-ERROR-INFO; /* SQL RETURN*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
  /* dlvrusa - carrier assignment change for whse-51 - start*/
    if (WGN1041.WGN1041-RETURN-CD == 20) /* wcarr not found*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Reset any updates*/
      converseLib.validationFailed(220); /* Try again later*/
      set GN0BM005.TF1CARCD cursor;

    end

    if (WGN1041.WGN1041-RETURN-CD == 21) /* multi wcarr*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Reset any updates*/
      converseLib.validationFailed(221); /* Try again later*/
      set GN0BM005.TF1CARCD cursor;

    end
  /* dlvrusa - carrier assignment change for whse-51 - end*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(086); /* file deadlock - try again*/
      GN0BS-POST-BAD-DB2(); /* post*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* check for notfound (chg cnt)*/
        converseLib.validationFailed(086); /* file deadlock - try again*/
        GN0BS-POST-BAD-DB2(); /* post*/
      else
        TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
        TA1REC.TA1TBLVU = "VOPPKH04"; /* table view*/
        TA1REC.TA1TBLKE = WGN1041.WGN1041-KEY; /* key value*/
        TA1REC.TA1LOCAT[3] = "GN0BS-UP"; /* statement group*/
        TA1REC.TA1LOCAT[4] = "VOPPKH04"; /* i/o mod name*/
        GN0BS-ABORT-DB2(); /* abort*/
      end
    end
  end



   /* *************************************************************/
end // end GN0BS-UPD-ORD-HDR

// update voppkh04
Function GN0BS-UPD-VOPPKH04()
   /* *************************************************************/

      /* load the fields to call GN1040 which will*/
      /* update dorder voppkh04 w/ carrier and status = 'al'*/
      /* this will allow them to continue on to picking (dcms)*/

   /* *************************************************************/

      /* get current date and time for zzz fields*/

  XX0XS01(); /* get current date and time*/

  WGN1041.TF-CARR-CD = GN0BM005.TF1CARCD; /* update carrier cd*/
  WGN1041.GR-ORD-STAT-CD = "AL"; /* update status*/

  GN0BS-UPD-ORD-HDR(); /* update otp header*/
  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end
  GN0BW01.WGN1041-GROUP[GN0BWS1] = WGN1041.WGN1041-GROUP;

   /* *************************************************************/
end // end GN0BS-UPD-VOPPKH04

//*** RECORD=GN0BW01 ****
// ************************************************************
// 
// date created:        may 8, 2001
// 
// maintenance log:
// 
//   date    init.  description
// -------- ------  -------------------------------------------
// 05/08/01 msurge  initial record creation
// ***********************
Record GN0BW01 type basicRecord
  5 GN0BW01G GN0BW01G ; 
    10 GN0BWM1F GN0BWM1F ; 
    10 GN0BWM5F GN0BWM5F ; 
    10 GN0BWFFL GN0BWFFL ; 
    10 GN0BWS1 GN0BWS1 ; 
    10 GN0BWS2 GN0BWS2 ; 
    10 GN0BWSCT GN0BWSCT ; 
    10 GN0BWCN1 GN0BWCN1 ; 
    10 GN0BWCN2 GN0BWCN2 ; 
    10 GN0BWSSB GN0BWSSB ; 
    10 GN0BWSSM GN0BWSSM ; 
    10 GN0BWSSS GN0BWSSS ; 
    10 GN0BWSCM GN0BWSCM ; 
    10 GN0BWSMX GN0BWSMX ; 
    10 XWHCD XWHCD ; 
    10 XWHABRV XWHABRV ; 
    10 GN0BW-SEL-KUCCOID GN0BW-SEL-KUCCOID ; 
    10 GN0BW-SEL-KUMSTRID GN0BW-SEL-KUMSTRID ; 
    10 GN0BW-SEL-XNXCD GN0BW-SEL-XNXCD ; 
    10 GN0BW-SEL-XPP GN0BW-SEL-XPP ; 
    10 GN0BW-SEL-CUNDT GN0BW-SEL-CUNDT ; 
    10 GN0BWSEL GN0BWSEL [117] ; 
    10 WGN1041-GROUP WGN1041-GROUP [117] ; 
    10 GN0BWPON GN0BWPON ; 
    10 GN0BWFON GN0BWFON ; 
      15 GN0BWFOR GN0BWFOR ; 
        20 GN0BWFOO GN0BWFOO [8] ; 
      15 GN0BWFOP GN0BWFOP ; 
      15 GN0BWFOS GN0BWFOS ; 
    10 GN0BWCON GN0BWCON ; 
      15 GN0BWCOC GN0BWCOC ; 
        20 GN0BWCOO GN0BWCOO [7] ; 
      15 GN0BWCOP GN0BWCOP ; 
      15 GN0BWCOS GN0BWCOS ; 
      15 GN0BWCOQ GN0BWCOQ ; 
      15 GN0BWCOD GN0BWCOD ; 
    10 * char(6) ; 
      15 GN0BWMM GN0BWMM ; 
      15 GN0BWDD GN0BWDD ; 
      15 GN0BWYY GN0BWYY ; 
    10 XX0XWDAT XX0XWDAT ; 
      15 XX0XW19 XX0XW19 ; 
      15 GN0BWDAT GN0BWDAT ; 
        20 XX0XWYY XX0XWYY ; 
        20 XX0XWMM XX0XWMM ; 
        20 XX0XWDD XX0XWDD ; 
    10 GN0BWTK GN0BWTK ; 
      15 GN0BWTK1 GN0BWTK1 ; 
      15 GN0BWTK2 GN0BWTK2 ; 
      15 GN0BWTK3 GN0BWTK3 ; 
      15 GN0BWTK4 GN0BWTK4 ; 
    10 GN0BW-GN-MORE-DATA GN0BW-GN-MORE-DATA ; 
end // end GN0BW01

//*** RECORD=WGN1041 ****
// ************************************************************
//   this is the csp record for the header records to be passed
//   to picking. this is for orders allocated on-line.
// 
// 
// db2 table:             dorder.voppkh01
// 
// copylib member:        dcl00284
// 
// i/o module:            io1650
// 
// key to table:          xwhcd
//                        op1partn
//                        op1cuoid
//                        op1norid
// 
// date created:          june 4, 1987
// 
// maintenance log:
// 
//   date    init.    description
// --------  ------   -----------------------------------------
// 06/04/87  jvande   original table creation.
// 11/09/89  craine   db2 changes - removed op1frtof and xftcd
//                    ophgroup size changed from 434 to 431
// 03/29/90  ssteph   db2 changes - removed in7stins & in7spins
//                    added xbccd
// 06/11/90  BWATSO   Added XOBCD, XDSCD, and OP1FTIND.
// 02/11/91  dmeier   added kucmxynt, kucuntcd, kufmixbx xpacd
// 03/04/91  dharri   db2 chgs - delecte kucmxynt
// 02-21-94  gcalki   db2 changes
//                    add:dn-prod-intr-dt
//                    add:xxx-addr 1-6
//                    add:zfc-crcy-cd
//                    add:xid-ivc-dist-cd
// ***********************
Record WGN1041 type basicRecord
  5 WGN1041-RECORD WGN1041-RECORD ; 
    10 WGN1041-GROUP WGN1041-GROUP ; 
      15 WGN1041-FUNCTION-CD WGN1041-FUNCTION-CD ; 
      15 XWHCD XWHCD ; 
      15 WGN1041-KEY WGN1041-KEY ; 
        20 OP-CUST-ORD-ID OP-CUST-ORD-ID ; 
        20 OP-NIKE-ORD-ID OP-NIKE-ORD-ID ; 
      15 KUCCOID KUCCOID ; 
      15 KUMSTRID KUMSTRID ; 
      15 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
      15 WGN1041-STORE-NM WGN1041-STORE-NM ; 
      15 GR-ORD-STAT-CD GR-ORD-STAT-CD ; 
      15 OP-CUST-NEED-DT OP-CUST-NEED-DT ; 
      15 XPP-PICK-PRTY-CD XPP-PICK-PRTY-CD ; 
      15 TF-CARR-CD TF-CARR-CD ; 
      15 OP-ONETIME-SHIP-FL OP-ONETIME-SHIP-FL ; 
      15 OP-ALT-NM OP-ALT-NM ; 
      15 XXX-ADDR1 XXX-ADDR1 ; 
      15 XXX-ADDR2 XXX-ADDR2 ; 
      15 XXX-ADDR3 XXX-ADDR3 ; 
      15 XXX-CITY XXX-CITY ; 
      15 XST-ST-CD XST-ST-CD ; 
      15 XXX-ZIP XXX-ZIP ; 
      15 XCT-CTRY-CD XCT-CTRY-CD ; 
      15 PK-TOT-ORD-WT PK-TOT-ORD-WT ; 
      15 PK-TOT-ORD-QTY PK-TOT-ORD-QTY ; 
      15 ZZZSDT ZZZSDT ; 
      15 ZZZCHGDT ZZZCHGDT ; 
      15 ZZZCHGTM ZZZCHGTM ; 
    10 * char(145) ; // filler for sp1id & gpcd
    10 WGN1041-RETURN-DATA WGN1041-RETURN-DATA ; 
      15 WGN1041-DATABASE-NM WGN1041-DATABASE-NM ; 
      15 WGN1041-VIEW-NAME WGN1041-VIEW-NAME ; 
      15 WGN1041-RETURN-SQLCODE WGN1041-RETURN-SQLCODE ; 
      15 WGN1041-RETURN-CD WGN1041-RETURN-CD ; 
      15 WGN1041-PROBLEM-INFO WGN1041-PROBLEM-INFO ; 
      15 WGN1041-ERROR-INFO WGN1041-ERROR-INFO ; 
    10 * char(1791) ; 
end // end WGN1041

//*** RECORD=VOPPKT02 ****
// ************************************************************
//   this is the csp record for order text. picking needs the
//   text records from orders that are allocated on-line.
// 
// db2 table:                  dorder.voppkt01
// 
// copylib member:             dcl00286
// 
// i/o module:                 io1670
// 
// key to db2 table:           xwhcd
//                             op1partn
//                             op1cuoid
//                             op1norid
// 
// date created:               june 4, 1987
// 
// maintenance log:
// 
//   date    init.   description
// -------   ------  ------------------------------------------
// 06/04/87  jvande  original record creation
// ************************
Record VOPPKT02 type basicRecord
  5 VOPPKT02-GROUP VOPPKT02-GROUP ; 
    10 VOPPKT02-KEY VOPPKT02-KEY ; 
      15 XWHCD XWHCD ; 
      15 OP1PARTN OP1PARTN ; 
      15 OP1CUOID OP1CUOID ; 
      15 OP1NORID OP1NORID ; 
      15 OP1NTMAL OP1NTMAL ; 
    10 OP4TRTYP OP4TRTYP ; 
    10 OP4TRSEQ OP4TRSEQ ; 
    10 XNDCD XNDCD ; 
    10 OP4TXT OP4TXT ; 
    10 OP4TXTOF OP4TXTOF ; 
    10 SR-DC-REC-STAT-IND SR-DC-REC-STAT-IND ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VOPPKT02
// apply change flag
DataItem GN0BW-GN-MORE-DATA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// formatted need date
DataItem GN0BW-SEL-CUNDT int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// cu_co_id
DataItem GN0BW-SEL-KUCCOID char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cu_stor_id
DataItem GN0BW-SEL-KUMSTRID char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// customer department id
DataItem GN0BW-SEL-XNXCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// priority cd for search
DataItem GN0BW-SEL-XPP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group
DataItem GN0BW01G char(29963)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work counter
DataItem GN0BWCN1 decimal(7)  {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work counter
DataItem GN0BWCN2 decimal(7,2)  {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cust number
DataItem GN0BWCOC num(7)  {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// department
DataItem GN0BWCOD num(2)  {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// formatted cust nbr
DataItem GN0BWCON char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cst nbr occurs for 0 suppress
DataItem GN0BWCOO char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// literal '.'
DataItem GN0BWCOP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// literal '.'
DataItem GN0BWCOQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// store
DataItem GN0BWCOS num(4)  {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record mmddyy
DataItem GN0BWDAT num(6)  {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record dd
DataItem GN0BWDD num(2)  {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// first time flag
DataItem GN0BWFFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// formatted order nbr
DataItem GN0BWFON char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ord nbr occurs for 0 suppress
DataItem GN0BWFOO char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// literal '.'
DataItem GN0BWFOP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// order number
DataItem GN0BWFOR num(8)  {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nike sub-order number
DataItem GN0BWFOS num(2)  {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// map m001 control flag
DataItem GN0BWM1F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map m005 control flag
DataItem GN0BWM5F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work record mm
DataItem GN0BWMM num(2)  {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// previous order nbr
DataItem GN0BWPON char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work sub 1
DataItem GN0BWS1 smallint {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work sub 2
DataItem GN0BWS2 smallint {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// table current max
DataItem GN0BWSCM smallint {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work counter
DataItem GN0BWSCT smallint {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// oi0bm001 select codes
DataItem GN0BWSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table absolute max
DataItem GN0BWSMX smallint {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen sub
DataItem GN0BWSSB smallint {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen sub max
DataItem GN0BWSSM smallint {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen first tab entry sub
DataItem GN0BWSSS smallint {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group diagnostics
DataItem GN0BWTK char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// diag1
DataItem GN0BWTK1 num(10)  {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// diag2
DataItem GN0BWTK2 num(3)  {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// diag3
DataItem GN0BWTK3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// diag4
DataItem GN0BWTK4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work record yy
DataItem GN0BWYY num(2)  {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem VOPPKT02-GROUP char(92)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem VOPPKT02-KEY char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// tf-carr-cd
DataItem WGN1041-DATABASE-NM char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem WGN1041-ERROR-INFO char(136)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xwh-whse-cd
DataItem WGN1041-FUNCTION-CD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// oph record group
DataItem WGN1041-GROUP char(254)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// op1rec key
DataItem WGN1041-KEY char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem WGN1041-PROBLEM-INFO char(152)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// oph record group
DataItem WGN1041-RECORD char(2500)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem WGN1041-RETURN-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// tf-carr-cd
DataItem WGN1041-RETURN-DATA char(310)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// tf-carr-cd
DataItem WGN1041-RETURN-SQLCODE int {
  currency = no, numericSeparator = no, sign = leading, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// gds order status code
DataItem WGN1041-STORE-NM char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// tf-carr-cd
DataItem WGN1041-VIEW-NAME char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

