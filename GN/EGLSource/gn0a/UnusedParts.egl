package gn0a;
import corpcom3.*;
// Check NIL order # for validity
Function GN0A-42400()
   /* ===========================================================*/
   /* GN0A-42400   CHECK NIL ORDER FOR VALIDITY*/
   /* ===========================================================*/

  GNWREC.XXX-MSG-LOC-ID = "42400"; /* Message location*/

   /* ---------------------------------------------------------------------*/
   /* Edit NIL order by calling GN3170 sub-routine*/
   /* ---------------------------------------------------------------------*/
  set WGN3171 empty; /* Clear row storage area*/

  WGN3171.XWH-WHSE-CD = GN0AM001.XWH-WHSE-CD;
  WGN3171.OP-CUST-ORD-ID = GN0AM001.OP-CUST-ORD-ID;
  WGN3171.OP-NIKE-ORD-ID = 1;
  WGN3171.NI-CUST-ORD-ID = GN0AM001.NI-CUST-ORD-ID;
  WGN3171.NI-NIKE-ORD-ID = GN0AM001.NI-NIKE-ORD-ID;
  WGN3171.SQLCAREC = SQLCA.SQLCAREC; /* sqlca rec*/

   /* ------------------------------------------------------------*/
   /* call GN3170*/
   /* ------------------------------------------------------------*/

  try
    call "GN3170" (WGN3171) {isNoRefresh = yes, isExternal = yes};
  end /* Open cursor*/

   /* ------------------------------------------------------------*/
   /* If successful, get out*/
   /* ------------------------------------------------------------*/
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;
  end


   /* ------------------------------------------------------------*/
   /* If table not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  SQLCA.SQLCAREC = WGN3171.SQLCAREC; /* sqlca rec*/
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(22); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(01); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CALL GN3170";
  TA1REC.TA1PGMNM = "GN0A-42400"; /* Program name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end GN0A-42400

// Load NIL P/L job submit
Function GN0A-54000()
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
  /* Submits the JOB for loading NIL P/L*/
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/

  GN0AS-CICS-REGION(); /* check for CICS region*/

  if (TA3REC.TA3RGNID == "03" /* PROD Region*/
   || TA3REC.TA3RGNID == "33")

    GN0A-54010(); /* format production jcl*/
  else

    GN0A-54020(); /* format development jcl*/
  end

  return;


end // end GN0A-54000

// SUBMIT PROD NIL JCL
Function GN0A-54010()

   /* ------------------------------------------------------------*/
   /* Create and submit Order Deallocation Job - GNwwNL*/
   /* ------------------------------------------------------------*/

     /* Initialize the work areas and indexes to be used.*/

  set TA6REC empty; /* Subroutine work area*/
  set GN0AW04 empty; /* Initialize JCL work area*/

  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  GN0AW04.GN0AWIDX1 = 1; /* Initialize JCL table index*/

    /* Set condition code to 4 to allow the job to run to completion*/
    /* and treat conditions 0 thru 4 as valid codes*/

  TA6REC.TA6-MAX-COND-CODE = 0004;

     /* Format JCL and parameters into the subroutine work area.*/

  while (GN0AW04.GN0AWIDX1 > 0) /* Until end of table*/

    TA6REC.TARTYPE[TA6INDEX] = GN0ATP2.TARTYPE[GN0AWIDX1];

    if (GN0ATP2.TARTYPE[GN0AWIDX1] == "J") /* Parameters statement*/

      /* ------------------------------------------------------------*/
      /* Format the job statement from the table.*/
      /* ------------------------------------------------------------*/
      GN0AW04.GN0AW-JOB-CARD = GN0ATP2.TARJCL[GN0AWIDX1];
      GN0AW04.GN0AW-JOB-XWH-WHSE-CD = GN0AM001.XWH-WHSE-CD;
      TA6REC.TARJCL[TA6INDEX] = GN0AW04.GN0AW-JOB-CARD;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
    end

    if (GN0ATP2.TARTYPE[GN0AWIDX1] == "W") /* Type statement*/

      /* ------------------------------------------------------------*/
      /* Format the warehouse statement from the table.*/
      /* ------------------------------------------------------------*/
      GN0AW04.GN0AW-WHSE-CARD = GN0ATP2.TARJCL[GN0AWIDX1];
      GN0AW04.XWH-WHSE-CD = GN0AM001.XWH-WHSE-CD;
      TA6REC.TARJCL[TA6INDEX] = GN0AW04.GN0AW-WHSE-CARD;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
    end

    if (GN0ATP2.TARTYPE[GN0AWIDX1] == "P") /* Type statement*/

      /* ------------------------------------------------------------*/
      /* Format the input parm statement from the table.*/
      /* ------------------------------------------------------------*/
      GN0AW04.GN0AW-GN3160-PARM-CARD = GN0ATP2.TARJCL[GN0AWIDX1];
      GN0AW04.GN0AW-GN3160-XWH-WHSE-CD = GN0AM001.XWH-WHSE-CD;
      GN0AW04.GN0AW-GN3160-OP-CUST-ORD-ID = GN0AM001.OP-CUST-ORD-ID;
      GN0AW04.GN0AW-GN3160-OP-NIKE-ORD-ID = 1;
      GN0AW04.GN0AW-GN3160-NI-CUST-ORD-ID = GN0AM001.NI-CUST-ORD-ID;
      GN0AW04.GN0AW-GN3160-NI-NIKE-ORD-ID = GN0AM001.NI-NIKE-ORD-ID;
      TA6REC.TARJCL[TA6INDEX] = GN0AW04.GN0AW-GN3160-PARM-CARD;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
    end

    if (GN0ATP2.TARTYPE[GN0AWIDX1] == " ") /* no tartype*/

      /* ------------------------------------------------------------*/
      /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      TA6REC.TARJCL[TA6INDEX] = GN0ATP2.TARJCL[GN0AWIDX1];
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
    end


    /* ------------------------------------------------------------*/
    /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    if (GN0ATP2.TARJCL[GN0AWIDX1] == "/*EOF") /* End of table*/

      GN0AW04.GN0AWIDX1 = 0; /* Indicate end of table*/
    else
      GN0AW04.GN0AWIDX1 = GN0AW04.GN0AWIDX1 + 1;
    end
  end /* *** END WHILE LOOP*/


     /* Submit the JCL and parameters for batch execution.*/

  GN0AS-SUBMIT-JCL();

     /* if it comes back here, JCL was succesfully submited*/
  GNXREC.XXX-MSG-LOC-ID = "54010";
  converseLib.validationFailed(93); /* NIL P/L submition sucessful*/


end // end GN0A-54010

// SUBMIT TEST NIL JCL
Function GN0A-54020()

   /* ------------------------------------------------------------*/
   /* Create and submit test NIL JCL - JOB GNwwNL*/
   /* ------------------------------------------------------------*/

     /* Initialize the work areas and indexes to be used.*/

  set TA6REC empty; /* Subroutine work area*/
  set GN0AW04 empty; /* Initialize JCL work area*/

  GN0AW04.TA3APLID = TA3REC.TA3APLID;
  GN0AW04.TA3DB2SS = TA3REC.TA3DB2SS;
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  GN0AW04.GN0AWIDX1 = 1; /* Initialize JCL table index*/

   /* Set condition code to 4 to allow the job to run to completion*/
   /* and treat conditions 0 thru 4 as valid codes*/

  TA6REC.TA6-MAX-COND-CODE = 0004;

     /* Format JCL and parameters into the subroutine work area.*/

  while (GN0AW04.GN0AWIDX1 > 0) /* Until end of table*/

    TA6REC.TARTYPE[TA6INDEX] = GN0ATT2.TARTYPE[GN0AWIDX1];

    if (GN0ATT2.TARTYPE[GN0AWIDX1] == "J") /* Parameters statement*/

      /* ------------------------------------------------------------*/
      /* Format the job statement from the table.*/
      /* ------------------------------------------------------------*/
      GN0AW04.GN0AW-JOB-CARD = GN0ATT2.TARJCL[GN0AWIDX1];
      GN0AW04.GN0AW-JOB-XWH-WHSE-CD = GN0AM001.XWH-WHSE-CD;
      GN0AW04.GN0AW-JOB-TYPE-VALUE = GN0AW04.GN0AW-DB2-VALUE;
      TA6REC.TARJCL[TA6INDEX] = GN0AW04.GN0AW-JOB-CARD;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
    end

    if (GN0ATT2.TARTYPE[GN0AWIDX1] == "W") /* Type statement*/

      /* ------------------------------------------------------------*/
      /* Format the warehouse statement from the table. (MVSDEVL)*/
      /* ------------------------------------------------------------*/
      GN0AW04.GN0AW-WHSE-CARD = GN0ATT2.TARJCL[GN0AWIDX1];
      GN0AW04.XWH-WHSE-CD = GN0AM001.XWH-WHSE-CD;
      TA6REC.TARJCL[TA6INDEX] = GN0AW04.GN0AW-WHSE-CARD;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
    end

    if (GN0ATT2.TARTYPE[GN0AWIDX1] == "N") /* Parameters statement*/

       /* ------------------------------------------------------------*/
       /* Format the notify statement from the table.*/
       /* ------------------------------------------------------------*/
      GN0AW04.GN0AW-NOTIFY-CARD = GN0ATT2.TARJCL[GN0AWIDX1];
      GN0AW04.TA3USRID = TA3REC.TA3USRID;
      TA6REC.TARJCL[TA6INDEX] = GN0AW04.GN0AW-NOTIFY-CARD;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
    end

    if (GN0ATT2.TARTYPE[GN0AWIDX1] == "1") /* Type statement*/

       /* ------------------------------------------------------------*/
       /* Format the Type statement from the table. (MVSDEVL)*/
       /* ------------------------------------------------------------*/
      GN0AW04.GN0AW-TYPE-CARD = GN0ATT2.TARJCL[GN0AWIDX1];
      GN0AW04.GN0AW-TYPE-VALUE = GN0AW04.GN0AW-DB2-VALUE;
      TA6REC.TARJCL[TA6INDEX] = GN0AW04.GN0AW-TYPE-CARD;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
    end

    if (GN0ATT2.TARTYPE[GN0AWIDX1] == "2") /* Parameters statement*/

       /* ------------------------------------------------------------*/
       /* Format the Systsin statement from the table. (MVSDEVL)*/
       /* ------------------------------------------------------------*/
      GN0AW04.GN0AW-SYSTSIN-CARD = GN0ATT2.TARJCL[GN0AWIDX1];
      GN0AW04.GN0AW-DSN-VALUE = TA3REC.TA3DB2SS;
      TA6REC.TARJCL[TA6INDEX] = GN0AW04.GN0AW-SYSTSIN-CARD;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
    end

    if (GN0ATT2.TARTYPE[GN0AWIDX1] == "P") /* Type statement*/

      /* ------------------------------------------------------------*/
      /* Format the input parm statement from the table.*/
      /* ------------------------------------------------------------*/
      GN0AW04.GN0AW-GN3160-PARM-CARD = GN0ATT2.TARJCL[GN0AWIDX1];
      GN0AW04.GN0AW-GN3160-XWH-WHSE-CD = GN0AM001.XWH-WHSE-CD;
      GN0AW04.GN0AW-GN3160-OP-CUST-ORD-ID = GN0AM001.OP-CUST-ORD-ID;
      GN0AW04.GN0AW-GN3160-OP-NIKE-ORD-ID = 1;
      GN0AW04.GN0AW-GN3160-NI-CUST-ORD-ID = GN0AM001.NI-CUST-ORD-ID;
      GN0AW04.GN0AW-GN3160-NI-NIKE-ORD-ID = GN0AM001.NI-NIKE-ORD-ID;
      TA6REC.TARJCL[TA6INDEX] = GN0AW04.GN0AW-GN3160-PARM-CARD;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
    end

    if (GN0ATT2.TARTYPE[GN0AWIDX1] == " ") /* no tartype*/

      /* ------------------------------------------------------------*/
      /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      TA6REC.TARJCL[TA6INDEX] = GN0ATT2.TARJCL[GN0AWIDX1];
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
    end

    /* ------------------------------------------------------------*/
    /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    if (GN0ATT2.TARJCL[GN0AWIDX1] == "/*EOF") /* End of table*/

      GN0AW04.GN0AWIDX1 = 0; /* Indicate end of table*/
    else
      GN0AW04.GN0AWIDX1 = GN0AW04.GN0AWIDX1 + 1;
    end
  end /* *** END WHILE LOOP*/


     /* Submit the JCL and parameters for batch execution.*/

  GN0AS-SUBMIT-JCL();

     /* if it comes back here, JCL was succesfully submited*/
  GNXREC.XXX-MSG-LOC-ID = "54020"; /* Message location*/
  converseLib.validationFailed(93); /* NIL P/L submition sucessful*/


end // end GN0A-54020

// Determine CICS region
Function GN0AS-CICS-REGION()

   /* ------------------------------------------------------------*/
   /* FIND WHICH ENVIRONMENT CURRENT PROGRAM IS RUNNING IN*/
   /*  */
   /* PRODUCTION REGION CAUSES PRODUCTION JCL TO BE EXECUTED and*/
   /* TEST REGION CAUSES TEST JCL TO BE EXECUTED*/
   /* ------------------------------------------------------------*/

  set TA3REC empty;
  TA3REC.TA3OPTN = "ASSIGN";

  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA3REC.TA3RTNCD == 0)         

    return;
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA3REC.TA3GROUP; /* Subroutine parameters*/

  GNXREC.XXX-MSG-LOC-ID = "TA0230"; /* Message location*/

  converseLib.validationFailed(1); /* Unexpected error occurred*/

  converseLib.clearScreen();
   /* Clear screen before display*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = GNXREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "FIND CICS REGION";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end GN0AS-CICS-REGION

// SUBMIT JCL TO INTERNAL READER
Function GN0AS-SUBMIT-JCL()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/

    XPTA0P(); /* Print Request Subroutine*/
  end


  GNXREC.CAMSG = COMMAREA.CAMSG; /* Job info message*/
  GNXREC.XXX-MSG-LOC-ID = "SUBJCL"; /* Message location*/

   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    converseLib.validationFailed(410); /* Return message*/

    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/

    converseLib.validationFailed(411); /* Indicate user cancelled*/
  else
    converseLib.validationFailed(1); /* Indicate system error*/
  end

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback Updates*/

  exit stack; /* Exit to display map*/


end // end GN0AS-SUBMIT-JCL

