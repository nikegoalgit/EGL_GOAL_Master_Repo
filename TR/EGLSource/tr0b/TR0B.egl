package tr0b;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import in1.common.*;
import ku.common.*;
import ni.common.*;
import op.common.*;
import pc.common.*;
import pv.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=TR0B ****
//                 TRANSPORTATION SYSTEM
//                 ---------------------
// 
//      CONTRACTED FREIGHT RATE INQUIRY / MAINTENANCE
//                    DTRANS.VFRATE01
// 
// This program will allow the user to inquire / maintain the
// Transportation System's Contracted Freight Rate database
// table.  This table contains all the contracted freight rates
// for air, truck and vessel transportation of Nike product
// from the factories to the warehouses / customers.
// 
// The user will be able to browse the contract header infor-
// mation, as well as the contract rate details.  From either
// of these inquiry screens, the user may select one or more
// rows to update / delete.
// 
// Press PF13 to add a row.  Select a row for update by placing
// an 's' in the selection field and press PF14.  Select a row
// for delete by placing an 's' in the selection field and
// press PF15.
// 
// 
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   -------  ----------------------------------------
// 10/27/93   NMASTE   New Application
// 06/27/94   GAMEN    Add shipment type to selection criteria
//                     on map 1. Add to map 2 display also.
// 11/07/96   JCARL1   Remove alarm from msg display.
// 04/29/97   skeobo   limit display output to 1000 lines.
// 
// *********************
Program TR0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TS00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TR0BW00 TR0BW00; // record
  TR0BW01 TR0BW01; // record
  TR0BW02 TR0BW02; // record
  TR0BW03 TR0BW03; // record
  TS1REC TS1REC; // record
  TSAREC TSAREC; // record
  TSCREC TSCREC; // record
  TSWREC TSWREC; // record
  VFRATE01 VFRATE01; // record
  VZFC0001 VZFC0001; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use YDTTBL {deleteAfterUse = yes}; // table
  use YSTTBL {deleteAfterUse = yes}; // table
  use YMTTBL {deleteAfterUse = yes}; // table
  use TR0BM.TR0BM001,  // forms
      TR0BM.TR0BM002, 
      TR0BM.TR0BM003, 
      TR0BM.TR0BM004, 
      TR0BM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTS001: XPTS001();
     /* ------------------------------------------------------------*/
     /* --     initialize map areas                               --*/
     /* ------------------------------------------------------------*/

    set TR0BM001 initial; /* <== LEFT Map*/
    set TR0BM002 initial; /* <== RIGHT Map*/
    set TR0BM003 initial; /* <== VESSEL Update*/
    set TR0BM004 initial; /* <== AIR FRGT Update*/

    if (COMMAREA.CAADDFL == "Y")
      set TR0BM001.TR0BM-PF13 normal;
      set TR0BM001.TR0BM-PF16 normal;
      set TR0BM002.TR0BM-PF13 normal;
      set TR0BM002.TR0BM-PF16 normal;
      set TR0BM003.TR0BM-PF13 normal;
      set TR0BM003.TR0BM-PF16 normal;
      set TR0BM004.TR0BM-PF13 normal;
      set TR0BM004.TR0BM-PF16 normal;
    end

    if (COMMAREA.CACHGFL == "Y")
      set TR0BM001.TR0BM-PF14 normal;
      set TR0BM002.TR0BM-PF14 normal;
      set TR0BM003.TR0BM-PF14 normal;
      set TR0BM004.TR0BM-PF14 normal;
    end

    if (COMMAREA.CADELFL == "Y")
      set TR0BM001.TR0BM-PF15 normal;
      set TR0BM002.TR0BM-PF15 normal;
      set TR0BM003.TR0BM-PF15 normal;
      set TR0BM004.TR0BM-PF15 normal;
    end


     /* ------------------------------------------------------------*/
     /* --     initialize working storage                         --*/
     /* ------------------------------------------------------------*/

    set TR0BW00 empty; /* <== Misc Working Storage*/
    set TR0BW01 empty; /* <== Temporary Storage*/

    set SQLCA empty;
    set TAEREC empty;
    set TA1REC empty;
    set TA2REC empty;
    set TA5REC empty;
    set XX0XW01 empty;

    set TSAREC empty;
    set TSCREC empty;
    set VFRATE01 empty;

     /* ------------------------------------------------------------*/
     /* --     initialize control flags                           --*/
     /* ------------------------------------------------------------*/

    TR0BW00.TR0BW-FIRST = "Y"; /* first time indicator*/
    TR0BW00.TR0BW-REQ = "Y"; /* request for data*/
    TR0BW00.TR0BW-MAP-IND = "1"; /* map display indicator*/
    TR0BW00.TR0BW-MAP-ERR = "N"; /* map error indicator*/
    TR0BW00.TR0BW-ERR = "N"; /* general error indicator*/
    TR0BW00.TR0BW-DATA = "N"; /* data exists*/
    TR0BW00.TR0BW-CHG = "N"; /* data has been changed*/
    TR0BW00.TR0BW-KEY-CHG = "N"; /* key-data has been changed*/
    TR0BW00.TR0BW-UPD-TYP = "I"; /* data update type*/
    TR0BW00.TR0BW-EXIT = "N"; /* exit request*/

     /* --                                                        --*/
     /* ------------------------------------------------------------*/
     /* --     initialize map fields*/
     /* ------------------------------------------------------------*/

    TR0BM001.TR0BM-HDR-YMTCD = "VL";
    TR0BM002.TR0BM-HDR-YMTCD = "VL";

    TR0BW00.TR0BW-IDXM = 1;
    while (TR0BW00.TR0BW-IDXM <= 14)

      set TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM] skip, invisible;
      set TR0BM002.TR0BM-CONT-SEL[TR0BW-IDXM] skip, invisible;

      TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM + 1;

    end

     /* --                                                        --*/
     /* ------------------------------------------------------------*/
     /* -- flow to converse the main process used to display map  --*/
     /* ------------------------------------------------------------*/
     /* --                                                        --*/
    goto TR0B-00001;

     /* **                                                        ***/
     /* ****************** End of XPTS001 FLOW **********************/
    TR0B-00001: TR0B-00001();
    goto TR0B-00001;
  end // end main
end // end TR0B

// Main process to display a map
Function TR0B-00001()
   /* ------------------------------------------------------------*/
    /* This is the main process used to display a map.  Processing*/
    /* always returns to the top of this process and falls through*/
    /* subordinate processes until an error is found or a valid*/
    /* request is processed.  Processing sequence is as follows:*/

    /* 1) If specified, exit application.*/
    /* 2) If specified, display the first map.*/
    /* 3) Otherwise, if specified, display the second map.*/
    /* 4) Otherwise, indicate error and exit to Application Menu.*/

    /* In all subordinate processes, "EZEFLO" is used to exit to*/
    /* redisplay the map when an error is found.  This is done to*/
    /* minimize the coding effort required to skip subsequent*/
    /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (TR0BW00.TR0BW-EXIT == "Y") /* exit application flag*/

    XSTSS01(); /* =====>Exit to TS0A application*/

    /* ===>if exit failed, reset and return to selection map*/

    TR0BW00.TR0BW-MAP = "Y"; /* Format the map switch*/
    set TR0BM001 initial;
    set TR0BM002 initial;
    set TR0BM003 initial;
    set TR0BM004 initial;
    set TR0BM001.CATOAP cursor, bold; /* Highlight*/
    set TR0BW01 empty;
    TR0BW00.TR0BW-MAP-IND = "1"; /* Request Map1*/

    TR0BW00.TR0BW-IDXM = 1;
    while (TR0BW00.TR0BW-IDXM <= 14)
      set TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM] skip, invisible;
      set TR0BM002.TR0BM-CONT-SEL[TR0BW-IDXM] skip, invisible;
      TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM + 1;
    end

  end

   /* ------------------------------------------------------------*/
   /* Process the maps*/
   /* ------------------------------------------------------------*/

  if (TR0BW00.TR0BW-MAP-IND == "1" /* Map 1 was requested*/
   || TR0BW00.TR0BW-MAP-IND == "2") /* Map 2 was requested*/

    TR0B-10000();

  else

    if (TR0BW00.TR0BW-MAP-IND == "3" /* ===> Map 3 was requested*/
     || TR0BW00.TR0BW-MAP-IND == "4") /* ===> Map 4 was requested*/

      TR0B-20000();

    else


      /* ------------------------------------------------------------*/
       /* Write the error to the Error Diagnosis Reporting Facility.*/
      /* ------------------------------------------------------------*/

      TR0BW00.XXXPRCNM = "-000001"; /* Module identification*/
      TR0BW00.XXXMSGNO = 10; /* Indicate system error*/

      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      TA1REC.TA1TYPE = "APPL"; /* Type of error*/
      TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";

      TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
      TA1REC.TA1PGMNO = TR0BW00.XXXPRCNM; /* Program number*/

      call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

        /* ------------------------------------------------------------*/
        /* Exit to display the application system menu.*/
        /* ------------------------------------------------------------*/

      COMMAREA.CATOAP = "TS0A";

      XSTSS01(); /* Exit to another application*/

      TR0BW00.TR0BW-MAP-IND = "1";

    end

  end


   /* **                                                        ***/
   /* ********************** End of TR0B-00001 ********************/
end // end TR0B-00001

// **==> PROCESS MAP 1 OR 2 <==**
Function TR0B-10000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TR0B-11000(); /* Obtain the data to display*/

  TR0B-12000(); /* Format and display the map*/

  TR0B-13000(); /* Check attention identifier*/

  TR0B-14000(); /* Reset fields to normal intensity*/

  TR0B-15000(); /* Verify the entered data*/

  TR0B-16000(); /* Process valid input request*/


   /* **                                                        ***/
   /* **************** End of TR0B-10000 **************************/
end // end TR0B-10000

// OBTAIN THE DATA TO DISPLAY
Function TR0B-11000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (TR0BW00.TR0BW-FIRST == "Y") /* First time through*/
    return;
  end

  if (TR0BW00.TR0BW-REQ != "Y"
   || TR0BW00.TR0BW-MAP-ERR == "Y")
    return;
  end

  TR0BW00.XXXTSLEN = 2132; /* TSQ Page Length*/
  TR0BS-04(); /* Purge TSQ*/

   /* ------------------------------------------------------------*/
   /* Select and process the data.*/
   /* ------------------------------------------------------------*/

  TR0BW00.TR0BW-IDXM = 1; /* Map line index*/
  set VFRATE01 empty;

  VFRATE01.YMTCD = TR0BW00.YMTCD;

  if (TR0BW00.XGPCD > " ")
    VFRATE01.XGPCD = TR0BW00.XGPCD;
  else
    VFRATE01.XGPCD = "*";
  end

  if (TR0BW00.TSACARCD > " ")
    VFRATE01.TS-CARR-GRP-CD = TR0BW00.TS-CARR-GRP-CD;
  else
    VFRATE01.TS-CARR-GRP-CD = "*";
  end

  if (TR0BW00.YSTCD > " ")
    VFRATE01.YSTCD = TR0BW00.YSTCD;
  else
    VFRATE01.YSTCD = "*";
  end

  if (TR0BW00.TSEORIG > " ")
    VFRATE01.TSEORIG = TR0BW00.TSEORIG;
  else
    VFRATE01.TSEORIG = "*";
  end

  if (TR0BW00.TSEDEST > " ")
    VFRATE01.TSEDEST = TR0BW00.TSEDEST;
  else
    VFRATE01.TSEDEST = "*";
  end

  VFRATE01.TSDBEGDT = TR0BW00.TSDBEGDT;

  TR0BS-25();

  TR0BW00.TR0BW-COUNT-DATA = TS1REC.TS1COUNT;

  if (TR0BW00.TR0BW-COUNT-DATA > 1000)
    converseLib.validationFailed(412);
  else
    TR0BS-01(); /* Select set and open cursor*/

    TR0BW00.TR0BW-IDXM = 1;
    while (TR0BW00.TR0BW-EOF == "N") /* Perform until end of cursor*/
      TR0BS-02(); /* Fetch selected rows*/
      if (SQLCA.VAGen_SQLCODE == 0)
        TR0BW00.TR0BW-DATA = "Y"; /* Data exists*/
        TR0BS-07(); /* Move to TSQ page*/
      end

      if (TR0BW00.TR0BW-IDXM >= 14) /* If page is full*/
        TR0BS-05(); /* Add page to TSQ*/
      end

    end

    if (TR0BW00.TR0BW-IDXM > 1) /* Last page has begun*/
      TR0BS-05(); /* Add last page to TSQ*/
    end

    TR0BS-03(); /* Close the selected set cursor*/
  end

   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/

  if (TR0BW00.TA5TSQIX == 0) /* No pages formatted*/

    set TR0BM001 initial;

    TR0BM001.TR0BM-HDR-YMTCD = TR0BW00.YMTCD;
    TR0BM001.TR0BM-HDR-XGPCD = TR0BW00.XGPCD;
    TR0BM001.TR0BM-HDR-TSACARCD = TR0BW00.TSACARCD;
    TR0BM001.TR0BM-HDR-YSTCD = TR0BW00.YSTCD;
    TR0BM001.TR0BM-HDR-TSEORIG = TR0BW00.TSEORIG;
    TR0BM001.TR0BM-HDR-TSEDEST = TR0BW00.TSEDEST;

    TR0BW00.TR0BW-IDXM = 1;
    while (TR0BW00.TR0BW-IDXM <= 14)
      set TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM] skip, invisible;
      TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM + 1;
    end

    set TR0BM002 initial;

    TR0BM002.TR0BM-HDR-YMTCD = TR0BW00.YMTCD;
    TR0BM002.TR0BM-HDR-XGPCD = TR0BW00.XGPCD;
    TR0BM002.TR0BM-HDR-TSACARCD = TR0BW00.TSACARCD;
    TR0BM002.TR0BM-HDR-YSTCD = TR0BW00.YSTCD;
    TR0BM002.TR0BM-HDR-TSEORIG = TR0BW00.TSEORIG;
    TR0BM002.TR0BM-HDR-TSEDEST = TR0BW00.TSEDEST;

    TR0BW00.TR0BW-IDXM = 1;
    while (TR0BW00.TR0BW-IDXM <= 14)
      set TR0BM002.TR0BM-CONT-SEL[TR0BW-IDXM] skip, invisible;
      TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM + 1;
    end

    TR0BW00.TR0BW-DATA = "N"; /* Data does not exist*/
    TR0BW00.TR0BW-MAP-ERR = "Y"; /* set map error*/
    TR0BW00.XXXPRCNM = "-11000 ";
    TR0BW00.XXXMSGNO = 21; /* Indicate no data to display*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If no message to display, reset the desired page number.*/
   /* ------------------------------------------------------------*/

  if (TR0BW00.XXXMSGNO == 0) /* No message to display*/
    TR0BW00.XXXTSPAG = 1; /* Desired page number*/
  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  TR0BW00.TR0BW-REQ = "N"; /* Request for data switch*/


   /* **                                                        ***/
   /* ********************* End of TR0B-11000 *********************/
end // end TR0B-11000

// FORMAT AND DISPLAY THE MAP
Function TR0B-12000()
   /* ------------------------------------------------------------*/
   /* Format the current date and FAST PATH information.*/
   /* ------------------------------------------------------------*/

  if (TR0BW00.TR0BW-MAP-IND == "1")
    TR0BM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    TR0BM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
    TR0BM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
  else
    TR0BM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    TR0BM002.CATOAP = COMMAREA.CATOAP; /* TO application*/
    TR0BM002.CAITEM = COMMAREA.CAITEM; /* Application data*/
  end

   /* ------------------------------------------------------------*/
   /* If no error was found, format the data to be displayed.*/
   /* ------------------------------------------------------------*/

  if (TR0BW00.TR0BW-FIRST == "Y")
    TR0BW00.TR0BW-FIRST = "N";

  else

    if (TR0BW00.TR0BW-MAP-ERR != "Y") /* no errors*/

      if (TR0BW00.TR0BW-DATA == "Y" /* Data exists*/
       && TR0BW00.TR0BW-MAP == "Y") /* Request for map*/
        TR0B-12100(); /* Format the data on the map*/
      end

      if (TR0BM001.TS-CARR-GRP-CD[1] > " ")
         /* MOVE 53 TO EZEMNO;         /* please 's'elect a line*/
        set TR0BM001.TR0BM-CONT-SEL[1] cursor;
        set TR0BM002.TR0BM-CONT-SEL[1] cursor;

      else

        set TR0BM001.TR0BM-HDR-YMTCD cursor;
        set TR0BM002.TR0BM-HDR-YMTCD cursor;

      end

    else

      if (converseVar.validationMsgNum == 0)
        if (TR0BW00.XXXMSGNO == 9999)
          converseLib.validationFailed();
        else
          converseLib.validationFailed(TR0BW00.XXXMSGNO);
        end /* Message number*/
      end

    end
  end

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Message to display*/

    TR0BM001.XXXPRCNM = TR0BW00.XXXPRCNM; /* Module identification*/
    TR0BM002.XXXPRCNM = TR0BW00.XXXPRCNM; /* Module identification*/

  /* SET TR0BM001 ALARM;            /* Indicate sound alarm*/
  /* SET TR0BM002 ALARM;            /* Indicate sound alarm*/

  end


  if (TR0BW00.TR0BW-MAP-IND == "1")
    TR0B-12200(); /* send m001*/
  else
    TR0B-12300(); /* send m002*/
  end


   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TR0BW00.XXXPRCNM = " "; /* Module identification*/
  TR0BW00.XXXMSGNO = 0; /* Message number*/

  if (TR0BW00.TR0BW-MAP-IND == "1")
    COMMAREA.CATOAP = TR0BM001.CATOAP; /* TO application*/
    COMMAREA.CAITEM = TR0BM001.CAITEM; /* Application data*/
  else
    COMMAREA.CATOAP = TR0BM002.CATOAP; /* TO application*/
    COMMAREA.CAITEM = TR0BM002.CAITEM; /* Application data*/
  end

   /* **                                                        ***/
   /* ******************* End of TR0B-12000 ***********************/
end // end TR0B-12000

// Format the Data into the Map
Function TR0B-12100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set TR0BM001 initial;
  TR0BM001.XXXCURDT = VGVar.currentShortGregorianDate;

  set TR0BM002 initial;
  TR0BM002.XXXCURDT = VGVar.currentShortGregorianDate;

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (TR0BW00.TA5TSQIX > 0) /* Pages were formatted*/

    if (TR0BW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

       /* ------------------------------------------------------------*/
       /* If the desired page number is greater than the highest page*/
       /* in storage, default to the highest page number.*/
       /* ------------------------------------------------------------*/

      if (TR0BW00.XXXTSPAG > TR0BW00.TA5TSQIX) /* Desired greater highest*/
        TR0BW00.XXXTSPAG = TR0BW00.TA5TSQIX; /* Default to highest*/
      end

      set TA5REC empty;
      TA5REC.TA5FNCCD = "R"; /* Read TSQ*/
      TR0BS-06(); /* Read/Update TSQ*/

    end

     /* ------------------------------------------------------------*/
     /* Display the page information on the screen.*/
     /* ------------------------------------------------------------*/

    set TR0BM001.XXXLITPG skip; /* "PAGE" literal*/
    set TR0BM001.XXXTSPAG skip; /* "Current PAGE" value*/
    set TR0BM001.XXXLITOF skip; /* "OF" literal*/
    set TR0BM001.TA5TSQIX skip; /* "Highest PAGE" value*/
    TR0BM001.XXXTSPAG = TR0BW00.XXXTSPAG; /* Current page*/
    TR0BM001.TA5TSQIX = TR0BW00.TA5TSQIX; /* Highest page*/

    TR0BM001.TR0BM-HDR-YMTCD = TR0BW00.YMTCD;
    TR0BM001.TR0BM-HDR-XGPCD = TR0BW00.XGPCD;
    TR0BM001.TR0BM-HDR-TSACARCD = TR0BW00.TSACARCD;
    TR0BM001.TR0BM-HDR-YSTCD = TR0BW00.YSTCD;
    TR0BM001.TR0BM-HDR-TSEORIG = TR0BW00.TSEORIG;
    TR0BM001.TR0BM-HDR-TSEDEST = TR0BW00.TSEDEST;
    TR0BM001.TR0BM-HDR-TSDBEGDT = TR0BW00.TR0BW-HDR-BEGDT;


    set TR0BM002.XXXLITPG skip; /* "PAGE" literal*/
    set TR0BM002.XXXTSPAG skip; /* "Current PAGE" value*/
    set TR0BM002.XXXLITOF skip; /* "OF" literal*/
    set TR0BM002.TA5TSQIX skip; /* "Highest PAGE" value*/
    TR0BM002.XXXTSPAG = TR0BW00.XXXTSPAG; /* Current page*/
    TR0BM002.TA5TSQIX = TR0BW00.TA5TSQIX; /* Highest page*/

    TR0BM002.TR0BM-HDR-YMTCD = TR0BW00.YMTCD;
    TR0BM002.TR0BM-HDR-XGPCD = TR0BW00.XGPCD;
    TR0BM002.TR0BM-HDR-TSACARCD = TR0BW00.TSACARCD;
    TR0BM002.TR0BM-HDR-YSTCD = TR0BW00.YSTCD;
    TR0BM002.TR0BM-HDR-TSEORIG = TR0BW00.TSEORIG;
    TR0BM002.TR0BM-HDR-TSEDEST = TR0BW00.TSEDEST;
    TR0BM002.TR0BM-HDR-TSDBEGDT = TR0BW00.TR0BW-HDR-BEGDT;

    TR0BS-09(); /* format M002 headings*/

  end


   /* ------------------------------------------------------------*/
   /* Format the data into the map from the TSQ.*/
   /* ------------------------------------------------------------*/

  TR0BW00.TR0BW-IDXM = 1; /* Initialize line index*/

  while (TR0BW00.TR0BW-IDXM <= 14)

    if (TR0BW01.TS-CARR-GRP-CD[TR0BW-IDXM] != " ")

      TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM] = TR0BW01.TR0BW-CONT-SEL[TR0BW-IDXM];
      TR0BM002.TR0BM-CONT-SEL[TR0BW-IDXM] = TR0BW01.TR0BW-CONT-SEL[TR0BW-IDXM];
      TR0BM001.TS-CARR-GRP-CD[TR0BW-IDXM] = TR0BW01.TS-CARR-GRP-CD[TR0BW-IDXM];
      TR0BM001.TSEORIG[TR0BW-IDXM] = TR0BW01.TSEORIG[TR0BW-IDXM];
      TR0BM001.TSEOCTY[TR0BW-IDXM] = TR0BW01.TSEOCTY[TR0BW-IDXM];
      TR0BM001.TSEDEST[TR0BW-IDXM] = TR0BW01.TSEDEST[TR0BW-IDXM];
      TR0BM001.TSEDCTY[TR0BW-IDXM] = TR0BW01.TSEDCTY[TR0BW-IDXM];
      TR0BM001.YDTCD[TR0BW-IDXM] = TR0BW01.YDTCD[TR0BW-IDXM];
      TR0BM001.YSTCD[TR0BW-IDXM] = TR0BW01.YSTCD[TR0BW-IDXM];
      TR0BM001.XGPCD[TR0BW-IDXM] = TR0BW01.XGPCD[TR0BW-IDXM];

      TR0BW00.TR0BW-DATE = TR0BW01.TSDBEGDT[TR0BW-IDXM];
      TR0BW00.TR0BW-FMT-MM = TR0BW00.TR0BW-MM;
      TR0BW00.TR0BW-FMT-DD = TR0BW00.TR0BW-DD;
      TR0BW00.TR0BW-FMT-YY = TR0BW00.TR0BW-YY;
      TR0BM001.TSDBEGDT[TR0BW-IDXM] = TR0BW00.TR0BW-FMT-DATE;

      TR0BW00.TR0BW-DATE = TR0BW01.TSDENDDT[TR0BW-IDXM];
      TR0BW00.TR0BW-FMT-MM = TR0BW00.TR0BW-MM;
      TR0BW00.TR0BW-FMT-DD = TR0BW00.TR0BW-DD;
      TR0BW00.TR0BW-FMT-YY = TR0BW00.TR0BW-YY;
      TR0BM001.TSDENDDT[TR0BW-IDXM] = TR0BW00.TR0BW-FMT-DATE;

      if (TR0BM001.TR0BM-HDR-YMTCD == "VL") /* If Vessel Shipment*/
        TR0BS-10(); /* format M002 for 'VL'*/
      else
        TR0BS-11(); /* format M002 for 'AF;*/
      end

    else

      set TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM] skip, invisible;
      set TR0BM002.TR0BM-CONT-SEL[TR0BW-IDXM] skip, invisible;

    end

    TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM + 1; /* ===>Increment line index*/

  end

  if (COMMAREA.CAADDFL == "Y")
    set TR0BM001.TR0BM-PF13 skip;
    set TR0BM001.TR0BM-PF16 skip;
  end

  if (COMMAREA.CACHGFL == "Y")
    set TR0BM001.TR0BM-PF14 skip;
  end

  if (COMMAREA.CADELFL == "Y")
    set TR0BM001.TR0BM-PF15 skip;
  end


   /* **                                                        ***/
   /* ******************* End of TR0B-12100 ***********************/
end // end TR0B-12100

// Send TR0BM001
Function TR0B-12200()
   /* -----------------------------------*/
   /* Converse Left Screen*/
   /* -----------------------------------*/


  if (COMMAREA.CAADDFL == "Y")
    set TR0BM001.TR0BM-PF13 skip;
    set TR0BM001.TR0BM-PF16 skip;
  end

  if (COMMAREA.CACHGFL == "Y")
    set TR0BM001.TR0BM-PF14 skip;
  end

  if (COMMAREA.CADELFL == "Y")
    set TR0BM001.TR0BM-PF15 skip;
  end


  converse TR0BM001 ;


  TR0BW00.XXXMSGNO = 0;
  converseLib.validationFailed(0);
  TR0BW00.TR0BW-MAP-ERR = "N";


  TR0BW00.TR0BW-IDXM = 14;

  while (TR0BW00.TR0BW-IDXM > 0)

    TR0BM002.TR0BM-CONT-SEL[TR0BW-IDXM] = TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM];

    TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM - 1;

  end


  TR0B-12210(); /* pop-up windows*/


   /* **                                                  ***/
   /* ************* End of TR0B-12200 ***********************/

end // end TR0B-12200

// Pop Up Window Processing
Function TR0B-12210()
   /* ------------------------------------------------------------*/
   /* Pop Up Window Processing*/
   /* ------------------------------------------------------------*/

  if (TR0BM001.TR0BM-HDR-YMTCD == "?"
   || TR0BM001.TR0BM-HDR-XGPCD == "?"
   || TR0BM001.TR0BM-HDR-YSTCD == "?")

    if (TR0BM001.TR0BM-HDR-YMTCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                  MODE    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYMT01(); /* perform ymt code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM001.TR0BM-HDR-YMTCD = YMTTBL.YMTCD[XX0XWPIX];
      else
        TR0BM001.TR0BM-HDR-YMTCD = " ";
      end

    end


    if (TR0BM001.TR0BM-HDR-XGPCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM001.TR0BM-HDR-XGPCD = XGPTBL.XGPCD[XX0XWPIX];
      else
        TR0BM001.TR0BM-HDR-XGPCD = " ";
      end

    end

    if (TR0BM001.TR0BM-HDR-YSTCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "       SHIPMENT TYPE      "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYST01(); /* perform yst code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM001.TR0BM-HDR-YSTCD = YSTTBL.YSTCD[XX0XWPIX];
      else
        TR0BM001.TR0BM-HDR-YSTCD = " ";
      end

    end

    converseLib.clearScreen();

  end
   /* **                                                         ***/
   /* ****************** End of TR0BM-12210 ************************/
end // end TR0B-12210

// Send TR0BM002
Function TR0B-12300()
   /* -----------------------------------*/
   /* Converse Right Screen*/
   /* -----------------------------------*/


  if (COMMAREA.CAADDFL == "Y")
    set TR0BM002.TR0BM-PF13 skip;
    set TR0BM002.TR0BM-PF16 skip;
  end

  if (COMMAREA.CACHGFL == "Y")
    set TR0BM002.TR0BM-PF14 skip;
  end

  if (COMMAREA.CADELFL == "Y")
    set TR0BM002.TR0BM-PF15 skip;
  end


  converse TR0BM002 ;


  TR0BW00.XXXMSGNO = 0;
  converseLib.validationFailed(0);
  TR0BW00.TR0BW-MAP-ERR = "N";


  TR0BW00.TR0BW-IDXM = 14;

  while (TR0BW00.TR0BW-IDXM > 0)

    TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM] = TR0BM002.TR0BM-CONT-SEL[TR0BW-IDXM];

    TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM - 1;

  end


  TR0B-12310(); /* pop up window processing*/


   /* **                                                  ***/
   /* ************* End of TR0B-12300 ***********************/

end // end TR0B-12300

// Pop Up Window Processing
Function TR0B-12310()
   /* ------------------------------------------------------------*/
   /* Pop Up Window Processing*/
   /* ------------------------------------------------------------*/

  if (TR0BM002.TR0BM-HDR-YMTCD == "?"
   || TR0BM002.TR0BM-HDR-XGPCD == "?"
   || TR0BM002.TR0BM-HDR-YSTCD == "?")


    if (TR0BM002.TR0BM-HDR-YMTCD == "?")

      XPXX001(); /* pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                  MODE    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYMT01(); /* perform ymt code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM002.TR0BM-HDR-YMTCD = YMTTBL.YMTCD[XX0XWPIX];
      else
        TR0BM002.TR0BM-HDR-YMTCD = " ";
      end

    end


    if (TR0BM002.TR0BM-HDR-XGPCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM002.TR0BM-HDR-XGPCD = XGPTBL.XGPCD[XX0XWPIX];
      else
        TR0BM002.TR0BM-HDR-XGPCD = " ";
      end

    end

    if (TR0BM002.TR0BM-HDR-YSTCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "       SHIPMENT TYPE      "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYST01(); /* perform yst code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM002.TR0BM-HDR-YSTCD = YSTTBL.YSTCD[XX0XWPIX];
      else
        TR0BM002.TR0BM-HDR-YSTCD = " ";
      end

    end


    converseLib.clearScreen();

  end


   /* **                                                         ***/
   /* ****************** End of TR0BM-12310 ************************/
end // end TR0B-12310

// CHECK ATTENTION IDENTIFIER
Function TR0B-13000()
   /* ------------------------------------------------------------*/
   /* 1) Check attention identifier used to invoke transaction.*/
   /* 2) If FAST PATH was requested, transfer to the application.*/
   /* 3) If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2)
    set TR0BM001 initial;
    set TR0BM002 initial;
    TR0BW00.TR0BW-REQ = "N";
    TR0BW00.TR0BW-DATA = "Y";
    TR0BW00.TR0BW-MAP = "Y";
    set TR0BW01 empty; /* Clear temporary storage*/
    TR0BW00.TR0BW-SELECTION = " "; /* clear selections*/
    TR0BW00.TSDBEGDT = 0;
    TR0BW00.TR0BW-HDR-BEGDT = 0;
    TR0BW00.TA5TSQIX = 0;
    exit stack; /* Exit to redisplay map*/
  end

  if (TR0BM001.CATOAP > " "
   || TR0BM002.CATOAP > " ")

    if (TR0BM001.CATOAP > " ")
      if (converseVar.eventKey is enter)
        COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
        COMMAREA.CATOAP = TR0BM001.CATOAP;
        COMMAREA.CAITEM = TR0BM001.CAITEM;
        XSTSS01();
      else
        TR0BW00.TR0BW-MAP-ERR = "Y";
        TR0BW00.XXXMSGNO = 5;
        TR0BW00.XXXPRCNM = "-13000";
      end
      TR0BW00.TR0BW-MAP-ERR = "Y";
      set TR0BM001.CATOAP cursor, bold;
      TR0BW00.XXXPRCNM = "-13000";
      exit stack;
    end

    if (TR0BM002.CATOAP > " ")
      if (converseVar.eventKey is enter)
        COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
        COMMAREA.CATOAP = TR0BM002.CATOAP;
        COMMAREA.CAITEM = TR0BM002.CAITEM;
        XSTSS01();
      else
        TR0BW00.TR0BW-MAP-ERR = "Y";
        TR0BW00.XXXMSGNO = 5;
        TR0BW00.XXXPRCNM = "-13000";
      end
      TR0BW00.TR0BW-MAP-ERR = "Y";
      set TR0BM002.CATOAP cursor, bold;
      TR0BW00.XXXPRCNM = "-13000";
      exit stack;
    end

  end


  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    COMMAREA.CAUSERA = TSWREC.CAUSERA; /* move in pass data*/
    COMMAREA.CATOAP = "TS0A"; /* set to transportation menu*/
    TR0BS-04(); /* Purge any temporary storage*/
    XSTSS01(); /* Exit to another application*/
    TR0BM001.XXXPRCNM = "-13000 "; /* Process name*/
    TR0BM002.XXXPRCNM = "-13000 "; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1
   || converseVar.eventKey is pf4)
    TR0BS-04(); /* Purge any temporary storage*/
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
    XSTSS01(); /* Exit to another application*/
    TR0BM001.XXXPRCNM = "-13000 "; /* Process name*/
    TR0BM002.XXXPRCNM = "-13000 "; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf13
   || converseVar.eventKey is pf16)
    if (COMMAREA.CAADDFL == "N") /* ADD    authorization*/
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM001.XXXPRCNM = "-13000 ";
      TR0BM002.XXXPRCNM = "-13000 ";
      TR0BW00.XXXMSGNO = 208; /* authorization failure*/
      exit stack;
    else
      if (converseVar.eventKey is pf13)
        TR0BW00.TR0BW-UPD-TYP = "A";
      end
      if (converseVar.eventKey is pf16)
        TR0BW00.TR0BW-UPD-TYP = "C";
      end
    end
  end

  if (converseVar.eventKey is pf14)
    if (COMMAREA.CACHGFL == "N") /* CHANGE authorization*/
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM001.XXXPRCNM = "-13000 ";
      TR0BM002.XXXPRCNM = "-13000 ";
      TR0BW00.XXXMSGNO = 208; /* authorization failure*/
      exit stack;
    else
      TR0BW00.TR0BW-UPD-TYP = "U";
    end
  end

  if (converseVar.eventKey is pf15)
    if (COMMAREA.CADELFL == "N") /* DELETE authorization*/
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM001.XXXPRCNM = "-13000 ";
      TR0BM002.XXXPRCNM = "-13000 ";
      TR0BW00.XXXMSGNO = 208; /* authorization failure*/
      exit stack;
    else
      TR0BW00.TR0BW-UPD-TYP = "D";
    end
  end

  if (converseVar.eventKey is pf10
   && TR0BW00.TR0BW-MAP-IND == "1 ") /* Left map currently displayed*/
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BM001.XXXPRCNM = "-13000 ";
    TR0BW00.XXXMSGNO = 4; /* invalid attention key*/
    exit stack;
  end

  if (converseVar.eventKey is pf11
   && TR0BW00.TR0BW-MAP-IND == "2 ") /* Right map currently displayed*/
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BM002.XXXPRCNM = "-13000 ";
    TR0BW00.XXXMSGNO = 4; /* invalid attention key*/
    exit stack;
  end


  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf10  /* and PF10 was not pressed*/
   && converseVar.eventKey not pf11  /* and PF11 was not pressed*/
   && converseVar.eventKey not pf13  /* and PF13 was not pressed*/
   && converseVar.eventKey not pf14  /* and PF14 was not pressed*/
   && converseVar.eventKey not pf15  /* and PF15 was not pressed*/
   && converseVar.eventKey not pf16) /* and PF16 was not pressed*/

    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BM001.XXXPRCNM = "-13000 ";
    TR0BM002.XXXPRCNM = "-13000 ";
    TR0BW00.XXXMSGNO = 4; /* invalid attention key*/

    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa3)
      converseLib.clearScreen();
      
      converseLib.clearScreen();
      
    end
    exit stack;
  end

   /* **                                                        ***/
   /* ******************* End of TR0B-13000 ***********************/
end // end TR0B-13000

// RESET HIGHLIGHTED FIELDS
Function TR0B-14000()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TR0BM001.TR0BM-HDR-YMTCD normal;
  set TR0BM001.TR0BM-HDR-XGPCD normal;
  set TR0BM001.TR0BM-HDR-TSACARCD normal;
  set TR0BM001.TR0BM-HDR-TSEORIG normal;
  set TR0BM001.TR0BM-HDR-TSEDEST normal;

  set TR0BM002.TR0BM-HDR-YMTCD normal;
  set TR0BM002.TR0BM-HDR-XGPCD normal;
  set TR0BM002.TR0BM-HDR-TSACARCD normal;
  set TR0BM002.TR0BM-HDR-TSEORIG normal;
  set TR0BM002.TR0BM-HDR-TSEDEST normal;

  TR0BW00.TR0BW-IDXM = 1; /* Initialize line index*/
  while (TR0BW00.TR0BW-IDXM <= 14 /* Until end of lines*/
   && TR0BW01.TS-CARR-GRP-CD[TR0BW-IDXM] != " ") /* and carrier exists*/

    set TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM] normal;
    set TR0BM002.TR0BM-CONT-SEL[TR0BW-IDXM] normal;

    TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM + 1; /* Increment line index*/

  end


   /* **                                                    ***/
   /* *************** End of TR0B-14000 ***********************/
end // end TR0B-14000

// VERIFY ENTERED DATA
Function TR0B-15000()
   /* ------------------------------------------------------------*/
   /* 1) Determine whether a valid request to scroll was entered.*/
   /* 2) If not a scroll request, verify any changed data.*/
   /* 3) If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf13) /* ADD Function requested*/
    if (TR0BM001.TR0BM-HDR-YMTCD == "VL")
      TR0BW00.TR0BW-MAP-IND = "3";
    else
      TR0BW00.TR0BW-MAP-IND = "4";
    end
    TR0BW00.TR0BW-UPD-TYP = "A";
    TR0BW00.TR0BW-PRV-UPD-TYP = "A";
    TR0BW00.TR0BW-CHG = "N";
    TR0BW00.TR0BW-CONF = "N";
    exit stack;
  end

  TR0BW00.TR0BW-MAP-ERR = "N";

  if (converseVar.eventKey is pf7  /* Scroll back request*/
   || converseVar.eventKey is pf8  /* or scroll forward request*/
   || converseVar.eventKey is pf10 /* or scroll Left    request*/
   || converseVar.eventKey is pf11) /* or scroll Right   request*/

    TR0B-15100(); /* Verify scroll request*/

  else

    TR0B-15200(); /* Verify any changed data*/

  end

  if (TR0BW00.TR0BW-MAP-ERR == "Y") /* if there are validation errors*/
    exit stack; /* redisplay the map*/
  end

  if (TR0BW00.TR0BW-SEL == "Y") /* a selection has been made*/
    TR0BW00.TR0BW-IDXS = 1; /* set save index*/
  end

   /* **                                                       ***/
   /* ****************** End of TR0B-15000 ************************/
end // end TR0B-15000

// Verify Scroll Request
Function TR0B-15100()
   /* ------------------------------------------------------------*/
   /* 1) Ensure that pages exist to scroll forward or back.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && TR0BW00.XXXTSPAG < 2)       /* and no previous pages*/
    TR0BM001.XXXPRCNM = "-15100 ";
    TR0BM002.XXXPRCNM = "-15100 ";
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 2; /* No previous page to display*/
  end

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && TR0BW00.XXXTSPAG >= TR0BW00.TA5TSQIX) /* and no more pages*/
    TR0BM001.XXXPRCNM = "-15100 ";
    TR0BM002.XXXPRCNM = "-15100 ";
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 3; /* No more pages to display*/
  end


   /* **                                                            ***/
   /* ****************** End of TR0B-15100 ****************************/
end // end TR0B-15100

// Verify Changed Data
Function TR0B-15200()
   /* ------------------------------------------------------------*/
   /* 1) If EZEAID was ENTER*/
   /* Validate changed Selection Criteria.*/
   /* 2) If EZEAID was ENTER, PF13, PF14, PF15, or PF16,*/
   /* then verify that a valid selection has been entered.*/
   /* ------------------------------------------------------------*/

  if (TR0BM001.TR0BM-HDR-YMTCD != TR0BW00.YMTCD
   || TR0BM001.TR0BM-HDR-XGPCD != TR0BW00.XGPCD
   || TR0BM001.TR0BM-HDR-TSACARCD != TR0BW00.TSACARCD
   || TR0BM001.TR0BM-HDR-YSTCD != TR0BW00.YSTCD
   || TR0BM001.TR0BM-HDR-TSEORIG != TR0BW00.TSEORIG
   || TR0BM001.TR0BM-HDR-TSEDEST != TR0BW00.TSEDEST
   || TR0BM001.TR0BM-HDR-TSDBEGDT != TR0BW00.TR0BW-HDR-BEGDT
  
   || TR0BM002.TR0BM-HDR-YMTCD != TR0BW00.YMTCD
   || TR0BM002.TR0BM-HDR-XGPCD != TR0BW00.XGPCD
   || TR0BM002.TR0BM-HDR-TSACARCD != TR0BW00.TSACARCD
   || TR0BM002.TR0BM-HDR-YSTCD != TR0BW00.YSTCD
   || TR0BM002.TR0BM-HDR-TSEORIG != TR0BW00.TSEORIG
   || TR0BM002.TR0BM-HDR-TSEDEST != TR0BW00.TSEDEST
   || TR0BM002.TR0BM-HDR-TSDBEGDT != TR0BW00.TR0BW-HDR-BEGDT)

    TR0BW00.TR0BW-REQ = "Y"; /* new data has been requested*/
    TR0BW00.TR0BW-MAP = "Y"; /* reformat the map*/
    TR0B-15210(); /* verify selection criteria*/

  else
    TR0BW00.TR0BW-SEL = "N";
    TR0BW00.TR0BW-IDXM = 14;

    while (TR0BW00.TR0BW-IDXM > 0)

      if (TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM] != " "
       || TR0BM002.TR0BM-CONT-SEL[TR0BW-IDXM] != " ")

        if (TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM] == "S"
         || TR0BM002.TR0BM-CONT-SEL[TR0BW-IDXM] == "S"
        )
          if (TR0BW00.TR0BW-MAP-IND == "1")
            TR0BW01.TR0BW-CONT-SEL[TR0BW-IDXM] = TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM];
          else
            TR0BW01.TR0BW-CONT-SEL[TR0BW-IDXM] = TR0BM002.TR0BM-CONT-SEL[TR0BW-IDXM];
          end

          TR0BW00.TR0BW-SEL = "Y"; /* a selection has been made*/
          TR0BW00.TR0BW-MAP = "N"; /* do not reformat map*/

        else

          set TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM] cursor, bold;
          set TR0BM002.TR0BM-CONT-SEL[TR0BW-IDXM] cursor, bold;
          TR0BW00.TR0BW-MAP-ERR = "Y";
          TR0BW00.XXXMSGNO = 13; /* 's' for select*/

        end

      else

        if (TR0BW00.TR0BW-MAP-IND == "1")
          TR0BW01.TR0BW-CONT-SEL[TR0BW-IDXM] = TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM];
        else
          TR0BW01.TR0BW-CONT-SEL[TR0BW-IDXM] = TR0BM002.TR0BM-CONT-SEL[TR0BW-IDXM];
        end

      end

      TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM - 1;

    end


    if (TR0BW00.TR0BW-SEL == "N"
     && TR0BW00.TR0BW-REQ == "N"
     && TR0BW00.TR0BW-MAP-ERR != "Y") /* no sel, new data or map errors*/
      TR0BM001.XXXPRCNM = "-15200 ";
      TR0BM002.XXXPRCNM = "-15200 ";
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 153; /* Make a selection*/
    end

  end

   /* **                                                   ***/
   /* ***************** End of TR0B-15200 ********************/
end // end TR0B-15200

// Verify Selection Criteria
Function TR0B-15210()
   /* ------------------------------------------------------------*/
   /* 1) Validate changed Selection Criteria.*/
   /* ------------------------------------------------------------*/

  if (TR0BM001.TR0BM-HDR-TSDBEGDT != TR0BW00.TR0BW-HDR-BEGDT
   || TR0BM002.TR0BM-HDR-TSDBEGDT != TR0BW00.TR0BW-HDR-BEGDT)

    if (TR0BW-MAP-IND == "1")

      if (TR0BM001.TR0BM-HDR-TSDBEGDT == " "
       || TR0BM001.TR0BM-HDR-TSDBEGDT == 0)
        TR0BW00.TR0BW-HDR-BEGDT = 0;
        TR0BW00.TSDBEGDT = 0;

      else

        set TA2REC empty;
        TA2REC.TA2GRGA = TR0BM001.TR0BM-HDR-TSDBEGDT;
        TA2REC.TA2GRTYP = "A";
        TR0BS-18(); /* Verify DATE*/
        if (TR0BW00.TR0BW-ERR == "Y")
          TR0BW00.TR0BW-MAP-ERR = "Y";
          TR0BW00.TR0BW-HDR-BEGDT = " ";
          TR0BW00.TSDBEGDT = 0;
          set TR0BM001.TR0BM-HDR-TSDBEGDT cursor, bold;
          TR0BW00.XXXMSGNO = 57; /* date is missing or invalid*/
        else
          TR0BW00.TSDBEGDT = TA2REC.TA2GRGGN;
          TR0BW00.TR0BW-HDR-BEGDT = TR0BM001.TR0BM-HDR-TSDBEGDT;
        end
      end

    else

      if (TR0BM002.TR0BM-HDR-TSDBEGDT == " "
       || TR0BM002.TR0BM-HDR-TSDBEGDT == 0)
        TR0BW00.TR0BW-HDR-BEGDT = 0;
        TR0BW00.TSDBEGDT = 0;

      else

        TA2REC.TA2GRGA = TR0BM002.TR0BM-HDR-TSDBEGDT;
        TA2REC.TA2GRTYP = "A";
        TR0BS-18(); /* Verify DATE*/
        if (TR0BW00.TR0BW-ERR == "Y")
          TR0BW00.TR0BW-MAP-ERR = "Y";
          TR0BW00.TR0BW-HDR-BEGDT = " ";
          TR0BW00.TSDBEGDT = 0;
          set TR0BM002.TR0BM-HDR-TSDBEGDT cursor, bold;
          TR0BW00.XXXMSGNO = 57; /* date is missing or invalid*/
        else
          TR0BW00.TSDBEGDT = TA2REC.TA2GRGGN;
          TR0BW00.TR0BW-HDR-BEGDT = TR0BM002.TR0BM-HDR-TSDBEGDT;
        end

      end
    end
  end


  if (TR0BM001.TR0BM-HDR-TSEDEST != TR0BW00.TSEDEST
   || TR0BM002.TR0BM-HDR-TSEDEST != TR0BW00.TSEDEST)

    if (TR0BW-MAP-IND == "1")

      if (TR0BM001.TR0BM-HDR-TSEDEST == " ")
        TR0BW00.TSEDEST = " ";

      else

        TSCREC.TSCLOCCD = TR0BM001.TR0BM-HDR-TSEDEST;
        TR0BS-08(); /* select DTRANS.VTSLOC01*/
        if (TR0BW00.TR0BW-ERR == "Y")
          TR0BW00.TR0BW-MAP-ERR = "Y";
          TR0BW00.TSEDEST = " ";
          set TR0BM001.TR0BM-HDR-TSEDEST cursor, bold;
          TR0BW00.XXXMSGNO = 40; /* dest code is missing or invalid*/
        else
          TR0BW00.TSEDEST = TR0BM001.TR0BM-HDR-TSEDEST;
        end
      end

    else

      if (TR0BM002.TR0BM-HDR-TSEDEST == " ")
        TR0BW00.TSEDEST = " ";

      else

        TSCREC.TSCLOCCD = TR0BM002.TR0BM-HDR-TSEDEST;
        TR0BS-08(); /* select DTRANS.VTSLOC01*/
        if (TR0BW00.TR0BW-ERR == "Y")
          TR0BW00.TR0BW-MAP-ERR = "Y";
          TR0BW00.TSEDEST = " ";
          set TR0BM002.TR0BM-HDR-TSEDEST cursor, bold;
          TR0BW00.XXXMSGNO = 40; /* dest code is missing or invalid*/
        else
          TR0BW00.TSEDEST = TR0BM002.TR0BM-HDR-TSEDEST;
        end

      end
    end
  end


  if (TR0BM001.TR0BM-HDR-TSEORIG != TR0BW00.TSEORIG
   || TR0BM002.TR0BM-HDR-TSEORIG != TR0BW00.TSEORIG)

    if (TR0BW-MAP-IND == "1")

      if (TR0BM001.TR0BM-HDR-TSEORIG == " ")
        TR0BW00.TSEORIG = " ";

      else

        TSCREC.TSCLOCCD = TR0BM001.TR0BM-HDR-TSEORIG;
        TR0BS-08(); /* verify location code*/
        if (TR0BW00.TR0BW-ERR == "Y")
          TR0BW00.TR0BW-MAP-ERR = "Y";
          TR0BW00.TSEORIG = " ";
          set TR0BM001.TR0BM-HDR-TSEORIG cursor, bold;
          TR0BW00.XXXMSGNO = 41; /* orig code is missing or invalid*/
        else
          TR0BW00.TSEORIG = TR0BM001.TR0BM-HDR-TSEORIG;
        end
      end

    else

      if (TR0BM002.TR0BM-HDR-TSEORIG == " ")
        TR0BW00.TSEORIG = " ";

      else

        TSCREC.TSCLOCCD = TR0BM002.TR0BM-HDR-TSEORIG;
        TR0BS-08(); /* verify location code*/
        if (TR0BW00.TR0BW-ERR == "Y")
          TR0BW00.TR0BW-MAP-ERR = "Y";
          TR0BW00.TSEORIG = " ";
          set TR0BM002.TR0BM-HDR-TSEORIG cursor, bold;
          TR0BW00.XXXMSGNO = 41; /* orig code is missing or invalid*/
        else
          TR0BW00.TSEORIG = TR0BM002.TR0BM-HDR-TSEORIG;
        end

      end
    end
  end

  if (TR0BM001.TR0BM-HDR-YSTCD != TR0BW00.YSTCD
   || TR0BM002.TR0BM-HDR-YSTCD != TR0BW00.YSTCD)

    if (TR0BW-MAP-IND == "1")

      if (TR0BM001.TR0BM-HDR-YSTCD == " ")
        TR0BW00.YSTCD = " ";

      else

        if (TR0BM001.TR0BM-HDR-YSTCD in YSTTBL.YSTCD
         && YSTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          TR0BW00.YSTCD = TR0BM001.TR0BM-HDR-YSTCD;
        else
          TR0BW00.TR0BW-MAP-ERR = "Y";
          TR0BW00.YSTCD = " ";
          set TR0BM001.TR0BM-HDR-YSTCD cursor, bold;
          TR0BW00.XXXMSGNO = 56; /* Shipment code missing or invalid*/
        end
      end

    else

      if (TR0BM002.TR0BM-HDR-YSTCD == " ")
        TR0BW00.YSTCD = " ";

      else

        if (TR0BM002.TR0BM-HDR-YSTCD in YSTTBL.YSTCD
         && YSTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          TR0BW00.YSTCD = TR0BM002.TR0BM-HDR-YSTCD;
        else
          TR0BW00.TR0BW-MAP-ERR = "Y";
          TR0BW00.YSTCD = " ";
          set TR0BM002.TR0BM-HDR-YSTCD cursor, bold;
          TR0BW00.XXXMSGNO = 56; /* Shipment code missing or invalid*/
        end

      end
    end
  end


  if (TR0BM001.TR0BM-HDR-TSACARCD != TR0BW00.TSACARCD
   || TR0BM002.TR0BM-HDR-TSACARCD != TR0BW00.TSACARCD)

    if (TR0BW-MAP-IND == "1")

      if (TR0BM001.TR0BM-HDR-TSACARCD == " ")
        TR0BW00.TSACARCD = " ";

      else

        TSAREC.TSACARCD = TR0BM001.TR0BM-HDR-TSACARCD;
        TR0BS-12(); /* verify carrier group code*/
        if (TR0BW00.TR0BW-ERR == "Y")
          TR0BW00.TR0BW-MAP-ERR = "Y";
          TR0BW00.TSACARCD = " ";
          set TR0BM001.TR0BM-HDR-TSACARCD cursor, bold;
          TR0BW00.XXXMSGNO = 39; /* carr code is missing or invalid*/
        else
          TR0BW00.TSACARCD = TR0BM001.TR0BM-HDR-TSACARCD;
          TR0BW00.TS-CARR-GRP-CD = TSAREC.TS-CARR-GRP-CD;
        end
      end

    else

      if (TR0BM002.TR0BM-HDR-TSACARCD == " ")
        TR0BW00.TSACARCD = " ";

      else

        TSAREC.TSACARCD = TR0BM002.TR0BM-HDR-TSACARCD;
        TR0BS-12(); /* verify carrier group code*/
        if (TR0BW00.TR0BW-ERR == "Y")
          TR0BW00.TR0BW-MAP-ERR = "Y";
          TR0BW00.TSACARCD = " ";
          set TR0BM002.TR0BM-HDR-TSACARCD cursor, bold;
          TR0BW00.XXXMSGNO = 39; /* carr code is missing or invalid*/
        else
          TR0BW00.TSACARCD = TR0BM002.TR0BM-HDR-TSACARCD;
          TR0BW00.TS-CARR-GRP-CD = TSAREC.TS-CARR-GRP-CD;
        end

      end
    end
  end


  if (TR0BM001.TR0BM-HDR-XGPCD != TR0BW00.XGPCD
   || TR0BM002.TR0BM-HDR-XGPCD != TR0BW00.XGPCD)

    if (TR0BW-MAP-IND == "1")

      if (TR0BM001.TR0BM-HDR-XGPCD == " ")
        TR0BW00.XGPCD = " ";

      else

        if (TR0BM001.TR0BM-HDR-XGPCD in XGPTBL.XGPCD)
          TR0BW00.XGPCD = TR0BM001.TR0BM-HDR-XGPCD;
        else
          TR0BW00.XGPCD = " ";
          set TR0BM001.TR0BM-HDR-XGPCD cursor, bold;
          TR0BW00.XXXMSGNO = 101; /* gpc code is missing or invalid*/
          TR0BW00.TR0BW-MAP-ERR = "Y";
        end
      end

    else

      if (TR0BM002.TR0BM-HDR-XGPCD == " ")
        TR0BW00.XGPCD = " ";

      else

        if (TR0BM002.TR0BM-HDR-XGPCD in XGPTBL.XGPCD)
          TR0BW00.XGPCD = TR0BM002.TR0BM-HDR-XGPCD;
        else
          TR0BW00.XGPCD = " ";
          set TR0BM002.TR0BM-HDR-XGPCD cursor, bold;
          TR0BW00.XXXMSGNO = 101; /* gpc code is missing or invalid*/
          TR0BW00.TR0BW-MAP-ERR = "Y";
        end

      end
    end
  end


  if (TR0BM001.TR0BM-HDR-YMTCD != TR0BW00.YMTCD
   || TR0BM001.TR0BM-HDR-YMTCD == " "
   || TR0BM002.TR0BM-HDR-YMTCD != TR0BW00.YMTCD
   || TR0BM002.TR0BM-HDR-YMTCD == " ")

    if (TR0BW-MAP-IND == "1")

      if (TR0BM001.TR0BM-HDR-YMTCD in YMTTBL.YMTCD)
        TR0BW00.YMTCD = TR0BM001.TR0BM-HDR-YMTCD;
      else
        TR0BW00.YMTCD = " ";
        set TR0BM001.TR0BM-HDR-YMTCD cursor, bold;
        TR0BW00.XXXMSGNO = 42; /* mode code is missing or invalid*/
        TR0BW00.TR0BW-MAP-ERR = "Y";
      end

    else

      if (TR0BM002.TR0BM-HDR-YMTCD in YMTTBL.YMTCD)
        TR0BW00.YMTCD = TR0BM002.TR0BM-HDR-YMTCD;
      else
        TR0BW00.YMTCD = " ";
        set TR0BM002.TR0BM-HDR-YMTCD cursor, bold;
        TR0BW00.XXXMSGNO = 42; /* mode code is missing or invalid*/
        TR0BW00.TR0BW-MAP-ERR = "Y";
      end

    end
  end


  if (TR0BW00.TR0BW-MAP-ERR == "Y")
    TR0BM001.XXXPRCNM = "-15210 ";
    TR0BM002.XXXPRCNM = "-15210 ";
  end

   /* **                                                   ***/
   /* ***************** End of TR0B-15210 ********************/
end // end TR0B-15210

// PROCESS VALID INPUT REQUEST
Function TR0B-16000()
   /* ------------------------------------------------------------*/
   /* If a scroll backward was requested, decrement the page*/
   /* number and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    TR0BW00.TR0BW-MAP = "Y"; /* Reformat the map*/
    TR0BW00.XXXTSPAG = TR0BW00.XXXTSPAG - 1;

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If a scroll forward was requested, increment the page*/
   /* number and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    TR0BW00.TR0BW-MAP = "Y"; /* Reformat the map*/
    TR0BW00.XXXTSPAG = TR0BW00.XXXTSPAG + 1;

    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* If a scroll right was requested, set the map display ind*/
   /* and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf11) /* Scroll right requested*/

    TR0BW00.TR0BW-MAP = "N"; /* Reformat the map*/
    TR0BW00.TR0BW-MAP-IND = "2";

    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* If a scroll left  was requested, set the map display ind*/
   /* and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf10) /* Scroll left  requested*/

    TR0BW00.TR0BW-MAP = "N"; /* Reformat the map*/
    TR0BW00.TR0BW-MAP-IND = "1";

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If the selection was changed, resend the map*/
   /* ------------------------------------------------------------*/

  if (TR0BW00.TR0BW-REQ == "Y"
   || TR0BW00.TR0BW-MAP == "Y")

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Save the select fields, and clear the map input/output area*/
   /* and save type of function flag.*/
   /* ------------------------------------------------------------*/

  TR0B-16100();

   /* **                                                        ***/
   /* ******************* End Of TR0B-16000 ***********************/
end // end TR0B-16000

// Process Request
Function TR0B-16100()
   /* ------------------------------------------------------------*/
   /* Set the map indicator for VESSEL or AIR FREIGHT*/
   /* ------------------------------------------------------------*/

  if (TR0BW00.YMTCD == "VL")
    TR0BW00.TR0BW-MAP-IND = "3";
  else
    TR0BW00.TR0BW-MAP-IND = "4";
  end

  TR0BW00.TR0BW-CHG = "N"; /* initialize data changed flag*/

  if ("S" in TR0BM001.TR0BM-CONT-SEL) /* set map idx to 1st selection*/
    TR0BW00.TR0BW-IDXS = sysVar.arrayIndex;
    set VFRATE01 empty;
    VFRATE01.XGPCD = TR0BW01.XGPCD[TR0BW-IDXS];
    VFRATE01.TS-CARR-GRP-CD = TR0BW01.TS-CARR-GRP-CD[TR0BW-IDXS];
    VFRATE01.TSDCONTR = TR0BW01.TSDCONTR[TR0BW-IDXS];
    VFRATE01.TSDBEGDT = TR0BW01.TSDBEGDT[TR0BW-IDXS];
    VFRATE01.TSDENDDT = TR0BW01.TSDENDDT[TR0BW-IDXS];
    VFRATE01.TSEORIG = TR0BW01.TSEORIG[TR0BW-IDXS];
    VFRATE01.TSEDEST = TR0BW01.TSEDEST[TR0BW-IDXS];
    VFRATE01.YDTCD = TR0BW01.YDTCD[TR0BW-IDXS];
    TR0BS-15(); /* get 1st DTRANS.VFRATE01 row*/
    TR0BW02.VFRATE01-GROUP = VFRATE01.VFRATE01-GROUP;
  end


   /* ------------------------------------------------------------*/
   /* Set the inquire function request flag*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is enter) /* Inquiry Detail*/

    TR0BW00.TR0BW-UPD-TYP = "I";
    TR0BW00.TR0BW-PRV-UPD-TYP = "I";
    return;

  end

   /* ------------------------------------------------------------*/
   /* Set the change function request flag, if authorized*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf14) /* Change detail*/

    TR0BW00.TR0BW-UPD-TYP = "U";
    TR0BW00.TR0BW-PRV-UPD-TYP = "U";
    TR0BW00.TR0BW-CONF = "Y";
    return;

  end


   /* ------------------------------------------------------------*/
   /* Set the delete function request flag, if authorized*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf15) /* Delete detail*/

    TR0BW00.TR0BW-UPD-TYP = "D";
    TR0BW00.TR0BW-PRV-UPD-TYP = "D";
    return;

  end


   /* ------------------------------------------------------------*/
   /* Set the copy function request flag, if authorized*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf16) /* Copy detail*/

    TR0BW00.TR0BW-UPD-TYP = "C";
    TR0BW00.TR0BW-PRV-UPD-TYP = "C";
    TR0BW00.TR0BW-CONF = "N";
    return;

  end


   /* ------------------------------------------------------------*/
   /* Save the select fields and clear the map input/output area.*/
   /* ------------------------------------------------------------*/

  TR0BW00.TR0BW-IDXM = 1;

  while (TR0BW00.TR0BW-IDXM <= 14)

    if (TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM]
     != TR0BW01.TR0BW-CONT-SEL[TR0BW-IDXM])

      TR0BW01.TR0BW-CONT-SEL[TR0BW-IDXM] = TR0BM001.TR0BM-CONT-SEL[TR0BW-IDXM];

    end

    TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM + 1;

  end

   /* ------------------------------------------------------------*/
   /* If a line was selected, save the key fields and indicate*/
   /* which map (m003 or m004) is to be displayed.*/
   /* ------------------------------------------------------------*/

  if ("S" in TR0BW01.TR0BW-CONT-SEL)

    TR0BW00.TR0BW-IDXM = sysVar.arrayIndex; /* map index*/
    TR0BW00.TR0BW-IDXS = sysVar.arrayIndex; /* save map index*/

    TR0BW00.TR0BW-REQ = "Y";

  else

    TR0BW00.XXXPRCNM = "-16100 ";
    set TR0BM001.TR0BM-CONT-SEL[1] cursor, bold;
    set TR0BM002.TR0BM-CONT-SEL[1] cursor, bold;
    TR0BW00.XXXMSGNO = 53; /* please 's'elect a line*/
    return; /* Return to previous process*/

  end

   /* **                                                        ***/
   /* ******************* End of TR0B-16100 ***********************/
end // end TR0B-16100

// **==> PROCESS MAP 3 OR 4 <==**
Function TR0B-20000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TR0B-21000(); /* Obtain the data to display*/

  TR0B-22000(); /* Format and display the map*/

  TR0B-23000(); /* Check attention identifier*/

  TR0B-24000(); /* Reset fields to normal intensity*/

  TR0B-25000(); /* Verify the entered data*/

  TR0B-26000(); /* Process valid input request*/


   /* **                                                        ***/
   /* **************** End of TR0B-20000 **************************/
end // end TR0B-20000

// OBTAIN THE DATA TO DISPLAY
Function TR0B-21000()
   /* ------------------------------------------------------------*/
   /* Cycle through TSQ page to find next 's'elected row*/
   /* ------------------------------------------------------------*/

  if (TR0BW00.TR0BW-MAP-ERR == "Y"
   || TR0BW00.TR0BW-UPD-TYP == "A") /* add requested*/
    return; /* exit to re-display the map*/
  end


  if (converseVar.eventKey is pf8)

    if ("S" in TR0BW01.TR0BW-CONT-SEL) /* get the next 's'election*/

      TR0BW00.TR0BW-CHG = "N";
      TR0BW00.TR0BW-IDXS = sysVar.arrayIndex;

      set VFRATE01 empty;
      VFRATE01.XGPCD = TR0BW01.XGPCD[TR0BW-IDXS];
      VFRATE01.TS-CARR-GRP-CD = TR0BW01.TS-CARR-GRP-CD[TR0BW-IDXS];
      VFRATE01.TSDCONTR = TR0BW01.TSDCONTR[TR0BW-IDXS];
      VFRATE01.TSDBEGDT = TR0BW01.TSDBEGDT[TR0BW-IDXS];
      VFRATE01.TSDENDDT = TR0BW01.TSDENDDT[TR0BW-IDXS];
      VFRATE01.TSEORIG = TR0BW01.TSEORIG[TR0BW-IDXS];
      VFRATE01.TSEDEST = TR0BW01.TSEDEST[TR0BW-IDXS];
      VFRATE01.YDTCD = TR0BW01.YDTCD[TR0BW-IDXS];
      TR0BS-15(); /* get current DTRANS.VFRATE01 row*/
      TR0BW02.VFRATE01-GROUP = VFRATE01.VFRATE01-GROUP;

    else
      TR0BW00.TR0BW-MAP-IND = "1";
      TR0BW00.TR0BW-MAP = "Y";
      exit stack;

    end

  end


   /* **                                                       ***/
   /* ******************* End of TR0B-21000 **********************/
end // end TR0B-21000

// FORMAT AND DISPLAY THE MAP
Function TR0B-22000()
   /* ----------------------------------------------*/
   /* Move the TSQ line to the map*/
   /* ----------------------------------------------*/

  if (TR0BW00.TR0BW-MAP-IND == "3")
    TR0B-22100(); /* map TR0BM003*/
  end

  if (TR0BW00.TR0BW-MAP-IND == "4")
    TR0B-22200(); /* map TR0BM004*/
  end

   /* **                                                            ***/
   /* ****************** End of TR0B-22000 ****************************/
end // end TR0B-22000

// Format TR0BM003
Function TR0B-22100()
   /* --------------------------------------*/
   /* Format TR0BM003*/
   /* --------------------------------------*/

  if (TR0BW00.TR0BW-MAP-ERR == "Y")
    TR0B-22110(); /* set attributes and send the map*/
    return;
  end

  if (TR0BW00.TR0BW-CHG == "Y") /* Data changed*/
    TR0B-22110(); /* set attributes and send the map*/
    return;
  end

  set TR0BM003 initial;

  if ((TR0BW00.TR0BW-UPD-TYP == "A"
   && TR0BW00.TR0BW-CONF != "Y")) /* ADD Function*/

    if (TR0BW00.TSACARCD != " ")
      set TSAREC empty;
      TSAREC.TSACARCD = TR0BW00.TSACARCD;
      TR0BS-12(); /* get carrier name*/
      TR0BM003.TS-CARR-GRP-CD = TR0BW00.TSACARCD;
      TR0BM003.TSACARSN = TSAREC.TSACARSN;
    end

    if (TR0BW00.TSEORIG != " ")
      set TSCREC empty;
      TSCREC.TSCLOCCD = TR0BW00.TSEORIG;
      TR0BS-08(); /* select DTRANS.VTSLOC01*/
      TR0BM003.TSEORIG = TR0BW00.TSEORIG;
      TR0BM003.TSEOCTY = TSCREC.XXXCITY;
    end

    if (TR0BW00.TSEDEST != " ")
      set TSCREC empty;
      TSCREC.TSCLOCCD = TR0BW00.TSEDEST;
      TR0BS-08(); /* select DTRANS.VTSLOC01*/
      TR0BM003.TSEDEST = TR0BW00.TSEDEST;
      TR0BM003.TSEDCTY = TSCREC.XXXCITY;
    end

    TR0BM003.TS-ORIG-CRCY-CD = "USD"; /* initialize to US $*/
    TR0BM003.TS-DEST-CRCY-CD = "USD";
    VZFC0001.ZFC-CRCY-CD = "USD";
    TR0BS-16();
    TR0BM003.TS-ORIG-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
    TR0BM003.TS-DEST-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;

    if (TR0BW00.YMTCD != " ")
      TR0BM003.YMTCD = TR0BW00.YMTCD;
      if (TR0BM003.YMTCD in YMTTBL.YMTCD)
        TR0BM003.YMTSDESC = YMTTBL.YMTSDESC[sysVar.arrayIndex];
      end
    else
      set TR0BM003.YMTCD normal;
    end

    if (TR0BW00.XGPCD != " ")
      TR0BM003.XGPCD = TR0BW00.XGPCD;
      if (TR0BM003.XGPCD in XGPTBL.XGPCD)
        TR0BM003.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
    end

    TR0B-22110(); /* set attributes and send the map*/
    return;

  end

  set TSAREC empty;
  TSAREC.TSACARCD = VFRATE01.TS-CARR-GRP-CD;
  TR0BS-12(); /* get carrier name*/
  TR0BM003.TS-CARR-GRP-CD = VFRATE01.TS-CARR-GRP-CD;
  TR0BM003.TSACARSN = TSAREC.TSACARSN;

  TR0BM003.TSDCONTR = VFRATE01.TSDCONTR;

  set TSCREC empty;
  TSCREC.TSCLOCCD = VFRATE01.TSEORIG;
  TR0BS-08(); /* select DTRANS.VTSLOC01*/
  TR0BM003.TSEORIG = VFRATE01.TSEORIG;
  TR0BM003.TSEOCTY = TSCREC.XXXCITY;

  set TSCREC empty;
  TSCREC.TSCLOCCD = VFRATE01.TSEDEST;
  TR0BS-08(); /* select DTRANS.VTSLOC01*/
  TR0BM003.TSEDEST = VFRATE01.TSEDEST;
  TR0BM003.TSEDCTY = TSCREC.XXXCITY;

  set VZFC0001 empty;
  TR0BM003.TS-ORIG-CRCY-CD = VFRATE01.TS-ORIG-CRCY-CD;
  VZFC0001.ZFC-CRCY-CD = VFRATE01.TS-ORIG-CRCY-CD;
  TR0BS-16();
  TR0BM003.TS-ORIG-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;

  set VZFC0001 empty;
  TR0BM003.TS-DEST-CRCY-CD = VFRATE01.TS-DEST-CRCY-CD;
  VZFC0001.ZFC-CRCY-CD = VFRATE01.TS-DEST-CRCY-CD;
  TR0BS-16();
  TR0BM003.TS-DEST-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;

  TR0BW00.TR0BW-DATE = VFRATE01.TSDBEGDT;
  TR0BW00.TR0BW-FMT-MM = TR0BW00.TR0BW-MM;
  TR0BW00.TR0BW-FMT-DD = TR0BW00.TR0BW-DD;
  TR0BW00.TR0BW-FMT-YY = TR0BW00.TR0BW-YY;
  TR0BM003.TSDBEGDT = TR0BW00.TR0BW-FMT-DATE;

  TR0BW00.TR0BW-DATE = VFRATE01.TSDENDDT;
  TR0BW00.TR0BW-FMT-MM = TR0BW00.TR0BW-MM;
  TR0BW00.TR0BW-FMT-DD = TR0BW00.TR0BW-DD;
  TR0BW00.TR0BW-FMT-YY = TR0BW00.TR0BW-YY;
  TR0BM003.TSDENDDT = TR0BW00.TR0BW-FMT-DATE;

  TR0BM003.YDTCD = VFRATE01.YDTCD;
  if (TR0BM003.YDTCD in YDTTBL.YDTCD)
    TR0BM003.YDTSDESC = YDTTBL.YDTSDESC[sysVar.arrayIndex];
  end

  TR0BM003.YSTCD = VFRATE01.YSTCD;
  if (TR0BM003.YSTCD in YSTTBL.YSTCD)
    TR0BM003.YSTSDESC = YSTTBL.YSTSDESC[sysVar.arrayIndex];
  end

  TR0BM003.YMTCD = VFRATE01.YMTCD;
  if (TR0BM003.YMTCD in YMTTBL.YMTCD)
    TR0BM003.YMTSDESC = YMTTBL.YMTSDESC[sysVar.arrayIndex];
  end

  TR0BW00.TR0BW-DATE = VFRATE01.ZZ-CHNG-DT;
  TR0BW00.TR0BW-UPD-MM = TR0BW00.TR0BW-MM;
  TR0BW00.TR0BW-UPD-SL1 = "/";
  TR0BW00.TR0BW-UPD-DD = TR0BW00.TR0BW-DD;
  TR0BW00.TR0BW-UPD-SL2 = "/";
  TR0BW00.TR0BW-UPD-YY = TR0BW00.TR0BW-YY;
  TR0BM003.ZZ-CHNG-DT = TR0BW00.TR0BW-UPD-DATE;

  TR0BM003.XXXUSRID = VFRATE01.XXXUSRID;

  TR0BM003.XGPCD = VFRATE01.XGPCD;
  if (TR0BM003.XGPCD in XGPTBL.XGPCD)
    TR0BM003.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  end

  TR0BM003.TS-FRGT-CHG-AMT[1] = VFRATE01.TS-FRGT-CHG-AMT[1];
  TR0BM003.TS-20FT-DEST-CHG = VFRATE01.TS-20FT-DEST-CHG;
  TR0BM003.TS-FRGT-CHG-AMT[2] = VFRATE01.TS-FRGT-CHG-AMT[2];
  TR0BM003.TS-40FT-DEST-CHG = VFRATE01.TS-40FT-DEST-CHG;
  TR0BM003.TS-FRGT-CHG-AMT[3] = VFRATE01.TS-FRGT-CHG-AMT[3];
  TR0BM003.TS-HICUBE-DEST-CHG = VFRATE01.TS-HICUBE-DEST-CHG;
  TR0BM003.TS-FRGT-CHG-AMT[4] = VFRATE01.TS-FRGT-CHG-AMT[4];
  TR0BM003.TS-45FT-DEST-CHG = VFRATE01.TS-45FT-DEST-CHG;

  TR0BM003.TS-LESS-CNTNR-CHG = VFRATE01.TS-LESS-CNTNR-CHG;
  TR0BM003.TS-CNSLD-SRCHG-AMT = VFRATE01.TS-CNSLD-SRCHG-AMT;
  TR0BM003.TSFDMISC = VFRATE01.TSFDMISC;
  TR0BM003.TSFOCAF = VFRATE01.TSFOCAF;
  TR0BM003.TSFOBAF = VFRATE01.TSFOBAF;


  TR0B-22110(); /* set attributes and send the map*/


   /* **                                                  ***/
   /* ****************** End of TR0B-22100 ******************/
end // end TR0B-22100

// Send TR0BM003
Function TR0B-22110()
   /* --------------------------------------*/
   /* Set the attributes and send the map*/
   /* --------------------------------------*/

  if (TR0BW00.TR0BW-UPD-TYP == "A") /* ADD Function*/
    set TR0BM003.TR0BM-PF13 initialAttributes;
    set TR0BM003.TR0BM-PF14 initialAttributes;
    set TR0BM003.TR0BM-PF15 initialAttributes;
    set TR0BM003.TR0BM-PF16 initialAttributes;

  else

    if (COMMAREA.CAADDFL == "Y")
      set TR0BM003.TR0BM-PF13 skip;
      set TR0BM003.TR0BM-PF16 skip;
    end

    if (COMMAREA.CACHGFL == "Y")
      set TR0BM003.TR0BM-PF14 skip;
    end

    if (COMMAREA.CADELFL == "Y")
      set TR0BM003.TR0BM-PF15 skip;
    end
  end


  if (TR0BW00.TR0BW-UPD-TYP == "I") /* Inquiry*/
    TR0BM003.TR0BM-UPD-TYP = "INQUIRE";
    TR0BS-17(); /* Protect Everything*/
  end

  if (TR0BW00.TR0BW-UPD-TYP == "D") /* Delete*/
    TR0BM003.TR0BM-UPD-TYP = "DELETE ";
    TR0BW00.TR0BW-CONF = "Y"; /* Confirmation screen sent*/
    converseLib.validationFailed(154); /* "Enter to Confirm Delete..."*/
    TR0BS-17(); /* Protect Everything*/
  end

  if (TR0BW00.TR0BW-UPD-TYP == "A")
    TR0BM003.TR0BM-UPD-TYP = "ADD    ";
  end

  if (TR0BW00.TR0BW-UPD-TYP == "U")
    TR0BM003.TR0BM-UPD-TYP = "UPDATE ";
    set TR0BM003.TR0BM-PF14 initialAttributes;
  end

  if (TR0BW00.TR0BW-UPD-TYP == "C")
    TR0BM003.TR0BM-UPD-TYP = "COPY   ";
  end


  if (TR0BW00.XXXMSGNO != 0)
    if (TR0BW00.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(TR0BW00.XXXMSGNO);
    end
  /* SET TR0BM003 ALARM;*/
  end


  converse TR0BM003 ;


  TR0BW00.TR0BW-MAP-ERR = "N";
  TR0BW00.XXXMSGNO = 0;

  TR0B-22111(); /* Pop Up Window Processing*/


   /* **                                                  ***/
   /* ****************** End of TR0B-22110 ******************/
end // end TR0B-22110

// Pop Up Window Processing
Function TR0B-22111()
   /* ------------------------------------------------------------*/
   /* Pop Up Window Processing*/
   /* ------------------------------------------------------------*/

  if (TR0BM003.YDTCD == "?"
   || TR0BM003.YSTCD == "?"
   || TR0BM003.YMTCD == "?"
   || TR0BM003.XGPCD == "?")

    if (TR0BM003.YDTCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "       DELIVERY TYPE      "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYDT01(); /* perform ydt code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM003.YDTCD = YDTTBL.YDTCD[XX0XWPIX];
      else
        TR0BM003.YDTCD = " ";
      end

    end


    if (TR0BM003.YSTCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "       SHIPMENT TYPE      "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYST01(); /* perform yst code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM003.YSTCD = YSTTBL.YSTCD[XX0XWPIX];
      else
        TR0BM003.YSTCD = " ";
      end

    end


    if (TR0BM003.YMTCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                  MODE    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYMT01(); /* perform ymt code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM003.YMTCD = YMTTBL.YMTCD[XX0XWPIX];
      else
        TR0BM003.YMTCD = " ";
      end

    end


    if (TR0BM003.XGPCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM003.XGPCD = XGPTBL.XGPCD[XX0XWPIX];
      else
        TR0BM003.XGPCD = " ";
      end

    end

    converseLib.clearScreen();

  end


   /* **                                                         ***/
   /* ****************** End of TR0BM-22111 ************************/
end // end TR0B-22111

// Format TR0BM004
Function TR0B-22200()
   /* --------------------------------------*/
   /* Format TR0BM004*/
   /* --------------------------------------*/

  if (TR0BW00.TR0BW-MAP-ERR == "Y")
    TR0B-22210(); /* set attributes and send the map*/
    return;
  end

  if (TR0BW00.TR0BW-CHG == "Y") /* Data changed*/
    TR0B-22210(); /* set attributes and send the map*/
    return;
  end

  set TR0BM004 initial;

  if ((TR0BW00.TR0BW-UPD-TYP == "A"
   && TR0BW00.TR0BW-CONF != "Y")) /* ADD Function*/

    if (TR0BW00.TSACARCD != " ")
      set TSAREC empty;
      TSAREC.TSACARCD = TR0BW00.TSACARCD;
      TR0BS-12(); /* select DTRANS.VTSCAR01*/
      TR0BM004.TS-CARR-GRP-CD = TR0BW00.TSACARCD;
      TR0BM004.TSACARSN = TSAREC.TSACARSN;
    end

    if (TR0BW00.TSEORIG != " ")
      set TSCREC empty;
      TSCREC.TSCLOCCD = TR0BW00.TSEORIG;
      TR0BS-08(); /* select DTRANS.VTSLOC01*/
      TR0BM004.TSEORIG = TR0BW00.TSEORIG;
      TR0BM004.TSEOCTY = TSCREC.XXXCITY;
    end

    if (TR0BW00.TSEDEST != " ")
      set TSCREC empty;
      TSCREC.TSCLOCCD = TR0BW00.TSEDEST;
      TR0BS-08(); /* select DTRANS.VTSLOC01*/
      TR0BM004.TSEDEST = TR0BW00.TSEDEST;
      TR0BM004.TSEDCTY = TSCREC.XXXCITY;
    end

    TR0BM004.TS-ORIG-CRCY-CD = "USD"; /* initialize to US $*/
    TR0BM004.TS-DEST-CRCY-CD = "USD";
    VZFC0001.ZFC-CRCY-CD = "USD";
    TR0BS-16();
    TR0BM004.TS-ORIG-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
    TR0BM004.TS-DEST-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;

    if (TR0BW00.YMTCD != " ")
      TR0BM004.YMTCD = TR0BW00.YMTCD;
      if (TR0BM004.YMTCD in YMTTBL.YMTCD)
        TR0BM004.YMTSDESC = YMTTBL.YMTSDESC[sysVar.arrayIndex];
      end
    else
      set TR0BM004.YMTCD normal;
    end

    if (TR0BW00.XGPCD != " ")
      TR0BM004.XGPCD = TR0BW00.XGPCD;
      if (TR0BM004.XGPCD in XGPTBL.XGPCD)
        TR0BM004.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
    end

    TR0B-22210(); /* set attributes and send the map*/
    return;

  end

  set TSAREC empty;
  TSAREC.TSACARCD = VFRATE01.TS-CARR-GRP-CD;
  TR0BS-12(); /* get carrier name*/
  TR0BM004.TS-CARR-GRP-CD = VFRATE01.TS-CARR-GRP-CD;
  TR0BM004.TSACARSN = TSAREC.TSACARSN;

  TR0BM004.TSDCONTR = VFRATE01.TSDCONTR;

  set TSCREC empty;
  TSCREC.TSCLOCCD = VFRATE01.TSEORIG;
  TR0BS-08();
  TR0BM004.TSEORIG = VFRATE01.TSEORIG;
  TR0BM004.TSEOCTY = TSCREC.XXXCITY;

  set TSCREC empty;
  TSCREC.TSCLOCCD = VFRATE01.TSEDEST;
  TR0BS-08();
  TR0BM004.TSEDEST = VFRATE01.TSEDEST;
  TR0BM004.TSEDCTY = TSCREC.XXXCITY;

  set VZFC0001 empty;
  TR0BM004.TS-ORIG-CRCY-CD = VFRATE01.TS-ORIG-CRCY-CD;
  VZFC0001.ZFC-CRCY-CD = VFRATE01.TS-ORIG-CRCY-CD;
  TR0BS-16();
  TR0BM004.TS-ORIG-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;

  set VZFC0001 empty;
  TR0BM004.TS-DEST-CRCY-CD = VFRATE01.TS-DEST-CRCY-CD;
  VZFC0001.ZFC-CRCY-CD = VFRATE01.TS-DEST-CRCY-CD;
  TR0BS-16();
  TR0BM004.TS-DEST-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;

  TR0BW00.TR0BW-DATE = VFRATE01.TSDBEGDT;
  TR0BW00.TR0BW-FMT-MM = TR0BW00.TR0BW-MM;
  TR0BW00.TR0BW-FMT-DD = TR0BW00.TR0BW-DD;
  TR0BW00.TR0BW-FMT-YY = TR0BW00.TR0BW-YY;
  TR0BM004.TSDBEGDT = TR0BW00.TR0BW-FMT-DATE;

  TR0BW00.TR0BW-DATE = VFRATE01.TSDENDDT;
  TR0BW00.TR0BW-FMT-MM = TR0BW00.TR0BW-MM;
  TR0BW00.TR0BW-FMT-DD = TR0BW00.TR0BW-DD;
  TR0BW00.TR0BW-FMT-YY = TR0BW00.TR0BW-YY;
  TR0BM004.TSDENDDT = TR0BW00.TR0BW-FMT-DATE;

  TR0BM004.YDTCD = VFRATE01.YDTCD;
  if (TR0BM004.YDTCD in YDTTBL.YDTCD)
    TR0BM004.YDTSDESC = YDTTBL.YDTSDESC[sysVar.arrayIndex];
  end

  TR0BM004.YSTCD = VFRATE01.YSTCD;
  if (TR0BM004.YSTCD in YSTTBL.YSTCD)
    TR0BM004.YSTSDESC = YSTTBL.YSTSDESC[sysVar.arrayIndex];
  end

  TR0BM004.YMTCD = VFRATE01.YMTCD;
  if (TR0BM004.YMTCD in YMTTBL.YMTCD)
    TR0BM004.YMTSDESC = YMTTBL.YMTSDESC[sysVar.arrayIndex];
  end

  TR0BW00.TR0BW-DATE = VFRATE01.ZZ-CHNG-DT;
  TR0BW00.TR0BW-UPD-MM = TR0BW00.TR0BW-MM;
  TR0BW00.TR0BW-UPD-SL1 = "/";
  TR0BW00.TR0BW-UPD-DD = TR0BW00.TR0BW-DD;
  TR0BW00.TR0BW-UPD-SL2 = "/";
  TR0BW00.TR0BW-UPD-YY = TR0BW00.TR0BW-YY;
  TR0BM004.ZZ-CHNG-DT = TR0BW00.TR0BW-UPD-DATE;

  TR0BM004.XXXUSRID = VFRATE01.XXXUSRID;

  TR0BM004.XGPCD = VFRATE01.XGPCD;
  if (TR0BM004.XGPCD in XGPTBL.XGPCD)
    TR0BM004.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  end

  TR0BM004.TS-FRGT-MIN-CHGAMT = VFRATE01.TS-FRGT-MIN-CHGAMT;
  TR0BM004.TS-FRGT-CHG-AMT[1] = VFRATE01.TS-FRGT-CHG-AMT[1];
  TR0BM004.TS-FRGT-CHG-AMT[2] = VFRATE01.TS-FRGT-CHG-AMT[2];
  TR0BM004.TS-FRGT-CHG-AMT[3] = VFRATE01.TS-FRGT-CHG-AMT[3];
  TR0BM004.TS-FRGT-CHG-AMT[4] = VFRATE01.TS-FRGT-CHG-AMT[4];
  TR0BM004.TS-FRGT-CHG-AMT[5] = VFRATE01.TS-FRGT-CHG-AMT[5];
  TR0BM004.TS-FRGT-CHG-AMT[6] = VFRATE01.TS-FRGT-CHG-AMT[6];
  TR0BM004.TS-FRGT-CHG-AMT[7] = VFRATE01.TS-FRGT-CHG-AMT[7];

  TR0BM004.TS-LESS-CNTNR-CHG = VFRATE01.TS-LESS-CNTNR-CHG;
  TR0BM004.TS-CNSLD-SRCHG-AMT = VFRATE01.TS-CNSLD-SRCHG-AMT;
  TR0BM004.TSFDMISC = VFRATE01.TSFDMISC;
  TR0BM004.TSFOCAF = VFRATE01.TSFOCAF;
  TR0BM004.TSFOBAF = VFRATE01.TSFOBAF;

  TR0B-22210(); /* set attributes and send the map*/


   /* **                                                  ***/
   /* ****************** End of TR0B-22200 ******************/
end // end TR0B-22200

// Send TR0BM004
Function TR0B-22210()
   /* --------------------------------------*/
   /* Set the attributes and send the map*/
   /* --------------------------------------*/

  if (TR0BW00.TR0BW-UPD-TYP == "A") /* ADD Function*/
    set TR0BM004.TR0BM-PF13 initialAttributes;
    set TR0BM004.TR0BM-PF14 initialAttributes;
    set TR0BM004.TR0BM-PF15 initialAttributes;
    set TR0BM004.TR0BM-PF16 initialAttributes;

  else

    if (COMMAREA.CAADDFL == "Y")
      set TR0BM004.TR0BM-PF13 skip;
      set TR0BM004.TR0BM-PF16 skip;
    end

    if (COMMAREA.CACHGFL == "Y")
      set TR0BM004.TR0BM-PF14 skip;
    end

    if (COMMAREA.CADELFL == "Y")
      set TR0BM004.TR0BM-PF15 skip;
    end
  end


  if (TR0BW00.TR0BW-UPD-TYP == "I") /* Inquiry*/
    TR0BM004.TR0BM-UPD-TYP = "INQUIRE";
    TR0BS-17(); /* Protect Everything*/
  end

  if (TR0BW00.TR0BW-UPD-TYP == "D") /* Delete*/
    TR0BM004.TR0BM-UPD-TYP = "DELETE ";
    TR0BW00.TR0BW-CONF = "Y"; /* Confirmation screen sent*/
    converseLib.validationFailed(154); /* "Enter to Confirm Delete..."*/
    TR0BS-17(); /* Protect Everything*/
  end

  if (TR0BW00.TR0BW-UPD-TYP == "A")
    TR0BM004.TR0BM-UPD-TYP = "ADD    ";
  end

  if (TR0BW00.TR0BW-UPD-TYP == "U")
    TR0BM004.TR0BM-UPD-TYP = "UPDATE ";
    set TR0BM004.TR0BM-PF14 initialAttributes;
  end

  if (TR0BW00.TR0BW-UPD-TYP == "C")
    TR0BM004.TR0BM-UPD-TYP = "COPY   ";
  end



  if (TR0BW00.XXXMSGNO != 0)
    if (TR0BW00.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(TR0BW00.XXXMSGNO);
    end
  /* SET TR0BM004 ALARM;*/
  end


  converse TR0BM004 ;


  TR0BW00.TR0BW-MAP-ERR = "N";
  TR0BW00.XXXMSGNO = 0;

  TR0B-22211(); /* Pop Up Window Processing*/


   /* **                                                  ***/
   /* ****************** End of TR0B-22210 ******************/
end // end TR0B-22210

// Pop Up Window Processing
Function TR0B-22211()
   /* ------------------------------------------------------------*/
   /* Pop Up Window Processing*/
   /* ------------------------------------------------------------*/

  if (TR0BM004.YDTCD == "?"
   || TR0BM004.YSTCD == "?"
   || TR0BM004.YMTCD == "?"
   || TR0BM004.XGPCD == "?")

    if (TR0BM004.YDTCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "       DELIVERY TYPE      "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYDT01(); /* perform ydt code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM004.YDTCD = YDTTBL.YDTCD[XX0XWPIX];
      else
        TR0BM004.YDTCD = " ";
      end

    end


    if (TR0BM004.YSTCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "       SHIPMENT TYPE      "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYST01(); /* perform yst code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM004.YSTCD = YSTTBL.YSTCD[XX0XWPIX];
      else
        TR0BM004.YSTCD = " ";
      end

    end


    if (TR0BM004.YMTCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                  MODE    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYMT01(); /* perform ymt code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM004.YMTCD = YMTTBL.YMTCD[XX0XWPIX];
      else
        TR0BM004.YMTCD = " ";
      end

    end


    if (TR0BM004.XGPCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code to the map.                                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TR0BM004.XGPCD = XGPTBL.XGPCD[XX0XWPIX];
      else
        TR0BM004.XGPCD = " ";
      end

    end

    converseLib.clearScreen();

  end



   /* **                                                         ***/
   /* ****************** End of TR0BM-22211 ************************/
end // end TR0B-22211

// CHECK ATTENTION IDENTIFIER
Function TR0B-23000()
   /* ------------------------------------------------------------*/
   /* 1) Check attention identifier used to invoke transaction.*/
   /* 2) If FAST PATH was requested, transfer to the application.*/
   /* 3) If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    VFRATE01.VFRATE01-GROUP = TR0BW02.VFRATE01-GROUP;
    TR0BW00.TR0BW-CHG = "N";
    set TR0BM003 initial; /* Clear the map fields*/
    set TR0BM004 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    TR0BW00.TR0BW-MAP-IND = "1";
    TR0BW00.TR0BW-MAP = "Y"; /* reformat the map*/
    exit stack; /* From the top*/
  end

  if (converseVar.eventKey is pf8) /* PF8 was pressed*/
    TR0BW01.TR0BW-CONT-SEL[TR0BW-IDXS] = " ";
    TR0BW00.TR0BW-UPD-TYP = TR0BW00.TR0BW-PRV-UPD-TYP;
    if ("S" in TR0BW01.TR0BW-CONT-SEL) /* additional selections made*/
      exit stack; /* Return*/
    else
      TR0BW00.TR0BW-MAP-IND = "1";
      TR0BW00.TR0BW-MAP = "Y"; /* reformat the map*/
      exit stack; /* From the top*/
    end
  end

  if (converseVar.eventKey is pf13
   || converseVar.eventKey is pf16)
    if (COMMAREA.CAADDFL == "N") /* ADD    authorization*/
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM003.XXXPRCNM = "-23000 ";
      TR0BM004.XXXPRCNM = "-23000 ";
      TR0BW00.XXXMSGNO = 208; /* authorization failure*/
      exit stack;
    end
  end

  if (converseVar.eventKey is pf14)
    if (COMMAREA.CACHGFL == "N") /* CHANGE authorization*/
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM003.XXXPRCNM = "-23000 ";
      TR0BM004.XXXPRCNM = "-23000 ";
      TR0BW00.XXXMSGNO = 208; /* authorization failure*/
      exit stack;
    end
  end

  if (converseVar.eventKey is pf15)
    if (COMMAREA.CADELFL == "N") /* DELETE authorization*/
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM003.XXXPRCNM = "-23000 ";
      TR0BM004.XXXPRCNM = "-23000 ";
      TR0BW00.XXXMSGNO = 208; /* authorization failure*/
      exit stack;
    end
  end


  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf13  /* and PF13 was not pressed*/
   && converseVar.eventKey not pf14  /* and PF14 was not pressed*/
   && converseVar.eventKey not pf15  /* and PF15 was not pressed*/
   && converseVar.eventKey not pf16) /* and PF16 was not pressed*/

    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BM003.XXXPRCNM = "-23000 ";
    TR0BM004.XXXPRCNM = "-23000 ";
    TR0BW00.XXXMSGNO = 4; /* invalid attention key*/

    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa3)
      converseLib.clearScreen();
      
      converseLib.clearScreen();
      
    end
    exit stack;
  end

   /* **                                                        ***/
   /* ******************* End of TR0B-23000 ***********************/
end // end TR0B-23000

// RESET HIGHLIGHTED FIELDS
Function TR0B-24000()
    /* --------------------------------------------------*/
    /* Set all map attributes to DEFINED*/
    /* --------------------------------------------------*/

  if (TR0BW00.TR0BW-MAP-IND == "3")

    set TR0BM003.TS-CARR-GRP-CD initialAttributes, cursor;
    set TR0BM003.TSDCONTR initialAttributes;
    set TR0BM003.TSEORIG initialAttributes;
    set TR0BM003.TSEDEST initialAttributes;
    set TR0BM003.TS-ORIG-CRCY-CD initialAttributes;
    set TR0BM003.TS-DEST-CRCY-CD initialAttributes;
    set TR0BM003.TSDBEGDT initialAttributes;
    set TR0BM003.TSDENDDT initialAttributes;
    set TR0BM003.YDTCD initialAttributes;
    set TR0BM003.YSTCD initialAttributes;
    set TR0BM003.YMTCD initialAttributes;
    set TR0BM003.XGPCD initialAttributes;

    set TR0BM003.TS-FRGT-CHG-AMT[1] initialAttributes;
    set TR0BM003.TS-20FT-DEST-CHG initialAttributes;
    set TR0BM003.TS-FRGT-CHG-AMT[2] initialAttributes;
    set TR0BM003.TS-40FT-DEST-CHG initialAttributes;
    set TR0BM003.TS-FRGT-CHG-AMT[3] initialAttributes;
    set TR0BM003.TS-HICUBE-DEST-CHG initialAttributes;
    set TR0BM003.TS-FRGT-CHG-AMT[4] initialAttributes;
    set TR0BM003.TS-45FT-DEST-CHG initialAttributes;
    set TR0BM003.TS-LESS-CNTNR-CHG initialAttributes;
    set TR0BM003.TS-CNSLD-SRCHG-AMT initialAttributes;
    set TR0BM003.TSFDMISC initialAttributes;
    set TR0BM003.TSFOCAF initialAttributes;
    set TR0BM003.TSFOBAF initialAttributes;

    set TR0BM003.TR0BM-PF8 initialAttributes;

  else

    set TR0BM004.TS-CARR-GRP-CD initialAttributes, cursor;
    set TR0BM004.TSDCONTR initialAttributes;
    set TR0BM004.TSEORIG initialAttributes;
    set TR0BM004.TSEDEST initialAttributes;
    set TR0BM004.TS-ORIG-CRCY-CD initialAttributes;
    set TR0BM004.TS-DEST-CRCY-CD initialAttributes;
    set TR0BM004.TSDBEGDT initialAttributes;
    set TR0BM004.TSDENDDT initialAttributes;
    set TR0BM004.YDTCD initialAttributes;
    set TR0BM004.YSTCD initialAttributes;
    set TR0BM004.YMTCD initialAttributes;
    set TR0BM004.XGPCD initialAttributes;

    set TR0BM004.TS-FRGT-MIN-CHGAMT initialAttributes;
    set TR0BM004.TS-FRGT-CHG-AMT[1] initialAttributes;
    set TR0BM004.TS-FRGT-CHG-AMT[2] initialAttributes;
    set TR0BM004.TS-FRGT-CHG-AMT[3] initialAttributes;
    set TR0BM004.TS-FRGT-CHG-AMT[4] initialAttributes;
    set TR0BM004.TS-FRGT-CHG-AMT[5] initialAttributes;
    set TR0BM004.TS-FRGT-CHG-AMT[6] initialAttributes;
    set TR0BM004.TS-FRGT-CHG-AMT[7] initialAttributes;
    set TR0BM004.TS-LESS-CNTNR-CHG initialAttributes;
    set TR0BM004.TS-CNSLD-SRCHG-AMT initialAttributes;
    set TR0BM004.TSFDMISC initialAttributes;
    set TR0BM004.TSFOCAF initialAttributes;
    set TR0BM004.TSFOBAF initialAttributes;

    set TR0BM004.TR0BM-PF8 initialAttributes;

  end

   /* **                                                    ***/
   /* *************** End of TR0B-24000 ***********************/
end // end TR0B-24000

// VERIFY ENTERED DATA
Function TR0B-25000()
   /* ------------------------------------------------------*/
   /* Verify the Update Data*/
   /* ------------------------------------------------------*/

  TR0BW00.TR0BW-CHG = "N";
  TR0BW00.TR0BW-KEY-CHG = "N";

  if (TR0BW00.TR0BW-UPD-TYP == "I"
   || TR0BW00.TR0BW-UPD-TYP == "D") /* if INQUIRY or DELETE return*/
    return;
  end

  if (TR0BW00.TR0BW-MAP-IND == "3")
    TR0B-25100();
  end

  if (TR0BW00.TR0BW-MAP-IND == "4")
    TR0B-25200();
  end


   /* **                                                    ***/
   /* ****************** End of TR0B-25000 ********************/
end // end TR0B-25000

// Verify TR0BM003
Function TR0B-25100()
   /* ------------------------------------------------------*/
   /* Verify TR0BM003*/
   /* ------------------------------------------------------*/

  TR0BW00.TR0BW-CHG = "N"; /* initialize data changed*/
  TR0BW00.TR0BW-KEY-CHG = "N"; /* initialize key changed*/

  if ((TR0BW00.TR0BW-UPD-TYP == "A"
   || TR0BW00.TR0BW-UPD-TYP == "C")
   && TR0BW00.TR0BW-CONF != "Y")
    TR0B-25110(); /* validate new data*/
  else
    TR0B-25120(); /* validate changed data*/
  end


   /* **                                                    ***/
   /* ****************** End of TR0B-25100 ********************/
end // end TR0B-25100

// Validate ADDED   Data (M003)
Function TR0B-25110()
   /* ------------------------------------------------------*/
   /* Verify Contract 'Header' Information*/
   /* ------------------------------------------------------*/

  TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/

   /* ------------------------------------------------------*/
   /* Move Contract Terms to VFRATE01*/
   /* ------------------------------------------------------*/

  VFRATE01.TSFOBAF = TR0BM003.TSFOBAF;
  VFRATE01.TSFOCAF = TR0BM003.TSFOCAF;
  VFRATE01.TSFDMISC = TR0BM003.TSFDMISC;
  VFRATE01.TS-CNSLD-SRCHG-AMT = TR0BM003.TS-CNSLD-SRCHG-AMT;
  VFRATE01.TS-LESS-CNTNR-CHG = TR0BM003.TS-LESS-CNTNR-CHG;
  VFRATE01.TS-45FT-DEST-CHG = TR0BM003.TS-45FT-DEST-CHG;
  VFRATE01.TS-FRGT-CHG-AMT[4] = TR0BM003.TS-FRGT-CHG-AMT[4];
  VFRATE01.TS-HICUBE-DEST-CHG = TR0BM003.TS-HICUBE-DEST-CHG;
  VFRATE01.TS-FRGT-CHG-AMT[3] = TR0BM003.TS-FRGT-CHG-AMT[3];
  VFRATE01.TS-40FT-DEST-CHG = TR0BM003.TS-40FT-DEST-CHG;
  VFRATE01.TS-FRGT-CHG-AMT[2] = TR0BM003.TS-FRGT-CHG-AMT[2];
  VFRATE01.TS-20FT-DEST-CHG = TR0BM003.TS-20FT-DEST-CHG;
  VFRATE01.TS-FRGT-CHG-AMT[1] = TR0BM003.TS-FRGT-CHG-AMT[1];


   /* ------------------------------------------------------*/
   /* Verify XGPCD*/
   /* ------------------------------------------------------*/

  if (TR0BM003.XGPCD in XGPTBL.XGPCD
   && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    TR0BM003.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    VFRATE01.XGPCD = TR0BM003.XGPCD;
  else
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 101;
    set TR0BM003.XGPCD cursor, bold;
    TR0BM003.XGPABRV = " ";
  end

   /* ------------------------------------------------------*/
   /* Verify YMTCD*/
   /* ------------------------------------------------------*/

  if (TR0BM003.YMTCD in YMTTBL.YMTCD
   && YMTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    TR0BM003.YMTSDESC = YMTTBL.YMTSDESC[sysVar.arrayIndex];
    VFRATE01.YMTCD = TR0BM003.YMTCD;
  else
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 42;
    set TR0BM003.YMTCD cursor, bold;
    TR0BM003.YMTSDESC = " ";
  end

   /* ------------------------------------------------------*/
   /* Verify YSTCD*/
   /* ------------------------------------------------------*/

  if (TR0BM003.YSTCD in YSTTBL.YSTCD
   && YSTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    TR0BM003.YSTSDESC = YSTTBL.YSTSDESC[sysVar.arrayIndex];
    VFRATE01.YSTCD = TR0BM003.YSTCD;
  else
    TR0BW00.XXXMSGNO = 56;
    TR0BW00.TR0BW-MAP-ERR = "Y";
    set TR0BM003.YSTCD cursor, bold;
    TR0BM003.YSTSDESC = " ";
  end

   /* ------------------------------------------------------*/
   /* Verify YDTCD*/
   /* ------------------------------------------------------*/

  if (TR0BM003.YDTCD in YDTTBL.YDTCD
   && YDTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    TR0BM003.YDTSDESC = YDTTBL.YDTSDESC[sysVar.arrayIndex];
    VFRATE01.YDTCD = TR0BM003.YDTCD;
  else
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 80;
    set TR0BM003.YDTCD cursor, bold;
    TR0BM003.YDTSDESC = " ";
  end


   /* ------------------------------------------------------*/
   /* Verify Beginning & End Dates*/
   /* ------------------------------------------------------*/

  set TA2REC empty;
  TA2REC.TA2GRGA = TR0BM003.TSDENDDT;
  TA2REC.TA2GRTYP = "A";
  TR0BS-18(); /* Verify DATE*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    set TR0BM003.TSDENDDT cursor, bold;
  else
    TR0BW00.TR0BW-ENDDT = TA2REC.TA2GRGG;
  end

  set TA2REC empty;
  TA2REC.TA2GRGA = TR0BM003.TSDBEGDT;
  TA2REC.TA2GRTYP = "A";
  TR0BS-18(); /* Verify DATE*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    set TR0BM003.TSDBEGDT cursor, bold;
  else
    TR0BW00.TR0BW-BEGDT = TA2REC.TA2GRGG;
  end

  if (TR0BW00.XXXMSGNO != 57) /* not already a date error*/
    if (TR0BW00.TR0BW-BEGDT > TR0BW00.TR0BW-ENDDT)
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 58;
      set TR0BM003.TSDBEGDT cursor, bold;
      set TR0BM003.TSDENDDT bold;
      TR0BW00.XXXMSGNO = 58; /* beg dt must be lt end dt*/
    else
      VFRATE01.TSDBEGDT = TR0BW-BEGDT;
      VFRATE01.TSDENDDT = TR0BW-ENDDT;
    end
  end

   /* ------------------------------------------------------*/
   /* Verify Currency Codes*/
   /* ------------------------------------------------------*/

  set VZFC0001 empty;
  VZFC0001.ZFC-CRCY-CD = TR0BM003.TS-DEST-CRCY-CD;
  TR0BS-16(); /* Verify ZFCCD*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 394;
    set TR0BM003.TS-DEST-CRCY-CD cursor, bold;
    TR0BM003.TS-DEST-CRCY-DESC = " ";
  else
    TR0BM003.TS-DEST-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
    VFRATE01.TS-DEST-CRCY-CD = TR0BM003.TS-DEST-CRCY-CD;
  end

  set VZFC0001 empty;
  VZFC0001.ZFC-CRCY-CD = TR0BM003.TS-ORIG-CRCY-CD;
  TR0BS-16(); /* Verify ZFCCD*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 394;
    set TR0BM003.TS-ORIG-CRCY-CD cursor, bold;
    TR0BM003.TS-ORIG-CRCY-DESC = " ";
  else
    TR0BM003.TS-ORIG-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
    VFRATE01.TS-ORIG-CRCY-CD = TR0BM003.TS-ORIG-CRCY-CD;
  end

   /* ------------------------------------------------------*/
   /* Verify Location Codes*/
   /* ------------------------------------------------------*/

  set TSCREC empty;
  TSCREC.TSCLOCCD = TR0BM003.TSEDEST;
  TR0BS-08(); /* Verify TSCLOCCD*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 40;
    set TR0BM003.TSEDEST cursor, bold;
    TR0BM003.TSEDCTY = " ";
  else
    TR0BM003.TSEDCTY = TSCREC.XXXCITY;
    VFRATE01.TSEDEST = TR0BM003.TSEDEST;
  end

  set TSCREC empty;
  TSCREC.TSCLOCCD = TR0BM003.TSEORIG;
  TR0BS-08(); /* Verify TSCLOCCD*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 41;
    set TR0BM003.TSEORIG cursor, bold;
    TR0BM003.TSEOCTY = " ";
  else
    TR0BM003.TSEOCTY = TSCREC.XXXCITY;
    VFRATE01.TSEORIG = TR0BM003.TSEORIG;
  end

   /* ------------------------------------------------------*/
   /* Verify Carrier Code & Contract Nbr*/
   /* ------------------------------------------------------*/

  if (TR0BM003.TSDCONTR == " ")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 393;
    set TR0BM003.TSDCONTR cursor, bold;
  else
    VFRATE01.TSDCONTR = TR0BM003.TSDCONTR;
  end


  TSAREC.TSACARCD = TR0BM003.TS-CARR-GRP-CD;
  TR0BS-12(); /* Verify TSACARCD*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 392;
    set TR0BM003.TS-CARR-GRP-CD cursor, bold;
    TR0BM003.TSACARSN = " ";
  else
    TR0BM003.TSACARSN = TSAREC.TSACARSN;
    VFRATE01.TS-CARR-GRP-CD = TR0BM003.TS-CARR-GRP-CD;
  end


   /* **                                                    ***/
   /* ****************** End of TR0B-25110 ********************/
end // end TR0B-25110

// Validate UPDATED Data (M003)
Function TR0B-25120()
   /* ------------------------------------------------------*/
   /* Test Contract Terms have Changed*/
   /* ------------------------------------------------------*/

  if (TR0BM003.TSFOBAF != VFRATE01.TSFOBAF
   || TR0BM003.TSFOCAF != VFRATE01.TSFOCAF
   || TR0BM003.TSFDMISC != VFRATE01.TSFDMISC
   || TR0BM003.TS-CNSLD-SRCHG-AMT != VFRATE01.TS-CNSLD-SRCHG-AMT
   || TR0BM003.TS-LESS-CNTNR-CHG != VFRATE01.TS-LESS-CNTNR-CHG
  
   || TR0BM003.TS-45FT-DEST-CHG != VFRATE01.TS-45FT-DEST-CHG
   || TR0BM003.TS-FRGT-CHG-AMT[4] != VFRATE01.TS-FRGT-CHG-AMT[4]
   || TR0BM003.TS-HICUBE-DEST-CHG != VFRATE01.TS-HICUBE-DEST-CHG
   || TR0BM003.TS-FRGT-CHG-AMT[3] != VFRATE01.TS-FRGT-CHG-AMT[3]
   || TR0BM003.TS-40FT-DEST-CHG != VFRATE01.TS-40FT-DEST-CHG
   || TR0BM003.TS-FRGT-CHG-AMT[2] != VFRATE01.TS-FRGT-CHG-AMT[2]
   || TR0BM003.TS-20FT-DEST-CHG != VFRATE01.TS-20FT-DEST-CHG
   || TR0BM003.TS-FRGT-CHG-AMT[1] != VFRATE01.TS-FRGT-CHG-AMT[1])

    TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
    VFRATE01.TSDCONTR = TR0BM003.TSDCONTR;
    VFRATE01.TSFOBAF = TR0BM003.TSFOBAF;
    VFRATE01.TSFOCAF = TR0BM003.TSFOCAF;
    VFRATE01.TSFDMISC = TR0BM003.TSFDMISC;
    VFRATE01.TS-CNSLD-SRCHG-AMT = TR0BM003.TS-CNSLD-SRCHG-AMT;
    VFRATE01.TS-LESS-CNTNR-CHG = TR0BM003.TS-LESS-CNTNR-CHG;

    VFRATE01.TS-45FT-DEST-CHG = TR0BM003.TS-45FT-DEST-CHG;
    VFRATE01.TS-FRGT-CHG-AMT[4] = TR0BM003.TS-FRGT-CHG-AMT[4];
    VFRATE01.TS-HICUBE-DEST-CHG = TR0BM003.TS-HICUBE-DEST-CHG;
    VFRATE01.TS-FRGT-CHG-AMT[3] = TR0BM003.TS-FRGT-CHG-AMT[3];
    VFRATE01.TS-40FT-DEST-CHG = TR0BM003.TS-40FT-DEST-CHG;
    VFRATE01.TS-FRGT-CHG-AMT[2] = TR0BM003.TS-FRGT-CHG-AMT[2];
    VFRATE01.TS-20FT-DEST-CHG = TR0BM003.TS-20FT-DEST-CHG;
    VFRATE01.TS-FRGT-CHG-AMT[1] = TR0BM003.TS-FRGT-CHG-AMT[1];

  end

   /* ------------------------------------------------------*/
   /* Verify Contract 'Header' Information*/
   /* ------------------------------------------------------*/

   /* ------------------------------------------------------*/
   /* Verify XGPCD*/
   /* ------------------------------------------------------*/

  if (TR0BM003.XGPCD != VFRATE01.XGPCD)
    if (TR0BM003.XGPCD in XGPTBL.XGPCD
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      TR0BM003.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BW00.TR0BW-KEY-CHG = "Y"; /* key has changed*/
      VFRATE01.XGPCD = TR0BM003.XGPCD;
    else
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 101;
      set TR0BM003.XGPCD cursor, bold;
      TR0BM003.XGPABRV = " ";
    end
  end

   /* ------------------------------------------------------*/
   /* Verify YMTCD*/
   /* ------------------------------------------------------*/

  if (TR0BM003.YMTCD != VFRATE01.YMTCD)
    if (TR0BM003.YMTCD in YMTTBL.YMTCD
     && YMTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      TR0BM003.YMTSDESC = YMTTBL.YMTSDESC[sysVar.arrayIndex];
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      VFRATE01.YMTCD = TR0BM003.YMTCD;
    else
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 42;
      set TR0BM003.YMTCD cursor, bold;
      TR0BM003.YMTSDESC = " ";
    end
  end

   /* ------------------------------------------------------*/
   /* Verify YSTCD*/
   /* ------------------------------------------------------*/

  if (TR0BM003.YSTCD != VFRATE01.YSTCD)
    if (TR0BM003.YSTCD in YSTTBL.YSTCD
     && YSTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      TR0BM003.YSTSDESC = YSTTBL.YSTSDESC[sysVar.arrayIndex];
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      VFRATE01.YSTCD = TR0BM003.YSTCD;
    else
      TR0BW00.XXXMSGNO = 56;
      TR0BW00.TR0BW-MAP-ERR = "Y";
      set TR0BM003.YSTCD cursor, bold;
      TR0BM003.YSTSDESC = " ";
    end
  end

   /* ------------------------------------------------------*/
   /* Verify YDTCD*/
   /* ------------------------------------------------------*/

  if (TR0BM003.YDTCD != VFRATE01.YDTCD)
    if (TR0BM003.YDTCD in YDTTBL.YDTCD
     && YDTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      TR0BM003.YDTSDESC = YDTTBL.YDTSDESC[sysVar.arrayIndex];
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BW00.TR0BW-KEY-CHG = "Y"; /* key*/
      VFRATE01.YDTCD = TR0BM003.YDTCD;
    else
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 80;
      set TR0BM003.YDTCD cursor, bold;
      TR0BM003.YDTSDESC = " ";
    end
  end


   /* ------------------------------------------------------*/
   /* Verify Beginning & End Dates*/
   /* ------------------------------------------------------*/

  set TA2REC empty;
  TA2REC.TA2GRGA = TR0BM003.TSDENDDT;
  TA2REC.TA2GRTYP = "A";
  TR0BS-18(); /* Verify DATE*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    set TR0BM003.TSDENDDT cursor, bold;
  else
    TR0BW00.TR0BW-ENDDT = TA2REC.TA2GRGG;
  end

  set TA2REC empty;
  TA2REC.TA2GRGA = TR0BM003.TSDBEGDT;
  TA2REC.TA2GRTYP = "A";
  TR0BS-18(); /* Verify DATE*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    set TR0BM003.TSDBEGDT cursor, bold;
  else
    TR0BW00.TR0BW-BEGDT = TA2REC.TA2GRGG;
  end

  if (TR0BW00.XXXMSGNO != 57) /* not already a date error*/
    if (TR0BW00.TR0BW-BEGDT > TR0BW00.TR0BW-ENDDT)
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 58;
      set TR0BM003.TSDBEGDT cursor, bold;
      set TR0BM003.TSDENDDT cursor, bold;
      TR0BW00.XXXMSGNO = 58; /* beg dt must be lt end dt*/

    else

      if (TR0BW00.TR0BW-BEGDT != VFRATE01.TSDBEGDT
       || TR0BW00.TR0BW-ENDDT != VFRATE01.TSDENDDT)
        TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
        TR0BW00.TR0BW-KEY-CHG = "Y"; /* key has changed*/
        VFRATE01.TSDBEGDT = TR0BW00.TR0BW-BEGDT;
        VFRATE01.TSDENDDT = TR0BW00.TR0BW-ENDDT;

      end

    end
  end

   /* ------------------------------------------------------*/
   /* Verify Currency Codes*/
   /* ------------------------------------------------------*/

  if (TR0BM003.TS-DEST-CRCY-CD != VFRATE01.TS-DEST-CRCY-CD)
    set VZFC0001 empty;
    VZFC0001.ZFC-CRCY-CD = TR0BM003.TS-DEST-CRCY-CD;
    TR0BS-16(); /* Verify ZFCCD*/
    if (TR0BW00.TR0BW-ERR == "Y")
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM003.TS-DEST-CRCY-DESC = " ";
      TR0BW00.XXXMSGNO = 394;
      set TR0BM003.TS-DEST-CRCY-CD cursor, bold;
    else
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BM003.TS-DEST-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
      VFRATE01.TS-DEST-CRCY-CD = TR0BM003.TS-DEST-CRCY-CD;
    end
  end

  if (TR0BM003.TS-ORIG-CRCY-CD != VFRATE01.TS-ORIG-CRCY-CD)
    set VZFC0001 empty;
    VZFC0001.ZFC-CRCY-CD = TR0BM003.TS-ORIG-CRCY-CD;
    TR0BS-16(); /* Verify ZFCCD*/
    if (TR0BW00.TR0BW-ERR == "Y")
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM003.TS-ORIG-CRCY-DESC = " ";
      TR0BW00.XXXMSGNO = 394;
      set TR0BM003.TS-ORIG-CRCY-CD cursor, bold;
    else
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BM003.TS-ORIG-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
      VFRATE01.TS-ORIG-CRCY-CD = TR0BM003.TS-ORIG-CRCY-CD;
    end
  end

   /* ------------------------------------------------------*/
   /* Verify Location Codes*/
   /* ------------------------------------------------------*/

  if (TR0BM003.TSEDEST != VFRATE01.TSEDEST)
    set TSCREC empty;
    TSCREC.TSCLOCCD = TR0BM003.TSEDEST;
    TR0BS-08(); /* Verify TSLOCCD*/
    if (TR0BW00.TR0BW-ERR == "Y")
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM003.TSEDCTY = " ";
      TR0BW00.XXXMSGNO = 40;
      set TR0BM003.TSEDEST cursor, bold;
    else
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BW00.TR0BW-KEY-CHG = "Y"; /* key has changed*/
      TR0BM003.TSEDCTY = TSCREC.XXXCITY;
      VFRATE01.TSEDEST = TR0BM003.TSEDEST;
    end
  end

  if (TR0BM003.TSEORIG != VFRATE01.TSEORIG)
    set TSCREC empty;
    TSCREC.TSCLOCCD = TR0BM003.TSEORIG;
    TR0BS-08(); /* Verify TScLOCCD*/
    if (TR0BW00.TR0BW-ERR == "Y")
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM003.TSEOCTY = " ";
      TR0BW00.XXXMSGNO = 41;
      set TR0BM003.TSEORIG cursor, bold;
    else
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BW00.TR0BW-KEY-CHG = "Y"; /* key has changed*/
      TR0BM003.TSEOCTY = TSCREC.XXXCITY;
      VFRATE01.TSEORIG = TR0BM003.TSEORIG;
    end
  end

   /* ------------------------------------------------------*/
   /* Verify Carrier Code*/
   /* ------------------------------------------------------*/

  if (TR0BM003.TSDCONTR != VFRATE01.TSDCONTR)
    TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
    TR0BW00.TR0BW-KEY-CHG = "Y"; /* key has changed*/
    if (TR0BM003.TSDCONTR == " ")
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 393;
      set TR0BM003.TSDCONTR cursor, bold;
    else
      VFRATE01.TSDCONTR = TR0BM003.TSDCONTR;
    end
  end

  if (TR0BM003.TS-CARR-GRP-CD != VFRATE01.TS-CARR-GRP-CD)
    TSAREC.TSACARCD = TR0BM003.TS-CARR-GRP-CD;
    TR0BS-12(); /* Verify TSACARCD*/
    if (TR0BW00.TR0BW-ERR == "Y")
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM003.TSACARSN = " ";
      TR0BW00.XXXMSGNO = 392;
      set TR0BM003.TS-CARR-GRP-CD cursor, bold;
    else
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BW00.TR0BW-KEY-CHG = "Y"; /* key has changed*/
      TR0BM003.TSACARSN = TSAREC.TSACARSN;
      VFRATE01.TS-CARR-GRP-CD = TR0BM003.TS-CARR-GRP-CD;
    end
  end

  if (TR0BW00.TR0BW-CHG == "Y") /* data has changed*/
    if (TR0BW00.TR0BW-UPD-TYP == "A"
     || TR0BW00.TR0BW-UPD-TYP == "C") /* ADD or COPY function*/
      TR0BW00.TR0BW-CONF = "N"; /* resend confirmation*/
    end
  end


   /* **                                                    ***/
   /* ****************** End of TR0B-25120 ********************/
end // end TR0B-25120

// Verify TR0BM004
Function TR0B-25200()
   /* ------------------------------------------------------*/
   /* Verify TR0BM004*/
   /* ------------------------------------------------------*/

  TR0BW00.TR0BW-CHG = "N"; /* initialize data changed*/
  TR0BW00.TR0BW-KEY-CHG = "N"; /* initialize key changed*/

  if ((TR0BW00.TR0BW-UPD-TYP == "A"
   || TR0BW00.TR0BW-UPD-TYP == "C")
   && TR0BW00.TR0BW-CONF != "Y")
    TR0B-25210(); /* validate new data*/
  else
    TR0B-25220(); /* validate changed data*/
  end


   /* **                                                    ***/
   /* ****************** End of TR0B-25200 ********************/
end // end TR0B-25200

// Validate ADDED   Data (M004)
Function TR0B-25210()
   /* ------------------------------------------------------*/
   /* Verify Contract 'Header' Information*/
   /* ------------------------------------------------------*/

  TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/

   /* ------------------------------------------------------*/
   /* Move Contract Terms to VFRATE01*/
   /* ------------------------------------------------------*/

  VFRATE01.TSFOBAF = TR0BM004.TSFOBAF;
  VFRATE01.TSFOCAF = TR0BM004.TSFOCAF;
  VFRATE01.TSFDMISC = TR0BM004.TSFDMISC;
  VFRATE01.TS-CNSLD-SRCHG-AMT = TR0BM004.TS-CNSLD-SRCHG-AMT;
  VFRATE01.TS-LESS-CNTNR-CHG = TR0BM004.TS-LESS-CNTNR-CHG;
  VFRATE01.TS-FRGT-CHG-AMT[7] = TR0BM004.TS-FRGT-CHG-AMT[7];
  VFRATE01.TS-FRGT-CHG-AMT[6] = TR0BM004.TS-FRGT-CHG-AMT[6];
  VFRATE01.TS-FRGT-CHG-AMT[5] = TR0BM004.TS-FRGT-CHG-AMT[5];
  VFRATE01.TS-FRGT-CHG-AMT[4] = TR0BM004.TS-FRGT-CHG-AMT[4];
  VFRATE01.TS-FRGT-CHG-AMT[3] = TR0BM004.TS-FRGT-CHG-AMT[3];
  VFRATE01.TS-FRGT-CHG-AMT[2] = TR0BM004.TS-FRGT-CHG-AMT[2];
  VFRATE01.TS-FRGT-CHG-AMT[1] = TR0BM004.TS-FRGT-CHG-AMT[1];
  VFRATE01.TS-FRGT-MIN-CHGAMT = TR0BM004.TS-FRGT-MIN-CHGAMT;


   /* ------------------------------------------------------*/
   /* Verify XGPCD*/
   /* ------------------------------------------------------*/

  if (TR0BM004.XGPCD in XGPTBL.XGPCD
   && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    TR0BM004.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    VFRATE01.XGPCD = TR0BM004.XGPCD;
  else
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 101;
    set TR0BM004.XGPCD cursor, bold;
    TR0BM004.XGPABRV = " ";
  end

   /* ------------------------------------------------------*/
   /* Verify YMTCD*/
   /* ------------------------------------------------------*/

  if (TR0BM004.YMTCD in YMTTBL.YMTCD
   && YMTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    TR0BM004.YMTSDESC = YMTTBL.YMTSDESC[sysVar.arrayIndex];
    VFRATE01.YMTCD = TR0BM004.YMTCD;
  else
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 42;
    set TR0BM004.YMTCD cursor, bold;
    TR0BM004.YMTSDESC = " ";
  end

   /* ------------------------------------------------------*/
   /* Verify YSTCD*/
   /* ------------------------------------------------------*/

  if (TR0BM004.YSTCD in YSTTBL.YSTCD
   && YSTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    TR0BM004.YSTSDESC = YSTTBL.YSTSDESC[sysVar.arrayIndex];
    VFRATE01.YSTCD = TR0BM004.YSTCD;
  else
    TR0BW00.XXXMSGNO = 56;
    TR0BW00.TR0BW-MAP-ERR = "Y";
    set TR0BM004.YSTCD cursor, bold;
    TR0BM004.YSTSDESC = " ";
  end

   /* ------------------------------------------------------*/
   /* Verify YDTCD*/
   /* ------------------------------------------------------*/

  if (TR0BM004.YDTCD in YDTTBL.YDTCD
   && YDTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    TR0BM004.YDTSDESC = YDTTBL.YDTSDESC[sysVar.arrayIndex];
    VFRATE01.YDTCD = TR0BM004.YDTCD;
  else
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 80;
    set TR0BM004.YDTCD cursor, bold;
    TR0BM004.YDTSDESC = " ";
  end


   /* ------------------------------------------------------*/
   /* Verify Beginning & End Dates*/
   /* ------------------------------------------------------*/

  set TA2REC empty;
  TA2REC.TA2GRGA = TR0BM004.TSDENDDT;
  TA2REC.TA2GRTYP = "A";
  TR0BS-18(); /* Verify DATE*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    set TR0BM004.TSDENDDT cursor, bold;
  else
    TR0BW00.TR0BW-ENDDT = TA2REC.TA2GRGG;
  end

  set TA2REC empty;
  TA2REC.TA2GRGA = TR0BM004.TSDBEGDT;
  TA2REC.TA2GRTYP = "A";
  TR0BS-18(); /* Verify DATE*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    set TR0BM004.TSDBEGDT cursor, bold;
  else
    TR0BW00.TR0BW-BEGDT = TA2REC.TA2GRGG;
  end

  if (TR0BW00.XXXMSGNO != 57) /* not already a date error*/
    if (TR0BW00.TR0BW-BEGDT > TR0BW00.TR0BW-ENDDT)
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 58;
      set TR0BM004.TSDBEGDT cursor, bold;
      set TR0BM004.TSDENDDT bold;
      TR0BW00.XXXMSGNO = 58; /* beg dt must be lt end dt*/
    else
      VFRATE01.TSDBEGDT = TR0BW-BEGDT;
      VFRATE01.TSDENDDT = TR0BW-ENDDT;
    end
  end

   /* ------------------------------------------------------*/
   /* Verify Currency Codes*/
   /* ------------------------------------------------------*/

  set VZFC0001 empty;
  VZFC0001.ZFC-CRCY-CD = TR0BM004.TS-DEST-CRCY-CD;
  TR0BS-16(); /* Verify ZFCCD*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 394;
    set TR0BM004.TS-DEST-CRCY-CD cursor, bold;
    TR0BM004.TS-DEST-CRCY-DESC = " ";
  else
    TR0BM004.TS-DEST-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
    VFRATE01.TS-DEST-CRCY-CD = TR0BM004.TS-DEST-CRCY-CD;
  end

  set VZFC0001 empty;
  VZFC0001.ZFC-CRCY-CD = TR0BM004.TS-ORIG-CRCY-CD;
  TR0BS-16(); /* Verify ZFCCD*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 394;
    set TR0BM004.TS-ORIG-CRCY-CD cursor, bold;
    TR0BM004.TS-ORIG-CRCY-DESC = " ";
  else
    TR0BM004.TS-ORIG-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
    VFRATE01.TS-ORIG-CRCY-CD = TR0BM004.TS-ORIG-CRCY-CD;
  end

   /* ------------------------------------------------------*/
   /* Verify Location Codes*/
   /* ------------------------------------------------------*/

  set TSCREC empty;
  TSCREC.TSCLOCCD = TR0BM004.TSEDEST;
  TR0BS-08(); /* Verify TSCLOCCD*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 40;
    set TR0BM004.TSEDEST cursor, bold;
    TR0BM004.TSEDCTY = " ";
  else
    TR0BM004.TSEDCTY = TSCREC.XXXCITY;
    VFRATE01.TSEDEST = TR0BM004.TSEDEST;
  end

  set TSCREC empty;
  TSCREC.TSCLOCCD = TR0BM004.TSEORIG;
  TR0BS-08(); /* Verify TSCLOCCD*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 41;
    set TR0BM004.TSEORIG cursor, bold;
    TR0BM004.TSEOCTY = " ";
  else
    TR0BM004.TSEOCTY = TSCREC.XXXCITY;
    VFRATE01.TSEORIG = TR0BM004.TSEORIG;
  end

   /* ------------------------------------------------------*/
   /* Verify Carrier Code & Contract Nbr*/
   /* ------------------------------------------------------*/

  if (TR0BM004.TSDCONTR == " ")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 393;
    set TR0BM004.TSDCONTR cursor, bold;
  else
    VFRATE01.TSDCONTR = TR0BM004.TSDCONTR;
  end


  TSAREC.TSACARCD = TR0BM004.TS-CARR-GRP-CD;
  TR0BS-12(); /* Verify TSACARCD*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 392;
    set TR0BM004.TS-CARR-GRP-CD cursor, bold;
    TR0BM004.TSACARSN = " ";
  else
    TR0BM004.TSACARSN = TSAREC.TSACARSN;
    VFRATE01.TS-CARR-GRP-CD = TR0BM004.TS-CARR-GRP-CD;
  end


   /* **                                                    ***/
   /* ****************** End of TR0B-25210 ********************/
end // end TR0B-25210

// Validate UPDATED Data (M004)
Function TR0B-25220()
   /* ------------------------------------------------------*/
   /* Test Contract Terms have Changed*/
   /* ------------------------------------------------------*/

  if (TR0BM004.TSFOBAF != VFRATE01.TSFOBAF
   || TR0BM004.TSFOCAF != VFRATE01.TSFOCAF
   || TR0BM004.TSFDMISC != VFRATE01.TSFDMISC
   || TR0BM004.TS-CNSLD-SRCHG-AMT != VFRATE01.TS-CNSLD-SRCHG-AMT
   || TR0BM004.TS-LESS-CNTNR-CHG != VFRATE01.TS-LESS-CNTNR-CHG
  
   || TR0BM004.TS-FRGT-CHG-AMT[7] != VFRATE01.TS-FRGT-CHG-AMT[7]
   || TR0BM004.TS-FRGT-CHG-AMT[6] != VFRATE01.TS-FRGT-CHG-AMT[6]
   || TR0BM004.TS-FRGT-CHG-AMT[5] != VFRATE01.TS-FRGT-CHG-AMT[5]
   || TR0BM004.TS-FRGT-CHG-AMT[4] != VFRATE01.TS-FRGT-CHG-AMT[4]
   || TR0BM004.TS-FRGT-CHG-AMT[3] != VFRATE01.TS-FRGT-CHG-AMT[3]
   || TR0BM004.TS-FRGT-CHG-AMT[2] != VFRATE01.TS-FRGT-CHG-AMT[2]
   || TR0BM004.TS-FRGT-CHG-AMT[1] != VFRATE01.TS-FRGT-CHG-AMT[1]
   || TR0BM004.TS-FRGT-MIN-CHGAMT != VFRATE01.TS-FRGT-MIN-CHGAMT)

    TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/

    VFRATE01.TSDCONTR = TR0BM004.TSDCONTR;
    VFRATE01.TSFOBAF = TR0BM004.TSFOBAF;
    VFRATE01.TSFOCAF = TR0BM004.TSFOCAF;
    VFRATE01.TSFDMISC = TR0BM004.TSFDMISC;
    VFRATE01.TS-CNSLD-SRCHG-AMT = TR0BM004.TS-CNSLD-SRCHG-AMT;
    VFRATE01.TS-LESS-CNTNR-CHG = TR0BM004.TS-LESS-CNTNR-CHG;

    VFRATE01.TS-FRGT-CHG-AMT[7] = TR0BM004.TS-FRGT-CHG-AMT[7];
    VFRATE01.TS-FRGT-CHG-AMT[6] = TR0BM004.TS-FRGT-CHG-AMT[6];
    VFRATE01.TS-FRGT-CHG-AMT[5] = TR0BM004.TS-FRGT-CHG-AMT[5];
    VFRATE01.TS-FRGT-CHG-AMT[4] = TR0BM004.TS-FRGT-CHG-AMT[4];
    VFRATE01.TS-FRGT-CHG-AMT[3] = TR0BM004.TS-FRGT-CHG-AMT[3];
    VFRATE01.TS-FRGT-CHG-AMT[2] = TR0BM004.TS-FRGT-CHG-AMT[2];
    VFRATE01.TS-FRGT-CHG-AMT[1] = TR0BM004.TS-FRGT-CHG-AMT[1];
    VFRATE01.TS-FRGT-MIN-CHGAMT = TR0BM004.TS-FRGT-MIN-CHGAMT;

  end

   /* ------------------------------------------------------*/
   /* Verify Contract 'Header' Information*/
   /* ------------------------------------------------------*/

   /* ------------------------------------------------------*/
   /* Verify XGPCD*/
   /* ------------------------------------------------------*/

  if (TR0BM004.XGPCD != VFRATE01.XGPCD)
    if (TR0BM004.XGPCD in XGPTBL.XGPCD
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      TR0BM004.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BW00.TR0BW-KEY-CHG = "Y"; /* key has changed*/
      VFRATE01.XGPCD = TR0BM004.XGPCD;
    else
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 101;
      set TR0BM004.XGPCD cursor, bold;
      TR0BM004.XGPABRV = " ";
    end
  end

   /* ------------------------------------------------------*/
   /* Verify YMTCD*/
   /* ------------------------------------------------------*/

  if (TR0BM004.YMTCD != VFRATE01.YMTCD)
    if (TR0BM004.YMTCD in YMTTBL.YMTCD
     && YMTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      TR0BM004.YMTSDESC = YMTTBL.YMTSDESC[sysVar.arrayIndex];
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      VFRATE01.YMTCD = TR0BM004.YMTCD;
    else
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 42;
      set TR0BM004.YMTCD cursor, bold;
      TR0BM004.YMTSDESC = " ";
    end
  end

   /* ------------------------------------------------------*/
   /* Verify YSTCD*/
   /* ------------------------------------------------------*/

  if (TR0BM004.YSTCD != VFRATE01.YSTCD)
    if (TR0BM004.YSTCD in YSTTBL.YSTCD
     && YSTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      TR0BM004.YSTSDESC = YSTTBL.YSTSDESC[sysVar.arrayIndex];
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      VFRATE01.YSTCD = TR0BM004.YSTCD;
    else
      TR0BW00.XXXMSGNO = 56;
      TR0BW00.TR0BW-MAP-ERR = "Y";
      set TR0BM004.YSTCD cursor, bold;
      TR0BM004.YSTSDESC = " ";
    end
  end

   /* ------------------------------------------------------*/
   /* Verify YDTCD*/
   /* ------------------------------------------------------*/

  if (TR0BM004.YDTCD != VFRATE01.YDTCD)
    if (TR0BM004.YDTCD in YDTTBL.YDTCD
     && YDTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      TR0BM004.YDTSDESC = YDTTBL.YDTSDESC[sysVar.arrayIndex];
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BW00.TR0BW-KEY-CHG = "Y"; /* key has changed*/
      VFRATE01.YDTCD = TR0BM004.YDTCD;
    else
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 80;
      set TR0BM004.YDTCD cursor, bold;
      TR0BM004.YDTSDESC = " ";
    end
  end


   /* ------------------------------------------------------*/
   /* Verify Beginning & End Dates*/
   /* ------------------------------------------------------*/

  set TA2REC empty;
  TA2REC.TA2GRGA = TR0BM004.TSDENDDT;
  TA2REC.TA2GRTYP = "A";
  TR0BS-18(); /* Verify DATE*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    set TR0BM004.TSDENDDT cursor, bold;
  else
    TR0BW00.TR0BW-ENDDT = TA2REC.TA2GRGG;
  end

  set TA2REC empty;
  TA2REC.TA2GRGA = TR0BM004.TSDBEGDT;
  TA2REC.TA2GRTYP = "A";
  TR0BS-18(); /* Verify DATE*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW00.TR0BW-MAP-ERR = "Y";
    set TR0BM004.TSDBEGDT cursor, bold;
  else
    TR0BW00.TR0BW-BEGDT = TA2REC.TA2GRGG;
  end

  if (TR0BW00.XXXMSGNO != 57) /* not already a date error*/
    if (TR0BW00.TR0BW-BEGDT > TR0BW00.TR0BW-ENDDT)
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 58;
      set TR0BM004.TSDBEGDT cursor, bold;
      set TR0BM004.TSDENDDT cursor, bold;
      TR0BW00.XXXMSGNO = 58; /* beg dt must be lt end dt*/

    else

      if (TR0BW00.TR0BW-BEGDT != VFRATE01.TSDBEGDT
       || TR0BW00.TR0BW-ENDDT != VFRATE01.TSDENDDT)
        TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
        TR0BW00.TR0BW-KEY-CHG = "Y"; /* key has changed*/
        VFRATE01.TSDBEGDT = TR0BW00.TR0BW-BEGDT;
        VFRATE01.TSDENDDT = TR0BW00.TR0BW-ENDDT;

      end

    end
  end

   /* ------------------------------------------------------*/
   /* Verify Currency Codes*/
   /* ------------------------------------------------------*/

  if (TR0BM004.TS-DEST-CRCY-CD != VFRATE01.TS-DEST-CRCY-CD)
    set VZFC0001 empty;
    VZFC0001.ZFC-CRCY-CD = TR0BM004.TS-DEST-CRCY-CD;
    TR0BS-16(); /* Verify ZFCCD*/
    if (TR0BW00.TR0BW-ERR == "Y")
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM004.TS-DEST-CRCY-DESC = " ";
      TR0BW00.XXXMSGNO = 394;
      set TR0BM004.TS-DEST-CRCY-CD cursor, bold;
    else
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BM004.TS-DEST-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
      VFRATE01.TS-DEST-CRCY-CD = TR0BM004.TS-DEST-CRCY-CD;
    end
  end

  if (TR0BM004.TS-ORIG-CRCY-CD != VFRATE01.TS-ORIG-CRCY-CD)
    set VZFC0001 empty;
    VZFC0001.ZFC-CRCY-CD = TR0BM004.TS-ORIG-CRCY-CD;
    TR0BS-16(); /* Verify ZFCCD*/
    if (TR0BW00.TR0BW-ERR == "Y")
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM004.TS-ORIG-CRCY-DESC = " ";
      TR0BW00.XXXMSGNO = 394;
      set TR0BM004.TS-ORIG-CRCY-CD cursor, bold;
    else
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BM004.TS-ORIG-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
      VFRATE01.TS-ORIG-CRCY-CD = TR0BM004.TS-ORIG-CRCY-CD;
    end
  end

   /* ------------------------------------------------------*/
   /* Verify Location Codes*/
   /* ------------------------------------------------------*/

  if (TR0BM004.TSEDEST != VFRATE01.TSEDEST)
    set TSCREC empty;
    TSCREC.TSCLOCCD = TR0BM004.TSEDEST;
    TR0BS-08(); /* Verify TSLOCCD*/
    if (TR0BW00.TR0BW-ERR == "Y")
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM004.TSEDCTY = " ";
      TR0BW00.XXXMSGNO = 40;
      set TR0BM004.TSEDEST cursor, bold;
    else
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BW00.TR0BW-KEY-CHG = "Y"; /* key has changed*/
      TR0BM004.TSEDCTY = TSCREC.XXXCITY;
      VFRATE01.TSEDEST = TR0BM004.TSEDEST;
    end
  end

  if (TR0BM004.TSEORIG != VFRATE01.TSEORIG)
    set TSCREC empty;
    TSCREC.TSCLOCCD = TR0BM004.TSEORIG;
    TR0BS-08(); /* Verify TScLOCCD*/
    if (TR0BW00.TR0BW-ERR == "Y")
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM004.TSEOCTY = " ";
      TR0BW00.XXXMSGNO = 41;
      set TR0BM004.TSEORIG cursor, bold;
    else
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BW00.TR0BW-KEY-CHG = "Y"; /* key has changed*/
      TR0BM004.TSEOCTY = TSCREC.XXXCITY;
      VFRATE01.TSEORIG = TR0BM004.TSEORIG;
    end
  end

   /* ------------------------------------------------------*/
   /* Verify Carrier Code*/
   /* ------------------------------------------------------*/

  if (TR0BM004.TSDCONTR != VFRATE01.TSDCONTR)
    TR0BW00.TR0BW-CHG = "Y";
    TR0BW00.TR0BW-KEY-CHG = "Y";
    if (TR0BM004.TSDCONTR == " ")
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 393;
      set TR0BM004.TSDCONTR cursor, bold;
    else
      VFRATE01.TSDCONTR = TR0BM004.TSDCONTR;
    end
  end

  if (TR0BM004.TS-CARR-GRP-CD != VFRATE01.TS-CARR-GRP-CD)
    TSAREC.TSACARCD = TR0BM004.TS-CARR-GRP-CD;
    TR0BS-12(); /* Verify TSACARCD*/
    if (TR0BW00.TR0BW-ERR == "Y")
      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BM004.TSACARSN = " ";
      TR0BW00.XXXMSGNO = 392;
      set TR0BM004.TS-CARR-GRP-CD cursor, bold;
    else
      TR0BW00.TR0BW-CHG = "Y"; /* data has changed*/
      TR0BW00.TR0BW-KEY-CHG = "Y"; /* key has changed*/
      TR0BM004.TSACARSN = TSAREC.TSACARSN;
      VFRATE01.TS-CARR-GRP-CD = TR0BM004.TS-CARR-GRP-CD;
    end
  end

  if (TR0BW00.TR0BW-CHG == "Y") /* if data has been changed*/
    if (TR0BW00.TR0BW-UPD-TYP == "A"
     || TR0BW00.TR0BW-UPD-TYP == "C") /* if ADD or COPY function*/
      TR0BW00.TR0BW-CONF = "N"; /* resend confirmation screen*/
    end
  end

   /* **                                                    ***/
   /* ****************** End of TR0B-25220 ********************/
end // end TR0B-25220

// PROCESS VALID INPUT REQUEST
Function TR0B-26000()
   /* ------------------------------------------------------------*/
   /* Process Valid Input Request*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Set the add function request flag*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf13) /* Add detail*/

    TR0BW00.TR0BW-PRV-UPD-TYP = TR0BW00.TR0BW-UPD-TYP;
    TR0BW00.TR0BW-UPD-TYP = "A";
    TR0BW00.TR0BW-CONF = "N";

    if (TR0BW00.YMTCD == "VL")
      set TR0BM003 initial;
    else
      set TR0BM004 initial;
    end

    return;

  end


   /* ------------------------------------------------------------*/
   /* Set the change function request flag, if authorized*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf14) /* Change detail*/

    TR0BW00.TR0BW-PRV-UPD-TYP = TR0BW00.TR0BW-UPD-TYP;
    TR0BW00.TR0BW-UPD-TYP = "U";
    TR0BW00.TR0BW-CONF = "Y";
    return;

  end


   /* ------------------------------------------------------------*/
   /* Set the delete function request flag, if authorized*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf15) /* Delete detail*/

    TR0BW00.TR0BW-PRV-UPD-TYP = TR0BW00.TR0BW-UPD-TYP;
    TR0BW00.TR0BW-UPD-TYP = "D";
    TR0BW00.XXXMSGNO = 154;
    TR0BW00.TR0BW-CONF = "Y";
    return;

  end


   /* ------------------------------------------------------------*/
   /* Set the copy function request flag, if authorized*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf16) /* Copy detail*/

    TR0BW00.TR0BW-PRV-UPD-TYP = TR0BW00.TR0BW-UPD-TYP;
    TR0BW00.TR0BW-UPD-TYP = "C";
    TR0BW00.TR0BW-CONF = "N";
    return;

  end


   /* ------------------------------------------------------------*/
   /* Route to Database functions.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is enter) /* Update Database*/

    if (TR0BW00.TR0BW-MAP-ERR == "Y") /* Validation error*/
      return; /* Go Back, Jack*/
    end

    if (TR0BW00.TR0BW-UPD-TYP == "A"
     || TR0BW00.TR0BW-UPD-TYP == "C")
      if (TR0BW00.TR0BW-CONF != "Y")
        TR0BW00.TR0BW-CONF = "Y";
        TR0BW00.XXXMSGNO = 170;
        return;
      else
        TR0B-26100(); /* Do the ADD    Function*/
      end

    else

      if (TR0BW00.TR0BW-UPD-TYP == "U")
        if (TR0BW00.TR0BW-CONF != "Y")
          TR0BW00.TR0BW-CONF = "Y";
          return;
        else
          TR0B-26200(); /* Do the UPDATE Function*/
        end

      else

        if (TR0BW00.TR0BW-UPD-TYP == "D")
          if (TR0BW00.TR0BW-CONF != "Y")
            TR0BW00.TR0BW-CONF = "Y";
            TR0BW00.XXXMSGNO = 154;
            return;
          else
            TR0B-26300(); /* Do the DELETE Function*/
          end

        end
      end
    end
  end


   /* **                                                        ***/
   /* ******************* End of TR0B-26000 ***********************/
end // end TR0B-26000

// Database ADD (W02) Function
Function TR0B-26100()
   /* ---------------------------------------------------------*/
   /* Database Add:*/
   /* 1)  Test to see if row already exists*/
   /* 2)  If not, do ADD*/
   /* ---------------------------------------------------------*/

  set TR0BW02 empty;
  set TR0BW03 empty;
  TR0BW02.VFRATE01-GROUP = VFRATE01.VFRATE01-GROUP;
  TR0BW03.VFRATE01-GROUP = VFRATE01.VFRATE01-GROUP;
  VFRATE01.TSDBEGDT = 0; /* set begin date to 0*/

  TR0BS-24(); /* check for existing contract*/

  if (TR0BW00.TR0BW-DATA == "N") /* contract does not exist;*/

    VFRATE01.VFRATE01-GROUP = TR0BW03.VFRATE01-GROUP;

    if (VFRATE01.XGPCD == "02")
      if (VFRATE01.YMTCD == "VL")
        if (VFRATE01.YSTCD == "IM")
          VFRATE01.TS-PAIR-COST-AMT = mathLib.round(VFRATE01.TS-FRGT-CHG-AMT[2] / 6500, -mathLib.decimals(VFRATE01.TS-PAIR-COST-AMT)); /* 40ft cntnr / 6500 prs*/
        else
          if (VFRATE01.YSTCD == "FF")
            VFRATE01.TS-PAIR-COST-AMT = mathLib.round(VFRATE01.TS-FRGT-CHG-AMT[1] / 3200, -mathLib.decimals(VFRATE01.TS-PAIR-COST-AMT));
                                   /* 20ft cntnr / 3200 prs*/
          else
            VFRATE01.TS-PAIR-COST-AMT = 0;
          end
        end
      else
        VFRATE01.TS-PAIR-COST-AMT = 0;
      end
    else
      VFRATE01.TS-PAIR-COST-AMT = 0;
    end

    VFRATE01.XXXUSRID = COMMAREA.CAUSERID;

    XX0XS01();
    VFRATE01.ZZ-SDT = XX0XWDAT;
    VFRATE01.ZZ-SETUP-HHMM = XX0XWTIM;
    VFRATE01.ZZ-CHNG-DT = XX0XWDAT;
    VFRATE01.ZZ-CHNG-HHMM = XX0XWTIM;
    VFRATE01.ZZ-CHNG-CNT = 1;

    TR0BS-19(); /* add row*/

    if (SQLCA.VAGen_SQLCODE == 0)
      TR0BW00.TR0BW-CHG = "N";
      TR0BW00.TR0BW-REQ = "Y";
      TR0BW00.XXXMSGNO = 44; /* database add successful*/
      return;
    end

  else

    VFRATE01.VFRATE01-GROUP = TR0BW03.VFRATE01-GROUP;
    TR0BW00.XXXMSGNO = 026; /* contract already exists*/
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.TR0BW-CONF = "N";

    if (TR0BW00.YMTCD == "VL")
      set TR0BM003.TS-CARR-GRP-CD cursor, bold;
      set TR0BM003.TSEORIG bold;
      set TR0BM003.TSEDEST bold;
      set TR0BM003.TSDBEGDT bold;
      set TR0BM003.TSDENDDT bold;
      set TR0BM003.YDTCD bold;
      set TR0BM003.XGPCD bold;
    else
      set TR0BM004.TS-CARR-GRP-CD cursor, bold;
      set TR0BM004.TSEORIG bold;
      set TR0BM004.TSEDEST bold;
      set TR0BM004.TSDBEGDT bold;
      set TR0BM004.TSDENDDT bold;
      set TR0BM004.YDTCD bold;
      set TR0BM004.XGPCD bold;
    end

    exit stack;

  end


   /* **                                                     ***/
   /* ****************** End of TR0B-26100 *********************/
end // end TR0B-26100

// Database (W03) UPDATE Function
Function TR0B-26200()
   /* ---------------------------------------------------------*/
   /* Database UPDATE:*/
   /* ---------------------------------------------------------*/

  if (TR0BW00.TR0BW-CHG == "N") /* no changes*/
    return;
  end


  if (VFRATE01.XGPCD == "02") /* footware only*/
    if (VFRATE01.YMTCD == "VL") /* for VESSEL shipments*/
      if (VFRATE01.YSTCD == "IM") /* for IMPORTS*/
        VFRATE01.TS-PAIR-COST-AMT = mathLib.round(VFRATE01.TS-FRGT-CHG-AMT[2] / 6500, -mathLib.decimals(VFRATE01.TS-PAIR-COST-AMT)); /* 40ft cntnr / 6500 prs*/
      else
        if (VFRATE01.YSTCD == "FF") /* for FOREIGN TO FOREIGN*/
          VFRATE01.TS-PAIR-COST-AMT = mathLib.round(VFRATE01.TS-FRGT-CHG-AMT[1] / 3200, -mathLib.decimals(VFRATE01.TS-PAIR-COST-AMT)); /* 20ft cntnr / 3200 prs*/
        else
          VFRATE01.TS-PAIR-COST-AMT = 0; /* other VESSEL shipments*/
        end
      end
    else
      VFRATE01.TS-PAIR-COST-AMT = 0; /* non-VESSEL shipments*/
    end
  else
    VFRATE01.TS-PAIR-COST-AMT = 0; /* APPAREL*/
  end


  VFRATE01.XXXUSRID = COMMAREA.CAUSERID;

  XX0XS01();

  VFRATE01.ZZ-CHNG-DT = XX0XWDAT;
  VFRATE01.ZZ-CHNG-HHMM = XX0XWTIM;


  if (TR0BW00.TR0BW-KEY-CHG == "Y") /* key has changed*/
    VFRATE01.ZZ-CHNG-CNT = VFRATE01.ZZ-CHNG-CNT + 1;

    set TR0BW03 empty;
    TR0BW03.VFRATE01-GROUP = VFRATE01.VFRATE01-GROUP;
    VFRATE01.TSDBEGDT = 0; /* set begin date to 0*/
    TR0BS-24(); /* check for existing contract*/
    if (TR0BW00.TR0BW-DATA == "Y") /* contract exists*/
      TR0BW00.XXXMSGNO = 026; /* contract already exists*/
      TR0BW00.TR0BW-MAP-ERR = "Y";
      if (TR0BW00.YMTCD == "VL")
        set TR0BM003.TS-CARR-GRP-CD cursor, bold;
        set TR0BM003.TSEORIG bold;
        set TR0BM003.TSEDEST bold;
        set TR0BM003.TSDBEGDT bold;
        set TR0BM003.TSDENDDT bold;
        set TR0BM003.YDTCD bold;
        set TR0BM003.XGPCD bold;
      else
        set TR0BM004.TS-CARR-GRP-CD cursor, bold;
        set TR0BM004.TSEORIG bold;
        set TR0BM004.TSEDEST bold;
        set TR0BM004.TSDBEGDT bold;
        set TR0BM004.TSDENDDT bold;
        set TR0BM004.YDTCD bold;
        set TR0BM004.XGPCD bold;
      end
    else

      TR0BS-22(); /* DELETE old-key VFRATE01*/

      if (SQLCA.VAGen_SQLCODE == 0)
        VFRATE01.VFRATE01-GROUP = TR0BW03.VFRATE01-GROUP;
        TR0BS-19(); /* ADD    new VFRATE01*/

        if (SQLCA.VAGen_SQLCODE == 0)
          TR0BW00.TR0BW-KEY-CHG = "N";
          TR0BW00.TR0BW-CHG = "N";
          TR0BW00.TR0BW-REQ = "Y";
          TR0BW01.TR0BW-CONT-SEL[TR0BW-IDXS] = " ";
          TR0BW00.XXXMSGNO = 44; /* database upd successful*/
          TR0BS-23(); /* Update TR0BW02 search key*/

          return;

        end

      else

        TR0BW00.TR0BW-MAP-ERR = "N";
        TR0BW00.XXXPRCNM = "-26200";
        TR0BW00.XXXMSGNO = 397; /* database delete error*/

      end
    end

  else

    TR0BS-20(); /* Update DTRANS.VFRATE01*/

    if (SQLCA.VAGen_SQLCODE == 0)
      TR0BW00.TR0BW-CHG = "N";
      TR0BW00.TR0BW-REQ = "Y";
      TR0BW01.TR0BW-CONT-SEL[TR0BW-IDXS] = " ";
      TR0BW00.XXXMSGNO = 44; /* database upd successful*/
      TR0BS-23(); /* Update TR0BW02 search key*/

      return;

    end

  end


   /* **                                                     ***/
   /* ****************** End of TR0B-26200 *********************/
end // end TR0B-26200

// Database DELETE Function
Function TR0B-26300()
   /* ---------------------------------------------------------*/
   /* Database Delete:*/
   /* 1)  Test to see if row exists*/
   /* 2)  If it does, do DELETE*/
   /* ---------------------------------------------------------*/

  TR0BW02.VFRATE01-GROUP = VFRATE01.VFRATE01-GROUP;

  set VFRATE01 empty;
  VFRATE01.XGPCD = TR0BW02.XGPCD;
  VFRATE01.TS-CARR-GRP-CD = TR0BW02.TS-CARR-GRP-CD;
  VFRATE01.TSDCONTR = TR0BW02.TSDCONTR;
  VFRATE01.TSDBEGDT = TR0BW02.TSDBEGDT;
  VFRATE01.TSDENDDT = TR0BW02.TSDENDDT;
  VFRATE01.TSEORIG = TR0BW02.TSEORIG;
  VFRATE01.TSEDEST = TR0BW02.TSEDEST;
  VFRATE01.YDTCD = TR0BW02.YDTCD;

  TR0BS-15(); /* Test Database*/

  if (SQLCA.VAGen_SQLCODE == 0)
    VFRATE01.VFRATE01-GROUP = TR0BW02.VFRATE01-GROUP;
    TR0BS-21(); /* delete DTRANS.VFRATE01*/

    if (SQLCA.VAGen_SQLCODE == 0)
      TR0BW00.TR0BW-CHG = "N";
      TR0BW00.TR0BW-REQ = "Y";
      TR0BW01.TR0BW-CONT-SEL[TR0BW-IDXS] = " ";
      TR0BW00.XXXMSGNO = 45; /* database delete successful*/

    end

  else

    VFRATE01.VFRATE01-GROUP = TR0BW02.VFRATE01-GROUP;
    TR0BW00.XXXMSGNO = 397; /* contract already deleted*/
    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.TR0BW-CONF = "N";

    if (TR0BW00.YMTCD == "VL")
      set TR0BM003.TSDCONTR cursor, bold;
      set TR0BM003.TSDBEGDT bold;
      set TR0BM003.TSDENDDT bold;
    else
      set TR0BM004.TSDCONTR cursor, bold;
      set TR0BM004.TSDBEGDT bold;
      set TR0BM004.TSDENDDT bold;
    end

    exit stack;

  end


   /* **                                                        ***/
   /* ****************** End of TR0B-26300 ************************/
end // end TR0B-26300

// Select DTRANS.VFRATE01
Function TR0BS-01()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  TR0BW00.TR0BW-DATA = "N"; /* Data exists*/
  TR0BW00.TR0BW-EOF = "N"; /* End of cursor*/

   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7000" ("S1", SQLCA, VFRATE01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TR0BW00.XXXPRCNM = "S-01   "; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BS-04(); /* purge TSQ*/
    TR0BW00.XXXMSGNO = 11; /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    TR0BW00.XXXMSGNO = 10; /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  end

   /* SET TR0BM001 CLEAR;              /* Clear screen before display*/
   /* SET TR0BM002 CLEAR;              /* Clear screen before display*/

   /* MOVE 'S-01' TO TR0BM001.XXXPRCNM;*/
   /* MOVE TR0BW00.YMTCD TO TR0BM001.TR0BM-HDR-YMTCD;*/
   /* MOVE TR0BW00.XGPCD TO TR0BM001.TR0BM-HDR-XGPCD;*/
   /* MOVE TR0BW00.TSACARCD TO TR0BM001.TR0BM-HDR-TSACARCD;*/
   /* MOVE TR0BW00.TSEORIG TO TR0BM001.TR0BM-HDR-TSEORIG;*/
   /* MOVE TR0BW00.TSEDEST TO TR0BM001.TR0BM-HDR-TSEDEST;*/
   /* MOVE TR0BW00.TR0BW-HDR-BEGDT TO TR0BM001.TR0BM-HDR-TSDBEGDT;*/

   /* MOVE 'S-01' TO TR0BM002.XXXPRCNM;*/
   /* MOVE TR0BW00.YMTCD TO TR0BM002.TR0BM-HDR-YMTCD;*/
   /* MOVE TR0BW00.XGPCD TO TR0BM002.TR0BM-HDR-XGPCD;*/
   /* MOVE TR0BW00.TSACARCD TO TR0BM002.TR0BM-HDR-TSACARCD;*/
   /* MOVE TR0BW00.TSEORIG TO TR0BM002.TR0BM-HDR-TSEORIG;*/
   /* MOVE TR0BW00.TSEDEST TO TR0BM002.TR0BM-HDR-TSEDEST;*/
   /* MOVE TR0BW00.TR0BW-HDR-BEGDT TO TR0BM002.TR0BM-HDR-TSDBEGDT;*/

   /* WHILE TR0BW00.TR0BW-IDXM LE 14;*/
    /* SET TR0BM001.TR0BM-CONT-SEL(TR0BW-IDXM) AUTOSKIP,DARK;*/
    /* SET TR0BM002.TR0BM-CONT-SEL(TR0BW-IDXM) AUTOSKIP,DARK;*/
    /* TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM + 1;*/
   /* END;*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = TR0BW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRATE01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* **                                                        ***/
   /* ******************** End of TR0BS-01 ************************/
end // end TR0BS-01

// Fetch DTRANS.VFRATE01
Function TR0BS-02()
   /* ------------------------------------------------------------*/
   /* Initialize the working storage record.*/
   /* ------------------------------------------------------------*/

  set VFRATE01 empty;

   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7000" ("N1", SQLCA, VFRATE01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, save the data in TSQ.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

     /* ------------------------------------------------------------*/
     /* If end of selected set, indicate end of cursor.*/
     /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      TR0BW00.TR0BW-EOF = "Y"; /* Indicate end of cursor*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TR0BW00.XXXPRCNM = "S-02   "; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BS-04(); /* purge TSQ*/
    TR0BW00.XXXMSGNO = 11; /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    TR0BW00.XXXMSGNO = 10; /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  end

   /* SET TR0BM001 CLEAR;              /* Clear screen before display*/
   /* SET TR0BM002 CLEAR;              /* Clear screen before display*/

   /* MOVE TR0BW00.YMTCD TO TR0BM001.TR0BM-HDR-YMTCD;*/
   /* MOVE TR0BW00.XGPCD TO TR0BM001.TR0BM-HDR-XGPCD;*/
   /* MOVE TR0BW00.TSACARCD TO TR0BM001.TR0BM-HDR-TSACARCD;*/
   /* MOVE TR0BW00.TSEORIG TO TR0BM001.TR0BM-HDR-TSEORIG;*/
   /* MOVE TR0BW00.TSEDEST TO TR0BM001.TR0BM-HDR-TSEDEST;*/
   /* MOVE TR0BW00.TR0BW-HDR-BEGDT TO TR0BM001.TR0BM-HDR-TSDBEGDT;*/

   /* MOVE TR0BW00.YMTCD TO TR0BM002.TR0BM-HDR-YMTCD;*/
   /* MOVE TR0BW00.XGPCD TO TR0BM002.TR0BM-HDR-XGPCD;*/
   /* MOVE TR0BW00.TSACARCD TO TR0BM002.TR0BM-HDR-TSACARCD;*/
   /* MOVE TR0BW00.TSEORIG TO TR0BM002.TR0BM-HDR-TSEORIG;*/
   /* MOVE TR0BW00.TSEDEST TO TR0BM002.TR0BM-HDR-TSEDEST;*/
   /* MOVE TR0BW00.TR0BW-HDR-BEGDT TO TR0BM002.TR0BM-HDR-TSDBEGDT;*/

   /* WHILE TR0BW00.TR0BW-IDXM LE 14;*/
    /* SET TR0BM001.TR0BM-CONT-SEL(TR0BW-IDXM) AUTOSKIP,DARK;*/
    /* SET TR0BM002.TR0BM-CONT-SEL(TR0BW-IDXM) AUTOSKIP,DARK;*/
    /* TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM + 1;*/
   /* END;*/


  TR0BM001.XXXPRCNM = "S-02 ";
  TR0BM002.XXXPRCNM = "S-02 ";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = TR0BW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DTRANS  "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VFRATE01"; /* ===> Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* **                                                        ***/
   /* ******************* End of TR0BS-02 *************************/
end // end TR0BS-02

// Close DTRANS.VFRATE01
Function TR0BS-03()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7000" ("C1", SQLCA, VFRATE01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TR0BW00.XXXPRCNM = "S-03   "; /* Module identification*/
  TR0BW00.XXXMSGNO = 10; /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = TR0BW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRATE01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* **                                                        ***/
   /* ******************* End of TR0BS-03 *************************/
end // end TR0BS-03

// Purge TSQ
Function TR0BS-04()
   /* ------------------------------------------------------------*/
   /* If TSQ has already been purged, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (TA5REC.TA5FNCCD == "P") /* Last function was purge*/
    return; /* Return to previous process*/
  end

  set TR0BW01 empty;

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  TR0BW00.TA5TSQIX = 0; /* Highest page number*/

   /* ------------------------------------------------------------*/
   /* Purge TSQ.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/


  try
    call "TA0050" (TR0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/


   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TR0BW00.XXXPRCNM = "-11100 "; /* Module identification*/
   /* Indicate system error*/
  TR0BW00.XXXMSGNO = 10;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = TR0BW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/

  if (TR0BW00.TR0BW-MAP-IND == "1")
    TA1REC.TA1MAPNO = "M001"; /* Map number*/
  else
    TA1REC.TA1MAPNO = "M002"; /* Map number*/
  end

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* **                                                        ***/
   /* ******************** End of TR0BS-04 ************************/
end // end TR0BS-04

// Add TSQ Page
Function TR0BS-05()
   /* ------------------------------------------------------------*/
   /* Add page to TSQ.*/
   /* ------------------------------------------------------------*/

  TR0BW01.XXXTSLEN = TR0BW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  if (TR0BW00.TA5TSQIX == 0 /* No pages are formatted*/
   && TA5REC.TA5FNCCD == "P") /* and last function purge*/

    TA5REC.TA5FNCCD = "N"; /* Function code*/
  else
    TA5REC.TA5FNCCD = "A"; /* Function code*/

  end


  try
    call "TA0050" (TR0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/


   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set TR0BW01 empty; /* M001 display storage*/

    TR0BW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    TR0BW00.TR0BW-IDXM = 1; /* Display line number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TR0BW00.XXXPRCNM = "-11400 "; /* Module identification*/
  TR0BW00.XXXMSGNO = 10; /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = TR0BW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/

  if (TR0BW00.TR0BW-MAP-IND == "1")
    TA1REC.TA1MAPNO = "M001"; /* Map number*/
  else
    TA1REC.TA1MAPNO = "M002"; /* Map number*/
  end

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* **                                                        ***/
   /* ******************* End of TR0BS-05 *************************/
end // end TR0BS-05

// Read/Rewrite TSQ Page
Function TR0BS-06()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/

  TR0BW01.XXXTSLEN = TR0BW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = TR0BW00.XXXTSPAG; /* Page number*/


  try
    call "TA0050" (TR0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TR0BW00.XXXPRCNM = "S-03   "; /* Module identification*/
  TR0BW00.XXXMSGNO = 10; /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = TR0BW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/

  if (TR0BW00.TR0BW-MAP-IND == "1")
    TA1REC.TA1MAPNO = "M001"; /* Map number*/
  else
    TA1REC.TA1MAPNO = "M002"; /* Map number*/
  end

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* ******************* End Of TR0BS-06 ***********************/
end // end TR0BS-06

// Move to TSQ Page
Function TR0BS-07()
   /* ------------------------------------------------------------*/
   /* Save the line to be displayed in the TSQ Page*/
   /* ------------------------------------------------------------*/

  TR0BW01.TS-CARR-GRP-CD[TR0BW-IDXM] = VFRATE01.TS-CARR-GRP-CD;
  TR0BW01.TSDCONTR[TR0BW-IDXM] = VFRATE01.TSDCONTR;
  TR0BW01.TSEORIG[TR0BW-IDXM] = VFRATE01.TSEORIG;
  TR0BW01.TSEDEST[TR0BW-IDXM] = VFRATE01.TSEDEST;

  set TSCREC empty;
  TSCREC.TSCLOCCD = VFRATE01.TSEORIG;
  TR0BS-08(); /* select DTRANS.VTSLOC01*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW01.TSEOCTY[TR0BW-IDXM] = " ";
  else
    TR0BW01.TSEOCTY[TR0BW-IDXM] = TSCREC.XXXCITY;
  end

  set TSCREC empty;
  TSCREC.TSCLOCCD = VFRATE01.TSEDEST;
  TR0BS-08(); /* select unique DTRANS.VTSLOC01*/
  if (TR0BW00.TR0BW-ERR == "Y")
    TR0BW01.TSEDCTY[TR0BW-IDXM] = " ";
  else
    TR0BW01.TSEDCTY[TR0BW-IDXM] = TSCREC.XXXCITY;
  end

  TR0BW01.YDTCD[TR0BW-IDXM] = VFRATE01.YDTCD;
  TR0BW01.YSTCD[TR0BW-IDXM] = VFRATE01.YSTCD;
  TR0BW01.XGPCD[TR0BW-IDXM] = VFRATE01.XGPCD;
  TR0BW01.TSDBEGDT[TR0BW-IDXM] = VFRATE01.TSDBEGDT;
  TR0BW01.TSDENDDT[TR0BW-IDXM] = VFRATE01.TSDENDDT;
  TR0BW01.TS-LESS-CNTNR-CHG[TR0BW-IDXM] = VFRATE01.TS-LESS-CNTNR-CHG;
  TR0BW01.TS-CNSLD-SRCHG-AMT[TR0BW-IDXM] = VFRATE01.TS-CNSLD-SRCHG-AMT;
  TR0BW01.TSFDMISC[TR0BW-IDXM] = VFRATE01.TSFDMISC;
  TR0BW01.TSFOCAF[TR0BW-IDXM] = VFRATE01.TSFOCAF;
  TR0BW01.TSFOBAF[TR0BW-IDXM] = VFRATE01.TSFOBAF;

  if (VFRATE01.YMTCD == "VL") /* Vessel shipment*/
    TR0BW01.TR0BW-VAR-FLD1[TR0BW-IDXM] = VFRATE01.TS-FRGT-CHG-AMT[1];
    TR0BW01.TR0BW-VAR-FLD2[TR0BW-IDXM] = VFRATE01.TS-20FT-DEST-CHG;
    TR0BW01.TR0BW-VAR-FLD3[TR0BW-IDXM] = VFRATE01.TS-FRGT-CHG-AMT[2];
    TR0BW01.TR0BW-VAR-FLD4[TR0BW-IDXM] = VFRATE01.TS-40FT-DEST-CHG;
    TR0BW01.TR0BW-VAR-FLD5[TR0BW-IDXM] = VFRATE01.TS-FRGT-CHG-AMT[3];
    TR0BW01.TR0BW-VAR-FLD6[TR0BW-IDXM] = VFRATE01.TS-HICUBE-DEST-CHG;
    TR0BW01.TR0BW-VAR-FLD7[TR0BW-IDXM] = VFRATE01.TS-FRGT-CHG-AMT[4];
    TR0BW01.TR0BW-VAR-FLD8[TR0BW-IDXM] = VFRATE01.TS-45FT-DEST-CHG;
  else
    TR0BW01.TR0BW-VAR-FLD1[TR0BW-IDXM] = VFRATE01.TS-FRGT-MIN-CHGAMT;
    TR0BW01.TR0BW-VAR-FLD2[TR0BW-IDXM] = VFRATE01.TS-FRGT-CHG-AMT[1];
    TR0BW01.TR0BW-VAR-FLD3[TR0BW-IDXM] = VFRATE01.TS-FRGT-CHG-AMT[2];
    TR0BW01.TR0BW-VAR-FLD4[TR0BW-IDXM] = VFRATE01.TS-FRGT-CHG-AMT[3];
    TR0BW01.TR0BW-VAR-FLD5[TR0BW-IDXM] = VFRATE01.TS-FRGT-CHG-AMT[4];
    TR0BW01.TR0BW-VAR-FLD6[TR0BW-IDXM] = VFRATE01.TS-FRGT-CHG-AMT[5];
    TR0BW01.TR0BW-VAR-FLD7[TR0BW-IDXM] = VFRATE01.TS-FRGT-CHG-AMT[6];
    TR0BW01.TR0BW-VAR-FLD8[TR0BW-IDXM] = VFRATE01.TS-FRGT-CHG-AMT[7];
  end

  TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM + 1;


   /* ******************** End Of TR0BS-07 ***********************/
end // end TR0BS-07

// Select DTRANS.VTSLOC01
Function TR0BS-08()
   /* ------------------------------------------------------------*/
   /* Select DTRANS.VTSLOC01*/
   /* ------------------------------------------------------------*/

  TR0BW00.TR0BW-ERR = "N";


  call "IO2350" ("S ", SQLCA, TSCREC) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/


  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      TR0BW00.TR0BW-ERR = "Y";
      return;
    end

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BS-04(); /* purge TSQ*/
      TR0BW00.XXXMSGNO = 11; /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      TR0BW00.XXXMSGNO = 10; /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    end


    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "S-02   "; /* Process name*/
    TR0BW00.XXXPRCNM = "S-02   "; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";

    if (TR0BW00.TR0BW-MAP-IND == "1")
      TA1REC.TA1MAP = "TR0BM001"; /* Map name*/
    else
      TA1REC.TA1MAP = "TR0BM002"; /* Map name*/
    end

    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VTSLOC01"; /* Table view name*/
    TA1REC.TA1TBLKE = TSCREC.TSCKEY; /* Table key*/


    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/


    exit stack; /* Return to previous process*/

  end


   /* **                                                       ***/
   /* ****************** End of TR0BS-08 *************************/
end // end TR0BS-08

// Format M002 Headings
Function TR0BS-09()
   /* ----------------------------------------------------------------*/
   /* Set up Header fields for TR0BM002.*/
   /* ----------------------------------------------------------------*/

  if (TR0BW00.YMTCD == "VL") /* Set up 'VL' Headings*/

    TR0BM002.TR0BM-HDG2-VAR1 = " 20 ";

    TR0BM002.TR0BM-HDG1-VAR2 = " 20 ";
    TR0BM002.TR0BM-HDG2-VAR2 = "DDC ";

    TR0BM002.TR0BM-HDG2-VAR3 = " 40 ";

    TR0BM002.TR0BM-HDG1-VAR4 = " 40 ";
    TR0BM002.TR0BM-HDG2-VAR4 = "DDC ";

    TR0BM002.TR0BM-HDG2-VAR5 = " HC ";

    TR0BM002.TR0BM-HDG1-VAR6 = " HC ";
    TR0BM002.TR0BM-HDG2-VAR6 = "DDC ";

    TR0BM002.TR0BM-HDG2-VAR7 = " 45 ";

    TR0BM002.TR0BM-HDG1-VAR8 = " 45 ";
    TR0BM002.TR0BM-HDG2-VAR8 = "DDC ";

  else

    TR0BM002.TR0BM-HDG2-VAR1 = "MIN ";

    TR0BM002.TR0BM-HDG1-VAR2 = " KG ";
    TR0BM002.TR0BM-HDG2-VAR2 = "-45 ";

    TR0BM002.TR0BM-HDG1-VAR3 = " KG ";
    TR0BM002.TR0BM-HDG2-VAR3 = " 45 ";

    TR0BM002.TR0BM-HDG1-VAR4 = " KG ";
    TR0BM002.TR0BM-HDG2-VAR4 = "100 ";

    TR0BM002.TR0BM-HDG1-VAR5 = " KG ";
    TR0BM002.TR0BM-HDG2-VAR5 = "300 ";

    TR0BM002.TR0BM-HDG1-VAR6 = " KG ";
    TR0BM002.TR0BM-HDG2-VAR6 = "500 ";

    TR0BM002.TR0BM-HDG1-VAR7 = " KG ";
    TR0BM002.TR0BM-HDG2-VAR7 = "1000";

    TR0BM002.TR0BM-HDG1-VAR8 = " KG ";
    TR0BM002.TR0BM-HDG2-VAR8 = "3000";

  end

   /* **                                                        ***/
   /* ******************** End of TR0BS-09 ************************/
end // end TR0BS-09

// Format M002 Details for 'VL'
Function TR0BS-10()
   /* ----------------------------------------------------------------*/
   /* Move TSQ fields for 'VL' into TR0BM002.*/
   /* ----------------------------------------------------------------*/

  TR0BM002.TS-CARR-GRP-CD[TR0BW-IDXM] = TR0BW01.TS-CARR-GRP-CD[TR0BW-IDXM];

  TR0BM002.TSEORIG[TR0BW-IDXM] = TR0BW01.TSEORIG[TR0BW-IDXM];

  TR0BM002.TSEDEST[TR0BW-IDXM] = TR0BW01.TSEDEST[TR0BW-IDXM];


  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD1[TR0BW-IDXM];
  TR0BS-13(); /* format number*/
  TR0BM002.TR0BM-VAR-FLD1[TR0BW-IDXM] = TR0BW00.TR0BW-CHA-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD2[TR0BW-IDXM];
  TR0BS-13(); /* format number*/
  TR0BM002.TR0BM-VAR-FLD2[TR0BW-IDXM] = TR0BW00.TR0BW-CHA-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD3[TR0BW-IDXM];
  TR0BS-13(); /* format number*/
  TR0BM002.TR0BM-VAR-FLD3[TR0BW-IDXM] = TR0BW00.TR0BW-CHA-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD4[TR0BW-IDXM];
  TR0BS-13(); /* format number*/
  TR0BM002.TR0BM-VAR-FLD4[TR0BW-IDXM] = TR0BW00.TR0BW-CHA-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD5[TR0BW-IDXM];
  TR0BS-13(); /* format number*/
  TR0BM002.TR0BM-VAR-FLD5[TR0BW-IDXM] = TR0BW00.TR0BW-CHA-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD6[TR0BW-IDXM];
  TR0BS-13(); /* format number*/
  TR0BM002.TR0BM-VAR-FLD6[TR0BW-IDXM] = TR0BW00.TR0BW-CHA-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD7[TR0BW-IDXM];
  TR0BS-13(); /* format number*/
  TR0BM002.TR0BM-VAR-FLD7[TR0BW-IDXM] = TR0BW00.TR0BW-CHA-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD8[TR0BW-IDXM];
  TR0BS-13(); /* format number*/
  TR0BM002.TR0BM-VAR-FLD8[TR0BW-IDXM] = TR0BW00.TR0BW-CHA-NBR;


  TR0BM002.TR0BM-LESS-CNTNR-CHG[TR0BW-IDXM] = TR0BW01.TS-LESS-CNTNR-CHG[TR0BW-IDXM];

  TR0BM002.TR0BM-CNSLD-SRCHG-AMT[TR0BW-IDXM] = TR0BW01.TS-CNSLD-SRCHG-AMT[TR0BW-IDXM];

  TR0BM002.TR0BM-TSFDMISC[TR0BW-IDXM] = TR0BW01.TSFDMISC[TR0BW-IDXM];

  TR0BM002.TR0BM-TSFOCAF[TR0BW-IDXM] = TR0BW01.TSFOCAF[TR0BW-IDXM];

  TR0BM002.TR0BM-TSFOBAF[TR0BW-IDXM] = TR0BW01.TSFOBAF[TR0BW-IDXM];

   /* **                                                        ***/
   /* ******************** End of TR0BS-10 ************************/
end // end TR0BS-10

// Format M002 Details for 'AF'
Function TR0BS-11()
   /* ----------------------------------------------------------------*/
   /* Move TSQ fields for 'AF' into TR0BM002.*/
   /* ----------------------------------------------------------------*/

  TR0BM002.TS-CARR-GRP-CD[TR0BW-IDXM] = TR0BW01.TS-CARR-GRP-CD[TR0BW-IDXM];

  TR0BM002.TSEORIG[TR0BW-IDXM] = TR0BW01.TSEORIG[TR0BW-IDXM];

  TR0BM002.TSEDEST[TR0BW-IDXM] = TR0BW01.TSEDEST[TR0BW-IDXM];


  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD1[TR0BW-IDXM];
  TR0BS-13(); /* format number*/
  TR0BM002.TR0BM-VAR-FLD1[TR0BW-IDXM] = TR0BW00.TR0BW-CHA-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD2[TR0BW-IDXM];
  TR0BS-14(); /* format decimal nbr*/
  TR0BM002.TR0BM-VAR-FLD2[TR0BW-IDXM] = TR0BW00.TR0BW-DEC-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD3[TR0BW-IDXM];
  TR0BS-14(); /* format decimal nbr*/
  TR0BM002.TR0BM-VAR-FLD3[TR0BW-IDXM] = TR0BW00.TR0BW-DEC-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD4[TR0BW-IDXM];
  TR0BS-14(); /* format decimal nbr*/
  TR0BM002.TR0BM-VAR-FLD4[TR0BW-IDXM] = TR0BW00.TR0BW-DEC-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD5[TR0BW-IDXM];
  TR0BS-14(); /* format decimal nbr*/
  TR0BM002.TR0BM-VAR-FLD5[TR0BW-IDXM] = TR0BW00.TR0BW-DEC-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD6[TR0BW-IDXM];
  TR0BS-14(); /* format decimal nbr*/
  TR0BM002.TR0BM-VAR-FLD6[TR0BW-IDXM] = TR0BW00.TR0BW-DEC-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD7[TR0BW-IDXM];
  TR0BS-14(); /* format decimal nbr*/
  TR0BM002.TR0BM-VAR-FLD7[TR0BW-IDXM] = TR0BW00.TR0BW-DEC-NBR;

  TR0BW00.TR0BW-2PT-DECIMAL = TR0BW01.TR0BW-VAR-FLD8[TR0BW-IDXM];
  TR0BS-14(); /* format decimal nbr*/
  TR0BM002.TR0BM-VAR-FLD8[TR0BW-IDXM] = TR0BW00.TR0BW-DEC-NBR;


  TR0BM002.TR0BM-LESS-CNTNR-CHG[TR0BW-IDXM] = TR0BW01.TS-LESS-CNTNR-CHG[TR0BW-IDXM];

  TR0BM002.TR0BM-CNSLD-SRCHG-AMT[TR0BW-IDXM] = TR0BW01.TS-CNSLD-SRCHG-AMT[TR0BW-IDXM];

  TR0BM002.TR0BM-TSFDMISC[TR0BW-IDXM] = TR0BW01.TSFDMISC[TR0BW-IDXM];

  TR0BM002.TR0BM-TSFOCAF[TR0BW-IDXM] = TR0BW01.TSFOCAF[TR0BW-IDXM];

  TR0BM002.TR0BM-TSFOBAF[TR0BW-IDXM] = TR0BW01.TSFOBAF[TR0BW-IDXM];

   /* **                                                        ***/
   /* ******************** End of TR0BS-11 ************************/
end // end TR0BS-11

// Select DTRANS.VTSCAR01
Function TR0BS-12()
   /* ------------------------------------------------------------*/
   /* Select DTRANS.VTSCAR01*/
   /* ------------------------------------------------------------*/

  TR0BW00.TR0BW-ERR = "N";


  call "IO2340" ("S ", SQLCA, TSAREC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE != 0)

    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      TR0BW00.TR0BW-ERR = "Y";
      return;
    end

    if (SQLCA.VAGen_SQLCODE == -911)

      TR0BW00.TR0BW-MAP-ERR = "Y";
      TR0BW00.XXXMSGNO = 11; /* Resource not available*/
      TA1REC.TA1FUNC = "POST"; /* Warning*/
      exit stack;

    else

      TR0BW00.XXXMSGNO = 10; /* System error*/
      TA1REC.TA1FUNC = "RETN"; /* Terminate*/

      converseLib.clearScreen();
      
      converseLib.clearScreen();

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "S-07   "; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TR0BM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VTSCAR01"; /* Table view name*/
    TA1REC.TA1TBLKE = TSAREC.TSAKEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TR0BM001.XXXPRCNM = "S-07   "; /* Process name*/
    TR0BM002.XXXPRCNM = "S-07   "; /* Process name*/

    return; /* Return to previous process*/

  end


   /* **                                                       ***/
   /* ****************** End of TR0BS-12 *************************/
end // end TR0BS-12

// Format numbers
Function TR0BS-13()
   /* ----------------------------------------------------------------*/
   /* Format numbers for TR0BM002.*/
   /* ----------------------------------------------------------------*/

  TR0BW00.TR0BW-CHA-WHOLE-PART = TR0BW00.TR0BW-WHOLE-PART;

  if (TR0BW-CHA-1000 == "0")
    TR0BW-CHA-1000 = " ";
    if (TR0BW-CHA-100 == "0")
      TR0BW-CHA-100 = " ";
      if (TR0BW-CHA-10 == "0")
        TR0BW-CHA-10 = " ";
        if (TR0BW-CHA-1 == "0")
          TR0BW-CHA-1 = " ";
        end
      end
    end
  end

   /* **                                                        ***/
   /* ******************** End of TR0BS-13 ************************/
end // end TR0BS-13

// Format decimal nbrs
Function TR0BS-14()
   /* ----------------------------------------------------------------*/
   /* Format decimal numbers for TR0BM002.*/
   /* ----------------------------------------------------------------*/

  TR0BW00.TR0BW-CHA-WHOLE-PART = TR0BW00.TR0BW-WHOLE-PART;
  TR0BW00.TR0BW-DEC-WHOLE-PART = TR0BW00.TR0BW-CHA-1;
  TR0BW00.TR0BW-DECIMAL-POINT = ".";
  TR0BW00.TR0BW-DEC-DEC-PART = TR0BW00.TR0BW-DEC-PART;

   /* **                                                        ***/
   /* ******************** End of TR0BS-14 ************************/
end // end TR0BS-14

// Select Unique DTRANS.VFRATE01
Function TR0BS-15()
   /* ------------------------------------------------------------*/
   /* Select the row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7000" ("S ", SQLCA, VFRATE01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TR0BW00.XXXPRCNM = "S-10   "; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 11; /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    exit stack;

  else

    TR0BW00.XXXMSGNO = 10; /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = TR0BW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRATE01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* **                                                        ***/
   /* ******************** End of TR0BS-15 ************************/
end // end TR0BS-15

// Select Unique DCORP.VZFC0001
Function TR0BS-16()
   /* ------------------------------------------------------------*/
   /* Validate Currency Codes*/
   /* ------------------------------------------------------------*/

  TR0BW00.TR0BW-ERR = "N";

   /* ------------------------------------------------------------*/
   /* Select the row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "DC0060" ("S ", SQLCA, VZFC0001) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/
    TR0BW00.TR0BW-ERR = "Y";
    return;
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TR0BW00.XXXPRCNM = "S-11   "; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 11; /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    exit stack;

  else

    TR0BW00.XXXMSGNO = 10; /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = TR0BW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VZFC0001"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* **                                                        ***/
   /* ******************** End of TR0BS-16 ************************/
end // end TR0BS-16

// Set map fields AUTOSKIP
Function TR0BS-17()
    /* --------------------------------------------------*/
    /* Set all map attributes to AUTOSKIP*/
    /* --------------------------------------------------*/

  if (TR0BW00.TR0BW-MAP-IND == "3")

    set TR0BM003.TS-CARR-GRP-CD skip, cursor;
    set TR0BM003.TSDCONTR skip;
    set TR0BM003.TSEORIG skip;
    set TR0BM003.TSEDEST skip;
    set TR0BM003.TS-ORIG-CRCY-CD skip;
    set TR0BM003.TS-DEST-CRCY-CD skip;
    set TR0BM003.TSDBEGDT skip;
    set TR0BM003.TSDENDDT skip;
    set TR0BM003.YDTCD skip;
    set TR0BM003.YSTCD skip;
    set TR0BM003.YMTCD skip;
    set TR0BM003.XGPCD skip;

    set TR0BM003.TS-FRGT-CHG-AMT[1] skip;
    set TR0BM003.TS-20FT-DEST-CHG skip;
    set TR0BM003.TS-FRGT-CHG-AMT[2] skip;
    set TR0BM003.TS-40FT-DEST-CHG skip;
    set TR0BM003.TS-FRGT-CHG-AMT[3] skip;
    set TR0BM003.TS-HICUBE-DEST-CHG skip;
    set TR0BM003.TS-FRGT-CHG-AMT[4] skip;
    set TR0BM003.TS-45FT-DEST-CHG skip;
    set TR0BM003.TS-LESS-CNTNR-CHG skip;
    set TR0BM003.TS-CNSLD-SRCHG-AMT skip;
    set TR0BM003.TSFDMISC skip;
    set TR0BM003.TSFOCAF skip;
    set TR0BM003.TSFOBAF skip;

  else

    set TR0BM004.TS-CARR-GRP-CD skip, cursor;
    set TR0BM004.TSDCONTR skip;
    set TR0BM004.TSEORIG skip;
    set TR0BM004.TSEDEST skip;
    set TR0BM004.TS-ORIG-CRCY-CD skip;
    set TR0BM004.TS-DEST-CRCY-CD skip;
    set TR0BM004.TSDBEGDT skip;
    set TR0BM004.TSDENDDT skip;
    set TR0BM004.YDTCD skip;
    set TR0BM004.YSTCD skip;
    set TR0BM004.YMTCD skip;
    set TR0BM004.XGPCD skip;

    set TR0BM004.TS-FRGT-MIN-CHGAMT skip;
    set TR0BM004.TS-FRGT-CHG-AMT[1] skip;
    set TR0BM004.TS-FRGT-CHG-AMT[2] skip;
    set TR0BM004.TS-FRGT-CHG-AMT[3] skip;
    set TR0BM004.TS-FRGT-CHG-AMT[4] skip;
    set TR0BM004.TS-FRGT-CHG-AMT[5] skip;
    set TR0BM004.TS-FRGT-CHG-AMT[6] skip;
    set TR0BM004.TS-FRGT-CHG-AMT[7] skip;
    set TR0BM004.TS-LESS-CNTNR-CHG skip;
    set TR0BM004.TS-CNSLD-SRCHG-AMT skip;
    set TR0BM004.TSFDMISC skip;
    set TR0BM004.TSFOCAF skip;
    set TR0BM004.TSFOBAF skip;

  end


   /* **                                                        ***/
   /* ***************** End of TR0BS-17 ***************************/
end // end TR0BS-17

// Verify DATE
Function TR0BS-18()
   /* ------------------------------------------------------------*/
   /* Verify DATE*/
   /* ------------------------------------------------------------*/

  TR0BW00.TR0BW-ERR = "N";

  TA2REC.TA2DTOPT = "GREGGREG";


  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};


  if (TA2REC.TA2RTNCD == 0)
    return;
  else
    TR0BW00.XXXMSGNO = 57;
    TR0BW00.TR0BW-ERR = "Y";
    TR0BW00.XXXPRCNM = "S-24   ";
  end


   /* **                                                            ***/
   /* ****************** End of TR0BS-18 ******************************/
end // end TR0BS-18

// Add    DTRANS.VFRATE01
Function TR0BS-19()
   /* ------------------------------------------------------------*/
   /* Add row to the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7000" ("A ", SQLCA, VFRATE01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TR0BW00.XXXPRCNM = "S-14   "; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 11; /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    exit stack;

  else

    TR0BW00.XXXMSGNO = 10; /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = TR0BW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRATE01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* **                                                        ***/
   /* ******************** End of TR0BS-19 ************************/
end // end TR0BS-19

// Update DTRANS.VFRATE01
Function TR0BS-20()
   /* ------------------------------------------------------------*/
   /* Update the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7000" ("U ", SQLCA, VFRATE01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TR0BW00.XXXPRCNM = "S-15   "; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 11; /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    exit stack;

  else

    TR0BW00.XXXMSGNO = 10; /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = TR0BW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRATE01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* **                                                        ***/
   /* ******************** End of TR0BS-20 ************************/
end // end TR0BS-20

// Delete DTRANS.VFRATE01
Function TR0BS-21()
   /* ------------------------------------------------------------*/
   /* Delete row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7000" ("D ", SQLCA, VFRATE01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TR0BW00.XXXPRCNM = "S-16   "; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 11; /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    exit stack;

  else

    TR0BW00.XXXMSGNO = 10; /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = TR0BW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRATE01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* **                                                        ***/
   /* ******************** End of TR0BS-21 ************************/
end // end TR0BS-21

// Delete (W02) DTRANS.VFRATE01
Function TR0BS-22()
   /* ------------------------------------------------------------*/
   /* Delete old-key row from the table.*/
   /* This is executed when a key has changed for an update.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7000" ("D ", SQLCA, TR0BW02) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TR0BW00.XXXPRCNM = "S-16   "; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BW00.XXXMSGNO = 11; /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    exit stack;

  else

    TR0BW00.XXXMSGNO = 10; /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = TR0BW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRATE01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* **                                                        ***/
   /* ******************** End of TR0BS-22 ************************/
end // end TR0BS-22

// Update TR0BW02 search key
Function TR0BS-23()
   /* ------------------------------------------------------------*/
   /* Move changed key data to TR0BW02 (VFRATE01 mirror)*/
   /* ------------------------------------------------------------*/

  TR0BW02.TS-CARR-GRP-CD = VFRATE01.TS-CARR-GRP-CD;
  TR0BW02.TSDCONTR = VFRATE01.TSDCONTR;
  TR0BW02.TSEORIG = VFRATE01.TSEORIG;
  TR0BW02.TSEDEST = VFRATE01.TSEDEST;

  TR0BW02.YDTCD = VFRATE01.YDTCD;
  TR0BW02.XGPCD = VFRATE01.XGPCD;
  TR0BW02.TSDBEGDT = VFRATE01.TSDBEGDT;
  TR0BW02.TSDENDDT = VFRATE01.TSDENDDT;



   /* ******************** End of TR0BS-23 ***********************/
end // end TR0BS-23

// Check for existing contract
Function TR0BS-24()
   /* ------------------------------------------------------------*/
   /* Check for existing contract*/
   /* ------------------------------------------------------------*/

  TR0BS-01(); /* Select set and open cursor*/

  while (TR0BW00.TR0BW-EOF == "N") /* Perform until end of cursor*/
    TR0BS-02(); /* Fetch selected rows*/
    if (SQLCA.VAGen_SQLCODE == 0)

      if (TR0BW00.TR0BW-UPD-TYP == "U")
        if (TR0BW02.VFRATE01-GROUP != VFRATE01.VFRATE01-GROUP)
          if (((TR0BW03.TSDBEGDT >= VFRATE01.TSDBEGDT
           && TR0BW03.TSDBEGDT <= VFRATE01.TSDENDDT)
           || (TR0BW03.TSDENDDT >= VFRATE01.TSDBEGDT
           && TR0BW03.TSDENDDT <= VFRATE01.TSDENDDT)
           || (TR0BW03.TSDBEGDT <= VFRATE01.TSDBEGDT
           && TR0BW03.TSDENDDT >= VFRATE01.TSDENDDT))
           && TR0BW03.YDTCD == VFRATE01.YDTCD)
            TR0BW00.TR0BW-DATA = "Y"; /* Contract exists*/
            TR0BW00.TR0BW-EOF = "Y"; /* End loop*/
          end
        end
      else
        if (((TR0BW02.TSDBEGDT >= VFRATE01.TSDBEGDT
         && TR0BW02.TSDBEGDT <= VFRATE01.TSDENDDT)
         || (TR0BW02.TSDENDDT >= VFRATE01.TSDBEGDT
         && TR0BW02.TSDENDDT <= VFRATE01.TSDENDDT)
         || (TR0BW02.TSDBEGDT <= VFRATE01.TSDBEGDT
         && TR0BW02.TSDENDDT >= VFRATE01.TSDENDDT))
         && TR0BW02.YDTCD == VFRATE01.YDTCD)
          TR0BW00.TR0BW-DATA = "Y"; /* Contract exists*/
          TR0BW00.TR0BW-EOF = "Y"; /* End loop*/
        end

      end
    end
  end

  TR0BS-03(); /* Close the selected set cursor*/


   /* **                                                        ***/
   /* ********************* End of TR0B-S24 ***********************/
end // end TR0BS-24

// Count DTRANS.VFRATE01
Function TR0BS-25()

  set TS1REC empty;

  TS1REC.TS1FUNC = "SC";
   /* ------------------------------------------------------------*/
   /* Count rows from VFRATE01 table according to the data entered.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7000" (TS1REC, SQLCA, VFRATE01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TR0BW00.XXXPRCNM = "S-01   "; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TR0BW00.TR0BW-MAP-ERR = "Y";
    TR0BS-04(); /* purge TSQ*/
    TR0BW00.XXXMSGNO = 11; /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    TR0BW00.XXXMSGNO = 10; /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  end

   /* SET TR0BM001 CLEAR;              /* Clear screen before display*/
   /* SET TR0BM002 CLEAR;              /* Clear screen before display*/

   /* MOVE 'S-01' TO TR0BM001.XXXPRCNM;*/
   /* MOVE TR0BW00.YMTCD TO TR0BM001.TR0BM-HDR-YMTCD;*/
   /* MOVE TR0BW00.XGPCD TO TR0BM001.TR0BM-HDR-XGPCD;*/
   /* MOVE TR0BW00.TSACARCD TO TR0BM001.TR0BM-HDR-TSACARCD;*/
   /* MOVE TR0BW00.TSEORIG TO TR0BM001.TR0BM-HDR-TSEORIG;*/
   /* MOVE TR0BW00.TSEDEST TO TR0BM001.TR0BM-HDR-TSEDEST;*/
   /* MOVE TR0BW00.TR0BW-HDR-BEGDT TO TR0BM001.TR0BM-HDR-TSDBEGDT;*/

   /* MOVE 'S-01' TO TR0BM002.XXXPRCNM;*/
   /* MOVE TR0BW00.YMTCD TO TR0BM002.TR0BM-HDR-YMTCD;*/
   /* MOVE TR0BW00.XGPCD TO TR0BM002.TR0BM-HDR-XGPCD;*/
   /* MOVE TR0BW00.TSACARCD TO TR0BM002.TR0BM-HDR-TSACARCD;*/
   /* MOVE TR0BW00.TSEORIG TO TR0BM002.TR0BM-HDR-TSEORIG;*/
   /* MOVE TR0BW00.TSEDEST TO TR0BM002.TR0BM-HDR-TSEDEST;*/
   /* MOVE TR0BW00.TR0BW-HDR-BEGDT TO TR0BM002.TR0BM-HDR-TSDBEGDT;*/

   /* WHILE TR0BW00.TR0BW-IDXM LE 14;*/
    /* SET TR0BM001.TR0BM-CONT-SEL(TR0BW-IDXM) AUTOSKIP,DARK;*/
    /* SET TR0BM002.TR0BM-CONT-SEL(TR0BW-IDXM) AUTOSKIP,DARK;*/
    /* TR0BW00.TR0BW-IDXM = TR0BW00.TR0BW-IDXM + 1;*/
   /* END;*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = TR0BW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRATE01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* **                                                        ***/
   /* ******************** End of TR0BS-01 ************************/
end // end TR0BS-25

//*** RECORD=TR0BW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record TR0BW00 type basicRecord
  10 TR0BW-COUNT-DATA TR0BW-COUNT-DATA ; 
  10 TR0BW-FIRST TR0BW-FIRST ; 
  10 TR0BW-IDXM TR0BW-IDXM ; 
  10 TR0BW-IDXS TR0BW-IDXS ; 
  10 TR0BW-EOF TR0BW-EOF ; 
  10 TR0BW-EXIT TR0BW-EXIT ; 
  10 TR0BW-MAP TR0BW-MAP ; 
  10 TR0BW-REQ TR0BW-REQ ; 
  10 TR0BW-SEL TR0BW-SEL ; 
  10 TR0BW-ERR TR0BW-ERR ; 
  10 TR0BW-MAP-ERR TR0BW-MAP-ERR ; 
  10 TR0BW-DATA TR0BW-DATA ; 
  10 TR0BW-CHG TR0BW-CHG ; 
  10 TR0BW-KEY-CHG TR0BW-KEY-CHG ; 
  10 TR0BW-CONF TR0BW-CONF ; 
  10 TR0BW-UPD-TYP TR0BW-UPD-TYP ; 
  10 TR0BW-PRV-UPD-TYP TR0BW-PRV-UPD-TYP ; 
  10 TR0BW-MAP-IND TR0BW-MAP-IND ; 
  10 XXXMSGNO XXXMSGNO ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 XXXPRCNM XXXPRCNM ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 TR0BW-SELECTION TR0BW-SELECTION ; 
    15 YMTCD YMTCD ; 
    15 XGPCD XGPCD ; 
    15 TSACARCD TSACARCD ; 
    15 YSTCD YSTCD ; 
    15 TSEORIG TSEORIG ; 
    15 TSEDEST TSEDEST ; 
    15 TSDBEGDT TSDBEGDT ; 
    15 TS-CARR-GRP-CD TS-CARR-GRP-CD ; 
    15 TR0BW-HDR-BEGDT TR0BW-HDR-BEGDT ; 
  10 TR0BW-BEGDT TR0BW-BEGDT ; 
  10 TR0BW-ENDDT TR0BW-ENDDT ; 
  10 TR0BW-MATH TR0BW-MATH ; 
  10 * char(1) ; 
  10 TR0BW-DATE TR0BW-DATE ; 
    15 TR0BW-CCC TR0BW-CCC ; 
    15 TR0BW-YY TR0BW-YY ; 
    15 TR0BW-MM TR0BW-MM ; 
    15 TR0BW-DD TR0BW-DD ; 
  10 TR0BW-FMT-DATE TR0BW-FMT-DATE ; 
    15 TR0BW-FMT-MM TR0BW-FMT-MM ; 
    15 TR0BW-FMT-DD TR0BW-FMT-DD ; 
    15 TR0BW-FMT-YY TR0BW-FMT-YY ; 
  10 TR0BW-UPD-DATE TR0BW-UPD-DATE ; 
    15 TR0BW-UPD-MM TR0BW-UPD-MM ; 
    15 TR0BW-UPD-SL1 TR0BW-UPD-SL1 ; 
    15 TR0BW-UPD-DD TR0BW-UPD-DD ; 
    15 TR0BW-UPD-SL2 TR0BW-UPD-SL2 ; 
    15 TR0BW-UPD-YY TR0BW-UPD-YY ; 
  10 * char(1) ; 
  10 TR0BW-2PT-DECIMAL TR0BW-2PT-DECIMAL ; 
    15 TR0BW-WHOLE-PART TR0BW-WHOLE-PART ; 
    15 TR0BW-DEC-PART TR0BW-DEC-PART ; 
  10 * char(1) ; 
  10 TR0BW-CHAR-NBR TR0BW-CHAR-NBR ; 
    15 TR0BW-CHA-WHOLE-PART TR0BW-CHA-WHOLE-PART ; 
      20 TR0BW-CHA-LDG-ZEROS TR0BW-CHA-LDG-ZEROS ; 
      20 TR0BW-CHA-NBR TR0BW-CHA-NBR ; 
        25 TR0BW-CHA-1000 TR0BW-CHA-1000 ; 
        25 TR0BW-CHA-100 TR0BW-CHA-100 ; 
        25 TR0BW-CHA-10 TR0BW-CHA-10 ; 
        25 TR0BW-CHA-1 TR0BW-CHA-1 ; 
    15 TR0BW-CHA-DEC-PART TR0BW-CHA-DEC-PART ; 
  10 * char(1) ; 
  10 TR0BW-DEC-NBR TR0BW-DEC-NBR ; 
    15 TR0BW-DEC-WHOLE-PART TR0BW-DEC-WHOLE-PART ; 
    15 TR0BW-DECIMAL-POINT TR0BW-DECIMAL-POINT ; 
    15 TR0BW-DEC-DEC-PART TR0BW-DEC-DEC-PART ; 
end // end TR0BW00

//*** RECORD=TR0BW01 ****
// **************** TEMPORARY STORAGE RECORD ******************
// **                                                        **
// **  Record Name:         TR0BW01                          **
// **                                                        **
// **  This is the Temporary Storage Record for all maps     **
// **  used in TR0B.                                         **
// **                                                        **
// ************************************************************
// ***********************
Record TR0BW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 TR0BW-TSQ-REC TR0BW-TSQ-REC [14] ; 
    10 TR0BW-CONT-SEL TR0BW-CONT-SEL ; 
    10 XGPCD XGPCD ; 
    10 TS-CARR-GRP-CD TS-CARR-GRP-CD ; 
    10 TSDCONTR TSDCONTR ; 
    10 TSEORIG TSEORIG ; 
    10 TSEOCTY TSEOCTY ; 
    10 TSEDEST TSEDEST ; 
    10 TSEDCTY TSEDCTY ; 
    10 TSDBEGDT TSDBEGDT ; 
    10 TSDENDDT TSDENDDT ; 
    10 YDTCD YDTCD ; 
    10 YSTCD YSTCD ; 
    10 TR0BW-VAR-FLD1 TR0BW-VAR-FLD1 ; 
    10 TR0BW-VAR-FLD2 TR0BW-VAR-FLD2 ; 
    10 TR0BW-VAR-FLD3 TR0BW-VAR-FLD3 ; 
    10 TR0BW-VAR-FLD4 TR0BW-VAR-FLD4 ; 
    10 TR0BW-VAR-FLD5 TR0BW-VAR-FLD5 ; 
    10 TR0BW-VAR-FLD6 TR0BW-VAR-FLD6 ; 
    10 TR0BW-VAR-FLD7 TR0BW-VAR-FLD7 ; 
    10 TR0BW-VAR-FLD8 TR0BW-VAR-FLD8 ; 
    10 TS-LESS-CNTNR-CHG TS-LESS-CNTNR-CHG ; 
    10 TS-CNSLD-SRCHG-AMT TS-CNSLD-SRCHG-AMT ; 
    10 TSFDMISC TSFDMISC ; 
    10 TSFOCAF TSFOCAF ; 
    10 TSFOBAF TSFOBAF ; 
end // end TR0BW01

//*** RECORD=TR0BW02 ****
// ******************** saved VFRATE01 ************************
// 
// THIS IS A MIRROR IMAGE OF VFRATE01 TO BE USED AS A HOLDING
// AREA WHEN DOING TEST CALLS TO DTRANS.VFRATE01.
// 
// !!! NOTE:  KEEP IN SYNCH WITH VFRATE01 !!!
// 
// 
// DATE CREATED:        10/28/93
// 
// MAINTENANCE LOG:
// 
//   DATE    USERID     COMMENT
// --------  ------     ---------------------------------------
// 10-28-93  NMASTE     INITIAL RECORD CREATION
// ***********************
Record TR0BW02 type basicRecord
  5 VFRATE01-GROUP VFRATE01-GROUP ; 
    10 XGPCD XGPCD ; 
    10 YMTCD YMTCD ; 
    10 TS-CARR-GRP-CD TS-CARR-GRP-CD ; 
    10 TSDCONTR TSDCONTR ; 
    10 TSEORIG TSEORIG ; 
    10 TS-ORIG-CRCY-CD TS-ORIG-CRCY-CD ; 
    10 TSEDEST TSEDEST ; 
    10 TS-DEST-CRCY-CD TS-DEST-CRCY-CD ; 
    10 TSDBEGDT TSDBEGDT ; 
    10 TSDENDDT TSDENDDT ; 
    10 YSTCD YSTCD ; 
    10 YDTCD YDTCD ; 
    10 TS-FRGT-MIN-CHGAMT TS-FRGT-MIN-CHGAMT ; 
    10 TS-FRGT-CHG-AMT TS-FRGT-CHG-AMT [7] ; 
    10 TS-20FT-DEST-CHG TS-20FT-DEST-CHG ; 
    10 TS-40FT-DEST-CHG TS-40FT-DEST-CHG ; 
    10 TS-HICUBE-DEST-CHG TS-HICUBE-DEST-CHG ; 
    10 TS-45FT-DEST-CHG TS-45FT-DEST-CHG ; 
    10 TS-LESS-CNTNR-CHG TS-LESS-CNTNR-CHG ; 
    10 TS-CNSLD-SRCHG-AMT TS-CNSLD-SRCHG-AMT ; 
    10 TSFDMISC TSFDMISC ; 
    10 TSFOCAF TSFOCAF ; 
    10 TSFOBAF TSFOBAF ; 
    10 TS-PAIR-COST-AMT TS-PAIR-COST-AMT ; 
    10 XXXUSRID XXXUSRID ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-SETUP-HHMM ZZ-SETUP-HHMM ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
    10 * char(8) ; 
end // end TR0BW02

//*** RECORD=TR0BW03 ****
// ******************** saved VFRATE01 ************************
// 
// THIS IS A MIRROR IMAGE OF VFRATE01 TO BE USED AS A HOLDING
// AREA WHEN DOING TEST CALLS TO DTRANS.VFRATE01.
// 
// !!! NOTE:  KEEP IN SYNCH WITH VFRATE01 !!!
// 
// 
// DATE CREATED:        10/28/93
// 
// MAINTENANCE LOG:
// 
//   DATE    USERID     COMMENT
// --------  ------     ---------------------------------------
// 10-28-93  NMASTE     INITIAL RECORD CREATION
// ***********************
Record TR0BW03 type basicRecord
  5 VFRATE01-GROUP VFRATE01-GROUP ; 
    10 XGPCD XGPCD ; 
    10 YMTCD YMTCD ; 
    10 TS-CARR-GRP-CD TS-CARR-GRP-CD ; 
    10 TSDCONTR TSDCONTR ; 
    10 TSEORIG TSEORIG ; 
    10 TS-ORIG-CRCY-CD TS-ORIG-CRCY-CD ; 
    10 TSEDEST TSEDEST ; 
    10 TS-DEST-CRCY-CD TS-DEST-CRCY-CD ; 
    10 TSDBEGDT TSDBEGDT ; 
    10 TSDENDDT TSDENDDT ; 
    10 YSTCD YSTCD ; 
    10 YDTCD YDTCD ; 
    10 TS-FRGT-MIN-CHGAMT TS-FRGT-MIN-CHGAMT ; 
    10 TS-FRGT-CHG-AMT TS-FRGT-CHG-AMT [7] ; 
    10 TS-20FT-DEST-CHG TS-20FT-DEST-CHG ; 
    10 TS-40FT-DEST-CHG TS-40FT-DEST-CHG ; 
    10 TS-HICUBE-DEST-CHG TS-HICUBE-DEST-CHG ; 
    10 TS-45FT-DEST-CHG TS-45FT-DEST-CHG ; 
    10 TS-LESS-CNTNR-CHG TS-LESS-CNTNR-CHG ; 
    10 TS-CNSLD-SRCHG-AMT TS-CNSLD-SRCHG-AMT ; 
    10 TSFDMISC TSFDMISC ; 
    10 TSFOCAF TSFOCAF ; 
    10 TSFOBAF TSFOBAF ; 
    10 TS-PAIR-COST-AMT TS-PAIR-COST-AMT ; 
    10 XXXUSRID XXXUSRID ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-SETUP-HHMM ZZ-SETUP-HHMM ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
    10 * char(8) ; 
end // end TR0BW03

//*** RECORD=TS1REC ****
// Function parameter to call IO7000
// **********************
Record TS1REC type basicRecord
  5 TS1GROUP TS1GROUP ; 
    10 TS1FUNC TS1FUNC ; 
    10 TS1COUNT TS1COUNT ; 
end // end TS1REC

// 2-part decimal nbr
DataItem TR0BW-2PT-DECIMAL num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-BEGDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-CCC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-CHA-1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-CHA-10 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-CHA-100 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-CHA-1000 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-CHA-DEC-PART num(2,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-CHA-LDG-ZEROS char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-CHA-NBR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-CHA-WHOLE-PART num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 2-part char decimal nbr
DataItem TR0BW-CHAR-NBR char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Data Changed Flag
DataItem TR0BW-CHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Confirmation Screen Flag
DataItem TR0BW-CONF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XGP_GPC_CD
DataItem TR0BW-CONT-SEL char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Count VFRATE01
DataItem TR0BW-COUNT-DATA int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data Exists Flag
DataItem TR0BW-DATA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-DATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-DEC-DEC-PART num(2,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-DEC-NBR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-DEC-PART num(2,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-DEC-WHOLE-PART char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-DECIMAL-POINT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-ENDDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// End of File
DataItem TR0BW-EOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Error Flag
DataItem TR0BW-ERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Exit Application Flag
DataItem TR0BW-EXIT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// First Time Ind
DataItem TR0BW-FIRST char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-FMT-DATE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-FMT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-FMT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-FMT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-HDR-BEGDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Map Index
DataItem TR0BW-IDXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Save Map Index
DataItem TR0BW-IDXS smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Data Key was Changed
DataItem TR0BW-KEY-CHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format Map Request Flag
DataItem TR0BW-MAP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map Error Flag
DataItem TR0BW-MAP-ERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map Display Indicator
DataItem TR0BW-MAP-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Math area
DataItem TR0BW-MATH num(7,4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Previous Update Type Indicator
DataItem TR0BW-PRV-UPD-TYP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// New Data Request Flag
DataItem TR0BW-REQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Line Selection Flag
DataItem TR0BW-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-SELECTION char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// data record for temp. storage
DataItem TR0BW-TSQ-REC char(152)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-UPD-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-UPD-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-UPD-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-UPD-SL1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-UPD-SL2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Update Type Indicator
DataItem TR0BW-UPD-TYP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TR0BW-UPD-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-VAR-FLD1 decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-VAR-FLD2 decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-VAR-FLD3 decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-VAR-FLD4 decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-VAR-FLD5 decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-VAR-FLD6 decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-VAR-FLD7 decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-VAR-FLD8 decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-WHOLE-PART num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TR0BW-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// count of VFRATE01
DataItem TS1COUNT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// function of IO7000
DataItem TS1FUNC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Parameter to call IO7000
DataItem TS1GROUP char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

