package pi0e;

import corpcom3.XPTA0P;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import pi.common.*;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TA6REC;
import ta.common.TAEREC;
import ta.common.TARJCL;
//*** PROGRAM=PI0E ****
// This application displays the Background Job Request Menu
// screen and subordinate Background Job Submission screens.
// 
// The menu is displayed for the user to select the jobs to be
// submitted.  Another available selection allows the user to
// view the available printers and change the printed output
// destination.
// 
// Job Control Language statements are formatted and submitted
// through the Background Job Request Subroutine (TA0P).
// The job executes in batch and all output is routed to the
// remote destination specified through this application.
// 
// The JCL for each job is stored as a table.
// There are two formats available for a JCL statement.
// They are either a fixed or a variable format.
// 
// A fixed statement is identified in the table by a blank JCL
// statement type (TARTYPE).  These statements are written
// directly to the internal reader with no changes.
// 
// Variable statements are those that contain data that may
// change each time the job is submitted.  They are identified
// by a non-blank statement type.  The type determines the data
// that is to be substituted and the columns into which it is
// to be placed.  The data in working storage is substituted
// and the statement is written to the internal reader.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, from the menu, only.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      10/15/90  jcampb  New application.
// e0000    05/21/91  jcampb  add month end submittal option
// pi1015   03/27/92  jlucas  put in security tbl pi0etbl for
//                            month end submittal.
// pi00     04/06/92  jlucas  correct parm member in pioet03
//                             s0080
// pi00     05/04/92  jlucas  have end of month always show up
//                             in map pi0em99
// pi00     06/29/92  jlucas  add jdanie to pi0et04 to be allow
//                            to submit pi1171
// pi#13    07/28/92  jlucas  add steps pi1102 & pi1112 to
//                            month end jcl(brand code report)
// pi1010   08/27/92  jlucas  comment out steps 9 thru 12 in
//                            pi0et03.
// pi00     09/11/92  jlucas  add gdg = +1 to steps 14 & 15
//                            in pi0et03
// pi00     10/15/92  mchow   remove sy2rec from table list, as
//                            it is not used in PI0E.
// PI1018   10/19/91  JLUCAS  chg steps 14 & 15 in pi0et03,
//                            proc pi1051 & pi1151 have changed
// PI#0     12/10/92  RMORGA  restart using prior year in the
//                            month end reports.
// 1h002    07/21/93  tharr1  remove dd dummy jcl stmts from
//                            PI0ET03. obsolite extract deleted
// PI#0     10/11/93  hkempe  Changed to follow Nike's standard
//                            way of submitting job online -
//                            PI0E030, PI0E040, PI0ES-TA0230,
//                            PI0ET01, PI0ET02, PI0EW01,
//                            PI0EW02, TA3REC.
// 1H0000   11/05/93  THARR1  Remove month-end job submission.
// PI00     01/24/94  JLUCAS  REMOVE UT1REC FROM PI0E FOR IT IS
//                            NOT USED
// PI9001   02/25/94  HKEMPE  Generate/Compile to use revised
//                            COMMAREA.
// *********************
Program PI0E type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PI00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  PI0EW01 PI0EW01; // record
  PI0EW02 PI0EW02; // record
  PIWREC PIWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PI0ET01; // table
  use PI0ET02; // table
  use PI0ET03; // table
  //use PI0ET04; // table
  use PI0EM.PI0EM099, // form
  		PI0EM.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    PI0E000: PI0E000();
     /* ------------------------------------------------------------*/
     /* Initialize the working storage areas and variables.*/
     /* ------------------------------------------------------------*/
    ;
    set TA0PM001 initial; /* M001 input/output*/
    set PI0EM099 initial; /* M099 input/output*/
    set PI0EW01 empty; /* Working storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA6REC empty; /* Background job subroutine parameters*/
    ;
     /* ------------------------------------------------------------*/
     /* Indicate that the report distribution must be obtained.*/
     /* ------------------------------------------------------------*/
    ;
    TA6REC.TA6SUBSW = "I"; /* Obtain distribution information*/
    ;
     /* ------------------------------------------------------------*/
     /* Indicate the number of selection lines on the menu.*/
     /* ------------------------------------------------------------*/
    ;
    PI0EW01.PI0EWIXL = 3; /* Number of selection lines*/
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto PI0E001; /* Converse the main process*/
    ;
    ;
    PI0E001: PI0E001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto PI0E001; /* Converse the main process*/
    ;
    ;
  end // end main
end // end PI0E

// Application initialization
Function PI0E000()
   /* ------------------------------------------------------------*/
   /* Ensure that the COMMAREA has been properly formatted.*/
   /* ------------------------------------------------------------*/
  ;
  XSENTRY(); /* Application entry validation*/
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the segmented transaction identification.*/
   /* ------------------------------------------------------------*/
  ;
  XSSEGTR(); /* Set transaction identification*/
  ;
   /* ------------------------------------------------------------*/
   /* If control was passed to this transaction from another*/
   /* within the same application system, restore the work record*/
   /* from the COMMAREA.  Otherwise, initialize the work record.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CAFRMSYS == COMMAREA.CACURSYS) /* Same system*/
    ;
    PIWREC.CAUSERA = COMMAREA.CAUSERA; /* Restore work record*/
  else
    set PIWREC empty; /* Initialize work record area*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Initialize CSP special function data items.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleHardIOErrors = 1; /* Return all file errors*/
  converseVar.commitOnConverse = 1; /* Commit on every converse*/
  ;
end // end PI0E000

// Main process to display a map
Function PI0E001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Invoke the process for each selection entered on menu.*/
   /* 2) After all selections are processed, display the menu.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (PI0EW01.PI0EWSWX != "Y") /* EXIT not requested*/
    ;
    if (PI0EW01.PI0EMSEL[1] == "S" /* Line 2 was selected*/
     || TA6REC.TA6SUBSW == "I")    /* or information requested*/
      ;
      PI0E010(); /* Specify report distribution*/
      ;
    end
    ;
    if (PI0EW01.PI0EMSEL[2] == "S") /* Line 2 was selected*/
      PI0E030(); /* print paircount apparel  report*/
    end
    ;
    if (PI0EW01.PI0EMSEL[3] == "S") /* Line 3 was selected*/
      PI0E040(); /* print paircount footwear report*/
    end
    ;
  end
  ;
  PI0EW01.PI0EWSWX = "N"; /* Reset exit requested switch*/
  ;
  PI0E990(); /* Report Request Menu*/
  ;
  ;
end // end PI0E001

// Specify output destination
Function PI0E010()
   /* ------------------------------------------------------------*/
   /* Obtain and/or display the report distribution for the user.*/
   /* ------------------------------------------------------------*/
  ;
  XPTA0P(); /* Report distribution information*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, indicate the selected function is completed.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (TA6REC.TA6RTNCD == "0") /* Normal return*/
      ;
      if (TA6REC.TA6SUBSW == "I") /* Obtain information only*/
        ;
        TA6REC.TA6SUBSW = "N"; /* Indicate information obtained*/
      else
        PI0EW01.PI0EMSEL[1] = "*"; /* Indicate function completed*/
        ;
      end
      ;
      return; /* Return to previous process*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If user cancelled request, indicate function cancelled.*/
    /* ------------------------------------------------------------*/
    ;
    if (TA6REC.TA6RTNCD == "1") /* User cancelled request*/
      ;
      PI0EW01.PI0EMSEL[1] = "C"; /* Indicate function cancelled*/
      ;
      return; /* Return to previous process*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PIWREC.XXXMODID = "010"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  ;
end // end PI0E010

// format jcl for apparel rpt
Function PI0E030()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/
  ;
  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  ;
  PI0EW01.PI0EWIXT = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  ;
  PI0ES-TA0230();
  ;
  if (TA3REC.TA3RGNID == "03") /* PROD region*/
    PI0EW01.PI0EWIXT = 1; /* Input table index*/
  else
    ;
    if ("/*EOF" in PI0ET01.TARJCL) /* TEST region*/
      PI0EW01.PI0EWIXT = sysVar.arrayIndex;
      PI0EW01.PI0EWIXT = PI0EW01.PI0EWIXT + 1; /* Input table index*/
    else
      PI0EW01.PI0EWIXT = 1; /* Input table index*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (PI0EW01.PI0EWIXT > 0) /* Until end of table*/
    ;
    if (PI0ET01.TARTYPE[PI0EWIXT] == "D") /* dsnT/dsnD statement*/
      ;
      /* ------------------------------------------------------------*/
      /* Format dsnT/dsnD system statement*/
      /* ------------------------------------------------------------*/
      ;
      set PI0EW02 empty;
      ;
      PI0EW02.TARJCL = PI0ET01.TARJCL[PI0EWIXT];
      ;
      if (TA3REC.TA3RGNID == "04"
       || TA3REC.TA3RGNID == "08")
        PI0EW02.PI0EW-DSN = "T"; /* dsnT region*/
      else
        PI0EW02.PI0EW-DSN = "D"; /* dsnD region*/
      end
      ;
      PI0ET01.TARJCL[PI0EWIXT] = PI0EW02.TARJCL;
      ;
    end
    ;
    TA6REC.TARJCL[TA6INDEX] = PI0ET01.TARJCL[PI0EWIXT];
    TA6REC.TARTYPE[TA6INDEX] = PI0ET01.TARTYPE[PI0EWIXT];
    ;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/
    ;
    if (PI0ET01.TARJCL[PI0EWIXT] == "/*EOF") /* End of table*/
      PI0EW01.PI0EWIXT = 0; /* Indicate end of table*/
    else
      PI0EW01.PI0EWIXT = PI0EW01.PI0EWIXT + 1; /* Increment index*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  PIWREC.XXXMODID = "030"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    PI0EW01.PI0EMSEL[2] = "*"; /* Indicate function completed*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PI0E030

// format jcl for footwear rpt
Function PI0E040()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/
  ;
  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  ;
  PI0EW01.PI0EWIXT = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  ;
  PI0ES-TA0230();
  ;
  if (TA3REC.TA3RGNID == "03") /* PROD region*/
    PI0EW01.PI0EWIXT = 1; /* Input table index*/
  else
    ;
    if ("/*EOF" in PI0ET02.TARJCL) /* TEST region*/
      PI0EW01.PI0EWIXT = sysVar.arrayIndex;
      PI0EW01.PI0EWIXT = PI0EW01.PI0EWIXT + 1; /* Input table index*/
    else
      PI0EW01.PI0EWIXT = 1; /* Input table index*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (PI0EW01.PI0EWIXT > 0) /* Until end of table*/
    ;
    if (PI0ET02.TARTYPE[PI0EWIXT] == "D") /* dsnT/dsnD statement*/
      ;
      /* ------------------------------------------------------------*/
      /* Format dsnT/dsnD system statement*/
      /* ------------------------------------------------------------*/
      ;
      set PI0EW02 empty;
      ;
      PI0EW02.TARJCL = PI0ET02.TARJCL[PI0EWIXT];
      ;
      if (TA3REC.TA3RGNID == "04"
       || TA3REC.TA3RGNID == "08")
        PI0EW02.PI0EW-DSN = "T"; /* dsnT region*/
      else
        PI0EW02.PI0EW-DSN = "D"; /* dsnD region*/
      end
      ;
      PI0ET02.TARJCL[PI0EWIXT] = PI0EW02.TARJCL;
      ;
    end
    ;
    TA6REC.TARJCL[TA6INDEX] = PI0ET02.TARJCL[PI0EWIXT];
    TA6REC.TARTYPE[TA6INDEX] = PI0ET02.TARTYPE[PI0EWIXT];
    ;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/
    ;
    if (PI0ET02.TARJCL[PI0EWIXT] == "/*EOF") /* End of table*/
      PI0EW01.PI0EWIXT = 0; /* Indicate end of table*/
    else
      PI0EW01.PI0EWIXT = PI0EW01.PI0EWIXT + 1; /* Increment index*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  PIWREC.XXXMODID = "040"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    PI0EW01.PI0EMSEL[3] = "*"; /* Indicate function completed*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PI0E040

// Report Request Menu
Function PI0E990()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  PI0E991(); /* Format and display the map*/
  ;
  PI0E992(); /* Check attention identifier*/
  ;
  PI0E993(); /* Reset fields to normal intensity*/
  ;
  PI0E994(); /* Verify the data that was entered*/
  ;
  PI0E995(); /* Process valid input request*/
  ;
  ;
end // end PI0E990

// Format and display the map
Function PI0E991()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  PIWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  ;
    /* ------------------------------------------------------------*/
     /* format the map output area.*/
    /* ------------------------------------------------------------*/
  ;
  set PI0EM099 initial; /* M099 input/output*/
  ;
  PI0EW01.PI0EWIXM = 1; /* Initialize map index*/
  ;
  while (PI0EW01.PI0EWIXM <= PI0EW01.PI0EWIXL) /* Until end of array*/
    ;
    PI0EM099.PI0EMSEL[PI0EWIXM] = PI0EW01.PI0EMSEL[PI0EWIXM];
    ;
    PI0EW01.PI0EWIXM = PI0EW01.PI0EWIXM + 1; /* Increment index*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  PI0EM099.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  PI0EM099.CATOAP = COMMAREA.CATOAP; /* TO application*/
  PI0EM099.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (PIWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (PIWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (PIWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(PIWREC.XXXMSGNO);
      end /* Message number*/
    else
      PI0EM099.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    PI0EM099.XXXMODID = PIWREC.XXXMODID; /* Module identification*/
    ;
    set PI0EM099 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse PI0EM099 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  PIWREC.XXXMSGNO = 0; /* Message number*/
  PIWREC.XXXMODID = " "; /* Module identification*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = PI0EM099.CATOAP; /* TO application*/
  COMMAREA.CAITEM = PI0EM099.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* reset selection fields in working storage*/
   /* ------------------------------------------------------------*/
  ;
  PI0EW01.PI0EWIXM = 1; /* Initialize map index*/
  ;
  while (PI0EW01.PI0EWIXM <= PI0EW01.PI0EWIXL) /* Until end of array*/
    ;
    PI0EW01.PI0EMSEL[PI0EWIXM] = " "; /* Reset entry*/
    PI0EW01.PI0EWIXM = PI0EW01.PI0EWIXM + 1; /* Increment index*/
    ;
  end
  ;
  ;
end // end PI0E991

// Check attention identifier
Function PI0E992()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set PI0EM099 initial; /* M099 input/output*/
    ;
    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/
    ;
    PI0ES99(); /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      PI0ES00(); /* Exit to another application*/
      ;
      set PI0EM099.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      PIWREC.XXXMODID = "992"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    PI0ES99(); /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "PI0EM099"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      if (COMMAREA.CAFROMAP == "PI0C")
        COMMAREA.CATOAP = "PI0C"; /* TO application*/
      else
        if (COMMAREA.CAFROMAP == "PI0D")
          COMMAREA.CATOAP = "PI0D"; /* TO application*/
        else
          COMMAREA.CATOAP = "PI0A"; /* TO application*/
        end
      end
    end
    ;
    PI0ES00(); /* Exit to another application*/
    ;
    COMMAREA.CATOAP = " "; /* Clear TO application*/
    ;
    PI0ES99(); /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    PIWREC.XXXMODID = "992"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    PI0ES99(); /* Exit to display map*/
    ;
  end
  ;
  ;
end // end PI0E992

// Reset highlighted fields
Function PI0E993()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  PI0EW01.PI0EWIXM = 1; /* Initialize index*/
  ;
  while (PI0EW01.PI0EWIXM <= PI0EW01.PI0EWIXL) /* Until all lines are reset*/
    ;
    set PI0EM099.PI0EMSEL[PI0EWIXM] initialAttributes; /* Reset select field*/
    ;
    PI0EW01.PI0EWIXM = PI0EW01.PI0EWIXM + 1; /* Increment line index*/
    ;
  end
  ;
  set PI0EM099.CATOAP initialAttributes; /* TO application*/
  set PI0EM099.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end PI0E993

// Verify the entered data
Function PI0E994()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CAITEM > " ") /* Application data was entered*/
    ;
    PIWREC.XXXMODID = "994"; /* Module identification*/
    set PI0EM099.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Check for proper select tag.*/
   /* ------------------------------------------------------------*/
  ;
  PI0EW01.PI0EWIXM = PI0EW01.PI0EWIXL; /* Initialize line index*/
  ;
  while (PI0EW01.PI0EWIXM > 0) /* Until all lines are verified*/
    ;
    /* ------------------------------------------------------------*/
     /* Indicate an error if the line was not selected properly.*/
    /* ------------------------------------------------------------*/
    ;
    if (PI0EM099.PI0EMSEL[PI0EWIXM] != PI0EW01.PI0EMSEL[PI0EWIXM]
     && PI0EM099.PI0EMSEL[PI0EWIXM] != " " /* Line was selected*/
     && PI0EM099.PI0EMSEL[PI0EWIXM] != "S" /* and not with an "S"*/
     && PI0EM099.PI0EMSEL[PI0EWIXM] != "X" /* and not with an "x"*/
     && PI0EM099.PI0EMSEL[PI0EWIXM] != "*") /* and not with an "*"*/
      ;
      PIWREC.XXXMODID = "994"; /* Module identification*/
      set PI0EM099.PI0EMSEL[PI0EWIXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(13); /* Only "S" is may be entered*/
      ;
    end
    ;
    PI0EW01.PI0EWIXM = PI0EW01.PI0EWIXM - 1; /* Decrement line number*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Exit to display the map if any error was found.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    PI0ES99(); /* Exit to display map*/
  end
  ;
  ;
end // end PI0E994

// Process valid input request
Function PI0E995()
   /* ------------------------------------------------------------*/
   /* Save the selections in the working storage array.*/
   /* ------------------------------------------------------------*/
  ;
  move PI0EM099.PI0EMSEL to PI0EW01.PI0EMSEL[1] for all; /* Menu selections*/
  ;
   /* ------------------------------------------------------------*/
   /* If specify destination selected, indicate to subroutine to*/
   /* display output destination, but, do not submit any JCL.*/
   /* ------------------------------------------------------------*/
  ;
  if (PI0EW01.PI0EMSEL[1] == "S") /* Specify destination selected*/
    TA6REC.TA6SUBSW = "N"; /* Indicate do not submit JCL*/
  end
  ;
  ;
end // end PI0E995

// Close selected set cursor
Function PI0ES-TA0230()
   /* ------------------------------------------------------------*/
   /* FIND WHICH ENVIRONMENT CURRENT PROGRAM IS RUNNING IN*/
   /*  */
   /* PRODUCTION REGION CAUSES PRODUCTION JCL TO BE EXECUTED,*/
   /* TEST REGION CAUSES TEST JCL TO BE EXECUTED USING DSNT OR DSND.*/
   /*  */
   /* ALL VERSIONS OF JCL ARE FOUND IN TS09T01*/
   /*  */
   /* ------------------------------------------------------------*/
  ;
  set TA3REC empty;
  ;
  TA3REC.TA3OPTN = "ASSIGN";
  ;
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA3REC.TA3RTNCD == 0)         
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA3REC.TA3GROUP; /* Subroutine parameters*/
  ;
  PIWREC.XXXMODID = "030"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "FIND CICS REGION";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PIWREC.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M002"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PI0ES-TA0230

// exit to another appl
Function PI0ES00()
   /* ------------------------------------------------------------*/
   /* Set the application to be invoked for PF1 or PF4.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    COMMAREA.CATOAP = "GD01"; /* Indicate Goal Documentation*/
  end
  ;
  if (converseVar.eventKey is pf4) /* PF4 was pressed*/
    COMMAREA.CATOAP = "MN0M"; /* Indicate Master Menu*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Save the application user area in the COMMAREA.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CATOSYS == COMMAREA.CACURSYS) /* Same system*/
    ;
    COMMAREA.CAUSERA = PIWREC.CAUSERA; /* Save user area*/
  else
    COMMAREA.CAUSERA = " "; /* Clear user area*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Transfer control to the specified application.*/
   /* ------------------------------------------------------------*/
  ;
  XSEXIT(); /* Exit to another application*/
  ;
   /* ------------------------------------------------------------*/
   /* Reestablish the COMMAREA application and item fields.*/
   /* ------------------------------------------------------------*/
  ;
  COMMAREA.CAEZSG3 = "0"; /* Force zero third character*/
  COMMAREA.CACURRAP = COMMAREA.CAEZSAP; /* CURR application*/
  ;
  if (converseVar.eventKey is pfkey) /* PF key was pressed*/
    ;
    COMMAREA.CATOAP = " "; /* Clear TO application*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = " "; /* Clear map name from item*/
    end
    ;
  end
  ;
  ;
end // end PI0ES00

// Clear selections and exit
Function PI0ES99()
   /* ------------------------------------------------------------*/
   /* Reset any pending selections in working storage.*/
   /* ------------------------------------------------------------*/
  ;
  PI0EW01.PI0EWIXM = 1; /* Initialize map index*/
  ;
  while (PI0EW01.PI0EWIXM <= PI0EW01.PI0EWIXL) /* Until end of array*/
    ;
    if (PI0EW01.PI0EMSEL[PI0EWIXM] == "S") /* Entry is selected*/
      PI0EW01.PI0EMSEL[PI0EWIXM] = " "; /* Reset entry*/
    end
    ;
    PI0EW01.PI0EWIXM = PI0EW01.PI0EWIXM + 1; /* Increment index*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Exit to display the selection menu map.*/
   /* ------------------------------------------------------------*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PI0ES99

//*** RECORD=PI0EW01 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record PI0EW01 type basicRecord
  10 PI0EMSEL PI0EMSEL [98] ; 
  10 PI0EWIXL PI0EWIXL ; 
  10 PI0EWIXM PI0EWIXM ; 
  10 PI0EWSWX PI0EWSWX ; 
  10 PI0EWSDT PI0EWSDT ; 
    15 PI0EWSCC PI0EWSCC ; 
    15 PI0EWSYY PI0EWSYY ; 
    15 PI0EWSMM PI0EWSMM ; 
    15 PI0EWSDD PI0EWSDD ; 
  10 PI0EWIXT PI0EWIXT ; 
end // end PI0EW01

//*** RECORD=PI0EW02 ****
// JCL SYSTSIN card
// ***********************
Record PI0EW02 type basicRecord
  5 TARJCL TARJCL ; 
    10 * char(14) ; // DSN SYSTEM(DSN
    10 PI0EW-DSN PI0EW-DSN ; 
    10 * char(1) ; // )
    10 * char(64) ; 
end // end PI0EW02

// Menu selection field
DataItem PI0EMSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// T or D
DataItem PI0EW-DSN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Limit for map fields index
DataItem PI0EWIXL smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem PI0EWIXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Limit for table fields index
DataItem PI0EWIXT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// system cc
DataItem PI0EWSCC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// system dd
DataItem PI0EWSDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// system date
DataItem PI0EWSDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// system mm
DataItem PI0EWSMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Exit requested switch
DataItem PI0EWSWX char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// system yy
DataItem PI0EWSYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

