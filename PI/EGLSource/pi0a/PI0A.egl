package pi0a;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import pi.common.*;
import xx06.*;
//*** PROGRAM=PI0A ****
// This application displays the Development Model Menu.
// It provides entry to the subordinate applications.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      10/15/90  jcampb  New application.
// 1H0005   09/15/93  tharr1  Add option 4. FCST MDLN (from AL)
// 1H0005   11/05/93  tharr1  Remove  option 4. FCST MODELING
// PI9001   02/25/94  hkempe  Generate/Compile to use revised
//                            COMMAREA.
// *********************
Program PI0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PI00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  PIWREC PIWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PI0AT01 {deleteAfterUse = yes}; // table
  use PI0AM.PI0AM010 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    PI0A000: PI0A000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set PI0AM010 initial; /* M010 input/output*/
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto PI0A001; /* Converse the main process*/
    ;
    ;
    PI0A001: PI0A001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto PI0A001; /* Converse the main process*/
    ;
    ;
  end // end main
end // end PI0A

// Application initialization
Function PI0A000()
   /* ------------------------------------------------------------*/
   /* Ensure that the COMMAREA has been properly formatted.*/
   /* ------------------------------------------------------------*/
  ;
  XSENTRY(); /* Application entry validation*/
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the segmented transaction identification.*/
   /* ------------------------------------------------------------*/
  ;
  XSSEGTR(); /* Set transaction identification*/
  ;
   /* ------------------------------------------------------------*/
   /* If control was passed to this transaction from another*/
   /* within the same application system, restore the work record*/
   /* from the COMMAREA.  Otherwise, initialize the work record.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CAFRMSYS == COMMAREA.CACURSYS) /* Same system*/
    ;
    PIWREC.CAUSERA = COMMAREA.CAUSERA; /* Restore work record*/
  else
    set PIWREC empty; /* Initialize work record area*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Initialize CSP special function data items.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleHardIOErrors = 1; /* Return all file errors*/
  converseVar.commitOnConverse = 1; /* Commit on every converse*/
  ;
  ;
end // end PI0A000

// Main process to display a map
Function PI0A001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  PI0A100(); /* Format and display the map*/
  ;
  PI0A200(); /* Check attention identifier*/
  ;
  PI0A300(); /* Reset fields to normal intensity*/
  ;
  PI0A400(); /* Verify the data that was entered*/
  ;
  PI0A500(); /* Process valid input request*/
  ;
  ;
end // end PI0A001

// Format and converse the map
Function PI0A100()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    PIWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  PI0AM010.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  PI0AM010.CATOAP = COMMAREA.CATOAP; /* TO application*/
  PI0AM010.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (PIWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (PIWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (PIWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(PIWREC.XXXMSGNO);
      end /* Message number*/
    else
      PI0AM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    PI0AM010.XXXMODID = PIWREC.XXXMODID; /* Module identification*/
    ;
    set PI0AM010 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse PI0AM010 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  PIWREC.XXXMODID = " "; /* Module identification*/
  PIWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = PI0AM010.CATOAP; /* TO application*/
  COMMAREA.CAITEM = PI0AM010.CAITEM; /* Application data*/
  ;
  ;
end // end PI0A100

// Check attention identifier
Function PI0A200()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (PI0AM010.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      PI0AS00(); /* Exit to another application*/
      ;
      set PI0AM010.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      PIWREC.XXXMODID = "300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "PI0AM010"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
    end
    ;
    PI0AS00(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    PIWREC.XXXMODID = "300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end PI0A200

// Reset highlighted fields
Function PI0A300()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set PI0AM010.PI0AMSEL initialAttributes; /* Menu selection*/
  set PI0AM010.CATOAP initialAttributes; /* FAST PATH to application*/
  set PI0AM010.CAITEM initialAttributes; /* FAST PATH application data*/
  ;
end // end PI0A300

// Verify data that was entered
Function PI0A400()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CAITEM > " ") /* Application data was entered*/
    ;
    PIWREC.XXXMODID = "500"; /* Module identification*/
    set PI0AM010.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Indicate only with FAST PATH*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify the menu selection that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (PI0AM010.PI0AMSEL in PI0AT01.PI0AMSEL) /* Selection in table*/
    ;
     /* NEXT SENTENCE*/
    ;
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not found, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/
    ;
    PIWREC.XXXMODID = "500"; /* Module identification*/
    set PI0AM010.PI0AMSEL cursor, bold; /* Highlight*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end PI0A400

// Process valid input request
Function PI0A500()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* ------------------------------------------------------------*/
  ;
  if (PI0AM010.PI0AMSEL in PI0AT01.PI0AMSEL)
    COMMAREA.CATOAP = PI0AT01.CATOAP[sysVar.arrayIndex];
  end
  ;
  PI0AS00(); /* Exit to another application*/
  ;
   /* ------------------------------------------------------------*/
   /* If the request failed, display the returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  COMMAREA.CATOAP = " "; /* TO application*/
  ;
  set PI0AM010.PI0AMSEL cursor, bold; /* Highlight*/
  ;
  ;
end // end PI0A500

// Exit to another application
Function PI0AS00()
   /* ------------------------------------------------------------*/
   /* Set the application to be invoked for PF1 or PF4.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    COMMAREA.CATOAP = "GD01"; /* Indicate Goal Documentation*/
  end
  ;
  if (converseVar.eventKey is pf4) /* PF4 was pressed*/
    COMMAREA.CATOAP = "MN0M"; /* Indicate Master Menu*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Save the application user area in the COMMAREA.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CATOSYS == COMMAREA.CACURSYS) /* Same system*/
    ;
    COMMAREA.CAUSERA = PIWREC.CAUSERA; /* Save user area*/
  else
    COMMAREA.CAUSERA = " "; /* Clear user area*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Transfer control to the specified application.*/
   /* ------------------------------------------------------------*/
  ;
  XSEXIT(); /* Exit to another application*/
  ;
   /* ------------------------------------------------------------*/
   /* Reestablish the COMMAREA application and item fields.*/
   /* ------------------------------------------------------------*/
  ;
  COMMAREA.CAEZSG3 = "0"; /* Force zero third character*/
  COMMAREA.CACURRAP = COMMAREA.CAEZSAP; /* CURR application*/
  ;
  if (converseVar.eventKey is pfkey) /* PF key was pressed*/
    ;
    COMMAREA.CATOAP = " "; /* Clear TO application*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = " "; /* Clear map name from item*/
    end
    ;
  end
  ;
  ;
end // end PI0AS00

