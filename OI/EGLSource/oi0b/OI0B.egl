package oi0b;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import fk.common.*;
import fy.common.*;
import in1.common.*;
import ku.common.*;
import ob.common.*;
import oi.common.*;
import om.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import pw.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import ts.common.*;
import ww.common.*;
//*** PROGRAM=OI0B ****
// ************************************************************
// *
// * application: oi0b - traffic alert
// *
// * this application builds screens from the expedite order
// * tag table.  the user may select a line from the built
// * directory to view detail order information and/or update
// * the carrier code for the order.  fast path is provided
// * on both the directory and detail screen.
// *
// * selection fields are provided on the directory screen
// * for reselection purposes.
// *
// * maint log
// * ref       whern    who      what
// * -------- -------- -------- -------------------------------
// * 00000000 08/28/87 snoble   original creation
// *          10/20/87 jvande   subscript prob in sab
// *          01/25/87 craine   still a subscript problem in
// *                            sab - chg to use oi0bws1 to set
// *                            the select code in ws table,
// *                            instead of using ezetst (ezetst
// *                            is the map subscript, oi0bws1
// *                            is the ws table subscript in
// *                            oi0bsab.
// *          12/02/88 jwood    added noncsp opt to calls
// *          01/09/89 dwalke   add segemented transaction id
// *                            to appl.
// *          05/12/89          db2 structure changes
// *          03/06/90 skott    fix diags for -811 in szk
// *          08/29/90 dflesh   added taken by and need date to
// *                            map 005 (grp 210 & smb). also
// *                            chngd grp 010.
// *          10/04/90 dviert   deleted op9rec from rec list -
// *                            tag logic no longer needed
// *          02/15/91 dmeier   regen for database changes
// *          11/09/93 gcalki   db2 changes - kulrec xxxaddr
// *                            changed to xxx-addr.
// *          04/06/94 schase   Changed oi0bm001, oi0b001, and
// *                            oi0b100 to interface with OP0X
// *                            Appl.
// *          07/07/97 LRAO     Changed OI0BM001 to accomadate
// *                            three chars for 'CNT' field.
// *                            Populated OI0BWSMX with 250
// *                            instaed of 98 in OI0B010 SGRP.
// *                            Also changed the following vari
// *                            ables from 98 to 250 in OCCURS:
// *                            OI0BWSEL, OI0BWAWT, OI0BWTUN
// *                            and OIBGROUP.
// *          04/09/98 OVAZQU   *** For warehouse 51 only ***
// *                            Add a lookup of the DCMS order
// *                            status on the Mirror Pick Pool
// *                            for all allocations of the
// *                            order/sub. An edit error # 368
// *                            will "stop" carrier cd changes
// *                            for any order that is not com-
// *                            pletely in "spaces" (pre-DCMS
// *                            status) or "A" (allocation
// *                            status).
// * retrofit 12/07/98 OVAZQU   *** For warehouse 51 only ***
// *                            Do not do DCMS carrier change
// *                            edit unless gpc cd = '03'.
// * retrofit 12/07/98 OVAZQU   *** For warehouse 51 only ***
// *                            Remove gpc cd check (see above)
// * TT#9997  01/18/01 Rshaik   WEP1301 record structure has
// *                            changed Pl.Refer WEP1301 prolog
// ************************************************************
// *********************
Program OI0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KULREC KULREC; // record
  KUYREC KUYREC; // record
  OI0BW01 OI0BW01; // record
  OI0BW02 OI0BW02; // record
  OIBREC OIBREC; // record
  OMBREC OMBREC; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  OP4REC OP4REC; // record
  OP5REC OP5REC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  TA1REC TA1REC; // record
  TF1REC TF1REC; // record
  WEP1301 WEP1301; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCTTBL {deleteAfterUse = yes}; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use XOSTBL {deleteAfterUse = yes}; // table
  use XPPTBL {deleteAfterUse = yes}; // table
  use OI0BM.OI0BM001,  // forms
      OI0BM.OI0BM005
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OI0B001: OI0B001();
  end // end main
end // end OI0B

// program control
Function OI0B001()
   /* *************************************************************/

      /* this process controls program execution*/

   /* *************************************************************/



  if (COMMAREA.CASYSINT != "CSP")
    COMMAREA.CASYSINT = "CSP";
    COMMAREA.CAUSERID = "DEMO";
    COMMAREA.XWHCD = "04";
    COMMAREA.CAFROMAP = "OP0X";
    COMMAREA.CACURRAP = "OI0B";
  end

  XSENTRY(); /* check entry security*/

   /* ****************************************************/
   /* *** set segmented trans id                      ****/
   /* ****************************************************/

  COMMAREA.CAEZSAP = sysVar.transactionID;
  COMMAREA.CAEZSG12 = "OI";
  COMMAREA.CAEZSG4 = "B";
  sysVar.transactionID = COMMAREA.CAEZSAP;

   /* *************************************************************/
  OI0B010(); /* init areas*/

     /* build table only if warehouse is valid*/

  if (OI0BM001.XWHCD > " " /* is warehouse valid?*/
   && OI0BM001.XWHCD != "99"
   && OI0BM001.XWHCD in XWHTBL.XWHCD)
    OI0B020(); /* control screen table build*/
    OI0B030(); /* control screen build*/
  else
    set OI0BM001.XWHCD cursor, modified, bold;
    converseLib.validationFailed(078); /* warehouse is not valid*/
  end

  OI0BW01.OI0BWM1F = "N";
  while (OI0BW01.OI0BWM1F == "N")
    OI0B100(); /* control summary screen usage*/
  end



   /* *************************************************************/
end // end OI0B001

// init pgm areas
Function OI0B010()
   /* *************************************************************/

      /* initialize program work areas*/

   /* *************************************************************/


      /* set global csp controls*/

  VGVar.handleHardIOErrors = 1; /* set return on error*/
  converseVar.commitOnConverse = 1; /* set commit on converse*/

      /* clear working storage records*/

  set SQLCA empty;
  set KULREC empty;
  set OIBREC empty;
  set OMBREC empty;
  set OP1REC empty;
  set OP2REC empty;
  set OP4REC empty;
  set OP5REC empty;
  set SY1REC empty;
  set TA1REC empty;
  set TF1REC empty;
  set KUYREC empty;
  set OI0BW01 empty;
  set OI0BW02 empty;
  set XX0XW01 empty;
  OI0BW01.OI0BWSSM = 14; /* summary screen max entries*/
  OI0BW01.OI0BWSMX = 250; /* table max*/


      /* clear maps initially*/

  set OI0BM001 initial;
  set OI0BM005 initial;


      /* init ta1rec areas*/

  TA1REC.TA1TYPE = "DB2 ";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1PGMNM = "OI0B";


      /* set up warehouse*/

  if (COMMAREA.XWHCD > " "
   && COMMAREA.XWHCD < "99")
    OI0BW01.XWHCD = COMMAREA.XWHCD;
    OI0BM001.XWHCD = COMMAREA.XWHCD;
    if (COMMAREA.XWHCD in XWHTBL.XWHCD)
      OI0BW01.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
      OI0BM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
    end
  end



   /* *************************************************************/
end // end OI0B010

// build screen array control
Function OI0B020()
   /* *************************************************************/

      /* control the screen table building process*/

   /* *************************************************************/



  set OIBREC empty;
  set OI0BW02 empty;
  OI0BW01.OI0BWPON = " "; /* clear prev ord nbr*/

      /* set up record stat selection*/

  if (OI0BM001.OI0BMNSL <= " ") /* blank sel code*/
    OIBREC.OIARECST = "A"; /* set low rec stat*/
    OI0BW02.OIARECST = "V"; /* set hi rec stat*/
  else
    if (OI0BM001.OI0BMNSL == "*") /* all sel code*/
      OIBREC.OIARECST = " "; /* set low rec stat*/
      OI0BW02.OIARECST = "9"; /* set hi rec stat*/
    else
      OIBREC.OIARECST = OI0BM001.OI0BMNSL; /* set lo rec stat*/
      OI0BW02.OIARECST = OI0BM001.OI0BMNSL; /* set hi rec stat*/
    end
  end

      /* set up warehouse, company and short name selection*/

  OIBREC.XWHCD = OI0BM001.XWHCD; /* warehouse*/
  OIBREC.KUCCOID = OI0BM001.OI0BMNCO; /* company*/
  if (OI0BM001.OI0BMNNM <= " ") /* if blank*/
    OIBREC.KUMSTSNM = "*"; /* generic short name*/
  else
    OIBREC.KUMSTSNM = OI0BM001.OI0BMNNM; /* short name*/
  end

      /* set indexes for table load/reload*/

  OI0BW01.OI0BWSCM = 0; /* reset curr table max*/
  OI0BW01.OI0BWSSS = 1; /* reset screen table index*/
  OI0BSZA(); /* select set*/
  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end
  OI0BSZB(); /* fetch*/
  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end

      /* load table*/

  while (SQLCA.VAGen_SQLCODE == 0 /* while row found*/
   && OI0BW01.OI0BWSCM < OI0BW01.OI0BWSMX) /* and not table ovfl*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OI0BW01.OI0BWSCM = OI0BW01.OI0BWSCM + 1; /* add 1 to index*/
      OI0BW01.OIBGROUP[OI0BWSCM] = OIBREC.OIBGROUP; /* load entry*/
      OI0BW01.OI0BWSEL[OI0BWSCM] = " "; /* clear sel fl*/
      OI0BW01.OI0BWAWT[OI0BWSCM] = 0; /* clear avg wt*/
      OI0BW01.OI0BWTUN[OI0BWSCM] = 0; /* clear tot units*/
    end
    OI0BSZB(); /* fetch*/
  end

  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end

  OI0BSZC(); /* close set*/



   /* *************************************************************/
end // end OI0B020

// build screen control
Function OI0B030()
   /* *************************************************************/

      /* control the screen building process*/

   /* *************************************************************/


      /* clear map area*/

  set OI0BM001 initial;
  OI0BM001.XXXCURDT = VGVar.currentShortGregorianDate;
  OI0BM001.XXXRVNBR = "00";

      /* build header info*/

  OI0BM001.XWHCD = OI0BW01.XWHCD; /* set warehouse*/
  OI0BM001.XWHABRV = OI0BW01.XWHABRV; /* set warehouse abrv*/
  OI0BM001.OI0BMPON = OI0BW01.OI0BWPON; /* set prev ord nbr*/
  OI0BM001.OI0BMCNT = OI0BW01.OI0BWSCM; /* set rec cnt*/

      /* check to see if no records selected*/

  if (converseVar.validationMsgNum == 0)
    if (OI0BW01.OI0BWSCM <= 0) /* no table*/
      converseLib.validationFailed(270); /* no records selected*/
    end
  end


  OI0BW01.OI0BWSSB = 1; /* init screen sub*/
  OI0BW01.OI0BWS1 = OI0BW01.OI0BWSSS; /* init screen tab sub*/
  while (OI0BW01.OI0BWSSB <= OI0BW01.OI0BWSSM /* screen sub lt screen max*/
   && OI0BW01.OI0BWS1 <= OI0BW01.OI0BWSCM) /* screen tab sub lt cur max*/

    OIBREC.OIBGROUP = OI0BW01.OIBGROUP[OI0BWS1];

    if (OI0BW01.OI0BWSSB == 1 /* first sel field*/
     && converseVar.validationMsgNum == 0) /* no errors*/
      set OI0BM001.OI0BMSEL[OI0BWSSB] cursor;
    end

    set OI0BM001.OI0BMSEL[OI0BWSSB] normal;
    if (OI0BW01.OI0BWSEL[OI0BWS1] == "S")
      OI0BM001.OI0BMSEL[OI0BWSSB] = OI0BW01.OI0BWSEL[OI0BWS1];
    else
      OI0BM001.OI0BMSEL[OI0BWSSB] = OIBREC.OIARECST;
    end

    OI0BW01.OI0BWFOR = OIBREC.OP1CUOID; /* format order number*/
    OI0BW01.OI0BWFOP = "."; /* literal '.'*/
    OI0BW01.OI0BWFOS = OIBREC.OP1NORID; /* format sub order number*/
    sysVar.arrayIndex = 1;
    while (sysVar.arrayIndex < 7 /* zero suppress order number*/
     && OI0BW01.OI0BWFOO[sysVar.arrayIndex] <= "0")
      OI0BW01.OI0BWFOO[sysVar.arrayIndex] = " ";
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* increm index*/
    end
    OI0BM001.OI0BMFON[OI0BWSSB] = OI0BW01.OI0BWFON; /* fmt ord nbr*/

    OI0BW01.OI0BWCOC = OIBREC.KUCCOID; /* format co number*/
    OI0BW01.OI0BWCOP = "."; /* literal '.'*/
    OI0BW01.OI0BWCOS = OIBREC.KUMSTRID; /* format store number*/
    OI0BW01.OI0BWCOQ = "."; /* literal '.'*/
    OI0BW01.OI0BWCOD = OIBREC.XNXCD; /* format dept number*/
    sysVar.arrayIndex = 1;
    while (sysVar.arrayIndex < 8 /* zero suppress customer number*/
     && OI0BW01.OI0BWCOO[sysVar.arrayIndex] <= "0")
      OI0BW01.OI0BWCOO[sysVar.arrayIndex] = " ";
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* increm index*/
    end
    OI0BM001.OI0BMFCN[OI0BWSSB] = OI0BW01.OI0BWCON; /* fmt cust nbr*/

    OI0BM001.KUMSTSNM[OI0BWSSB] = OIBREC.KUMSTSNM; /* short name*/
    OI0BM001.XOTCD[OI0BWSSB] = OIBREC.XOTCD; /* order type*/
    OI0BM001.XSOCD[OI0BWSSB] = OIBREC.XSOCD; /* sls office*/

    OI0BW01.XX0XWDAT = OIBREC.OP1CUNDT; /* work date*/
    OI0BM001.OP1CUNDT[OI0BWSSB] = OI0BW01.OI0BWDAT; /* need date*/

    if (OIBREC.XOSCD in XOSTBL.XOSCD)
      OI0BM001.XOSABRV[OI0BWSSB] = XOSTBL.XOSABRV[sysVar.arrayIndex];
                                   /* xos abrv*/
    else
      OI0BM001.XOSABRV[OI0BWSSB] = OIBREC.XOSCD;
    end

    OI0BM001.OP1NTMAL[OI0BWSSB] = OIBREC.OP1NTMAL; /* nbr times al*/

    OI0BW01.OI0BWSSB = OI0BW01.OI0BWSSB + 1; /* increment screen sub*/
    OI0BW01.OI0BWS1 = OI0BW01.OI0BWS1 + 1; /* tab sub*/

  end



   /* *************************************************************/
end // end OI0B030

// control summary map processing
Function OI0B100()
   /* *************************************************************/

      /* control the summary screen processing*/

   /* *************************************************************/



  OI0B110(); /* converse summary screen*/

  if (converseVar.eventKey is pa1 /* pa keys are invalid*/
   || converseVar.eventKey is pa2 
   || converseVar.eventKey is pa3)
    converseLib.clearScreen();
     /* force map send*/
    converseLib.validationFailed(008); /* key pressed is not valid*/
    return;
  end

  if (OI0BM001.CATOAP > " ")
    if (OI0BM001.CAITEM is modified)
      COMMAREA.CAITEM = OI0BM001.CAITEM;
    end
    COMMAREA.CATOAP = OI0BM001.CATOAP;
    XSEXIT();
    set OI0BM001.CATOAP cursor, bold;
    OI0BM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    return;
  end

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "OP0X";
    XSEXIT();
    OI0BM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    return;
  end

  if (converseVar.eventKey is pf4)
    XSPF4();
    exit program;
  end

      /* edit reselect fields*/

  OI0BSAA(); /* edit reselect options*/
  if (converseVar.validationMsgNum != 0)
    return;
  end

      /* check for reselect key*/

  if (converseVar.eventKey is pf13)
    OI0B020(); /* build screen table*/
    OI0B030(); /* build screen*/
    return;
  end

      /* edit summary screen line selection codes*/

  OI0BSAB(); /* edit select fields*/
  if (converseVar.validationMsgNum != 0)
    return;
  end

      /* check for main process key*/
      /* process select code 's' table records*/

  if (converseVar.eventKey is enter)
    OI0BW01.OI0BWSCT = 0; /* clear count*/
    OI0BW01.OI0BWS1 = 1; /* clear index*/
    while (OI0BW01.OI0BWS1 <= OI0BW01.OI0BWSCM /* not eot*/
     && converseVar.eventKey not pf3        /* pf3 checked for return from oi0b200 below*/
     && converseVar.validationMsgNum == 0) /* no errors*/
      if (OI0BW01.OI0BWSEL[OI0BWS1] == "S")
        OI0BW01.OI0BWSCT = OI0BW01.OI0BWSCT + 1; /* count recs selected*/
        OI0BW01.OI0BWSEL[OI0BWS1] = " "; /* clear select request*/
        OIBREC.OIBGROUP = OI0BW01.OIBGROUP[OI0BWS1];
        OI0BW01.OI0BWFFL = "Y"; /* set first time fl*/
        OI0BW01.OI0BWM5F = "N"; /* set process loop fl*/
        while (OI0BW01.OI0BWM5F == "N")
          OI0B200(); /* control detail screen processing*/
        end
      end
      OI0BW01.OI0BWS1 = OI0BW01.OI0BWS1 + 1; /* increm index*/
    end
    if (OI0BW01.OI0BWSCT == 0)
      converseLib.validationFailed(273); /* no selections have been made*/
    else
      OI0B030(); /* rebuild screen*/
    end
    return;
  end

      /* check for page backward*/

  if (converseVar.eventKey is pf7)
    OI0BW01.OI0BWS1 = OI0BW01.OI0BWSSS - OI0BW01.OI0BWSSM; /* check for max*/
    if (OI0BW01.OI0BWS1 < 1) /* less than minimum?*/
      converseLib.validationFailed(192); /* end of page backward*/
    else
      OI0BW01.OI0BWSSS = OI0BW01.OI0BWSSS - OI0BW01.OI0BWSSM; /* page back*/
      OI0B030(); /* build screen*/
    end
    return;
  end

      /* check for page forward*/

  if (converseVar.eventKey is pf8)
    OI0BW01.OI0BWS1 = OI0BW01.OI0BWSSS + OI0BW01.OI0BWSSM; /* check for max*/
    if (OI0BW01.OI0BWS1 > OI0BW01.OI0BWSCM) /* greater curr max?*/
      converseLib.validationFailed(191); /* end of page forward*/
    else
      OI0BW01.OI0BWSSS = OI0BW01.OI0BWSSS + OI0BW01.OI0BWSSM; /* page frwd*/
      OI0B030(); /* build screen*/
    end
    return;
  end

  converseLib.validationFailed(008); /* key pressed is not valid*/



   /* *************************************************************/
end // end OI0B100

// disp summary map
Function OI0B110()
   /* *************************************************************/



  converseLib.clearScreen();
   /* set the other map to page*/


  converse OI0BM001 ;


      /* if fields are modified, then set modified*/

  if (OI0BM001.OI0BMNSL is modified)
    set OI0BM001.OI0BMNSL modified;
  end

  if (OI0BM001.XWHCD is modified)
    set OI0BM001.XWHCD modified;
  end

  if (OI0BM001.OI0BMNCO is modified)
    set OI0BM001.OI0BMNCO modified;
  end

  if (OI0BM001.OI0BMNNM is modified)
    set OI0BM001.OI0BMNNM modified;
  end

  if (OI0BM001.CATOAP is modified)
    set OI0BM001.CATOAP modified;
  end

  if (OI0BM001.CAITEM is modified)
    set OI0BM001.CAITEM modified;
  end

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= OI0BW01.OI0BWSSM) /* while not screen max*/
    if (OI0BM001.OI0BMSEL[sysVar.arrayIndex] is modified)
      set OI0BM001.OI0BMSEL[sysVar.arrayIndex] modified;
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end



   /* *************************************************************/
end // end OI0B110

// control detail scr processing
Function OI0B200()
   /* *************************************************************/

      /* control the detail screen processing*/

   /* *************************************************************/

  if (OI0BW01.OI0BWFFL == "Y")
    OI0B210(); /* build screen (get op1rec)*/
    if (converseVar.validationMsgNum == 006) /* deadlock*/
       /* next sentence*/
    else
      OI0BW01.OI0BWFFL = "N"; /* set flag off*/
    end
  end

  OI0B220(); /* converse summary screen*/

  if (converseVar.eventKey is pa1 /* pa keys are invalid*/
   || converseVar.eventKey is pa2 
   || converseVar.eventKey is pa3)
    converseLib.clearScreen();
     /* force map send*/
    converseLib.validationFailed(008); /* key pressed is not valid*/
    return;
  end

  if (OI0BM005.CATOAP > " ")
    if (OI0BM005.CAITEM is modified)
      COMMAREA.CAITEM = OI0BM005.CAITEM;
    end
    COMMAREA.CATOAP = OI0BM005.CATOAP;
    XSEXIT();

    set OI0BM005.CATOAP cursor, bold;
    OI0BM005.VAGen_EZEMSG = COMMAREA.CAMSG;
    return;
  end

  if (converseVar.eventKey is pf3)
    OI0BW01.OI0BWM5F = "Y";
    return;
  end

  if (converseVar.eventKey is pf4)
    XSPF4();
    exit program;
  end

      /* edit entered fields*/

  OI0BSBB(); /* edit fields*/

      /* edit carrier code for DCMS status check - whse 51*/

  OI0BW01.OI0BW-APPLY-CHG-FL = "N";

  if (OP1REC.XWHCD == "51")
    if (converseVar.validationMsgNum == 0)
      if (OI0BM005.TF1CARCD != OP1REC.TF1CARCD) /* really changed?*/
        if (OP1REC.XOSCD == "PA" || OP1REC.XOSCD == "AL")
          OI0B230(); /* edit carrier*/
        end
      end
    end
  end


  if (converseVar.eventKey is pf12 /* edit only*/
   || converseVar.validationMsgNum > 0) /* some error*/
    return;
  end

  if (converseVar.eventKey is enter
   && OI0BW01.OI0BWFFL == "N") /* no prev deadlock error*/

    OI0BSBC(); /* update tables*/
    if (converseVar.validationMsgNum == 0) /* no error*/
      OI0BW01.OI0BWM5F = "Y";
    end
    return;
  end

  converseLib.validationFailed(008); /* key pressed is not valid*/


   /* *************************************************************/
end // end OI0B200

// build detail screen
Function OI0B210()
   /* *************************************************************/

      /* control the detail screen building process*/

   /* *************************************************************/



      /* clear map area*/

  set OI0BM005 initial;
  OI0BM005.XXXCURDT = VGVar.currentShortGregorianDate;
  OI0BM005.XXXRVNBR = "00";

      /* get order header*/

  OP1REC.OP1PARTN = OIBREC.OP1PARTN; /* build key*/
  OP1REC.OP1CUOID = OIBREC.OP1CUOID;
  OP1REC.OP1NORID = OIBREC.OP1NORID;
  OI0BSZD(); /* get order header*/
  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end

      /* check to see if we want units and weight*/
      /* issue message why not*/

  if (OP1REC.OP1NTMAL > 1) /* nbr times alloc greater 1?*/
    OI0BM005.OI0BMWNG = "WARNING -- MULTIPLE ALLOCATIONS";
  else
    if (OP1REC.XOSCD == "PR") /* partially reserved?*/
      OI0BM005.OI0BMWNG = "WARNING -- PARTIAL RESERVATION";
    else
      if (OP1REC.XOSCD == "SH") /* shipped?*/
        OI0BM005.OI0BMWNG = "WARNING -- SHIPPED STATUS";
      else
        if (OP1REC.XOSCD == "XL") /* cancelled?*/
          OI0BM005.OI0BMWNG = "WARNING -- CANCELLED STATUS";
        else
          if (OI0BW01.OI0BWTUN[OI0BWS1] <= 0 /* units and wgt not*/
           && OI0BW01.OI0BWAWT[OI0BWS1] <= 0) /* prev determined*/
            OI0BSBA(); /* get units and weight*/
            if (converseVar.validationMsgNum != 0) /* error?*/
              return;
            end
          end
          OI0BM005.OI0BMTUN = OI0BW01.OI0BWTUN[OI0BWS1]; /* tot units*/
          OI0BM005.OI0BMTWT = OI0BW01.OI0BWAWT[OI0BWS1]; /* avg wgt*/
        end
      end
    end
  end

      /* get carrier information*/

  OI0BM005.TF1CARCD = OP1REC.TF1CARCD; /* move code*/
  if (OP1REC.TF1CARCD > " ")
    TF1REC.TF1CARCD = OP1REC.TF1CARCD; /* build key*/
    OI0BSZI(); /* get carrier info*/
    if (converseVar.validationMsgNum != 0) /* error?*/
      return;
    end
    if (SQLCA.VAGen_SQLCODE == 0)
      OI0BM005.TF1ABRV = TF1REC.TF1ABRV; /* move abbreviation*/
    else
      OI0BM005.TF1ABRV = "*UNKNOWN"; /* move abbreviation*/
      converseLib.validationFailed(194); /* carrier is invalid*/
    end
    if (SQLCA.VAGen_SQLCODE == 0
     && TF1REC.XXXSTAT == "I")
      converseLib.validationFailed(274); /* carrier is inactive*/
    end
  end

      /* get cust address*/

  if (OP1REC.OP11TMSF == "Y") /* one time ship?*/
    OP5REC.OP1PARTN = OP1REC.OP1PARTN; /* build key*/
    OP5REC.OP1CUOID = OP1REC.OP1CUOID;
    OP5REC.OP1NORID = OP1REC.OP1NORID;
    OP5REC.OP5BILIN = "N";
    OP5REC.OP5SHPIN = "Y";
    OI0BSZK(); /* get order one time addr*/
    if (converseVar.validationMsgNum != 0) /* error?*/
      return;
    end
    OI0BM005.OP11TMSF = "*"; /* one time ship ind*/
    OI0BM005.OP5ALTNM = OP5REC.OP5ALTNM;
    OI0BM005.XXXADDR1 = OP5REC.XXXADDR[1];
    OI0BM005.XXXADDR2 = OP5REC.XXXADDR[2];
    OI0BM005.XXXADDR3 = OP5REC.XXXADDR[3];
    OI0BM005.XXXCITY = OP5REC.XXXCITY;
    OI0BM005.XSTCD = OP5REC.XSTCD;
    OI0BM005.XXXZIP = OP5REC.XXXZIP;
    if (OP5REC.XCTCD > " "
     && OP5REC.XCTCD != "USA")
      set OI0BM005.OI0BMCLT skip;
      if (OP5REC.XCTCD in XCTTBL.XCTCD)
        OI0BM005.OI0BMCND = XCTTBL.XCTDESC[sysVar.arrayIndex];
      else
        OI0BM005.OI0BMCND = OP5REC.XCTCD;
      end
    else
      set OI0BM005.OI0BMCLT skip, invisible;
      OI0BM005.OI0BMCND = " ";
    end
  else
    KULREC.KUCCOID = OP1REC.KUCCOID; /* build key*/
    KULREC.KULAAID = OP1REC.OP1SHAID;
    OI0BSZJ(); /* get cust ship addr*/
    if (converseVar.validationMsgNum != 0) /* error?*/
      return;
    end
    OI0BM005.OP11TMSF = " "; /* one time ship ind*/
    OI0BM005.OP5ALTNM = " ";
    OI0BM005.XXXADDR1 = KULREC.XXX-ADDR1;
    OI0BM005.XXXADDR2 = KULREC.XXX-ADDR2;
    OI0BM005.XXXADDR3 = KULREC.XXX-ADDR3;
    OI0BM005.XXXCITY = KULREC.XXXCITY;
    OI0BM005.XSTCD = KULREC.XSTCD;
    OI0BM005.XXXZIP = KULREC.XXXZIP;
    if (KULREC.XCTCD > " "
     && KULREC.XCTCD != "USA")
      set OI0BM005.OI0BMCLT skip;
      if (KULREC.XCTCD in XCTTBL.XCTCD)
        OI0BM005.OI0BMCND = XCTTBL.XCTDESC[sysVar.arrayIndex];
      else
        OI0BM005.OI0BMCND = KULREC.XCTCD;
      end
    else
      set OI0BM005.OI0BMCLT skip, invisible;
      OI0BM005.OI0BMCND = " ";
    end
  end

      /* get order text (spec instructions)*/

  if (OP1REC.OP1SPINF == "Y") /* spec instrs?*/
    OP4REC.OP1PARTN = OP1REC.OP1PARTN; /* build key*/
    OP4REC.OP1CUOID = OP1REC.OP1CUOID;
    OP4REC.OP1NORID = OP1REC.OP1NORID;
    OP4REC.OP4TRTYP = "I";
    OI0BSZL(); /* sel set order text*/
    if (converseVar.validationMsgNum != 0) /* error?*/
      return;
    end
    OI0BSZM(); /* fetch order text*/
    OI0BW01.OI0BWS2 = 1; /* init sub*/
    while (SQLCA.VAGen_SQLCODE == 0 /* not end of set*/
     && OI0BW01.OI0BWS2 <= 10) /* not end of table*/
      OI0BM005.XNDCD[OI0BWS2] = OP4REC.XNDCD; /* move dept*/
      OI0BM005.OP4TXT[OI0BWS2] = OP4REC.OP4TXT; /* move instruction*/
      OI0BW01.OI0BWS2 = OI0BW01.OI0BWS2 + 1; /* increm index*/
      OI0BSZM(); /* fetch order text*/
    end
    if (converseVar.validationMsgNum != 0) /* error?*/
      return;
    end
    OI0BSZN(); /* close set order text*/
  else
    set OI0BM005.OI0BMDLT skip, invisible; /* dept literal*/
    set OI0BM005.OI0BMILT skip, invisible; /* instruction literal*/
  end

      /* format misc fields*/

  OI0BM005.OP1EXPDF = OP1REC.OP1EXPDF; /* expedite flag*/
  if (OP1REC.OP1EXPDF == "Y")
    set OI0BM005.OP1EXPDF skip;
  else
    set OI0BM005.OP1EXPDF skip, bold;
  end

  OI0BM005.XWHCD = OP1REC.XWHCD; /* warehouse*/
  if (OP1REC.XWHCD in XWHTBL.XWHCD)
    OI0BM005.XWHSABRV = XWHTBL.XWHSABRV[sysVar.arrayIndex];
  end

  OI0BM005.XPPCD = OP1REC.XPPCD; /* pick priority*/
  if (OP1REC.XPPCD in XPPTBL.XPPCD)
    OI0BM005.XPPABRV = XPPTBL.XPPABRV[sysVar.arrayIndex];
  end

  if (OP1REC.OP1DSADT > 0) /* don't ship after*/
    OI0BW01.XX0XWDAT = OP1REC.OP1DSADT; /* work date*/
    OI0BM005.OI0BMDSA = OI0BW01.OI0BWDAT;
  end

  if (OP1REC.OP1DSBDT > 0) /* don't ship before*/
    OI0BW01.XX0XWDAT = OP1REC.OP1DSBDT; /* work date*/
    OI0BM005.OI0BMDSB = OI0BW01.OI0BWDAT;
  end

  OI0BM005.KUMSTSNM = OIBREC.KUMSTSNM; /* store short nm*/

      /* format need date*/

  if (OP1REC.OP1CUNDT > 0) /* customer need date*/
    OI0BW01.XX0XWDAT = OP1REC.OP1CUNDT; /* move to work date*/
    OI0BM005.OI0BMNDT = OI0BW01.OI0BWDAT; /* move to map*/
  end


      /* format order number*/

  OI0BW01.OI0BWFOR = OP1REC.OP1CUOID; /* format order number*/
  OI0BW01.OI0BWFOP = "."; /* literal '.'*/
  OI0BW01.OI0BWFOS = OP1REC.OP1NORID; /* format sub order number*/
  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex < 7 /* zero suppress order number*/
   && OI0BW01.OI0BWFOO[sysVar.arrayIndex] <= "0")
    OI0BW01.OI0BWFOO[sysVar.arrayIndex] = " ";
    sysVar.arrayIndex = sysVar.arrayIndex + 1; /* increm index*/
  end
  OI0BM005.OI0BMFON = OI0BW01.OI0BWFON; /* fmt ord nbr*/
  OI0BW01.OI0BWPON = OI0BW01.OI0BWFON; /* save prev ord nbr*/


  OI0BSMB(); /* to retrieve customer service*/
                                 /* ;  rep name and move to map*/


      /* format customer number*/

  OI0BW01.OI0BWCOC = OP1REC.KUCCOID; /* format co number*/
  OI0BW01.OI0BWCOP = "."; /* literal '.'*/
  OI0BW01.OI0BWCOS = OP1REC.KUMSTRID; /* format store number*/
  OI0BW01.OI0BWCOQ = "."; /* literal '.'*/
  OI0BW01.OI0BWCOD = OP1REC.XNXCD; /* format dept number*/
  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex < 8 /* zero suppress customer number*/
   && OI0BW01.OI0BWCOO[sysVar.arrayIndex] <= "0")
    OI0BW01.OI0BWCOO[sysVar.arrayIndex] = " ";
    sysVar.arrayIndex = sysVar.arrayIndex + 1; /* increm index*/
  end
  OI0BM005.OI0BMFCN = OI0BW01.OI0BWCON; /* fmt cust nbr*/

      /* update oibrec.oiarecst to viewed if necessary*/

  if (OIBREC.OIARECST == "V" /* first check to see if*/
   || OIBREC.OIARECST == "X") /* already viewed or updated*/
    return;
  end
  OI0BSZS(); /* get expedite row*/
  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end
  if (OIBREC.OIARECST == "V"
   || OIBREC.OIARECST == "X")
    return;
  end

  OIBREC.OIARECST = "V"; /* set record status to viewed*/
  XX0XS01(); /* get current date and time*/
  OI0BSZR(); /* update expedite row*/
  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end
  OI0BW01.OIBGROUP[OI0BWS1] = OIBREC.OIBGROUP; /* resave row*/



   /* *************************************************************/
end // end OI0B210

// disp detail map
Function OI0B220()
   /* *************************************************************/



  converseLib.clearScreen();
   /* set the other map to page*/


  converse OI0BM005 ;



      /* if fields are modified, then set modified*/

  if (OI0BM005.TF1CARCD is modified)
    set OI0BM005.TF1CARCD modified;
  end

  if (OI0BM005.CATOAP is modified)
    set OI0BM005.CATOAP modified;
  end

  if (OI0BM005.CAITEM is modified)
    set OI0BM005.CAITEM modified;
  end



   /* *************************************************************/
end // end OI0B220

// edit DCMS status for carrier
Function OI0B230()
   /* *************************************************************/

      /* check DCMS status to edit allowable carrier code changes*/
      /* See Picking Mirror Order Pool for all allocs*/
      /* If not found, no orders exist on the Mirror Pool Database*/
      /* If any error, indicate a system error.*/
      /* If status code is not space or a, then carrier cannot chg*/

   /* *************************************************************/

  set WEP1301 empty;

  WEP1301.WEP1301-OPTION-CD = "ED";
  WEP1301.WEP1301-CALLING-PGM-ID = "OI0B";
  WEP1301.WEP1301-XWH-WHSE-CD = OP1REC.XWHCD;
  WEP1301.WEP1301-PK-ORD-STKTF-ID = OP1REC.OP1CUOID;
  WEP1301.WEP1301-PK-NIKE-ORD-ID = OP1REC.OP1NORID;
  WEP1301.WEP1301-XOS-ORD-STAT-CD = OP1REC.XOSCD;
  WEP1301.WEP1301-TF-CARR-CD = OI0BM005.TF1CARCD;
  WEP1301.WEP1301-RETURN-CODE = 99;
  TA1REC.TA1TBLKE = WEP1301.WEP1301-PASS-INFO;

  OI0BS-CALL-EP1300();

  if (WEP1301.WEP1301-RETURN-CODE == 0) /* Status OK*/
    OI0BW01.OI0BW-APPLY-CHG-FL = "Y";
  else
    OI0BW01.OI0BW-APPLY-CHG-FL = "N";
    if (WEP1301.WEP1301-RETURN-CODE == 2
     || WEP1301.WEP1301-RETURN-CODE == 3
     || WEP1301.WEP1301-RETURN-CODE == 4)
      converseLib.validationFailed(968);
      set OI0BM005.TF1CARCD cursor, modified, bold;
    else
      if (WEP1301.WEP1301-RETURN-CODE == 9)
        converseLib.validationFailed(969); /* multiple carriers*/
        set OI0BM005.TF1CARCD cursor, modified, bold;
      else
        if (WEP1301.WEP1301-RETURN-CODE == 10)
          converseLib.validationFailed(315); /* invalid carrier*/
          set OI0BM005.TF1CARCD cursor, modified, bold;
        else
          if (WEP1301.WEP1301-RETURN-CODE >= 5)
            TA1REC.TA1DBASE = "DPICK";
            TA1REC.TA1TBLVU = "VMPOLH01";
            TA1REC.TA1LOCAT[3] = "OI0B230";
            TA1REC.TA1LOCAT[2] = "EP1300";
            TA1REC.TA1LOCAT[1] = WEP1301.WEP1301-RETURN-CODE;

            OI0BSZZ();
          end
        end
      end
    end
  end


end // end OI0B230

// Mirror Pool sub-routine
Function OI0BS-CALL-EP1300()
   /* ------------------------------------------------------------------*/
   /* Order Change Subroutine for editing and updating the Mirror*/
   /* Pool Database.  Move the required fields into the passing record*/
   /* based upon modified flags.*/
   /* If return code is 1, no orders exist on the Mirror Pool Database.*/
   /* If return code is 2, 3 or 4, changes cannot be applied.*/
   /* If any others, indicate a system error.*/
   /* ------------------------------------------------------------------*/

  try
    call "EP1300" (WEP1301) {isNoRefresh = yes, isExternal = yes};
  end


end // end OI0BS-CALL-EP1300

// edit reselect fields
Function OI0BSAA()
   /* *************************************************************/

      /* control reselect option edits*/

   /* *************************************************************/


      /* check record selection code*/

  if (OI0BM001.OI0BMNSL is modified)
    if (OI0BM001.OI0BMNSL == " "
     || OI0BM001.OI0BMNSL == "A"
     || OI0BM001.OI0BMNSL == "V"
     || OI0BM001.OI0BMNSL == "X"
     || OI0BM001.OI0BMNSL == "*")
      set OI0BM001.OI0BMNSL normal;
    else
      set OI0BM001.OI0BMNSL cursor, modified, bold;
      converseLib.validationFailed(271); /* record selection code in not valid*/
    end
  end


      /* edit warehouse*/

  if (OI0BM001.XWHCD is modified)
    if (OI0BM001.XWHCD > " "
     && OI0BM001.XWHCD < "99"
     && OI0BM001.XWHCD in XWHTBL.XWHCD)
      OI0BW01.XWHCD = OI0BM001.XWHCD; /* save warehouse*/
      OI0BM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
      OI0BW01.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
      set OI0BM001.XWHCD normal;
    else
      set OI0BM001.XWHCD cursor, modified, bold;
      OI0BW01.XWHCD = " ";
      OI0BM001.XWHABRV = " ";
      OI0BW01.XWHABRV = " ";
      converseLib.validationFailed(078); /* warehouse is invalid*/
    end
  end

      /* reset possible attributes*/

  set OI0BM001.OI0BMNCO normal;
  set OI0BM001.KUMSTSNM normal;



   /* *************************************************************/
end // end OI0BSAA

// edit summary line select codes
Function OI0BSAB()
   /* *************************************************************/

      /* control summary screen line selection edit/save*/

   /* *************************************************************/


      /* check line selection code*/

  sysVar.arrayIndex = OI0BW01.OI0BWSSM; /* set to screen max*/
  while (sysVar.arrayIndex > 0)
    if (OI0BM001.OI0BMSEL[sysVar.arrayIndex] is modified)
      if (OI0BM001.OI0BMSEL[sysVar.arrayIndex] == "S"
       || OI0BM001.OI0BMSEL[sysVar.arrayIndex] == "A"
       || OI0BM001.OI0BMSEL[sysVar.arrayIndex] == "V"
       || OI0BM001.OI0BMSEL[sysVar.arrayIndex] == "X"
       || OI0BM001.OI0BMSEL[sysVar.arrayIndex] == " ")
        set OI0BM001.OI0BMSEL[sysVar.arrayIndex] normal;
        OI0BW01.OI0BWS1 = OI0BW01.OI0BWSSS + sysVar.arrayIndex - 1;
        if (OI0BM001.OI0BMSEL[sysVar.arrayIndex] == "S")
          OI0BW01.OI0BWSEL[OI0BWS1] = "S"; /* set sel cd in table*/
        else
          OIBREC.OIBGROUP = OI0BW01.OIBGROUP[OI0BWS1];
          OI0BM001.OI0BMSEL[sysVar.arrayIndex] = OIBREC.OIARECST; /* refresh scr*/
          OI0BW01.OI0BWSEL[OI0BWS1] = " "; /* set sel cd in table*/
        end
      else
        set OI0BM001.OI0BMSEL[sysVar.arrayIndex] cursor, modified, bold;
        converseLib.validationFailed(272); /* selection code in not valid*/
      end
    end
    sysVar.arrayIndex = sysVar.arrayIndex - 1;
  end



   /* *************************************************************/
end // end OI0BSAB

// get and accum ord units and wt
Function OI0BSBA()
   /* *************************************************************/

      /* control accumulation of total order units and avg wgt*/

   /* *************************************************************/


      /* get order text (spec instructions)*/

  OP2REC.OP1PARTN = OP1REC.OP1PARTN; /* build key*/
  OP2REC.OP1CUOID = OP1REC.OP1CUOID;
  OP2REC.OP1NORID = OP1REC.OP1NORID;
  OI0BSZE(); /* sel set order item*/
  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end
  OI0BSZF(); /* fetch order item*/

  while (SQLCA.VAGen_SQLCODE == 0) /* not end of set*/
    SY1REC.XGPCD = OP2REC.XGPCD; /* build key*/
    SY1REC.SY1STNBR = OP2REC.SY1STNBR;
    OI0BSZH(); /* get style*/
    if (converseVar.validationMsgNum != 0) /* error?*/
      return;
    end
    if (OP1REC.XOSCD == "AL") /* allocated status?*/
      OI0BW01.OI0BWCN1 = OP2REC.OP2TALCQ; /* tot units*/
    else
      OI0BW01.OI0BWCN1 = OP2REC.OP2TONOQ; /* tot units*/
    end
    OI0BW01.OI0BWCN2 = OI0BW01.OI0BWCN1 * SY1REC.SY1AVEWT; /* avg wt*/
    OI0BW01.OI0BWTUN[OI0BWS1] = OI0BW01.OI0BWTUN[OI0BWS1] + OI0BW01.OI0BWCN1;
    OI0BW01.OI0BWAWT[OI0BWS1] = OI0BW01.OI0BWAWT[OI0BWS1] + OI0BW01.OI0BWCN2;
    OI0BSZF(); /* fetch order item*/
  end
  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end
  OI0BSZG(); /* close set order item*/



   /* *************************************************************/
end // end OI0BSBA

// edit entered fields
Function OI0BSBB()
   /* *************************************************************/

      /* control entered field edits*/

   /* *************************************************************/


      /* check record selection code*/

  if (OI0BM005.TF1CARCD is modified
   && OI0BM005.TF1CARCD != OP1REC.TF1CARCD) /* really changed?*/
    set OI0BM005.TF1CARCD normal;
    if (OI0BM005.TF1CARCD <= " ")
      OI0BM005.TF1ABRV = " "; /* clear abbrev*/
    else
      TF1REC.TF1CARCD = OI0BM005.TF1CARCD;
      OI0BSZI(); /* get carrier*/
      if (converseVar.validationMsgNum != 0) /* error?*/
        return;
      end
      if (SQLCA.VAGen_SQLCODE == 100) /* if not found*/
        set OI0BM005.TF1CARCD cursor, modified, bold;
        OI0BM005.TF1ABRV = " "; /* clear abbrev*/
        converseLib.validationFailed(194); /* carrier is invalid*/
      else /* assume 0 rc*/
        OI0BM005.TF1ABRV = TF1REC.TF1ABRV; /* set abbrev*/
        if (TF1REC.XXXSTAT != "A")
          set OI0BM005.TF1CARCD cursor, modified, bold;
          converseLib.validationFailed(274); /* carrier is inactive*/
        else /* check to see if valid for warehouse*/
          sysVar.arrayIndex = 1;
          while (sysVar.arrayIndex <= 15 /* not end of table*/
           && TF1REC.XWHCD[sysVar.arrayIndex] > " ") /* not end of table*/
            if (OP1REC.XWHCD == TF1REC.XWHCD[sysVar.arrayIndex]) /* if found, get out*/
              return; /* get out*/
            end
            sysVar.arrayIndex = sysVar.arrayIndex + 1; /* next loop*/
          end
          set OI0BM005.TF1CARCD cursor, modified, bold;
          converseLib.validationFailed(315); /* carrier is not valid for warehouse*/
        end
      end
    end
  end



   /* *************************************************************/
end // end OI0BSBB

// update affected tables
Function OI0BSBC()
   /* *************************************************************/

      /* update affected tables:*/
             /* dorder.vophdr01 order header*/
             /* dorder.vxpdit01 traffic alert (expidit order)*/
             /* dorder.voppkm01 order maint/picking tab*/
             /* dorder.vmpolh01 mirror pool order header*/

   /* *************************************************************/


      /* get current date and time for zzz fields*/

  XX0XS01(); /* get current date and time*/


      /* update order header row with new carrier code*/

  OI0BSZD(); /* get order hdr row*/
  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end


  if (OP1REC.TF1CARCD == OI0BM005.TF1CARCD) /* don't update if the same*/
    return;
  else
    OP1REC.TF1CARCD = OI0BM005.TF1CARCD; /* update carrier cd*/

    OI0BSZO(); /* update order hdr row*/
    if (converseVar.validationMsgNum != 0) /* error?*/
      return;
    end
  end


      /* update oibrec.oiarecst to changed if necessary*/

  if (OIBREC.OIARECST != "X")

    OI0BSZS(); /* get expedite row*/
    if (converseVar.validationMsgNum != 0) /* error?*/
      return;
    else
      OIBREC.OIARECST = "X"; /* set record status to viewed*/

      OI0BSZR(); /* update expedite row*/
      if (converseVar.validationMsgNum != 0) /* error?*/
        return;
      end
      OI0BW01.OIBGROUP[OI0BWS1] = OIBREC.OIBGROUP; /* resave row*/
    end
  end


      /* add vomtag01 row if order is in picking (alloc status)*/

  if (OP1REC.XOSCD == "AL" /* write tag only if allocated status*/
   || OP1REC.XOSCD == "PA")
     /* next sentence*/
  else
    return; /* not allocated status*/
  end


      /* add vomtag01 row*/

  OMBREC.XWHCD = OP1REC.XWHCD; /* build key/row*/
  OMBREC.OP1PARTN = OP1REC.OP1PARTN;
  OMBREC.OP1CUOID = OP1REC.OP1CUOID;
  OMBREC.OP1NORID = OP1REC.OP1NORID;
  OMBREC.OMBMRTYP = "B";
  OMBREC.TF1CARCD = OP1REC.TF1CARCD;
  SQLCA.VAGen_SQLCODE = 0;

  if (OI0BW01.OI0BW-APPLY-CHG-FL == "Y")
    set WEP1301 empty;
    WEP1301.WEP1301-OPTION-CD = "U";
    WEP1301.WEP1301-CALLING-PGM-ID = "OI0B";
    WEP1301.WEP1301-XXX-USER-ID = COMMAREA.CAUSERID;
    WEP1301.WEP1301-XWH-WHSE-CD = OP1REC.XWHCD;
    WEP1301.WEP1301-PK-ORD-STKTF-ID = OP1REC.OP1CUOID;
    WEP1301.WEP1301-PK-NIKE-ORD-ID = OP1REC.OP1NORID;
    WEP1301.WEP1301-XOS-ORD-STAT-CD = OP1REC.XOSCD;
    WEP1301.WEP1301-TF-CARR-CD = OMBREC.TF1CARCD;
    WEP1301.WEP1301-TODAYS-DATE = XX0XW01.XX0XWDAT;
    WEP1301.WEP1301-CURRENT-TIME = XX0XW01.XX0XWTIM;
    WEP1301.WEP1301-RETURN-CODE = 99;
    TA1REC.TA1TBLKE = WEP1301.WEP1301-PASS-INFO;

    OI0BS-CALL-EP1300();

    if (WEP1301.WEP1301-RETURN-CODE >= 5)
      TA1REC.TA1PGMNM = "OI0B";
      TA1REC.TA1MAP = "OI0BM005";
      TA1REC.TA1DBASE = "DPICK";
      TA1REC.TA1TBLVU = "VMPOLH01";
      TA1REC.TA1LOCAT[3] = "OI0BSBC";
      TA1REC.TA1LOCAT[2] = "EP1300";
      TA1REC.TA1LOCAT[1] = WEP1301.WEP1301-RETURN-CODE;
      OI0BSZZ();
    end
  end

  OI0BSZQ(); /* add omtag row*/

  if (converseVar.validationMsgNum != 0) /* error?*/
    return;
  end


   /* *************************************************************/
end // end OI0BSBC

// get taken by service rep name
Function OI0BSMB()



      /* *********************************************************/
      /* * this statement group retrives the service rep name   **/
      /* * for screen display.                                  **/
      /* *********************************************************/


      /* verify that the service rep id exists*/

  KUYREC.KUYSVRID = OP1REC.OP1TBREP; /* load key*/
  call "IO0550" ("S ", SQLCA, KUYREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
    OI0BM005.KUYREPNM = KUYREC.KUYREPNM; /* move rep name to map*/
  else
    if (SQLCA.VAGen_SQLCODE == +100)
      OI0BM005.KUYREPNM = "UNKNOWN";
    else
      OI0BM005.KUYREPNM = "UNKNOWN";
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "POST";
      TA1REC.TA1PGMNM = "OI0B    "; /* program name*/
      TA1REC.TA1MAP = "OI0BM005"; /* map name*/
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VSVREP01"; /* table view*/
      OI0BW01.OI0BWTK2 = KUYREC.KUYSVRID; /* format key*/
      TA1REC.TA1TBLKE = OI0BW01.OI0BWTK2; /* formatted key value*/
      TA1REC.TA1LOCAT[1] = "OI0BSMB "; /* statement group*/
      TA1REC.TA1LOCAT[2] = "IO0550  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "S       ";
      TA1REC.TA1LOCAT[4] = "        ";
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end /* abend routine*/
      COMMAREA.CAUSERA = " "; /* clear ws on error*/
    end
  end
   /* *************************************************************/
end // end OI0BSMB

// select set dorder.vxpdit01
Function OI0BSZA()



      /* *********************************************************/
      /* * this statement group performs a select set for       **/
      /* * the dorder.vxpdit01 table.                           **/
      /* *********************************************************/


      /* issue select set request*/

  OI0BW02.OI0BWFUN = "S1"; /* set iomod function*/
  call "IO1880" (OI0BW02, SQLCA, OIBREC) {isNoRefresh = yes, isExternal = yes};
                                   /* i/o mod for select set*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VXPDIT01"; /* table view*/
      TA1REC.TA1TBLKE = OIBREC.OIBGROUP; /* key value*/
      TA1REC.TA1LOCAT[3] = "OI0BSZA "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO1880  "; /* i/o mod name*/
      OI0BSZZ(); /* abort*/
    end
  end



   /* *************************************************************/
end // end OI0BSZA

// select next dorder.vxpdit01
Function OI0BSZB()



      /* *********************************************************/
      /* * this statement group performs a select next for      **/
      /* * the dorder.vxpdit01 table.                           **/
      /* *********************************************************/


      /* issue select next to get request*/

  OI0BW02.OI0BWFUN = "N1"; /* set iomod function*/
  call "IO1880" (OI0BW02, SQLCA, OIBREC) {isNoRefresh = yes, isExternal = yes};
                                   /* i/o mod for select next*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100) /* check for end of set rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VXPIDT01"; /* table view*/
      TA1REC.TA1TBLKE = OIBREC.OIBGROUP; /* key value*/
      TA1REC.TA1LOCAT[3] = "OI0BSZB "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO1880  "; /* i/o mod name*/
      OI0BSZZ(); /* abort*/
    end
  end



   /* *************************************************************/
end // end OI0BSZB

// close set dorder.vxpdit01
Function OI0BSZC()



      /* *********************************************************/
      /* * this statement group performs a close set for        **/
      /* * the dorder.vxpidt01 table.                           **/
      /* *********************************************************/


      /* issue close set request*/

  OI0BW02.OI0BWFUN = "C1"; /* set iomod function*/
  call "IO1880" (OI0BW02, SQLCA, OIBREC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod for close set*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VXPIDT01"; /* table view*/
    TA1REC.TA1TBLKE = " "; /* key value*/
    TA1REC.TA1LOCAT[3] = "OI0BSZC "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO1880  "; /* i/o mod name*/
    OI0BSZZ(); /* abort*/
  end



   /* *************************************************************/
end // end OI0BSZC

// select unique dorder.vordhr01
Function OI0BSZD()



      /* *********************************************************/
      /* * this statement group performs a select unique for    **/
      /* * the dorder.vorhdr01 table.                           **/
      /* *********************************************************/


      /* issue select unique to get request*/

  call "IO0430" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};
                                   /* i/o mod for select unique*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VOPHDR01"; /* table view*/
      TA1REC.TA1TBLKE = OP1REC.OP1KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "OI0BSZD "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0430  "; /* i/o mod name*/
      OI0BSZZ(); /* abort*/
    end
  end



   /* *************************************************************/
end // end OI0BSZD

// select set dorder.vitem001
Function OI0BSZE()



      /* *********************************************************/
      /* * this statement group performs a select set for       **/
      /* * the dorder.vitem001 table.                           **/
      /* *********************************************************/


      /* issue select set request*/

  call "IO0440" ("SS", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod for select set*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VITEM001"; /* table view*/
      TA1REC.TA1TBLKE = OP2REC.OP2KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "OI0BSZE "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0440  "; /* i/o mod name*/
      OI0BSZZ(); /* abort*/
    end
  end



   /* *************************************************************/
end // end OI0BSZE

// select next dorder.vitem001
Function OI0BSZF()



      /* *********************************************************/
      /* * this statement group performs a select next for      **/
      /* * the dorder.vitem001 table.                           **/
      /* *********************************************************/


      /* issue select next to get request*/

  call "IO0440" ("SN", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod for select next*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100) /* check for end of set rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VITEM001"; /* table view*/
      TA1REC.TA1TBLKE = OP2REC.OP2KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "OI0BSZF "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0440  "; /* i/o mod name*/
      OI0BSZZ(); /* abort*/
    end
  end



   /* *************************************************************/
end // end OI0BSZF

// close set dorder.vitem001
Function OI0BSZG()



      /* *********************************************************/
      /* * this statement group performs a close set for        **/
      /* * the dorder.vitem001 table.                           **/
      /* *********************************************************/


      /* issue close set request*/

  call "IO0440" ("CS", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod for close set*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VITEM001"; /* table view*/
    TA1REC.TA1TBLKE = " "; /* key value*/
    TA1REC.TA1LOCAT[3] = "OI0BSZG "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0440  "; /* i/o mod name*/
    OI0BSZZ(); /* abort*/
  end



   /* *************************************************************/
end // end OI0BSZG

// select unique dprod.vstyle01
Function OI0BSZH()



      /* *********************************************************/
      /* * this statement group performs a select unique for    **/
      /* * the dprod.vstyle01 table.                            **/
      /* *********************************************************/


      /* issue select unique to get request*/

  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
                                   /* i/o mod for select unique*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      TA1REC.TA1DBASE = "DPROD   "; /* data base name*/
      TA1REC.TA1TBLVU = "VSTYLE01"; /* table view*/
      TA1REC.TA1TBLKE = SY1REC.SY1KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "OI0BSZH "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0120  "; /* i/o mod name*/
      OI0BSZZ(); /* abort*/
    end
  end



   /* *************************************************************/
end // end OI0BSZH

// select unique dpick.vcarr001
Function OI0BSZI()



      /* *********************************************************/
      /* * this statement group performs a select unique for    **/
      /* * the dpick.vcarr001 table.                            **/
      /* *********************************************************/


      /* issue select unique to get request*/

  call "IO0860" ("S ", SQLCA, TF1REC) {isNoRefresh = yes, isExternal = yes};
                                   /* i/o mod for select unique*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100) /* check for notfnd rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      TA1REC.TA1DBASE = "DPICK   "; /* data base name*/
      TA1REC.TA1TBLVU = "VCARR001"; /* table view*/
      TA1REC.TA1TBLKE = TF1REC.TF1KEYS; /* key value*/
      TA1REC.TA1LOCAT[3] = "OI0BSZI "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0860  "; /* i/o mod name*/
      OI0BSZZ(); /* abort*/
    end
  end



   /* *************************************************************/
end // end OI0BSZI

// select unique dcust.vaddr001
Function OI0BSZJ()



      /* *********************************************************/
      /* * this statement group performs a select unique for    **/
      /* * the dcust.vaddr001 table.                            **/
      /* *********************************************************/


      /* issue select unique to get request*/

  call "IO0170" ("S ", SQLCA, KULREC) {isNoRefresh = yes, isExternal = yes};
                                   /* i/o mod for select unique*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VADDR001"; /* table view*/
      TA1REC.TA1TBLKE = KULREC.KULGRP; /* key value*/
      TA1REC.TA1LOCAT[3] = "OI0BSZJ "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0170  "; /* i/o mod name*/
      OI0BSZZ(); /* abort*/
    end
  end



   /* *************************************************************/
end // end OI0BSZJ

// select unique dorder.voaddr01
Function OI0BSZK()



      /* *********************************************************/
      /* * this statement group performs a select unique for    **/
      /* * the dorder.voaddr01 table.                           **/
      /* *********************************************************/


      /* issue select unique to get request*/

  call "IO0460" ("S ", SQLCA, OP5REC) {isNoRefresh = yes, isExternal = yes};
                                   /* i/o mod for select unique*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VOADDR1"; /* table view*/
      OI0BW01.OI0BWTK1 = OP5REC.OP1CUOID; /* ord nbr*/
      OI0BW01.OI0BWTK2 = OP5REC.OP1NORID; /* nike ord id*/
      OI0BW01.OI0BWTK3 = OP5REC.OP5BILIN; /* bill ind*/
      OI0BW01.OI0BWTK4 = OP5REC.OP5SHPIN; /* ship ind*/
      TA1REC.TA1TBLKE = OI0BW01.OI0BWTK; /* key value*/
      TA1REC.TA1LOCAT[3] = "OI0BSZK "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0460  "; /* i/o mod name*/
      OI0BSZZ(); /* abort*/
    end
  end



   /* *************************************************************/
end // end OI0BSZK

// select set dorder.vtext001
Function OI0BSZL()



      /* *********************************************************/
      /* * this statement group performs a select set for       **/
      /* * the dorder.vtext001 table.                           **/
      /* *********************************************************/


      /* issue select set request*/

  call "IO0470" ("SS", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod for select set*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
      TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "OI0BSZL "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0470  "; /* i/o mod name*/
      OI0BSZZ(); /* abort*/
    end
  end



   /* *************************************************************/
end // end OI0BSZL

// select next dorder.vtext001
Function OI0BSZM()



      /* *********************************************************/
      /* * this statement group performs a select next for      **/
      /* * the dorder.vtext001 table.                           **/
      /* *********************************************************/


      /* issue select next to get request*/

  call "IO0470" ("SN", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod for select next*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100) /* check for end of set rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
      TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "OI0BSZM "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0470  "; /* i/o mod name*/
      OI0BSZZ(); /* abort*/
    end
  end



   /* *************************************************************/
end // end OI0BSZM

// close set dorder.vtext001
Function OI0BSZN()



      /* *********************************************************/
      /* * this statement group performs a close set for        **/
      /* * the dorder.vtext001 table.                           **/
      /* *********************************************************/


      /* issue close set request*/

  call "IO0470" ("CS", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod for close set*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
    TA1REC.TA1TBLKE = " "; /* key value*/
    TA1REC.TA1LOCAT[3] = "OI0BSZN "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0470  "; /* i/o mod name*/
    OI0BSZZ(); /* abort*/
  end



   /* *************************************************************/
end // end OI0BSZN

// update dorder.vophdr01
Function OI0BSZO()



      /* *********************************************************/
      /* * this statement group performs an update for          **/
      /* * the dorder.vophdr01 table.                           **/
      /* *********************************************************/


      /* update change date and time*/

  OP1REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  OP1REC.ZZZCHGTM = XX0XW01.XX0XWTIM;


      /* issue update request*/

  call "IO0430" ("U ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for update*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* check for not found (chg cnt)*/
        converseLib.validationFailed(006); /* file deadlock - try again*/
        OI0BSZY(); /* post*/
      else
        TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
        TA1REC.TA1TBLVU = "VOPHDR01"; /* table view*/
        TA1REC.TA1TBLKE = OP1REC.OP1KEY; /* key value*/
        TA1REC.TA1LOCAT[3] = "OI0BSZO "; /* statement group*/
        TA1REC.TA1LOCAT[4] = "IO0430  "; /* i/o mod name*/
        OI0BSZZ(); /* abort*/
      end
    end
  end



   /* *************************************************************/
end // end OI0BSZO

// add dorder.voppkm01
Function OI0BSZQ()



      /* *********************************************************/
      /* * this statement group performs an add for             **/
      /* * the dorder.voppkm01 table.                           **/
      /* *********************************************************/


      /* create status, setup date and time*/

  OMBREC.ZZZSDT = XX0XW01.XX0XWDAT;
  OMBREC.ZZHHMMSS = XX0XW01.XX0XWHMS;


      /* issue add request*/

  call "IO1680" ("A ", SQLCA, OMBREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for add*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VOPPKM01"; /* table view*/
      TA1REC.TA1TBLKE = OMBREC.OMBGROUP; /* key value*/
      TA1REC.TA1LOCAT[3] = "OI0BSZQ "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO1680  "; /* i/o mod name*/
      OI0BSZZ(); /* abort*/
    end
  end



   /* *************************************************************/
end // end OI0BSZQ

// update dorder.vxpdit01
Function OI0BSZR()



      /* *********************************************************/
      /* * this statement group performs an update for          **/
      /* * the dorder.vxpdit01 table.                           **/
      /* *********************************************************/


      /* update change date and time*/

  OIBREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  OIBREC.ZZZCHGTM = XX0XW01.XX0XWTIM;


      /* issue update request*/

  OI0BW02.OI0BWFUN = "U "; /* set iomod function*/
  call "IO1880" (OI0BW02, SQLCA, OIBREC) {isNoRefresh = yes, isExternal = yes};
                                   /* call i/o mod for update*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* check for notfound (chg cnt)*/
        converseLib.validationFailed(006); /* file deadlock - try again*/
        OI0BSZY(); /* post*/
      else
        TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
        TA1REC.TA1TBLVU = "VXPDIT01"; /* table view*/
        TA1REC.TA1TBLKE = OIBREC.OIBGROUP; /* key value*/
        TA1REC.TA1LOCAT[3] = "OI0BSZR "; /* statement group*/
        TA1REC.TA1LOCAT[4] = "IO1880  "; /* i/o mod name*/
        OI0BSZZ(); /* abort*/
      end
    end
  end



   /* *************************************************************/
end // end OI0BSZR

// select unique dorder.vxpdit01
Function OI0BSZS()



      /* *********************************************************/
      /* * this statement group performs a select unique        **/
      /* * the dorder.vxpdit01 table.                           **/
      /* *********************************************************/



      /* issue select unique request*/

  OI0BW02.OI0BWFUN = "S "; /* set iomod function*/
  call "IO1880" (OI0BW02, SQLCA, OIBREC) {isNoRefresh = yes, isExternal = yes};
                                   /* call i/o mod for select*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* check for deadlock*/
      converseLib.validationFailed(006); /* file deadlock - try again*/
      OI0BSZY(); /* post*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VXPDIT01"; /* table view*/
      TA1REC.TA1TBLKE = OIBREC.OIBGROUP; /* key value*/
      TA1REC.TA1LOCAT[3] = "OI0BSZS "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO1880  "; /* i/o mod name*/
      OI0BSZZ(); /* abort*/
    end
  end



   /* *************************************************************/
end // end OI0BSZS

// post bad db2 rc
Function OI0BSZY()



      /* *********************************************************/
      /* * this statement group performs an abort when a bad    **/
      /* * db2 rc is encountered.                               **/
      /* *********************************************************/


  TA1REC.TA1FUNC = "POST"; /* set post function*/
  call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
  TA1REC.TA1FUNC = "RETN"; /* set retn function*/



   /* *************************************************************/
end // end OI0BSZY

// abort from bad db2 rc
Function OI0BSZZ()



      /* *********************************************************/
      /* * this statement group performs an abort when a bad    **/
      /* * db2 rc is encountered.                               **/
      /* *********************************************************/


  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* invoke syncpoint rollback*/
  call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
  COMMAREA.CAUSERA = " "; /* clear user commarea*/
  XSPF4(); /* invoke master menu*/
  exit program;



   /* *************************************************************/
end // end OI0BSZZ

//*** RECORD=OI0BW01 ****
// ************************************************************
// 
// date created:        august 28, 1987
// 
// maintenance log:
// 
//   date    init.  description
// -------- ------  -------------------------------------------
// 08/28/87 snoble  initial record creation
// ***********************
Record OI0BW01 type basicRecord
  5 OI0BW01G OI0BW01G ; 
    10 OI0BWM1F OI0BWM1F ; 
    10 OI0BWM5F OI0BWM5F ; 
    10 OI0BWFFL OI0BWFFL ; 
    10 OI0BWS1 OI0BWS1 ; 
    10 OI0BWS2 OI0BWS2 ; 
    10 OI0BWSCT OI0BWSCT ; 
    10 OI0BWCN1 OI0BWCN1 ; 
    10 OI0BWCN2 OI0BWCN2 ; 
    10 OI0BWSSB OI0BWSSB ; 
    10 OI0BWSSM OI0BWSSM ; 
    10 OI0BWSSS OI0BWSSS ; 
    10 OI0BWSCM OI0BWSCM ; 
    10 OI0BWSMX OI0BWSMX ; 
    10 XWHCD XWHCD ; 
    10 XWHABRV XWHABRV ; 
    10 OI0BWSEL OI0BWSEL [250] ; 
    10 OI0BWAWT OI0BWAWT [250] ; 
    10 OI0BWTUN OI0BWTUN [250] ; 
    10 OIBGROUP OIBGROUP [250] ; 
    10 OI0BWPON OI0BWPON ; 
    10 OI0BWFON OI0BWFON ; 
      15 OI0BWFOR OI0BWFOR ; 
        20 OI0BWFOO OI0BWFOO [8] ; 
      15 OI0BWFOP OI0BWFOP ; 
      15 OI0BWFOS OI0BWFOS ; 
    10 OI0BWCON OI0BWCON ; 
      15 OI0BWCOC OI0BWCOC ; 
        20 OI0BWCOO OI0BWCOO [7] ; 
      15 OI0BWCOP OI0BWCOP ; 
      15 OI0BWCOS OI0BWCOS ; 
      15 OI0BWCOQ OI0BWCOQ ; 
      15 OI0BWCOD OI0BWCOD ; 
    10 * char(6) ; 
      15 OI0BWMM OI0BWMM ; 
      15 OI0BWDD OI0BWDD ; 
      15 OI0BWYY OI0BWYY ; 
    10 XX0XWDAT XX0XWDAT ; 
      15 XX0XW19 XX0XW19 ; 
      15 OI0BWDAT OI0BWDAT ; 
        20 XX0XWYY XX0XWYY ; 
        20 XX0XWMM XX0XWMM ; 
        20 XX0XWDD XX0XWDD ; 
    10 OI0BWTK OI0BWTK ; 
      15 OI0BWTK1 OI0BWTK1 ; 
      15 OI0BWTK2 OI0BWTK2 ; 
      15 OI0BWTK3 OI0BWTK3 ; 
      15 OI0BWTK4 OI0BWTK4 ; 
    10 OI0BW-APPLY-CHG-FL OI0BW-APPLY-CHG-FL ; 
end // end OI0BW01

//*** RECORD=OI0BW02 ****
// ****************** io1880 parm record  *********************
// 
// db2 table:           dorder.vxpdit01
// 
// copylib member:      n/a
// 
// i/o module:          io1880
// 
// key to db2 table:    n/a
// 
// date created:        august 31, 1987
// 
// maintenance log:
// 
//   date    init.  description
// -------- ------  -------------------------------------------
// 08/31/87 snoble  initial record creation
// ***********************
Record OI0BW02 type basicRecord
  5 OI0BW02G OI0BW02G ; 
    10 OI0BWFUN OI0BWFUN ; 
    10 OIARECST OIARECST ; 
end // end OI0BW02

// apply change flag
DataItem OI0BW-APPLY-CHG-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group
DataItem OI0BW01G char(16108)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// oi0bw02 record group
DataItem OI0BW02G char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// order avg weight
DataItem OI0BWAWT decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work counter
DataItem OI0BWCN1 decimal(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work counter
DataItem OI0BWCN2 decimal(7,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cust number
DataItem OI0BWCOC num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// department
DataItem OI0BWCOD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// formatted cust nbr
DataItem OI0BWCON char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cst nbr occurs for 0 suppress
DataItem OI0BWCOO char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// literal '.'
DataItem OI0BWCOP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// literal '.'
DataItem OI0BWCOQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// store
DataItem OI0BWCOS num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record mmddyy
DataItem OI0BWDAT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record dd
DataItem OI0BWDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// first time flag
DataItem OI0BWFFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// formatted order nbr
DataItem OI0BWFON char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ord nbr occurs for 0 suppress
DataItem OI0BWFOO char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// literal '.'
DataItem OI0BWFOP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// order number
DataItem OI0BWFOR num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nike sub-order number
DataItem OI0BWFOS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// io1880 func code
DataItem OI0BWFUN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map m001 control flag
DataItem OI0BWM1F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map m005 control flag
DataItem OI0BWM5F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work record mm
DataItem OI0BWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// previous order nbr
DataItem OI0BWPON char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work sub 1
DataItem OI0BWS1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work sub 2
DataItem OI0BWS2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// table current max
DataItem OI0BWSCM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work counter
DataItem OI0BWSCT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// oi0bm001 select codes
DataItem OI0BWSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table absolute max
DataItem OI0BWSMX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen sub
DataItem OI0BWSSB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen sub max
DataItem OI0BWSSM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen first tab entry sub
DataItem OI0BWSSS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group diagnostics
DataItem OI0BWTK char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// diag1
DataItem OI0BWTK1 num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// diag2
DataItem OI0BWTK2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// diag3
DataItem OI0BWTK3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// diag4
DataItem OI0BWTK4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// order tot units
DataItem OI0BWTUN decimal(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record yy
DataItem OI0BWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

