package fk0g;

import corpcom2.XX0XW01;
import corpcom3.XPFK001;
import corpcom4.XSFKS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import fk.common.FK-CONT-EFF-BDT;
import fk.common.FK-CONT-EFF-XDT;
import fk.common.FK-MAT-CONT-NBR;
import fk.common.FK-MAT-CONT-TXT;
import fk.common.FK-VEND-CD;
import fk.common.FK-VEND-SNM;
import fk.common.FKWREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TAEREC;
import vv.common.VCTRCT01;
import vv.common.VCTRCT01-GROUP;
import vv.common.VVNDR001;
//*** PROGRAM=FK0G ****
// THIS APPLICATION IS PART OF THE COMPONENTS FORECASTING
// SYSTEM.
// 
// THIS APPLICAITON PROVIDES THE CAPABILITY OF MAINTAINING
// CONTRACTS ON THE CONTRACT TABLE DCMPNT.VCTRCT01.  USERS
// WILL BE ALLOWED TO INQUIRE, ADD, CHANGE, AND DELETE CONTRACT
// INFORMATION THROUGH THE FOUR MAPS PROVIDED IN THIS
// APPLICATION.
// 
// INQUIRE MAP - MAP FK0GM110 IS PROVIDED FOR USERS TO INQUIRE
// UPON CONTRACT INFORMATION.  USERS WILL BE ALLOWED TO SELECT
// A VENDOR AND CONTRACT NUMBER, AND ALL APPROPRIATE CONTRACT
// DATA WILL BE DISPLAYED ON THE MAP.
// 
// ADD MAP - MAP FK0GM210 IS PROVIDED FOR USERS TO ADD
// CONTRACT INFORMATION.  USERS WILL BE ALLOWED TO ENTER NEW
// CONTRACT INFORMATION TO THE MAP, AND INSERTS WILL BE
// PERFORMED ON THE CONTRAT TABLE DCMPNT.VCTRCT01.
// 
// CHANGE MAP - MAP FK0GM310 IS PROVIDED FOR USERS TO CHANGE
// INFORMATION ON AN EXISTING CONTRACT.  USERS WILL BE ALLOWED
// TO CHANGE CONTRACT INFORMATION ON THE MAP, AND UPDATES WILL
// BE PERFORMED ON THE CONTRACT TABLE DCMPNT.VCTRCT01.
// 
// DELETE MAP - MAP FK0GM410 IS PROVIDED FOR USERS TO DELETE
// CONTRACTS.  USERS WILL BE ALLOWED TO ENTER A VENDOR CODE
// AND CONTRACT NUMBER, CONFIRM THE DELETE, AND THE CONTRACT
// DATA WILL BE DELETED FROM THE CONTRACT TABLE
// DCMPNT.VCTRCT01.
// 
// TRANSFER FROM ONE FK0E MAP TO ANOTHER FK0E MAP IS NOT
// POSSIBLE EXCEPT THROUGH FASTPATH.  USERS WILL BE ALLOWED TO
// EXIT THIS APPLICATION VIA PFKEYS OR FASTPATH, WITH THE
// "OPTION" FIELD AVAILABLE FOR USE WITH ANY APPLICATION
// TRANSFER.
// 
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          02/25/93  JALLE1  New application.
//          12/16/93  JALLE1  Fix abend code.
// Y2kFIX   12/03/97  DBETTR  regenerate application to pick
//                            up Y2K compliant version of
//                            common date routine XX0XS01.
// *********************
Program FK0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FK0GW00 FK0GW00; // record
  FK0GW01 FK0GW01; // record
  FK0GW02 FK0GW02; // record
  FKWREC FKWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VCTRCT01 VCTRCT01; // record
  VVNDR001 VVNDR001; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FK0GM.FK0GM110,  // forms
      FK0GM.FK0GM210, 
      FK0GM.FK0GM310, 
      FK0GM.FK0GM410
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FK0GM110 initial; /* M110 inquiry map input/output*/
    set FK0GM210 initial; /* M210 add map input/output*/
    set FK0GM310 initial; /* M310 change map input/output*/
    set FK0GM410 initial; /* M410 delete map input/output*/
    set FK0GW00 empty; /* Working storage*/
    set FK0GW01 empty; /* Display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA2REC empty; /* Date routine parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    ;
    ;
    if (FKWREC.FK-VEND-CD[1] != " ") /* If vendor code passed*/
      FK0GW00.FK0GW-REQUEST-DATA-SW = "Y"; /* Request for data*/
    else
      FK0GW00.FK0GW-REQUEST-DATA-SW = "N"; /* Request for data*/
    end
    FK0GW00.FK0GW-FMAT-MAP-SW = "Y"; /* Format the map switch*/
    FK0GW00.FK0GW-CONFIRM-DELETE-SW = "N"; /* Confirm delete switch*/
    FK0GW00.FK0GW-DATA-FND-SW = "N"; /* Data found switch*/
    ;
    ;
     /* ------------------------------------------------------------*/
     /* If data was passed in the COMMAREA, use as the initial key.*/
     /* Also determine which map to display.*/
     /* ------------------------------------------------------------*/
    ;
    if (FKWREC.FKW-UPDATE-FUNCTION == "A") /* Add requested*/
      ;
      FK0GW00.FK0GW-MAP-SW = "2"; /* Map to be displayed switch*/
      ;
      FK0GM210.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
      FK0GM210.FK-MAT-CONT-NBR = FKWREC.FK-MAT-CONT-NBR; /* Contract*/
    else
      ;
      if (FKWREC.FKW-UPDATE-FUNCTION == "C") /* Change requested*/
        ;
        FK0GW00.FK0GW-MAP-SW = "3"; /* Map to be displayed switch*/
        ;
        FK0GM310.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
        FK0GM310.FK-MAT-CONT-NBR = FKWREC.FK-MAT-CONT-NBR; /* Contract*/
      else
        if (FKWREC.FKW-UPDATE-FUNCTION == "D") /* Delete requested*/
          ;
          FK0GW00.FK0GW-MAP-SW = "4"; /* Map to be displayed switch*/
          ;
          FK0GM410.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
          FK0GM410.FK-MAT-CONT-NBR = FKWREC.FK-MAT-CONT-NBR; /* Cont*/
        else
          ;
          FK0GW00.FK0GW-MAP-SW = "1"; /* Map to be displayed switch*/
          ;
          FK0GM110.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
          FK0GM110.FK-MAT-CONT-NBR = FKWREC.FK-MAT-CONT-NBR; /* Ctrct*/
        end
      end
    end
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0G-0010; /* Converse the main process*/
    ;
    ;
    FK0G-0010: FK0G-0010();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0G-0010; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FK0G

// Main process to display a map
Function FK0G-0010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the fist map.*/
   /* 2) Otherwise, if specified, display the second map.*/
   /* 3) Otherwise, if specified, display the third map.*/
   /* 4) Otherwise, if specified, display the fourth map.*/
   /* 5) Otherwise, display the first map.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-MAP-SW == "1") /* Map 1 was requested*/
    ;
    FK0G-1000(); /* Display map 1*/
    ;
  else
    if (FK0GW00.FK0GW-MAP-SW == "2") /* Map 2 was requested*/
      ;
      FK0G-2000(); /* Display map 2*/
      ;
    else
      ;
      if (FK0GW00.FK0GW-MAP-SW == "3") /* Map 3 was requested*/
        ;
        FK0G-3000(); /* Display map 3*/
        ;
      else
        ;
        if (FK0GW00.FK0GW-MAP-SW == "4") /* Map 4 was requested*/
          ;
          FK0G-4000(); /* Display map 4*/
          ;
        else
          ;
          FK0G-1000(); /* Display map 1*/
        end
      end
    end
  end
  ;
  ;
end // end FK0G-0010

// Process inquiry map
Function FK0G-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0G-1100(); /* Obtain the data to display*/
  FK0G-1200(); /* Format and display the map*/
  FK0G-1300(); /* Check attention identifier*/
  FK0G-1400(); /* Reset fields to normal intensity*/
  FK0G-1500(); /* Verify the entered data*/
  FK0G-1600(); /* Process valid input request*/
  ;
  ;
end // end FK0G-1000

// Obtain data to display
Function FK0G-1100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0GW01 empty; /* Initialize display storage*/
  ;
  FK0GW00.FK-VEND-CD = FK0GM110.FK-VEND-CD; /* Vendor*/
  FK0GW00.FK-MAT-CONT-NBR = FK0GM110.FK-MAT-CONT-NBR; /* Contract*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the vendor description from the vendor table.*/
   /* --------------------------------------------------------------*/
  ;
  FK0G-1110(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Get all contract information from the contract table.*/
   /* --------------------------------------------------------------*/
  ;
  FK0GW00.FK0GW-IDX = 1; /* Init index*/
  FK0GW00.FK0GW-END-CURSOR-SW = "N"; /* Init index*/
  FK0GW00.FK0GW-DATA-FND-SW = "N"; /* Init index*/
  ;
  move " " to FK0GW00.FK-MAT-CONT-TXT[1] for all; /* Init text lines*/
  FK0GW00.FK-CONT-EFF-BDT = 0; /* Init effective begin date*/
  FK0GW00.FK-CONT-EFF-XDT = 0; /* Init effective end date*/
  ;
  FK0G-1120(); /* Declare cursor DCMPNT.VCTRCT01*/
  ;
  FK0G-1130(); /* Fetch record from DCMPNT.VCTRCT01*/
  ;
  while (FK0GW00.FK0GW-END-CURSOR-SW != "Y" /* Until end of cursor*/
   && FK0GW00.FK0GW-IDX <= 15) /* or end of map*/
    ;
    if (FK0GW00.FK0GW-IDX == 1) /* If first record*/
      ;
      FK0GW00.FK-CONT-EFF-BDT = VCTRCT01.FK-CONT-EFF-BDT;
      FK0GW00.FK-CONT-EFF-XDT = VCTRCT01.FK-CONT-EFF-XDT;
      FK0GW00.FK0GW-DATA-FND-SW = "Y"; /* Data found sw*/
    end
    ;
    FK0GW00.FK-MAT-CONT-TXT[FK0GW-IDX] = VCTRCT01.FK-MAT-CONT-TXT;
    ;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1; /* Increment*/
    ;
    FK0G-1130(); /* Fetch record from DCMPNT.VCTRCT01*/
  end
  ;
  FK0G-1140(); /* Close DCMPNT.VCTRCT01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data obtained in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "Y") /* If data was found*/
    FK0G-1150(); /* Save data*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Display a message if no data was found to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "N") /* If no data found*/
    FKWREC.XXXMSGNO = 18; /* No data found*/
    FKWREC.XXX-MOD-ID = "1100"; /* Module identification*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "Y") /* If data was found*/
    FK0GW00.FK0GW-FMAT-MAP-SW = "Y";
  else
    FK0GW00.FK0GW-FMAT-MAP-SW = "N";
  end
  ;
  FK0GW00.FK0GW-REQUEST-DATA-SW = "N";
  ;
  ;
end // end FK0G-1100

// Select DCMPNT.VVNDR001
Function FK0G-1110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0GM110.FK-VEND-CD; /* Vendor*/
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1110 SELECT DCMPNT.VVNDR001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-1110

// Declare DCMPNT.VCTRCT01 cursor
Function FK0G-1120()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VCTRCT01 empty;
  ;
  VCTRCT01.FK-VEND-CD = FK0GM110.FK-VEND-CD; /* Vendor*/
  VCTRCT01.FK-MAT-CONT-NBR = FK0GM110.FK-MAT-CONT-NBR; /* Cont nbr*/
  ;
  try
    call "IO6650" ("S1", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1120 DECLARE DCMPNT.VCTRCT01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-1120

// Fetch DCMPNT.VCTRCT01 cursor
Function FK0G-1130()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6650" ("N1", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No record found*/
      ;
      FK0GW00.FK0GW-END-CURSOR-SW = "Y"; /* Set end of cursor switch*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1130 FETCH DCMPNT.VCTRCT01      ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-1130

// Close DCMPNT.VCTRCT01 cursor
Function FK0G-1140()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6650" ("C1", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1140 CLOSE DMCPNT.VCTRCT01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-1140

// Save data in display storage
Function FK0G-1150()
   /* --------------------------------------------------------------*/
   /* Save data in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0GW01 empty;
  ;
  FK0GW01.FK-VEND-CD = FK0GM110.FK-VEND-CD; /* Vendor*/
  FK0GW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor desc*/
  FK0GW01.FK-MAT-CONT-NBR = FK0GM110.FK-MAT-CONT-NBR; /* Cont nbr*/
  FK0GW01.FK-CONT-EFF-BDT = FK0GW00.FK-CONT-EFF-BDT; /* Effective begin date*/
  FK0GW01.FK-CONT-EFF-XDT = FK0GW00.FK-CONT-EFF-XDT; /* Effective end date*/
  ;
  FK0GW00.FK0GW-IDX = 1;
  while (FK0GW00.FK0GW-IDX <= 15) /* Until end of map*/
    ;
    FK0GW01.FK-MAT-CONT-TXT[FK0GW-IDX] = FK0GW00.FK-MAT-CONT-TXT[FK0GW-IDX]; /* Contract text*/
    ;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1; /* Increment*/
  end
end // end FK0G-1150

// Format and converse INQ map
Function FK0G-1200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FK0G-1210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0GM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0GM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0GM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FK0GM110 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0GM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0GM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set fields dark if no data to display*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "N") /* No data to display*/
    ;
    set FK0GM110.FK-VEND-SNM invisible, skip;
    set FK0GM110.FK-CONT-EFF-BDT invisible, skip;
    set FK0GM110.FK-CONT-EFF-XDT invisible, skip;
    ;
    FK0GW00.FK0GW-IDX = 1;
    while (FK0GW00.FK0GW-IDX <= 15)
      set FK0GM110.FK-MAT-CONT-TXT[FK0GW-IDX] invisible, skip;
      FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors*/
    set FK0GM110.FK-VEND-CD cursor;
  end
  ;
  ;
  converse FK0GM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0GM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0GM110.CAITEM; /* Application data*/
  ;
  ;
end // end FK0G-1200

// Format the display data
Function FK0G-1210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FK0GW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0GM110.FK-VEND-CD = FK0GW01.FK-VEND-CD; /* Vendor cd*/
  FK0GM110.FK-VEND-SNM = FK0GW01.FK-VEND-SNM; /* Vendor desc*/
  FK0GM110.FK-MAT-CONT-NBR = FK0GW01.FK-MAT-CONT-NBR; /* Cont nbr*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0GM110.FK-CONT-EFF-BDT = FK0GW01.FK-CONT-EFF-BDT; /* Eff date*/
  FK0GM110.FK-CONT-EFF-XDT = FK0GW01.FK-CONT-EFF-XDT; /* Eff date*/
  ;
  FK0GW00.FK0GW-IDX = 1; /* Init index*/
  while (FK0GW00.FK0GW-IDX <= 15) /* Until end of map*/
    ;
    FK0GM110.FK-MAT-CONT-TXT[FK0GW-IDX] = FK0GW01.FK-MAT-CONT-TXT[FK0GW-IDX]; /* Contract text*/
    ;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1; /* Increment*/
  end
  ;
  ;
end // end FK0G-1210

// Check attention identifier
Function FK0G-1300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0GM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-CONT-NBR = FK0GM110.FK-MAT-CONT-NBR; /* Cont nbr*/
    ;
    COMMAREA.CATOAP = "FK0G"; /* to applicaiton*/
    COMMAREA.CAITEM = "I"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0GM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0GM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FK0GM110.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-CONT-NBR = FK0GM110.FK-MAT-CONT-NBR; /* Cont nbr*/
      ;
      COMMAREA.CATOAP = FK0GM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0GM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0GM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* FK0E requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf15 /* FK0H requested*/
   || converseVar.eventKey is pf16 /* FK0M requested*/
   || converseVar.eventKey is pf17) /* FK02 requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0GM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FK0E"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0F"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FK0M"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK02"; /* TO application*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0GM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-CONT-NBR = FK0GM110.FK-MAT-CONT-NBR; /* Cont nbr*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0G-1300

// Reset Highlighted fields
Function FK0G-1400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0GM110.FK-VEND-CD initialAttributes; /* Vender code*/
  set FK0GM110.FK-VEND-SNM initialAttributes; /* Vender desc*/
  set FK0GM110.FK-MAT-CONT-NBR initialAttributes; /* Contract nbr*/
  set FK0GM110.FK-CONT-EFF-BDT initialAttributes; /* Begin effective date*/
  set FK0GM110.FK-CONT-EFF-XDT initialAttributes; /* End effective date*/
  ;
  FK0GW00.FK0GW-IDX = 1; /* Init index*/
  while (FK0GW00.FK0GW-IDX <= 15) /* For each line*/
    ;
    set FK0GM110.FK-MAT-CONT-TXT[FK0GW-IDX] initialAttributes;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
  end
  ;
  set FK0GM110.CATOAP initialAttributes; /* TO application*/
  set FK0GM110.CAITEM initialAttributes; /* Application item*/
  ;
  ;
end // end FK0G-1400

// Verify entered fields
Function FK0G-1500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0GM110.CAITEM > " ") /* Application data was entered*/
    ;
    set FK0GM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify contract number was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0GM110.FK-MAT-CONT-NBR == 0) /* If contract nbr not entered*/
    ;
    set FK0GM110.FK-MAT-CONT-NBR cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(8); /* Required field missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the vendor data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0GM110.FK-VEND-CD == " ") /* If vendor code missing*/
    ;
    set FK0GM110.FK-VEND-CD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(21); /* Vendor code invalid or missing*/
  else
    ;
    FK0G-1510(); /* Verify vendor code*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FK0G-1500

// Verify vendor code
Function FK0G-1510()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0GM110.FK-VEND-CD; /* Vendor*/
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      converseLib.validationFailed(21); /* Vendor missing or invalid*/
      FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
      set FK0GM110.FK-VEND-CD cursor, bold; /* Highlight*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1510 VERIFY VENDOR CODE         ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-1510

// Process valid request
Function FK0G-1600()
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0GM110.FK-VEND-CD != FK0GW01.FK-VEND-CD /* If vendor changed*/
   || FK0GM110.FK-MAT-CONT-NBR != FK0GW01.FK-MAT-CONT-NBR) /* Cont chg*/
    ;
    FK0GW00.FK0GW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end
  ;
  ;
end // end FK0G-1600

// Process inquiry map
Function FK0G-2000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0G-2100(); /* Obtain the data to display*/
  FK0G-2200(); /* Format and display the map*/
  FK0G-2300(); /* Check attention identifier*/
  FK0G-2400(); /* Reset fields to normal intensity*/
  FK0G-2500(); /* Verify the entered data*/
  FK0G-2600(); /* Process valid input request*/
  ;
  ;
end // end FK0G-2000

// Obtain data to display
Function FK0G-2100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  FK0GW00.FK0GW-DATA-FND-SW = "N"; /* No data found yet*/
  ;
   /* --------------------------------------------------------------*/
   /* Save vendor in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0GW01 empty; /* Initialize display storage*/
  ;
  FK0GW00.FK-VEND-CD = FK0GM210.FK-VEND-CD; /* Vendor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the vendor description from the vendor table.*/
   /* --------------------------------------------------------------*/
  ;
  FK0G-2110(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Determine next contract number.*/
   /* --------------------------------------------------------------*/
  ;
  FK0G-2120(); /* Select max from DCMPNT.VCTRCT01*/
  ;
  if (FK0GW02.FK0GW-INDICATOR < 0) /* If indicator negative*/
    FK0GW00.FK-MAT-CONT-NBR = 1; /* Default to cont #1*/
  else
    FK0GW00.FK-MAT-CONT-NBR = FK0GW02.FK0GW-COUNT + 1; /* Next cont nbr*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0G-2130(); /* Save data in disp storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0GW00.FK0GW-DATA-FND-SW = "Y"; /* Data found*/
  FK0GW00.FK0GW-REQUEST-DATA-SW = "N";
  FK0GW00.FK0GW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FK0G-2100

// Select DCMPNT.VVNDR001
Function FK0G-2110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0GM210.FK-VEND-CD; /* Vendor*/
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2110 SELECT DCMPNT.VVNDR001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-2110

// Select max DCMPNT.VCTRCT01
Function FK0G-2120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VCTRCT01 empty;
  set FK0GW02 empty;
  ;
  VCTRCT01.FK-VEND-CD = FK0GM210.FK-VEND-CD; /* Vendor*/
  ;
  FK0GW02.FK0GW-FUNC = "SM"; /* Function*/
  ;
  try
    call "IO6650" (FK0GW02, SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2120 SELECT DCMPNT.VCTRCT01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-2120

// Save data in display storage
Function FK0G-2130()
   /* --------------------------------------------------------------*/
   /* Save data in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0GW01 empty;
  ;
  FK0GW01.FK-VEND-CD = FK0GM210.FK-VEND-CD; /* Vendor*/
  FK0GW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor desc*/
  FK0GW01.FK-MAT-CONT-NBR = FK0GW00.FK-MAT-CONT-NBR; /* Cont nbr*/
  ;
  ;
end // end FK0G-2130

// Format and converse ADD map
Function FK0G-2200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FK0G-2210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Protect fields if no data found to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "N") /* If no data found*/
    ;
    set FK0GM210.FK-CONT-EFF-BDT invisible, skip;
    set FK0GM210.FK-CONT-EFF-XDT invisible, skip;
    ;
    FK0GW00.FK0GW-IDX = 1; /* Init index*/
    while (FK0GW00.FK0GW-IDX <= 15) /* For each line*/
      ;
      set FK0GM210.FK-MAT-CONT-TXT[FK0GW-IDX] invisible, skip;
      FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0GM210.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0GM210.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0GM210.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FK0GM210 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0GM210.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0GM210.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 18) /* No data to display*/
    set FK0GM210.FK-VEND-CD cursor;
  else
    ;
    if (converseVar.validationMsgNum == 0 /* No errors*/
     || converseVar.validationMsgNum == 1) /* Update successful*/
      ;
      if (FK0GM210.FK-VEND-CD != " ")
        set FK0GM210.FK-CONT-EFF-BDT cursor;
      else
        set FK0GM210.FK-VEND-CD cursor;
      end
    end
  end
  ;
  ;
  converse FK0GM210 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0GM210.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0GM210.CAITEM; /* Application data*/
  ;
  ;
end // end FK0G-2200

// Format the display data
Function FK0G-2210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FK0GW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0GM210.FK-VEND-CD = FK0GW01.FK-VEND-CD; /* Vendor cd*/
  FK0GM210.FK-VEND-SNM = FK0GW01.FK-VEND-SNM; /* Vendor desc*/
  FK0GM210.FK-MAT-CONT-NBR = FK0GW01.FK-MAT-CONT-NBR; /* Cont nbr*/
  ;
  ;
end // end FK0G-2210

// Check attention identifier
Function FK0G-2300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0GM210.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-CONT-NBR = FK0GM210.FK-MAT-CONT-NBR; /* Cont nbr*/
    ;
    COMMAREA.CATOAP = "FK0G"; /* to applicaiton*/
    COMMAREA.CAITEM = "A"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0GM210.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0GM210.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FK0GM210.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-CONT-NBR = FK0GM210.FK-MAT-CONT-NBR; /* Cont nbr*/
      ;
      COMMAREA.CATOAP = FK0GM210.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0GM210.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0GM210.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* FK0E requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf15 /* FK0H requested*/
   || converseVar.eventKey is pf16 /* FK0M requested*/
   || converseVar.eventKey is pf17) /* FK02 requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0GM210"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FK0E"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0F"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FK0M"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK02"; /* TO application*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0GM210.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-CONT-NBR = FK0GM210.FK-MAT-CONT-NBR; /* Cont nbr*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0G-2300

// Reset Highlighted fields
Function FK0G-2400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0GM210.FK-VEND-CD initialAttributes; /* Vender code*/
  set FK0GM210.FK-MAT-CONT-NBR initialAttributes; /* Contract nbr*/
  set FK0GM210.FK-CONT-EFF-BDT initialAttributes; /* Beginning eff dt*/
  set FK0GM210.FK-CONT-EFF-XDT initialAttributes; /* Ending eff dt*/
  ;
  FK0GW00.FK0GW-IDX = 1;
  ;
  while (FK0GW00.FK0GW-IDX <= 15) /* For each line*/
    set FK0GM210.FK-MAT-CONT-TXT[FK0GW-IDX] initialAttributes;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1; /* Increment*/
  end
  ;
  set FK0GM210.CATOAP initialAttributes; /* TO application*/
  set FK0GM210.CAITEM initialAttributes; /* Application item*/
  ;
  ;
end // end FK0G-2400

// Verify entered fields
Function FK0G-2500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0GM210.CAITEM > " ") /* Application data was entered*/
    ;
    set FK0GM210.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If the header changed, verify it.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0GM210.FK-VEND-CD != FK0GW01.FK-VEND-CD /* Vendor changed*/
   || FK0GM210.FK-VEND-CD == " ")               /* or vendor blank*/
    ;
    if (FK0GM210.FK-VEND-CD == " ") /* If vendor code missing*/
      ;
      set FK0GM210.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code invalid or missing*/
    else
      ;
      FK0G-2510(); /* Verify vendor code*/
    end
    ;
    ;
  else
    /* ---------------------------------------------------------------*/
    /* Otherwise, verify the detail data.*/
    /* ---------------------------------------------------------------*/
    ;
    /* ---------------------------------------------------------------*/
    /* Verify text lines were entered*/
    /* ---------------------------------------------------------------*/
    ;
    FK0GW00.FK0GW-IDX = 1; /* Init index*/
    FK0GW00.FK0GW-TXT-COUNT = 0; /* Init count*/
    ;
    while (FK0GW00.FK0GW-IDX <= 15)
      ;
      if (FK0GM210.FK-MAT-CONT-TXT[FK0GW-IDX] != " ") /* If text entered*/
        FK0GW00.FK0GW-TXT-COUNT = FK0GW00.FK0GW-TXT-COUNT + 1;
      end
      FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
    end
    ;
    if (FK0GW00.FK0GW-TXT-COUNT == 0) /* If no data entered*/
      ;
      set FK0GM210.FK-MAT-CONT-TXT[1] cursor, bold;
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(115); /* At least 1 line of cont info must be entered*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the date fields*/
    /* ---------------------------------------------------------------*/
    ;
    FK0G-2520(); /* Verify dates*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FK0G-2500

// Verify vendor code
Function FK0G-2510()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0GM210.FK-VEND-CD; /* Vendor*/
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      converseLib.validationFailed(21); /* Vendor missing or invalid*/
      FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
      set FK0GM210.FK-VEND-CD cursor, bold; /* Highlight*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2510 VERIFY VENDOR CODE         ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-2510

// Verify dates
Function FK0G-2520()
   /* ------------------------------------------------------------*/
   /* Determine effective 'to' date is valid.  Use subroutine TA0040.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FK0GM210.FK-CONT-EFF-XDT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(8); /* Required field missing or invalid*/
      FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
      set FK0GM210.FK-CONT-EFF-XDT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Determine effective 'from' date is valid.  Use subroutine TA0040.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FK0GM210.FK-CONT-EFF-BDT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(8); /* Required field missing or invalid*/
      FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
      set FK0GM210.FK-CONT-EFF-BDT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Compare dates.  If the from date is greater than  the*/
   /* to date, display error message.*/
   /* perform this edit only if to date entered*/
   /* ------------------------------------------------------------*/
  ;
   /* =======> First, reformat the dates*/
  ;
  FK0GW00.FK0GW-WORK-DATE = FK0GM210.FK-CONT-EFF-BDT;
  if (FK0GW00.FK0GW-WORK-YY <= 75)
    FK0GW-WORK-CC = 20;
  else
    FK0GW-WORK-CC = 19;
  end
  FK0GW00.FK0GW-FK-CONT-EFF-BDT = FK0GW00.FK0GW-WORK-DATE;
  ;
  FK0GW00.FK0GW-WORK-DATE = FK0GM210.FK-CONT-EFF-XDT;
  if (FK0GW00.FK0GW-WORK-YY <= 75)
    FK0GW-WORK-CC = 20;
  else
    FK0GW-WORK-CC = 19;
  end
  FK0GW00.FK0GW-FK-CONT-EFF-XDT = FK0GW00.FK0GW-WORK-DATE;
  ;
  ;
   /* =======> Now, verify the reformatted dates*/
  ;
  if (FK0GW00.FK0GW-FK-CONT-EFF-BDT > FK0GW00.FK0GW-FK-CONT-EFF-XDT)
    ;
    converseLib.validationFailed(99); /* From date must not be > to date*/
    FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
    set FK0GM210.FK-CONT-EFF-BDT cursor, bold; /* Highlight*/
    set FK0GM210.FK-CONT-EFF-XDT bold; /* Highlight*/
  end
  ;
  ;
end // end FK0G-2520

// Process valid request
Function FK0G-2600()
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0GM210.FK-VEND-CD != FK0GW01.FK-VEND-CD) /* If vendor changed*/
    ;
    FK0GW00.FK0GW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Determine the last line on the screen that has data in it.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0GW00.FK0GW-IDX = 15; /* Init index*/
  while (FK0GW00.FK0GW-IDX >= 1) /* For each map line*/
    ;
    if (FK0GM210.FK-MAT-CONT-TXT[FK0GW-IDX] != " ") /* Text entered*/
      FK0GW00.FK0GW-TXT-COUNT = FK0GW00.FK0GW-IDX; /* Save location*/
      FK0GW00.FK0GW-IDX = 1; /* Get out while ya can*/
    end
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX - 1; /* Decrement*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Verify one last time that the contract doesn't already exist.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0G-2610(); /* Select count DCMPNT.VCTRCT01*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Get current date and time information.*/
   /* --------------------------------------------------------------------*/
  ;
  XX0XS01();
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Add a record to the database for each line of text.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0GW00.FK0GW-IDX = 1; /* Init index*/
  ;
  while (FK0GW00.FK0GW-IDX <= FK0GW00.FK0GW-TXT-COUNT) /* Do 'til end of txt*/
    ;
    FK0G-2620(); /* Insert DCMPNT.VCTRCT01*/
    ;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Initialize the map and display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0GW01 empty; /* Init display storage*/
  ;
  FK0GM210.FK-VEND-CD = " ";
  FK0GM210.FK-VEND-SNM = " ";
  FK0GM210.FK-MAT-CONT-NBR = 0;
  FK0GM210.FK-CONT-EFF-BDT = 0;
  FK0GM210.FK-CONT-EFF-XDT = 0;
  ;
  FK0GW00.FK0GW-IDX = 1;
  while (FK0GW00.FK0GW-IDX <= 15)
    ;
    FK0GM210.FK-MAT-CONT-TXT[FK0GW-IDX] = " ";
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
  end
  ;
  FK0GW00.FK0GW-DATA-FND-SW = "N";
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate data was successfully updated.*/
   /* --------------------------------------------------------------------*/
  ;
  FKWREC.XXXMSGNO = 1; /* Update successful*/
  FKWREC.XXX-MOD-ID = "2600"; /* Module identification*/
  ;
  ;
end // end FK0G-2600

// Select count DCMPNT.VCTRCT01
Function FK0G-2610()
   /* ------------------------------------------------------------*/
   /* Perform a select count on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VCTRCT01 empty;
  set FK0GW02 empty;
  ;
  VCTRCT01.FK-VEND-CD = FK0GM210.FK-VEND-CD; /* Vendor*/
  VCTRCT01.FK-MAT-CONT-NBR = FK0GM210.FK-MAT-CONT-NBR; /* Cont nbr*/
  ;
  FK0GW02.FK0GW-FUNC = "T1"; /* Select count function*/
  ;
  ;
  try
    call "IO6650" (FK0GW02, SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (FK0GW02.FK0GW-COUNT > 0) /* If records found*/
        ;
        FKWREC.XXXMSGNO = 12; /* Database updated by another*/
        FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
        FK0GW00.FK0GW-REQUEST-DATA-SW = "Y";
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* Rollback database changes*/
        exit stack;
      end
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2610 SELECT COUNT DCMPNT.VCTRCT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-2610

// Insert DCMPNT.VCTRCT01 row
Function FK0G-2620()
   /* ------------------------------------------------------------*/
   /* Perform a select count on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VCTRCT01 empty;
  ;
  VCTRCT01.FK-VEND-CD = FK0GM210.FK-VEND-CD; /* Vendor*/
  VCTRCT01.FK-MAT-CONT-NBR = FK0GM210.FK-MAT-CONT-NBR; /* Cont nbr*/
  ;
  FK0GW00.FK0GW-WORK-DATE = FK0GM210.FK-CONT-EFF-BDT;
  if (FK0GW00.FK0GW-WORK-YY <= 75)
    FK0GW00.FK0GW-WORK-CC = 20;
  else
    FK0GW00.FK0GW-WORK-CC = 19;
  end
  VCTRCT01.FK-CONT-EFF-BDT = FK0GW00.FK0GW-WORK-DATE; /* Beg eff dt*/
  ;
  FK0GW00.FK0GW-WORK-DATE = FK0GM210.FK-CONT-EFF-XDT;
  if (FK0GW00.FK0GW-WORK-YY <= 75)
    FK0GW00.FK0GW-WORK-CC = 20;
  else
    FK0GW00.FK0GW-WORK-CC = 19;
  end
  VCTRCT01.FK-CONT-EFF-XDT = FK0GW00.FK0GW-WORK-DATE; /* End eff dt*/
  ;
  VCTRCT01.FK-TXT-SEQ-NBR = FK0GW00.FK0GW-IDX; /* Sequence nbr*/
  VCTRCT01.FK-MAT-CONT-TXT = FK0GM210.FK-MAT-CONT-TXT[FK0GW-IDX];
  ;
  VCTRCT01.ZZZSDT = XX0XW01.XX0XWDAT; /* Setup date*/
  VCTRCT01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VCTRCT01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VCTRCT01.ZZZCHGCT = 0; /* Change count*/
  ;
  ;
  try
    call "IO6650" ("A ", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2620 ADD DCMPNT.VCTRCT01 ROW     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-2620

// Process inquiry map
Function FK0G-3000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0G-3100(); /* Obtain the data to display*/
  FK0G-3200(); /* Format and display the map*/
  FK0G-3300(); /* Check attention identifier*/
  FK0G-3400(); /* Reset fields to normal intensity*/
  FK0G-3500(); /* Verify the entered data*/
  FK0G-3600(); /* Process valid input request*/
  ;
  ;
end // end FK0G-3000

// Obtain data to display
Function FK0G-3100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0GW01 empty; /* Initialize display storage*/
  ;
  FK0GW00.FK-VEND-CD = FK0GM310.FK-VEND-CD; /* Vendor*/
  FK0GW00.FK-MAT-CONT-NBR = FK0GM310.FK-MAT-CONT-NBR; /* Contract*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the vendor description from the vendor table.*/
   /* --------------------------------------------------------------*/
  ;
  FK0G-3110(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Get all contract information from the contract table.*/
   /* --------------------------------------------------------------*/
  ;
  FK0GW00.FK0GW-IDX = 1; /* Init index*/
  FK0GW00.FK0GW-END-CURSOR-SW = "N"; /* Init index*/
  FK0GW00.FK0GW-DATA-FND-SW = "N"; /* Init index*/
  ;
  move " " to FK0GW00.FK-MAT-CONT-TXT[1] for all; /* Init text lines*/
  FK0GW00.FK-CONT-EFF-BDT = 0; /* Init effective begin date*/
  FK0GW00.FK-CONT-EFF-XDT = 0; /* Init effective end date*/
  ;
  FK0G-3120(); /* Declare cursor DCMPNT.VCTRCT01*/
  ;
  FK0G-3130(); /* Fetch record from DCMPNT.VCTRCT01*/
  ;
  while (FK0GW00.FK0GW-END-CURSOR-SW != "Y" /* Until end of cursor*/
   && FK0GW00.FK0GW-IDX <= 15) /* or end of map*/
    ;
    if (FK0GW00.FK0GW-IDX == 1) /* If first record*/
      ;
      FK0GW00.FK-CONT-EFF-BDT = VCTRCT01.FK-CONT-EFF-BDT;
      FK0GW00.FK-CONT-EFF-XDT = VCTRCT01.FK-CONT-EFF-XDT;
      FK0GW00.FK0GW-DATA-FND-SW = "Y"; /* Data found sw*/
    end
    ;
    FK0GW00.FK-MAT-CONT-TXT[FK0GW-IDX] = VCTRCT01.FK-MAT-CONT-TXT;
    FK0GW00.VCTRCT01-GROUP[FK0GW-IDX] = VCTRCT01.VCTRCT01-GROUP;
    ;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1; /* Increment*/
    ;
    FK0G-3130(); /* Fetch record from DCMPNT.VCTRCT01*/
  end
  ;
  FK0G-3140(); /* Close DCMPNT.VCTRCT01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data obtained in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "Y") /* If data was found*/
    FK0G-3150(); /* Save data*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Display a message if no data was found to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "N") /* If no data found*/
    FKWREC.XXXMSGNO = 18; /* No data found*/
    FKWREC.XXX-MOD-ID = "3100"; /* Module identification*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "Y") /* If data was found*/
    FK0GW00.FK0GW-FMAT-MAP-SW = "Y";
  else
    FK0GW00.FK0GW-FMAT-MAP-SW = "N";
  end
  ;
  FK0GW00.FK0GW-REQUEST-DATA-SW = "N";
  ;
  ;
end // end FK0G-3100

// Select DCMPNT.VVNDR001
Function FK0G-3110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0GM310.FK-VEND-CD; /* Vendor*/
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3110 SELECT DCMPNT.VVNDR001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-3110

// Declare DCMPNT.VCTRCT01 cursor
Function FK0G-3120()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VCTRCT01 empty;
  ;
  VCTRCT01.FK-VEND-CD = FK0GM310.FK-VEND-CD; /* Vendor*/
  VCTRCT01.FK-MAT-CONT-NBR = FK0GM310.FK-MAT-CONT-NBR; /* Cont nbr*/
  ;
  try
    call "IO6650" ("S1", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3120 DECLARE DCMPNT.VCTRCT01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-3120

// Fetch DCMPNT.VCTRCT01 cursor
Function FK0G-3130()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6650" ("N1", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No record found*/
      ;
      FK0GW00.FK0GW-END-CURSOR-SW = "Y"; /* Set end of cursor switch*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3130 FETCH DCMPNT.VCTRCT01      ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-3130

// Close DCMPNT.VCTRCT01 cursor
Function FK0G-3140()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6650" ("C1", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3140 CLOSE DMCPNT.VCTRCT01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-3140

// Save data in display storage
Function FK0G-3150()
   /* --------------------------------------------------------------*/
   /* Save data in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0GW01 empty;
  ;
  FK0GW01.FK-VEND-CD = FK0GM310.FK-VEND-CD; /* Vendor*/
  FK0GW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor desc*/
  FK0GW01.FK-MAT-CONT-NBR = FK0GM310.FK-MAT-CONT-NBR; /* Cont nbr*/
  FK0GW01.FK-CONT-EFF-BDT = FK0GW00.FK-CONT-EFF-BDT; /* Effective begin date*/
  FK0GW01.FK-CONT-EFF-XDT = FK0GW00.FK-CONT-EFF-XDT; /* Effective end date*/
  ;
  FK0GW00.FK0GW-IDX = 1;
  while (FK0GW00.FK0GW-IDX <= 15) /* Until end of map*/
    ;
    FK0GW01.FK-MAT-CONT-TXT[FK0GW-IDX] = FK0GW00.FK-MAT-CONT-TXT[FK0GW-IDX]; /* Contract text*/
    ;
    FK0GW01.VCTRCT01-GROUP[FK0GW-IDX] = FK0GW00.VCTRCT01-GROUP[FK0GW-IDX]; /* Entire record*/
    ;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1; /* Increment*/
  end
end // end FK0G-3150

// Format and converse CHG map
Function FK0G-3200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FK0G-3210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Protect fields if no data found to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "N") /* If no data found*/
    ;
    set FK0GM310.FK-CONT-EFF-BDT invisible, skip;
    set FK0GM310.FK-CONT-EFF-XDT invisible, skip;
    ;
    FK0GW00.FK0GW-IDX = 1; /* Init index*/
    while (FK0GW00.FK0GW-IDX <= 15) /* For each line*/
      ;
      set FK0GM310.FK-MAT-CONT-TXT[FK0GW-IDX] invisible, skip;
      FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0GM310.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0GM310.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0GM310.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FK0GM310 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0GM310.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0GM310.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 18) /* No data to display*/
    set FK0GM310.FK-VEND-CD cursor;
  else
    ;
    if (converseVar.validationMsgNum == 0 /* No errors*/
     || converseVar.validationMsgNum == 1) /* Update successful*/
      ;
      if (FK0GM310.FK-VEND-CD != " ")
        set FK0GM310.FK-CONT-EFF-BDT cursor;
      else
        set FK0GM310.FK-VEND-CD cursor;
      end
    end
  end
  ;
  ;
  converse FK0GM310 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0GM310.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0GM310.CAITEM; /* Application data*/
  ;
  ;
end // end FK0G-3200

// Format the display data
Function FK0G-3210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FK0GW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0GM310.FK-VEND-CD = FK0GW01.FK-VEND-CD; /* Vendor cd*/
  FK0GM310.FK-VEND-SNM = FK0GW01.FK-VEND-SNM; /* Vendor desc*/
  FK0GM310.FK-MAT-CONT-NBR = FK0GW01.FK-MAT-CONT-NBR; /* Cont nbr*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0GM310.FK-CONT-EFF-BDT = FK0GW01.FK-CONT-EFF-BDT; /* Eff date*/
  FK0GM310.FK-CONT-EFF-XDT = FK0GW01.FK-CONT-EFF-XDT; /* Eff date*/
  ;
  FK0GW00.FK0GW-IDX = 1; /* Init index*/
  while (FK0GW00.FK0GW-IDX <= 15) /* Until end of map*/
    ;
    FK0GM310.FK-MAT-CONT-TXT[FK0GW-IDX] = FK0GW01.FK-MAT-CONT-TXT[FK0GW-IDX]; /* Contract text*/
    ;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1; /* Increment*/
  end
  ;
  ;
end // end FK0G-3210

// Check attention identifier
Function FK0G-3300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0GM310.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-CONT-NBR = FK0GM310.FK-MAT-CONT-NBR; /* Cont nbr*/
    ;
    COMMAREA.CATOAP = "FK0G"; /* to applicaiton*/
    COMMAREA.CAITEM = "C"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0GM310.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0GM310.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FK0GM310.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-CONT-NBR = FK0GM310.FK-MAT-CONT-NBR; /* Cont nbr*/
      ;
      COMMAREA.CATOAP = FK0GM310.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0GM310.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0GM310.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* FK0E requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf15 /* FK0H requested*/
   || converseVar.eventKey is pf16 /* FK0M requested*/
   || converseVar.eventKey is pf17) /* FK02 requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0GM310"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FK0E"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0F"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FK0M"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK02"; /* TO application*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0GM310.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-CONT-NBR = FK0GM310.FK-MAT-CONT-NBR; /* Cont nbr*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0G-3300

// Reset Highlighted fields
Function FK0G-3400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0GM310.FK-VEND-CD initialAttributes; /* Vender code*/
  set FK0GM310.FK-MAT-CONT-NBR initialAttributes; /* Contract nbr*/
  set FK0GM310.FK-CONT-EFF-BDT initialAttributes; /* Beginning eff dt*/
  set FK0GM310.FK-CONT-EFF-XDT initialAttributes; /* Ending eff dt*/
  ;
  FK0GW00.FK0GW-IDX = 1;
  ;
  while (FK0GW00.FK0GW-IDX <= 15) /* For each line*/
    set FK0GM310.FK-MAT-CONT-TXT[FK0GW-IDX] initialAttributes;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1; /* Increment*/
  end
  ;
  set FK0GM310.CATOAP initialAttributes; /* TO application*/
  set FK0GM310.CAITEM initialAttributes; /* Application item*/
  ;
  ;
end // end FK0G-3400

// Verify entered fields
Function FK0G-3500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0GM310.CAITEM > " ") /* Application data was entered*/
    ;
    set FK0GM310.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If the header changed, verify it.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0GM310.FK-VEND-CD != FK0GW01.FK-VEND-CD           /* Vendor changed*/
   || FK0GM310.FK-MAT-CONT-NBR != FK0GW01.FK-MAT-CONT-NBR /* Cont changed*/
   || FK0GM310.FK-VEND-CD == " "                          /* or vendor not entered*/
   || FK0GM310.FK-MAT-CONT-NBR == 0)                      /* or contract not entered*/
    ;
    if (FK0GM310.FK-MAT-CONT-NBR == 0) /* Contract not entered*/
      ;
      set FK0GM310.FK-MAT-CONT-NBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
    ;
    if (FK0GM310.FK-VEND-CD == " ") /* If vendor code missing*/
      ;
      set FK0GM310.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code invalid or missing*/
    else
      ;
      FK0G-3510(); /* Verify vendor code*/
    end
    ;
    ;
  else
    /* ---------------------------------------------------------------*/
    /* Otherwise, verify the detail data.*/
    /* ---------------------------------------------------------------*/
    ;
    /* ---------------------------------------------------------------*/
    /* Verify text lines were entered*/
    /* ---------------------------------------------------------------*/
    ;
    FK0GW00.FK0GW-IDX = 1; /* Init index*/
    FK0GW00.FK0GW-TXT-COUNT = 0; /* Init count*/
    ;
    while (FK0GW00.FK0GW-IDX <= 15)
      ;
      if (FK0GM310.FK-MAT-CONT-TXT[FK0GW-IDX] != " ") /* If text entered*/
        FK0GW00.FK0GW-TXT-COUNT = FK0GW00.FK0GW-TXT-COUNT + 1;
      end
      FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
    end
    ;
    if (FK0GW00.FK0GW-TXT-COUNT == 0) /* If no data entered*/
      ;
      set FK0GM310.FK-MAT-CONT-TXT[1] cursor, bold;
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(115); /* At least 1 line of cont info must be entered*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the date fields*/
    /* ---------------------------------------------------------------*/
    ;
    FK0G-3520(); /* Verify dates*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FK0G-3500

// Verify vendor code
Function FK0G-3510()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0GM310.FK-VEND-CD; /* Vendor*/
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      converseLib.validationFailed(21); /* Vendor missing or invalid*/
      FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
      set FK0GM310.FK-VEND-CD cursor, bold; /* Highlight*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3510 VERIFY VENDOR CODE         ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-3510

// Verify dates
Function FK0G-3520()
   /* ------------------------------------------------------------*/
   /* Determine effective 'to' date is valid.  Use subroutine TA0040.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FK0GM310.FK-CONT-EFF-XDT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(8); /* Required field missing or invalid*/
      FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
      set FK0GM310.FK-CONT-EFF-XDT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Determine effective 'from' date is valid.  Use subroutine TA0040.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FK0GM310.FK-CONT-EFF-BDT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(8); /* Required field missing or invalid*/
      FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
      set FK0GM310.FK-CONT-EFF-BDT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Compare dates.  If the from date is greater than  the*/
   /* to date, display error message.*/
   /* perform this edit only if to date entered*/
   /* ------------------------------------------------------------*/
  ;
   /* =======> First, reformat the dates*/
  ;
  FK0GW00.FK0GW-WORK-DATE = FK0GM310.FK-CONT-EFF-BDT;
  if (FK0GW00.FK0GW-WORK-YY <= 75)
    FK0GW-WORK-CC = 20;
  else
    FK0GW-WORK-CC = 19;
  end
  FK0GW00.FK0GW-FK-CONT-EFF-BDT = FK0GW00.FK0GW-WORK-DATE;
  ;
  FK0GW00.FK0GW-WORK-DATE = FK0GM310.FK-CONT-EFF-XDT;
  if (FK0GW00.FK0GW-WORK-YY <= 75)
    FK0GW-WORK-CC = 20;
  else
    FK0GW-WORK-CC = 19;
  end
  FK0GW00.FK0GW-FK-CONT-EFF-XDT = FK0GW00.FK0GW-WORK-DATE;
  ;
  ;
   /* =======> Now, verify the reformatted dates*/
  ;
  if (FK0GW00.FK0GW-FK-CONT-EFF-BDT > FK0GW00.FK0GW-FK-CONT-EFF-XDT)
    ;
    converseLib.validationFailed(99); /* From date must not be > to date*/
    FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
    set FK0GM310.FK-CONT-EFF-BDT cursor, bold; /* Highlight*/
    set FK0GM310.FK-CONT-EFF-XDT bold; /* Highlight*/
  end
  ;
  ;
end // end FK0G-3520

// Process valid request
Function FK0G-3600()
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0GM310.FK-VEND-CD != FK0GW01.FK-VEND-CD /* If vendor changed*/
   || FK0GM310.FK-MAT-CONT-NBR != FK0GW01.FK-MAT-CONT-NBR) /* Cont chg*/
    ;
    FK0GW00.FK0GW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end
  ;
  FK0GW00.FK0GW-UPDT-PERFORMED-SW = "N"; /* Init switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Determine the last line on the screen that has data in it.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0GW00.FK0GW-IDX = 15; /* Init index*/
  while (FK0GW00.FK0GW-IDX >= 1) /* For each map line*/
    ;
    if (FK0GM310.FK-MAT-CONT-TXT[FK0GW-IDX] != " ") /* Text entered*/
      FK0GW00.FK0GW-TXT-COUNT = FK0GW00.FK0GW-IDX; /* Save location*/
      FK0GW00.FK0GW-IDX = 1; /* Get out while ya can*/
    end
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX - 1; /* Decrement*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Check to see if any text lines were changed.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0GW00.FK0GW-DATA-CHG-SW = "N"; /* Init data changed switch*/
  FK0GW00.FK0GW-IDX = 1; /* Init index*/
  ;
  while (FK0GW00.FK0GW-IDX <= 15
   && FK0GW00.FK0GW-DATA-CHG-SW == "N")
    ;
    if (FK0GM310.FK-MAT-CONT-TXT[FK0GW-IDX]
     != FK0GW01.FK-MAT-CONT-TXT[FK0GW-IDX]) /* If text changed*/
      ;
      FK0GW00.FK0GW-DATA-CHG-SW = "Y"; /* Set switch*/
    end
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If any text lines were changed, delete the rows from the contract*/
   /* table and re-add them.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-CHG-SW == "Y") /* If data changed*/
    ;
    FK0G-3610(); /* Delete rows*/
    ;
    ;
    XX0XS01(); /* Get current date and time*/
    ;
    ;
    /* --------------------------------------------------------------------*/
    /* Add a record to the database for each line of text.*/
    /* --------------------------------------------------------------------*/
    ;
    FK0GW00.FK0GW-IDX = 1; /* Init index*/
    ;
    while (FK0GW00.FK0GW-IDX <= FK0GW00.FK0GW-TXT-COUNT)
      ;
      FK0G-3620(); /* Insert DCMPNT.VCTRCT01*/
      FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
    end
    ;
    FK0GW00.FK0GW-UPDT-PERFORMED-SW = "Y"; /* Update was performed*/
    ;
  else
    /* --------------------------------------------------------------------*/
    /* Otherwise, if dates changed update the table rows.*/
    /* --------------------------------------------------------------------*/
    ;
    if (FK0GM310.FK-CONT-EFF-BDT != FK0GW01.FK-CONT-EFF-BDT /* Beg dt chg*/
     || FK0GM310.FK-CONT-EFF-XDT != FK0GW01.FK-CONT-EFF-XDT) /* End dt chg*/
      ;
      XX0XS01(); /* Get current date and time*/
      ;
      /* ------------------------------------------------------------------*/
      /* Update each record on the database.*/
      /* ------------------------------------------------------------------*/
      ;
      FK0GW00.FK0GW-IDX = 1; /* Init index*/
      ;
      while (FK0GW00.FK0GW-IDX <= FK0GW00.FK0GW-TXT-COUNT)
        ;
        FK0G-3630(); /* Update DCMPNT.VCTRCT01*/
        FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
      end
      ;
      FK0GW00.FK0GW-UPDT-PERFORMED-SW = "Y"; /* Update was performed*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If updates performed, set message and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-UPDT-PERFORMED-SW == "Y") /* Update was performed*/
    ;
    FKWREC.XXXMSGNO = 1; /* Update was performed*/
    FKWREC.XXX-MOD-ID = "3600"; /* Module identification*/
    FK0GW00.FK0GW-REQUEST-DATA-SW = "Y"; /* Get the data*/
  end
end // end FK0G-3600

// Delete DCMPNT.VCTRCT01 rows
Function FK0G-3610()
   /* ------------------------------------------------------------*/
   /* Delete the rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VCTRCT01 empty;
  ;
  VCTRCT01.FK-VEND-CD = FK0GM310.FK-VEND-CD; /* Vendor*/
  VCTRCT01.FK-MAT-CONT-NBR = FK0GM310.FK-MAT-CONT-NBR; /* Cont nbr*/
  ;
  ;
  try
    call "IO6650" ("D ", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || converseVar.validationMsgNum == +100) /* or row not found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3610 ADD DCMPNT.VCTRCT01 ROW     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-3610

// Insert DCMPNT.VCTRCT01 row
Function FK0G-3620()
   /* ------------------------------------------------------------*/
   /* Perform a select count on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VCTRCT01 empty;
  ;
  VCTRCT01.VCTRCT01-GROUP = FK0GW01.VCTRCT01-GROUP; /* Move group*/
  ;
  FK0GW00.FK0GW-WORK-DATE = FK0GM310.FK-CONT-EFF-BDT;
  if (FK0GW00.FK0GW-WORK-YY <= 75)
    FK0GW00.FK0GW-WORK-CC = 20;
  else
    FK0GW00.FK0GW-WORK-CC = 19;
  end
  VCTRCT01.FK-CONT-EFF-BDT = FK0GW00.FK0GW-WORK-DATE; /* Beg eff dt*/
  ;
  FK0GW00.FK0GW-WORK-DATE = FK0GM310.FK-CONT-EFF-XDT;
  if (FK0GW00.FK0GW-WORK-YY <= 75)
    FK0GW00.FK0GW-WORK-CC = 20;
  else
    FK0GW00.FK0GW-WORK-CC = 19;
  end
  VCTRCT01.FK-CONT-EFF-XDT = FK0GW00.FK0GW-WORK-DATE; /* End eff dt*/
  ;
  VCTRCT01.FK-TXT-SEQ-NBR = FK0GW00.FK0GW-IDX; /* Sequence nbr*/
  VCTRCT01.FK-MAT-CONT-TXT = FK0GM310.FK-MAT-CONT-TXT[FK0GW-IDX];
  ;
  VCTRCT01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VCTRCT01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VCTRCT01.ZZZCHGCT = VCTRCT01.ZZZCHGCT + 1; /* Change count*/
  ;
  ;
  try
    call "IO6650" ("A ", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3620 ADD DCMPNT.VCTRCT01 ROW     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-3620

// Update DCMPNT.VCTRCT01 row
Function FK0G-3630()
   /* ------------------------------------------------------------*/
   /* Perform a select count on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VCTRCT01 empty;
  ;
  VCTRCT01.VCTRCT01-GROUP = FK0GW01.VCTRCT01-GROUP[FK0GW-IDX];
  ;
  FK0GW00.FK0GW-WORK-DATE = FK0GM310.FK-CONT-EFF-BDT;
  if (FK0GW00.FK0GW-WORK-YY <= 75)
    FK0GW00.FK0GW-WORK-CC = 20;
  else
    FK0GW00.FK0GW-WORK-CC = 19;
  end
  VCTRCT01.FK-CONT-EFF-BDT = FK0GW00.FK0GW-WORK-DATE; /* Beg eff dt*/
  ;
  FK0GW00.FK0GW-WORK-DATE = FK0GM310.FK-CONT-EFF-XDT;
  if (FK0GW00.FK0GW-WORK-YY <= 75)
    FK0GW00.FK0GW-WORK-CC = 20;
  else
    FK0GW00.FK0GW-WORK-CC = 19;
  end
  VCTRCT01.FK-CONT-EFF-XDT = FK0GW00.FK0GW-WORK-DATE; /* End eff dt*/
  ;
  VCTRCT01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VCTRCT01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  ;
  try
    call "IO6650" ("U ", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      FKWREC.XXXMSGNO = 12; /* Data updated by another*/
      FKWREC.XXX-MOD-ID = "3630"; /* Module identification*/
      FK0GW00.FK0GW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3630 UPDATE DCMPNT.VCTRCT01      ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-3630

// Process inquiry map
Function FK0G-4000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0G-4100(); /* Obtain the data to display*/
  FK0G-4200(); /* Format and display the map*/
  FK0G-4300(); /* Check attention identifier*/
  FK0G-4400(); /* Reset fields to normal intensity*/
  FK0G-4500(); /* Verify the entered data*/
  FK0G-4600(); /* Process valid input request*/
  ;
  ;
end // end FK0G-4000

// Obtain data to display
Function FK0G-4100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0GW01 empty; /* Initialize display storage*/
  ;
  FK0GW00.FK-VEND-CD = FK0GM410.FK-VEND-CD; /* Vendor*/
  FK0GW00.FK-MAT-CONT-NBR = FK0GM410.FK-MAT-CONT-NBR; /* Contract*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the vendor description from the vendor table.*/
   /* --------------------------------------------------------------*/
  ;
  FK0G-4110(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Get all contract information from the contract table.*/
   /* --------------------------------------------------------------*/
  ;
  FK0GW00.FK0GW-IDX = 1; /* Init index*/
  FK0GW00.FK0GW-END-CURSOR-SW = "N"; /* Init index*/
  FK0GW00.FK0GW-DATA-FND-SW = "N"; /* Init index*/
  ;
  move " " to FK0GW00.FK-MAT-CONT-TXT[1] for all; /* Init text lines*/
  FK0GW00.FK-CONT-EFF-BDT = 0; /* Init effective begin date*/
  FK0GW00.FK-CONT-EFF-XDT = 0; /* Init effective end date*/
  ;
  FK0G-4120(); /* Declare cursor DCMPNT.VCTRCT01*/
  ;
  FK0G-4130(); /* Fetch record from DCMPNT.VCTRCT01*/
  ;
  while (FK0GW00.FK0GW-END-CURSOR-SW != "Y" /* Until end of cursor*/
   && FK0GW00.FK0GW-IDX <= 15) /* or end of map*/
    ;
    if (FK0GW00.FK0GW-IDX == 1) /* If first record*/
      ;
      FK0GW00.FK-CONT-EFF-BDT = VCTRCT01.FK-CONT-EFF-BDT;
      FK0GW00.FK-CONT-EFF-XDT = VCTRCT01.FK-CONT-EFF-XDT;
      FK0GW00.FK0GW-DATA-FND-SW = "Y"; /* Data found sw*/
    end
    ;
    FK0GW00.FK-MAT-CONT-TXT[FK0GW-IDX] = VCTRCT01.FK-MAT-CONT-TXT;
    ;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1; /* Increment*/
    ;
    FK0G-4130(); /* Fetch record from DCMPNT.VCTRCT01*/
  end
  ;
  FK0G-4140(); /* Close DCMPNT.VCTRCT01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data obtained in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "Y") /* If data found*/
    FK0G-4150(); /* Save data*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Display a message if no data was found to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "N") /* If no data found*/
    FKWREC.XXXMSGNO = 18; /* No data found*/
    FKWREC.XXX-MOD-ID = "4100"; /* Module identification*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "N") /* If no data found*/
    FK0GW00.FK0GW-FMAT-MAP-SW = "N";
  else
    FK0GW00.FK0GW-FMAT-MAP-SW = "Y";
  end
  ;
  FK0GW00.FK0GW-REQUEST-DATA-SW = "N";
  ;
  ;
end // end FK0G-4100

// Select DCMPNT.VVNDR001
Function FK0G-4110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0GM410.FK-VEND-CD; /* Vendor*/
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4110 SELECT DCMPNT.VVNDR001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-4110

// Declare DCMPNT.VCTRCT01 cursor
Function FK0G-4120()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VCTRCT01 empty;
  ;
  VCTRCT01.FK-VEND-CD = FK0GM410.FK-VEND-CD; /* Vendor*/
  VCTRCT01.FK-MAT-CONT-NBR = FK0GM410.FK-MAT-CONT-NBR; /* Cont nbr*/
  ;
  try
    call "IO6650" ("S1", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4120 DECLARE DCMPNT.VCTRCT01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-4120

// Fetch DCMPNT.VCTRCT01 cursor
Function FK0G-4130()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6650" ("N1", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No record found*/
      ;
      FK0GW00.FK0GW-END-CURSOR-SW = "Y"; /* Set end of cursor switch*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4130 FETCH DCMPNT.VCTRCT01      ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-4130

// Close DCMPNT.VCTRCT01 cursor
Function FK0G-4140()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6650" ("C1", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4140 CLOSE DMCPNT.VCTRCT01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-4140

// Save data in display storage
Function FK0G-4150()
   /* --------------------------------------------------------------*/
   /* Save data in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0GW01 empty;
  ;
  FK0GW01.FK-VEND-CD = FK0GM410.FK-VEND-CD; /* Vendor*/
  FK0GW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor desc*/
  FK0GW01.FK-MAT-CONT-NBR = FK0GM410.FK-MAT-CONT-NBR; /* Cont nbr*/
  FK0GW01.FK-CONT-EFF-BDT = FK0GW00.FK-CONT-EFF-BDT; /* Effective begin date*/
  FK0GW01.FK-CONT-EFF-XDT = FK0GW00.FK-CONT-EFF-XDT; /* Effective end date*/
  ;
  FK0GW00.FK0GW-IDX = 1;
  while (FK0GW00.FK0GW-IDX <= 15) /* Until end of map*/
    ;
    FK0GW01.FK-MAT-CONT-TXT[FK0GW-IDX] = FK0GW00.FK-MAT-CONT-TXT[FK0GW-IDX]; /* Contract text*/
    ;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1; /* Increment*/
  end
end // end FK0G-4150

// Format and converse DEL map
Function FK0G-4200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FK0G-4210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0GM410.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0GM410.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0GM410.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FK0GM410 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0GM410.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0GM410.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all fields dark if no data found to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "N") /* No data to display*/
    ;
    set FK0GM410.FK-VEND-SNM invisible, skip;
    set FK0GM410.FK-CONT-EFF-BDT invisible, skip;
    set FK0GM410.FK-CONT-EFF-XDT invisible, skip;
    ;
    FK0GW00.FK0GW-IDX = 1;
    while (FK0GW00.FK0GW-IDX <= 15)
      set FK0GM410.FK-MAT-CONT-TXT[FK0GW-IDX] invisible, skip;
      FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors*/
    set FK0GM410.FK-VEND-CD cursor;
  end
  ;
  ;
  converse FK0GM410 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0GM410.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0GM410.CAITEM; /* Application data*/
  ;
  ;
end // end FK0G-4200

// Format the display data
Function FK0G-4210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FK0GW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0GM410.FK-VEND-CD = FK0GW01.FK-VEND-CD; /* Vendor cd*/
  FK0GM410.FK-VEND-SNM = FK0GW01.FK-VEND-SNM; /* Vendor desc*/
  FK0GM410.FK-MAT-CONT-NBR = FK0GW01.FK-MAT-CONT-NBR; /* Cont nbr*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0GM410.FK-CONT-EFF-BDT = FK0GW01.FK-CONT-EFF-BDT; /* Eff date*/
  FK0GM410.FK-CONT-EFF-XDT = FK0GW01.FK-CONT-EFF-XDT; /* Eff date*/
  ;
  FK0GW00.FK0GW-IDX = 1; /* Init index*/
  while (FK0GW00.FK0GW-IDX <= 15) /* Until end of map*/
    ;
    FK0GM410.FK-MAT-CONT-TXT[FK0GW-IDX] = FK0GW01.FK-MAT-CONT-TXT[FK0GW-IDX]; /* Contract text*/
    ;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1; /* Increment*/
  end
  ;
  ;
end // end FK0G-4210

// Check attention identifier
Function FK0G-4300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0GM410.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-CONT-NBR = FK0GM410.FK-MAT-CONT-NBR; /* Cont nbr*/
    ;
    COMMAREA.CATOAP = "FK0G"; /* to applicaiton*/
    COMMAREA.CAITEM = "D"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0GM410.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0GM410.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FK0GM410.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-CONT-NBR = FK0GM410.FK-MAT-CONT-NBR; /* Cont nbr*/
      ;
      COMMAREA.CATOAP = FK0GM410.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0GM410.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0GM410.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* FK0E requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf15 /* FK0H requested*/
   || converseVar.eventKey is pf16 /* FK0M requested*/
   || converseVar.eventKey is pf17) /* FK02 requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0GM410"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FK0E"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0F"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FK0M"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK02"; /* TO application*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0GM410.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-CONT-NBR = FK0GM410.FK-MAT-CONT-NBR; /* Cont nbr*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0G-4300

// Reset Highlighted fields
Function FK0G-4400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0GM410.FK-VEND-CD initialAttributes; /* Vender code*/
  set FK0GM410.FK-VEND-SNM initialAttributes; /* Vender desc*/
  set FK0GM410.FK-MAT-CONT-NBR initialAttributes; /* Contract nbr*/
  set FK0GM410.FK-CONT-EFF-BDT initialAttributes; /* Begin effective date*/
  set FK0GM410.FK-CONT-EFF-XDT initialAttributes; /* End effective date*/
  ;
  FK0GW00.FK0GW-IDX = 1; /* Init index*/
  while (FK0GW00.FK0GW-IDX <= 15) /* For each line*/
    ;
    set FK0GM410.FK-MAT-CONT-TXT[FK0GW-IDX] initialAttributes;
    FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
  end
  ;
  set FK0GM410.CATOAP initialAttributes; /* TO application*/
  set FK0GM410.CAITEM initialAttributes; /* Application item*/
  ;
  ;
end // end FK0G-4400

// Verify entered fields
Function FK0G-4500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0GM410.CAITEM > " ") /* Application data was entered*/
    ;
    set FK0GM410.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify contract number was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0GM410.FK-MAT-CONT-NBR == 0) /* If contract nbr not entered*/
    ;
    set FK0GM410.FK-MAT-CONT-NBR cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    converseLib.validationFailed(8); /* Required field missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the vendor data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0GM410.FK-VEND-CD == " ") /* If vendor code missing*/
    ;
    set FK0GM410.FK-VEND-CD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    converseLib.validationFailed(21); /* Vendor code invalid or missing*/
  else
    ;
    FK0G-4510(); /* Verify vendor code*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    FK0GW00.FK0GW-CONFIRM-DELETE-SW = "N";
    exit stack;
  end
  ;
  ;
end // end FK0G-4500

// Verify vendor code
Function FK0G-4510()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0GM410.FK-VEND-CD; /* Vendor*/
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      converseLib.validationFailed(21); /* Vendor missing or invalid*/
      FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
      set FK0GM410.FK-VEND-CD cursor, bold; /* Highlight*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4510 VERIFY VENDOR CODE         ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-4510

// Process valid request
Function FK0G-4600()
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0GM410.FK-VEND-CD != FK0GW01.FK-VEND-CD /* If vendor changed*/
   || FK0GM410.FK-MAT-CONT-NBR != FK0GW01.FK-MAT-CONT-NBR) /* Cont chg*/
    ;
    FK0GW00.FK0GW-REQUEST-DATA-SW = "Y"; /* Request data*/
    FK0GW00.FK0GW-CONFIRM-DELETE-SW = "N"; /* Delete not confirmed*/
    return; /* Exit to display map*/
  end
  ;
  ;
  if (FK0GW00.FK0GW-DATA-FND-SW == "Y") /* If data was found*/
    ;
    /* --------------------------------------------------------------------*/
    /* Check the confirm delete switch.  If delete not confirmed, exit*/
    /* to confirm it.*/
    /* --------------------------------------------------------------------*/
    ;
    if (FK0GW00.FK0GW-CONFIRM-DELETE-SW == "N") /* Delete not confirmed*/
      ;
      FK0GW00.FK0GW-CONFIRM-DELETE-SW = "Y";
      FKWREC.XXX-MOD-ID = "4600"; /* Module identification*/
      converseLib.validationFailed(38); /* Enter to delete, pa2 to cancel*/
      return;
    end
    ;
    ;
    /* --------------------------------------------------------------------*/
    /* At this point we have a confirmed delete.  Delete the rows from*/
    /* the database.*/
    /* --------------------------------------------------------------------*/
    ;
    FK0G-4610(); /* Delete rows*/
    ;
    ;
    /* --------------------------------------------------------------------*/
    /* Initialize the map and display storage.*/
    /* --------------------------------------------------------------------*/
    ;
    set FK0GW01 empty; /* Init display storage*/
    ;
    FK0GM410.FK-VEND-CD = " ";
    FK0GM410.FK-VEND-SNM = " ";
    FK0GM410.FK-MAT-CONT-NBR = 0;
    FK0GM410.FK-CONT-EFF-BDT = 0;
    FK0GM410.FK-CONT-EFF-XDT = 0;
    ;
    FK0GW00.FK0GW-IDX = 1;
    while (FK0GW00.FK0GW-IDX <= 15)
      ;
      FK0GM410.FK-MAT-CONT-TXT[FK0GW-IDX] = " ";
      FK0GW00.FK0GW-IDX = FK0GW00.FK0GW-IDX + 1;
    end
    ;
    FK0GW00.FK0GW-DATA-FND-SW = "N";
    FK0GW00.FK0GW-CONFIRM-DELETE-SW = "N";
    ;
    ;
    /* --------------------------------------------------------------------*/
    /* Indicate data was successfully updated.*/
    /* --------------------------------------------------------------------*/
    ;
    FKWREC.XXXMSGNO = 1; /* Update successful*/
    FKWREC.XXX-MOD-ID = "2600"; /* Module identification*/
  end
  ;
  ;
  ;
  ;
end // end FK0G-4600

// Delete DCMPNT.VCTRCT01 rows
Function FK0G-4610()
   /* ------------------------------------------------------------*/
   /* Delete the rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VCTRCT01 empty;
  ;
  VCTRCT01.FK-VEND-CD = FK0GM410.FK-VEND-CD; /* Vendor*/
  VCTRCT01.FK-MAT-CONT-NBR = FK0GM410.FK-MAT-CONT-NBR; /* Cont nbr*/
  ;
  ;
  try
    call "IO6650" ("D ", SQLCA, VCTRCT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || converseVar.validationMsgNum == +100) /* or row not found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4610 ADD DCMPNT.VCTRCT01 ROW     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTRCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCTRCT01.VCTRCT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0G-4610

//*** RECORD=FK0GW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0GW00 type basicRecord
  10 FK0GW-MAP-SW FK0GW-MAP-SW ; 
  10 FK0GW-REQUEST-DATA-SW FK0GW-REQUEST-DATA-SW ; 
  10 FK0GW-FMAT-MAP-SW FK0GW-FMAT-MAP-SW ; 
  10 FK0GW-UPDT-PERFORMED-SW FK0GW-UPDT-PERFORMED-SW ; 
  10 FK0GW-CONFIRM-DELETE-SW FK0GW-CONFIRM-DELETE-SW ; 
  10 FK0GW-END-CURSOR-SW FK0GW-END-CURSOR-SW ; 
  10 FK0GW-DATA-FND-SW FK0GW-DATA-FND-SW ; 
  10 FK0GW-DATA-CHG-SW FK0GW-DATA-CHG-SW ; 
  10 FK0GW-IDX FK0GW-IDX ; 
  10 FK0GW-TXT-COUNT FK0GW-TXT-COUNT ; 
  10 FK0GW-FK-CONT-EFF-BDT FK0GW-FK-CONT-EFF-BDT ; 
  10 FK0GW-FK-CONT-EFF-XDT FK0GW-FK-CONT-EFF-XDT ; 
  10 FK0GW-WORK-DATE FK0GW-WORK-DATE ; 
    15 FK0GW-WORK-CC FK0GW-WORK-CC ; 
    15 FK0GW-WORK-YY FK0GW-WORK-YY ; 
    15 FK0GW-WORK-MM FK0GW-WORK-MM ; 
    15 FK0GW-WORK-DD FK0GW-WORK-DD ; 
  10 FK-VEND-CD FK-VEND-CD ; 
  10 FK-MAT-CONT-NBR FK-MAT-CONT-NBR ; 
  10 FK-CONT-EFF-BDT FK-CONT-EFF-BDT ; 
  10 FK-CONT-EFF-XDT FK-CONT-EFF-XDT ; 
  10 FK-MAT-CONT-TXT FK-MAT-CONT-TXT [15] ; 
  10 VCTRCT01-GROUP VCTRCT01-GROUP [15] ; 
end // end FK0GW00

//*** RECORD=FK0GW01 ****
// ----------------------------
// Application display storage.
// ----------------------------
// ***********************
Record FK0GW01 type basicRecord
  10 FK-VEND-CD FK-VEND-CD ; 
  10 FK-VEND-SNM FK-VEND-SNM ; 
  10 FK-MAT-CONT-NBR FK-MAT-CONT-NBR ; 
  10 FK-CONT-EFF-BDT FK-CONT-EFF-BDT ; 
  10 FK-CONT-EFF-XDT FK-CONT-EFF-XDT ; 
  10 FK-MAT-CONT-TXT FK-MAT-CONT-TXT [15] ; 
  10 VCTRCT01-GROUP VCTRCT01-GROUP [15] ; 
end // end FK0GW01

//*** RECORD=FK0GW02 ****
// This work area is the first argument that is passed in the
// CALL statement for module IO6650.
// 
// 
//   DATE       NAME      COMMENT
// --------    ------     -------------------------------------
// 03/01/93    JALLE1     Initial record creation.
// ***********************
Record FK0GW02 type basicRecord
  10 FK0GW-FUNC FK0GW-FUNC ; 
  10 FK0GW-DATE FK0GW-DATE ; 
  10 FK0GW-COUNT FK0GW-COUNT ; 
  10 FK0GW-INDICATOR FK0GW-INDICATOR ; 
end // end FK0GW02

// Confirm the delete switch
DataItem FK0GW-CONFIRM-DELETE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Generic count field
DataItem FK0GW-COUNT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data changed switch
DataItem FK0GW-DATA-CHG-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Data found switch
DataItem FK0GW-DATA-FND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Generic date
DataItem FK0GW-DATE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// End of cursor switch
DataItem FK0GW-END-CURSOR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Effective begin date
DataItem FK0GW-FK-CONT-EFF-BDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Effective end date
DataItem FK0GW-FK-CONT-EFF-XDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format the map switch
DataItem FK0GW-FMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// I/O module function
DataItem FK0GW-FUNC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Next material index
DataItem FK0GW-IDX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Indicator variable
DataItem FK0GW-INDICATOR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Map to be displayed switch
DataItem FK0GW-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem FK0GW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Number of text lines
DataItem FK0GW-TXT-COUNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Update performed switch
DataItem FK0GW-UPDT-PERFORMED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Work century
DataItem FK0GW-WORK-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic work date
DataItem FK0GW-WORK-DATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work day
DataItem FK0GW-WORK-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work month
DataItem FK0GW-WORK-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work year
DataItem FK0GW-WORK-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

