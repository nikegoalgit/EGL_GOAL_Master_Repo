package fk0b;

import corpcom3.XPFK001;
import corpcom4.XSFKS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import fk.common.*;
import ta.common.TA1REC;
import ta.common.TAEREC;
//*** PROGRAM=FK0B ****
// FK0B displays a list of related applications/processes
// which may be accessed via an entered selection or
// specified pfkeys.
// 
// 
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          11/17/88  JALLE1  New application.
//          09/15/92  JALLE1  Open transfer to FK0I,J,K,L.
//                            Remove options for FK0N,1.
//                            Add option 9 to FK0Q.
// fk-018   02/26/93  JALLE1  Activate options to FK0G, FK0H.
// *********************
Program FK0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FKWREC FKWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FK0BM.FK0BM110 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FK0BM110 initial; /* map input/output*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    ;
     /* ------------------------------------------------------------*/
     /* Clear fkwrec.*/
     /* ------------------------------------------------------------*/
    ;
    set FKWREC empty; /* FK parameters passed between apps*/
    ;
    ;
    FK0BM110.FK0BM-OPTION = "I"; /* default to inquiry*/
    ;
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0B-0010; /* Converse the main process*/
    ;
    ;
    FK0B-0010: FK0B-0010();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0B-0010; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FK0B

// Main process to display a map
Function FK0B-0010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
   /* PERFORM fk0b-1000;                /* Obtain the data to display*/
  ;
  FK0B-2000(); /* Format and display the map*/
  ;
  FK0B-3000(); /* Check attention identifier*/
  ;
  FK0B-4000(); /* Reset fields to normal intensity*/
  ;
  FK0B-5000(); /* Verify the entered data*/
  ;
  FK0B-6000(); /* Process valid input request*/
  ;
  ;
end // end FK0B-0010

// Format and converse map
Function FK0B-2000()
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0BM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0BM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0BM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0BM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
  end
  ;
  ;
  if (converseVar.validationMsgNum != 0) /* if message to display*/
    set FK0BM110 alarm; /* indicate sound alarm*/
    FK0BM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* if no errors*/
    set FK0BM110.FK0BM-SELECTION cursor; /* establish cursor position*/
  end
  ;
  ;
  ;
  converse FK0BM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0BM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0BM110.CAITEM; /* Application data*/
  ;
  ;
end // end FK0B-2000

// Check attention identifier
Function FK0B-3000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    COMMAREA.CATOAP = "FK0B"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0BM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0BM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      COMMAREA.CATOAP = FK0BM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0BM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0BM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* MTRL requested*/
   || converseVar.eventKey is pf13 /* MSTY requested*/
   || converseVar.eventKey is pf14 /* CONT requested*/
   || converseVar.eventKey is pf15 /* CLST requested*/
   || converseVar.eventKey is pf16 /* STYM requested*/
   || converseVar.eventKey is pf17 /* VEND requested*/
   || converseVar.eventKey is pf18 /* MTLS requested*/
   || converseVar.eventKey is pf19) /* MCLR requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0BM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0A"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FK0E"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0F"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0G"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FK0M"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK02"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf18) /* PF18 was pressed*/
      COMMAREA.CATOAP = "FK03"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf19) /* PF19 was pressed*/
      COMMAREA.CATOAP = "FK0Q"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0B-3000

// Reset highlighted fields
Function FK0B-4000()
  ;
   /* ----------------------------------------------------*/
   /* Set all modifiable fields defined*/
   /* ----------------------------------------------------*/
  ;
  set FK0BM110.FK0BM-SELECTION initialAttributes; /* selection*/
  set FK0BM110.FK0BM-OPTION initialAttributes; /* option*/
  ;
  set FK0BM110.CATOAP initialAttributes;
  set FK0BM110.CAITEM initialAttributes;
  ;
  ;
end // end FK0B-4000

// Verify entered data
Function FK0B-5000()
   /* ----------------------------------------------------*/
   /* Display error if invalid option code*/
   /* ----------------------------------------------------*/
  ;
  if (FK0BM110.FK0BM-OPTION == "A" /* add requested*/
   || FK0BM110.FK0BM-OPTION == "C" /* change requested*/
   || FK0BM110.FK0BM-OPTION == "D" /* delete requested*/
   || FK0BM110.FK0BM-OPTION == "I") /* inquire requested*/
    ;
     /* next sentence*/
    ;
  else
    converseLib.validationFailed(8); /* field invalid or missing*/
    FKWREC.XXX-MOD-ID = "500"; /* module identification*/
    set FK0BM110.FK0BM-OPTION bold, cursor; /* highlight*/
    exit stack;
  end
  ;
   /* ----------------------------------------------------*/
   /* Display error if invalid selection*/
   /* ----------------------------------------------------*/
  ;
  if (FK0BM110.FK0BM-SELECTION >= 1
   && FK0BM110.FK0BM-SELECTION <= 10)
    ;
     /* next sentence*/
    ;
  else
    ;
    if (FK0BM110.FK0BM-SELECTION >= 21
     && FK0BM110.FK0BM-SELECTION <= 25)
      ;
       /* next sentence*/
      ;
    else
      converseLib.validationFailed(8); /* field invalid or missing*/
      FKWREC.XXX-MOD-ID = "500"; /* module identification*/
      set FK0BM110.FK0BM-SELECTION bold, cursor; /* highlight*/
      exit stack;
    end
  end
  ;
  ;
   /* ----------------------------------------------------*/
   /* If any errors found, return to display map.*/
   /* ----------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    exit stack;
  end
  ;
  ;
  ;
end // end FK0B-5000

// Process valid request
Function FK0B-6000()
   /* ------------------------------------------------------------*/
   /* Process valid request - transfer to requested application.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (FK0BM110.FK0BM-SELECTION == 1
   || FK0BM110.FK0BM-SELECTION == 2
   || FK0BM110.FK0BM-SELECTION == 3
   || FK0BM110.FK0BM-SELECTION == 4
   || FK0BM110.FK0BM-SELECTION == 5
   || FK0BM110.FK0BM-SELECTION == 6
   || FK0BM110.FK0BM-SELECTION == 7
   || FK0BM110.FK0BM-SELECTION == 8
   || FK0BM110.FK0BM-SELECTION == 9
   || FK0BM110.FK0BM-SELECTION == 10
   || FK0BM110.FK0BM-SELECTION == 21
   || FK0BM110.FK0BM-SELECTION == 22
   || FK0BM110.FK0BM-SELECTION == 23
   || FK0BM110.FK0BM-SELECTION == 24
   || FK0BM110.FK0BM-SELECTION == 25)
    ;
    if (FK0BM110.FK0BM-SELECTION == 1) /* FK0E requested*/
      COMMAREA.CATOAP = "FK0E"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.FK0BM-OPTION; /* map option*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 2) /* FK0F requested*/
      COMMAREA.CATOAP = "FK0F"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.FK0BM-OPTION; /* map option*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 3) /* FK0G requested*/
      COMMAREA.CATOAP = "FK0G"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.FK0BM-OPTION; /* map option*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 4) /* FK0H requested*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
      COMMAREA.CAITEM = "I"; /* map option*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 5) /* FK0M requested*/
      COMMAREA.CATOAP = "FK0M"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.FK0BM-OPTION; /* map option*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 6) /* FK02 requested*/
      COMMAREA.CATOAP = "FK02"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.FK0BM-OPTION; /* map option*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 7) /* FK03 requested*/
      COMMAREA.CATOAP = "FK03"; /* TO application*/
      COMMAREA.CAITEM = "I"; /* inquiry only valid option*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 8) /* FK04 requested*/
      COMMAREA.CATOAP = "FK04"; /* TO application*/
      COMMAREA.CAITEM = "C"; /* map option*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 9) /* FK0Q requested*/
      COMMAREA.CATOAP = "FK0Q"; /* TO application*/
      COMMAREA.CAITEM = "I"; /* map option*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 10) /* FK01 requested*/
      COMMAREA.CATOAP = "FK01"; /* TO application*/
      COMMAREA.CAITEM = "C"; /* map option*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 21) /* FK0I requested*/
      COMMAREA.CATOAP = "FK0I"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.FK0BM-OPTION; /* map option*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 22) /* FK0J requested*/
      COMMAREA.CATOAP = "FK0J"; /* TO application*/
      COMMAREA.CAITEM = FK0BM110.FK0BM-OPTION; /* map option*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 23) /* FK0K requested*/
      COMMAREA.CATOAP = "FK0K"; /* TO application*/
      COMMAREA.CAITEM = "I"; /* default inquiry*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 24) /* FK0L requested*/
      COMMAREA.CATOAP = "FK0L"; /* TO application*/
      COMMAREA.CAITEM = "C"; /* default inquiry*/
    end
    ;
    if (FK0BM110.FK0BM-SELECTION == 25) /* FK0Z requested*/
      COMMAREA.CATOAP = "FK0Z"; /* TO application*/
      COMMAREA.CAITEM = "I"; /* default inquiry*/
    end
    ;
    ;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  if (FK0BM110.FK0BM-SELECTION == 3
   || FK0BM110.FK0BM-SELECTION == 4)
    ;
    converseLib.validationFailed(6); /* can't access application*/
    FKWREC.XXX-MOD-ID = "600"; /* module identification*/
    ;
  end
  ;
end // end FK0B-6000

