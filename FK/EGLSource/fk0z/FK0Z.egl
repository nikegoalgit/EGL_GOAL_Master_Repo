package fk0z;

import corpcom2.XX0XW01;
import corpcom3.XPFK001;
import corpcom4.XSFKS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import fk.common.*;
import sy.common.SY4IDDSC;
import sy.common.SY4REC;
import sy.common.SY4SZSCL;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VABAG001;
import vv.common.VABSCL01;
//*** PROGRAM=FK0Z ****
// THIS APPLICATION IS PART OF THE COMPONENTS FORECASTING
// SYSTEM.
// 
// THIS APPLICATION PROVIDES INQUIRY CAPABILITY FOR BAGS BY
// SIZE SCALE.  THE USER WILL KEY IN A BAG NUMBER AND THE
// APPLICATION WILL RETRIEVE ALL THE SIZE SCALES AND STORE THEM
// IN TEMPORARY STORAGE.  THE APPLICATION THEN READS THE DATA
// FROM TEMPORARY STORAGE AND DISPLAYS THE MAP.  THE USER MAY
// SELECT THE SIZE SCALE AND TRANSFER TO ANOTHER APPLICATION
// AND PASS THE DATA IN THE COMMAREA.
// 
// THE USER MAY EXIT TO ANY ALLOWED APPLICATION VIA FAST PATH
// OR PF KEYS, WITH THE OPTION FIELD AVAILABLE FOR USE WITH
// ANY APPLICATION TRANSFER.
// 
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      07/15/92  JALLE1  New application.
//          03/08/93  JALLE1  Cosmetic changes to the map.
// FK0027   12/30/93  JALLE1  Show 'XX' for air bag size if
//                            FK-ALT-AIRBAG-FL = 'y'es.
// *********************
Program FK0Z type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FK0ZW00 FK0ZW00; // record
  FK0ZW01 FK0ZW01; // record
  FKWREC FKWREC; // record
  SQLCA SQLCA; // record
  SY4REC SY4REC; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VABAG001 VABAG001; // record
  VABSCL01 VABSCL01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FK0ZM.FK0ZM110 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FK0ZM110 initial; /* map input/output*/
    set FK0ZW00 empty; /* Application working storage*/
    set FK0ZW01 empty; /* Application display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    ;
    ;
     /* ------------------------------------------------------------*/
     /* Use data passed in the COMMAREA as the initial key.*/
     /* ------------------------------------------------------------*/
    ;
    if (FKWREC.FK-AIRBAG-ID > " ") /* If bag nbr passed*/
      ;
      FK0ZM110.FK-AIRBAG-ID = FKWREC.FK-AIRBAG-ID; /* Bag nbr*/
      FK0ZW00.FK0ZW-REQUEST-DATA-SW = "Y"; /* Go get some data*/
    else
      ;
      FK0ZW00.FK0ZW-REQUEST-DATA-SW = "N"; /* Don't get data*/
    end
    ;
    ;
    set FKWREC empty;
    ;
    FK0ZW00.FK0ZW-FMAT-MAP-SW = "N"; /* Don't format map*/
    FK0ZW00.FK0ZW-DATA-OBTAINED-SW = "N"; /* No data yet*/
    move "*****" to FK0ZW00.SY4IDDSC[1] for all;
    move "*****" to FK0ZW01.SY4IDDSC[1] for all;
    ;
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0Z-0001; /* Converse the main process*/
    ;
    ;
    FK0Z-0001: FK0Z-0001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0Z-0001; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FK0Z

// Main process to display a map
Function FK0Z-0001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0Z-1000(); /* Obtain the data to display*/
  ;
  FK0Z-2000(); /* Format and display the map*/
  ;
  FK0Z-3000(); /* Check attention identifier*/
  ;
  FK0Z-4000(); /* Reset fields to normal intensity*/
  ;
  FK0Z-5000(); /* Verify the entered data*/
  ;
  FK0Z-6000(); /* Process valid input request*/
  ;
  ;
end // end FK0Z-0001

// Obtain data to display
Function FK0Z-1000()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0ZW00.FK0ZW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
  FK0ZW00.FK0ZW-DATA-OBTAINED-SW = "N"; /* Init data found switch*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FK0ZW00.XXXTSLEN = 358; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FK0ZW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FK0Z-1100(); /* Purge temp storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the bag description.*/
   /* --------------------------------------------------------------*/
  ;
  FK0Z-1200(); /* Get bag record*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare a cursor on the DCMPNT.VABSCL01 table.*/
   /* --------------------------------------------------------------*/
  ;
  FK0Z-1300(); /* Declare DCMPNT.VABSCL01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Fetch a record from the DCMPNT.VABSCL01 table.*/
   /* Save values from first record in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0ZW00.FK0ZW-END-CURSOR-SW = "N"; /* Init end of cursor switch*/
  FK0ZW00.FK-AIRBAG-SZ-SCLCD = " "; /* Init size scale code*/
  move " " to FK0ZW00.FK0ZW-BAG-SZ-ID-CHA[1] for all; /* Init size ids*/
  move "N" to FK0ZW00.FK-ALT-AIRBAG-FL[1] for all; /* Alternate bag flag*/
  ;
  FK0Z-1400(); /* Fetch DCMPNT.VABSCL01 cursor*/
  ;
  if (FK0ZW00.FK0ZW-END-CURSOR-SW != "Y") /* Not end of cursor*/
    ;
    FK0ZW00.FK0ZW-IDX = VABSCL01.SY5SZID;
    FK0ZW00.FK-AIRBAG-SZ-SCLCD = VABSCL01.FK-AIRBAG-SZ-SCLCD;
    FK0ZW00.FK0ZW-BAG-SZ-ID-NUM[FK0ZW-IDX] = VABSCL01.FK-AIRBAG-SZ-ID;
    FK0ZW00.FK-ALT-AIRBAG-FL[FK0ZW-IDX] = VABSCL01.FK-ALT-AIRBAG-FL;
    FK0ZW00.SY4SZSCL = VABSCL01.SY4SZSCL;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* While not end of cursor, format data and write to temporary storage.*/
   /* --------------------------------------------------------------*/
  ;
  while (FK0ZW00.FK0ZW-END-CURSOR-SW != "Y") /* Until end of cursor*/
    ;
    FK0Z-1400(); /* Fetch DCMPNT.VABSCL01 cursor*/
    ;
    if (FK0ZW00.FK0ZW-END-CURSOR-SW == "Y" /* If end of cursor*/
     || FK0ZW00.FK-AIRBAG-SZ-SCLCD != VABSCL01.FK-AIRBAG-SZ-SCLCD)
                                           /* or key change*/
      ;
      FK0Z-1500(); /* Get size descriptions*/
      ;
      FK0ZW00.FK0ZW-IDX = 1; /* Init index*/
      while (FK0ZW00.FK0ZW-IDX <= 40) /* For all sizes*/
        ;
        if (SY4REC.SY4IDDSC[FK0ZW-IDX] != " ") /* If size description*/
          FK0ZW00.SY4IDDSC[FK0ZW-IDX] = SY4REC.SY4IDDSC[FK0ZW-IDX]; /* Save size desc*/
        else
          FK0ZW00.SY4IDDSC[FK0ZW-IDX] = "*****"; /* Asterisks*/
        end
        FK0ZW00.FK0ZW-IDX = FK0ZW00.FK0ZW-IDX + 1; /* Increment*/
      end
      ;
      FK0Z-1600(); /* Format temporary storage page*/
      ;
      FK0Z-1700(); /* Save page in temporary storage*/
      ;
      FK0ZW00.FK-AIRBAG-SZ-SCLCD = VABSCL01.FK-AIRBAG-SZ-SCLCD;
      FK0ZW00.FK0ZW-IDX = VABSCL01.SY5SZID;
      FK0ZW00.FK0ZW-BAG-SZ-ID-NUM[FK0ZW-IDX] = VABSCL01.FK-AIRBAG-SZ-ID;
      FK0ZW00.FK-ALT-AIRBAG-FL[FK0ZW-IDX] = VABSCL01.FK-ALT-AIRBAG-FL;
      FK0ZW00.SY4SZSCL = VABSCL01.SY4SZSCL;
    else
      ;
      FK0ZW00.FK0ZW-IDX = VABSCL01.SY5SZID;
      FK0ZW00.FK0ZW-BAG-SZ-ID-NUM[FK0ZW-IDX] = VABSCL01.FK-AIRBAG-SZ-ID;
      FK0ZW00.FK-ALT-AIRBAG-FL[FK0ZW-IDX] = VABSCL01.FK-ALT-AIRBAG-FL;
    end
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Close the DCMPNT.VABSCL01 table cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FK0Z-1800(); /* Close table cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If data was found, save map header information.  Otherwise,*/
   /* set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0ZW00.TA5TSQIX == 0) /* If data was not found*/
    ;
    converseLib.validationFailed(18); /* Request processed - no data*/
    FKWREC.XXX-MOD-ID = "1000"; /* Module identification*/
    set FK0ZM110.FK-AIRBAG-ID cursor, bold;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0ZW00.FK0ZW-REQUEST-DATA-SW = "N";
  FK0ZW00.FK0ZW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FK0Z-1000

// Purge any temporary storage
Function FK0Z-1100()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0ZW01 empty; /* m110 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FK0ZW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FK0ZW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0Z-1100

// Get bag description
Function FK0Z-1200()
   /* --------------------------------------------------------------*/
   /* Declare a cursor on the DCMPNT.VABAG001 table.*/
   /* --------------------------------------------------------------*/
  ;
  FK0Z-1210(); /* Declare DCMPNT.VABAG001 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Fetch a record from the DCMPNT.VABAG001 table cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FK0Z-1220(); /* Fetch DCMPNT.VABAG001 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Close the DCMPNT.VABAG001 table cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FK0Z-1230(); /* Close DCMPNT.VABAG001 cursor*/
  ;
  ;
  ;
end // end FK0Z-1200

// Declare DCMPNT.VABAG001 csr
Function FK0Z-1210()
   /* ------------------------------------------------------------*/
   /* Declare a cursor for the specified table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-AIRBAG-ID = FK0ZM110.FK-AIRBAG-ID; /* Bag*/
  ;
  ;
  try
    call "IO6360" ("S1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1210"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1210 DECL DCMPNT.VABAG001 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0Z-1210

// Fetch DCMPNT.VABAG001 csr
Function FK0Z-1220()
   /* ------------------------------------------------------------*/
   /* Fetch a record from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6360" ("N1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0ZW01.FK-AIRBAG-DESC = VABAG001.FK-AIRBAG-DESC;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No record found*/
      ;
      FK0ZW01.FK-AIRBAG-DESC = "***************";
      ;
      converseLib.validationFailed(18); /* Request processed - no data*/
      set FK0ZM110.FK-AIRBAG-ID cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1220"; /* Module identification*/
      ;
      exit stack;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1220"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1220 FETCH DCMPNT.VABAG001 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0Z-1220

// Close DCMPNT.VABAG001 csr
Function FK0Z-1230()
   /* ------------------------------------------------------------*/
   /* Close the requested cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6360" ("C1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1230"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1230 CLOSE DCMPNT.VABAG001 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0Z-1230

// Declare DCMPNT.VABSCL01 csr
Function FK0Z-1300()
   /* ------------------------------------------------------------*/
   /* Declare a cursor for the specified table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty;
  ;
  VABSCL01.FK-AIRBAG-ID = FK0ZM110.FK-AIRBAG-ID; /* Bag*/
  ;
  ;
  try
    call "IO6400" ("S2", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1300 DECL DCMPNT.VABSCL01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0Z-1300

// Fetch DCMPNT.VABSCL01 csr
Function FK0Z-1400()
   /* ------------------------------------------------------------*/
   /* Declare a cursor for the specified table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6400" ("N2", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0ZW00.FK0ZW-DATA-OBTAINED-SW = "Y"; /* We got data!*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* End of cursor switch*/
      ;
      FK0ZW00.FK0ZW-END-CURSOR-SW = "Y"; /* End of cursor*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1400"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1400 FETCH DCMPNT.VABSCL01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0Z-1400

// Select DPROD.VSCALE01
Function FK0Z-1500()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set SY4REC empty;
  ;
  SY4REC.SY4SZSCL = FK0ZW00.SY4SZSCL; /* Prod size scale*/
  ;
  ;
  try
    call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1500 SELECT DPROD.VSCALE01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSCALE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY4REC.SY4DATA; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0Z-1500

// Format temp storage page
Function FK0Z-1600()
   /* --------------------------------------------------------------*/
   /* Format a page for temporary storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0ZW01.FK-AIRBAG-ID = FK0ZM110.FK-AIRBAG-ID;
  FK0ZW01.FK-AIRBAG-DESC = VABAG001.FK-AIRBAG-DESC;
  FK0ZW01.FK-AIRBAG-SZ-SCLCD = FK0ZW00.FK-AIRBAG-SZ-SCLCD;
  ;
  move FK0ZW00.SY4IDDSC to FK0ZW01.SY4IDDSC[1] for all;
  move FK0ZW00.FK0ZW-BAG-SZ-ID-CHA to FK0ZW01.FK0ZW-BAG-SZ-ID-CHA[1] for all;
  move FK0ZW00.FK-ALT-AIRBAG-FL to FK0ZW01.FK-ALT-AIRBAG-FL[1] for all;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Move 'XX' to bag size id for any sizes with an alternate bag.*/
   /* --------------------------------------------------------------*/
  ;
  FK0ZW00.FK0ZW-IDX = 1;
  ;
  while (FK0ZW00.FK0ZW-IDX <= 40)
    if (FK0ZW01.FK-ALT-AIRBAG-FL[FK0ZW-IDX] == "Y") /* Alternate bag*/
      ;
      FK0ZW01.FK0ZW-BAG-SZ-ID-CHA[FK0ZW-IDX] = "XX";
    end
    FK0ZW00.FK0ZW-IDX = FK0ZW00.FK0ZW-IDX + 1;
  end
  ;
  ;
end // end FK0Z-1600

// Add page to temporary storage
Function FK0Z-1700()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FK0ZW01.XXXTSLEN = FK0ZW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FK0ZW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FK0ZW01 empty; /* m110 display storage*/
    ;
    FK0ZW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1700"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0Z-1700

// Close DCMPNT.VABSCL01 csr
Function FK0Z-1800()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6400" ("C2", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1800"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1800 CLOSE DCMPNT.VABSCL01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0Z-1800

// Format and converse the map
Function FK0Z-2000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0ZW00.FK0ZW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FK0Z-2100(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0ZM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0ZM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0ZM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Protect fields with no valid size description or size pct.*/
   /* Also protect bag size id when it = 0.*/
   /* ------------------------------------------------------------*/
  ;
  FK0ZW00.FK0ZW-IDX = 1; /* Init index*/
  ;
  while (FK0ZW00.FK0ZW-IDX <= 40) /* For all 40 sizes*/
    ;
    if (FK0ZM110.SY4IDDSC[FK0ZW-IDX] == "*****" /* If no size desc*/
     && FK0ZM110.FK0ZW-BAG-SZ-ID-CHA[FK0ZW-IDX] == "00") /* and no bag size*/
      ;
      set FK0ZM110.SY4IDDSC[FK0ZW-IDX] invisible, skip; /* Protect*/
      set FK0ZM110.FK0ZW-BAG-SZ-ID-CHA[FK0ZW-IDX] invisible, skip; /* Protect*/
    else
      ;
      if (FK0ZM110.FK0ZW-BAG-SZ-ID-CHA[FK0ZW-IDX] == "00") /* no bag size*/
        set FK0ZM110.FK0ZW-BAG-SZ-ID-CHA[FK0ZW-IDX] invisible, skip;
      end
    end
    ;
    FK0ZW00.FK0ZW-IDX = FK0ZW00.FK0ZW-IDX + 1; /* Increment*/
  end
  ;
  if (FK0ZM110.FK-AIRBAG-SZ-SCLCD == " ") /* If no size scale*/
    ;
    set FK0ZM110.FK0ZM-SEL invisible, skip; /* Protect select*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Protect fields if no data obtained.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0ZW00.FK0ZW-DATA-OBTAINED-SW != "Y") /* If data not obtained*/
    ;
    FK0ZW00.FK0ZW-IDX = 1; /* Init index*/
    ;
    while (FK0ZW00.FK0ZW-IDX <= 40) /* For all 40 sizes*/
      ;
      set FK0ZM110.SY4IDDSC[FK0ZW-IDX] invisible, skip; /* Protect*/
      set FK0ZM110.FK0ZW-BAG-SZ-ID-CHA[FK0ZW-IDX] invisible, skip; /* Protect*/
      ;
      FK0ZW00.FK0ZW-IDX = FK0ZW00.FK0ZW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Move bag description to the map.*/
   /* ------------------------------------------------------------*/
  ;
  FK0ZM110.FK-AIRBAG-DESC = FK0ZW01.FK-AIRBAG-DESC;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FK0ZM110 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0ZM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0ZM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors*/
    ;
    set FK0ZM110.FK-AIRBAG-ID cursor; /* Set cursor at bag*/
  end
  ;
  ;
  converse FK0ZM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0ZM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0ZM110.CAITEM; /* Application data*/
  ;
  ;
end // end FK0Z-2000

// Format the display data
Function FK0Z-2100()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0ZM110 initial; /* Initialize map*/
  ;
  FK0ZW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0ZW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FK0ZW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FK0ZW00.XXXTSPAG > FK0ZW00.TA5TSQIX) /* Desireg page > highest*/
        FK0ZW00.XXXTSPAG = FK0ZW00.TA5TSQIX; /* Defaul to highest*/
      end
      ;
      FK0Z-2110(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0ZM110.FK-AIRBAG-ID = FK0ZW01.FK-AIRBAG-ID; /* Bag number*/
  ;
  FK0ZM110.XXXTSPAG = FK0ZW00.XXXTSPAG; /* Current page*/
  FK0ZM110.TA5TSQIX = FK0ZW00.TA5TSQIX; /* Max page*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data*/
   /* --------------------------------------------------------------------*/
  ;
  FK0ZM110.FK-AIRBAG-SZ-SCLCD = FK0ZW01.FK-AIRBAG-SZ-SCLCD;
  ;
  FK0ZW00.FK0ZW-IDX = 1; /* Init index*/
  ;
  while (FK0ZW00.FK0ZW-IDX <= 40) /* For all sizes*/
    ;
    FK0ZM110.SY4IDDSC[FK0ZW-IDX] = FK0ZW01.SY4IDDSC[FK0ZW-IDX];
    FK0ZM110.FK0ZW-BAG-SZ-ID-CHA[FK0ZW-IDX] = FK0ZW01.FK0ZW-BAG-SZ-ID-CHA[FK0ZW-IDX];
    ;
    FK0ZW00.FK0ZW-IDX = FK0ZW00.FK0ZW-IDX + 1;
  end
  ;
  ;
end // end FK0Z-2100

// Read page from temp storage
Function FK0Z-2110()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FK0ZW01.XXXTSLEN = FK0ZW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FK0ZW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FK0ZW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "2110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0Z-2110

// Check attention identifier
Function FK0Z-3000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-AIRBAG-ID = FK0ZM110.FK-AIRBAG-ID; /* Bag nbr*/
    ;
    COMMAREA.CATOAP = "FK0Z"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0ZM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0ZM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-AIRBAG-ID = FK0ZM110.FK-AIRBAG-ID; /* Bag nbr*/
      ;
      COMMAREA.CATOAP = FK0ZM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0ZM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0ZM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0ZM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = FK0ZM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0ZM110.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* PF8 was not pressed*/
   && converseVar.eventKey not pf12  /* PF12 was pressed*/
   && converseVar.eventKey not pf13  /* PF13 was pressed*/
   && converseVar.eventKey not pf14) /* PF14 was pressed*/
    ;
    FKWREC.XXX-MOD-ID = "3000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0Z-3000

// Reset highlighted fields
Function FK0Z-4000()
   /* --------------------------------------------------------------------*/
   /* Reset all highlighted fields.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0ZM110.FK-AIRBAG-ID initialAttributes; /* Bag nbr*/
  set FK0ZM110.FK-AIRBAG-DESC initialAttributes; /* Bag size*/
  ;
  set FK0ZM110.FK-AIRBAG-SZ-SCLCD initialAttributes; /* Size scale*/
  set FK0ZM110.FK0ZM-SEL initialAttributes; /* Select*/
  ;
  FK0ZW00.FK0ZW-IDX = 1; /* Init index*/
  ;
  while (FK0ZW00.FK0ZW-IDX <= 40) /* For all sizes*/
    ;
    set FK0ZM110.SY4IDDSC[FK0ZW-IDX] initialAttributes;
    set FK0ZM110.FK0ZW-BAG-SZ-ID-CHA[FK0ZW-IDX] initialAttributes;
    ;
    FK0ZW00.FK0ZW-IDX = FK0ZW00.FK0ZW-IDX + 1;
  end
  ;
  ;
end // end FK0Z-4000

// Verify entered data
Function FK0Z-5000()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0ZM110.CAITEM > " ") /* Application data was entered*/
    ;
    set FK0ZM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "5000"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FK0Z-5100(); /* Verify scroll request*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the select field.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0ZM110.FK0ZM-SEL == " " /* If blank*/
   || FK0ZM110.FK0ZM-SEL == "S") /* or selected*/
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
    FKWREC.XXX-MOD-ID = "5000"; /* Module identification*/
    set FK0ZM110.FK0ZM-SEL cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* You may exit if trying to transfer to another application.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf12 /* PF12 pressed*/
   || converseVar.eventKey is pf13 /* PF13 pressed*/
   || converseVar.eventKey is pf14) /* PF14 pressed*/
    ;
    return;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the bag number.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0ZM110.FK-AIRBAG-ID == " ") /* If bag not entered*/
    ;
    converseLib.validationFailed(82); /* Bag number missing or invalid*/
    FKWREC.XXX-MOD-ID = "5000"; /* Module identification*/
    set FK0ZM110.FK-AIRBAG-ID cursor, bold; /* Highlight*/
  end
  ;
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FK0Z-5000

// Verify scroll request
Function FK0Z-5100()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FK0ZW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "5100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FK0ZW00.XXXTSPAG >= FK0ZW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "5100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FK0Z-5100

// Process valid request
Function FK0Z-6000()
   /* ------------------------------------------------------------*/
   /* If scroll backward was requested, decrement the page number*/
   /* and exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Back*/
    ;
    FK0ZW00.FK0ZW-FMAT-MAP-SW = "Y"; /* Format the map*/
    FK0ZW00.XXXTSPAG = FK0ZW00.XXXTSPAG - 1; /* Decrement page to display*/
    ;
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, increment the page number*/
   /* and exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8) /* Forward*/
    ;
    FK0ZW00.FK0ZW-FMAT-MAP-SW = "Y"; /* Format the map*/
    FK0ZW00.XXXTSPAG = FK0ZW00.XXXTSPAG + 1; /* Decrement page to display*/
    ;
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If PFKEY transfer requested, transfer to requested application.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf12 /* PF12 pressed*/
   || converseVar.eventKey is pf13 /* PF13 pressed*/
   || converseVar.eventKey is pf14) /* PF14 pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    ;
    FKWREC.FK-AIRBAG-ID = FK0ZM110.FK-AIRBAG-ID; /* Bag*/
    if (FK0ZM110.FK0ZM-SEL == "S") /* If selected*/
      FKWREC.FK-AIRBAG-SZ-SCLCD = FK0ZM110.FK-AIRBAG-SZ-SCLCD; /* Scl*/
    end
    ;
    if (converseVar.eventKey is pf12)
      COMMAREA.CATOAP = "FK0I"; /* to applicaiton*/
      COMMAREA.CAITEM = " "; /* item*/
    end
    ;
    if (converseVar.eventKey is pf13)
      COMMAREA.CATOAP = "FK0J"; /* to applicaiton*/
      COMMAREA.CAITEM = " "; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14)
      COMMAREA.CATOAP = "FK0K"; /* to applicaiton*/
      COMMAREA.CAITEM = " "; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0ZM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key changed, re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0ZM110.FK-AIRBAG-ID != FK0ZW01.FK-AIRBAG-ID) /* Key change*/
    ;
    FK0ZW00.FK0ZW-REQUEST-DATA-SW = "Y"; /* Get data*/
    return;
  end
  ;
  ;
end // end FK0Z-6000

//*** RECORD=FK0ZW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0ZW00 type basicRecord
  10 FK0ZW-FMAT-MAP-SW FK0ZW-FMAT-MAP-SW ; 
  10 FK0ZW-REQUEST-DATA-SW FK0ZW-REQUEST-DATA-SW ; 
  10 FK0ZW-DATA-OBTAINED-SW FK0ZW-DATA-OBTAINED-SW ; 
  10 FK0ZW-END-CURSOR-SW FK0ZW-END-CURSOR-SW ; 
  10 FK0ZW-IDX FK0ZW-IDX ; 
  10 FK-AIRBAG-SZ-SCLCD FK-AIRBAG-SZ-SCLCD ; 
  10 SY4SZSCL SY4SZSCL ; 
  10 FK0ZW-BAG-SZ-ID-CHA FK0ZW-BAG-SZ-ID-CHA [40] ; 
    15 FK0ZW-BAG-SZ-ID-NUM FK0ZW-BAG-SZ-ID-NUM ; 
  10 FK-ALT-AIRBAG-FL FK-ALT-AIRBAG-FL [40] ; 
  10 SY4IDDSC SY4IDDSC [40] ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 XXXTSPAG XXXTSPAG ; 
end // end FK0ZW00

//*** RECORD=FK0ZW01 ****
// ----------------------------
// Application display storage.
// ----------------------------
// ***********************
Record FK0ZW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(358) ; 
    10 FK-AIRBAG-ID FK-AIRBAG-ID ; 
    10 FK-AIRBAG-DESC FK-AIRBAG-DESC ; 
    10 FK-AIRBAG-SZ-SCLCD FK-AIRBAG-SZ-SCLCD ; 
    10 SY4IDDSC SY4IDDSC [40] ; 
    10 FK0ZW-BAG-SZ-ID-CHA FK0ZW-BAG-SZ-ID-CHA [40] ; 
      15 FK0ZW-BAG-SZ-ID-NUM FK0ZW-BAG-SZ-ID-NUM ; 
    10 FK-ALT-AIRBAG-FL FK-ALT-AIRBAG-FL [40] ; 
end // end FK0ZW01

// FK_AIRBAG_SZ_ID (char)
DataItem FK0ZW-BAG-SZ-ID-CHA char(2)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// FK_AIRBAG_SZ_ID (numeric)
DataItem FK0ZW-BAG-SZ-ID-NUM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data obtained switch
DataItem FK0ZW-DATA-OBTAINED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of cursor switch
DataItem FK0ZW-END-CURSOR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem FK0ZW-FMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Generic index
DataItem FK0ZW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Request for data switch
DataItem FK0ZW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

