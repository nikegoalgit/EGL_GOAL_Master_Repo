package fk05;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFK001;
import corpcom3.XPTA0P;
import corpcom4.XSFKS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpx1.XCTCD;
import corpx2.XURDEST;
import fb.common.FB9REC;
import fk.common.FK-AIRBAG-ID;
import fk.common.FK-AIRBAG-SZ-SCLCD;
import fk.common.FK-VEND-CD;
import fk.common.FKWREC;
import fy.common.FY1FCTYC;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TA6REC;
import ta.common.TAEREC;
import vv.common.VLRPSH01;
import vv.common.VSYSCL01;
//*** PROGRAM=FK05 ****
// THIS APPLICATION IS PART OF THE COMPONENTS FORECASTING
// SYSTEM.
// 
// THIS APPLICATION PROVIDES THE CAPABLILITY OF SUBMITTING
// BATCH APPLICATIONS TO CREATE LRPS BAG REPORTS.  USERS
// WILL FIRST SPECIFY AN OUTPUT DESTINATION, THEN WILL BE
// ALLOWED TO SUBMIT ONE OR MORE REPORTS FROM THE DISPLAYED
// OPTIONS.
// 
// USERS WILL BE ALLOWED TO EXIT THIS APPLICATION VIA PFKEYS
// OR FASTPATH, WITH THE 'OPTION' FIELD AVAILABLE FOR USE WITH
// ANY APPLICATION TRANSFER.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      08/20/93  JALLE1  New application.
// FK9994   09/08/93  JALLE1  CSP 4.1 conversion.
// *********************
Program FK05 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FB9REC FB9REC; // record
  FK05W00 FK05W00; // record
  FK05W01 FK05W01; // record
  FKWREC FKWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  VLRPSH01 VLRPSH01; // record
  VSYSCL01 VSYSCL01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FK05T01; // table
  use FK05T02; // table
  use FK05T03; // table
  use FK05T04; // table
  use FK05T05; // table
  use FK05T06; // table
  use FK05T07; // table
  use FK05T08; // table
  use FK05T51; // table
  use FK05T52; // table
  use FK05T53; // table
  use FK05T54; // table
  use FK05T55; // table
  use FK05T56; // table
  use FK05T57; // table
  use FK05T58; // table
  use FK05M.FK05M110, // form
  	FK05M.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FK05M110 initial; /* M110 input/output*/
    set FK05W00 empty; /* Working storage*/
    set FK05W01 empty; /* Working storage paramters*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA6REC empty; /* Internal reader record*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    ;
     /* ------------------------------------------------------------*/
     /* If data was passed in the COMMAREA, use as the initial key.*/
     /* ------------------------------------------------------------*/
    ;
    FK05M110.FBAMDNBR = FKWREC.FBAMDNBR; /* Model nbr*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    ;
    ;
     /* ------------------------------------------------------------*/
     /* Initialize application variables.*/
     /* ------------------------------------------------------------*/
    ;
    FK05W00.FK05W-OUTPUT-DEST-SW = "N"; /* Output destination switch*/
    FK05W00.FK05W-NBR-SELECTS = 8; /* 8 select lines on map*/
    ;
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK05-0001; /* Converse the main process*/
    ;
    ;
    FK05-0001: FK05-0001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK05-0001; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FK05

// Main process to display a map
Function FK05-0001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
   /* PERFORM FK05-1000;                /* Obtain the data to be displayed*/
  ;
  FK05-2000(); /* Format and display the map*/
  ;
  FK05-3000(); /* Check attention identifier*/
  ;
  FK05-4000(); /* Reset fields to normal intensity*/
  ;
  FK05-5000(); /* Verify the entered data*/
  ;
  FK05-6000(); /* Process valid input request*/
  ;
  ;
end // end FK05-0001

// Format and converse the map
Function FK05-2000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK05M110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK05M110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK05M110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK05M110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK05M110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
    ;
    set FK05M110 alarm; /* Indicate sound alarm*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* DETERMINE CURSOR POSITION.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 27) /* Report submitted*/
    ;
    if (FK05M110.FBAMDNBR == 0) /* Model number not entered*/
      set FK05M110.FBAMDNBR cursor; /* Set cursor*/
    else
      if (FK05M110.FK05M-SELECT-OUTPUT == " ") /* Output not specified*/
        set FK05M110.FK05M-SELECT-OUTPUT cursor; /* Set cursor*/
      else
        set FK05M110.FK05M-SELECT[1] cursor; /* Set cursor at 1st rpt*/
      end
    end
  end
  ;
  converse FK05M110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK05M110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK05M110.CAITEM; /* Application data*/
  ;
  ;
end // end FK05-2000

// Check attention identifier
Function FK05-3000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    ;
    FKWREC.FBAMDNBR = FK05M110.FBAMDNBR; /* Model nbr*/
    ;
    COMMAREA.CATOAP = "FK05"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK05M110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK05M110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      ;
      FKWREC.FBAMDNBR = FK05M110.FBAMDNBR; /* Model nbr*/
      ;
      COMMAREA.CATOAP = FK05M110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK05M110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK05M110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf14 /* LRCF requested*/
   || converseVar.eventKey is pf15 /* HDRS requested*/
   || converseVar.eventKey is pf16 /* LRVM requested*/
   || converseVar.eventKey is pf17) /* LRVD requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK05M110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0A"; /* TO application*/
      COMMAREA.CAITEM = FK05M110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK05M110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0R"; /* TO application*/
      COMMAREA.CAITEM = FK05M110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0S"; /* TO application*/
      COMMAREA.CAITEM = FK05M110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FK0T"; /* TO application*/
      COMMAREA.CAITEM = FK05M110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK0V"; /* TO application*/
      COMMAREA.CAITEM = FK05M110.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    ;
    FKWREC.FBAMDNBR = FK05M110.FBAMDNBR; /* Model nbr*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "3000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK05-3000

// Reset highlighted fields
Function FK05-4000()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set FK05M110.FBAMDNBR initialAttributes;
  set FK05M110.FK05M-SELECT-OUTPUT initialAttributes;
  ;
  ;
  FK05W00.FK05W-IDX = 1; /* Init index*/
  ;
  while (FK05W00.FK05W-IDX <= FK05W00.FK05W-NBR-SELECTS) /* For each select*/
    ;
    set FK05M110.FK05M-SELECT[FK05W-IDX] initialAttributes; /* Set defined*/
    FK05W00.FK05W-IDX = FK05W00.FK05W-IDX + 1;
  end
  ;
  set FK05M110.FK-AIRBAG-ID initialAttributes;
  set FK05M110.FK-AIRBAG-SZ-SCLCD initialAttributes;
  ;
  ;
  set FK05M110.CATOAP initialAttributes; /* TO application*/
  set FK05M110.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end FK05-4000

// Verify data that was entered
Function FK05-5000()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK05M110.CAITEM > " ") /* Application data was entered*/
    ;
    set FK05M110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "5000"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the select fields*/
   /* ------------------------------------------------------------*/
  ;
  FK05W00.FK05W-RPT-SW = "N"; /* Report selected switch*/
  FK05W00.FK05W-IDX = FK05W00.FK05W-NBR-SELECTS; /* Init index*/
  ;
  while (FK05W00.FK05W-IDX >= 1) /* For each select field*/
    ;
    if (FK05M110.FK05M-SELECT[FK05W-IDX] == "S" /* If lrps by style/bag*/
     && FK05W00.FK05W-IDX == 7)                
      ;
      if (FK05M110.FK-AIRBAG-SZ-SCLCD == " ") /* SS missing*/
        set FK05M110.FK-AIRBAG-SZ-SCLCD cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "5000"; /* Module identification*/
        converseLib.validationFailed(87); /* Bag size scale missing or invalid*/
      end
      ;
      if (FK05M110.FK-AIRBAG-ID == " ") /* Bag missing*/
        set FK05M110.FK-AIRBAG-ID cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "5000"; /* Module identification*/
        converseLib.validationFailed(82); /* Bag missing or invalid*/
      end
      ;
      if (FK05M110.FK-AIRBAG-ID > " " /* If bag entered*/
       && FK05M110.FK-AIRBAG-SZ-SCLCD > " ") /* and size scale*/
        ;
        FK05-5100(); /* Verify bag nbr*/
        ;
      end
    end
    ;
    if (FK05M110.FK05M-SELECT[FK05W-IDX] == "S") /* Report selected*/
      ;
      FK05W00.FK05W-RPT-SW = "Y"; /* Set switch yes*/
    else
      ;
      if (FK05M110.FK05M-SELECT[FK05W-IDX] != "*" /* If not valid*/
       && FK05M110.FK05M-SELECT[FK05W-IDX] != " ") /**/
        ;
        set FK05M110.FK05M-SELECT[FK05W-IDX] cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "5000"; /* Module identification*/
        converseLib.validationFailed(13); /* Only "s" valid to select a line*/
      end
    end
    ;
    FK05W00.FK05W-IDX = FK05W00.FK05W-IDX - 1; /* Decrement index*/
  end
  ;
  if (FK05M-SELECT-OUTPUT == "S"
   || FK05M-SELECT-OUTPUT == "*"
   || FK05M-SELECT-OUTPUT == " ")
    ;
    /* Next sentence*/
  else
    ;
    set FK05M110.FK05M-SELECT-OUTPUT cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "5000"; /* Module identification*/
    converseLib.validationFailed(13); /* Only "s" valid to select a line*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify lrps number*/
   /* ---------------------------------------------------------------*/
  ;
  FK05-5200(); /* Select DCMPNT.VLRPSH01*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If reports were selected, verify output destination has been*/
   /* established or selected.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK05W00.FK05W-RPT-SW == "Y") /* If report requested*/
    ;
    if (FK05W00.FK05W-OUTPUT-DEST-SW == "Y" /* Output already established*/
     || FK05M110.FK05M-SELECT-OUTPUT == "S") /* or selected*/
      ;
       /* Next sentence*/
    else
      ;
      set FK05M110.FK05M-SELECT-OUTPUT cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "5000"; /* Module identification*/
      converseLib.validationFailed(23); /* Output destination must be selected*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FK05-5000

// Select exists DCMPNT.VSYSCL01
Function FK05-5100()
   /* ------------------------------------------------------------*/
   /* Select exists on the dcmpnt.vsyscl01 table.*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty;
  ;
  VSYSCL01.FK-AIRBAG-ID = FK05M110.FK-AIRBAG-ID; /* Bag*/
  VSYSCL01.FK-AIRBAG-SZ-SCLCD = FK05M110.FK-AIRBAG-SZ-SCLCD;
  ;
  ;
  try
    call "IO6390" ("SE", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      ;
      set FK05M110.FK-AIRBAG-ID bold; /* Highlight*/
      set FK05M110.FK-AIRBAG-SZ-SCLCD cursor, bold; /* Highlight*/
      converseLib.validationFailed(88); /* Bag and size scale combo invalid*/
      FKWREC.XXX-MOD-ID = "5100"; /* Module identification*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "5100"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "5100 SELECT EXISTS DCMPNT.VSYSCL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK05M110"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK05-5100

// Select DCMPNT.VLRPSH01
Function FK05-5200()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty; /* Clear row storage area*/
  ;
  VLRPSH01.FBAMDNBR = FK05M110.FBAMDNBR; /* Model nbr*/
  ;
  try
    call "IO6250" ("S ", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      ;
      set FK05M110.FBAMDNBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "5200"; /* module id*/
      converseLib.validationFailed(61); /* No lrps for vendor and type*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "5200"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FK05-5200

// Process valid input request
Function FK05-6000()
   /* --------------------------------------------------------------*/
   /* IF SPECIFY OUTPUT DESTINATION IS SELECTED ;*/
   /* SETUP CALL TO TA0P TO GET DESTINATION.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK05M110.FK05M-SELECT-OUTPUT == "S") /* Select output*/
    ;
    set TA6REC empty;
    TA6REC.TA6SUBSW = "N"; /* GET REPORT DISTRIBUTION ONLY*/
    TA6REC.TA6MSGSW = "N"; /* DONT DISPLAY MSG WHEN DONE*/
    ;
    XPTA0P();
    ;
    if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
     && TA6REC.TA6RTNCD == "0")        /* AND NORMAL RETURN*/
      FK05W01.XURDEST = TA6REC.XURDEST; /* PRINT DESTINATION*/
      FK05M110.FK05M-SELECT-OUTPUT = "*"; /* Output dest specified*/
      FK05W00.FK05W-OUTPUT-DEST-SW = "Y"; /**/
    else
      ;
      if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
       && TA6REC.TA6RTNCD == "1")        /* USER CANCELLED*/
        FK05M110.FK05M-SELECT-OUTPUT = "S"; /* Reset select*/
        set FK05M110.FK05M-SELECT-OUTPUT cursor; /* Reset cursor*/
        converseLib.validationFailed(35); /* INDICATE USER CANCELLED*/
        FKWREC.XXX-MOD-ID = "6000"; /* MODULE ID.*/
        exit stack; /* EXIT TO DISPLAY MAP.*/
      end
    end
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Check to see if REPORTS SELECTED.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK05W-RPT-SW == "Y") /* REPORTS SELECTED*/
    ;
    /* ----------------------------------------------------------*/
    /* Determine which environment the program is executing in:*/
    /* Development or Production*/
    /* Then submit the reports*/
    /* ----------------------------------------------------------*/
    ;
    FK05-6100(); /* Determine Region*/
    ;
    FK05-6200(); /* Submit report(s)*/
    ;
  end
  ;
  ;
end // end FK05-6000

// Get region information
Function FK05-6100()
   /* ------------------------------------------------------------*/
   /* Call sub-routine to find which environment*/
   /* the program is executing in, development*/
   /* or production.*/
   /* ------------------------------------------------------------*/
  ;
  set TA3REC empty;
  ;
  TA3REC.TA3OPTN = "ASSIGN ";
  ;
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA3REC.TA3RTNCD == 0)          /* Good return code*/
    ;
     /* next sentence*/
    ;
  else
    ;
    FKWREC.XXX-MOD-ID = "6100"; /* module identification*/
    converseLib.validationFailed(10); /* System error*/
    exit stack;
  end
  ;
  ;
end // end FK05-6100

// Determine which job to submit
Function FK05-6200()
  ;
   /* ------------------------------------------------------------*/
   /* Load the parm.*/
   /* ------------------------------------------------------------*/
  ;
  FK05W01.FK05W-LRPS-NBR = FK05M110.FBAMDNBR; /* Lrps number*/
  FK05W01.FK-VEND-CD = "*";
  FK05W01.FY1FCTYC = "*";
  FK05W01.XCTCD = "*";
  FK05W01.FK-AIRBAG-ID = " ";
  FK05W01.FK-AIRBAG-SZ-SCLCD = " ";
  ;
   /* ------------------------------------------------------------*/
   /* Determine which reports to submit*/
   /* ------------------------------------------------------------*/
  ;
  if (FK05M110.FK05M-SELECT[1] == "S") /* FK3000 requested*/
    FK05-6210(); /* Submit report (prod or test)*/
    FK05M110.FK05M-SELECT[1] = "*"; /* Report submitted*/
    move " " to TA6REC.TARJCL[1] for all;
    move " " to TA6REC.TARTYPE[1] for all;
  end
  ;
  if (FK05M110.FK05M-SELECT[2] == "S") /* FK3020 requested*/
    FK05-6220(); /* Submit report (prod or test)*/
    FK05M110.FK05M-SELECT[2] = "*"; /* Report submitted*/
    move " " to TA6REC.TARJCL[1] for all;
    move " " to TA6REC.TARTYPE[1] for all;
  end
  ;
  if (FK05M110.FK05M-SELECT[3] == "S") /* FK3040 requested*/
    FK05-6230(); /* Submit report (prod or test)*/
    FK05M110.FK05M-SELECT[3] = "*"; /* Report submitted*/
    move " " to TA6REC.TARJCL[1] for all;
    move " " to TA6REC.TARTYPE[1] for all;
  end
  ;
  if (FK05M110.FK05M-SELECT[4] == "S") /* FK3010 requested*/
    FK05-6240(); /* Submit report (prod or test)*/
    FK05M110.FK05M-SELECT[4] = "*"; /* Report submitted*/
    move " " to TA6REC.TARJCL[1] for all;
    move " " to TA6REC.TARTYPE[1] for all;
  end
  ;
  if (FK05M110.FK05M-SELECT[5] == "S") /* FK1020 requested*/
    FK05-6250(); /* Submit report (prod or test)*/
    FK05M110.FK05M-SELECT[5] = "*"; /* Report submitted*/
    move " " to TA6REC.TARJCL[1] for all;
    move " " to TA6REC.TARTYPE[1] for all;
  end
  ;
  if (FK05M110.FK05M-SELECT[6] == "S") /* FK4110 requested*/
    FK05-6260(); /* Submit report (prod or test)*/
    FK05M110.FK05M-SELECT[6] = "*"; /* Report submitted*/
    move " " to TA6REC.TARJCL[1] for all;
    move " " to TA6REC.TARTYPE[1] for all;
  end
  ;
  if (FK05M110.FK05M-SELECT[7] == "S") /* FK3110 requested*/
    FK05-6270(); /* Submit report (prod or test)*/
    FK05M110.FK05M-SELECT[7] = "*"; /* Report submitted*/
    move " " to TA6REC.TARJCL[1] for all;
    move " " to TA6REC.TARTYPE[1] for all;
  end
  ;
  if (FK05M110.FK05M-SELECT[8] == "S") /* FK1220 requested*/
    FK05-6280(); /* Submit report (prod or test)*/
    FK05M110.FK05M-SELECT[8] = "*"; /* Report submitted*/
    move " " to TA6REC.TARJCL[1] for all;
    move " " to TA6REC.TARTYPE[1] for all;
  end
  ;
  ;
end // end FK05-6200

// Format JCL for FK3000
Function FK05-6210()
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  FK05W00.FK05W-TBL-IDX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  TA6REC.XURDEST = FK05W01.XURDEST; /* Load in printer destination*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (FK05W00.FK05W-TBL-IDX > 0) /* Until end of table*/
    ;
    if (TA3REC.TA3RGNID == "03") /* If production environment*/
      ;
      if (FK05T01.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T01.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T01.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T01.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* --------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* --------------------------------------------------*/
      ;
      if (FK05T01.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    else /* Format test jcl*/
      ;
      if (FK05T51.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T51.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T51.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T51.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* -----------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* -----------------------------------------------------*/
      ;
      if (FK05T51.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    end
    ;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms idx*/
  end
  ;
  ;
  if (TA6REC.TA6RTNCD == "0") /* if good return from prev sub*/
    TA6REC.TA6RTNCD = " "; /* init return code*/
  end
  ;
  TA6REC.TA6SUBSW = "S"; /* submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* set reply set to no*/
  ;
  ;
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    converseLib.validationFailed(27); /* Return message*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    ;
    converseLib.validationFailed(35); /* Indicate user cancelled*/
    FKWREC.XXX-MOD-ID = "6210"; /* module identification*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    FKWREC.XXX-MOD-ID = "6210"; /* module identification*/
    ;
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK05-6210

// Format JCL for FK3020
Function FK05-6220()
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  FK05W00.FK05W-TBL-IDX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  TA6REC.XURDEST = FK05W01.XURDEST; /* Load in printer destination*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (FK05W00.FK05W-TBL-IDX > 0) /* Until end of table*/
    ;
    if (TA3REC.TA3RGNID == "03") /* If production environment*/
      ;
      if (FK05T02.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T02.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T02.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T02.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* --------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* --------------------------------------------------*/
      ;
      if (FK05T02.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    else /* Format test jcl*/
      ;
      if (FK05T52.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T52.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T52.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T52.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* -----------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* -----------------------------------------------------*/
      ;
      if (FK05T52.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    end
    ;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms idx*/
  end
  ;
  ;
  if (TA6REC.TA6RTNCD == "0") /* if good return from prev sub*/
    TA6REC.TA6RTNCD = " "; /* init return code*/
  end
  ;
  TA6REC.TA6SUBSW = "S"; /* submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* set reply set to no*/
  ;
  ;
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    converseLib.validationFailed(27); /* Return message*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    ;
    converseLib.validationFailed(35); /* Indicate user cancelled*/
    FKWREC.XXX-MOD-ID = "6220"; /* module identification*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    FKWREC.XXX-MOD-ID = "6220"; /* module identification*/
    ;
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK05-6220

// Format JCL for FK3040
Function FK05-6230()
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  FK05W00.FK05W-TBL-IDX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  TA6REC.XURDEST = FK05W01.XURDEST; /* Load in printer destination*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (FK05W00.FK05W-TBL-IDX > 0) /* Until end of table*/
    ;
    if (TA3REC.TA3RGNID == "03") /* If production environment*/
      ;
      if (FK05T03.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T03.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T03.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T03.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* --------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* --------------------------------------------------*/
      ;
      if (FK05T03.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    else /* Format test jcl*/
      ;
      if (FK05T53.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T53.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T53.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T53.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* -----------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* -----------------------------------------------------*/
      ;
      if (FK05T53.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    end
    ;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms idx*/
  end
  ;
  ;
  if (TA6REC.TA6RTNCD == "0") /* if good return from prev sub*/
    TA6REC.TA6RTNCD = " "; /* init return code*/
  end
  ;
  TA6REC.TA6SUBSW = "S"; /* submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* set reply set to no*/
  ;
  ;
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    converseLib.validationFailed(27); /* Return message*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    ;
    converseLib.validationFailed(35); /* Indicate user cancelled*/
    FKWREC.XXX-MOD-ID = "6230"; /* module identification*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    FKWREC.XXX-MOD-ID = "6230"; /* module identification*/
    ;
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK05-6230

// Format JCL for FK3010
Function FK05-6240()
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  FK05W00.FK05W-TBL-IDX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  TA6REC.XURDEST = FK05W01.XURDEST; /* Load in printer destination*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (FK05W00.FK05W-TBL-IDX > 0) /* Until end of table*/
    ;
    if (TA3REC.TA3RGNID == "03") /* If production environment*/
      ;
      if (FK05T04.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T04.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T04.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T04.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* --------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* --------------------------------------------------*/
      ;
      if (FK05T04.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    else /* Format test jcl*/
      ;
      if (FK05T54.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T54.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T54.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T54.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* -----------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* -----------------------------------------------------*/
      ;
      if (FK05T54.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    end
    ;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms idx*/
  end
  ;
  ;
  if (TA6REC.TA6RTNCD == "0") /* if good return from prev sub*/
    TA6REC.TA6RTNCD = " "; /* init return code*/
  end
  ;
  TA6REC.TA6SUBSW = "S"; /* submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* set reply set to no*/
  ;
  ;
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    converseLib.validationFailed(27); /* Return message*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    ;
    converseLib.validationFailed(35); /* Indicate user cancelled*/
    FKWREC.XXX-MOD-ID = "6240"; /* module identification*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    FKWREC.XXX-MOD-ID = "6240"; /* module identification*/
    ;
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK05-6240

// Format JCL for FK1020
Function FK05-6250()
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  FK05W00.FK05W-TBL-IDX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  TA6REC.XURDEST = FK05W01.XURDEST; /* Load in printer destination*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (FK05W00.FK05W-TBL-IDX > 0) /* Until end of table*/
    ;
    if (TA3REC.TA3RGNID == "03") /* If production environment*/
      ;
      if (FK05T05.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T05.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T05.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T05.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* --------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* --------------------------------------------------*/
      ;
      if (FK05T05.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    else /* Format test jcl*/
      ;
      if (FK05T55.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T55.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T55.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T55.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* -----------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* -----------------------------------------------------*/
      ;
      if (FK05T55.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    end
    ;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms idx*/
  end
  ;
  ;
  if (TA6REC.TA6RTNCD == "0") /* if good return from prev sub*/
    TA6REC.TA6RTNCD = " "; /* init return code*/
  end
  ;
  TA6REC.TA6SUBSW = "S"; /* submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* set reply set to no*/
  ;
  ;
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    converseLib.validationFailed(27); /* Return message*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    ;
    converseLib.validationFailed(35); /* Indicate user cancelled*/
    FKWREC.XXX-MOD-ID = "6250"; /* module identification*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    FKWREC.XXX-MOD-ID = "6250"; /* module identification*/
    ;
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK05-6250

// Format JCL for FK4110
Function FK05-6260()
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  FK05W00.FK05W-TBL-IDX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  TA6REC.XURDEST = FK05W01.XURDEST; /* Load in printer destination*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (FK05W00.FK05W-TBL-IDX > 0) /* Until end of table*/
    ;
    if (TA3REC.TA3RGNID == "03") /* If production environment*/
      ;
      if (FK05T06.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T06.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T06.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T06.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* --------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* --------------------------------------------------*/
      ;
      if (FK05T06.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    else /* Format test jcl*/
      ;
      if (FK05T56.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T56.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T56.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T56.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* -----------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* -----------------------------------------------------*/
      ;
      if (FK05T56.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    end
    ;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms idx*/
  end
  ;
  ;
  if (TA6REC.TA6RTNCD == "0") /* if good return from prev sub*/
    TA6REC.TA6RTNCD = " "; /* init return code*/
  end
  ;
  TA6REC.TA6SUBSW = "S"; /* submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* set reply set to no*/
  ;
  ;
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    converseLib.validationFailed(27); /* Return message*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    ;
    converseLib.validationFailed(35); /* Indicate user cancelled*/
    FKWREC.XXX-MOD-ID = "6260"; /* module identification*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    FKWREC.XXX-MOD-ID = "6260"; /* module identification*/
    ;
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK05-6260

// Format JCL for FK3110
Function FK05-6270()
   /* ------------------------------------------------------------*/
   /* Format application specific parm values.*/
   /* ------------------------------------------------------------*/
  ;
  FK05W01.FK-AIRBAG-ID = FK05M110.FK-AIRBAG-ID; /* Bag*/
  FK05W01.FK-AIRBAG-SZ-SCLCD = FK05M110.FK-AIRBAG-SZ-SCLCD; /* SS*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  FK05W00.FK05W-TBL-IDX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  TA6REC.XURDEST = FK05W01.XURDEST; /* Load in printer destination*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (FK05W00.FK05W-TBL-IDX > 0) /* Until end of table*/
    ;
    if (TA3REC.TA3RGNID == "03") /* If production environment*/
      ;
      if (FK05T07.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T07.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T07.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T07.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* --------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* --------------------------------------------------*/
      ;
      if (FK05T07.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    else /* Format test jcl*/
      ;
      if (FK05T57.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T57.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T57.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T57.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* -----------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* -----------------------------------------------------*/
      ;
      if (FK05T57.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    end
    ;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms idx*/
  end
  ;
  ;
  if (TA6REC.TA6RTNCD == "0") /* if good return from prev sub*/
    TA6REC.TA6RTNCD = " "; /* init return code*/
  end
  ;
  TA6REC.TA6SUBSW = "S"; /* submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* set reply set to no*/
  ;
  ;
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    converseLib.validationFailed(27); /* Return message*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    ;
    converseLib.validationFailed(35); /* Indicate user cancelled*/
    FKWREC.XXX-MOD-ID = "6270"; /* module identification*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    FKWREC.XXX-MOD-ID = "6270"; /* module identification*/
    ;
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK05-6270

// Format JCL for FK1220
Function FK05-6280()
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  FK05W00.FK05W-TBL-IDX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  TA6REC.XURDEST = FK05W01.XURDEST; /* Load in printer destination*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (FK05W00.FK05W-TBL-IDX > 0) /* Until end of table*/
    ;
    if (TA3REC.TA3RGNID == "03") /* If production environment*/
      ;
      if (FK05T08.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T08.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T08.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T08.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* --------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* --------------------------------------------------*/
      ;
      if (FK05T08.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    else /* Format test jcl*/
      ;
      if (FK05T58.TARTYPE[FK05W-TBL-IDX] == "P") /* Parameter stmt*/
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05W01.FK05W-PARM;
        TA6REC.TARTYPE[TA6INDEX] = FK05T58.TARTYPE[FK05W-TBL-IDX];
      else
        ;
        TA6REC.TARJCL[TA6INDEX] = FK05T58.TARJCL[FK05W-TBL-IDX];
        TA6REC.TARTYPE[TA6INDEX] = FK05T58.TARTYPE[FK05W-TBL-IDX];
      end
      ;
      /* -----------------------------------------------------*/
       /* If not end of table, increment the table index.*/
      /* -----------------------------------------------------*/
      ;
      if (FK05T58.TARJCL[FK05W-TBL-IDX] == "/*EOF") /* End of table*/
        ;
        FK05W00.FK05W-TBL-IDX = 0; /* Indicate end of table*/
      else
        ;
        FK05W00.FK05W-TBL-IDX = FK05W00.FK05W-TBL-IDX + 1;
      end
    end
    ;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms idx*/
  end
  ;
  ;
  if (TA6REC.TA6RTNCD == "0") /* if good return from prev sub*/
    TA6REC.TA6RTNCD = " "; /* init return code*/
  end
  ;
  TA6REC.TA6SUBSW = "S"; /* submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* set reply set to no*/
  ;
  ;
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    converseLib.validationFailed(27); /* Return message*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    ;
    converseLib.validationFailed(35); /* Indicate user cancelled*/
    FKWREC.XXX-MOD-ID = "6280"; /* module identification*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    FKWREC.XXX-MOD-ID = "6280"; /* module identification*/
    ;
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK05-6280

//*** RECORD=FK05W00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK05W00 type basicRecord
  10 FK05W-IDX FK05W-IDX ; 
  10 FK05W-TBL-IDX FK05W-TBL-IDX ; 
  10 FK05W-OUTPUT-DEST-SW FK05W-OUTPUT-DEST-SW ; 
  10 FK05W-RPT-SW FK05W-RPT-SW ; 
  10 FK05W-WORK-DT FK05W-WORK-DT ; 
    15 FK05W-WORK-CCYY FK05W-WORK-CCYY ; 
      20 FK05W-WORK-CC FK05W-WORK-CC ; 
      20 FK05W-WORK-YY FK05W-WORK-YY ; 
    15 FK05W-WORK-MM FK05W-WORK-MM ; 
    15 FK05W-WORK-DD FK05W-WORK-DD ; 
  10 FK05W-NBR-SELECTS FK05W-NBR-SELECTS ; 
end // end FK05W00

//*** RECORD=FK05W01 ****
// ----------------------------
// Application parameters.
// ----------------------------
// ***********************
Record FK05W01 type basicRecord
  10 XURDEST XURDEST ; 
  10 FK05W-PARM FK05W-PARM ; 
    15 FK05W-LRPS-NBR FK05W-LRPS-NBR ; 
    15 FK-VEND-CD FK-VEND-CD ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 XCTCD XCTCD ; 
    15 FK-AIRBAG-ID FK-AIRBAG-ID ; 
    15 FK-AIRBAG-SZ-SCLCD FK-AIRBAG-SZ-SCLCD ; 
    15 * char(57) ; 
end // end FK05W01

// Index for application table
DataItem FK05W-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Lrps number (fb-mdl-nbr)
DataItem FK05W-LRPS-NBR num(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Number of selects on map
DataItem FK05W-NBR-SELECTS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Output dest specified switch
DataItem FK05W-OUTPUT-DEST-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Paramter passed to report apps
DataItem FK05W-PARM char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Report selected switch
DataItem FK05W-RPT-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for table
DataItem FK05W-TBL-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Work century
DataItem FK05W-WORK-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work century and year
DataItem FK05W-WORK-CCYY num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work day
DataItem FK05W-WORK-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work date
DataItem FK05W-WORK-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work month
DataItem FK05W-WORK-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work year
DataItem FK05W-WORK-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

