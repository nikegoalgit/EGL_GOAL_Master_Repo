package fk0s;

import corpcom2.XX0XW01;
import corpcom3.XPFK001;
import corpcom4.XSFKS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import fb.common.FB8BUYDT;
import fb.common.FBAMDNBR;
import fb.common.FBASTDFL;
import fk.common.FKWREC;
import ta.common.TA1REC;
import ta.common.TAEREC;
import vv.common.VLRPSH01;
//*** PROGRAM=FK0S ****
// description here
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      11/17/88  USERID  New application.
// 
//          09/28/92  JALLE1  Remove lrps type from map.
//          08/09/93  JALLE1  Remove references to FBDMDTYP
//                            for Aug '93 table changes.
// 
// Y2KFIX   11/11/97  VRAMAC  Y2K MODIFICATION  MADE TO:
//                            FK0SM110 - CHANGE YYMM FIELD
//                            TO DISPLAY 00 FOR YEAR 2000
// 
// *********************
Program FK0S type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FK0SW00 FK0SW00; // record
  FK0SW01 FK0SW01; // record
  FKWREC FKWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record
  VLRPSH01 VLRPSH01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FK0SM.FK0SM110 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FK0SM110 initial; /* map input/output*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    set FK0SW00 empty; /* WORK RECORD 00*/
    set FK0SW01 empty; /* WORK RECORD 01*/
    ;
    if (FKWREC.FB8BUYDT != 0)
      FK0SW00.FK0SW-WORK-BUY-DT = FKWREC.FB8BUYDT;
      FK0SM110.FK0SM-B-FCST-YYMM = FK0SW00.FK0SW-WORK-BUY-DT-YYMM;
    end
    ;
    set FKWREC empty;
    ;
    if (FK0SM110.FK0SM-B-FCST-YYMM != 0) /* if date exists*/
      FK0SW00.FK0SW-RQST-DAT-SW = "Y";
    else
      FK0SW00.FK0SW-RQST-DAT-SW = "N";
    end
    ;
    FK0SW00.FK0SM-FMT-MAP-SW = "N";
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0S-001; /* Converse the main process*/
    ;
    ;
    FK0S-001: FK0S-001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0S-001; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FK0S

// Main process to display a map
Function FK0S-001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0S-100(); /* Obtain the data to display*/
  ;
  FK0S-200(); /* Format and display the map*/
  ;
  FK0S-300(); /* Check attention identifier*/
  ;
  FK0S-400(); /* Reset fields to normal intensity*/
  ;
  FK0S-500(); /* Verify the entered data*/
  ;
  FK0S-600(); /* Process valid input request*/
  ;
  ;
end // end FK0S-001

// Obtain the data to display
Function FK0S-100()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0SW00.FK0SW-RQST-DAT-SW != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ---PURGE WORKING STORAGE     -------------------------------*/
  set FK0SW01 empty;
  ;
  ;
  FK0SW00.FK0SW-WORK-BUY-DT-YYMM = FK0SM110.FK0SM-B-FCST-YYMM;
  FK0SW00.FK0SW-WORK-BUY-DT-DD = 01;
  if (FK0SW00.FK0SW-WORK-BUY-DT-YY < 50)
    FK0SW00.FK0SW-WORK-BUY-DT-CC = 20;
  else
    FK0SW00.FK0SW-WORK-BUY-DT-CC = 19;
  end
  FK0SW01.FB8BUYDT = FK0SW00.FK0SW-WORK-BUY-DT;
  ;
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  FK0S-110(); /* Select set and open cursor*/
  ;
   /* ------------------------------------------------------------*/
   /* Fetch and format the data into pages until end of cursor.*/
   /* ------------------------------------------------------------*/
  ;
  FK0SW00.FK0SW-WORK-INDEX = 0; /* Display line index*/
  FK0SW00.FK0SW-END-CURSOR-SW = "N"; /* End of cursor switch*/
  ;
  while (FK0SW00.FK0SW-END-CURSOR-SW == "N" /* Until end of cursor*/
  )
    FK0S-120(); /* Fetch next row in the cursor*/
    ;
    /* ------------------------------------------------------------*/
     /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/
    ;
    if (FK0SW00.FK0SW-END-CURSOR-SW == "N") /* Not end of cursor*/
      FK0S-130(); /* Save data in display storage*/
    end
    ;
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/
  ;
  FK0S-140(); /* Close the selected set cursor*/
  ;
   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0SW00.FK0SW-WORK-INDEX == 0) /* No pages formatted*/
    ;
    FKWREC.XXX-MOD-ID = "100"; /* Module identification*/
    FKWREC.XXXMSGNO = 15; /* No data was found to display*/
    FK0SM-FMT-MAP-SW = "Y"; /* SET FORMAT MAP SWITCH*/
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/
  ;
  FK0SW00.FK0SW-RQST-DAT-SW = "N"; /* Request for data switch*/
  FK0SW00.FK0SM-FMT-MAP-SW = "Y"; /* Request for data switch*/
  ;
  ;
end // end FK0S-100

// Select set and open cursor
Function FK0S-110()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty; /* Clear row storage area*/
  ;
  VLRPSH01.FB8BUYDT = FK0SW01.FB8BUYDT; /* MODEL BUY DATE*/
  ;
  ;
  try
    call "IO6250" ("S2", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the line index and cursor switch.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0S-110

// Fetch next row in the cursor
Function FK0S-120()
   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6250" ("N2", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      ;
      FK0SW00.FK0SW-END-CURSOR-SW = "Y"; /* Indicate end of cursor*/
      ;
      return; /* Return to previous process*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "120 "; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0S-120

// Save data in display storage
Function FK0S-130()
   /* ------------------------------------------------------------*/
   /* Save the data from the table row in WORKING storage.*/
   /* ------------------------------------------------------------*/
  ;
  FK0SW00.FK0SW-WORK-INDEX = FK0SW00.FK0SW-WORK-INDEX + 1; /* increment ix*/
  ;
  FK0SW01.FBAMDNBR[FK0SW-WORK-INDEX] = VLRPSH01.FBAMDNBR; /**/
  FK0SW01.ZZZSDT[FK0SW-WORK-INDEX] = VLRPSH01.ZZZSDT;
  FK0SW01.ZZZCHGDT[FK0SW-WORK-INDEX] = VLRPSH01.ZZZCHGDT;
  if (VLRPSH01.FBASTDFL == "Y")
    FK0SW01.FBASTDFL[FK0SW-WORK-INDEX] = "*";
  else
    FK0SW01.FBASTDFL[FK0SW-WORK-INDEX] = " ";
  end
  FK0SW01.ZZZCHGCT[FK0SW-WORK-INDEX] = VLRPSH01.ZZZCHGCT;
  ;
  ;
end // end FK0S-130

// Close selected set cursor
Function FK0S-140()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6250" ("C2", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "140 "; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0S-140

// Format and converse INQ map
Function FK0S-200()
  if (converseVar.validationMsgNum != 0) /* error to display*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
  if (FK0SW00.FK0SW-RQST-DAT-SW == "Y"
   || converseVar.validationMsgNum == 0)
    if (FK0SW00.FK0SM-FMT-MAP-SW == "Y")
      FK0S-210();
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0SM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0SM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0SM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* SET DARK ALL STANDARD MODEL FLAGS IF NO DATA.*/
   /* ------------------------------------------------------------*/
  FK0SW-WORK-INDEX = 1; /* INIT INDEX*/
  while (FK0SW-WORK-INDEX <= 10) /* BEGIN LOOP*/
    if (FK0SM110.FBAMDNBR[FK0SW-WORK-INDEX] > 0) /* IF THERE IS DATA ON LINE*/
    /* ; /* NEXT SENTENCE*/
    else /* IF THERE IS NOT DATA ON LINE*/
      set FK0SM110.FBASTDFL[FK0SW-WORK-INDEX] skip, invisible; /* SET OFF*/
    end
    FK0SW-WORK-INDEX = FK0SW-WORK-INDEX + 1; /* INCREMENT INDEX*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0SM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0SM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
    ;
    set FK0SM110 alarm; /* Indicate sound alarm*/
    ;
  else
    ;
    if (FK0SM110.FK0SM-B-FCST-YYMM <= 0) /* BEGINNING FORECAST DT ZERO*/
      set FK0SM110.FK0SM-B-FCST-YYMM cursor; /* SET CURSOR POSITION*/
    end
    if (FK0SM110.FBAMDNBR > 0) /* IF THERE IS DETAIL DATA*/
      set FK0SM110.FBASTDFL[1] cursor; /* SET CURSOR POSITION*/
      ;
    end
  end
  ;
  converse FK0SM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0SM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0SM110.CAITEM; /* Application data*/
  ;
  ;
end // end FK0S-200

// Format the display data
Function FK0S-210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0SM110 initial; /* m110 input/output area*/
  ;
  FK0SW00.FK0SM-FMT-MAP-SW = "N"; /* Format the map switch*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  FK0SW00.FK0SW-WORK-BUY-DT = FK0SW01.FB8BUYDT;
  FK0SM110.FK0SM-B-FCST-YYMM = FK0SW00.FK0SW-WORK-BUY-DT-YYMM;
  ;
  FK0SW00.FK0SW-WORK-INDEX = 1; /* Initialize line index*/
  ;
  while (FK0SW00.FK0SW-WORK-INDEX <= 10) /* Until screen is full*/
    if (FK0SW01.FBAMDNBR[FK0SW-WORK-INDEX] > 0) /* IF LINE HAS DATA*/
      ;
      ;
      FK0SM110.FBAMDNBR[FK0SW-WORK-INDEX] = FK0SW01.FBAMDNBR[FK0SW-WORK-INDEX]; /* MODEL NUMBER*/
      FK0SW-WORK-DT = FK0SW01.ZZZSDT[FK0SW-WORK-INDEX]; /* CREATE DT*/
      move FK0SW-WORK-DT-YY to FK0SW-DISP-DT-YY withV60Compat;
      move FK0SW-WORK-DT-MM to FK0SW-DISP-DT-MM withV60Compat;
      move FK0SW-WORK-DT-DD to FK0SW-DISP-DT-DD withV60Compat;
      FK0SM110.ZZZSDT[FK0SW-WORK-INDEX] = FK0SW-DISP-DT; /* CREATE DT*/
      ;
      FK0SW-WORK-DT = FK0SW01.ZZZCHGDT[FK0SW-WORK-INDEX]; /* CHANGE DT*/
      move FK0SW-WORK-DT-YY to FK0SW-DISP-DT-YY withV60Compat;
      move FK0SW-WORK-DT-MM to FK0SW-DISP-DT-MM withV60Compat;
      move FK0SW-WORK-DT-DD to FK0SW-DISP-DT-DD withV60Compat;
      FK0SM110.ZZZCHGDT[FK0SW-WORK-INDEX] = FK0SW-DISP-DT; /* CHG DATE*/
      ;
      FK0SM110.FBASTDFL[FK0SW-WORK-INDEX] = FK0SW01.FBASTDFL[FK0SW-WORK-INDEX]; /* STD MODEL FLAG*/
      ;
    end
    ;
    FK0SW00.FK0SW-WORK-INDEX = FK0SW00.FK0SW-WORK-INDEX + 1; /* increment x*/
    ;
  end
  ;
  ;
end // end FK0S-210

// Check attention identifier
Function FK0S-300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    FK0SW-WORK-BUY-DT-YYMM = FK0SM110.FK0SM-B-FCST-YYMM;
    FK0SW-WORK-BUY-DT-DD = 01; /* CALCULATE BUY DAte ......*/
    if (FK0SW-WORK-BUY-DT-YY > 50) /* ...*/
      FK0SW-WORK-BUY-DT-CC = 19; /* ...*/
    else /* ...*/
      FK0SW-WORK-BUY-DT-CC = 20; /* ...*/
    end /* AND---*/
    FKWREC.FB8BUYDT = FK0SW-WORK-BUY-DT; /* MOVE DT TO PASS RECORD*/
    COMMAREA.CATOAP = "FK0S"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0SM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0SM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* PASS RECORD IS INITED*/
      FK0SW-WORK-BUY-DT-YYMM = FK0SM110.FK0SM-B-FCST-YYMM;
      FK0SW-WORK-BUY-DT-DD = 01; /* CALCULATE BUY DAte ......*/
      if (FK0SW-WORK-BUY-DT-YY > 50) /* ...*/
        FK0SW-WORK-BUY-DT-CC = 19; /* ...*/
      else /* ...*/
        FK0SW-WORK-BUY-DT-CC = 20; /* ...*/
      end /* AND---*/
      FKWREC.FB8BUYDT = FK0SW-WORK-BUY-DT; /* MOVE DT TO PASS RECORD*/
      COMMAREA.CATOAP = FK0SM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0SM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0SM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* MTRL requested*/
   || converseVar.eventKey is pf14 /* CONT requested*/
   || converseVar.eventKey is pf16 /* LRPS BY VEN/MTL requested*/
   || converseVar.eventKey is pf17) /* LRPS BY VEN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0SM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0O"; /* TO application*/
      COMMAREA.CAITEM = FK0SM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0SM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FK0P"; /* TO application*/
      COMMAREA.CAITEM = FK0SM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0R"; /* TO application*/
      COMMAREA.CAITEM = FK0SM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FK0T"; /* TO application*/
      COMMAREA.CAITEM = FK0SM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK0V"; /* TO application*/
      COMMAREA.CAITEM = FK0SM110.CAITEM; /* item*/
    end
    ;
    set FKWREC empty; /* PASS RECORD IS INITED*/
    FK0SW-WORK-BUY-DT-YYMM = FK0SM110.FK0SM-B-FCST-YYMM; /* B-FCST-MO*/
    FK0SW-WORK-BUY-DT-DD = 01; /* CONVERTED TO BUY DATE AND ---*/
    if (FK0SW-WORK-BUY-DT-YY > 50) /* IF YEAR IS GREATER THAN 50  -*/
      FK0SW-WORK-BUY-DT-CC = 19; /* SET CENTURY TO 1900*/
    else /* OTHERWISE*/
      FK0SW-WORK-BUY-DT-CC = 20; /* SET CENTURY TO 2000*/
    end
    FKWREC.FB8BUYDT = FK0SW-WORK-BUY-DT; /* AND PASSED*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0S-300

// Reset highlighted fields
Function FK0S-400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  set FK0SM110.FK0SM-B-FCST-YYMM initialAttributes; /* INITIALIZE BEG FCST MONTH*/
  ;
  FK0SW-WORK-INDEX = 1; /* INIT INDEX*/
  while (FK0SW-WORK-INDEX < 11) /* LOOP WHILE INDEX LESS THAN 10*/
    set FK0SM110.FBASTDFL[FK0SW-WORK-INDEX] initialAttributes;
    ;
    FK0SW-WORK-INDEX = FK0SW-WORK-INDEX + 1; /* INCREMENT INDEX*/
  end
  ;
  set FK0SM110.CATOAP initialAttributes; /* TO application*/
  set FK0SM110.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end FK0S-400

// Verify data that was entered
Function FK0S-500()
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
  if (FK0SM110.CAITEM > " ") /* IF ITEM ENTERED*/
    set FK0SM110.CAITEM cursor, bold; /* HILITE ITEM*/
    FKWREC.XXX-MOD-ID = "500"; /* MODULE ID.*/
    converseLib.validationFailed(7); /* USE ONLY WITH FASTPATH*/
  end
  ;
  ;
  FK0SW-WORK-LOC = 1; /* INIT WORK location*/
  FK0SW-WORK-INDEX = 10; /* INIT WORK INDEX*/
  FK0SW-WORK-ACCUM = 0; /* INIT WORK ACCUMULATOR*/
  while (FK0SW-WORK-INDEX > 0)
    if (FK0SM110.FBASTDFL[FK0SW-WORK-INDEX] == "*")
      FK0SW-WORK-ACCUM = FK0SW-WORK-ACCUM + 1;
      move FK0SW-WORK-INDEX to FK0SW-WORK-LOC withV60Compat; /* SET LOCATION = INDEX*/
    end
    if (FK0SM110.FBASTDFL[FK0SW-WORK-INDEX] == "*"
     || FK0SM110.FBASTDFL[FK0SW-WORK-INDEX] == " ")
     /* NEXT SENTENCE*/
    else
      set FK0SM110.FBASTDFL[FK0SW-WORK-INDEX] cursor, bold; /* HILITE*/
      FKWREC.XXX-MOD-ID = "500"; /* MODULE ID.*/
      converseLib.validationFailed(8); /* REQUIRED FIELD MISING OR INVALID*/
    end
    FK0SW-WORK-INDEX = FK0SW-WORK-INDEX - 1; /* DECR INDEX*/
  end
  ;
  if (FK0SM110.FBAMDNBR[1] > 0)
    if (FK0SW-WORK-ACCUM > 1)
      set FK0SM110.FBASTDFL[FK0SW-WORK-LOC] cursor, bold; /* HILITE*/
      FKWREC.XXX-MOD-ID = "500"; /* MODULE ID.*/
      converseLib.validationFailed(52); /* only 1 model can be standard*/
    end
    ;
    if (FK0SW-WORK-ACCUM == 0)
      set FK0SM110.FBASTDFL[1] cursor, bold; /* HILITE*/
      FKWREC.XXX-MOD-ID = "500"; /* MODULE ID.*/
      converseLib.validationFailed(53); /* PLEASE SELECT STANDARD MODEL*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
  ;
end // end FK0S-500

// Process valid input request
Function FK0S-600()
   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF LRPS TYPE OR BEG FORECAST MONTH WAS CHANGED*/
   /* IF IT WAS, SET OBTAIN-DATA SWITCH AND EXIT TO DISPLAY MAP.*/
   /* ------------------------------------------------------------*/
  ;
  FK0SW-WORK-BUY-DT = FK0SW01.FB8BUYDT;
  ;
  if (FK0SM110.FK0SM-B-FCST-YYMM != FK0SW-WORK-BUY-DT-YYMM)
    FK0SW-RQST-DAT-SW = "Y";
    return;
  end
  ;
  FK0SW-WORK-INDEX = 1;
  while (FK0SW-WORK-INDEX < 11)
    if (FK0SM110.FBASTDFL[FK0SW-WORK-INDEX] != 
    FK0SW01.FBASTDFL[FK0SW-WORK-INDEX])
      FK0S-610(); /* DETERMINE STD MDL BEFORE UPDATE*/
      FK0SW-WORK-INDEX = 11; /* TERMINATE LOOP*/
      FKWREC.XXXMSGNO = 1; /* TABLE UPDATE SUCCESSFUL'*/
      FK0SW-RQST-DAT-SW = "Y"; /**/
    end
    FK0SW-WORK-INDEX = FK0SW-WORK-INDEX + 1; /* INCREMENT INDEX*/
  end
end // end FK0S-600

// Process valid input request
Function FK0S-610()
   /* -----------------------------------------------------------------*/
   /* CHECK TO SEE IF MAP FLAG HAS '*' OR WORKING STORAGE FLAG HAS '*'*/
   /* IF MAP HAS '*' THEN IT IS NEW "STANDARD MODEL" SET FLAG ON*/
   /* LRPS HEADER REC AND UPDATE.  IF WORKING STORAGE HAS '*' THEN IT*/
   /* IS OLD "STANDARD MODEL" SET FLAG OFF AND UPDATE.*/
   /* -----------------------------------------------------------------*/
  ;
  XX0XS01(); /* GET CURRENT DATE AND TIME*/
  ;
  if (FK0SM110.FBASTDFL[FK0SW-WORK-INDEX] == "*")
    VLRPSH01.FBASTDFL = "Y";
  else
    VLRPSH01.FBASTDFL = "N";
  end
  FK0S-611();
  ;
  FK0SW-WORK-INDEX = FK0SW-WORK-INDEX + 1; /* INCREMENT INDEX*/
  while (FK0SW-WORK-INDEX < 11)
    if (FK0SM110.FBASTDFL[FK0SW-WORK-INDEX] != 
    FK0SW01.FBASTDFL[FK0SW-WORK-INDEX])
      ;
      if (FK0SM110.FBASTDFL[FK0SW-WORK-INDEX] == "*")
        VLRPSH01.FBASTDFL = "Y";
      else
        VLRPSH01.FBASTDFL = "N";
      end
      FK0S-611();
      FK0SW-WORK-INDEX = 11; /* TERMINATE LOOP.*/
      ;
    end
    FK0SW-WORK-INDEX = FK0SW-WORK-INDEX + 1; /* INCREMENT INDEX*/
  end
end // end FK0S-610

// Update the changed table row
Function FK0S-611()
   /* ------------------------------------------------------------*/
   /* Format the WORKING STORAGE TO the table row.*/
   /* ------------------------------------------------------------*/
  ;
  VLRPSH01.FB8BUYDT = FK0SW01.FB8BUYDT; /* BUY DATE*/
  VLRPSH01.FBAMDNBR = FK0SW01.FBAMDNBR[FK0SW-WORK-INDEX]; /* SCHD NBR*/
  VLRPSH01.ZZZCHGCT = FK0SW01.ZZZCHGCT[FK0SW-WORK-INDEX]; /* CHG COUN*/
  VLRPSH01.ZZZSDT = FK0SW01.ZZZSDT[FK0SW-WORK-INDEX]; /* start  date*/
  ;
  VLRPSH01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VLRPSH01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
   /* ------------------------------------------------------------*/
   /* Update the changed row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6250" ("U ", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Update row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If row not found, indicate the data was updated by another.*/
    /* ------------------------------------------------------------*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      ;
      FK0SW00.FK0SW-RQST-DAT-SW = "Y"; /**/
      ;
      FKWREC.XXX-MOD-ID = "611"; /* Module identification*/
      FKWREC.XXXMSGNO = 12; /* Data was updated by another*/
      ;
      exit stack; /* Exit to display map*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "611"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE THE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0S-611

//*** RECORD=FK0SW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0SW00 type basicRecord
  10 FK0SM-FMT-MAP-SW FK0SM-FMT-MAP-SW ; 
  10 FK0SW-RQST-DAT-SW FK0SW-RQST-DAT-SW ; 
  10 FK0SW-END-CURSOR-SW FK0SW-END-CURSOR-SW ; 
  10 FK0SW-WORK-INDEX FK0SW-WORK-INDEX ; 
  10 FK0SW-WORK-ACCUM FK0SW-WORK-ACCUM ; 
  10 FK0SW-WORK-LOC FK0SW-WORK-LOC ; 
  10 FK0SW-WORK-DT FK0SW-WORK-DT ; 
    15 FK0SW-WORK-DT-CC FK0SW-WORK-DT-CC ; 
    15 FK0SW-WORK-DT-YY FK0SW-WORK-DT-YY ; 
    15 FK0SW-WORK-DT-MM FK0SW-WORK-DT-MM ; 
    15 FK0SW-WORK-DT-DD FK0SW-WORK-DT-DD ; 
  10 FK0SW-DISP-DT FK0SW-DISP-DT ; 
    15 FK0SW-DISP-DT-MM FK0SW-DISP-DT-MM ; 
    15 FK0SW-DISP-DT-DD FK0SW-DISP-DT-DD ; 
    15 FK0SW-DISP-DT-YY FK0SW-DISP-DT-YY ; 
  10 FK0SW-WORK-BUY-DT FK0SW-WORK-BUY-DT ; 
    15 FK0SW-WORK-BUY-DT-CC FK0SW-WORK-BUY-DT-CC ; 
    15 FK0SW-WORK-BUY-DT-YYMM FK0SW-WORK-BUY-DT-YYMM ; 
      20 FK0SW-WORK-BUY-DT-YY FK0SW-WORK-BUY-DT-YY ; 
      20 FK0SW-WORK-BUY-DT-MM FK0SW-WORK-BUY-DT-MM ; 
    15 FK0SW-WORK-BUY-DT-DD FK0SW-WORK-BUY-DT-DD ; 
end // end FK0SW00

//*** RECORD=FK0SW01 ****
// DB2 TABLE VIEW:      DCMPNT.VLRPSH01
// 
// COPYLIB MEMBER:      DCL00991
// 
// I/O MODULE:          IO????
// 
// KEY TO DB2 TABLE:    FBAMDNBR
//                      FBDMDTYP
//                      FB8BUYDT
// 
// 
// MAINTENANCE LOG:
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          11/15/91  JALLE1  New record definition.
// ***********************
Record FK0SW01 type basicRecord
  5 FK0SW-GROUP FK0SW-GROUP ; 
    10 FB8BUYDT FB8BUYDT ; 
    10 FBAMDNBR FBAMDNBR [10] ; 
    10 FBASTDFL FBASTDFL [10] ; 
    10 ZZZSDT ZZZSDT [10] ; 
    10 ZZZCHGDT ZZZCHGDT [10] ; 
    10 ZZZCHGTM ZZZCHGTM [10] ; 
    10 ZZZCHGCT ZZZCHGCT [10] ; 
end // end FK0SW01

// Format the map switch
DataItem FK0SM-FMT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// WORK AREA FOR FB9REC BUY DATE
DataItem FK0SW-DISP-DT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK AREA FOR FB9REC BUY DATE
DataItem FK0SW-DISP-DT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK AREA FOR FB9REC BUY DATE
DataItem FK0SW-DISP-DT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK AREA FOR FB9REC BUY DATE
DataItem FK0SW-DISP-DT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// END OF CURSOR switch
DataItem FK0SW-END-CURSOR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FK0SW-GROUP char(164)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem FK0SW-RQST-DAT-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// WORK ACCUMULATOR
DataItem FK0SW-WORK-ACCUM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK AREA FOR FB9REC BUY DATE
DataItem FK0SW-WORK-BUY-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK BUY DATE CENTURY & YEAR
DataItem FK0SW-WORK-BUY-DT-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK BUY DATE DAY
DataItem FK0SW-WORK-BUY-DT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK BUY DATE MONTH
DataItem FK0SW-WORK-BUY-DT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK BUY DATE CENTURY & YEAR
DataItem FK0SW-WORK-BUY-DT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK BUY DATE CENTURY & YEAR
DataItem FK0SW-WORK-BUY-DT-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK AREA FOR FB9REC BUY DATE
DataItem FK0SW-WORK-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK BUY DATE CENTURY & YEAR
DataItem FK0SW-WORK-DT-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK AREA FOR FB9REC BUY DATE
DataItem FK0SW-WORK-DT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK AREA FOR FB9REC BUY DATE
DataItem FK0SW-WORK-DT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK AREA FOR FB9REC BUY DATE
DataItem FK0SW-WORK-DT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK INDEX
DataItem FK0SW-WORK-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK ACCUMULATOR
DataItem FK0SW-WORK-LOC smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

