package fk0e;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFK001;
import corpcom3.XPXCL01;
import corpcom3.XPXMC01;
import corpcom3.XPXMG01;
import corpcom3.XPXMU01;
import corpcom3.XPXX001;
import corpcom4.XSFKS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpx1.XCLCD;
import corpx1.XCLTBL;
import corpx1.XMCCD;
import corpx1.XMCTBL;
import corpx1.XMGTBL;
import corpx1.XMUTBL;
import corpx1.XTMTBL;
import corpx2.XMG-COLR-GRP-CD;
import corpx2.XMU-MAT-UOM-CD;
import corpx2.XTM-MAT-THCK-CD;
import corpz3.ZZZCHGDT;
import fk.common.*;
import ta.common.TA1REC;
import ta.common.TAEREC;
import vv.common.VFVITM01;
import vv.common.VFYINV01;
import vv.common.VGROUP01;
import vv.common.VGROUP01-GROUP;
import vv.common.VMATRL01;
import vv.common.VMATRL01-GROUP;
import vv.common.VMCOLR01;
import vv.common.VMCOLR01-GROUP;
import vv.common.VMGMAT01;
import vv.common.VMUSGE01;
import vv.common.VVNDR001;
import vv.common.VVNINV01;
import vv.common.VWHINV01;
//*** PROGRAM=FK0E ****
// This application is part of the components forecasting
// system.
// 
// This application provides the capability of maintaining
// rows on the materials database (DCMPNT.VMATRL01),
// color group database (DCMPNT.VGROUP01), and color database
// (DCMPNT.VMCOLR01).  Users will be allowed to inquire, add,
// change, and delete material data through the four maps
// provided in this application.
// 
// INQUIRE MAP - map fk0em110 is provided for users to inquire
// upon material data.  Users will be allowed to select a
// vendor, material, color group, and color and have all
// appropriate data displayed on the map.
// 
// ADD MAP - map fk0em210 is provided for users to add
// materials, color groups, and colors.  Users will be allowed
// to enter new information to the map, and inserts will be
// performed on the material, color group, and color tables.
// A "copy from" function will be provided to allow users to
// copy information from existing materials, color groups, and
// colors to new materials.
// 
// CHANGE MAP - map fk0em310 is provided for users to change
// information for a material and/or color group and/or color.
// Users will be allowed to change information on the map,
// and updates will be performed on the material and/or color
// group and/or color tables.
// 
// DELETE MAP - map fk0em410 is provided for users to delete
// material, color group, and color information.  Users will
// be allowed to enter a material and/or color group and/or
// color to be deleted, confirm it, and delete it from the
// appropriate tables.
// 
// Transfer from one FK0E map to another FK0E map is not
// possible except through fastpath.  Users will be allowed to
// exit this application via pfkeys or fastpath, with the
// "option" field available for used with any application
// transfer.
// 
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          12/31/91  JALLE1  New application.
//          09/11/92  JALLE1  Add PF19 to application FK0Q.
//          10/13/92  JALLE1  Remove season and year from maps.
// FK-009   11/11/92  JALLE1  Default vendor color desc when
//                            using 'copy from' function on add
//                            screen.
// FK-018   02/26/93  JALLE1  Activate PFKeys to FK0G, FK0H.
//          05/13/93  JALLE1  VMCOLR01 table change - add
//                            FK-MAT-COLR-HOT-FL.
// FK-020   05/17/93  JALLE1  Add FK-MAT-COLR-HOT-FL to maps.
//          08/09/93  JALLE1  Remove references to XSECD and
//                            XSNYR for Aug '93 table changes.
// FK-040   12/16/93  JALLE1  Add edits to check inventory,
//                            fcty/vend p.o., and capacity
//                            tables before delete.
// y2kFIX   12/02/97  dbettr  regenerate application to pick
//                            up Y2K compliant version of
//                            common date routine XX0XS01.
// *********************
Program FK0E type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FK0EW00 FK0EW00; // record
  FK0EW01 FK0EW01; // record
  FK0EW02 FK0EW02; // record
  FK0EW03 FK0EW03; // record
  FKWREC FKWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record
  VFVITM01 VFVITM01; // record
  VFYINV01 VFYINV01; // record
  VGROUP01 VGROUP01; // record
  VMATRL01 VMATRL01; // record
  VMCOLR01 VMCOLR01; // record
  VMGMAT01 VMGMAT01; // record
  VMUSGE01 VMUSGE01; // record
  VVNDR001 VVNDR001; // record
  VVNINV01 VVNINV01; // record
  VWHINV01 VWHINV01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCLTBL; // table
  use XMCTBL; // table
  use XMGTBL; // table
  use XMUTBL; // table
  use XTMTBL; // table
  use FK0EM.FK0EM110,  // forms
      FK0EM.FK0EM210, 
      FK0EM.FK0EM310, 
      FK0EM.FK0EM410, 
      FK0EM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FK0EM110 initial; /* M110 inquiry map input/output*/
    set FK0EM210 initial; /* M210 add map input/output*/
    set FK0EM310 initial; /* M310 change map input/output*/
    set FK0EM410 initial; /* M410 delete map input/output*/
    set FK0EW00 empty; /* Working storage*/
    set FK0EW01 empty; /* Display storage*/
    set FK0EW02 empty; /* Display storage (copy from area)*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    ;
    ;
    FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "N"; /* Init to 'n'o*/
    FK0EW00.FK0EW-VGROUP01-FOUND-SW = "N"; /* Init to 'n'o*/
    FK0EW00.FK0EW-VMATRL01-FOUND-SW = "N"; /* Init to 'n'o*/
    FK0EW00.FK0EW-VVNDR001-FOUND-SW = "N"; /* Init to 'n'o*/
    ;
    if (FKWREC.FK-VEND-CD[1] != " ") /* If vendor code passed*/
      FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Request for data*/
    else
      FK0EW00.FK0EW-REQUEST-DATA-SW = "N"; /* Request for data*/
    end
    FK0EW00.FK0EW-FMAT-MAP-SW = "Y"; /* Format the map switch*/
    FK0EW00.FK0EW-COPY-DATA-SW = "N"; /* Copy data switch*/
    FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Confirm delete switch*/
    ;
    FK0EW00.FK0EW-NXTMTL-IDX = 1; /* Init next mtl index*/
    ;
     /* ------------------------------------------------------------*/
     /* If data was passed in the COMMAREA, use as the initial key.*/
     /* Also determine which map to display.*/
     /* ------------------------------------------------------------*/
    ;
    if (FKWREC.FKW-UPDATE-FUNCTION == "A") /* Add requested*/
      ;
      FK0EW00.FK0EW-MAP-SW = "2"; /* Map to be displayed switch*/
      ;
      FK0EM210.FK-VEND-CD = FKWREC.FK-VEND-CD[FK0EW-NXTMTL-IDX]; /* Vendor*/
      FK0EM210.FK-MAT-NBR = FKWREC.FK-MAT-NBR[FK0EW-NXTMTL-IDX]; /* Material*/
      FK0EM210.XTM-MAT-THCK-CD = FKWREC.XTM-MAT-THCK-CD[FK0EW-NXTMTL-IDX]; /* Thickness*/
      FK0EM210.XMG-COLR-GRP-CD = FKWREC.XMG-COLR-GRP-CD[FK0EW-NXTMTL-IDX]; /* Color group*/
      FK0EM210.XCLCD = FKWREC.XCLCD[FK0EW-NXTMTL-IDX]; /* Material color*/
    else
      ;
      if (FKWREC.FKW-UPDATE-FUNCTION == "C") /* Change requested*/
        ;
        FK0EW00.FK0EW-MAP-SW = "3"; /* Map to be displayed switch*/
        ;
        FK0EM310.FK-VEND-CD = FKWREC.FK-VEND-CD[FK0EW-NXTMTL-IDX]; /* Vendor*/
        FK0EM310.FK-MAT-NBR = FKWREC.FK-MAT-NBR[FK0EW-NXTMTL-IDX]; /* Material*/
        FK0EM310.XTM-MAT-THCK-CD = FKWREC.XTM-MAT-THCK-CD[FK0EW-NXTMTL-IDX]; /* Thickness*/
        FK0EM310.XMG-COLR-GRP-CD = FKWREC.XMG-COLR-GRP-CD[FK0EW-NXTMTL-IDX]; /* Color group*/
        FK0EM310.XCLCD = FKWREC.XCLCD[FK0EW-NXTMTL-IDX]; /* Material color*/
      else
        if (FKWREC.FKW-UPDATE-FUNCTION == "D") /* Delete requested*/
          ;
          FK0EW00.FK0EW-MAP-SW = "4"; /* Map to be displayed switch*/
          ;
          FK0EM410.FK-VEND-CD = FKWREC.FK-VEND-CD[FK0EW-NXTMTL-IDX]; /* Vendor*/
          FK0EM410.FK-MAT-NBR = FKWREC.FK-MAT-NBR[FK0EW-NXTMTL-IDX]; /* Material*/
          FK0EM410.XTM-MAT-THCK-CD = FKWREC.XTM-MAT-THCK-CD[FK0EW-NXTMTL-IDX]; /* Thickness*/
          FK0EM410.XMG-COLR-GRP-CD = FKWREC.XMG-COLR-GRP-CD[FK0EW-NXTMTL-IDX]; /* Color group*/
          FK0EM410.XCLCD = FKWREC.XCLCD[FK0EW-NXTMTL-IDX]; /* Material color*/
        else
          ;
          FK0EW00.FK0EW-MAP-SW = "1"; /* Map to be displayed switch*/
          ;
          FK0EM110.FK-VEND-CD = FKWREC.FK-VEND-CD[FK0EW-NXTMTL-IDX]; /* Vendor*/
          FK0EM110.FK-MAT-NBR = FKWREC.FK-MAT-NBR[FK0EW-NXTMTL-IDX]; /* Material*/
          FK0EM110.XTM-MAT-THCK-CD = FKWREC.XTM-MAT-THCK-CD[FK0EW-NXTMTL-IDX]; /* Thickness*/
          FK0EM110.XMG-COLR-GRP-CD = FKWREC.XMG-COLR-GRP-CD[FK0EW-NXTMTL-IDX]; /* Color group*/
          FK0EM110.XCLCD = FKWREC.XCLCD[FK0EW-NXTMTL-IDX]; /* Material color*/
        end
      end
    end
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0E-0010; /* Converse the main process*/
    ;
    ;
    FK0E-0010: FK0E-0010();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0E-0010; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FK0E

// Main process to display a map
Function FK0E-0010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the fist map.*/
   /* 2) Otherwise, if specified, display the second map.*/
   /* 3) Otherwise, if specified, display the third map.*/
   /* 4) Otherwise, if specified, display the fourth map.*/
   /* 5) Otherwise, display the first map.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-MAP-SW == "1") /* Map 1 was requested*/
    ;
    FK0E-1000(); /* Display map 1*/
    ;
  else
    if (FK0EW00.FK0EW-MAP-SW == "2") /* Map 2 was requested*/
      ;
      FK0E-2000(); /* Display map 2*/
      ;
    else
      ;
      if (FK0EW00.FK0EW-MAP-SW == "3") /* Map 3 was requested*/
        ;
        FK0E-3000(); /* Display map 3*/
        ;
      else
        ;
        if (FK0EW00.FK0EW-MAP-SW == "4") /* Map 4 was requested*/
          ;
          FK0E-4000(); /* Display map 4*/
          ;
        else
          ;
          FK0E-1000(); /* Display map 1*/
        end
      end
    end
  end
  ;
  ;
end // end FK0E-0010

// Process inquiry map
Function FK0E-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0E-1100(); /* Obtain the data to display*/
  ;
  FK0E-1200(); /* Format and display the map*/
  ;
  FK0E-1300(); /* Check attention identifier*/
  ;
  FK0E-1400(); /* Reset fields to normal intensity*/
  ;
  FK0E-1500(); /* Verify the entered data*/
  ;
  FK0E-1600(); /* Process valid input request*/
  ;
  ;
end // end FK0E-1000

// Obtain data to display
Function FK0E-1100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0EW01 empty; /* Initialize display storage*/
  ;
  FK0EW00.FK-VEND-CD = FK0EM110.FK-VEND-CD; /* Vendor*/
  FK0EW00.FK-MAT-NBR = FK0EM110.FK-MAT-NBR; /* Material*/
  FK0EW00.XMG-COLR-GRP-CD = FK0EM110.XMG-COLR-GRP-CD; /* Color group*/
  FK0EW00.XCLCD = FK0EM110.XCLCD; /* Color*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0EW00.FK0EW-VGROUP01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0EW00.FK0EW-VMATRL01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  ;
  ;
  if (FK0EM110.XCLCD != "  ") /* If color code on map*/
    FK0E-1110(); /* Obtain the color data*/
  end /* (DCMPNT.VMCOLR01)*/
                                  /*  */
                                  /*  */
  if (FK0EM110.XMG-COLR-GRP-CD != "  ") /* If color group on map*/
    FK0E-1120(); /* Obtain the color group data*/
  end /* (DCMPNT.VGROUP01)*/
                                  /*  */
                                  /*  */
  FK0E-1130(); /* Obtain the material data*/
                                  /* (DCMPNT.VMATRL01)*/
                                  /*  */
  FK0E-1140(); /* Obtain the vender data*/
                                  /* (DCMPNT.VVNDR001)*/
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data obtained in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0E-1150(); /* Save data*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0EW00.FK0EW-REQUEST-DATA-SW = "N";
  FK0EW00.FK0EW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FK0E-1100

// Get color data
Function FK0E-1110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.FK-MAT-NBR = FK0EM110.FK-MAT-NBR; /* Material nbr*/
  VMCOLR01.XMG-COLR-GRP-CD = FK0EM110.XMG-COLR-GRP-CD; /* color grp*/
  VMCOLR01.XCLCD = FK0EM110.XCLCD; /* color*/
  ;
  try
    call "IO6210" ("S ", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      FKWREC.XXXMSGNO = 18; /* Not found*/
      FKWREC.XXX-MOD-ID = "1110"; /* Module identification*/
      set FK0EM110.XCLCD cursor, bold; /* Highlight*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1110 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-1110

// Get color group data
Function FK0E-1120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VGROUP01 empty;
  ;
  VGROUP01.FK-MAT-NBR = FK0EM110.FK-MAT-NBR; /* Material nbr*/
  VGROUP01.XMG-COLR-GRP-CD = FK0EM110.XMG-COLR-GRP-CD; /* color group*/
  ;
  try
    call "IO6200" ("S ", SQLCA, VGROUP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      FKWREC.XXXMSGNO = 18; /* Not found*/
      FKWREC.XXX-MOD-ID = "1120"; /* Module identification*/
      set FK0EM110.XMG-COLR-GRP-CD cursor, bold; /* Highlight*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VGROUP01-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1120 GET COLOR GROUP DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VGROUP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VGROUP01.VGROUP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-1120

// Get material data
Function FK0E-1130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-VEND-CD = FK0EM110.FK-VEND-CD; /* Vendor*/
  VMATRL01.FK-MAT-NBR = FK0EM110.FK-MAT-NBR; /* Material nbr*/
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      FKWREC.XXXMSGNO = 18; /* Not found*/
      FKWREC.XXX-MOD-ID = "1130"; /* Module identification*/
      set FK0EM110.FK-MAT-NBR cursor, bold; /* Highlight*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VMATRL01-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1130 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-1130

// Get vendor data
Function FK0E-1140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0EM110.FK-VEND-CD; /* Vendor*/
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      set FK0EM110.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1140"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* no data found*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VVNDR001-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1140 GET VENDOR DATA     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-1140

// Save data in display storage
Function FK0E-1150()
   /* ------------------------------------------------------------------*/
   /* For each database record found, save data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  set FK0EW01 empty; /* Initialize display storage*/
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save color data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "Y") /* Color data found*/
    ;
    FK0EW01.XCLCD = VMCOLR01.XCLCD;
    FK0EW01.FK-VEND-COLR-DESC = VMCOLR01.FK-VEND-COLR-DESC;
    FK0EW01.FK-MAT-COLR-HOT-FL = VMCOLR01.FK-MAT-COLR-HOT-FL;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save color group data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "Y") /* Color group data found*/
    ;
    FK0EW01.XMG-COLR-GRP-CD = VGROUP01.XMG-COLR-GRP-CD;
    FK0EW01.FK-MAT-DOM-PRC = VGROUP01.FK-MAT-DOM-PRC;
    FK0EW01.FK-MAT-FRGN-PRC = VGROUP01.FK-MAT-FRGN-PRC;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save material data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "Y") /* Material data found*/
    ;
    FK0EW01.FK-MAT-NBR = VMATRL01.FK-MAT-NBR;
    FK0EW01.FK-DEPT-MAT-DESC = VMATRL01.FK-DEPT-MAT-DESC;
    FK0EW01.XTM-MAT-THCK-CD = VMATRL01.XTM-MAT-THCK-CD;
    FK0EW01.FK-VEND-MAT-DESC = VMATRL01.FK-VEND-MAT-DESC;
    FK0EW01.FK-MKT-MAT-DESC = VMATRL01.FK-MKT-MAT-DESC;
    FK0EW01.XMU-MAT-UOM-CD = VMATRL01.XMU-MAT-UOM-CD;
    FK0EW01.FK-MAT-HOT-FL = VMATRL01.FK-MAT-HOT-FL;
    FK0EW01.FK-MAT-CTRL-SHT = VMATRL01.FK-MAT-CTRL-SHT;
    FK0EW01.XMCCD = VMATRL01.XMCCD;
    FK0EW01.FK-MAT-TRAK-FL = VMATRL01.FK-MAT-TRAK-FL;
    FK0EW01.FK-COMNT = VMATRL01.FK-COMNT;
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save vendor data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VVNDR001-FOUND-SW == "Y") /* Vendor data found*/
    ;
    FK0EW01.FK-VEND-CD = VVNDR001.FK-VEND-CD;
    FK0EW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
    FK0EW01.FK-NIKE-MGR-ID = VVNDR001.FK-NIKE-MGR-ID;
    FK0EW01.ZZZCHGDT = VVNDR001.ZZZCHGDT;
  end
  ;
  ;
end // end FK0E-1150

// Format and converse INQ map
Function FK0E-1200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FK0E-1210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0EM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0EM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0EM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Protect fields where no database record was found.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "N") /* No dcmpnt.vmcolr rec found*/
    ;
    set FK0EM110.XCLDESC invisible, skip; /* Protect*/
    set FK0EM110.FK-MAT-COLR-HOT-FL invisible, skip; /* Protect*/
  end
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "N") /* No dcmpnt.vgroup rec found*/
    ;
    set FK0EM110.FK-MAT-FRGN-PRC invisible, skip; /* Protect*/
    set FK0EM110.FK-MAT-DOM-PRC invisible, skip; /* Protect*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FK0EM110 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0EM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0EM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || FKWREC.XXXMSGNO == 1)             /* Update complete*/
    if (FK0EM110.FK-VEND-CD == " ")
      set FK0EM110.FK-VEND-CD cursor;
    else
      set FK0EM110.FK-MAT-NBR cursor;
    end
  end
  ;
  ;
  converse FK0EM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0EM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0EM110.CAITEM; /* Application data*/
  ;
  ;
end // end FK0E-1200

// Format the display data
Function FK0E-1210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FK0EW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.  If data was found, format from*/
   /* display storage, otherwise format from working storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VVNDR001-FOUND-SW == "Y") /* If vendor found*/
    FK0EM110.FK-VEND-CD = FK0EW01.FK-VEND-CD; /* Vendor cd*/
  else
    FK0EM110.FK-VEND-CD = FK0EW00.FK-VEND-CD; /* Vendor cd*/
  end
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "Y") /* If material found*/
    FK0EM110.FK-MAT-NBR = FK0EW01.FK-MAT-NBR; /* Material nbr*/
  else
    FK0EM110.FK-MAT-NBR = FK0EW00.FK-MAT-NBR; /* Material nbr*/
  end
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "Y") /* If color group found*/
    FK0EM110.XMG-COLR-GRP-CD = FK0EW01.XMG-COLR-GRP-CD; /* Color group*/
  else
    FK0EM110.XMG-COLR-GRP-CD = FK0EW00.XMG-COLR-GRP-CD; /* Color group*/
  end
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "Y") /* If color found*/
    FK0EM110.XCLCD = FK0EW01.XCLCD; /* Color code*/
  else
    FK0EM110.XCLCD = FK0EW00.XCLCD; /* Color code*/
  end
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0EM110.FK-NIKE-MGR-ID = FK0EW01.FK-NIKE-MGR-ID; /* Manager id*/
  FK0EM110.FK-VEND-SNM = FK0EW01.FK-VEND-SNM; /* Vendor short nm*/
  FK0EM110.ZZZCHGDT = FK0EW01.ZZZCHGDT; /* Change date*/
  FK0EM110.FK-DEPT-MAT-DESC = FK0EW01.FK-DEPT-MAT-DESC; /* Mat desc*/
  FK0EM110.XTM-MAT-THCK-CD = FK0EW01.XTM-MAT-THCK-CD; /* Thickness*/
  FK0EM110.FK-VEND-MAT-DESC = FK0EW01.FK-VEND-MAT-DESC;
  FK0EM110.FK-MKT-MAT-DESC = FK0EW01.FK-MKT-MAT-DESC;
  FK0EM110.XMU-MAT-UOM-CD = FK0EW01.XMU-MAT-UOM-CD; /* Unit of measure*/
  FK0EM110.XMCCD = FK0EW01.XMCCD; /* Nil group*/
  FK0EM110.FK-MAT-HOT-FL = FK0EW01.FK-MAT-HOT-FL; /* Material hot fl*/
  FK0EM110.FK-MAT-CTRL-SHT = FK0EW01.FK-MAT-CTRL-SHT; /* Ctrl sht*/
  FK0EM110.FK-MAT-TRAK-FL = FK0EW01.FK-MAT-TRAK-FL; /* Mtrl trak fl*/
  FK0EM110.FK-COMNT = FK0EW01.FK-COMNT; /* Comment*/
  FK0EM110.FK-MAT-DOM-PRC = FK0EW01.FK-MAT-DOM-PRC; /* Domestic price*/
  FK0EM110.FK-MAT-FRGN-PRC = FK0EW01.FK-MAT-FRGN-PRC; /* Frgn price*/
  FK0EM110.FK-VEND-COLR-DESC = FK0EW01.FK-VEND-COLR-DESC;
  FK0EM110.FK-MAT-COLR-HOT-FL = FK0EW01.FK-MAT-COLR-HOT-FL;
  ;
  if (FK0EW01.XTM-MAT-THCK-CD == " ") /* If thickness not entered*/
    FK0EM110.XTM-MAT-THCK-DESC = " ";
  else
    if (FK0EW01.XTM-MAT-THCK-CD in XTMTBL.XTM-MAT-THCK-CD
     && XTMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      FK0EM110.XTM-MAT-THCK-DESC = XTMTBL.XTM-MAT-THCK-DESC[sysVar.arrayIndex];
    else
      FK0EM110.XTM-MAT-THCK-DESC = "** NOT FOUND **";
    end
  end
  ;
  if (FK0EW00.XCLCD == " ") /* if color code not entered*/
    FK0EM110.XCLDESC = " ";
  else
    if (FK0EW00.XCLCD in XCLTBL.XCLCD /* If color in table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      FK0EM110.XCLDESC = XCLTBL.XCLDESC[sysVar.arrayIndex];
    else
      FK0EM110.XCLDESC = "** NOT FOUND **";
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* If no message to display*/
    set FK0EM110.FK-VEND-CD cursor; /* Set cursor at vendor code*/
  end
  ;
  ;
end // end FK0E-1210

// Check attention identifier
Function FK0E-1300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0EW01.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-NBR[1] = FK0EW01.FK-MAT-NBR; /* Mat nbr*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0EW01.XMG-COLR-GRP-CD; /* Colr grp*/
    FKWREC.XCLCD[1] = FK0EW01.XCLCD; /* Color*/
    ;
    COMMAREA.CATOAP = "FK0E"; /* to applicaiton*/
    COMMAREA.CAITEM = "I"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0EM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0EM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FK0EW01.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-NBR[1] = FK0EW01.FK-MAT-NBR; /* Mat nbr*/
      FKWREC.XMG-COLR-GRP-CD[1] = FK0EW01.XMG-COLR-GRP-CD; /* Clr grp*/
      FKWREC.XCLCD[1] = FK0EW01.XCLCD; /* Color*/
      ;
      COMMAREA.CATOAP = FK0EM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0EM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0EM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf14 /* FK0G requested*/
   || converseVar.eventKey is pf15 /* FK0H requested*/
   || converseVar.eventKey is pf16 /* FK0M requested*/
   || converseVar.eventKey is pf19) /* FK0Q requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0EM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0F"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0G"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FK0M"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf19) /* PF19 was pressed*/
      COMMAREA.CATOAP = "FK0Q"; /* TO application*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0EW01.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-NBR[1] = FK0EW01.FK-MAT-NBR; /* Mat nbr*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0EW01.XMG-COLR-GRP-CD; /* Colr grp*/
    FKWREC.XCLCD[1] = FK0EW01.XCLCD; /* Color*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6)  /* NXTMTL requested*/
    ;
    FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0E-1300

// Reset Highlighted fields
Function FK0E-1400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0EM110.FK-VEND-CD initialAttributes; /* Vender code*/
  set FK0EM110.FK-MAT-NBR initialAttributes; /* Material number*/
  set FK0EM110.XMG-COLR-GRP-CD initialAttributes; /* Color Group*/
  set FK0EM110.XCLCD initialAttributes; /* Color code*/
  ;
  set FK0EM110.FK-MAT-FRGN-PRC initialAttributes; /* Foreign price*/
  set FK0EM110.FK-MAT-DOM-PRC initialAttributes; /* Domestic price*/
  ;
  set FK0EM110.XCLDESC initialAttributes; /* Color desc*/
  set FK0EM110.FK-VEND-COLR-DESC initialAttributes; /* Vend color desc*/
  set FK0EM110.FK-MAT-COLR-HOT-FL initialAttributes; /* Color hot flag*/
  ;
  set FK0EM110.CATOAP initialAttributes; /* To application*/
  set FK0EM110.CAITEM initialAttributes; /* Application data*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM110.XCLCD == "?" /* XCL list requested*/
   || FK0EM110.XMG-COLR-GRP-CD == "?") /* XMG list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      ;
      FKWREC.XXX-MOD-ID = "1400"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    ;
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xcl codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM110.XCLCD == "?") /* Xcl list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  COLOR"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCL01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM110.XCLCD = FK0EW01.XCLCD; /* Restore prior code*/
    else
      FK0EM110.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FK0EM110.XCLCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xmg codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM110.XMG-COLR-GRP-CD == "?") /* XMG list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  COLOR GROUP"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXMG01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM110.XMG-COLR-GRP-CD = FK0EW01.XMG-COLR-GRP-CD; /* Restore prior code*/
    else
      FK0EM110.XMG-COLR-GRP-CD = XMGTBL.XMG-COLR-GRP-CD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FK0EM110.XMG-COLR-GRP-CD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "1400"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FK0E-1400

// Verify entered fields
Function FK0E-1500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM110.CAITEM > " ") /* Application data was entered*/
    ;
    set FK0EM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If NXTMTL (pf6) entered, verify next material exists in*/
   /* fkwrec.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Next material requested*/
    ;
    FK0EW00.FK0EW-IDX = FK0EW00.FK0EW-NXTMTL-IDX + 1;
    ;
    if (FK0EW00.FK0EW-IDX > 15 /* If on last fkwrec record*/
     || FKWREC.FK-VEND-CD[FK0EW-IDX] == " ") /* or no more data*/
      ;
      set FK0EM110.FK-VEND-CD cursor; /* Reset cursor*/
      FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
      converseLib.validationFailed(33); /* No more materials to display*/
      exit stack;
    end
    ;
    return; /* Exit edit section -- we want the next product*/
           /* regardless of any other changes.*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the color data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM110.XCLCD != " ") /* Verify code if entered (blank o.k.)*/
    ;
    if (FK0EM110.XCLCD in XCLTBL.XCLCD /* If code in table*/
     && XCLTBL.XXXSTAT == "A")         /* and active status*/
      ;
       /* Next sentence*/
    else
      ;
      set FK0EM110.XCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
      converseLib.validationFailed(32); /* Material color code missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the color group data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM110.XMG-COLR-GRP-CD != " ") /* Verify code if entered (blank ok)*/
    ;
    if (FK0EM110.XMG-COLR-GRP-CD in XMGTBL.XMG-COLR-GRP-CD /* If cd in tbl*/
     && XMGTBL.XXXSTAT == "A")                             /* and active status*/
      ;
       /* Next sentence*/
    else
      ;
      set FK0EM110.XMG-COLR-GRP-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
      converseLib.validationFailed(31); /* Color group code missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the material data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM110.FK-MAT-NBR == " ") /* If material missing*/
    ;
    set FK0EM110.FK-MAT-NBR cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(26); /* Material code invalid or missing*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the vendor data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM110.FK-VEND-CD == " ") /* If vendor code missing*/
    ;
    set FK0EM110.FK-VEND-CD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(21); /* Vendor code invalid or missing*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FK0E-1500

// Process Request
Function FK0E-1600()
   /* --------------------------------------------------------------------*/
   /* If NXTmtl (pf6) requested, obtain the next product to display.*/
   /* --------------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Next material requested*/
    ;
    FK0EW00.FK0EW-NXTMTL-IDX = FK0EW00.FK0EW-NXTMTL-IDX + 1; /* Increment*/
    ;
    FK0EM110.FK-VEND-CD = FKWREC.FK-VEND-CD[FK0EW-NXTMTL-IDX]; /* Vendor*/
    FK0EM110.FK-MAT-NBR = FKWREC.FK-MAT-NBR[FK0EW-NXTMTL-IDX]; /* Material*/
    FK0EM110.XMG-COLR-GRP-CD = FKWREC.XMG-COLR-GRP-CD[FK0EW-NXTMTL-IDX]; /* Color group*/
    FK0EM110.XCLCD = FKWREC.XCLCD[FK0EW-NXTMTL-IDX]; /* Color*/
    ;
    FK0EW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* exit to display the map*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM110.FK-VEND-CD != FK0EW01.FK-VEND-CD           /* If vendor changed*/
   || FK0EM110.FK-MAT-NBR != FK0EW01.FK-MAT-NBR           /* or mtrl*/
   || FK0EM110.XMG-COLR-GRP-CD != FK0EW01.XMG-COLR-GRP-CD /* or clr grp*/
   || FK0EM110.XCLCD != FK0EW01.XCLCD)                    /* or color*/
    ;
    FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end
  ;
  ;
end // end FK0E-1600

// List the rows in the table
Function FK0E-2000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0E-2100(); /* Obtain the data to display*/
  ;
  FK0E-2200(); /* Format and display the map*/
  ;
  FK0E-2300(); /* Check attention identifier*/
  ;
  FK0E-2400(); /* Reset fields to normal intensity*/
  ;
  FK0E-2500(); /* Verify the entered data*/
  ;
  FK0E-2600(); /* Process valid input request*/
  ;
  ;
end // end FK0E-2000

// Obtain data to display
Function FK0E-2100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0EW01 empty; /* Initialize display storage*/
  set FK0EW02 empty; /* Initialize display storage (copy)*/
  ;
  FK0EW00.FK-VEND-CD = FK0EM210.FK-VEND-CD; /* Vendor*/
  FK0EW00.FK-MAT-NBR = FK0EM210.FK-MAT-NBR; /* Material*/
  FK0EW00.XMG-COLR-GRP-CD = FK0EM210.XMG-COLR-GRP-CD; /* Color group*/
  FK0EW00.XCLCD = FK0EM210.XCLCD; /* Color*/
  ;
  FK0EW00.FK0EM-COPY-FK-MAT-NBR = FK0EM210.FK0EM-COPY-FK-MAT-NBR; /* Copy material*/
  FK0EW00.FK0EM-COPY-XMG-COLR-GRP-CD = FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD; /* Copy color group*/
  FK0EW00.FK0EM-COPY-XCLCD = FK0EM210.FK0EM-COPY-XCLCD; /* Copy color*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0EW00.FK0EW-VGROUP01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0EW00.FK0EW-VMATRL01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  ;
  FK0EW00.FK0EW-VMCOLR01-COPIED-SW = "N"; /* Init copied sw to 'n'*/
  FK0EW00.FK0EW-VGROUP01-COPIED-SW = "N"; /* Init copied sw to 'n'*/
  FK0EW00.FK0EW-VMATRL01-COPIED-SW = "N"; /* Init copied sw to 'n'*/
  ;
  if (FK0EM210.XCLCD != "  ") /* If color code on map*/
    FK0E-2110(); /* Obtain the color data*/
  end /* (DCMPNT.VMCOLR01)*/
                                  /*  */
                                  /*  */
  if (FK0EM210.XMG-COLR-GRP-CD != "  ") /* If color group on map*/
    FK0E-2120(); /* Obtain the color group data*/
  end /* (DCMPNT.VGROUP01)*/
                                  /*  */
                                  /*  */
  FK0E-2130(); /* Obtain the material data*/
                                  /* (DCMPNT.VMATRL01)*/
                                  /*  */
  FK0E-2140(); /* Obtain the vendor data*/
                                  /* (DCMPNT.VVNDR001)*/
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data obtained in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0E-2150(); /* Save data*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If requested, obtain copy data.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-COPY-DATA-SW == "Y") /* If copying data*/
    ;
    if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "Y" /* If color found*/
     && FK0EW00.FK0EW-VGROUP01-FOUND-SW == "Y" /* and color group found*/
     && FK0EW00.FK0EW-VMATRL01-FOUND-SW == "Y") /* and material found*/
      ;
      FKWREC.XXXMSGNO = 40; /* Cannot add - already exists*/
      FKWREC.XXX-MOD-ID = "2100"; /* Module identification*/
    else
      ;
      if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "N") /* If color not found*/
        FK0E-2160(); /* Obtain the color data*/
      end /* (DCMPNT.VMCOLR01)*/
      ;
      ;
      if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "N") /* If color grp not found*/
        FK0E-2170(); /* Obtain the color group data*/
      end /* (DCMPNT.VGROUP01)*/
      ;
      ;
      if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "N") /* If material not found*/
        FK0E-2180(); /* Obtain the material data*/
      end /* (DCMPNT.VMATRL01)*/
    end
    ;
    ;
    /* --------------------------------------------------------------*/
    /* Save data obtained in display storage.*/
    /* --------------------------------------------------------------*/
    ;
    FK0E-2190(); /* Save data (copy)*/
    ;
    /* --------------------------------------------------------------*/
    /* If data was copied, display message stating data was obtained.*/
    /* --------------------------------------------------------------*/
    ;
    if (FK0EW00.FK0EW-VMCOLR01-COPIED-SW == "Y" /* If color copied*/
     || FK0EW00.FK0EW-VGROUP01-COPIED-SW == "Y" /* or color group copied*/
     || FK0EW00.FK0EW-VMATRL01-COPIED-SW == "Y") /* or material copied*/
      ;
      FKWREC.XXXMSGNO = 39; /* Copy data displayed*/
      FKWREC.XXX-MOD-ID = "2100"; /* Module identification*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0EW00.FK0EW-REQUEST-DATA-SW = "N";
  FK0EW00.FK0EW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FK0E-2100

// Get color data
Function FK0E-2110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.FK-MAT-NBR = FK0EM210.FK-MAT-NBR; /* Material nbr*/
  VMCOLR01.XMG-COLR-GRP-CD = FK0EM210.XMG-COLR-GRP-CD; /* Color group*/
  VMCOLR01.XCLCD = FK0EM210.XCLCD; /* Color*/
  ;
  try
    call "IO6210" ("S ", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "Y"; /* Tbl found switch*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2110 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2110

// Get color group data
Function FK0E-2120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VGROUP01 empty;
  ;
  VGROUP01.FK-MAT-NBR = FK0EM210.FK-MAT-NBR; /* Material nbr*/
  VGROUP01.XMG-COLR-GRP-CD = FK0EM210.XMG-COLR-GRP-CD; /* Color group*/
  ;
  try
    call "IO6200" ("S ", SQLCA, VGROUP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VGROUP01-FOUND-SW = "Y"; /* Tbl found switch*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2120 GET COLOR GROUP DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VGROUP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VGROUP01.VGROUP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2120

// Get material data
Function FK0E-2130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-VEND-CD = FK0EM210.FK-VEND-CD; /* Vendor*/
  VMATRL01.FK-MAT-NBR = FK0EM210.FK-MAT-NBR; /* Material nbr*/
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VMATRL01-FOUND-SW = "Y"; /* Tbl found switch*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2130 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2130

// Get vendor data
Function FK0E-2140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0EM210.FK-VEND-CD; /* Vendor*/
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      set FK0EM210.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2140"; /* Module identification*/
      converseLib.validationFailed(18); /* No data found*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VVNDR001-FOUND-SW = "Y"; /* Tbl found switch*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2140 GET VENDOR DATA     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2140

// Save data in display storage
Function FK0E-2150()
   /* ------------------------------------------------------------------*/
   /* For each database record found, save data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  set FK0EW01 empty; /* Initialize display storage*/
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save color data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "Y") /* Color data found*/
    ;
    FK0EW01.XCLCD = VMCOLR01.XCLCD;
    FK0EW01.FK-VEND-COLR-DESC = VMCOLR01.FK-VEND-COLR-DESC;
    FK0EW01.FK-MAT-COLR-HOT-FL = VMCOLR01.FK-MAT-COLR-HOT-FL;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save color group data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "Y") /* Color group data found*/
    ;
    FK0EW01.XMG-COLR-GRP-CD = VGROUP01.XMG-COLR-GRP-CD;
    FK0EW01.FK-MAT-DOM-PRC = VGROUP01.FK-MAT-DOM-PRC;
    FK0EW01.FK-MAT-FRGN-PRC = VGROUP01.FK-MAT-FRGN-PRC;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save material data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "Y") /* Material data found*/
    ;
    FK0EW01.FK-MAT-NBR = VMATRL01.FK-MAT-NBR;
    FK0EW01.FK-DEPT-MAT-DESC = VMATRL01.FK-DEPT-MAT-DESC;
    FK0EW01.XTM-MAT-THCK-CD = VMATRL01.XTM-MAT-THCK-CD;
    FK0EW01.FK-VEND-MAT-DESC = VMATRL01.FK-VEND-MAT-DESC;
    FK0EW01.FK-MKT-MAT-DESC = VMATRL01.FK-MKT-MAT-DESC;
    FK0EW01.XMU-MAT-UOM-CD = VMATRL01.XMU-MAT-UOM-CD;
    FK0EW01.FK-MAT-HOT-FL = VMATRL01.FK-MAT-HOT-FL;
    FK0EW01.FK-MAT-CTRL-SHT = VMATRL01.FK-MAT-CTRL-SHT;
    FK0EW01.XMCCD = VMATRL01.XMCCD;
    FK0EW01.FK-MAT-TRAK-FL = VMATRL01.FK-MAT-TRAK-FL;
    FK0EW01.FK-COMNT = VMATRL01.FK-COMNT;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save vendor data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VVNDR001-FOUND-SW == "Y") /* Vendor data found*/
    ;
    FK0EW01.FK-VEND-CD = VVNDR001.FK-VEND-CD;
    FK0EW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
    FK0EW01.FK-NIKE-MGR-ID = VVNDR001.FK-NIKE-MGR-ID;
    FK0EW01.ZZZCHGDT = VVNDR001.ZZZCHGDT;
  end
  ;
   /* ------------------------------------------------------------------*/
   /* Move defaults to fields where no data was found to display.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "N" /* Color not found*/
   && FK0EW00.XCLCD != " ")                  /* and color entered*/
    ;
    FK0EW01.FK-MAT-COLR-HOT-FL = "N"; /* Default clr hot flag*/
  end
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "N" /* Color group not found*/
   && FK0EW00.XMG-COLR-GRP-CD != " ")        /* and color group entered*/
    ;
    FK0EW01.FK-MAT-DOM-PRC = 1; /* Default domestic price*/
    FK0EW01.FK-MAT-FRGN-PRC = 0; /* Default foreign price*/
  end
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "N" /* Material not found*/
   && FK0EW00.FK-MAT-NBR != " ")             /* and material entered*/
    ;
    FK0EW01.XTM-MAT-THCK-CD = "00"; /* Default thickness*/
    FK0EW01.FK-MAT-HOT-FL = "N"; /* Default hot flag*/
    FK0EW01.FK-MAT-TRAK-FL = "Y"; /* Default track flag*/
  end
  ;
  ;
end // end FK0E-2150

// Get color data (copy)
Function FK0E-2160()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.FK-MAT-NBR = FK0EM210.FK0EM-COPY-FK-MAT-NBR;
  VMCOLR01.XMG-COLR-GRP-CD = FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD;
  VMCOLR01.XCLCD = FK0EM210.FK0EM-COPY-XCLCD;
  ;
  try
    call "IO6210" ("S ", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      converseLib.validationFailed(18); /* Not found*/
      FKWREC.XXX-MOD-ID = "2160"; /* Module identification*/
      set FK0EM210.FK0EM-COPY-XCLCD cursor, bold; /* highlight*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "Y"; /* Tbl found fl*/
      FK0EW00.FK0EW-VMCOLR01-COPIED-SW = "Y"; /* Tbl copied*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2160"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2160 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2160

// Get color group data (copy)
Function FK0E-2170()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VGROUP01 empty;
  ;
  VGROUP01.FK-MAT-NBR = FK0EM210.FK0EM-COPY-FK-MAT-NBR;
  VGROUP01.XMG-COLR-GRP-CD = FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD;
  ;
  try
    call "IO6200" ("S ", SQLCA, VGROUP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      converseLib.validationFailed(18); /* Not found*/
      FKWREC.XXX-MOD-ID = "2170"; /* Module identification*/
      set FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD cursor, bold; /* Highlight*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VGROUP01-FOUND-SW = "Y"; /* Tbl found sw*/
      FK0EW00.FK0EW-VGROUP01-COPIED-SW = "Y"; /* Tbl copied sw*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2170"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2170 GET COLOR GROUP DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VGROUP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VGROUP01.VGROUP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2170

// Get material data (copy)
Function FK0E-2180()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-VEND-CD = FK0EM210.FK-VEND-CD;
  VMATRL01.FK-MAT-NBR = FK0EM210.FK0EM-COPY-FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      converseLib.validationFailed(18); /* Not found*/
      FKWREC.XXX-MOD-ID = "2180"; /* Module identification*/
      set FK0EM210.FK0EM-COPY-FK-MAT-NBR cursor, bold; /* Highlight*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VMATRL01-FOUND-SW = "Y"; /* Tbl found sw*/
      FK0EW00.FK0EW-VMATRL01-COPIED-SW = "Y"; /* Tbl copied sw*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2180"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2180 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2180

// Save data in disp store (copy)
Function FK0E-2190()
   /* ------------------------------------------------------------------*/
   /* Save key data in display storage -- this is for the copy function*/
   /* ONLY.*/
   /* ------------------------------------------------------------------*/
  ;
   /* ------------------------------------------------------------------*/
   /* For each database record found, save data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  set FK0EW02 empty; /* Initialize copy display storage*/
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save color data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "Y") /* Color data found*/
    ;
    FK0EW02.XCLCD = FK0EM210.XCLCD;
    FK0EW02.FK-MAT-COLR-HOT-FL = VMCOLR01.FK-MAT-COLR-HOT-FL;
    ;
    if (FK0EM210.XCLCD in XCLTBL.XCLCD /* If color on corp table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active*/
      ;
      FK0EW02.FK-VEND-COLR-DESC = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* default*/
    else
      FK0EW02.FK-VEND-COLR-DESC = VMCOLR01.FK-VEND-COLR-DESC;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save color group data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "Y") /* Color group data found*/
    ;
    FK0EW02.XMG-COLR-GRP-CD = FK0EM210.XMG-COLR-GRP-CD;
    FK0EW02.FK-MAT-DOM-PRC = VGROUP01.FK-MAT-DOM-PRC;
    FK0EW02.FK-MAT-FRGN-PRC = VGROUP01.FK-MAT-FRGN-PRC;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save material data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "Y") /* Material data found*/
    ;
    FK0EW02.FK-MAT-NBR = FK0EM210.FK-MAT-NBR;
    FK0EW02.FK-DEPT-MAT-DESC = VMATRL01.FK-DEPT-MAT-DESC;
    FK0EW02.XTM-MAT-THCK-CD = VMATRL01.XTM-MAT-THCK-CD;
    FK0EW02.FK-VEND-MAT-DESC = VMATRL01.FK-VEND-MAT-DESC;
    FK0EW02.FK-MKT-MAT-DESC = VMATRL01.FK-MKT-MAT-DESC;
    FK0EW02.XMU-MAT-UOM-CD = VMATRL01.XMU-MAT-UOM-CD;
    FK0EW02.FK-MAT-HOT-FL = VMATRL01.FK-MAT-HOT-FL;
    FK0EW02.FK-MAT-CTRL-SHT = VMATRL01.FK-MAT-CTRL-SHT;
    FK0EW02.XMCCD = VMATRL01.XMCCD;
    FK0EW02.FK-MAT-TRAK-FL = VMATRL01.FK-MAT-TRAK-FL;
    FK0EW02.FK-COMNT = VMATRL01.FK-COMNT;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save vendor data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VVNDR001-FOUND-SW == "Y") /* Vendor data found*/
    ;
    FK0EW02.FK-VEND-CD = VVNDR001.FK-VEND-CD;
    FK0EW02.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
    FK0EW02.FK-NIKE-MGR-ID = VVNDR001.FK-NIKE-MGR-ID;
    FK0EW02.ZZZCHGDT = VVNDR001.ZZZCHGDT;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save key data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  FK0EW00.FK-VEND-CD = FK0EM210.FK-VEND-CD; /* Vendor*/
  FK0EW00.FK-MAT-NBR = FK0EM210.FK-MAT-NBR; /* Material*/
  FK0EW00.XMG-COLR-GRP-CD = FK0EM210.XMG-COLR-GRP-CD; /* Color grp*/
  FK0EW00.XCLCD = FK0EM210.XCLCD; /* Color*/
  ;
  FK0EW01.FK-VEND-CD = FK0EM210.FK-VEND-CD; /* Vendor*/
  FK0EW01.FK-MAT-NBR = FK0EM210.FK-MAT-NBR; /* Material*/
  FK0EW01.XMG-COLR-GRP-CD = FK0EM210.XMG-COLR-GRP-CD; /* Color grp*/
  FK0EW01.XCLCD = FK0EM210.XCLCD; /* Color*/
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save copy data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMCOLR01-COPIED-SW == "Y" /* If color copied*/
   || FK0EW00.FK0EW-VGROUP01-COPIED-SW == "Y" /* or group copied*/
   || FK0EW00.FK0EW-VMATRL01-COPIED-SW == "Y") /* or material copied*/
    ;
    FK0EW02.FK0EM-COPY-FK-MAT-NBR = FK0EM210.FK0EM-COPY-FK-MAT-NBR; /* Copy material nbr*/
    FK0EW02.FK0EM-COPY-XMG-COLR-GRP-CD = FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD; /* Copy color group code*/
    FK0EW02.FK0EM-COPY-XCLCD = FK0EM210.FK0EM-COPY-XCLCD; /* Copy color code*/
  else
    FK0EW02.FK0EM-COPY-FK-MAT-NBR = " ";
    FK0EW02.FK0EM-COPY-XMG-COLR-GRP-CD = " ";
    FK0EW02.FK0EM-COPY-XCLCD = " ";
  end
  ;
  ;
end // end FK0E-2190

// Format and converse ADD map
Function FK0E-2200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    if (FK0EW00.FK0EW-COPY-DATA-SW == "N") /* If not copying data*/
      ;
      FK0E-2210(); /* Format the map*/
    else
      ;
      FK0E-2220(); /* Format the map*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0EM210.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0EM210.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0EM210.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a key field was entered, and no data was found, allow*/
   /* fields to be open for input; otherwise protect the fields.*/
   /* **** If no data was found using the copy function protect*/
   /* **** the fields.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "N" /* No dcmpnt.vmcolr rec found*/
   && FK0EM210.XCLCD != " "                  /* and key was entered*/
   && FK0EW00.FK0EW-COPY-DATA-SW == "N")     /* and not copying data*/
    ;
     /* Next sentence*/
  else
    ;
    set FK0EM210.FK-VEND-COLR-DESC skip; /* Protect*/
    set FK0EM210.FK-MAT-COLR-HOT-FL skip; /* Protect*/
  end
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "N" /* No dcmpnt.vgroup rec found*/
   && FK0EM210.XMG-COLR-GRP-CD != " "        /* and key was entered*/
   && FK0EW00.FK0EW-COPY-DATA-SW == "N")     /* and not copying data*/
    ;
     /* Next sentence*/
  else
    ;
    set FK0EM210.FK-MAT-DOM-PRC skip; /* Protect*/
    set FK0EM210.FK-MAT-FRGN-PRC skip; /* Protect*/
  end
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "N" /* No dcmpnt.vmatrl rec found*/
   && FK0EM210.FK-MAT-NBR != " "             /* and key was entered*/
   && FK0EW00.FK0EW-COPY-DATA-SW == "N")     /* and not copying data*/
    ;
     /* Next sentence*/
  else
    ;
    set FK0EM210.FK-COMNT skip; /* Protect*/
    set FK0EM210.FK-MAT-CTRL-SHT skip; /* Protect*/
    set FK0EM210.FK-MAT-TRAK-FL skip; /* Protect*/
    set FK0EM210.FK-MAT-HOT-FL skip; /* Protect*/
    set FK0EM210.XMCCD skip; /* Protect*/
    set FK0EM210.XMU-MAT-UOM-CD skip; /* Protect*/
    set FK0EM210.FK-MKT-MAT-DESC skip; /* Protect*/
    set FK0EM210.FK-VEND-MAT-DESC skip; /* Protect*/
    set FK0EM210.XTM-MAT-THCK-CD skip; /* Protect*/
    set FK0EM210.FK-DEPT-MAT-DESC skip; /* Protect*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FK0EM210 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0EM210.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0EM210.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* If no message to display*/
   || FKWREC.XXXMSGNO == 1              /* or update complete*/
   || FKWREC.XXXMSGNO == 39)            /* or copy data displayed*/
    ;
    if (FK0EM210.FK-VEND-CD == " ") /* If vendor missing*/
      set FK0EM210.FK-VEND-CD cursor; /* Set cursor at vendor*/
    else
      ;
      if (FK0EW00.FK0EW-COPY-DATA-SW == "Y") /* If copying data*/
        set FK0EM210.FK-MAT-NBR cursor; /* Set cursor at material*/
      else
        ;
        if (FK0EW00.FK0EW-VMATRL01-FOUND-SW != "Y" /* Material not found*/
         && FK0EM210.FK-MAT-NBR != " ")            /* and material was entered*/
          set FK0EM210.FK-DEPT-MAT-DESC cursor; /* Set cursor at desc*/
        else
          ;
          if (FK0EW00.FK0EW-VGROUP01-FOUND-SW != "Y" /* Clr grp not found*/
           && FK0EM210.XMG-COLR-GRP-CD != " ")       /* and clr grp was entered*/
            set FK0EM210.FK-MAT-DOM-PRC cursor; /* Set cursor at dom price*/
          else
            ;
            if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW != "Y" /* Color not found*/
             && FK0EW00.XCLCD != " ")                  /* and color was entered*/
              set FK0EM210.FK-VEND-COLR-DESC cursor; /* Set cursor at desc*/
            else
              ;
              set FK0EM210.FK-MAT-NBR cursor; /* Set cursor at material*/
            end
          end
        end
      end
    end
  end
  ;
  converse FK0EM210 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0EM210.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0EM210.CAITEM; /* Application data*/
  ;
  ;
end // end FK0E-2200

// Format the display data
Function FK0E-2210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FK0EW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.  If data was found, format from*/
   /* display storage, otherwise format from working storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VVNDR001-FOUND-SW == "Y") /* If vendor found*/
    FK0EM210.FK-VEND-CD = FK0EW01.FK-VEND-CD; /* Vendor cd*/
  else
    FK0EM210.FK-VEND-CD = FK0EW00.FK-VEND-CD; /* Vendor cd*/
  end
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "Y") /* If material found*/
    FK0EM210.FK-MAT-NBR = FK0EW01.FK-MAT-NBR; /* Material nbr*/
  else
    FK0EM210.FK-MAT-NBR = FK0EW00.FK-MAT-NBR; /* Material nbr*/
  end
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "Y") /* If color group found*/
    FK0EM210.XMG-COLR-GRP-CD = FK0EW01.XMG-COLR-GRP-CD; /* Color group*/
  else
    FK0EM210.XMG-COLR-GRP-CD = FK0EW00.XMG-COLR-GRP-CD; /* Color group*/
  end
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "Y") /* If color found*/
    FK0EM210.XCLCD = FK0EW01.XCLCD; /* Color code*/
  else
    FK0EM210.XCLCD = FK0EW00.XCLCD; /* Color code*/
  end
  ;
  FK0EM210.FK0EM-COPY-FK-MAT-NBR = FK0EW02.FK0EM-COPY-FK-MAT-NBR;
  FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD = FK0EW02.FK0EM-COPY-XMG-COLR-GRP-CD; /* Colr group*/
  FK0EM210.FK0EM-COPY-XCLCD = FK0EW02.FK0EM-COPY-XCLCD; /* Clr*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0EM210.FK-NIKE-MGR-ID = FK0EW01.FK-NIKE-MGR-ID; /* Manager id*/
  FK0EM210.FK-VEND-SNM = FK0EW01.FK-VEND-SNM; /* Vendor short nm*/
  FK0EM210.ZZZCHGDT = FK0EW01.ZZZCHGDT; /* Change date*/
  FK0EM210.FK-DEPT-MAT-DESC = FK0EW01.FK-DEPT-MAT-DESC; /* Mat desc*/
  FK0EM210.XTM-MAT-THCK-CD = FK0EW01.XTM-MAT-THCK-CD; /* Thickness*/
  FK0EM210.FK-VEND-MAT-DESC = FK0EW01.FK-VEND-MAT-DESC;
  FK0EM210.FK-MKT-MAT-DESC = FK0EW01.FK-MKT-MAT-DESC;
  FK0EM210.XMU-MAT-UOM-CD = FK0EW01.XMU-MAT-UOM-CD; /* Unit of measure*/
  FK0EM210.XMCCD = FK0EW01.XMCCD; /* Nil group*/
  FK0EM210.FK-MAT-HOT-FL = FK0EW01.FK-MAT-HOT-FL; /* Material hot fl*/
  FK0EM210.FK-MAT-CTRL-SHT = FK0EW01.FK-MAT-CTRL-SHT; /* Ctrl sht*/
  FK0EM210.FK-MAT-TRAK-FL = FK0EW01.FK-MAT-TRAK-FL; /* Mtrl trak fl*/
  FK0EM210.FK-COMNT = FK0EW01.FK-COMNT; /* Comment*/
  FK0EM210.FK-MAT-DOM-PRC = FK0EW01.FK-MAT-DOM-PRC; /* Domestic price*/
  FK0EM210.FK-MAT-FRGN-PRC = FK0EW01.FK-MAT-FRGN-PRC; /* Frgn price*/
  FK0EM210.FK-VEND-COLR-DESC = FK0EW01.FK-VEND-COLR-DESC;
  FK0EM210.FK-MAT-COLR-HOT-FL = FK0EW01.FK-MAT-COLR-HOT-FL;
  ;
  if (FK0EW01.XTM-MAT-THCK-CD == " ") /* If thickness not entered*/
    FK0EM210.XTM-MAT-THCK-DESC = " ";
  else
    if (FK0EW01.XTM-MAT-THCK-CD in XTMTBL.XTM-MAT-THCK-CD
     && XTMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      FK0EM210.XTM-MAT-THCK-DESC = XTMTBL.XTM-MAT-THCK-DESC[sysVar.arrayIndex];
    else
      FK0EM210.XTM-MAT-THCK-DESC = "** NOT FOUND **";
    end
  end
  ;
  if (FK0EW00.XCLCD == " ") /* if color code not entered*/
    FK0EM210.XCLDESC = " ";
  else
    if (FK0EW00.XCLCD in XCLTBL.XCLCD /* If color in table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      FK0EM210.XCLDESC = XCLTBL.XCLDESC[sysVar.arrayIndex];
    else
      FK0EM210.XCLDESC = "** NOT FOUND **";
    end
  end
  ;
   /* --------------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* If no message*/
    set FK0EM210.FK-VEND-CD cursor; /* Set cursor at vendor code*/
  end
  ;
  ;
end // end FK0E-2210

// Format the display data (copy)
Function FK0E-2220()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0EW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.  If data was found, format from*/
   /* display storage, otherwise format from working storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VVNDR001-FOUND-SW == "Y") /* If vendor found*/
    FK0EM210.FK-VEND-CD = FK0EW02.FK-VEND-CD; /* Vendor cd*/
  else
    FK0EM210.FK-VEND-CD = FK0EW00.FK-VEND-CD; /* Vendor cd*/
  end
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "Y") /* If material found*/
    FK0EM210.FK-MAT-NBR = FK0EW02.FK-MAT-NBR; /* Material nbr*/
  else
    FK0EM210.FK-MAT-NBR = FK0EW00.FK-MAT-NBR; /* Material nbr*/
  end
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "Y") /* If color group found*/
    FK0EM210.XMG-COLR-GRP-CD = FK0EW02.XMG-COLR-GRP-CD; /* Color group*/
  else
    FK0EM210.XMG-COLR-GRP-CD = FK0EW00.XMG-COLR-GRP-CD; /* Color group*/
  end
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "Y") /* If color found*/
    FK0EM210.XCLCD = FK0EW02.XCLCD; /* Color code*/
  else
    FK0EM210.XCLCD = FK0EW00.XCLCD; /* Color code*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format copy data in the map.  If data was copied, format from*/
   /* display storage, otherwise format from working storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMATRL01-COPIED-SW == "Y") /* If material copied*/
    FK0EM210.FK0EM-COPY-FK-MAT-NBR = FK0EW02.FK0EM-COPY-FK-MAT-NBR;
  else
    FK0EM210.FK0EM-COPY-FK-MAT-NBR = FK0EW00.FK0EM-COPY-FK-MAT-NBR;
  end
  ;
  if (FK0EW00.FK0EW-VGROUP01-COPIED-SW == "Y") /* If group copied*/
    FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD = FK0EW02.FK0EM-COPY-XMG-COLR-GRP-CD; /* Colr group*/
  else
    FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD = FK0EW00.FK0EM-COPY-XMG-COLR-GRP-CD; /* Colr group*/
  end
  ;
  if (FK0EW00.FK0EW-VMCOLR01-COPIED-SW == "Y") /* If color copied*/
    FK0EM210.FK0EM-COPY-XCLCD = FK0EW02.FK0EM-COPY-XCLCD; /* Clr*/
  else
    FK0EM210.FK0EM-COPY-XCLCD = FK0EW00.FK0EM-COPY-XCLCD; /* Clr*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0EM210.FK-NIKE-MGR-ID = FK0EW02.FK-NIKE-MGR-ID; /* Manager id*/
  FK0EM210.FK-VEND-SNM = FK0EW02.FK-VEND-SNM; /* Vendor short nm*/
  FK0EM210.ZZZCHGDT = FK0EW02.ZZZCHGDT; /* Change date*/
  FK0EM210.FK-DEPT-MAT-DESC = FK0EW02.FK-DEPT-MAT-DESC; /* Mat desc*/
  FK0EM210.XTM-MAT-THCK-CD = FK0EW02.XTM-MAT-THCK-CD; /* Thickness*/
  FK0EM210.FK-VEND-MAT-DESC = FK0EW02.FK-VEND-MAT-DESC;
  FK0EM210.FK-MKT-MAT-DESC = FK0EW02.FK-MKT-MAT-DESC;
  FK0EM210.XMU-MAT-UOM-CD = FK0EW02.XMU-MAT-UOM-CD; /* Unit of measure*/
  FK0EM210.XMCCD = FK0EW02.XMCCD; /* Nil group*/
  FK0EM210.FK-MAT-HOT-FL = FK0EW02.FK-MAT-HOT-FL; /* Material hot fl*/
  FK0EM210.FK-MAT-CTRL-SHT = FK0EW02.FK-MAT-CTRL-SHT; /* Ctrl sht*/
  FK0EM210.FK-MAT-TRAK-FL = FK0EW02.FK-MAT-TRAK-FL; /* Mtrl trak fl*/
  FK0EM210.FK-COMNT = FK0EW02.FK-COMNT; /* Comment*/
  FK0EM210.FK-MAT-DOM-PRC = FK0EW02.FK-MAT-DOM-PRC; /* Domestic price*/
  FK0EM210.FK-MAT-FRGN-PRC = FK0EW02.FK-MAT-FRGN-PRC; /* Frgn price*/
  FK0EM210.FK-VEND-COLR-DESC = FK0EW02.FK-VEND-COLR-DESC;
  FK0EM210.FK-MAT-COLR-HOT-FL = FK0EW02.FK-MAT-COLR-HOT-FL;
  ;
  if (FK0EW02.XTM-MAT-THCK-CD == " ") /* If thickness not entered*/
    FK0EM210.XTM-MAT-THCK-DESC = " ";
  else
    if (FK0EW02.XTM-MAT-THCK-CD in XTMTBL.XTM-MAT-THCK-CD
     && XTMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      FK0EM210.XTM-MAT-THCK-DESC = XTMTBL.XTM-MAT-THCK-DESC[sysVar.arrayIndex];
    else
      FK0EM210.XTM-MAT-THCK-DESC = "** NOT FOUND **";
    end
  end
  ;
  if (FK0EW00.XCLCD == " ") /* if color code not entered*/
    FK0EM210.XCLDESC = " ";
  else
    if (FK0EW00.XCLCD in XCLTBL.XCLCD /* If color in table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      FK0EM210.XCLDESC = XCLTBL.XCLDESC[sysVar.arrayIndex];
    else
      FK0EM210.XCLDESC = "** NOT FOUND **";
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* If no message*/
    set FK0EM210.FK-VEND-CD cursor; /* Set cursor at vendor code*/
  end
  ;
  ;
end // end FK0E-2220

// Check attention identifier
Function FK0E-2300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0EW01.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-NBR[1] = FK0EW01.FK-MAT-NBR; /* Mat nbr*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0EW01.XMG-COLR-GRP-CD; /* Colr grp*/
    FKWREC.XCLCD[1] = FK0EW01.XCLCD; /* Color*/
    ;
    COMMAREA.CATOAP = "FK0E"; /* to applicaiton*/
    COMMAREA.CAITEM = "A"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0EM210.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0EM210.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FK0EW01.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-NBR[1] = FK0EW01.FK-MAT-NBR; /* Mat nbr*/
      FKWREC.XMG-COLR-GRP-CD[1] = FK0EW01.XMG-COLR-GRP-CD; /* Clr grp*/
      FKWREC.XCLCD[1] = FK0EW01.XCLCD; /* Color*/
      ;
      COMMAREA.CATOAP = FK0EM210.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0EM210.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0EM210.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf14 /* FK0G requested*/
   || converseVar.eventKey is pf15 /* FK0H requested*/
   || converseVar.eventKey is pf16 /* FK0M requested*/
   || converseVar.eventKey is pf19) /* FK0Q requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0EM210"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0F"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0G"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FK0M"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf19) /* PF19 was pressed*/
      COMMAREA.CATOAP = "FK0Q"; /* TO application*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0EW01.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-NBR[1] = FK0EW01.FK-MAT-NBR; /* Mat nbr*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0EW01.XMG-COLR-GRP-CD; /* Colr grp*/
    FKWREC.XCLCD[1] = FK0EW01.XCLCD; /* Color*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6)  /* NXTMTL requested*/
    ;
    FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0E-2300

// Reset Highlighted fields
Function FK0E-2400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0EM210.FK-VEND-CD initialAttributes; /* Vendor code*/
  set FK0EM210.FK-MAT-NBR initialAttributes; /* Material number*/
  set FK0EM210.XMG-COLR-GRP-CD initialAttributes; /* Color Group*/
  set FK0EM210.XCLCD initialAttributes; /* Color code*/
  ;
  set FK0EM210.FK0EM-COPY-FK-MAT-NBR initialAttributes; /* Copy material*/
  set FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD initialAttributes; /* Copy color group*/
  set FK0EM210.FK0EM-COPY-XCLCD initialAttributes; /* Copy color code*/
  ;
  set FK0EM210.FK-VEND-COLR-DESC initialAttributes; /* Vendor color desc*/
  set FK0EM210.FK-MAT-COLR-HOT-FL initialAttributes; /* Color hot flag*/
  ;
  set FK0EM210.FK-MAT-FRGN-PRC initialAttributes; /* Foreign price*/
  set FK0EM210.FK-MAT-DOM-PRC initialAttributes; /* Domestic price*/
  ;
  set FK0EM210.FK-VEND-COLR-DESC initialAttributes; /* Vendor color desc*/
  set FK0EM210.FK-COMNT initialAttributes; /* Comment*/
  set FK0EM210.FK-MAT-CTRL-SHT initialAttributes; /* Mat ctrl sht*/
  set FK0EM210.FK-MAT-TRAK-FL initialAttributes; /* Material track flag*/
  set FK0EM210.FK-MAT-HOT-FL initialAttributes; /* Material hot flag*/
  set FK0EM210.XMCCD initialAttributes; /* Nil group code*/
  set FK0EM210.XMU-MAT-UOM-CD initialAttributes; /* Unit of measure*/
  set FK0EM210.FK-MKT-MAT-DESC initialAttributes; /* Mkt material description*/
  set FK0EM210.FK-VEND-MAT-DESC initialAttributes; /* Vend material description*/
  set FK0EM210.XTM-MAT-THCK-CD initialAttributes; /* Thickness*/
  set FK0EM210.XTM-MAT-THCK-DESC initialAttributes; /* Thickness desc*/
  set FK0EM210.FK-DEPT-MAT-DESC initialAttributes; /* Mtrl desc*/
  ;
  set FK0EM210.CATOAP initialAttributes; /* To application*/
  set FK0EM210.CAITEM initialAttributes; /* Application data*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM210.XTM-MAT-THCK-CD == "?" /* XTM list requested*/
   || FK0EM210.XMU-MAT-UOM-CD == "?"  /* XUM list requested*/
   || FK0EM210.XMCCD == "?"           /* XMC list requested*/
   || FK0EM210.XMG-COLR-GRP-CD == "?" /* XMG list requested*/
   || FK0EM210.XCLCD == "?")          /* XCL list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      FKWREC.XXX-MOD-ID = "2400"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xcl codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM210.XCLCD == "?") /* Xcl list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  COLOR"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCL01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM210.XCLCD = FK0EW01.XCLCD; /* Restore prior code*/
    else
      FK0EM210.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FK0EM210.XCLCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xmg codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM210.XMG-COLR-GRP-CD == "?") /* XMG list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  COLOR GROUP"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXMG01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM210.XMG-COLR-GRP-CD = FK0EW01.XMG-COLR-GRP-CD; /* Restore prior code*/
    else
      FK0EM210.XMG-COLR-GRP-CD = XMGTBL.XMG-COLR-GRP-CD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FK0EM210.XMG-COLR-GRP-CD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xmc codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM210.XMCCD == "?") /* XMC list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  NIL GROUP"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXMC01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM210.XMCCD = FK0EW01.XMCCD; /* Restore prior code*/
    else
      FK0EM210.XMCCD = XMCTBL.XMCCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FK0EM210.XMCCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xum codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM210.XMU-MAT-UOM-CD == "?") /* XUM list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  UNIT OF MEASURE"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXMU01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM210.XMU-MAT-UOM-CD = FK0EW01.XMU-MAT-UOM-CD; /* Restore*/
    else
      FK0EM210.XMU-MAT-UOM-CD = XMUTBL.XMU-MAT-UOM-CD[XX0XWPIX]; /**/
    end
    ;
    set FK0EM210.XMU-MAT-UOM-CD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xtm codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM210.XTM-MAT-THCK-CD == "?") /* XTM list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  THICKNESS"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXTM01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM210.XTM-MAT-THCK-CD = FK0EW01.XTM-MAT-THCK-CD; /* Restore prior code*/
    else
      FK0EM210.XTM-MAT-THCK-CD = XTMTBL.XTM-MAT-THCK-CD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FK0EM210.XTM-MAT-THCK-CD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "2400"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FK0E-2400

// Verify entered fields
Function FK0E-2500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM210.CAITEM > " ") /* Application data was entered*/
    ;
    set FK0EM210.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If NXTMTL (pf6) entered, verify next material exists in*/
   /* fkwrec.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Next material requested*/
    ;
    FK0EW00.FK0EW-IDX = FK0EW00.FK0EW-NXTMTL-IDX + 1;
    ;
    if (FK0EW00.FK0EW-IDX > 15 /* If on last fkwrec record*/
     || FKWREC.FK-VEND-CD[FK0EW-IDX] == " ") /* or no more data*/
      ;
      set FK0EM210.FK-VEND-CD cursor; /* Reset cursor*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(33); /* No more materials to display*/
      exit stack;
    end
    ;
    return; /* Exit edit section -- we want the next*/
                         /* product regardless of any other changes*/
    ;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Check to see if any copy data has been entered.  if it has*/
   /* verify the copy data.*/
   /* ---------------------------------------------------------------*/
  ;
  ;
  if (FK0EM210.FK0EM-COPY-FK-MAT-NBR != " "      /* Material nbr entered*/
   || FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD != " " /* or colr grp entered*/
   || FK0EM210.FK0EM-COPY-XCLCD != " ")          /* or color entered*/
    ;
    FK0E-2510(); /* Edit copy key data*/
    ;
    FK0E-2520(); /* Edit key data*/
  else
    ;
    /* ---------------------------------------------------------------*/
    /* Otherwise, if key changed, verify it.*/
    /* ---------------------------------------------------------------*/
    ;
    ;
    if (FK0EM210.FK-VEND-CD != FK0EW00.FK-VEND-CD           /* Vendor changed*/
     || FK0EM210.FK-MAT-NBR != FK0EW00.FK-MAT-NBR           /* Material changed*/
     || FK0EM210.XMG-COLR-GRP-CD != FK0EW00.XMG-COLR-GRP-CD /* Clr grp*/
     || FK0EM210.XCLCD != FK0EW00.XCLCD                     /* Color changed*/
     || FK0EM210.FK-VEND-CD == " "                          /* Vendor blank*/
     || FK0EM210.FK-MAT-NBR == " ")                         /* Material blank*/
      ;
      FK0E-2520(); /* Edit key data*/
    else
      ;
      /* ---------------------------------------------------------------*/
      /* Otherwise, verify non-key data.*/
      /* ---------------------------------------------------------------*/
      ;
      FK0E-2530(); /* Edit non-key data*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify data can be added.  If all data already exists,*/
   /* set error message.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "Y"              /* If material found*/
   && FK0EW00.FK0EW-VGROUP01-FOUND-SW == "Y"              /* and color group found*/
   && FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "Y"              /* and color found*/
   && FK0EW00.FK0EW-VMATRL01-COPIED-SW == "N"             /* and not copied*/
   && FK0EW00.FK0EW-VGROUP01-COPIED-SW == "N"             /* and not copied*/
   && FK0EW00.FK0EW-VMCOLR01-COPIED-SW == "N"             /* and not copied*/
   && FK0EM210.FK-VEND-CD == FK0EW00.FK-VEND-CD           /* and not changed*/
   && FK0EM210.FK-MAT-NBR == FK0EW00.FK-MAT-NBR           /* and not changed*/
   && FK0EM210.XMG-COLR-GRP-CD == FK0EW00.XMG-COLR-GRP-CD /* not changed*/
   && FK0EM210.XCLCD == FK0EW00.XCLCD)                    /* and not changed*/
    ;
    converseLib.validationFailed(40); /* Cannot add-already exists*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FK0E-2500

// Verify copy key fields
Function FK0E-2510()
   /* ---------------------------------------------------------------*/
   /* Verify the 'copy from' data:*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM210.FK0EM-COPY-XCLCD == " ")
    ;
    set FK0EM210.FK0EM-COPY-XCLCD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    converseLib.validationFailed(32); /* Material color missing or invalid*/
  else
    ;
    if (FK0EM210.FK0EM-COPY-XCLCD in XCLTBL.XCLCD /* If in table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM210.FK0EM-COPY-XCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
      converseLib.validationFailed(32); /* Material color missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the color group data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD == " ") /**/
    ;
    set FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    converseLib.validationFailed(31); /* Color group missing or invalid*/
  else
    ;
    if (FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD in XMGTBL.XMG-COLR-GRP-CD
     && XMGTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
      converseLib.validationFailed(31); /* Color group missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the material data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM210.FK0EM-COPY-FK-MAT-NBR == " ") /* If material missing*/
    ;
    set FK0EM210.FK0EM-COPY-FK-MAT-NBR cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    converseLib.validationFailed(26); /* Material code invalid or missing*/
  end
  ;
  ;
end // end FK0E-2510

// Verify key fields
Function FK0E-2520()
   /* ---------------------------------------------------------------*/
   /* Verify the color data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM210.XCLCD == " ") /* If color missing*/
    ;
    set FK0EM210.XCLCD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
    converseLib.validationFailed(32); /* Material color missing or invalid*/
  else
    ;
    if (FK0EM210.XCLCD in XCLTBL.XCLCD /* If in table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM210.XCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
      converseLib.validationFailed(32); /* Material color missing or invalid*/
    end
  end
  ;
  ;
   /* Verify color code does not have a different color group code*/
   /* associated with it somewhere in the color table.*/
  ;
  ;
  FK0EW00.VMCOLR01-GROUP = VMCOLR01.VMCOLR01-GROUP; /* Save record*/
  ;
  FK0E-2524(); /* Declare distinct cursor for DCMPNT.VMCOLR01*/
  FK0E-2525(); /* Fetch distinct cursor for DCMPNT.VMCOLR01*/
  FK0E-2526(); /* Close distinct cursor for DCMPNT.VMCOLR01*/
  ;
  VMCOLR01.VMCOLR01-GROUP = FK0EW00.VMCOLR01-GROUP; /* Reset*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the color group data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM210.XMG-COLR-GRP-CD == " ") /* If color group missing*/
    ;
    set FK0EM210.XMG-COLR-GRP-CD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
    converseLib.validationFailed(31); /* Color group missing or invalid*/
  else
                                     /* (blank o.k)*/
    if (FK0EM210.XMG-COLR-GRP-CD in XMGTBL.XMG-COLR-GRP-CD /* If in table*/
     && XMGTBL.XXXSTAT[sysVar.arrayIndex] == "A")          /* and active status*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM210.XMG-COLR-GRP-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
      converseLib.validationFailed(31); /* Color group missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the material data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM210.FK-MAT-NBR == " ") /* If material missing*/
    ;
    set FK0EM210.FK-MAT-NBR cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
    converseLib.validationFailed(26); /* Material code invalid or missing*/
  else
    ;
    FK0EW00.VMATRL01-GROUP = VMATRL01.VMATRL01-GROUP; /* Save group*/
    ;
    FK0E-2521(); /* Declare mtrl table cursor*/
    ;
    FK0EW00.FK0EW-END-CURSOR-SW = "N"; /* Not end of cursor*/
    FK0EW00.FK0EW-MTRL-REC-SW = "N"; /* No mtrl records found*/
    ;
    while (FK0EW00.FK0EW-END-CURSOR-SW == "N") /* Until end of cursor*/
      ;
      FK0E-2522(); /* Fetch next record*/
      ;
    end
    ;
    FK0E-2523(); /* Close cursor*/
    ;
    if (FK0EW00.FK0EW-MTRL-REC-SW == "Y") /* If another material rec found*/
      ;
      set FK0EM210.FK-MAT-NBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
      converseLib.validationFailed(41); /* Material already exists w/ other vendor*/
    end
    ;
    VMATRL01.VMATRL01-GROUP = FK0EW00.VMATRL01-GROUP; /* Reset group*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the vendor data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM210.FK-VEND-CD == " ") /* If vendor code missing*/
    ;
    set FK0EM210.FK-VEND-CD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
    converseLib.validationFailed(21); /* Vendor code invalid or missing*/
  end
  ;
  ;
end // end FK0E-2520

// Declare cursor DCMPNT.VMATRL01
Function FK0E-2521()
   /* ------------------------------------------------------------*/
   /* Declare and open cursor for table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FK0EM210.FK-MAT-NBR; /* material nbr*/
  ;
  ;
  try
    call "IO6190" ("S2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2521 DECLARE CSR DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  VMATRL01.VMATRL01-GROUP = FK0EW00.VMATRL01-GROUP; /* Reset*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2521

// Fetch cursor DCMPNT.VMATRL01
Function FK0E-2522()
   /* ------------------------------------------------------------*/
   /* Fetch the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6190" ("N2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      ;
      FK0EW00.FK0EW-END-CURSOR-SW = "Y"; /* Set switch*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return*/
      ;
      if (VMATRL01.FK-VEND-CD != FK0EM210.FK-VEND-CD) /* If different vndr*/
        ;
        FK0EW00.FK0EW-MTRL-REC-SW = "Y"; /* Set switch*/
        FK0EW00.FK0EW-END-CURSOR-SW = "Y"; /* Set switch*/
        return;
      end
      ;
      return;
    end
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2522"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2522 FETCH CSR DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  VMATRL01.VMATRL01-GROUP = FK0EW00.VMATRL01-GROUP; /* Reset*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2522

// Close cursor DCMPNT.VMATRL01
Function FK0E-2523()
   /* ------------------------------------------------------------*/
   /* Close cursor for the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6190" ("C2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2523"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2523 CLOSE CSR DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  VMATRL01.VMATRL01-GROUP = FK0EW00.VMATRL01-GROUP; /* Reset*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2523

// Declare distinct DCMPNT.VMCOLR
Function FK0E-2524()
   /* ------------------------------------------------------------*/
   /* Declare and open cursor for table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.XCLCD = FK0EM210.XCLCD; /* Color code*/
  ;
  ;
  try
    call "IO6210" ("S3", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2524"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2524 DECLARE DISTINCT DCMPNT.VMCOLR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  VMCOLR01.VMCOLR01-GROUP = FK0EW00.VMCOLR01-GROUP; /* Reset*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2524

// Fetch distinct DCMPNT.VMCOLR01
Function FK0E-2525()
   /* ------------------------------------------------------------*/
   /* Fetch table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6210" ("N3", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (VMCOLR01.XMG-COLR-GRP-CD != FK0EM210.XMG-COLR-GRP-CD)
        set FK0EM210.XCLCD bold; /* Highlight*/
        set FK0EM210.XMG-COLR-GRP-CD cursor, bold; /* Highlight*/
        converseLib.validationFailed(58); /* Color exists with another color group*/
      end
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2525"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2525 FETCH DISTINCT DCMPNT.VMCOLR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  VMCOLR01.VMCOLR01-GROUP = FK0EW00.VMCOLR01-GROUP; /* Reset*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2525

// Close distinct DCMPNT.VMCOLR01
Function FK0E-2526()
   /* ------------------------------------------------------------*/
   /* Close table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6210" ("C3", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2526"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2526 CLOSE DISTINCT DCMPNT.VMCOLR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  VMCOLR01.VMCOLR01-GROUP = FK0EW00.VMCOLR01-GROUP; /* Reset*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2526

// Verify non-key fields
Function FK0E-2530()
   /* ---------------------------------------------------------------*/
   /* Verify the material data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM210.XCLCD != " ") /* If color code was entered*/
    ;
    if (FK0EM210.FK-MAT-COLR-HOT-FL == "Y" /* If flag = y*/
     || FK0EM210.FK-MAT-COLR-HOT-FL == "N") /* or flag = n*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM210.FK-MAT-COLR-HOT-FL cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2530"; /* Module identification*/
      converseLib.validationFailed(34); /* Must be "y" or "n"*/
    end
  end
  ;
  ;
  if (FK0EM210.FK-MAT-NBR != " ") /* If material was entered*/
    ;
    if (FK0EM210.FK-MAT-TRAK-FL == "Y" /* If flag = y*/
     || FK0EM210.FK-MAT-TRAK-FL == "N") /* or flag = n*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM210.FK-MAT-TRAK-FL cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2530"; /* Module identification*/
      converseLib.validationFailed(34); /* Must be "y" or "n"*/
    end
    ;
    ;
    if (FK0EM210.FK-MAT-HOT-FL == "Y" /* If flag = y*/
     || FK0EM210.FK-MAT-HOT-FL == "N") /* or flag = n*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM210.FK-MAT-HOT-FL cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2530"; /* Module identification*/
      converseLib.validationFailed(34); /* Must be "y" or "n"*/
    end
    ;
    ;
    if (FK0EM210.XMCCD in XMCTBL.XMCCD /* If in table*/
     && XMCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM210.XMCCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2530"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
    ;
    ;
    if (FK0EM210.XMU-MAT-UOM-CD in XMUTBL.XMU-MAT-UOM-CD /* If in table*/
     && XMUTBL.XXXSTAT[sysVar.arrayIndex] == "A")        /* and active status*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM210.XMU-MAT-UOM-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2530"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
    ;
    ;
    if (FK0EM210.XTM-MAT-THCK-CD in XTMTBL.XTM-MAT-THCK-CD /* If in table*/
     && XTMTBL.XXXSTAT[sysVar.arrayIndex] == "A")          /* and active status*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM210.XTM-MAT-THCK-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2530"; /* Module identification*/
      converseLib.validationFailed(28); /* Thickness missing or invalid*/
    end
  end
  ;
  ;
end // end FK0E-2530

// Process Request
Function FK0E-2600()
   /* --------------------------------------------------------------------*/
   /* If NXTmtl (pf6) requested, obtain the next product to display.*/
   /* --------------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Next material requested*/
    ;
    FK0EW00.FK0EW-NXTMTL-IDX = FK0EW00.FK0EW-NXTMTL-IDX + 1; /* Increment*/
    ;
    FK0EM210.FK-VEND-CD = FKWREC.FK-VEND-CD[FK0EW-NXTMTL-IDX]; /* Vendor*/
    FK0EM210.FK-MAT-NBR = FKWREC.FK-MAT-NBR[FK0EW-NXTMTL-IDX]; /* Material*/
    FK0EM210.XMG-COLR-GRP-CD = FKWREC.XMG-COLR-GRP-CD[FK0EW-NXTMTL-IDX]; /* Color group*/
    FK0EM210.XCLCD = FKWREC.XCLCD[FK0EW-NXTMTL-IDX]; /* Color*/
    ;
    FK0EW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* exit to display the map*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Check to see if copy key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM210.FK0EM-COPY-FK-MAT-NBR == " "
   && FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD == " "
   && FK0EM210.FK0EM-COPY-XCLCD == " ")
    ;
    FK0EW00.FK0EW-COPY-DATA-SW = "N"; /* Copy data*/
  else
    if (FK0EM210.FK0EM-COPY-FK-MAT-NBR != FK0EW02.FK0EM-COPY-FK-MAT-NBR
     || FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD
     != FK0EW02.FK0EM-COPY-XMG-COLR-GRP-CD
     || FK0EM210.FK0EM-COPY-XCLCD != FK0EW02.FK0EM-COPY-XCLCD)
      ;
      FK0EW00.FK0EW-COPY-DATA-SW = "Y"; /* Copy data*/
      FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Request data*/
      return; /* Exit to display map*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM210.FK-VEND-CD != FK0EW00.FK-VEND-CD           /* If vendor changed*/
   || FK0EM210.FK-MAT-NBR != FK0EW00.FK-MAT-NBR           /* or mtrl*/
   || FK0EM210.XMG-COLR-GRP-CD != FK0EW00.XMG-COLR-GRP-CD /* or clr grp*/
   || FK0EM210.XCLCD != FK0EW00.XCLCD)                    /* or color*/
    ;
    FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* For each database table, check to see if data needs to be added.*/
   /* If it does, add the data to the tables.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0EW00.FK0EW-UPDT-PERFORMED-SW = "N"; /* Update performed switch*/
  ;
  XX0XS01(); /* Get date and time*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If no data found for dcmpnt.vmcolr01, add record to table.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "N" /* If color data not loaded*/
   || FK0EW00.FK0EW-VMCOLR01-COPIED-SW == "Y") /* or color copied*/
    ;
    FK0E-2650(); /* Check for duplicate color record*/
    ;
    FK0E-2610(); /* Insert to dcmpnt.vmcolr01*/
  end
  ;
   /* --------------------------------------------------------------------*/
   /* If no data found for dcmpnt.vgroup01, add record to table.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "N" /* If clr grp data not loaded*/
   || FK0EW00.FK0EW-VGROUP01-COPIED-SW == "Y") /* or color group copied*/
    ;
    FK0E-2660(); /* Check for duplicate color group record*/
    ;
    FK0E-2620(); /* Insert to dcmpnt.vgroup01*/
  end
  ;
   /* --------------------------------------------------------------------*/
   /* If no data found for dcmpnt.vmatrl01, add record to table.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "N" /* If material data not loaded*/
   || FK0EW00.FK0EW-VMATRL01-COPIED-SW == "Y") /* or material copied*/
    ;
    FK0E-2670(); /* Check for duplicate material record*/
    ;
    FK0E-2630(); /* Insert to dcmpnt.vmatrl01*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If successful updates occurred, update fk-nike-mgr-id in the*/
   /* dcmpnt.vvndr001 database.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-UPDT-PERFORMED-SW == "Y") /* Update performed switch*/
    ;
    FK0E-2640(); /* Update dcmpnt.vvndr001*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If updates occurred, update display storage and display message for*/
   /* successful update.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-UPDT-PERFORMED-SW == "Y") /* Update performed switch*/
    ;
    FK0E-2150(); /* Update display storage*/
    ;
    FK0EW00.FK0EW-COPY-DATA-SW = "N"; /* Copy data switch*/
    FK0EM210.FK0EM-COPY-FK-MAT-NBR = " "; /* Init copy mat nbr*/
    FK0EM210.FK0EM-COPY-XMG-COLR-GRP-CD = " "; /* Init copy clr grp*/
    FK0EM210.FK0EM-COPY-XCLCD = " "; /* Init copy color*/
    ;
    FK0EW00.FK0EW-FMAT-MAP-SW = "Y"; /* Format the data*/
    FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Request data*/
    FKWREC.XXX-MOD-ID = "2600"; /* Module identification*/
    FKWREC.XXXMSGNO = 1; /* Update completed*/
    ;
  end
  ;
end // end FK0E-2600

// Add DCMPNT.VMCOLR01
Function FK0E-2610()
   /* ------------------------------------------------------------*/
   /* Add the requested row to the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty; /* Initialize record*/
  ;
  VMCOLR01.FK-MAT-NBR = FK0EM210.FK-MAT-NBR; /* Material*/
  VMCOLR01.XMG-COLR-GRP-CD = FK0EM210.XMG-COLR-GRP-CD; /* Color grp*/
  VMCOLR01.XCLCD = FK0EM210.XCLCD; /* Color*/
  ;
  if (FK0EM210.FK-VEND-COLR-DESC == " ") /* If color desc blank*/
    VMCOLR01.FK-VEND-COLR-DESC = FK0EM210.XCLDESC; /* Default*/
  else
    VMCOLR01.FK-VEND-COLR-DESC = FK0EM210.FK-VEND-COLR-DESC;
  end
  ;
  VMCOLR01.FK-MAT-COLR-HOT-FL = FK0EM210.FK-MAT-COLR-HOT-FL;
  ;
  VMCOLR01.ZZZSDT = XX0XW01.XX0XWDAT; /* Setup date*/
  VMCOLR01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VMCOLR01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VMCOLR01.ZZZCHGCT = 0; /* Change count*/
  ;
  try
    call "IO6210" ("A ", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback changes*/
  ;
  FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2610 ADD DCMPNT.VMCOLR01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2610

// Add DCMPNT.VGROUP01
Function FK0E-2620()
   /* ------------------------------------------------------------*/
   /* Add the requested row to the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VGROUP01 empty; /* Init record*/
  ;
  VGROUP01.FK-MAT-NBR = FK0EM210.FK-MAT-NBR; /* Material*/
  VGROUP01.XMG-COLR-GRP-CD = FK0EM210.XMG-COLR-GRP-CD; /* Colr grp*/
  VGROUP01.FK-MAT-FRGN-PRC = FK0EM210.FK-MAT-FRGN-PRC; /* Frgn price*/
  VGROUP01.FK-MAT-DOM-PRC = FK0EM210.FK-MAT-DOM-PRC; /* Dom price*/
  VGROUP01.ZZZSDT = XX0XW01.XX0XWDAT; /* Setup date*/
  VGROUP01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VGROUP01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VGROUP01.ZZZCHGCT = 0; /* Change count*/
  ;
  try
    call "IO6200" ("A ", SQLCA, VGROUP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback changes*/
  ;
  FKWREC.XXX-MOD-ID = "2620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2620 ADD DCMPNT.VGROUP01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VGROUP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VGROUP01.VGROUP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2620

// Add DCMPNT.VMATRL01
Function FK0E-2630()
   /* ------------------------------------------------------------*/
   /* Add the requested row to the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty; /* Init record*/
  ;
  VMATRL01.FK-COMNT = FK0EM210.FK-COMNT;
  VMATRL01.FK-MAT-CTRL-SHT = FK0EM210.FK-MAT-CTRL-SHT;
  VMATRL01.FK-MAT-TRAK-FL = FK0EM210.FK-MAT-TRAK-FL;
  VMATRL01.FK-MAT-HOT-FL = FK0EM210.FK-MAT-HOT-FL;
  VMATRL01.XMCCD = FK0EM210.XMCCD;
  VMATRL01.XMU-MAT-UOM-CD = FK0EM210.XMU-MAT-UOM-CD;
  VMATRL01.XTM-MAT-THCK-CD = FK0EM210.XTM-MAT-THCK-CD;
  VMATRL01.FK-DEPT-MAT-DESC = FK0EM210.FK-DEPT-MAT-DESC;
  ;
  if (FK0EM210.FK-MKT-MAT-DESC == " ") /* Mkt desc not entered*/
    VMATRL01.FK-MKT-MAT-DESC = FK0EM210.FK-DEPT-MAT-DESC;
  else
    VMATRL01.FK-MKT-MAT-DESC = FK0EM210.FK-MKT-MAT-DESC;
  end
  ;
  if (FK0EM210.FK-VEND-MAT-DESC == " ") /* Vend desc not entered*/
    VMATRL01.FK-VEND-MAT-DESC = FK0EM210.FK-DEPT-MAT-DESC;
  else
    VMATRL01.FK-VEND-MAT-DESC = FK0EM210.FK-VEND-MAT-DESC;
  end
  ;
  VMATRL01.FK-MAT-NBR = FK0EW00.FK-MAT-NBR;
  VMATRL01.FK-VEND-CD = FK0EW00.FK-VEND-CD;
  ;
  VMATRL01.ZZZSDT = XX0XW01.XX0XWDAT; /* Setup date*/
  VMATRL01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VMATRL01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VMATRL01.ZZZCHGCT = 0; /* Change count*/
  ;
  try
    call "IO6190" ("A ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback any changes*/
  ;
  FKWREC.XXX-MOD-ID = "2630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2630 ADD DCMPNT.VMATRL01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2630

// Update DCMPNT.VVNDR001
Function FK0E-2640()
   /* ------------------------------------------------------------*/
   /* Update the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  VVNDR001.FK-NIKE-MGR-ID = COMMAREA.CAUSERID; /* Last person to updt*/
  ;
  VVNDR001.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VVNDR001.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  try
    call "IO6180" ("U ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "2640"; /* Module identification*/
      FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      ;
      exit stack; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback changes*/
  ;
  FKWREC.XXX-MOD-ID = "2640"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2640 UPDATE DCMPNT.VVNDR001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2640

// Check duplicate VMCOLR01
Function FK0E-2650()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  FK0EW00.VMCOLR01-GROUP = VMCOLR01.VMCOLR01-GROUP; /* Save record*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.FK-MAT-NBR = FK0EM210.FK-MAT-NBR; /* material nbr*/
  VMCOLR01.XMG-COLR-GRP-CD = FK0EM210.XMG-COLR-GRP-CD; /* colr-gp*/
  VMCOLR01.XCLCD = FK0EM210.XCLCD; /* colr-cd*/
  ;
  try
    call "IO6210" ("S ", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      VMCOLR01.VMCOLR01-GROUP = FK0EW00.VMCOLR01-GROUP; /* Reset*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      VMCOLR01.VMCOLR01-GROUP = FK0EW00.VMCOLR01-GROUP; /* Reset*/
      set FK0EM210.XCLCD cursor, bold; /* Highlight*/
      converseLib.validationFailed(16); /* Key already exists*/
      FKWREC.XXX-MOD-ID = "2650"; /* Module identification*/
      exit stack;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2650"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2650 CHECK DUPLICATE VMCOLR01   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  VMCOLR01.VMCOLR01-GROUP = FK0EW00.VMCOLR01-GROUP; /* Reset*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2650

// Check duplicate VGROUP01
Function FK0E-2660()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  FK0EW00.VGROUP01-GROUP = VGROUP01.VGROUP01-GROUP; /* Save record*/
  ;
  set VGROUP01 empty;
  ;
  VGROUP01.FK-MAT-NBR = FK0EM210.FK-MAT-NBR; /* Material nbr*/
  VGROUP01.XMG-COLR-GRP-CD = FK0EM210.XMG-COLR-GRP-CD; /* Color group*/
  ;
  try
    call "IO6200" ("S ", SQLCA, VGROUP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      VGROUP01.VGROUP01-GROUP = FK0EW00.VGROUP01-GROUP; /* Reset*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback changes*/
      VGROUP01.VGROUP01-GROUP = FK0EW00.VGROUP01-GROUP; /* Reset*/
      set FK0EM210.XMG-COLR-GRP-CD cursor, bold; /* Highlight*/
      converseLib.validationFailed(16); /* Row already exists*/
      FKWREC.XXX-MOD-ID = "2660"; /* Module identification*/
      exit stack;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2660"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2660 CHECK DUPLICATE VGROUP01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VGROUP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VGROUP01.VGROUP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  VGROUP01.VGROUP01-GROUP = FK0EW00.VGROUP01-GROUP; /* Reset*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2660

// Check duplicate VMATRL01
Function FK0E-2670()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  FK0EW00.VMATRL01-GROUP = VMATRL01.VMATRL01-GROUP; /* Save record*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-VEND-CD = FK0EM210.FK-VEND-CD; /* Vendor*/
  VMATRL01.FK-MAT-NBR = FK0EM210.FK-MAT-NBR; /* Material nbr*/
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      VMATRL01.VMATRL01-GROUP = FK0EW00.VMATRL01-GROUP; /* Reset*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback changes*/
      VMATRL01.VMATRL01-GROUP = FK0EW00.VMATRL01-GROUP; /* Reset*/
      set FK0EM210.FK-MAT-NBR cursor, bold; /* Highlight*/
      converseLib.validationFailed(16); /* Row already exists*/
      FKWREC.XXX-MOD-ID = "2670"; /* Module identification*/
      exit stack;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2670"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2670 CHECK DUPLICATE VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  VMATRL01.VMATRL01-GROUP = FK0EW00.VMATRL01-GROUP; /* Reset*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-2670

// List the rows in the table
Function FK0E-3000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0E-3100(); /* Obtain the data to display*/
  ;
  FK0E-3200(); /* Format and display the map*/
  ;
  FK0E-3300(); /* Check attention identifier*/
  ;
  FK0E-3400(); /* Reset fields to normal intensity*/
  ;
  FK0E-3500(); /* Verify the entered data*/
  ;
  FK0E-3600(); /* Process valid input request*/
  ;
  ;
end // end FK0E-3000

// Obtain data to display
Function FK0E-3100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0EW01 empty; /* Initialize display storage*/
  ;
  FK0EW00.FK-VEND-CD = FK0EM310.FK-VEND-CD; /* Vendor*/
  FK0EW00.FK-MAT-NBR = FK0EM310.FK-MAT-NBR; /* Material*/
  FK0EW00.XMG-COLR-GRP-CD = FK0EM310.XMG-COLR-GRP-CD; /* Color group*/
  FK0EW00.XCLCD = FK0EM310.XCLCD; /* Color*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0EW00.FK0EW-VGROUP01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0EW00.FK0EW-VMATRL01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  ;
  ;
  if (FK0EM310.XCLCD != "  ") /* If color code on map*/
    FK0E-3110(); /* Obtain the color data*/
  end /* (DCMPNT.VMCOLR01)*/
                                  /*  */
                                  /*  */
  if (FK0EM310.XMG-COLR-GRP-CD != "  ") /* If color group on map*/
    FK0E-3120(); /* Obtain the color group data*/
  end /* (DCMPNT.VGROUP01)*/
                                  /*  */
                                  /*  */
  FK0E-3130(); /* Obtain the material data*/
                                  /* (DCMPNT.VMATRL01)*/
                                  /*  */
  FK0E-3140(); /* Obtain the vender data*/
                                  /* (DCMPNT.VVNDR001)*/
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data obtained in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0E-3150(); /* Save data*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0EW00.FK0EW-REQUEST-DATA-SW = "N";
  FK0EW00.FK0EW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FK0E-3100

// Get color data
Function FK0E-3110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.FK-MAT-NBR = FK0EM310.FK-MAT-NBR; /* Material nbr*/
  VMCOLR01.XMG-COLR-GRP-CD = FK0EM310.XMG-COLR-GRP-CD; /* Color group*/
  VMCOLR01.XCLCD = FK0EM310.XCLCD; /* Color*/
  ;
  try
    call "IO6210" ("S ", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      FKWREC.XXXMSGNO = 18; /* Not found*/
      FKWREC.XXX-MOD-ID = "3110"; /* Module identification*/
      set FK0EM310.XCLCD cursor, bold; /* Highlight*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "Y"; /* Tbl found switch*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3110 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-3110

// Get color group data
Function FK0E-3120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VGROUP01 empty;
  ;
  VGROUP01.FK-MAT-NBR = FK0EM310.FK-MAT-NBR; /* Material nbr*/
  VGROUP01.XMG-COLR-GRP-CD = FK0EM310.XMG-COLR-GRP-CD; /* Color group*/
  ;
  try
    call "IO6200" ("S ", SQLCA, VGROUP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      FKWREC.XXXMSGNO = 18; /* Not found*/
      FKWREC.XXX-MOD-ID = "3120"; /* Module identification*/
      set FK0EM310.XMG-COLR-GRP-CD cursor, bold; /* Highlight*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VGROUP01-FOUND-SW = "Y"; /* Tbl found switch*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3120 GET COLOR GROUP DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VGROUP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VGROUP01.VGROUP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-3120

// Get material data
Function FK0E-3130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-VEND-CD = FK0EM310.FK-VEND-CD; /* Vendor*/
  VMATRL01.FK-MAT-NBR = FK0EM310.FK-MAT-NBR; /* Material nbr*/
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      FKWREC.XXXMSGNO = 18; /* Not found*/
      FKWREC.XXX-MOD-ID = "3130"; /* Module identification*/
      set FK0EM310.FK-MAT-NBR cursor, bold; /* Highlight*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VMATRL01-FOUND-SW = "Y"; /* Tbl found switch*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3130 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-3130

// Get vendor data
Function FK0E-3140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0EM310.FK-VEND-CD; /* Vendor*/
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      set FK0EM310.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3140"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* No data found*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VVNDR001-FOUND-SW = "Y"; /* Tbl found switch*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3140 GET VENDOR DATA     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-3140

// Save data in display storage
Function FK0E-3150()
   /* ------------------------------------------------------------------*/
   /* For each database record found, save data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  set FK0EW01 empty; /* Initialize display storage*/
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save color data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "Y") /* Color data found*/
    ;
    FK0EW01.XCLCD = VMCOLR01.XCLCD;
    FK0EW01.FK-VEND-COLR-DESC = VMCOLR01.FK-VEND-COLR-DESC;
    FK0EW01.FK-MAT-COLR-HOT-FL = VMCOLR01.FK-MAT-COLR-HOT-FL;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save color group data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "Y") /* Color group data found*/
    ;
    FK0EW01.XMG-COLR-GRP-CD = VGROUP01.XMG-COLR-GRP-CD;
    FK0EW01.FK-MAT-DOM-PRC = VGROUP01.FK-MAT-DOM-PRC;
    FK0EW01.FK-MAT-FRGN-PRC = VGROUP01.FK-MAT-FRGN-PRC;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save material data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "Y") /* Material data found*/
    ;
    FK0EW01.FK-MAT-NBR = VMATRL01.FK-MAT-NBR;
    FK0EW01.FK-DEPT-MAT-DESC = VMATRL01.FK-DEPT-MAT-DESC;
    FK0EW01.XTM-MAT-THCK-CD = VMATRL01.XTM-MAT-THCK-CD;
    FK0EW01.FK-VEND-MAT-DESC = VMATRL01.FK-VEND-MAT-DESC;
    FK0EW01.FK-MKT-MAT-DESC = VMATRL01.FK-MKT-MAT-DESC;
    FK0EW01.XMU-MAT-UOM-CD = VMATRL01.XMU-MAT-UOM-CD;
    FK0EW01.FK-MAT-HOT-FL = VMATRL01.FK-MAT-HOT-FL;
    FK0EW01.FK-MAT-CTRL-SHT = VMATRL01.FK-MAT-CTRL-SHT;
    FK0EW01.XMCCD = VMATRL01.XMCCD;
    FK0EW01.FK-MAT-TRAK-FL = VMATRL01.FK-MAT-TRAK-FL;
    FK0EW01.FK-COMNT = VMATRL01.FK-COMNT;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save vendor data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VVNDR001-FOUND-SW == "Y") /* Vendor data found*/
    ;
    FK0EW01.FK-VEND-CD = VVNDR001.FK-VEND-CD;
    FK0EW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
    FK0EW01.FK-NIKE-MGR-ID = VVNDR001.FK-NIKE-MGR-ID;
    FK0EW01.ZZZCHGDT = VVNDR001.ZZZCHGDT;
  end
  ;
  ;
end // end FK0E-3150

// Format and converse CHG map
Function FK0E-3200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FK0E-3210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0EM310.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0EM310.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0EM310.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Protect fields where no database record was found.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "N") /* No dcmpnt.vmcolr rec found*/
    ;
    set FK0EM310.XCLDESC invisible, skip; /* Protect*/
    set FK0EM310.FK-VEND-COLR-DESC invisible, skip; /* Protect*/
    set FK0EM310.FK-MAT-COLR-HOT-FL invisible, skip; /* Protect*/
  end
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "N") /* No dcmpnt.vgroup rec found*/
    ;
    set FK0EM310.FK-MAT-FRGN-PRC invisible, skip; /* Protect*/
    set FK0EM310.FK-MAT-DOM-PRC invisible, skip; /* Protect*/
  end
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "N") /* No dcmpnt.vmatrl rec found*/
    ;
    set FK0EM310.FK-COMNT invisible, skip; /* Protect*/
    set FK0EM310.FK-MAT-CTRL-SHT invisible, skip; /* Protect*/
    set FK0EM310.FK-MAT-TRAK-FL invisible, skip; /* Protect*/
    set FK0EM310.FK-MAT-HOT-FL invisible, skip; /* Protect*/
    set FK0EM310.XMCCD invisible, skip; /* Protect*/
    set FK0EM310.XMU-MAT-UOM-CD invisible, skip; /* Protect*/
    set FK0EM310.FK-MKT-MAT-DESC invisible, skip; /* Protect*/
    set FK0EM310.FK-VEND-MAT-DESC invisible, skip; /* Protect*/
    set FK0EM310.XTM-MAT-THCK-DESC invisible, skip; /* Protect*/
    set FK0EM310.XTM-MAT-THCK-CD invisible, skip; /* Protect*/
    set FK0EM310.FK-DEPT-MAT-DESC invisible, skip; /* Protect*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FK0EM310 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0EM310.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0EM310.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || FKWREC.XXXMSGNO == 1)             /* or update complete*/
    if (FK0EM310.FK-VEND-CD == " ")
      set FK0EM310.FK-VEND-CD cursor;
    else
      set FK0EM310.FK-MAT-NBR cursor;
    end
  end
  ;
  ;
  converse FK0EM310 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0EM310.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0EM310.CAITEM; /* Application data*/
  ;
  ;
end // end FK0E-3200

// Format the display data
Function FK0E-3210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FK0EW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.  If data was found, format from*/
   /* display storage, otherwise format from working storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VVNDR001-FOUND-SW == "Y") /* If vendor found*/
    FK0EM310.FK-VEND-CD = FK0EW01.FK-VEND-CD; /* Vendor cd*/
  else
    FK0EM310.FK-VEND-CD = FK0EW00.FK-VEND-CD; /* Vendor cd*/
  end
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "Y") /* If material found*/
    FK0EM310.FK-MAT-NBR = FK0EW01.FK-MAT-NBR; /* Material nbr*/
  else
    FK0EM310.FK-MAT-NBR = FK0EW00.FK-MAT-NBR; /* Material nbr*/
  end
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "Y") /* If color group found*/
    FK0EM310.XMG-COLR-GRP-CD = FK0EW01.XMG-COLR-GRP-CD; /* Color group*/
  else
    FK0EM310.XMG-COLR-GRP-CD = FK0EW00.XMG-COLR-GRP-CD; /* Color group*/
  end
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "Y") /* If color found*/
    FK0EM310.XCLCD = FK0EW01.XCLCD; /* Color code*/
  else
    FK0EM310.XCLCD = FK0EW00.XCLCD; /* Color code*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0EM310.FK-NIKE-MGR-ID = FK0EW01.FK-NIKE-MGR-ID; /* Manager id*/
  FK0EM310.FK-VEND-SNM = FK0EW01.FK-VEND-SNM; /* Vendor short nm*/
  FK0EM310.ZZZCHGDT = FK0EW01.ZZZCHGDT; /* Change date*/
  FK0EM310.FK-DEPT-MAT-DESC = FK0EW01.FK-DEPT-MAT-DESC; /* Mat desc*/
  FK0EM310.XTM-MAT-THCK-CD = FK0EW01.XTM-MAT-THCK-CD; /* Thickness*/
  FK0EM310.FK-VEND-MAT-DESC = FK0EW01.FK-VEND-MAT-DESC;
  FK0EM310.FK-MKT-MAT-DESC = FK0EW01.FK-MKT-MAT-DESC;
  FK0EM310.XMU-MAT-UOM-CD = FK0EW01.XMU-MAT-UOM-CD; /* Unit of measure*/
  FK0EM310.FK-MAT-HOT-FL = FK0EW01.FK-MAT-HOT-FL; /* Material hot fl*/
  FK0EM310.FK-MAT-CTRL-SHT = FK0EW01.FK-MAT-CTRL-SHT; /* Ctrl sht*/
  FK0EM310.XMCCD = FK0EW01.XMCCD; /* Nil group cd*/
  FK0EM310.FK-MAT-TRAK-FL = FK0EW01.FK-MAT-TRAK-FL; /* Mtrl trak fl*/
  FK0EM310.FK-COMNT = FK0EW01.FK-COMNT; /* Comment*/
  FK0EM310.FK-MAT-DOM-PRC = FK0EW01.FK-MAT-DOM-PRC; /* Domestic price*/
  FK0EM310.FK-MAT-FRGN-PRC = FK0EW01.FK-MAT-FRGN-PRC; /* Frgn price*/
  FK0EM310.FK-VEND-COLR-DESC = FK0EW01.FK-VEND-COLR-DESC;
  FK0EM310.FK-MAT-COLR-HOT-FL = FK0EW01.FK-MAT-COLR-HOT-FL;
  ;
  if (FK0EW01.XTM-MAT-THCK-CD == " ") /* If thickness not entered*/
    FK0EM310.XTM-MAT-THCK-DESC = " ";
  else
    if (FK0EW01.XTM-MAT-THCK-CD in XTMTBL.XTM-MAT-THCK-CD
     && XTMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      FK0EM310.XTM-MAT-THCK-DESC = XTMTBL.XTM-MAT-THCK-DESC[sysVar.arrayIndex];
    else
      FK0EM310.XTM-MAT-THCK-DESC = "** NOT FOUND **";
    end
  end
  ;
  if (FK0EW00.XCLCD == " ") /* if color code not entered*/
    FK0EM310.XCLDESC = " ";
  else
    if (FK0EW00.XCLCD in XCLTBL.XCLCD /* If color in table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      FK0EM310.XCLDESC = XCLTBL.XCLDESC[sysVar.arrayIndex];
    else
      FK0EM310.XCLDESC = "** NOT FOUND **";
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* If no message*/
    set FK0EM310.FK-VEND-CD cursor; /* Set cursor at vendor code*/
  end
  ;
  ;
end // end FK0E-3210

// Check attention identifier
Function FK0E-3300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0EW01.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-NBR[1] = FK0EW01.FK-MAT-NBR; /* Mat nbr*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0EW01.XMG-COLR-GRP-CD; /* Colr grp*/
    FKWREC.XCLCD[1] = FK0EW01.XCLCD; /* Color*/
    ;
    COMMAREA.CATOAP = "FK0E"; /* to applicaiton*/
    COMMAREA.CAITEM = "C"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0EM310.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0EM310.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FK0EW01.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-NBR[1] = FK0EW01.FK-MAT-NBR; /* Mat nbr*/
      FKWREC.XMG-COLR-GRP-CD[1] = FK0EW01.XMG-COLR-GRP-CD; /* Clr grp*/
      FKWREC.XCLCD[1] = FK0EW01.XCLCD; /* Color*/
      ;
      COMMAREA.CATOAP = FK0EM310.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0EM310.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0EM310.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf14 /* FK0G requested*/
   || converseVar.eventKey is pf15 /* FK0H requested*/
   || converseVar.eventKey is pf16 /* FK0M requested*/
   || converseVar.eventKey is pf19) /* FK0Q requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0EM310"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0F"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0G"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FK0M"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf19) /* PF19 was pressed*/
      COMMAREA.CATOAP = "FK0Q"; /* TO application*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0EW01.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-NBR[1] = FK0EW01.FK-MAT-NBR; /* Mat nbr*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0EW01.XMG-COLR-GRP-CD; /* Colr grp*/
    FKWREC.XCLCD[1] = FK0EW01.XCLCD; /* Color*/
    ;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6)  /* NXTMTL requested*/
    ;
    FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0E-3300

// Reset Highlighted fields
Function FK0E-3400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0EM310.FK-VEND-CD initialAttributes; /* Vender code*/
  set FK0EM310.FK-MAT-NBR initialAttributes; /* Material number*/
  set FK0EM310.XMG-COLR-GRP-CD initialAttributes; /* Color Group*/
  set FK0EM310.XCLCD initialAttributes; /* Color code*/
  ;
  set FK0EM310.FK-VEND-COLR-DESC initialAttributes; /* Vendor color desc*/
  set FK0EM310.FK-MAT-COLR-HOT-FL initialAttributes; /* Color hot flag*/
  ;
  set FK0EM310.FK-MAT-FRGN-PRC initialAttributes; /* Foreign price*/
  set FK0EM310.FK-MAT-DOM-PRC initialAttributes; /* Domestic price*/
  ;
  set FK0EM310.FK-VEND-COLR-DESC initialAttributes; /* Vendor color desc*/
  set FK0EM310.XCLDESC initialAttributes; /* Color desc*/
  set FK0EM310.FK-COMNT initialAttributes; /* Comment*/
  set FK0EM310.FK-MAT-CTRL-SHT initialAttributes; /* Mat ctrl sht*/
  set FK0EM310.FK-MAT-TRAK-FL initialAttributes; /* Material track flag*/
  set FK0EM310.FK-MAT-HOT-FL initialAttributes; /* Material hot flag*/
  set FK0EM310.XMCCD initialAttributes; /* Nil group code*/
  set FK0EM310.XMU-MAT-UOM-CD initialAttributes; /* Unit of measure*/
  set FK0EM310.FK-MKT-MAT-DESC initialAttributes; /* Mkt material description*/
  set FK0EM310.FK-VEND-MAT-DESC initialAttributes; /* Vend material description*/
  set FK0EM310.XTM-MAT-THCK-CD initialAttributes; /* Thickness*/
  set FK0EM310.XTM-MAT-THCK-DESC initialAttributes; /* Thickness desc*/
  set FK0EM310.FK-DEPT-MAT-DESC initialAttributes; /* Material desc*/
  ;
  set FK0EM310.CATOAP initialAttributes; /* To application*/
  set FK0EM310.CAITEM initialAttributes; /* Application data*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM310.XTM-MAT-THCK-CD == "?" /* XTM list requested*/
   || FK0EM310.XMU-MAT-UOM-CD == "?"  /* XUM list requested*/
   || FK0EM310.XMCCD == "?"           /* XMC list requested*/
   || FK0EM310.XMG-COLR-GRP-CD == "?" /* XMG list requested*/
   || FK0EM310.XCLCD == "?")          /* XCL list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      FKWREC.XXX-MOD-ID = "3400"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xcl codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM310.XCLCD == "?") /* Xcl list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  COLOR"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCL01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM310.XCLCD = FK0EW01.XCLCD; /* Restore prior code*/
    else
      FK0EM310.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FK0EM310.XCLCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xmg codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM310.XMG-COLR-GRP-CD == "?") /* XMG list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  COLOR GROUP"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXMG01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM310.XMG-COLR-GRP-CD = FK0EW01.XMG-COLR-GRP-CD; /* Restore prior code*/
    else
      FK0EM310.XMG-COLR-GRP-CD = XMGTBL.XMG-COLR-GRP-CD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FK0EM310.XMG-COLR-GRP-CD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xmc codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM310.XMCCD == "?") /* XMC list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  NIL GROUP"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXMC01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM310.XMCCD = FK0EW01.XMCCD; /* Restore prior code*/
    else
      FK0EM310.XMCCD = XMCTBL.XMCCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FK0EM310.XMCCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xum codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM310.XMU-MAT-UOM-CD == "?") /* XUM list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  UNIT OF MEASURE"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXMU01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM310.XMU-MAT-UOM-CD = FK0EW01.XMU-MAT-UOM-CD; /* Restore*/
    else
      FK0EM310.XMU-MAT-UOM-CD = XMUTBL.XMU-MAT-UOM-CD[XX0XWPIX]; /**/
    end
    ;
    set FK0EM310.XMU-MAT-UOM-CD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xtm codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM310.XTM-MAT-THCK-CD == "?") /* XTM list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  THICKNESS"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXTM01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM310.XTM-MAT-THCK-CD = FK0EW01.XTM-MAT-THCK-CD; /* Restore prior code*/
    else
      FK0EM310.XTM-MAT-THCK-CD = XTMTBL.XTM-MAT-THCK-CD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FK0EM310.XTM-MAT-THCK-CD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "3400"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FK0E-3400

// Verify entered fields
Function FK0E-3500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM310.CAITEM > " ") /* Application data was entered*/
    ;
    set FK0EM310.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If NXTMTL (pf6) entered, verify next material exists in*/
   /* fkwrec.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Next material requested*/
    ;
    FK0EW00.FK0EW-IDX = FK0EW00.FK0EW-NXTMTL-IDX + 1;
    ;
    if (FK0EW00.FK0EW-IDX > 15 /* If on last fkwrec record*/
     || FKWREC.FK-VEND-CD[FK0EW-IDX] == " ") /* or no more data*/
      ;
      set FK0EM310.FK-VEND-CD cursor; /* Reset cursor*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(33); /* No more materials to display*/
      exit stack;
    end
    ;
    return; /* Exit edit section -- we want the next*/
                                   /* product*/
           /* regardless of any other changes.*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Check to see if any key data has changed.  If it has,*/
   /* verify the key data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM310.FK-VEND-CD != FK0EW00.FK-VEND-CD           /* Vendor changed*/
   || FK0EM310.FK-MAT-NBR != FK0EW00.FK-MAT-NBR           /* Material changed*/
   || FK0EM310.XMG-COLR-GRP-CD != FK0EW00.XMG-COLR-GRP-CD /* Clr grp chg*/
   || FK0EM310.XCLCD != FK0EW00.XCLCD                     /* Color changed*/
   || FK0EM310.FK-VEND-CD == " "                          /* or vendor not entered*/
   || FK0EM310.FK-MAT-NBR == " ")                         /* or material not entered*/
    ;
    FK0E-3510(); /* Edit key data*/
  else
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the non-key data.*/
    /* ---------------------------------------------------------------*/
    ;
    FK0E-3520(); /* Edit non-key data*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FK0E-3500

// Verify key fields
Function FK0E-3510()
   /* ---------------------------------------------------------------*/
   /* Verify the color data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM310.XCLCD != " ") /* If color entered (blank o.k.)*/
    ;
    if (FK0EM310.XCLCD in XCLTBL.XCLCD /* If in table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM310.XCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
      converseLib.validationFailed(32); /* Material color missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the color group data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM310.XMG-COLR-GRP-CD != " ") /* If color group entered*/
                                     /* (blank o.k)*/
    if (FK0EM310.XMG-COLR-GRP-CD in XMGTBL.XMG-COLR-GRP-CD /* If in table*/
     && XMGTBL.XXXSTAT[sysVar.arrayIndex] == "A")          /* and active status*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM310.XMG-COLR-GRP-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
      converseLib.validationFailed(31); /* Color group missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the material data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM310.FK-MAT-NBR == " ") /* If material missing*/
    ;
    set FK0EM310.FK-MAT-NBR cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
    converseLib.validationFailed(26); /* Material code missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the vendor data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM310.FK-VEND-CD == " ") /* If vendor code missing*/
    ;
    set FK0EM310.FK-VEND-CD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
    converseLib.validationFailed(21); /* Vendor code missing or invalid*/
  end
  ;
  ;
end // end FK0E-3510

// Verify non-key fields
Function FK0E-3520()
   /* ---------------------------------------------------------------*/
   /* Verify the material data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "Y") /* If color data found*/
    ;
    if (FK0EM310.FK-MAT-COLR-HOT-FL == "Y" /* If flag = y*/
     || FK0EM310.FK-MAT-COLR-HOT-FL == "N") /* or flag = n*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM310.FK-MAT-COLR-HOT-FL cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
      converseLib.validationFailed(34); /* Must be "y" or "n"*/
    end
  end
  ;
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "Y") /* If material data found*/
    ;
    if (FK0EM310.FK-MAT-TRAK-FL == "Y" /* If flag = y*/
     || FK0EM310.FK-MAT-TRAK-FL == "N") /* or flag = n*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM310.FK-MAT-TRAK-FL cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
      converseLib.validationFailed(34); /* Must be "y" or "n"*/
    end
    ;
    ;
    if (FK0EM310.FK-MAT-HOT-FL == "Y" /* If flag = y*/
     || FK0EM310.FK-MAT-HOT-FL == "N") /* or flag = n*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM310.FK-MAT-HOT-FL cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
      converseLib.validationFailed(34); /* Must be "y" or "n"*/
    end
    ;
    ;
    if (FK0EM310.XMCCD in XMCTBL.XMCCD /* If in table*/
     && XMCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM310.XMCCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
    ;
    ;
    if (FK0EM310.XMU-MAT-UOM-CD in XMUTBL.XMU-MAT-UOM-CD /* If in table*/
     && XMUTBL.XXXSTAT[sysVar.arrayIndex] == "A")        /* and active status*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM310.XMU-MAT-UOM-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
    ;
    ;
    if (FK0EM310.XTM-MAT-THCK-CD in XTMTBL.XTM-MAT-THCK-CD /* If in table*/
     && XTMTBL.XXXSTAT[sysVar.arrayIndex] == "A")          /* and active status*/
      ;
       /* next sentence*/
    else
      ;
      set FK0EM310.XTM-MAT-THCK-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
      converseLib.validationFailed(28); /* Thickness missing or invalid*/
    end
  end
  ;
  ;
end // end FK0E-3520

// Process Request
Function FK0E-3600()
   /* --------------------------------------------------------------------*/
   /* If NXTmtl (pf6) requested, obtain the next product to display.*/
   /* --------------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Next material requested*/
    ;
    FK0EW00.FK0EW-NXTMTL-IDX = FK0EW00.FK0EW-NXTMTL-IDX + 1; /* Increment*/
    ;
    FK0EM310.FK-VEND-CD = FKWREC.FK-VEND-CD[FK0EW-NXTMTL-IDX]; /* Vendor*/
    FK0EM310.FK-MAT-NBR = FKWREC.FK-MAT-NBR[FK0EW-NXTMTL-IDX]; /* Material*/
    FK0EM310.XMG-COLR-GRP-CD = FKWREC.XMG-COLR-GRP-CD[FK0EW-NXTMTL-IDX]; /* Color group*/
    FK0EM310.XCLCD = FKWREC.XCLCD[FK0EW-NXTMTL-IDX]; /* Color*/
    ;
    FK0EW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* exit to display the map*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM310.FK-VEND-CD != FK0EW01.FK-VEND-CD           /* If vendor changed*/
   || FK0EM310.FK-MAT-NBR != FK0EW01.FK-MAT-NBR           /* or mtrl*/
   || FK0EM310.XMG-COLR-GRP-CD != FK0EW01.XMG-COLR-GRP-CD /* or clr grp*/
   || FK0EM310.XCLCD != FK0EW01.XCLCD)                    /* or color*/
    ;
    FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end
  ;
   /* --------------------------------------------------------------------*/
   /* For each database table, check to see if data was changed.  If it*/
   /* was, update the data with the new values.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0EW00.FK0EW-UPDT-PERFORMED-SW = "N"; /* Update performed switch*/
  ;
  XX0XS01(); /* Get date and time*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Check for changes to the DCMPNT.VMCOLR01 table.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM310.FK-VEND-COLR-DESC != FK0EW01.FK-VEND-COLR-DESC /* clr desc ch*/
   || FK0EM310.FK-MAT-COLR-HOT-FL != FK0EW01.FK-MAT-COLR-HOT-FL) /* Hot chg*/
    ;
    FK0E-3610(); /* update dcmpnt.vmcolr01 table*/
  end
  ;
   /* --------------------------------------------------------------------*/
   /* Check for changes to the DCMPNT.VGROUP01 table.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM310.FK-MAT-FRGN-PRC != FK0EW01.FK-MAT-FRGN-PRC /* Frgn price chg*/
   || FK0EM310.FK-MAT-DOM-PRC != FK0EW01.FK-MAT-DOM-PRC)  /* Dom price chg*/
    ;
    FK0E-3620(); /* update dcmpnt.vgroup01 table*/
  end
  ;
   /* --------------------------------------------------------------------*/
   /* Check for changes to the DCMPNT.VMATRL01 table.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM310.FK-COMNT != FK0EW01.FK-COMNT                 /* Comment price change*/
   || FK0EM310.FK-MAT-CTRL-SHT != FK0EW01.FK-MAT-CTRL-SHT   /* Ctrl sht chg*/
   || FK0EM310.FK-MAT-TRAK-FL != FK0EW01.FK-MAT-TRAK-FL     /* Trak fl chg*/
   || FK0EM310.FK-MAT-HOT-FL != FK0EW01.FK-MAT-HOT-FL       /* Hot fl chg*/
   || FK0EM310.XMCCD != FK0EW01.XMCCD                       /* Nil group chg*/
   || FK0EM310.XMU-MAT-UOM-CD != FK0EW01.XMU-MAT-UOM-CD     /* Uom chg*/
   || FK0EM310.FK-MKT-MAT-DESC != FK0EW01.FK-MKT-MAT-DESC   /* Mkt desc chg*/
   || FK0EM310.FK-VEND-MAT-DESC != FK0EW01.FK-VEND-MAT-DESC /* Vend desc*/
   || FK0EM310.XTM-MAT-THCK-CD != FK0EW01.XTM-MAT-THCK-CD   /* Thkness chg*/
   || FK0EM310.FK-DEPT-MAT-DESC != FK0EW01.FK-DEPT-MAT-DESC) /* Desc chg*/
    ;
    FK0E-3630(); /* update dcmpnt.vmatrl01 table*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If successful updates occurred, update fk-nike-mgr-id in the*/
   /* dcmpnt.vvndr001 database.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-UPDT-PERFORMED-SW == "Y") /* Update performed switch*/
    ;
    FK0E-3640(); /* Update dcmpnt.vvndr001*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If updates occurred, update display storage and display message for*/
   /* successful update.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-UPDT-PERFORMED-SW == "Y") /* Update performed switch*/
    ;
    FK0E-3150(); /* Update display storage*/
    ;
    FK0EW00.FK0EW-FMAT-MAP-SW = "Y"; /* Format the data*/
    FKWREC.XXX-MOD-ID = "3600"; /* Module identification*/
    FKWREC.XXXMSGNO = 1; /* Update completed*/
    ;
  end
  ;
end // end FK0E-3600

// Update DCMPNT.VMCOLR01
Function FK0E-3610()
   /* ------------------------------------------------------------*/
   /* Update the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  VMCOLR01.FK-VEND-COLR-DESC = FK0EM310.FK-VEND-COLR-DESC;
  VMCOLR01.FK-MAT-COLR-HOT-FL = FK0EM310.FK-MAT-COLR-HOT-FL;
  VMCOLR01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VMCOLR01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  try
    call "IO6210" ("U ", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
      FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      ;
      exit stack; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3610 UPDATE DCMPNT.VMCOLR01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-3610

// Update DCMPNT.VGROUP01
Function FK0E-3620()
   /* ------------------------------------------------------------*/
   /* Update the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  VGROUP01.FK-MAT-FRGN-PRC = FK0EM310.FK-MAT-FRGN-PRC;
  VGROUP01.FK-MAT-DOM-PRC = FK0EM310.FK-MAT-DOM-PRC;
  VGROUP01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VGROUP01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  try
    call "IO6200" ("U ", SQLCA, VGROUP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "3620"; /* Module identification*/
      FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      ;
      exit stack; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3620 UPDATE DCMPNT.VGROUP01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VGROUP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VGROUP01.VGROUP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-3620

// Update DCMPNT.VMATRL01
Function FK0E-3630()
   /* ------------------------------------------------------------*/
   /* Update the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  VMATRL01.FK-COMNT = FK0EM310.FK-COMNT;
  VMATRL01.FK-MAT-CTRL-SHT = FK0EM310.FK-MAT-CTRL-SHT;
  VMATRL01.FK-MAT-TRAK-FL = FK0EM310.FK-MAT-TRAK-FL;
  VMATRL01.FK-MAT-HOT-FL = FK0EM310.FK-MAT-HOT-FL;
  VMATRL01.XMCCD = FK0EM310.XMCCD;
  VMATRL01.XMU-MAT-UOM-CD = FK0EM310.XMU-MAT-UOM-CD;
  VMATRL01.FK-MKT-MAT-DESC = FK0EM310.FK-MKT-MAT-DESC;
  VMATRL01.FK-VEND-MAT-DESC = FK0EM310.FK-VEND-MAT-DESC;
  VMATRL01.XTM-MAT-THCK-CD = FK0EM310.XTM-MAT-THCK-CD;
  VMATRL01.FK-DEPT-MAT-DESC = FK0EM310.FK-DEPT-MAT-DESC;
  ;
  VMATRL01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VMATRL01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  try
    call "IO6190" ("U ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "3630"; /* Module identification*/
      FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      ;
      exit stack; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3630 UPDATE DCMPNT.VMATRL01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-3630

// Update DCMPNT.VVNDR001
Function FK0E-3640()
   /* ------------------------------------------------------------*/
   /* Update the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  VVNDR001.FK-NIKE-MGR-ID = COMMAREA.CAUSERID; /* Last person to updt*/
  ;
  VVNDR001.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VVNDR001.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  try
    call "IO6180" ("U ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "3640"; /* Module identification*/
      FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      ;
      exit stack; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3640"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3640 UPDATE DCMPNT.VVNDR001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-3640

// List the rows in the table
Function FK0E-4000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0E-4100(); /* Obtain the data to display*/
  ;
  FK0E-4200(); /* Format and display the map*/
  ;
  FK0E-4300(); /* Check attention identifier*/
  ;
  FK0E-4400(); /* Reset fields to normal intensity*/
  ;
  FK0E-4500(); /* Verify the entered data*/
  ;
  FK0E-4600(); /* Process valid input request*/
  ;
  ;
end // end FK0E-4000

// Obtain data to display
Function FK0E-4100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0EW01 empty; /* Initialize display storage*/
  ;
  FK0EW00.FK-VEND-CD = FK0EM410.FK-VEND-CD; /* Vendor*/
  FK0EW00.FK-MAT-NBR = FK0EM410.FK-MAT-NBR; /* Material*/
  FK0EW00.XMG-COLR-GRP-CD = FK0EM410.XMG-COLR-GRP-CD; /* Color group*/
  FK0EW00.XCLCD = FK0EM410.XCLCD; /* Color*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0EW00.FK0EW-VGROUP01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0EW00.FK0EW-VMATRL01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  ;
  ;
  if (FK0EM410.XCLCD != "  ") /* If color code on map*/
    FK0E-4110(); /* Obtain the color data*/
  end /* (DCMPNT.VMCOLR01)*/
                                  /*  */
                                  /*  */
  if (FK0EM410.XMG-COLR-GRP-CD != "  ") /* If color group on map*/
    FK0E-4120(); /* Obtain the color group data*/
  end /* (DCMPNT.VGROUP01)*/
                                  /*  */
                                  /*  */
  FK0E-4130(); /* Obtain the material data*/
                                  /* (DCMPNT.VMATRL01)*/
                                  /*  */
  FK0E-4140(); /* Obtain the vender data*/
                                  /* (DCMPNT.VVNDR001)*/
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data obtained in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0E-4150(); /* Save data*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0EW00.FK0EW-REQUEST-DATA-SW = "N";
  FK0EW00.FK0EW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FK0E-4100

// Get color data
Function FK0E-4110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.FK-MAT-NBR = FK0EM410.FK-MAT-NBR; /* Material nbr*/
  VMCOLR01.XMG-COLR-GRP-CD = FK0EM410.XMG-COLR-GRP-CD; /* Color group*/
  VMCOLR01.XCLCD = FK0EM410.XCLCD; /* Color*/
  ;
  try
    call "IO6210" ("S ", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      FKWREC.XXXMSGNO = 18; /* Not found*/
      FKWREC.XXX-MOD-ID = "4110"; /* Module identification*/
      set FK0EM410.XCLCD cursor, bold; /* Highlight*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "Y"; /* Tbl found switch*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4110 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-4110

// Get color group data
Function FK0E-4120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VGROUP01 empty;
  ;
  VGROUP01.FK-MAT-NBR = FK0EM410.FK-MAT-NBR; /* Material nbr*/
  VGROUP01.XMG-COLR-GRP-CD = FK0EM410.XMG-COLR-GRP-CD; /* Color group*/
  ;
  try
    call "IO6200" ("S ", SQLCA, VGROUP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      FKWREC.XXXMSGNO = 18; /* Not found*/
      FKWREC.XXX-MOD-ID = "4120"; /* Module identification*/
      set FK0EM410.XMG-COLR-GRP-CD cursor, bold; /* Highlight*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VGROUP01-FOUND-SW = "Y"; /* Tbl found switch*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4120 GET COLOR GROUP DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VGROUP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VGROUP01.VGROUP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-4120

// Get material data
Function FK0E-4130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-VEND-CD = FK0EM410.FK-VEND-CD; /* Vendor*/
  VMATRL01.FK-MAT-NBR = FK0EM410.FK-MAT-NBR; /* Material nbr*/
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      FKWREC.XXXMSGNO = 18; /* Not found*/
      FKWREC.XXX-MOD-ID = "4130"; /* Module identification*/
      set FK0EM410.FK-MAT-NBR cursor, bold; /* Highlight*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VMATRL01-FOUND-SW = "Y"; /* Tbl found switch*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4130 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-4130

// Get vendor data
Function FK0E-4140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0EM410.FK-VEND-CD; /* Vendor*/
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      set FK0EM410.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "4140"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* No data found*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-VVNDR001-FOUND-SW = "Y"; /* Tbl found switch*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4140 GET VENDOR DATA     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-4140

// Save data in display storage
Function FK0E-4150()
   /* ------------------------------------------------------------------*/
   /* For each database record found, save data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  set FK0EW01 empty; /* Initialize display storage*/
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save color data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "Y") /* Color data found*/
    ;
    FK0EW01.XCLCD = VMCOLR01.XCLCD;
    FK0EW01.FK-VEND-COLR-DESC = VMCOLR01.FK-VEND-COLR-DESC;
    FK0EW01.FK-MAT-COLR-HOT-FL = VMCOLR01.FK-MAT-COLR-HOT-FL;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save color group data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "Y") /* Color group data found*/
    ;
    FK0EW01.XMG-COLR-GRP-CD = VGROUP01.XMG-COLR-GRP-CD;
    FK0EW01.FK-MAT-DOM-PRC = VGROUP01.FK-MAT-DOM-PRC;
    FK0EW01.FK-MAT-FRGN-PRC = VGROUP01.FK-MAT-FRGN-PRC;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save material data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "Y") /* Material data found*/
    ;
    FK0EW01.FK-MAT-NBR = VMATRL01.FK-MAT-NBR;
    FK0EW01.FK-DEPT-MAT-DESC = VMATRL01.FK-DEPT-MAT-DESC;
    FK0EW01.XTM-MAT-THCK-CD = VMATRL01.XTM-MAT-THCK-CD;
    FK0EW01.FK-VEND-MAT-DESC = VMATRL01.FK-VEND-MAT-DESC;
    FK0EW01.FK-MKT-MAT-DESC = VMATRL01.FK-MKT-MAT-DESC;
    FK0EW01.XMU-MAT-UOM-CD = VMATRL01.XMU-MAT-UOM-CD;
    FK0EW01.FK-MAT-HOT-FL = VMATRL01.FK-MAT-HOT-FL;
    FK0EW01.FK-MAT-CTRL-SHT = VMATRL01.FK-MAT-CTRL-SHT;
    FK0EW01.XMCCD = VMATRL01.XMCCD;
    FK0EW01.FK-MAT-TRAK-FL = VMATRL01.FK-MAT-TRAK-FL;
    FK0EW01.FK-COMNT = VMATRL01.FK-COMNT;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save vendor data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VVNDR001-FOUND-SW == "Y") /* Vendor data found*/
    ;
    FK0EW01.FK-VEND-CD = VVNDR001.FK-VEND-CD;
    FK0EW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
    FK0EW01.FK-NIKE-MGR-ID = VVNDR001.FK-NIKE-MGR-ID;
    FK0EW01.ZZZCHGDT = VVNDR001.ZZZCHGDT;
  end
  ;
  ;
end // end FK0E-4150

// Format and converse DEL map
Function FK0E-4200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FK0E-4210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0EM410.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0EM410.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0EM410.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Protect fields where no database record was found.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "N") /* No dcmpnt.vmcolr rec found*/
    ;
    set FK0EM410.XCLDESC invisible, skip; /* Protect*/
    set FK0EM410.FK-VEND-COLR-DESC invisible, skip; /* Protect*/
    set FK0EM410.FK-MAT-COLR-HOT-FL invisible, skip; /* Protect*/
  end
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "N") /* No dcmpnt.vgroup rec found*/
    ;
    set FK0EM410.FK-MAT-FRGN-PRC invisible, skip; /* Protect*/
    set FK0EM410.FK-MAT-DOM-PRC invisible, skip; /* Protect*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FK0EM410 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0EM410.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0EM410.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || FKWREC.XXXMSGNO == 1)             /* or update complete*/
    if (FK0EM410.FK-VEND-CD == " ")
      set FK0EM410.FK-VEND-CD cursor;
    else
      set FK0EM410.FK-MAT-NBR cursor;
    end
  end
  ;
  ;
  converse FK0EM410 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0EM410.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0EM410.CAITEM; /* Application data*/
  ;
  ;
end // end FK0E-4200

// Format the display data
Function FK0E-4210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FK0EW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.  If data was found, format from*/
   /* display storage, otherwise format from working storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-VVNDR001-FOUND-SW == "Y") /* If vendor found*/
    FK0EM410.FK-VEND-CD = FK0EW01.FK-VEND-CD; /* Vendor cd*/
  else
    FK0EM410.FK-VEND-CD = FK0EW00.FK-VEND-CD; /* Vendor cd*/
  end
  ;
  if (FK0EW00.FK0EW-VMATRL01-FOUND-SW == "Y") /* If material found*/
    FK0EM410.FK-MAT-NBR = FK0EW01.FK-MAT-NBR; /* Material nbr*/
  else
    FK0EM410.FK-MAT-NBR = FK0EW00.FK-MAT-NBR; /* Material nbr*/
  end
  ;
  if (FK0EW00.FK0EW-VGROUP01-FOUND-SW == "Y") /* If color group found*/
    FK0EM410.XMG-COLR-GRP-CD = FK0EW01.XMG-COLR-GRP-CD; /* Color group*/
  else
    FK0EM410.XMG-COLR-GRP-CD = FK0EW00.XMG-COLR-GRP-CD; /* Color group*/
  end
  ;
  if (FK0EW00.FK0EW-VMCOLR01-FOUND-SW == "Y") /* If color found*/
    FK0EM410.XCLCD = FK0EW01.XCLCD; /* Color code*/
  else
    FK0EM410.XCLCD = FK0EW00.XCLCD; /* Color code*/
  end
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0EM410.FK-NIKE-MGR-ID = FK0EW01.FK-NIKE-MGR-ID; /* Manager id*/
  FK0EM410.FK-VEND-SNM = FK0EW01.FK-VEND-SNM; /* Vendor short nm*/
  FK0EM410.ZZZCHGDT = FK0EW01.ZZZCHGDT; /* Change date*/
  FK0EM410.FK-DEPT-MAT-DESC = FK0EW01.FK-DEPT-MAT-DESC; /* Mat desc*/
  FK0EM410.XTM-MAT-THCK-CD = FK0EW01.XTM-MAT-THCK-CD; /* Thickness*/
  FK0EM410.FK-VEND-MAT-DESC = FK0EW01.FK-VEND-MAT-DESC;
  FK0EM410.FK-MKT-MAT-DESC = FK0EW01.FK-MKT-MAT-DESC;
  FK0EM410.XMU-MAT-UOM-CD = FK0EW01.XMU-MAT-UOM-CD; /* Unit of measure*/
  FK0EM410.XMCCD = FK0EW01.XMCCD; /* Nil group*/
  FK0EM410.FK-MAT-HOT-FL = FK0EW01.FK-MAT-HOT-FL; /* Material hot fl*/
  FK0EM410.FK-MAT-CTRL-SHT = FK0EW01.FK-MAT-CTRL-SHT; /* Ctrl sht*/
  FK0EM410.FK-MAT-TRAK-FL = FK0EW01.FK-MAT-TRAK-FL; /* Mtrl trak fl*/
  FK0EM410.FK-COMNT = FK0EW01.FK-COMNT; /* Comment*/
  FK0EM410.FK-MAT-DOM-PRC = FK0EW01.FK-MAT-DOM-PRC; /* Domestic price*/
  FK0EM410.FK-MAT-FRGN-PRC = FK0EW01.FK-MAT-FRGN-PRC; /* Frgn price*/
  FK0EM410.FK-VEND-COLR-DESC = FK0EW01.FK-VEND-COLR-DESC;
  FK0EM410.FK-MAT-COLR-HOT-FL = FK0EW01.FK-MAT-COLR-HOT-FL;
  ;
  if (FK0EW01.XTM-MAT-THCK-CD == " ") /* If thickness not entered*/
    FK0EM410.XTM-MAT-THCK-DESC = " ";
  else
    if (FK0EW01.XTM-MAT-THCK-CD in XTMTBL.XTM-MAT-THCK-CD
     && XTMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      FK0EM410.XTM-MAT-THCK-DESC = XTMTBL.XTM-MAT-THCK-DESC[sysVar.arrayIndex];
    else
      FK0EM410.XTM-MAT-THCK-DESC = "** NOT FOUND **";
    end
  end
  ;
  if (FK0EW00.XCLCD == " ") /* if color code not entered*/
    FK0EM410.XCLDESC = " ";
  else
    if (FK0EW00.XCLCD in XCLTBL.XCLCD /* If color in table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      FK0EM410.XCLDESC = XCLTBL.XCLDESC[sysVar.arrayIndex];
    else
      FK0EM410.XCLDESC = "** NOT FOUND **";
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* If no message*/
    set FK0EM410.FK-VEND-CD cursor; /* Set cursor at vendor code*/
  end
  ;
  ;
end // end FK0E-4210

// Check attention identifier
Function FK0E-4300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0EW01.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-NBR[1] = FK0EW01.FK-MAT-NBR; /* Mat nbr*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0EW01.XMG-COLR-GRP-CD; /* Colr grp*/
    FKWREC.XCLCD[1] = FK0EW01.XCLCD; /* Color*/
    ;
    COMMAREA.CATOAP = "FK0E"; /* to applicaiton*/
    COMMAREA.CAITEM = "D"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0EM410.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0EM410.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FK0EW01.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-NBR[1] = FK0EW01.FK-MAT-NBR; /* Mat nbr*/
      FKWREC.XMG-COLR-GRP-CD[1] = FK0EW01.XMG-COLR-GRP-CD; /* Clr grp*/
      FKWREC.XCLCD[1] = FK0EW01.XCLCD; /* Color*/
      ;
      COMMAREA.CATOAP = FK0EM410.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0EM410.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0EM410.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf14 /* FK0G requested*/
   || converseVar.eventKey is pf15 /* FK0H requested*/
   || converseVar.eventKey is pf16 /* FK0M requested*/
   || converseVar.eventKey is pf19) /* FK0Q requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0EM410"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0F"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0G"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FK0M"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf19) /* PF19 was pressed*/
      COMMAREA.CATOAP = "FK0Q"; /* TO application*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0EW01.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-NBR[1] = FK0EW01.FK-MAT-NBR; /* Mat nbr*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0EW01.XMG-COLR-GRP-CD; /* Colr grp*/
    FKWREC.XCLCD[1] = FK0EW01.XCLCD; /* Color*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6)  /* NXTMTL requested*/
    ;
    FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0E-4300

// Reset Highlighted fields
Function FK0E-4400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0EM410.FK-VEND-CD initialAttributes; /* Vender code*/
  set FK0EM410.FK-MAT-NBR initialAttributes; /* Material number*/
  set FK0EM410.XMG-COLR-GRP-CD initialAttributes; /* Color Group*/
  set FK0EM410.XCLCD initialAttributes; /* Color code*/
  ;
  set FK0EM410.FK-MAT-FRGN-PRC initialAttributes; /* Foreign price*/
  set FK0EM410.FK-MAT-DOM-PRC initialAttributes; /* Domestic price*/
  ;
  set FK0EM410.XCLDESC initialAttributes; /* Color desc*/
  set FK0EM410.FK-VEND-COLR-DESC initialAttributes; /* Vend colr desc*/
  set FK0EM410.FK-MAT-COLR-HOT-FL initialAttributes; /* Color hot flag*/
  ;
  set FK0EM410.CATOAP initialAttributes; /* To application*/
  set FK0EM410.CAITEM initialAttributes; /* Application data*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM410.XCLCD == "?" /* XCL list requested*/
   || FK0EM410.XMG-COLR-GRP-CD == "?") /* XMG list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      FKWREC.XXX-MOD-ID = "4400"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xcl codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM410.XCLCD == "?") /* Xcl list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  COLOR"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCL01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM410.XCLCD = FK0EW01.XCLCD; /* Restore prior code*/
    else
      FK0EM410.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FK0EM410.XCLCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of xmg codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM410.XMG-COLR-GRP-CD == "?") /* XMG list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  COLOR GROUP"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXMG01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FK0EM410.XMG-COLR-GRP-CD = FK0EW01.XMG-COLR-GRP-CD; /* Restore prior code*/
    else
      FK0EM410.XMG-COLR-GRP-CD = XMGTBL.XMG-COLR-GRP-CD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FK0EM410.XMG-COLR-GRP-CD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "4400"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FK0E-4400

// Verify entered fields
Function FK0E-4500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM410.CAITEM > " ") /* Application data was entered*/
    ;
    set FK0EM410.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If NXTMTL (pf6) entered, verify next material exists in*/
   /* fkwrec.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Next material requested*/
    ;
    FK0EW00.FK0EW-IDX = FK0EW00.FK0EW-NXTMTL-IDX + 1;
    ;
    if (FK0EW00.FK0EW-IDX > 15 /* If on last fkwrec record*/
     || FKWREC.FK-VEND-CD[FK0EW-IDX] == " ") /* or no more data*/
      ;
      set FK0EM410.FK-VEND-CD cursor; /* Reset cursor*/
      FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
      converseLib.validationFailed(33); /* No more materials to display*/
      exit stack;
    end
    ;
    return; /* Exit edit section -- we want the next product*/
           /* regardless of any other changes.*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the color data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM410.XCLCD != " ") /* Verify code if entered (blank o.k.)*/
    ;
    if (FK0EM410.XCLCD in XCLTBL.XCLCD /* If code in table*/
     && XCLTBL.XXXSTAT == "A")         /* and active status*/
      ;
       /* Next sentence*/
    else
      ;
      set FK0EM410.XCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
      converseLib.validationFailed(32); /* Material color code missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the color group data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM410.XMG-COLR-GRP-CD != " ") /* Verify code if entered (blank ok)*/
    ;
    if (FK0EM410.XMG-COLR-GRP-CD in XMGTBL.XMG-COLR-GRP-CD /* If cd in tbl*/
     && XMGTBL.XXXSTAT == "A")                             /* and active status*/
      ;
       /* Next sentence*/
    else
      ;
      set FK0EM410.XMG-COLR-GRP-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
      converseLib.validationFailed(31); /* Color group code missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the material data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM410.FK-MAT-NBR == " ") /* If material missing*/
    ;
    set FK0EM410.FK-MAT-NBR cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    converseLib.validationFailed(26); /* Material code invalid or missing*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the vendor data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0EM410.FK-VEND-CD == " ") /* If vendor code missing*/
    ;
    set FK0EM410.FK-VEND-CD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    converseLib.validationFailed(21); /* Vendor code invalid or missing*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FK0E-4500

// Process Request
Function FK0E-4600()
   /* --------------------------------------------------------------------*/
   /* If NXTmtl (pf6) requested, obtain the next product to display.*/
   /* --------------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Next material requested*/
    ;
    FK0EW00.FK0EW-NXTMTL-IDX = FK0EW00.FK0EW-NXTMTL-IDX + 1; /* Increment*/
    ;
    FK0EM410.FK-VEND-CD = FKWREC.FK-VEND-CD[FK0EW-NXTMTL-IDX]; /* Vendor*/
    FK0EM410.FK-MAT-NBR = FKWREC.FK-MAT-NBR[FK0EW-NXTMTL-IDX]; /* Material*/
    FK0EM410.XMG-COLR-GRP-CD = FKWREC.XMG-COLR-GRP-CD[FK0EW-NXTMTL-IDX]; /* Color group*/
    FK0EM410.XCLCD = FKWREC.XCLCD[FK0EW-NXTMTL-IDX]; /* Color*/
    ;
    FK0EW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* exit to display the map*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EM410.FK-VEND-CD != FK0EW01.FK-VEND-CD           /* If vendor changed*/
   || FK0EM410.FK-MAT-NBR != FK0EW01.FK-MAT-NBR           /* or mtrl*/
   || FK0EM410.XMG-COLR-GRP-CD != FK0EW01.XMG-COLR-GRP-CD /* or clr grp*/
   || FK0EM410.XCLCD != FK0EW01.XCLCD)                    /* or color*/
    ;
    FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset confirm to no*/
    FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end
  ;
   /* --------------------------------------------------------------------*/
   /* Every delete must be confirmed.  If the confirm delete switch = 'n',*/
   /* set it = 'y' and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-CONFIRM-DELETE-SW == "N") /* If delete not confirmed*/
    ;
    FK0EW00.FK0EW-CONFIRM-DELETE-SW = "Y"; /* Confirm it*/
    FKWREC.XXX-MOD-ID = "4600"; /* Module identification*/
    converseLib.validationFailed(38); /* Enter to delete, PA2 to cancel*/
    return; /* Exit to display map*/
  end
  ;
   /* --------------------------------------------------------------------*/
   /* Check to see which records need to be deleted and delete them.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-CONFIRM-DELETE-SW == "Y") /* Delete has been confirmed*/
    ;
    FK0E-4650(); /* Check for usage records*/
    FK0E-4660(); /* Check for fcty inventory records*/
    FK0E-4670(); /* Check for vend inventory records*/
    FK0E-4680(); /* Check for whse inventory records*/
    FK0E-4690(); /* Check for fcty/vendor p.o. records*/
    ;
    if (FK0EM410.XMG-COLR-GRP-CD == " "
     && FK0EM410.XCLCD == " ") /* If deleting material*/
      FK0ES-01(); /* Check for material group records*/
    end
    ;
    ;
    XX0XS01(); /* Get current date and time*/
    ;
    ;
    FK0EW00.FK0EW-UPDT-PERFORMED-SW = "N"; /* Update performed switch*/
    ;
    FK0E-4610(); /* Delete color record(s)*/
    ;
    if (FK0EM410.XCLCD == " ") /* If color group to be deleted*/
      FK0E-4620(); /* Delete color group record(s)*/
    end
    ;
    if (FK0EM410.XMG-COLR-GRP-CD == " ") /* If material to be deleted*/
      FK0E-4630(); /* Delete material record*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If successful updates occurred, update fk-nike-mgr-id in the*/
   /* dcmpnt.vvndr001 database.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-UPDT-PERFORMED-SW == "Y") /* Update performed switch*/
    ;
    FK0E-4640(); /* Update dcmpnt.vvndr001*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If updates occurred, update display storage and display message for*/
   /* successful update.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0EW00.FK0EW-UPDT-PERFORMED-SW == "Y") /* Update performed switch*/
    ;
    FK0E-4150(); /* Update display storage*/
    ;
    FK0EW00.FK0EW-FMAT-MAP-SW = "Y"; /* Format the data*/
    FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset confirm switch*/
    FKWREC.XXX-MOD-ID = "4600"; /* Module identification*/
    FKWREC.XXXMSGNO = 1; /* Update completed*/
    ;
  end
  ;
end // end FK0E-4600

// Delete DCMPNT.VMCOLR01
Function FK0E-4610()
   /* ------------------------------------------------------------*/
   /* Delete the requested row(s) from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty; /* Init record*/
  ;
  VMCOLR01.FK-MAT-NBR = FK0EM410.FK-MAT-NBR; /* Material nbr*/
  ;
  if (FK0EM410.XMG-COLR-GRP-CD == " ") /* Color group not entered*/
    VMCOLR01.XMG-COLR-GRP-CD = "*"; /* Wildcard color group*/
  else
    VMCOLR01.XMG-COLR-GRP-CD = FK0EM410.XMG-COLR-GRP-CD; /**/
  end
  ;
  if (FK0EM410.XCLCD == " ") /* Color not entered*/
    VMCOLR01.XCLCD = "*"; /* Wildcard color*/
  else
    VMCOLR01.XCLCD = FK0EM410.XCLCD; /* Color*/
  end
  ;
  ;
  try
    call "IO6210" ("D2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.XCLCD = " "; /* Init color*/
      ;
      FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "N"; /* Record found sw*/
      FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      ;
      if (FK0EM410.XCLCD == " ") /* Color code not entered*/
        ;
        FK0EW00.FK0EW-VMCOLR01-FOUND-SW = "N"; /* Record found sw*/
        FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
        ;
        return;
      else
        ;
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* Rollback all changes*/
        FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
        FKWREC.XXX-MOD-ID = "4610"; /* Module identification*/
        FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
        FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Get new data*/
        ;
        exit stack; /* Return to previous process*/
      end
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4610 DELETE DCMPNT.VMCOLR01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0EM410"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-4610

// Delete DCMPNT.VGROUP01
Function FK0E-4620()
   /* ------------------------------------------------------------*/
   /* Delete the requested row(s) from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  set VGROUP01 empty; /* Init record*/
  ;
  VGROUP01.FK-MAT-NBR = FK0EM410.FK-MAT-NBR; /* Material nbr*/
  ;
  if (FK0EM410.XMG-COLR-GRP-CD == " ") /* Color group not entered*/
    VGROUP01.XMG-COLR-GRP-CD = "*"; /* Wildcard color group*/
  else
    VGROUP01.XMG-COLR-GRP-CD = FK0EM410.XMG-COLR-GRP-CD; /**/
  end
  ;
  ;
  try
    call "IO6200" ("D2", SQLCA, VGROUP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.XMG-COLR-GRP-CD = " "; /* Init color group*/
      ;
      FK0EW00.FK0EW-VGROUP01-FOUND-SW = "N"; /* Record found sw*/
      FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      ;
      if (FK0EM410.XMG-COLR-GRP-CD == " ") /* If color group not entered*/
        ;
        FK0EW00.FK0EW-VGROUP01-FOUND-SW = "N"; /* Record found sw*/
        FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
        ;
        return;
      else
        ;
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* Rollback all changes*/
        FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
        FKWREC.XXX-MOD-ID = "4620"; /* Module identification*/
        FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
        FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Get new data*/
        ;
        exit stack; /* Return to previous process*/
      end
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4620 DELETE DCMPNT.VGROUP01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0EM410"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VGROUP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VGROUP01.VGROUP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-4620

// Delete DCMPNT.VMATRL01
Function FK0E-4630()
   /* ------------------------------------------------------------*/
   /* Delete the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty; /* Init record*/
  ;
  VMATRL01.FK-VEND-CD = FK0EM410.FK-VEND-CD; /* Vendor*/
  VMATRL01.FK-MAT-NBR = FK0EM410.FK-MAT-NBR; /* Material nbr*/
  ;
  ;
  try
    call "IO6190" ("D ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK-MAT-NBR = " "; /* Init material nbr*/
      ;
      FK0EW00.FK0EW-VMATRL01-FOUND-SW = "N"; /* Record found sw*/
      FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "4630"; /* Module identification*/
      FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
      FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      ;
      exit stack; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4630 DELETE DCMPNT.VMATRL01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0EM410"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-4630

// Update DCMPNT.VVNDR001
Function FK0E-4640()
   /* ------------------------------------------------------------*/
   /* Update the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  VVNDR001.FK-NIKE-MGR-ID = COMMAREA.CAUSERID; /* Last person to updt*/
  ;
  VVNDR001.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VVNDR001.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  try
    call "IO6180" ("U ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0EW00.FK0EW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "4640"; /* Module identification*/
      FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
      FK0EW00.FK0EW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      ;
      exit stack; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4640"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4640 UPDATE DCMPNT.VVNDR001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0EM410"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-4640

// Check DCMPNT.VMUSGE01 records
Function FK0E-4650()
   /* ------------------------------------------------------------*/
   /* Perform a select count on the dcmpnt.vmusge01 table to make*/
   /* sure no usage records exists for data to be deleted.*/
   /* ------------------------------------------------------------*/
  ;
  set VMUSGE01 empty; /* Initialize*/
  ;
  VMUSGE01.FK-MAT-NBR = FK0EM410.FK-MAT-NBR; /* Material*/
  ;
  if (FK0EM410.XMG-COLR-GRP-CD == " ") /* If color group not entered*/
    VMUSGE01.XMG-COLR-GRP-CD = "*"; /* Wildcard*/
  else
    VMUSGE01.XMG-COLR-GRP-CD = FK0EM410.XMG-COLR-GRP-CD; /* Colr grp*/
  end
  ;
  if (FK0EM410.XCLCD == " ") /* If color entered*/
    VMUSGE01.XCLCD = "*"; /* Wildcard*/
  else
    VMUSGE01.XCLCD = FK0EM410.XCLCD; /* Color*/
  end
  ;
  ;
  ;
  set FK0EW03 empty; /* Passed parameter record to io6240*/
  ;
  FK0EW03.FK0EW-FUNCTION = "SC"; /* Select count*/
  ;
  try
    call "IO6240" (FK0EW03, SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/
    ;
    if (FK0EW03.FK0EW-SUM > 0) /* If usage records found*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      converseLib.validationFailed(65); /* Cannot delete - usage recs exist*/
      FKWREC.XXX-MOD-ID = "4650"; /* Module identification*/
      exit stack;
    else
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FKWREC.XXX-MOD-ID = "4650"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4650 CHECK DCMPNT.VMUSGE01 RECS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-4650

// Check DCMPNT.VVFYINV1 records
Function FK0E-4660()
   /* ------------------------------------------------------------*/
   /* Perform a select count on the dcmpnt.vfyinv01 table to make*/
   /* sure no records exist for data to be deleted.*/
   /* ------------------------------------------------------------*/
  ;
  set VFYINV01 empty; /* Initialize*/
  ;
  VFYINV01.FK-MAT-NBR = FK0EM410.FK-MAT-NBR; /* Material*/
  ;
  if (FK0EM410.XMG-COLR-GRP-CD == " ") /* If color group not entered*/
    VFYINV01.XMG-COLR-GRP-CD = "*"; /* Wildcard*/
  else
    VFYINV01.XMG-COLR-GRP-CD = FK0EM410.XMG-COLR-GRP-CD; /* Colr grp*/
  end
  ;
  if (FK0EM410.XCLCD == " ") /* If color entered*/
    VFYINV01.XCLCD = "*"; /* Wildcard*/
  else
    VFYINV01.XCLCD = FK0EM410.XCLCD; /* Color*/
  end
  ;
  ;
  try
    call "IO6790" ("SE", SQLCA, VFYINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      converseLib.validationFailed(157); /* Cannot delete - fcty inv recs exist*/
      FKWREC.XXX-MOD-ID = "4660"; /* Module identification*/
      exit stack;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FKWREC.XXX-MOD-ID = "4660"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4660 CHECK DCMPNT.VFYINV01 RECS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFYINV01.VFYINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-4660

// Check DCMPNT.VVNINV01 records
Function FK0E-4670()
   /* ------------------------------------------------------------*/
   /* Perform a select count on the dcmpnt.vvninv01 table to make*/
   /* sure no records exist for data to be deleted.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNINV01 empty; /* Initialize*/
  ;
  VVNINV01.FK-MAT-NBR = FK0EM410.FK-MAT-NBR; /* Material*/
  ;
  if (FK0EM410.XMG-COLR-GRP-CD == " ") /* If color group not entered*/
    VVNINV01.XMG-COLR-GRP-CD = "*"; /* Wildcard*/
  else
    VVNINV01.XMG-COLR-GRP-CD = FK0EM410.XMG-COLR-GRP-CD; /* Colr grp*/
  end
  ;
  if (FK0EM410.XCLCD == " ") /* If color entered*/
    VVNINV01.XCLCD = "*"; /* Wildcard*/
  else
    VVNINV01.XCLCD = FK0EM410.XCLCD; /* Color*/
  end
  ;
  ;
  try
    call "IO6800" ("SE", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      converseLib.validationFailed(158); /* Cannot delete - vend inv recs exist*/
      FKWREC.XXX-MOD-ID = "4670"; /* Module identification*/
      exit stack;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FKWREC.XXX-MOD-ID = "4670"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4670 CHECK DCMPNT.VVNINV01 RECS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-4670

// Check DCMPNT.VMATWH01 records
Function FK0E-4680()
   /* ------------------------------------------------------------*/
   /* Perform a select count on the dcmpnt.vwhinv01 table to make*/
   /* sure no records exist for data to be deleted.*/
   /* ------------------------------------------------------------*/
  ;
  set VWHINV01 empty; /* Initialize*/
  ;
  VWHINV01.FK-MAT-NBR = FK0EM410.FK-MAT-NBR; /* Material*/
  ;
  if (FK0EM410.XMG-COLR-GRP-CD == " ") /* If color group not entered*/
    VWHINV01.XMG-COLR-GRP-CD = "*"; /* Wildcard*/
  else
    VWHINV01.XMG-COLR-GRP-CD = FK0EM410.XMG-COLR-GRP-CD; /* Colr grp*/
  end
  ;
  if (FK0EM410.XCLCD == " ") /* If color entered*/
    VWHINV01.XCLCD = "*"; /* Wildcard*/
  else
    VWHINV01.XCLCD = FK0EM410.XCLCD; /* Color*/
  end
  ;
  ;
  try
    call "IO6810" ("SE", SQLCA, VWHINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      converseLib.validationFailed(159); /* Cannot delete - whse inv recs exist*/
      FKWREC.XXX-MOD-ID = "4680"; /* Module identification*/
      exit stack;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FKWREC.XXX-MOD-ID = "4680"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4680 CHECK DCMPNT.VWHINV01 RECS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VWHINV01.VWHINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-4680

// Check DCMPNT.VFVITM01 records
Function FK0E-4690()
   /* ------------------------------------------------------------*/
   /* Perform a select count on the dcmpnt.vfvitm01 table to make*/
   /* sure no records exist for data to be deleted.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVITM01 empty; /* Initialize*/
  ;
  VFVITM01.FK-MAT-NBR = FK0EM410.FK-MAT-NBR; /* Material*/
  ;
  if (FK0EM410.XMG-COLR-GRP-CD == " ") /* If color group not entered*/
    VFVITM01.XMG-COLR-GRP-CD = "*"; /* Wildcard*/
  else
    VFVITM01.XMG-COLR-GRP-CD = FK0EM410.XMG-COLR-GRP-CD; /* Colr grp*/
  end
  ;
  if (FK0EM410.XCLCD == " ") /* If color entered*/
    VFVITM01.XCLCD = "*"; /* Wildcard*/
  else
    VFVITM01.XCLCD = FK0EM410.XCLCD; /* Color*/
  end
  ;
  ;
  try
    call "IO6830" ("SE", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      converseLib.validationFailed(160); /* Cannot delete - whse inv recs exist*/
      FKWREC.XXX-MOD-ID = "4690"; /* Module identification*/
      exit stack;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FKWREC.XXX-MOD-ID = "4690"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4690 CHECK DCMPNT.VFVITM01 RECS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0E-4690

// Check DCMPNT.VMGMAT01 records
Function FK0ES-01()
   /* ------------------------------------------------------------*/
   /* Perform a select count on the dcmpnt.vmgmat01 table to make*/
   /* sure no records exist for data to be deleted.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGMAT01 empty; /* Initialize*/
  ;
  VMGMAT01.FK-MAT-NBR = FK0EM410.FK-MAT-NBR; /* Material*/
  ;
  ;
  try
    call "IO6880" ("SE", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      converseLib.validationFailed(161); /* Cannot delete - mat part of mat grp*/
      FKWREC.XXX-MOD-ID = "S-01"; /* Module identification*/
      exit stack;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FKWREC.XXX-MOD-ID = "S-01"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "S-01 CHECK DCMPNT.VMGMAT01 RECS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0EW00.FK0EW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0ES-01

// converse pop up window
Function XPXTM01()
   /* ------------------------------------------------------------*/
  ;
              /* CONVERSE POP UP WINDOW*/
  ;
      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/
  ;
   /* ------------------------------------------------------------*/
  ;
   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/
  ;
  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/
    ;
     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/
    ;
    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end
    ;
    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "              SELECT & ENTER          ";
    XX0XM001.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";
    ;
     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/
    ;
    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && XTMTBL.XTM-MAT-THCK-CD[XX0XWCT1] != "99") /* Or end of data*/
        if (XTMTBL.XXXSTAT[XX0XWCT1] == "A") /* If active status on code*/
          XX0XM001.XX0XMCD[XX0XWCT2] = XTMTBL.XTM-MAT-THCK-CD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = XTMTBL.XTM-MAT-THCK-DESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
            XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
          end
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end
    ;
     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/
    ;
    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        if (XTMTBL.XXXSTAT[XX0XWCT1] == "A") /* If the status is active*/
          XX0XM001.XX0XMCD[XX0XWCT2] = XTMTBL.XTM-MAT-THCK-CD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = XTMTBL.XTM-MAT-THCK-DESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end
  ;
  ;
  converse XX0XM001 ;
  ;
  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/
  ;
     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/
  ;
  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end
  ;
    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/
  ;
  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && XTMTBL.XTM-MAT-THCK-CD[XX0XWCT1] == "99") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/
        ;
         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/
        ;
        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end
  ;
  ;
end // end XPXTM01

//*** RECORD=FK0EW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0EW00 type basicRecord
  10 FK0EW-MAP-SW FK0EW-MAP-SW ; 
  10 FK0EW-REQUEST-DATA-SW FK0EW-REQUEST-DATA-SW ; 
  10 FK0EW-FMAT-MAP-SW FK0EW-FMAT-MAP-SW ; 
  10 FK0EW-UPDT-PERFORMED-SW FK0EW-UPDT-PERFORMED-SW ; 
  10 FK0EW-CONFIRM-DELETE-SW FK0EW-CONFIRM-DELETE-SW ; 
  10 FK0EW-COPY-DATA-SW FK0EW-COPY-DATA-SW ; 
  10 FK0EW-VMCOLR01-FOUND-SW FK0EW-VMCOLR01-FOUND-SW ; 
  10 FK0EW-VGROUP01-FOUND-SW FK0EW-VGROUP01-FOUND-SW ; 
  10 FK0EW-VMATRL01-FOUND-SW FK0EW-VMATRL01-FOUND-SW ; 
  10 FK0EW-VVNDR001-FOUND-SW FK0EW-VVNDR001-FOUND-SW ; 
  10 FK0EW-VMCOLR01-COPIED-SW FK0EW-VMCOLR01-COPIED-SW ; 
  10 FK0EW-VGROUP01-COPIED-SW FK0EW-VGROUP01-COPIED-SW ; 
  10 FK0EW-VMATRL01-COPIED-SW FK0EW-VMATRL01-COPIED-SW ; 
  10 FK0EW-END-CURSOR-SW FK0EW-END-CURSOR-SW ; 
  10 FK0EW-MTRL-REC-SW FK0EW-MTRL-REC-SW ; 
  10 FK0EW-NXTMTL-IDX FK0EW-NXTMTL-IDX ; 
  10 FK0EW-IDX FK0EW-IDX ; 
  10 FK-VEND-CD FK-VEND-CD ; 
  10 FK-MAT-NBR FK-MAT-NBR ; 
  10 XMG-COLR-GRP-CD XMG-COLR-GRP-CD ; 
  10 XCLCD XCLCD ; 
  10 FK0EM-COPY-FK-MAT-NBR FK0EM-COPY-FK-MAT-NBR ; 
  10 FK0EM-COPY-XMG-COLR-GRP-CD FK0EM-COPY-XMG-COLR-GRP-CD ; 
  10 FK0EM-COPY-XCLCD FK0EM-COPY-XCLCD ; 
  10 VMATRL01-GROUP VMATRL01-GROUP ; 
  10 VGROUP01-GROUP VGROUP01-GROUP ; 
  10 VMCOLR01-GROUP VMCOLR01-GROUP ; 
end // end FK0EW00

//*** RECORD=FK0EW01 ****
// ----------------------------
// Application display storage.
// ----------------------------
// ***********************
Record FK0EW01 type basicRecord
  10 FK-VEND-CD FK-VEND-CD ; 
  10 FK-VEND-SNM FK-VEND-SNM ; 
  10 FK-MAT-NBR FK-MAT-NBR ; 
  10 FK-DEPT-MAT-DESC FK-DEPT-MAT-DESC ; 
  10 FK-NIKE-MGR-ID FK-NIKE-MGR-ID ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 XTM-MAT-THCK-CD XTM-MAT-THCK-CD ; 
  10 FK-VEND-MAT-DESC FK-VEND-MAT-DESC ; 
  10 FK-MKT-MAT-DESC FK-MKT-MAT-DESC ; 
  10 XMU-MAT-UOM-CD XMU-MAT-UOM-CD ; 
  10 FK-MAT-HOT-FL FK-MAT-HOT-FL ; 
  10 FK-MAT-CTRL-SHT FK-MAT-CTRL-SHT ; 
  10 XMCCD XMCCD ; 
  10 FK-MAT-TRAK-FL FK-MAT-TRAK-FL ; 
  10 FK-COMNT FK-COMNT ; 
  10 XMG-COLR-GRP-CD XMG-COLR-GRP-CD ; 
  10 FK-MAT-DOM-PRC FK-MAT-DOM-PRC ; 
  10 FK-MAT-FRGN-PRC FK-MAT-FRGN-PRC ; 
  10 XCLCD XCLCD ; 
  10 FK-VEND-COLR-DESC FK-VEND-COLR-DESC ; 
  10 FK-MAT-COLR-HOT-FL FK-MAT-COLR-HOT-FL ; 
end // end FK0EW01

//*** RECORD=FK0EW02 ****
// -----------------------------------------------------
// Application display storage -- holds 'copy from' data
// -----------------------------------------------------
// ***********************
Record FK0EW02 type basicRecord
  10 FK-VEND-CD FK-VEND-CD ; 
  10 FK-VEND-SNM FK-VEND-SNM ; 
  10 FK-MAT-NBR FK-MAT-NBR ; 
  10 FK-DEPT-MAT-DESC FK-DEPT-MAT-DESC ; 
  10 FK-NIKE-MGR-ID FK-NIKE-MGR-ID ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 XTM-MAT-THCK-CD XTM-MAT-THCK-CD ; 
  10 FK-VEND-MAT-DESC FK-VEND-MAT-DESC ; 
  10 FK-MKT-MAT-DESC FK-MKT-MAT-DESC ; 
  10 XMU-MAT-UOM-CD XMU-MAT-UOM-CD ; 
  10 FK-MAT-HOT-FL FK-MAT-HOT-FL ; 
  10 FK-MAT-CTRL-SHT FK-MAT-CTRL-SHT ; 
  10 XMCCD XMCCD ; 
  10 FK-MAT-TRAK-FL FK-MAT-TRAK-FL ; 
  10 FK-COMNT FK-COMNT ; 
  10 XMG-COLR-GRP-CD XMG-COLR-GRP-CD ; 
  10 FK-MAT-DOM-PRC FK-MAT-DOM-PRC ; 
  10 FK-MAT-FRGN-PRC FK-MAT-FRGN-PRC ; 
  10 XCLCD XCLCD ; 
  10 FK-VEND-COLR-DESC FK-VEND-COLR-DESC ; 
  10 FK-MAT-COLR-HOT-FL FK-MAT-COLR-HOT-FL ; 
  10 FK0EM-COPY-FK-MAT-NBR FK0EM-COPY-FK-MAT-NBR ; 
  10 FK0EM-COPY-XMG-COLR-GRP-CD FK0EM-COPY-XMG-COLR-GRP-CD ; 
  10 FK0EM-COPY-XCLCD FK0EM-COPY-XCLCD ; 
end // end FK0EW02

//*** RECORD=FK0EW03 ****
// This work area is the first argument that is passed in the
// CALL statement for module IO6240.
// It contains the function to be performed and one general
// use summary count field.  The count field is used in
// conjunction with the select count function.
// 
// 
//   DATE       NAME      COMMENT
// --------    ------     -------------------------------------
// 02/21/89    pmainw     Initial record creation.
// ***********************
Record FK0EW03 type basicRecord
  10 FK0EW-FUNCTION FK0EW-FUNCTION ; 
  10 FK0EW-SUM FK0EW-SUM ; 
end // end FK0EW03

// Copy fk-mat-nbr
DataItem FK0EM-COPY-FK-MAT-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Copy xclcd
DataItem FK0EM-COPY-XCLCD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Copy xmg-colr-grp-cd
DataItem FK0EM-COPY-XMG-COLR-GRP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Confirm the delete switch
DataItem FK0EW-CONFIRM-DELETE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Copy data switch
DataItem FK0EW-COPY-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of cursor switch
DataItem FK0EW-END-CURSOR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem FK0EW-FMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// I/O module function
DataItem FK0EW-FUNCTION char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Next material index
DataItem FK0EW-IDX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Map to be displayed switch
DataItem FK0EW-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Material record switch
DataItem FK0EW-MTRL-REC-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Next material index
DataItem FK0EW-NXTMTL-IDX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Request for data switch
DataItem FK0EW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Summary count 1
DataItem FK0EW-SUM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Update performed switch
DataItem FK0EW-UPDT-PERFORMED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Color grp table copied switch
DataItem FK0EW-VGROUP01-COPIED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Color group table found switch
DataItem FK0EW-VGROUP01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Material table copied switch
DataItem FK0EW-VMATRL01-COPIED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Material table found switch
DataItem FK0EW-VMATRL01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Mtrl color table copied switch
DataItem FK0EW-VMCOLR01-COPIED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Mtrl color table found switch
DataItem FK0EW-VMCOLR01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Vendor table found switch
DataItem FK0EW-VVNDR001-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

