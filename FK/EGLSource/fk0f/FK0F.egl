package fk0f;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFK001;
import corpcom3.XPXCL01;
import corpcom3.XPXMG01;
import corpcom3.XPXX001;
import corpcom4.XSFKS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XX1;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpx1.XCLCD;
import corpx1.XCLTBL;
import corpx1.XDMCD;
import corpx1.XMGTBL;
import corpx2.XMG-COLR-GRP-CD;
import corpx2.XTM-MAT-THCK-CD;
import corpz3.ZZZCHGCT;
import corpz3.ZZZSDT;
import fk.common.*;
import pg.common.PG2REC;
import pg.common.PG4REC;
import sy.common.SY1SSTNM;
import sy.common.SY1STNBR;
import sy.common.SY2CLRAB;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VMATRL01;
import vv.common.VMCOLR01;
import vv.common.VMUSGE01;
//*** PROGRAM=FK0F ****
// ------------------------------------------------------------
//                          FK0F
//    COMPONENTS FORECASTING  -  MATERIAL/STYLE MAINTENANCE
// 
// This application maintains rows on the Material Usage data-
// base(DCMPNT.VMUSGE01).  Users may inquire, add, change and
// delete rows throught the four maps included in this program.
// 
// Inquire Map - Map FK0FM110 is used to inquire upon material
//     usage data.  Users may select a material number, color
//     group code and colr, and have the appropriate data dis-
//     played on the map.  Users may select a row(s) of data
//     and pass it to another application via PF keys.
// 
// Add Map - FK0FM210 is used to add material usage records.
//     Users may enter new information to the map, and inserts
//     will be performed on the material usage table.
// 
// Change Map - FK0F310 is used to change information for a
//     material usage record(s).  Users may change information
//     on the map and updates will be performed on the material
//     usage table.
// 
// Delete Map - FK0F410 is used to delete material usage
//     records.  Users will be allowed to enter a material
//     number, color group code, and color code.  A list of
//     material  usge records will be displayed.  Users can
//     select one or more rows to delete, confirm the delete,
//     and  the rows will be deleted from the material usate
//     table.
// 
// Transfer from one FK0F map to another FK0F map is allowed
// only through fastpath.  Users may exit this application by
// using PF keys or FASTPATH, with the "OPTION" field available
// for use with any application.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      04/02/92  DFRANC  New application.
//          09/11/92  JALLE1  Add PF19 to application FK0Q.
// FK-002   10/13/92  JALLE1  Confirm entry before adding
//                            records using the add map (m210)
//          11/05/92  JALLE1  Fix style development color
//                            default on add screen so mfg pcts
//                            are calculated correctly.
//          12/07/92  JALLE1  Fix style development color
//                            default (again) on add screen.
// FK-018   02/26/93  JALLE1  Activate PFKeys to FK0G, FK0H.
//          12/16/93  JALLE1  Fix abend code.
//          08/28/95  MSMIT2  INVALID INDEX ON FK0FW01.ZZZCHGCT
//                            ON UPDATE TO VMUSGE01.  ROW NOT
//                            FOUND.
//          01/16/95  rmcafe  fix prob with manufacture pct
//                            being set to zero.
// 
// Y2KFIX   12/03/97  dbettr  regenerate application to pick
//                            up Y2K compliant Common Date
//                            routine XX0XS01.
// *********************
Program FK0F type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FK0FW00 FK0FW00; // record
  FK0FW01 FK0FW01; // record
  FK0FW02 FK0FW02; // record
  FK0FW03 FK0FW03; // record
  FKWREC FKWREC; // record
  PG2REC PG2REC; // record
  PG4REC PG4REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VMATRL01 VMATRL01; // record
  VMCOLR01 VMCOLR01; // record
  VMUSGE01 VMUSGE01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCLTBL; // table
  use XMGTBL; // table
  use FK0FM.FK0FM110,  // forms
      FK0FM.FK0FM210, 
      FK0FM.FK0FM310, 
      FK0FM.FK0FM410,
        FK0FM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FK0FM110 initial; /* M110 inquiry map input/output*/
    set FK0FM210 initial; /* M210 add map input/output*/
    set FK0FM310 initial; /* M310 Change map input/output*/
    set FK0FM410 initial; /* M410 delete map input/output*/
    set FK0FW00 empty; /* Working storage*/
    set FK0FW01 empty; /* Working storage*/
    set FK0FW02 empty; /* Working storage for temp stor*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    set XX0XW02 empty; /* POP up window area*/
    set VMUSGE01 empty; /* Material usage*/
    set VMATRL01 empty; /* Material*/
    set PG2REC empty; /* Production Product Style Color*/
    set PG4REC empty; /* Development Product Sytle Color*/
    ;
    FK0FW00.FK0FW-VMATRL01-FOUND-SW = "N"; /* Init to 'n'*/
    FK0FW00.FK0FW-VMUSGE01-FOUND-SW = "N"; /* Init to 'n'*/
    FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "N"; /* Init to 'n'*/
    FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "N"; /* Init to 'n'*/
    ;
    FK0FW00.FK0FW-FORMAT-MAP-SW = "Y"; /* Format map*/
    FK0FW00.FK0FW-CONFIRM-SW = "N"; /* Confirm switch*/
    ;
    FK0FW00.FK0FW-MAP-SWITCH = "1"; /* Map to be displayed switch*/
    ;
     /* ------------------------------------------------------------*/
     /* If data was passed in the COMMAREA, use as the initial key.*/
     /* ------------------------------------------------------------*/
    ;
    if (FKWREC.FKW-UPDATE-FUNCTION == "A") /* add requested*/
      ;
      FK0FW00.FK0FW-MAP-SWITCH = "2";
      ;
      if (FKWREC.FK-MAT-NBR[1] > " "
       || FKWREC.XMG-COLR-GRP-CD[1] > " "
       || FKWREC.XCLCD[1] > " ")
        ;
        FK0FM210.FK-MAT-NBR = FKWREC.FK-MAT-NBR[1]; /* Material nbr*/
        FK0FM210.XMG-COLR-GRP-CD = FKWREC.XMG-COLR-GRP-CD[1];
        FK0FM210.XCLCD = FKWREC.XCLCD[1]; /* Color code*/
        ;
        FK0FW00.FK0FW-REQUEST-DATA-SW = "Y";
        ;
      else
        ;
        FK0FW00.FK0FW-REQUEST-DATA-SW = "N";
        ;
      end
      ;
    else
      if (FKWREC.FKW-UPDATE-FUNCTION == "C") /* add requested*/
        ;
        FK0FW00.FK0FW-MAP-SWITCH = "3";
        ;
        if (FKWREC.FK-MAT-NBR > " "
         || FKWREC.XMG-COLR-GRP-CD[1] > " "
         || FKWREC.XCLCD[1] > " ")
          ;
          FK0FM310.FK-MAT-NBR = FKWREC.FK-MAT-NBR[1]; /* Material number*/
          FK0FM310.XMG-COLR-GRP-CD = FKWREC.XMG-COLR-GRP-CD[1]; /* Color group code*/
          FK0FM310.XCLCD = FKWREC.XCLCD[1]; /* Color code*/
          ;
          FK0FW00.FK0FW-REQUEST-DATA-SW = "Y";
          ;
        else
          ;
          FK0FW00.FK0FW-REQUEST-DATA-SW = "N";
          ;
        end
        ;
      else
        ;
        if (FKWREC.FKW-UPDATE-FUNCTION == "D") /* delete requested*/
          ;
          FK0FW00.FK0FW-MAP-SWITCH = "4";
          ;
          if (FKWREC.FK-MAT-NBR > " "
           || FKWREC.XMG-COLR-GRP-CD[1] > " "
           || FKWREC.XCLCD[1] > " ")
            ;
            FK0FM410.FK-MAT-NBR = FKWREC.FK-MAT-NBR[1]; /* Material number*/
            FK0FM410.XMG-COLR-GRP-CD = FKWREC.XMG-COLR-GRP-CD[1]; /* Color group code*/
            FK0FM410.XCLCD = FKWREC.XCLCD[1]; /* Color code*/
            ;
            FK0FW00.FK0FW-REQUEST-DATA-SW = "Y";
            ;
          else
            ;
            FK0FW00.FK0FW-REQUEST-DATA-SW = "N";
            ;
          end
          ;
        else
          ;
          FK0FW00.FK0FW-MAP-SWITCH = "1";
          ;
          if (FKWREC.FK-MAT-NBR[1] > " "
           || FKWREC.XMG-COLR-GRP-CD[1] > " "
           || FKWREC.XCLCD[1] > " ")
            ;
            FK0FM110.FK-MAT-NBR = FKWREC.FK-MAT-NBR[1]; /* Material number*/
            FK0FM110.XMG-COLR-GRP-CD = FKWREC.XMG-COLR-GRP-CD[1]; /* Color group code*/
            FK0FM110.XCLCD = FKWREC.XCLCD[1]; /* Color code*/
            ;
            FK0FW00.FK0FW-REQUEST-DATA-SW = "Y";
            ;
          else
            ;
            FK0FW00.FK0FW-REQUEST-DATA-SW = "N";
            ;
          end
          ;
        end
        ;
      end
      ;
    end
    ;
    FKWREC.FKW-UPDATE-FUNCTION = " "; /* Clear passed data*/
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0F-0001; /* Converse the main process*/
    ;
    ;
    FK0F-0001: FK0F-0001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0F-0001; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FK0F

// Main process to display a map
Function FK0F-0001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the first map.*/
   /* 2) Otherwise, if specified, display the second map.*/
   /* 3) Otherwise, if specified, display the third map.*/
   /* 4) Otherwise, if specified, display the fourth map.*/
   /* 5) Otherwise, indicate error and exit to Application Menu.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-MAP-SWITCH == "1") /* Map 1 was requested*/
    ;
    FK0F-1000(); /* Display map 1 (Inquiry)*/
    ;
  else
    ;
    if (FK0FW00.FK0FW-MAP-SWITCH == "2") /* Map 2 was requested*/
      ;
      FK0F-2000(); /* Display map 2 (Add)*/
      ;
    else
      ;
      if (FK0FW00.FK0FW-MAP-SWITCH == "3") /* Map 3 was requested*/
        ;
        FK0F-3000(); /* Display map 3 (Change)*/
        ;
      else
        ;
        if (FK0FW00.FK0FW-MAP-SWITCH == "4") /* Map 4 requested*/
          ;
          FK0F-4000(); /* Display map 4 (Delete)*/
          ;
        else
          ;
              /* --------------------------------------------------------*/
               /* Write error to the Error Diagnosis Reporting Facility*/
              /* --------------------------------------------------------*/
          ;
          FKWREC.XXX-MOD-ID = "001"; /* Module identification*/
          FKWREC.XXXMSGNO = 10; /* Unexpected error occurred*/
          ;
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
          TA1REC.TA1TYPE = "APPL"; /* Type of error*/
          TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";
          TA1REC.TA1MAPNO = FK0FW00.FK0FW-MAP-SWITCH; /* Map nbr*/
          TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program  appl*/
          TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
          ;
          call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
          ;
              /* ---------------------------------------------------------*/
               /* Exit to display the application system menu.*/
              /* --------------------------------------------------------*/
          ;
          COMMAREA.CATOAP = "FK0B"; /* TO application*/
          ;
          XSFKS01(); /* Exit to another application*/
          ;
              /* ---------------------------------------------------------*/
               /* Abnormally terminate the transaction if the exit failed.*/
              /* ---------------------------------------------------------*/
          ;
          TA1REC.TA1FUNC = "ABND"; /* Termination function*/
          ;
          call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diag routine*/
          ;
        end
        ;
      end
      ;
    end
    ;
  end
  ;
end // end FK0F-0001

// Process inquiry map
Function FK0F-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0F-1100(); /* Obtain the data to display*/
  ;
  FK0F-1200(); /* Format and display the map*/
  ;
  FK0F-1300(); /* Check attention identifier*/
  ;
  FK0F-1400(); /* Reset fields to normal intensity*/
  ;
  FK0F-1500(); /* Verify the entered data*/
  ;
  FK0F-1600(); /* Process valid input request*/
  ;
  ;
end // end FK0F-1000

// Obtain data to display
Function FK0F-1100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-REQUEST-DATA-SW != "Y" /* data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FK0FW00.XXXTSPAG = 1;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key*/
   /* --------------------------------------------------------------*/
  ;
  FK0F-1105(); /* Purge temporary storage*/
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length*/
   /* --------------------------------------------------------------*/
  ;
  FK0FW00.XXXTSLEN = 1245; /* Temporary storage length*/
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be redisplayed on the map*/
   /* --------------------------------------------------------------*/
  ;
  set FK0FW01 empty; /* Initialize display storage*/
  ;
  FK0FW01.FK-MAT-NBR = FK0FM110.FK-MAT-NBR; /* Material number*/
  FK0FW01.XMG-COLR-GRP-CD = FK0FM110.XMG-COLR-GRP-CD; /* Colr grp*/
  FK0FW01.XCLCD = FK0FM110.XCLCD; /* Color code*/
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-VMATRL01-EOF-SW = "N"; /* Set end of file switch*/
  ;
  if (FK0FM110.FK-MAT-NBR > " ") /* If Material Number entered*/
    ;
    FK0F-1110(); /* Declare cursor for material table*/
                                 /* (DCMPNT.VMATRL01)*/
    FK0F-1111(); /* Fetch a row from material table*/
                                 /* (DCMPNT.VMATRL01)*/
    FK0F-1115(); /* Close a cursor for material table*/
                                 /* (DCMPNT.VMATRL01)*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Declare and open the cursor for the Material Usage table*/
   /* --------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-VMUSGE01-EOF-SW = "N"; /* Set end of file switch*/
  FK0FW00.FK0FW-IDX = 1; /* Reset display line index*/
  ;
  FK0F-1120(); /* Open Material Usage file*/
                                  /* (DCMPNT.VMUSGE01)*/
  ;
  FK0F-1121(); /* Read next record*/
                                  /* (DCMPNT.VMUSGE01)*/
  ;
  if (FK0FW00.FK0FW-VMUSGE01-EOF-SW == "Y")
    ;
    FKWREC.XXXMSGNO = 15; /* No row on table with this key*/
    FKWREC.XXX-MOD-ID = "1100"; /* Module id*/
    FK0FW00.FK0FW-REQUEST-DATA-SW = "N";
    FK0FW00.FK0FW-FORMAT-MAP-SW = "Y";
    exit stack;
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Loop and load Material usage data to temporary storage*/
   /* --------------------------------------------------------------*/
  ;
  while (FK0FW00.FK0FW-VMUSGE01-EOF-SW != "Y") /* If material usage not eof*/
    ;
    FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "N";
    FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "N";
    ;
    FK0F-1130(); /* Select style product data*/
                                  /* (DCMPNT.VSYCLR01)*/
    if (FK0FW00.FK0FW-VSYCLR01-FOUND-SW == "N") /* Production style not found*/
      FK0F-1140(); /* Select development style product data*/
                                  /* (DCMPNT.VSYDVL01)*/
    end
    ;
    FK0F-1150(); /* Determine usage, yield and save info*/
                                  /* in temporary storage*/
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment index*/
    ;
    if (FK0FW00.FK0FW-IDX > 15)
      ;
      FK0F-1160(); /* Update temporary storage*/
      FK0FW00.FK0FW-IDX = 1; /* Reset line count*/
      ;
    end
    ;
    FK0F-1121(); /* Read next record*/
                                     /* (DCMPNT.VMUSGE01)*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Add any partially formatted page into temporary storage*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-IDX > 1)
    ;
    FK0F-1160(); /* Add page to temporary storage*/
    FK0FW00.FK0FW-IDX = 1;
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Close Material Cursor*/
   /* --------------------------------------------------------------*/
  ;
  FK0F-1125(); /* Close Material Usage file*/
                                  /* (DCMPNT.VMUSGE01)*/
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-REQUEST-DATA-SW = "N";
  FK0FW00.FK0FW-FORMAT-MAP-SW = "Y";
  ;
end // end FK0F-1100

// Purge any temporary storage
Function FK0F-1105()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0FW02 empty; /* M110 display storage*/
  ;
  FK0FW00.FK0FW-UPDATE-SW = "N"; /* Storage update switch*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FK0FW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FK0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1105"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END OF FK0F-1105 -----------------------------*/
end // end FK0F-1105

// Open cursor (DCMPNT.VMATRL01)
Function FK0F-1110()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FK0FM110.FK-MAT-NBR; /* Material number*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6190" ("S2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1110 OPEN MATERIAL CURSOR       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.FK-MAT-NBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-1110

// Fetch cursor (DCMPNT.VMATRL01)
Function FK0F-1111()
   /* ------------------------------------------------------------*/
   /* Read in the row requested from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6190" ("N2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Material not found*/
      ;
      converseLib.validationFailed(26); /* Material number not found*/
      set FK0FM110.FK-MAT-NBR bold, cursor;
      FKWREC.XXX-MOD-ID = "1111"; /* Module id*/
      ;
      return; /* Return to display the map*/
      ;
    else
      ;
      if (SQLCA.VAGen_SQLCODE == 0) /* Material found*/
        return;
      end
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1111"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1111 GET MATERIAL DATA          ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.FK-MAT-NBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-1111

// Close cursor (DCMPNT.VMATRL01)
Function FK0F-1115()
   /* ------------------------------------------------------------*/
   /* Close the cursor*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6190" ("C2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1115"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1115 CLOSE CURSOR               ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-1115

// Open DCMPNT.VMUSGE01
Function FK0F-1120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMUSGE01 empty;
  ;
  VMUSGE01.FK-MAT-NBR = FK0FW01.FK-MAT-NBR; /* Material number*/
  VMUSGE01.XMG-COLR-GRP-CD = FK0FW01.XMG-COLR-GRP-CD; /* Color grp*/
  VMUSGE01.XCLCD = FK0FW01.XCLCD; /* Color code*/
  ;
  try
    call "IO6240" ("S2", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1120 OPEN MATRL USAGE TBL";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-1120

// Read next DCMPNT.VMUSGE01
Function FK0F-1121()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the vmusge01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6240" ("N2", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VMUSGE01-EOF-SW = "Y"; /* End of file*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1121"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1121 READ MTRL USAGE DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-1121

// Close DCMPNT.VMUSGE01
Function FK0F-1125()
   /* ------------------------------------------------------------*/
   /* Close the VMUSEG01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6240" ("C2", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1125"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1125 CLOSE MTRL USAGE TABLE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-1125

// Select style (DPRODG.VSYCLR01)
Function FK0F-1130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = VMUSGE01.SY1STNBR; /* Style number*/
  PG2REC.SY2CLRID = VMUSGE01.SY2CLRID; /* Color id*/
  PG2REC.XDMCD = VMUSGE01.XDMCD; /* Dimension*/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "N";
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1130"; /* Module identification*/
  ;
  FK0FW00.FK0FW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1130 GET STYLE DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLRO1"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-1130

// Select style (DPRODG.VSYDVL01)
Function FK0F-1140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  PG4REC.PG4STNBR = VMUSGE01.SY1STNBR; /* Style number*/
  ;
  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "N";
      ;
      return;
      ;
    end
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1140"; /* Module identification*/
  ;
  FK0FW00.FK0FW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1140 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-1140

// Save row, Calc usage
Function FK0F-1150()
   /* ------------------------------------------------------------------*/
   /* Save valid key into temporary storage*/
   /* ------------------------------------------------------------------*/
  ;
  FK0FW02.FK-VEND-CD = VMATRL01.FK-VEND-CD; /* Vendor code*/
  FK0FW02.FK-MAT-NBR = VMATRL01.FK-MAT-NBR; /* Material number*/
  FK0FW02.XTM-MAT-THCK-CD = VMATRL01.XTM-MAT-THCK-CD; /* Thck cd*/
  FK0FW02.XMG-COLR-GRP-CD = VMUSGE01.XMG-COLR-GRP-CD; /* Color grp cd*/
  FK0FW02.XCLCD = VMUSGE01.XCLCD; /* Color code*/
  ;
  FK0FW02.SY1STNBR[FK0FW-IDX] = VMUSGE01.SY1STNBR; /* Style number*/
  FK0FW02.SY2CLRID[FK0FW-IDX] = VMUSGE01.SY2CLRID; /* Color id*/
  FK0FW02.XDMCD[FK0FW-IDX] = VMUSGE01.XDMCD; /* Dimension*/
  ;
  if (FK0FW00.FK0FW-VSYCLR01-FOUND-SW == "Y")
    ;
    FK0FW02.SY1SSTNM[FK0FW-IDX] = PG2REC.SY1SSTNM; /* Name*/
    FK0FW02.SY2CLRAB[FK0FW-IDX] = PG2REC.SY2CLRAB; /* Name*/
    ;
  else
    ;
    if (FK0FW00.FK0FW-VSYDVL01-FOUND-SW == "Y")
      ;
      FK0FW02.SY1SSTNM[FK0FW-IDX] = PG4REC.SY1SSTNM; /* Name*/
      ;
    else
      ;
      FK0FW02.SY1SSTNM[FK0FW-IDX] = "*NOT FOUND*"; /* Name*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine the Usage and P/F indicator for the product*/
   /* ------------------------------------------------------------*/
  ;
  if (VMUSGE01.FK-MAT-FINL-USE != 0)
    ;
    FK0FW02.FK0FW-USAGE[FK0FW-IDX] = VMUSGE01.FK-MAT-FINL-USE;
    FK0FW02.FK0FW-PF[FK0FW-IDX] = "F";
    ;
  else
    ;
    if (VMUSGE01.FK-MAT-PROD-USE != 0)
      ;
      FK0FW02.FK0FW-USAGE[FK0FW-IDX] = VMUSGE01.FK-MAT-PROD-USE;
      FK0FW02.FK0FW-PF[FK0FW-IDX] = "P";
      ;
    else
      ;
      if (VMUSGE01.FK-MAT-DEVL-USE != 0)
        ;
        FK0FW02.FK0FW-USAGE[FK0FW-IDX] = VMUSGE01.FK-MAT-DEVL-USE;
        FK0FW02.FK0FW-PF[FK0FW-IDX] = " ";
        ;
      end
      ;
    end
    ;
  end
  ;
  FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX] = VMUSGE01.FK-MAT-WAST-PCT;
  FK0FW02.FK-MAT-MFG-PCT[FK0FW-IDX] = VMUSGE01.FK-MAT-MFG-PCT;
  FK0FW02.ZZZSDT[FK0FW-IDX] = VMUSGE01.ZZZSDT;
  FK0FW02.ZZZCHGCT[FK0FW-IDX] = VMUSGE01.ZZZCHGCT;
  ;
   /* ------------------------------------------------------------------*/
   /* Yield calculation*/
   /* ------------------------------------------------------------------*/
  ;
  FK0FW02.FK0FW-YIELD[FK0FW-IDX] = FK0FW02.FK0FW-USAGE[FK0FW-IDX] -   FK0FW02.FK0FW-USAGE[FK0FW-IDX] * FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX];
  ;
  ;
end // end FK0F-1150

// Add page to temporary storage
Function FK0F-1160()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW02.XXXTSLEN = FK0FW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FK0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FK0FW02 empty; /* M001 display storage*/
    ;
    FK0FW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1160"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END OF FK0F-1160 ------------------------------*/
end // end FK0F-1160

// Format and converse map
Function FK0F-1200()
   /* -------------------------------------------------------------*/
   /* If an error was found, save the error message number*/
   /* -------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
   /* -------------------------------------------------------------*/
   /* If obtain data failed or no error, format data to display*/
   /* -------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-REQUEST-DATA-SW == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0)   /* or no error found*/
    ;
    if (FK0FW00.FK0FW-FORMAT-MAP-SW == "Y") /* Map must be formatted*/
      FK0F-1210(); /* Format the data on the map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Protect select fields where no data is present.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0FW00.FK0FW-IDX <= 15) /* Until screen is processed*/
    ;
    if (FK0FW02.SY1STNBR[FK0FW-IDX] <= " ")
      set FK0FM110.FK0FM-SEL[FK0FW-IDX] invisible, skip;
      set FK0FM110.FK0FM-USAGE[FK0FW-IDX] invisible, skip;
      set FK0FM110.FK0FM-YIELD[FK0FW-IDX] invisible, skip;
      set FK0FM110.FK-MAT-WAST-PCT[FK0FW-IDX] invisible, skip;
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment line index*/
    else
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment line index*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0FM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0FM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0FM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0FM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
    ;
    set FK0FM110 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse FK0FM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0FM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0FM110.CAITEM; /* Application data*/
  ;
end // end FK0F-1200

// Format the display data
Function FK0F-1210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0FM110 initial; /* M110 input/output area*/
  ;
  FK0FW00.FK0FW-FORMAT-MAP-SW = "N"; /* Format the map switch*/
  ;
   /* ------------------------------------------------------------*/
   /* If the current page has been changed, update the page in*/
   /* storage before obtaining the next one to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FK0FW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
        /* --------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* --------------------------------------------------------*/
      ;
      if (FK0FW00.FK0FW-UPDATE-SW == "Y") /* Current page was changed*/
        ;
        FK0FS-01(); /* Update temp storage page*/
        ;
        FK0FW00.FK0FW-UPDATE-SW = "N"; /* Reset storage switch*/
        ;
      end
      ;
        /* --------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* --------------------------------------------------------*/
      ;
      if (FK0FW00.XXXTSPAG > FK0FW00.TA5TSQIX)
        ;
        FK0FW00.XXXTSPAG = FK0FW00.TA5TSQIX; /* Default to highest*/
        ;
      end
      ;
      FK0FS-02(); /* Obtain temp storage page*/
      ;
    end
    ;
     /* --------------------------------------------------------*/
     /* Display the page information on the screen.*/
     /* --------------------------------------------------------*/
    ;
    set FK0FM110.XXXLITPG skip; /* "PAGE" literal*/
    FK0FM110.XXXTSPAG = FK0FW00.XXXTSPAG; /* Current page*/
    set FK0FM110.XXXLITOF skip; /* "OF" literal*/
    FK0FM110.TA5TSQIX = FK0FW00.TA5TSQIX; /* Highest page*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW02.FK-MAT-NBR <= " ") /* Material NBR not present*/
    set FK0FM110.FK-MAT-NBR cursor; /* Position cursor*/
  end
  ;
  FK0FM110.FK-VEND-CD = FK0FW02.FK-VEND-CD; /* Vendor code*/
  FK0FM110.FK-MAT-NBR = FK0FW01.FK-MAT-NBR; /* Style number*/
  FK0FM110.XTM-MAT-THCK-CD = FK0FW02.XTM-MAT-THCK-CD; /* Thickness cd*/
  FK0FM110.XMG-COLR-GRP-CD = FK0FW01.XMG-COLR-GRP-CD; /* Color Grp cd*/
  FK0FM110.XCLCD = FK0FW01.XCLCD; /* Color code*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0FW00.FK0FW-IDX <= 15) /* Until screen is full*/
    ;
    FK0FM110.FK0FM-SEL[FK0FW-IDX] = FK0FW02.FK0FW-SEL[FK0FW-IDX];
    FK0FM110.SY1STNBR[FK0FW-IDX] = FK0FW02.SY1STNBR[FK0FW-IDX];
    FK0FM110.SY2CLRID[FK0FW-IDX] = FK0FW02.SY2CLRID[FK0FW-IDX];
    FK0FM110.XDMCD[FK0FW-IDX] = FK0FW02.XDMCD[FK0FW-IDX];
    FK0FM110.SY1SSTNM[FK0FW-IDX] = FK0FW02.SY1SSTNM[FK0FW-IDX];
    FK0FM110.SY2CLRAB[FK0FW-IDX] = FK0FW02.SY2CLRAB[FK0FW-IDX];
    FK0FM110.FK0FM-USAGE[FK0FW-IDX] = FK0FW02.FK0FW-USAGE[FK0FW-IDX];
    FK0FM110.FK0FM-PF[FK0FW-IDX] = FK0FW02.FK0FW-PF[FK0FW-IDX];
    FK0FM110.FK-MAT-WAST-PCT[FK0FW-IDX] = FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX];
    FK0FM110.FK0FM-YIELD[FK0FW-IDX] = FK0FW02.FK0FW-YIELD[FK0FW-IDX];
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
end // end FK0F-1210

// Check attention identifier
Function FK0F-1300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize FKWREC*/
    FKWREC.FK-MAT-NBR[1] = FK0FW01.FK-MAT-NBR; /* Material nuber*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0FW01.XMG-COLR-GRP-CD; /* Colr grp*/
    FKWREC.XCLCD[1] = FK0FW01.XCLCD; /* Color cd*/
    ;
    COMMAREA.CATOAP = "FK0F"; /* to applicaiton*/
    COMMAREA.CAITEM = "I   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0FM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      FK0F-1105(); /* Purge temporary storage*/
      ;
      set FKWREC empty; /* Initialize FKWREC*/
      ;
      FKWREC.FK-VEND-CD[1] = FK0FM110.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-NBR[1] = FK0FM110.FK-MAT-NBR; /* Material*/
      FKWREC.XMG-COLR-GRP-CD[1] = FK0FM110.XMG-COLR-GRP-CD;
      FKWREC.XCLCD[1] = FK0FM110.XCLCD;
      ;
      COMMAREA.CATOAP = FK0FM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0FM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0FM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0FM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = FK0FM110.CAITEM; /* item*/
      ;
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0FM110.CAITEM; /* item*/
      ;
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* Scroll Back requested*/
   && converseVar.eventKey not pf8   /* Scroll Forward requested*/
   && converseVar.eventKey not pf12  /* FK0E (MTRL) requested*/
   && converseVar.eventKey not pf14  /* FK0G (CONT) requested*/
   && converseVar.eventKey not pf15  /* FK0H (CLST) requested*/
   && converseVar.eventKey not pf16  /* FK0M (STYM) requested*/
   && converseVar.eventKey not pf19) /* FK0Q (MCLR) requested*/
    ;
    FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
end // end FK0F-1300

// Reset highlighted fields
Function FK0F-1400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0FM110.FK-MAT-NBR initialAttributes; /* Style number*/
  set FK0FM110.XTM-MAT-THCK-CD initialAttributes; /* Thickness code*/
  set FK0FM110.XMG-COLR-GRP-CD initialAttributes; /* Color group*/
  set FK0FM110.XCLCD initialAttributes; /* Color code*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0FW00.FK0FW-IDX <= 15 /* Until end of lines*/
   && FK0FM110.FK-MAT-NBR > " ") /* or end of display*/
    ;
    set FK0FM110.FK0FM-SEL[FK0FW-IDX] normal; /* Reset select flag*/
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
  set FK0FM110.CATOAP initialAttributes; /* TO application*/
  set FK0FM110.CAITEM initialAttributes; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* Display color group list if requested*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM110.XMG-COLR-GRP-CD == "?") /* Color group list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      FKWREC.XXX-MOD-ID = "1400"; /* Module id*/
      converseLib.validationFailed(19); /* PA/PF key may not be used*/
      exit stack; /* Exit to display map*/
    else
      ;
      XPXX001(); /* Window initialization*/
      ;
      XX0XW02.XX0XWHDR = "COLOR GROUP"; /* Heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* Until end of display*/
        ;
        XPXMG01(); /* Display color group list*/
        ;
      end
      ;
      if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
        FK0FM110.XMG-COLR-GRP-CD = " "; /* Restore prior code*/
      else
        FK0FM110.XMG-COLR-GRP-CD = XMGTBL.XMG-COLR-GRP-CD[XX0XWPIX];
      end
      ;
      set FK0FM110.XMG-COLR-GRP-CD cursor; /* Establish cursor position*/
      ;
    end
    ;
     /* ------------------------------------------------------------*/
     /* Indicate the requested list has been displayed and that ENTER*/
     /* must be pressed to process any changes.*/
     /* ------------------------------------------------------------*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
    FKWREC.XXX-MOD-ID = "1400"; /* Module id*/
    converseLib.validationFailed(20); /* Corporate list displayed*/
    ;
    exit stack;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Display color list if requested*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM110.XCLCD == "?") /* Color cd list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      FKWREC.XXX-MOD-ID = "1400"; /* Module id*/
      converseLib.validationFailed(19); /* PA/PF key may not be used*/
      exit stack; /* Exit to display map*/
    else
      ;
      XPXX001(); /* Window initialization*/
      ;
      XX0XW02.XX0XWHDR = "COLOR CODE"; /* Heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* Until end of display*/
        ;
        XPXCL01(); /* Display color list*/
        ;
      end
      ;
      if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
        FK0FM110.XCLCD = " "; /* Restore prior code*/
      else
        FK0FM110.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
      end
      ;
      set FK0FM110.XCLCD cursor; /* Establish cursor position*/
      ;
    end
    ;
     /* ------------------------------------------------------------*/
     /* Indicate the requested list has been displayed and that ENTER*/
     /* must be pressed to process any changes.*/
     /* ------------------------------------------------------------*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
    FKWREC.XXX-MOD-ID = "1400"; /* Module id*/
    converseLib.validationFailed(20); /* Corporate list displayed*/
    ;
  end
  ;
end // end FK0F-1400

// Verify data that was entered
Function FK0F-1500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM110.CAITEM > " ") /* Application data was entered*/
    if (converseVar.eventKey is pf12 /* FK0E selected*/
     || converseVar.eventKey is pf14 /* FK0G selected*/
     || converseVar.eventKey is pf15 /* FK0H selected*/
     || converseVar.eventKey is pf16 /* FK0M selected*/
     || converseVar.eventKey is pf19) /* FK0Q selected*/
         /* next sentence*/
    else
      FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
      set FK0FM110.CAITEM cursor, bold; /* Highlight*/
      converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    end
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Determine if a valid request to scroll was entered*/
   /* -----------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll up*/
   || converseVar.eventKey is pf8) /* Scroll down*/
    ;
    FK0F-1510(); /* Verify scroll request*/
    ;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Verify that the select fields contain either spaces or 'S'.*/
   /* -----------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-IDX = 15; /* Initialize line index*/
  ;
  while (FK0FW00.FK0FW-IDX > 0) /* Until end of lines*/
    ;
    if (FK0FM110.FK0FM-SEL[FK0FW-IDX] == "S" /* Select is S*/
     || FK0FM110.FK0FM-SEL[FK0FW-IDX] == " ") /* Select is spaces*/
      ;
        /* Next sentence*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
      converseLib.validationFailed(13); /* only 'S' may be entered*/
      set FK0FM110.FK0FM-SEL[FK0FW-IDX] cursor, bold; /* highlight*/
      ;
    end
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX - 1; /* Decrement line number*/
    ;
  end
  ;
  ;
   /* -----------------------------------------------------------------*/
   /* Verify Color code entered*/
   /* -----------------------------------------------------------------*/
  ;
  FK0F-1520();
  ;
   /* -----------------------------------------------------------------*/
   /* Verify Color group code entered*/
   /* -----------------------------------------------------------------*/
  ;
  FK0F-1530();
  ;
   /* -----------------------------------------------------------------*/
   /* Verify Material number entered*/
   /* -----------------------------------------------------------------*/
  ;
  if (FK0FM110.FK-MAT-NBR > " ") /* Material number entered*/
    ;
     /* next sentence*/
    ;
  else
    ;
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    set FK0FM110.FK-MAT-NBR cursor, bold; /* Highlight*/
    converseLib.validationFailed(8); /* Enter only with FAST PATH*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
end // end FK0F-1500

// Verify scroll request
Function FK0F-1510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FK0FW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FK0FW00.XXXTSPAG >= FK0FW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Indicate an error for any data that was modified.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM110.FK-MAT-NBR != FK0FW02.FK-MAT-NBR           /* Material number changed*/
   || FK0FM110.XMG-COLR-GRP-CD != FK0FW02.XMG-COLR-GRP-CD /* Colr grp chg*/
   || FK0FM110.XCLCD != FK0FW02.XCLCD)                    /* Color code changed*/
    ;
    FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
    set FK0FM110.FK-MAT-NBR cursor, bold; /* Highlight*/
    set FK0FM110.XMG-COLR-GRP-CD bold; /* Highlight*/
    set FK0FM110.XCLCD bold; /* Highlight*/
    converseLib.validationFailed(14); /* Field may not change*/
    ;
  end
  ;
   /* ----------------- END OF FK0F-1510 --------------------------*/
end // end FK0F-1510

// Search XCLTBL for Color code
Function FK0F-1520()
   /* ------------------------------------------------------------*/
   /* Check to see is Color code was entered*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM110.XCLCD <= " ")
    set FK0FM110.XCLCD bold, cursor;
    FKWREC.XXX-MOD-ID = "1520";
    converseLib.validationFailed(8);
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Read CSP Corporate table for color code validation*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM110.XCLCD in XCLTBL.XCLCD)
    ;
    if (XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status active*/
      ;
      return;
      ;
    end
    ;
  else
    ;
    FKWREC.XXX-MOD-ID = "1520"; /* Module id*/
    set FK0FM110.XCLCD cursor, bold;
    converseLib.validationFailed(32); /* Required field not found*/
    ;
  end
  ;
   /* ----------------- END OF FK0F-1520 ------------------------------*/
end // end FK0F-1520

// Search XMGTBL for Color code
Function FK0F-1530()
   /* ------------------------------------------------------------*/
   /* Check to see if Color group code was entered*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM110.XMG-COLR-GRP-CD <= " ")
    set FK0FM110.XMG-COLR-GRP-CD bold, cursor;
    FKWREC.XXX-MOD-ID = "1530";
    converseLib.validationFailed(8);
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Read CSP Corporate table for color group validation*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM110.XMG-COLR-GRP-CD in XMGTBL.XMG-COLR-GRP-CD)
    ;
    if (XMGTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status active*/
      ;
      return;
      ;
    end
    ;
  else
    ;
    FKWREC.XXX-MOD-ID = "1530"; /* Module id*/
    set FK0FM110.XMG-COLR-GRP-CD cursor, bold;
    converseLib.validationFailed(31); /* Required field not found*/
    ;
  end
  ;
   /* ----------------- END OF FK0F-1530 ------------------------------*/
end // end FK0F-1530

// Process valid input request
Function FK0F-1600()
   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-FORMAT-MAP-SW = "Y"; /* Format the map switch*/
  ;
   /* ------------------------------------------------------------*/
   /* Save the select fields and clear the map input/output area.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0FW00.FK0FW-IDX <= 15) /* Until end of lines*/
    ;
    if (FK0FM110.FK0FM-SEL[FK0FW-IDX] != FK0FW02.FK0FW-SEL[FK0FW-IDX])
      ;
      FK0FW02.FK0FW-SEL[FK0FW-IDX] = FK0FM110.FK0FM-SEL[FK0FW-IDX];
      ;
    end
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Check PF keys for transfer to another application*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf12 /* (MTRL) requested*/
   || converseVar.eventKey is pf14 /* (CONT) requested*/
   || converseVar.eventKey is pf15 /* (CLST) requested*/
   || converseVar.eventKey is pf16 /* (STYM) requested*/
   || converseVar.eventKey is pf19) /* (MCLR) requested*/
    ;
    if (converseVar.eventKey is pf12) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0E"; /* To application*/
      if (FK0FM110.CAITEM == " ")
        COMMAREA.CAITEM = "C"; /* Default function to change*/
      else
        COMMAREA.CAITEM = FK0FM110.CAITEM; /* Item*/
      end
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 Was pressed*/
      COMMAREA.CATOAP = "FK0G"; /* To application*/
      COMMAREA.CAITEM = FK0FM110.CAITEM; /* Item*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 Was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* To application*/
      COMMAREA.CAITEM = FK0FM110.CAITEM; /* Item*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 Was pressed*/
      COMMAREA.CATOAP = "FK0M"; /* To application*/
      COMMAREA.CAITEM = FK0FM110.CAITEM; /* Item*/
    end
    ;
    if (converseVar.eventKey is pf19) /* PF19 Was pressed*/
      COMMAREA.CATOAP = "FK0Q"; /* To application*/
      COMMAREA.CAITEM = FK0FM110.CAITEM; /* Item*/
    end
    ;
     /* ------------------------------------------------------------*/
      /* Update the modifiable data in the COMMAREA.*/
     /* ------------------------------------------------------------*/
    ;
    set FKWREC empty;
    ;
    FKWREC.FK-VEND-CD[1] = FK0FM110.FK-VEND-CD; /* Vendor code*/
    FKWREC.FK-MAT-NBR[1] = FK0FM110.FK-MAT-NBR; /* Material number*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0FM110.XMG-COLR-GRP-CD;
    FKWREC.XCLCD[1] = FK0FM110.XCLCD; /* Dimension code*/
    ;
    FK0FW00.FK0FW-IDX = 1; /* Initialize line index*/
    FKWREC.FKWINDX1 = 1; /* Initialize FKWREC index*/
    ;
    while (FK0FW00.FK0FW-IDX <= 15) /* Until end of lines*/
      ;
      if (FK0FM110.FK0FM-SEL[FK0FW-IDX] == "S") /* Line was selected*/
        ;
        FKWREC.FK-VEND-CD[FKWINDX1] = FK0FM110.FK-VEND-CD;
        FKWREC.FK-MAT-NBR[FKWINDX1] = FK0FM110.FK-MAT-NBR;
        FKWREC.XMG-COLR-GRP-CD[FKWINDX1] = FK0FM110.XMG-COLR-GRP-CD;
        FKWREC.XCLCD[FKWINDX1] = FK0FM110.XCLCD;
        ;
        FKWREC.SY1STNBR[FKWINDX1] = FK0FM110.SY1STNBR[FK0FW-IDX];
        FKWREC.SY2CLRID[FKWINDX1] = FK0FM110.SY2CLRID[FK0FW-IDX];
        FKWREC.XDMCD[FKWINDX1] = FK0FM110.XDMCD[FK0FW-IDX];
        ;
        FK0FW00.FK0FW-UPDATE-SW = "Y"; /* Storage update*/
        FK0FW00.FK0FW-REQUEST-DATA-SW = "Y"; /* Request for data*/
        ;
        FKWREC.FKWINDX1 = FKWREC.FKWINDX1 + 1; /* Incr FKWREC index*/
        ;
      end
      ;
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment line index*/
      ;
    end
    ;
    FKWREC.FKWINDX1 = FKWREC.FKWINDX1 - 1; /* Decrement FKWREC index by one*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the search key was changed, save the search information.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM110.FK-MAT-NBR != FK0FW01.FK-MAT-NBR           /* Material number changed*/
   || FK0FM110.XMG-COLR-GRP-CD != FK0FW01.XMG-COLR-GRP-CD /* Thk cd chgd*/
   || FK0FM110.XCLCD != FK0FW01.XCLCD)                    /* Color code changed*/
    ;
    /* ------------------------------------------------------------*/
     /* If a search key was entered, request the data to display.*/
     /* Otherwise, purge any existing pages from temporary storage.*/
    /* ------------------------------------------------------------*/
    ;
    if (FK0FM110.FK-MAT-NBR > " ") /* Style number was entered*/
      ;
      FK0FW00.FK0FW-REQUEST-DATA-SW = "Y"; /* Request for data switch*/
      ;
    else
      ;
      FK0FW00.FK0FW-REQUEST-DATA-SW = "N"; /* Request for data switch*/
      ;
      FK0F-1110(); /* Purge temporary storage*/
      ;
    end
    ;
    return; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a scroll backward was requested, decrement the page number*/
   /* and return to the previous process*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Scroll back requested*/
    ;
    FK0FW00.XXXTSPAG = FK0FW00.XXXTSPAG - 1; /* Decrement page number*/
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a scroll forward was requested, increment the page number*/
   /* and return to the previous process*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8) /* Scroll back requested*/
    ;
    FK0FW00.XXXTSPAG = FK0FW00.XXXTSPAG + 1; /* Decrement page number*/
    ;
    return;
    ;
  end
  ;
  ;
end // end FK0F-1600

// Process Add map
Function FK0F-2000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0F-2100(); /* Obtain the data to display*/
  ;
  FK0F-2200(); /* Format and display the map*/
  ;
  FK0F-2300(); /* Check attention identifier*/
  ;
  FK0F-2400(); /* Reset fields to normal intensity*/
  ;
  FK0F-2500(); /* Verify the entered data*/
  ;
  FK0F-2600(); /* Process valid input request*/
  ;
  ;
end // end FK0F-2000

// Obtain data to display
Function FK0F-2100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-REQUEST-DATA-SW != "Y" /* data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  set FK0FW01 empty; /* Initialize display storage*/
  set FK0FW02 empty; /* Initialize display storage*/
  set FK0FW03 empty; /* Initialize display storage*/
  ;
  FK0FW01.FK-MAT-NBR = FK0FM210.FK-MAT-NBR; /* Material number*/
  FK0FW01.XMG-COLR-GRP-CD = FK0FM210.XMG-COLR-GRP-CD; /* Color grp cd*/
  FK0FW01.XCLCD = FK0FM210.XCLCD; /* Color code*/
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-VMUSGE01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  ;
   /* Initializes table to N's*/
  ;
  FK0FW03.XX1 = 1;
  while (FK0FW03.XX1 <= 15)
    FK0FW03.FK0FW-VSYDVL01-PROD-SW[XX1] = "N";
    FK0FW03.XX1 = FK0FW03.XX1 + 1;
  end
  ;
  if (FK0FM210.FK-MAT-NBR != "  ") /* If Material number on map*/
    ;
    FK0F-2110(); /* Lookup material number (open cursor)*/
                                 /* (DCMPNT.VMATRL01)*/
    FK0F-2111(); /* Lookup material number (read)*/
                                 /* (DCMPNT.VMATRL01)*/
    FK0F-2115(); /* Lookup material number (close cursor)*/
                                 /* (DCMPNT.VMATRL01)*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* If we are confirming data, obtain product information and*/
   /* calculate usage.  store all information in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-CONFIRM-SW == "Y") /* If we are confirming*/
    ;
    FK0FW00.FK0FW-IDX = 1; /* Init index*/
    ;
    while (FK0FW00.FK0FW-IDX <= 15) /* Repeat until end of page*/
      ;
      if (FK0FM210.SY1STNBR[FK0FW-IDX] != " ") /* If a style was entered*/
        ;
        FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "N";
        FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "N";
        ;
        FK0F-2130(); /* Select style data*/
        ;
        if (FK0FW00.FK0FW-VSYCLR01-FOUND-SW == "N")
          FK0F-2140(); /* Select development data*/
        end
        ;
        FK0F-2150(); /* Determine usage, yield and save info*/
                          /* in temporary storage*/
        ;
      end
      ;
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment*/
    end
  end
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  FK0FW01.FK-VEND-CD = VMATRL01.FK-VEND-CD; /* Save vendor code*/
  FK0FW01.XTM-MAT-THCK-CD = VMATRL01.XTM-MAT-THCK-CD; /* Save thck cd*/
  ;
  FK0FW00.FK0FW-REQUEST-DATA-SW = "N";
  FK0FW00.FK0FW-FORMAT-MAP-SW = "Y";
  ;
end // end FK0F-2100

// Open cursor (DCMPNT.VMATRL01)
Function FK0F-2110()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FK0FM210.FK-MAT-NBR; /* Material number*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6190" ("S2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2110 OPEN MATERIAL CURSOR       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.FK-MAT-NBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-2110

// Fetch cursor (DCMPNT.VMATRL01)
Function FK0F-2111()
   /* ------------------------------------------------------------*/
   /* Read in the row requested from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6190" ("N2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Material not found*/
      ;
      converseLib.validationFailed(26); /* No row on table with specified key*/
      FKWREC.XXX-MOD-ID = "2111"; /* Module id*/
      set FK0FM210.FK-MAT-NBR cursor, bold;
      ;
      return;
      ;
    else
      ;
      if (SQLCA.VAGen_SQLCODE == 0) /* Material found*/
        ;
        return;
        ;
      end
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2111"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2111 GET MATERIAL DATA          ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.FK-MAT-NBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-2111

// Close cursor (DCMPNT.VMATRL01)
Function FK0F-2115()
   /* ------------------------------------------------------------*/
   /* Close the cursor*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6190" ("C2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2115"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2115 CLOSE CURSOR               ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-2115

// Select style (DPRODG.VSYCLR01)
Function FK0F-2130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  PG2REC.XGPCD = "02";
  PG2REC.SY1STNBR = FK0FM210.SY1STNBR[FK0FW-IDX];
  PG2REC.SY2CLRID = FK0FM210.SY2CLRID[FK0FW-IDX];
  PG2REC.XDMCD = FK0FM210.XDMCD[FK0FW-IDX];
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "Y";
      FK0FW03.FK0FW-VSYDVL01-PROD-SW[FK0FW-IDX] = "N";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "N";
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2130"; /* Module identification*/
  ;
  FK0FW00.FK0FW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2130 GET STYLE DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLRO1"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-2130

// Select style (DPRODG.VSYDVL01)
Function FK0F-2140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  PG4REC.PG4STNBR = FK0FM210.SY1STNBR[FK0FW-IDX]; /* Style number*/
  ;
  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "Y";
      ;
      FK0FW03.FK0FW-VSYDVL01-PROD-SW[FK0FW-IDX] = "Y";
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "N";
      FK0FW03.FK0FW-VSYDVL01-PROD-SW[FK0FW-IDX] = "N";
      ;
      return;
      ;
    end
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2140"; /* Module identification*/
  ;
  FK0FW00.FK0FW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1140 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-2140

// Save row, Calc usage
Function FK0F-2150()
   /* ------------------------------------------------------------------*/
   /* Save valid key into temporary storage*/
   /* ------------------------------------------------------------------*/
  ;
  FK0FW02.FK-VEND-CD = FK0FM210.FK-VEND-CD; /* Vendor code*/
  FK0FW02.FK-MAT-NBR = FK0FM210.FK-MAT-NBR; /* Material number*/
  FK0FW02.XTM-MAT-THCK-CD = VMATRL01.XTM-MAT-THCK-CD; /* Thck cd*/
  FK0FW02.XMG-COLR-GRP-CD = FK0FM210.XMG-COLR-GRP-CD; /* Color grp cd*/
  FK0FW02.XCLCD = FK0FM210.XCLCD; /* Color code*/
  ;
  ;
  if (FK0FW00.FK0FW-VSYCLR01-FOUND-SW == "Y")
    ;
    FK0FW02.SY1STNBR[FK0FW-IDX] = FK0FM210.SY1STNBR[FK0FW-IDX];
    FK0FW02.SY2CLRID[FK0FW-IDX] = FK0FM210.SY2CLRID[FK0FW-IDX];
    FK0FW02.XDMCD[FK0FW-IDX] = FK0FM210.XDMCD[FK0FW-IDX];
    ;
    FK0FW02.SY1SSTNM[FK0FW-IDX] = PG2REC.SY1SSTNM; /* Name*/
    FK0FW02.SY2CLRAB[FK0FW-IDX] = PG2REC.SY2CLRAB; /* Name*/
    ;
  else
    ;
    if (FK0FW00.FK0FW-VSYDVL01-FOUND-SW == "Y")
      ;
      FK0FW02.SY1STNBR[FK0FW-IDX] = FK0FM210.SY1STNBR[FK0FW-IDX];
      if (FK0FM210.SY2CLRID[FK0FW-IDX] == "   ") /* If spaces in color*/
        FK0FW02.SY2CLRID[FK0FW-IDX] = "000"; /* Default to '000'*/
      else
        FK0FW02.SY2CLRID[FK0FW-IDX] = FK0FM210.SY2CLRID[FK0FW-IDX];
      end
      FK0FW02.XDMCD[FK0FW-IDX] = "  ";
      ;
      FK0FW02.SY1SSTNM[FK0FW-IDX] = PG4REC.SY1SSTNM; /* Name*/
      ;
    else
      ;
      FK0FW02.SY1STNBR[FK0FW-IDX] = FK0FM210.SY1STNBR[FK0FW-IDX];
      FK0FW02.SY2CLRID[FK0FW-IDX] = FK0FM210.SY2CLRID[FK0FW-IDX];
      FK0FW02.XDMCD[FK0FW-IDX] = FK0FM210.XDMCD[FK0FW-IDX];
      ;
      FK0FW02.SY1SSTNM[FK0FW-IDX] = "*NOT FOUND*"; /* Name*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine the Usage and P/F indicator for the product*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW02.FK0FW-USAGE[FK0FW-IDX] = FK0FM210.FK0FM-USAGE[FK0FW-IDX];
  ;
  FK0FW02.FK0FW-PF[FK0FW-IDX] = FK0FM210.FK0FM-PF[FK0FW-IDX];
  ;
  FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX] = FK0FM210.FK-MAT-WAST-PCT[FK0FW-IDX];
  ;
   /* ------------------------------------------------------------------*/
   /* Yield calculation*/
   /* ------------------------------------------------------------------*/
  ;
  FK0FW02.FK0FW-YIELD[FK0FW-IDX] = FK0FW02.FK0FW-USAGE[FK0FW-IDX] -   FK0FW02.FK0FW-USAGE[FK0FW-IDX] * FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX];
  ;
  ;
end // end FK0F-2150

// Format and converse ADD map
Function FK0F-2200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-FORMAT-MAP-SW == "Y" /* Format map requested*/
   && converseVar.validationMsgNum == 0) /* No errors found*/
    ;
    FK0F-2210(); /* Format the map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FM210.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0FM210.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0FM210.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* Determine the cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 1) /* Update complete*/
    set FK0FM210.FK-MAT-NBR normal, cursor;
  else
    ;
    if (converseVar.validationMsgNum == 0)
      if (FK0FM210.FK-MAT-NBR <= " ")
        set FK0FM210.FK-MAT-NBR normal, cursor;
      else
        set FK0FM210.SY1STNBR[1] normal, cursor;
      end
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a message passed from another application, display it*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
      ;
    else
      ;
      FK0FM210.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0FM210.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
    ;
    set FK0FM210 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  ;
  ;
  converse FK0FM210 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0FM210.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0FM210.CAITEM; /* Application data*/
  ;
  ;
end // end FK0F-2200

// Format the display data
Function FK0F-2210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0FM210 initial; /* M210 input/output area*/
  ;
  FK0FW00.FK0FW-FORMAT-MAP-SW = "N"; /* Format the map switch*/
  ;
   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW01.FK-MAT-NBR <= " ") /* Material number present*/
    set FK0FM210.FK-MAT-NBR cursor; /* Position cursor*/
  end
  ;
  FK0FM210.FK-VEND-CD = FK0FW02.FK-VEND-CD; /* Vendor code*/
  FK0FM210.FK-MAT-NBR = FK0FW01.FK-MAT-NBR; /* Material number*/
  FK0FM210.XTM-MAT-THCK-CD = FK0FW02.XTM-MAT-THCK-CD; /* Thickness*/
  FK0FM210.XMG-COLR-GRP-CD = FK0FW01.XMG-COLR-GRP-CD; /* Color group*/
  FK0FM210.XCLCD = FK0FW01.XCLCD; /* Color code*/
  ;
   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Initialize index*/
  ;
  while (FK0FW00.FK0FW-IDX <= 15) /* Until end of screen*/
    ;
    if (FK0FW00.FK0FW-CONFIRM-SW == "N") /* If not confirm step*/
      ;
      FK0FM210.SY1STNBR[FK0FW-IDX] = " ";
      FK0FM210.SY2CLRID[FK0FW-IDX] = " ";
      FK0FM210.XDMCD[FK0FW-IDX] = " ";
      FK0FM210.SY1SSTNM[FK0FW-IDX] = " ";
      FK0FM210.SY2CLRAB[FK0FW-IDX] = " ";
      FK0FM210.FK0FM-USAGE[FK0FW-IDX] = 0;
      FK0FM210.FK0FM-PF[FK0FW-IDX] = " ";
      FK0FM210.FK-MAT-WAST-PCT[FK0FW-IDX] = 0;
      FK0FM210.FK0FM-YIELD[FK0FW-IDX] = 0;
    else
      ;
      FK0FM210.SY1STNBR[FK0FW-IDX] = FK0FW02.SY1STNBR[FK0FW-IDX];
      FK0FM210.SY2CLRID[FK0FW-IDX] = FK0FW02.SY2CLRID[FK0FW-IDX];
      FK0FM210.XDMCD[FK0FW-IDX] = FK0FW02.XDMCD[FK0FW-IDX];
      FK0FM210.SY1SSTNM[FK0FW-IDX] = FK0FW02.SY1SSTNM[FK0FW-IDX];
      FK0FM210.SY2CLRAB[FK0FW-IDX] = FK0FW02.SY2CLRAB[FK0FW-IDX];
      FK0FM210.FK0FM-USAGE[FK0FW-IDX] = FK0FW02.FK0FW-USAGE[FK0FW-IDX];
      FK0FM210.FK0FM-PF[FK0FW-IDX] = FK0FW02.FK0FW-PF[FK0FW-IDX];
      FK0FM210.FK-MAT-WAST-PCT[FK0FW-IDX] = FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX];
      FK0FM210.FK0FM-YIELD[FK0FW-IDX] = FK0FW02.FK0FW-YIELD[FK0FW-IDX];
    end
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment index*/
    ;
  end
  ;
end // end FK0F-2210

// Check attention identifier
Function FK0F-2300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    ;
    FKWREC.FK-MAT-NBR[1] = FK0FW01.FK-MAT-NBR;
    FKWREC.XMG-COLR-GRP-CD[1] = FK0FW01.XMG-COLR-GRP-CD;
    FKWREC.XCLCD[1] = FK0FW01.XCLCD;
    ;
    COMMAREA.CATOAP = "FK0F"; /* to applicaiton*/
    COMMAREA.CAITEM = "A"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0FM210.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM210.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      ;
      FKWREC.FK-VEND-CD[1] = FK0FM210.FK-VEND-CD;
      FKWREC.FK-MAT-NBR[1] = FK0FM210.FK-MAT-NBR;
      FKWREC.XMG-COLR-GRP-CD[1] = FK0FM210.XMG-COLR-GRP-CD;
      FKWREC.XCLCD[1] = FK0FM210.XCLCD;
      ;
      COMMAREA.CATOAP = FK0FM210.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0FM210.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0FM210.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* FK0E (MTRL) requested*/
   || converseVar.eventKey is pf14 /* FK0G (CONT) requested*/
   || converseVar.eventKey is pf15 /* FK0H (CLST) requested*/
   || converseVar.eventKey is pf16 /* FK0M (STYM) requested*/
   || converseVar.eventKey is pf19) /* FK0Q (MCLR) requested*/
    ;
    set FKWREC empty;
    ;
    FKWREC.FK-VEND-CD[1] = FK0FW01.FK-VEND-CD;
    FKWREC.FK-MAT-NBR[1] = FK0FW01.FK-MAT-NBR;
    FKWREC.XMG-COLR-GRP-CD[1] = FK0FW01.XMG-COLR-GRP-CD;
    FKWREC.XCLCD[1] = FK0FW01.XCLCD;
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0FM210"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = FK0FM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0FM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      ;
      COMMAREA.CATOAP = "FK0E"; /* TO application*/
      COMMAREA.CAITEM = FK0FM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0G"; /* TO application*/
      COMMAREA.CAITEM = FK0FM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
      COMMAREA.CAITEM = FK0FM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FK0M"; /* TO application*/
      COMMAREA.CAITEM = FK0FM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf19) /* PF19 was pressed*/
      COMMAREA.CATOAP = "FK0Q"; /* TO application*/
      COMMAREA.CAITEM = FK0FM210.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0F-2300

// Reset highlighted fields
Function FK0F-2400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0FM210.FK-MAT-NBR initialAttributes; /* Style number*/
  set FK0FM210.XTM-MAT-THCK-CD initialAttributes; /* Thickness code*/
  set FK0FM210.XMG-COLR-GRP-CD initialAttributes; /* Color group*/
  set FK0FM210.XCLCD initialAttributes; /* Color code*/
  set FK0FM210.CATOAP initialAttributes; /* TO application*/
  set FK0FM210.CAITEM initialAttributes; /* Application data*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Reset index*/
  ;
  while (FK0FW00.FK0FW-IDX <= 15)
    ;
    set FK0FM210.SY1STNBR[FK0FW-IDX] initialAttributes;
    set FK0FM210.SY2CLRID[FK0FW-IDX] initialAttributes;
    set FK0FM210.XDMCD[FK0FW-IDX] initialAttributes;
    set FK0FM210.FK0FM-USAGE[FK0FW-IDX] initialAttributes;
    set FK0FM210.FK0FM-PF[FK0FW-IDX] initialAttributes;
    set FK0FM210.FK-MAT-WAST-PCT[FK0FW-IDX] initialAttributes;
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment index*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Display color group list if requested*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM210.XMG-COLR-GRP-CD == "?") /* Color group list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      FKWREC.XXX-MOD-ID = "2400"; /* Module id*/
      converseLib.validationFailed(19); /* PA/PF key may not be used*/
      exit stack; /* Exit to display map*/
    else
      ;
      XPXX001(); /* Window initialization*/
      ;
      XX0XW02.XX0XWHDR = "COLOR GROUP"; /* Heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* Until end of display*/
        ;
        XPXMG01(); /* Display color group list*/
        ;
      end
      ;
      if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
        FK0FM210.XMG-COLR-GRP-CD = " "; /* Restore prior code*/
      else
        FK0FM210.XMG-COLR-GRP-CD = XMGTBL.XMG-COLR-GRP-CD[XX0XWPIX];
      end
      ;
      set FK0FM210.XMG-COLR-GRP-CD cursor; /* Establish cursor position*/
      ;
    end
    ;
     /* ------------------------------------------------------------*/
     /* Indicate the requested list has been displayed and that ENTER*/
     /* must be pressed to process any changes.*/
     /* ------------------------------------------------------------*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
    FKWREC.XXX-MOD-ID = "2400"; /* Module id*/
    converseLib.validationFailed(20); /* Corporate list displayed*/
    ;
    exit stack;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Display color list if requested*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM210.XCLCD == "?") /* Color cd list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      FKWREC.XXX-MOD-ID = "2400"; /* Module id*/
      converseLib.validationFailed(19); /* PA/PF key may not be used*/
      exit stack; /* Exit to display map*/
    else
      ;
      XPXX001(); /* Window initialization*/
      ;
      XX0XW02.XX0XWHDR = "COLOR CODE"; /* Heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* Until end of display*/
        ;
        XPXCL01(); /* Display color list*/
        ;
      end
      ;
      if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
        FK0FM210.XCLCD = " "; /* Restore prior code*/
      else
        FK0FM210.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
      end
      ;
      set FK0FM210.XCLCD cursor; /* Establish cursor position*/
      ;
    end
    ;
     /* ------------------------------------------------------------*/
     /* Indicate the requested list has been displayed and that ENTER*/
     /* must be pressed to process any changes.*/
     /* ------------------------------------------------------------*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
    FKWREC.XXX-MOD-ID = "2400"; /* Module id*/
    converseLib.validationFailed(20); /* Corporate list displayed*/
    ;
  end
  ;
end // end FK0F-2400

// Verify data that was entered
Function FK0F-2500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM210.CAITEM > " ") /* Application data was entered*/
    set FK0FM210.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Verify all of the information entered in the detail lines*/
   /* -----------------------------------------------------------------*/
  ;
  FK0FW-ROW-ENTERED-SW = "N"; /* Iinitialize switch*/
  ;
   /* Initializes table to N's*/
  ;
  FK0FW03.XX1 = 1;
  while (FK0FW03.XX1 <= 15)
    FK0FW03.FK0FW-VSYDVL01-PROD-SW[XX1] = "N";
    FK0FW03.XX1 = FK0FW03.XX1 + 1;
  end
  ;
  FK0FW00.FK0FW-IDX = 15;
  ;
  while (FK0FW00.FK0FW-IDX >= 1)
    ;
    if (FK0FM210.SY1STNBR[FK0FW-IDX] > " "
     || FK0FM210.SY2CLRID[FK0FW-IDX] > " "
     || FK0FM210.XDMCD[FK0FW-IDX] > " "
     || FK0FM210.FK0FM-USAGE[FK0FW-IDX] > 0
     || FK0FM210.FK0FM-PF[FK0FW-IDX] > " "
     || FK0FM210.FK-MAT-WAST-PCT[FK0FW-IDX] > 0)
      ;
      FK0F-2510(); /* Edit detail lines*/
      ;
    end
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX - 1; /* Increment index*/
    ;
  end
  ;
  if (FK0FW00.FK0FW-ROW-ENTERED-SW == "N")
    ;
    converseLib.validationFailed(8);
    FKWREC.XXX-MOD-ID = "2500";
    set FK0FM210.SY1STNBR[1] cursor, bold;
    set FK0FM210.SY2CLRID[1] bold;
    set FK0FM210.XDMCD[1] bold;
    set FK0FM210.FK0FM-USAGE[1] bold;
    set FK0FM210.FK0FM-PF[1] bold;
    set FK0FM210.FK-MAT-WAST-PCT[1] bold;
    ;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Verify header key information entered*/
   /* -----------------------------------------------------------------*/
  ;
  FK0F-2520(); /* Edit header information*/
  ;
   /* -----------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* -----------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    ;
    FK0FW00.FK0FW-CONFIRM-SW = "N";
    exit stack;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Check to see if duplicate row information was added.*/
   /* -----------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-IDX = 15;
  FK0FW00.FK0FW-INDEX = 14;
  ;
  while (FK0FW00.FK0FW-IDX > 0)
    ;
    if (FK0FM210.SY1STNBR[FK0FW-IDX] == " "
     && FK0FM210.SY2CLRID[FK0FW-IDX] == " "
     && FK0FM210.XDMCD[FK0FW-IDX] == " ")
      ;
      /* next sentence*/
      ;
    else
      ;
      while (FK0FW00.FK0FW-INDEX > 0)
        ;
        if (FK0FM210.SY1STNBR[FK0FW-IDX] == 
        FK0FM210.SY1STNBR[FK0FW-INDEX]
         && FK0FM210.SY2CLRID[FK0FW-IDX] == 
        FK0FM210.SY2CLRID[FK0FW-INDEX]
         && FK0FM210.XDMCD[FK0FW-IDX] == 
        FK0FM210.XDMCD[FK0FW-INDEX])
          ;
          converseLib.validationFailed(59);
          FKWREC.XXX-MOD-ID = "2500";
          set FK0FM210.SY1STNBR[FK0FW-IDX] bold;
          set FK0FM210.SY2CLRID[FK0FW-IDX] bold;
          set FK0FM210.XDMCD[FK0FW-IDX] bold;
          set FK0FM210.SY1STNBR[FK0FW-INDEX] bold, cursor;
          set FK0FM210.SY2CLRID[FK0FW-INDEX] bold;
          set FK0FM210.XDMCD[FK0FW-INDEX] bold;
          ;
        end
        ;
        FK0FW00.FK0FW-INDEX = FK0FW00.FK0FW-INDEX - 1;
        ;
      end
      ;
    end
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX - 1;
    FK0FW00.FK0FW-INDEX = FK0FW00.FK0FW-IDX - 1;
    ;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* -----------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    ;
    FK0FW00.FK0FW-CONFIRM-SW = "N";
    exit stack;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Check for dupliate usage record.*/
   /* -----------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-IDX = 15;
  ;
  while (FK0FW00.FK0FW-IDX > 0)
    ;
    if (FK0FM210.SY1STNBR[FK0FW-IDX] > " ")
      ;
      FK0F-2560(); /* Check for duplicate record*/
      ;
    end
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX - 1; /* Decrement index*/
    ;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* -----------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    ;
    FK0FW00.FK0FW-CONFIRM-SW = "N";
    exit stack;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* At this point we know there are no errors to display.*/
   /* If we are confirming the add, verify no values on map have changed.*/
   /* If any have, we must re-confirm the add.*/
   /* -----------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-CONFIRM-SW == "Y") /* If confirming add*/
    ;
    FK0F-2570(); /* Verify no values changed*/
  end
  ;
  ;
end // end FK0F-2500

// Verify Detail lines
Function FK0F-2510()
   /* ---------------------------------------------------------------*/
   /* Verify Waste Percent*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0FM210.FK-MAT-WAST-PCT[FK0FW-IDX] < 0
   || FK0FM210.FK-MAT-WAST-PCT[FK0FW-IDX] >= 1)
    converseLib.validationFailed(55); /* Waste % must be gt 0 and lt 1*/
    FKWREC.XXX-MOD-ID = "2510";
    set FK0FM210.FK-MAT-WAST-PCT[FK0FW-IDX] cursor, bold;
  end
  ;
   /* ---------------------------------------------------------------*/
   /* Verify P/F Indicator*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0FM210.FK0FM-PF[FK0FW-IDX] == "P"
   || FK0FM210.FK0FM-PF[FK0FW-IDX] == "F"
   || FK0FM210.FK0FM-PF[FK0FW-IDX] == " ")
    ;
     /* *//*NEXT SENTENCE*/
    ;
  else
    ;
    converseLib.validationFailed(54);
    FKWREC.XXX-MOD-ID = "2510";
    set FK0FM210.FK0FM-PF[FK0FW-IDX] bold, cursor;
    ;
  end
  ;
   /* ---------------------------------------------------------------*/
   /* Verify Usage*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0FM210.FK0FM-USAGE[FK0FW-IDX] < 0)
    ;
    converseLib.validationFailed(8); /* Required field invalid or missing*/
    FKWREC.XXX-MOD-ID = "2510";
    set FK0FM210.FK0FM-USAGE[FK0FW-IDX] bold, cursor;
  end
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the Style/Color/Dimension*/
   /* ---------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "N"; /* Reset switch*/
  FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "N"; /* Reset switch*/
  ;
  if (FK0FM210.SY1STNBR[FK0FW-IDX] > " ")
    FK0FW00.FK0FW-ROW-ENTERED-SW = "Y";
  end
  ;
  FK0F-2511(); /* Look up Production style color*/
  ;
  if (FK0FW00.FK0FW-VSYCLR01-FOUND-SW == "N") /* Style color found*/
    ;
    FK0F-2512(); /* Look up Development style*/
    ;
  end
  ;
end // end FK0F-2510

// Select color (DPRODG.VSYCLR01)
Function FK0F-2511()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/
  ;
  set PG2REC empty;
  ;
  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = FK0FM210.SY1STNBR[FK0FW-IDX]; /* Style number*/
  PG2REC.SY2CLRID = FK0FM210.SY2CLRID[FK0FW-IDX]; /* Color id*/
  PG2REC.XDMCD = FK0FM210.XDMCD[FK0FW-IDX]; /* Dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "Y";
      FK0FW03.FK0FW-VSYDVL01-PROD-SW[FK0FW-IDX] = "N";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2511"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2511 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-2511

// Select style (DPRODG.VSYDVL01)
Function FK0F-2512()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  PG4REC.PG4STNBR = FK0FM210.SY1STNBR[FK0FW-IDX]; /* Style number*/
  ;
  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "Y";
      FK0FW03.FK0FW-VSYDVL01-PROD-SW[FK0FW-IDX] = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      FKWREC.XXX-MOD-ID = "2512"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      FK0FW00.FK0FW-FORMAT-MAP-SW = "N";
      FK0FW03.FK0FW-VSYDVL01-PROD-SW[FK0FW-IDX] = "N";
      set FK0FM210.SY1STNBR[FK0FW-IDX] cursor, bold;
      set FK0FM210.SY2CLRID[FK0FW-IDX] bold;
      set FK0FM210.XDMCD[FK0FW-IDX] bold;
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2512"; /* Module identification*/
  ;
  FK0FW00.FK0FW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2512 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-2512

// Verify Header key fields
Function FK0F-2520()
   /* ---------------------------------------------------------------*/
   /* Verify the color code*/
   /* ---------------------------------------------------------------*/
  ;
  FK0F-2530(); /* Select unique DCMPNT.VMCOLR01*/
  ;
   /* ---------------------------------------------------------------*/
   /* Verify Color code*/
   /* ---------------------------------------------------------------*/
  ;
  FK0F-2540(); /* Search XCLTBL*/
  ;
   /* ---------------------------------------------------------------*/
   /* Verify Color code*/
   /* ---------------------------------------------------------------*/
  ;
  FK0F-2550(); /* Search XMGTBL*/
  ;
   /* ---------------------------------------------------------------*/
   /* Verify Material number*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0FM210.FK-MAT-NBR == " ")
    ;
    converseLib.validationFailed(32);
    FKWREC.XXX-MOD-ID = "2520";
    set FK0FM210.FK-MAT-NBR cursor, bold;
    ;
  end
  ;
end // end FK0F-2520

// Select unique DCMPNT.VMCOLR01
Function FK0F-2530()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.FK-MAT-NBR = FK0FM210.FK-MAT-NBR; /* Material number*/
  VMCOLR01.XMG-COLR-GRP-CD = FK0FM210.XMG-COLR-GRP-CD; /* Color grp*/
  VMCOLR01.XCLCD = FK0FM210.XCLCD; /* Color code*/
  ;
  try
    call "IO6210" ("S ", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      converseLib.validationFailed(66);
      FKWREC.XXX-MOD-ID = "2530";
      set FK0FM210.FK-MAT-NBR cursor, bold;
      set FK0FM210.XMG-COLR-GRP-CD bold;
      set FK0FM210.XCLCD bold;
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2530"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2530 READ MTRL COLOR DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-2530

// Search XCLTBL for Color code
Function FK0F-2540()
   /* ------------------------------------------------------------*/
   /* Check to see is Color code was entered*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM210.XCLCD <= " ")
    set FK0FM210.XCLCD bold, cursor;
    FKWREC.XXX-MOD-ID = "2540";
    converseLib.validationFailed(8);
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Read CSP Corporate table for color code validation*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM210.XCLCD in XCLTBL.XCLCD)
    ;
    if (XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status active*/
      ;
      return;
      ;
    end
    ;
  else
    ;
    FKWREC.XXX-MOD-ID = "2540"; /* Module id*/
    set FK0FM210.XCLCD cursor, bold;
    converseLib.validationFailed(32); /* Required field not found*/
    ;
  end
  ;
   /* ----------------- END OF FK0F-2540 ------------------------------*/
end // end FK0F-2540

// Search XMGTBL for Color code
Function FK0F-2550()
   /* ------------------------------------------------------------*/
   /* Check to see if Color group code was entered*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM210.XMG-COLR-GRP-CD <= " ")
    set FK0FM210.XMG-COLR-GRP-CD bold, cursor;
    FKWREC.XXX-MOD-ID = "2550";
    converseLib.validationFailed(8);
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Read CSP Corporate table for color group validation*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM210.XMG-COLR-GRP-CD in XMGTBL.XMG-COLR-GRP-CD)
    ;
    if (XMGTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status active*/
      ;
      return;
      ;
    end
    ;
  else
    ;
    FKWREC.XXX-MOD-ID = "2550"; /* Module id*/
    converseLib.validationFailed(32); /* Color group missing/invalid*/
    set FK0FM210.XMG-COLR-GRP-CD cursor, bold;
    ;
  end
  ;
   /* ----------------- END OF FK0F-2550 ------------------------------*/
end // end FK0F-2550

// Check duplicate VMUSGE01
Function FK0F-2560()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMUSGE01 empty;
  ;
  VMUSGE01.SY1STNBR = FK0FM210.SY1STNBR[FK0FW-IDX]; /* Style number*/
  ;
  if (FK0FM210.SY2CLRID[FK0FW-IDX] == " ") /* Color id*/
    VMUSGE01.SY2CLRID = "000";
  else
    VMUSGE01.SY2CLRID = FK0FM210.SY2CLRID[FK0FW-IDX]; /* Color id*/
  end
  ;
  VMUSGE01.XDMCD = FK0FM210.XDMCD[FK0FW-IDX]; /* Dimension code*/
  ;
  VMUSGE01.FK-MAT-NBR = FK0FM210.FK-MAT-NBR;
  VMUSGE01.XMG-COLR-GRP-CD = FK0FM210.XMG-COLR-GRP-CD;
  VMUSGE01.XCLCD = FK0FM210.XCLCD;
  ;
  try
    call "IO6240" ("S ", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FK0FW00.FK0FW-VMUSGE01-FOUND-SW = "Y";
      FK0FW00.FK0FW-REQUEST-DATA-SW = "N";
      VMUSGE01.SY1STNBR = " "; /* Reset*/
      ;
      set FK0FM210.SY1STNBR[FK0FW-IDX] bold, cursor;
      set FK0FM210.SY2CLRID[FK0FW-IDX] bold;
      set FK0FM210.XDMCD[FK0FW-IDX] bold;
      converseLib.validationFailed(16); /* Key already exists*/
      FKWREC.XXX-MOD-ID = "2560"; /* Module identification*/
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2560"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2560 CHECK DUPLICATE VMUSGE01   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = FK0FM210.SY1STNBR[FK0FW-IDX]; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  VMUSGE01.VMUSGE01-GROUP = " "; /* Reset*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-2560

// Verify no changes made
Function FK0F-2570()
   /* ------------------------------------------------------------------*/
   /* Exit to re-confirm if any changes made to data.*/
   /* ------------------------------------------------------------------*/
  ;
   /* ======> First check the header*/
  ;
  if (FK0FM210.FK-MAT-NBR == FK0FW02.FK-MAT-NBR           /* Material*/
   && FK0FM210.XMG-COLR-GRP-CD == FK0FW02.XMG-COLR-GRP-CD /* Clr group*/
   && FK0FM210.XCLCD == FK0FW02.XCLCD)                    /* Color*/
    ;
     /* next sentence*/
  else
    ;
    FK0FW00.FK0FW-CONFIRM-SW = "Y"; /* Still need to confirm*/
    FK0FW00.FK0FW-REQUEST-DATA-SW = "Y"; /* Re-obtain the data*/
    FKWREC.XXXMSGNO = 30; /* Press enter to continue*/
    FKWREC.XXX-MOD-ID = "2570"; /* Module identification*/
    exit stack;
  end
  ;
  ;
   /* ======> Now check the detail lines*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Init index*/
  while (FK0FW00.FK0FW-IDX <= 15) /* Check each line*/
    ;
    if (FK0FM210.SY1STNBR[FK0FW-IDX] == FK0FW02.SY1STNBR[FK0FW-IDX]
     && FK0FM210.SY2CLRID[FK0FW-IDX] == FK0FW02.SY2CLRID[FK0FW-IDX]
     && FK0FM210.XDMCD[FK0FW-IDX] == FK0FW02.XDMCD[FK0FW-IDX]
     && FK0FM210.FK0FM-USAGE[FK0FW-IDX] == FK0FW02.FK0FW-USAGE[FK0FW-IDX]
     && FK0FM210.FK0FM-PF[FK0FW-IDX] == FK0FW02.FK0FW-PF[FK0FW-IDX]
     && FK0FM210.FK-MAT-WAST-PCT[FK0FW-IDX]
     == FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX])
      ;
       /* next sentence*/
    else
      ;
      FK0FW00.FK0FW-CONFIRM-SW = "Y"; /* Still need to confirm*/
      FK0FW00.FK0FW-REQUEST-DATA-SW = "Y"; /* Re-obtain the data*/
      FKWREC.XXXMSGNO = 30; /* Press enter to continue*/
      FKWREC.XXX-MOD-ID = "2570"; /* Module identification*/
      exit stack;
    end
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment*/
  end
  ;
  ;
end // end FK0F-2570

// Process valid input request
Function FK0F-2600()
   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-FORMAT-MAP-SW = "Y"; /* Format the map switch*/
  ;
   /* ------------------------------------------------------------*/
   /* Exit to obtain more data if it needs to be confirmed.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-CONFIRM-SW == "N") /* If not confirmed yet*/
    ;
    FKWREC.XXXMSGNO = 30; /* Enter to continue, pa2 to cancel*/
    FKWREC.XXX-MOD-ID = 2600; /* Module identification*/
    FK0FW00.FK0FW-CONFIRM-SW = "Y"; /* Confirm the data*/
    FK0FW00.FK0FW-REQUEST-DATA-SW = "Y"; /* And get the data*/
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Check to see if data needs to be added.  If it does, add the*/
   /* data to the tables.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-UPDT-PERFORMED-SW = "N"; /* Update performed switch*/
  FK0FW00.FK0FW-IDX = 15; /* Reset index*/
  ;
  XX0XS01(); /* Get date and time*/
  ;
   /* ------------------------------------------------------------*/
   /* If no data found for dcmpnt.vmusge01, add record to table*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-IDX = 1;
  ;
  while (FK0FW00.FK0FW-IDX <= 15)
    ;
    if (FK0FM210.SY1STNBR[FK0FW-IDX] > " ")
      ;
      FK0F-2610(); /* Set up record for insertion*/
      ;
      if (converseVar.validationMsgNum != 0) /* Check for errors*/
        exit stack;
      end
      ;
      FK0F-2630(); /* Insert record into DCMPNT.VMUSGE01*/
      ;
    end
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment index*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If update occurred, clear working storage and clear out map.*/
   /* Send successful update message.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-UPDT-PERFORMED-SW == "Y") /* Update performed switch*/
    ;
    set FK0FW01 empty;
    ;
    FK0FW01.FK-MAT-NBR = FK0FM210.FK-MAT-NBR;
    FK0FW01.XMG-COLR-GRP-CD = FK0FM210.XMG-COLR-GRP-CD;
    FK0FW01.XCLCD = FK0FM210.XCLCD;
    ;
    set FK0FM210 initial;
    ;
    FK0FM210.FK-MAT-NBR = FK0FW01.FK-MAT-NBR; /* material*/
    FK0FM210.XMG-COLR-GRP-CD = FK0FW01.XMG-COLR-GRP-CD; /* Color grp*/
    FK0FM210.XCLCD = FK0FW01.XCLCD; /* Dimension*/
    ;
    FK0FW00.FK0FW-FORMAT-MAP-SW = "Y"; /* Format map switch*/
    FK0FW00.FK0FW-REQUEST-DATA-SW = "Y"; /* Request data switch*/
    FKWREC.XXX-MOD-ID = "2600"; /* Module id*/
    FKWREC.XXXMSGNO = 1; /* Update completed*/
    ;
  end
  ;
  ;
  FK0FW00.FK0FW-CONFIRM-SW = "N"; /* Reset switch*/
  FK0FW00.FK0FW-REQUEST-DATA-SW = "Y"; /* And get the data*/
  ;
  ;
end // end FK0F-2600

// Set up record for insertion
Function FK0F-2610()
   /* ---------------------------------------------------------------------*/
   /* If an existing manufacturing percent exists for the style, color, dim*/
   /* use it as the default, otherwise if development found move 000 to*/
   /* percent or if production found move 1 to percent.*/
   /* ---------------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-VMUSGE01-FOUND-SW = "N";
  ;
  FK0F-2620(); /* Declare cursor DCMPNT.VMUSGE01*/
  ;
  FK0F-2621(); /* Read in record from*/
                                        /* (DCMPNT.VMUSGE01)*/
  FK0F-2625(); /* Close cursor*/
  ;
  if (FK0FW00.FK0FW-VMUSGE01-FOUND-SW == "Y")
    FK0FW00.FK-MAT-MFG-PCT = VMUSGE01.FK-MAT-MFG-PCT;
  else
    if (FK0FW03.FK0FW-VSYDVL01-PROD-SW[FK0FW-IDX] == "Y")
      if (FK0FM210.SY2CLRID[FK0FW-IDX] == "000")
        FK0FW00.FK-MAT-MFG-PCT = 1;
      else
        FK0FW00.FK-MAT-MFG-PCT = 0;
      end
    else
      FK0FW00.FK-MAT-MFG-PCT = 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Set up the record for insertion into VMUSGE01 table*/
   /* ------------------------------------------------------------*/
  ;
  set VMUSGE01 empty; /* Initialize record*/
  ;
  VMUSGE01.SY1STNBR = FK0FM210.SY1STNBR[FK0FW-IDX];
  VMUSGE01.SY2CLRID = FK0FM210.SY2CLRID[FK0FW-IDX];
  VMUSGE01.XDMCD = FK0FM210.XDMCD[FK0FW-IDX];
  VMUSGE01.FK-MAT-NBR = FK0FM210.FK-MAT-NBR; /* Material*/
  VMUSGE01.XMG-COLR-GRP-CD = FK0FM210.XMG-COLR-GRP-CD;
  VMUSGE01.XCLCD = FK0FM210.XCLCD; /* Color Code*/
  VMUSGE01.FK-MAT-WAST-PCT = FK0FM210.FK-MAT-WAST-PCT[FK0FW-IDX];
  VMUSGE01.FK-MAT-MFG-PCT = FK0FW00.FK-MAT-MFG-PCT;
  ;
  if (FK0FM210.FK0FM-PF[FK0FW-IDX] == "P")
    VMUSGE01.FK-MAT-PROD-USE = FK0FM210.FK0FM-USAGE[FK0FW-IDX];
    VMUSGE01.FK-MAT-PROD-USE-DT = XX0XW01.XX0XWDAT;
  else
    if (FK0FM210.FK0FM-PF[FK0FW-IDX] == "F")
      VMUSGE01.FK-MAT-FINL-USE = FK0FM210.FK0FM-USAGE[FK0FW-IDX];
      VMUSGE01.FK-MAT-FINL-USE-DT = XX0XW01.XX0XWDAT;
    else
      VMUSGE01.FK-MAT-DEVL-USE = FK0FM210.FK0FM-USAGE[FK0FW-IDX];
      VMUSGE01.FK-MAT-DEVL-USE-DT = XX0XW01.XX0XWDAT;
    end
  end
  ;
  VMUSGE01.ZZZSDT = XX0XW01.XX0XWDAT; /* Setup date*/
  VMUSGE01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VMUSGE01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VMUSGE01.ZZZCHGCT = 0; /* Change count*/
  ;
end // end FK0F-2610

// Open DCMPNT.VMUSGE01
Function FK0F-2620()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMUSGE01 empty;
  ;
  VMUSGE01.SY1STNBR = FK0FM210.SY1STNBR[FK0FW-IDX]; /* Style number*/
  ;
  if (FK0FM210.SY2CLRID[FK0FW-IDX] == " ") /* Color id*/
    VMUSGE01.SY2CLRID = "000";
  else
    VMUSGE01.SY2CLRID = FK0FM210.SY2CLRID[FK0FW-IDX];
  end
  ;
  VMUSGE01.XDMCD = FK0FM210.XDMCD[FK0FW-IDX]; /* Dimension*/
  ;
  try
    call "IO6240" ("S1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2620 GET MTRL USAGE DATA ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-2620

// Read DCMPNT.VMATRL01
Function FK0F-2621()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6240" ("N1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VMUSGE01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VMUSGE01-FOUND-SW = "N";
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2621"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2621 READ NEXT MTL USAGE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-2621

// Close DCMPNT.VMATRL01
Function FK0F-2625()
   /* ------------------------------------------------------------*/
   /* Close the Material table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6240" ("C1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2625"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2625 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-2625

// Add DCMPNT.VMUSGE01
Function FK0F-2630()
   /* ------------------------------------------------------------*/
   /* Add the requested row to the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6240" ("A ", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback changes*/
  ;
  FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2610 ADD DCMPNT.VMUSGE01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-2630

// Process CHANGE map
Function FK0F-3000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0F-3100(); /* Obtain the data to display*/
  ;
  FK0F-3200(); /* Format and display the map*/
  ;
  FK0F-3300(); /* Check attention identifier*/
  ;
  FK0F-3400(); /* Reset fields to normal intensity*/
  ;
  FK0F-3500(); /* Verify the entered data*/
  ;
  FK0F-3600(); /* Process valid input request*/
  ;
  ;
end // end FK0F-3000

// Obtain data to display
Function FK0F-3100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-REQUEST-DATA-SW != "Y" /* data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FK0FW00.XXXTSPAG = 1;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key*/
   /* --------------------------------------------------------------*/
  ;
  FK0F-3105(); /* Purge temporary storage*/
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length*/
   /* --------------------------------------------------------------*/
  ;
  FK0FW00.XXXTSLEN = 1245; /* Temporary storage length*/
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be redisplayed on the map*/
   /* --------------------------------------------------------------*/
  ;
  set FK0FW01 empty; /* Initialize hold storage*/
  set FK0FW02 empty; /* Initialize display storage*/
  ;
  FK0FW01.FK-MAT-NBR = FK0FM310.FK-MAT-NBR; /* Material number*/
  FK0FW01.XMG-COLR-GRP-CD = FK0FM310.XMG-COLR-GRP-CD; /* Colr grp*/
  FK0FW01.XCLCD = FK0FM310.XCLCD; /* Color code*/
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-VMATRL01-EOF-SW = "N"; /* Set end of file switch*/
  ;
  if (FK0FM310.FK-MAT-NBR > " ") /* If Material Number entered*/
    ;
    FK0F-3110(); /* Declare cursor for material table*/
                                 /* (DCMPNT.VMATRL01)*/
    FK0F-3111(); /* Fetch a row from material table*/
                                 /* (DCMPNT.VMATRL01)*/
    FK0F-3115(); /* Close a cursor for material table*/
                                 /* (DCMPNT.VMATRL01)*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Declare and open the cursor for the Material Usage table*/
   /* --------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-VMUSGE01-EOF-SW = "N"; /* Set end of file switch*/
  FK0FW00.FK0FW-IDX = 1; /* Reset display line index*/
  ;
  FK0F-3120(); /* Open Material Usage file*/
                                  /* (DCMPNT.VMUSGE01)*/
  ;
  FK0F-3121(); /* Read next record*/
                                  /* (DCMPNT.VMUSGE01)*/
  ;
  if (FK0FW00.FK0FW-VMUSGE01-EOF-SW == "Y")
    ;
    FKWREC.XXXMSGNO = 15; /* No row on table with this key*/
    FKWREC.XXX-MOD-ID = "3100"; /* Module id*/
    FK0FW00.FK0FW-REQUEST-DATA-SW = "N";
    FK0FW00.FK0FW-FORMAT-MAP-SW = "Y";
    exit stack;
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Loop and load Material usage data to temporary storage*/
   /* --------------------------------------------------------------*/
  ;
  while (FK0FW00.FK0FW-VMUSGE01-EOF-SW != "Y") /* If material usage not eof*/
    ;
    FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "N";
    FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "N";
    ;
    FK0F-3130(); /* Select style product data*/
                                  /* (DCMPNT.VSYCLR01)*/
    if (FK0FW00.FK0FW-VSYCLR01-FOUND-SW == "N") /* Production style not found*/
      FK0F-3140(); /* Select development style product data*/
                                  /* (DCMPNT.VSYDVL01)*/
    end
    ;
    FK0F-3150(); /* Determine usage, yield and save info*/
                                  /* in temporary storage*/
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment index*/
    ;
    if (FK0FW00.FK0FW-IDX > 15)
      ;
      FK0F-3160(); /* Update temporary storage*/
      FK0FW00.FK0FW-IDX = 1; /* Reset line count*/
      ;
    end
    ;
    FK0F-3121(); /* Read next record*/
                                  /* (DCMPNT.VMUSGE01)*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Add any partially formatted page into temporary storage*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-IDX > 1)
    ;
    FK0F-3160(); /* Add page to temporary storage*/
    FK0FW00.FK0FW-IDX = 1;
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Close Material Cursor*/
   /* --------------------------------------------------------------*/
  ;
  FK0F-3125(); /* Close Material Usage file*/
                                  /* (DCMPNT.VMUSGE01)*/
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-REQUEST-DATA-SW = "N";
  FK0FW00.FK0FW-FORMAT-MAP-SW = "Y";
  ;
end // end FK0F-3100

// Purge any temporary storage
Function FK0F-3105()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0FW02 empty; /* M310 display storage*/
  ;
  FK0FW00.FK0FW-UPDATE-SW = "N"; /* Storage update switch*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FK0FW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FK0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3105"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END OF FK0F-3105 -----------------------------*/
end // end FK0F-3105

// Open cursor (DCMPNT.VMATRL01)
Function FK0F-3110()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FK0FM310.FK-MAT-NBR; /* Material number*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6190" ("S2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3110 OPEN MATERIAL CURSOR       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.FK-MAT-NBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-3110

// Fetch cursor (DCMPNT.VMATRL01)
Function FK0F-3111()
   /* ------------------------------------------------------------*/
   /* Read in the row requested from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6190" ("N2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Material not found*/
      ;
      converseLib.validationFailed(26); /* No row on table with specified key*/
      FKWREC.XXX-MOD-ID = "3111"; /* Module id*/
      set FK0FM310.FK-MAT-NBR cursor, bold;
      ;
      return;
      ;
    else
      ;
      if (SQLCA.VAGen_SQLCODE == 0) /* Material found*/
        return;
      end
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3111"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3111 GET MATERIAL DATA          ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.FK-MAT-NBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-3111

// Close cursor (DCMPNT.VMATRL01)
Function FK0F-3115()
   /* ------------------------------------------------------------*/
   /* Close the cursor*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6190" ("C2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3115"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3115 CLOSE CURSOR               ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-3115

// Open DCMPNT.VMUSGE01
Function FK0F-3120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMUSGE01 empty;
  ;
  VMUSGE01.FK-MAT-NBR = FK0FW01.FK-MAT-NBR; /* Material number*/
  VMUSGE01.XMG-COLR-GRP-CD = FK0FW01.XMG-COLR-GRP-CD; /* Color grp*/
  VMUSGE01.XCLCD = FK0FW01.XCLCD; /* Color code*/
  ;
  try
    call "IO6240" ("S2", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3120 OPEN MATRL USAGE TBL";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-3120

// Read next DCMPNT.VMUSGE01
Function FK0F-3121()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the vmusge01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6240" ("N2", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VMUSGE01-EOF-SW = "Y"; /* End of file*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3121"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3121 READ MTRL USAGE DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-3121

// Close DCMPNT.VMUSGE01
Function FK0F-3125()
   /* ------------------------------------------------------------*/
   /* Close the VMUSEG01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6240" ("C2", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3125"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3125 CLOSE MTRL USAGE TABLE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-3125

// Select style (DPRODG.VSYCLR01)
Function FK0F-3130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = VMUSGE01.SY1STNBR; /* Style number*/
  PG2REC.SY2CLRID = VMUSGE01.SY2CLRID; /* Color id*/
  PG2REC.XDMCD = VMUSGE01.XDMCD; /* Dimension*/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "N";
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3130"; /* Module identification*/
  ;
  FK0FW00.FK0FW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3130 GET STYLE DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLRO1"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-3130

// Select style (DPRODG.VSYDVL01)
Function FK0F-3140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  PG4REC.PG4STNBR = VMUSGE01.SY1STNBR; /* Style number*/
  ;
  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "N";
      ;
      return;
      ;
    end
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3140"; /* Module identification*/
  ;
  FK0FW00.FK0FW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3140 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-3140

// Save row, Calc usage
Function FK0F-3150()
   /* ------------------------------------------------------------------*/
   /* Save valid key into temporary storage*/
   /* ------------------------------------------------------------------*/
  ;
  FK0FW01.FK-VEND-CD = VMATRL01.FK-VEND-CD; /* Vendor code*/
  FK0FW02.FK-VEND-CD = VMATRL01.FK-VEND-CD; /* Vendor code*/
  FK0FW02.FK-MAT-NBR = VMATRL01.FK-MAT-NBR; /* Material number*/
  FK0FW02.XTM-MAT-THCK-CD = VMATRL01.XTM-MAT-THCK-CD; /* Thck cd*/
  FK0FW02.XMG-COLR-GRP-CD = VMUSGE01.XMG-COLR-GRP-CD; /* Color grp cd*/
  FK0FW02.XCLCD = VMUSGE01.XCLCD; /* Color code*/
  ;
  FK0FW02.SY1STNBR[FK0FW-IDX] = VMUSGE01.SY1STNBR; /* Style number*/
  FK0FW02.SY2CLRID[FK0FW-IDX] = VMUSGE01.SY2CLRID; /* Color id*/
  FK0FW02.XDMCD[FK0FW-IDX] = VMUSGE01.XDMCD; /* Dimension*/
  ;
  if (FK0FW00.FK0FW-VSYCLR01-FOUND-SW == "Y")
    ;
    FK0FW02.SY1SSTNM[FK0FW-IDX] = PG2REC.SY1SSTNM; /* Name*/
    FK0FW02.SY2CLRAB[FK0FW-IDX] = PG2REC.SY2CLRAB; /* Name*/
    ;
  else
    ;
    if (FK0FW00.FK0FW-VSYDVL01-FOUND-SW == "Y")
      ;
      FK0FW02.SY1SSTNM[FK0FW-IDX] = PG4REC.SY1SSTNM; /* Name*/
      ;
    else
      ;
      FK0FW02.SY1SSTNM[FK0FW-IDX] = "*NOT FOUND*"; /* Name*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine the Usage and P/F indicator for the product*/
   /* ------------------------------------------------------------*/
  ;
  if (VMUSGE01.FK-MAT-FINL-USE != 0)
    ;
    FK0FW02.FK0FW-USAGE[FK0FW-IDX] = VMUSGE01.FK-MAT-FINL-USE;
    FK0FW02.FK0FW-PF[FK0FW-IDX] = "F";
    ;
  else
    ;
    if (VMUSGE01.FK-MAT-PROD-USE != 0)
      ;
      FK0FW02.FK0FW-USAGE[FK0FW-IDX] = VMUSGE01.FK-MAT-PROD-USE;
      FK0FW02.FK0FW-PF[FK0FW-IDX] = "P";
      ;
    else
      ;
      if (VMUSGE01.FK-MAT-DEVL-USE != 0)
        ;
        FK0FW02.FK0FW-USAGE[FK0FW-IDX] = VMUSGE01.FK-MAT-DEVL-USE;
        FK0FW02.FK0FW-PF[FK0FW-IDX] = " ";
        ;
      end
      ;
    end
    ;
  end
  ;
  FK0FW02.FK-MAT-DEVL-USE[FK0FW-IDX] = VMUSGE01.FK-MAT-DEVL-USE;
  FK0FW02.FK-MAT-PROD-USE[FK0FW-IDX] = VMUSGE01.FK-MAT-PROD-USE;
  FK0FW02.FK-MAT-FINL-USE[FK0FW-IDX] = VMUSGE01.FK-MAT-FINL-USE;
  FK0FW02.FK-MAT-DEVL-USE-DT[FK0FW-IDX] = VMUSGE01.FK-MAT-DEVL-USE-DT;
  FK0FW02.FK-MAT-PROD-USE-DT[FK0FW-IDX] = VMUSGE01.FK-MAT-PROD-USE-DT;
  FK0FW02.FK-MAT-FINL-USE-DT[FK0FW-IDX] = VMUSGE01.FK-MAT-FINL-USE-DT;
  FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX] = VMUSGE01.FK-MAT-WAST-PCT;
  FK0FW02.FK-MAT-MFG-PCT[FK0FW-IDX] = VMUSGE01.FK-MAT-MFG-PCT;
  FK0FW02.ZZZSDT[FK0FW-IDX] = VMUSGE01.ZZZSDT;
  FK0FW02.ZZZCHGCT[FK0FW-IDX] = VMUSGE01.ZZZCHGCT;
  ;
   /* ------------------------------------------------------------------*/
   /* Yield calculation*/
   /* ------------------------------------------------------------------*/
  ;
  FK0FW02.FK0FW-YIELD[FK0FW-IDX] = FK0FW02.FK0FW-USAGE[FK0FW-IDX] -   FK0FW02.FK0FW-USAGE[FK0FW-IDX] * FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX];
  ;
  ;
end // end FK0F-3150

// Add page to temporary storage
Function FK0F-3160()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW02.XXXTSLEN = FK0FW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FK0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FK0FW02 empty; /* M001 display storage*/
    ;
    FK0FW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3160"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END OF FK0F-3160 ------------------------------*/
end // end FK0F-3160

// Format and converse map
Function FK0F-3200()
   /* -------------------------------------------------------------*/
   /* If an error was found, save the error message number*/
   /* -------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
   /* -------------------------------------------------------------*/
   /* If obtain data failed or no error, format data to display*/
   /* -------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-REQUEST-DATA-SW == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0)   /* or no error found*/
    ;
    if (FK0FW00.FK0FW-FORMAT-MAP-SW == "Y") /* Map must be formatted*/
      FK0F-3210(); /* Format the data on the map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Protect select fields where no data is present.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0FW00.FK0FW-IDX <= 15) /* Until screen is processed*/
    ;
    if (FK0FW02.SY1STNBR[FK0FW-IDX] <= " ")
      set FK0FM310.FK0FM-SEL[FK0FW-IDX] invisible, skip;
      set FK0FM310.FK0FM-USAGE[FK0FW-IDX] invisible, skip;
      set FK0FM310.FK0FM-PF[FK0FW-IDX] invisible, skip;
      set FK0FM310.FK-MAT-WAST-PCT[FK0FW-IDX] invisible, skip;
      set FK0FM310.FK0FM-YIELD[FK0FW-IDX] invisible, skip;
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment line index*/
    else
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment line index*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FM310.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0FM310.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0FM310.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0FM310.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0FM310.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
    ;
    set FK0FM310 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse FK0FM310 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0FM310.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0FM310.CAITEM; /* Application data*/
  ;
end // end FK0F-3200

// Format the display data
Function FK0F-3210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0FM310 initial; /* M310 input/output area*/
  ;
  FK0FW00.FK0FW-FORMAT-MAP-SW = "N"; /* Format the map switch*/
  ;
   /* ------------------------------------------------------------*/
   /* If the current page has been changed, update the page in*/
   /* storage before obtaining the next one to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FK0FW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
        /* --------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* --------------------------------------------------------*/
      ;
      if (FK0FW00.FK0FW-UPDATE-SW == "Y") /* Current page was changed*/
        ;
        FK0FS-01(); /* Update temp storage page*/
        ;
        FK0FW00.FK0FW-UPDATE-SW = "N"; /* Reset storage switch*/
        ;
      end
      ;
        /* --------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* --------------------------------------------------------*/
      ;
      if (FK0FW00.XXXTSPAG > FK0FW00.TA5TSQIX)
        ;
        FK0FW00.XXXTSPAG = FK0FW00.TA5TSQIX; /* Default to highest*/
        ;
      end
      ;
      FK0FS-02(); /* Obtain temp storage page*/
      ;
    end
    ;
     /* --------------------------------------------------------*/
     /* Display the page information on the screen.*/
     /* --------------------------------------------------------*/
    ;
    set FK0FM310.XXXLITPG skip; /* "PAGE" literal*/
    FK0FM310.XXXTSPAG = FK0FW00.XXXTSPAG; /* Current page*/
    set FK0FM310.XXXLITOF skip; /* "OF" literal*/
    FK0FM310.TA5TSQIX = FK0FW00.TA5TSQIX; /* Highest page*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW02.FK-MAT-NBR <= " ") /* Material NBR not present*/
    set FK0FM310.FK-MAT-NBR cursor; /* Position cursor*/
  end
  ;
  FK0FM310.FK-VEND-CD = FK0FW02.FK-VEND-CD; /* Vendor code*/
  FK0FM310.FK-MAT-NBR = FK0FW01.FK-MAT-NBR; /* Style number*/
  FK0FM310.XTM-MAT-THCK-CD = FK0FW02.XTM-MAT-THCK-CD; /* Thickness cd*/
  FK0FM310.XMG-COLR-GRP-CD = FK0FW01.XMG-COLR-GRP-CD; /* Color Grp cd*/
  FK0FM310.XCLCD = FK0FW01.XCLCD; /* Color code*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0FW00.FK0FW-IDX <= 15) /* Until screen is full*/
    ;
    FK0FM310.FK0FM-SEL[FK0FW-IDX] = FK0FW02.FK0FW-SEL[FK0FW-IDX];
    FK0FM310.SY1STNBR[FK0FW-IDX] = FK0FW02.SY1STNBR[FK0FW-IDX];
    FK0FM310.SY2CLRID[FK0FW-IDX] = FK0FW02.SY2CLRID[FK0FW-IDX];
    FK0FM310.XDMCD[FK0FW-IDX] = FK0FW02.XDMCD[FK0FW-IDX];
    FK0FM310.SY1SSTNM[FK0FW-IDX] = FK0FW02.SY1SSTNM[FK0FW-IDX];
    FK0FM310.SY2CLRAB[FK0FW-IDX] = FK0FW02.SY2CLRAB[FK0FW-IDX];
    FK0FM310.FK0FM-USAGE[FK0FW-IDX] = FK0FW02.FK0FW-USAGE[FK0FW-IDX];
    FK0FM310.FK0FM-PF[FK0FW-IDX] = FK0FW02.FK0FW-PF[FK0FW-IDX];
    FK0FM310.FK-MAT-WAST-PCT[FK0FW-IDX] = FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX];
    FK0FM310.FK0FM-YIELD[FK0FW-IDX] = FK0FW02.FK0FW-YIELD[FK0FW-IDX];
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
end // end FK0F-3210

// Check attention identifier
Function FK0F-3300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize FKWREC*/
    FKWREC.FK-MAT-NBR[1] = FK0FW01.FK-MAT-NBR; /* Material nuber*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0FW01.XMG-COLR-GRP-CD; /* Colr grp*/
    FKWREC.XCLCD[1] = FK0FW01.XCLCD; /* Color cd*/
    ;
    COMMAREA.CATOAP = "FK0F"; /* to applicaiton*/
    COMMAREA.CAITEM = "C   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0FM310.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM310.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      FK0F-3105(); /* Purge temporary storage*/
      ;
      set FKWREC empty; /* Initialize FKWREC*/
      ;
      FKWREC.FK-VEND-CD[1] = FK0FM310.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-NBR[1] = FK0FM310.FK-MAT-NBR; /* Material*/
      FKWREC.XMG-COLR-GRP-CD[1] = FK0FM310.XMG-COLR-GRP-CD;
      FKWREC.XCLCD[1] = FK0FM310.XCLCD;
      ;
      COMMAREA.CATOAP = FK0FM310.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0FM310.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0FM310.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* FK0E (MTRL) requested*/
   || converseVar.eventKey is pf14 /* FK0G (CONT) requested*/
   || converseVar.eventKey is pf15 /* FK0H (CLST) requested*/
   || converseVar.eventKey is pf16 /* FK0M (MSTY) requested*/
   || converseVar.eventKey is pf19) /* FK0Q (MCLR) requested*/
    ;
    set FKWREC empty; /* Initialize FKWREC*/
    ;
    FKWREC.FK-VEND-CD[1] = FK0FM310.FK-VEND-CD; /* Vendor code*/
    FKWREC.FK-MAT-NBR[1] = FK0FM310.FK-MAT-NBR; /* Material nuber*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0FM310.XMG-COLR-GRP-CD;
    FKWREC.XCLCD[1] = FK0FM310.XCLCD;
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0FM310"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = FK0FM310.CAITEM; /* item*/
      ;
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0FM310.CAITEM; /* item*/
      ;
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed (MTRL)*/
      COMMAREA.CATOAP = "FK0E"; /* TO application*/
      COMMAREA.CAITEM = FK0FM310.CAITEM; /* item*/
      ;
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed (CONT)*/
      COMMAREA.CATOAP = "FK0G"; /* TO application*/
      COMMAREA.CAITEM = FK0FM310.CAITEM; /* item*/
      ;
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed (CLST)*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
      COMMAREA.CAITEM = FK0FM310.CAITEM; /* item*/
      ;
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed (STYM)*/
      COMMAREA.CATOAP = "FK0M"; /* TO application*/
      COMMAREA.CAITEM = FK0FM310.CAITEM; /* item*/
      ;
    end
    ;
    if (converseVar.eventKey is pf19) /* PF19 was pressed (MCLR)*/
      COMMAREA.CATOAP = "FK0Q"; /* TO application*/
      COMMAREA.CAITEM = FK0FM310.CAITEM; /* item*/
      ;
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* Scroll Back requested*/
   && converseVar.eventKey not pf8)  /* Scroll Forward requested*/
    ;
    FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
end // end FK0F-3300

// Reset highlighted fields
Function FK0F-3400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0FM310.FK-MAT-NBR initialAttributes; /* Style number*/
  set FK0FM310.XTM-MAT-THCK-CD initialAttributes; /* Thickness code*/
  set FK0FM310.XMG-COLR-GRP-CD initialAttributes; /* Color group*/
  set FK0FM310.XCLCD initialAttributes; /* Color code*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0FW00.FK0FW-IDX <= 15 /* Until end of lines*/
   && FK0FM310.FK-MAT-NBR > " ") /* or end of display*/
    ;
    set FK0FM310.FK0FM-SEL[FK0FW-IDX] normal; /* Reset select flag*/
    set FK0FM310.FK0FM-USAGE[FK0FW-IDX] initialAttributes;
    set FK0FM310.FK0FM-PF[FK0FW-IDX] initialAttributes;
    set FK0FM310.FK-MAT-WAST-PCT[FK0FW-IDX] initialAttributes;
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
  set FK0FM310.CATOAP initialAttributes; /* TO application*/
  set FK0FM310.CAITEM initialAttributes; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* Display color group list if requested*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM310.XMG-COLR-GRP-CD == "?") /* Color group list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      FKWREC.XXX-MOD-ID = "3400"; /* Module id*/
      converseLib.validationFailed(19); /* PA/PF key may not be used*/
      exit stack; /* Exit to display map*/
    else
      ;
      XPXX001(); /* Window initialization*/
      ;
      XX0XW02.XX0XWHDR = "COLOR GROUP"; /* Heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* Until end of display*/
        ;
        XPXMG01(); /* Display color group list*/
        ;
      end
      ;
      if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
        FK0FM310.XMG-COLR-GRP-CD = " "; /* Restore prior code*/
      else
        FK0FM310.XMG-COLR-GRP-CD = XMGTBL.XMG-COLR-GRP-CD[XX0XWPIX];
      end
      ;
      set FK0FM310.XMG-COLR-GRP-CD cursor; /* Establish cursor position*/
      ;
    end
    ;
     /* ------------------------------------------------------------*/
     /* Indicate the requested list has been displayed and that ENTER*/
     /* must be pressed to process any changes.*/
     /* ------------------------------------------------------------*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
    FKWREC.XXX-MOD-ID = "3400"; /* Module id*/
    converseLib.validationFailed(20); /* Corporate list displayed*/
    ;
    exit stack;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Display color list if requested*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM310.XCLCD == "?") /* Color cd list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      FKWREC.XXX-MOD-ID = "3400"; /* Module id*/
      converseLib.validationFailed(19); /* PA/PF key may not be used*/
      exit stack; /* Exit to display map*/
    else
      ;
      XPXX001(); /* Window initialization*/
      ;
      XX0XW02.XX0XWHDR = "COLOR CODE"; /* Heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* Until end of display*/
        ;
        XPXCL01(); /* Display color list*/
        ;
      end
      ;
      if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
        FK0FM310.XCLCD = " "; /* Restore prior code*/
      else
        FK0FM310.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
      end
      ;
      set FK0FM310.XCLCD cursor; /* Establish cursor position*/
      ;
    end
    ;
     /* ------------------------------------------------------------*/
     /* Indicate the requested list has been displayed and that ENTER*/
     /* must be pressed to process any changes.*/
     /* ------------------------------------------------------------*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
    FKWREC.XXX-MOD-ID = "3400"; /* Module id*/
    converseLib.validationFailed(20); /* Corporate list displayed*/
    ;
  end
  ;
end // end FK0F-3400

// Verify data that was entered
Function FK0F-3500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM310.CAITEM > " ") /* Application data was entered*/
    if (converseVar.eventKey is pf12 /* FK0E selected*/
     || converseVar.eventKey is pf14 /* FK0G selected*/
     || converseVar.eventKey is pf15 /* FK0H selected*/
     || converseVar.eventKey is pf16) /* FK0M selected*/
         /* next sentence*/
    else
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      set FK0FM310.CAITEM cursor, bold; /* Highlight*/
      converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    end
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Check to see if the key changed.  If any key fields changed, set*/
   /* the request for data switch and return to the top of the program*/
   /* -----------------------------------------------------------------*/
  ;
  if (FK0FM310.FK-MAT-NBR != FK0FW01.FK-MAT-NBR
   || FK0FM310.XMG-COLR-GRP-CD != FK0FW01.XMG-COLR-GRP-CD
   || FK0FM310.XCLCD != FK0FW01.XCLCD)
    ;
    FK0FW00.FK0FW-REQUEST-DATA-SW = "Y";
    ;
    exit stack;
    ;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Determine if a valid request to scroll was entered*/
   /* -----------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll up*/
   || converseVar.eventKey is pf8) /* Scroll down*/
    ;
    FK0F-3510(); /* Verify scroll request*/
    ;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Verify that the select fields contain either spaces or 'S'.*/
   /* -----------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-IDX = 15; /* Initialize line index*/
  ;
  while (FK0FW00.FK0FW-IDX > 0) /* Until end of lines*/
    ;
    if (FK0FM310.FK0FM-SEL[FK0FW-IDX] == "S") /* Select is S*/
      ;
        /* -----------------------------------------------------------*/
        /* VERIFY DETAIL LINE INFORMATION*/
        /* -----------------------------------------------------------*/
      ;
      FK0F-3520(); /* Check detail lines*/
      ;
        /* -----------------------------------------------------------*/
        /* Check to see if data was modified*/
        /* -----------------------------------------------------------*/
      ;
      FK0F-3521(); /* Check detail lines*/
      ;
    else
      ;
      if (FK0FM310.FK0FM-SEL[FK0FW-IDX] == " ") /* Select is spaces*/
        ;
           /* NEXT SENTENCE*/
        ;
      else
        ;
        FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
        converseLib.validationFailed(13); /* only 'S' may be entered*/
        set FK0FM310.FK0FM-SEL[FK0FW-IDX] cursor, bold; /* highlight*/
        ;
      end
      ;
        /* -----------------------------------------------------------*/
        /* Check to see if row not selected but was modified*/
        /* -----------------------------------------------------------*/
      ;
      FK0F-3522(); /* Check detail lines*/
      ;
    end
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX - 1; /* Decrement line number*/
    ;
  end
  ;
  ;
   /* -----------------------------------------------------------------*/
   /* Verify Color code entered*/
   /* -----------------------------------------------------------------*/
  ;
  FK0F-3530();
  ;
   /* -----------------------------------------------------------------*/
   /* Verify Color group code entered*/
   /* -----------------------------------------------------------------*/
  ;
  FK0F-3540();
  ;
   /* -----------------------------------------------------------------*/
   /* Verify Material number entered*/
   /* -----------------------------------------------------------------*/
  ;
  if (FK0FM310.FK-MAT-NBR > " ") /* Material number entered*/
    ;
     /* next sentence*/
    ;
  else
    ;
    FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
    set FK0FM310.FK-MAT-NBR cursor, bold; /* Highlight*/
    converseLib.validationFailed(8); /* Enter only with FAST PATH*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
end // end FK0F-3500

// Verify scroll request
Function FK0F-3510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FK0FW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FK0FW00.XXXTSPAG >= FK0FW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Indicate an error for any data that was modified.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM310.FK-MAT-NBR != FK0FW02.FK-MAT-NBR           /* Material number changed*/
   || FK0FM310.XMG-COLR-GRP-CD != FK0FW02.XMG-COLR-GRP-CD /* Colr grp chg*/
   || FK0FM310.XCLCD != FK0FW02.XCLCD)                    /* Color code changed*/
    ;
    FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
    set FK0FM310.FK-MAT-NBR cursor, bold; /* Highlight*/
    set FK0FM310.XMG-COLR-GRP-CD bold; /* Highlight*/
    set FK0FM310.XCLCD bold; /* Highlight*/
    converseLib.validationFailed(14); /* Field may not change*/
    ;
  end
  ;
   /* ----------------- END OF FK0F-3510 --------------------------*/
end // end FK0F-3510

// Verify Detail lines
Function FK0F-3520()
   /* ---------------------------------------------------------------*/
   /* Verify Waste Percent*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0FM310.FK-MAT-WAST-PCT[FK0FW-IDX] < 0
   || FK0FM310.FK-MAT-WAST-PCT[FK0FW-IDX] >= 1)
    converseLib.validationFailed(55); /* Waste % must be gt 0 and lt 1*/
    FKWREC.XXX-MOD-ID = "3520";
    set FK0FM310.FK-MAT-WAST-PCT[FK0FW-IDX] cursor, bold;
  end
  ;
   /* ---------------------------------------------------------------*/
   /* Verify P/F Indicator*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0FM310.FK0FM-PF[FK0FW-IDX] == "P"
   || FK0FM310.FK0FM-PF[FK0FW-IDX] == "F"
   || FK0FM310.FK0FM-PF[FK0FW-IDX] == " ")
    ;
     /* *//*NEXT SENTENCE*/
    ;
  else
    ;
    converseLib.validationFailed(54);
    FKWREC.XXX-MOD-ID = "3520";
    set FK0FM310.FK0FM-PF[FK0FW-IDX] bold, cursor;
    ;
  end
  ;
   /* ---------------------------------------------------------------*/
   /* Verify Usage*/
   /* The Usage may be 0 in change mode.  This is to allow for materials*/
   /* being changed from finl back to prod or devl and zeroing out the*/
   /* usage for finl.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0FM310.FK0FM-USAGE[FK0FW-IDX] < 0)
    ;
    converseLib.validationFailed(8); /* Required field invalid or missing*/
    FKWREC.XXX-MOD-ID = "3520";
    set FK0FM310.FK0FM-USAGE[FK0FW-IDX] bold, cursor;
  end
  ;
end // end FK0F-3520

// Verify line changed when Slctd
Function FK0F-3521()
   /* ---------------------------------------------------------------*/
   /* Check to see if the line was changed that was selected.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0FM310.FK0FM-USAGE[FK0FW-IDX] == FK0FW02.FK0FW-USAGE[FK0FW-IDX]
   && FK0FM310.FK0FM-PF[FK0FW-IDX] == FK0FW02.FK0FW-PF[FK0FW-IDX]
   && FK0FM310.FK-MAT-WAST-PCT[FK0FW-IDX] == 
  FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX])
    ;
    converseLib.validationFailed(25); /* No changes made to this row*/
    FKWREC.XXX-MOD-ID = "3521";
    set FK0FM310.FK0FM-SEL[FK0FW-IDX] cursor, bold;
    set FK0FM310.FK0FM-USAGE[FK0FW-IDX] bold;
    set FK0FM310.FK0FM-PF[FK0FW-IDX] bold;
    set FK0FM310.FK-MAT-WAST-PCT[FK0FW-IDX] bold;
    ;
  end
  ;
end // end FK0F-3521

// Check row if modifed & not "S"
Function FK0F-3522()
   /* ---------------------------------------------------------------*/
   /* Check to see if the line was changed that was selected.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0FM310.FK0FM-USAGE[FK0FW-IDX] == FK0FW02.FK0FW-USAGE[FK0FW-IDX]
   && FK0FM310.FK0FM-PF[FK0FW-IDX] == FK0FW02.FK0FW-PF[FK0FW-IDX]
   && FK0FM310.FK-MAT-WAST-PCT[FK0FW-IDX] == 
  FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX])
    ;
     /* Next sentence*/
    ;
  else
    ;
    converseLib.validationFailed(24); /* No changes made to this row*/
    FKWREC.XXX-MOD-ID = "3521";
    set FK0FM310.FK0FM-SEL[FK0FW-IDX] cursor, bold;
    ;
  end
  ;
end // end FK0F-3522

// Search XCLTBL for Color code
Function FK0F-3530()
   /* ------------------------------------------------------------*/
   /* Check to see is Color code was entered*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM310.XCLCD <= " ")
    set FK0FM310.XCLCD bold, cursor;
    FKWREC.XXX-MOD-ID = "3530";
    converseLib.validationFailed(8);
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Read CSP Corporate table for color code validation*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM310.XCLCD in XCLTBL.XCLCD)
    ;
    if (XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status active*/
      ;
      return;
      ;
    end
    ;
  else
    ;
    FKWREC.XXX-MOD-ID = "3530"; /* Module id*/
    set FK0FM310.XCLCD cursor, bold;
    converseLib.validationFailed(32); /* Required field not found*/
    ;
  end
  ;
   /* ----------------- END OF FK0F-3530 ------------------------------*/
end // end FK0F-3530

// Search XMGTBL for Color code
Function FK0F-3540()
   /* ------------------------------------------------------------*/
   /* Check to see if Color group code was entered*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM310.XMG-COLR-GRP-CD <= " ")
    set FK0FM310.XMG-COLR-GRP-CD bold, cursor;
    FKWREC.XXX-MOD-ID = "3540";
    converseLib.validationFailed(8);
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Read CSP Corporate table for color group validation*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM310.XMG-COLR-GRP-CD in XMGTBL.XMG-COLR-GRP-CD)
    ;
    if (XMGTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status active*/
      ;
      return;
      ;
    end
    ;
  else
    ;
    FKWREC.XXX-MOD-ID = "3540"; /* Module id*/
    set FK0FM310.XMG-COLR-GRP-CD cursor, bold;
    converseLib.validationFailed(31); /* Required field not found*/
    ;
  end
  ;
   /* ----------------- END OF FK0F-3540 ------------------------------*/
end // end FK0F-3540

// Process valid input request
Function FK0F-3600()
   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-FORMAT-MAP-SW = "Y";
  ;
   /* ------------------------------------------------------------*/
   /* If a scroll backward was requested, decrement the page number*/
   /* and return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Scroll backward requested*/
    ;
    FK0FW00.FK0FW-IDX = 15;
    FK0FW00.FK0FW-ROW-SELECTED-SW = "N";
    ;
    while (FK0FW00.FK0FW-IDX >= 1)
      ;
      if (FK0FM310.FK0FM-SEL[FK0FW-IDX] == "S")
        ;
        FK0FW00.FK0FW-ROW-SELECTED-SW = "Y";
        set FK0FM310.FK0FM-SEL[FK0FW-IDX] bold, cursor;
      end
      ;
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX - 1;
      ;
    end
    ;
    if (FK0FW00.FK0FW-ROW-SELECTED-SW == "Y")
      ;
      converseLib.validationFailed(81); /* scroll not allowed if row selected*/
      FKWREC.XXX-MOD-ID = "3600"; /* Module id*/
      return;
      ;
    else
      ;
      FK0FW00.XXXTSPAG = FK0FW00.XXXTSPAG - 1;
      ;
    end
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a scroll forward was requested, increment the page number*/
   /* and return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8) /* Scroll forward requested*/
    ;
    FK0FW00.FK0FW-IDX = 15;
    FK0FW00.FK0FW-ROW-SELECTED-SW = "N";
    ;
    while (FK0FW00.FK0FW-IDX >= 1)
      ;
      if (FK0FM310.FK0FM-SEL[FK0FW-IDX] == "S")
        ;
        FK0FW00.FK0FW-ROW-SELECTED-SW = "Y";
        set FK0FM310.FK0FM-SEL[FK0FW-IDX] bold, cursor;
      end
      ;
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX - 1;
      ;
    end
    ;
    if (FK0FW00.FK0FW-ROW-SELECTED-SW == "Y")
      ;
      converseLib.validationFailed(81); /* scroll not allowed if row selected*/
      FKWREC.XXX-MOD-ID = "3600"; /* Module id*/
      return;
      ;
    else
      ;
      FK0FW00.XXXTSPAG = FK0FW00.XXXTSPAG + 1;
      ;
    end
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Obtain date and time to be used for time stamping of records*/
   /* Check to see if data needs to be added.  If it does, add the*/
   /* data to the tables.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-UPDT-PERFORMED-SW = "N"; /* Update performed switch*/
  FK0FW00.FK0FW-IDX = 15; /* Reset index*/
  ;
  XX0XS01(); /* Get date and time*/
  ;
   /* ------------------------------------------------------------*/
   /* Update records to DCMPNT.VMUSGE01 table*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-IDX = 1;
  ;
  while (FK0FW00.FK0FW-IDX <= 15)
    ;
    if (FK0FM310.FK0FM-SEL[FK0FW-IDX] == "S")
      ;
      FK0F-3610(); /* Set up record for updating*/
      ;
      if (converseVar.validationMsgNum != 0) /* Check for errors*/
        exit stack;
      end
      ;
      FK0F-3620(); /* Update record in DCMPNT.VMUSGE01*/
      ;
    end
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment index*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If update occurred, clear working storage and clear out map.*/
   /* Send successful update message.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-UPDT-PERFORMED-SW == "Y") /* Update performed switch*/
    ;
    set FK0FW01 empty;
    ;
    FK0FW01.FK-MAT-NBR = FK0FM310.FK-MAT-NBR;
    FK0FW01.XMG-COLR-GRP-CD = FK0FM310.XMG-COLR-GRP-CD;
    FK0FW01.XCLCD = FK0FM310.XCLCD;
    ;
    set FK0FM310 initial;
    ;
    FK0FM310.FK-MAT-NBR = FK0FW01.FK-MAT-NBR; /* material*/
    FK0FM310.XMG-COLR-GRP-CD = FK0FW01.XMG-COLR-GRP-CD; /* Color grp*/
    FK0FM310.XCLCD = FK0FW01.XCLCD; /* Dimension*/
    ;
    FK0FW00.FK0FW-FORMAT-MAP-SW = "Y"; /* Format map switch*/
    FK0FW00.FK0FW-REQUEST-DATA-SW = "Y"; /* Request data switch*/
    FKWREC.XXX-MOD-ID = "3600"; /* Module id*/
    FKWREC.XXXMSGNO = 1; /* Update completed*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Save the select fields and clear the map input/output area.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* Help requested*/
   || converseVar.eventKey is pf3  /* Exit requested*/
   || converseVar.eventKey is pf4  /* Master menu*/
   || converseVar.eventKey is pf12 /* FK0E requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf14) /* FK0G requested*/
    ;
     /* ------------------------------------------------------------*/
      /* Update the modifiable data in the COMMAREA.*/
     /* ------------------------------------------------------------*/
    ;
    set FKWREC empty;
    ;
    FKWREC.SY1STNBR[1] = FK0FM310.SY1STNBR; /* Style number*/
    FKWREC.SY2CLRID[1] = FK0FM310.SY2CLRID; /* Color id*/
    FKWREC.XDMCD[1] = FK0FM310.XDMCD; /* Dimension code*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
end // end FK0F-3600

// Set up record for Update
Function FK0F-3610()
   /* ------------------------------------------------------------*/
   /* Set up the record for insertion into VMUSGE01 table*/
   /* ------------------------------------------------------------*/
  ;
  set VMUSGE01 empty; /* Initialize record*/
  ;
  VMUSGE01.SY1STNBR = FK0FM310.SY1STNBR[FK0FW-IDX];
  VMUSGE01.SY2CLRID = FK0FM310.SY2CLRID[FK0FW-IDX];
  VMUSGE01.XDMCD = FK0FM310.XDMCD[FK0FW-IDX];
  VMUSGE01.FK-MAT-NBR = FK0FM310.FK-MAT-NBR; /* Material*/
  VMUSGE01.XMG-COLR-GRP-CD = FK0FM310.XMG-COLR-GRP-CD;
  VMUSGE01.XCLCD = FK0FM310.XCLCD; /* Color Code*/
  VMUSGE01.FK-MAT-WAST-PCT = FK0FM310.FK-MAT-WAST-PCT[FK0FW-IDX];
  ;
  if (FK0FM310.FK0FM-PF[FK0FW-IDX] == "P")
    VMUSGE01.FK-MAT-PROD-USE = FK0FM310.FK0FM-USAGE[FK0FW-IDX];
    VMUSGE01.FK-MAT-PROD-USE-DT = XX0XW01.XX0XWDAT;
    VMUSGE01.FK-MAT-DEVL-USE = FK0FW02.FK-MAT-DEVL-USE[FK0FW-IDX];
    VMUSGE01.FK-MAT-DEVL-USE-DT = FK0FW02.FK-MAT-DEVL-USE-DT[FK0FW-IDX];
    VMUSGE01.FK-MAT-FINL-USE-DT = FK0FW02.FK-MAT-FINL-USE-DT[FK0FW-IDX];
  else
    if (FK0FM310.FK0FM-PF[FK0FW-IDX] == "F")
      VMUSGE01.FK-MAT-FINL-USE = FK0FM310.FK0FM-USAGE[FK0FW-IDX];
      VMUSGE01.FK-MAT-FINL-USE-DT = XX0XW01.XX0XWDAT;
      VMUSGE01.FK-MAT-PROD-USE-DT = FK0FW02.FK-MAT-PROD-USE-DT[FK0FW-IDX];
      VMUSGE01.FK-MAT-PROD-USE = FK0FW02.FK-MAT-PROD-USE[FK0FW-IDX];
      VMUSGE01.FK-MAT-DEVL-USE-DT = FK0FW02.FK-MAT-DEVL-USE-DT[FK0FW-IDX];
      VMUSGE01.FK-MAT-DEVL-USE = FK0FW02.FK-MAT-DEVL-USE[FK0FW-IDX];
    else
      VMUSGE01.FK-MAT-DEVL-USE = FK0FM310.FK0FM-USAGE[FK0FW-IDX];
      VMUSGE01.FK-MAT-DEVL-USE-DT = XX0XW01.XX0XWDAT;
      VMUSGE01.FK-MAT-PROD-USE-DT = FK0FW02.FK-MAT-PROD-USE-DT[FK0FW-IDX];
      VMUSGE01.FK-MAT-FINL-USE-DT = FK0FW02.FK-MAT-FINL-USE-DT[FK0FW-IDX];
    end
  end
  ;
  VMUSGE01.FK-MAT-MFG-PCT = FK0FW02.FK-MAT-MFG-PCT[FK0FW-IDX];
  VMUSGE01.ZZZSDT = FK0FW02.ZZZSDT[FK0FW-IDX]; /* Setup date*/
  VMUSGE01.ZZZCHGCT = FK0FW02.ZZZCHGCT[FK0FW-IDX]; /* Change count*/
  VMUSGE01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VMUSGE01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
end // end FK0F-3610

// Update DCMPNT.VMUSGE01
Function FK0F-3620()
   /* ------------------------------------------------------------*/
   /* Add the requested row to the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6240" ("U ", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback changes*/
  ;
  FKWREC.XXX-MOD-ID = "3620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3620 UPDATE DCMPNT.VMUSGE01  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0FM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-3620

// Process Delete map
Function FK0F-4000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0F-4100(); /* Obtain the data to display*/
  ;
  FK0F-4200(); /* Format and display the map*/
  ;
  FK0F-4300(); /* Check attention identifier*/
  ;
  FK0F-4400(); /* Reset fields to normal intensity*/
  ;
  FK0F-4500(); /* Verify the entered data*/
  ;
  FK0F-4600(); /* Process valid input request*/
  ;
  ;
end // end FK0F-4000

// Obtain data to display
Function FK0F-4100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-REQUEST-DATA-SW != "Y" /* data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FK0FW00.XXXTSPAG = 1;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key*/
   /* --------------------------------------------------------------*/
  ;
  FK0F-4105(); /* Purge temporary storage*/
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length*/
   /* --------------------------------------------------------------*/
  ;
  FK0FW00.XXXTSLEN = 1245; /* Temporary storage length*/
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be redisplayed on the map*/
   /* --------------------------------------------------------------*/
  ;
  set FK0FW01 empty; /* Initialize hold storage*/
  set FK0FW02 empty; /* Initialize display storage*/
  ;
  FK0FW01.FK-MAT-NBR = FK0FM410.FK-MAT-NBR; /* Material number*/
  FK0FW01.XMG-COLR-GRP-CD = FK0FM410.XMG-COLR-GRP-CD; /* Colr grp*/
  FK0FW01.XCLCD = FK0FM410.XCLCD; /* Color code*/
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-VMATRL01-EOF-SW = "N"; /* Set end of file switch*/
  ;
  if (FK0FM410.FK-MAT-NBR > " ") /* If Material Number entered*/
    ;
    FK0F-4110(); /* Declare cursor for material table*/
                                 /* (DCMPNT.VMATRL01)*/
    FK0F-4111(); /* Fetch a row from material table*/
                                 /* (DCMPNT.VMATRL01)*/
    FK0F-4115(); /* Close a cursor for material table*/
                                 /* (DCMPNT.VMATRL01)*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Declare and open the cursor for the Material Usage table*/
   /* --------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-VMUSGE01-EOF-SW = "N"; /* Set end of file switch*/
  FK0FW00.FK0FW-IDX = 1; /* Reset display line index*/
  ;
  FK0F-4120(); /* Open Material Usage file*/
                                  /* (DCMPNT.VMUSGE01)*/
  ;
  FK0F-4121(); /* Read next record*/
                                  /* (DCMPNT.VMUSGE01)*/
  ;
  if (FK0FW00.FK0FW-VMUSGE01-EOF-SW == "Y")
    ;
    FKWREC.XXXMSGNO = 15; /* No row on table with this key*/
    FKWREC.XXX-MOD-ID = "4100"; /* Module id*/
    FK0FW00.FK0FW-REQUEST-DATA-SW = "N";
    FK0FW00.FK0FW-FORMAT-MAP-SW = "Y";
    exit stack; /* Exit and clear screen*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Loop and load Material usage data to temporary storage*/
   /* --------------------------------------------------------------*/
  ;
  while (FK0FW00.FK0FW-VMUSGE01-EOF-SW != "Y") /* If material usage not eof*/
    ;
    FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "N";
    FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "N";
    ;
    FK0F-4130(); /* Select style product data*/
                                  /* (DCMPNT.VSYCLR01)*/
    if (FK0FW00.FK0FW-VSYCLR01-FOUND-SW == "N") /* Production style not found*/
      FK0F-4140(); /* Select development style product data*/
                                  /* (DCMPNT.VSYDVL01)*/
    end
    ;
    FK0F-4150(); /* Determine usage, yield and save info*/
                                  /* in temporary storage*/
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment index*/
    ;
    if (FK0FW00.FK0FW-IDX > 15)
      ;
      FK0F-4160(); /* Update temporary storage*/
      FK0FW00.FK0FW-IDX = 1; /* Reset line count*/
      ;
    end
    ;
    FK0F-4121(); /* Read next record*/
                                  /* (DCMPNT.VMUSGE01)*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Add any partially formatted page into temporary storage*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-IDX > 1)
    ;
    FK0F-4160(); /* Add page to temporary storage*/
    FK0FW00.FK0FW-IDX = 1;
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Close Material Cursor*/
   /* --------------------------------------------------------------*/
  ;
  FK0F-4125(); /* Close Material Usage file*/
                                  /* (DCMPNT.VMUSGE01)*/
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-REQUEST-DATA-SW = "N";
  FK0FW00.FK0FW-FORMAT-MAP-SW = "Y";
  ;
end // end FK0F-4100

// Purge any temporary storage
Function FK0F-4105()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0FW02 empty; /* M310 display storage*/
  ;
  FK0FW00.FK0FW-UPDATE-SW = "N"; /* Storage update switch*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FK0FW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FK0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "4105"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END OF FK0F-4105 -----------------------------*/
end // end FK0F-4105

// Open cursor (DCMPNT.VMATRL01)
Function FK0F-4110()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FK0FM410.FK-MAT-NBR; /* Material number*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6190" ("S2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4110 OPEN MATERIAL CURSOR       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.FK-MAT-NBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-4110

// Fetch cursor (DCMPNT.VMATRL01)
Function FK0F-4111()
   /* ------------------------------------------------------------*/
   /* Read in the row requested from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6190" ("N2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Material not found*/
      ;
      converseLib.validationFailed(26); /* No row on table with specified key*/
      FKWREC.XXX-MOD-ID = "4111"; /* Module id*/
      set FK0FM410.FK-MAT-NBR cursor, bold;
      ;
      return;
      ;
    else
      ;
      if (SQLCA.VAGen_SQLCODE == 0) /* Material found*/
        return;
      end
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4111"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4111 GET MATERIAL DATA          ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.FK-MAT-NBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-4111

// Close cursor (DCMPNT.VMATRL01)
Function FK0F-4115()
   /* ------------------------------------------------------------*/
   /* Close the cursor*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6190" ("C2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4115"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4115 CLOSE CURSOR               ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-4115

// Open DCMPNT.VMUSGE01
Function FK0F-4120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMUSGE01 empty;
  ;
  VMUSGE01.FK-MAT-NBR = FK0FW01.FK-MAT-NBR; /* Material number*/
  VMUSGE01.XMG-COLR-GRP-CD = FK0FW01.XMG-COLR-GRP-CD; /* Color grp*/
  VMUSGE01.XCLCD = FK0FW01.XCLCD; /* Color code*/
  ;
  try
    call "IO6240" ("S2", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4120 OPEN MATRL USAGE TBL";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-4120

// Read next DCMPNT.VMUSGE01
Function FK0F-4121()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the vmusge01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6240" ("N2", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VMUSGE01-EOF-SW = "Y"; /* End of file*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4121"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4121 READ MTRL USAGE DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-4121

// Close DCMPNT.VMUSGE01
Function FK0F-4125()
   /* ------------------------------------------------------------*/
   /* Close the VMUSEG01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6240" ("C2", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4125"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4125 CLOSE MTRL USAGE TABLE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-4125

// Select style (DPRODG.VSYCLR01)
Function FK0F-4130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = VMUSGE01.SY1STNBR; /* Style number*/
  PG2REC.SY2CLRID = VMUSGE01.SY2CLRID; /* Color id*/
  PG2REC.XDMCD = VMUSGE01.XDMCD; /* Dimension*/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FK0FW00.FK0FW-VSYCLR01-FOUND-SW = "N";
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4130"; /* Module identification*/
  ;
  FK0FW00.FK0FW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4130 GET STYLE DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLRO1"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-4130

// Select style (DPRODG.VSYDVL01)
Function FK0F-4140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  PG4REC.PG4STNBR = VMUSGE01.SY1STNBR; /* Style number*/
  ;
  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FK0FW00.FK0FW-VSYDVL01-FOUND-SW = "N";
      ;
      return;
      ;
    end
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4140"; /* Module identification*/
  ;
  FK0FW00.FK0FW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4140 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-4140

// Save row, Calc usage
Function FK0F-4150()
   /* ------------------------------------------------------------------*/
   /* Save valid key into temporary storage*/
   /* ------------------------------------------------------------------*/
  ;
  FK0FW01.FK-VEND-CD = VMATRL01.FK-VEND-CD; /* Vendor code*/
  FK0FW02.FK-VEND-CD = VMATRL01.FK-VEND-CD; /* Vendor code*/
  FK0FW02.FK-MAT-NBR = VMATRL01.FK-MAT-NBR; /* Material number*/
  FK0FW02.XTM-MAT-THCK-CD = VMATRL01.XTM-MAT-THCK-CD; /* Thck cd*/
  FK0FW02.XMG-COLR-GRP-CD = VMUSGE01.XMG-COLR-GRP-CD; /* Color grp cd*/
  FK0FW02.XCLCD = VMUSGE01.XCLCD; /* Color code*/
  ;
  FK0FW02.SY1STNBR[FK0FW-IDX] = VMUSGE01.SY1STNBR; /* Style number*/
  FK0FW02.SY2CLRID[FK0FW-IDX] = VMUSGE01.SY2CLRID; /* Color id*/
  FK0FW02.XDMCD[FK0FW-IDX] = VMUSGE01.XDMCD; /* Dimension*/
  ;
  if (FK0FW00.FK0FW-VSYCLR01-FOUND-SW == "Y")
    ;
    FK0FW02.SY1SSTNM[FK0FW-IDX] = PG2REC.SY1SSTNM; /* Name*/
    FK0FW02.SY2CLRAB[FK0FW-IDX] = PG2REC.SY2CLRAB; /* Name*/
    ;
  else
    ;
    if (FK0FW00.FK0FW-VSYDVL01-FOUND-SW == "Y")
      ;
      FK0FW02.SY1SSTNM[FK0FW-IDX] = PG4REC.SY1SSTNM; /* Name*/
      ;
    else
      ;
      FK0FW02.SY1SSTNM[FK0FW-IDX] = "*NOT FOUND*"; /* Name*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine the Usage and P/F indicator for the product*/
   /* ------------------------------------------------------------*/
  ;
  if (VMUSGE01.FK-MAT-FINL-USE != 0)
    ;
    FK0FW02.FK0FW-USAGE[FK0FW-IDX] = VMUSGE01.FK-MAT-FINL-USE;
    FK0FW02.FK0FW-PF[FK0FW-IDX] = "F";
    ;
  else
    ;
    if (VMUSGE01.FK-MAT-PROD-USE != 0)
      ;
      FK0FW02.FK0FW-USAGE[FK0FW-IDX] = VMUSGE01.FK-MAT-PROD-USE;
      FK0FW02.FK0FW-PF[FK0FW-IDX] = "P";
      ;
    else
      ;
      if (VMUSGE01.FK-MAT-DEVL-USE != 0)
        ;
        FK0FW02.FK0FW-USAGE[FK0FW-IDX] = VMUSGE01.FK-MAT-DEVL-USE;
        FK0FW02.FK0FW-PF[FK0FW-IDX] = " ";
        ;
      end
      ;
    end
    ;
  end
  ;
  FK0FW02.FK-MAT-DEVL-USE[FK0FW-IDX] = VMUSGE01.FK-MAT-DEVL-USE;
  FK0FW02.FK-MAT-PROD-USE[FK0FW-IDX] = VMUSGE01.FK-MAT-PROD-USE;
  FK0FW02.FK-MAT-FINL-USE[FK0FW-IDX] = VMUSGE01.FK-MAT-FINL-USE;
  FK0FW02.FK-MAT-DEVL-USE-DT[FK0FW-IDX] = VMUSGE01.FK-MAT-DEVL-USE-DT;
  FK0FW02.FK-MAT-PROD-USE-DT[FK0FW-IDX] = VMUSGE01.FK-MAT-PROD-USE-DT;
  FK0FW02.FK-MAT-FINL-USE-DT[FK0FW-IDX] = VMUSGE01.FK-MAT-FINL-USE-DT;
  FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX] = VMUSGE01.FK-MAT-WAST-PCT;
  FK0FW02.FK-MAT-MFG-PCT[FK0FW-IDX] = VMUSGE01.FK-MAT-MFG-PCT;
  FK0FW02.ZZZSDT[FK0FW-IDX] = VMUSGE01.ZZZSDT;
  FK0FW02.ZZZCHGCT[FK0FW-IDX] = VMUSGE01.ZZZCHGCT;
  ;
   /* ------------------------------------------------------------------*/
   /* Yield calculation*/
   /* ------------------------------------------------------------------*/
  ;
  FK0FW02.FK0FW-YIELD[FK0FW-IDX] = FK0FW02.FK0FW-USAGE[FK0FW-IDX] -   FK0FW02.FK0FW-USAGE[FK0FW-IDX] * FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX];
  ;
  ;
end // end FK0F-4150

// Add page to temporary storage
Function FK0F-4160()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW02.XXXTSLEN = FK0FW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FK0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FK0FW02 empty; /* M001 display storage*/
    ;
    FK0FW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "4160"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END OF FK0F-4160 ------------------------------*/
end // end FK0F-4160

// Format and converse map
Function FK0F-4200()
   /* -------------------------------------------------------------*/
   /* If an error was found, save the error message number*/
   /* -------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
   /* -------------------------------------------------------------*/
   /* If obtain data failed or no error, format data to display*/
   /* -------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-REQUEST-DATA-SW == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0)   /* or no error found*/
    ;
    if (FK0FW00.FK0FW-FORMAT-MAP-SW == "Y") /* Map must be formatted*/
      FK0F-4210(); /* Format the data on the map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Protect select fields where no data is present.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0FW00.FK0FW-IDX <= 15) /* Until screen is processed*/
    ;
    if (FK0FW02.SY1STNBR[FK0FW-IDX] <= " ")
      set FK0FM410.FK0FM-SEL[FK0FW-IDX] invisible, skip;
      set FK0FM410.FK0FM-USAGE[FK0FW-IDX] invisible, skip;
      set FK0FM410.FK0FM-PF[FK0FW-IDX] invisible, skip;
      set FK0FM410.FK-MAT-WAST-PCT[FK0FW-IDX] invisible, skip;
      set FK0FM410.FK0FM-YIELD[FK0FW-IDX] invisible, skip;
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment line index*/
    else
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment line index*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FM410.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0FM410.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0FM410.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0FM410.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0FM410.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
    ;
    set FK0FM410 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse FK0FM410 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0FM410.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0FM410.CAITEM; /* Application data*/
  ;
end // end FK0F-4200

// Format the display data
Function FK0F-4210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0FM410 initial; /* M410 input/output area*/
  ;
  FK0FW00.FK0FW-FORMAT-MAP-SW = "N"; /* Format the map switch*/
  ;
   /* ------------------------------------------------------------*/
   /* If the current page has been changed, update the page in*/
   /* storage before obtaining the next one to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FK0FW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
        /* --------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* --------------------------------------------------------*/
      ;
      if (FK0FW00.FK0FW-UPDATE-SW == "Y") /* Current page was changed*/
        ;
        FK0FS-01(); /* Update temp storage page*/
        ;
        FK0FW00.FK0FW-UPDATE-SW = "N"; /* Reset storage switch*/
        ;
      end
      ;
        /* --------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* --------------------------------------------------------*/
      ;
      if (FK0FW00.XXXTSPAG > FK0FW00.TA5TSQIX)
        ;
        FK0FW00.XXXTSPAG = FK0FW00.TA5TSQIX; /* Default to highest*/
        ;
      end
      ;
      FK0FS-02(); /* Obtain temp storage page*/
      ;
    end
    ;
     /* --------------------------------------------------------*/
     /* Display the page information on the screen.*/
     /* --------------------------------------------------------*/
    ;
    set FK0FM410.XXXLITPG skip; /* "PAGE" literal*/
    FK0FM410.XXXTSPAG = FK0FW00.XXXTSPAG; /* Current page*/
    set FK0FM410.XXXLITOF skip; /* "OF" literal*/
    FK0FM410.TA5TSQIX = FK0FW00.TA5TSQIX; /* Highest page*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW02.FK-MAT-NBR <= " ") /* Material NBR not present*/
    set FK0FM410.FK-MAT-NBR cursor; /* Position cursor*/
  end
  ;
  FK0FM410.FK-VEND-CD = FK0FW02.FK-VEND-CD; /* Vendor code*/
  FK0FM410.FK-MAT-NBR = FK0FW01.FK-MAT-NBR; /* Style number*/
  FK0FM410.XTM-MAT-THCK-CD = FK0FW02.XTM-MAT-THCK-CD; /* Thickness cd*/
  FK0FM410.XMG-COLR-GRP-CD = FK0FW01.XMG-COLR-GRP-CD; /* Color Grp cd*/
  FK0FM410.XCLCD = FK0FW01.XCLCD; /* Color code*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0FW00.FK0FW-IDX <= 15) /* Until screen is full*/
    ;
    FK0FM410.FK0FM-SEL[FK0FW-IDX] = FK0FW02.FK0FW-SEL[FK0FW-IDX];
    FK0FM410.SY1STNBR[FK0FW-IDX] = FK0FW02.SY1STNBR[FK0FW-IDX];
    FK0FM410.SY2CLRID[FK0FW-IDX] = FK0FW02.SY2CLRID[FK0FW-IDX];
    FK0FM410.XDMCD[FK0FW-IDX] = FK0FW02.XDMCD[FK0FW-IDX];
    FK0FM410.SY1SSTNM[FK0FW-IDX] = FK0FW02.SY1SSTNM[FK0FW-IDX];
    FK0FM410.SY2CLRAB[FK0FW-IDX] = FK0FW02.SY2CLRAB[FK0FW-IDX];
    FK0FM410.FK0FM-USAGE[FK0FW-IDX] = FK0FW02.FK0FW-USAGE[FK0FW-IDX];
    FK0FM410.FK0FM-PF[FK0FW-IDX] = FK0FW02.FK0FW-PF[FK0FW-IDX];
    FK0FM410.FK-MAT-WAST-PCT[FK0FW-IDX] = FK0FW02.FK-MAT-WAST-PCT[FK0FW-IDX];
    FK0FM410.FK0FM-YIELD[FK0FW-IDX] = FK0FW02.FK0FW-YIELD[FK0FW-IDX];
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
end // end FK0F-4210

// Check attention identifier
Function FK0F-4300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize FKWREC*/
    FKWREC.FK-MAT-NBR[1] = FK0FW01.FK-MAT-NBR; /* Material nuber*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0FW01.XMG-COLR-GRP-CD; /* Colr grp*/
    FKWREC.XCLCD[1] = FK0FW01.XCLCD; /* Color cd*/
    ;
    COMMAREA.CATOAP = "FK0F"; /* to applicaiton*/
    COMMAREA.CAITEM = "D   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0FM410.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM410.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      FK0F-4105(); /* Purge temporary storage*/
      ;
      set FKWREC empty; /* Initialize FKWREC*/
      ;
      FKWREC.FK-VEND-CD[1] = FK0FM410.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-NBR[1] = FK0FM410.FK-MAT-NBR; /* Material*/
      FKWREC.XMG-COLR-GRP-CD[1] = FK0FM410.XMG-COLR-GRP-CD;
      FKWREC.XCLCD[1] = FK0FM410.XCLCD;
      ;
      COMMAREA.CATOAP = FK0FM410.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0FM410.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0FM410.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* FK0E (MTRL) requested*/
   || converseVar.eventKey is pf14 /* FK0G (CONT) requested*/
   || converseVar.eventKey is pf15 /* FK0H (CLST) requested*/
   || converseVar.eventKey is pf16 /* FK0M (MSTY) requested*/
   || converseVar.eventKey is pf19) /* FK0Q (MCLR) requested*/
    ;
    set FKWREC empty; /* Initialize FKWREC*/
    ;
    FKWREC.FK-VEND-CD[1] = FK0FW01.FK-VEND-CD; /* Material nuber*/
    FKWREC.FK-MAT-NBR[1] = FK0FW01.FK-MAT-NBR; /* Material nuber*/
    FKWREC.XMG-COLR-GRP-CD[1] = FK0FW01.XMG-COLR-GRP-CD; /* Colr grp*/
    FKWREC.XCLCD[1] = FK0FW01.XCLCD; /* Color cd*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0FM410"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = FK0FM410.CAITEM; /* item*/
      ;
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0FM410.CAITEM; /* item*/
      ;
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed (MTRL)*/
      COMMAREA.CATOAP = "FK0E"; /* TO application*/
      COMMAREA.CAITEM = FK0FM410.CAITEM; /* item*/
      ;
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed (CONT)*/
      COMMAREA.CATOAP = "FK0G"; /* TO application*/
      COMMAREA.CAITEM = FK0FM410.CAITEM; /* item*/
      ;
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed (CLST)*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
      COMMAREA.CAITEM = FK0FM410.CAITEM; /* item*/
      ;
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed (STYM)*/
      COMMAREA.CATOAP = "FK0M"; /* TO application*/
      COMMAREA.CAITEM = FK0FM410.CAITEM; /* item*/
      ;
    end
    ;
    if (converseVar.eventKey is pf19) /* PF19 was pressed (MCLR)*/
      COMMAREA.CATOAP = "FK0Q"; /* TO application*/
      COMMAREA.CAITEM = FK0FM410.CAITEM; /* item*/
      ;
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* Scroll Back requested*/
   && converseVar.eventKey not pf8)  /* Scroll Forward requested*/
    ;
    FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
end // end FK0F-4300

// Reset highlighted fields
Function FK0F-4400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0FM410.FK-MAT-NBR initialAttributes; /* Style number*/
  set FK0FM410.XTM-MAT-THCK-CD initialAttributes; /* Thickness code*/
  set FK0FM410.XMG-COLR-GRP-CD initialAttributes; /* Color group*/
  set FK0FM410.XCLCD initialAttributes; /* Color code*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0FW00.FK0FW-IDX <= 15 /* Until end of lines*/
   && FK0FM410.FK-MAT-NBR > " ") /* or end of display*/
    ;
    set FK0FM410.FK0FM-SEL[FK0FW-IDX] normal; /* Reset select flag*/
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
  set FK0FM410.CATOAP initialAttributes; /* TO application*/
  set FK0FM410.CAITEM initialAttributes; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* Display color group list if requested*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM410.XMG-COLR-GRP-CD == "?") /* Color group list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      FKWREC.XXX-MOD-ID = "4400"; /* Module id*/
      converseLib.validationFailed(19); /* PA/PF key may not be used*/
      exit stack; /* Exit to display map*/
    else
      ;
      XPXX001(); /* Window initialization*/
      ;
      XX0XW02.XX0XWHDR = "COLOR GROUP"; /* Heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* Until end of display*/
        ;
        XPXMG01(); /* Display color group list*/
        ;
      end
      ;
      if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
        FK0FM410.XMG-COLR-GRP-CD = " "; /* Restore prior code*/
      else
        FK0FM410.XMG-COLR-GRP-CD = XMGTBL.XMG-COLR-GRP-CD[XX0XWPIX];
      end
      ;
      set FK0FM410.XMG-COLR-GRP-CD cursor; /* Establish cursor position*/
      ;
    end
    ;
     /* ------------------------------------------------------------*/
     /* Indicate the requested list has been displayed and that ENTER*/
     /* must be pressed to process any changes.*/
     /* ------------------------------------------------------------*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
    FKWREC.XXX-MOD-ID = "4400"; /* Module id*/
    converseLib.validationFailed(20); /* Corporate list displayed*/
    ;
    exit stack;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Display color list if requested*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM410.XCLCD == "?") /* Color cd list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      FKWREC.XXX-MOD-ID = "4400"; /* Module id*/
      converseLib.validationFailed(19); /* PA/PF key may not be used*/
      exit stack; /* Exit to display map*/
    else
      ;
      XPXX001(); /* Window initialization*/
      ;
      XX0XW02.XX0XWHDR = "COLOR CODE"; /* Heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* Until end of display*/
        ;
        XPXCL01(); /* Display color list*/
        ;
      end
      ;
      if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
        FK0FM410.XCLCD = " "; /* Restore prior code*/
      else
        FK0FM410.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
      end
      ;
      set FK0FM410.XCLCD cursor; /* Establish cursor position*/
      ;
    end
    ;
     /* ------------------------------------------------------------*/
     /* Indicate the requested list has been displayed and that ENTER*/
     /* must be pressed to process any changes.*/
     /* ------------------------------------------------------------*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
    FKWREC.XXX-MOD-ID = "4400"; /* Module id*/
    converseLib.validationFailed(20); /* Corporate list displayed*/
    ;
  end
  ;
end // end FK0F-4400

// Verify data that was entered
Function FK0F-4500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM410.CAITEM > " ") /* Application data was entered*/
    if (converseVar.eventKey is pf12 /* FK0E selected*/
     || converseVar.eventKey is pf14 /* FK0G selected*/
     || converseVar.eventKey is pf15 /* FK0H selected*/
     || converseVar.eventKey is pf16) /* FK0M selected*/
         /* next sentence*/
    else
      FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
      set FK0FM410.CAITEM cursor, bold; /* Highlight*/
      converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    end
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Check to see if the header key was changed.  If so, set request*/
   /* data switch and exit to the top of the program to obtain and*/
   /* new key information.*/
   /* -----------------------------------------------------------------*/
  ;
  if (FK0FM410.FK-MAT-NBR != FK0FW01.FK-MAT-NBR
   || FK0FM410.XMG-COLR-GRP-CD != FK0FW01.XMG-COLR-GRP-CD
   || FK0FM410.XCLCD != FK0FW01.XCLCD)
    ;
    FK0FW00.FK0FW-REQUEST-DATA-SW = "Y";
    ;
    exit stack;
    ;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Determine if a valid request to scroll was entered*/
   /* -----------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll up*/
   || converseVar.eventKey is pf8) /* Scroll down*/
    ;
    FK0F-4510(); /* Verify scroll request*/
    ;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Verify Color code entered*/
   /* -----------------------------------------------------------------*/
  ;
  FK0F-4520();
  ;
   /* -----------------------------------------------------------------*/
   /* Verify Color group code entered*/
   /* -----------------------------------------------------------------*/
  ;
  FK0F-4530();
  ;
   /* -----------------------------------------------------------------*/
   /* Verify Material number entered*/
   /* -----------------------------------------------------------------*/
  ;
  if (FK0FM410.FK-MAT-NBR > " ") /* Material number entered*/
    ;
     /* next sentence*/
    ;
  else
    ;
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    set FK0FM410.FK-MAT-NBR cursor, bold; /* Highlight*/
    converseLib.validationFailed(8); /* Enter only with FAST PATH*/
    ;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Verify that the select fields contain either spaces or 'S'.*/
   /* -----------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-FORMAT-MAP-SW == "N")
    ;
    FK0FW00.FK0FW-IDX = 15; /* Initialize line index*/
    ;
    while (FK0FW00.FK0FW-IDX > 0) /* Until end of lines*/
      ;
      if (FK0FM410.FK0FM-SEL[FK0FW-IDX] != FK0FW01.FK0FW-SEL[FK0FW-IDX])
        ;
        if (FK0FM410.FK0FM-SEL[FK0FW-IDX] != "S" /* NOT AN 'S'*/
        )                                       
          if (FK0FM410.FK0FM-SEL[FK0FW-IDX] == " ") /* SPACES*/
            ;
            FK0FW01.FK0FW-SEL[FK0FW-IDX] = " ";
            FK0FW00.FK0FW-CONFIRM-SW = "N";
            ;
          else
            ;
            FKWREC.XXX-MOD-ID = 4500; /* Module id*/
            converseLib.validationFailed(13); /* Only 'S' valid sel*/
            set FK0FM410.FK0FM-SEL[FK0FW-IDX] cursor, bold;
            FK0FW00.FK0FW-CONFIRM-SW = "N";
            ;
          end
          ;
        else
          ;
          FK0FW01.FK0FW-SEL[FK0FW-IDX] = FK0FM410.FK0FM-SEL[FK0FW-IDX];
          FK0FW00.FK0FW-CONFIRM-SW = "N";
          ;
        end
        ;
      end
      ;
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX - 1; /* Decrement line number*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
end // end FK0F-4500

// Verify scroll request
Function FK0F-4510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FK0FW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FK0FW00.XXXTSPAG >= FK0FW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Indicate an error for any data that was modified.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM410.FK-MAT-NBR != FK0FW02.FK-MAT-NBR           /* Material number changed*/
   || FK0FM410.XMG-COLR-GRP-CD != FK0FW02.XMG-COLR-GRP-CD /* Colr grp chg*/
   || FK0FM410.XCLCD != FK0FW02.XCLCD)                    /* Color code changed*/
    ;
    FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
    set FK0FM410.FK-MAT-NBR cursor, bold; /* Highlight*/
    set FK0FM410.XMG-COLR-GRP-CD bold; /* Highlight*/
    set FK0FM410.XCLCD bold; /* Highlight*/
    converseLib.validationFailed(14); /* Field may not change*/
    ;
  end
  ;
   /* ----------------- END OF FK0F-4510 --------------------------*/
end // end FK0F-4510

// Search XCLTBL for Color code
Function FK0F-4520()
   /* ------------------------------------------------------------*/
   /* Check to see is Color code was entered*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM410.XCLCD <= " ")
    set FK0FM410.XCLCD bold, cursor;
    FKWREC.XXX-MOD-ID = "3520";
    converseLib.validationFailed(8);
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Read CSP Corporate table for color code validation*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM410.XCLCD in XCLTBL.XCLCD)
    ;
    if (XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status active*/
      ;
      return;
      ;
    end
    ;
  else
    ;
    FKWREC.XXX-MOD-ID = "4520"; /* Module id*/
    set FK0FM410.XCLCD cursor, bold;
    converseLib.validationFailed(32); /* Required field not found*/
    ;
  end
  ;
   /* ----------------- END OF FK0F-4520 ------------------------------*/
end // end FK0F-4520

// Search XMGTBL for Color code
Function FK0F-4530()
   /* ------------------------------------------------------------*/
   /* Check to see if Color group code was entered*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM410.XMG-COLR-GRP-CD <= " ")
    set FK0FM410.XMG-COLR-GRP-CD bold, cursor;
    FKWREC.XXX-MOD-ID = "4530";
    converseLib.validationFailed(8);
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Read CSP Corporate table for color group validation*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FM410.XMG-COLR-GRP-CD in XMGTBL.XMG-COLR-GRP-CD)
    ;
    if (XMGTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status active*/
      ;
      return;
      ;
    end
    ;
  else
    ;
    FKWREC.XXX-MOD-ID = "4530"; /* Module id*/
    set FK0FM410.XMG-COLR-GRP-CD cursor, bold;
    converseLib.validationFailed(31); /* Required field not found*/
    ;
  end
  ;
   /* ----------------- END OF FK0F-4530 ------------------------------*/
end // end FK0F-4530

// Process valid input request
Function FK0F-4600()
   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-FORMAT-MAP-SW = "Y"; /* Format the map switch*/
  ;
   /* ------------------------------------------------------------*/
   /* If a scroll backward was requested, decrement the page number*/
   /* and return to the previous process.*/
   /* Check to see if a line has been selected, if so send error message*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Scroll backward requested*/
    ;
    FK0FW00.FK0FW-IDX = 15;
    FK0FW00.FK0FW-ROW-SELECTED-SW = "N";
    ;
    while (FK0FW00.FK0FW-IDX >= 1)
      ;
      if (FK0FM410.FK0FM-SEL[FK0FW-IDX] == "S")
        ;
        FK0FW00.FK0FW-ROW-SELECTED-SW = "Y";
        set FK0FM410.FK0FM-SEL[FK0FW-IDX] bold, cursor;
      end
      ;
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX - 1;
      ;
    end
    ;
    if (FK0FW00.FK0FW-ROW-SELECTED-SW == "Y"
    )
      converseLib.validationFailed(81); /* Scroll not allowed if row selected*/
      FKWREC.XXX-MOD-ID = "4600";
      return;
      ;
    else
      ;
      FK0FW00.XXXTSPAG = FK0FW00.XXXTSPAG - 1; /* Decrement page number*/
      ;
    end
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a scroll forward was requested, increment the page number*/
   /* and return to the previous process.*/
   /* Check to see if a line has been selected, if so send error message*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8) /* Scroll forward requested*/
    ;
    FK0FW00.FK0FW-IDX = 15;
    FK0FW00.FK0FW-ROW-SELECTED-SW = "N";
    ;
    while (FK0FW00.FK0FW-IDX >= 1)
      ;
      if (FK0FM410.FK0FM-SEL[FK0FW-IDX] == "S")
        ;
        FK0FW00.FK0FW-ROW-SELECTED-SW = "Y";
        set FK0FM410.FK0FM-SEL[FK0FW-IDX] bold, cursor;
      end
      ;
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX - 1;
      ;
    end
    ;
    ;
    if (FK0FW00.FK0FW-ROW-SELECTED-SW == "Y"
    )
      converseLib.validationFailed(81); /* Scroll not allowed if row selected*/
      FKWREC.XXX-MOD-ID = "4600";
      return;
      ;
    else
      ;
      FK0FW00.XXXTSPAG = FK0FW00.XXXTSPAG + 1; /* Increment page number*/
      ;
    end
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Save the select fields and clear the map input/output area*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW00.FK0FW-IDX = 1; /* Initialize index*/
  ;
  while (FK0FW00.FK0FW-IDX <= 15)
    ;
    if (FK0FM410.FK0FM-SEL[FK0FW-IDX] != FK0FW01.FK0FW-SEL[FK0FW-IDX])
      ;
      FK0FW01.FK0FW-SEL[FK0FW-IDX] = FK0FM410.FK0FM-SEL[FK0FW-IDX];
      FK0FW00.FK0FW-CONFIRM-SW = "N"; /* reset switch*/
      ;
    end
    ;
    FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment index*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Every delete must be confirmed.  If the confirm delete switch*/
   /* = 'N', set it to 'Y' and exit to display the map*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-CONFIRM-SW == "N")
    ;
    FK0FW00.FK0FW-IDX = 1; /* Initialize index*/
    FK0FW00.FK0FW-ROW-SELECTED-SW = "N"; /* Initilize switch*/
    ;
    while (FK0FW00.FK0FW-IDX <= 15)
      ;
      if (FK0FM410.FK0FM-SEL[FK0FW-IDX] == "S")
        ;
        FK0FW00.FK0FW-ROW-SELECTED-SW = "Y";
        ;
      end
      ;
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment index*/
      ;
    end
    ;
    if (FK0FW00.FK0FW-ROW-SELECTED-SW == "Y") /* Row was selected*/
      ;
      FK0FW00.FK0FW-CONFIRM-SW = "Y";
      FKWREC.XXX-MOD-ID = "4600";
      converseLib.validationFailed(38); /* Enter to delete*/
      return; /* Return*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "4600"; /* Module id*/
      converseLib.validationFailed(50); /* Select a row to delete*/
      set FK0FM410.FK0FM-SEL[1] bold, cursor;
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Delete those records that have been selected for deletion.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-CONFIRM-SW == "Y")
    ;
    XX0XS01(); /* Get current date and time*/
    ;
    FK0FW00.FK0FW-UPDT-PERFORMED-SW = "N"; /* Update done switch*/
    FK0FW00.FK0FW-IDX = 1; /* Initialize index*/
    ;
    while (FK0FW00.FK0FW-IDX <= 15)
      ;
      if (FK0FW01.FK0FW-SEL[FK0FW-IDX] == "S")
        ;
        FK0F-4610();
        ;
      end
      ;
      FK0FW00.FK0FW-IDX = FK0FW00.FK0FW-IDX + 1; /* Increment index*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If update successful, display message for update successful.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0FW00.FK0FW-UPDT-PERFORMED-SW == "Y") /* Update performed switch*/
    ;
    set FK0FW01 empty;
    ;
    FK0FW01.FK-MAT-NBR = FK0FM410.FK-MAT-NBR;
    FK0FW01.XMG-COLR-GRP-CD = FK0FM410.XMG-COLR-GRP-CD;
    FK0FW01.XCLCD = FK0FM410.XCLCD;
    ;
    set FK0FM410 initial;
    ;
    FK0FM410.FK-MAT-NBR = FK0FW01.FK-MAT-NBR; /* material*/
    FK0FM410.XMG-COLR-GRP-CD = FK0FW01.XMG-COLR-GRP-CD; /* Color grp*/
    FK0FM410.XCLCD = FK0FW01.XCLCD; /* Dimension*/
    ;
    FK0FW00.FK0FW-FORMAT-MAP-SW = "Y"; /* Format map switch*/
    FK0FW00.FK0FW-REQUEST-DATA-SW = "Y"; /* Request data switch*/
    FKWREC.XXX-MOD-ID = "4600"; /* Module id*/
    FKWREC.XXXMSGNO = 1; /* Update completed*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Save the select fields and clear the map input/output area.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* Help requested*/
   || converseVar.eventKey is pf3  /* Exit requested*/
   || converseVar.eventKey is pf4  /* Master menu*/
   || converseVar.eventKey is pf12 /* FK0E requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf14) /* FK0G requested*/
    ;
     /* ------------------------------------------------------------*/
      /* Update the modifiable data in the COMMAREA.*/
     /* ------------------------------------------------------------*/
    ;
    set FKWREC empty;
    ;
    FKWREC.SY1STNBR[1] = FK0FM410.SY1STNBR; /* Style number*/
    FKWREC.SY2CLRID[1] = FK0FM410.SY2CLRID; /* Color id*/
    FKWREC.XDMCD[1] = FK0FM410.XDMCD; /* Dimension code*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
end // end FK0F-4600

// Set up record for insertion
Function FK0F-4610()
   /* ------------------------------------------------------------*/
   /* Set up the record for deletion from the VMUSGE01 table*/
   /* ------------------------------------------------------------*/
  ;
  set VMUSGE01 empty; /* Initialize record*/
  ;
  VMUSGE01.SY1STNBR = FK0FM410.SY1STNBR[FK0FW-IDX];
  VMUSGE01.SY2CLRID = FK0FM410.SY2CLRID[FK0FW-IDX];
  VMUSGE01.XDMCD = FK0FM410.XDMCD[FK0FW-IDX];
  VMUSGE01.FK-MAT-NBR = FK0FM410.FK-MAT-NBR; /* Material*/
  VMUSGE01.XMG-COLR-GRP-CD = FK0FM410.XMG-COLR-GRP-CD;
  VMUSGE01.XCLCD = FK0FM410.XCLCD; /* Color Code*/
  ;
   /* ------------------------------------------------------------*/
   /* Delete the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6240" ("D ", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0FW00.FK0FW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback changes*/
  ;
  FKWREC.XXX-MOD-ID = "4610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4610DELETE DCMPNT.VMUSGE01  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0FM410"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0F-4610

// Update temporary storage page
Function FK0FS-01()
   /* ------------------------------------------------------------*/
   /* Update the page in temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5FNCCD = "U"; /* Function code*/
  ;
  try
    call "TA0050" (FK0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "S01"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END OF FK0F-S01 -----------------------------*/
end // end FK0FS-01

// Read temporary storage page
Function FK0FS-02()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FK0FW02.XXXTSLEN = FK0FW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FK0FW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FK0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "S02"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END OF FK0F-S02 ------------------------------*/
end // end FK0FS-02

//*** RECORD=FK0FW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0FW00 type basicRecord
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 FK0FW-IDX FK0FW-IDX ; 
  10 FK0FW-INDEX FK0FW-INDEX ; 
  10 FK0FW-FORMAT-MAP-SW FK0FW-FORMAT-MAP-SW ; 
  10 FK0FW-MAP-SWITCH FK0FW-MAP-SWITCH ; 
  10 FK0FW-UPDATE-SW FK0FW-UPDATE-SW ; 
  10 FK0FW-REQUEST-DATA-SW FK0FW-REQUEST-DATA-SW ; 
  10 FK0FW-CONFIRM-SW FK0FW-CONFIRM-SW ; 
  10 FK0FW-UPDT-PERFORMED-SW FK0FW-UPDT-PERFORMED-SW ; 
  10 FK0FW-LIST-REQUESTED-SW FK0FW-LIST-REQUESTED-SW ; 
  10 FK0FW-VMUSGE01-EOF-SW FK0FW-VMUSGE01-EOF-SW ; 
  10 FK0FW-VMATRL01-EOF-SW FK0FW-VMATRL01-EOF-SW ; 
  10 FK0FW-VMUSGE01-FOUND-SW FK0FW-VMUSGE01-FOUND-SW ; 
  10 FK0FW-VMATRL01-FOUND-SW FK0FW-VMATRL01-FOUND-SW ; 
  10 FK0FW-VSYDVL01-FOUND-SW FK0FW-VSYDVL01-FOUND-SW ; 
  10 FK0FW-VSYCLR01-FOUND-SW FK0FW-VSYCLR01-FOUND-SW ; 
  10 FK0FW-ROW-SELECTED-SW FK0FW-ROW-SELECTED-SW ; 
  10 FK0FW-ROW-ENTERED-SW FK0FW-ROW-ENTERED-SW ; 
  10 FK-MAT-MFG-PCT FK-MAT-MFG-PCT ; 
end // end FK0FW00

//*** RECORD=FK0FW01 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0FW01 type basicRecord
  10 FK-VEND-CD FK-VEND-CD ; 
  10 FK-MAT-NBR FK-MAT-NBR ; 
  10 XTM-MAT-THCK-CD XTM-MAT-THCK-CD ; 
  10 XMG-COLR-GRP-CD XMG-COLR-GRP-CD ; 
  10 XCLCD XCLCD ; 
  10 FK0FW-SEL FK0FW-SEL [15] ; 
end // end FK0FW01

//*** RECORD=FK0FW02 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0FW02 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(1245) ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-MAT-NBR FK-MAT-NBR ; 
    10 XTM-MAT-THCK-CD XTM-MAT-THCK-CD ; 
    10 XMG-COLR-GRP-CD XMG-COLR-GRP-CD ; 
    10 XCLCD XCLCD ; 
    10 FK0FW-SEL FK0FW-SEL [15] ; 
    10 SY1STNBR SY1STNBR [15] ; 
    10 SY2CLRID SY2CLRID [15] ; 
    10 XDMCD XDMCD [15] ; 
    10 SY1SSTNM SY1SSTNM [15] ; 
    10 SY2CLRAB SY2CLRAB [15] ; 
    10 FK0FW-USAGE FK0FW-USAGE [15] ; 
    10 FK0FW-PF FK0FW-PF [15] ; 
    10 FK-MAT-WAST-PCT FK-MAT-WAST-PCT [15] ; 
    10 FK0FW-YIELD FK0FW-YIELD [15] ; 
    10 FK-MAT-DEVL-USE FK-MAT-DEVL-USE [15] ; 
    10 FK-MAT-DEVL-USE-DT FK-MAT-DEVL-USE-DT [15] ; 
    10 FK-MAT-FINL-USE FK-MAT-FINL-USE [15] ; 
    10 FK-MAT-FINL-USE-DT FK-MAT-FINL-USE-DT [15] ; 
    10 FK-MAT-PROD-USE FK-MAT-PROD-USE [15] ; 
    10 FK-MAT-PROD-USE-DT FK-MAT-PROD-USE-DT [15] ; 
    10 FK-MAT-MFG-PCT FK-MAT-MFG-PCT [15] ; 
    10 ZZZSDT ZZZSDT [15] ; 
    10 ZZZCHGCT ZZZCHGCT [15] ; 
end // end FK0FW02

//*** RECORD=FK0FW03 ****
// ----------------------------
// Application working storage.
// record used for style dev product
// ----------------------------
// ***********************
Record FK0FW03 type basicRecord
  10 FK0FW-VSYDVL01-PROD-SW FK0FW-VSYDVL01-PROD-SW [15] ; 
  10 XX1 XX1 ; 
end // end FK0FW03

// Confirm delete switch
DataItem FK0FW-CONFIRM-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be formated & displayed
DataItem FK0FW-FORMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index used for the screen
DataItem FK0FW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Index to compare row entries
DataItem FK0FW-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Selection list requested
DataItem FK0FW-LIST-REQUESTED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be displayed switch
DataItem FK0FW-MAP-SWITCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// P OR F INDICATOR
DataItem FK0FW-PF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data to display
DataItem FK0FW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Row entered switch
DataItem FK0FW-ROW-ENTERED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Row selected switch
DataItem FK0FW-ROW-SELECTED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FK0FW-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Storage update switch
DataItem FK0FW-UPDATE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Update performed switch
DataItem FK0FW-UPDT-PERFORMED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FK0FW-USAGE
DataItem FK0FW-USAGE decimal(7,4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// VMATRL01 EOF switch
DataItem FK0FW-VMATRL01-EOF-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VMATRL01 record found switch
DataItem FK0FW-VMATRL01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VMUSGE01 EOF switch
DataItem FK0FW-VMUSGE01-EOF-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VMUSGE01 record found switch
DataItem FK0FW-VMUSGE01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYCLR01 record found switch
DataItem FK0FW-VSYCLR01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYDVL01 record found switch
DataItem FK0FW-VSYDVL01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// style dev product table
DataItem FK0FW-VSYDVL01-PROD-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// YIELD
DataItem FK0FW-YIELD decimal(7,4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

