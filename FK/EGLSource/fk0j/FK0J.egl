package fk0j;

import corpcom2.XSDCD;
import corpcom2.XX0XW01;
import corpcom3.XPFK001;
import corpcom4.XSFKS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpx1.XDMCD;
import corpx1.XGPCD;
import corpx2.XPGCD;
import corpx2.XQACD;
import corpx2.XUMCD;
import corpx2.XWHCD;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import fb.common.FB4REC;
import fb.common.FB4SZPCT;
import fk.common.FK-AIRBAG-DESC;
import fk.common.FK-AIRBAG-ID;
import fk.common.FK-AIRBAG-SZ-SCLCD;
import fk.common.FK-AIRBAG-UNT-PRC;
import fk.common.FK-COMNT;
import fk.common.FK-DIF-AIRBAG-SHOE;
import fk.common.FK-NBR-AIRBAG-SHOE;
import fk.common.FKWREC;
import pg.common.PG2REC;
import pg.common.PG3REC;
import pg.common.PG4REC;
import pt.common.PT2HDTR;
import pt.common.PT2PCT1;
import pt.common.PT2QTOT1;
import pt.common.PT2QTOT2;
import pt.common.PT2QTOT3;
import pt.common.PT2QTY1;
import pt.common.PT2QTY2;
import pt.common.PT2QTY3;
import pt.common.PT2RNUM;
import pt.common.PT4QT4;
import pt.common.PT4QTOT4;
import sy.common.SY1SSTNM;
import sy.common.SY1STNBR;
import sy.common.SY2CLRID;
import sy.common.SY4SZSCL;
import sy.common.SY5SZID;
import ta.common.TA1REC;
import ta.common.TAEREC;
import vv.common.VABAG001;
import vv.common.VABSCL01;
import vv.common.VABUSE01;
import vv.common.VSYSCL01;
//*** PROGRAM=FK0J ****
// ------------------------------------------------------------
//                          FK0J
// COMPONENTS FORECASTING  -  SIZE SCALE TO STYLE MAINTENANCE
// 
// This application maintains rows on the Style/Bag size scale
// (DCMPNT.VSYSCL01) AND BAG USAGE (DCMPNT.VABUSE01) tables.
// Users will be allowed to inquire, add, change and delete
// bag and bag size scale data through the four maps provided
// in this application.
// 
// Transfer from one FK0J to another FK0J map is not possible
// except through FASTPATH.  Users may exit this application by
// using PF keys or FASTPATH, with the "OPTION" field available
// for use with any application.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      08/03/92  DFRANC  New application.
//          11/11/92  JALLE1  Fix product size scale problems
//                            on add screen.
//          06/30/93  JALLE1  Fix color code problems on style
//                            development projects.
//          11/08/93  JALLE1  Nov 93 table changes.
//          12/17/93  JALLE1  Fix abend code.
// FK0027   01/04/94  JALLE1  Activate the alternate bag flag
//                            (FK-ALT-AIRBAG-FL).
// 
// Y2KFIX   11/05/97  VRAMAC  Y2K MODIFICATIONS MADE TO:
//                            REGEN TO PICK UP NEW VERSION OF
//                            XX0XS01
// 
// *********************
Program FK0J type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FB4REC FB4REC; // record
  FK0JW00 FK0JW00; // record
  FK0JW01 FK0JW01; // record
  FK0JW02 FK0JW02; // record
  FK0JW03 FK0JW03; // record
  FKWREC FKWREC; // record
  PG2REC PG2REC; // record
  PG3REC PG3REC; // record
  PG4REC PG4REC; // record
  PT4REC PT4REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record
  VABAG001 VABAG001; // record
  VABSCL01 VABSCL01; // record
  VABUSE01 VABUSE01; // record
  VSYSCL01 VSYSCL01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FK0JM.FK0JM110,  // forms
      FK0JM.FK0JM210, 
      FK0JM.FK0JM310, 
      FK0JM.FK0JM410
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FK0JM110 initial; /* M110 Inquiry map input/output*/
    set FK0JM210 initial; /* M210 Add map input/output*/
    set FK0JM310 initial; /* M310 Change map input/output*/
    set FK0JM410 initial; /* M410 Delete map input/output*/
    set FB4REC empty; /* DFBUY.VFBASE01*/
    set PG2REC empty; /* Production Product Style Color*/
    set PG3REC empty; /**/
    set PG4REC empty; /* Development Product Sytle Color*/
    set PT4REC empty; /* DMODEL.VFBASE01*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set VABAG001 empty; /* Air bag DCMPNT.VABAG001*/
    set VABSCL01 empty; /* Air bag size scale DCMPNT.VABSCL01*/
    set VABUSE01 empty; /* Air bag usage*/
    set VSYSCL01 empty; /* Air bag style bag size*/
    set FK0JW00 empty; /* Working storage*/
    set FK0JW01 empty; /* Working storage*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    ;
    FK0JW00.FK0JW-VABAG001-EOF-SW = "N"; /* Init to 'n'o*/
    FK0JW00.FK0JW-VABSCL01-EOF-SW = "N"; /* Init to 'n'o*/
    FK0JW00.FK0JW-VABUSE01-EOF-SW = "N"; /* Init to 'n'o*/
    FK0JW00.FK0JW-VSYSCL01-EOF-SW = "N"; /* Init to 'n'o*/
    FK0JW00.FK0JW-VSYDVL01-FOUND-SW = "N"; /* Init to 'n'o*/
    FK0JW00.FK0JW-VSYCLR01-FOUND-SW = "N"; /* Init to 'n'o*/
    FK0JW00.FK0JW-VSYCLR01-COPY-FOUND-SW = "N"; /* Init to 'n'o*/
    FK0JW00.FK0JW-VSYDVL01-COPY-FOUND-SW = "N"; /* Init to 'n'o*/
    FK0JW00.FK0JW-UPDT-PERFORMED-SW = "N"; /* Init to 'n'o*/
    FK0JW00.FK0JW-COPY-DATA-SW = "N"; /* Copy data switch*/
    FK0JW00.FK0JW-CONFIRM-DELETE-SW = "N"; /* Confirm delete sw*/
    ;
    FK0JW00.FK0JW-FORMAT-MAP-SW = "Y"; /* Format map*/
    ;
    FK0JW00.FK0JW-MAP-SWITCH = "1"; /* Display map 1*/
    ;
     /* ------------------------------------------------------------*/
     /* If data was passed in the COMMAREA, use as the initial key.*/
     /* ------------------------------------------------------------*/
    ;
    if (FKWREC.FKW-UPDATE-FUNCTION == "A") /* Add requested*/
      ;
      FK0JW00.FK0JW-MAP-SWITCH = "2";
      ;
      FK0JM210.SY1STNBR = FKWREC.SY1STNBR[1]; /* Style number*/
      FK0JM210.SY2CLRID = FKWREC.SY2CLRID[1]; /* Color id*/
      FK0JM210.XDMCD = FKWREC.XDMCD[1]; /* Dimension code*/
      ;
      if (FKWREC.SY1STNBR[1] > " ")
        FK0JW00.FK0JW-REQUEST-DATA-SW = "Y";
      else
        FK0JW00.FK0JW-REQUEST-DATA-SW = "N";
      end
      ;
    else
      ;
      if (FKWREC.FKW-UPDATE-FUNCTION == "C") /* delete requested*/
        ;
        FK0JW00.FK0JW-MAP-SWITCH = "3";
        ;
        FK0JM310.SY1STNBR = FKWREC.SY1STNBR[1]; /* Style number*/
        FK0JM310.SY2CLRID = FKWREC.SY2CLRID[1]; /* Color id*/
        FK0JM310.XDMCD = FKWREC.XDMCD[1]; /* Dimension code*/
        ;
        if (FKWREC.SY1STNBR[1] > " ")
          FK0JW00.FK0JW-REQUEST-DATA-SW = "Y";
        else
          FK0JW00.FK0JW-REQUEST-DATA-SW = "N";
        end
        ;
      else
        ;
        if (FKWREC.FKW-UPDATE-FUNCTION == "D") /* delete requested*/
          ;
          FK0JW00.FK0JW-MAP-SWITCH = "4";
          ;
          FK0JM410.SY1STNBR = FKWREC.SY1STNBR[1]; /* Style number*/
          FK0JM410.SY2CLRID = FKWREC.SY2CLRID[1]; /* Color id*/
          FK0JM410.XDMCD = FKWREC.XDMCD[1]; /* Dim code*/
          ;
          if (FKWREC.SY1STNBR[1] > " ")
            FK0JW00.FK0JW-REQUEST-DATA-SW = "Y";
            FK0JW00.FK0JW-CONFIRM-DELETE-SW = "N";
          else
            FK0JW00.FK0JW-REQUEST-DATA-SW = "N";
          end
          ;
        else
          ;
          FK0JW00.FK0JW-MAP-SWITCH = "1";
          ;
          FK0JM110.SY1STNBR = FKWREC.SY1STNBR[1]; /* Style number*/
          FK0JM110.SY2CLRID = FKWREC.SY2CLRID[1]; /* Color id*/
          FK0JM110.XDMCD = FKWREC.XDMCD[1]; /* Dimension code*/
          ;
          if (FKWREC.SY1STNBR[1] > " ")
            FK0JW00.FK0JW-REQUEST-DATA-SW = "Y";
          else
            FK0JW00.FK0JW-REQUEST-DATA-SW = "N";
          end
          ;
        end
        ;
      end
      ;
    end
    ;
    FKWREC.FKW-UPDATE-FUNCTION = " "; /* Clear passed data*/
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0J-0001; /* Converse the main process*/
    ;
    ;
    FK0J-0001: FK0J-0001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0J-0001; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FK0J

// Main process to display a map
Function FK0J-0001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the first map.*/
   /* 2) Otherwise, if specified, display the second map.*/
   /* 3) Otherwise, if specified, display the third map.*/
   /* 4) Otherwise, if specified, display the fourth map.*/
   /* 5) Otherwise, indicate error and exit to Application Menu.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-MAP-SWITCH == "1") /* Map 1 was requested*/
    ;
    FK0J-1000(); /* Display map 1 (Inquiry)*/
    ;
  else
    ;
    if (FK0JW00.FK0JW-MAP-SWITCH == "2") /* Map 2 was requested*/
      ;
      FK0J-2000(); /* Display map 2 (Add)*/
      ;
    else
      ;
      if (FK0JW00.FK0JW-MAP-SWITCH == "3") /* Map 3 requested*/
        ;
        FK0J-3000(); /* Display map 4 (Change)*/
        ;
      else
        ;
        if (FK0JW00.FK0JW-MAP-SWITCH == "4") /* Map 4 requested*/
          ;
          FK0J-4000(); /* Display map 4 (Delete)*/
          ;
        else
          ;
              /* --------------------------------------------------------*/
              /* Write the error to Error Diagnosis Reporting Facility*/
              /*  */
              /* --------------------------------------------------------*/
          ;
          FKWREC.XXX-MOD-ID = "001"; /* Module identification*/
          FKWREC.XXXMSGNO = 10; /* Unexpected error occurred*/
          ;
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
          TA1REC.TA1TYPE = "APPL"; /* Type of error*/
          TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";
          TA1REC.TA1MAPNO = FK0JW00.FK0JW-MAP-SWITCH; /* Map nmbr*/
          TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program appl*/
          TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
          ;
          call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /**/
                                   /* Error diagnosis routine*/
          ;
              /* --------------------------------------------------------*/
              /* Exit to display the application system menu.*/
              /* --------------------------------------------------------*/
          ;
          COMMAREA.CATOAP = "FK0B"; /* TO application*/
          ;
          XSFKS01(); /* Exit to another application*/
          ;
              /* ---------------------------------------------------------*/
              /* Abnormally terminate the*/
              /* transaction if the exit failed.*/
              /* ---------------------------------------------------------*/
          ;
          TA1REC.TA1FUNC = "ABND"; /* Termination function*/
          ;
          call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
          ;
        end
        ;
      end
      ;
    end
    ;
  end
  ;
   /* ---------------------- End FK0J-0001 --------------------------------*/
end // end FK0J-0001

// Process inquiry map
Function FK0J-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0J-1100(); /* Obtain the data to display*/
  ;
  FK0J-1200(); /* Format and display the map*/
  ;
  FK0J-1300(); /* Check attention identifier*/
  ;
  FK0J-1400(); /* Reset fields to normal intensity*/
  ;
  FK0J-1500(); /* Verify the entered data*/
  ;
  FK0J-1600(); /* Process valid input request*/
  ;
   /* ------------------End FK0J-1000 --------------------------------*/
end // end FK0J-1000

// Obtain data to display
Function FK0J-1100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-REQUEST-DATA-SW != "Y" /* data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0JW01 empty; /* Initialize display storage*/
  ;
  FK0JW01.SY1STNBR = FK0JM110.SY1STNBR; /* Style*/
  FK0JW01.SY2CLRID = FK0JM110.SY2CLRID; /* Color id*/
  FK0JW01.XDMCD = FK0JM110.XDMCD; /* Dimension*/
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0JM110.SY1STNBR != "  ") /* If style nbr on map*/
    ;
    FK0J-1110(); /* Lookup color style*/
                                 /* (DPRODG.VSYCLR01)*/
                                 /* (DPRODG.VSYDVL01)*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Select the air bag usage record for the entered style*/
   /* --------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-VABUSE01-EOF-SW = "N"; /* Init found sw to 'n'*/
  ;
  if (FK0JM110.SY1STNBR != "  ") /* If style nbr on map*/
    ;
    FK0J-1120(); /* Open air bag usage table*/
                                 /* (DPRODG.VABUSE01)*/
    FK0J-1121(); /* Read air bag usage record*/
                                 /* (DPRODG.VABUSE01)*/
    FK0J-1125(); /* Close air bag usage table*/
                                 /* (DPRODG.VABUSE01)*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Save header information in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0J-1130(); /* Format header information*/
  ;
   /* --------------------------------------------------------------*/
   /* Open and read in the style/bag size scale table.*/
   /* --------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-VSYSCL01-EOF-SW = "N"; /* Set end of file switch*/
  FK0JW00.FK0JW-IDX = 1; /* Reset display line index*/
  ;
  FK0J-1140(); /* Open Style/bag size scale file*/
                                  /* (DCMPNT.VSYSCL01)*/
  ;
  FK0J-1141(); /* Read next record*/
                                  /* (DCMPNT.VSYSCL01)*/
  ;
   /* --------------------------------------------------------------*/
   /* Loop and read Style/bag records until end of file or index*/
   /* is greater than 4.  Only 4 lines are displayed on the screen.*/
   /* --------------------------------------------------------------*/
  ;
  while (FK0JW00.FK0JW-VSYSCL01-EOF-SW != "Y" /* If color code on map*/
   && FK0JW00.FK0JW-IDX <= 4) /* Line count 4 or less*/
    ;
    FK0J-1150(); /* Open cursor DCMPNT.VABAG001*/
    FK0J-1151(); /* Read row DCMPNT.VABAG001*/
    FK0J-1155(); /* Close cursor DCMPNT.VABAG01*/
    ;
    FK0J-1160(); /* Format detail line*/
    ;
     /* --------------------------------------------------------------*/
     /* Loop and read Style/bag records until end of file or the airbag*/
     /* number is not equal to what is stored in working storage.  We*/
     /* are only interested in the record when the airbag number changes.*/
     /* --------------------------------------------------------------*/
    ;
    while (FK0JW00.FK0JW-VSYSCL01-EOF-SW == "N"
     && VSYSCL01.FK-AIRBAG-ID == FK0JW01.FK-AIRBAG-ID[FK0JW-IDX])
      ;
      FK0J-1141(); /* Read next record*/
                                  /* (DCMPNT.VSYSCL01)*/
    end
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment index*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Close Air Bag Style/Bag Size table*/
   /* --------------------------------------------------------------*/
  ;
  FK0J-1145(); /* Close Style/Bag size table*/
                                  /* (DCMPNT.VSYSCL01)*/
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-REQUEST-DATA-SW = "N";
  FK0JW00.FK0JW-FORMAT-MAP-SW = "Y";
  ;
   /* ---------------------- End FK0J-1100 -------------------------*/
end // end FK0J-1100

// Select color (DPRODG.VSYCLR01)
Function FK0J-1110()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/
  ;
  set PG2REC empty;
  ;
  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = FK0JM110.SY1STNBR; /* Style number*/
  PG2REC.SY2CLRID = FK0JM110.SY2CLRID; /* Color id*/
  PG2REC.XDMCD = FK0JM110.XDMCD; /* Dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW01.SY1STNBR = PG2REC.SY1STNBR; /* Style number*/
      FK0JW01.SY2CLRID = PG2REC.SY2CLRID; /* Color id*/
      FK0JW01.XDMCD = PG2REC.XDMCD; /* Dimension code*/
      FK0JW01.SY1SSTNM = PG2REC.SY1SSTNM; /* short style name*/
      FK0JW01.SY4SZSCL = PG2REC.SY4SZSCL; /* prod size scale*/
      FK0JW00.FK0JW-VSYCLR01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/
      ;
      FK0JW00.FK0JW-VSYCLR01-FOUND-SW = "N";
      FK0J-1111();
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT COLOR (DPRODG.VSYCLR01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0K-1110 ----------------------------------*/
end // end FK0J-1110

// Select style (DPRODG.VSYDVL01)
Function FK0J-1111()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  PG4REC.PG4STNBR = FK0JM110.SY1STNBR; /* Style number*/
  ;
  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW01.SY1STNBR = PG4REC.PG4STNBR; /* Style number*/
      FK0JW01.SY2CLRID = FK0JM110.SY2CLRID; /* Style color*/
      FK0JW01.XDMCD = FK0JM110.XDMCD; /* Dimension code*/
      ;
      FK0JW01.SY1SSTNM = PG4REC.SY1SSTNM; /* Short name*/
      ;
      FK0JW01.SY4SZSCL = " "; /* Production size scale*/
      FK0JW00.FK0JW-VSYDVL01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FK0JW00.FK0JW-FORMAT-MAP-SW = "N";
      FK0JW00.FK0JW-VSYDVL01-FOUND-SW = "N";
      FKWREC.XXX-MOD-ID = "1111"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      set FK0JM110.SY1STNBR cursor, bold;
      set FK0JM110.SY2CLRID bold;
      set FK0JM110.XDMCD bold;
      ;
      return;
      ;
    end
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1111"; /* Module identification*/
  ;
  FK0JW00.FK0JW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT STYLE (DPRODG.VSYDVL01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-1111 -------------------------------------*/
end // end FK0J-1111

// Select usage (DPRODG.VABUSE01)
Function FK0J-1120()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/
  ;
  set VABUSE01 empty;
  ;
  VABUSE01.SY1STNBR = FK0JM110.SY1STNBR; /* Style number*/
  VABUSE01.SY2CLRID = FK0JM110.SY2CLRID; /* Color id*/
  VABUSE01.XDMCD = FK0JM110.XDMCD; /* Dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("S1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT USAGE (DPRODG.VABUSE01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.SY1STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0K-1120 ----------------------------------*/
end // end FK0J-1120

// Read next DCMPNT.VABUSE01
Function FK0J-1121()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the VABUSE01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("N1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      FK0JW00.FK0JW-VABUSE01-EOF-SW = "Y";
      FKWREC.XXX-MOD-ID = "1121";
      converseLib.validationFailed(18);
      set FK0JM110.SY1STNBR bold, cursor;
      set FK0JM110.SY2CLRID bold;
      set FK0JM110.XDMCD bold;
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1121"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ NEXT DCMPNT.VMUSGE01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-1121 ------------------------------------*/
end // end FK0J-1121

// Close DCMPNT.VABUSE01
Function FK0J-1125()
   /* ------------------------------------------------------------*/
   /* Close the VABUSE01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("C1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1125"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VABUSE01        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-1125 --------------------------------------*/
end // end FK0J-1125

// Format Header Information
Function FK0J-1130()
   /* ------------------------------------------------------------*/
   /* Format the Header information to be displayed on the map.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW01.SY1STNBR = FK0JM110.SY1STNBR; /* Style number*/
  FK0JW01.SY2CLRID = FK0JM110.SY2CLRID; /* Color id*/
  FK0JW01.XDMCD = FK0JM110.XDMCD; /* Dimension code*/
  ;
  if (FK0JW00.FK0JW-VSYCLR01-FOUND-SW == "Y")
    FK0JW01.SY1SSTNM = PG2REC.SY1SSTNM; /* Style name*/
    FK0JW01.SY4SZSCL = PG2REC.SY4SZSCL; /* Prod size scale*/
  else
    ;
    if (FK0JW00.FK0JW-VSYDVL01-FOUND-SW == "Y")
      FK0JW01.SY1SSTNM = PG4REC.SY1SSTNM; /* Style name*/
    end
    ;
  end
  ;
  FK0JW01.FK-NBR-AIRBAG-SHOE = VABUSE01.FK-NBR-AIRBAG-SHOE;
  FK0JW01.FK-DIF-AIRBAG-SHOE = VABUSE01.FK-DIF-AIRBAG-SHOE;
  ;
   /* ----------------- END FK0J-1130 --------------------------------------*/
end // end FK0J-1130

// Open DCMPNT.VSYSCL01
Function FK0J-1140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty;
  ;
  VSYSCL01.SY1STNBR = FK0JW01.SY1STNBR; /* Style number*/
  VSYSCL01.SY2CLRID = FK0JW01.SY2CLRID; /* Color id*/
  VSYSCL01.XDMCD = FK0JW01.XDMCD; /* Dimension code*/
  VSYSCL01.FK-AIRBAG-ID = "*"; /* Air bag id*/
  ;
  try
    call "IO6390" ("S1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DCMPNT.VSYSCL01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-1140 ----------------------------------*/
end // end FK0J-1140

// Read next DCMPNT.VSYSCL01
Function FK0J-1141()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the VSYSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6390" ("N1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of file*/
      ;
      FK0JW00.FK0JW-VSYSCL01-EOF-SW = "Y"; /* End of file*/
      ;
      if (FK0JW00.FK0JW-VSYSCL01-1ST-REC-SW == "Y") /* First record*/
        ;
        converseLib.validationFailed(18);
        FKWREC.XXX-MOD-ID = "1141";
        set FK0JM110.SY1STNBR bold, cursor;
        set FK0JM110.SY2CLRID bold;
        set FK0JM110.XDMCD bold;
        ;
      end
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1141"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ NEXT DCMPNT.VSYSCL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-1141 ------------------------------------*/
end // end FK0J-1141

// Close DCMPNT.VSYSCL01
Function FK0J-1145()
   /* ------------------------------------------------------------*/
   /* Close the VSYSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty;
  ;
  try
    call "IO6390" ("C1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1145"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VSYSCL01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-1145 -------------------------------------*/
end // end FK0J-1145

// Open DCMPNT.VABAG001
Function FK0J-1150()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-AIRBAG-ID = VSYSCL01.FK-AIRBAG-ID; /* Air bag id*/
  ;
  try
    call "IO6360" ("S1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DCMPNT.VABAG001    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* -----------------------END FK0J-1150 ---------------------------------*/
end // end FK0J-1150

// Read DCMPNT.VABAG001
Function FK0J-1151()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6360" ("N1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW01.FK-AIRBAG-ID[FK0JW-IDX] = VABAG001.FK-AIRBAG-ID;
      FK0JW01.FK-AIRBAG-DESC[FK0JW-IDX] = VABAG001.FK-AIRBAG-DESC;
      FK0JW01.FK-AIRBAG-UNT-PRC[FK0JW-IDX] = VABAG001.FK-AIRBAG-UNT-PRC;
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1151"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ DCMPNT.VABAG001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-1151 -------------------------------------*/
end // end FK0J-1151

// Close DCMPNT.VABAG001
Function FK0J-1155()
   /* ------------------------------------------------------------*/
   /* Close the Air Bag table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6360" ("C1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1155"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VABAG001    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-1155 --------------------------------------*/
end // end FK0J-1155

// Format Detail Line
Function FK0J-1160()
   /* ------------------------------------------------------------*/
   /* Format the Detail record to be displayed to the map.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW01.FK0JW-SEL[FK0JW-IDX] = FK0JM110.FK0JM-SEL[FK0JW-IDX]; /* Sel*/
  FK0JW01.FK-AIRBAG-ID[FK0JW-IDX] = VSYSCL01.FK-AIRBAG-ID; /* Air Bag*/
  FK0JW01.FK-AIRBAG-DESC[FK0JW-IDX] = VABAG001.FK-AIRBAG-DESC; /* DESC*/
  FK0JW01.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] = VSYSCL01.FK-AIRBAG-SZ-SCLCD; /* Airbag sz scale*/
  FK0JW01.FK-AIRBAG-UNT-PRC[FK0JW-IDX] = VABAG001.FK-AIRBAG-UNT-PRC;
  FK0JW01.FK-COMNT[FK0JW-IDX] = VABAG001.FK-COMNT; /* Comment*/
  ;
   /* ----------------- END FK0J-1160 --------------------------------------*/
end // end FK0J-1160

// Format and converse map
Function FK0J-1200()
   /* -------------------------------------------------------------*/
   /* If an error was found, save the error message number*/
   /* -------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
   /* -------------------------------------------------------------*/
   /* If obtain data failed or no error, format data to display*/
   /* -------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-REQUEST-DATA-SW == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0)   /* or no error found*/
    ;
    if (FK0JW00.FK0JW-FORMAT-MAP-SW == "Y") /* Map must be formatted*/
      FK0J-1210(); /* Format the data on the map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Protect select fields where no data is present.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0JW00.FK0JW-IDX <= 4) /* Until screen is processed*/
    ;
    if (FK0JW01.FK-AIRBAG-ID[FK0JW-IDX] <= " ")
      set FK0JM110.FK0JM-SEL[FK0JW-IDX] invisible, skip;
      set FK0JM110.FK-AIRBAG-ID[FK0JW-IDX] invisible, skip;
      set FK0JM110.FK-AIRBAG-DESC[FK0JW-IDX] invisible, skip;
      set FK0JM110.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] invisible, skip;
      set FK0JM110.FK-AIRBAG-UNT-PRC[FK0JW-IDX] invisible, skip;
      set FK0JM110.FK-COMNT[FK0JW-IDX] invisible, skip;
    end
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0JM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0JM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0JM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
    end
    ;
    FK0JM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
    set FK0JM110 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse FK0JM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0JM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0JM110.CAITEM; /* Application data*/
  ;
   /* ----------------- END FK0J-1200 ----------------------------------*/
end // end FK0J-1200

// Format the display data
Function FK0J-1210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0JM110 initial; /* m110 input/output area*/
  ;
  FK0JW00.FK0JW-FORMAT-MAP-SW = "N"; /* Format the map switch*/
  ;
   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JW01.SY1STNBR <= " ") /* Style not present*/
    set FK0JM110.SY1STNBR cursor; /* Position cursor*/
  end
  ;
  FK0JM110.SY1STNBR = FK0JW01.SY1STNBR; /* Style number*/
  FK0JM110.SY2CLRID = FK0JW01.SY2CLRID; /* Color id*/
  FK0JM110.XDMCD = FK0JW01.XDMCD; /* Dimension code*/
  FK0JM110.SY1SSTNM = FK0JW01.SY1SSTNM; /* Style name*/
  FK0JM110.SY4SZSCL = FK0JW01.SY4SZSCL; /* Production size scale*/
  FK0JM110.FK-NBR-AIRBAG-SHOE = FK0JW01.FK-NBR-AIRBAG-SHOE;
  FK0JM110.FK-DIF-AIRBAG-SHOE = FK0JW01.FK-DIF-AIRBAG-SHOE;
  ;
  FK0JW00.FK0JW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0JW00.FK0JW-IDX <= 4) /* Until screen is full*/
    ;
    FK0JM110.FK0JM-SEL[FK0JW-IDX] = FK0JW01.FK0JW-SEL[FK0JW-IDX];
    FK0JM110.FK-AIRBAG-ID[FK0JW-IDX] = FK0JW01.FK-AIRBAG-ID[FK0JW-IDX];
    FK0JM110.FK-AIRBAG-DESC[FK0JW-IDX] = FK0JW01.FK-AIRBAG-DESC[FK0JW-IDX];
    FK0JM110.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] = FK0JW01.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX];
    FK0JM110.FK-AIRBAG-UNT-PRC[FK0JW-IDX] = FK0JW01.FK-AIRBAG-UNT-PRC[FK0JW-IDX];
    FK0JM110.FK-COMNT[FK0JW-IDX] = FK0JW01.FK-COMNT[FK0JW-IDX];
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
   /* ----------------- END FK0J-1210 ------------------------------------*/
end // end FK0J-1210

// Check attention identifier
Function FK0J-1300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize FKWREC*/
    FKWREC.SY1STNBR[1] = FK0JW01.SY1STNBR; /* Style*/
    FKWREC.SY2CLRID[1] = FK0JW01.SY2CLRID; /* Color*/
    FKWREC.XDMCD[1] = FK0JW01.XDMCD; /* Dimension*/
    COMMAREA.CATOAP = "FK0J"; /* to applicaiton*/
    COMMAREA.CAITEM = "I   "; /* item*/
    ;
    XSFKS01(); /* Exit to another appl.*/
    ;
    set FK0JM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize FKWREC*/
      ;
      FKWREC.SY1STNBR[1] = FK0JM110.SY1STNBR; /* Style*/
      FKWREC.SY2CLRID[1] = FK0JM110.SY2CLRID; /* Color*/
      FKWREC.XDMCD[1] = FK0JM110.XDMCD; /* Dimension*/
      ;
      COMMAREA.CATOAP = FK0JM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0JM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0JM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0JM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = FK0JM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0JM110.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf12  /* FK0I (BAG MAINTENANCE)*/
   && converseVar.eventKey not pf14  /* FK0K (STYLE/COLOR/DIM BAG MAINT)*/
   && converseVar.eventKey not pf15  /* FK0L (SIZE PCT MAINT)*/
   && converseVar.eventKey not pf17) /* FK0Z (SIZE SCALE PER BAG)*/
    ;
    FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ----------------- END FK0J-1300 --------------------------------------*/
end // end FK0J-1300

// Reset highlighted fields
Function FK0J-1400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0JM110.SY1STNBR initialAttributes; /* Style number*/
  set FK0JM110.SY2CLRID initialAttributes; /* Color id*/
  set FK0JM110.XDMCD initialAttributes; /* Dimension code*/
  ;
  FK0JW00.FK0JW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0JW00.FK0JW-IDX <= 4 /* Until end of lines*/
   && FK0JM110.SY1STNBR > " ") /* or end of display*/
    ;
    set FK0JM110.FK0JM-SEL[FK0JW-IDX] normal; /* Reset select flag*/
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
  set FK0JM110.CATOAP initialAttributes; /* TO application*/
  set FK0JM110.CAITEM initialAttributes; /* Application data*/
  ;
   /* ----------------- END FK0J-1400 -------------------------------------*/
end // end FK0J-1400

// Verify data that was entered
Function FK0J-1500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JM110.CAITEM > " ") /* Application data was entered*/
    ;
    if (converseVar.eventKey is pf12 /* FK0I selected*/
     || converseVar.eventKey is pf14 /* FK0K selected*/
     || converseVar.eventKey is pf15 /* FK0L selected*/
     || converseVar.eventKey is pf17) /* FK0Z selected*/
         /* next sentence*/
    else
      FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
      set FK0JM110.CAITEM cursor, bold; /* Highlight*/
      converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    end
    ;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Verify that a Style, Color and Dimension were entered*/
   /* -----------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is enter)
    ;
    if (FK0JM110.SY1STNBR <= " ")
      ;
      converseLib.validationFailed(43); /* Required field*/
      set FK0JM110.SY1STNBR cursor, bold;
      FKWREC.XXX-MOD-ID = "1500"; /* Module id*/
      ;
      exit stack;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify data in the line if screen already formatted*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-FORMAT-MAP-SW == "N")
    ;
    FK0JW00.FK0JW-IDX = 4; /* Initialize line index*/
    ;
    while (FK0JW00.FK0JW-IDX > 0) /* Until end of lines*/
      ;
      if (FK0JM110.FK0JM-SEL[FK0JW-IDX] != FK0JW01.FK0JW-SEL[FK0JW-IDX]
       && FK0JM110.FK0JM-SEL[FK0JW-IDX] != "S") /* and is not a 's'*/
        ;
        if (FK0JM110.FK0JM-SEL[FK0JW-IDX] > " ")
          FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
          converseLib.validationFailed(13); /* only 'S' may be entered*/
          set FK0JM110.FK0JM-SEL[FK0JW-IDX] cursor, bold; /* highlight*/
        end
        ;
      end
      ;
      FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX - 1; /* Decrement line number*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* ----------------- END FK0J-1500 --------------------------------*/
end // end FK0J-1500

// Process valid input request
Function FK0J-1600()
   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-FORMAT-MAP-SW = "Y"; /* Format the map switch*/
  FK0JW00.FK0JW-REQUEST-DATA-SW = "Y"; /* Request for data*/
  ;
   /* ------------------------------------------------------------*/
   /* Check to see if the key changed.  If so, return to request new data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JM110.SY1STNBR != FK0JW01.SY1STNBR /* Style number changed*/
   || FK0JM110.SY2CLRID != FK0JW01.SY2CLRID /* Color id changed*/
   || FK0JM110.XDMCD != FK0JW01.XDMCD)      /* Dimension changed*/
    ;
    FK0JW00.FK0JW-REQUEST-DATA-SW = "Y"; /* Request for data switch*/
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Save the select fields and clear the map input/output area.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0JW00.FK0JW-IDX <= 4) /* Until end of lines*/
    ;
    if (FK0JM110.FK0JM-SEL[FK0JW-IDX] != FK0JW01.FK0JW-SEL[FK0JW-IDX])
      ;
      FK0JW01.FK0JW-SEL[FK0JW-IDX] = FK0JM110.FK0JM-SEL[FK0JW-IDX];
      ;
    end
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1;
    ;
  end
  ;
  if (converseVar.eventKey is pf1  /* Help requested*/
   || converseVar.eventKey is pf3  /* Exit requested*/
   || converseVar.eventKey is pf4  /* Master menu*/
   || converseVar.eventKey is pf12 /* FK0I requested*/
   || converseVar.eventKey is pf14 /* FK0K requested*/
   || converseVar.eventKey is pf15 /* FK0L requested*/
   || converseVar.eventKey is pf17) /* FK0Z requested*/
    ;
     /* ------------------------------------------------------------*/
      /* Update the modifiable data in the COMMAREA.*/
     /* ------------------------------------------------------------*/
    ;
    set FKWREC empty;
    ;
    FKWREC.SY1STNBR[1] = FK0JM110.SY1STNBR; /* Style number*/
    FKWREC.SY2CLRID[1] = FK0JM110.SY2CLRID; /* Color id*/
    FKWREC.XDMCD[1] = FK0JM110.XDMCD; /* Dimension code*/
    ;
    FK0JW00.FK0JW-IDX = 4; /* Initialize line index*/
    ;
    while (FK0JW00.FK0JW-IDX >= 1) /* Until end of lines*/
      ;
      if (FK0JM110.FK0JM-SEL[FK0JW-IDX] == "S") /* Line was selected*/
        ;
        FKWREC.FK-AIRBAG-ID = FK0JM110.FK-AIRBAG-ID[FK0JW-IDX];
        ;
        FKWREC.FK-AIRBAG-SZ-SCLCD = FK0JM110.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX];
        ;
        FK0JW00.FK0JW-REQUEST-DATA-SW = "Y"; /* Request for data*/
        ;
      end
      ;
      FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX - 1; /* Increment line index*/
      ;
    end
    ;
    FKWREC.FKWINDX1 = FKWREC.FKWINDX1 - 1; /* Decrement FKWREC index by one*/
    ;
    if (converseVar.eventKey is pf12) /* PF13 Was pressed*/
      COMMAREA.CATOAP = "FK0I"; /* To application*/
      COMMAREA.CAITEM = FK0JM110.CAITEM; /* Item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 Was pressed*/
      COMMAREA.CATOAP = "FK0K"; /* To application*/
      COMMAREA.CAITEM = FK0JM110.CAITEM; /* Item*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 Was pressed*/
      COMMAREA.CATOAP = "FK0L"; /* To application*/
      COMMAREA.CAITEM = FK0JM110.CAITEM; /* Item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 Was pressed*/
      COMMAREA.CATOAP = "FK0Z"; /* To application*/
      COMMAREA.CAITEM = FK0JM110.CAITEM; /* Item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ----------------- END FK0J-1600 -----------------------------------*/
end // end FK0J-1600

// Process Add map
Function FK0J-2000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0J-2100(); /* Obtain the data to display*/
  ;
  FK0J-2200(); /* Format and display the map*/
  ;
  FK0J-2300(); /* Check attention identifier*/
  ;
  FK0J-2400(); /* Reset fields to normal intensity*/
  ;
  FK0J-2500(); /* Verify the entered data*/
  ;
  FK0J-2600(); /* Process valid input request*/
  ;
   /* ----------------- END FK0J-2000 ---------------------------------*/
end // end FK0J-2000

// Obtain data to display
Function FK0J-2100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-REQUEST-DATA-SW != "Y" /* data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0JW01 empty; /* Initialize display storage*/
  ;
  FK0JW01.SY1STNBR = FK0JM210.SY1STNBR; /* Style*/
  FK0JW01.SY2CLRID = FK0JM210.SY2CLRID; /* Color id*/
  FK0JW01.XDMCD = FK0JM210.XDMCD; /* Dimension*/
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0JM210.SY1STNBR != "  ") /* If style nbr on map*/
    ;
    FK0J-2110(); /* Lookup color style*/
                                 /* (DPRODG.VSYCLR01)*/
                                 /* (DPRODG.VSYDVL01)*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* if Copy From entered, verify the information*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0JM210.FK0JM-COPY-STYLE != "  ") /* If copy style entered*/
    ;
    FK0JW00.FK0JW-COPY-DATA-SW = "Y"; /* Copy from requested*/
    ;
    FK0J-2112();
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* If requested, obtain copy data and load into working storage*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-COPY-DATA-SW == "Y") /* If copying data*/
    ;
    FK0JW00.FK0JW-VABUSE01-1ST-REC-SW = "Y"; /* 1st record read*/
    FK0JW00.FK0JW-VABUSE01-EOF-SW = "N"; /* End of file switch*/
    FK0JW00.FK0JW-IDX = 1; /* Reset index*/
    ;
    FK0J-2120(); /* Open Usage cursor*/
                                                    /* (DCMPNT.VABUSE01)*/
    FK0J-2121(); /* Read next record*/
    ;
    FK0JW00.FK0JW-IDX = 1;
    ;
    while (FK0JW00.FK0JW-VABUSE01-EOF-SW == "N" /* Process until eof*/
     && FK0JW00.FK0JW-IDX <= 4)
      ;
      FK0JW01.FK0JW-VABUSE01-GROUP[FK0JW-IDX] = VABUSE01.VABUSE01-GROUP;
      ;
      FK0J-2121(); /* Read next record*/
      ;
      FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment index*/
      ;
    end
    ;
    FK0J-2125(); /* Close Usage cursor*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Save header information in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0J-2130(); /* Format header information*/
  ;
   /* --------------------------------------------------------------*/
   /* Open and read in the Style/Bag Size Scale table.*/
   /* --------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-VSYSCL01-EOF-SW = "N"; /* Set end of file switch*/
  FK0JW00.FK0JW-IDX = 1; /* Reset display line index*/
  ;
  FK0J-2140(); /* Open Style/bag size scale file*/
                                  /* (DCMPNT.VSYSCL01)*/
  FK0J-2141(); /* Read next record*/
                                  /* (DCMPNT.VSYSCL01)*/
   /* --------------------------------------------------------------*/
   /* Loop and read Style/bag records until end of file or index*/
   /* is greater than 4.  Only 4 lines displayed on the screen.*/
   /* --------------------------------------------------------------*/
  ;
  while (FK0JW00.FK0JW-VSYSCL01-EOF-SW != "Y" /* If color code on map*/
   && FK0JW00.FK0JW-IDX <= 4) /* Line count 4 or less*/
    ;
    FK0J-2150(); /* Open cursor DCMPNT.VABAG001*/
    FK0J-2151(); /* Read row DCMPNT.VABAG001*/
    FK0J-2155(); /* Close cursor DCMPNT.VABAG01*/
    FK0J-2160(); /* Format detail line*/
    ;
     /* --------------------------------------------------------------*/
     /* Loop and read Style/bag records until end of file or the airbag*/
     /* number is not equal to what is stored in working storage.  We*/
     /* are only interested in the record when the airbag number changes.*/
     /* --------------------------------------------------------------*/
    ;
    FK0JW00.FK0JW-AB-IDX = 1; /* Reset index*/
    ;
    while (FK0JW00.FK0JW-VSYSCL01-EOF-SW == "N"
     && VSYSCL01.FK-AIRBAG-ID == FK0JW01.FK-AIRBAG-ID[FK0JW-IDX]
     && FK0JW00.FK0JW-AB-IDX <= 40)
      ;
      FK0J-2161(); /* Write record to working storage*/
      FK0J-2141(); /* Read next record*/
                                     /* (DCMPNT.VSYSCL01)*/
      FK0JW00.FK0JW-AB-IDX = FK0JW00.FK0JW-AB-IDX + 1;
      ;
    end
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment index*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Close Air Bag Style/Bag Size table*/
   /* --------------------------------------------------------------*/
  ;
  FK0J-2145(); /* Close Style/Bag size table*/
                                  /* (DCMPNT.VSYSCL01)*/
   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* If data was copied, display message stating data was obtained.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-COPY-DATA-SW == "Y") /* If copy from loaded*/
    FKWREC.XXXMSGNO = 39; /* Copy data displayed*/
    FKWREC.XXX-MOD-ID = "2100"; /* Module Id*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-REQUEST-DATA-SW = "N";
  FK0JW00.FK0JW-FORMAT-MAP-SW = "Y";
  ;
   /* ---------------------- End FK0J-2100 -------------------------*/
end // end FK0J-2100

// Select color (DPRODG.VSYCLR01)
Function FK0J-2110()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/
  ;
  set PG2REC empty;
  ;
  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = FK0JM210.SY1STNBR; /* Style number*/
  PG2REC.SY2CLRID = FK0JM210.SY2CLRID; /* Color id*/
  PG2REC.XDMCD = FK0JM210.XDMCD; /* Dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW01.SY1STNBR = PG2REC.SY1STNBR; /* Style number*/
      FK0JW01.SY2CLRID = PG2REC.SY2CLRID; /* Color id*/
      FK0JW01.XDMCD = PG2REC.XDMCD; /* Dimension code*/
      FK0JW01.SY1SSTNM = PG2REC.SY1SSTNM; /* short style name*/
      FK0JW01.SY4SZSCL = PG2REC.SY4SZSCL; /* prod size scale*/
      FK0JW00.FK0JW-VSYCLR01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/
      ;
      FK0JW00.FK0JW-VSYCLR01-FOUND-SW = "N";
      ;
      FK0J-2111(); /* Look up development style*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT COLOR (DPRODG.VSYCLR01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0K-2110 ----------------------------------*/
end // end FK0J-2110

// Select style (DPRODG.VSYDVL01)
Function FK0J-2111()
   /* ------------------------------------------------------------*/
   /* Select development style from the VSYDVL01 table*/
   /* ------------------------------------------------------------*/
  ;
  PG4REC.PG4STNBR = FK0JM210.SY1STNBR; /* Style number*/
  ;
  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW01.SY1STNBR = PG4REC.PG4STNBR; /* Style number*/
      FK0JW01.SY2CLRID = FK0JM210.SY2CLRID; /* Style color*/
      FK0JW01.XDMCD = FK0JM210.XDMCD; /* Dimension code*/
      FK0JW01.SY1SSTNM = PG4REC.SY1SSTNM; /* Short name*/
      FK0JW01.SY4SZSCL = " "; /* Production size scale*/
      FK0JW00.FK0JW-VSYDVL01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FKWREC.XXX-MOD-ID = "2111"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      FK0JW00.FK0JW-FORMAT-MAP-SW = "N";
      set FK0JM210.SY1STNBR cursor, bold;
      set FK0JM210.SY2CLRID bold;
      set FK0JM210.XDMCD bold;
      FK0JW00.FK0JW-VSYDVL01-FOUND-SW = "N";
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2111"; /* Module identification*/
  ;
  FK0JW00.FK0JW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT STYLE (DPRODG.VSYDVL01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2111 -------------------------------------*/
end // end FK0J-2111

// Select color (DPRODG.VSYCLR01)
Function FK0J-2112()
   /* ------------------------------------------------------------*/
   /* Set up key for reading VSYSCL01 table for copy from key*/
   /* ------------------------------------------------------------*/
  ;
  set PG2REC empty;
  ;
  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = FK0JM210.FK0JM-COPY-STYLE; /* Style number*/
  PG2REC.SY2CLRID = FK0JM210.FK0JM-COPY-COLOR; /* Color id*/
  PG2REC.XDMCD = FK0JM210.FK0JM-COPY-DIM; /* Dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW00.FK0JW-VSYCLR01-COPY-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/
      ;
      FK0J-2113(); /* Look up Development Description*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2112"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT COLOR (DPRODG.VSYCLR01)";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ------------------ END FK0J-2112 ------------------------------------*/
end // end FK0J-2112

// Select style (DPRODG.VSYDVL01)
Function FK0J-2113()
   /* ------------------------------------------------------------*/
   /* Select row from development VSYDVL01 table using copy from key*/
   /* ------------------------------------------------------------*/
  ;
  PG4REC.PG4STNBR = FK0JM210.FK0JM-COPY-STYLE; /* Style number*/
  ;
  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW00.FK0JW-VSYDVL01-COPY-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FKWREC.XXX-MOD-ID = "2113"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      FK0JW00.FK0JW-FORMAT-MAP-SW = "N";
      set FK0JM210.FK0JM-COPY-STYLE cursor, bold;
      set FK0JM210.FK0JM-COPY-COLOR bold;
      set FK0JM210.FK0JM-COPY-DIM bold;
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2113"; /* Module identification*/
  ;
  FK0JW00.FK0JW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT STYLE (DPRODG.VSYDVL01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2113 -----------------------------------*/
end // end FK0J-2113

// Select usage (DPRODG.VABUSE01)
Function FK0J-2120()
   /* ------------------------------------------------------------*/
   /* Declare cursor for usage VABUSE01 using copy from key*/
   /* ------------------------------------------------------------*/
  ;
  set VABUSE01 empty;
  ;
  VABUSE01.SY1STNBR = FK0JM210.FK0JM-COPY-STYLE; /* Style number*/
  VABUSE01.SY2CLRID = FK0JM210.FK0JM-COPY-COLOR; /* Color id*/
  VABUSE01.XDMCD = FK0JM210.FK0JM-COPY-DIM; /* Dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("S1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT USAGE (DPRODG.VABUSE01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.SY1STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0K-2120 ----------------------------------*/
end // end FK0J-2120

// Read next DCMPNT.VABUSE01
Function FK0J-2121()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the VABUSE01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("N1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW00.FK0JW-VABUSE01-1ST-REC-SW = "N";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      if (FK0JW00.FK0JW-VABUSE01-1ST-REC-SW == "Y") /* First record read?*/
        ;
        FKWREC.XXX-MOD-ID = "2121";
        converseLib.validationFailed(18);
        set FK0JM210.FK0JM-COPY-STYLE bold, cursor;
        set FK0JM210.FK0JM-COPY-COLOR bold;
        set FK0JM210.FK0JM-COPY-DIM bold;
        ;
      end
      ;
      FK0JW00.FK0JW-VABUSE01-EOF-SW = "Y";
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2121"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ NEXT DCMPNT.VABUSE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2121 ------------------------------------*/
end // end FK0J-2121

// Close DCMPNT.VABUSE01
Function FK0J-2125()
   /* ------------------------------------------------------------*/
   /* Close the VABUSE01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("C1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2125"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VABUSE01        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2125 --------------------------------------*/
end // end FK0J-2125

// Format Header Information
Function FK0J-2130()
   /* ------------------------------------------------------------*/
   /* Format the Header information to be displayed on the map.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW01.SY1STNBR = FK0JM210.SY1STNBR; /* Style number*/
  FK0JW01.SY2CLRID = FK0JM210.SY2CLRID; /* Color id*/
  FK0JW01.XDMCD = FK0JM210.XDMCD; /* Dimension code*/
  ;
  if (FK0JW00.FK0JW-VSYCLR01-FOUND-SW == "Y")
    ;
    FK0JW01.SY1SSTNM = PG2REC.SY1SSTNM; /* Style name*/
    FK0JW01.SY4SZSCL = PG2REC.SY4SZSCL; /* Prod size scale*/
    ;
  else
    ;
    if (FK0JW00.FK0JW-VSYDVL01-FOUND-SW == "Y")
      FK0JW01.SY1SSTNM = PG4REC.SY1SSTNM; /* Style name*/
    end
    ;
  end
  ;
  FK0JW01.FK-NBR-AIRBAG-SHOE = VABUSE01.FK-NBR-AIRBAG-SHOE;
  FK0JW01.FK-DIF-AIRBAG-SHOE = VABUSE01.FK-DIF-AIRBAG-SHOE;
  FK0JW01.FK0JW-COPY-STYLE = FK0JM210.FK0JM-COPY-STYLE;
  FK0JW01.FK0JW-COPY-COLOR = FK0JM210.FK0JM-COPY-COLOR;
  FK0JW01.FK0JW-COPY-DIM = FK0JM210.FK0JM-COPY-DIM;
  ;
   /* ----------------- END FK0J-2130 --------------------------------------*/
end // end FK0J-2130

// Open DCMPNT.VSYSCL01
Function FK0J-2140()
   /* ------------------------------------------------------------*/
   /* Declare cursor on VSYSCL01 table using copy from key*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty;
  ;
  VSYSCL01.SY1STNBR = FK0JM210.FK0JM-COPY-STYLE; /* Style number*/
  VSYSCL01.SY2CLRID = FK0JM210.FK0JM-COPY-COLOR; /* Color id*/
  VSYSCL01.XDMCD = FK0JM210.FK0JM-COPY-DIM; /* Dimension code*/
  VSYSCL01.FK-AIRBAG-ID = "*"; /* Air bag id*/
  ;
  try
    call "IO6390" ("S1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DCMPNT.VSYSCL01   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2140 ----------------------------------*/
end // end FK0J-2140

// Read next DCMPNT.VSYSCL01
Function FK0J-2141()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the VSYSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6390" ("N1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of file*/
      ;
      FK0JW00.FK0JW-VSYSCL01-EOF-SW = "Y"; /* End of file*/
      ;
      if (FK0JW00.FK0JW-VSYSCL01-1ST-REC-SW == "Y") /* First record*/
        ;
        converseLib.validationFailed(18);
        FKWREC.XXX-MOD-ID = "2141";
        set FK0JM210.FK0JM-COPY-STYLE bold, cursor;
        set FK0JM210.FK0JM-COPY-COLOR bold;
        set FK0JM210.FK0JM-COPY-DIM bold;
        ;
      end
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2141"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ NEXT DCMPNT.VSYSCL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2141 ------------------------------------*/
end // end FK0J-2141

// Close DCMPNT.VSYSCL01
Function FK0J-2145()
   /* ------------------------------------------------------------*/
   /* Close the VSYSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty;
  ;
  try
    call "IO6390" ("C1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2145"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VSYSCL01 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END fk0j-2145 -------------------------------------*/
end // end FK0J-2145

// Open DCMPNT.VABAG001
Function FK0J-2150()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-AIRBAG-ID = VSYSCL01.FK-AIRBAG-ID; /* Air bag id*/
  ;
  try
    call "IO6360" ("S1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DCMPNT.VABAG001    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* -----------------------END FK0J-2150 ---------------------------------*/
end // end FK0J-2150

// Read DCMPNT.VABAG001
Function FK0J-2151()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6360" ("N1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW01.FK-AIRBAG-ID[FK0JW-IDX] = VABAG001.FK-AIRBAG-ID;
      FK0JW01.FK-AIRBAG-DESC[FK0JW-IDX] = VABAG001.FK-AIRBAG-DESC;
      FK0JW01.FK-AIRBAG-UNT-PRC[FK0JW-IDX] = VABAG001.FK-AIRBAG-UNT-PRC;
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2151"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ DCMPNT.VABAG001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2151 -------------------------------------*/
end // end FK0J-2151

// Close DCMPNT.VABAG001
Function FK0J-2155()
   /* ------------------------------------------------------------*/
   /* Close the Material table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6360" ("C1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2155"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VABAG001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2155 --------------------------------------*/
end // end FK0J-2155

// Format Detail Line
Function FK0J-2160()
   /* ------------------------------------------------------------*/
   /* Format the Detail record to be displayed to the map.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW01.FK-AIRBAG-ID[FK0JW-IDX] = VSYSCL01.FK-AIRBAG-ID; /* airbag*/
  FK0JW01.FK-AIRBAG-DESC[FK0JW-IDX] = VABAG001.FK-AIRBAG-DESC; /* Air bag desc*/
  FK0JW01.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] = VSYSCL01.FK-AIRBAG-SZ-SCLCD; /* Airbag sIze scale*/
  FK0JW01.FK-AIRBAG-UNT-PRC[FK0JW-IDX] = VABAG001.FK-AIRBAG-UNT-PRC; /* Air bag unit price*/
  FK0JW01.FK-COMNT[FK0JW-IDX] = VABAG001.FK-COMNT; /* Comment*/
  ;
   /* ----------------- END FK0J-2160 --------------------------------------*/
end // end FK0J-2160

// VSYSCL01 group recs copied in
Function FK0J-2161()
   /* ------------------------------------------------------------*/
   /* Format the VSYSCL01 records into working storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-IDX == 1)
    ;
    FK0JW01.FK0JW-VSYSCL01-GROUP-1[FK0JW-AB-IDX] = VSYSCL01.VSYSCL01-GROUP;
  else
    ;
    if (FK0JW00.FK0JW-IDX == 2)
      ;
      FK0JW01.FK0JW-VSYSCL01-GROUP-2[FK0JW-AB-IDX] = VSYSCL01.VSYSCL01-GROUP;
      ;
    else
      ;
      if (FK0JW00.FK0JW-IDX == 3)
        ;
        FK0JW01.FK0JW-VSYSCL01-GROUP-3[FK0JW-AB-IDX] = VSYSCL01.VSYSCL01-GROUP;
        ;
      else
        ;
        if (FK0JW00.FK0JW-IDX == 4)
          ;
          FK0JW01.FK0JW-VSYSCL01-GROUP-4[FK0JW-AB-IDX] = VSYSCL01.VSYSCL01-GROUP;
          ;
        end
        ;
      end
      ;
    end
    ;
  end
  ;
   /* ----------------- END FK0J-2161 --------------------------------------*/
end // end FK0J-2161

// Format and converse map
Function FK0J-2200()
   /* -------------------------------------------------------------*/
   /* If an error was found, save the error message number*/
   /* -------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
   /* -------------------------------------------------------------*/
   /* If obtain data failed or no error, format data to display*/
   /* -------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-FORMAT-MAP-SW == "Y" /* Map must be formatted*/
   || converseVar.validationMsgNum == 0) /* or no error found*/
    ;
    FK0J-2210(); /* Format the data on the map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JM210.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0JM210.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0JM210.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a key field was entered, and no data was found, allow*/
   /* fields to be open for input;  otherwise protect the fields.*/
   /* If no data was found using the copy function, protect the*/
   /* fields.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-VABUSE01-FOUND-SW == "N")
    if (FK0JW00.FK0JW-COPY-DATA-SW == "N")
      ;
        /* Next Sentence*/
      ;
    else
      ;
      if (FK0JM210.SY1STNBR != " " /* Style not entered*/
       && FK0JM210.SY2CLRID != " " /* Color not entered*/
       && FK0JM210.XDMCD != " ")   /* Dimension not entered*/
        ;
        if (converseVar.validationMsgNum == 0)
          ;
          set FK0JM210.SY1STNBR skip; /* Protect style*/
          set FK0JM210.SY2CLRID skip; /* Protect color*/
          set FK0JM210.XDMCD skip; /* Protect dimension*/
          set FK0JM210.FK-NBR-AIRBAG-SHOE skip;
          set FK0JM210.FK0JM-COPY-STYLE cursor;
          ;
        end
        ;
        FK0JW00.FK0JW-IDX = 1; /* Reset index*/
        ;
        while (FK0JW00.FK0JW-IDX <= 4) /* Protect fields*/
          ;
          set FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] skip;
          set FK0JM210.FK-AIRBAG-DESC[FK0JW-IDX] skip;
          set FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] skip;
          set FK0JM210.FK-AIRBAG-UNT-PRC[FK0JW-IDX] skip;
          set FK0JM210.FK-COMNT[FK0JW-IDX] skip;
          ;
          FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment index*/
          ;
        end
        ;
      end
      ;
    end
    ;
  else
    ;
    if (FK0JW00.FK0JW-COPY-DATA-SW == "Y") /* Copying data*/
      ;
      set FK0JM210.SY1STNBR normal;
      set FK0JM210.SY2CLRID normal;
      set FK0JM210.XDMCD normal;
      set FK0JM210.FK-NBR-AIRBAG-SHOE skip;
      ;
      if (converseVar.validationMsgNum == 0)
        ;
        FK0JW00.FK0JW-IDX = 1; /* Reset index*/
        ;
        while (FK0JW00.FK0JW-IDX <= 4) /* Protect fields*/
          ;
          set FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] skip;
          set FK0JM210.FK-AIRBAG-DESC[FK0JW-IDX] skip;
          set FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] skip;
          set FK0JM210.FK-AIRBAG-UNT-PRC[FK0JW-IDX] skip;
          set FK0JM210.FK-COMNT[FK0JW-IDX] skip;
          ;
          FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment index*/
          ;
        end
        ;
      end
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0JM210.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0JM210.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
    ;
    set FK0JM210 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse FK0JM210 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0JM210.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0JM210.CAITEM; /* Application data*/
  ;
   /* ----------------- END FK0J-2200 ----------------------------------*/
end // end FK0J-2200

// Format the display data
Function FK0J-2210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0JM210 initial; /* M210 input/output area*/
  ;
  FK0JW00.FK0JW-FORMAT-MAP-SW = "N"; /* Format the map switch*/
  ;
   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JW01.SY1STNBR <= " ") /* Style not present*/
    set FK0JM210.SY1STNBR cursor; /* Position cursor*/
  end
  ;
  FK0JM210.SY1STNBR = FK0JW01.SY1STNBR; /* Style number*/
  FK0JM210.SY2CLRID = FK0JW01.SY2CLRID; /* Color id*/
  FK0JM210.XDMCD = FK0JW01.XDMCD; /* Dimension code*/
  FK0JM210.SY1SSTNM = FK0JW01.SY1SSTNM; /* Style name*/
  FK0JM210.SY4SZSCL = FK0JW01.SY4SZSCL; /* Production size scale*/
  FK0JM210.FK-NBR-AIRBAG-SHOE = FK0JW01.FK-NBR-AIRBAG-SHOE;
  FK0JM210.FK-DIF-AIRBAG-SHOE = FK0JW01.FK-DIF-AIRBAG-SHOE;
  ;
  if (FK0JW00.FK0JW-COPY-DATA-SW == "Y")
    ;
    FK0JM210.FK0JM-COPY-STYLE = FK0JW01.FK0JW-COPY-STYLE;
    FK0JM210.FK0JM-COPY-COLOR = FK0JW01.FK0JW-COPY-COLOR;
    FK0JM210.FK0JM-COPY-DIM = FK0JW01.FK0JW-COPY-DIM;
    ;
  end
  ;
  FK0JW00.FK0JW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0JW00.FK0JW-IDX <= 4) /* Until screen is full*/
    ;
    FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] = FK0JW01.FK-AIRBAG-ID[FK0JW-IDX];
    FK0JM210.FK-AIRBAG-DESC[FK0JW-IDX] = FK0JW01.FK-AIRBAG-DESC[FK0JW-IDX];
    FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] = FK0JW01.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX];
    FK0JM210.FK-AIRBAG-UNT-PRC[FK0JW-IDX] = FK0JW01.FK-AIRBAG-UNT-PRC[FK0JW-IDX];
    FK0JM210.FK-COMNT[FK0JW-IDX] = FK0JW01.FK-COMNT[FK0JW-IDX];
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
   /* ----------------- END FK0J-2210 ------------------------------------*/
end // end FK0J-2210

// Check attention identifier
Function FK0J-2300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize FKWREC*/
    FKWREC.SY1STNBR[1] = FK0JW01.SY1STNBR; /* Style*/
    FKWREC.SY2CLRID[1] = FK0JW01.SY2CLRID; /* Color*/
    FKWREC.XDMCD[1] = FK0JW01.XDMCD; /* Dimension*/
    ;
    COMMAREA.CATOAP = "FK0J"; /* to applicaiton*/
    COMMAREA.CAITEM = "A   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0JM210.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JM210.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize FKWREC*/
      ;
      FKWREC.SY1STNBR[1] = FK0JM210.SY1STNBR; /* Style*/
      FKWREC.SY2CLRID[1] = FK0JM210.SY2CLRID; /* Color*/
      FKWREC.XDMCD[1] = FK0JM210.XDMCD; /* Dimension*/
      ;
      COMMAREA.CATOAP = FK0JM210.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0JM210.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0JM210.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* FK0I (BAG MAINTENANCE)*/
   || converseVar.eventKey is pf14 /* FK0K (STYLE/COLOR/DIM BAG MAINT)*/
   || converseVar.eventKey is pf15 /* FK0L (SIZE PCT MAINT)*/
   || converseVar.eventKey is pf17) /* FK0Z (SIZE SCALE PER BAG)*/
    ;
    set FKWREC empty; /* Initialize FKWREC*/
    FKWREC.SY1STNBR[1] = FK0JW01.SY1STNBR; /* Style*/
    FKWREC.SY2CLRID[1] = FK0JW01.SY2CLRID; /* Color*/
    FKWREC.XDMCD[1] = FK0JW01.XDMCD; /* Dimension*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0JM210"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = FK0JM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0JM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FK0I"; /* TO application*/
      COMMAREA.CAITEM = FK0JM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0K"; /* TO application*/
      COMMAREA.CAITEM = FK0JM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0L"; /* TO application*/
      COMMAREA.CAITEM = FK0JM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK0Z"; /* TO application*/
      COMMAREA.CAITEM = FK0JM210.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ----------------- END FK0J-2300 --------------------------------------*/
end // end FK0J-2300

// Reset highlighted fields
Function FK0J-2400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0JM210.SY1STNBR initialAttributes; /* Style number*/
  set FK0JM210.SY2CLRID initialAttributes; /* Color id*/
  set FK0JM210.XDMCD initialAttributes; /* Dimension code*/
  set FK0JM210.FK0JM-COPY-STYLE initialAttributes; /* Copy style number*/
  set FK0JM210.FK0JM-COPY-COLOR initialAttributes; /* Copy color number*/
  set FK0JM210.FK0JM-COPY-DIM initialAttributes; /* Dimension code*/
  ;
  FK0JW00.FK0JW-IDX = 1; /* Init line index*/
  ;
  while (FK0JW00.FK0JW-IDX <= 4 /* Until end of lines*/
   && FK0JM210.SY1STNBR > " ") /* or end of display*/
    ;
    if (FK0JW00.FK0JW-COPY-DATA-SW == "Y") /* Copy data requested*/
      ;
      set FK0JM210.FK-NBR-AIRBAG-SHOE protect;
      set FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] protect;
      set FK0JM210.FK-AIRBAG-DESC[FK0JW-IDX] protect;
      set FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] protect;
      set FK0JM210.FK-AIRBAG-UNT-PRC[FK0JW-IDX] protect;
      set FK0JM210.FK-COMNT[FK0JW-IDX] protect;
      ;
    else
      ;
      set FK0JM210.FK-NBR-AIRBAG-SHOE initialAttributes;
      set FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] initialAttributes;
      set FK0JM210.FK-AIRBAG-DESC[FK0JW-IDX] initialAttributes;
      set FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] initialAttributes;
      set FK0JM210.FK-AIRBAG-UNT-PRC[FK0JW-IDX] initialAttributes;
      set FK0JM210.FK-COMNT[FK0JW-IDX] initialAttributes;
      ;
    end
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
  set FK0JM210.CATOAP initialAttributes; /* TO application*/
  set FK0JM210.CAITEM initialAttributes; /* Application data*/
  ;
   /* ----------------- END FK0J-2400 -------------------------------------*/
end // end FK0J-2400

// Verify data that was entered
Function FK0J-2500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JM210.CAITEM > " ") /* Application data was entered*/
    if (converseVar.eventKey is pf12 /* FK0I selected*/
     || converseVar.eventKey is pf14 /* FK0K selected*/
     || converseVar.eventKey is pf15 /* FK0L selected*/
     || converseVar.eventKey is pf17) /* FK0Z selected*/
         /* next sentence*/
    else
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      set FK0JM210.CAITEM cursor, bold; /* Highlight*/
      converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    end
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Verify the copy data if entered.*/
   /* -----------------------------------------------------------------*/
  ;
  if (FK0JM210.FK0JM-COPY-STYLE != " " /* Copy key entered*/
   || FK0JM210.FK0JM-COPY-COLOR != " " 
   || FK0JM210.FK0JM-COPY-DIM != " ") 
    ;
    FK0J-2510(); /* Edit copy key data*/
    ;
    FK0J-2520(); /* Edit key data*/
    ;
    if (FK0JM210.FK-AIRBAG-ID[1] > " " /* If copy data displayed*/
     || FK0JM210.FK-AIRBAG-ID[2] > " " /* If copy data displayed*/
     || FK0JM210.FK-AIRBAG-ID[3] > " " /* If copy data displayed*/
     || FK0JM210.FK-AIRBAG-ID[4] > " ") /* If copy data displayed*/
      ;
      FK0J-2530(); /* Edit non-key data*/
    end
    ;
  else
    ;
    FK0J-2520(); /* Edit key data*/
    ;
    FK0J-2530(); /* Edit non-key data*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify that no record exists on the DCMPNT.VABUSE01 table.*/
   /* ------------------------------------------------------------*/
  ;
  FK0J-2540(); /* Declare cursor*/
                                        /* (DCMPNT.VABUSE01)*/
  FK0J-2541(); /* Read next row*/
  ;
  FK0J-2545(); /* Close cursor DCMPNT.VABUSE01*/
  ;
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
  ;
   /* ----------------- END FK0J-2500 --------------------------------*/
end // end FK0J-2500

// Verify copy key fields
Function FK0J-2510()
   /* ---------------------------------------------------------------*/
   /* Verify the 'copy from' data:*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0JM210.FK0JM-COPY-STYLE == " "
   && FK0JM210.FK0JM-COPY-COLOR == " "
   && FK0JM210.FK0JM-COPY-DIM == " ")
    ;
    return;
    ;
  end
  ;
  if (FK0JM210.FK0JM-COPY-STYLE == " ")
    ;
    set FK0JM210.FK0JM-COPY-STYLE cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    converseLib.validationFailed(43); /* Material color missing or invalid*/
    ;
    return;
    ;
  end
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the 'copy from' data is a valid style.*/
   /* ---------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-VSYCLR01-FOUND-SW = "N";
  ;
  FK0J-2511(); /* Look up Production Style color*/
  ;
  if (FK0JW00.FK0JW-VSYCLR01-FOUND-SW == "Y")
    ;
     /* next sentence*/
    ;
  else
    ;
    FK0J-2512(); /* Loop up Development Style color*/
    ;
  end
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    exit stack;
  end
  ;
   /* ------------------ END FK0J-2510 ------------------------------------*/
end // end FK0J-2510

// Select color (DPRODG.VSYCLR01)
Function FK0J-2511()
   /* ------------------------------------------------------------*/
   /* Declare cursor for VSYCLR01 table using copy from key*/
   /* ------------------------------------------------------------*/
  ;
  set PG2REC empty;
  ;
  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = FK0JM210.FK0JM-COPY-STYLE; /* Style number*/
  PG2REC.SY2CLRID = FK0JM210.FK0JM-COPY-COLOR; /* Color id*/
  PG2REC.XDMCD = FK0JM210.FK0JM-COPY-DIM; /* Dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW00.FK0JW-VSYCLR01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2511"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT COLOR (DPRODG.VSYCLR01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2511 -------------------------------------*/
end // end FK0J-2511

// Select style (DPRODG.VSYDVL01)
Function FK0J-2512()
   /* ------------------------------------------------------------*/
   /* Read VSYCLR01 row*/
   /* ------------------------------------------------------------*/
  ;
  PG4REC.PG4STNBR = FK0JM210.FK0JM-COPY-STYLE; /* Style number*/
  ;
  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (FK0JM210.FK0JM-COPY-COLOR > "   ") /* Copy color entered*/
        ;
        FKWREC.XXX-MOD-ID = "2512"; /* Module*/
        converseLib.validationFailed(44); /* Invalid color*/
        FK0JW00.FK0JW-FORMAT-MAP-SW = "N";
        set FK0JM210.FK0JM-COPY-COLOR cursor, bold;
      else
        ;
        if (FK0JM210.FK0JM-COPY-DIM > "   ") /* Copy dim entered*/
          ;
          FKWREC.XXX-MOD-ID = "2512"; /* Module*/
          converseLib.validationFailed(45); /* Invalid dim*/
          FK0JW00.FK0JW-FORMAT-MAP-SW = "N";
          set FK0JM210.FK0JM-COPY-DIM cursor, bold;
        else
          ;
          FK0JW00.FK0JW-VSYDVL01-FOUND-SW = "Y";
        end
      end
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      ;
      FKWREC.XXX-MOD-ID = "2512"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      FK0JW00.FK0JW-FORMAT-MAP-SW = "N";
      set FK0JM210.FK0JM-COPY-STYLE cursor, bold;
      set FK0JM210.FK0JM-COPY-COLOR bold;
      set FK0JM210.FK0JM-COPY-DIM bold;
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2512"; /* Module identification*/
  ;
  FK0JW00.FK0JW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT STYLE (DPRODG.VSYDVL01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2512 ------------------------------------*/
end // end FK0J-2512

// Verify key fields
Function FK0J-2520()
   /* ---------------------------------------------------------------*/
   /* Verify the Style data.*/
   /* ---------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-VSYCLR01-FOUND-SW = "N"; /* Reset switch*/
  FK0JW00.FK0JW-VSYDVL01-FOUND-SW = "N"; /* Reset switch*/
  ;
  if (FK0JM210.SY1STNBR <= " ") /* If style is missing*/
    ;
    set FK0JM210.SY1STNBR cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
    converseLib.validationFailed(43); /* Style missing or invalid*/
    ;
  else
    ;
    FK0J-2521(); /* Look up Prod style color*/
    ;
    if (FK0JW00.FK0JW-VSYCLR01-FOUND-SW == "Y") /* Style color found*/
      ;
       /* next sentence*/
      ;
    else
      ;
      FK0J-2522(); /* Look up Devl style*/
      ;
    end
    ;
  end
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    exit stack;
  end
  ;
   /* ------------------ END FK0J-2520 ----------------------------------*/
end // end FK0J-2520

// Select color (DPRODG.VSYCLR01)
Function FK0J-2521()
   /* ------------------------------------------------------------*/
   /* Read row from the VSYCLR01 table*/
   /* ------------------------------------------------------------*/
  ;
  set PG2REC empty;
  ;
  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = FK0JM210.SY1STNBR; /* Style number*/
  PG2REC.SY2CLRID = FK0JM210.SY2CLRID; /* Color id*/
  PG2REC.XDMCD = FK0JM210.XDMCD; /* Dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW00.FK0JW-VSYCLR01-FOUND-SW = "Y";
      ;
      FK0JM210.SY4SZSCL = PG2REC.SY4SZSCL;
      FK0JM210.SY1SSTNM = PG2REC.SY1SSTNM;
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT COLOR (DPRODG.VSCLR01)   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2521 -------------------------------------*/
end // end FK0J-2521

// Select style (DPRODG.VSYDVL01)
Function FK0J-2522()
   /* ------------------------------------------------------------*/
   /* Select the requested row from style development table VSYDVL01.*/
   /* ------------------------------------------------------------*/
  ;
  PG4REC.PG4STNBR = FK0JM210.SY1STNBR; /* Style number*/
  ;
  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (FK0JM210.SY2CLRID > "   ") /* If color entered*/
        ;
        FKWREC.XXX-MOD-ID = "2522"; /* Module*/
        converseLib.validationFailed(44); /* Style not found*/
        FK0JW00.FK0JW-FORMAT-MAP-SW = "N";
        set FK0JM210.SY2CLRID cursor, bold;
      else
        ;
        if (FK0JM210.XDMCD > "  ") /* If dim entered*/
          ;
          FKWREC.XXX-MOD-ID = "2522"; /* Module*/
          converseLib.validationFailed(45); /* Dim not found*/
          FK0JW00.FK0JW-FORMAT-MAP-SW = "N";
          set FK0JM210.XDMCD cursor, bold;
        else
          FK0JW00.FK0JW-VSYDVL01-FOUND-SW = "Y";
        end
      end
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      ;
      FKWREC.XXX-MOD-ID = "2522"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      FK0JW00.FK0JW-FORMAT-MAP-SW = "N";
      set FK0JM210.SY1STNBR cursor, bold;
      set FK0JM210.SY2CLRID bold;
      set FK0JM210.XDMCD bold;
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2522"; /* Module identification*/
  ;
  FK0JW00.FK0JW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT STYLE (DPRODG.VSYDVL01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2522 ------------------------------------*/
end // end FK0J-2522

// Verify non-key fields
Function FK0J-2530()
   /* ---------------------------------------------------------------*/
   /* Loop through all the rows of the screen editing those that were*/
   /* entered.*/
   /*  */
   /* ** NOTE ***/
   /* THIS PROCESS WILL BE PERFORMED FOR BOTH ENTERED DATA AND*/
   /* 'COPY FROM' DATA.*/
   /* ---------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-FIRST-SY4SZSCL = "  "; /* Init first sz scl*/
  FK0JW00.FK0JW-IDX = 4; /* Set index at 4*/
  FK0JW00.FK0JW-ROW-ENTERED-SW = "N"; /* Initialize switch*/
  ;
  while (FK0JW00.FK0JW-IDX > 0)
    ;
    if (FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] != " ") /* If air bag was entered*/
      ;
      FK0JW00.FK0JW-ROW-ENTERED-SW = "Y"; /* Row entered*/
      ;
        /* -------------------------------------------------------------*/
        /* Check to see if VABSCL01 and VSYSCL01 records alread exist*/
        /* for the entered key.*/
        /* -------------------------------------------------------------*/
      ;
      FK0J-2531(); /* Count DCMPNT.VABSCL01*/
      ;
      FK0J-2532(); /* Count DCMPNT.VSYSCL01*/
      ;
      if (FK0JM210.XDMCD == " ") /* Dvlpmnt style entered*/
        ;
           /* ------------------------------------------------------------*/
           /* Check to be sure that all bags/bag size scales entered*/
           /* for this style development project have the same product*/
           /* size scale code.*/
           /* ------------------------------------------------------------*/
        ;
        FK0J-2537(); /* Select distinct*/
                                              /* DCMPNT.VABSCL01*/
        ;
      else
        ;
           /* ------------------------------------------------------------*/
           /* Check to see if the production size scale associated with*/
           /* this style/color/dim is equal to the airbag production size*/
           /* scale.*/
           /* ------------------------------------------------------------*/
        ;
        FK0J-2533(); /* Declare cursor*/
                                              /* (DCMPNT.VABSCL01)*/
        FK0J-2534(); /* Read next*/
        ;
        FK0J-2535(); /* Close cursor*/
        ;
      end
      ;
    end
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX - 1; /* Decrement the index*/
    ;
  end
  ;
  FK0J-2536(); /* Check dup rows entered*/
                                               /* and verify bags/shoe*/
  if (FK0JW00.FK0JW-ROW-ENTERED-SW == "N")
    ;
    converseLib.validationFailed(8); /* Required field*/
    FKWREC.XXX-MOD-ID = "2530"; /* Module id*/
    if (FK0JM210.FK0JM-COPY-STYLE == " ") /* Not copying data*/
      set FK0JM210.FK-AIRBAG-ID[1] bold, cursor;
      set FK0JM210.FK-AIRBAG-SZ-SCLCD[1] bold;
    else
      set FK0JM210.FK-AIRBAG-ID[1] bold;
      set FK0JM210.FK-AIRBAG-SZ-SCLCD[1] bold;
    end
    ;
  end
  ;
   /* ------------------ END FK0J-2530 ---------------------------------*/
end // end FK0J-2530

// Count DCMPNT.VABSCL01
Function FK0J-2531()
   /* ------------------------------------------------------------*/
   /* Select a count from the VABSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0JW02 empty; /* Initialize pass record*/
  set VABSCL01 empty; /* Initialize DB2 record*/
  ;
  FK0JW02.FK0JW-IO-PASS = "SC"; /* Select count parameter*/
  FK0JW02.FK0JW-IO-COUNT-1 = 0;
  ;
  VABSCL01.FK-AIRBAG-ID = FK0JM210.FK-AIRBAG-ID[FK0JW-IDX];
  VABSCL01.FK-AIRBAG-SZ-SCLCD = FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX];
  ;
  try
    call "IO6400" (FK0JW02, SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (FK0JW02.FK0JW-IO-COUNT-1 == 0)
        ;
        FKWREC.XXX-MOD-ID = "2531";
        converseLib.validationFailed(88); /* Bag/size scale combination missing*/
        if (FK0JM210.FK0JM-COPY-STYLE == " ") /* Not copying data*/
          set FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] cursor, bold;
          set FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] bold;
        else
          set FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] bold;
          set FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] bold;
        end
        ;
      end
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2531"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "COUNT DCMPNT.VABSCL01             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FK0J-2531

// Count DCMPNT.VSYSCL01
Function FK0J-2532()
   /* ------------------------------------------------------------*/
   /* Select a count from the VSYSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0JW02 empty; /* Initialize pass record*/
  set VSYSCL01 empty; /* Initialize DB2 record*/
  ;
  FK0JW02.FK0JW-IO-PASS = "SC"; /* Select count parameter*/
  FK0JW02.FK0JW-IO-COUNT-1 = 0;
  ;
  VSYSCL01.SY1STNBR = FK0JM210.SY1STNBR;
  VSYSCL01.SY2CLRID = FK0JM210.SY2CLRID;
  VSYSCL01.XDMCD = FK0JM210.XDMCD;
  VSYSCL01.FK-AIRBAG-ID = FK0JM210.FK-AIRBAG-ID[FK0JW-IDX];
  VSYSCL01.FK-AIRBAG-SZ-SCLCD = -1;
  ;
  try
    call "IO6390" (FK0JW02, SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (FK0JW02.FK0JW-IO-COUNT-1 > 0)
        ;
        FKWREC.XXX-MOD-ID = "2532";
        converseLib.validationFailed(89); /* Bag already exists for this style*/
        if (FK0JM210.FK0JM-COPY-STYLE == " ") /* Not copying data*/
          set FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] cursor, bold;
          set FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] bold;
          set FK0JM210.XDMCD bold;
        else
          set FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] bold;
          set FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] bold;
          set FK0JM210.XDMCD bold;
        end
        ;
      end
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2532"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "COUNT DCMPNT.VSYSCL01    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FK0J-2532

// Declare CSR (DCMPNT.VABSCL01)
Function FK0J-2533()
   /* ------------------------------------------------------------*/
   /* Set up cursor for VABSCL01 table*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty;
  ;
  VABSCL01.FK-AIRBAG-ID = FK0JM210.FK-AIRBAG-ID[FK0JW-IDX];
  VABSCL01.FK-AIRBAG-SZ-SCLCD = FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX];
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6400" ("S1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2533"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECLARE CSR (DCMPNT.VABSCL01)   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.FK-AIRBAG-ID; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0K-2533 ----------------------------------*/
end // end FK0J-2533

// Read next DCMPNT.VABUSE01
Function FK0J-2534()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the VABSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6400" ("N1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* End of file code*/
      ;
      if (FK0JM210.SY4SZSCL != VABSCL01.SY4SZSCL)
        ;
        FKWREC.XXX-MOD-ID = "2534";
        converseLib.validationFailed(98); /* Product size scale must equal airbag*/
                                   /* Product size scale*/
        if (FK0JM210.FK0JM-COPY-STYLE == " ") /* If not copying*/
          set FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] bold, cursor;
          set FK0JM210.SY4SZSCL bold, protect;
        else
          set FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] bold, protect;
          set FK0JM210.SY4SZSCL bold, protect;
        end
        ;
        return;
        ;
      end
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2534"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ NEXT DCMPNT.VABUSE01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2534 ------------------------------------*/
end // end FK0J-2534

// Close DCMPNT.VABUSE01
Function FK0J-2535()
   /* ------------------------------------------------------------*/
   /* Close the VABSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6400" ("C1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2125"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VABUSE01        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2535 --------------------------------------*/
end // end FK0J-2535

// Check for duplicate entered
Function FK0J-2536()
   /* ------------------------------------------------------------*/
   /* Check to see if any of the rows entered are the same.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-IDX = 4; /* Reset the index*/
  ;
  while (FK0JW00.FK0JW-IDX > 0) /* Until end of lines*/
    ;
    if (FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] == " ")
      ;
        /* Next sentence*/
      ;
    else
      ;
      FK0JW00.FK0JW-INDEX = FK0JW00.FK0JW-IDX - 1;
      ;
      while (FK0JW00.FK0JW-INDEX > 0)
        ;
        if (FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] == 
        FK0JM210.FK-AIRBAG-ID[FK0JW-INDEX])
          ;
          converseLib.validationFailed(59);
          FKWREC.XXX-MOD-ID = "2536";
          if (FK0JM210.FK0JM-COPY-STYLE == " ") /* Not copying data*/
            set FK0JM210.FK-AIRBAG-ID[FK0JW-INDEX] bold, cursor;
            set FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] bold;
          else
            set FK0JM210.FK-AIRBAG-ID[FK0JW-INDEX] bold;
            set FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] bold;
          end
          ;
        end
        ;
        FK0JW00.FK0JW-INDEX = FK0JW00.FK0JW-INDEX - 1; /* Decrmt idx*/
        ;
      end
      ;
    end
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX - 1; /* Decrement line number*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify that the number of airbags per shoe entered doesn't*/
   /* exceed the number of airbags displayed on the screen.  Also*/
   /* check to see that the number of airbags per shoe is > 0 if*/
   /* airbag numbers are displayed on the screen.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-IDX = 1;
  FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED = 0; /* Initialize counter*/
  ;
  while (FK0JW00.FK0JW-IDX <= 4)
    ;
    if (FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] > " ")
      ;
      FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED = FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED + 1;
      ;
    end
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1;
    ;
  end
  ;
  if (FK0JM210.FK-NBR-AIRBAG-SHOE > FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED)
    ;
    FKWREC.XXX-MOD-ID = "2536"; /* Module identification*/
    converseLib.validationFailed(102); /* Bags per style must be < airbags displayed*/
    if (FK0JM210.FK0JM-COPY-STYLE == " ") /* No copying data*/
      set FK0JM210.FK-NBR-AIRBAG-SHOE bold, cursor;
    else
      set FK0JM210.FK-NBR-AIRBAG-SHOE bold;
    end
    ;
  else
    ;
    if (FK0JM210.FK-NBR-AIRBAG-SHOE <= 0
     && FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED > 0)
      ;
      FKWREC.XXX-MOD-ID = "2536"; /* Module identification*/
      converseLib.validationFailed(103); /* Bags per style must be > 0 if airbags exist*/
      if (FK0JM210.FK0JM-COPY-STYLE == " ") /* Not copying data*/
        set FK0JM210.FK-NBR-AIRBAG-SHOE bold, cursor;
      else
        set FK0JM210.FK-NBR-AIRBAG-SHOE bold;
      end
      ;
    end
    ;
  end
  ;
end // end FK0J-2536

// Sel distinct DCMPNT.VABSCL01)
Function FK0J-2537()
   /* ------------------------------------------------------------*/
   /* Set up cursor for VABSCL01 table*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty;
  ;
  VABSCL01.FK-AIRBAG-ID = FK0JM210.FK-AIRBAG-ID[FK0JW-IDX];
  VABSCL01.FK-AIRBAG-SZ-SCLCD = FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX];
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6400" ("SD", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (FK0JW00.FK0JW-FIRST-SY4SZSCL == "  ") /* If first sz scale*/
        ;
        FK0JW00.FK0JW-FIRST-SY4SZSCL = VABSCL01.SY4SZSCL; /* Save scl*/
        FK0JW00.FK0JW-HOLD-INDEX = FK0JW00.FK0JW-IDX; /* Save idx*/
      else
        ;
        if (VABSCL01.SY4SZSCL != FK0JW00.FK0JW-FIRST-SY4SZSCL)
          ;
          converseLib.validationFailed(108); /* Need same size scale*/
          FKWREC.XXX-MOD-ID = "2537"; /* Module identification*/
          set FK0JM210.FK-AIRBAG-ID[FK0JW-HOLD-INDEX] cursor, bold;
          set FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-HOLD-INDEX] bold;
          set FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] bold;
          set FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] bold;
        end
      end
      ;
      return;
      ;
    else
      if (VAGen_SQLCODE == 100) /* No row found*/
        ;
        return;
        ;
      end
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2537"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SEL DISTINCT DCMPNT.VABSCL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.FK-AIRBAG-ID; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0K-2537 ----------------------------------*/
end // end FK0J-2537

// Open DCMPNT.VABUSE01
Function FK0J-2540()
   /* ------------------------------------------------------------*/
   /* Decare cursor for the usage table VSYSCL01*/
   /* ------------------------------------------------------------*/
  ;
  set VABUSE01 empty;
  ;
  VABUSE01.SY1STNBR = FK0JM210.SY1STNBR; /* Style number*/
  VABUSE01.SY2CLRID = FK0JM210.SY2CLRID; /* Color id*/
  VABUSE01.XDMCD = FK0JM210.XDMCD; /* Dimension*/
  ;
  try
    call "IO6350" ("S1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2540"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DCMPNT.VABUSE01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ------------------ END OF FK0J-2540 ---------------------------------*/
end // end FK0J-2540

// Read DCMPNT.VABUSE01
Function FK0J-2541()
   /* ------------------------------------------------------------*/
   /* Read in usage row from VABUSE01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("N1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FKWREC.XXX-MOD-ID = "2541";
      converseLib.validationFailed(40); /* Record already exists*/
      set FK0JM210.SY1STNBR cursor, bold;
      set FK0JM210.SY2CLRID bold;
      set FK0JM210.XDMCD bold;
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2541"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ DCMPNT.VABUSE01       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2541 -------------------------------------*/
end // end FK0J-2541

// Close DCMPNT.VABUSE01
Function FK0J-2545()
   /* ------------------------------------------------------------*/
   /* Close the Bag Usage table*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("C1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2545"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VABUSE01    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2545 ------------------------------*/
end // end FK0J-2545

// Process valid input request
Function FK0J-2600()
   /* ------------------------------------------------------------*/
   /* Check to see if the copy from key has changed.  If so loop*/
   /* back and retrieve and display the new key information.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JM210.FK0JM-COPY-STYLE != FK0JW01.FK0JW-COPY-STYLE
   || FK0JM210.FK0JM-COPY-COLOR != FK0JW01.FK0JW-COPY-COLOR
   || FK0JM210.FK0JM-COPY-DIM != FK0JW01.FK0JW-COPY-DIM)
    ;
    if (FK0JM210.FK0JM-COPY-STYLE == " ")
      ;
      set FK0JM210 initial;
      ;
      FK0JW00.FK0JW-COPY-DATA-SW = "N";
      FK0JW00.FK0JW-FORMAT-MAP-SW = "Y";
      FK0JW00.FK0JW-REQUEST-DATA-SW = "Y";
      ;
      FK0JM210.SY1STNBR = FK0JW01.SY1STNBR;
      FK0JM210.SY2CLRID = FK0JW01.SY2CLRID;
      FK0JM210.XDMCD = FK0JW01.XDMCD;
      ;
    else
      ;
      FK0JW00.FK0JW-COPY-DATA-SW = "Y";
      FK0JW00.FK0JW-REQUEST-DATA-SW = "Y";
      ;
    end
    ;
    return;
    ;
  else
    ;
    if (FK0JM210.FK0JM-COPY-STYLE == " "
     && FK0JM210.FK0JM-COPY-COLOR == " "
     && FK0JM210.FK0JM-COPY-DIM == " ")
      ;
      FK0JW00.FK0JW-COPY-DATA-SW = "N";
      FK0JW00.FK0JW-COPY-DATA-SW = "N";
      ;
    end
    ;
  end
  ;
   /* --------------------------------------------------------------------*/
   /* Get date and time that will be use to time stamp records if updated*/
   /* --------------------------------------------------------------------*/
  ;
  XX0XS01();
  ;
   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-FORMAT-MAP-SW = "Y"; /* Format the map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Check to see if the style/color/dim changed.  If so, loop back and*/
   /* obtain data to display.  If key has not changed, Get standard curve*/
   /* and build an array in working storage for the style/color/dim and*/
   /* write out usage and bag style records.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-COPY-DATA-SW == "Y") /* Copy data entered*/
    ;
    if (FK0JM210.SY1STNBR != FK0JW01.SY1STNBR /* Style nbr entered*/
     || FK0JM210.SY2CLRID != FK0JW01.SY2CLRID /* Color id entered*/
     || FK0JM210.XDMCD != FK0JW01.XDMCD)      /* Dimension entered*/
      ;
        /* ---------------------------------------------------------------*/
        /* If a search key was entered, request the data to display.*/
        /* ---------------------------------------------------------------*/
      ;
      if (FK0JM210.SY1STNBR > " ") /* Style number entered*/
        FK0JW00.FK0JW-REQUEST-DATA-SW = "Y";
      else
        FK0JW00.FK0JW-REQUEST-DATA-SW = "N";
      end
      ;
      return;
      ;
    else
      ;
      FK0JW00.FK0JW-VFBASE01-EOF-SW = "N";
      FK0JW00.FK0JW-VFBASE01-FOUND-SW = "N";
      FK0JW00.FK0JW-AB-IDX = 1;
      set FK0JW03 empty;
      ;
        /* ---------------------------------------------------------------*/
        /* Get standard curve for style/color/dim entered.*/
        /* ---------------------------------------------------------------*/
      ;
      FK0J-2610(); /* Open cursor DMODEL.VFBASE01*/
      ;
      FK0J-2611(); /* Read next DMODEL.VFBASE01*/
      ;
        /* ---------------------------------------------------------------*/
        /* If standard curve found, build array of percents according to*/
        /* size id.*/
        /* ---------------------------------------------------------------*/
      ;
      while (FK0JW00.FK0JW-VFBASE01-EOF-SW == "N")
        ;
        FK0J-2612(); /* Build working storage array*/
        ;
        FK0J-2611(); /* Read next DMODEL.VFBASE01*/
        ;
      end
      ;
      FK0J-2615(); /* Close csr DCMPNT.VFBASE01*/
      ;
      FK0JW00.FK0JW-IDX = 1;
      ;
      while (FK0JW00.FK0JW-IDX <= 4)
        ;
        if (FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] > " ")
          ;
          FK0J-2620(); /* Set up record for update*/
          ;
          FK0J-2630(); /* Add DCMPNT.VABUSE01 record*/
          ;
          FK0JW00.FK0JW-AB-IDX = 1;
          ;
          while (FK0JW00.FK0JW-AB-IDX <= 40)
            ;
            FK0J-2640(); /* Set up record for update*/
            ;
            FK0J-2650(); /* Add DCMPNT.VSYSCL01 records*/
            ;
            FK0JW00.FK0JW-AB-IDX = FK0JW00.FK0JW-AB-IDX + 1;
            ;
          end
          ;
        end
        ;
        FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1;
        ;
      end
      ;
    end
    ;
  else
    ;
    set FK0JW03 empty; /* Initialize working storage array*/
    FK0JW00.FK0JW-VFBASE01-EOF-SW = "N"; /* initialize switch*/
    ;
     /* ---------------------------------------------------------------*/
     /* Get standard curve for style/color/dim entered.*/
     /* ---------------------------------------------------------------*/
    ;
    FK0J-2610(); /* Declare cursor DMODEL.VFBASE01*/
    ;
    FK0J-2611(); /* Read next row DMODEL.VFBASE01*/
    ;
     /* ---------------------------------------------------------------*/
     /* If standard curve found, build array of percents according to*/
     /* size id.*/
     /* ---------------------------------------------------------------*/
    ;
    while (FK0JW00.FK0JW-VFBASE01-EOF-SW == "N")
      ;
      if (PT4REC.PT2HDTR == "T")
        FK0J-2612(); /* Build working storage array*/
      end
      ;
      FK0J-2611(); /* Read next row DMODEL.VFBASE01*/
      ;
    end
    ;
    FK0J-2615(); /* Close cursor DMODEL.VFBASE01*/
    ;
    FK0J-2660(); /* Count number of airbags entered*/
    ;
    FK0JW00.FK0JW-IDX = 1; /* Reset index*/
    ;
    while (FK0JW00.FK0JW-IDX <= 4) /* Process through the screen*/
      ;
      if (FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] > " ")
        ;
        FK0J-2670(); /* Format usage record for update*/
        ;
        FK0J-2630(); /* Add DCMPNT.VABUSE01 record*/
        ;
           /* ----------------------------------------------------------*/
           /* Get air bag size scale information for airbag*/
           /* ----------------------------------------------------------*/
        ;
        FK0JW-AB-IDX = 1; /* Reset index*/
        FK0JW-VABSCL01-EOF-SW = "N";
        ;
        FK0J-2680(); /* Declare cursor DCMPNT.VABSCL01*/
        ;
        FK0J-2681(); /* Read next DCMPNT.VABSCL01*/
        ;
        while (FK0JW00.FK0JW-VABSCL01-EOF-SW == "N"
         && FK0JW00.FK0JW-AB-IDX <= 40)
          ;
          FK0J-2690(); /* Format record for insert*/
          ;
          FK0J-2650(); /* Insert record DCMPNT.VSYSCL01*/
          ;
          FK0J-2681(); /* Read next DCMPNT.VABSCL01*/
          ;
          FK0JW00.FK0JW-AB-IDX = FK0JW00.FK0JW-AB-IDX + 1;
          ;
        end
        ;
        FK0J-2685(); /* Close cursor DCMPNT.VABSCL01*/
        ;
      end
      ;
      FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If update occurred, clear working storage and clear out map.*/
   /* Send successful update message.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-UPDT-PERFORMED-SW == "Y")
    ;
    set FK0JW01 empty;
    ;
    FK0JW01.SY1STNBR = FK0JM210.SY1STNBR;
    FK0JW01.SY2CLRID = FK0JM210.SY2CLRID;
    FK0JW01.XDMCD = FK0JM210.XDMCD;
    ;
    set FK0JM210 initial;
    ;
    FK0JM210.SY1STNBR = FK0JW01.SY1STNBR;
    FK0JM210.SY2CLRID = FK0JW01.SY2CLRID;
    FK0JM210.XDMCD = FK0JW01.XDMCD;
    ;
    FK0JM210.FK0JM-COPY-STYLE = " ";
    FK0JM210.FK0JM-COPY-COLOR = " ";
    FK0JM210.FK0JM-COPY-DIM = " ";
    ;
    FK0JW00.FK0JW-COPY-DATA-SW = "N"; /* Copy data switch*/
    FK0JW00.FK0JW-FORMAT-MAP-SW = "Y"; /* Format map*/
    FK0JW00.FK0JW-REQUEST-DATA-SW = "N"; /* REQUEST DATA*/
    FKWREC.XXX-MOD-ID = "2600"; /* Module id*/
    FKWREC.XXXMSGNO = 1; /* Update completed*/
    ;
  end
  ;
   /* ----------------- END FK0J-2600 ------------------------------*/
end // end FK0J-2600

// Open DMODEL.VFBASE01
Function FK0J-2610()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set PT4REC empty;
  ;
  PT4REC.XGPCD = "02"; /* Group code*/
  PT4REC.SY1STNBR = FK0JM210.SY1STNBR; /* Style number*/
  PT4REC.SY2CLRID = FK0JM210.SY2CLRID; /* Color id*/
  PT4REC.XDMCD = FK0JM210.XDMCD; /* Dimension code*/
  PT4REC.XSDCD = "000"; /* Spec code*/
  PT4REC.XPGCD = "00"; /* Package code*/
  PT4REC.XUMCD = PG2REC.XUMCD; /* Package code*/
  PT4REC.XQACD = "01"; /* Quality code*/
  PT4REC.XWHCD = "**"; /* Warehouse code*/
  ;
  try
    call "IO3100" ("S1", SQLCA, PT4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DMODEL.VFBASE01   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DMODEL  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFBASE01"; /* Table view name*/
  TA1REC.TA1TBLKE = PT4REC.PT4GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2610 ----------------------------------*/
end // end FK0J-2610

// Read next DMODEL.VFBASE01
Function FK0J-2611()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the PT4REC table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3100" ("N1", SQLCA, PT4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW00.FK0JW-VFBASE01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of file*/
      ;
      FK0JW00.FK0JW-VFBASE01-EOF-SW = "Y"; /* End of file*/
      ;
      return;
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2611"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ NEXT DMODEL.VFBASE01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DMODEL  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFBASE01"; /* Table view name*/
  TA1REC.TA1TBLKE = PT4REC.PT4GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2611 ------------------------------------*/
end // end FK0J-2611

// Build array in working storage
Function FK0J-2612()
   /* ---------------------------------------------------------------------*/
   /* Save DMODEL.VFBASE01 in working storage array.*/
   /* ---------------------------------------------------------------------*/
  ;
  if (PT4REC.PT2HDTR == "T")
    ;
    FK0JW00.FK0JW-SZ-IDX = 1; /* Initialize index*/
    ;
    while (FK0JW00.FK0JW-SZ-IDX <= 10
     && FK0JW00.FK0JW-AB-IDX <= 40)
      ;
        /* ---------------------------------------------------------------*/
        /* Move size id to the index pointer of array and move size pct*/
        /* into working storage array*/
        /* ---------------------------------------------------------------*/
      ;
      if (PT4REC.SY5SZID[FK0JW-SZ-IDX] > 0)
        ;
        FK0JW00.FK0JW-AB-IDX = PT4REC.SY5SZID[FK0JW-SZ-IDX];
        FK0JW03.FB4SZPCT[FK0JW-AB-IDX] = PT4REC.PT2PCT1[FK0JW-SZ-IDX];
        ;
      end
      ;
      FK0JW00.FK0JW-SZ-IDX = FK0JW00.FK0JW-SZ-IDX + 1;
      ;
    end
    ;
  end
  ;
   /* ------------------ END FK0J-2612 -------------------------------------*/
end // end FK0J-2612

// Close DMODEL.VFBASE01
Function FK0J-2615()
   /* ------------------------------------------------------------*/
   /* Close the PT4REC table.*/
   /* ------------------------------------------------------------*/
  ;
  set PT4REC empty;
  ;
  try
    call "IO3100" ("C1", SQLCA, PT4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2615"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DMODEL.VFBASE01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DMODEL  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFBASE01"; /* Table view name*/
  TA1REC.TA1TBLKE = PT4REC.PT4GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2615 ---------------------------------*/
end // end FK0J-2615

// Set up record for update
Function FK0J-2620()
   /* ---------------------------------------------------------------------*/
   /* Set up usage record for to be added to table.*/
   /* ---------------------------------------------------------------------*/
  ;
  set VABUSE01 empty; /* Initialize record*/
  ;
  VABUSE01.VABUSE01-GROUP = FK0JW01.FK0JW-VABUSE01-GROUP[FK0JW-IDX];
  ;
  VABUSE01.SY1STNBR = FK0JM210.SY1STNBR;
  VABUSE01.SY2CLRID = FK0JM210.SY2CLRID;
  VABUSE01.XDMCD = FK0JM210.XDMCD;
  VABUSE01.ZZZSDT = XX0XW01.XX0XWDAT; /* Initial date*/
  VABUSE01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VABUSE01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VABUSE01.ZZZCHGCT = 0; /* Change count*/
  ;
   /* ------------------ END FK0J-2620 -------------------------------------*/
end // end FK0J-2620

// Insert DCMPNT.VABUSE01
Function FK0J-2630()
   /* ------------------------------------------------------------*/
   /* Add a record to the air bag usage table VABUSE01.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("A ", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW00.FK0JW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback changes*/
  ;
  FKWREC.XXX-MOD-ID = "2630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "INSERT DCMPNT.VABUSE01               ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ------------------ END FK0J-2630 ----------------------------------*/
end // end FK0J-2630

// Set up VSYSCL01 record for add
Function FK0J-2640()
   /* ---------------------------------------------------------------------*/
   /* Set up the air bag/style table for an add*/
   /* ---------------------------------------------------------------------*/
  ;
  set VSYSCL01 empty; /* Initialize record*/
  ;
  if (FK0JW00.FK0JW-IDX == 1)
    ;
    VSYSCL01.VSYSCL01-GROUP = FK0JW01.FK0JW-VSYSCL01-GROUP-1[FK0JW-AB-IDX];
    ;
  end
  ;
  if (FK0JW00.FK0JW-IDX == 2)
    ;
    VSYSCL01.VSYSCL01-GROUP = FK0JW01.FK0JW-VSYSCL01-GROUP-2[FK0JW-AB-IDX];
    ;
  end
  ;
  if (FK0JW00.FK0JW-IDX == 3)
    ;
    VSYSCL01.VSYSCL01-GROUP = FK0JW01.FK0JW-VSYSCL01-GROUP-3[FK0JW-AB-IDX];
    ;
  end
  ;
  if (FK0JW00.FK0JW-IDX == 4)
    ;
    VSYSCL01.VSYSCL01-GROUP = FK0JW01.FK0JW-VSYSCL01-GROUP-4[FK0JW-AB-IDX];
    ;
  end
  ;
  VSYSCL01.SY1STNBR = FK0JM210.SY1STNBR;
  VSYSCL01.SY2CLRID = FK0JM210.SY2CLRID;
  VSYSCL01.XDMCD = FK0JM210.XDMCD;
  ;
  if (FK0JW00.FK0JW-VFBASE01-FOUND-SW == "Y")
    VSYSCL01.FB4SZPCT = FK0JW03.FB4SZPCT[FK0JW-AB-IDX]; /* size pct*/
  end
  ;
  VSYSCL01.ZZZSDT = XX0XW01.XX0XWDAT; /* Initial date*/
  VSYSCL01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VSYSCL01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VSYSCL01.ZZZCHGCT = 0; /* Change count*/
  ;
   /* ------------------ END FK0J-2640 ------------------------------------*/
end // end FK0J-2640

// Insert DCMPNT.VSYSCL01
Function FK0J-2650()
   /* ------------------------------------------------------------*/
   /* Add a record to the air bag/style table VSYSCL01.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6390" ("A ", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW00.FK0JW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback changes*/
  ;
  FKWREC.XXX-MOD-ID = "2650"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "INSERT DCMPNT.VSYSCL01               ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ------------------ END FK0J-2650 ----------------------------------*/
end // end FK0J-2650

// Count nbr of airbags entered
Function FK0J-2660()
   /* ------------------------------------------------------------------*/
   /* Process throught the screen counting the number of airbags entered.*/
   /* This is done to determine if the number of air bags/shoe entered is*/
   /* greater that the number of air bags displayed.*/
   /* ------------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED = 0; /* Reset counter*/
  FK0JW00.FK0JW-IDX = 1; /* Reset index*/
  ;
  while (FK0JW00.FK0JW-IDX <= 4)
    ;
    if (FK0JM210.FK-AIRBAG-ID[FK0JW-IDX] > " ") /* Air bag id entered*/
      ;
      FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED = FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED + 1;
      ;
    end
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment index*/
    ;
  end
  ;
   /* ----------------- END FK0J-2660 ----------------------------------*/
end // end FK0J-2660

// Format record for insert
Function FK0J-2670()
   /* ---------------------------------------------------------------------*/
   /* Set up the air bag usage record for insert.*/
   /* ---------------------------------------------------------------------*/
  ;
  set VABUSE01 empty; /* Clear record*/
  ;
  VABUSE01.SY1STNBR = FK0JM210.SY1STNBR; /* Style number*/
  VABUSE01.SY2CLRID = FK0JM210.SY2CLRID; /* Color id*/
  VABUSE01.XDMCD = FK0JM210.XDMCD; /* Dimension code*/
  VABUSE01.FK-NBR-AIRBAG-SHOE = FK0JM210.FK-NBR-AIRBAG-SHOE;
  VABUSE01.FK-AIRBAG-ID = FK0JM210.FK-AIRBAG-ID[FK0JW-IDX];
  VABUSE01.FK-DIF-AIRBAG-SHOE = FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED;
  VABUSE01.ZZZSDT = XX0XW01.XX0XWDAT; /* Set up date*/
  VABUSE01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VABUSE01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VABUSE01.ZZZCHGCT = 0; /* Change count*/
  ;
   /* ------------------ END FK0J-2670 -------------------------------------*/
end // end FK0J-2670

// Open DCMPNT.VABSCL01
Function FK0J-2680()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty;
  ;
  VABSCL01.FK-AIRBAG-ID = FK0JM210.FK-AIRBAG-ID[FK0JW-IDX];
  VABSCL01.FK-AIRBAG-SZ-SCLCD = FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX];
  ;
  try
    call "IO6400" ("S1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2680"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DCMPNT.VABSCL01      ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2680 ----------------------------------*/
end // end FK0J-2680

// Read next DCMPNT.VABSCL01
Function FK0J-2681()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the VABSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6400" ("N1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of file*/
      ;
      FK0JW00.FK0JW-VABSCL01-EOF-SW = "Y"; /* End of file*/
      ;
      return;
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2681"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ NEXT DCMPNT.VABSCL01       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2681 ------------------------------------*/
end // end FK0J-2681

// Close DCMPNT.VABSCL01
Function FK0J-2685()
   /* ------------------------------------------------------------*/
   /* Close the VABSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty;
  ;
  try
    call "IO6400" ("C1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2685"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VABSCL01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-2685 ---------------------------------*/
end // end FK0J-2685

// Format record for insert
Function FK0J-2690()
   /* ---------------------------------------------------------------------*/
   /* Set up the air bag/style record for insert VSYSCL01*/
   /* ---------------------------------------------------------------------*/
  ;
  set VSYSCL01 empty; /* Clear record*/
  ;
  VSYSCL01.SY1STNBR = FK0JM210.SY1STNBR; /* Style number*/
  VSYSCL01.SY2CLRID = FK0JM210.SY2CLRID; /* Color id*/
  VSYSCL01.XDMCD = FK0JM210.XDMCD; /* Dimension code*/
  VSYSCL01.FK-AIRBAG-ID = FK0JM210.FK-AIRBAG-ID[FK0JW-IDX]; /* air bag*/
  VSYSCL01.FK-AIRBAG-SZ-SCLCD = FK0JM210.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX]; /* air bag size scale*/
  VSYSCL01.SY4SZSCL = VABSCL01.SY4SZSCL; /* size scale code*/
  VSYSCL01.FK-AIRBAG-SZ-ID = VABSCL01.FK-AIRBAG-SZ-ID; /* air bag size*/
  VSYSCL01.SY5SZID = VABSCL01.SY5SZID; /* prod size id*/
  VSYSCL01.FB4SZPCT = FK0JW03.FB4SZPCT[FK0JW-AB-IDX]; /* Size percent*/
  VSYSCL01.FK-ALT-AIRBAG-FL = VABSCL01.FK-ALT-AIRBAG-FL; /* Bag flag*/
  VSYSCL01.ZZZSDT = XX0XW01.XX0XWDAT; /* Set up date*/
  VSYSCL01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VSYSCL01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VSYSCL01.ZZZCHGCT = 0; /* Change count*/
  ;
   /* ------------------ END FK0J-2690 -------------------------------------*/
end // end FK0J-2690

// Process Change map
Function FK0J-3000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0J-3100(); /* Obtain the data to display*/
  ;
  FK0J-3200(); /* Format and display the map*/
  ;
  FK0J-3300(); /* Check attention identifier*/
  ;
  FK0J-3400(); /* Reset fields to normal intensity*/
  ;
  FK0J-3500(); /* Verify the entered data*/
  ;
  FK0J-3600(); /* Process valid input request*/
  ;
   /* ----------------- END FK0J-3000 --------------------------------*/
end // end FK0J-3000

// Obtain data to display
Function FK0J-3100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-REQUEST-DATA-SW != "Y" /* data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0JW01 empty; /* Initialize display storage*/
  ;
  FK0JW01.SY1STNBR = FK0JM310.SY1STNBR; /* Style*/
  FK0JW01.SY2CLRID = FK0JM310.SY2CLRID; /* Color id*/
  FK0JW01.XDMCD = FK0JM310.XDMCD; /* Dimension*/
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0JM310.SY1STNBR != "  ") /* If style nbr on map*/
    ;
    FK0J-3110(); /* Lookup color style*/
                                 /* (DPRODG.VSYCLR01)*/
                                 /* (DPRODG.VSYDVL01)*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Select the air bag usage record for the entered style*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0JM310.SY1STNBR != "  ") /* If style nbr on map*/
    ;
    FK0JW00.FK0JW-VABUSE01-1ST-REC-SW = "Y"; /* 1st usage record*/
    FK0JW00.FK0JW-VABUSE01-EOF-SW = "N"; /* Init found sw to 'n'*/
    FK0JW00.FK0JW-IDX = 1; /* Reset display line index*/
    FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED = 0; /* Reset counter*/
    ;
    FK0J-3120(); /* Open air bag usage table*/
                                 /* (DPRODG.VABUSE01)*/
    FK0J-3121(); /* Read air bag usage record*/
                                 /* (DPRODG.VABUSE01)*/
    while (FK0JW00.FK0JW-VABUSE01-EOF-SW == "N"
     && FK0JW00.FK0JW-IDX <= 4)
      ;
      FK0JW01.FK0JW-VABUSE01-GROUP[FK0JW-IDX] = VABUSE01.VABUSE01-GROUP;
      FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED = FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED + 1;
      ;
      FK0J-3121(); /* Read air bag usage record*/
                                   /* (DPRODG.VABUSE01)*/
      FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1;
      ;
    end
    ;
    FK0J-3125(); /* Close air bag usage table*/
                                 /* (DPRODG.VABUSE01)*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Save header information in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0J-3130(); /* Format header information*/
  ;
   /* --------------------------------------------------------------*/
   /* Open and read in the style/bag size scale table.*/
   /* --------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-VSYSCL01-EOF-SW = "N"; /* Set end of file switch*/
  FK0JW00.FK0JW-IDX = 1; /* Reset display line index*/
  ;
  FK0J-3140(); /* Open Style/bag size scale file*/
                                  /* (DCMPNT.VSYSCL01)*/
  FK0J-3141(); /* Read next record*/
                                  /* (DCMPNT.VSYSCL01)*/
   /* --------------------------------------------------------------*/
   /* Loop and read Style/bag records until end of fileor index*/
   /* is greater than 4.  Only 4 lines displayed on the screen.*/
   /* --------------------------------------------------------------*/
  ;
  while (FK0JW00.FK0JW-VSYSCL01-EOF-SW != "Y" /* If color code on map*/
   && FK0JW00.FK0JW-IDX <= 4) /* Line count 4 or less*/
    ;
    FK0J-3150(); /* Open cursor DCMPNT.VABAG001*/
    FK0J-3151(); /* Read row DCMPNT.VABAG001*/
    FK0J-3155(); /* Close cursor DCMPNT.VABAG01*/
    ;
    FK0J-3160(); /* Format detail line*/
    ;
     /* --------------------------------------------------------------*/
     /* Loop and read Style/bag records until end of file or the airbag*/
     /* number is not equal to what is stored in working storage.  We*/
     /* are only interested in the record when the airbag number changes.*/
     /* --------------------------------------------------------------*/
    ;
    while (FK0JW00.FK0JW-VSYSCL01-EOF-SW == "N"
     && VSYSCL01.FK-AIRBAG-ID == FK0JW01.FK-AIRBAG-ID[FK0JW-IDX])
      ;
      FK0J-3141(); /* Read next record*/
                                     /* (DCMPNT.VSYSCL01)*/
    end
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment index*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Close Air Bag Style/Bag Size table*/
   /* --------------------------------------------------------------*/
  ;
  FK0J-3145(); /* Close Style/Bag size table*/
                                  /* (DCMPNT.VSYSCL01)*/
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-REQUEST-DATA-SW = "N";
  FK0JW00.FK0JW-FORMAT-MAP-SW = "Y";
  ;
   /* ---------------------- End fk0j-3100 -------------------------*/
end // end FK0J-3100

// Select color (DPRODG.VSYCLR01)
Function FK0J-3110()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/
  ;
  set PG2REC empty;
  ;
  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = FK0JM310.SY1STNBR; /* Style number*/
  PG2REC.SY2CLRID = FK0JM310.SY2CLRID; /* Color id*/
  PG2REC.XDMCD = FK0JM310.XDMCD; /* Dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW01.SY1STNBR = PG2REC.SY1STNBR; /* Style number*/
      FK0JW01.SY2CLRID = PG2REC.SY2CLRID; /* Color id*/
      FK0JW01.XDMCD = PG2REC.XDMCD; /* Dimension code*/
      FK0JW01.SY1SSTNM = PG2REC.SY1SSTNM; /* short style name*/
      FK0JW01.SY4SZSCL = PG2REC.SY4SZSCL; /* prod size scale*/
      FK0JW00.FK0JW-VSYCLR01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/
      ;
      FK0JW00.FK0JW-VSYCLR01-FOUND-SW = "N";
      ;
      FK0J-3111(); /* Look up Development Style*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT COLOR (DPRODG.VSYCLR01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0K-3110 ----------------------------------*/
end // end FK0J-3110

// Select style (DPRODG.VSYDVL01)
Function FK0J-3111()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  PG4REC.PG4STNBR = FK0JM310.SY1STNBR; /* Style number*/
  ;
  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW01.SY1STNBR = PG4REC.PG4STNBR; /* Style number*/
      FK0JW01.SY2CLRID = FK0JM310.SY2CLRID; /* Style color*/
      FK0JW01.XDMCD = FK0JM310.XDMCD; /* Dimension code*/
      ;
      FK0JW01.SY1SSTNM = PG4REC.SY1SSTNM; /* Short name*/
      ;
      FK0JW01.SY4SZSCL = " "; /* Production size scale*/
      FK0JW00.FK0JW-VSYDVL01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FKWREC.XXX-MOD-ID = "3111"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      FK0JW00.FK0JW-FORMAT-MAP-SW = "N";
      set FK0JM310.SY1STNBR cursor, bold;
      set FK0JM310.SY2CLRID bold;
      set FK0JM310.XDMCD bold;
      FK0JW00.FK0JW-VSYDVL01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3111"; /* Module identification*/
  ;
  FK0JW00.FK0JW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT STYLE (DPRODG.VSYDVL01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END fk0j-3111 -------------------------------------*/
end // end FK0J-3111

// Select usage (DCMPNT.VABUSE01)
Function FK0J-3120()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/
  ;
  set VABUSE01 empty;
  ;
  VABUSE01.SY1STNBR = FK0JM310.SY1STNBR; /* Style number*/
  VABUSE01.SY2CLRID = FK0JM310.SY2CLRID; /* Color id*/
  VABUSE01.XDMCD = FK0JM310.XDMCD; /* Dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("S1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT USAGE (DCMPNT.VABUSE01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.SY1STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0K-3120 ----------------------------------*/
end // end FK0J-3120

// Read next DCMPNT.VABUSE01
Function FK0J-3121()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the VABUSE01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("N1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW00.FK0JW-VABUSE01-1ST-REC-SW = "N";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      if (FK0JW00.FK0JW-VABUSE01-1ST-REC-SW == "Y") /* First record read?*/
        ;
        FKWREC.XXX-MOD-ID = "3121";
        converseLib.validationFailed(18);
        set FK0JM310.SY1STNBR bold, cursor;
        set FK0JM310.SY2CLRID bold;
        set FK0JM310.XDMCD bold;
        ;
      end
      ;
      FK0JW00.FK0JW-VABUSE01-EOF-SW = "Y";
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3121"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ NEXT DCMPNT.VABUSE01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END fk0j-3121 ------------------------------------*/
end // end FK0J-3121

// Close DCMPNT.VABUSE01
Function FK0J-3125()
   /* ------------------------------------------------------------*/
   /* Close the VABUSE01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("C1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3125"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VABUSE01        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-3125 --------------------------------------*/
end // end FK0J-3125

// Format Header Information
Function FK0J-3130()
   /* ------------------------------------------------------------*/
   /* Format the Header information to be displayed on the map.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW01.SY1STNBR = FK0JM310.SY1STNBR; /* Style number*/
  FK0JW01.SY2CLRID = FK0JM310.SY2CLRID; /* Color id*/
  FK0JW01.XDMCD = FK0JM310.XDMCD; /* Dimension code*/
  ;
  if (FK0JW00.FK0JW-VSYCLR01-FOUND-SW == "Y")
    ;
    FK0JW01.SY1SSTNM = PG2REC.SY1SSTNM; /* Style name*/
    FK0JW01.SY4SZSCL = PG2REC.SY4SZSCL; /* Prod size scale*/
    ;
  else
    ;
    if (FK0JW00.FK0JW-VSYDVL01-FOUND-SW == "Y")
      FK0JW01.SY1SSTNM = PG4REC.SY1SSTNM; /* Style name*/
    end
    ;
  end
  ;
  FK0JW01.FK-NBR-AIRBAG-SHOE = VABUSE01.FK-NBR-AIRBAG-SHOE;
  FK0JW01.FK-DIF-AIRBAG-SHOE = VABUSE01.FK-DIF-AIRBAG-SHOE;
  ;
   /* ----------------- END FK0J-3130 --------------------------------------*/
end // end FK0J-3130

// Open DCMPNT.VSYSCL01
Function FK0J-3140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty;
  ;
  VSYSCL01.SY1STNBR = FK0JW01.SY1STNBR; /* Style number*/
  VSYSCL01.SY2CLRID = FK0JW01.SY2CLRID; /* Color id*/
  VSYSCL01.XDMCD = FK0JW01.XDMCD; /* Dimension code*/
  VSYSCL01.FK-AIRBAG-ID = "*"; /* Air bag di*/
  ;
  try
    call "IO6390" ("S1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DCMPNT.VSYSCL01   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-3140 ----------------------------------*/
end // end FK0J-3140

// Read next DCMPNT.VSYSCL01
Function FK0J-3141()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the VSYSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6390" ("N1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of file*/
      ;
      FK0JW00.FK0JW-VSYSCL01-EOF-SW = "Y"; /* End of file*/
      ;
      if (FK0JW00.FK0JW-VSYSCL01-1ST-REC-SW == "Y") /* First record*/
        ;
        converseLib.validationFailed(18);
        FKWREC.XXX-MOD-ID = "3141";
        set FK0JM310.SY1STNBR bold, cursor;
        set FK0JM310.SY2CLRID bold;
        set FK0JM310.XDMCD bold;
        ;
      end
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3141"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ NEXT DCMPNT.VSYSCL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-3141 ------------------------------------*/
end // end FK0J-3141

// Close DCMPNT.VSYSCL01
Function FK0J-3145()
   /* ------------------------------------------------------------*/
   /* Close the VSYSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty;
  ;
  try
    call "IO6390" ("C1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3145"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VSYSCL01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-3145 -------------------------------------*/
end // end FK0J-3145

// Open DCMPNT.VABAG001
Function FK0J-3150()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-AIRBAG-ID = VSYSCL01.FK-AIRBAG-ID; /* Air bag id*/
  ;
  try
    call "IO6360" ("S1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DCMPNT.VABAG001    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* -----------------------END FK0J-3150 ---------------------------------*/
end // end FK0J-3150

// Read DCMPNT.VABAG001
Function FK0J-3151()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6360" ("N1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW01.FK-AIRBAG-ID[FK0JW-IDX] = VABAG001.FK-AIRBAG-ID;
      FK0JW01.FK-AIRBAG-DESC[FK0JW-IDX] = VABAG001.FK-AIRBAG-DESC;
      FK0JW01.FK-AIRBAG-UNT-PRC[FK0JW-IDX] = VABAG001.FK-AIRBAG-UNT-PRC;
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3151"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ DCMPNT.VABAG001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-3151 -------------------------------------*/
end // end FK0J-3151

// Close DCMPNT.VABAG001
Function FK0J-3155()
   /* ------------------------------------------------------------*/
   /* Close the Material table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6360" ("C1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3155"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VABAG001    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-3155 --------------------------------------*/
end // end FK0J-3155

// Format Detail Line
Function FK0J-3160()
   /* ------------------------------------------------------------*/
   /* Format the Detail record to be displayed to the map.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW01.FK-AIRBAG-ID[FK0JW-IDX] = VSYSCL01.FK-AIRBAG-ID; /* Air Bag*/
  FK0JW01.FK-AIRBAG-DESC[FK0JW-IDX] = VABAG001.FK-AIRBAG-DESC;
                                                                    /* Desc*/
  FK0JW01.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] = VSYSCL01.FK-AIRBAG-SZ-SCLCD; /* Airbag sz scale*/
  FK0JW01.FK-AIRBAG-UNT-PRC[FK0JW-IDX] = VABAG001.FK-AIRBAG-UNT-PRC;
  FK0JW01.FK-COMNT[FK0JW-IDX] = VABAG001.FK-COMNT; /* Comment*/
  ;
   /* ----------------- END FK0J-3160 --------------------------------------*/
end // end FK0J-3160

// Format and converse map
Function FK0J-3200()
   /* -------------------------------------------------------------*/
   /* If an error was found, save the error message number*/
   /* -------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
   /* -------------------------------------------------------------*/
   /* If obtain data failed or no error, format data to display*/
   /* -------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-REQUEST-DATA-SW == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0)   /* or no error found*/
    ;
    if (FK0JW00.FK0JW-FORMAT-MAP-SW == "Y") /* Map must be formatted*/
      FK0J-3210(); /* Format the data on the map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Protect fields where no data is present.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0JW00.FK0JW-IDX <= 4) /* Until screen is processed*/
    ;
    if (FK0JW01.FK-AIRBAG-ID[FK0JW-IDX] <= " ")
      set FK0JM310.FK-AIRBAG-ID[FK0JW-IDX] invisible, skip;
      set FK0JM310.FK-AIRBAG-DESC[FK0JW-IDX] invisible, skip;
      set FK0JM310.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] invisible, skip;
      set FK0JM310.FK-AIRBAG-UNT-PRC[FK0JW-IDX] invisible, skip;
      set FK0JM310.FK-COMNT[FK0JW-IDX] invisible, skip;
    end
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JM310.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0JM310.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0JM310.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
      ;
    else
      ;
      FK0JM310.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0JM310.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
    ;
    set FK0JM310 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse FK0JM310 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0JM310.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0JM310.CAITEM; /* Application data*/
  ;
   /* ----------------- END FK0J-3200 ----------------------------------*/
end // end FK0J-3200

// Format the display data
Function FK0J-3210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0JM310 initial; /* M310 input/output area*/
  ;
  FK0JW00.FK0JW-FORMAT-MAP-SW = "N"; /* Format the map switch*/
  ;
   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JW01.SY1STNBR <= " ") /* Style not present*/
    set FK0JM310.SY1STNBR cursor; /* Position cursor*/
  end
  ;
  FK0JM310.SY1STNBR = FK0JW01.SY1STNBR; /* Style number*/
  FK0JM310.SY2CLRID = FK0JW01.SY2CLRID; /* Color id*/
  FK0JM310.XDMCD = FK0JW01.XDMCD; /* Dimension code*/
  FK0JM310.SY1SSTNM = FK0JW01.SY1SSTNM; /* Style name*/
  FK0JM310.SY4SZSCL = FK0JW01.SY4SZSCL; /* Production size scale*/
  FK0JM310.FK-NBR-AIRBAG-SHOE = FK0JW01.FK-NBR-AIRBAG-SHOE;
  FK0JM310.FK-DIF-AIRBAG-SHOE = FK0JW01.FK-DIF-AIRBAG-SHOE;
  ;
  FK0JW00.FK0JW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0JW00.FK0JW-IDX <= 4) /* Until screen is full*/
    ;
    FK0JM310.FK-AIRBAG-ID[FK0JW-IDX] = FK0JW01.FK-AIRBAG-ID[FK0JW-IDX];
    FK0JM310.FK-AIRBAG-DESC[FK0JW-IDX] = FK0JW01.FK-AIRBAG-DESC[FK0JW-IDX];
    FK0JM310.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] = FK0JW01.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX];
    FK0JM310.FK-AIRBAG-UNT-PRC[FK0JW-IDX] = FK0JW01.FK-AIRBAG-UNT-PRC[FK0JW-IDX];
    FK0JM310.FK-COMNT[FK0JW-IDX] = FK0JW01.FK-COMNT[FK0JW-IDX];
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
   /* ----------------- END FK0J-3210 ------------------------------------*/
end // end FK0J-3210

// Check attention identifier
Function FK0J-3300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize FKWREC*/
    FKWREC.SY1STNBR[1] = FK0JW01.SY1STNBR; /* Style*/
    FKWREC.SY2CLRID[1] = FK0JW01.SY2CLRID; /* Color*/
    FKWREC.XDMCD[1] = FK0JW01.XDMCD; /* Dimension*/
    ;
    COMMAREA.CATOAP = "FK0J"; /* to applicaiton*/
    COMMAREA.CAITEM = "C   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0JM310.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JM310.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize FKWREC*/
      ;
      FKWREC.SY1STNBR[1] = FK0JM310.SY1STNBR; /* Style*/
      FKWREC.SY2CLRID[1] = FK0JM310.SY2CLRID; /* Color*/
      FKWREC.XDMCD[1] = FK0JM310.XDMCD; /* Dimension*/
      ;
      COMMAREA.CATOAP = FK0JM310.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0JM310.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0JM310.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* FK0I requested*/
   || converseVar.eventKey is pf14 /* FK0K requested*/
   || converseVar.eventKey is pf15 /* FK0L requested*/
   || converseVar.eventKey is pf17) /* FK0Z requested*/
    ;
    set FKWREC empty;
    ;
    FKWREC.SY1STNBR[1] = FK0JM310.SY1STNBR;
    FKWREC.SY2CLRID[1] = FK0JM310.SY2CLRID;
    FKWREC.XDMCD[1] = FK0JM310.XDMCD;
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0JM310"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = FK0JM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0JM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FK0I"; /* TO application*/
      COMMAREA.CAITEM = FK0JM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0K"; /* TO application*/
      COMMAREA.CAITEM = FK0JM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0L"; /* TO application*/
      COMMAREA.CAITEM = FK0JM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK0Z"; /* TO application*/
      COMMAREA.CAITEM = FK0JM310.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ----------------- END FK0J-3300 --------------------------------------*/
end // end FK0J-3300

// Reset highlighted fields
Function FK0J-3400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0JM310.SY1STNBR initialAttributes; /* Style number*/
  set FK0JM310.SY2CLRID initialAttributes; /* Color id*/
  set FK0JM310.XDMCD initialAttributes; /* Dimension code*/
  set FK0JM310.FK-NBR-AIRBAG-SHOE normal; /* Number of airbags per shoe*/
  ;
  set FK0JM310.CATOAP initialAttributes; /* TO application*/
  set FK0JM310.CAITEM initialAttributes; /* Application data*/
  ;
   /* ----------------- END FK0J-3400 -------------------------------------*/
end // end FK0J-3400

// Verify data that was entered
Function FK0J-3500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JM310.CAITEM > " ") /* Application data was entered*/
    ;
    if (converseVar.eventKey is pf12 /* FK0I selected*/
     || converseVar.eventKey is pf14 /* FK0K selected*/
     || converseVar.eventKey is pf15 /* FK0L selected*/
     || converseVar.eventKey is pf17) /* FK0Z selected*/
      ;
         /* next sentence*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      set FK0JM310.CAITEM cursor, bold; /* Highlight*/
      converseLib.validationFailed(7); /* Enter only with FAST PATH*/
      ;
    end
    ;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Verify that a Style, Color and Dimension were entered*/
   /* -----------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is enter)
    ;
    if (FK0JM310.SY1STNBR <= " ")
      ;
      converseLib.validationFailed(43); /* Required field*/
      set FK0JM310.SY1STNBR cursor, bold;
      FKWREC.XXX-MOD-ID = "3500"; /* Module id*/
      ;
      exit stack;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Check to see if the key has changed, if so set flags and exit*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JM310.SY1STNBR != FK0JW01.SY1STNBR /* Style number*/
   || FK0JM310.SY2CLRID != FK0JW01.SY2CLRID /* Color id*/
   || FK0JM310.XDMCD != FK0JW01.XDMCD)      /* Dimension code*/
    ;
    FK0JW00.FK0JW-REQUEST-DATA-SW = "Y"; /* Request data*/
    ;
    exit stack; /* Exit to display data*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify that the number of airbags per shoe entered doesn't*/
   /* exceed the number of airbags displayed on the screen.  Also*/
   /* check to see that the number of airbags per shoe is > 0 if*/
   /* airbag numbers are displayed on the screen.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JM310.FK-NBR-AIRBAG-SHOE > FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED)
    ;
    set FK0JM310.FK-NBR-AIRBAG-SHOE bold, cursor;
    FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
    converseLib.validationFailed(102); /* Bags per style must be < airbags displayed*/
    ;
  else
    ;
    if (FK0JM310.FK-NBR-AIRBAG-SHOE <= 0
     && FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED > 0)
      ;
      set FK0JM310.FK-NBR-AIRBAG-SHOE bold, cursor;
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(103); /* Bags per style must be > 0 if airbags exist*/
      ;
    end
    ;
  end
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* ----------------- END FK0J-3500 --------------------------------*/
end // end FK0J-3500

// Process valid input request
Function FK0J-3600()
   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-FORMAT-MAP-SW = "Y"; /* Format the map switch*/
  FK0JW00.FK0JW-REQUEST-DATA-SW = "Y"; /* Request for data*/
  FK0JW00.FK0JW-UPDT-PERFORMED-SW = "N"; /* Update performed switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Get date and time that will be use to time stamp records if updated*/
   /* --------------------------------------------------------------------*/
  ;
  XX0XS01();
  ;
   /* ------------------------------------------------------------*/
   /* If the Bags per Style has changed, update the Usage record*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JM310.FK-NBR-AIRBAG-SHOE != FK0JW01.FK-NBR-AIRBAG-SHOE)
    ;
    FK0JW00.FK0JW-IDX = 1; /* Reset the index*/
    ;
    while (FK0JW00.FK0JW-IDX <= FK0JW00.FK0JW-NBR-AIRBAGS-DISPLAYED)
      ;
      FK0J-3610(); /* Format the usage record*/
      ;
      if (FK0JW01.FK0JW-VABUSE01-GROUP[FK0JW-IDX] > " ")
        ;
        FK0J-3620(); /* Update the usage record*/
        ;
      end
      ;
      FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If update occurred, clear working storage and clear out map.*/
   /* Send successful update message.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-UPDT-PERFORMED-SW == "Y")
    ;
    set FK0JW01 empty;
    ;
    FK0JW01.SY1STNBR = FK0JM310.SY1STNBR;
    FK0JW01.SY2CLRID = FK0JM310.SY2CLRID;
    FK0JW01.XDMCD = FK0JM310.XDMCD;
    ;
    set FK0JM310 initial;
    ;
    FK0JM310.SY1STNBR = FK0JW01.SY1STNBR;
    FK0JM310.SY2CLRID = FK0JW01.SY2CLRID;
    FK0JM310.XDMCD = FK0JW01.XDMCD;
    ;
    FK0JW00.FK0JW-FORMAT-MAP-SW = "Y"; /* Format map*/
    FK0JW00.FK0JW-REQUEST-DATA-SW = "Y"; /* REQUEST DATA*/
    FKWREC.XXX-MOD-ID = "3600"; /* Module id*/
    FKWREC.XXXMSGNO = 1; /* Update completed*/
    ;
  end
  ;
   /* ----------------- END FK0J-3600 ------------------------------*/
end // end FK0J-3600

// Set up record for update
Function FK0J-3610()
   /* ---------------------------------------------------------------------*/
   /* Set up record for update*/
   /* ---------------------------------------------------------------------*/
  ;
  set VABUSE01 empty; /* Initialize record*/
  ;
  VABUSE01.VABUSE01-GROUP = FK0JW01.FK0JW-VABUSE01-GROUP[FK0JW-IDX];
  VABUSE01.FK-NBR-AIRBAG-SHOE = FK0JM310.FK-NBR-AIRBAG-SHOE;
  ;
  VABUSE01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VABUSE01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
end // end FK0J-3610

// Update DCMPNT.VABUSE01
Function FK0J-3620()
   /* ------------------------------------------------------------*/
   /* Add the requested row to the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("U ", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW00.FK0JW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback changes*/
  ;
  FKWREC.XXX-MOD-ID = "3620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DCMPNT.VABUSE01       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ------------------ END FK0J-3620 ----------------------------------*/
end // end FK0J-3620

// Process Delete map
Function FK0J-4000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0J-4100(); /* Obtain the data to display*/
  ;
  FK0J-4200(); /* Format and display the map*/
  ;
  FK0J-4300(); /* Check attention identifier*/
  ;
  FK0J-4400(); /* Reset fields to normal intensity*/
  ;
  FK0J-4500(); /* Verify the entered data*/
  ;
  FK0J-4600(); /* Process valid input request*/
  ;
   /* ----------------- END FK0J-4000 ----------------------------------*/
end // end FK0J-4000

// Obtain data to display
Function FK0J-4100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-REQUEST-DATA-SW != "Y" /* data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0JW01 empty; /* Init display storage*/
  ;
  FK0JW01.SY1STNBR = FK0JM410.SY1STNBR; /* Style*/
  FK0JW01.SY2CLRID = FK0JM410.SY2CLRID; /* Color id*/
  FK0JW01.XDMCD = FK0JM410.XDMCD; /* Dimension*/
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0JM410.SY1STNBR != "  ") /* If style nbr on map*/
    ;
    FK0J-4110(); /* Lookup color style*/
                                 /* (DPRODG.VSYCLR01)*/
                                 /* (DPRODG.VSYDVL01)*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Select the air bag usage record for the entered style*/
   /* --------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-VABUSE01-EOF-SW = "N"; /* Init found sw to 'n'*/
  ;
  if (FK0JM410.SY1STNBR != "  ") /* If style nbr on map*/
    ;
    FK0J-4120(); /* Open air bag usage table*/
                                 /* (DPRODG.VABUSE01)*/
    FK0J-4121(); /* Read air bag usage record*/
                                 /* (DPRODG.VABUSE01)*/
    FK0J-4125(); /* Close air bag usage table*/
                                 /* (DPRODG.VABUSE01)*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Save header information in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0J-4130(); /* Format header information*/
  ;
   /* --------------------------------------------------------------*/
   /* Open and read in the style/bag size scale table.*/
   /* --------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-VSYSCL01-EOF-SW = "N"; /* Set end of file switch*/
  FK0JW00.FK0JW-IDX = 1; /* Reset display line index*/
  ;
  FK0J-4140(); /* Open Style/bag size scale file*/
                                  /* (DCMPNT.VSYSCL01)*/
  FK0J-4141(); /* Read next record*/
                                  /* (DCMPNT.VSYSCL01)*/
   /* --------------------------------------------------------------*/
   /* Loop and read Style/bag records until end of fileor index*/
   /* is greater than 4.  Only 4 lines displayed on the screen.*/
   /* --------------------------------------------------------------*/
  ;
  while (FK0JW00.FK0JW-VSYSCL01-EOF-SW != "Y" /* If color code on map*/
   && FK0JW00.FK0JW-IDX <= 4) /* Line count 4 or less*/
    ;
    FK0J-4150(); /* Open cursor DCMPNT.VABAG001*/
    FK0J-4151(); /* Read row DCMPNT.VABAG001*/
    FK0J-4155(); /* Close cursor DCMPNT.VABAG01*/
    ;
    FK0J-4160(); /* Format detail line*/
    ;
     /* --------------------------------------------------------------*/
     /* Loop and read Style/bag records until end of file or the airbag*/
     /* number is not equal to what is stored in working storage.  We*/
     /* are only interested in the record when the airbag number changes.*/
     /* --------------------------------------------------------------*/
    ;
    while (FK0JW00.FK0JW-VSYSCL01-EOF-SW == "N"
     && VSYSCL01.FK-AIRBAG-ID == FK0JW01.FK-AIRBAG-ID[FK0JW-IDX])
      ;
      FK0J-4141(); /* Read next record*/
                                     /* (DCMPNT.VSYSCL01)*/
    end
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment index*/
    ;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Close Air Bag Style/Bag Size table*/
   /* --------------------------------------------------------------*/
  ;
  FK0J-4145(); /* Close Style/Bag size table*/
                                  /* (DCMPNT.VSYSCL01)*/
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-REQUEST-DATA-SW = "N";
  FK0JW00.FK0JW-FORMAT-MAP-SW = "Y";
  ;
   /* ---------------------- End FK0J-4100 -------------------------*/
end // end FK0J-4100

// Select color (DPRODG.VSYCLR01)
Function FK0J-4110()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/
  ;
  set PG2REC empty;
  ;
  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = FK0JM410.SY1STNBR; /* Style number*/
  PG2REC.SY2CLRID = FK0JM410.SY2CLRID; /* Color id*/
  PG2REC.XDMCD = FK0JM410.XDMCD; /* Dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW01.SY1STNBR = PG2REC.SY1STNBR; /* Style number*/
      FK0JW01.SY2CLRID = PG2REC.SY2CLRID; /* Color id*/
      FK0JW01.XDMCD = PG2REC.XDMCD; /* Dimension code*/
      FK0JW01.SY1SSTNM = PG2REC.SY1SSTNM; /* short style name*/
      FK0JW01.SY4SZSCL = PG2REC.SY4SZSCL; /* prod size scale*/
      FK0JW00.FK0JW-VSYCLR01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/
      ;
      FK0JW00.FK0JW-VSYCLR01-FOUND-SW = "N";
      FK0J-4111();
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT COLOR (DPRODG.VSYCLR01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0K-4110 ----------------------------------*/
end // end FK0J-4110

// Select style (DPRODG.VSYDVL01)
Function FK0J-4111()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  PG4REC.PG4STNBR = FK0JM410.SY1STNBR; /* Style number*/
  ;
  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW01.SY1STNBR = PG4REC.PG4STNBR; /* Style number*/
      FK0JW01.SY2CLRID = FK0JM410.SY2CLRID; /* Style color*/
      FK0JW01.XDMCD = FK0JM410.XDMCD; /* Dimension code*/
      FK0JW01.SY1SSTNM = PG4REC.SY1SSTNM; /* Short name*/
      ;
      FK0JW01.SY4SZSCL = " "; /* Prod size scale*/
      FK0JW00.FK0JW-VSYDVL01-FOUND-SW = "Y";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FK0JW00.FK0JW-FORMAT-MAP-SW = "N";
      FK0JW00.FK0JW-VSYDVL01-FOUND-SW = "N";
      FKWREC.XXX-MOD-ID = "4111"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      set FK0JM410.SY1STNBR cursor, bold;
      set FK0JM410.SY2CLRID bold;
      set FK0JM410.XDMCD bold;
      ;
      return;
      ;
    end
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4111"; /* Module id*/
  ;
  FK0JW00.FK0JW-REQUEST-DATA-SW = "N"; /* Set data switch*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not avail*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT STYLE (DPRODG.VSYDVL01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4111 -------------------------------------*/
end // end FK0J-4111

// Select usage (DPRODG.VABUSE01)
Function FK0J-4120()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/
  ;
  set VABUSE01 empty;
  ;
  VABUSE01.SY1STNBR = FK0JM410.SY1STNBR; /* Style number*/
  VABUSE01.SY2CLRID = FK0JM410.SY2CLRID; /* Color id*/
  VABUSE01.XDMCD = FK0JM410.XDMCD; /* Dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* Open cursor for DCMPNT.VABUSE01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("S1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT USAGE (DPRODG.VABUSE01)  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.SY1STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0K-4120 ----------------------------------*/
end // end FK0J-4120

// Read next DCMPNT.VABUSE01
Function FK0J-4121()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the VABUSE01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("N1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      FK0JW00.FK0JW-VABUSE01-EOF-SW = "Y";
      FKWREC.XXX-MOD-ID = "4121";
      converseLib.validationFailed(18);
      set FK0JM410.SY1STNBR bold, cursor;
      set FK0JM410.SY2CLRID bold;
      set FK0JM410.XDMCD bold;
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4121"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ NEXT DCMPNT.VABUSE01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4121 ------------------------------------*/
end // end FK0J-4121

// Close DCMPNT.VABUSE01
Function FK0J-4125()
   /* ------------------------------------------------------------*/
   /* Close the VABUSE01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("C1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4125"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VABUSE01 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4125 --------------------------------------*/
end // end FK0J-4125

// Format Header Information
Function FK0J-4130()
   /* ------------------------------------------------------------*/
   /* Format the Header information to be displayed on the map.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW01.SY1STNBR = FK0JM410.SY1STNBR; /* Style number*/
  FK0JW01.SY2CLRID = FK0JM410.SY2CLRID; /* Color id*/
  FK0JW01.XDMCD = FK0JM410.XDMCD; /* Dimension code*/
  ;
  if (FK0JW00.FK0JW-VSYCLR01-FOUND-SW == "Y")
    ;
    FK0JW01.SY1SSTNM = PG2REC.SY1SSTNM; /* Style name*/
    FK0JW01.SY4SZSCL = PG2REC.SY4SZSCL; /* Prod size scale*/
    ;
  else
    ;
    if (FK0JW00.FK0JW-VSYDVL01-FOUND-SW == "Y")
      FK0JW01.SY1SSTNM = PG4REC.SY1SSTNM; /* Style name*/
    end
    ;
  end
  ;
  FK0JW01.FK-NBR-AIRBAG-SHOE = VABUSE01.FK-NBR-AIRBAG-SHOE;
  FK0JW01.FK-DIF-AIRBAG-SHOE = VABUSE01.FK-DIF-AIRBAG-SHOE;
  ;
   /* ----------------- END FK0J-4130 --------------------------------------*/
end // end FK0J-4130

// Open DCMPNT.VSYSCL01
Function FK0J-4140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty;
  ;
  VSYSCL01.SY1STNBR = FK0JW01.SY1STNBR; /* Style number*/
  VSYSCL01.SY2CLRID = FK0JW01.SY2CLRID; /* Color id*/
  VSYSCL01.XDMCD = FK0JW01.XDMCD; /* Dimension code*/
  VSYSCL01.FK-AIRBAG-ID = "*"; /* Air bag id*/
  ;
  try
    call "IO6390" ("S1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DCMPNT.VSYSCL01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4140 ----------------------------------*/
end // end FK0J-4140

// Read next DCMPNT.VSYSCL01
Function FK0J-4141()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the VSYSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6390" ("N1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of file*/
      ;
      FK0JW00.FK0JW-VSYSCL01-EOF-SW = "Y"; /* End of file*/
      ;
      if (FK0JW00.FK0JW-VSYSCL01-1ST-REC-SW == "Y") /* First record*/
        ;
        converseLib.validationFailed(18);
        FKWREC.XXX-MOD-ID = "4141";
        set FK0JM410.SY1STNBR bold, cursor;
        set FK0JM410.SY2CLRID bold;
        set FK0JM410.XDMCD bold;
        ;
      end
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4141"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ NEXT DCMPNT.VSYSCL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4141 ------------------------------------*/
end // end FK0J-4141

// Close DCMPNT.VSYSCL01
Function FK0J-4145()
   /* ------------------------------------------------------------*/
   /* Close the VSYSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty;
  ;
  try
    call "IO6390" ("C1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4145"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VSYSCL01      ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4145 -------------------------------------*/
end // end FK0J-4145

// Open DCMPNT.VABAG001
Function FK0J-4150()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-AIRBAG-ID = VSYSCL01.FK-AIRBAG-ID; /* Air bag id*/
  ;
  try
    call "IO6360" ("S1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DCMPNT.VABAG001    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ---------------------- END FK0J-4150 ---------------------------------*/
end // end FK0J-4150

// Read DCMPNT.VABAG001
Function FK0J-4151()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6360" ("N1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW01.FK-AIRBAG-ID[FK0JW-IDX] = VABAG001.FK-AIRBAG-ID;
      FK0JW01.FK-AIRBAG-DESC[FK0JW-IDX] = VABAG001.FK-AIRBAG-DESC;
      FK0JW01.FK-AIRBAG-UNT-PRC[FK0JW-IDX] = VABAG001.FK-AIRBAG-UNT-PRC;
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4151"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ DCMPNT.VABAG001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4151 -------------------------------------*/
end // end FK0J-4151

// Close DCMPNT.VABAG001
Function FK0J-4155()
   /* ------------------------------------------------------------*/
   /* Close the Air bag table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6360" ("C1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4155"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VABAG001    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4155 --------------------------------------*/
end // end FK0J-4155

// Format Detail Line
Function FK0J-4160()
   /* ------------------------------------------------------------*/
   /* Format the Detail record to be displayed to the map.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW01.FK-AIRBAG-ID[FK0JW-IDX] = VSYSCL01.FK-AIRBAG-ID; /* Air Bag*/
  FK0JW01.FK-AIRBAG-DESC[FK0JW-IDX] = VABAG001.FK-AIRBAG-DESC; /* Desc*/
  FK0JW01.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] = VSYSCL01.FK-AIRBAG-SZ-SCLCD; /* Airbag sz scale*/
  FK0JW01.FK-AIRBAG-UNT-PRC[FK0JW-IDX] = VABAG001.FK-AIRBAG-UNT-PRC;
  FK0JW01.FK-COMNT[FK0JW-IDX] = VABAG001.FK-COMNT; /* Comment*/
  ;
   /* ----------------- END FK0J-4160 --------------------------------------*/
end // end FK0J-4160

// Format and converse map
Function FK0J-4200()
   /* -------------------------------------------------------------*/
   /* If an error was found, save the error message number*/
   /* -------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
   /* -------------------------------------------------------------*/
   /* If obtain data failed or no error, format data to display*/
   /* -------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-REQUEST-DATA-SW == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0)   /* or no error found*/
    ;
    if (FK0JW00.FK0JW-FORMAT-MAP-SW == "Y") /* Map must be formatted*/
      FK0J-4210(); /* Format the data on the map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Protect select fields where no data is present.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0JW00.FK0JW-IDX <= 4) /* Until screen is processed*/
    ;
    if (FK0JW01.FK-AIRBAG-ID[FK0JW-IDX] <= " ")
      set FK0JM410.FK-AIRBAG-ID[FK0JW-IDX] invisible, skip;
      set FK0JM410.FK-AIRBAG-DESC[FK0JW-IDX] invisible, skip;
      set FK0JM410.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] invisible, skip;
      set FK0JM410.FK-AIRBAG-UNT-PRC[FK0JW-IDX] invisible, skip;
      set FK0JM410.FK-COMNT[FK0JW-IDX] invisible, skip;
    end
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JM410.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0JM410.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0JM410.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0JM410.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
    end
    ;
    FK0JM410.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
    ;
    set FK0JM410 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse FK0JM410 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0JM410.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0JM410.CAITEM; /* Application data*/
  ;
   /* ----------------- END FK0J-4200 ----------------------------------*/
end // end FK0J-4200

// Format the display data
Function FK0J-4210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0JM410 initial; /* M410 input/output area*/
  ;
  FK0JW00.FK0JW-FORMAT-MAP-SW = "N"; /* Format the map switch*/
  ;
   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JW01.SY1STNBR <= " ") /* Style not present*/
    set FK0JM410.SY1STNBR cursor; /* Position cursor*/
  end
  ;
  FK0JM410.SY1STNBR = FK0JW01.SY1STNBR; /* Style number*/
  FK0JM410.SY2CLRID = FK0JW01.SY2CLRID; /* Color id*/
  FK0JM410.XDMCD = FK0JW01.XDMCD; /* Dimension code*/
  FK0JM410.SY1SSTNM = FK0JW01.SY1SSTNM; /* Style name*/
  FK0JM410.SY4SZSCL = FK0JW01.SY4SZSCL; /* Production size scale*/
  FK0JM410.FK-NBR-AIRBAG-SHOE = FK0JW01.FK-NBR-AIRBAG-SHOE;
  FK0JM410.FK-DIF-AIRBAG-SHOE = FK0JW01.FK-DIF-AIRBAG-SHOE;
  ;
  FK0JW00.FK0JW-IDX = 1; /* Initialize line index*/
  ;
  while (FK0JW00.FK0JW-IDX <= 4) /* Until screen is full*/
    ;
    FK0JM410.FK-AIRBAG-ID[FK0JW-IDX] = FK0JW01.FK-AIRBAG-ID[FK0JW-IDX];
    FK0JM410.FK-AIRBAG-DESC[FK0JW-IDX] = FK0JW01.FK-AIRBAG-DESC[FK0JW-IDX];
    FK0JM410.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX] = FK0JW01.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX];
    FK0JM410.FK-AIRBAG-UNT-PRC[FK0JW-IDX] = FK0JW01.FK-AIRBAG-UNT-PRC[FK0JW-IDX];
    FK0JM410.FK-COMNT[FK0JW-IDX] = FK0JW01.FK-COMNT[FK0JW-IDX];
    ;
    FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment line index*/
    ;
  end
  ;
   /* ----------------- END FK0J-4210 ------------------------------------*/
end // end FK0J-4210

// Check attention identifier
Function FK0J-4300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize FKWREC*/
    FKWREC.SY1STNBR[1] = FK0JW01.SY1STNBR; /* Style*/
    FKWREC.SY2CLRID[1] = FK0JW01.SY2CLRID; /* Color*/
    FKWREC.XDMCD[1] = FK0JW01.XDMCD; /* Dimension*/
    ;
    COMMAREA.CATOAP = "FK0J"; /* to applicaiton*/
    COMMAREA.CAITEM = "D   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0JM410.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JM410.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize FKWREC*/
      ;
      FKWREC.SY1STNBR[1] = FK0JM410.SY1STNBR; /* Style*/
      FKWREC.SY2CLRID[1] = FK0JM410.SY2CLRID; /* Color*/
      FKWREC.XDMCD[1] = FK0JM410.XDMCD; /* Dimension*/
      ;
      COMMAREA.CATOAP = FK0JM410.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0JM410.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0JM410.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* FK0I (BAG MAINTENANCE)*/
   || converseVar.eventKey is pf14 /* FK0K (STYLE/COLOR/DIM BAG MAINT)*/
   || converseVar.eventKey is pf15 /* FK0L (SIZE PCT MAINT)*/
   || converseVar.eventKey is pf17) /* FK0Z (SIZE SCALE PER BAG)*/
    ;
    set FKWREC empty; /* Initialize FKWREC*/
    ;
    FKWREC.SY1STNBR[1] = FK0JM410.SY1STNBR; /* Style*/
    FKWREC.SY2CLRID[1] = FK0JM410.SY2CLRID; /* Color*/
    FKWREC.XDMCD[1] = FK0JM410.XDMCD; /* Dimension*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0JM410"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = FK0JM410.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0JM410.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FK0I"; /* TO application*/
      COMMAREA.CAITEM = FK0JM410.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0K"; /* TO application*/
      COMMAREA.CAITEM = FK0JM410.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0L"; /* TO application*/
      COMMAREA.CAITEM = FK0JM410.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK0Z"; /* TO application*/
      COMMAREA.CAITEM = FK0JM410.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ----------------- END FK0J-4300 --------------------------------------*/
end // end FK0J-4300

// Reset highlighted fields
Function FK0J-4400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0JM410.SY1STNBR initialAttributes; /* Style number*/
  set FK0JM410.SY2CLRID initialAttributes; /* Color id*/
  set FK0JM410.XDMCD initialAttributes; /* Dimension code*/
  ;
  set FK0JM410.CATOAP initialAttributes; /* TO application*/
  set FK0JM410.CAITEM initialAttributes; /* Application data*/
  ;
   /* ----------------- END FK0J-4400 -------------------------------------*/
end // end FK0J-4400

// Verify data that was entered
Function FK0J-4500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JM410.CAITEM > " ") /* Application data was entered*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    set FK0JM410.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Verify that a Style, Color and Dimension were entered*/
   /* -----------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is enter)
    ;
    if (FK0JM410.SY1STNBR <= " ")
      converseLib.validationFailed(43); /* Required field*/
      set FK0JM410.SY1STNBR cursor, bold;
      FKWREC.XXX-MOD-ID = "4500"; /* Module id*/
    end
    ;
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Check to see if the header key information was changed*/
   /* -----------------------------------------------------------------*/
  ;
  if (FK0JM410.SY1STNBR != FK0JW01.SY1STNBR
   || FK0JM410.SY2CLRID != FK0JW01.SY2CLRID
   || FK0JM410.XDMCD != FK0JW01.XDMCD)
    ;
    FK0JW00.FK0JW-REQUEST-DATA-SW = "Y";
    exit stack;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* -----------------------------------------------------------------*/
   /* Check to if key entered contains any information to delete*/
   /* -----------------------------------------------------------------*/
  ;
  FK0J-4510(); /* Declare Cursor DCMPNT.VABUSE01*/
  ;
  FK0J-4511(); /* Read next row DCMPNT.VABUSE01*/
  ;
  FK0J-4515(); /* Close cursor DCMPNT.VABUSE01*/
  ;
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* ----------------- END FK0J-4500 --------------------------------*/
end // end FK0J-4500

// Decl cursor (DCMPNT.VABUSE01)
Function FK0J-4510()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/
  ;
  set VABUSE01 empty;
  ;
  VABUSE01.SY1STNBR = FK0JM410.SY1STNBR; /* Style number*/
  VABUSE01.SY2CLRID = FK0JM410.SY2CLRID; /* Color id*/
  VABUSE01.XDMCD = FK0JM410.XDMCD; /* Dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* Open cursor for DCMPNT.VABUSE01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("S1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECL CURSOR (DPRODG.VABUSE01)   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.SY1STNBR; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0K-4510 ----------------------------------*/
end // end FK0J-4510

// Read next DCMPNT.VABUSE01
Function FK0J-4511()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the VABUSE01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("N1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      ;
      FK0JW00.FK0JW-VABUSE01-EOF-SW = "Y";
      FKWREC.XXX-MOD-ID = "4511";
      converseLib.validationFailed(18);
      set FK0JM410.SY1STNBR bold, cursor;
      set FK0JM410.SY2CLRID bold;
      set FK0JM410.XDMCD bold;
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4511"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ NEXT DCMPNT.VABUSE01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4511 ------------------------------------*/
end // end FK0J-4511

// Close DCMPNT.VABUSE01
Function FK0J-4515()
   /* ------------------------------------------------------------*/
   /* Close the VABUSE01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6350" ("C1", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4515"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VABUSE01        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4515 --------------------------------------*/
end // end FK0J-4515

// Process valid input request
Function FK0J-4600()
   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display.*/
   /* The delete function will delete all air bags associated the*/
   /* style/color/dim from the usage and air bag/style tables.*/
   /* An air bag does not need to be selected in order for this to*/
   /* occur.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-UPDT-PERFORMED-SW = "N"; /* Reset update switch*/
  FK0JW00.FK0JW-FORMAT-MAP-SW = "Y"; /* Format the map switch*/
  FK0JW00.FK0JW-REQUEST-DATA-SW = "Y"; /* Request for data*/
  ;
   /* ------------------------------------------------------------*/
   /* Every delete must be confirmed.  If the confirm delete switch*/
   /* = 'N', set it to 'Y' and exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-CONFIRM-DELETE-SW == "N"
  )
    FK0JW00.FK0JW-CONFIRM-DELETE-SW = "Y";
    FKWREC.XXX-MOD-ID = "4600";
    converseLib.validationFailed(38); /* Press enter to delete, PA2 to cancel*/
    ;
    return; /* Exit to display the map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Delete all the airbag records displayed on the screen.*/
   /* ------------------------------------------------------------*/
  ;
  FK0JW00.FK0JW-IDX = 1; /* Reset index*/
  FK0JW-DELETE-BAG-USAGE-SW = "N"; /* Reset switch*/
  ;
  if (FK0JW00.FK0JW-CONFIRM-DELETE-SW == "Y")
    ;
    while (FK0JW00.FK0JW-IDX <= 4)
      ;
      if (FK0JW01.FK-AIRBAG-ID[FK0JW-IDX] > " ")
        ;
        FK0J-4610(); /* Delete DCMPNT.VSYSCL01 recs*/
        ;
        FK0J-4620(); /* Declare cursor VSYSCL01*/
                                          /* check if more recs to delete*/
        FK0J-4621(); /* Read next row  VSYSCL01*/
        ;
        FK0J-4625(); /* Close cursor VSYSCL01*/
        ;
      end
      ;
      if (FK0JW00.FK0JW-DELETE-BAG-USAGE-SW == "Y")
        ;
        FK0J-4630(); /* Delete DCMPNT.VABUSE01 recs*/
        ;
      end
      ;
      FK0JW00.FK0JW-IDX = FK0JW00.FK0JW-IDX + 1; /* Increment index*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If update successful, display message*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0JW00.FK0JW-UPDT-PERFORMED-SW == "Y")
    ;
    set FK0JW01 empty;
    ;
    FK0JW01.SY1STNBR = FK0JM410.SY1STNBR;
    FK0JW01.SY2CLRID = FK0JM410.SY2CLRID;
    FK0JW01.XDMCD = FK0JM410.XDMCD;
    ;
    set FK0JM410 initial;
    ;
    FK0JM410.SY1STNBR = FK0JW01.SY1STNBR;
    FK0JM410.SY2CLRID = FK0JW01.SY2CLRID;
    FK0JM410.XDMCD = FK0JW01.XDMCD;
    ;
    FK0JW00.FK0JW-FORMAT-MAP-SW = "Y";
    FK0JW00.FK0JW-REQUEST-DATA-SW = "N";
    FK0JW00.FK0JW-CONFIRM-DELETE-SW = "N";
    FKWREC.XXX-MOD-ID = "4600";
    FKWREC.XXXMSGNO = 1;
    ;
  end
  ;
   /* ----------------- END FK0J-4600 -----------------------------------*/
end // end FK0J-4600

// Delete DCMPNT.VSYSCL01
Function FK0J-4610()
   /* ------------------------------------------------------------*/
   /* Delete VSYSCL01 records.*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty; /* Init record*/
  ;
  VSYSCL01.SY1STNBR = FK0JW01.SY1STNBR; /* Style number*/
  VSYSCL01.SY2CLRID = FK0JW01.SY2CLRID; /* Color Id*/
  VSYSCL01.XDMCD = FK0JW01.XDMCD; /* Dimension code*/
  VSYSCL01.FK-AIRBAG-ID = FK0JW01.FK-AIRBAG-ID[FK0JW-IDX];
  VSYSCL01.FK-AIRBAG-SZ-SCLCD = FK0JW01.FK-AIRBAG-SZ-SCLCD[FK0JW-IDX]; /* Airbag sz scl*/
  ;
  try
    call "IO6390" ("D ", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW00.FK0JW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE DCMPNT.VSYSCL01          ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0JW00.FK0JW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4610 --------------------------------------*/
end // end FK0J-4610

// Open DCMPNT.VSYSCL01
Function FK0J-4620()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty;
  ;
  VSYSCL01.SY1STNBR = FK0JW01.SY1STNBR; /* Style number*/
  VSYSCL01.SY2CLRID = FK0JW01.SY2CLRID; /* Color id*/
  VSYSCL01.XDMCD = FK0JW01.XDMCD; /* Dimension code*/
  VSYSCL01.FK-AIRBAG-ID = FK0JW01.FK-AIRBAG-ID[FK0JW-IDX];
  ;
  try
    call "IO6390" ("S1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DCMPNT.VSYSCL01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4620 ----------------------------------*/
end // end FK0J-4620

// Read next DCMPNT.VSYSCL01
Function FK0J-4621()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the VSYSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6390" ("N1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW00.FK0JW-DELETE-BAG-USAGE-SW = "N";
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of file*/
      ;
      FK0JW00.FK0JW-DELETE-BAG-USAGE-SW = "Y";
      ;
      return;
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4621"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "READ NEXT DCMPNT.VSYSCL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4621 ------------------------------------*/
end // end FK0J-4621

// Close DCMPNT.VSYSCL01
Function FK0J-4625()
   /* ------------------------------------------------------------*/
   /* Close the VSYSCL01 table.*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty;
  ;
  try
    call "IO6390" ("C1", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4625"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VSYSCL01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4625 -------------------------------------*/
end // end FK0J-4625

// Delete DCMPNT.VABUSE01
Function FK0J-4630()
   /* ------------------------------------------------------------*/
   /* Delete the requested row(s) from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABUSE01 empty; /* Init record*/
  ;
  VABUSE01.SY1STNBR = FK0JW01.SY1STNBR; /* Style number*/
  VABUSE01.SY2CLRID = FK0JW01.SY2CLRID; /* Color Id*/
  VABUSE01.XDMCD = FK0JW01.XDMCD; /* Dimension code*/
  VABUSE01.FK-AIRBAG-ID = FK0JW01.FK-AIRBAG-ID[FK0JW-IDX];
  ;
  try
    call "IO6350" ("D ", SQLCA, VABUSE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0JW00.FK0JW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      ;
      return;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE DCMPNT.VABUSE01          ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABUSE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABUSE01.VABUSE01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0JW00.FK0JW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ----------------- END FK0J-4630 --------------------------------------*/
end // end FK0J-4630

//*** RECORD=FK0JW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0JW00 type basicRecord
  10 FK0JW-IDX FK0JW-IDX ; 
  10 FK0JW-INDEX FK0JW-INDEX ; 
  10 FK0JW-HOLD-INDEX FK0JW-HOLD-INDEX ; 
  10 FK0JW-AB-IDX FK0JW-AB-IDX ; 
  10 FK0JW-SZ-IDX FK0JW-SZ-IDX ; 
  10 FK0JW-FORMAT-MAP-SW FK0JW-FORMAT-MAP-SW ; 
  10 FK0JW-MAP-SWITCH FK0JW-MAP-SWITCH ; 
  10 FK0JW-REQUEST-DATA-SW FK0JW-REQUEST-DATA-SW ; 
  10 FK0JW-CONFIRM-DELETE-SW FK0JW-CONFIRM-DELETE-SW ; 
  10 FK0JW-UPDT-PERFORMED-SW FK0JW-UPDT-PERFORMED-SW ; 
  10 FK0JW-DELETE-BAG-USAGE-SW FK0JW-DELETE-BAG-USAGE-SW ; 
  10 FK0JW-COPY-DATA-SW FK0JW-COPY-DATA-SW ; 
  10 FK0JW-VABAG001-EOF-SW FK0JW-VABAG001-EOF-SW ; 
  10 FK0JW-VABSCL01-EOF-SW FK0JW-VABSCL01-EOF-SW ; 
  10 FK0JW-VABUSE01-EOF-SW FK0JW-VABUSE01-EOF-SW ; 
  10 FK0JW-VSYSCL01-EOF-SW FK0JW-VSYSCL01-EOF-SW ; 
  10 FK0JW-VFBASE01-EOF-SW FK0JW-VFBASE01-EOF-SW ; 
  10 FK0JW-VABUSE01-FOUND-SW FK0JW-VABUSE01-FOUND-SW ; 
  10 FK0JW-VSYDVL01-FOUND-SW FK0JW-VSYDVL01-FOUND-SW ; 
  10 FK0JW-VSYCLR01-FOUND-SW FK0JW-VSYCLR01-FOUND-SW ; 
  10 FK0JW-VFBASE01-FOUND-SW FK0JW-VFBASE01-FOUND-SW ; 
  10 FK0JW-VSYCLR01-COPY-FOUND-SW FK0JW-VSYCLR01-COPY-FOUND-SW ; 
  10 FK0JW-VSYDVL01-COPY-FOUND-SW FK0JW-VSYDVL01-COPY-FOUND-SW ; 
  10 FK0JW-ROW-ENTERED-SW FK0JW-ROW-ENTERED-SW ; 
  10 FK0JW-VSYSCL01-1ST-REC-SW FK0JW-VSYSCL01-1ST-REC-SW ; 
  10 FK0JW-VABUSE01-1ST-REC-SW FK0JW-VABUSE01-1ST-REC-SW ; 
  10 FK0JW-PREV-AIRBAG-ID FK0JW-PREV-AIRBAG-ID ; 
  10 FK0JW-NBR-AIRBAGS-DISPLAYED FK0JW-NBR-AIRBAGS-DISPLAYED ; 
  10 FK0JW-FIRST-SY4SZSCL FK0JW-FIRST-SY4SZSCL ; 
end // end FK0JW00

//*** RECORD=FK0JW01 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0JW01 type basicRecord
  5 * char(7020) ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 SY1SSTNM SY1SSTNM ; 
    10 SY4SZSCL SY4SZSCL ; 
    10 FK-DIF-AIRBAG-SHOE FK-DIF-AIRBAG-SHOE ; 
    10 FK-NBR-AIRBAG-SHOE FK-NBR-AIRBAG-SHOE ; 
    10 FK0JW-SEL FK0JW-SEL [4] ; 
    10 FK-AIRBAG-ID FK-AIRBAG-ID [4] ; 
    10 FK-AIRBAG-DESC FK-AIRBAG-DESC [4] ; 
    10 FK-AIRBAG-SZ-SCLCD FK-AIRBAG-SZ-SCLCD [4] ; 
    10 FK-AIRBAG-UNT-PRC FK-AIRBAG-UNT-PRC [4] ; 
    10 FK-COMNT FK-COMNT [4] ; 
    10 FK0JW-COPY-STYLE FK0JW-COPY-STYLE ; 
    10 FK0JW-COPY-COLOR FK0JW-COPY-COLOR ; 
    10 FK0JW-COPY-DIM FK0JW-COPY-DIM ; 
    10 FK0JW-VABUSE01-GROUP FK0JW-VABUSE01-GROUP [4] ; 
    10 FK0JW-VSYSCL01-GROUP-1 FK0JW-VSYSCL01-GROUP-1 [40] ; 
    10 FK0JW-VSYSCL01-GROUP-2 FK0JW-VSYSCL01-GROUP-2 [40] ; 
    10 FK0JW-VSYSCL01-GROUP-3 FK0JW-VSYSCL01-GROUP-3 [40] ; 
    10 FK0JW-VSYSCL01-GROUP-4 FK0JW-VSYSCL01-GROUP-4 [40] ; 
end // end FK0JW01

//*** RECORD=FK0JW02 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0JW02 type basicRecord
  5 FK0JW-IO-PASS char(6) ; 
    10 FK0JW-IO-TASK FK0JW-IO-TASK ; 
    10 FK0JW-IO-COUNT-1 FK0JW-IO-COUNT-1 ; 
end // end FK0JW02

//*** RECORD=FK0JW03 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0JW03 type basicRecord
  5 * char(200) ; 
    10 SY5SZID SY5SZID [40] ; 
    10 FB4SZPCT FB4SZPCT [40] ; 
end // end FK0JW03

//*** RECORD=PT4REC ****
// *************** MODELING FOOTWEAR BASE TABLE ***************
// 
// DB2 TABLE VIEW:      DMODEL.VFBASE01
// 
// DCLGEN MEMBER:       DCL00539
// 
// I/O MODULE:          IO3100
// 
// KEY TO TABLE:        XGPCD
//                      SY1STNBR
//                      SY2CLRID
//                      XDMCD
//                      XSDCD
//                      XPGCD
//                      XUMCD
//                      XQACD
//                      XWHCD
// 
// MAINTENANCE HISTORY:
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          01/20/89  SPOPA   New record.
// **********************
Record PT4REC type basicRecord
  5 PT4GROUP PT4GROUP ; 
    10 PT4KEY PT4KEY ; 
      15 XGPCD XGPCD ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
      15 XDMCD XDMCD ; 
      15 XSDCD XSDCD ; 
      15 XPGCD XPGCD ; 
      15 XUMCD XUMCD ; 
      15 XQACD XQACD ; 
      15 XWHCD XWHCD ; 
    10 PT2HDTR PT2HDTR ; 
    10 PT2RNUM PT2RNUM ; 
    10 SY5SZID SY5SZID [10] ; 
    10 PT2QTY1 PT2QTY1 [10] ; 
    10 PT2QTOT1 PT2QTOT1 ; 
    10 PT2QTY2 PT2QTY2 [10] ; 
    10 PT2QTOT2 PT2QTOT2 ; 
    10 PT2QTY3 PT2QTY3 [10] ; 
    10 PT2QTOT3 PT2QTOT3 ; 
    10 PT4QT4 PT4QT4 [10] ; 
    10 PT4QTOT4 PT4QTOT4 ; 
    10 PT2PCT1 PT2PCT1 [10] ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end PT4REC

// Index to load VSYSCL01 entries
DataItem FK0JW-AB-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Confirm delete switch
DataItem FK0JW-CONFIRM-DELETE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Copy Color
DataItem FK0JW-COPY-COLOR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Copy data switch
DataItem FK0JW-COPY-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Copy Dimension
DataItem FK0JW-COPY-DIM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Copy Style
DataItem FK0JW-COPY-STYLE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Delete bag usage switch
DataItem FK0JW-DELETE-BAG-USAGE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// A hold area for sy4szscl
DataItem FK0JW-FIRST-SY4SZSCL char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be formated & displayed
DataItem FK0JW-FORMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold index
DataItem FK0JW-HOLD-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Index used for the screen
DataItem FK0JW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Index to compare row entries
DataItem FK0JW-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record count
DataItem FK0JW-IO-COUNT-1 int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// io task
DataItem FK0JW-IO-TASK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be displayed switch
DataItem FK0JW-MAP-SWITCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Number of airbags on screen
DataItem FK0JW-NBR-AIRBAGS-DISPLAYED num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Previous air bag id
DataItem FK0JW-PREV-AIRBAG-ID char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data to display
DataItem FK0JW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Row entered switch
DataItem FK0JW-ROW-ENTERED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FK0JW-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index to load VFBASE01 entries
DataItem FK0JW-SZ-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Update performed switch
DataItem FK0JW-UPDT-PERFORMED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VABUSE01 EOF switch
DataItem FK0JW-VABAG001-EOF-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VABSCL01 record EOF switch
DataItem FK0JW-VABSCL01-EOF-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first usage record read
DataItem FK0JW-VABUSE01-1ST-REC-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VABUSE01 record EOF switch
DataItem FK0JW-VABUSE01-EOF-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VABUSE01 record found switch
DataItem FK0JW-VABUSE01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GROUP LEVEL
DataItem FK0JW-VABUSE01-GROUP char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VFBASE01 record EOF switch
DataItem FK0JW-VFBASE01-EOF-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VFBASE01 record found switch
DataItem FK0JW-VFBASE01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYCLR01 copy found switch
DataItem FK0JW-VSYCLR01-COPY-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYCLR01 record found switch
DataItem FK0JW-VSYCLR01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYDVL01 copy found switch
DataItem FK0JW-VSYDVL01-COPY-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYDVL01 record found switch
DataItem FK0JW-VSYDVL01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first style/bag record read
DataItem FK0JW-VSYSCL01-1ST-REC-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYSCL01 record EOF switch
DataItem FK0JW-VSYSCL01-EOF-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYSCL01 GROUP LEVEL 1
DataItem FK0JW-VSYSCL01-GROUP-1 char(41)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYSCL01 GROUP LEVEL 2
DataItem FK0JW-VSYSCL01-GROUP-2 char(41)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYSCL01 GROUP LEVEL 3
DataItem FK0JW-VSYSCL01-GROUP-3 char(41)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYSCL01 GROUP LEVEL 4
DataItem FK0JW-VSYSCL01-GROUP-4 char(41)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record group level
DataItem PT4GROUP char(264)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Key group level
DataItem PT4KEY char(24)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

