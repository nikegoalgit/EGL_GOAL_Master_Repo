package fk0m;

import corpcom2.XX0XW01;
import corpcom3.XPFK001;
import corpcom4.XSFKS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpx1.XCLCD;
import corpx1.XCLTBL;
import corpx1.XDMCD;
import corpx1.XTMTBL;
import corpx2.XMG-COLR-GRP-CD;
import corpx2.XTM-MAT-THCK-CD;
import corpx2.XTM-MAT-THCK-DESC;
import corpz3.ZZZCHGCT;
import corpz3.ZZZSDT;
import fg.common.FG9REC;
import fk.common.*;
import pg.common.PG2REC;
import pg.common.PG4REC;
import sy.common.SY1SSTNM;
import sy.common.SY1STNBR;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VMATRL01;
import vv.common.VMCOLR01;
import vv.common.VMUSGE01;
import vv.common.VSYDVX01;
//*** PROGRAM=FK0M ****
// ------------------------------------------------------------
//                          FK0M
//    COMPONENTS FORECASTING  -  STYLE MATERIAL MAINTENANCE
// 
// This application maintains rows on the Material Usage data-
// base(DCMPNT.VMUSGE01).  Users may inquire, add, change and
// delete data rows through the four maps included in this
// program.
// 
// Transfer from one FK0M to another FK0M map is not possible
// except through fastpath.  Users may exit this application by
// using PF keys or FASTPATH, with the "OPTION" field available
// for use with any application.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      02/06/92  DFRANC  New application.
//          04/27/92  DFRANC  Added change function to program
//          09/11/92  JALLE1  Added PF19 to application FK0Q.
//          11/05/92  JALLE1  Fix color default on style dvl
//                            products (add screen).
// FK-018   02/26/93  JALLE1  Activate PFKEYS to FK0G, FK0H.
//          05/06/93  JALLE1  Fix dimension on sty dvl prods.
//                            Don't allow dim to be entered.
//          08/09/93  JALLE1  Aug '93 table changes.
//          12/08/95  MSMIT2  ADD FORECAST INFO FOR REGULAR
//                            STYLE.
//          03/04/96  rmcafe  modified to use selected vendor
//                            code and not first vd cd on list.
// 
// Y2KFIX   11/05/97  VRAMAC  Y2K MODIFICATIONS MADE TO:
//                            REGEN TO PICK UP COPY OF XX0XS01
// 
// *********************
Program FK0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FG9REC FG9REC; // record
  FK0MW00 FK0MW00; // record
  FK0MW01 FK0MW01; // record
  FKWREC FKWREC; // record
  PG2REC PG2REC; // record
  PG4REC PG4REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VMATRL01 VMATRL01; // record
  VMCOLR01 VMCOLR01; // record
  VMUSGE01 VMUSGE01; // record
  VSYDVX01 VSYDVX01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCLTBL; // table
  use XTMTBL; // table
  use FK0MM.FK0MM110,  // forms
      FK0MM.FK0MM210, 
      FK0MM.FK0MM310, 
      FK0MM.FK0MM410
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set FK0MM110 initial; /* M110 Inquiry map input/output*/
    set FK0MM210 initial; /* M210 Add map input/output*/
    set FK0MM310 initial; /* M310 Change map input/output*/
    set FK0MM410 initial; /* M410 Delete map input/output*/
    set FK0MW00 empty; /* Working storage*/
    set FK0MW01 empty; /* Working storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    set VMUSGE01 empty; /* Material usage*/
    set VMATRL01 empty; /* Material*/
    set VMCOLR01 empty; /* Material Color*/
    set PG2REC empty; /* Production Product Style Color*/
    set PG4REC empty; /* Development Product Sytle Color*/

    FK0MW00.FK0MW-VMUSGE01-FOUND-SW = "N"; /* Init to 'n'o*/
    FK0MW00.FK0MW-VSYCLR01-FOUND-SW = "N"; /* Init to 'n'o*/
    FK0MW00.FK0MW-VSYDVL01-FOUND-SW = "N"; /* Init to 'n'o*/
    FK0MW00.FK0MW-VMATRL01-FOUND-SW = "N"; /* Init to 'n'o*/
    FK0MW00.FK0MW-VSYCLR01-COPY-FOUND-SW = "N"; /* Init to 'n'o*/
    FK0MW00.FK0MW-VSYDVL01-COPY-FOUND-SW = "N"; /* Init to 'n'o*/
    FK0MW00.FK0MW-VSYDVX01-FOUND-SW = "N"; /* Init to 'n'o*/

    FK0MW00.FK0MW-FORMAT-MAP-SW = "Y"; /* Format map*/
    FK0MW00.FK0MW-COPY-DATA-SW = "N"; /* Copy data switch*/
    FK0MW00.FK0MW-CONFIRM-DELETE-SW = "N"; /* Confirm delete switch*/
    FK0MW00.FK0MW-NXTPRD-IDX = 1; /* Init next style index*/

    FK0MW00.FK0MW-MAP-SWITCH = "1"; /* Map to be displayed switch*/

     /* ------------------------------------------------------------*/
     /* If data was passed in the COMMAREA, use as the initial key.*/
     /* ------------------------------------------------------------*/

    if (FKWREC.FKW-UPDATE-FUNCTION == "A") /* add requested*/

      FK0MW00.FK0MW-MAP-SWITCH = "2";

      FK0MM210.SY1STNBR = FKWREC.SY1STNBR[FK0MW-NXTPRD-IDX]; /* Style number*/
      FK0MM210.SY2CLRID = FKWREC.SY2CLRID[FK0MW-NXTPRD-IDX]; /* Color id*/
      FK0MM210.XDMCD = FKWREC.XDMCD[FK0MW-NXTPRD-IDX]; /* Dimension code*/

      if (FKWREC.SY1STNBR[FK0MW-NXTPRD-IDX] > " ")
        FK0MW00.FK0MW-REQUEST-DATA-SW = "Y";
      else
        FK0MW00.FK0MW-REQUEST-DATA-SW = "N";
      end

    else

      if (FKWREC.FKW-UPDATE-FUNCTION == "C") /* delete requested*/

        FK0MW00.FK0MW-MAP-SWITCH = "3";

        FK0MM310.SY1STNBR = FKWREC.SY1STNBR[FK0MW-NXTPRD-IDX]; /* Style number*/
        FK0MM310.SY2CLRID = FKWREC.SY2CLRID[FK0MW-NXTPRD-IDX]; /* Color id*/
        FK0MM310.XDMCD = FKWREC.XDMCD[FK0MW-NXTPRD-IDX]; /* Dimension code*/

        if (FKWREC.SY1STNBR[FK0MW-NXTPRD-IDX] > " ")
          FK0MW00.FK0MW-REQUEST-DATA-SW = "Y";
        else
          FK0MW00.FK0MW-REQUEST-DATA-SW = "N";
        end

      else
        if (FKWREC.FKW-UPDATE-FUNCTION == "D") /* delete requested*/

          FK0MW00.FK0MW-MAP-SWITCH = "4";

          FK0MM410.SY1STNBR = FKWREC.SY1STNBR[FK0MW-NXTPRD-IDX]; /* Style number*/
          FK0MM410.SY2CLRID = FKWREC.SY2CLRID[FK0MW-NXTPRD-IDX]; /* Color id*/
          FK0MM410.XDMCD = FKWREC.XDMCD[FK0MW-NXTPRD-IDX]; /* Dimension code*/

          if (FKWREC.SY1STNBR[FK0MW-NXTPRD-IDX] > " ")
            FK0MW00.FK0MW-REQUEST-DATA-SW = "Y";
            FK0MW00.FK0MW-CONFIRM-DELETE-SW = "N";
          else
            FK0MW00.FK0MW-REQUEST-DATA-SW = "N";
          end

        else

          FK0MW00.FK0MW-MAP-SWITCH = "1";

          FK0MM110.SY1STNBR = FKWREC.SY1STNBR[FK0MW-NXTPRD-IDX]; /* Style number*/
          FK0MM110.SY2CLRID = FKWREC.SY2CLRID[FK0MW-NXTPRD-IDX]; /* Color id*/
          FK0MM110.XDMCD = FKWREC.XDMCD[FK0MW-NXTPRD-IDX]; /* Dimension code*/

          if (FKWREC.SY1STNBR[FK0MW-NXTPRD-IDX] > " ")
            FK0MW00.FK0MW-REQUEST-DATA-SW = "Y";
          else
            FK0MW00.FK0MW-REQUEST-DATA-SW = "N";
          end

        end

      end

    end

    FKWREC.FKW-UPDATE-FUNCTION = " "; /* Clear passed data*/

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto FK0M-0001; /* Converse the main process*/


    FK0M-0001: FK0M-0001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto FK0M-0001; /* Converse the main process*/


  end // end main
end // end FK0M

// Main process to display a map
Function FK0M-0001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the first map.*/
   /* 2) Otherwise, if specified, display the second map.*/
   /* 3) Otherwise, if specified, display the third map.*/
   /* 4) Otherwise, if specified, display the fourth map.*/
   /* 5) Otherwise, indicate error and exit to Application Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FK0MW00.FK0MW-MAP-SWITCH == "1") /* Map 1 was requested*/

    FK0M-1000(); /* Display map 1 (Inquiry)*/

  else

    if (FK0MW00.FK0MW-MAP-SWITCH == "2") /* Map 2 was requested*/

      FK0M-2000(); /* Display map 2 (Add)*/

    else

      if (FK0MW00.FK0MW-MAP-SWITCH == "3") /* Map 3 requested*/

        FK0M-3000(); /* Display map 4 (Change)*/

      else

        if (FK0MW00.FK0MW-MAP-SWITCH == "4") /* Map 4 requested*/

          FK0M-4000(); /* Display map 4 (Delete)*/

        else

              /* --------------------------------------------------------*/
               /* Write the error to Error Diagnosis Reporting Facility*/
              /* --------------------------------------------------------*/

          FKWREC.XXX-MOD-ID = "001"; /* Module identification*/
          FKWREC.XXXMSGNO = 10; /* Unexpected error occurred*/

          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
          TA1REC.TA1TYPE = "APPL"; /* Type of error*/
          TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";
          TA1REC.TA1MAPNO = FK0MW00.FK0MW-MAP-SWITCH; /* Map nmbr*/
          TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program appl*/
          TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/

          call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

              /* --------------------------------------------------------*/
               /* Exit to display the application system menu.*/
              /* --------------------------------------------------------*/

          COMMAREA.CATOAP = "FK0B"; /* TO application*/

          XSFKS01(); /* Exit to another application*/

              /* ---------------------------------------------------------*/
               /* Abnormally terminate the transaction if the exit failed.*/
              /* ---------------------------------------------------------*/

          TA1REC.TA1FUNC = "ABND"; /* Termination function*/

          call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

        end

      end

    end

  end


end // end FK0M-0001

// Process inquiry map
Function FK0M-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FK0M-1100(); /* Obtain the data to display*/

  FK0M-1200(); /* Format and display the map*/

  FK0M-1300(); /* Check attention identifier*/

  FK0M-1400(); /* Reset fields to normal intensity*/

  FK0M-1500(); /* Verify the entered data*/

  FK0M-1600(); /* Process valid input request*/


end // end FK0M-1000

// Obtain data to display
Function FK0M-1100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/

  if (FK0MW00.FK0MW-REQUEST-DATA-SW != "Y" /* data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/

  set FK0MW01 empty; /* Initialize display storage*/

  FK0MW01.SY1STNBR = FK0MM110.SY1STNBR; /* Style*/
  FK0MW01.SY2CLRID = FK0MM110.SY2CLRID; /* Color id*/
  FK0MW01.XDMCD = FK0MM110.XDMCD; /* Dimension*/

   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/

  FK0MW00.FK0MW-VMUSGE01-EOF-SW = "N"; /* Init found sw to 'n'*/

  if (FK0MM110.SY1STNBR != "  ") /* If style nbr on map*/

    set PG2REC empty;

    PG2REC.XGPCD = "02"; /* Group code*/
    PG2REC.SY1STNBR = FK0MM110.SY1STNBR; /* Style number*/
    PG2REC.SY2CLRID = FK0MM110.SY2CLRID; /* Color id*/
    PG2REC.XDMCD = FK0MM110.XDMCD; /* Dimension code*/

    FK0MS-07-IO3120-S(); /* SELECT DPRODG.VSYCLR01*/

    if (SQLCA.VAGen_SQLCODE == 0)
      FK0MW01.SY1STNBR = PG2REC.SY1STNBR; /* Style number*/
      FK0MW01.SY2CLRID = PG2REC.SY2CLRID; /* Color id*/
      FK0MW01.XDMCD = PG2REC.XDMCD; /* Dimension code*/
      FK0MW01.SY1SSTNM = PG2REC.SY1SSTNM; /* short style name*/
    else
      FK0M-1111(); /* (DPRODG.VSYDVL01)*/
      if (SQLCA.VAGen_SQLCODE == 0)
        FK0M-1101();
      end
    end

  end

   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0)
    return;
  end

   /* --------------------------------------------------------------*/
   /* Open and read in the first Material Usage record.*/
   /* --------------------------------------------------------------*/

  FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW = "Y"; /* First record read switch*/
  FK0MW00.FK0MW-VMUSGE01-EOF-SW = "N"; /* Set end of file switch*/
  FK0MW00.FK0MW-IDX = 1; /* Reset display line index*/

  FK0M-1120(); /* Open Material Usage file*/
                                  /* (DCMPNT.VMUSGE01)*/

  FK0M-1121(); /* Read next record*/
                                  /* (DCMPNT.VMUSGE01)*/
   /* --------------------------------------------------------------*/
   /* Loop and read Material records until Material Usage end of file*/
   /* --------------------------------------------------------------*/

  while (FK0MW00.FK0MW-IDX <= 13 /* Line count 13 or less*/
   && FK0MW00.FK0MW-VMUSGE01-EOF-SW != "Y") /* If color code on map*/

    FK0M-1130(); /* Open the material table*/
                                  /* (DCMPNT.VMATRL01)*/
    FK0M-1131(); /* Read in the material data*/
                                  /* (DCMPNT.VMATRL01)*/
    FK0M-1135(); /* Close the material table*/
                                  /* (DCMPNT.VMATRL01)*/
    FK0M-1140(); /* Get thickness description*/
                                  /* (XMTTBL)*/
    FK0M-1150(); /* Calculate Yield*/

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment index*/

    if (FK0MW00.FK0MW-IDX <= 13)

      FK0M-1121(); /* Read next record*/
                                     /* (DCMPNT.VMUSGE01)*/
    end

  end

   /* --------------------------------------------------------------*/
   /* Close Material Cursor*/
   /* --------------------------------------------------------------*/

  FK0M-1125(); /* Close Material Usage file*/
                                  /* (DCMPNT.VMUSGE01)*/

   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/

  FK0MW00.FK0MW-REQUEST-DATA-SW = "N";
  FK0MW00.FK0MW-FORMAT-MAP-SW = "Y";

end // end FK0M-1100

// DETERMINE IF FORECASTED
Function FK0M-1101()
   /* --------------------------------------------------------------*/
   /* DETERMINE IF THE FORECAST HAS BEEN MADE FOR THE REAL STYLE*/
   /* --------------------------------------------------------------*/

  set VSYDVX01 empty;
  FK0MW00.FK0MW-VSYDVX01-FOUND-SW = "N";

  VSYDVX01.PG4STNBR = PG4REC.PG4STNBR;

  FK0MS-03-IO0490-SS(); /* OPEN CURSOR FOR DPRODG.VSYDVX01*/

  FK0MS-04-IO0490-SN(); /* GET FIRST DPRODG.VSYDVX01*/

  while (SQLCA.VAGen_SQLCODE == 0
   && FK0MW00.FK0MW-VSYDVX01-FOUND-SW == "N")
    if (VSYDVX01.XGPCD == "02"
     && VSYDVX01.SY2CLRID == FK0MW01.SY2CLRID)
      FK0MW00.FK0MW-VSYDVX01-FOUND-SW = "Y";
    else
      FK0MS-04-IO0490-SN();
    end
  end

  FK0MS-05-IO0490-CS(); /* CLOSE CURSOR FOR DPRODG.VSYDVX01*/

  if (FK0MW00.FK0MW-VSYDVX01-FOUND-SW == "N")
    return;
  end

   /* GET THE FORECASTING HISTORY RECORD TO DETERMINE WHEN THIS*/
   /* PRODUCT WILL BE FORECASTED.*/

  set FG9REC empty;

  FG9REC.SY1STNBR = VSYDVX01.SY1STNBR;
  FG9REC.SY2CLRID = VSYDVX01.SY2CLRID;
  FG9REC.XDMCD = VSYDVX01.XDMCD;
  FG9REC.YSMXDV = "10";

  FK0MS-06-IO5430-S(); /* SELECT DFCAST.VPFHST01*/

   /* IF THE RECORD IS NOT FOUND FOR DIVISION '10', TRY DIVISION '20'.*/

  if (SQLCA.VAGen_SQLCODE == 100)
    FG9REC.YSMXDV = "20";
    FK0MS-06-IO5430-S(); /* SELECT DFCAST.VPFHST01*/
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    end
  end

  FK0MW01.FK0MW-SY-STY-NBR = FG9REC.SY1STNBR;
  FK0MW01.FK0MW-SY-COLR-CD-ID = FG9REC.SY2CLRID;
  FK0MW01.FK0MW-XDM-DIM-CD = FG9REC.XDMCD;
  FK0MW01.FK0MW-SY-SHORT-STY-NM = FG9REC.SY1SSTNM;
  FK0MW01.FK0MW-PG-FRST-PRDCTN-MO = FG9REC.PG2FPDMO;


end // end FK0M-1101

// Select style (DPRODG.VSYDVL01)
Function FK0M-1111()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  PG4REC.PG4STNBR = FK0MM110.SY1STNBR; /* Style number*/

  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW01.SY1STNBR = PG4REC.PG4STNBR; /* Style number*/

      if (FK0MM110.SY2CLRID == " ")
        FK0MW01.SY2CLRID = "000"; /* Style color*/
      else
        FK0MW01.SY2CLRID = FK0MM110.SY2CLRID; /* Style color*/
      end

      FK0MW01.XDMCD = " "; /* Dimension code*/

      FK0MW01.SY1SSTNM = PG4REC.SY1SSTNM; /* Short name*/

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FKWREC.XXX-MOD-ID = "1111"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      FK0MW00.FK0MW-FORMAT-MAP-SW = "N";
      set FK0MM110.SY1STNBR cursor, bold;
      set FK0MM110.SY2CLRID bold;
      set FK0MM110.XDMCD bold;

      return;

    end


  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "1111"; /* Module identification*/

  FK0MW00.FK0MW-REQUEST-DATA-SW = "N"; /* Set data switch*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1111 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM111"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-1111

// Open DCMPNT.VMUSGE01
Function FK0M-1120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  set VMUSGE01 empty;

  VMUSGE01.SY1STNBR = FK0MW01.SY1STNBR; /* Style number*/
  VMUSGE01.SY2CLRID = FK0MW01.SY2CLRID; /* Color id*/
  VMUSGE01.XDMCD = FK0MW01.XDMCD; /* Dimension code*/

  try
    call "IO6240" ("S1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "1120"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1120 GET MATRL USAGE DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM110"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-1120

// Read next DCMPNT.VMUSGE01
Function FK0M-1121()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the vmusge01 table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6240" ("N1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW01.FK-MAT-NBR[FK0MW-IDX] = VMUSGE01.FK-MAT-NBR;
      FK0MW01.XMG-COLR-GRP-CD[FK0MW-IDX] = VMUSGE01.XMG-COLR-GRP-CD;
      FK0MW01.XCLCD[FK0MW-IDX] = VMUSGE01.XCLCD;
      FK0MW01.FK-MAT-DEVL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-DEVL-USE;
      FK0MW01.FK-MAT-PROD-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-PROD-USE;
      FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-FINL-USE;
      FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX] = VMUSGE01.FK-MAT-WAST-PCT;

      /* ------------------------------------------------------------*/
      /* Move only the first manufacturing % found into working storage*/
      /* ------------------------------------------------------------*/

      if (FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW == "Y")

        FK0MW01.FK-MAT-MFG-PCT = VMUSGE01.FK-MAT-MFG-PCT;
        FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW = "N";

      end

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/

      FK0MW00.FK0MW-VMUSGE01-EOF-SW = "Y"; /* End of file*/

      if (FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW == "Y") /* First record*/

        converseLib.validationFailed(18);
        FKWREC.XXX-MOD-ID = "1121";
        set FK0MM110.SY1STNBR bold, cursor;
        set FK0MM110.SY2CLRID bold;
        set FK0MM110.XDMCD bold;

      end

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "1121"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1121 READ MTRL USAGE DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM110"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-1121

// Close DCMPNT.VMUSGE01
Function FK0M-1125()
   /* ------------------------------------------------------------*/
   /* Close the VMUSEG01 table.*/
   /* ------------------------------------------------------------*/

  set VMUSGE01 empty;

  try
    call "IO6240" ("C1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "1125"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1125 CLOSE MTRL USAGE TABLE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM110"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-1125

// Open DCMPNT.VMATRL01
Function FK0M-1130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  set VMATRL01 empty;

  VMATRL01.FK-MAT-NBR = VMUSGE01.FK-MAT-NBR; /* material nbr*/
  VMATRL01.FK-VEND-CD = "*"; /* Vendor code*/

  try
    call "IO6190" ("S2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "1130"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1130 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM110"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-1130

// Read DCMPNT.VMATRL01
Function FK0M-1131()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6190" ("N2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW01.FK-VEND-CD[FK0MW-IDX] = VMATRL01.FK-VEND-CD;
      FK0MW01.FK-MAT-NBR[FK0MW-IDX] = VMATRL01.FK-MAT-NBR;
      FK0MW01.FK-DEPT-MAT-DESC[FK0MW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
      FK0MW01.XTM-MAT-THCK-CD[FK0MW-IDX] = VMATRL01.XTM-MAT-THCK-CD;

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "1131"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1131 READ NEXT MATERIAL  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM110"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-1131

// Close DCMPNT.VMATRL01
Function FK0M-1135()
   /* ------------------------------------------------------------*/
   /* Close the Material table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6190" ("C2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "1135"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1135 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM110"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-1135

// Read XTMTBL For THCK DESC
Function FK0M-1140()
   /* ------------------------------------------------------------*/
   /* Read CSP Corporate table for thickness description*/
   /* ------------------------------------------------------------*/

  if (VMATRL01.XTM-MAT-THCK-CD in XTMTBL.XTM-MAT-THCK-CD /* If in table*/
   && XTMTBL.XXXSTAT[sysVar.arrayIndex] == "A")          /* and status is active*/

    FK0MW01.XTM-MAT-THCK-DESC[FK0MW-IDX] = XTMTBL.XTM-MAT-THCK-DESC[sysVar.arrayIndex]; /* Save description*/
  else
    FK0MW01.XTM-MAT-THCK-DESC[FK0MW-IDX] = "*******";
  end


end // end FK0M-1140

// Calculate yield
Function FK0M-1150()
   /* ------------------------------------------------------------------*/
   /* Calculate the yield for each line item*/
   /* ------------------------------------------------------------------*/

  if (FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] != 0)

    FK0MW01.FK0MW-PF-IND[FK0MW-IDX] = "F";
    FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-FINL-USE;

  else

    if (FK0MW01.FK-MAT-PROD-USE[FK0MW-IDX] != 0)

      FK0MW01.FK0MW-PF-IND[FK0MW-IDX] = "P";
      FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-PROD-USE;

    else
      FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-DEVL-USE;
    end

  end

   /* ------------------------------------------------------------------*/
   /* Yield calculation*/
   /* ------------------------------------------------------------------*/

  FK0MW01.FK0MW-YIELD[FK0MW-IDX] = FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] -   FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] *   FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX];

end // end FK0M-1150

// Format and converse map
Function FK0M-1200()
   /* -------------------------------------------------------------*/
   /* If an error was found, save the error message number*/
   /* -------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

   /* -------------------------------------------------------------*/
   /* If obtain data failed or no error, format data to display*/
   /* -------------------------------------------------------------*/

  if (FK0MW00.FK0MW-REQUEST-DATA-SW == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0)   /* or no error found*/

    if (FK0MW00.FK0MW-FORMAT-MAP-SW == "Y") /* Map must be formatted*/
      FK0M-1210(); /* Format the data on the map*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Protect select fields where no data is present.*/
   /* ------------------------------------------------------------*/

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13) /* Until screen is processed*/

    if (FK0MW01.FK-VEND-CD[FK0MW-IDX] <= " ")
      set FK0MM110.FK0MM-SEL[FK0MW-IDX] invisible, skip;
      set FK0MM110.FK-MAT-FINL-USE[FK0MW-IDX] invisible, skip;
      set FK0MM110.FK-MAT-WAST-PCT[FK0MW-IDX] invisible, skip;
      set FK0MM110.FK0MM-YIELD[FK0MW-IDX] invisible, skip;
      FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/
    else
      FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FK0MM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FK0MM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0MM110.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (FKWREC.XXXMSGNO != 0) /* Message to display*/

      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/

    else

      FK0MM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    FK0MM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/

    set FK0MM110 alarm; /* Indicate sound alarm*/

  end

   /* ------------------------------------------------------------*/
   /* Establish cursor position*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0
   || FKWREC.XXXMSGNO == 1) /* Update complete*/

    set FK0MM110.SY1STNBR cursor;

  end

  converse FK0MM110 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = FK0MM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0MM110.CAITEM; /* Application data*/

end // end FK0M-1200

// Format the display data
Function FK0M-1210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set FK0MM110 initial; /* m110 input/output area*/

  FK0MW00.FK0MW-FORMAT-MAP-SW = "N"; /* Format the map switch*/

   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/

  if (FK0MW01.SY1STNBR <= " ") /* Style not present*/
    set FK0MM110.SY1STNBR cursor; /* Position cursor*/
  end


  FK0MM110.SY1STNBR = FK0MW01.SY1STNBR; /* Style number*/
  FK0MM110.SY2CLRID = FK0MW01.SY2CLRID; /* Color id*/
  FK0MM110.XDMCD = FK0MW01.XDMCD; /* Dimension code*/
  FK0MM110.FK-MAT-MFG-PCT = FK0MW01.FK-MAT-MFG-PCT;
  FK0MM110.SY1SSTNM = FK0MW01.SY1SSTNM; /* Style short name*/

  FK0MM110.FK0MM-SY-STY-NBR = FK0MW01.FK0MW-SY-STY-NBR;
  FK0MM110.FK0MM-SY-COLR-CD-ID = FK0MW01.FK0MW-SY-COLR-CD-ID;
  FK0MM110.FK0MM-XDM-DIM-CD = FK0MW01.FK0MW-XDM-DIM-CD;
  FK0MM110.FK0MM-SY-SHORT-STY-NM = FK0MW01.FK0MW-SY-SHORT-STY-NM;
  FK0MM110.FK0MM-PG-FRST-PRDCTN-MO = FK0MW01.FK0MW-PG-FRST-PRDCTN-MO;

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13) /* Until screen is full*/


    FK0MM110.FK0MM-SEL[FK0MW-IDX] = FK0MW01.FK0MW-SEL[FK0MW-IDX];
    FK0MM110.FK-VEND-CD[FK0MW-IDX] = FK0MW01.FK-VEND-CD[FK0MW-IDX];
    FK0MM110.FK-MAT-NBR[FK0MW-IDX] = FK0MW01.FK-MAT-NBR[FK0MW-IDX];
    FK0MM110.FK-DEPT-MAT-DESC[FK0MW-IDX] = FK0MW01.FK-DEPT-MAT-DESC[FK0MW-IDX];
    FK0MM110.XCLCD[FK0MW-IDX] = FK0MW01.XCLCD[FK0MW-IDX];
    FK0MM110.XTM-MAT-THCK-CD[FK0MW-IDX] = FK0MW01.XTM-MAT-THCK-CD[FK0MW-IDX];
    FK0MM110.XTM-MAT-THCK-DESC[FK0MW-IDX] = FK0MW01.XTM-MAT-THCK-DESC[FK0MW-IDX];
    FK0MM110.FK-MAT-FINL-USE[FK0MW-IDX] = FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX];
    FK0MM110.FK0MM-PF-IND[FK0MW-IDX] = FK0MW01.FK0MW-PF-IND[FK0MW-IDX];
    FK0MM110.FK-MAT-WAST-PCT[FK0MW-IDX] = FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX];
    FK0MM110.FK0MM-YIELD[FK0MW-IDX] = FK0MW01.FK0MW-YIELD[FK0MW-IDX];

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/

  end

end // end FK0M-1210

// Check attention identifier
Function FK0M-1300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set FKWREC empty; /* Initialize FKWREC*/
    FKWREC.SY1STNBR[1] = FK0MW01.SY1STNBR; /* Style*/
    FKWREC.SY2CLRID[1] = FK0MW01.SY2CLRID; /* Color*/
    FKWREC.XDMCD[1] = FK0MW01.XDMCD; /* Dimension*/

    COMMAREA.CATOAP = "FK0M"; /* to applicaiton*/
    COMMAREA.CAITEM = "I   "; /* item*/

    XSFKS01(); /* Exit to another application*/

    set FK0MM110.CATOAP cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (FK0MM110.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set FKWREC empty; /* Initialize FKWREC*/

      FKWREC.SY1STNBR[1] = FK0MM110.SY1STNBR; /* Style*/
      FKWREC.SY2CLRID[1] = FK0MM110.SY2CLRID; /* Color*/
      FKWREC.XDMCD[1] = FK0MM110.XDMCD; /* Dimension*/

      COMMAREA.CATOAP = FK0MM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0MM110.CAITEM; /* item*/

      XSFKS01(); /* Exit to another application*/

      set FK0MM110.CATOAP cursor, bold; /* Highlight*/

    else

      FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0MM110"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = FK0MM110.CAITEM; /* item*/

      XSFKS01(); /* Exit to another application*/

      exit stack; /* Exit to display map*/

    end

    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0MM110.CAITEM; /* item*/

      XSFKS01(); /* Exit to another application*/

      exit stack; /* Exit to display map*/

    end

    return; /* Return*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6   /* NXTSTY requested*/
   && converseVar.eventKey not pf12  /* FK0E requested*/
   && converseVar.eventKey not pf13  /* FK0F requested*/
   && converseVar.eventKey not pf14  /* FK0G requested*/
   && converseVar.eventKey not pf15  /* FK0H requested*/
   && converseVar.eventKey not pf19) /* FK0Q requested*/

    FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end

end // end FK0M-1300

// Reset highlighted fields
Function FK0M-1400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FK0MM110.SY1STNBR initialAttributes; /* Style number*/
  set FK0MM110.SY2CLRID initialAttributes; /* Color id*/
  set FK0MM110.XDMCD initialAttributes; /* Dimension code*/

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13 /* Until end of lines*/
   && FK0MM110.SY1STNBR > " ") /* or end of display*/

    set FK0MM110.FK0MM-SEL[FK0MW-IDX] normal; /* Reset select flag*/

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/

  end

  set FK0MM110.CATOAP initialAttributes; /* TO application*/
  set FK0MM110.CAITEM initialAttributes; /* Application data*/

end // end FK0M-1400

// Verify data that was entered
Function FK0M-1500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (FK0MM110.CAITEM > " ") /* Application data was entered*/
    if (converseVar.eventKey is pf12 /* FK0E selected*/
     || converseVar.eventKey is pf13 /* FK0F selected*/
     || converseVar.eventKey is pf14 /* FK0G selected*/
     || converseVar.eventKey is pf15 /* FK0H selected*/
     || converseVar.eventKey is pf19) /* FK0Q selected*/
         /* next sentence*/
    else
      FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
      set FK0MM110.CAITEM cursor, bold; /* Highlight*/
      converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    end
  end

   /* -----------------------------------------------------------------*/
   /* If NXTPRD (PF6) entered, verify imension were entered*/
   /* -----------------------------------------------------------------*/

  if (converseVar.eventKey is pf6) /* Next Style requested*/

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-NXTPRD-IDX + 1;

    if (FK0MW00.FK0MW-IDX > 15 /* If on last fkwrec record*/
     || FKWREC.SY1STNBR[FK0MW-IDX] == " ") /* /or no more data*/

      set FK0MM110.SY1STNBR cursor; /* Reset cursor*/
      FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
      converseLib.validationFailed(49); /* No more styles to display*/
      exit stack;
    end

    return; /* Exit edit section -- we want*/
                                         /* next product*/
  end

   /* -----------------------------------------------------------------*/
   /* Verify that a Style, Color and Dimension were entered*/
   /* -----------------------------------------------------------------*/

  if (converseVar.eventKey is enter)

    if (FK0MM110.SY1STNBR <= " ")

      converseLib.validationFailed(43); /* Required field*/
      set FK0MM110.SY1STNBR cursor, bold;
      FKWREC.XXX-MOD-ID = "1500"; /* Module id*/
      exit stack;

    end

  end

   /* ------------------------------------------------------------*/
   /* Verify data in the line if screen already formatted*/
   /* ------------------------------------------------------------*/

  if (FK0MW00.FK0MW-FORMAT-MAP-SW == "N")

    FK0MW00.FK0MW-IDX = 13; /* Initialize line index*/

    while (FK0MW00.FK0MW-IDX > 0) /* Until end of lines*/

      if (FK0MM110.FK0MM-SEL[FK0MW-IDX] != FK0MW01.FK0MW-SEL[FK0MW-IDX]
       && FK0MM110.FK0MM-SEL[FK0MW-IDX] != "S" /* and is not a 's'*/
       && FK0MM110.FK0MM-SEL[FK0MW-IDX] != " ") /* and is not a ' '*/
        FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
        converseLib.validationFailed(13); /* only 'S' may be entered*/
        set FK0MM110.FK0MM-SEL[FK0MW-IDX] cursor, bold; /* highlight*/
      end

      FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX - 1; /* Decrement line number*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end

end // end FK0M-1500

// Process valid input request
Function FK0M-1600()
   /* ------------------------------------------------------------*/
   /* If NXTPRD (PF6) requested, obtain the next product to display*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf6) /* Next Style*/

    FK0MW00.FK0MW-NXTPRD-IDX = FK0MW00.FK0MW-NXTPRD-IDX + 1; /* Increment*/

    FK0MM110.SY1STNBR = FKWREC.SY1STNBR[FK0MW-NXTPRD-IDX]; /* Style number*/
    FK0MM110.SY2CLRID = FKWREC.SY2CLRID[FK0MW-NXTPRD-IDX]; /* Color id*/
    FK0MM110.XDMCD = FKWREC.XDMCD[FK0MW-NXTPRD-IDX]; /* Dimension Code*/

    FK0MW00.FK0MW-REQUEST-DATA-SW = "Y"; /* Request data*/
                                               /* Exit to display map*/
    return;

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display.*/
   /* ------------------------------------------------------------*/

  FK0MW00.FK0MW-FORMAT-MAP-SW = "Y"; /* Format the map switch*/
  FK0MW00.FK0MW-REQUEST-DATA-SW = "Y"; /* Request for data*/

   /* ------------------------------------------------------------*/
   /* If the search key was changed, save the search information.*/
   /* ------------------------------------------------------------*/

  if (FK0MM110.SY1STNBR != FK0MW01.SY1STNBR /* Style nubmer changed*/
   || FK0MM110.SY2CLRID != FK0MW01.SY2CLRID /* Color id changed*/
   || FK0MM110.XDMCD != FK0MW01.XDMCD)      /* Dimension changed*/

    FK0MW00.FK0MW-REQUEST-DATA-SW = "Y"; /* Request for data switch*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* Save the select fields and clear the map input/output area.*/
   /* ------------------------------------------------------------*/

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13) /* Until end of lines*/

    if (FK0MM110.FK0MM-SEL[FK0MW-IDX] != FK0MW01.FK0MW-SEL[FK0MW-IDX])

      FK0MW01.FK0MW-SEL[FK0MW-IDX] = FK0MM110.FK0MM-SEL[FK0MW-IDX];

    end

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1;

  end

  if (converseVar.eventKey is pf1  /* Help requested*/
   || converseVar.eventKey is pf3  /* Exit requested*/
   || converseVar.eventKey is pf4  /* Master menu*/
   || converseVar.eventKey is pf12 /* FK0E requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf14 /* FK0G requested*/
   || converseVar.eventKey is pf15 /* FK0H requested*/
   || converseVar.eventKey is pf19) /* FK0Q requested*/

     /* ------------------------------------------------------------*/
      /* Update the modifiable data in the COMMAREA.*/
     /* ------------------------------------------------------------*/

    set FKWREC empty;

    FKWREC.SY1STNBR[1] = FK0MM110.SY1STNBR; /* Style number*/
    FKWREC.SY2CLRID[1] = FK0MM110.SY2CLRID; /* Color id*/
    FKWREC.XDMCD[1] = FK0MM110.XDMCD; /* Dimension code*/

    FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/
    FKWREC.FKWINDX1 = 1; /* Initialize FKWREC index*/

    while (FK0MW00.FK0MW-IDX <= 13) /* Until end of lines*/

      if (FK0MM110.FK0MM-SEL[FK0MW-IDX] == "S") /* Line was selected*/

        FKWREC.FK-VEND-CD[FKWINDX1] = FK0MM110.FK-VEND-CD[FK0MW-IDX];

        FKWREC.FK-MAT-NBR[FKWINDX1] = FK0MW01.FK-MAT-NBR[FK0MW-IDX];
        FKWREC.XTM-MAT-THCK-CD[FKWINDX1] = FK0MW01.XTM-MAT-THCK-CD[FK0MW-IDX];
        FKWREC.XMG-COLR-GRP-CD[FKWINDX1] = FK0MW01.XMG-COLR-GRP-CD[FK0MW-IDX];
        FKWREC.XCLCD[FKWINDX1] = FK0MW01.XCLCD[FK0MW-IDX];
        FKWREC.SY1STNBR[FKWINDX1] = FK0MW01.SY1STNBR;
        FKWREC.SY2CLRID[FKWINDX1] = FK0MW01.SY2CLRID;
        FKWREC.XDMCD[FKWINDX1] = FK0MW01.XDMCD;
        FKWREC.FK-MAT-MFG-PCT[FKWINDX1] = FK0MW01.FK-MAT-MFG-PCT;

        FK0MW00.FK0MW-STORAGE-UPD-SW = "Y"; /* Storage update*/
        FK0MW00.FK0MW-REQUEST-DATA-SW = "Y"; /* Request for data*/

        FKWREC.FKWINDX1 = FKWREC.FKWINDX1 + 1; /* Incr FKWREC index*/

      end

      FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/

    end

    FKWREC.FKWINDX1 = FKWREC.FKWINDX1 - 1; /* Decrement FKWREC index by one*/

    if (converseVar.eventKey is pf12) /* PF12 Was pressed*/
      COMMAREA.CATOAP = "FK0E"; /* To application*/
      if (FK0MM110.CAITEM == " ")
        COMMAREA.CAITEM = "C"; /* Default function to change*/
      else
        COMMAREA.CAITEM = FK0MM110.CAITEM; /* Item*/
      end
    end

    if (converseVar.eventKey is pf13) /* PF13 Was pressed*/
      COMMAREA.CATOAP = "FK0F"; /* To application*/
      COMMAREA.CAITEM = FK0MM110.CAITEM; /* Item*/
    end

    if (converseVar.eventKey is pf14) /* PF14 Was pressed*/
      COMMAREA.CATOAP = "FK0G"; /* To application*/
      COMMAREA.CAITEM = FK0MM110.CAITEM; /* Item*/
    end

    if (converseVar.eventKey is pf15) /* PF15 Was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* To application*/
      COMMAREA.CAITEM = FK0MM110.CAITEM; /* Item*/
    end

    if (converseVar.eventKey is pf19) /* PF19 Was pressed*/
      COMMAREA.CATOAP = "FK0Q"; /* To application*/
      COMMAREA.CAITEM = FK0MM110.CAITEM; /* Item*/
    end

    XSFKS01(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

  if (converseVar.eventKey is enter) /* Enter pressed*/

    FK0MW-REQUEST-DATA-SW = "N";
    FK0MW-FORMAT-MAP-SW = "Y";

  end

end // end FK0M-1600

// Process Add map
Function FK0M-2000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FK0M-2100(); /* Obtain the data to display*/

  FK0M-2200(); /* Format and display the map*/

  FK0M-2300(); /* Check attention identifier*/

  FK0M-2400(); /* Reset fields to normal intensity*/

  FK0M-2500(); /* Verify the entered data*/

  FK0M-2600(); /* Process valid input request*/


end // end FK0M-2000

// Obtain data to display
Function FK0M-2100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/

  if (FK0MW00.FK0MW-REQUEST-DATA-SW != "Y" /* data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/

    return; /* Return to previous process*/

  end

  set FK0MW01 empty; /* Initialize display storage*/

   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/

  FK0MW00.FK0MW-VMUSGE01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0MW00.FK0MW-VMATRL01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0MW00.FK0MW-VSYCLR01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0MW00.FK0MW-VSYDVL01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0MW00.FK0MW-VSYCLR01-COPY-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0MW00.FK0MW-VSYDVL01-COPY-FOUND-SW = "N"; /* Init found sw to 'n'*/

  if (FK0MM210.SY1STNBR != "  ") /* If style nbr on map*/

    FK0M-2110(); /* Lookup color style*/
                                 /* (DPRODG.VSYCLR01)*/

    if (FK0MW00.FK0MW-VSYCLR01-FOUND-SW == "Y") /* Style color found*/

      FK0MW01.SY1STNBR = PG2REC.SY1STNBR; /* Style number*/
      FK0MW01.SY2CLRID = PG2REC.SY2CLRID; /* Style color*/
      FK0MW01.XDMCD = PG2REC.XDMCD; /* Dimension*/
      FK0MW01.SY1SSTNM = PG2REC.SY1SSTNM; /* Short style name*/

    else

      FK0M-2111(); /* Lookup Development product style*/
                                 /* (DPRODG.VSYDVL01)*/

      if (FK0MW00.FK0MW-VSYDVL01-FOUND-SW == "Y") /* Style color found*/

        FK0MW01.SY1STNBR = PG4REC.PG4STNBR; /* Style number*/

        if (FK0MM210.SY2CLRID == " ")
          FK0MW01.SY2CLRID = "000"; /* Color id*/
        else
          FK0MW01.SY2CLRID = FK0MM210.SY2CLRID; /* Color id*/
        end

        FK0MW01.XDMCD = " "; /* Dimension code*/

        FK0MW01.SY1SSTNM = PG4REC.SY1SSTNM; /* Short style name*/

      end

    end

  end

  if (FK0MM210.FK0MM-COPY-STYLE != "  ") /* If style nbr on map*/

    FK0M-2112(); /* Lookup color style*/
                                 /* (DPRODG.VSYCLR01)*/

    if (FK0MW00.FK0MW-VSYCLR01-COPY-FOUND-SW == "Y") /* Style color found*/

      FK0MW01.FK0MW-COPY-STYLE = PG2REC.SY1STNBR; /* Style*/
      FK0MW01.FK0MW-COPY-COLOR = PG2REC.SY2CLRID; /* Color*/
      FK0MW01.FK0MW-COPY-DIM = PG2REC.XDMCD; /* Dimension*/

    else

      FK0M-2113(); /* Lookup Development product style*/
                                 /* (DPRODG.VSYDVL01)*/
      if (FK0MW00.FK0MW-VSYDVL01-COPY-FOUND-SW == "Y") /* Style color*/

        FK0MW01.FK0MW-COPY-STYLE = PG4REC.PG4STNBR;

        if (FK0MM210.FK0MM-COPY-COLOR > " ")
          FK0MW01.FK0MW-COPY-COLOR = FK0MM210.FK0MM-COPY-COLOR;
        else
          FK0MW01.FK0MW-COPY-COLOR = " ";
        end

        FK0MW01.FK0MW-COPY-DIM = " ";

      end

    end

  end

   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0)
    return;
  end

   /* --------------------------------------------------------------*/
   /* If requested, obtain copy data*/
   /* --------------------------------------------------------------*/

  if (FK0MW00.FK0MW-COPY-DATA-SW == "Y") /* If copying data*/

    if (FK0MW00.FK0MW-VMUSGE01-FOUND-SW == "Y") /* If matl usage found*/
      converseLib.validationFailed(40);
      FKWREC.XXX-MOD-ID = "2100"; /* Module identification*/
      return;
    end

     /* --------------------------------------------------------------*/
     /* Open and read in the first Material Usage record.*/
     /* --------------------------------------------------------------*/

    FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW = "Y"; /* 1st record read*/
    FK0MW00.FK0MW-VMUSGE01-EOF-SW = "N"; /* Set end of file sw*/
    FK0MW00.FK0MW-VMUSGE01-FOUND-SW = "N"; /* Set found switch*/
    FK0MW00.FK0MW-IDX = 1; /* Reset display line index*/

    FK0M-2120(); /* Open Material Usage file*/
                                     /* (DCMPNT.VMUSGE01)*/

    FK0M-2121(); /* Read next record*/
                                     /* (DCMPNT.VMUSGE01)*/

      /* --------------------------------------------------------------*/
      /* Loop and read Material records until Material Usage end of file*/
      /* --------------------------------------------------------------*/

    while (FK0MW00.FK0MW-VMUSGE01-EOF-SW != "Y" /* If color code on map*/
     && FK0MW00.FK0MW-IDX <= 13) /* Line count 13 or less*/

      FK0M-2130(); /* Open the material table*/
                                     /* (DCMPNT.VMATRL01)*/
      FK0M-2131(); /* Read in the material data*/
                                     /* (DCMPNT.VMATRL01)*/
      FK0M-2135(); /* Close the material table*/
                                     /* (DCMPNT.VMATRL01)*/
      FK0M-2140(); /* Get thickness description*/
                                     /* (XMTTBL)*/
      FK0M-2150(); /* Calculate Yield*/

      FK0MW00.FK0MW-IDX = FK0MW-IDX + 1; /* Increment index*/

      FK0M-2121(); /* Read next record*/
                                     /* (DCMPNT.VMUSGE01)*/

    end

     /* --------------------------------------------------------------*/
     /* Close Material Cursor*/
     /* --------------------------------------------------------------*/

    FK0M-2125(); /* Close Material Usage file*/
                                     /* (DCMPNT.VMUSGE01)*/
  end

   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0)
    return;
  end

   /* --------------------------------------------------------------*/
   /* If data was copied, display message stating data was obtained.*/
   /* --------------------------------------------------------------*/

  if (FK0MW00.FK0MW-COPY-DATA-SW == "Y") /* If usage copied*/

    FKWREC.XXXMSGNO = 39; /* Copy data displayed*/
    FKWREC.XXX-MOD-ID = "2100"; /* Module Id*/

  end

   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/

  FK0MW00.FK0MW-REQUEST-DATA-SW = "N";
  FK0MW00.FK0MW-FORMAT-MAP-SW = "Y";

end // end FK0M-2100

// Select color (DPRODG.VSYCLR01)
Function FK0M-2110()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/

  set PG2REC empty;

  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = FK0MM210.SY1STNBR; /* Style number*/
  PG2REC.SY2CLRID = FK0MM210.SY2CLRID; /* Color id*/
  PG2REC.XDMCD = FK0MM210.XDMCD; /* Dimension code*/

   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW00.FK0MW-VSYCLR01-FOUND-SW = "Y";

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2110"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2110 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2110

// Select style (DPRODG.VSYDVL01)
Function FK0M-2111()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  PG4REC.PG4STNBR = FK0MM210.SY1STNBR; /* Style number*/

  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW00.FK0MW-VSYDVL01-FOUND-SW = "Y";

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/

      FKWREC.XXX-MOD-ID = "2111"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      FK0MW00.FK0MW-FORMAT-MAP-SW = "N";
      set FK0MM210.SY1STNBR cursor, bold;
      set FK0MM210.SY2CLRID bold;
      set FK0MM210.XDMCD bold;

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2111"; /* Module identification*/

  FK0MW00.FK0MW-REQUEST-DATA-SW = "N"; /* Set data switch*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2111 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM111"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2111

// Select color (DPRODG.VSYCLR01)
Function FK0M-2112()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/

  set PG2REC empty;

  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = FK0MM210.FK0MM-COPY-STYLE; /* Style number*/
  PG2REC.SY2CLRID = FK0MM210.FK0MM-COPY-COLOR; /* Color id*/
  PG2REC.XDMCD = FK0MM210.FK0MM-COPY-DIM; /* Dimension code*/

   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW00.FK0MW-VSYCLR01-COPY-FOUND-SW = "Y";

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2112"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2112 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2112

// Select style (DPRODG.VSYDVL01)
Function FK0M-2113()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  PG4REC.PG4STNBR = FK0MM210.FK0MM-COPY-STYLE; /* Style number*/

  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW00.FK0MW-VSYDVL01-COPY-FOUND-SW = "Y";

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FKWREC.XXX-MOD-ID = "2113"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      FK0MW00.FK0MW-FORMAT-MAP-SW = "N";
      set FK0MM210.FK0MM-COPY-STYLE cursor, bold;
      set FK0MM210.FK0MM-COPY-COLOR bold;
      set FK0MM210.FK0MM-COPY-DIM bold;

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2113"; /* Module identification*/

  FK0MW00.FK0MW-REQUEST-DATA-SW = "N"; /* Set data switch*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2111 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM111"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2113

// Open DCMPNT.VMUSGE01
Function FK0M-2120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  set VMUSGE01 empty;

  if (FK0MW00.FK0MW-COPY-DATA-SW == "Y"
  )
    VMUSGE01.SY1STNBR = FK0MW01.FK0MW-COPY-STYLE; /* Style number*/
    VMUSGE01.SY2CLRID = FK0MW01.FK0MW-COPY-COLOR; /* Color*/
    VMUSGE01.XDMCD = FK0MW01.FK0MW-COPY-DIM; /* Dimension*/

  else

    VMUSGE01.SY1STNBR = FK0MW01.SY1STNBR; /* Style number*/
    VMUSGE01.SY2CLRID = FK0MW01.SY2CLRID; /* Color id*/
    VMUSGE01.XDMCD = FK0MW01.XDMCD; /* Dimension code*/

  end

  try
    call "IO6240" ("S1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2120"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2120 GET MATRL USAGE DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2120

// Read next DCMPNT.VMUSGE01
Function FK0M-2121()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the vmusge01 table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6240" ("N1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW01.FK-MAT-NBR[FK0MW-IDX] = VMUSGE01.FK-MAT-NBR;
      FK0MW01.XMG-COLR-GRP-CD[FK0MW-IDX] = VMUSGE01.XMG-COLR-GRP-CD;
      FK0MW01.XCLCD[FK0MW-IDX] = VMUSGE01.XCLCD;
      FK0MW01.FK-MAT-DEVL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-DEVL-USE;
      FK0MW01.FK-MAT-PROD-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-PROD-USE;
      FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-FINL-USE;
      FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX] = VMUSGE01.FK-MAT-WAST-PCT;
      FK0MW01.FK-MAT-MFG-PCT[FK0MW-IDX] = VMUSGE01.FK-MAT-MFG-PCT;

      /* ------------------------------------------------------------*/
      /* Move only the first manufacturing % found into working storage*/
      /* ------------------------------------------------------------*/

      FK0MW01.FK-MAT-MFG-PCT = VMUSGE01.FK-MAT-MFG-PCT;

      FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW = "N";

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/

      FK0MW00.FK0MW-VMUSGE01-EOF-SW = "Y"; /* End of file*/

      if (FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW == "Y") /* First record*/

        if (FK0MW00.FK0MW-COPY-DATA-SW == "Y")

          converseLib.validationFailed(18);
          FKWREC.XXX-MOD-ID = "2121";
          set FK0MM210.FK0MM-COPY-STYLE bold, cursor;
          set FK0MM210.FK0MM-COPY-COLOR bold;
          set FK0MM210.FK0MM-COPY-DIM bold;

        else

          converseLib.validationFailed(18);
          FKWREC.XXX-MOD-ID = "2121";
          set FK0MM210.SY1STNBR bold, cursor;
          set FK0MM210.SY2CLRID bold;
          set FK0MM210.XDMCD bold;

        end

      end

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2121"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2121 READ MTRL USAGE DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2121

// Close DCMPNT.VMUSGE01
Function FK0M-2125()
   /* ------------------------------------------------------------*/
   /* Close the VMUSEG01 table.*/
   /* ------------------------------------------------------------*/

  set VMUSGE01 empty;

  try
    call "IO6240" ("C1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2125"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2125 CLOSE MTRL USAGE TABLE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2125

// Open DCMPNT.VMATRL01
Function FK0M-2130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  set VMATRL01 empty;

  VMATRL01.FK-MAT-NBR = VMUSGE01.FK-MAT-NBR; /* material nbr*/
  VMATRL01.FK-VEND-CD = "*"; /* Vendor code*/

  try
    call "IO6190" ("S2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2130"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2130 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2130

// Read DCMPNT.VMATRL01
Function FK0M-2131()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6190" ("N2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW01.FK-VEND-CD[FK0MW-IDX] = VMATRL01.FK-VEND-CD;
      FK0MW01.FK-MAT-NBR[FK0MW-IDX] = VMATRL01.FK-MAT-NBR;
      FK0MW01.FK-DEPT-MAT-DESC[FK0MW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
      FK0MW01.XTM-MAT-THCK-CD[FK0MW-IDX] = VMATRL01.XTM-MAT-THCK-CD;

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2131"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2131 READ NEXT MATERIAL  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2131

// Close DCMPNT.VMATRL01
Function FK0M-2135()
   /* ------------------------------------------------------------*/
   /* Close the Material table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6190" ("C2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2135"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2135 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2135

// Read XTMTBL For THCK DESC
Function FK0M-2140()
   /* ------------------------------------------------------------*/
   /* Read CSP Corporate table for thickness description*/
   /* ------------------------------------------------------------*/

  if (VMATRL01.XTM-MAT-THCK-CD in XTMTBL.XTM-MAT-THCK-CD
   && XTMTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status is active*/

    FK0MW01.XTM-MAT-THCK-DESC[FK0MW-IDX] = XTMTBL.XTM-MAT-THCK-DESC[sysVar.arrayIndex];
  else

    FK0MW01.XTM-MAT-THCK-DESC[FK0MW-IDX] = "*******";
  end


end // end FK0M-2140

// Calculate yield
Function FK0M-2150()
   /* ------------------------------------------------------------------*/
   /* Calculate the yield for each line item*/
   /* ------------------------------------------------------------------*/

  if (FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] != 0)

    FK0MW01.FK0MW-PF-IND[FK0MW-IDX] = "F";
    FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-FINL-USE;

  else

    if (FK0MW01.FK-MAT-PROD-USE[FK0MW-IDX] != 0)

      FK0MW01.FK0MW-PF-IND[FK0MW-IDX] = "P";
      FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-PROD-USE;

    else
      FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-DEVL-USE;
    end

  end

   /* ------------------------------------------------------------------*/
   /* Yield calculation*/
   /* ------------------------------------------------------------------*/

  FK0MW01.FK0MW-YIELD[FK0MW-IDX] = FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] -   FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] *   FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX];

end // end FK0M-2150

// Format and converse ADD map
Function FK0M-2200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end

   /* ------------------------------------------------------------*/
   /* If requested, and no error format data to display.*/
   /* ------------------------------------------------------------*/

  if (FK0MW00.FK0MW-FORMAT-MAP-SW == "Y" /* Format map requested*/
   && converseVar.validationMsgNum == 0) /* No errors found*/

    if (FK0MW00.FK0MW-COPY-DATA-SW == "N") /* If not copying data*/

      FK0M-2210(); /* Format the map*/

    else

      FK0M-2220(); /* Format the map*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FK0MM210.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FK0MM210.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0MM210.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a key field was entered, and no data was found, allow*/
   /* fields to be open for input; otherwise protect the fields.*/
   /* ***** If no data was found using the copy function protect*/
   /* ***** the fields.*/
   /* ------------------------------------------------------------*/

  if (FK0MW00.FK0MW-VMUSGE01-FOUND-SW == "N") /* No DCMPNT.VMUSGE01 rec found*/
    if (FK0MW00.FK0MW-COPY-DATA-SW == "N") /* and not copying data*/

        /* Next sentence*/

    else

      if (FK0MM210.SY1STNBR != " " /* style not entered*/
       && FK0MM210.SY2CLRID != " " 
       && FK0MM210.XDMCD != " ")  

        if (converseVar.validationMsgNum == 0)

          set FK0MM210.SY1STNBR skip; /* Protect sytle*/
          set FK0MM210.SY2CLRID skip; /* Protect color*/
          set FK0MM210.XDMCD skip; /* Protect dimension*/
          set FK0MM210.FK0MM-COPY-STYLE cursor; /* Set cursor*/

        end

        FK0MW00.FK0MW-IDX = 1; /* Reset index*/

        while (FK0MW00.FK0MW-IDX <= 13) /* Protect fields*/

          set FK0MM210.FK-MAT-NBR[FK0MW-IDX] skip;
          set FK0MM210.FK-VEND-CD[FK0MW-IDX] skip;
          set FK0MM210.FK-DEPT-MAT-DESC[FK0MW-IDX] skip;
          set FK0MM210.XCLCD[FK0MW-IDX] skip;
          set FK0MM210.XTM-MAT-THCK-CD[FK0MW-IDX] skip;
          set FK0MM210.XTM-MAT-THCK-DESC[FK0MW-IDX] skip;
          set FK0MM210.FK-MAT-FINL-USE[FK0MW-IDX] skip;
          set FK0MM210.FK0MM-PF-IND[FK0MW-IDX] skip;
          set FK0MM210.FK-MAT-WAST-PCT[FK0MW-IDX] skip;
          set FK0MM210.FK0MM-YIELD[FK0MW-IDX] skip;

          FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Index*/

        end

      end

    end

  else

    if (FK0MW00.FK0MW-COPY-DATA-SW == "Y") /* Copying data*/

      set FK0MM210.SY1STNBR normal;
      set FK0MM210.SY2CLRID normal;
      set FK0MM210.XDMCD normal;

      if (converseVar.validationMsgNum == 0) /* No error found*/

        FK0MW00.FK0MW-IDX = 1; /* Reset index*/

        while (FK0MW00.FK0MW-IDX <= 13) /* Protect fields*/

          set FK0MM210.FK-MAT-NBR[FK0MW-IDX] skip;
          set FK0MM210.FK-VEND-CD[FK0MW-IDX] skip;
          set FK0MM210.FK-DEPT-MAT-DESC[FK0MW-IDX] skip;
          set FK0MM210.XCLCD[FK0MW-IDX] skip;
          set FK0MM210.XTM-MAT-THCK-CD[FK0MW-IDX] skip;
          set FK0MM210.XTM-MAT-THCK-DESC[FK0MW-IDX] skip;
          set FK0MM210.FK-MAT-FINL-USE[FK0MW-IDX] skip;
          set FK0MM210.FK0MM-PF-IND[FK0MW-IDX] skip;
          set FK0MM210.FK-MAT-WAST-PCT[FK0MW-IDX] skip;
          set FK0MM210.FK0MM-YIELD[FK0MW-IDX] skip;

          FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment index*/

        end

      end

    end

  end

   /* ------------------------------------------------------------*/
   /* If a message passed from another application, display it*/
   /* ------------------------------------------------------------*/

  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (FKWREC.XXXMSGNO != 0) /* Message to display*/

      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0MM210.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    FK0MM210.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/

    set FK0MM210 alarm; /* Indicate sound alarm*/

  end

   /* ------------------------------------------------------------*/
   /* Establish cursor position*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0 /* No errors found*/
   || FKWREC.XXXMSGNO == 1)             /* Update complete*/

    set FK0MM210.SY1STNBR cursor;

  end


  converse FK0MM210 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = FK0MM210.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0MM210.CAITEM; /* Application data*/


end // end FK0M-2200

// Format the display data
Function FK0M-2210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set FK0MM210 initial; /* M210 input/output area*/

  FK0MW00.FK0MW-FORMAT-MAP-SW = "N"; /* Format the map switch*/

   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/

  if (FK0MW01.SY1STNBR <= " ") /* Style not present*/
    set FK0MM210.SY1STNBR cursor; /* Position cursor*/
  end

  FK0MM210.SY1STNBR = FK0MW01.SY1STNBR; /* Style number*/
  FK0MM210.SY2CLRID = FK0MW01.SY2CLRID; /* Color id*/
  FK0MM210.XDMCD = FK0MW01.XDMCD; /* Dimension code*/
  FK0MM210.FK-MAT-MFG-PCT = FK0MW01.FK-MAT-MFG-PCT;
  FK0MM210.SY1SSTNM = FK0MW01.SY1SSTNM; /* Style short name*/

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13) /* Until screen is full*/

    FK0MM210.FK-VEND-CD[FK0MW-IDX] = FK0MW01.FK-VEND-CD[FK0MW-IDX];
    FK0MM210.FK-MAT-NBR[FK0MW-IDX] = FK0MW01.FK-MAT-NBR[FK0MW-IDX];
    FK0MM210.FK-DEPT-MAT-DESC[FK0MW-IDX] = FK0MW01.FK-DEPT-MAT-DESC[FK0MW-IDX];
    FK0MM210.XCLCD[FK0MW-IDX] = FK0MW01.XCLCD[FK0MW-IDX];
    FK0MM210.XTM-MAT-THCK-CD[FK0MW-IDX] = FK0MW01.XTM-MAT-THCK-CD[FK0MW-IDX];
    FK0MM210.XTM-MAT-THCK-DESC[FK0MW-IDX] = FK0MW01.XTM-MAT-THCK-DESC[FK0MW-IDX];
    FK0MM210.FK-MAT-FINL-USE[FK0MW-IDX] = FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX];
    FK0MM210.FK0MM-PF-IND[FK0MW-IDX] = FK0MW01.FK0MW-PF-IND[FK0MW-IDX];
    FK0MM210.FK-MAT-WAST-PCT[FK0MW-IDX] = FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX];
    FK0MM210.FK0MM-YIELD[FK0MW-IDX] = FK0MW01.FK0MW-YIELD[FK0MW-IDX];

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/

  end

end // end FK0M-2210

// Format data for copy from
Function FK0M-2220()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set FK0MM210 initial; /* m110 input/output area*/

  FK0MW00.FK0MW-FORMAT-MAP-SW = "N"; /* Format the map switch*/

   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/

  if (FK0MW01.SY1STNBR <= " ") /* Style not present*/
    set FK0MM210.SY1STNBR cursor; /* Position cursor*/
  end

  FK0MM210.SY1STNBR = FK0MW01.SY1STNBR; /* Style number*/
  FK0MM210.SY2CLRID = FK0MW01.SY2CLRID; /* Color id*/
  FK0MM210.XDMCD = FK0MW01.XDMCD; /* Dimension code*/
  FK0MM210.FK-MAT-MFG-PCT = FK0MW01.FK-MAT-MFG-PCT;
  FK0MM210.SY1SSTNM = FK0MW01.SY1SSTNM; /* Style short name*/

  FK0MM210.FK0MM-COPY-STYLE = FK0MW01.FK0MW-COPY-STYLE;
  FK0MM210.FK0MM-COPY-COLOR = FK0MW01.FK0MW-COPY-COLOR;
  FK0MM210.FK0MM-COPY-DIM = FK0MW01.FK0MW-COPY-DIM;

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13) /* Until screen is full*/

    FK0MM210.FK-VEND-CD[FK0MW-IDX] = FK0MW01.FK-VEND-CD[FK0MW-IDX];
    FK0MM210.FK-MAT-NBR[FK0MW-IDX] = FK0MW01.FK-MAT-NBR[FK0MW-IDX];
    FK0MM210.FK-DEPT-MAT-DESC[FK0MW-IDX] = FK0MW01.FK-DEPT-MAT-DESC[FK0MW-IDX];
    FK0MM210.XCLCD[FK0MW-IDX] = FK0MW01.XCLCD[FK0MW-IDX];
    FK0MM210.XTM-MAT-THCK-CD[FK0MW-IDX] = FK0MW01.XTM-MAT-THCK-CD[FK0MW-IDX];
    FK0MM210.XTM-MAT-THCK-DESC[FK0MW-IDX] = FK0MW01.XTM-MAT-THCK-DESC[FK0MW-IDX];
    FK0MM210.FK-MAT-FINL-USE[FK0MW-IDX] = FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX];
    FK0MM210.FK0MM-PF-IND[FK0MW-IDX] = FK0MW01.FK0MW-PF-IND[FK0MW-IDX];
    FK0MM210.FK-MAT-WAST-PCT[FK0MW-IDX] = FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX];
    FK0MM210.FK0MM-YIELD[FK0MW-IDX] = FK0MW01.FK0MW-YIELD[FK0MW-IDX];

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/

  end

end // end FK0M-2220

// Check attention identifier
Function FK0M-2300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set FKWREC empty;
    FKWREC.SY1STNBR[1] = FK0MW01.SY1STNBR;
    FKWREC.SY2CLRID[1] = FK0MW01.SY2CLRID;
    FKWREC.XDMCD[1] = FK0MW01.XDMCD;

    COMMAREA.CATOAP = "FK0M"; /* to applicaiton*/
    COMMAREA.CAITEM = "A"; /* item*/

    XSFKS01(); /* Exit to another application*/

    set FK0MM210.CATOAP cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (FK0MM210.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set FKWREC empty;

      FKWREC.SY1STNBR[1] = FK0MW01.SY1STNBR;
      FKWREC.SY2CLRID[1] = FK0MW01.SY2CLRID;
      FKWREC.XDMCD[1] = FK0MW01.XDMCD;

      COMMAREA.CATOAP = FK0MM210.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0MM210.CAITEM; /* item*/

      XSFKS01(); /* Exit to another application*/

      set FK0MM210.CATOAP cursor, bold; /* Highlight*/

    else

      FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* FK0E requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf14 /* FK0G requested*/
   || converseVar.eventKey is pf14 /* FK0H requested*/
   || converseVar.eventKey is pf19) /* FK0Q requested*/

    set FKWREC empty;
    FKWREC.SY1STNBR[1] = FK0MW01.SY1STNBR;
    FKWREC.SY2CLRID[1] = FK0MW01.SY2CLRID;
    FKWREC.XDMCD[1] = FK0MW01.XDMCD;

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0MM210"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = FK0MM210.CAITEM; /* item*/
    end

    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0MM210.CAITEM; /* item*/
    end

    if (converseVar.eventKey is pf12) /* PF12 was pressed*/

      COMMAREA.CATOAP = "FK0E"; /* TO application*/
      COMMAREA.CAITEM = FK0MM210.CAITEM; /* item*/
    end

    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0F"; /* TO application*/
      COMMAREA.CAITEM = FK0MM210.CAITEM; /* item*/
    end

    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0G"; /* TO application*/
      COMMAREA.CAITEM = FK0MM210.CAITEM; /* item*/
    end

    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* TO application*/
      COMMAREA.CAITEM = FK0MM210.CAITEM; /* item*/
    end

    if (converseVar.eventKey is pf19) /* PF19 was pressed*/
      COMMAREA.CATOAP = "FK0Q"; /* TO application*/
      COMMAREA.CAITEM = FK0MM210.CAITEM; /* item*/
    end

    XSFKS01(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6)  /* NXTPRD requested*/

    FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    exit stack; /* Exit to display map*/

  end


end // end FK0M-2300

// Reset highlighted fields
Function FK0M-2400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to defined intensity.*/
   /* ------------------------------------------------------------*/

  set FK0MM210.SY1STNBR initialAttributes; /* Style number*/
  set FK0MM210.SY2CLRID initialAttributes; /* Color id*/
  set FK0MM210.XDMCD initialAttributes; /* Dimension code*/

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13 /* Until end of lines*/
   && FK0MM210.SY1STNBR > " ") /* or end of display*/

    if (FK0MW00.FK0MW-COPY-DATA-SW == "Y")

      set FK0MM210.FK-VEND-CD[FK0MW-IDX] protect; /* Vendor code*/
      set FK0MM210.FK-MAT-NBR[FK0MW-IDX] protect; /* Material number*/
      set FK0MM210.FK-DEPT-MAT-DESC[FK0MW-IDX] protect; /* Description*/
      set FK0MM210.XCLCD[FK0MW-IDX] protect; /* Matrl color code*/
      set FK0MM210.XTM-MAT-THCK-CD[FK0MW-IDX] protect; /* Thickness code*/
      set FK0MM210.XTM-MAT-THCK-DESC[FK0MW-IDX] protect; /* Thckness desc*/
      set FK0MM210.FK-MAT-FINL-USE[FK0MW-IDX] protect; /* Usage*/
      set FK0MM210.FK0MM-PF-IND[FK0MW-IDX] protect; /* P-F indicator*/
      set FK0MM210.FK-MAT-WAST-PCT[FK0MW-IDX] protect; /* Waste percent*/
      set FK0MM210.FK0MM-YIELD[FK0MW-IDX] protect; /* Yield*/

    else

      set FK0MM210.FK-VEND-CD[FK0MW-IDX] initialAttributes; /* Vendor code*/
      set FK0MM210.FK-MAT-NBR[FK0MW-IDX] initialAttributes; /* Material number*/
      set FK0MM210.FK-DEPT-MAT-DESC[FK0MW-IDX] initialAttributes; /* Description*/
      set FK0MM210.XCLCD[FK0MW-IDX] initialAttributes; /* Matrl color code*/
      set FK0MM210.XTM-MAT-THCK-CD[FK0MW-IDX] initialAttributes; /* Thickness code*/
      set FK0MM210.XTM-MAT-THCK-DESC[FK0MW-IDX] initialAttributes; /* Thkness desc*/
      set FK0MM210.FK-MAT-FINL-USE[FK0MW-IDX] initialAttributes; /* Usage*/
      set FK0MM210.FK0MM-PF-IND[FK0MW-IDX] initialAttributes; /* P-F indicator*/
      set FK0MM210.FK-MAT-WAST-PCT[FK0MW-IDX] initialAttributes; /* Waste percent*/
      set FK0MM210.FK0MM-YIELD[FK0MW-IDX] initialAttributes; /* Yield*/

    end

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/

  end

  set FK0MM210.CATOAP initialAttributes; /* TO application*/
  set FK0MM210.CAITEM initialAttributes; /* Application data*/

end // end FK0M-2400

// Verify data that was entered
Function FK0M-2500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (FK0MM210.CAITEM > " ") /* Application data was entered*/
    set FK0MM210.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
  end

   /* -----------------------------------------------------------------*/
   /* If NXTPRD (PF6) entered, increment index*/
   /* -----------------------------------------------------------------*/

  if (converseVar.eventKey is pf6) /* Next Style requested*/

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-NXTPRD-IDX + 1;

    if (FK0MW00.FK0MW-IDX > 15 /* If on last fkwrec record*/
     || FKWREC.SY1STNBR[FK0MW-IDX] == " ") /* /or no more data*/

      set FK0MM210.SY1STNBR cursor; /* Reset cursor*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(49); /* No more styles to display*/
      exit stack;
    end

    return; /* Exit edit section -- we want*/
                                          /* next product*/
  end

   /* -----------------------------------------------------------------*/
   /* Check to see if any copy data has been entered.  If it has*/
   /* verify the copy data.*/
   /* -----------------------------------------------------------------*/

  if (FK0MM210.FK0MM-COPY-STYLE != " " /* Copy key entered*/
   || FK0MM210.FK0MM-COPY-COLOR != " " 
   || FK0MM210.FK0MM-COPY-DIM != " ") 

    FK0M-2510(); /* Edit copy key data*/

    FK0M-2520(); /* Edit key data*/

  else

     /* --------------------------------------------------------------*/
     /* Otherwise, if key changed, verify it.*/
     /* --------------------------------------------------------------*/

    if (FK0MW00.FK0MW-COPY-DATA-SW == "N") /* Copy not requested*/

      FK0M-2520(); /* Edit key data*/

      FK0M-2530(); /* Edit non-key data*/

    else

      FK0M-2510(); /* Edit copy key data*/

    end

  end

   /* -----------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* -----------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end

   /* -----------------------------------------------------------------*/
   /* Check to see if duplicate row information was added.*/
   /* -----------------------------------------------------------------*/

  FK0MW00.FK0MW-IDX = 13;
  FK0MW00.FK0MW-INDEX = 12;

  while (FK0MW00.FK0MW-IDX > 0)

    if (FK0MM210.FK-MAT-NBR[FK0MW-IDX] == " "
     && FK0MM210.XCLCD[FK0MW-IDX] == " ")

      /* next sentence*/

    else

      while (FK0MW00.FK0MW-INDEX > 0)

        if (FK0MM210.FK-MAT-NBR[FK0MW-IDX] == 
        FK0MM210.FK-MAT-NBR[FK0MW-INDEX]
         && FK0MM210.XCLCD[FK0MW-IDX] == FK0MM210.XCLCD[FK0MW-INDEX])

          converseLib.validationFailed(59);
          FKWREC.XXX-MOD-ID = "2500";
          set FK0MM210.FK-MAT-NBR[FK0MW-IDX] bold;
          set FK0MM210.FK-MAT-NBR[FK0MW-INDEX] bold, cursor;
          set FK0MM210.XCLCD[FK0MW-IDX] bold;
          set FK0MM210.XCLCD[FK0MW-INDEX] bold;

        end

        FK0MW00.FK0MW-INDEX = FK0MW00.FK0MW-INDEX - 1;

      end

    end

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX - 1;
    FK0MW00.FK0MW-INDEX = FK0MW00.FK0MW-IDX - 1;

  end

   /* -----------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* -----------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end

end // end FK0M-2500

// Verify copy key fields
Function FK0M-2510()
   /* ---------------------------------------------------------------*/
   /* Verify the 'copy from' data:*/
   /* ---------------------------------------------------------------*/

  if (FK0MM210.FK0MM-COPY-STYLE == " "
   && FK0MM210.FK0MM-COPY-COLOR == " "
   && FK0MM210.FK0MM-COPY-DIM == " ")

    return;

  end

  if (FK0MM210.FK0MM-COPY-COLOR == " ")

    set FK0MM210.FK0MM-COPY-COLOR cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    converseLib.validationFailed(44); /* Material color missing or invalid*/

  end

  if (FK0MM210.FK0MM-COPY-STYLE == " ")

    set FK0MM210.FK0MM-COPY-STYLE cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    converseLib.validationFailed(43); /* Material color missing or invalid*/

  end

end // end FK0M-2510

// Verify key fields
Function FK0M-2520()
   /* ---------------------------------------------------------------*/
   /* Verify the Style data.*/
   /* ---------------------------------------------------------------*/

  FK0MW00.FK0MW-VSYCLR01-FOUND-SW = "N"; /* Reset switch*/
  FK0MW00.FK0MW-VSYDVL01-FOUND-SW = "N"; /* Reset switch*/

  if (FK0MM210.SY1STNBR <= " ") /* If style is missing*/

    set FK0MM210.SY1STNBR cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
    converseLib.validationFailed(43); /* Style missing or invalid*/

  else

    FK0M-2521(); /* Look up Production style color*/

    if (FK0MW00.FK0MW-VSYCLR01-FOUND-SW == "Y") /* Style color found*/
       /* next sentence*/
    else
      FK0M-2522(); /* Look up Development style*/

      if (FK0MW00.FK0MW-VSYDVL01-FOUND-SW == "Y") /* Style dvl found*/

        if (FK0MM210.XDMCD != " ") /* If dimension not spaces*/

          set FK0MM210.XDMCD cursor, bold; /* Highlight*/
          FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
          converseLib.validationFailed(45); /* Dimension missing or invalid*/
        end
      end
    end

  end

   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map*/
   /* ---------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0)
    exit stack;
  end


end // end FK0M-2520

// Select color (DPRODG.VSYCLR01)
Function FK0M-2521()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/

  set PG2REC empty;

  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = FK0MM210.SY1STNBR; /* Style number*/
  PG2REC.SY2CLRID = FK0MM210.SY2CLRID; /* Color id*/
  PG2REC.XDMCD = FK0MM210.XDMCD; /* Dimension code*/

   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW00.FK0MW-VSYCLR01-FOUND-SW = "Y";

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2521"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2521 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2521

// Select style (DPRODG.VSYDVL01)
Function FK0M-2522()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  PG4REC.PG4STNBR = FK0MM210.SY1STNBR; /* Style number*/

  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW00.FK0MW-VSYDVL01-FOUND-SW = "Y";

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/

      FKWREC.XXX-MOD-ID = "2522"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      FK0MW00.FK0MW-FORMAT-MAP-SW = "N";
      set FK0MM210.SY1STNBR cursor, bold;
      set FK0MM210.SY2CLRID bold;
      set FK0MM210.XDMCD bold;

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2522"; /* Module identification*/

  FK0MW00.FK0MW-REQUEST-DATA-SW = "N"; /* Set data switch*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2522 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM111"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2522

// Verify non-key fields
Function FK0M-2530()
   /* ---------------------------------------------------------------*/
   /* Loop through all the rows of the screen editing those that were*/
   /* entered.*/
   /* ---------------------------------------------------------------*/

  FK0MW00.FK0MW-IDX = 13; /* Set index at 13*/
  FK0MW00.FK0MW-ROW-ENTERED-SW = "N"; /* Initialize switch*/

  while (FK0MW00.FK0MW-IDX > 0)

    if (FK0MM210.FK-MAT-NBR[FK0MW-IDX] != " ") /* If material was entered*/

      FK0MW00.FK0MW-ROW-ENTERED-SW = "Y"; /* Row entered*/

      if (FK0MM210.FK-MAT-WAST-PCT[FK0MW-IDX] >= 0)
        if (FK0MM210.FK-MAT-WAST-PCT[FK0MW-IDX] < 1)

              /* Next sentence*/

        else

          set FK0MM210.FK-MAT-WAST-PCT[FK0MW-IDX] cursor, bold;
          FKWREC.XXX-MOD-ID = "2530";
          converseLib.validationFailed(55);

        end

      else

        set FK0MM210.FK-MAT-WAST-PCT[FK0MW-IDX] cursor, bold;
        FKWREC.XXX-MOD-ID = "2530";
        converseLib.validationFailed(8);

      end

      if (FK0MM210.FK0MM-PF-IND[FK0MW-IDX] == "P"
       || FK0MM210.FK0MM-PF-IND[FK0MW-IDX] == "F"
       || FK0MM210.FK0MM-PF-IND[FK0MW-IDX] == " ")

          /* next sentence*/

      else

        set FK0MM210.FK0MM-PF-IND[FK0MW-IDX] cursor, bold;
        FKWREC.XXX-MOD-ID = "2530";
        converseLib.validationFailed(54);

      end

      if (FK0MM210.FK-MAT-FINL-USE[FK0MW-IDX] >= 0) /* Usage entered*/

          /* next sentence*/

      else

        set FK0MM210.FK-MAT-FINL-USE[FK0MW-IDX] cursor, bold;
        FKWREC.XXX-MOD-ID = "2530";
        converseLib.validationFailed(8);

      end

      if (FK0MM210.XCLCD[FK0MW-IDX] in XCLTBL.XCLCD /* If in table*/
       && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active*/

        FK0MW01.XCLCD[FK0MW-IDX] = XCLTBL.XCLCD;

        FK0M-2550(); /* Open Matrl color table*/

        FK0M-2551(); /* Read in Material color*/

        FK0M-2555(); /* Close Matrl color table*/

      else

        set FK0MM210.XCLCD[FK0MW-IDX] cursor, bold;
        FKWREC.XXX-MOD-ID = "2530";
        converseLib.validationFailed(8);

      end

      FK0M-2540(); /* Open Material*/

      FK0M-2541(); /* Read Next Material*/

      FK0M-2545(); /* Close Material*/

    end

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX - 1; /* Decrement the index*/

  end

  if (FK0MW00.FK0MW-ROW-ENTERED-SW == "N")

    converseLib.validationFailed(8); /* Required field*/
    FKWREC.XXX-MOD-ID = "2530"; /* Module id*/
    set FK0MM210.FK-MAT-NBR[1] bold, cursor;
    set FK0MM210.XCLCD[1] bold;
    set FK0MM210.FK-MAT-FINL-USE[1] bold;
    set FK0MM210.FK0MM-PF-IND[1] bold;
    set FK0MM210.FK-MAT-WAST-PCT[1] bold;

  end

end // end FK0M-2530

// Open DCMPNT.VMATRL01
Function FK0M-2540()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  set VMATRL01 empty;

  VMATRL01.FK-MAT-NBR = FK0MM210.FK-MAT-NBR[FK0MW-IDX]; /* MTL Number*/

  try
    call "IO6190" ("S2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2541"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2541 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2540

// Read DCMPNT.VMATRL01
Function FK0M-2541()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6190" ("N2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW01.FK-VEND-CD[FK0MW-IDX] = VMATRL01.FK-VEND-CD;
      FK0MW01.FK-MAT-NBR[FK0MW-IDX] = VMATRL01.FK-MAT-NBR;
      FK0MW01.FK-DEPT-MAT-DESC[FK0MW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
      FK0MW01.XTM-MAT-THCK-CD[FK0MW-IDX] = VMATRL01.XTM-MAT-THCK-CD;

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/

      converseLib.validationFailed(26); /* Invalid material number*/
      FKWREC.XXX-MOD-ID = "2541"; /* Module id*/
      set FK0MM210.FK-MAT-NBR[FK0MW-IDX] bold, cursor;

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2541"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2541 READ NEXT MATERIAL  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2541

// Close DCMPNT.VMATRL01
Function FK0M-2545()
   /* ------------------------------------------------------------*/
   /* Close the Material table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6190" ("C2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2545"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2545 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2545

// Open DCMPNT.VMCOLR01
Function FK0M-2550()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  set VMCOLR01 empty;

  VMCOLR01.FK-MAT-NBR = FK0MM210.FK-MAT-NBR[FK0MW-IDX]; /* MTL Number*/
  VMCOLR01.XCLCD = FK0MM210.XCLCD[FK0MW-IDX]; /* MTL Number*/

  try
    call "IO6210" ("S2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2550"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2550 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2550

// Open DCMPNT.VMCOLR01
Function FK0M-2551()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6210" ("N2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW01.XMG-COLR-GRP-CD[FK0MW-IDX] = VMCOLR01.XMG-COLR-GRP-CD;
      FK0MW01.XCLCD[FK0MW-IDX] = VMCOLR01.XCLCD;

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/

      set FK0MM210.XCLCD[FK0MW-IDX] bold, cursor;
      FKWREC.XXX-MOD-ID = "2551";
      converseLib.validationFailed(8); /* not a valid color code*/
      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2551"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2551 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2551

// Close DCMPNT.VMATRL01
Function FK0M-2555()
   /* ------------------------------------------------------------*/
   /* Close the Material table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6210" ("C2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2555"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2555 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2555

// Process valid input request
Function FK0M-2600()
   /* ------------------------------------------------------------*/
   /* If NXTPRD (PF6) requested, obtain the next product to display*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf6) /* Next Style*/

    FK0MW00.FK0MW-NXTPRD-IDX = FK0MW00.FK0MW-NXTPRD-IDX + 1; /* Increment*/

    FK0MM210.SY1STNBR = FKWREC.SY1STNBR[FK0MW-NXTPRD-IDX]; /* Style number*/
    FK0MM210.SY2CLRID = FKWREC.SY2CLRID[FK0MW-NXTPRD-IDX]; /* Color id*/
    FK0MM210.XDMCD = FKWREC.XDMCD[FK0MW-NXTPRD-IDX]; /* Dimension Code*/

    FK0MW00.FK0MW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* Default color code for style development products.*/
   /* ------------------------------------------------------------*/

  if (FK0MM210.XDMCD == " ") /* Style dvl project*/

    if (FK0MM210.SY2CLRID == "   ") /* If color blank*/
      FK0MM210.SY2CLRID = "000"; /* default*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Check to see if copy key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (FK0MM210.FK0MM-COPY-STYLE != FK0MW01.FK0MW-COPY-STYLE
   || FK0MM210.FK0MM-COPY-COLOR != FK0MW01.FK0MW-COPY-COLOR
   || FK0MM210.FK0MM-COPY-DIM != FK0MW01.FK0MW-COPY-DIM)

    if (FK0MM210.FK0MM-COPY-STYLE == " ")

      set FK0MW01 empty;
      set FK0MM210 initial;

      FK0MW00.FK0MW-COPY-DATA-SW = "N";
      FK0MW00.FK0MW-VMUSGE01-FOUND-SW = "N";
      FK0MW00.FK0MW-FORMAT-MAP-SW = "Y";
      FK0MW00.FK0MW-REQUEST-DATA-SW = "Y";

      FK0MM210.SY1STNBR = FK0MW01.SY1STNBR;
      FK0MM210.SY2CLRID = FK0MW01.SY2CLRID;
      FK0MM210.XDMCD = FK0MW01.XDMCD;

      return;

    else

      FK0MW00.FK0MW-COPY-DATA-SW = "Y"; /* Copy data*/
      FK0MW00.FK0MW-REQUEST-DATA-SW = "Y"; /* Request data*/

      return;

    end

  else

    if (FK0MM210.FK0MM-COPY-STYLE == " "
     && FK0MM210.FK0MM-COPY-COLOR == " "
     && FK0MM210.FK0MM-COPY-DIM == " ")

      FK0MW00.FK0MW-COPY-DATA-SW = "N";
      FK0MW00.FK0MW-VMUSGE01-FOUND-SW = "N";
    end

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display.*/
   /* ------------------------------------------------------------*/

  FK0MW00.FK0MW-FORMAT-MAP-SW = "Y"; /* Format the map switch*/

   /* ------------------------------------------------------------*/
   /* If the search key was changed, save the search information.*/
   /* ------------------------------------------------------------*/

  if (FK0MW00.FK0MW-COPY-DATA-SW == "Y") /* Copy data entered*/

    if (FK0MM210.SY1STNBR != FK0MW01.SY1STNBR /* Style nubmer changed*/
     || FK0MM210.SY2CLRID != FK0MW01.SY2CLRID /* Color id changed*/
     || FK0MM210.XDMCD != FK0MW01.XDMCD)      /* Dimension changed*/



       /* ------------------------------------------------------------*/
        /* If a search key was entered, request the data to display.*/
        /* Otherwise, purge any existing pages from temporary storage.*/
       /* ------------------------------------------------------------*/

      if (FK0MM210.SY1STNBR > " ") /* Style number was entered*/

        FK0MW00.FK0MW-REQUEST-DATA-SW = "Y"; /* Request for data*/

      else

        FK0MW00.FK0MW-REQUEST-DATA-SW = "N"; /* Request for data*/

      end

      return;

    end
  end

   /* ------------------------------------------------------------*/
   /* Check to see if data needs to be added.  If it does, add the*/
   /* data to the tables.*/
   /* ------------------------------------------------------------*/

  FK0MW00.FK0MW-UPDT-PERFORMED-SW = "N"; /* Update performed switch*/
  FK0MW00.FK0MW-IDX = 13; /* Reset index*/

  XX0XS01(); /* Get date and time*/

   /* ------------------------------------------------------------*/
   /* If no data found for dcmpnt.vmusge01, add record to table*/
   /* ------------------------------------------------------------*/

  if (FK0MW00.FK0MW-VMUSGE01-FOUND-SW == "N") /* If usage data not loaded*/

    while (FK0MW00.FK0MW-IDX > 0)

      if (FK0MM210.FK-MAT-NBR[FK0MW-IDX] > " ")

        FK0M-2650(); /* Check for duplicate usage record*/

      end

      FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX - 1; /* Increment index*/

    end

    if (converseVar.validationMsgNum != 0) /* Check for errors*/
      exit stack;
    end

    FK0MW00.FK0MW-IDX = 1;

    while (FK0MW00.FK0MW-IDX <= 13)

      if (FK0MM210.FK-MAT-NBR[FK0MW-IDX] > " ")

        FK0M-2610(); /* Set up record to be inserted*/

        if (converseVar.validationMsgNum != 0) /* Check for errors*/
          exit stack;
        end

        FK0M-2630(); /* Insert record into DCMPNT.VMUSGE01*/

      end

      FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment index*/

    end

  else
    if (FK0MW00.FK0MW-COPY-DATA-SW == "Y")

      set FK0MM210.FK0MM-COPY-STYLE bold, cursor;
      set FK0MM210.FK0MM-COPY-COLOR bold;
      set FK0MM210.FK0MM-COPY-DIM bold;
      converseLib.validationFailed(16); /* key already exists*/
      FKWREC.XXX-MOD-ID = "2600";

      return;

    end
  end

   /* ------------------------------------------------------------*/
   /* If update occurred, clear working storage and clear out map.*/
   /* Send successful update message.*/
   /* ------------------------------------------------------------*/

  if (FK0MW00.FK0MW-UPDT-PERFORMED-SW == "Y") /* Update performed switch*/

    set FK0MW01 empty;

    FK0MW01.SY1STNBR = FK0MM210.SY1STNBR;
    FK0MW01.SY2CLRID = FK0MM210.SY2CLRID;
    FK0MW01.XDMCD = FK0MM210.XDMCD;

    set FK0MM210 initial;

    FK0MM210.SY1STNBR = FK0MW01.SY1STNBR; /**/
    FK0MM210.SY2CLRID = FK0MW01.SY2CLRID; /**/
    FK0MM210.XDMCD = FK0MW01.XDMCD; /**/

    FK0MW00.FK0MW-COPY-DATA-SW = "N"; /* Copy data switch*/
    FK0MM210.FK0MM-COPY-STYLE = " "; /* Init copy style*/
    FK0MM210.FK0MM-COPY-COLOR = " "; /* Init copy color*/
    FK0MM210.FK0MM-COPY-DIM = " "; /* Init copy dimension*/
    FK0MW00.FK0MW-FORMAT-MAP-SW = "Y"; /* Format map switch*/
    FK0MW00.FK0MW-REQUEST-DATA-SW = "Y"; /* Request data switch*/
    FKWREC.XXX-MOD-ID = "2600"; /* Module id*/
    FKWREC.XXXMSGNO = 1; /* Update completed*/

  end

   /* ------------------------------------------------------------*/
   /* Save the select fields and clear the map input/output area.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1  /* Help requested*/
   || converseVar.eventKey is pf3  /* Exit requested*/
   || converseVar.eventKey is pf4  /* Master menu*/
   || converseVar.eventKey is pf12 /* FK0E requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf14) /* FK0G requested*/

     /* ------------------------------------------------------------*/
      /* Update the modifiable data in the COMMAREA.*/
     /* ------------------------------------------------------------*/

    set FKWREC empty;

    FKWREC.SY1STNBR[1] = FK0MM210.SY1STNBR; /* Style number*/
    FKWREC.SY2CLRID[1] = FK0MM210.SY2CLRID; /* Color id*/
    FKWREC.XDMCD[1] = FK0MM210.XDMCD; /* Dimension code*/

    XSFKS01(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

end // end FK0M-2600

// Set up record for insertion
Function FK0M-2610()
   /* ---------------------------------------------------------------------*/
   /* If an existing manufacturing percent exists for the style, color, dim*/
   /* use it as the default, otherwise if development found move 000 to*/
   /* percent or if production found move 1 to percent.*/
   /* ---------------------------------------------------------------------*/

  FK0MW00.FK0MW-VMUSGE01-FOUND-SW = "N";

  FK0M-2620(); /* Declare cursor DCMPNT.VMUSGE01*/

  FK0M-2621(); /* Read in record from*/
                                        /* (DCMPNT.VMUSGE01)*/
  FK0M-2625(); /* Close cursor*/

  if (FK0MW00.FK0MW-VMUSGE01-FOUND-SW == "Y")
    FK0MW01.FK-MAT-MFG-PCT = VMUSGE01.FK-MAT-MFG-PCT;
  else
    if (FK0MW00.FK0MW-VSYDVL01-FOUND-SW == "Y")
      if (FK0MM210.SY2CLRID == "000")
        FK0MW01.FK-MAT-MFG-PCT = 1;
      else
        FK0MW01.FK-MAT-MFG-PCT = 0;
      end
    else
      FK0MW01.FK-MAT-MFG-PCT = 1;
    end
  end

   /* ------------------------------------------------------------*/
   /* Set up the record for insertion into VMUSGE01 table*/
   /* ------------------------------------------------------------*/

  set VMUSGE01 empty; /* Initialize record*/

  VMUSGE01.SY1STNBR = FK0MM210.SY1STNBR;
  VMUSGE01.SY2CLRID = FK0MM210.SY2CLRID;
  VMUSGE01.XDMCD = FK0MM210.XDMCD;
  VMUSGE01.FK-MAT-NBR = FK0MM210.FK-MAT-NBR[FK0MW-IDX]; /* Material*/
  VMUSGE01.XMG-COLR-GRP-CD = FK0MW01.XMG-COLR-GRP-CD[FK0MW-IDX];
  VMUSGE01.XCLCD = FK0MM210.XCLCD[FK0MW-IDX]; /* Color Code*/
  VMUSGE01.FK-MAT-WAST-PCT = FK0MM210.FK-MAT-WAST-PCT[FK0MW-IDX];
  VMUSGE01.FK-MAT-MFG-PCT = FK0MW01.FK-MAT-MFG-PCT;

  if (FK0MM210.FK0MM-PF-IND[FK0MW-IDX] == "P")
    VMUSGE01.FK-MAT-PROD-USE = FK0MM210.FK-MAT-FINL-USE[FK0MW-IDX];
    VMUSGE01.FK-MAT-PROD-USE-DT = XX0XW01.XX0XWDAT;
  else
    if (FK0MM210.FK0MM-PF-IND[FK0MW-IDX] == "F")
      VMUSGE01.FK-MAT-FINL-USE = FK0MM210.FK-MAT-FINL-USE[FK0MW-IDX];
      VMUSGE01.FK-MAT-FINL-USE-DT = XX0XW01.XX0XWDAT;
    else
      VMUSGE01.FK-MAT-DEVL-USE = FK0MM210.FK-MAT-FINL-USE[FK0MW-IDX];
      VMUSGE01.FK-MAT-DEVL-USE-DT = XX0XW01.XX0XWDAT;
    end
  end

  VMUSGE01.ZZZSDT = XX0XW01.XX0XWDAT; /* Setup date*/
  VMUSGE01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VMUSGE01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VMUSGE01.ZZZCHGCT = 0; /* Change count*/

end // end FK0M-2610

// Open DCMPNT.VMUSGE01
Function FK0M-2620()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  set VMUSGE01 empty;

  VMUSGE01.SY1STNBR = FK0MM210.SY1STNBR; /* Style number*/
  VMUSGE01.SY2CLRID = FK0MM210.SY2CLRID; /* Color*/
  VMUSGE01.XDMCD = FK0MM210.XDMCD; /* Dimension*/

  try
    call "IO6240" ("S1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2620"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2620 GET MTRL USAGE DATA ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2620

// Read DCMPNT.VMATRL01
Function FK0M-2621()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6240" ("N1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW00.FK0MW-VMUSGE01-FOUND-SW = "Y";

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/

      FK0MW00.FK0MW-VMUSGE01-FOUND-SW = "N";

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2621"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2621 READ NEXT MTL USAGE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2621

// Close DCMPNT.VMATRL01
Function FK0M-2625()
   /* ------------------------------------------------------------*/
   /* Close the Material table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6240" ("C1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2625"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2625 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2625

// Add DCMPNT.VMUSGE01
Function FK0M-2630()
   /* ------------------------------------------------------------*/
   /* Add the requested row to the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6240" ("A ", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW00.FK0MW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/

      return;
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback changes*/

  FKWREC.XXX-MOD-ID = "2630"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2630 ADD DCMPNT.VMUSGE01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-2630

// Check duplicate VMUSGE01
Function FK0M-2650()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  set VMUSGE01 empty;

  VMUSGE01.SY1STNBR = FK0MM210.SY1STNBR; /* Style number*/

  if (FK0MM210.SY2CLRID == " ") /* Color id*/
    VMUSGE01.SY2CLRID = "000";
  else
    VMUSGE01.SY2CLRID = FK0MM210.SY2CLRID; /* Color id*/
  end

  VMUSGE01.XDMCD = FK0MM210.XDMCD; /* Dimension code*/

  VMUSGE01.FK-MAT-NBR = FK0MM210.FK-MAT-NBR[FK0MW-IDX];
  VMUSGE01.XMG-COLR-GRP-CD = FK0MW01.XMG-COLR-GRP-CD[FK0MW-IDX];
  VMUSGE01.XCLCD = FK0MM210.XCLCD[FK0MW-IDX];

  try
    call "IO6240" ("S ", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      return; /* Return to previous process*/
    end

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FK0MW00.FK0MW-VMUSGE01-FOUND-SW = "Y";
      FK0MW00.FK0MW-REQUEST-DATA-SW = "N";
      VMUSGE01.SY1STNBR = FK0MW01.SY1STNBR; /* Reset*/

      if (FK0MW00.FK0MW-COPY-DATA-SW == "Y")

        set FK0MM210.FK-VEND-CD[FK0MW-IDX] bold, protect;
        set FK0MM210.FK-MAT-NBR[FK0MW-IDX] bold, protect;
        set FK0MM210.FK-DEPT-MAT-DESC[FK0MW-IDX] bold, protect;
        set FK0MM210.XCLCD[FK0MW-IDX] bold, protect;
        set FK0MM210.XTM-MAT-THCK-CD[FK0MW-IDX] bold, protect;
        set FK0MM210.XTM-MAT-THCK-DESC[FK0MW-IDX] bold, protect;
        set FK0MM210.FK-MAT-FINL-USE[FK0MW-IDX] bold, protect;
        set FK0MM210.FK0MM-PF-IND[FK0MW-IDX] bold, protect;
        set FK0MM210.FK-MAT-WAST-PCT[FK0MW-IDX] bold, protect;
        set FK0MM210.FK0MM-YIELD[FK0MW-IDX] bold, protect;
        converseLib.validationFailed(16); /* Key already exists*/
        FKWREC.XXX-MOD-ID = "2650"; /* Module identification*/
        return;

      else

        set FK0MM210.FK-MAT-NBR[FK0MW-IDX] bold, cursor;
        set FK0MM210.XCLCD[FK0MW-IDX] bold;
        set FK0MM210.FK-MAT-FINL-USE[FK0MW-IDX] bold;
        set FK0MM210.FK0MM-PF-IND[FK0MW-IDX] bold;
        set FK0MM210.FK-MAT-WAST-PCT[FK0MW-IDX] bold;
        converseLib.validationFailed(16); /* Key already exists*/
        FKWREC.XXX-MOD-ID = "2650"; /* Module identification*/
        return;

      end

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "2650"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2650 CHECK DUPLICATE VMUSGE01   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM210"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.SY1STNBR; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  VMUSGE01.VMUSGE01-GROUP = FK0MW01.SY1STNBR; /* Reset*/

  exit stack; /* Exit to display map*/


end // end FK0M-2650

// Process Change map
Function FK0M-3000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FK0M-3100(); /* Obtain the data to display*/

  FK0M-3200(); /* Format and display the map*/

  FK0M-3300(); /* Check attention identifier*/

  FK0M-3400(); /* Reset fields to normal intensity*/

  FK0M-3500(); /* Verify the entered data*/

  FK0M-3600(); /* Process valid input request*/


end // end FK0M-3000

// Obtain data to display
Function FK0M-3100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/

  if (FK0MW00.FK0MW-REQUEST-DATA-SW != "Y" /* data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/

  set FK0MW01 empty; /* Initialize display storage*/

  FK0MW01.SY1STNBR = FK0MM310.SY1STNBR; /* Style*/
  FK0MW01.SY2CLRID = FK0MM310.SY2CLRID; /* Color id*/
  FK0MW01.XDMCD = FK0MM310.XDMCD; /* Dimension*/

   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/

  FK0MW00.FK0MW-VMUSGE01-EOF-SW = "N"; /* Init found sw to 'n'*/

  if (FK0MM310.SY1STNBR != "  ") /* If style nbr on map*/

    FK0M-3110(); /* Lookup color style*/
                                 /* (DPRODG.VSYCLR01)*/
                                 /* (DPRODG.VSYDVL01)*/
  end

   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0)
    return;
  end

   /* --------------------------------------------------------------*/
   /* Open and read in the first Material Usage record.*/
   /* --------------------------------------------------------------*/

  FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW = "Y"; /* First record read switch*/
  FK0MW00.FK0MW-VMUSGE01-EOF-SW = "N"; /* Set end of file switch*/
  FK0MW00.FK0MW-IDX = 1; /* Reset display line index*/

  FK0M-3120(); /* Open Material Usage file*/
                                  /* (DCMPNT.VMUSGE01)*/

  FK0M-3121(); /* Read next record*/
                                  /* (DCMPNT.VMUSGE01)*/
   /* --------------------------------------------------------------*/
   /* Loop and read Material records until Material Usage end of file*/
   /* --------------------------------------------------------------*/

  while (FK0MW00.FK0MW-IDX <= 13 /* Line count 13 or less*/
   && FK0MW00.FK0MW-VMUSGE01-EOF-SW != "Y") /* If color code on map*/

    FK0M-3130(); /* Open the material table*/
                                  /* (DCMPNT.VMATRL01)*/
    FK0M-3131(); /* Read in the material data*/
                                  /* (DCMPNT.VMATRL01)*/
    FK0M-3135(); /* Close the material table*/
                                  /* (DCMPNT.VMATRL01)*/
    FK0M-3140(); /* Get thickness description*/
                                  /* (XMTTBL)*/
    FK0M-3150(); /* Save information in working storage*/

    FK0M-3160(); /* Calculate Yield*/

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment index*/

    if (FK0MW00.FK0MW-IDX <= 13)

      FK0M-3121(); /* Read next record*/
                                     /* (DCMPNT.VMUSGE01)*/
    end

  end

   /* --------------------------------------------------------------*/
   /* Close Material Cursor*/
   /* --------------------------------------------------------------*/

  FK0M-3125(); /* Close Material Usage file*/
                                  /* (DCMPNT.VMUSGE01)*/

   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/

  FK0MW00.FK0MW-REQUEST-DATA-SW = "N";
  FK0MW00.FK0MW-FORMAT-MAP-SW = "Y";

end // end FK0M-3100

// Select color (DPRODG.VSYCLR01)
Function FK0M-3110()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/

  set PG2REC empty;

  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = FK0MM310.SY1STNBR; /* Style number*/
  PG2REC.SY2CLRID = FK0MM310.SY2CLRID; /* Color id*/
  PG2REC.XDMCD = FK0MM310.XDMCD; /* Dimension code*/

   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW01.SY1STNBR = PG2REC.SY1STNBR; /* Style number*/
      FK0MW01.SY2CLRID = PG2REC.SY2CLRID; /* Color id*/
      FK0MW01.XDMCD = PG2REC.XDMCD; /* Dimension code*/
      FK0MW01.SY1SSTNM = PG2REC.SY1SSTNM; /* short style name*/
      FK0MW00.FK0MW-VSYCLR01-FOUND-SW = "Y"; /* Product was found*/

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/

      FK0MW00.FK0MW-VSYCLR01-FOUND-SW = "N"; /* Product not found*/
      FK0M-3111();

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "3110"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3110 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM310"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-3110

// Select style (DPRODG.VSYDVL01)
Function FK0M-3111()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  PG4REC.PG4STNBR = FK0MM310.SY1STNBR; /* Style number*/

  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW01.SY1STNBR = PG4REC.PG4STNBR; /* Style number*/

      if (FK0MM310.SY2CLRID == " ")
        FK0MW01.SY2CLRID = "000"; /* Style color*/
      else
        FK0MW01.SY2CLRID = FK0MM310.SY2CLRID; /* Style color*/
      end

      FK0MW01.XDMCD = " "; /* Dimension code*/

      FK0MW01.SY1SSTNM = PG4REC.SY1SSTNM; /* Short name*/

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FKWREC.XXX-MOD-ID = "3111"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      FK0MW00.FK0MW-FORMAT-MAP-SW = "N";
      set FK0MM310.SY1STNBR cursor, bold;
      set FK0MM310.SY2CLRID bold;
      set FK0MM310.XDMCD bold;

      return;

    end


  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "3111"; /* Module identification*/

  FK0MW00.FK0MW-REQUEST-DATA-SW = "N"; /* Set data switch*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3111 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM111"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-3111

// Open DCMPNT.VMUSGE01
Function FK0M-3120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  set VMUSGE01 empty;

  VMUSGE01.SY1STNBR = FK0MW01.SY1STNBR; /* Style number*/
  VMUSGE01.SY2CLRID = FK0MW01.SY2CLRID; /* Color id*/
  VMUSGE01.XDMCD = FK0MW01.XDMCD; /* Dimension code*/

  try
    call "IO6240" ("S1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "3120"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3120 GET MATRL USAGE DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-3120

// Read next DCMPNT.VMUSGE01
Function FK0M-3121()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the vmusge01 table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6240" ("N1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW01.FK-MAT-NBR[FK0MW-IDX] = VMUSGE01.FK-MAT-NBR;
      FK0MW01.XMG-COLR-GRP-CD[FK0MW-IDX] = VMUSGE01.XMG-COLR-GRP-CD;
      FK0MW01.XCLCD[FK0MW-IDX] = VMUSGE01.XCLCD;
      FK0MW01.FK-MAT-DEVL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-DEVL-USE;
      FK0MW01.FK-MAT-PROD-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-PROD-USE;
      FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-FINL-USE;
      FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX] = VMUSGE01.FK-MAT-WAST-PCT;

      /* ------------------------------------------------------------*/
      /* Move only the first manufacturing % found into working storage*/
      /* ------------------------------------------------------------*/

      if (FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW == "Y")

        FK0MW01.FK-MAT-MFG-PCT = VMUSGE01.FK-MAT-MFG-PCT;
        FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW = "N";

      end

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/

      FK0MW00.FK0MW-VMUSGE01-EOF-SW = "Y"; /* End of file*/

      if (FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW == "Y") /* First record*/

        converseLib.validationFailed(18);
        FKWREC.XXX-MOD-ID = "3121";
        set FK0MM310.SY1STNBR bold, cursor;
        set FK0MM310.SY2CLRID bold;
        set FK0MM310.XDMCD bold;

      end

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "3121"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3121 READ MTRL USAGE DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-3121

// Close DCMPNT.VMUSGE01
Function FK0M-3125()
   /* ------------------------------------------------------------*/
   /* Close the VMUSEG01 table.*/
   /* ------------------------------------------------------------*/

  set VMUSGE01 empty;

  try
    call "IO6240" ("C1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "3125"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3125 CLOSE MTRL USAGE TABLE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-3125

// Open DCMPNT.VMATRL01
Function FK0M-3130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  set VMATRL01 empty;

  VMATRL01.FK-MAT-NBR = VMUSGE01.FK-MAT-NBR; /* material nbr*/
  VMATRL01.FK-VEND-CD = "*"; /* Vendor code*/

  try
    call "IO6190" ("S2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "3130"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3130 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-3130

// Read DCMPNT.VMATRL01
Function FK0M-3131()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6190" ("N2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW01.FK-VEND-CD[FK0MW-IDX] = VMATRL01.FK-VEND-CD;
      FK0MW01.FK-MAT-NBR[FK0MW-IDX] = VMATRL01.FK-MAT-NBR;
      FK0MW01.FK-DEPT-MAT-DESC[FK0MW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
      FK0MW01.XTM-MAT-THCK-CD[FK0MW-IDX] = VMATRL01.XTM-MAT-THCK-CD;

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "3131"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3131 READ NEXT MATERIAL  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-3131

// Close DCMPNT.VMATRL01
Function FK0M-3135()
   /* ------------------------------------------------------------*/
   /* Close the Material table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6190" ("C2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "3135"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3135 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-3135

// Read XTMTBL For THCK DESC
Function FK0M-3140()
   /* ------------------------------------------------------------*/
   /* Read CSP Corporate table for thickness description*/
   /* ------------------------------------------------------------*/

  if (VMATRL01.XTM-MAT-THCK-CD in XTMTBL.XTM-MAT-THCK-CD
   && XTMTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status is active*/

    FK0MW01.XTM-MAT-THCK-DESC[FK0MW-IDX] = XTMTBL.XTM-MAT-THCK-DESC[sysVar.arrayIndex];
  else

    FK0MW01.XTM-MAT-THCK-DESC[FK0MW-IDX] = "*******";
  end


end // end FK0M-3140

// save storage
Function FK0M-3150()
   /* ------------------------------------------------------------------*/
   /* Save valid key into working storage*/
   /* ------------------------------------------------------------------*/

  FK0MW01.SY1STNBR = VMUSGE01.SY1STNBR;
  FK0MW01.SY2CLRID = VMUSGE01.SY2CLRID;
  FK0MW01.XDMCD = VMUSGE01.XDMCD;
  FK0MW01.FK-MAT-NBR[FK0MW-IDX] = VMUSGE01.FK-MAT-NBR;
  FK0MW01.XMG-COLR-GRP-CD[FK0MW-IDX] = VMUSGE01.XMG-COLR-GRP-CD;
  FK0MW01.XCLCD[FK0MW-IDX] = VMUSGE01.XCLCD;

  FK0MW01.FK-MAT-DEVL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-DEVL-USE;
  FK0MW01.FK-MAT-DEVL-USE-DT[FK0MW-IDX] = VMUSGE01.FK-MAT-DEVL-USE-DT;
  FK0MW01.FK-MAT-PROD-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-PROD-USE;
  FK0MW01.FK-MAT-PROD-USE-DT[FK0MW-IDX] = VMUSGE01.FK-MAT-PROD-USE-DT;
  FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-FINL-USE;
  FK0MW01.FK-MAT-FINL-USE-DT[FK0MW-IDX] = VMUSGE01.FK-MAT-FINL-USE-DT;

  FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX] = VMUSGE01.FK-MAT-WAST-PCT;
  FK0MW01.FK-MAT-MFG-PCT[FK0MW-IDX] = VMUSGE01.FK-MAT-MFG-PCT;

  if (FK0MW00.FK0MW-VSYCLR01-FOUND-SW == "Y")

    FK0MW01.SY1SSTNM = PG2REC.SY1SSTNM;

  else

    FK0MW01.SY1SSTNM = PG4REC.SY1SSTNM;

  end

  if (FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] != 0)

    FK0MW01.FK0MW-PF-IND[FK0MW-IDX] = "F";
    FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-FINL-USE;

  else

    if (FK0MW01.FK-MAT-PROD-USE[FK0MW-IDX] != 0)

      FK0MW01.FK0MW-PF-IND[FK0MW-IDX] = "P";
      FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-PROD-USE;

    else

      FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-DEVL-USE;
      FK0MW01.FK0MW-PF-IND[FK0MW-IDX] = " ";

    end

  end

  FK0MW01.ZZZSDT[FK0MW-IDX] = VMUSGE01.ZZZSDT;
  FK0MW01.ZZZCHGCT[FK0MW-IDX] = VMUSGE01.ZZZCHGCT;

end // end FK0M-3150

// Calculate yield
Function FK0M-3160()
   /* ------------------------------------------------------------------*/
   /* Yield calculation*/
   /* ------------------------------------------------------------------*/

  FK0MW01.FK0MW-YIELD[FK0MW-IDX] = FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] -   FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] *   FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX];

end // end FK0M-3160

// Format and converse map
Function FK0M-3200()
   /* -------------------------------------------------------------*/
   /* If an error was found, save the error message number*/
   /* -------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

   /* -------------------------------------------------------------*/
   /* If obtain data failed or no error, format data to display*/
   /* -------------------------------------------------------------*/

  if (FK0MW00.FK0MW-REQUEST-DATA-SW == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0)   /* or no error found*/

    if (FK0MW00.FK0MW-FORMAT-MAP-SW == "Y") /* Map must be formatted*/
      FK0M-3210(); /* Format the data on the map*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Protect select fields where no data is present.*/
   /* ------------------------------------------------------------*/

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13) /* Until screen is processed*/

    if (FK0MW01.FK-VEND-CD[FK0MW-IDX] <= " ")
      set FK0MM310.FK0MM-SEL[FK0MW-IDX] invisible, skip;
      set FK0MM310.FK-MAT-FINL-USE[FK0MW-IDX] invisible, skip;
      set FK0MM310.FK0MM-PF-IND[FK0MW-IDX] invisible, skip;
      set FK0MM310.FK-MAT-FINL-USE[FK0MW-IDX] invisible, skip;
      set FK0MM310.FK-MAT-WAST-PCT[FK0MW-IDX] invisible, skip;
      set FK0MM310.FK0MM-YIELD[FK0MW-IDX] invisible, skip;
      FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/
    else
      FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FK0MM310.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FK0MM310.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0MM310.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (FKWREC.XXXMSGNO != 0) /* Message to display*/

      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0MM310.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    FK0MM310.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/

    set FK0MM310 alarm; /* Indicate sound alarm*/

  end

   /* -------------------------------------------------------------*/
   /* Establish cursor position*/
   /* -------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0 /* No errors found*/
   || FKWREC.XXXMSGNO == 1)            

    set FK0MM310.SY1STNBR cursor;

  end

  converse FK0MM310 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = FK0MM310.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0MM310.CAITEM; /* Application data*/

end // end FK0M-3200

// Format the display data
Function FK0M-3210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set FK0MM310 initial; /* m110 input/output area*/

  FK0MW00.FK0MW-FORMAT-MAP-SW = "N"; /* Format the map switch*/

   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/

  if (FK0MW01.SY1STNBR <= " ") /* Style not present*/
    set FK0MM310.SY1STNBR cursor; /* Position cursor*/
  end

  FK0MM310.SY1STNBR = FK0MW01.SY1STNBR; /* Style number*/
  FK0MM310.SY2CLRID = FK0MW01.SY2CLRID; /* Color id*/
  FK0MM310.XDMCD = FK0MW01.XDMCD; /* Dimension code*/
  FK0MM310.FK-MAT-MFG-PCT = FK0MW01.FK-MAT-MFG-PCT;
  FK0MM310.SY1SSTNM = FK0MW01.SY1SSTNM; /* Style short name*/

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13) /* Until screen is full*/


    FK0MM310.FK0MM-SEL[FK0MW-IDX] = FK0MW01.FK0MW-SEL[FK0MW-IDX];
    FK0MM310.FK-VEND-CD[FK0MW-IDX] = FK0MW01.FK-VEND-CD[FK0MW-IDX];
    FK0MM310.FK-MAT-NBR[FK0MW-IDX] = FK0MW01.FK-MAT-NBR[FK0MW-IDX];
    FK0MM310.FK-DEPT-MAT-DESC[FK0MW-IDX] = FK0MW01.FK-DEPT-MAT-DESC[FK0MW-IDX];
    FK0MM310.XCLCD[FK0MW-IDX] = FK0MW01.XCLCD[FK0MW-IDX];
    FK0MM310.XTM-MAT-THCK-CD[FK0MW-IDX] = FK0MW01.XTM-MAT-THCK-CD[FK0MW-IDX];
    FK0MM310.XTM-MAT-THCK-DESC[FK0MW-IDX] = FK0MW01.XTM-MAT-THCK-DESC[FK0MW-IDX];
    FK0MM310.FK-MAT-FINL-USE[FK0MW-IDX] = FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX];
    FK0MM310.FK0MM-PF-IND[FK0MW-IDX] = FK0MW01.FK0MW-PF-IND[FK0MW-IDX];
    FK0MM310.FK-MAT-WAST-PCT[FK0MW-IDX] = FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX];
    FK0MM310.FK0MM-YIELD[FK0MW-IDX] = FK0MW01.FK0MW-YIELD[FK0MW-IDX];

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/

  end

end // end FK0M-3210

// Check attention identifier
Function FK0M-3300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set FKWREC empty; /* Initialize FKWREC*/
    FKWREC.SY1STNBR[1] = FK0MW01.SY1STNBR; /* Style*/
    FKWREC.SY2CLRID[1] = FK0MW01.SY2CLRID; /* Color*/
    FKWREC.XDMCD[1] = FK0MW01.XDMCD; /* Dimension*/

    COMMAREA.CATOAP = "FK0M"; /* to applicaiton*/
    COMMAREA.CAITEM = "C   "; /* item*/

    XSFKS01(); /* Exit to another application*/

    set FK0MM410.CATOAP cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (FK0MM310.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set FKWREC empty; /* Initialize FKWREC*/

      FKWREC.SY1STNBR[1] = FK0MM310.SY1STNBR; /* Style*/
      FKWREC.SY2CLRID[1] = FK0MM310.SY2CLRID; /* Color*/
      FKWREC.XDMCD[1] = FK0MM310.XDMCD; /* Dimension*/

      COMMAREA.CATOAP = FK0MM310.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0MM310.CAITEM; /* item*/

      XSFKS01(); /* Exit to another application*/

      set FK0MM310.CATOAP cursor, bold; /* Highlight*/

    else

      FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0MM310"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = FK0MM310.CAITEM; /* item*/

      XSFKS01(); /* Exit to another application*/

      exit stack; /* Exit to display map*/

    end

    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0MM310.CAITEM; /* item*/

      XSFKS01(); /* Exit to another application*/

      exit stack; /* Exit to display map*/

    end

    return; /* Return*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6   /* NXTSTY requested*/
   && converseVar.eventKey not pf12  /* FK0E requested*/
   && converseVar.eventKey not pf13  /* FK0F requested*/
   && converseVar.eventKey not pf14  /* FK0G requested*/
   && converseVar.eventKey not pf15  /* FK0H requested*/
   && converseVar.eventKey not pf19) /* FK0Q requested*/

    FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end

end // end FK0M-3300

// Reset highlighted fields
Function FK0M-3400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FK0MM310.SY1STNBR initialAttributes; /* Style number*/
  set FK0MM310.SY2CLRID initialAttributes; /* Color id*/
  set FK0MM310.XDMCD initialAttributes; /* Dimension code*/

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13 /* Until end of lines*/
   && FK0MM310.SY1STNBR > " ") /* or end of display*/

    set FK0MM310.FK0MM-SEL[FK0MW-IDX] normal; /* Reset select flag*/
    set FK0MM310.FK-MAT-FINL-USE[FK0MW-IDX] normal;
    set FK0MM310.FK0MM-PF-IND[FK0MW-IDX] normal;
    set FK0MM310.FK-MAT-WAST-PCT[FK0MW-IDX] normal;

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/

  end

  set FK0MM310.CATOAP initialAttributes; /* TO application*/
  set FK0MM310.CAITEM initialAttributes; /* Application data*/

end // end FK0M-3400

// Verify data that was entered
Function FK0M-3500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (FK0MM310.CAITEM > " ") /* Application data was entered*/
    if (converseVar.eventKey is pf12 /* FK0E selected*/
     || converseVar.eventKey is pf13 /* FK0F selected*/
     || converseVar.eventKey is pf14 /* FK0G selected*/
     || converseVar.eventKey is pf15 /* FK0H selected*/
     || converseVar.eventKey is pf19) /* FK0Q selected*/
         /* next sentence*/
    else
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      set FK0MM310.CAITEM cursor, bold; /* Highlight*/
      converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    end
  end

   /* -----------------------------------------------------------------*/
   /* If NXTPRD (PF6) entered, increment the index*/
   /* -----------------------------------------------------------------*/

  if (converseVar.eventKey is pf6) /* Next Style requested*/

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-NXTPRD-IDX + 1;

    if (FK0MW00.FK0MW-IDX > 15 /* If on last fkwrec record*/
     || FKWREC.SY1STNBR[FK0MW-IDX] == " ") /* /or no more data*/

      set FK0MM310.SY1STNBR cursor; /* Reset cursor*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(49); /* No more styles to display*/
      exit stack;
    end

    return; /* Exit edit section -- we want*/
                                          /* next product*/
  end

   /* -----------------------------------------------------------------*/
   /* Check to see if the key has changed, if so set flags and exit*/
   /* -----------------------------------------------------------------*/

  if (FK0MM310.SY1STNBR != FK0MW01.SY1STNBR /* Style number*/
   || FK0MM310.SY2CLRID != FK0MW01.SY2CLRID /* Color id*/
   || FK0MM310.XDMCD != FK0MW01.XDMCD)      /* Dimension*/

    FK0MW00.FK0MW-REQUEST-DATA-SW = "Y";

    exit stack;

  end

   /* -----------------------------------------------------------------*/
   /* Verify that the select fields contain either spaces or 'S';*/
   /* -----------------------------------------------------------------*/

  FK0MW00.FK0MW-IDX = 13; /* Initialize the index*/

  while (FK0MW00.FK0MW-IDX > 0) /* Until end of lines*/

    if (FK0MM310.FK0MM-SEL[FK0MW-IDX] == "S")

        /* --------------------------------------------------------*/
        /* Verify line information*/
        /* --------------------------------------------------------*/

      FK0M-3510();

        /* --------------------------------------------------------*/
        /* Check to see if data was modified*/
        /* --------------------------------------------------------*/

      FK0M-3520();

    else

      if (FK0MM310.FK0MM-SEL[FK0MW-IDX] == " ")

           /* Next sentence*/

      else

        FKWREC.XXX-MOD-ID = "3500"; /* Module id*/
        converseLib.validationFailed(13); /* Only 's' may be entered*/
        set FK0MM310.FK0MM-SEL[FK0MW-IDX] bold, cursor;

      end

        /* -----------------------------------------------------*/
        /* Check to see if row not selected but was modified*/
        /* -----------------------------------------------------*/

      FK0M-3530();

    end

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX - 1; /* Decrement index*/

  end

   /* -----------------------------------------------------------------*/
   /* Verify that a Style was entered*/
   /* -----------------------------------------------------------------*/

  if (converseVar.eventKey is enter)

    if (FK0MM310.SY1STNBR <= " ")

      converseLib.validationFailed(43); /* Required field*/
      set FK0MM310.SY1STNBR cursor, bold;
      FKWREC.XXX-MOD-ID = "3500"; /* Module id*/
      exit stack;

    end

  end

   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end

end // end FK0M-3500

// Verify Detail lines
Function FK0M-3510()
   /* ---------------------------------------------------------------*/
   /* Verify Waste Percent*/
   /* ---------------------------------------------------------------*/

  if (FK0MM310.FK-MAT-WAST-PCT[FK0MW-IDX] < 0
   || FK0MM310.FK-MAT-WAST-PCT[FK0MW-IDX] >= 1)
    converseLib.validationFailed(55); /* Waste % must be gt 0 and lt 1*/
    FKWREC.XXX-MOD-ID = "3510";
    set FK0MM310.FK-MAT-WAST-PCT[FK0MW-IDX] cursor, bold;
  end

   /* ---------------------------------------------------------------*/
   /* Verify P/F Indicator*/
   /* ---------------------------------------------------------------*/

  if (FK0MM310.FK0MM-PF-IND[FK0MW-IDX] == "P"
   || FK0MM310.FK0MM-PF-IND[FK0MW-IDX] == "F"
   || FK0MM310.FK0MM-PF-IND[FK0MW-IDX] == " ")

     /* *//*NEXT SENTENCE*/

  else

    converseLib.validationFailed(54);
    FKWREC.XXX-MOD-ID = "3510";
    set FK0MM310.FK0MM-PF-IND[FK0MW-IDX] bold, cursor;

  end

   /* ---------------------------------------------------------------*/
   /* Verify Usage*/
   /* The Usage may be 0 in change mode.  This is to allow for materials*/
   /* being changed from finl back to prod or devl and zeroing out the*/
   /* usage for finl.*/
   /* ---------------------------------------------------------------*/

  if (FK0MM310.FK-MAT-FINL-USE[FK0MW-IDX] < 0)

    converseLib.validationFailed(8); /* Required field invalid or missing*/
    FKWREC.XXX-MOD-ID = "3510";
    set FK0MM310.FK-MAT-FINL-USE[FK0MW-IDX] bold, cursor;
  end

end // end FK0M-3510

// Verify line changed when Slctd
Function FK0M-3520()
   /* ---------------------------------------------------------------*/
   /* Check to see if the line was changed that was selected.*/
   /* ---------------------------------------------------------------*/

  if (FK0MM310.FK-MAT-FINL-USE[FK0MW-IDX] == 
  FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX]
   && FK0MM310.FK0MM-PF-IND[FK0MW-IDX] == 
  FK0MW01.FK0MW-PF-IND[FK0MW-IDX]
   && FK0MM310.FK-MAT-WAST-PCT[FK0MW-IDX] == 
  FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX])

    converseLib.validationFailed(25); /* No changes made to this row*/
    FKWREC.XXX-MOD-ID = "3520";
    set FK0MM310.FK0MM-SEL[FK0MW-IDX] cursor, bold;
    set FK0MM310.FK-MAT-FINL-USE[FK0MW-IDX] bold;
    set FK0MM310.FK0MM-PF-IND[FK0MW-IDX] bold;
    set FK0MM310.FK-MAT-WAST-PCT[FK0MW-IDX] bold;

  end

end // end FK0M-3520

// Check row if modifed & not "S"
Function FK0M-3530()
   /* ---------------------------------------------------------------*/
   /* Check to see if the line was changed that was not selected.*/
   /* ---------------------------------------------------------------*/

  if (FK0MM310.FK-MAT-FINL-USE[FK0MW-IDX] == 
  FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX]
   && FK0MM310.FK0MM-PF-IND[FK0MW-IDX] == 
  FK0MW01.FK0MW-PF-IND[FK0MW-IDX]
   && FK0MM310.FK-MAT-WAST-PCT[FK0MW-IDX] == 
  FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX])

     /* Next sentence*/

  else

    converseLib.validationFailed(24); /* No changes made to this row*/
    FKWREC.XXX-MOD-ID = "3530";
    set FK0MM310.FK0MM-SEL[FK0MW-IDX] cursor, bold;

  end

end // end FK0M-3530

// Process valid input request
Function FK0M-3600()
   /* ------------------------------------------------------------*/
   /* If NXTPRD (PF6) requested, obtain the next product to display*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf6) /* Next Style*/

    FK0MW00.FK0MW-NXTPRD-IDX = FK0MW00.FK0MW-NXTPRD-IDX + 1; /* Increment*/

    FK0MM310.SY1STNBR = FKWREC.SY1STNBR[FK0MW-NXTPRD-IDX]; /* Style number*/
    FK0MM310.SY2CLRID = FKWREC.SY2CLRID[FK0MW-NXTPRD-IDX]; /* Color id*/
    FK0MM310.XDMCD = FKWREC.XDMCD[FK0MW-NXTPRD-IDX]; /* Dimension Code*/

    FK0MW00.FK0MW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display.*/
   /* ------------------------------------------------------------*/

  FK0MW00.FK0MW-FORMAT-MAP-SW = "Y"; /* Format the map switch*/
  FK0MW00.FK0MW-REQUEST-DATA-SW = "Y"; /* Request for data*/

   /* --------------------------------------------------------------------*/
   /* Get date and time that will be use to time stamp records if updated*/
   /* --------------------------------------------------------------------*/

  XX0XS01();

   /* ------------------------------------------------------------*/
   /* Update the rows if selected to DCMPNT.VMUSGE01 table*/
   /* ------------------------------------------------------------*/

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13) /* Until end of lines*/

    if (FK0MM310.FK0MM-SEL[FK0MW-IDX] == "S")

      FK0M-3610(); /* Set up record for update*/

      if (converseVar.validationMsgNum != 0) /* Check for errors*/

        exit stack;

      end

      FK0M-3630(); /* Update record into DCMPNT.VMUSGE01*/

    end

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1;

  end

   /* ------------------------------------------------------------*/
   /* If update occurred, clear working storage and clear out map.*/
   /* Send successful update message.*/
   /* ------------------------------------------------------------*/

  if (FK0MW00.FK0MW-UPDT-PERFORMED-SW == "Y")

    set FK0MW01 empty;

    FK0MW01.SY1STNBR = FK0MM310.SY1STNBR;
    FK0MW01.SY2CLRID = FK0MM310.SY2CLRID;
    FK0MW01.XDMCD = FK0MM310.XDMCD;

    set FK0MM310 initial;

    FK0MM310.SY1STNBR = FK0MW01.SY1STNBR;
    FK0MM310.SY2CLRID = FK0MW01.SY2CLRID;
    FK0MM310.XDMCD = FK0MW01.XDMCD;

    FK0MW00.FK0MW-FORMAT-MAP-SW = "Y"; /* Format map*/
    FK0MW00.FK0MW-REQUEST-DATA-SW = "Y"; /* REQUEST DATA*/
    FKWREC.XXX-MOD-ID = "3600"; /* Module id*/
    FKWREC.XXXMSGNO = 1; /* Update completed*/

  end

   /* ------------------------------------------------------------*/
   /* If PF key pressed save key info to FKWREC and transfer.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1  /* Help requested*/
   || converseVar.eventKey is pf3  /* Exit requested*/
   || converseVar.eventKey is pf4  /* Master menu*/
   || converseVar.eventKey is pf12 /* FK0E requested*/
   || converseVar.eventKey is pf13 /* FK0F requested*/
   || converseVar.eventKey is pf14 /* FK0G requested*/
   || converseVar.eventKey is pf15 /* FK0H requested*/
   || converseVar.eventKey is pf19) /* FK0Q requested*/

     /* ------------------------------------------------------------*/
      /* Update the modifiable data in the COMMAREA.*/
     /* ------------------------------------------------------------*/

    set FKWREC empty;

    FKWREC.SY1STNBR[1] = FK0MM310.SY1STNBR; /* Style number*/
    FKWREC.SY2CLRID[1] = FK0MM310.SY2CLRID; /* Color id*/
    FKWREC.XDMCD[1] = FK0MM310.XDMCD; /* Dimension code*/

    if (converseVar.eventKey is pf12) /* PF12 Was pressed*/
      COMMAREA.CATOAP = "FK0E"; /* To application*/
      if (FK0MM310.CAITEM == " ")
        COMMAREA.CAITEM = "C"; /* Default function to change*/
      else
        COMMAREA.CAITEM = FK0MM310.CAITEM; /* Item*/
      end
    end

    if (converseVar.eventKey is pf13) /* PF13 Was pressed*/
      COMMAREA.CATOAP = "FK0F"; /* To application*/
      COMMAREA.CAITEM = FK0MM310.CAITEM; /* Item*/
    end

    if (converseVar.eventKey is pf14) /* PF14 Was pressed*/
      COMMAREA.CATOAP = "FK0G"; /* To application*/
      COMMAREA.CAITEM = FK0MM310.CAITEM; /* Item*/
    end

    if (converseVar.eventKey is pf15) /* PF15 Was pressed*/
      COMMAREA.CATOAP = "FK0H"; /* To application*/
      COMMAREA.CAITEM = FK0MM310.CAITEM; /* Item*/
    end

    if (converseVar.eventKey is pf19) /* PF19 Was pressed*/
      COMMAREA.CATOAP = "FK0Q"; /* To application*/
      COMMAREA.CAITEM = FK0MM310.CAITEM; /* Item*/
    end

    XSFKS01(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

end // end FK0M-3600

// Set up record for update
Function FK0M-3610()
   /* ---------------------------------------------------------------------*/
   /* Set up record for update*/
   /* ---------------------------------------------------------------------*/

  set VMUSGE01 empty; /* Initialize record*/

  VMUSGE01.SY1STNBR = FK0MM310.SY1STNBR;
  VMUSGE01.SY2CLRID = FK0MM310.SY2CLRID;
  VMUSGE01.XDMCD = FK0MM310.XDMCD;

  VMUSGE01.FK-MAT-NBR = FK0MM310.FK-MAT-NBR[FK0MW-IDX]; /* Material*/
  VMUSGE01.XMG-COLR-GRP-CD = FK0MW01.XMG-COLR-GRP-CD[FK0MW-IDX];
  VMUSGE01.XCLCD = FK0MM310.XCLCD[FK0MW-IDX]; /* Color Code*/
  VMUSGE01.FK-MAT-WAST-PCT = FK0MM310.FK-MAT-WAST-PCT[FK0MW-IDX];

  if (FK0MM310.FK0MM-PF-IND[FK0MW-IDX] == "P")
    VMUSGE01.FK-MAT-PROD-USE = FK0MM310.FK-MAT-FINL-USE[FK0MW-IDX];
    VMUSGE01.FK-MAT-PROD-USE-DT = XX0XW01.XX0XWDAT;
    VMUSGE01.FK-MAT-DEVL-USE = FK0MW01.FK-MAT-DEVL-USE[FK0MW-IDX];
    VMUSGE01.FK-MAT-DEVL-USE-DT = FK0MW01.FK-MAT-DEVL-USE-DT[FK0MW-IDX];
    VMUSGE01.FK-MAT-FINL-USE-DT = FK0MW01.FK-MAT-FINL-USE-DT[FK0MW-IDX];

  else

    if (FK0MM310.FK0MM-PF-IND[FK0MW-IDX] == "F")

      VMUSGE01.FK-MAT-FINL-USE = FK0MM310.FK-MAT-FINL-USE[FK0MW-IDX];
      VMUSGE01.FK-MAT-FINL-USE-DT = XX0XW01.XX0XWDAT;
      VMUSGE01.FK-MAT-PROD-USE = FK0MW01.FK-MAT-PROD-USE[FK0MW-IDX];
      VMUSGE01.FK-MAT-PROD-USE-DT = FK0MW01.FK-MAT-PROD-USE-DT[FK0MW-IDX];
      VMUSGE01.FK-MAT-DEVL-USE = FK0MW01.FK-MAT-DEVL-USE[FK0MW-IDX];
      VMUSGE01.FK-MAT-DEVL-USE-DT = FK0MW01.FK-MAT-DEVL-USE-DT[FK0MW-IDX];

    else

      VMUSGE01.FK-MAT-DEVL-USE = FK0MM310.FK-MAT-FINL-USE[FK0MW-IDX];
      VMUSGE01.FK-MAT-DEVL-USE-DT = XX0XW01.XX0XWDAT;
      VMUSGE01.FK-MAT-PROD-USE-DT = FK0MW01.FK-MAT-PROD-USE-DT[FK0MW-IDX];
      VMUSGE01.FK-MAT-FINL-USE-DT = FK0MW01.FK-MAT-FINL-USE-DT[FK0MW-IDX];
    end
  end

  VMUSGE01.FK-MAT-MFG-PCT = FK0MW01.FK-MAT-MFG-PCT[FK0MW-IDX];
  VMUSGE01.ZZZSDT = FK0MW01.ZZZSDT[FK0MW-IDX]; /* Setup date*/
  VMUSGE01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VMUSGE01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VMUSGE01.ZZZCHGCT = FK0MW01.ZZZCHGCT[FK0MW-IDX]; /* Change count*/

end // end FK0M-3610

// Update DCMPNT.VMUSGE01
Function FK0M-3630()
   /* ------------------------------------------------------------*/
   /* Add the requested row to the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6240" ("U ", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW00.FK0MW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/

      return;
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback changes*/

  FKWREC.XXX-MOD-ID = "3630"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3630 UPDATE DCMPNT.VMUSGE01  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-3630

// Process Delete map
Function FK0M-4000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FK0M-4100(); /* Obtain the data to display*/

  FK0M-4200(); /* Format and display the map*/

  FK0M-4300(); /* Check attention identifier*/

  FK0M-4400(); /* Reset fields to normal intensity*/

  FK0M-4500(); /* Verify the entered data*/

  FK0M-4600(); /* Process valid input request*/


end // end FK0M-4000

// Obtain data to display
Function FK0M-4100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/

  if (FK0MW00.FK0MW-REQUEST-DATA-SW != "Y" /* data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/

  set FK0MW01 empty; /* Initialize disp storage*/

  FK0MW01.SY1STNBR = FK0MM410.SY1STNBR; /* Style*/
  FK0MW01.SY2CLRID = FK0MM410.SY2CLRID; /* Color id*/
  FK0MW01.XDMCD = FK0MM410.XDMCD; /* Dimension*/


   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/

  FK0MW00.FK0MW-VSYCLR01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0MW00.FK0MW-VSYDVL01-FOUND-SW = "N"; /* Init found sw to 'n'*/

  if (FK0MM410.SY1STNBR != "  ") /* If style nbr on map*/

    FK0M-4110(); /* Lookup color style*/
                                 /* (DPRODG.VSYCLR01)*/
                                 /* (DPRODG.VSYCLR01)*/
  end

   /* --------------------------------------------------------------*/
   /* Check for errors*/
   /* --------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0)
    return;
  end

   /* --------------------------------------------------------------*/
   /* Open and read in the first Material Usage record.*/
   /* --------------------------------------------------------------*/

  FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW = "Y"; /* First record switch*/
  FK0MW00.FK0MW-VMUSGE01-FOUND-SW = "N"; /* Usgage found switch*/
  FK0MW00.FK0MW-VMUSGE01-EOF-SW = "N"; /* Set end of file switch*/
  FK0MW00.FK0MW-IDX = 1; /* Reset display line index*/

  FK0M-4120(); /* Open Material Usage file*/
                                  /* (DCMPNT.VMUSGE01)*/

  FK0M-4121(); /* Read next record*/
                                  /* (DCMPNT.VMUSGE01)*/

   /* --------------------------------------------------------------*/
   /* Loop and read Material records until Material Usage end of file*/
   /* --------------------------------------------------------------*/

  while (FK0MW00.FK0MW-IDX <= 13 /* Line count 13 or less*/
   && FK0MW00.FK0MW-VMUSGE01-EOF-SW != "Y") /* if not end of file*/

    FK0M-4130(); /* Open the material table*/
                                   /* (DCMPNT.VMATRL01)*/
    FK0M-4131(); /* Read in the material data*/
                                   /* (DCMPNT.VMATRL01)*/
    FK0M-4135(); /* Close the material table*/
                                   /* (DCMPNT.VMATRL01)*/
    FK0M-4140(); /* Get thickness description*/
                                   /* (XMTTBL)*/

    FK0M-4160(); /* Save key in working storage*/

    FK0M-4150(); /* Calculate Yield*/

    FK0MW00.FK0MW-IDX = FK0MW-IDX + 1; /* Increment index*/

    FK0M-4121(); /* Read next record*/
                                     /* (DCMPNT.VMUSGE01)*/

  end

   /* --------------------------------------------------------------*/
   /* Close Material Cursor*/
   /* --------------------------------------------------------------*/

  FK0M-4125(); /* Close Material Usage file*/
                                  /* (DCMPNT.VMUSGE01)*/

   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/

  FK0MW00.FK0MW-REQUEST-DATA-SW = "N";
  FK0MW00.FK0MW-FORMAT-MAP-SW = "Y";

end // end FK0M-4100

// Select color (DPRODG.VSYCLR01)
Function FK0M-4110()
   /* ------------------------------------------------------------*/
   /* Set up key*/
   /* ------------------------------------------------------------*/

  set PG2REC empty;

  PG2REC.XGPCD = "02"; /* Group code*/
  PG2REC.SY1STNBR = FK0MM410.SY1STNBR; /* Style number*/
  PG2REC.SY2CLRID = FK0MM410.SY2CLRID; /* Color id*/
  PG2REC.XDMCD = FK0MM410.XDMCD; /* Dimension code*/

   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW00.FK0MW-VSYCLR01-FOUND-SW = "Y";

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Not found*/

      FK0M-4111();

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "1110"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1110 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM410"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-4110

// Select style (DPRODG.VSYDVL01)
Function FK0M-4111()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  PG4REC.PG4STNBR = FK0MM410.SY1STNBR; /* Style number*/

  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW00.FK0MW-VSYDVL01-FOUND-SW = "Y";

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100 /* Normal return code*/
    )                             
      FKWREC.XXX-MOD-ID = "4111"; /* Module*/
      converseLib.validationFailed(43); /* Style not found*/
      FK0MW00.FK0MW-FORMAT-MAP-SW = "N";
      set FK0MM410.SY1STNBR cursor, bold;
      set FK0MM410.SY2CLRID bold;
      set FK0MM410.XDMCD bold;

      return;

    end


  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "4111"; /* Module identification*/

  FK0MW00.FK0MW-REQUEST-DATA-SW = "N"; /* Set data switch*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4111 GET COLOR DATA             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM111"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-4111

// Open DCMPNT.VMUSGE01
Function FK0M-4120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  set VMUSGE01 empty;

  if (FK0MW00.FK0MW-VSYDVL01-FOUND-SW == "Y")
    VMUSGE01.SY1STNBR = FK0MM410.SY1STNBR; /* Style number*/
    if (FK0MM410.SY2CLRID == " ")
      VMUSGE01.SY2CLRID = "000"; /* Color id*/
    else
      VMUSGE01.SY2CLRID = FK0MM410.SY2CLRID; /* Color id*/
    end

    VMUSGE01.XDMCD = " "; /* Dimension code*/

  else

    VMUSGE01.SY1STNBR = FK0MM410.SY1STNBR; /* Style number*/
    VMUSGE01.SY2CLRID = FK0MM410.SY2CLRID; /* Color id*/
    VMUSGE01.XDMCD = FK0MM410.XDMCD; /* Dimension code*/

  end


  try
    call "IO6240" ("S1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "4120"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4120 GET MATRL USAGE DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM410"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-4120

// Read next DCMPNT.VMUSGE01
Function FK0M-4121()
   /* ------------------------------------------------------------*/
   /* Read next requested row from the vmusge01 table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6240" ("N1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW00.FK0MW-VMUSGE01-FOUND-SW = "Y";

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/

      FK0MW00.FK0MW-VMUSGE01-EOF-SW = "Y"; /* End of file*/

      if (FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW == "Y") /* First record*/

        converseLib.validationFailed(18); /* No data found*/
        FKWREC.XXX-MOD-ID = "4121"; /* Module id*/
        set FK0MM410.SY1STNBR bold, cursor;
        set FK0MM410.SY2CLRID bold;
        set FK0MM410.XDMCD bold;

      end

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "4121"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4121 READ MTRL USAGE DATA";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM410"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-4121

// Close DCMPNT.VMUSGE01
Function FK0M-4125()
   /* ------------------------------------------------------------*/
   /* Close the VMUSEG01 table.*/
   /* ------------------------------------------------------------*/

  set VMUSGE01 empty;

  try
    call "IO6240" ("C1", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "4125"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4125 CLOSE MTRL USAGE TABLE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM410"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-4125

// Open DCMPNT.VMATRL01
Function FK0M-4130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  set VMATRL01 empty;

  VMATRL01.FK-MAT-NBR = VMUSGE01.FK-MAT-NBR; /* material nbr*/
  VMATRL01.FK-VEND-CD = "*"; /* Vendor code*/

  try
    call "IO6190" ("S2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "4130"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4130 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM410"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-4130

// Read DCMPNT.VMATRL01
Function FK0M-4131()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6190" ("N2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW01.FK-VEND-CD[FK0MW-IDX] = VMATRL01.FK-VEND-CD;
      FK0MW01.FK-MAT-NBR[FK0MW-IDX] = VMATRL01.FK-MAT-NBR;
      FK0MW01.FK-DEPT-MAT-DESC[FK0MW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
      FK0MW01.XTM-MAT-THCK-CD[FK0MW-IDX] = VMATRL01.XTM-MAT-THCK-CD;

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "4131"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4131 READ NEXT MATERIAL  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM410"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-4131

// Close DCMPNT.VMATRL01
Function FK0M-4135()
   /* ------------------------------------------------------------*/
   /* Close the Material table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO6190" ("C2", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "4135"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4135 GET MATERIAL DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM410"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0M-4135

// Read XTMTBL For THCK DESC
Function FK0M-4140()
   /* ------------------------------------------------------------*/
   /* Read CSP Corporate table for thickness description*/
   /* ------------------------------------------------------------*/

  if (VMATRL01.XTM-MAT-THCK-CD in XTMTBL.XTM-MAT-THCK-CD
   && XTMTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status is active*/

    FK0MW01.XTM-MAT-THCK-DESC[FK0MW-IDX] = XTMTBL.XTM-MAT-THCK-DESC[sysVar.arrayIndex];
  else

    FK0MW01.XTM-MAT-THCK-DESC[FK0MW-IDX] = "*******";
  end


end // end FK0M-4140

// Calculate yield
Function FK0M-4150()
   /* ------------------------------------------------------------------*/
   /* Calculate the yield for each line item*/
   /* ------------------------------------------------------------------*/

  if (VMUSGE01.FK-MAT-FINL-USE != 0)

    FK0MW01.FK0MW-PF-IND[FK0MW-IDX] = "F";
    FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-FINL-USE;

  else

    if (VMUSGE01.FK-MAT-PROD-USE != 0)

      FK0MW01.FK0MW-PF-IND[FK0MW-IDX] = "P";
      FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-PROD-USE;

    else
      FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] = VMUSGE01.FK-MAT-DEVL-USE;
    end

  end

   /* ------------------------------------------------------------------*/
   /* Yield calculation*/
   /* ------------------------------------------------------------------*/

  FK0MW01.FK0MW-YIELD[FK0MW-IDX] = FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] -   FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX] *   FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX];

end // end FK0M-4150

// save storage
Function FK0M-4160()
   /* ------------------------------------------------------------------*/
   /* Save valid key into working storage*/
   /* ------------------------------------------------------------------*/

  FK0MW01.SY1STNBR = VMUSGE01.SY1STNBR;
  FK0MW01.SY2CLRID = VMUSGE01.SY2CLRID;
  FK0MW01.XDMCD = VMUSGE01.XDMCD;

  FK0MW01.FK-MAT-NBR[FK0MW-IDX] = VMUSGE01.FK-MAT-NBR;
  FK0MW01.XCLCD[FK0MW-IDX] = VMUSGE01.XCLCD;
  FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX] = VMUSGE01.FK-MAT-WAST-PCT;
  FK0MW01.XMG-COLR-GRP-CD[FK0MW-IDX] = VMUSGE01.XMG-COLR-GRP-CD;

  if (FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW == "Y") /* MFG Pct to map*/
    FK0MW01.FK-MAT-MFG-PCT = VMUSGE01.FK-MAT-MFG-PCT;
    FK0MW00.FK0MW-VMUSGE01-1ST-REC-SW = "N";
  end

  if (FK0MW00.FK0MW-VSYCLR01-FOUND-SW == "Y")

    FK0MW01.SY1SSTNM = PG2REC.SY1SSTNM;

  else

    FK0MW01.SY1SSTNM = PG4REC.SY1SSTNM;

  end

end // end FK0M-4160

// Format and converse map
Function FK0M-4200()
   /* -------------------------------------------------------------*/
   /* If an error was found, save the error message number*/
   /* -------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

   /* -------------------------------------------------------------*/
   /* If obtain data failed or no error, format data to display*/
   /* -------------------------------------------------------------*/

  if (FK0MW00.FK0MW-REQUEST-DATA-SW == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0)   /* and no error to display*/

    if (FK0MW00.FK0MW-FORMAT-MAP-SW == "Y") /* Map must be formatted*/
      FK0M-4210(); /* Format the data on the map*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Protect select fields where no data is present.*/
   /* ------------------------------------------------------------*/

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13) /* Until screen is processed*/

    if (FK0MW01.FK-VEND-CD[FK0MW-IDX] <= " ")
      set FK0MM410.FK0MM-SEL[FK0MW-IDX] invisible, skip;
      set FK0MM410.FK-MAT-FINL-USE[FK0MW-IDX] invisible, skip;
      set FK0MM410.FK-MAT-WAST-PCT[FK0MW-IDX] invisible, skip;
      set FK0MM410.FK0MM-YIELD[FK0MW-IDX] invisible, skip;
      FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/
    else
      FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FK0MM410.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FK0MM410.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0MM410.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (FKWREC.XXXMSGNO != 0) /* Message to display*/

      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0MM410.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    FK0MM410.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/

    set FK0MM410 alarm; /* Indicate sound alarm*/

  end

   /* -------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* -------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0 /* Error was found*/
   || FKWREC.XXXMSGNO == 1)             /* Update complete*/

    set FK0MM410.SY1STNBR cursor;

  end

  converse FK0MM410 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = FK0MM410.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0MM410.CAITEM; /* Application data*/

end // end FK0M-4200

// Format the display data
Function FK0M-4210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set FK0MM410 initial; /* m110 input/output area*/

  FK0MW00.FK0MW-FORMAT-MAP-SW = "N"; /* Format the map switch*/

   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/

  if (FK0MW01.SY1STNBR <= " ") /* Style not present*/
    set FK0MM410.SY1STNBR cursor; /* Position cursor*/
  end

  FK0MM410.SY1STNBR = FK0MW01.SY1STNBR; /* Style number*/
  FK0MM410.SY2CLRID = FK0MW01.SY2CLRID; /* Color id*/
  FK0MM410.XDMCD = FK0MW01.XDMCD; /* Dimension code*/
  FK0MM410.FK-MAT-MFG-PCT = FK0MW01.FK-MAT-MFG-PCT;
  FK0MM410.SY1SSTNM = FK0MW01.SY1SSTNM; /* Style short name*/

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13) /* Until screen is full*/

    set FK0MM410.FK0MM-SEL[FK0MW-IDX] normal; /* Unprotect*/

    FK0MM410.FK0MM-SEL[FK0MW-IDX] = FK0MW01.FK0MW-SEL[FK0MW-IDX];
    FK0MM410.FK-VEND-CD[FK0MW-IDX] = FK0MW01.FK-VEND-CD[FK0MW-IDX];
    FK0MM410.FK-MAT-NBR[FK0MW-IDX] = FK0MW01.FK-MAT-NBR[FK0MW-IDX];
    FK0MM410.FK-DEPT-MAT-DESC[FK0MW-IDX] = FK0MW01.FK-DEPT-MAT-DESC[FK0MW-IDX];
    FK0MM410.XCLCD[FK0MW-IDX] = FK0MW01.XCLCD[FK0MW-IDX];
    FK0MM410.XTM-MAT-THCK-CD[FK0MW-IDX] = FK0MW01.XTM-MAT-THCK-CD[FK0MW-IDX];
    FK0MM410.XTM-MAT-THCK-DESC[FK0MW-IDX] = FK0MW01.XTM-MAT-THCK-DESC[FK0MW-IDX];
    FK0MM410.FK-MAT-FINL-USE[FK0MW-IDX] = FK0MW01.FK-MAT-FINL-USE[FK0MW-IDX];
    FK0MM410.FK0MM-PF-IND[FK0MW-IDX] = FK0MW01.FK0MW-PF-IND[FK0MW-IDX];
    FK0MM410.FK-MAT-WAST-PCT[FK0MW-IDX] = FK0MW01.FK-MAT-WAST-PCT[FK0MW-IDX];
    FK0MM410.FK0MM-YIELD[FK0MW-IDX] = FK0MW01.FK0MW-YIELD[FK0MW-IDX];

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/

  end

end // end FK0M-4210

// Check attention identifier
Function FK0M-4300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set FKWREC empty; /* Initialize FKWREC*/
    FKWREC.SY1STNBR[1] = FK0MW01.SY1STNBR; /* Style number*/
    FKWREC.SY2CLRID[1] = FK0MW01.SY2CLRID; /* Color id*/
    FKWREC.XDMCD[1] = FK0MW01.XDMCD; /* Dimension code*/

    COMMAREA.CATOAP = "FK0M"; /* to applicaiton*/
    COMMAREA.CAITEM = "D   "; /* item*/

    XSFKS01(); /* Exit to display another application*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (FK0MM410.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set FKWREC empty; /* Initialize FKWREC*/

      FKWREC.SY1STNBR[1] = FK0MM410.SY1STNBR; /* Style number*/
      FKWREC.SY2CLRID[1] = FK0MM410.SY2CLRID; /* Color id*/
      FKWREC.XDMCD[1] = FK0MM410.XDMCD; /* Dimension code*/

      COMMAREA.CATOAP = FK0MM410.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0MM410.CAITEM; /* item*/

      XSFKS01(); /* Exit to another application*/

      set FK0MM410.CATOAP cursor, bold; /* Highlight*/

    else

      FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* MTRL requested FK0E*/
   || converseVar.eventKey is pf13 /* MSTY requested FK0F*/
   || converseVar.eventKey is pf14 /* CONT requested FK0G*/
   || converseVar.eventKey is pf14 /* CLST requested FK0H*/
   || converseVar.eventKey is pf19) /* CONT requested FK0Q*/

    set FKWREC empty; /* Initialize FKWREC*/
    FKWREC.SY1STNBR[1] = FK0MW01.SY1STNBR; /* Style number*/
    FKWREC.SY2CLRID[1] = FK0MW01.SY2CLRID; /* Color id*/
    FKWREC.XDMCD[1] = FK0MW01.XDMCD; /* Dimension code*/


    if (converseVar.eventKey is pf1) /* PF1 was pressed*/

      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0MM410"; /* Application find code*/

    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = FK0MM410.CAITEM; /* item*/

    end

    if (converseVar.eventKey is pf4) /* PF4 was pressed*/

      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0MM410.CAITEM; /* item*/

    end

    if (converseVar.eventKey is pf12) /* PF12 was pressed*/

      COMMAREA.CATOAP = "FK0E"; /* TO application*/
      if (FK0MM410.CAITEM == " ")
        COMMAREA.CAITEM = "C"; /* Default function to change*/
      else
        COMMAREA.CAITEM = FK0MM410.CAITEM; /* item*/
      end

    end

    if (converseVar.eventKey is pf13) /* PF13 was pressed*/

      COMMAREA.CATOAP = "FK0F"; /* TO application*/
      COMMAREA.CAITEM = FK0MM410.CAITEM; /* item*/

    end

    if (converseVar.eventKey is pf14) /* PF14 was pressed*/

      COMMAREA.CATOAP = "FK0G"; /* TO application*/
      COMMAREA.CAITEM = FK0MM410.CAITEM; /* item*/

    end

    if (converseVar.eventKey is pf15) /* PF15 was pressed*/

      COMMAREA.CATOAP = "FK0H"; /* TO application*/
      COMMAREA.CAITEM = FK0MM410.CAITEM; /* item*/

    end

    if (converseVar.eventKey is pf19) /* PF19 was pressed*/

      COMMAREA.CATOAP = "FK0Q"; /* TO application*/
      COMMAREA.CAITEM = FK0MM410.CAITEM; /* item*/

    end

    XSFKS01(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6)  /* NXTSTY requested*/

    FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end

end // end FK0M-4300

// Reset highlighted fields
Function FK0M-4400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FK0MM410.SY1STNBR initialAttributes; /* Style number*/
  set FK0MM410.SY2CLRID initialAttributes; /* Color id*/
  set FK0MM410.XDMCD initialAttributes; /* Dimension code*/

  FK0MW00.FK0MW-IDX = 1; /* Initialize line index*/

  while (FK0MW00.FK0MW-IDX <= 13 /* Until end of lines*/
   && FK0MM410.SY1STNBR > " ") /* or end of display*/

    set FK0MM410.FK0MM-SEL[FK0MW-IDX] normal; /* Reset select flag*/

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment line index*/

  end

  set FK0MM410.CATOAP initialAttributes; /* TO application*/
  set FK0MM410.CAITEM initialAttributes; /* Application data*/

end // end FK0M-4400

// Verify data that was entered
Function FK0M-4500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (FK0MM410.CAITEM > " ") /* Application data was entered*/
    if (converseVar.eventKey is pf12 /* FK0E selected*/
     || converseVar.eventKey is pf13 /* FK0F selected*/
     || converseVar.eventKey is pf14) /* FK0G selected*/
         /* next sentence*/
    else
      FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
      set FK0MM410.CAITEM cursor, bold; /* Highlight*/
      converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    end
  end

   /* -----------------------------------------------------------------*/
   /* If NXTPRD (PF6) entered, verify imension were entered*/
   /* -----------------------------------------------------------------*/

  if (converseVar.eventKey is pf6) /* Next Style requested*/

    FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-NXTPRD-IDX + 1;

    if (FK0MW00.FK0MW-IDX > 15 /* If on last fkwrec record*/
     || FKWREC.SY1STNBR[FK0MW-IDX] == " ") /* /or no more data*/

      set FK0MM410.SY1STNBR cursor; /* Reset cursor*/
      FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
      converseLib.validationFailed(49); /* No more styles to display*/
      exit stack;
    end

    return; /* Exit edit section -- we want*/
                                          /* next product*/
  end

   /* -----------------------------------------------------------------*/
   /* Verify that a Style was entered*/
   /* -----------------------------------------------------------------*/

  if (converseVar.eventKey is enter)

    if (FK0MM410.SY1STNBR <= " ")
      converseLib.validationFailed(43); /* Required field*/
      set FK0MM410.SY1STNBR cursor, bold;
      FKWREC.XXX-MOD-ID = "4500"; /* Module id*/

      exit stack; /* Exit to redisplay map*/

    end

  end

   /* -----------------------------------------------------------------*/
   /* Check to see if the header key information was changed*/
   /* -----------------------------------------------------------------*/

  if (FK0MM410.SY1STNBR != FK0MW01.SY1STNBR
   || FK0MM410.SY2CLRID != FK0MW01.SY2CLRID
   || FK0MM410.XDMCD != FK0MW01.XDMCD)

    FK0MW00.FK0MW-REQUEST-DATA-SW = "Y";

    exit stack;

  end

   /* ------------------------------------------------------------*/
   /* Verify data in the line if screen already formatted*/
   /* ------------------------------------------------------------*/

  if (FK0MW00.FK0MW-FORMAT-MAP-SW == "N")

    FK0MW00.FK0MW-IDX = 13; /* Initialize line index*/

    while (FK0MW00.FK0MW-IDX > 0) /* Until end of lines*/

      if (FK0MM410.FK0MM-SEL[FK0MW-IDX] != FK0MW01.FK0MW-SEL[FK0MW-IDX])

        if (FK0MM410.FK0MM-SEL[FK0MW-IDX] != " " /* Selection not spaces*/
         && FK0MM410.FK0MM-SEL[FK0MW-IDX] != "S") /* or 'S'*/

          FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
          converseLib.validationFailed(13); /* only 'S' may be entered*/
          set FK0MM410.FK0MM-SEL[FK0MW-IDX] cursor, bold;
          FK0MW00.FK0MW-CONFIRM-DELETE-SW = "N";

        else

          FK0MW01.FK0MW-SEL[FK0MW-IDX] = FK0MM410.FK0MM-SEL[FK0MW-IDX];
          FK0MW00.FK0MW-CONFIRM-DELETE-SW = "N";

        end

      end

      FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX - 1; /* Decrement line number*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end

end // end FK0M-4500

// Process valid input request
Function FK0M-4600()
   /* ------------------------------------------------------------*/
   /* If NXTPRD (PF6) requested, obtain the next product to display*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf6) /* Next Style*/

    FK0MW00.FK0MW-NXTPRD-IDX = FK0MW00.FK0MW-NXTPRD-IDX + 1; /* Increment*/

    FK0MM410.SY1STNBR = FKWREC.SY1STNBR[FK0MW-NXTPRD-IDX]; /* Style number*/
    FK0MM410.SY2CLRID = FKWREC.SY2CLRID[FK0MW-NXTPRD-IDX]; /* Color id*/
    FK0MM410.XDMCD = FKWREC.XDMCD[FK0MW-NXTPRD-IDX]; /* Dimension Code*/

    FK0MW00.FK0MW-REQUEST-DATA-SW = "Y"; /* Request data*/

    return; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If any erros were found, exit to display the map*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display the map*/
  end

   /* ------------------------------------------------------------*/
   /* Every delete must be confirmed.  If the confirm delete switch = 'n'*/
   /* set it = 'y' and exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (FK0MW00.FK0MW-CONFIRM-DELETE-SW == "N") /* If delete not confirmed*/

    FK0MW00.FK0MW-IDX = 1; /* Initialize index*/
    FK0MW00.FK0MW-ROW-SELECTED-SW = "N"; /* Initialize switch*/

    while (FK0MW00.FK0MW-IDX <= 13)
      if (FK0MM410.FK0MM-SEL[FK0MW-IDX] == "S")
        FK0MW00.FK0MW-ROW-SELECTED-SW = "Y";
      end
      FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1;
    end

    if (FK0MW00.FK0MW-ROW-SELECTED-SW == "Y") /* Row was selected*/

      FK0MW00.FK0MW-CONFIRM-DELETE-SW = "Y"; /* Confirm it*/
      FKWREC.XXX-MOD-ID = "4600";
      converseLib.validationFailed(38); /* Enter to delete, PA2 to cancel*/

      return;

    else

      FKWREC.XXX-MOD-ID = "4600";
      converseLib.validationFailed(50); /* Select a row to delete*/
      set FK0MM410.FK0MM-SEL[1] bold, cursor;

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* Check to see which records need to be deleted and delete them.*/
   /* ------------------------------------------------------------*/

  if (FK0MW00.FK0MW-CONFIRM-DELETE-SW == "Y") /* Delete has been confirmed*/

    FK0MW00.FK0MW-UPDT-PERFORMED-SW = "N"; /* Update done sw*/
    FK0MW00.FK0MW-IDX = 1; /* Reset index*/

    while (FK0MW00.FK0MW-IDX <= 13)
      if (FK0MW01.FK0MW-SEL[FK0MW-IDX] == "S")
        FK0M-4610(); /* Delete usage record*/
        FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment index*/
      else
        FK0MW00.FK0MW-IDX = FK0MW00.FK0MW-IDX + 1; /* Increment index*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* If update successful, display message for update successful.*/
   /* ------------------------------------------------------------*/

  if (FK0MW00.FK0MW-UPDT-PERFORMED-SW == "Y")

    set FK0MW01 empty;

    FK0MW01.SY1STNBR = FK0MM410.SY1STNBR;
    FK0MW01.SY2CLRID = FK0MM410.SY2CLRID;
    FK0MW01.XDMCD = FK0MM410.XDMCD;

    set FK0MM410 initial;

    FK0MM410.SY1STNBR = FK0MW01.SY1STNBR;
    FK0MM410.SY2CLRID = FK0MW01.SY2CLRID;
    FK0MM410.XDMCD = FK0MW01.XDMCD;

    FK0MW00.FK0MW-FORMAT-MAP-SW = "Y";
    FK0MW00.FK0MW-REQUEST-DATA-SW = "Y";
    FK0MW00.FK0MW-CONFIRM-DELETE-SW = "N";
    FKWREC.XXX-MOD-ID = "4600";
    FKWREC.XXXMSGNO = 1;

  end

end // end FK0M-4600

// Delete DCMPNT.VMUSGE01
Function FK0M-4610()
   /* ------------------------------------------------------------*/
   /* Delete the requested row(s) from the table.*/
   /* ------------------------------------------------------------*/

  set VMUSGE01 empty; /* Init record*/

  VMUSGE01.SY1STNBR = FK0MW01.SY1STNBR; /* Style number*/
  VMUSGE01.SY2CLRID = FK0MW01.SY2CLRID; /* Color Id*/
  VMUSGE01.XDMCD = FK0MW01.XDMCD; /* Dimension code*/
  VMUSGE01.FK-MAT-NBR = FK0MW01.FK-MAT-NBR[FK0MW-IDX]; /* Matrl nbr*/
  VMUSGE01.XMG-COLR-GRP-CD = FK0MW01.XMG-COLR-GRP-CD[FK0MW-IDX];
  VMUSGE01.XCLCD = FK0MW01.XCLCD[FK0MW-IDX]; /* Color code*/

  try
    call "IO6240" ("D ", SQLCA, VMUSGE01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      FK0MW00.FK0MW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/

      return;

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "4610"; /* Module identification*/
      FK0MW00.FK0MW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
      FK0MW00.FK0MW-REQUEST-DATA-SW = "Y"; /* Get new data*/

      exit stack; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "4610"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4610 DELETE DCMPNT.VMUSGE01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MM410"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMUSGE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMUSGE01.VMUSGE01-GROUP; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  FK0MW00.FK0MW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/

  exit stack; /* Exit to display map*/


end // end FK0M-4610

// SELECT SET (SS) VSYDVX01
Function FK0MS-03-IO0490-SS()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from DPRODG.VSYDVX01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0490" ("SS", SQLCA, VSYDVX01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  FKWREC.XXX-MOD-ID = "S03"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET DPRODG.VSYDVX01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "FK0MS03"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVX01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYDVX01.VSYDVX01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of FK0MS-03-IO0490-SS ************/
   /* **                                                        ***/
end // end FK0MS-03-IO0490-SS

// FETCH (SN) DPRODG.VSYDVX01
Function FK0MS-04-IO0490-SN()
   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0490" ("SN", SQLCA, VSYDVX01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  FKWREC.XXX-MOD-ID = "S04"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "FK0MS03"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VSYDVX01"; /* ===> Table view name*/

  TA1REC.TA1TBLKE = VSYDVX01.VSYDVX01-KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ************ END OF FK0MS-04-IO0490-SN **********************/
   /* **                                                        ***/
end // end FK0MS-04-IO0490-SN

// CLOSE (CS) VSYDVX01
Function FK0MS-05-IO0490-CS()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0490" ("CS", SQLCA, VSYDVX01) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  FKWREC.XXX-MOD-ID = "S05"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "FK0MS05"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYDVX01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYDVX01.VSYDVX01-KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of FK0MS-05-IO0490-CS ************/
   /* **                                                        ***/
end // end FK0MS-05-IO0490-CS

// SELECT 'S' DFCAST.VPFHST01
Function FK0MS-06-IO5430-S()
   /* ------------------------------------------------------------*/
   /* Select 's' DFCAST.VPFHST01*/
   /* ------------------------------------------------------------*/

  try
    call "IO5430" ("S ", SQLCA, FG9REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  FKWREC.XXX-MOD-ID = "S06"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DFCAST.VPFHST01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPFHST01"; /* Table view name*/
  TA1REC.TA1TBLKE = FG9REC.FG9KEY; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FK0MS-06-IO5430-S

// SELECT 'S' DPRODG.VSYCLR01
Function FK0MS-07-IO3120-S()
   /* ------------------------------------------------------------*/
   /* Select 's' DPRODG.VSYCLR01*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FKWREC.XXX-MOD-ID = "S07"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01             ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FK0MS07"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

end // end FK0MS-07-IO3120-S

//*** RECORD=FK0MW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0MW00 type basicRecord
  10 FK0MW-IDX FK0MW-IDX ; 
  10 FK0MW-INDEX FK0MW-INDEX ; 
  10 FK0MW-NXTPRD-IDX FK0MW-NXTPRD-IDX ; 
  10 FK0MW-FORMAT-MAP-SW FK0MW-FORMAT-MAP-SW ; 
  10 FK0MW-MAP-SWITCH FK0MW-MAP-SWITCH ; 
  10 FK0MW-STORAGE-UPD-SW FK0MW-STORAGE-UPD-SW ; 
  10 FK0MW-REQUEST-DATA-SW FK0MW-REQUEST-DATA-SW ; 
  10 FK0MW-CONFIRM-DELETE-SW FK0MW-CONFIRM-DELETE-SW ; 
  10 FK0MW-UPDT-PERFORMED-SW FK0MW-UPDT-PERFORMED-SW ; 
  10 FK0MW-COPY-DATA-SW FK0MW-COPY-DATA-SW ; 
  10 FK0MW-LIST-REQUESTED-SW FK0MW-LIST-REQUESTED-SW ; 
  10 FK0MW-VMUSGE01-EOF-SW FK0MW-VMUSGE01-EOF-SW ; 
  10 FK0MW-VMUSGE01-FOUND-SW FK0MW-VMUSGE01-FOUND-SW ; 
  10 FK0MW-VMUSGE01-1ST-REC-SW FK0MW-VMUSGE01-1ST-REC-SW ; 
  10 FK0MW-VMUSGE01-COPIED-SW FK0MW-VMUSGE01-COPIED-SW ; 
  10 FK0MW-VMATRL01-FOUND-SW FK0MW-VMATRL01-FOUND-SW ; 
  10 FK0MW-VSYDVL01-FOUND-SW FK0MW-VSYDVL01-FOUND-SW ; 
  10 FK0MW-VSYCLR01-FOUND-SW FK0MW-VSYCLR01-FOUND-SW ; 
  10 FK0MW-VSYDVL01-COPY-FOUND-SW FK0MW-VSYDVL01-COPY-FOUND-SW ; 
  10 FK0MW-VSYCLR01-COPY-FOUND-SW FK0MW-VSYCLR01-COPY-FOUND-SW ; 
  10 FK0MW-ROW-SELECTED-SW FK0MW-ROW-SELECTED-SW ; 
  10 FK0MW-ROW-ENTERED-SW FK0MW-ROW-ENTERED-SW ; 
  10 FK0MW-VSYDVX01-FOUND-SW FK0MW-VSYDVX01-FOUND-SW ; 
end // end FK0MW00

//*** RECORD=FK0MW01 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0MW01 type basicRecord
  5 * char(1582) ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 SY1SSTNM SY1SSTNM ; 
    10 FK0MW-COPY-STYLE FK0MW-COPY-STYLE ; 
    10 FK0MW-COPY-COLOR FK0MW-COPY-COLOR ; 
    10 FK0MW-COPY-DIM FK0MW-COPY-DIM ; 
    10 FK0MW-SEL FK0MW-SEL [13] ; 
    10 FK-VEND-CD FK-VEND-CD [13] ; 
    10 FK-MAT-NBR FK-MAT-NBR [13] ; 
    10 FK-DEPT-MAT-DESC FK-DEPT-MAT-DESC [13] ; 
    10 XMG-COLR-GRP-CD XMG-COLR-GRP-CD [13] ; 
    10 XCLCD XCLCD [13] ; 
    10 XTM-MAT-THCK-CD XTM-MAT-THCK-CD [13] ; 
    10 XTM-MAT-THCK-DESC XTM-MAT-THCK-DESC [13] ; 
    10 FK-MAT-DEVL-USE FK-MAT-DEVL-USE [13] ; 
    10 FK-MAT-DEVL-USE-DT FK-MAT-DEVL-USE-DT [13] ; 
    10 FK-MAT-PROD-USE FK-MAT-PROD-USE [13] ; 
    10 FK-MAT-PROD-USE-DT FK-MAT-PROD-USE-DT [13] ; 
    10 FK-MAT-FINL-USE FK-MAT-FINL-USE [13] ; 
    10 FK-MAT-FINL-USE-DT FK-MAT-FINL-USE-DT [13] ; 
    10 FK-MAT-WAST-PCT FK-MAT-WAST-PCT [13] ; 
    10 FK-MAT-MFG-PCT FK-MAT-MFG-PCT [13] ; 
    10 FK0MW-PF-IND FK0MW-PF-IND [13] ; 
    10 FK0MW-YIELD FK0MW-YIELD [13] ; 
    10 ZZZSDT ZZZSDT [13] ; 
    10 ZZZCHGCT ZZZCHGCT [13] ; 
    10 FK0MW-SY-STY-NBR FK0MW-SY-STY-NBR ; 
    10 FK0MW-SY-COLR-CD-ID FK0MW-SY-COLR-CD-ID ; 
    10 FK0MW-XDM-DIM-CD FK0MW-XDM-DIM-CD ; 
    10 FK0MW-SY-SHORT-STY-NM FK0MW-SY-SHORT-STY-NM ; 
    10 FK0MW-PG-FRST-PRDCTN-MO FK0MW-PG-FRST-PRDCTN-MO ; 
end // end FK0MW01

// Confirm delete switch
DataItem FK0MW-CONFIRM-DELETE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Copy Color
DataItem FK0MW-COPY-COLOR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Copy data switch
DataItem FK0MW-COPY-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Copy Dimension
DataItem FK0MW-COPY-DIM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Copy Style
DataItem FK0MW-COPY-STYLE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be formated & displayed
DataItem FK0MW-FORMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index used for the screen
DataItem FK0MW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Index to compare row entries
DataItem FK0MW-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Selection list requested
DataItem FK0MW-LIST-REQUESTED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be displayed switch
DataItem FK0MW-MAP-SWITCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for next product
DataItem FK0MW-NXTPRD-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// P OR F INDICATOR
DataItem FK0MW-PF-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FK0MW-PG-FRST-PRDCTN-MO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Request for data to display
DataItem FK0MW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Row entered switch
DataItem FK0MW-ROW-ENTERED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Row selected switch
DataItem FK0MW-ROW-SELECTED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FK0MW-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Storage update switch
DataItem FK0MW-STORAGE-UPD-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_COLR_CD_ID
DataItem FK0MW-SY-COLR-CD-ID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_SHORT_STY_NM
DataItem FK0MW-SY-SHORT-STY-NM char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_STY_NBR
DataItem FK0MW-SY-STY-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Update performed switch
DataItem FK0MW-UPDT-PERFORMED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VMATRL01 record found switch
DataItem FK0MW-VMATRL01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VMUSGE01 first record switch
DataItem FK0MW-VMUSGE01-1ST-REC-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VMUSGE01 copied switch
DataItem FK0MW-VMUSGE01-COPIED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VMUSGE01 EOF switch
DataItem FK0MW-VMUSGE01-EOF-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VMUSGE01 record found switch
DataItem FK0MW-VMUSGE01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYCLR01 copy found switch
DataItem FK0MW-VSYCLR01-COPY-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYCLR01 record found switch
DataItem FK0MW-VSYCLR01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYDVL01 copy found switch
DataItem FK0MW-VSYDVL01-COPY-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VSYDVL01 record found switch
DataItem FK0MW-VSYDVL01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DPRODG.VSYDVX01 ROW FOUND
DataItem FK0MW-VSYDVX01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XDM_DIM_CD
DataItem FK0MW-XDM-DIM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// YIELD
DataItem FK0MW-YIELD decimal(7,4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

