package fk0i;

import corpcom2.XX0XW01;
import corpcom3.XPFK001;
import corpcom4.XSFKS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpz3.ZZZCHGDT;
import fk.common.FK-AIRBAG-DESC;
import fk.common.FK-AIRBAG-EFF-BDT;
import fk.common.FK-AIRBAG-EFF-XDT;
import fk.common.FK-AIRBAG-HOT-FL;
import fk.common.FK-AIRBAG-ID;
import fk.common.FK-AIRBAG-PAD-FL;
import fk.common.FK-AIRBAG-SZ-SCLCD;
import fk.common.FK-AIRBAG-UNT-PRC;
import fk.common.FK-COMNT;
import fk.common.FK-NIKE-MGR-ID;
import fk.common.FK-VEND-CD;
import fk.common.FK-VEND-SNM;
import fk.common.FKWREC;
import sy.common.SY4IDDSC;
import sy.common.SY4REC;
import sy.common.SY4SZSCL;
import sy.common.SY5SZID;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TAEREC;
import vv.common.VABAG001;
import vv.common.VABAG001-GROUP;
import vv.common.VABSCL01;
import vv.common.VABSCL01-GROUP;
import vv.common.VSYSCL01;
import vv.common.VVNDR001;
import vv.common.VVNDR001-GROUP;
//*** PROGRAM=FK0I ****
// THIS PROGRAM IS APRT OF THE COMPONENTS FORECASTINT SYSTEM.
// 
// THIS APPLICATION PROVIDES THE CAPABILITY OF MAINTAINING
// ROWS ON THE BAG DATABASE (DCMPNT.VABAG001) AND THE AIR BAG
// SIZE SCALE DATABASE (DCMPNT.VABSCL01).  USERS WILL BE
// ALLOWED TO INQUIRE, ADD, CHANGE, AND DELETE BAG AND BAG
// SIZE SCALE DATA THROUGH THE FOUR MAPS PROVIDED IN THIS
// APPLICATION.
// 
// INQUIRE MAP - MAP FK0IM110 IS PROVIDED FOR USERS TO INQUIRE
// UPON BAG AND BAG SIZE SCALE DATA.  USERS WILL BE ALLOWED
// TO SELECT A VENDOR AND A BAG NUMBER, AND THE APPROPRIATE
// AIR BAG DATA WILL BE DISPLAYED.  IF THE SIZE SCALE IS ALSO
// ENTERED, SIZE SCALE DATA WILL ALSO BE DISPLAYED ON THE MAP.
// 
// ADD MAP - MAP FK0IM210 IS PROVIDED FOR USERS TO ADD BAGS
// AND BAG SIZE SCALE.  USERS WILL BE ALLOWED TO ENTER NEW
// INFORMATION TO THE MAP AND INSERTS WILL BE PERFORMED ON THE
// AIR BAG AND/OR AIR BAG SIZE SCALE TABLES.  A "COPY FROM"
// FUNCTION WILL BE PROVIDED TO ALLOW USERS TO COPY INFORMATION
// FROM EXISTING BAGS AND BAG SIZE SCALES.
// 
// CHANGE MAP - MAP FK0IM310 IS PROVIDED FOR USERS TO CHANGE
// INFORMATION FOR A BAG AND/OR BAG SIZE SCALE.  USERS WILL
// BE ALLOWED TO CHANGE INFORMATION ON THE MAP, AND UPDATES
// WILL BE PERFORMED ON THE AIR BAG AND/OR AIR BAG SIZE SCALE
// TABLES.
// 
// DELETE MAP - MAP FK0IM410 IS PROVIDED FOR USERS TO DELETE
// BAG AND BAG SIZE SCALE INFORMATION.  USERS WILL BE ALLOWED
// TO ENTER A BAG AND/OR BAG SIZE SCALE TO BE DELETED, CONFIRM
// IT, AND DELETE IT (THEM) FROM THE APPROPRIATE TABLES.
// 
// TRANSFER FROM ONE FK0I MAP TO ANOTHER FK0I MAP IS NOT
// POSSIBLE EXCEPT THROUGH FASTPATH.  USERS WILL BE ALLOWED
// TO EXIT THIS APPLICATION VIA PFKEYS OR FASTPATH, WITH THE
// 'OPTION' FIELD AVAILABLE FOR USE WITH ANY APPLICATION
// TRANSFER.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      06/03/92  JALLE1  New application.
// FK9994   09/10/93  JALLE1  CSP 4.1 conversion.
//          11/09/93  JALLE1  Nov. 1993 table changes.
//          12/16/93  JALLE1  Fix abend code.
// FK0027   01/04/94  JALLE1  Allow users to enter 'XX' in
//                            airbag size to designate when
//                            an alternate bag exists for this
//                            size.
//          02/15/94  JALLE1  Allow bag price of 0 on maps
//                            M210, M310.
// Y2KFIX   12/03/97  DBETTR  regenerate application to pick up
//                            Y2K compliant version of common
//                            date routine XX0XS01.
// *********************
Program FK0I type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FK0IW00 FK0IW00; // record
  FK0IW01 FK0IW01; // record
  FK0IW02 FK0IW02; // record
  FK0IW03 FK0IW03; // record
  FK0IW04 FK0IW04; // record
  FKWREC FKWREC; // record
  SQLCA SQLCA; // record
  SY4REC SY4REC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VABAG001 VABAG001; // record
  VABSCL01 VABSCL01; // record
  VSYSCL01 VSYSCL01; // record
  VVNDR001 VVNDR001; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FK0IM.FK0IM110,  // forms
      FK0IM.FK0IM210, 
      FK0IM.FK0IM310, 
      FK0IM.FK0IM410
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Flow to initialize the map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0I-0001; /* Application initialization*/
    ;
    ;
    FK0I-0001: FK0I-0001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0I-0002; /* Converse the main process*/
    ;
    ;
    FK0I-0002: FK0I-0002();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0I-0002; /* Converse main process*/
    ;
    ;
  end // end main
end // end FK0I

// Application initialization
Function FK0I-0001()
   /* ------------------------------------------------------------*/
   /* Initialize working storage and display storage areas.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0IM110 initial; /* M110 inquiry map input/output*/
  set FK0IM210 initial; /* M210 add map input/output*/
  set FK0IM310 initial; /* M310 change map input/output*/
  set FK0IM410 initial; /* M410 delete map input/output*/
  set FK0IW00 empty; /* Application working storage*/
  set FK0IW01 empty; /* Application display storage*/
  set FK0IW02 empty; /* Copy display storage*/
  set SQLCA empty; /* SQL communication area*/
  set TAEREC empty; /* Error diagnosis information*/
  set TA2REC empty; /* Error diagnosis parameters*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Initialize working storage variables.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.FK-VEND-CD[1] != " " /* Vendor passed in commarea*/
   || FKWREC.FK-AIRBAG-ID != " ") /* or bag nbr passed in commarea*/
    FK0IW00.FK0IW-REQUEST-DATA-SW = "Y"; /* Request the data*/
  else
    FK0IW00.FK0IW-REQUEST-DATA-SW = "N"; /* Don't request data*/
  end
  ;
  FK0IW00.FK0IW-FMAT-MAP-SW = "Y"; /* Format the map*/
  FK0IW00.FK0IW-COPY-DATA-SW = "N"; /* Copy data switch*/
  FK0IW00.FK0IW-CONFIRM-CHANGE-SW = "N"; /* Confirm change switch*/
  FK0IW00.FK0IW-CONFIRM-DELETE-SW = "N"; /* Confirm delete switch*/
  FK0IW00.FK0IW-VABSCL01-FOUND-SW = "N"; /* Init to 'n'o*/
  FK0IW00.FK0IW-VABAG001-FOUND-SW = "N"; /* Init to 'n'o*/
  FK0IW00.FK0IW-VVNDR001-FOUND-SW = "N"; /* Init to 'n'o*/
  ;
  ;
  FK0IW00.FK0IW-IDX = 1; /* Init index*/
  ;
  while (FK0IW00.FK0IW-IDX <= 40) /* For all 40 sizes*/
    ;
    FK0IW00.SY5SZID[FK0IW-IDX] = FK0IW00.FK0IW-IDX;
    FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data was passed, and vendor was missing, go get it.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.FK-AIRBAG-ID != " " /* If bag nbr passed*/
   && FKWREC.FK-VEND-CD[1] == " ") /* and vendor not passed*/
    ;
    FK0IS-01(); /* Declare DCMPNT.VABAG001 csr*/
    FK0IS-02(); /* Fetch DCMPNT.VABAG001 csr*/
    FK0IS-03(); /* Close DCMPNT.VABAG001 csr*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data was passed in the commarea, use as the key.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.FKW-UPDATE-FUNCTION == "A") /* Add requested*/
    ;
    FK0IW00.FK0IW-MAP-SW = "2";
    ;
    FK0IM210.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
    FK0IM210.FK-AIRBAG-ID = FKWREC.FK-AIRBAG-ID; /* Bag*/
    FK0IM210.FK-AIRBAG-SZ-SCLCD = FKWREC.FK-AIRBAG-SZ-SCLCD; /* Szscl*/
  else
    ;
    if (FKWREC.FKW-UPDATE-FUNCTION == "C") /* Change requested*/
      ;
      FK0IW00.FK0IW-MAP-SW = "3";
      ;
      FK0IM310.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
      FK0IM310.FK-AIRBAG-ID = FKWREC.FK-AIRBAG-ID; /* Bag*/
      FK0IM310.FK-AIRBAG-SZ-SCLCD = FKWREC.FK-AIRBAG-SZ-SCLCD;
    else
      ;
      if (FKWREC.FKW-UPDATE-FUNCTION == "D") /* Delete requested*/
        ;
        FK0IW00.FK0IW-MAP-SW = "4";
        ;
        FK0IM410.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
        FK0IM410.FK-AIRBAG-ID = FKWREC.FK-AIRBAG-ID; /* Bag*/
        FK0IM410.FK-AIRBAG-SZ-SCLCD = FKWREC.FK-AIRBAG-SZ-SCLCD;
      else
        ;
        FK0IW00.FK0IW-MAP-SW = "1";
        ;
        FK0IM110.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
        FK0IM110.FK-AIRBAG-ID = FKWREC.FK-AIRBAG-ID; /* Bag*/
        FK0IM110.FK-AIRBAG-SZ-SCLCD = FKWREC.FK-AIRBAG-SZ-SCLCD;
      end
    end
  end
  ;
  ;
end // end FK0I-0001

// Main process to display a map
Function FK0I-0002()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the first map.*/
   /* 2) Otherwise, if specified, display the second map.*/
   /* 3) Otherwise, if specified, display the third map.*/
   /* 4) Otherwise, if specified, display the fourth map.*/
   /* 5) Otherwise, indicate error and exit to Application Menu.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-MAP-SW == "1") /* Map 1 was requested*/
    ;
    FK0I-1000(); /* Display map 1*/
    ;
  else
    ;
    if (FK0IW00.FK0IW-MAP-SW == "2") /* Map 2 was requested*/
      ;
      FK0I-2000(); /* Display map 2*/
      ;
    else
      ;
      if (FK0IW00.FK0IW-MAP-SW == "3") /* Map 3 was requested*/
        ;
        FK0I-3000(); /* Display map 3*/
        ;
      else
        ;
        if (FK0IW00.FK0IW-MAP-SW == "4") /* Map 4 was requested*/
          ;
          FK0I-4000(); /* Display map 4*/
          ;
        else
          ;
          FK0I-1000(); /* Display map 1*/
        end
      end
    end
  end
  ;
  ;
end // end FK0I-0002

// Process inquiry map
Function FK0I-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0I-1100(); /* Obtain the data to display*/
  ;
  FK0I-1200(); /* Format and display the map*/
  ;
  FK0I-1300(); /* Check attention identifier*/
  ;
  FK0I-1400(); /* Reset fields to normal intensity*/
  ;
  FK0I-1500(); /* Verify the entered data*/
  ;
  FK0I-1600(); /* Process valid input request*/
  ;
  ;
end // end FK0I-1000

// Obtain data to display
Function FK0I-1100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0IW01 empty; /* Initialize display storage*/
  ;
  FK0IW00.FK-VEND-CD = FK0IM110.FK-VEND-CD; /* Vendor*/
  FK0IW00.FK-AIRBAG-ID = FK0IM110.FK-AIRBAG-ID; /* Bag*/
  FK0IW00.FK-AIRBAG-SZ-SCLCD = FK0IM110.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-VABSCL01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0IW00.FK0IW-VABAG001-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0IW00.FK0IW-VVNDR001-FOUND-SW = "N"; /* Init found sw to 'n'*/
  ;
  ;
  if (FK0IM110.FK-AIRBAG-SZ-SCLCD != "  ") /* If size scale on map*/
    ;
    FK0I-1110(); /* Obtain the size scale data from*/
                                  /* (DCMPNT.VABSCL01)*/
    ;
    if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "N") /* Data not found*/
      ;
      set FK0IM110.FK-AIRBAG-SZ-SCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1100"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* No data to display*/
    end
  end
                                  /*  */
                                  /*  */
  if (FK0IM110.FK-AIRBAG-ID != "  ") /* If bag nbr on map*/
    FK0I-1120(); /* Obtain the bag data from*/
  end /* (DCMPNT.VABAG001)*/
                                  /*  */
                                  /*  */
  FK0I-1130(); /* Obtain the vendor data from*/
                                  /* (DCMPNT.VVNDR001)*/
  ;
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y") /* Air bag size scale found*/
    FK0I-1140(); /* Obtain size descriptions*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data obtained in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-1150(); /* Save data*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-REQUEST-DATA-SW = "N";
  FK0IW00.FK0IW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FK0I-1100

// Get size scale data
Function FK0I-1110()
   /* --------------------------------------------------------------*/
   /* Declare a cursor on the air bag size scale table*/
   /* DCMPNT.VABSCL01.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-1111(); /* Declare DCMPNT.VABSCL01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Fetch a record from the DCMPNT.VABSCL01 cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-END-CURSOR-SW = "N"; /* Init end of cursor switch*/
  ;
  FK0I-1112(); /* Fetch DCMPNT.VABSCL01 cursor*/
  ;
  ;
  if (FK0IW00.FK0IW-END-CURSOR-SW != "Y") /* If not end of cursor*/
    FK0IW00.SY4SZSCL = VABSCL01.SY4SZSCL; /* Save size scale*/
  else
    FK0IW00.SY4SZSCL = "  "; /* Save size scale*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Save fetched records in working storage array.  Do this*/
   /* until the end of cursor is found.*/
   /* The result of this paragraph will be to have the air bag sizes*/
   /* in a working storage array in shoe size order.*/
   /* NOTE:  sy-sz-id array is set up in the initialization process.*/
   /* --------------------------------------------------------------*/
  ;
  move 0 to FK0IW00.FK0IW-BAG-SZ-ID-NUM[1] for all; /* Init airbag sizes*/
  ;
  while (FK0IW00.FK0IW-END-CURSOR-SW != "Y") /* Until end of cursor*/
    ;
    FK0IW00.FK0IW-IDX = 1; /* Init index*/
    ;
    while (FK0IW00.FK0IW-IDX <= 40) /* Search through all sizes*/
      ;
      if (FK0IW00.SY5SZID[FK0IW-IDX] == VABSCL01.SY5SZID) /* Same size*/
        ;
        if (VABSCL01.FK-ALT-AIRBAG-FL == "Y") /* Alternate bag exists*/
          FK0IW00.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] = "XX";
        else
          FK0IW00.FK0IW-BAG-SZ-ID-NUM[FK0IW-IDX] = VABSCL01.FK-AIRBAG-SZ-ID;
        end
        ;
        FK0IW00.FK0IW-IDX = 41; /* Get out while ya can*/
      end
      ;
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment index*/
    end
    ;
    FK0I-1112(); /* Fetch DCMPNT.VABSCL01 cursor*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Close the DCMPNT.VABSCL01 cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-1113(); /* Close DCMPNT.VABSCL01 cursor*/
  ;
  ;
end // end FK0I-1110

// Declare DCMPNT.VABSCL01 csr
Function FK0I-1111()
   /* ------------------------------------------------------------*/
   /* Declare and open a cursor from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty;
  ;
  VABSCL01.FK-AIRBAG-ID = FK0IM110.FK-AIRBAG-ID; /* Bag*/
  VABSCL01.FK-AIRBAG-SZ-SCLCD = FK0IM110.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  ;
  ;
  try
    call "IO6400" ("S1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1111"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1111 DECLARE VABSCL01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-1111

// Fetch DCMPNT.VABSCL01 csr
Function FK0I-1112()
   /* ------------------------------------------------------------*/
   /* Fetch the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6400" ("N1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      ;
      FK0IW00.FK0IW-END-CURSOR-SW = "Y"; /* End of cursor*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW00.FK0IW-VABSCL01-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1112"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1112 FETCH VABSCL01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-1112

// Close DCMPNT.VABSCL01 csr
Function FK0I-1113()
   /* ------------------------------------------------------------*/
   /* Close the cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6400" ("C1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1113"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1113 CLOSE VABSCL01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-1113

// Get bag data
Function FK0I-1120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-VEND-CD = FK0IM110.FK-VEND-CD; /* Vendor*/
  VABAG001.FK-AIRBAG-ID = FK0IM110.FK-AIRBAG-ID; /* Bag*/
  ;
  ;
  try
    call "IO6360" ("S ", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      set FK0IM110.FK-AIRBAG-ID cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1120"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* no data found*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW00.FK0IW-VABAG001-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1120 GET BAG DATA        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-1120

// Get vendor data
Function FK0I-1130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0IM110.FK-VEND-CD; /* Vendor*/
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      set FK0IM110.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1130"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* no data found*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW00.FK0IW-VVNDR001-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1130 GET VENDOR DATA     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-1130

// Obtain size descriptions
Function FK0I-1140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set SY4REC empty;
  ;
  SY4REC.SY4SZSCL = FK0IW00.SY4SZSCL; /* Prod size scale*/
  ;
  ;
  try
    call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      move "*****" to SY4REC.SY4IDDSC[1] for all; /* Default asterisks*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1140 GET SIZE DESC       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSCALE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY4REC.SY4DATA; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-1140

// Save data in display storage
Function FK0I-1150()
   /* ------------------------------------------------------------------*/
   /* For each database record found, save data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  set FK0IW01 empty; /* Initialize display storage*/
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save air bag size scale data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y") /* Bag size scale found*/
    ;
    FK0IW01.FK-AIRBAG-SZ-SCLCD = FK0IW00.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
    FK0IW01.SY4SZSCL = FK0IW00.SY4SZSCL; /* Prod size scale*/
    move SY4REC.SY4IDDSC to FK0IW01.SY4IDDSC[1] for all; /* Bag size desc*/
    move FK0IW00.FK0IW-BAG-SZ-ID-CHA to FK0IW01.FK0IW-BAG-SZ-ID-CHA[1] for all;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save air bag data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "Y") /* Color group data found*/
    ;
    FK0IW01.FK-AIRBAG-ID = VABAG001.FK-AIRBAG-ID; /* Bag*/
    FK0IW01.FK-AIRBAG-DESC = VABAG001.FK-AIRBAG-DESC; /* Bag desc*/
    FK0IW01.FK-COMNT = VABAG001.FK-COMNT; /* Comment*/
    FK0IW01.FK-AIRBAG-UNT-PRC = VABAG001.FK-AIRBAG-UNT-PRC; /* Price*/
    FK0IW01.FK-AIRBAG-EFF-BDT = VABAG001.FK-AIRBAG-EFF-BDT; /* F date*/
    FK0IW01.FK-AIRBAG-EFF-XDT = VABAG001.FK-AIRBAG-EFF-XDT; /* T date*/
    FK0IW01.FK-AIRBAG-HOT-FL = VABAG001.FK-AIRBAG-HOT-FL; /* Hot flag*/
    FK0IW01.FK-AIRBAG-PAD-FL = VABAG001.FK-AIRBAG-PAD-FL; /* Pad flag*/
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save vendor data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VVNDR001-FOUND-SW == "Y") /* Vendor data found*/
    ;
    FK0IW01.FK-VEND-CD = VVNDR001.FK-VEND-CD; /* Vendor*/
    FK0IW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
    FK0IW01.FK-NIKE-MGR-ID = VVNDR001.FK-NIKE-MGR-ID; /* Mgr id*/
    FK0IW01.ZZZCHGDT = VVNDR001.ZZZCHGDT; /* Change date*/
  end
  ;
  ;
end // end FK0I-1150

// Format and converse INQ map
Function FK0I-1200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FK0I-1210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0IM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0IM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0IM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Protect fields where no database record was found.*/
   /* Otherwise, if data was found, protect sizes with 0 bag size.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "N") /* No DCMPNT.VABSCL01 rec found*/
    ;
    set FK0IM110.SY4SZSCL invisible, skip; /* Protect*/
    ;
    FK0IW00.FK0IW-IDX = 1; /* Init index*/
    ;
    while (FK0IW00.FK0IW-IDX <= 40) /* For all 40 sizes*/
      ;
      set FK0IM110.SY4IDDSC[FK0IW-IDX] invisible, skip; /* Protect*/
      set FK0IM110.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] invisible, skip; /* Protect*/
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
    end
    ;
  else /* Otherwise, set dark any size with no valid description*/
        /* Also set dark any size with 0 bag size*/
    ;
    FK0IW00.FK0IW-IDX = 1; /* Init index*/
    ;
    while (FK0IW00.FK0IW-IDX <= 40) /* For all 40 sizes*/
      ;
      if (FK0IM110.SY4IDDSC[FK0IW-IDX] == " ") /* Not valid size*/
        set FK0IM110.SY4IDDSC[FK0IW-IDX] invisible, skip; /* Protect*/
        set FK0IM110.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] invisible, skip;
      end
      ;
      if (FK0IM110.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] == "00") /* 0 bag size*/
        set FK0IM110.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] invisible, skip;
      end
      ;
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
    end
    ;
  end
  ;
  ;
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "N") /* No DCMPNT.VABAG001 rec found*/
    ;
    set FK0IM110.FK-AIRBAG-DESC invisible, skip; /* Protect*/
    set FK0IM110.FK-COMNT invisible, skip; /* Protect*/
    set FK0IM110.FK-AIRBAG-UNT-PRC invisible, skip; /* Protect*/
    set FK0IM110.FK-AIRBAG-EFF-BDT invisible, skip; /* Protect*/
    set FK0IM110.FK-AIRBAG-EFF-XDT invisible, skip; /* Protect*/
    set FK0IM110.FK-AIRBAG-HOT-FL invisible, skip; /* Protect*/
    set FK0IM110.FK-AIRBAG-PAD-FL invisible, skip; /* Protect*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VVNDR001-FOUND-SW == "N") /* No DCMPNT.Vvndr001 rec found*/
    ;
    set FK0IM110.FK-VEND-SNM invisible, skip; /* Protect*/
    set FK0IM110.FK-NIKE-MGR-ID invisible, skip; /* Protect*/
    set FK0IM110.ZZZCHGDT invisible, skip; /* Protect*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FK0IM110 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0IM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0IM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || FKWREC.XXXMSGNO == 1)             /* Update complete*/
    if (FK0IM110.FK-VEND-CD == " ")
      set FK0IM110.FK-VEND-CD cursor;
    else
      set FK0IM110.FK-AIRBAG-ID cursor;
    end
  end
  ;
  ;
  converse FK0IM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0IM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0IM110.CAITEM; /* Application data*/
  ;
  ;
end // end FK0I-1200

// Format the display data
Function FK0I-1210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FK0IW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.  If data was found, format from*/
   /* display storage, otherwise format from working storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VVNDR001-FOUND-SW == "Y") /* If vendor found*/
    ;
    FK0IM110.FK-VEND-CD = FK0IW01.FK-VEND-CD; /* Vendor cd*/
  else
    FK0IM110.FK-VEND-CD = FK0IW00.FK-VEND-CD; /* Vendor cd*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "Y") /* If bag found*/
    FK0IM110.FK-AIRBAG-ID = FK0IW01.FK-AIRBAG-ID; /* Bag*/
  else
    FK0IM110.FK-AIRBAG-ID = FK0IW00.FK-AIRBAG-ID; /* Bag*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y") /* If bag size scale found*/
    FK0IM110.FK-AIRBAG-SZ-SCLCD = FK0IW01.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  else
    FK0IM110.FK-AIRBAG-SZ-SCLCD = FK0IW00.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0IM110.FK-NIKE-MGR-ID = FK0IW01.FK-NIKE-MGR-ID; /* Manager id*/
  FK0IM110.ZZZCHGDT = FK0IW01.ZZZCHGDT; /* Change date*/
  FK0IM110.FK-VEND-SNM = FK0IW01.FK-VEND-SNM; /* Vendor name*/
  FK0IM110.FK-AIRBAG-DESC = FK0IW01.FK-AIRBAG-DESC; /* Bag desc*/
  FK0IM110.FK-COMNT = FK0IW01.FK-COMNT; /* Comments*/
  FK0IM110.FK-AIRBAG-UNT-PRC = FK0IW01.FK-AIRBAG-UNT-PRC; /* Price*/
  FK0IM110.FK-AIRBAG-EFF-BDT = FK0IW01.FK-AIRBAG-EFF-BDT; /* F date*/
  FK0IM110.FK-AIRBAG-EFF-XDT = FK0IW01.FK-AIRBAG-EFF-XDT; /* X date*/
  FK0IM110.FK-AIRBAG-HOT-FL = FK0IW01.FK-AIRBAG-HOT-FL; /* Hot flag*/
  FK0IM110.FK-AIRBAG-PAD-FL = FK0IW01.FK-AIRBAG-PAD-FL; /* Hot flag*/
  FK0IM110.SY4SZSCL = FK0IW01.SY4SZSCL; /* Prod size scale*/
  ;
  FK0IW00.FK0IW-IDX = 1; /* Init index*/
  ;
  while (FK0IW00.FK0IW-IDX <= 40) /* For all sizes*/
    ;
    FK0IM110.SY4IDDSC[FK0IW-IDX] = FK0IW01.SY4IDDSC[FK0IW-IDX]; /* Size descriptions*/
    FK0IM110.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] = FK0IW01.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX]; /* Air bag sizes*/
    ;
    FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
  end
  ;
  ;
end // end FK0I-1210

// Check attention identifier
Function FK0I-1300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0IM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-AIRBAG-ID = FK0IM110.FK-AIRBAG-ID; /* *//* Bag*/
    FKWREC.FK-AIRBAG-SZ-SCLCD = FK0IM110.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
    ;
    COMMAREA.CATOAP = "FK0I"; /* to applicaiton*/
    COMMAREA.CAITEM = "I"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0IM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0IM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FK0IM110.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-AIRBAG-ID = FK0IM110.FK-AIRBAG-ID; /* *//* Bag*/
      FKWREC.FK-AIRBAG-SZ-SCLCD = FK0IM110.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
      ;
      COMMAREA.CATOAP = FK0IM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0IM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0IM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf13 /* FK0J requested*/
   || converseVar.eventKey is pf14 /* FK0K requested*/
   || converseVar.eventKey is pf15 /* FK0L requested*/
   || converseVar.eventKey is pf17) /* FK0Z requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0IM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0J"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0K"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0L"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK0Z"; /* TO application*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0IM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-AIRBAG-ID = FK0IM110.FK-AIRBAG-ID; /* *//* Bag*/
    FKWREC.FK-AIRBAG-SZ-SCLCD = FK0IM110.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0I-1300

// Reset Highlighted fields
Function FK0I-1400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0IM110.FK-VEND-CD initialAttributes; /* Vendor code*/
  set FK0IM110.FK-VEND-SNM initialAttributes; /* Vendor name*/
  set FK0IM110.FK-NIKE-MGR-ID initialAttributes; /* Material manager*/
  set FK0IM110.ZZZCHGDT initialAttributes; /* Change date*/
  set FK0IM110.FK-AIRBAG-ID initialAttributes; /* Bag*/
  set FK0IM110.FK-AIRBAG-DESC initialAttributes; /* Bag desc*/
  set FK0IM110.FK-COMNT initialAttributes; /* Comments*/
  set FK0IM110.FK-AIRBAG-UNT-PRC initialAttributes; /* Unit price*/
  set FK0IM110.FK-AIRBAG-EFF-BDT initialAttributes; /* From eff date*/
  set FK0IM110.FK-AIRBAG-EFF-XDT initialAttributes; /* To eff date*/
  set FK0IM110.FK-AIRBAG-HOT-FL initialAttributes; /* Hot flag*/
  set FK0IM110.FK-AIRBAG-PAD-FL initialAttributes; /* Pad flag*/
  set FK0IM110.SY4SZSCL initialAttributes; /* Prod size scale*/
  set FK0IM110.FK-AIRBAG-SZ-SCLCD initialAttributes; /* Bag size scale*/
  ;
  FK0IW00.FK0IW-IDX = 1; /* Init index*/
  ;
  while (FK0IW00.FK0IW-IDX <= 40) /**/
    ;
    set FK0IM110.SY4IDDSC[FK0IW-IDX] initialAttributes; /* Size id*/
    set FK0IM110.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] initialAttributes; /* Size id*/
    FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
  end
  ;
  set FK0IM110.CATOAP initialAttributes; /* To application*/
  set FK0IM110.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end FK0I-1400

// Verify entered fields
Function FK0I-1500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0IM110.CAITEM > " ") /* Application data was entered*/
    ;
    set FK0IM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the bag number has been entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0IM110.FK-AIRBAG-ID == " ") /* If bag nbr missing*/
    ;
    set FK0IM110.FK-AIRBAG-ID cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(82); /* Bag nbr missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the vendor data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0IM110.FK-VEND-CD == " ") /* If vendor code missing*/
    ;
    set FK0IM110.FK-VEND-CD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(21); /* Vendor code invalid or missing*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FK0I-1500

// Process Request
Function FK0I-1600()
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IM110.FK-VEND-CD != FK0IW01.FK-VEND-CD     /* If vendor changed*/
   || FK0IM110.FK-AIRBAG-ID != FK0IW01.FK-AIRBAG-ID /* Bag changed*/
   || FK0IM110.FK-AIRBAG-SZ-SCLCD != FK0IW01.FK-AIRBAG-SZ-SCLCD)
                                                      /* Size scale changed*/
    ;
    FK0IW00.FK0IW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end
  ;
  ;
end // end FK0I-1600

// Process inquiry map
Function FK0I-2000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0I-2100(); /* Obtain the data to display*/
  ;
  FK0I-2200(); /* Format and display the map*/
  ;
  FK0I-2300(); /* Check attention identifier*/
  ;
  FK0I-2400(); /* Reset fields to normal intensity*/
  ;
  FK0I-2500(); /* Verify the entered data*/
  ;
  FK0I-2600(); /* Process valid input request*/
  ;
  ;
end // end FK0I-2000

// Obtain data to display
Function FK0I-2100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0IW01 empty; /* Initialize display storage*/
  set FK0IW02 empty; /* Initialize copy storage*/
  ;
  FK0IW00.FK-VEND-CD = FK0IM210.FK-VEND-CD; /* Vendor*/
  FK0IW00.FK-AIRBAG-ID = FK0IM210.FK-AIRBAG-ID; /* Bag*/
  FK0IW00.FK-AIRBAG-SZ-SCLCD = FK0IM210.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  ;
  FK0IW00.FK0IM-COPY-BAG-NBR = FK0IM210.FK0IM-COPY-BAG-NBR;
  FK0IW00.FK0IM-COPY-SZ-SCL = FK0IM210.FK0IM-COPY-SZ-SCL;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-VABSCL01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0IW00.FK0IW-VABAG001-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0IW00.FK0IW-VVNDR001-FOUND-SW = "N"; /* Init found sw to 'n'*/
  ;
  FK0IW00.FK0IW-VABAG001-COPIED-SW = "N"; /* Init copy sw to 'n'*/
  FK0IW00.FK0IW-VABSCL01-COPIED-SW = "N"; /* Init copy sw to 'n'*/
  ;
  ;
  FK0I-2110(); /* Obtain the size scale data from*/
                                /* (DCMPNT.VABSCL01)*/
                                  /*  */
  if (FK0IM210.FK-AIRBAG-ID != "  ") /* If bag nbr on map*/
    FK0I-2120(); /* Obtain the bag data from*/
  end /* (DCMPNT.VABAG001)*/
                                  /*  */
                                  /*  */
  FK0I-2130(); /* Obtain the vendor data from*/
                                  /* (DCMPNT.VVNDR001)*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data obtained in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-2150(); /* Save data*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If requested, obtain copy information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-COPY-DATA-SW == "Y") /* If copy data requested*/
    ;
    if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "Y" /* DCMPNT.VABAG001 found*/
     && FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y") /* DCMPNT.VABSCL01 found*/
      ;
      FKWREC.XXXMSGNO = 40; /* Cannot add - data already exists*/
      FKWREC.XXX-MOD-ID = "2100"; /* Module identification*/
      set FK0IM210.FK-VEND-CD cursor, bold;
      set FK0IM210.FK-AIRBAG-ID bold;
      set FK0IM210.FK-AIRBAG-SZ-SCLCD bold;
      ;
      FK0I-2180(); /* Save data in copy area*/
      ;
      FK0IW00.FK0IM-COPY-BAG-NBR = " ";
      FK0IW00.FK0IM-COPY-SZ-SCL = " ";
      ;
    else
      ;
      if (FK0IW00.FK0IW-VABSCL01-FOUND-SW != "Y") /* Data not found yet*/
        FK0I-2160(); /* Obtain the size scale data from*/
                                      /* (DCMPNT.VABSCL01)*/
      end
      ;
      if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "N") /* Data not found*/
        ;
        set FK0IM210.FK0IM-COPY-BAG-NBR cursor, bold; /* Highlight*/
        set FK0IM210.FK0IM-COPY-SZ-SCL bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "2100"; /* Module identification*/
        FKWREC.XXXMSGNO = 18; /* No data to display*/
      end
                                      /*  */
                                      /*  */
      if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "N") /* Data not found*/
        FK0I-2170(); /* Obtain the bag data from*/
      end /* (DCMPNT.VABAG001)*/
      ;
      ;
      /* --------------------------------------------------------------*/
      /* Save obtained copy data in copy display storage.*/
      /* --------------------------------------------------------------*/
      ;
      FK0I-2180(); /* Save data*/
      ;
      ;
      /* --------------------------------------------------------------*/
      /* If copy data obtained, display message.*/
      /* --------------------------------------------------------------*/
      ;
      if (FK0IW00.FK0IW-VABAG001-COPIED-SW == "Y" /* DCMPNT.VABAG001 copied*/
       || FK0IW00.FK0IW-VABSCL01-COPIED-SW == "Y") /* DCMPNT.VABSCL01 copied*/
        ;
        FKWREC.XXXMSGNO = 39; /* Enter to add, pa2 to cancel*/
        FKWREC.XXX-MOD-ID = "2100"; /* Module identification*/
      end
    end
  end
  ;
  ;
  FK0I-2140(); /* Obtain size descriptions*/
  ;
  move SY4REC.SY4IDDSC to FK0IW01.SY4IDDSC[1] for all;
  move SY4REC.SY4IDDSC to FK0IW02.SY4IDDSC[1] for all;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-REQUEST-DATA-SW = "N";
  FK0IW00.FK0IW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FK0I-2100

// Get size scale data
Function FK0I-2110()
   /* --------------------------------------------------------------*/
   /* Declare a cursor on the air bag size scale table*/
   /* DCMPNT.VABSCL01.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-2111(); /* Declare DCMPNT.VABSCL01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Fetch a record from the DCMPNT.VABSCL01 cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-END-CURSOR-SW = "N"; /* Init end of cursor switch*/
  ;
  FK0I-2112(); /* Fetch DCMPNT.VABSCL01 cursor*/
  ;
  ;
  if (FK0IW00.FK0IW-END-CURSOR-SW != "Y") /* If not end of cursor*/
    FK0IW00.SY4SZSCL = VABSCL01.SY4SZSCL; /* Save size scale*/
  else
    FK0IW00.SY4SZSCL = FK0IM210.SY4SZSCL; /* Save size scale*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save fetched records in working storage array.  Do this*/
   /* until the end of cursor is found.*/
   /* The result of this paragraph will be to have the air bag sizes*/
   /* in a working storage array in shoe size order.*/
   /* NOTE:  sy-sz-id array is set up in the initialization process.*/
   /* --------------------------------------------------------------*/
  ;
  move 0 to FK0IW00.FK0IW-BAG-SZ-ID-NUM[1] for all; /* Init airbag sizes*/
  ;
  while (FK0IW00.FK0IW-END-CURSOR-SW != "Y") /* Until end of cursor*/
    ;
    FK0IW00.FK0IW-IDX = 1; /* Init index*/
    ;
    while (FK0IW00.FK0IW-IDX <= 40) /* Search through all sizes*/
      ;
      if (FK0IW00.SY5SZID[FK0IW-IDX] == VABSCL01.SY5SZID) /* Same size*/
        ;
        FK0IW01.VABSCL01-GROUP[FK0IW-IDX] = VABSCL01.VABSCL01-GROUP;
        if (VABSCL01.FK-ALT-AIRBAG-FL == "Y") /* Alternate bag exists*/
          FK0IW00.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] = "XX";
        else
          FK0IW00.FK0IW-BAG-SZ-ID-NUM[FK0IW-IDX] = VABSCL01.FK-AIRBAG-SZ-ID;
        end
        ;
        FK0IW00.FK0IW-IDX = 41; /* Get out while ya can*/
      end
      ;
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment index*/
    end
    ;
    FK0I-2112(); /* Fetch DCMPNT.VABSCL01 cursor*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Close the DCMPNT.VABSCL01 cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-2113(); /* Close DCMPNT.VABSCL01 cursor*/
  ;
  ;
end // end FK0I-2110

// Declare DCMPNT.VABSCL01 csr
Function FK0I-2111()
   /* ------------------------------------------------------------*/
   /* Declare and open a cursor from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty;
  ;
  VABSCL01.FK-AIRBAG-ID = FK0IM210.FK-AIRBAG-ID; /* Bag*/
  VABSCL01.FK-AIRBAG-SZ-SCLCD = FK0IM210.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  ;
  ;
  try
    call "IO6400" ("S1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2111"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2111 DECLARE VABSCL01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2111

// Fetch DCMPNT.VABSCL01 csr
Function FK0I-2112()
   /* ------------------------------------------------------------*/
   /* Fetch the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6400" ("N1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      ;
      FK0IW00.FK0IW-END-CURSOR-SW = "Y"; /* End of cursor*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW00.FK0IW-VABSCL01-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2112"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2112 FETCH VABSCL01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2112

// Close DCMPNT.VABSCL01 csr
Function FK0I-2113()
   /* ------------------------------------------------------------*/
   /* Close the cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6400" ("C1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2113"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2113 CLOSE VABSCL01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2113

// Get bag data
Function FK0I-2120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-VEND-CD = FK0IM210.FK-VEND-CD; /* Vendor*/
  VABAG001.FK-AIRBAG-ID = FK0IM210.FK-AIRBAG-ID; /* Bag*/
  ;
  ;
  try
    call "IO6360" ("S ", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      return;
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW01.VABAG001-GROUP = VABAG001.VABAG001-GROUP; /* Save rec*/
      FK0IW00.FK0IW-VABAG001-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2120 GET BAG DATA        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2120

// Get vendor data
Function FK0I-2130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0IM210.FK-VEND-CD; /* Vendor*/
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      set FK0IM210.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2130"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* no data found*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW01.VVNDR001-GROUP = VVNDR001.VVNDR001-GROUP; /* Save rec*/
      FK0IW00.FK0IW-VVNDR001-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2130 GET VENDOR DATA     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2130

// Obtain size descriptions
Function FK0I-2140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set SY4REC empty;
  ;
  SY4REC.SY4SZSCL = FK0IW00.SY4SZSCL;
  ;
  ;
  try
    call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      move "*****" to SY4REC.SY4IDDSC[1] for all; /* Default asterisks*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2140 GET SIZE DESC       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSCALE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY4REC.SY4DATA; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2140

// Save data in display storage
Function FK0I-2150()
   /* ------------------------------------------------------------------*/
   /* For each database record found, save data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save air bag size scale data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  ;
  FK0IW01.FK-AIRBAG-SZ-SCLCD = FK0IW00.FK-AIRBAG-SZ-SCLCD; /* Sz scl*/
  FK0IW01.SY4SZSCL = FK0IW00.SY4SZSCL; /* Prod size scale*/
  move SY4REC.SY4IDDSC to FK0IW01.SY4IDDSC[1] for all; /* Bag size desc*/
  move FK0IW00.FK0IW-BAG-SZ-ID-CHA to FK0IW01.FK0IW-BAG-SZ-ID-CHA[1] for all;
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save air bag data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "Y") /* Color group data found*/
    ;
    FK0IW01.FK-AIRBAG-ID = VABAG001.FK-AIRBAG-ID; /* Bag*/
    FK0IW01.FK-AIRBAG-DESC = VABAG001.FK-AIRBAG-DESC; /* Bag desc*/
    FK0IW01.FK-COMNT = VABAG001.FK-COMNT; /* Comment*/
    FK0IW01.FK-AIRBAG-UNT-PRC = VABAG001.FK-AIRBAG-UNT-PRC; /* Price*/
    FK0IW01.FK-AIRBAG-EFF-BDT = VABAG001.FK-AIRBAG-EFF-BDT; /* F date*/
    FK0IW01.FK-AIRBAG-EFF-XDT = VABAG001.FK-AIRBAG-EFF-XDT; /* T date*/
    FK0IW01.FK-AIRBAG-HOT-FL = VABAG001.FK-AIRBAG-HOT-FL; /* Hot flag*/
    FK0IW01.FK-AIRBAG-PAD-FL = VABAG001.FK-AIRBAG-PAD-FL; /* Pad flag*/
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save vendor data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VVNDR001-FOUND-SW == "Y") /* Vendor data found*/
    ;
    FK0IW01.FK-VEND-CD = VVNDR001.FK-VEND-CD; /* Vendor*/
    FK0IW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
    FK0IW01.FK-NIKE-MGR-ID = VVNDR001.FK-NIKE-MGR-ID; /* Mgr id*/
    FK0IW01.ZZZCHGDT = VVNDR001.ZZZCHGDT; /* Change date*/
  end
  ;
  ;
end // end FK0I-2150

// Get copy size scale data
Function FK0I-2160()
   /* --------------------------------------------------------------*/
   /* Declare a cursor on the air bag size scale table*/
   /* DCMPNT.VABSCL01.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-2161(); /* Declare DCMPNT.VABSCL01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Fetch a record from the DCMPNT.VABSCL01 cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-END-CURSOR-SW = "N"; /* Init end of cursor switch*/
  ;
  FK0I-2162(); /* Fetch DCMPNT.VABSCL01 cursor*/
  ;
  ;
  if (FK0IW00.FK0IW-END-CURSOR-SW != "Y") /* If not end of cursor*/
    FK0IW00.SY4SZSCL = VABSCL01.SY4SZSCL; /* Save size scale*/
  else
    FK0IW00.SY4SZSCL = "  "; /* Save size scale*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Save fetched records in working storage array.  Do this*/
   /* until the end of cursor is found.*/
   /* The result of this paragraph will be to have the air bag sizes*/
   /* in a working storage array in shoe size order.*/
   /* NOTE:  sy-sz-id array is set up in the initialization process.*/
   /* --------------------------------------------------------------*/
  ;
  move 0 to FK0IW00.FK0IW-BAG-SZ-ID-NUM[1] for all; /* Init airbag sizes*/
  ;
  while (FK0IW00.FK0IW-END-CURSOR-SW != "Y") /* Until end of cursor*/
    ;
    FK0IW00.FK0IW-IDX = 1; /* Init index*/
    ;
    while (FK0IW00.FK0IW-IDX <= 40) /* Search through all sizes*/
      ;
      if (FK0IW00.SY5SZID[FK0IW-IDX] == VABSCL01.SY5SZID) /* Same size*/
        ;
        FK0IW01.VABSCL01-GROUP[FK0IW-IDX] = VABSCL01.VABSCL01-GROUP;
        if (VABSCL01.FK-ALT-AIRBAG-FL == "Y") /* Alternate bag exists*/
          FK0IW00.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] = "XX";
        else
          FK0IW00.FK0IW-BAG-SZ-ID-NUM[FK0IW-IDX] = VABSCL01.FK-AIRBAG-SZ-ID;
        end
        ;
        FK0IW00.FK0IW-IDX = 41; /* Get out while ya can*/
      end
      ;
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment index*/
    end
    ;
    FK0I-2162(); /* Fetch DCMPNT.VABSCL01 cursor*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Close the DCMPNT.VABSCL01 cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-2163(); /* Close DCMPNT.VABSCL01 cursor*/
  ;
  ;
end // end FK0I-2160

// Decl copy DCMPNT.VABSCL01 csr
Function FK0I-2161()
   /* ------------------------------------------------------------*/
   /* Declare and open a cursor from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty;
  ;
  VABSCL01.FK-AIRBAG-ID = FK0IM210.FK0IM-COPY-BAG-NBR; /* Bag*/
  VABSCL01.FK-AIRBAG-SZ-SCLCD = FK0IM210.FK0IM-COPY-SZ-SCL;
                                   /* Size scale*/
  ;
  ;
  try
    call "IO6400" ("S1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2161"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2161 DECL COPY VABSCL01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2161

// Fetch copy DCMPNT.VABSCL01 csr
Function FK0I-2162()
   /* ------------------------------------------------------------*/
   /* Fetch the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6400" ("N1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      ;
      FK0IW00.FK0IW-END-CURSOR-SW = "Y"; /* End of cursor*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW00.FK0IW-VABSCL01-FOUND-SW = "Y"; /* Tbl found fl*/
      FK0IW00.FK0IW-VABSCL01-COPIED-SW = "Y"; /* Tbl copied fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2162"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2162 FETCH COPY VABSCL01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2162

// Close copy DCMPNT.VABSCL01 csr
Function FK0I-2163()
   /* ------------------------------------------------------------*/
   /* Close the cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6400" ("C1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2163"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2163 CLOSE COPY VABSCL01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2163

// Get copy bag data
Function FK0I-2170()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-VEND-CD = FK0IM210.FK-VEND-CD; /* Vendor*/
  VABAG001.FK-AIRBAG-ID = FK0IM210.FK0IM-COPY-BAG-NBR; /* Bag*/
  ;
  ;
  try
    call "IO6360" ("S ", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      set FK0IM210.FK0IM-COPY-BAG-NBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2170"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* no data found*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW02.VABAG001-GROUP = VABAG001.VABAG001-GROUP; /* Save rec*/
      FK0IW00.FK0IW-VABAG001-FOUND-SW = "Y"; /* Tbl found fl*/
      FK0IW00.FK0IW-VABAG001-COPIED-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2170"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2170 GET COPY BAG DATA   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2170

// Save copy data in disp storage
Function FK0I-2180()
   /* ------------------------------------------------------------------*/
   /* For each database record found, save data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save air bag size scale data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y") /* Bag size scale found*/
    ;
    FK0IW02.FK-AIRBAG-SZ-SCLCD = FK0IW00.FK-AIRBAG-SZ-SCLCD;
                                   /* Size scale*/
    FK0IW02.SY4SZSCL = FK0IW00.SY4SZSCL; /* Prod size scale*/
    move SY4REC.SY4IDDSC to FK0IW02.SY4IDDSC[1] for all; /* Bag size desc*/
    move FK0IW00.FK0IW-BAG-SZ-ID-CHA to FK0IW02.FK0IW-BAG-SZ-ID-CHA[1] for all;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save air bag data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "Y") /* Color group data found*/
    ;
    FK0IW02.FK-AIRBAG-ID = FK0IW00.FK-AIRBAG-ID; /* Bag*/
    FK0IW02.FK-AIRBAG-DESC = VABAG001.FK-AIRBAG-DESC; /* Bag desc*/
    FK0IW02.FK-COMNT = VABAG001.FK-COMNT; /* Comment*/
    FK0IW02.FK-AIRBAG-UNT-PRC = VABAG001.FK-AIRBAG-UNT-PRC; /* Price*/
    FK0IW02.FK-AIRBAG-EFF-BDT = VABAG001.FK-AIRBAG-EFF-BDT; /* F date*/
    FK0IW02.FK-AIRBAG-EFF-XDT = VABAG001.FK-AIRBAG-EFF-XDT; /* T date*/
    FK0IW02.FK-AIRBAG-HOT-FL = VABAG001.FK-AIRBAG-HOT-FL; /* Hot flag*/
    FK0IW02.FK-AIRBAG-PAD-FL = VABAG001.FK-AIRBAG-PAD-FL; /* Pad flag*/
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save vendor data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VVNDR001-FOUND-SW == "Y") /* Vendor data found*/
    ;
    FK0IW02.FK-VEND-CD = FK0IW00.FK-VEND-CD; /* Vendor*/
    FK0IW02.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
    FK0IW02.FK-NIKE-MGR-ID = VVNDR001.FK-NIKE-MGR-ID; /* Mgr id*/
    FK0IW02.ZZZCHGDT = VVNDR001.ZZZCHGDT; /* Change date*/
  end
  ;
  ;
end // end FK0I-2180

// Format and converse ADD map
Function FK0I-2200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    if (FK0IW00.FK0IW-COPY-DATA-SW != "Y") /* If not copying data*/
      ;
      FK0I-2210(); /* Format the map*/
    else
      FK0I-2220(); /* Format the copy map*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0IM210.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0IM210.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0IM210.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a key field was entered, and no data was found, allow*/
   /* fields to be open for input; otherwise protect the fields.*/
   /* *** if copy function being used, and no data found to display,*/
   /* *** protect the fields.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "N" /* No DCMPNT.VABSCL01 rec found*/
   && FK0IM210.FK-AIRBAG-SZ-SCLCD != " "     /* and airbag sz scale entered*/
   && FK0IW00.FK0IW-COPY-DATA-SW == "N")     /* and not copying data*/
    ;
     /* Next sentence*/
    ;
  else
    ;
    FK0IW00.FK0IW-IDX = 1; /* Init index*/
    ;
    while (FK0IW00.FK0IW-IDX <= 40) /* For all 40 sizes*/
      ;
      set FK0IM210.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] skip; /* Protect*/
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
    end
  end
  ;
   /* ====> protect fields with no valid description*/
  ;
  FK0IW00.FK0IW-IDX = 1; /* Init index*/
  ;
  while (FK0IW00.FK0IW-IDX <= 40) /* For all 40 sizes*/
    ;
    if (FK0IM210.SY4IDDSC[FK0IW-IDX] == " ")
      set FK0IM210.SY4IDDSC[FK0IW-IDX] invisible, skip; /* Protect*/
      set FK0IM210.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] invisible, skip; /* Protect*/
    end
    ;
    FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "N" /* No DCMPNT.VABAG001 rec found*/
   && FK0IM210.FK-AIRBAG-ID != " "           /* and airbag sz scale entered*/
   && FK0IW00.FK0IW-COPY-DATA-SW == "N")     /* and not copying data*/
    ;
     /* Next sentence*/
    ;
  else
    ;
    set FK0IM210.FK-AIRBAG-DESC skip; /* Protect*/
    set FK0IM210.FK-COMNT skip; /* Protect*/
    set FK0IM210.FK-AIRBAG-UNT-PRC skip; /* Protect*/
    set FK0IM210.FK-AIRBAG-EFF-BDT skip; /* Protect*/
    set FK0IM210.FK-AIRBAG-EFF-XDT skip; /* Protect*/
    set FK0IM210.FK-AIRBAG-HOT-FL skip; /* Protect*/
    set FK0IM210.FK-AIRBAG-PAD-FL skip; /* Protect*/
  end
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FK0IM210 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0IM210.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0IM210.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || FKWREC.XXXMSGNO == 1)             /* Update complete*/
    if (FK0IM210.FK-VEND-CD == " ")
      set FK0IM210.FK-VEND-CD cursor;
    else
      set FK0IM210.FK-AIRBAG-ID cursor;
    end
  end
  ;
  ;
  converse FK0IM210 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0IM210.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0IM210.CAITEM; /* Application data*/
  ;
  ;
end // end FK0I-2200

// Format the display data
Function FK0I-2210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FK0IW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.  If data was found, format from*/
   /* display storage, otherwise format from working storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VVNDR001-FOUND-SW == "Y") /* If vendor found*/
    ;
    FK0IM210.FK-VEND-CD = FK0IW01.FK-VEND-CD; /* Vendor cd*/
  else
    FK0IM210.FK-VEND-CD = FK0IW00.FK-VEND-CD; /* Vendor cd*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "Y") /* If bag found*/
    FK0IM210.FK-AIRBAG-ID = FK0IW01.FK-AIRBAG-ID; /* Bag*/
  else
    FK0IM210.FK-AIRBAG-ID = FK0IW00.FK-AIRBAG-ID; /* Bag*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y") /* If bag size scale found*/
    FK0IM210.FK-AIRBAG-SZ-SCLCD = FK0IW01.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  else
    FK0IM210.FK-AIRBAG-SZ-SCLCD = FK0IW00.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0IM210.FK-NIKE-MGR-ID = FK0IW01.FK-NIKE-MGR-ID; /* Manager id*/
  FK0IM210.ZZZCHGDT = FK0IW01.ZZZCHGDT; /* Change date*/
  FK0IM210.FK-VEND-SNM = FK0IW01.FK-VEND-SNM; /* Vendor name*/
  FK0IM210.FK-AIRBAG-DESC = FK0IW01.FK-AIRBAG-DESC; /* Bag desc*/
  FK0IM210.FK-COMNT = FK0IW01.FK-COMNT; /* Comments*/
  FK0IM210.FK-AIRBAG-UNT-PRC = FK0IW01.FK-AIRBAG-UNT-PRC; /* Price*/
  FK0IM210.FK-AIRBAG-EFF-BDT = FK0IW01.FK-AIRBAG-EFF-BDT; /* F date*/
  FK0IM210.FK-AIRBAG-EFF-XDT = FK0IW01.FK-AIRBAG-EFF-XDT; /* X date*/
  FK0IM210.FK-AIRBAG-HOT-FL = FK0IW01.FK-AIRBAG-HOT-FL; /* Hot flag*/
  FK0IM210.FK-AIRBAG-PAD-FL = FK0IW01.FK-AIRBAG-PAD-FL; /* Hot flag*/
  FK0IM210.SY4SZSCL = FK0IW01.SY4SZSCL; /* Prod size scale*/
  ;
  FK0IW00.FK0IW-IDX = 1; /* Init index*/
  ;
  while (FK0IW00.FK0IW-IDX <= 40) /* For all sizes*/
    ;
    FK0IM210.SY4IDDSC[FK0IW-IDX] = FK0IW01.SY4IDDSC[FK0IW-IDX]; /* Size descriptions*/
    FK0IM210.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] = FK0IW01.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX]; /* Air bag sizes*/
    ;
    FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
  end
  ;
  ;
end // end FK0I-2210

// Format copy display data
Function FK0I-2220()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FK0IW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.  If data was found, format from*/
   /* display storage, otherwise format from working storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VVNDR001-FOUND-SW == "Y") /* If vendor found*/
    ;
    FK0IM210.FK-VEND-CD = FK0IW02.FK-VEND-CD; /* Vendor cd*/
  else
    FK0IM210.FK-VEND-CD = FK0IW00.FK-VEND-CD; /* Vendor cd*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "Y") /* If bag found*/
    FK0IM210.FK-AIRBAG-ID = FK0IW02.FK-AIRBAG-ID; /* Bag*/
  else
    FK0IM210.FK-AIRBAG-ID = FK0IW00.FK-AIRBAG-ID; /* Bag*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y") /* If bag size scale found*/
    FK0IM210.FK-AIRBAG-SZ-SCLCD = FK0IW02.FK-AIRBAG-SZ-SCLCD;
                                   /* Size scale*/
  else
    FK0IM210.FK-AIRBAG-SZ-SCLCD = FK0IW00.FK-AIRBAG-SZ-SCLCD;
                                   /* Size scale*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0IM210.FK-NIKE-MGR-ID = FK0IW02.FK-NIKE-MGR-ID; /* Manager id*/
  FK0IM210.ZZZCHGDT = FK0IW02.ZZZCHGDT; /* Change date*/
  FK0IM210.FK-VEND-SNM = FK0IW02.FK-VEND-SNM; /* Vendor name*/
  FK0IM210.FK-AIRBAG-DESC = FK0IW02.FK-AIRBAG-DESC; /* Bag desc*/
  FK0IM210.FK-COMNT = FK0IW02.FK-COMNT; /* Comments*/
  FK0IM210.FK-AIRBAG-UNT-PRC = FK0IW02.FK-AIRBAG-UNT-PRC; /* Price*/
  FK0IM210.FK-AIRBAG-EFF-BDT = FK0IW02.FK-AIRBAG-EFF-BDT; /* F date*/
  FK0IM210.FK-AIRBAG-EFF-XDT = FK0IW02.FK-AIRBAG-EFF-XDT; /* X date*/
  FK0IM210.FK-AIRBAG-HOT-FL = FK0IW02.FK-AIRBAG-HOT-FL; /* Hot flag*/
  FK0IM210.FK-AIRBAG-PAD-FL = FK0IW02.FK-AIRBAG-PAD-FL; /* Hot flag*/
  FK0IM210.SY4SZSCL = FK0IW02.SY4SZSCL; /* Prod size scale*/
  ;
  FK0IW00.FK0IW-IDX = 1; /* Init index*/
  ;
  while (FK0IW00.FK0IW-IDX <= 40) /* For all sizes*/
    ;
    FK0IM210.SY4IDDSC[FK0IW-IDX] = FK0IW02.SY4IDDSC[FK0IW-IDX]; /* Size descriptions*/
    FK0IM210.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] = FK0IW02.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX]; /* Air bag sizes*/
    ;
    FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
  end
  ;
  ;
end // end FK0I-2220

// Check attention identifier
Function FK0I-2300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0IM210.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-AIRBAG-ID = FK0IM210.FK-AIRBAG-ID; /* *//* Bag*/
    FKWREC.FK-AIRBAG-SZ-SCLCD = FK0IM210.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
    ;
    COMMAREA.CATOAP = "FK0I"; /* to applicaiton*/
    COMMAREA.CAITEM = "A"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0IM210.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0IM210.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FK0IM210.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-AIRBAG-ID = FK0IM210.FK-AIRBAG-ID; /* *//* Bag*/
      FKWREC.FK-AIRBAG-SZ-SCLCD = FK0IM210.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
      ;
      COMMAREA.CATOAP = FK0IM210.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0IM210.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0IM210.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf13 /* FK0J requested*/
   || converseVar.eventKey is pf14 /* FK0K requested*/
   || converseVar.eventKey is pf15 /* FK0L requested*/
   || converseVar.eventKey is pf17) /* FK0Z requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0IM210"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0J"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0K"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0L"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK0Z"; /* TO application*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0IM210.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-AIRBAG-ID = FK0IM210.FK-AIRBAG-ID; /* *//* Bag*/
    FKWREC.FK-AIRBAG-SZ-SCLCD = FK0IM210.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0I-2300

// Reset Highlighted fields
Function FK0I-2400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0IM210.FK-VEND-CD initialAttributes; /* Vendor code*/
  set FK0IM210.FK-VEND-SNM initialAttributes; /* Vendor name*/
  set FK0IM210.FK-NIKE-MGR-ID initialAttributes; /* Material manager*/
  set FK0IM210.ZZZCHGDT initialAttributes; /* Change date*/
  set FK0IM210.FK-AIRBAG-ID initialAttributes; /* Bag*/
  set FK0IM210.FK-AIRBAG-DESC initialAttributes; /* Bag desc*/
  set FK0IM210.FK-COMNT initialAttributes; /* Comments*/
  set FK0IM210.FK-AIRBAG-UNT-PRC initialAttributes; /* Unit price*/
  set FK0IM210.FK-AIRBAG-EFF-BDT initialAttributes; /* From eff date*/
  set FK0IM210.FK-AIRBAG-EFF-XDT initialAttributes; /* To eff date*/
  set FK0IM210.FK-AIRBAG-HOT-FL initialAttributes; /* Hot flag*/
  set FK0IM210.FK-AIRBAG-PAD-FL initialAttributes; /* Pad flag*/
  set FK0IM210.SY4SZSCL initialAttributes; /* Prod size scale*/
  set FK0IM210.FK-AIRBAG-SZ-SCLCD initialAttributes; /* Bag size scale*/
  ;
  FK0IW00.FK0IW-IDX = 1; /* Init index*/
  ;
  while (FK0IW00.FK0IW-IDX <= 40) /**/
    ;
    set FK0IM210.SY4IDDSC[FK0IW-IDX] initialAttributes; /* Size id*/
    set FK0IM210.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] initialAttributes; /* Size id*/
    FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
  end
  ;
  set FK0IM210.FK0IM-COPY-BAG-NBR initialAttributes; /* Copy bag nbr*/
  set FK0IM210.FK0IM-COPY-SZ-SCL initialAttributes; /* Copy size scale*/
  ;
  set FK0IM210.CATOAP initialAttributes; /* To application*/
  set FK0IM210.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end FK0I-2400

// Verify entered fields
Function FK0I-2500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0IM210.CAITEM > " ") /* Application data was entered*/
    ;
    set FK0IM210.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* if any of the key information was changed, verify the key.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0IM210.FK-VEND-CD != FK0IW00.FK-VEND-CD                 /* Vendor changed*/
   || FK0IM210.FK-AIRBAG-ID != FK0IW00.FK-AIRBAG-ID             /* Bag changed*/
   || FK0IM210.FK-AIRBAG-SZ-SCLCD != FK0IW00.FK-AIRBAG-SZ-SCLCD /* Sz scale*/
   || FK0IM210.SY4SZSCL != FK0IW00.SY4SZSCL                     /* Prod size scale*/
   || FK0IM210.FK0IM-COPY-BAG-NBR != FK0IW00.FK0IM-COPY-BAG-NBR /* Copy bag*/
   || FK0IM210.FK0IM-COPY-SZ-SCL != FK0IW00.FK0IM-COPY-SZ-SCL) 
                                   /* Copy szscl*/
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the copy data.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FK0IM210.FK0IM-COPY-BAG-NBR != " " /* Copy bag was entered*/
     && FK0IM210.FK0IM-COPY-SZ-SCL == " ") /* But size scale was not*/
      ;
      set FK0IM210.FK0IM-COPY-SZ-SCL cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(86); /* Bag nbr and sz scl must both be*/
                                   /* specified*/
    end
    ;
    ;
    if (FK0IM210.FK0IM-COPY-BAG-NBR == " " /* Copy bag was not entered*/
     && FK0IM210.FK0IM-COPY-SZ-SCL != " ") /* But size scale was*/
      ;
      set FK0IM210.FK0IM-COPY-BAG-NBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(86); /* Bag nbr and sz scl must both be*/
                                   /* specified*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the size scale has been entered.*/
    /* If the size scale has been entered, verify the product size scale.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FK0IM210.FK-AIRBAG-SZ-SCLCD == " ") /* If size scale missing*/
      ;
      set FK0IM210.FK-AIRBAG-SZ-SCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(87); /* Size scale missing or invalid*/
    end
    ;
    ;
    FK0I-2510(); /* Verify product size scale*/
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the bag number has been entered.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FK0IM210.FK-AIRBAG-ID == " ") /* If bag nbr missing*/
      ;
      set FK0IM210.FK-AIRBAG-ID cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(82); /* Bag nbr missing or invalid*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the vendor has been entered.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FK0IM210.FK-VEND-CD == " ") /* If vendor code missing*/
      ;
      set FK0IM210.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code invalid or missing*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify bag number does not exist with any other vendors.*/
    /* ---------------------------------------------------------------*/
    ;
    FK0I-2530(); /* Declare cursor DCMPNT.VABAG001*/
    ;
    FK0IW00.FK0IW-END-CURSOR-SW = "N"; /* Init switch*/
    ;
    FK0I-2540(); /* Fetch cursor DCMPNT.VABAG001*/
    ;
    while (FK0IW00.FK0IW-END-CURSOR-SW == "N") /* Until end of cursor*/
      FK0I-2540(); /* Fetch cursor DCMPNT.VABAG001*/
    end
    ;
    FK0I-2550(); /* Close DCMPNT.VABAG001 cursor*/
    ;
    ;
  else
    /* ---------------------------------------------------------------*/
    /* Verify the non-key information if no key info was changed.*/
    /* ---------------------------------------------------------------*/
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the airbag sizes.*/
    /* ---------------------------------------------------------------*/
    ;
    FK0IW00.FK0IW-IDX = 40;
    while (FK0IW00.FK0IW-IDX > 0)
      ;
      if (FK0IM210.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] == "XX")
         /* Next sentence*/
      else
        ;
        if (FK0IM210.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] not numeric)
          ;
          set FK0IM210.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] cursor, bold;
          FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
          converseLib.validationFailed(162); /* Must be numeric or 'XX'*/
        end
      end
      ;
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX - 1;
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the product size scale.*/
    /* ---------------------------------------------------------------*/
    ;
    FK0I-2510(); /* Verify product size scale*/
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the pad flag.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FK0IM210.FK-AIRBAG-PAD-FL == "Y"
     || FK0IM210.FK-AIRBAG-PAD-FL == "N")
      ;
      /* Next sentence*/
    else
      ;
      set FK0IM210.FK-AIRBAG-PAD-FL cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(34); /* Must be 'y' or 'n'*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the hot flag.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FK0IM210.FK-AIRBAG-HOT-FL == "Y"
     || FK0IM210.FK-AIRBAG-HOT-FL == "N")
      ;
      /* Next sentence*/
    else
      ;
      set FK0IM210.FK-AIRBAG-HOT-FL cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(34); /* Must be 'y' or 'n'*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the effective to date.*/
    /* Verify the effective from date.*/
    /* ---------------------------------------------------------------*/
    ;
    FK0I-2520(); /* Validate dates*/
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the description.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FK0IM210.FK-AIRBAG-DESC == " ")
      ;
      set FK0IM210.FK-AIRBAG-DESC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* If air bag and air bag size scale data found, and not copying*/
    /* data, set an error.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "Y" /* Air bag data found*/
     && FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y" /* and size scale found*/
     && FK0IW00.FK0IW-COPY-DATA-SW != "Y")     /* and not copying data*/
      ;
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(40); /* Cannot add - key already exists*/
      set FK0IM210.FK-VEND-CD cursor, bold;
      set FK0IM210.FK-AIRBAG-ID bold;
      set FK0IM210.FK-AIRBAG-SZ-SCLCD bold;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FK0I-2500

// Verify prod size scale
Function FK0I-2510()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set SY4REC empty;
  ;
  SY4REC.SY4SZSCL = FK0IM210.SY4SZSCL; /* Prod size scale*/
  ;
  ;
  try
    call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      ;
      set FK0IM210.SY4SZSCL cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
      converseLib.validationFailed(96); /* Product size scale missing or invalid*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2510 VERIFY PROD SIZE SCL";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSCALE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY4REC.SY4DATA; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2510

// Verify dates
Function FK0I-2520()
  ;
   /* ------------------------------------------------------------*/
   /* Determine effective 'to' date is valid.  Use subroutine TA0040.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FK0IM210.FK-AIRBAG-EFF-XDT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(8); /* Required field missing or invalid*/
      FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
      set FK0IM210.FK-AIRBAG-EFF-XDT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Determine effective 'from' date is valid.  Use subroutine TA0040.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FK0IM210.FK-AIRBAG-EFF-BDT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(8); /* Required field missing or invalid*/
      FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
      set FK0IM210.FK-AIRBAG-EFF-BDT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Compare dates.  If the from date is greater than  the*/
   /* to date, display error message.*/
   /* perform this edit only if to date entered*/
   /* ------------------------------------------------------------*/
  ;
   /* =======> First, reformat the dates*/
  ;
  FK0IW00.FK0IW-WORK-DATE = FK0IM210.FK-AIRBAG-EFF-BDT;
  if (FK0IW00.FK0IW-WORK-YY <= 75)
    FK0IW-WORK-CC = 20;
  else
    FK0IW-WORK-CC = 19;
  end
  FK0IW00.FK0IW-FK-AIRBAG-EFF-BDT = FK0IW00.FK0IW-WORK-DATE;
  ;
  FK0IW00.FK0IW-WORK-DATE = FK0IM210.FK-AIRBAG-EFF-XDT;
  if (FK0IW00.FK0IW-WORK-YY <= 75)
    FK0IW-WORK-CC = 20;
  else
    FK0IW-WORK-CC = 19;
  end
  FK0IW00.FK0IW-FK-AIRBAG-EFF-XDT = FK0IW00.FK0IW-WORK-DATE;
  ;
  ;
   /* =======> Now, verify the reformatted dates*/
  ;
  if (FK0IW00.FK0IW-FK-AIRBAG-EFF-BDT > FK0IW00.FK0IW-FK-AIRBAG-EFF-XDT)
    ;
    converseLib.validationFailed(99); /* From date must not be > to date*/
    FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
    set FK0IM210.FK-AIRBAG-EFF-BDT cursor, bold; /* Highlight*/
    set FK0IM210.FK-AIRBAG-EFF-XDT bold; /* Highlight*/
  end
  ;
  ;
end // end FK0I-2520

// Declare DCMPNT.VABAG001 csr
Function FK0I-2530()
   /* ------------------------------------------------------------*/
   /* Declare a cursor for the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-AIRBAG-ID = FK0IM210.FK-AIRBAG-ID; /* Bag*/
  ;
  ;
  try
    call "IO6360" ("S1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2530"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2530 DECLARE DCMPNT.VABAG001 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2530

// Fetch DCMPNT.VABAG001 csr
Function FK0I-2540()
   /* ------------------------------------------------------------*/
   /* Fetch the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6360" ("N1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* End of cursor*/
      ;
      FK0IW00.FK0IW-END-CURSOR-SW = "Y"; /* Set end of cursor switch*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (VABAG001.FK-VEND-CD != FK0IM210.FK-VEND-CD) /* Wrong vendor*/
        ;
        set FK0IM210.FK-VEND-CD cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "2540"; /* Module identification*/
        converseLib.validationFailed(85); /* Bag nbr exists with another vendor*/
      end
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2540"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2540 FETCH DCMPNT.VABAG001 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2540

// Close DCMPNT.VABAG001 csr
Function FK0I-2550()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6360" ("C1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2550"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2550 CLOSE DCMPNT.VABAG001 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2550

// Process Request
Function FK0I-2600()
   /* --------------------------------------------------------------------*/
   /* Check to see if copy key changed.  if any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IM210.FK0IM-COPY-BAG-NBR == " "
   && FK0IM210.FK0IM-COPY-SZ-SCL == " ")
    ;
    FK0IW00.FK0IW-COPY-DATA-SW = "N"; /* Set copy data to no*/
  else
    ;
    if (FK0IM210.FK0IM-COPY-BAG-NBR != FK0IW00.FK0IM-COPY-BAG-NBR
     || FK0IM210.FK0IM-COPY-SZ-SCL != FK0IW00.FK0IM-COPY-SZ-SCL)
      ;
      FK0IW00.FK0IW-COPY-DATA-SW = "Y"; /* Set copy data to yes*/
      FK0IW00.FK0IW-REQUEST-DATA-SW = "Y"; /* Request data*/
      return;
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* Also check to see if the product size scale has changed.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IM210.FK-VEND-CD != FK0IW00.FK-VEND-CD     /* If vendor changed*/
   || FK0IM210.FK-AIRBAG-ID != FK0IW00.FK-AIRBAG-ID /* Bag changed*/
   || FK0IM210.FK-AIRBAG-SZ-SCLCD != FK0IW00.FK-AIRBAG-SZ-SCLCD
   /* Size scale changed*/
   || FK0IM210.SY4SZSCL != FK0IW00.SY4SZSCL)        /* Prod sz scl changed*/
    ;
    FK0IW00.FK0IW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Now we are ready for the updates.  Get current date and time, and*/
   /* update any records that have been changed.*/
   /* --------------------------------------------------------------------*/
  ;
  XX0XS01(); /* Get current date and time.*/
  ;
  FK0IW00.FK0IW-UPDT-PERFORMED-SW = "N"; /* Init switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, add a record to DCMPNT.VABAG001.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW != "Y" /* DCMPNT.VABAG001 needs add*/
   || FK0IW00.FK0IW-VABAG001-COPIED-SW == "Y") /* Or trying to copy*/
    ;
    FK0I-2610(); /* Check duplicate DCMPNT.VABAG001*/
    ;
    FK0I-2620(); /* Add DCMPNT.VABAG001 record*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, add a records to DCMPNT.VABSCL01.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW != "Y" /* DCMPNT.VABSCL01 needs add*/
   || FK0IW00.FK0IW-VABSCL01-COPIED-SW == "Y") /* Or trying to copy*/
    ;
    FK0I-2630(); /* Check duplicate DCMPNT.VABSCL01*/
    ;
    FK0IW00.FK0IW-IDX = 1;
    ;
    while (FK0IW00.FK0IW-IDX <= 40) /* For each size*/
      ;
      FK0I-2640(); /* Insert DCMPNT.VABSCL01 record*/
      ;
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If inserts were performed, update the DCMPNT.VVNDR001 table.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-UPDT-PERFORMED-SW == "Y") /* Update was performed*/
    ;
    FK0I-2650(); /* Update DCMPNT.VVNDR001*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If inserts were successfully performed, set a message and exit to*/
   /* re-obtain the data.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-UPDT-PERFORMED-SW == "Y") /* Update was performed*/
    ;
    FK0IW00.FK0IW-REQUEST-DATA-SW = "Y"; /* Request data*/
    FK0IW00.FK0IW-COPY-DATA-SW = "N"; /* Don't copy data*/
    FK0IM210.FK0IM-COPY-BAG-NBR = " "; /* Reset copy bag nbr*/
    FK0IM210.FK0IM-COPY-SZ-SCL = " "; /* Reset copy size scale*/
    FKWREC.XXX-MOD-ID = "2600"; /* Module identification*/
    FKWREC.XXXMSGNO = 1; /* Update completed*/
  end
  ;
  ;
end // end FK0I-2600

// Check dup DCMPNT.VABAG001
Function FK0I-2610()
   /* ------------------------------------------------------------*/
   /* Select the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-VEND-CD = FK0IM210.FK-VEND-CD;
  VABAG001.FK-AIRBAG-ID = FK0IM210.FK-AIRBAG-ID;
  ;
  ;
  try
    call "IO6360" ("S ", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      set FK0IM210.FK-VEND-CD cursor, bold; /* Highlight*/
      set FK0IM210.FK-AIRBAG-ID bold; /* Highlight*/
      converseLib.validationFailed(16); /* Key already exists*/
      FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
      ;
      exit stack;
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No record found*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2610 CHECK DUP DCMPNT.VABAG001  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2610

// Insert DCMPNT.VABAG001 record
Function FK0I-2620()
   /* ------------------------------------------------------------*/
   /* Insert the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-VEND-CD = FK0IM210.FK-VEND-CD;
  VABAG001.FK-AIRBAG-ID = FK0IM210.FK-AIRBAG-ID;
  VABAG001.FK-AIRBAG-DESC = FK0IM210.FK-AIRBAG-DESC;
  VABAG001.FK-AIRBAG-UNT-PRC = FK0IM210.FK-AIRBAG-UNT-PRC;
  VABAG001.FK-AIRBAG-HOT-FL = FK0IM210.FK-AIRBAG-HOT-FL;
  VABAG001.FK-AIRBAG-PAD-FL = FK0IM210.FK-AIRBAG-PAD-FL;
  VABAG001.FK-COMNT = FK0IM210.FK-COMNT;
  ;
  FK0IW00.FK0IW-WORK-DATE = FK0IM210.FK-AIRBAG-EFF-BDT;
  if (FK0IW00.FK0IW-WORK-YY <= 75)
    FK0IW-WORK-CC = 20;
  else
    FK0IW-WORK-CC = 19;
  end
  VABAG001.FK-AIRBAG-EFF-BDT = FK0IW00.FK0IW-WORK-DATE;
  ;
  FK0IW00.FK0IW-WORK-DATE = FK0IM210.FK-AIRBAG-EFF-XDT;
  if (FK0IW00.FK0IW-WORK-YY <= 75)
    FK0IW-WORK-CC = 20;
  else
    FK0IW-WORK-CC = 19;
  end
  VABAG001.FK-AIRBAG-EFF-XDT = FK0IW00.FK0IW-WORK-DATE;
  ;
  ;
  VABAG001.ZZZSDT = XX0XW01.XX0XWDAT; /* Setup date*/
  VABAG001.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VABAG001.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VABAG001.ZZZCHGCT = 0; /* Change count*/
  ;
  try
    call "IO6360" ("A ", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW00.FK0IW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2620 INSERT DCMPNT.VABAG001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2620

// Check dup DCMPNT.VABSCL01
Function FK0I-2630()
   /* ------------------------------------------------------------*/
   /* Perform a select count on the DCMPNT.VABSCL01 table to make*/
   /* sure no records exist for the data to be inserted.*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty; /* Initialize*/
  ;
  VABSCL01.FK-AIRBAG-ID = FK0IM310.FK-AIRBAG-ID; /* Bag nbr*/
  VABSCL01.FK-AIRBAG-SZ-SCLCD = FK0IM310.FK-AIRBAG-SZ-SCLCD; /* Scale*/
  ;
  ;
  set FK0IW04 empty; /* Passed parameter record to io6240*/
  ;
  FK0IW04.FK0IW-FUNCTION = "SC"; /* Select count*/
  ;
  try
    call "IO6400" (FK0IW04, SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/
    ;
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2630 CHECK DUP DCMPNT.VABSCL01 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2630

// Insert DCMPNT.VABSCL01 record
Function FK0I-2640()
   /* ------------------------------------------------------------*/
   /* Insert the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty;
  ;
  VABSCL01.FK-AIRBAG-ID = FK0IM210.FK-AIRBAG-ID;
  VABSCL01.FK-AIRBAG-SZ-SCLCD = FK0IM210.FK-AIRBAG-SZ-SCLCD;
  VABSCL01.SY4SZSCL = FK0IM210.SY4SZSCL;
  VABSCL01.SY5SZID = FK0IW00.FK0IW-IDX;
  ;
  if (FK0IM210.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] == "XX")
    VABSCL01.FK-AIRBAG-SZ-ID = 0;
    VABSCL01.FK-ALT-AIRBAG-FL = "Y"; /* Alternate bag*/
  else
    FK0IW00.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] = FK0IM210.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX]; /* Convert it to numeric*/
    VABSCL01.FK-AIRBAG-SZ-ID = FK0IW00.FK0IW-BAG-SZ-ID-NUM[FK0IW-IDX];
    VABSCL01.FK-ALT-AIRBAG-FL = "N"; /* No alternate bag*/
  end
  ;
  ;
  VABSCL01.ZZZSDT = XX0XW01.XX0XWDAT; /* Setup date*/
  VABSCL01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VABSCL01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VABSCL01.ZZZCHGCT = 0; /* Change count*/
  ;
  try
    call "IO6400" ("A ", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW00.FK0IW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2640"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2640 INSERT DCMPNT.VABSCL01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2640

// Update DCMPNT.VVNDR001 record
Function FK0I-2650()
   /* ------------------------------------------------------------*/
   /* Update the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.VVNDR001-GROUP = FK0IW01.VVNDR001-GROUP; /* Restore*/
                                  /* original rec*/
  ;
  VVNDR001.FK-NIKE-MGR-ID = COMMAREA.CAUSERID;
  ;
  VVNDR001.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VVNDR001.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  try
    call "IO6180" ("U ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No record*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "2650"; /* Module identification*/
      FK0IW00.FK0IW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      ;
      exit stack; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2650"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2650 UPDATE DCMPNT.VVNDR001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-2650

// Process inquiry map
Function FK0I-3000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0I-3100(); /* Obtain the data to display*/
  ;
  FK0I-3200(); /* Format and display the map*/
  ;
  FK0I-3300(); /* Check attention identifier*/
  ;
  FK0I-3400(); /* Reset fields to normal intensity*/
  ;
  FK0I-3500(); /* Verify the entered data*/
  ;
  FK0I-3600(); /* Process valid input request*/
  ;
  ;
end // end FK0I-3000

// Obtain data to display
Function FK0I-3100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0IW01 empty; /* Initialize display storage*/
  ;
  FK0IW00.FK-VEND-CD = FK0IM310.FK-VEND-CD; /* Vendor*/
  FK0IW00.FK-AIRBAG-ID = FK0IM310.FK-AIRBAG-ID; /* Bag*/
  FK0IW00.FK-AIRBAG-SZ-SCLCD = FK0IM310.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-VABSCL01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0IW00.FK0IW-VABAG001-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0IW00.FK0IW-VVNDR001-FOUND-SW = "N"; /* Init found sw to 'n'*/
  ;
  ;
  if (FK0IM310.FK-AIRBAG-SZ-SCLCD != "  ") /* If size scale on map*/
    ;
    FK0I-3110(); /* Obtain the size scale data from*/
                                  /* (DCMPNT.VABSCL01)*/
    ;
    if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "N") /* Data not found*/
      ;
      set FK0IM310.FK-AIRBAG-SZ-SCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3100"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* No data to display*/
    end
  end
                                  /*  */
                                  /*  */
  if (FK0IM310.FK-AIRBAG-ID != "  ") /* If bag nbr on map*/
    FK0I-3120(); /* Obtain the bag data from*/
  end /* (DCMPNT.VABAG001)*/
                                  /*  */
                                  /*  */
  FK0I-3130(); /* Obtain the vendor data from*/
                                  /* (DCMPNT.VVNDR001)*/
  ;
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y") /* Air bag size scale found*/
    FK0I-3140(); /* Obtain size descriptions*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data obtained in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-3150(); /* Save data*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-REQUEST-DATA-SW = "N";
  FK0IW00.FK0IW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FK0I-3100

// Get size scale data
Function FK0I-3110()
   /* --------------------------------------------------------------*/
   /* Declare a cursor on the air bag size scale table*/
   /* DCMPNT.VABSCL01.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-3111(); /* Declare DCMPNT.VABSCL01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Fetch a record from the DCMPNT.VABSCL01 cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-END-CURSOR-SW = "N"; /* Init end of cursor switch*/
  ;
  FK0I-3112(); /* Fetch DCMPNT.VABSCL01 cursor*/
  ;
  ;
  if (FK0IW00.FK0IW-END-CURSOR-SW != "Y") /* If not end of cursor*/
    FK0IW00.SY4SZSCL = VABSCL01.SY4SZSCL; /* Save size scale*/
  else
    FK0IW00.SY4SZSCL = "  "; /* Save size scale*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Save fetched records in working storage array.  Do this*/
   /* until the end of cursor is found.*/
   /* The result of this paragraph will be to have the air bag sizes*/
   /* in a working storage array in shoe size order.*/
   /* NOTE:  sy-sz-id array is set up in the initialization process.*/
   /* --------------------------------------------------------------*/
  ;
  move 0 to FK0IW00.FK0IW-BAG-SZ-ID-NUM[1] for all; /* Init airbag sizes*/
  ;
  while (FK0IW00.FK0IW-END-CURSOR-SW != "Y") /* Until end of cursor*/
    ;
    FK0IW00.FK0IW-IDX = 1; /* Init index*/
    ;
    while (FK0IW00.FK0IW-IDX <= 40) /* Search through all sizes*/
      ;
      if (FK0IW00.SY5SZID[FK0IW-IDX] == VABSCL01.SY5SZID) /* Same size*/
        ;
        FK0IW01.VABSCL01-GROUP[FK0IW-IDX] = VABSCL01.VABSCL01-GROUP;
        if (VABSCL01.FK-ALT-AIRBAG-FL == "Y") /* Alternate bag exists*/
          FK0IW00.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] = "XX";
        else
          FK0IW00.FK0IW-BAG-SZ-ID-NUM[FK0IW-IDX] = VABSCL01.FK-AIRBAG-SZ-ID;
        end
        ;
        FK0IW00.FK0IW-IDX = 41; /* Get out while ya can*/
      end
      ;
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment index*/
    end
    ;
    FK0I-3112(); /* Fetch DCMPNT.VABSCL01 cursor*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Close the DCMPNT.VABSCL01 cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-3113(); /* Close DCMPNT.VABSCL01 cursor*/
  ;
  ;
end // end FK0I-3110

// Declare DCMPNT.VABSCL01 csr
Function FK0I-3111()
   /* ------------------------------------------------------------*/
   /* Declare and open a cursor from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty;
  ;
  VABSCL01.FK-AIRBAG-ID = FK0IM310.FK-AIRBAG-ID; /* Bag*/
  VABSCL01.FK-AIRBAG-SZ-SCLCD = FK0IM310.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  ;
  ;
  try
    call "IO6400" ("S1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3111"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3111 DECLARE VABSCL01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-3111

// Fetch DCMPNT.VABSCL01 csr
Function FK0I-3112()
   /* ------------------------------------------------------------*/
   /* Fetch the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6400" ("N1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      ;
      FK0IW00.FK0IW-END-CURSOR-SW = "Y"; /* End of cursor*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW00.FK0IW-VABSCL01-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3112"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3112 FETCH VABSCL01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-3112

// Close DCMPNT.VABSCL01 csr
Function FK0I-3113()
   /* ------------------------------------------------------------*/
   /* Close the cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6400" ("C1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3113"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3113 CLOSE VABSCL01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-3113

// Get bag data
Function FK0I-3120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-VEND-CD = FK0IM310.FK-VEND-CD; /* Vendor*/
  VABAG001.FK-AIRBAG-ID = FK0IM310.FK-AIRBAG-ID; /* Bag*/
  ;
  ;
  try
    call "IO6360" ("S ", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      set FK0IM310.FK-AIRBAG-ID cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3120"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* no data found*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW01.VABAG001-GROUP = VABAG001.VABAG001-GROUP; /* Save rec*/
      FK0IW00.FK0IW-VABAG001-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3120 GET BAG DATA        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-3120

// Get vendor data
Function FK0I-3130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0IM310.FK-VEND-CD; /* Vendor*/
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      set FK0IM310.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3130"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* no data found*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW01.VVNDR001-GROUP = VVNDR001.VVNDR001-GROUP; /* Save rec*/
      FK0IW00.FK0IW-VVNDR001-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3130 GET VENDOR DATA     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-3130

// Obtain size descriptions
Function FK0I-3140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set SY4REC empty;
  ;
  SY4REC.SY4SZSCL = FK0IW00.SY4SZSCL; /* Prod size scale*/
  ;
  ;
  try
    call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      move "*****" to SY4REC.SY4IDDSC[1] for all; /* Default asterisks*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3140 GET SIZE DESC       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSCALE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY4REC.SY4DATA; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-3140

// Save data in display storage
Function FK0I-3150()
   /* ------------------------------------------------------------------*/
   /* For each database record found, save data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save air bag size scale data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y") /* Bag size scale found*/
    ;
    FK0IW01.FK-AIRBAG-SZ-SCLCD = FK0IW00.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
    FK0IW01.SY4SZSCL = FK0IW00.SY4SZSCL; /* Prod size scale*/
    move SY4REC.SY4IDDSC to FK0IW01.SY4IDDSC[1] for all; /* Bag size desc*/
    move FK0IW00.FK0IW-BAG-SZ-ID-CHA to FK0IW01.FK0IW-BAG-SZ-ID-CHA[1] for all;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save air bag data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "Y") /* Color group data found*/
    ;
    FK0IW01.FK-AIRBAG-ID = VABAG001.FK-AIRBAG-ID; /* Bag*/
    FK0IW01.FK-AIRBAG-DESC = VABAG001.FK-AIRBAG-DESC; /* Bag desc*/
    FK0IW01.FK-COMNT = VABAG001.FK-COMNT; /* Comment*/
    FK0IW01.FK-AIRBAG-UNT-PRC = VABAG001.FK-AIRBAG-UNT-PRC; /* Price*/
    FK0IW01.FK-AIRBAG-EFF-BDT = VABAG001.FK-AIRBAG-EFF-BDT; /* F date*/
    FK0IW01.FK-AIRBAG-EFF-XDT = VABAG001.FK-AIRBAG-EFF-XDT; /* T date*/
    FK0IW01.FK-AIRBAG-HOT-FL = VABAG001.FK-AIRBAG-HOT-FL; /* Hot flag*/
    FK0IW01.FK-AIRBAG-PAD-FL = VABAG001.FK-AIRBAG-PAD-FL; /* Pad flag*/
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save vendor data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VVNDR001-FOUND-SW == "Y") /* Vendor data found*/
    ;
    FK0IW01.FK-VEND-CD = VVNDR001.FK-VEND-CD; /* Vendor*/
    FK0IW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
    FK0IW01.FK-NIKE-MGR-ID = VVNDR001.FK-NIKE-MGR-ID; /* Mgr id*/
    FK0IW01.ZZZCHGDT = VVNDR001.ZZZCHGDT; /* Change date*/
  end
  ;
  ;
end // end FK0I-3150

// Format and converse CHG map
Function FK0I-3200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FK0I-3210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0IM310.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0IM310.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0IM310.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Protect fields where no database record was found.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "N") /* No DCMPNT.VABSCL01 rec found*/
    ;
    set FK0IM310.SY4SZSCL invisible, skip; /* Protect*/
    ;
    FK0IW00.FK0IW-IDX = 1; /* Init index*/
    ;
    while (FK0IW00.FK0IW-IDX <= 40) /* For all 40 sizes*/
      ;
      set FK0IM310.SY4IDDSC[FK0IW-IDX] invisible, skip; /* Protect*/
      set FK0IM310.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] invisible, skip; /* Protect*/
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
    end
    ;
  else /* Otherwise, protect airbag sizes where no valid description*/
    ;
    FK0IW00.FK0IW-IDX = 1; /* Init index*/
    ;
    while (FK0IW00.FK0IW-IDX <= 40) /* For all 40 sizes*/
      ;
      if (FK0IM310.SY4IDDSC[FK0IW-IDX] == " ") /* If no description*/
        set FK0IM310.SY4IDDSC[FK0IW-IDX] invisible, skip; /* Protect*/
        set FK0IM310.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] invisible, skip;
      end
      ;
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "N") /* No DCMPNT.VABAG001 rec found*/
    ;
    set FK0IM310.FK-AIRBAG-DESC invisible, skip; /* Protect*/
    set FK0IM310.FK-COMNT invisible, skip; /* Protect*/
    set FK0IM310.FK-AIRBAG-UNT-PRC invisible, skip; /* Protect*/
    set FK0IM310.FK-AIRBAG-EFF-BDT invisible, skip; /* Protect*/
    set FK0IM310.FK-AIRBAG-EFF-XDT invisible, skip; /* Protect*/
    set FK0IM310.FK-AIRBAG-HOT-FL invisible, skip; /* Protect*/
    set FK0IM310.FK-AIRBAG-PAD-FL invisible, skip; /* Protect*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VVNDR001-FOUND-SW == "N") /* No DCMPNT.Vvndr001 rec found*/
    ;
    set FK0IM310.FK-VEND-SNM invisible, skip; /* Protect*/
    set FK0IM310.FK-NIKE-MGR-ID invisible, skip; /* Protect*/
    set FK0IM310.ZZZCHGDT invisible, skip; /* Protect*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FK0IM310 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0IM310.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0IM310.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || FKWREC.XXXMSGNO == 1)             /* Update complete*/
    if (FK0IM310.FK-VEND-CD == " ")
      set FK0IM310.FK-VEND-CD cursor;
    else
      set FK0IM310.FK-AIRBAG-ID cursor;
    end
  end
  ;
  ;
  converse FK0IM310 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0IM310.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0IM310.CAITEM; /* Application data*/
  ;
  ;
end // end FK0I-3200

// Format the display data
Function FK0I-3210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FK0IW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.  If data was found, format from*/
   /* display storage, otherwise format from working storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VVNDR001-FOUND-SW == "Y") /* If vendor found*/
    ;
    FK0IM310.FK-VEND-CD = FK0IW01.FK-VEND-CD; /* Vendor cd*/
  else
    FK0IM310.FK-VEND-CD = FK0IW00.FK-VEND-CD; /* Vendor cd*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "Y") /* If bag found*/
    FK0IM310.FK-AIRBAG-ID = FK0IW01.FK-AIRBAG-ID; /* Bag*/
  else
    FK0IM310.FK-AIRBAG-ID = FK0IW00.FK-AIRBAG-ID; /* Bag*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y") /* If bag size scale found*/
    FK0IM310.FK-AIRBAG-SZ-SCLCD = FK0IW01.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  else
    FK0IM310.FK-AIRBAG-SZ-SCLCD = FK0IW00.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0IM310.FK-NIKE-MGR-ID = FK0IW01.FK-NIKE-MGR-ID; /* Manager id*/
  FK0IM310.ZZZCHGDT = FK0IW01.ZZZCHGDT; /* Change date*/
  FK0IM310.FK-VEND-SNM = FK0IW01.FK-VEND-SNM; /* Vendor name*/
  FK0IM310.FK-AIRBAG-DESC = FK0IW01.FK-AIRBAG-DESC; /* Bag desc*/
  FK0IM310.FK-COMNT = FK0IW01.FK-COMNT; /* Comments*/
  FK0IM310.FK-AIRBAG-UNT-PRC = FK0IW01.FK-AIRBAG-UNT-PRC; /* Price*/
  FK0IM310.FK-AIRBAG-EFF-BDT = FK0IW01.FK-AIRBAG-EFF-BDT; /* F date*/
  FK0IM310.FK-AIRBAG-EFF-XDT = FK0IW01.FK-AIRBAG-EFF-XDT; /* X date*/
  FK0IM310.FK-AIRBAG-HOT-FL = FK0IW01.FK-AIRBAG-HOT-FL; /* Hot flag*/
  FK0IM310.FK-AIRBAG-PAD-FL = FK0IW01.FK-AIRBAG-PAD-FL; /* Hot flag*/
  FK0IM310.SY4SZSCL = FK0IW01.SY4SZSCL; /* Prod size scale*/
  ;
  FK0IW00.FK0IW-IDX = 1; /* Init index*/
  ;
  while (FK0IW00.FK0IW-IDX <= 40) /* For all sizes*/
    ;
    FK0IM310.SY4IDDSC[FK0IW-IDX] = FK0IW01.SY4IDDSC[FK0IW-IDX]; /* Size descriptions*/
    FK0IM310.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] = FK0IW01.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX]; /* Air bag sizes*/
    ;
    FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
  end
  ;
  ;
end // end FK0I-3210

// Check attention identifier
Function FK0I-3300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0IM310.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-AIRBAG-ID = FK0IM310.FK-AIRBAG-ID; /* *//* Bag*/
    FKWREC.FK-AIRBAG-SZ-SCLCD = FK0IM310.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
    ;
    COMMAREA.CATOAP = "FK0I"; /* to applicaiton*/
    COMMAREA.CAITEM = "C"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0IM310.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0IM310.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FK0IM310.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-AIRBAG-ID = FK0IM310.FK-AIRBAG-ID; /* *//* Bag*/
      FKWREC.FK-AIRBAG-SZ-SCLCD = FK0IM310.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
      ;
      COMMAREA.CATOAP = FK0IM310.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0IM310.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0IM310.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf13 /* FK0J requested*/
   || converseVar.eventKey is pf14 /* FK0K requested*/
   || converseVar.eventKey is pf15 /* FK0L requested*/
   || converseVar.eventKey is pf17) /* FK0Z requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0IM310"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0J"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0K"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0L"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK0Z"; /* TO application*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0IM310.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-AIRBAG-ID = FK0IM310.FK-AIRBAG-ID; /* *//* Bag*/
    FKWREC.FK-AIRBAG-SZ-SCLCD = FK0IM310.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0I-3300

// Reset Highlighted fields
Function FK0I-3400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0IM310.FK-VEND-CD initialAttributes; /* Vendor code*/
  set FK0IM310.FK-VEND-SNM initialAttributes; /* Vendor name*/
  set FK0IM310.FK-NIKE-MGR-ID initialAttributes; /* Material manager*/
  set FK0IM310.ZZZCHGDT initialAttributes; /* Change date*/
  set FK0IM310.FK-AIRBAG-ID initialAttributes; /* Bag*/
  set FK0IM310.FK-AIRBAG-DESC initialAttributes; /* Bag desc*/
  set FK0IM310.FK-COMNT initialAttributes; /* Comments*/
  set FK0IM310.FK-AIRBAG-UNT-PRC initialAttributes; /* Unit price*/
  set FK0IM310.FK-AIRBAG-EFF-BDT initialAttributes; /* From eff date*/
  set FK0IM310.FK-AIRBAG-EFF-XDT initialAttributes; /* To eff date*/
  set FK0IM310.FK-AIRBAG-HOT-FL initialAttributes; /* Hot flag*/
  set FK0IM310.FK-AIRBAG-PAD-FL initialAttributes; /* Pad flag*/
  set FK0IM310.SY4SZSCL initialAttributes; /* Prod size scale*/
  set FK0IM310.FK-AIRBAG-SZ-SCLCD initialAttributes; /* Bag size scale*/
  ;
  FK0IW00.FK0IW-IDX = 1; /* Init index*/
  ;
  while (FK0IW00.FK0IW-IDX <= 40) /**/
    ;
    set FK0IM310.SY4IDDSC[FK0IW-IDX] initialAttributes; /* Size id*/
    set FK0IM310.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] initialAttributes; /* Size id*/
    FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
  end
  ;
  set FK0IM310.CATOAP initialAttributes; /* To application*/
  set FK0IM310.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end FK0I-3400

// Verify entered fields
Function FK0I-3500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0IM310.CAITEM > " ") /* Application data was entered*/
    ;
    set FK0IM310.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* if any of the key information was changed, verify the key.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0IM310.FK-VEND-CD != FK0IW01.FK-VEND-CD     /* Vendor changed*/
   || FK0IM310.FK-AIRBAG-ID != FK0IW01.FK-AIRBAG-ID /* Bag changed*/
   || FK0IM310.FK-AIRBAG-SZ-SCLCD != FK0IW01.FK-AIRBAG-SZ-SCLCD) /* Sz scale*/
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the bag number has been entered.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FK0IM310.FK-AIRBAG-ID == " ") /* If bag nbr missing*/
      ;
      set FK0IM310.FK-AIRBAG-ID cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(82); /* Bag nbr missing or invalid*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the vendor has been entered.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FK0IM310.FK-VEND-CD == " ") /* If vendor code missing*/
      ;
      set FK0IM310.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code invalid or missing*/
    end
    ;
    ;
  else
    /* ---------------------------------------------------------------*/
    /* Verify the non-key information if no key info was changed.*/
    /* ---------------------------------------------------------------*/
    ;
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the bag sizes.*/
    /* ---------------------------------------------------------------*/
    ;
    FK0IW00.FK0IW-IDX = 40;
    while (FK0IW00.FK0IW-IDX > 0) /* Check all sizes*/
      ;
      if (FK0IM310.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] == "XX")
         /* Next sentence*/
      else
        ;
        if (FK0IM310.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] not numeric)
          ;
          set FK0IM310.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] cursor, bold;
          FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
          converseLib.validationFailed(162); /* Must be numeric or 'XX'*/
        end
      end
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX - 1;
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the pad flag.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FK0IM310.FK-AIRBAG-PAD-FL == "Y"
     || FK0IM310.FK-AIRBAG-PAD-FL == "N")
      ;
      /* Next sentence*/
    else
      ;
      set FK0IM310.FK-AIRBAG-PAD-FL cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(34); /* Must be 'y' or 'n'*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the hot flag.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FK0IM310.FK-AIRBAG-HOT-FL == "Y"
     || FK0IM310.FK-AIRBAG-HOT-FL == "N")
      ;
      /* Next sentence*/
    else
      ;
      set FK0IM310.FK-AIRBAG-HOT-FL cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(34); /* Must be 'y' or 'n'*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the effective to date.*/
    /* Verify the effective from date.*/
    /* ---------------------------------------------------------------*/
    ;
    FK0I-3510(); /* Validate dates*/
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the description.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FK0IM310.FK-AIRBAG-DESC == " ")
      ;
      set FK0IM310.FK-AIRBAG-DESC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
    ;
    ;
  end
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FK0I-3500

// Verify dates
Function FK0I-3510()
  ;
   /* ------------------------------------------------------------*/
   /* Determine effective 'to' date is valid.  Use subroutine TA0040.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FK0IM310.FK-AIRBAG-EFF-XDT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(8); /* Required field missing or invalid*/
      FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
      set FK0IM310.FK-AIRBAG-EFF-XDT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Determine effective 'from' date is valid.  Use subroutine TA0040.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FK0IM310.FK-AIRBAG-EFF-BDT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(8); /* Required field missing or invalid*/
      FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
      set FK0IM310.FK-AIRBAG-EFF-BDT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Compare dates.  If the from date is greater than  the*/
   /* to date, display error message.*/
   /* perform this edit only if to date entered*/
   /* ------------------------------------------------------------*/
  ;
   /* =======> First, reformat the dates*/
  ;
  FK0IW00.FK0IW-WORK-DATE = FK0IM310.FK-AIRBAG-EFF-BDT;
  if (FK0IW00.FK0IW-WORK-YY <= 75)
    FK0IW-WORK-CC = 20;
  else
    FK0IW-WORK-CC = 19;
  end
  FK0IW00.FK0IW-FK-AIRBAG-EFF-BDT = FK0IW00.FK0IW-WORK-DATE;
  ;
  FK0IW00.FK0IW-WORK-DATE = FK0IM310.FK-AIRBAG-EFF-XDT;
  if (FK0IW00.FK0IW-WORK-YY <= 75)
    FK0IW-WORK-CC = 20;
  else
    FK0IW-WORK-CC = 19;
  end
  FK0IW00.FK0IW-FK-AIRBAG-EFF-XDT = FK0IW00.FK0IW-WORK-DATE;
  ;
  ;
   /* =======> Now, verify the reformatted dates*/
  ;
  if (FK0IW00.FK0IW-FK-AIRBAG-EFF-BDT > FK0IW00.FK0IW-FK-AIRBAG-EFF-XDT)
    ;
    converseLib.validationFailed(99); /* From date must not be > to date*/
    FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
    set FK0IM310.FK-AIRBAG-EFF-BDT cursor, bold; /* Highlight*/
    set FK0IM310.FK-AIRBAG-EFF-XDT bold; /* Highlight*/
  end
  ;
  ;
end // end FK0I-3510

// Process Request
Function FK0I-3600()
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IM310.FK-VEND-CD != FK0IW01.FK-VEND-CD     /* If vendor changed*/
   || FK0IM310.FK-AIRBAG-ID != FK0IW01.FK-AIRBAG-ID /* Bag changed*/
   || FK0IM310.FK-AIRBAG-SZ-SCLCD != FK0IW01.FK-AIRBAG-SZ-SCLCD)
                                                      /* Size scale changed*/
    ;
    FK0IW00.FK0IW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Check to see if any of the air bag sizes were changed.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-SZ-SCL-CHANGED-SW = "N"; /* Initialize switch*/
  ;
  FK0IW00.FK0IW-IDX = 1; /* Init index*/
  while (FK0IW00.FK0IW-IDX <= 40) /* For each size*/
    ;
    if (FK0IM310.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX]
     != FK0IW01.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX]) /* Air bag size changed*/
      ;
      FK0IW00.FK0IW-SZ-SCL-CHANGED-SW = "Y"; /* Set switch*/
      FK0IW00.FK0IW-IDX = 41; /* Get out while ya can*/
    end
    FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If any air bag sizes were changed, check for DCMPNT.VSYSCL01 records.*/
   /* if they exist, the change must be confirmed.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-SZ-SCL-CHANGED-SW == "Y" /* If size scale(s) changed*/
   && FK0IW00.FK0IW-CONFIRM-CHANGE-SW == "N") /* and not confirmed yet*/
    ;
    FK0I-3610(); /* Select count DCMPNT.VSYSCL01 records*/
    ;
    if (FK0IW03.FK0IW-SUM == 0) /* No DCMPNT.VSYSCL01 records exist*/
      FK0IW00.FK0IW-CONFIRM-CHANGE-SW = "Y"; /* We can update records*/
    else
      FK0IW00.FK0IW-CONFIRM-CHANGE-SW = "Y"; /* Confirm the change*/
      converseLib.validationFailed(95); /* Products exists with bag - enter or pa2*/
      FKWREC.XXX-MOD-ID = "3600"; /* Module identification*/
      return;
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Now we are ready for the updates.  Get current date and time, and*/
   /* update any records that have been changed.*/
   /* --------------------------------------------------------------------*/
  ;
  XX0XS01(); /* Get current date and time.*/
  ;
  FK0IW00.FK0IW-UPDT-PERFORMED-SW = "N"; /* Init switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, update the DCMPNT.VABAG001 table.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IM310.FK-AIRBAG-DESC != FK0IW01.FK-AIRBAG-DESC
   || FK0IM310.FK-COMNT != FK0IW01.FK-COMNT
   || FK0IM310.FK-AIRBAG-UNT-PRC != FK0IW01.FK-AIRBAG-UNT-PRC
   || FK0IM310.FK-AIRBAG-EFF-BDT != FK0IW01.FK-AIRBAG-EFF-BDT
   || FK0IM310.FK-AIRBAG-EFF-XDT != FK0IW01.FK-AIRBAG-EFF-XDT
   || FK0IM310.FK-AIRBAG-HOT-FL != FK0IW01.FK-AIRBAG-HOT-FL
   || FK0IM310.FK-AIRBAG-PAD-FL != FK0IW01.FK-AIRBAG-PAD-FL)
    ;
    FK0I-3620(); /* Update DCMPNT.VABAG001*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, update the DCMPNT.VABSCL01 table.*/
   /* If product size scale was changed, update all DCMPNT.VABSCL01*/
   /* records for the map air bag and air bag size scale.  Otherwise,*/
   /* just update those records that have had an airbag size id change.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-SZ-SCL-CHANGED-SW == "Y" /* If size scale(s) changed*/
   && FK0IW00.FK0IW-CONFIRM-CHANGE-SW == "Y") /* and change confirmed*/
    ;
    FK0IW00.FK0IW-IDX = 1; /* Initialize index*/
    while (FK0IW00.FK0IW-IDX <= 40) /* For all sizes*/
      ;
      if (FK0IM310.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX]
       != FK0IW01.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX]) /* Bag size id changed*/
        ;
        FK0I-3630(); /* Update DCMPNT.VABSCL01*/
      end
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If updates were performed, update the DCMPNT.VVNDR001 table.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-UPDT-PERFORMED-SW == "Y") /* Update was performed*/
    ;
    FK0I-3640(); /* Update DCMPNT.VVNDR001*/
  end
  ;
  ;
  ;
  ;
  FK0IW-CONFIRM-CHANGE-SW = "N"; /* Reset change switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* If an update was successfully performed, set a message and exit to*/
   /* re-obtain the data.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-UPDT-PERFORMED-SW == "Y") /* Update was performed*/
    ;
    FK0IW00.FK0IW-REQUEST-DATA-SW = "Y"; /* Request data*/
    FKWREC.XXX-MOD-ID = "3600"; /* Module identification*/
    FKWREC.XXXMSGNO = 1; /* Update completed*/
  end
  ;
  ;
end // end FK0I-3600

// Count DCMPNT.VSYSCL01 records
Function FK0I-3610()
   /* ------------------------------------------------------------*/
   /* Perform a select count on the DCMPNT.VSYSCL01 table to make*/
   /* sure no product records exist for the data to be updated.*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty; /* Initialize*/
  ;
  VSYSCL01.FK-AIRBAG-ID = FK0IM310.FK-AIRBAG-ID; /* Bag nbr*/
  VSYSCL01.FK-AIRBAG-SZ-SCLCD = FK0IM310.FK-AIRBAG-SZ-SCLCD; /* Scale*/
  ;
  ;
  set FK0IW03 empty; /* Passed parameter record to io6240*/
  ;
  FK0IW03.FK0IW-FUNCTION = "SC"; /* Select count*/
  ;
  try
    call "IO6390" (FK0IW03, SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/
    ;
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3610 COUNT DCMPNT.VSYSCL01 RECS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0IW00.FK0IW-CONFIRM-CHANGE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-3610

// Update DCMPNT.VABAG001
Function FK0I-3620()
   /* ------------------------------------------------------------*/
   /* Update the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.VABAG001-GROUP = FK0IW01.VABAG001-GROUP; /* Restore*/
                                                         /* original rec*/
  ;
  VABAG001.FK-AIRBAG-DESC = FK0IM310.FK-AIRBAG-DESC;
  VABAG001.FK-AIRBAG-UNT-PRC = FK0IM310.FK-AIRBAG-UNT-PRC;
  VABAG001.FK-AIRBAG-HOT-FL = FK0IM310.FK-AIRBAG-HOT-FL;
  VABAG001.FK-AIRBAG-PAD-FL = FK0IM310.FK-AIRBAG-PAD-FL;
  VABAG001.FK-COMNT = FK0IM310.FK-COMNT;
  ;
  FK0IW00.FK0IW-WORK-DATE = FK0IM310.FK-AIRBAG-EFF-BDT;
  if (FK0IW00.FK0IW-WORK-YY <= 75)
    FK0IW-WORK-CC = 20;
  else
    FK0IW-WORK-CC = 19;
  end
  VABAG001.FK-AIRBAG-EFF-BDT = FK0IW00.FK0IW-WORK-DATE;
  ;
  FK0IW00.FK0IW-WORK-DATE = FK0IM310.FK-AIRBAG-EFF-XDT;
  if (FK0IW00.FK0IW-WORK-YY <= 75)
    FK0IW-WORK-CC = 20;
  else
    FK0IW-WORK-CC = 19;
  end
  VABAG001.FK-AIRBAG-EFF-XDT = FK0IW00.FK0IW-WORK-DATE;
  ;
  ;
  VABAG001.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VABAG001.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  try
    call "IO6360" ("U ", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW00.FK0IW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No record*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "3620"; /* Module identification*/
      FK0IW00.FK0IW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      ;
      exit stack; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3620 UPDATE DCMPNT.VABAG001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-3620

// Update DCMPNT.VABSCL01
Function FK0I-3630()
   /* ------------------------------------------------------------*/
   /* Update the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty;
  ;
  VABSCL01.VABSCL01-GROUP = FK0IW01.VABSCL01-GROUP[FK0IW-IDX]; /* Restore original record*/
  ;
  VABSCL01.SY4SZSCL = FK0IM310.SY4SZSCL;
  ;
  if (FK0IM310.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] == "XX")
    VABSCL01.FK-AIRBAG-SZ-ID = 0;
    VABSCL01.FK-ALT-AIRBAG-FL = "Y";
  else
    FK0IW00.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] = FK0IM310.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX]; /* Convert to numeric*/
    VABSCL01.FK-AIRBAG-SZ-ID = FK0IW00.FK0IW-BAG-SZ-ID-NUM[FK0IW-IDX];
    VABSCL01.FK-ALT-AIRBAG-FL = "N";
  end
  ;
  VABSCL01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VABSCL01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  try
    call "IO6400" ("U ", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW00.FK0IW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No record*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "3630"; /* Module identification*/
      FK0IW00.FK0IW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      ;
      exit stack; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3630 UPDATE DCMPNT.VABSCL01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-3630

// Update DCMPNT.VVNDR001
Function FK0I-3640()
   /* ------------------------------------------------------------*/
   /* Update the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.VVNDR001-GROUP = FK0IW01.VVNDR001-GROUP; /* Restore*/
                                                        /* original rec*/
  ;
  VVNDR001.FK-NIKE-MGR-ID = COMMAREA.CAUSERID;
  ;
  VVNDR001.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VVNDR001.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  try
    call "IO6180" ("U ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No record*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "3640"; /* Module identification*/
      FK0IW00.FK0IW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      ;
      exit stack; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3640"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3640 UPDATE DCMPNT.VVNDR001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-3640

// Process inquiry map
Function FK0I-4000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FK0I-4100(); /* Obtain the data to display*/
  ;
  FK0I-4200(); /* Format and display the map*/
  ;
  FK0I-4300(); /* Check attention identifier*/
  ;
  FK0I-4400(); /* Reset fields to normal intensity*/
  ;
  FK0I-4500(); /* Verify the entered data*/
  ;
  FK0I-4600(); /* Process valid input request*/
  ;
  ;
end // end FK0I-4000

// Obtain data to display
Function FK0I-4100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.  If requested info*/
   /* not found, this information will be re-displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  set FK0IW01 empty; /* Initialize display storage*/
  ;
  FK0IW00.FK-VEND-CD = FK0IM410.FK-VEND-CD; /* Vendor*/
  FK0IW00.FK-AIRBAG-ID = FK0IM410.FK-AIRBAG-ID; /* Bag*/
  FK0IW00.FK-AIRBAG-SZ-SCLCD = FK0IM410.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select requested information from the database tables.*/
   /* --------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-VABSCL01-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0IW00.FK0IW-VABAG001-FOUND-SW = "N"; /* Init found sw to 'n'*/
  FK0IW00.FK0IW-VVNDR001-FOUND-SW = "N"; /* Init found sw to 'n'*/
  ;
  ;
  if (FK0IM410.FK-AIRBAG-SZ-SCLCD != "  ") /* If size scale on map*/
    ;
    FK0I-4110(); /* Obtain the size scale data from*/
                                  /* (DCMPNT.VABSCL01)*/
    ;
    if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "N") /* Data not found*/
      ;
      set FK0IM410.FK-AIRBAG-SZ-SCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "4100"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* No data to display*/
    end
  end
                                  /*  */
                                  /*  */
  if (FK0IM410.FK-AIRBAG-ID != "  ") /* If bag nbr on map*/
    FK0I-4120(); /* Obtain the bag data from*/
  end /* (DCMPNT.VABAG001)*/
                                  /*  */
                                  /*  */
  FK0I-4130(); /* Obtain the vendor data from*/
                                  /* (DCMPNT.VVNDR001)*/
  ;
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y") /* Air bag size scale found*/
    FK0I-4140(); /* Obtain size descriptions*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data obtained in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-4150(); /* Save data*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-REQUEST-DATA-SW = "N";
  FK0IW00.FK0IW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FK0I-4100

// Get size scale data
Function FK0I-4110()
   /* --------------------------------------------------------------*/
   /* Declare a cursor on the air bag size scale table*/
   /* DCMPNT.VABSCL01.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-4111(); /* Declare DCMPNT.VABSCL01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Fetch a record from the DCMPNT.VABSCL01 cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FK0IW00.FK0IW-END-CURSOR-SW = "N"; /* Init end of cursor switch*/
  ;
  FK0I-4112(); /* Fetch DCMPNT.VABSCL01 cursor*/
  ;
  ;
  if (FK0IW00.FK0IW-END-CURSOR-SW != "Y") /* If not end of cursor*/
    FK0IW00.SY4SZSCL = VABSCL01.SY4SZSCL; /* Save size scale*/
  else
    FK0IW00.SY4SZSCL = "  "; /* Save size scale*/
  end
  ;
   /* --------------------------------------------------------------*/
   /* Save fetched records in working storage array.  Do this*/
   /* until the end of cursor is found.*/
   /* The result of this paragraph will be to have the air bag sizes*/
   /* in a working storage array in shoe size order.*/
   /* NOTE:  sy-sz-id array is set up in the initialization process.*/
   /* --------------------------------------------------------------*/
  ;
  move 0 to FK0IW00.FK0IW-BAG-SZ-ID-NUM[1] for all; /* Init airbag sizes*/
  ;
  while (FK0IW00.FK0IW-END-CURSOR-SW != "Y") /* Until end of cursor*/
    ;
    FK0IW00.FK0IW-IDX = 1; /* Init index*/
    ;
    while (FK0IW00.FK0IW-IDX <= 40) /* Search through all sizes*/
      ;
      if (FK0IW00.SY5SZID[FK0IW-IDX] == VABSCL01.SY5SZID) /* Same size*/
        ;
        if (VABSCL01.FK-ALT-AIRBAG-FL == "Y") /* Alternate bag exists*/
          FK0IW00.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] = "XX";
        else
          FK0IW00.FK0IW-BAG-SZ-ID-NUM[FK0IW-IDX] = VABSCL01.FK-AIRBAG-SZ-ID;
        end
        ;
        FK0IW00.FK0IW-IDX = 41; /* Get out while ya can*/
      end
      ;
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment index*/
    end
    ;
    FK0I-4112(); /* Fetch DCMPNT.VABSCL01 cursor*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Close the DCMPNT.VABSCL01 cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FK0I-4113(); /* Close DCMPNT.VABSCL01 cursor*/
  ;
  ;
end // end FK0I-4110

// Declare DCMPNT.VABSCL01 csr
Function FK0I-4111()
   /* ------------------------------------------------------------*/
   /* Declare and open a cursor from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty;
  ;
  VABSCL01.FK-AIRBAG-ID = FK0IM410.FK-AIRBAG-ID; /* Bag*/
  VABSCL01.FK-AIRBAG-SZ-SCLCD = FK0IM410.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  ;
  ;
  try
    call "IO6400" ("S1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4111"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4111 DECLARE VABSCL01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-4111

// Fetch DCMPNT.VABSCL01 csr
Function FK0I-4112()
   /* ------------------------------------------------------------*/
   /* Fetch the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6400" ("N1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      ;
      FK0IW00.FK0IW-END-CURSOR-SW = "Y"; /* End of cursor*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW00.FK0IW-VABSCL01-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4112"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4112 FETCH VABSCL01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-4112

// Close DCMPNT.VABSCL01 csr
Function FK0I-4113()
   /* ------------------------------------------------------------*/
   /* Close the cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6400" ("C1", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4113"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4113 CLOSE VABSCL01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-4113

// Get bag data
Function FK0I-4120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-VEND-CD = FK0IM410.FK-VEND-CD; /* Vendor*/
  VABAG001.FK-AIRBAG-ID = FK0IM410.FK-AIRBAG-ID; /* Bag*/
  ;
  ;
  try
    call "IO6360" ("S ", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      set FK0IM410.FK-AIRBAG-ID cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "4120"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* no data found*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW00.FK0IW-VABAG001-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4120 GET BAG DATA        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-4120

// Get vendor data
Function FK0I-4130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FK0IM410.FK-VEND-CD; /* Vendor*/
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      set FK0IM410.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "4130"; /* Module identification*/
      FKWREC.XXXMSGNO = 18; /* no data found*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW01.VVNDR001-GROUP = VVNDR001.VVNDR001-GROUP;
      FK0IW00.FK0IW-VVNDR001-FOUND-SW = "Y"; /* Tbl found fl*/
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4130 GET VENDOR DATA     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-4130

// Obtain size descriptions
Function FK0I-4140()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set SY4REC empty;
  ;
  SY4REC.SY4SZSCL = FK0IW00.SY4SZSCL; /* Prod size scale*/
  ;
  ;
  try
    call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      move "*****" to SY4REC.SY4IDDSC[1] for all; /* Default asterisks*/
      return; /* Return to previous process*/
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    ;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4140 GET SIZE DESC       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSCALE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY4REC.SY4DATA; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-4140

// Save data in display storage
Function FK0I-4150()
   /* ------------------------------------------------------------------*/
   /* For each database record found, save data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save air bag size scale data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y") /* Bag size scale found*/
    ;
    FK0IW01.FK-AIRBAG-SZ-SCLCD = FK0IW00.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
    FK0IW01.SY4SZSCL = FK0IW00.SY4SZSCL; /* Prod size scale*/
    move SY4REC.SY4IDDSC to FK0IW01.SY4IDDSC[1] for all; /* Bag size desc*/
    move FK0IW00.FK0IW-BAG-SZ-ID-CHA to FK0IW01.FK0IW-BAG-SZ-ID-CHA[1] for all;
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save air bag data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "Y") /* Color group data found*/
    ;
    FK0IW01.FK-AIRBAG-ID = VABAG001.FK-AIRBAG-ID; /* Bag*/
    FK0IW01.FK-AIRBAG-DESC = VABAG001.FK-AIRBAG-DESC; /* Bag desc*/
    FK0IW01.FK-COMNT = VABAG001.FK-COMNT; /* Comment*/
    FK0IW01.FK-AIRBAG-UNT-PRC = VABAG001.FK-AIRBAG-UNT-PRC; /* Price*/
    FK0IW01.FK-AIRBAG-EFF-BDT = VABAG001.FK-AIRBAG-EFF-BDT; /* F date*/
    FK0IW01.FK-AIRBAG-EFF-XDT = VABAG001.FK-AIRBAG-EFF-XDT; /* T date*/
    FK0IW01.FK-AIRBAG-HOT-FL = VABAG001.FK-AIRBAG-HOT-FL; /* Hot flag*/
    FK0IW01.FK-AIRBAG-PAD-FL = VABAG001.FK-AIRBAG-PAD-FL; /* Pad flag*/
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Save vendor data in display storage.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VVNDR001-FOUND-SW == "Y") /* Vendor data found*/
    ;
    FK0IW01.FK-VEND-CD = VVNDR001.FK-VEND-CD; /* Vendor*/
    FK0IW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
    FK0IW01.FK-NIKE-MGR-ID = VVNDR001.FK-NIKE-MGR-ID; /* Mgr id*/
    FK0IW01.ZZZCHGDT = VVNDR001.ZZZCHGDT; /* Change date*/
  end
  ;
  ;
end // end FK0I-4150

// Format and converse DEL map
Function FK0I-4200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FK0I-4210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0IM410.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0IM410.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0IM410.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Protect fields where no database record was found.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "N") /* No DCMPNT.VABSCL01 rec found*/
    ;
    set FK0IM410.SY4SZSCL invisible, skip; /* Protect*/
    ;
    FK0IW00.FK0IW-IDX = 1; /* Init index*/
    ;
    while (FK0IW00.FK0IW-IDX <= 40) /* For all 40 sizes*/
      ;
      set FK0IM410.SY4IDDSC[FK0IW-IDX] invisible, skip; /* Protect*/
      set FK0IM410.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] invisible, skip; /* Protect*/
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
    end
    ;
  else /* Otherwise, set dark any size with no valid description*/
        /* Also set dark sizes with bag size = 0*/
    ;
    FK0IW00.FK0IW-IDX = 1; /* Init index*/
    ;
    while (FK0IW00.FK0IW-IDX <= 40) /* For all 40 sizes*/
      ;
      if (FK0IM410.SY4IDDSC[FK0IW-IDX] == " ") /* Not valid size*/
        set FK0IM410.SY4IDDSC[FK0IW-IDX] invisible, skip; /* Protect*/
        set FK0IM410.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] invisible, skip;
      end
      ;
      if (FK0IM410.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] == "00") /* Bag size = 0*/
        set FK0IM410.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] invisible, skip;
      end
      ;
      FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
    end
    ;
  end
  ;
  ;
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "N") /* No DCMPNT.VABAG001 rec found*/
    ;
    set FK0IM410.FK-AIRBAG-DESC invisible, skip; /* Protect*/
    set FK0IM410.FK-COMNT invisible, skip; /* Protect*/
    set FK0IM410.FK-AIRBAG-UNT-PRC invisible, skip; /* Protect*/
    set FK0IM410.FK-AIRBAG-EFF-BDT invisible, skip; /* Protect*/
    set FK0IM410.FK-AIRBAG-EFF-XDT invisible, skip; /* Protect*/
    set FK0IM410.FK-AIRBAG-HOT-FL invisible, skip; /* Protect*/
    set FK0IM410.FK-AIRBAG-PAD-FL invisible, skip; /* Protect*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VVNDR001-FOUND-SW == "N") /* No DCMPNT.Vvndr001 rec found*/
    ;
    set FK0IM410.FK-VEND-SNM invisible, skip; /* Protect*/
    set FK0IM410.FK-NIKE-MGR-ID invisible, skip; /* Protect*/
    set FK0IM410.ZZZCHGDT invisible, skip; /* Protect*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FK0IM410 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0IM410.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0IM410.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || FKWREC.XXXMSGNO == 1)             /* Update complete*/
    if (FK0IM410.FK-VEND-CD == " ")
      set FK0IM410.FK-VEND-CD cursor;
    else
      set FK0IM410.FK-AIRBAG-ID cursor;
    end
  end
  ;
  ;
  converse FK0IM410 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0IM410.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0IM410.CAITEM; /* Application data*/
  ;
  ;
end // end FK0I-4200

// Format the display data
Function FK0I-4210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FK0IW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.  If data was found, format from*/
   /* display storage, otherwise format from working storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-VVNDR001-FOUND-SW == "Y") /* If vendor found*/
    ;
    FK0IM410.FK-VEND-CD = FK0IW01.FK-VEND-CD; /* Vendor cd*/
  else
    FK0IM410.FK-VEND-CD = FK0IW00.FK-VEND-CD; /* Vendor cd*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VABAG001-FOUND-SW == "Y") /* If bag found*/
    FK0IM410.FK-AIRBAG-ID = FK0IW01.FK-AIRBAG-ID; /* Bag*/
  else
    FK0IM410.FK-AIRBAG-ID = FK0IW00.FK-AIRBAG-ID; /* Bag*/
  end
  ;
  ;
  if (FK0IW00.FK0IW-VABSCL01-FOUND-SW == "Y") /* If bag size scale found*/
    FK0IM410.FK-AIRBAG-SZ-SCLCD = FK0IW01.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  else
    FK0IM410.FK-AIRBAG-SZ-SCLCD = FK0IW00.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FK0IM410.FK-NIKE-MGR-ID = FK0IW01.FK-NIKE-MGR-ID; /* Manager id*/
  FK0IM410.ZZZCHGDT = FK0IW01.ZZZCHGDT; /* Change date*/
  FK0IM410.FK-VEND-SNM = FK0IW01.FK-VEND-SNM; /* Vendor name*/
  FK0IM410.FK-AIRBAG-DESC = FK0IW01.FK-AIRBAG-DESC; /* Bag desc*/
  FK0IM410.FK-COMNT = FK0IW01.FK-COMNT; /* Comments*/
  FK0IM410.FK-AIRBAG-UNT-PRC = FK0IW01.FK-AIRBAG-UNT-PRC; /* Price*/
  FK0IM410.FK-AIRBAG-EFF-BDT = FK0IW01.FK-AIRBAG-EFF-BDT; /* F date*/
  FK0IM410.FK-AIRBAG-EFF-XDT = FK0IW01.FK-AIRBAG-EFF-XDT; /* X date*/
  FK0IM410.FK-AIRBAG-HOT-FL = FK0IW01.FK-AIRBAG-HOT-FL; /* Hot flag*/
  FK0IM410.FK-AIRBAG-PAD-FL = FK0IW01.FK-AIRBAG-PAD-FL; /* Hot flag*/
  FK0IM410.SY4SZSCL = FK0IW01.SY4SZSCL; /* Prod size scale*/
  ;
  FK0IW00.FK0IW-IDX = 1; /* Init index*/
  ;
  while (FK0IW00.FK0IW-IDX <= 40) /* For all sizes*/
    ;
    FK0IM410.SY4IDDSC[FK0IW-IDX] = FK0IW01.SY4IDDSC[FK0IW-IDX]; /* Size descriptions*/
    FK0IM410.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] = FK0IW01.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX]; /* Air bag sizes*/
    ;
    FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
  end
  ;
  ;
end // end FK0I-4210

// Check attention identifier
Function FK0I-4300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0IM410.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-AIRBAG-ID = FK0IM410.FK-AIRBAG-ID; /* *//* Bag*/
    FKWREC.FK-AIRBAG-SZ-SCLCD = FK0IM410.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
    ;
    COMMAREA.CATOAP = "FK0I"; /* to applicaiton*/
    COMMAREA.CAITEM = "D"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0IM410.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0IM410.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FK0IM410.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-AIRBAG-ID = FK0IM410.FK-AIRBAG-ID; /* *//* Bag*/
      FKWREC.FK-AIRBAG-SZ-SCLCD = FK0IM410.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
      ;
      COMMAREA.CATOAP = FK0IM410.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0IM410.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0IM410.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf13 /* FK0J requested*/
   || converseVar.eventKey is pf14 /* FK0K requested*/
   || converseVar.eventKey is pf15 /* FK0L requested*/
   || converseVar.eventKey is pf17) /* FK0Z requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0IM410"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FK0J"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FK0K"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FK0L"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FK0Z"; /* TO application*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FK0IM410.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-AIRBAG-ID = FK0IM410.FK-AIRBAG-ID; /* *//* Bag*/
    FKWREC.FK-AIRBAG-SZ-SCLCD = FK0IM410.FK-AIRBAG-SZ-SCLCD;
                                                              /* Size scale*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0I-4300

// Reset Highlighted fields
Function FK0I-4400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FK0IM410.FK-VEND-CD initialAttributes; /* Vendor code*/
  set FK0IM410.FK-VEND-SNM initialAttributes; /* Vendor name*/
  set FK0IM410.FK-NIKE-MGR-ID initialAttributes; /* Material manager*/
  set FK0IM410.ZZZCHGDT initialAttributes; /* Change date*/
  set FK0IM410.FK-AIRBAG-ID initialAttributes; /* Bag*/
  set FK0IM410.FK-AIRBAG-DESC initialAttributes; /* Bag desc*/
  set FK0IM410.FK-COMNT initialAttributes; /* Comments*/
  set FK0IM410.FK-AIRBAG-UNT-PRC initialAttributes; /* Unit price*/
  set FK0IM410.FK-AIRBAG-EFF-BDT initialAttributes; /* From eff date*/
  set FK0IM410.FK-AIRBAG-EFF-XDT initialAttributes; /* To eff date*/
  set FK0IM410.FK-AIRBAG-HOT-FL initialAttributes; /* Hot flag*/
  set FK0IM410.FK-AIRBAG-PAD-FL initialAttributes; /* Pad flag*/
  set FK0IM410.SY4SZSCL initialAttributes; /* Prod size scale*/
  set FK0IM410.FK-AIRBAG-SZ-SCLCD initialAttributes; /* Bag size scale*/
  ;
  FK0IW00.FK0IW-IDX = 1; /* Init index*/
  ;
  while (FK0IW00.FK0IW-IDX <= 40) /**/
    ;
    set FK0IM410.SY4IDDSC[FK0IW-IDX] initialAttributes; /* Size id*/
    set FK0IM410.FK0IW-BAG-SZ-ID-CHA[FK0IW-IDX] initialAttributes; /* Size id*/
    FK0IW00.FK0IW-IDX = FK0IW00.FK0IW-IDX + 1; /* Increment*/
  end
  ;
  set FK0IM410.CATOAP initialAttributes; /* To application*/
  set FK0IM410.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end FK0I-4400

// Verify entered fields
Function FK0I-4500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0IM410.CAITEM > " ") /* Application data was entered*/
    ;
    set FK0IM410.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the bag number has been entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0IM410.FK-AIRBAG-ID == " ") /* If bag nbr missing*/
    ;
    set FK0IM410.FK-AIRBAG-ID cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    converseLib.validationFailed(82); /* Bag nbr missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the vendor data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FK0IM410.FK-VEND-CD == " ") /* If vendor code missing*/
    ;
    set FK0IM410.FK-VEND-CD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    converseLib.validationFailed(21); /* Vendor code invalid or missing*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    ;
    FK0IW00.FK0IW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
    exit stack;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify there are no styles associated with the data to be deleted.*/
   /* ---------------------------------------------------------------*/
  ;
  FK0I-4510(); /* Count DCMPNT.VSYSCL01 records*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    ;
    FK0IW00.FK0IW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
    exit stack;
  end
  ;
  ;
end // end FK0I-4500

// Sel distinct DCMPNT.VSYSCL01
Function FK0I-4510()
   /* ------------------------------------------------------------*/
   /* Perform a select count on the DCMPNT.VSYSCL01 table to make*/
   /* sure no product records exist for the data to be updated.*/
   /* ------------------------------------------------------------*/
  ;
  set VSYSCL01 empty; /* Initialize*/
  ;
  ;
  VSYSCL01.FK-AIRBAG-ID = FK0IM410.FK-AIRBAG-ID; /* Bag nbr*/
  ;
  if (FK0IM410.FK-AIRBAG-SZ-SCLCD == " ") /* Wildcard size scales*/
    VSYSCL01.FK-AIRBAG-SZ-SCLCD = "*";
  else
    VSYSCL01.FK-AIRBAG-SZ-SCLCD = FK0IM410.FK-AIRBAG-SZ-SCLCD;
  end
  ;
  ;
  try
    call "IO6390" ("SE", SQLCA, VSYSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      set FK0IM410.FK-AIRBAG-ID cursor, bold; /* Highlight*/
      ;
      if (FK0IM410.FK-AIRBAG-SZ-SCLCD != " ") /* If size scale specified*/
        set FK0IM410.FK-AIRBAG-SZ-SCLCD bold; /* Highlight it*/
      end
      ;
      converseLib.validationFailed(83); /* Styles exist for this bag and scale*/
      FKWREC.XXX-MOD-ID = "4510";
    end
    ;
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4510 SEL DISTINCT DCMPNT.VSYSCL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSYSCL01.VSYSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FK0IW00.FK0IW-CONFIRM-CHANGE-SW = "N"; /* Reset switch*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-4510

// Process Request
Function FK0I-4600()
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If any key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IM410.FK-VEND-CD != FK0IW01.FK-VEND-CD     /* If vendor changed*/
   || FK0IM410.FK-AIRBAG-ID != FK0IW01.FK-AIRBAG-ID /* Bag changed*/
   || FK0IM410.FK-AIRBAG-SZ-SCLCD != FK0IW01.FK-AIRBAG-SZ-SCLCD)
                                                      /* Size scale changed*/
    ;
    FK0IW00.FK0IW-REQUEST-DATA-SW = "Y"; /* Request data*/
    FK0IW00.FK0IW-CONFIRM-DELETE-SW = "N"; /* Confirm delete switch*/
    return; /* Exit to display map*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Every delete must be confirmed.  If the confirm delete switch = 'n'*/
   /* set it = 'y' and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-CONFIRM-DELETE-SW == "N") /* If delete not confirmed*/
    ;
    FK0IW00.FK0IW-CONFIRM-DELETE-SW = "Y"; /* Confirm it*/
    FKWREC.XXX-MOD-ID = 4600; /* Module identification*/
    converseLib.validationFailed(38); /* Enter to delete, pa2 to cancel*/
    return;
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Check to see which records need to be deleted and delete them.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-CONFIRM-DELETE-SW == "Y") /* Delete has been confirmed*/
    ;
    XX0XS01(); /* Get date and time*/
    ;
    ;
    FK0IW00.FK0IW-UPDT-PERFORMED-SW = "N"; /* Update performed switch*/
    ;
    FK0I-4610(); /* Delete size scale(s)*/
    ;
    if (FK0IM410.FK-AIRBAG-SZ-SCLCD == " ") /* If all size scales deleted*/
      ;
      FK0I-4620(); /* Delete air bag record too*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the deletes were successful, update the DCMPNT.VVNDR001 record.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-UPDT-PERFORMED-SW == "Y") /* Updates successful*/
    ;
    FK0I-4630(); /* Update DCMPNT.VVNDR001*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the updates were successful, set a message.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FK0IW00.FK0IW-UPDT-PERFORMED-SW == "Y") /* Updates successful*/
    ;
    FK0I-4640(); /* Update display storage*/
    ;
    FK0IW00.FK0IW-FMAT-MAP-SW = "Y"; /* Reformat the map*/
    FK0IW00.FK0IW-CONFIRM-DELETE-SW = "N"; /* Reset delete switch*/
    FKWREC.XXX-MOD-ID = "4600"; /* Module identification*/
    FKWREC.XXXMSGNO = 1; /* Update complete*/
  end
  ;
  ;
end // end FK0I-4600

// Delete DCMPNT.VABSCL01 records
Function FK0I-4610()
   /* ------------------------------------------------------------*/
   /* Delete the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABSCL01 empty;
  ;
  VABSCL01.FK-AIRBAG-ID = FK0IM410.FK-AIRBAG-ID; /* Bag nbr*/
  ;
  if (FK0IM410.FK-AIRBAG-SZ-SCLCD == " ") /* Wildcard the size scales*/
    VABSCL01.FK-AIRBAG-SZ-SCLCD = "*";
  else
    VABSCL01.FK-AIRBAG-SZ-SCLCD = FK0IM410.FK-AIRBAG-SZ-SCLCD;
  end
  ;
  ;
  try
    call "IO6400" ("D ", SQLCA, VABSCL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* Or no record found*/
      ;
      FK0IW00.FK0IW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4610 DELETE DCMPNT.VABSCL01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSCL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VABSCL01.VABSCL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-4610

// Delete DCMPNT.VABAG001 record
Function FK0I-4620()
   /* ------------------------------------------------------------*/
   /* Delete the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-VEND-CD = FK0IM410.FK-VEND-CD; /* Vendor*/
  VABAG001.FK-AIRBAG-ID = FK0IM410.FK-AIRBAG-ID; /* Bag nbr*/
  ;
  ;
  try
    call "IO6360" ("D ", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* Or no record found*/
      ;
      FK0IW00.FK0IW-UPDT-PERFORMED-SW = "Y"; /* Update performed*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4620 DELETE DCMPNT.VABAG001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-4620

// Update DCMPNT.VVNDR001
Function FK0I-4630()
   /* ------------------------------------------------------------*/
   /* Update the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.VVNDR001-GROUP = FK0IW01.VVNDR001-GROUP; /* Restore*/
                                  /* original rec*/
  ;
  VVNDR001.FK-NIKE-MGR-ID = COMMAREA.CAUSERID;
  ;
  VVNDR001.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VVNDR001.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  try
    call "IO6180" ("U ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FK0IW01.VVNDR001-GROUP = VVNDR001.VVNDR001-GROUP;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No record*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "4630"; /* Module identification*/
      FK0IW00.FK0IW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      ;
      exit stack; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4630 UPDATE DCMPNT.VVNDR001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0I-4630

// Update display storage page
Function FK0I-4640()
   /* ------------------------------------------------------------------*/
   /* If air bag data deleted, blank all display storage for it.*/
   /* ------------------------------------------------------------------*/
  ;
  if (FK0IM410.FK-AIRBAG-SZ-SCLCD == " ") /* Air bag data deleted*/
    ;
    FK0IM410.FK-AIRBAG-ID = " ";
    FK0IW00.FK-AIRBAG-ID = " ";
    FK0IW01.FK-AIRBAG-ID = " ";
    ;
    FK0IW01.FK-AIRBAG-DESC = " "; /* Bag desc*/
    FK0IW01.FK-COMNT = " "; /* Comment*/
    FK0IW01.FK-AIRBAG-UNT-PRC = 0; /* Price*/
    FK0IW01.FK-AIRBAG-EFF-BDT = 0; /* F date*/
    FK0IW01.FK-AIRBAG-EFF-XDT = 0; /* T date*/
    FK0IW01.FK-AIRBAG-HOT-FL = " "; /* Hot flag*/
    FK0IW01.FK-AIRBAG-PAD-FL = " "; /* Pad flag*/
    ;
    FK0IW00.FK0IW-VABAG001-FOUND-SW = "N";
  end
  ;
  ;
   /* ------------------------------------------------------------------*/
   /* Blank the size scale data.*/
   /* ------------------------------------------------------------------*/
  ;
  FK0IM410.FK-AIRBAG-SZ-SCLCD = " ";
  FK0IW00.FK-AIRBAG-SZ-SCLCD = " ";
  FK0IW01.FK-AIRBAG-SZ-SCLCD = " ";
  ;
  FK0IM410.SY4SZSCL = " ";
  FK0IW00.SY4SZSCL = " ";
  FK0IW01.SY4SZSCL = " ";
  ;
  move " " to FK0IW01.SY4IDDSC[1] for all;
  move 0 to FK0IW01.FK0IW-BAG-SZ-ID-NUM[1] for all;
  ;
  FK0IW00.FK0IW-VABSCL01-FOUND-SW = "N";
  ;
  ;
end // end FK0I-4640

// Declare DCMPNT.VABag001 csr
Function FK0IS-01()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VABAG001 empty;
  ;
  VABAG001.FK-AIRBAG-ID = FKWREC.FK-AIRBAG-ID; /* Bag*/
  ;
  ;
  try
    call "IO6360" ("S1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "S-01"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "S-01 DECLARE DCMPNT.VABAG001 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0IS-01

// Fetch DCMPNT.VABag001 csr
Function FK0IS-02()
   /* ------------------------------------------------------------*/
   /* Fetch the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6360" ("N1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FKWREC.FK-VEND-CD[1] = VABAG001.FK-VEND-CD;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No record*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "S-02"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "S-02 FETCH DCMPNT.VABAG001 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0IS-02

// Close DCMPNT.VABag001 csr
Function FK0IS-03()
   /* ------------------------------------------------------------*/
   /* Close the cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6360" ("C1", SQLCA, VABAG001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "S-03"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "S-03 CLOSE DCMPNT.VABAG001 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABAG001"; /* Table view name*/
  TA1REC.TA1TBLKE = VABAG001.VABAG001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FK0IS-03

//*** RECORD=FK0IW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FK0IW00 type basicRecord
  10 FK0IW-MAP-SW FK0IW-MAP-SW ; 
  10 FK0IW-REQUEST-DATA-SW FK0IW-REQUEST-DATA-SW ; 
  10 FK0IW-FMAT-MAP-SW FK0IW-FMAT-MAP-SW ; 
  10 FK0IW-UPDT-PERFORMED-SW FK0IW-UPDT-PERFORMED-SW ; 
  10 FK0IW-CONFIRM-DELETE-SW FK0IW-CONFIRM-DELETE-SW ; 
  10 FK0IW-CONFIRM-CHANGE-SW FK0IW-CONFIRM-CHANGE-SW ; 
  10 FK0IW-SZ-SCL-CHANGED-SW FK0IW-SZ-SCL-CHANGED-SW ; 
  10 FK0IW-COPY-DATA-SW FK0IW-COPY-DATA-SW ; 
  10 FK0IW-VABSCL01-FOUND-SW FK0IW-VABSCL01-FOUND-SW ; 
  10 FK0IW-VABAG001-FOUND-SW FK0IW-VABAG001-FOUND-SW ; 
  10 FK0IW-VVNDR001-FOUND-SW FK0IW-VVNDR001-FOUND-SW ; 
  10 FK0IW-VABSCL01-COPIED-SW FK0IW-VABSCL01-COPIED-SW ; 
  10 FK0IW-VABAG001-COPIED-SW FK0IW-VABAG001-COPIED-SW ; 
  10 FK0IW-END-CURSOR-SW FK0IW-END-CURSOR-SW ; 
  10 FK0IW-IDX FK0IW-IDX ; 
  10 FK-VEND-CD FK-VEND-CD ; 
  10 FK-AIRBAG-ID FK-AIRBAG-ID ; 
  10 FK-AIRBAG-SZ-SCLCD FK-AIRBAG-SZ-SCLCD ; 
  10 SY4SZSCL SY4SZSCL ; 
  10 FK0IW-BAG-SZ-ID-CHA FK0IW-BAG-SZ-ID-CHA [40] ; 
    15 FK0IW-BAG-SZ-ID-NUM FK0IW-BAG-SZ-ID-NUM ; 
  10 SY5SZID SY5SZID [40] ; 
  10 FK0IM-COPY-BAG-NBR FK0IM-COPY-BAG-NBR ; 
  10 FK0IM-COPY-SZ-SCL FK0IM-COPY-SZ-SCL ; 
  10 FK0IW-WORK-DATE FK0IW-WORK-DATE ; 
    15 FK0IW-WORK-CC FK0IW-WORK-CC ; 
    15 FK0IW-WORK-YYMMDD FK0IW-WORK-YYMMDD ; 
      20 FK0IW-WORK-YY FK0IW-WORK-YY ; 
      20 FK0IW-WORK-MM FK0IW-WORK-MM ; 
      20 FK0IW-WORK-DD FK0IW-WORK-DD ; 
  10 FK0IW-FK-AIRBAG-EFF-BDT FK0IW-FK-AIRBAG-EFF-BDT ; 
  10 FK0IW-FK-AIRBAG-EFF-XDT FK0IW-FK-AIRBAG-EFF-XDT ; 
end // end FK0IW00

//*** RECORD=FK0IW01 ****
// ----------------------------
// Application display storage.
// ----------------------------
// ***********************
Record FK0IW01 type basicRecord
  10 FK-VEND-CD FK-VEND-CD ; 
  10 FK-VEND-SNM FK-VEND-SNM ; 
  10 FK-NIKE-MGR-ID FK-NIKE-MGR-ID ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 FK-AIRBAG-ID FK-AIRBAG-ID ; 
  10 FK-AIRBAG-DESC FK-AIRBAG-DESC ; 
  10 FK-COMNT FK-COMNT ; 
  10 FK-AIRBAG-UNT-PRC FK-AIRBAG-UNT-PRC ; 
  10 FK-AIRBAG-EFF-BDT FK-AIRBAG-EFF-BDT ; 
  10 FK-AIRBAG-EFF-XDT FK-AIRBAG-EFF-XDT ; 
  10 FK-AIRBAG-HOT-FL FK-AIRBAG-HOT-FL ; 
  10 FK-AIRBAG-PAD-FL FK-AIRBAG-PAD-FL ; 
  10 SY4SZSCL SY4SZSCL ; 
  10 FK-AIRBAG-SZ-SCLCD FK-AIRBAG-SZ-SCLCD ; 
  10 SY4IDDSC SY4IDDSC [40] ; 
  10 FK0IW-BAG-SZ-ID-CHA FK0IW-BAG-SZ-ID-CHA [40] ; 
    15 FK0IW-BAG-SZ-ID-NUM FK0IW-BAG-SZ-ID-NUM ; 
  10 VVNDR001-GROUP VVNDR001-GROUP ; 
  10 VABAG001-GROUP VABAG001-GROUP ; 
  10 VABSCL01-GROUP VABSCL01-GROUP [40] ; 
end // end FK0IW01

//*** RECORD=FK0IW02 ****
// ----------------------------
// Copy function display storage.
// ----------------------------
// ***********************
Record FK0IW02 type basicRecord
  10 FK-VEND-CD FK-VEND-CD ; 
  10 FK-VEND-SNM FK-VEND-SNM ; 
  10 FK-NIKE-MGR-ID FK-NIKE-MGR-ID ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 FK-AIRBAG-ID FK-AIRBAG-ID ; 
  10 FK-AIRBAG-DESC FK-AIRBAG-DESC ; 
  10 FK-COMNT FK-COMNT ; 
  10 FK-AIRBAG-UNT-PRC FK-AIRBAG-UNT-PRC ; 
  10 FK-AIRBAG-EFF-BDT FK-AIRBAG-EFF-BDT ; 
  10 FK-AIRBAG-EFF-XDT FK-AIRBAG-EFF-XDT ; 
  10 FK-AIRBAG-HOT-FL FK-AIRBAG-HOT-FL ; 
  10 FK-AIRBAG-PAD-FL FK-AIRBAG-PAD-FL ; 
  10 SY4SZSCL SY4SZSCL ; 
  10 FK-AIRBAG-SZ-SCLCD FK-AIRBAG-SZ-SCLCD ; 
  10 SY4IDDSC SY4IDDSC [40] ; 
  10 FK0IW-BAG-SZ-ID-CHA FK0IW-BAG-SZ-ID-CHA [40] ; 
    15 FK0IW-BAG-SZ-ID-NUM FK0IW-BAG-SZ-ID-NUM ; 
  10 VVNDR001-GROUP VVNDR001-GROUP ; 
  10 VABAG001-GROUP VABAG001-GROUP ; 
  10 VABSCL01-GROUP VABSCL01-GROUP [40] ; 
  10 FK0IM-COPY-BAG-NBR FK0IM-COPY-BAG-NBR ; 
  10 FK0IM-COPY-SZ-SCL FK0IM-COPY-SZ-SCL ; 
end // end FK0IW02

//*** RECORD=FK0IW03 ****
// This work area is the first argument that is passed in the
// CALL statement for module IO6390.
// It contains the function to be performed and one general
// use summary count field.  The count field is used in
// conjunction with the select count function.
// 
// 
//   DATE       NAME      COMMENT
// --------    ------     -------------------------------------
// 06/19/92    jalle1     Initial record creation.
// ***********************
Record FK0IW03 type basicRecord
  10 FK0IW-FUNCTION FK0IW-FUNCTION ; 
  10 FK0IW-SUM FK0IW-SUM ; 
end // end FK0IW03

//*** RECORD=FK0IW04 ****
// This work area is the first argument that is passed in the
// CALL statement for module IO6400.
// It contains the function to be performed and one general
// use summary count field.  The count field is used in
// conjunction with the select count function.
// 
// 
//   DATE       NAME      COMMENT
// --------    ------     -------------------------------------
// 06/19/92    jalle1     Initial record creation.
// ***********************
Record FK0IW04 type basicRecord
  10 FK0IW-FUNCTION FK0IW-FUNCTION ; 
  10 FK0IW-SUM FK0IW-SUM ; 
end // end FK0IW04

// copy fk-airbag-nbr
DataItem FK0IM-COPY-BAG-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// copy fk-airbag-sz-scl-cd
DataItem FK0IM-COPY-SZ-SCL char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FK_AIRBAG_SZ_ID (CHAR)
DataItem FK0IW-BAG-SZ-ID-CHA char(2)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// FK_AIRBAG_SZ_ID (NUM)
DataItem FK0IW-BAG-SZ-ID-NUM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Confirm the change switch
DataItem FK0IW-CONFIRM-CHANGE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Confirm the delete switch
DataItem FK0IW-CONFIRM-DELETE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Copy data switch
DataItem FK0IW-COPY-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of cursor switch
DataItem FK0IW-END-CURSOR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Airbag effective beg date
DataItem FK0IW-FK-AIRBAG-EFF-BDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Airbag effective cancel date
DataItem FK0IW-FK-AIRBAG-EFF-XDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format the map switch
DataItem FK0IW-FMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// I/O module function
DataItem FK0IW-FUNCTION char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// General index
DataItem FK0IW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Map to be displayed switch
DataItem FK0IW-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem FK0IW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Summary count 1
DataItem FK0IW-SUM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Size scale was changed switch
DataItem FK0IW-SZ-SCL-CHANGED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Update was performed switch
DataItem FK0IW-UPDT-PERFORMED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DCMPNT.VABAG001 copied switch
DataItem FK0IW-VABAG001-COPIED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DCMPNT.VABAG001 found switch
DataItem FK0IW-VABAG001-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DCMPNT.VABSCL01 copied switch
DataItem FK0IW-VABSCL01-COPIED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DCMPNT.VABSCL01 found switch
DataItem FK0IW-VABSCL01-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DCMPNT.VVNDR001 found switch
DataItem FK0IW-VVNDR001-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Work century
DataItem FK0IW-WORK-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work date
DataItem FK0IW-WORK-DATE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work day
DataItem FK0IW-WORK-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work month
DataItem FK0IW-WORK-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work year
DataItem FK0IW-WORK-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work year/month/day
DataItem FK0IW-WORK-YYMMDD num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

