package fk0a;

import corpcom2.XX0XW01;
import corpcom3.XPFK001;
import corpcom4.XSFKS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import fk.common.FKWREC;
import ta.common.TA1REC;
import ta.common.TAEREC;
//*** PROGRAM=FK0A ****
// description here
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      11/17/88  USERID  New application.
//          09/21/92  JALLE1  Add option to FK0N - prelim rpts.
//          05/24/93  JALLE1  Add option to FK05
//                            Add option to FM0A - protect.
//                            Add option to FM0H - protect.
//          09/13/93  JALLE1  Make FM0A, FM0H available for
//                            select.
// FK-9994  09/15/93  JALLE1  CSP 4.1 conversion.
// *********************
Program FK0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FKWREC FKWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FK0AM.FK0AM110 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FK0AM110 initial; /* map input/output*/
    set FKWREC empty; /* common work record comp. forecastin*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    ;
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0A-001; /* Converse the main process*/
    ;
    ;
    FK0A-001: FK0A-001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FK0A-001; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FK0A

// Main process to display a map
Function FK0A-001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
   /* perFORM fk0a-100;              /* Obtain the data to display*/
  ;
  FK0A-200(); /* Format and display the map*/
  ;
  FK0A-300(); /* Check attention identifier*/
  ;
  FK0A-400(); /* Reset fields to normal intensity*/
  ;
  FK0A-500(); /* Verify the entered data*/
  ;
  FK0A-600(); /* Process valid input request*/
  ;
  ;
end // end FK0A-001

// Format and converse map
Function FK0A-200()
  ;
  if (converseVar.validationMsgNum != 0) /* Message to display*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* SAVE MESSAGE TO WORK RECORD*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FK0AM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FK0AM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FK0AM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FK0AM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FK0AM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
    ;
    set FK0AM110 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  ;
  set FK0AM110.FK0AM-SELECTION cursor; /* establish cursor position*/
  ;
  ;
  ;
  converse FK0AM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FK0AM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FK0AM110.CAITEM; /* Application data*/
  ;
  ;
end // end FK0A-200

// Check attention identifier
Function FK0A-300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    COMMAREA.CATOAP = "FK0A"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FK0AM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FK0AM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      COMMAREA.CATOAP = FK0AM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FK0AM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FK0AM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FK0AM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FY0M"; /* TO application*/
      COMMAREA.CAITEM = FK0AM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FK0AM110.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0A-300

// reset fields to normal intensi
Function FK0A-400()
   /* ------------------------------------------------------------*/
   /* Reset highlighted fields to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set FK0AM110.FK0AM-SELECTION initialAttributes; /* menu selection*/
  set FK0AM110.CATOAP initialAttributes; /* fast path to application*/
  set FK0AM110.CAITEM initialAttributes; /* fast path application data*/
  ;
  ;
end // end FK0A-400

// verify entered data
Function FK0A-500()
   /* ------------------------------------------------------------*/
   /* Set error if invalid selection made*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CAITEM > " ")
    FKWREC.XXX-MOD-ID = "500";
    set FK0AM110.CAITEM cursor, bold;
    converseLib.validationFailed(7);
  end
  ;
  if (FK0AM110.FK0AM-SELECTION > 9
   || FK0AM110.FK0AM-SELECTION < 1)
    FKWREC.XXX-MOD-ID = "500";
    set FK0AM110.FK0AM-SELECTION cursor, bold;
    converseLib.validationFailed(09); /* Selection not available from this menu*/
  end
  ;
  if (converseVar.validationMsgNum != 0)
    exit stack;
  end
end // end FK0A-500

// Process valid request
Function FK0A-600()
   /* ------------------------------------------------------------*/
   /* Process valid request - transfer to requested application.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (FK0AM110.FK0AM-SELECTION == 1
   || FK0AM110.FK0AM-SELECTION == 2
   || FK0AM110.FK0AM-SELECTION == 3
   || FK0AM110.FK0AM-SELECTION == 4
   || FK0AM110.FK0AM-SELECTION == 5
   || FK0AM110.FK0AM-SELECTION == 6
   || FK0AM110.FK0AM-SELECTION == 7
   || FK0AM110.FK0AM-SELECTION == 8
   || FK0AM110.FK0AM-SELECTION == 9)
    ;
    if (FK0AM110.FK0AM-SELECTION == 1) /* FK0M requested*/
      COMMAREA.CATOAP = "FK0B"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (FK0AM110.FK0AM-SELECTION == 2) /* FK0C requested*/
      COMMAREA.CATOAP = "FK0C"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (FK0AM110.FK0AM-SELECTION == 3) /* FK0D requested*/
      COMMAREA.CATOAP = "FK0D"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (FK0AM110.FK0AM-SELECTION == 4) /* FK0o requested*/
      COMMAREA.CATOAP = "FK0O"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (FK0AM110.FK0AM-SELECTION == 5) /* FK0U requested*/
      COMMAREA.CATOAP = "FK0U"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (FK0AM110.FK0AM-SELECTION == 6) /* FK05 requested*/
      COMMAREA.CATOAP = "FK05"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (FK0AM110.FK0AM-SELECTION == 7) /* FK0N requested*/
      COMMAREA.CATOAP = "FK0N"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (FK0AM110.FK0AM-SELECTION == 8) /* FM0A requested*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (FK0AM110.FK0AM-SELECTION == 9) /* FM0H requested*/
      COMMAREA.CATOAP = "FM0H"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FK0A-600

