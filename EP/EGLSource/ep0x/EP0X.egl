package ep0x;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ep.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import vv.common.*;
//*** PROGRAM=EP0X ****
//          ========================================
//          EP0X - SHIPMENT SEQUENCE ON HOLD REQUEST
//          ========================================
// 
// This application enables users to either put a specific
// shipment sequence on hold or to take if off hold.
// 
// The user enters the option and the shipment sequence.  A
// special iomod (EP9340) is called to perform the updates.
// If the call was successful, row counts for each table
// updated are displayed.
// 
// The intent is that this application is used only by
// users with systems expertise and will not be on the "EP"
// menu.  Fastpath is the only entry option.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      01/08/98  ESMIT2  New application.
// chg      02/04/98  ESMIT2  Enable fastpath. Take out roll-
//                            back in EP9340 and add to EP0X.
// chg      02/11/98  ESMIT2  Add function 3 functionality to
//                            to update carrier and service
// multgpc  08/06/99  OENFIE  regenerate to pick up changes to
//                            XPEP-00000
// *********************
Program EP0X type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "EP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  EP0XW00 EP0XW00; // record
  EP0XW01 EP0XW01; // record
  EPWREC EPWREC; // record
  ERRSQLCA ERRSQLCA; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  VWCARR01 VWCARR01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use EP0XM.EP0XM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPEP-00000: XPEP-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set EP0XM001 initial; /* M001 input/output*/
    set EP0XW00 empty; /* Working storage*/
    set EP0XW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    EP0XW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    EP0XW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    EPWREC.EPW-FIRST-TM-SW = "Y"; /* First time in switch*/

    EPWREC.EPW-MSG-NO = 0; /* Initialize on 1st entry*/

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto EP0X-00000; /* Converse the main process*/


    EP0X-00000: EP0X-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto EP0X-00000; /* Converse the main process*/


  end // end main
end // end EP0X

// Main process to display a map
Function EP0X-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/


  EP0X-10000(); /* Obtain the data to display*/

  EP0X-20000(); /* Format and display the map*/

  EP0X-30000(); /* Check attention identifier*/

  EP0X-40000(); /* Verify the entered data*/

  EP0X-50000(); /* Process valid input request*/


end // end EP0X-00000

// Obtain the data to display
Function EP0X-10000()
   /* ------------------------------------------------------------*/
   /* Check for first time into the application and reset to no.*/
   /* ------------------------------------------------------------*/

  if (EPWREC.EPW-FIRST-TM-SW == "Y") /* First time in*/
    EPWREC.EPW-FIRST-TM-SW = "N"; /* Set 1st time to NO*/
  end


   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (EP0XW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* Clear the map display storage area and save the key fields.*/
   /* ------------------------------------------------------------*/

  set EP0XW01 empty; /* M001 display storage*/

  EP0XW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  EP0XW01.EP0XW-EP9340-FUNCT-CD = EP0XM001.EP0XM-OPTION-CD;
                                                      /* EP9430 Function*/
  EP0XW01.SR-SHP-SEQ-NBR = EP0XM001.SR-SHP-SEQ-NBR;
                                                      /* Ship Sequence Nbr*/
  EP0XW01.DC-CARR-ID = EP0XM001.DC-CARR-ID;
                                                      /* Carrier Id*/
  EP0XW01.DC-CARR-SVC-ABRV = EP0XM001.DC-CARR-SVC-ABRV;
                                                      /* Carrier Service*/
  EP0XW01.EP0XW-EP9340-MFSTH-CNT = EP0XM001.EP0XM-MFST-HDR-UPD-CNT;
                                                      /* MFSTH rows updated*/
  EP0XW01.EP0XW-EP9340-MFSTC-CNT = EP0XM001.EP0XM-MFST-CRT-UPD-CNT;
                                                      /* MFSTC rows updated*/
  EP0XW01.EP0XW-EP9340-MFSTS-CNT = EP0XM001.EP0XM-MFST-SKU-UPD-CNT;
                                                      /* MFSTS rows updated*/
  EP0XW01.EP0XW-EP9340-MFSTX-CNT = EP0XM001.EP0XM-MFST-XRF-UPD-CNT;
                                                      /* MFSTX rows updated*/
  EP0XW01.EP0XW-EP9340-SHMTH-CNT = EP0XM001.EP0XM-SHMT-HDR-UPD-CNT;
                                                      /* SHMTH rows updated*/
  EP0XW01.EP0XW-EP9340-SHMTD-CNT = EP0XM001.EP0XM-SHMT-DTL-UPD-CNT;
                                                      /* SHMTD rows updated*/


   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  EP0XW00.XXX-RQT-DATA-FL = "N"; /* Request for data*/


end // end EP0X-10000

// Format and converse the map
Function EP0X-20000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    EPWREC.EPW-MSG-NO = converseVar.validationMsgNum; /* Message number*/
  end


   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (EP0XW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    EP0X-21000(); /* Format the data in the map*/
  end


   /* ------------------------------------------------------------*/
   /* Determine whether to protect any of the modifiable fields.*/
   /* ------------------------------------------------------------*/

  EP0X-22000(); /* Check change authorization*/


   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  EP0XM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  EP0XM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  EP0XM001.CAITEM = COMMAREA.CAITEM; /* Application data*/


   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (EPWREC.EPW-MSG-NO != 0) /* Msg*/

    if (EPWREC.EPW-MSG-NO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(EPWREC.EPW-MSG-NO);
    end /* Msg nbr*/

    EP0XM001.XXX-MSG-LOC-ID = EPWREC.XXXLOCID; /* Msg loc*/

    set EP0XM001 alarm; /* Sound alarm*/

  end

  if (EPWREC.EPW-MSG-NO != 185 /* Carr, svc edit*/
   && EPWREC.EPW-MSG-NO != 159 /* Not on TWCARR00*/
   && EPWREC.EPW-MSG-NO != 186 /* Shp Seq missing*/
   && EPWREC.EPW-MSG-NO != 187) /* Blank out carr,svc*/

    set EP0XM001.EP0XM-OPTION-CD cursor;

  end


  converse EP0XM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  EPWREC.XXXLOCID = " "; /* Message location*/
  EPWREC.EPW-MSG-NO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = EP0XM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = EP0XM001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Clear counts from any prior update.*/
   /* ------------------------------------------------------------*/

  EP0XM001.EP0XM-MFST-HDR-UPD-CNT = 0;
  EP0XM001.EP0XM-MFST-CRT-UPD-CNT = 0;
  EP0XM001.EP0XM-MFST-SKU-UPD-CNT = 0;
  EP0XM001.EP0XM-MFST-XRF-UPD-CNT = 0;
  EP0XM001.EP0XM-SHMT-HDR-UPD-CNT = 0;
  EP0XM001.EP0XM-SHMT-DTL-UPD-CNT = 0;


   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set EP0XM001.EP0XM-OPTION-CD normal; /* Option*/
  set EP0XM001.SR-SHP-SEQ-NBR normal; /* Shipment Sequence Number*/

  set EP0XM001.CATOAP normal; /* TO application*/
  set EP0XM001.CAITEM normal; /* Application data*/


end // end EP0X-20000

// Format the data in the map
Function EP0X-21000()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set EP0XM001 initial; /* M001 input/output area*/

  EP0XW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/


   /* ------------------------------------------------------------*/
   /* Place cursor on first empty field.*/
   /* ------------------------------------------------------------*/

  if (EP0XW01.EP0XW-EP9340-FUNCT-CD > 0)
    set EP0XM001.EP0XM-OPTION-CD cursor; /* Option*/
  else
    set EP0XM001.SR-SHP-SEQ-NBR cursor; /* Ship Seq Nbr*/
  end


   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  EP0XM001.EP0XM-OPTION-CD = EP0XW01.EP0XW-EP9340-FUNCT-CD;
  EP0XM001.SR-SHP-SEQ-NBR = EP0XW01.SR-SHP-SEQ-NBR;
  EP0XM001.DC-CARR-ID = EP0XW01.DC-CARR-ID;
  EP0XM001.DC-CARR-SVC-ABRV = EP0XW01.DC-CARR-SVC-ABRV;
  EP0XM001.EP0XM-MFST-HDR-UPD-CNT = EP0XW-EP9340-MFSTH-CNT;
  EP0XM001.EP0XM-MFST-CRT-UPD-CNT = EP0XW-EP9340-MFSTC-CNT;
  EP0XM001.EP0XM-MFST-SKU-UPD-CNT = EP0XW-EP9340-MFSTS-CNT;
  EP0XM001.EP0XM-MFST-XRF-UPD-CNT = EP0XW-EP9340-MFSTX-CNT;
  EP0XM001.EP0XM-SHMT-HDR-UPD-CNT = EP0XW-EP9340-SHMTH-CNT;
  EP0XM001.EP0XM-SHMT-DTL-UPD-CNT = EP0XW-EP9340-SHMTD-CNT;


   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  EP0XW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end EP0X-21000

// Check change authorization
Function EP0X-22000()
   /* ------------------------------------------------------------*/
   /* If requested data was found and the user is authorized to*/
   /* change data on the screen, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (EP0XW00.XXX-RQT-DATA-FL == "N" /* Requested data was found*/
   && COMMAREA.CACHGFL == "Y")       /* and user authorized to change*/

    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* Otherwise, protect the modifiable fields on the screen.*/
   /* ------------------------------------------------------------*/

  set EP0XM001.EP0XM-OPTION-CD skip; /* Option*/
  set EP0XM001.SR-SHP-SEQ-NBR skip; /* Shipment Seq Nbr*/
  set EP0XM001.DC-CARR-ID skip; /* Carrier Id*/
  set EP0XM001.DC-CARR-SVC-ABRV skip; /* Carrier Service*/


end // end EP0X-22000

// Check attention identifier
Function EP0X-30000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (EP0XW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set EP0XW01 empty; /* M001 display storage*/
    end

    EP0XW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    EP0XW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end


   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (EP0XM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      COMMAREA.CATOAP = EP0XM001.CATOAP;
      XSEPS-EXIT(); /* Exit to another application*/
      set EP0XM001.CATOAP cursor, bold; /* Highlight*/

    else

      EPWREC.XXXLOCID = "30000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end


   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "EP0M"; /* System Menu*/
    end

    if (converseVar.eventKey is pf4) /* PF3 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* GOAL Master Menu*/
    end

    XSEPS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end


   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    EPWREC.XXXLOCID = "30000"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end EP0X-30000

// Verify data that was entered
Function EP0X-40000()

   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    EPWREC.XXXLOCID = "40000"; /* Message location*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    set EP0XM001.CAITEM cursor, bold; /* Highlight*/

  end


   /* ------------------------------------------------------------*/
   /* Check for changes and perform necessary edits.*/
   /* ------------------------------------------------------------*/

  if (EP0XM001.EP0XM-OPTION-CD != EP0XW01.EP0XW-EP9340-FUNCT-CD
   || EP0XM001.SR-SHP-SEQ-NBR != EP0XW01.SR-SHP-SEQ-NBR
   || EP0XM001.DC-CARR-ID != EP0XW01.DC-CARR-ID
   || EP0XM001.DC-CARR-SVC-ABRV != EP0XW01.DC-CARR-SVC-ABRV)

    EP0X-41000(); /* Edit changes*/

  end


   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to display map*/

  end


end // end EP0X-40000

// Check for required key fields
Function EP0X-41000()
   /* ------------------------------------------------------------*/
   /* Verify that a correct function has been entered.*/
   /* ------------------------------------------------------------*/

  EPWREC.XXXLOCID = "4100"; /* Message location*/

  if (EP0XM001.EP0XM-OPTION-CD <= 0) /* Option not entered*/

    converseLib.validationFailed(151); /* Field missing*/
    set EP0XM001.EP0XM-OPTION-CD cursor, bold; /* Highlight*/

    exit stack;

  else

    if (EP0XM001.EP0XM-OPTION-CD != 1
     && EP0XM001.EP0XM-OPTION-CD != 2
     && EP0XM001.EP0XM-OPTION-CD != 3)

      converseLib.validationFailed(151); /* Field invalid*/
      set EP0XM001.EP0XM-OPTION-CD cursor, bold; /* Highlight*/

      exit stack;

    end
  end


  if (EP0XM001.SR-SHP-SEQ-NBR <= 0) /* Ship Seq missing*/

    converseLib.validationFailed(186); /* Required*/
    set EP0XM001.SR-SHP-SEQ-NBR cursor, bold; /* Highlight*/

    exit stack;

  end


  if (EP0XM001.EP0XM-OPTION-CD == 1 /* On hold*/
   || EP0XM001.EP0XM-OPTION-CD == 2) /* Off hold*/

    if (EP0XM001.DC-CARR-ID > " "
     || EP0XM001.DC-CARR-SVC-ABRV > " ") /* Option 3 info*/

      set EP0XM001.DC-CARR-ID bold, cursor;
      set EP0XM001.DC-CARR-SVC-ABRV bold;
      converseLib.validationFailed(187); /* Must be blank*/
      exit stack;

    end

  end


   /* VALIDATE THAT DC CARRIER ID AND CARRIER SERVICE*/
   /* COMBINATION ARE VALID, I.E. EXISTS ON TWCARR00*/

  if (EP0XM001.EP0XM-OPTION-CD == 3) /* Carr, svc update*/

    if (EP0XM001.DC-CARR-ID > " "
     && EP0XM001.DC-CARR-SVC-ABRV > " ")

      EP0X-41100(); /* Validate carr,svc*/

    else

      set EP0XM001.DC-CARR-ID bold, cursor;
      set EP0XM001.DC-CARR-SVC-ABRV bold;
      converseLib.validationFailed(185);

    end
  end


  if (converseVar.validationMsgNum != 0)
    exit stack;
  end


end // end EP0X-41000

// Validate carrier & service
Function EP0X-41100()
   /* ------------------------------------------------------------*/
   /* Ensure that the entered DC Carrier and Carrier Service*/
   /* exist on TWCARR00.*/
   /* ------------------------------------------------------------*/

  EP0X-41110(); /* Open csr on TWCARR00*/

  EP0X-41120(); /* Fetch csr on TWCARR00*/

  if (SQLCA.VAGen_SQLCODE != 0)

    EPWREC.XXXLOCID = "4110"; /* Module id*/
    set EP0XM001.DC-CARR-ID cursor, bold; /* Hilite error*/
    set EP0XM001.DC-CARR-SVC-ABRV cursor, bold; /* Hilite error*/
    converseLib.validationFailed(159); /* Not valid*/
  end

  EP0X-41130(); /* Close csr on TWCARR00*/


end // end EP0X-41100

// Open csr on Warehouse Carrier
Function EP0X-41110()
   /* ------------------------------------------------------------*/
   /* Open the cursor on warehouse carrier table*/
   /* Allow for wildcard selection parameters*/
   /* ------------------------------------------------------------*/

  set VWCARR01 empty; /* Init rec*/

  VWCARR01.XWH-WHSE-CD = "51"; /* Whse code*/

  VWCARR01.DC-CARR-ID = EP0XM001.DC-CARR-ID; /* DC Carrier*/
  VWCARR01.DC-CARR-SVC-ABRV = EP0XM001.DC-CARR-SVC-ABRV; /* Carr Svc*/

   /* Wildcard the following selection fields*/
  VWCARR01.TF-CARR-CD = "*"; /* GOAL Carr*/
  VWCARR01.DC-SAT-DLVR-FL = "*"; /* SAT Dlvr*/
  VWCARR01.TF4FBLIN = "*"; /* Frgt Type*/
  VWCARR01.XXX-STAT = "*"; /* Status*/

   /* ------------------------------------------------------------*/
   /* Select warehouse carrier IO call*/
   /* ------------------------------------------------------------*/

  try
    call "VWCARR01" ("S1", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return*/
      return; /* Return*/
    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP rtn cd*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  EPWREC.XXXLOCID = "4111"; /* Module id*/

  if (sysVar.errorCode == "00000000" /* Successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Contention*/

    converseLib.validationFailed(31); /* Data in use*/
    TA1REC.TA1FUNC = "POST"; /* Function*/

  else

    converseLib.validationFailed(01); /* Error*/
    TA1REC.TA1FUNC = "RETN"; /* Function*/

    converseLib.clearScreen();
     /* Clear map*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OBTAIN WAREHOUSE CARRIER     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = EPWREC.XXXLOCID; /* Module*/
  TA1REC.TA1DBASE = "DPICK   "; /* Data base*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  TA1REC.TA1TBLKE = VWCARR01.DC-CARR-ID; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  exit stack; /* Exit to map*/


end // end EP0X-41110

// Fetch next Warehouse Carrier
Function EP0X-41120()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted*/
   /* ------------------------------------------------------------*/

  set VWCARR01 empty; /* Clear DCLGEN layout*/

  try
    call "VWCARR01" ("N1", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == 100 /* Not found*/
     || SQLCA.VAGen_SQLCODE == 0)  /* Found*/

      return; /* Return to previous process*/

    end
  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  EPWREC.XXXLOCID = "5320"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Unexpected error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen*/

  end


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT NEXT LANE DATABASE    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = EPWREC.XXXLOCID; /* Module*/
  TA1REC.TA1DBASE = "DPICK   "; /* Data base*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  TA1REC.TA1TBLKE = VWCARR01.DC-CARR-ID; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  exit stack; /* Exit*/


end // end EP0X-41120

// Close csr on Warehouse Carrier
Function EP0X-41130()
   /* ------------------------------------------------------------*/
   /* Close selected cursor*/
   /* ------------------------------------------------------------*/

  set VWCARR01 empty; /* Clear DCLGEN record*/

  try
    call "VWCARR01" ("C1", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/

    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  EPWREC.XXXLOCID = "5330"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Unexpected error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination*/

    converseLib.clearScreen();
     /* Clear screen*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED CURSOR        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = EPWREC.XXXLOCID; /* Module*/
  TA1REC.TA1DBASE = "DPICK   "; /* Data base*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  exit stack; /* Exit*/


end // end EP0X-41130

// Process valid input request
Function EP0X-50000()
   /* ------------------------------------------------------------*/
   /* Process the requested function.*/
   /* ------------------------------------------------------------*/

  EP0X-51000(); /* Reset the ship seq status*/

  EP0XW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
  EP0XW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/


end // end EP0X-50000

// Format jcl
Function EP0X-51000()

   /* ------------------------------------------------------------*/
   /* Format the parms for the the io call.*/
   /* ------------------------------------------------------------*/

  EPWREC.XXXLOCID = "5100"; /* Msg loc*/

  set EP0XW01 empty; /* Pass record*/
  EP0XW01.EP0XW-EP9340-RETURN-CD = 99; /* Initialize*/

  EP0XW01.EP0XW-EP9340-FUNCT-CD = EP0XM001.EP0XM-OPTION-CD; /* Function option*/
  EP0XW01.SR-SHP-SEQ-NBR = EP0XM001.SR-SHP-SEQ-NBR; /* Ship Seq Nbr*/
  EP0XW01.DC-CARR-ID = EP0XM001.DC-CARR-ID; /* DC Carrier id*/
  EP0XW01.DC-CARR-SVC-ABRV = EP0XM001.DC-CARR-SVC-ABRV; /* DC Carrier Service*/

  try
    call "EP9340" (SQLCA, EP0XW01) {isNoRefresh = yes, isExternal = yes};
  end /* EP9340 call*/


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000") /* Call successful*/

    TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

    converseLib.validationFailed(01); /* Unexpected error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination*/

    converseLib.clearScreen();
     /* Clear screen*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = EPWREC.XXXLOCID; /* Message location*/
    TA1REC.TA1LOC = "BAD EP9340 CALL     "; /* Description*/
    TA1REC.TA1DBASE = "EZERT8: "; /* Data base name*/
    TA1REC.TA1TBLVU = sysVar.errorCode; /* Table view name*/
    TA1REC.TA1TBLKE = "EZERT8 NE 0"; /* Table key*/

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

    exit stack; /* Exit to display map*/

  end


  if (EP0XW01.EP0XW-EP9340-RETURN-CD == 99) /* Not normal*/

    TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

    converseLib.validationFailed(10); /* Unexpected error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination*/

    converseLib.clearScreen();
     /* Clear screen*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = EPWREC.XXXLOCID; /* Message location*/
    TA1REC.TA1LOC = "EP9340 DB2 ERROR    "; /* Description*/
    TA1REC.TA1DBASE = "DSHIP   "; /* Data base name*/
    TA1REC.TA1TBLVU = EP0XW01.EP0XW-EP9340-VIEW-NAME; /* Table view name*/
    TA1REC.TA1TBLKE = "UNEXPECTED SQL"; /* Table key*/

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

    exit stack; /* Exit to display map*/

  end


  if (EP0XW01.EP0XW-EP9340-RETURN-CD != 0) /* Not normal*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Reset any updates*/

    if (EP0XW01.EP0XW-EP9340-RETURN-CD == 9) /* Contention*/
      converseLib.validationFailed(154);
    end

    if (EP0XW01.EP0XW-EP9340-RETURN-CD == 10 /* MFSTH not found*/
     || EP0XW01.EP0XW-EP9340-RETURN-CD == 11 /* MFSTX not found*/
     || EP0XW01.EP0XW-EP9340-RETURN-CD == 12 /* MFSTC not found*/
     || EP0XW01.EP0XW-EP9340-RETURN-CD == 13 /* MFSTS not found*/
     || EP0XW01.EP0XW-EP9340-RETURN-CD == 14 /* SHMTH not found*/
     || EP0XW01.EP0XW-EP9340-RETURN-CD == 15) /* SHMTD not found*/

      if (EP0XW01.EP0XW-EP9340-RETURN-CD == 10)
        converseLib.validationFailed(140);
      end

      if (EP0XW01.EP0XW-EP9340-RETURN-CD == 11)
        converseLib.validationFailed(141);
      end

      if (EP0XW01.EP0XW-EP9340-RETURN-CD == 12)
        converseLib.validationFailed(142);
      end

      if (EP0XW01.EP0XW-EP9340-RETURN-CD == 13)
        converseLib.validationFailed(143);
      end

      if (EP0XW01.EP0XW-EP9340-RETURN-CD == 14)
        converseLib.validationFailed(144);
      end

      if (EP0XW01.EP0XW-EP9340-RETURN-CD == 15)
        converseLib.validationFailed(145);
      end

    end

    if (EP0XW01.EP0XW-EP9340-RETURN-CD == 8 /* Manifest in wait stat*/
     || EP0XW01.EP0XW-EP9340-RETURN-CD == 6) /* Shipment in wait stat*/

      if (EP0XW01.EP0XW-EP9340-RETURN-CD == 8)
        converseLib.validationFailed(155);
      end

      if (EP0XW01.EP0XW-EP9340-RETURN-CD == 6)
        converseLib.validationFailed(156);
      end

    end

    if (EP0XW01.EP0XW-EP9340-RETURN-CD == 7) /* Ship Seq processed*/
      converseLib.validationFailed(157);
    end

    if (EP0XW01.EP0XW-EP9340-RETURN-CD == 88) /* Invalid Function*/
      converseLib.validationFailed(88);
    end

    set EP0XM001.EP0XM-OPTION-CD bold, cursor; /* Position cursor*/

  else /* SUCCESSFUL RETURN*/

    if (EP0XW01.EP0XW-EP9340-FUNCT-CD == 1)

      converseLib.validationFailed(152); /* SHMT ON HOLD*/

    else
      if (EP0XW01.EP0XW-EP9340-FUNCT-CD == 2)

        converseLib.validationFailed(153); /* SHMT OFF HOLD*/

      else
        if (EP0XW01.EP0XW-EP9340-FUNCT-CD == 3)

          converseLib.validationFailed(158); /* CARRIER/SVC UPDATED*/

        end
      end
    end

  end


end // end EP0X-51000

//*** RECORD=EP0XW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record EP0XW00 type basicRecord
  10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 EP0XW-JCL-SUB-SW EP0XW-JCL-SUB-SW ; 
  10 EP0XW-IX EP0XW-IX ; 
  10 EP0XW-JCL-LINE-TYPE EP0XW-JCL-LINE-TYPE ; 
  10 SY-SZ-ID-DESC SY-SZ-ID-DESC ; 
  10 SY-SZ-ID SY-SZ-ID ; 
end // end EP0XW00

//*** RECORD=EP0XW01 ****
// ********************* EP9310 Record ************************
// 
// DB2 TABLE VIEWS:     DSHIP.VMFSTH01   DCMS manifest header
//                      DSHIP.VMFSTC01   DCMS manifest carton
//                      DSHIP.VMFSTS01   DCMS manifest sku
//                      DSHIP.VMFSTX01   DCMS mfst/shmt xref
//                      DSHIP.VSHMTH01   DCMS shipment header
//                      DSHIP.VSHMTD01   DCMS shipment detail
// 
// INCLUDE MEMBER:      WEP9341
// 
// I/O MODULE:          EP9340
// 
// PARMS PASSED:        FUNCTION CODE
//                      SHIPMENT SEQUENCE NUMBER
//                      IO RETURN CODE
//                      MANIFEST HEADER UPDATE COUNT
//                      MANIFEST CARTON UPDATE COUNT
//                      MANIFEST SKU    UPDATE COUNT
//                      MFST/SHMT XREF  UPDATE COUNT
//                      SHIPMENT HEADER UPDATE COUNT
//                      SHIPMENT DETAIL UPDATE COUNT
// 
//   DATE      NAME    DESCRIPTION
// --------   ------   ----------------------------------------
// 01/13/99   esmit2   New record used in call for EP9340
//                     which is a special iomod for EP0X only.
// 
// ***********************
Record EP0XW01 type basicRecord
  5 EP0XW03-GROUP EP0XW03-GROUP ; 
    10 EP0XW-EP9340-FUNCT-CD EP0XW-EP9340-FUNCT-CD ; 
    10 SR-SHP-SEQ-NBR SR-SHP-SEQ-NBR ; 
    10 DC-CARR-ID DC-CARR-ID ; 
    10 DC-CARR-SVC-ABRV DC-CARR-SVC-ABRV ; 
    10 EP0XW-EP9340-VIEW-NAME EP0XW-EP9340-VIEW-NAME ; 
    10 EP0XW-EP9340-MFSTH-CNT EP0XW-EP9340-MFSTH-CNT ; 
    10 EP0XW-EP9340-MFSTC-CNT EP0XW-EP9340-MFSTC-CNT ; 
    10 EP0XW-EP9340-MFSTS-CNT EP0XW-EP9340-MFSTS-CNT ; 
    10 EP0XW-EP9340-MFSTX-CNT EP0XW-EP9340-MFSTX-CNT ; 
    10 EP0XW-EP9340-SHMTH-CNT EP0XW-EP9340-SHMTH-CNT ; 
    10 EP0XW-EP9340-SHMTD-CNT EP0XW-EP9340-SHMTD-CNT ; 
    10 EP0XW-EP9340-SQLCODE EP0XW-EP9340-SQLCODE ; 
    10 EP0XW-EP9340-RETURN-CD EP0XW-EP9340-RETURN-CD ; 
end // end EP0XW01

// EP9340 Function code
DataItem EP0XW-EP9340-FUNCT-CD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// EP9340 Mfst Crt Upd Cnt
DataItem EP0XW-EP9340-MFSTC-CNT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// EP9340 Mfst Hdr Upd Cnt
DataItem EP0XW-EP9340-MFSTH-CNT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// EP9340 Mfst Sku Upd Cnt
DataItem EP0XW-EP9340-MFSTS-CNT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// EP9340 Mfst Xrf Upd Cnt
DataItem EP0XW-EP9340-MFSTX-CNT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// EP9340 return code
DataItem EP0XW-EP9340-RETURN-CD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// EP9340 Shmt Dtl Upd Cnt
DataItem EP0XW-EP9340-SHMTD-CNT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// EP9340 Shmt Hdr Upd Cnt
DataItem EP0XW-EP9340-SHMTH-CNT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// EP9340 Sqlcode
DataItem EP0XW-EP9340-SQLCODE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// EP9340 View Name
DataItem EP0XW-EP9340-VIEW-NAME char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Work Index
DataItem EP0XW-IX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// JCL Line Type indicator
DataItem EP0XW-JCL-LINE-TYPE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Job submitted switch
DataItem EP0XW-JCL-SUB-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record Group Level
DataItem EP0XW03-GROUP char(81)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SR_SHP_SEQ_NBR
DataItem SR-SHP-SEQ-NBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

