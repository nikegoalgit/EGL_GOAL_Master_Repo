package ep0a;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ep.common.*;
import ta.common.*;
//*** PROGRAM=EP0A ****
// This application displays the Memphis Apparel Special
// Processing Menu. This menu displays the screens which
// are used to maintain the cross reference between the DCMS
// special processing code and the special handling information
// on GOAL. The cross reference is used when processing VAS
// orders in DCMS.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      05/12/98  Kheina  New application.
// VAS      07/30/98  OVAZQU  Add option 6 for STEP varaibles
//                            (EP0G).
//          10/28/98  kdenne  changed the sel opt value lookup
// MULTGPC  08/03/99  OENFIE
//          08/27/99  OVAZQU  Add option for EP0T.
// *********************
Program EP0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "EP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  EP0AW00 EP0AW00; // record
  EPWREC EPWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use EP0AT {deleteAfterUse = yes}; // table
  use EP0AM.EP0AM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPEP-00000: XPEP-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    set EP0AM001 initial; /* M001 input/output*/
    set EP0AW00 empty; /* Working storage*/

    EP0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    goto EP0A-00000; /* Converse the main process*/


    EP0A-00000: EP0A-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto EP0A-00000; /* Converse the main process*/


  end // end main
end // end EP0A

// Main process to display a map
Function EP0A-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Verify the data that was entered.*/
   /* 4) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  EP0A-10000(); /* Format and display the map*/

  EP0A-20000(); /* Check attention identifier*/

  EP0A-30000(); /* Verify the data that was entered*/

  EP0A-40000(); /* Process valid input request*/



end // end EP0A-00000

// Format and converse the map
Function EP0A-10000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    EP0AW00.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/
  if (EP0AW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    EP0A-11000(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  EP0AM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  EP0AM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  EP0AM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (EP0AW00.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")   /* or message text*/

    if (EP0AW00.XXX-MSG-NBR != 0) /* Message to display*/

      if (EP0AW00.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(EP0AW00.XXX-MSG-NBR);
      end /* Message number*/
    else
      EP0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    EP0AM001.XXX-MSG-LOC-ID = EP0AW00.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set EP0AM001 alarm; /* Indicate sound alarm*/

  end

  converse EP0AM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  EP0AW00.XXX-MSG-LOC-ID = " "; /* Message location*/
  EP0AW00.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = EP0AM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = EP0AM001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set EP0AM001.XXX-MENU-SEL-CD normal; /* Menu selection*/
  set EP0AM001.CATOAP normal; /* TO application*/
  set EP0AM001.CAITEM normal; /* Application data*/


end // end EP0A-10000

// Format the data in the map
Function EP0A-11000()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  set EP0AM001 initial; /* M001 input/output area*/

  EP0AW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/


end // end EP0A-11000

// Check attention identifier
Function EP0A-20000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    EP0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (EP0AM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      EP0AS-EXIT(); /* Exit to another application*/

      set EP0AM001.CATOAP cursor, bold; /* Highlight*/

    else

      EP0AW00.XXX-MSG-LOC-ID = "20000"; /* Message location*/
      converseLib.validationFailed(258); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "EP0AM001"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "KU0M"; /* Master Menu*/
    end

    if (converseVar.eventKey is pf4) /* PF3 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* Master Menu*/
    end

    EP0AS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    EP0AW00.XXX-MSG-LOC-ID = "20000"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end EP0A-20000

// Verify data that was entered
Function EP0A-30000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    EP0AW00.XXX-MSG-LOC-ID = "30000"; /* Message location*/
    converseLib.validationFailed(259); /* Enter only with FAST PATH*/
    set EP0AM001.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Verify the menu selection that was entered.*/
   /* ------------------------------------------------------------*/

  if (EP0AM001.XXX-MENU-SEL-CD == 1
   || EP0AM001.XXX-MENU-SEL-CD == 2
   || EP0AM001.XXX-MENU-SEL-CD == 3
   || EP0AM001.XXX-MENU-SEL-CD == 4
   || EP0AM001.XXX-MENU-SEL-CD == 5
   || EP0AM001.XXX-MENU-SEL-CD == 6
   || EP0AM001.XXX-MENU-SEL-CD == 7
   || EP0AM001.XXX-MENU-SEL-CD == 8
   || EP0AM001.XXX-MENU-SEL-CD == 9) /* Valid select id*/

     /* NEXT SENTENCE*/

  else

    /* ------------------------------------------------------------*/
    /* If not found, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/

    EP0AW00.XXX-MSG-LOC-ID = "30000"; /* Message location*/
    converseLib.validationFailed(11); /* Field missing or invalid*/
    set EP0AM001.XXX-MENU-SEL-CD cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end EP0A-30000

// Process valid input request
Function EP0A-40000()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* ------------------------------------------------------------*/

  EP0AW00.EP0AW-MENU-SEL-CD = EP0AM001.XXX-MENU-SEL-CD;

  if (EP0AW00.XXX-MENU-SEL-CD in EP0AT.XXX-MENU-SEL-CD)
    COMMAREA.CATOAP = EP0AT.CATOAP[sysVar.arrayIndex];
  end /* TO application*/

  EP0AS-EXIT(); /* Exit to another application*/

   /* ------------------------------------------------------------*/
   /* If the request failed, display the returned error message.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CATOAP = " "; /* TO application*/

  set EP0AM001.XXX-MENU-SEL-CD cursor, bold; /* Highlight*/


end // end EP0A-40000

// Exit to another application
Function EP0AS-EXIT()
   /* ------------------------------------------------------------*/
   /* Set the application to be invoked for PF1 or PF4.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    COMMAREA.CATOAP = "GD01"; /* Goal Documentation*/
  end

  if (converseVar.eventKey is pf4) /* PF4 was pressed*/
    COMMAREA.CATOAP = "MN0M"; /* Master Menu*/
  end

   /* ------------------------------------------------------------*/
   /* Save the system work record in the COMMAREA user area.*/
   /* ------------------------------------------------------------*/
  if (COMMAREA.CATOSYS == COMMAREA.CACURSYS) /* Same system*/

    if (converseVar.eventKey is enter)
      EPWREC.EPW-FROM-MAP-SEL-NUM = EP0AW00.XXX-MENU-SEL-CD;
    end

    /* MOVE EPWREC.EPWUSERA TO COMMAREA.CAUSERA;/* Save work record*/
    COMMAREA.CAUSERA = EPWREC.EPW-GROUP; /* Save work record*/
  else
    COMMAREA.CAUSERA = " "; /* Clear user area*/
  end

   /* ------------------------------------------------------------*/
   /* Transfer control to the specified application.*/
   /* ------------------------------------------------------------*/
  XSEXIT(); /* Exit to another application*/

  EP0AW00.XXX-MSG-LOC-ID = "XSEXIT"; /* Message location*/

   /* ------------------------------------------------------------*/
   /* Reestablish the COMMAREA application and item fields.*/
   /* ------------------------------------------------------------*/
  COMMAREA.CAEZSG3 = "0"; /* Force zero third character*/
  COMMAREA.CACURRAP = COMMAREA.CAEZSAP; /* Current application*/

  if (converseVar.eventKey is pfkey) /* PF key was pressed*/
    COMMAREA.CATOAP = " "; /* Clear TO application*/
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = " "; /* Clear map name from item*/
    end
  end


end // end EP0AS-EXIT

//*** RECORD=EP0AW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record EP0AW00 type basicRecord
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 XXX-MSG-LOC-ID XXX-MSG-LOC-ID ; 
  10 XXX-MSG-NBR XXX-MSG-NBR ; 
  10 EP0AW-MENU-SEL-CD EP0AW-MENU-SEL-CD ; 
    15 XXX-MENU-SEL-CD XXX-MENU-SEL-CD ; 
end // end EP0AW00

// Alpha selection code
DataItem EP0AW-MENU-SEL-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

