package ep0m;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ep.common.*;
import ta.common.*;
//*** PROGRAM=EP0M ****
// ************************************************************
// 
//           Memphis Apparel DCMS Functions Menu
//           ===================================
// 
// ************************************************************
// 
// OVERVIEW: This application displays a menu (or use PFkeys)
//           to choose the desired applications which support
//           the Memphis Apparel DCMS WMS package.
// 
// 
// MAINTENANCE HISTORY
// ===================
// RVN
// NBR   DATE     BY WHOM    OVERVIEW OF CHANGES:
// --- --------  ----------  ----------------------------------
// 00  01/21/98  esmit2      created
// 01  10/20/98  kdenne      added option 5 for EP0J
// 02  01/05/99  esmit2      added option 6 for EP0R
// 03  02/03/99  esmit2      added option 3 for EP0p
// 04  20/11/00  svenka      added option 7 for EP0U - TT#8760
// 
// 
// STATEMENT GROUPS
// ================
// 
// NAME      DESCRIPTION
// -------   --------------------------------------------------
// 
//           ep0m010 - execute
//           -------
// 
// ep0mSY0   CAITEM processing
// 
//           ep0m020 - converse
//           -------
// 
// ep0mSA0   missing key inputs edits
// 
// 
// I/O Modules
// ===========
// none
// 
// 
// Table View Names
// ================
// none
// 
// ************************************************************
// ************************************************************
// *********************
Program EP0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "EP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  EP0MWX1 EP0MWX1; // record
  EPWREC EPWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use EP0MT {deleteAfterUse = yes}; // table
  use EP0MM.EP0MM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    EP0M010: EP0M010();


     /* ************************************************************/
     /* *** normal flow                                         ****/
     /* ************************************************************/

    goto EP0M020; /* <=== display menu screen*/

     /* ************************************************************/
     /* *** end of EXECUTE FLOW section                         ****/
     /* ************************************************************/


    EP0M020: EP0M020();


    EP0MWX1.XXXMODID = "02F";

     /* ************************************************************/
     /* *** if one of these PF keys: go to related process      ****/
     /* ************************************************************/

    if (converseVar.eventKey is pa2)
      goto EP0M010; /* <=== re-start this function*/
    end

     /* ************************************************************/
     /* *** if error: (re-)display the screen                   ****/
     /* ************************************************************/

    if (EP0MWX1.EP0MWERS == "Y")
      goto EP0M020; /* <=== re-display this screen*/
    end

     /* ************************************************************/
     /* *** fall thru error - code shouldn't be executed        ****/
     /* ************************************************************/

    EP0MWX1.EP0MWERS = "Y";
    EP0MWX1.XXXUNQID = "A";
    EP0MM001.XXXERRID = EP0MWX1.XXXERRID;
    converseLib.validationFailed(0001); /* <--- fall thru error msg*/
    goto EP0M020; /* <=== display menu screen*/

     /* ************************************************************/
     /* *** end of CONVERSE FLOW section                        ****/
     /* ************************************************************/


  end // end main
end // end EP0M

// ep0m010 - init. for ep0m020
Function EP0M010()


   /* ************************************************************/
   /* *** standard security checking                          ****/
   /* ************************************************************/

  XSENTRY();

   /* ************************************************************/
   /* *** standard segmented trans id setting                 ****/
   /* ************************************************************/

  XSSEGTR();

   /* ************************************************************/
   /* *** initialize map, working storage & std switches      ****/
   /* ************************************************************/

  set EP0MM001 initial;
  set EP0MWX1 empty;
  set EPWREC empty;
  EP0MM001.XXXERRID = "EP0M020 ";
  EP0MM001.XXXMAPNM = "EP0MM001";
  EP0MM001.XXXTITLE = "APPAREL DCMS FUNCTIONS MENU";
  EP0MM001.XXXCURDT = VGVar.currentShortGregorianDate;
  EP0MWX1.EP0MWERS = "N";

   /* ************************************************************/
   /* *** maintenance information:                            ****/
   /* *** =======================                             ****/
   /* *** rvsn   date    update by:    description:           ****/
   /* *** ---- --------  ------------  ---------------------- ****/
   /* ***  00  01/22/98  esmit2        created                ****/
   /* ***                                                     ****/
   /* ************************************************************/

  EP0MWX1.XXXRVNBR = "01";
  EP0MM001.XXXRVNBR = EP0MWX1.XXXRVNBR;

   /* ************************************************************/
   /* *** initialize application working storage & switches   ****/
   /* ************************************************************/

  EP0MWX1.XXXAPPID = "EP0M";
  EP0MWX1.XXXMODID = "010";

   /* ************************************************************/
   /* *** check commarea fast path item to see if it should   ****/
   /* *** be used to setup working storage &/or map fields    ****/
   /* ************************************************************/

  if (COMMAREA.CAITEM > " ")
    EP0MSY0(); /* <=== use commarea item*/
    EP0MWX1.XXXMODID = "010";
    COMMAREA.CAITEM = " ";
  end

   /* ************************************************************/
   /* *** if no selection from commarea: ezeflo immediately   ****/
   /* ************************************************************/

  if (EP0MM001.EP0MMSNO > " ")
    EP0MS0A(); /* <=== right justify single digit*/
  else
    exit stack;
  end

   /* ************************************************************/
   /* *** flow decisions based on CAITEM as selection         ****/
   /* *** note: invalid values detected when there is NOT     ****/
   /* ***       an equivalent selection                       ****/
   /* *** note: character data is used re: CAITEM = character ****/
   /* ************************************************************/

  if (EP0MM001.EP0MMSNO in EP0MT.EP0MTSEL)
    COMMAREA.CATOAP = EP0MT.EP0MTAPP[sysVar.arrayIndex];
    COMMAREA.CAUSERA = EPWREC.EPW-GROUP;
    XSEXIT();
    EP0MWX1.EP0MWERS = "Y";
    EP0MWX1.XXXUNQID = "A";
    EP0MM001.XXXERRID = EP0MWX1.XXXERRID;
    EP0MM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    set EP0MM001.EP0MMSNO cursor, bold;
    exit stack;
  else
    EP0MWX1.EP0MWERS = "Y";
    EP0MWX1.XXXUNQID = "B";
    EP0MM001.XXXERRID = EP0MWX1.XXXERRID;
    converseLib.validationFailed(0087); /* <--- invalid selection passed msg*/
  end


   /* ************************************************************/
   /* *** end of EXECUTE section                              ****/
   /* ************************************************************/


end // end EP0M010

// ep0m020 - converse & edits
Function EP0M020()


   /* ************************************************************/
   /* *** no "before" processing...                           ****/
   /* ************************************************************/


  converse EP0MM001 ;


  EP0MWX1.XXXMODID = "020";

   /* ************************************************************/
   /* *** if fast path entered: exit immeditately             ****/
   /* ************************************************************/

  if (EP0MM001.CATOAP > " ")
    COMMAREA.CATOAP = EP0MM001.CATOAP;
    COMMAREA.CAITEM = EP0MM001.CAITEM;
    COMMAREA.CAUSERA = EPWREC.EPW-GROUP;
    XSEXIT();
    EP0MWX1.EP0MWERS = "Y";
    EP0MWX1.XXXUNQID = "A";
    EP0MM001.XXXERRID = EP0MWX1.XXXERRID;
    EP0MM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    set EP0MM001.CATOAP cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** reset error switch, std fields & cursor position    ****/
   /* ************************************************************/

  EP0MWX1.EP0MWERS = "N";
  EP0MM001.VAGen_EZEMSG = " ";
  EP0MM001.XXXERRID = "EP0M020 ";
  set EP0MM001.CATOAP initialAttributes;
  set EP0MM001.CAITEM initialAttributes;
  set EP0MM001.EP0MMSNO cursor;

   /* ************************************************************/
   /* *** reset appl. input fld attr.s as orig.ly defined     ****/
   /* ************************************************************/

  set EP0MM001.EP0MMSNO initialAttributes;

   /* ************************************************************/
   /* *** if item data entered: error (option not entered)    ****/
   /* ************************************************************/

  if (EP0MM001.CAITEM > " ")
    EP0MWX1.EP0MWERS = "Y";
    EP0MWX1.XXXUNQID = "B";
    EP0MM001.XXXERRID = EP0MWX1.XXXERRID;
    converseLib.validationFailed(0002); /* <--- option required msg*/
    set EP0MM001.CAITEM cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** if ENTER: do edits & process                        ****/
   /* ************************************************************/

  if (converseVar.eventKey is enter)
     /* ************************************************************/
     /* *** check for missing fields                            ****/
     /* *** note: don't care if it is the same key/selection    ****/
     /* *** note: edit/valid value part of flow decision        ****/
     /* ************************************************************/
    EP0MSA0(); /* <=== missing input edits*/
    if (EP0MWX1.EP0MWERS == "Y")
      exit stack;
    end
    EP0MWX1.XXXMODID = "020";
     /* ************************************************************/
     /* *** flow decisions based on input selection             ****/
     /* *** note: invalid values detected when there is NOT     ****/
     /* ***       an equivalent selection                       ****/
     /* *** note: character data is used re: CAITEM = character ****/
     /* *** note: if single digit input, right justify/zero fill****/
     /* ************************************************************/
    EP0MS0A(); /* <=== right justify single digit*/
    if (EP0MM001.EP0MMSNO in EP0MT.EP0MTSEL)
      COMMAREA.CATOAP = EP0MT.EP0MTAPP[sysVar.arrayIndex];
      COMMAREA.CAUSERA = EPWREC.EPW-GROUP;
      XSEXIT();
      EP0MWX1.EP0MWERS = "Y";
      EP0MWX1.XXXUNQID = "C";
      EP0MM001.XXXERRID = EP0MWX1.XXXERRID;
      EP0MM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      set EP0MM001.EP0MMSNO cursor, bold;
      exit stack;
    else
      EP0MWX1.EP0MWERS = "Y";
      EP0MWX1.XXXUNQID = "D";
      EP0MM001.XXXERRID = EP0MWX1.XXXERRID;
      converseLib.validationFailed(0087); /* <--- invalid selection passed msg*/
      exit stack;
    end
  end

   /* ************************************************************/
   /* *** flow decisions based on pfkey pressed               ****/
   /* ************************************************************/

   /* none at present*/

   /* ************************************************************/
   /* *** if PF3: go to previous logical level = sys mstr menu****/
   /* ************************************************************/

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "MN0M";
    COMMAREA.CAUSERA = EPWREC.EPW-GROUP;
    XSEXIT();
    EP0MWX1.EP0MWERS = "Y";
    EP0MWX1.XXXUNQID = "E";
    EP0MM001.XXXERRID = EP0MWX1.XXXERRID;
    EP0MM001.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF4: go to system main menu                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf4)
    XSPF4();
    EP0MWX1.EP0MWERS = "Y";
    EP0MWX1.XXXUNQID = "F";
    EP0MM001.XXXERRID = EP0MWX1.XXXERRID;
    EP0MM001.VAGen_EZEMSG = CAMSG;
    exit stack;
  end


   /* ************************************************************/
   /* *** if pa2: regardless of status - restart application  ****/
   /* ************************************************************/

  if (converseVar.eventKey is pa2)
    exit stack;
  end

   /* ************************************************************/
   /* *** if this code is executed (control drops thru),      ****/
   /* *** then use invalid pfkey was pressed msg              ****/
   /* ************************************************************/

  EP0MWX1.EP0MWERS = "Y";
  EP0MWX1.XXXUNQID = "T";
  EP0MM001.XXXERRID = EP0MWX1.XXXERRID;
  converseLib.validationFailed(0004); /* <--- invalid pfkey msg*/

   /* ************************************************************/
   /* *** end of CONVERSE AFTER section                       ****/
   /* ************************************************************/


end // end EP0M020

// rigth justify single digit
Function EP0MS0A()


   /* ************************************************************/
   /* *** setup missing errors:                               ****/
   /* ************************************************************/

  EP0MWX1.EP0MWSNO = EP0MM001.EP0MMSNO;

  if (EP0MWX1.EP0MWDG2 == " ")
    EP0MWX1.EP0MWDG2 = EP0MWX1.EP0MWDG1;
    EP0MWX1.EP0MWDG1 = "0";
    EP0MM001.EP0MMSNO = EP0MWX1.EP0MWSNO;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end EP0MS0A

// missing key inputs edits
Function EP0MSA0()


  EP0MWX1.XXXMODID = "SA0";

   /* ************************************************************/
   /* *** setup missing errors:                               ****/
   /* ************************************************************/

  if (EP0MM001.EP0MMSNO == " ")
    EP0MWX1.EP0MWERS = "Y";
    EP0MWX1.XXXUNQID = "A";
    EP0MM001.XXXERRID = EP0MWX1.XXXERRID;
    converseLib.validationFailed(0009); /* <--- enter required field msg*/
    set EP0MM001.EP0MMSNO cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end EP0MSA0

// CAITEM processing
Function EP0MSY0()


  EP0MWX1.XXXMODID = "SY0";

   /* ************************************************************/
   /* *** if entered, use CAITEM data as the selection no.:   ****/
   /* *** valid values checked as part of flow decision(s)    ****/
   /* *** note: 'SNO' & CAITEM are character data             ****/
   /* ************************************************************/

  EP0MM001.EP0MMSNO = COMMAREA.CAITEM;

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end EP0MSY0

//*** RECORD=EP0MWX1 ****
// ************************************************************
// 
//            COMMON WORKING STORAGE FIELDS
//            =============================
// 
// ************************************************************
// 
// OVERVIEW:
// ========
//           These working storage fields are generally used
//           by all applications within the "EP" system.
// 
//           The name of this record and its fields will still
//           require customization for application uniqueness.
// 
// 
// MAINTENANCE HISTORY:
// ===================
// 
//   Date     By Whom     Overview of Changes
// --------  -----------  -------------------------------------
// 10-21-86  Ward Jones   created
// 
// 
// ************************************************************
// ************************************************************
// ***********************
Record EP0MWX1 type basicRecord
  10 EP0MWERS EP0MWERS ; 
  10 XXXRVNBR XXXRVNBR ; 
  10 XXXERRID XXXERRID ; 
    15 XXXAPPID XXXAPPID ; 
    15 XXXMODID XXXMODID ; 
    15 XXXUNQID XXXUNQID ; 
  10 EP0MWSNO EP0MWSNO ; 
    15 EP0MWDG1 EP0MWDG1 ; 
    15 EP0MWDG2 EP0MWDG2 ; 
end // end EP0MWX1

// menu sel. no. digit 1
DataItem EP0MWDG1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// menu sel. no. digit 2
DataItem EP0MWDG2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error switch
DataItem EP0MWERS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// menu selection no.
DataItem EP0MWSNO char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

