package ep0o;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ep.common.*;
import fy.common.*;
import pc.common.*;
import sl.common.*;
import sw.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=EP0O ****
// This application allows a user to request jobs to send
// receipt authorization and advance shipment notice to DCMS,
// the 3rd-party WMS package for Memphis apparel.
// 
// Jobs submitted are: 1) RA's - EP51RA; 2) ASN's - EP51AS.
// These jobs are also regularly scheduled in production.  This
// screen just allows the user to do special runs in order to
// get information down to DCMS quickly if needed.
// 
// The screen is displayed for the user to enter there request.
// The user may request the ASN job and/or the RA job.
// 
// The entered data is verified to be complete and correct.
// A single job request for each option is allowed within a
// given user session.
// 
// If the background batch job is submitted sucessfully, a
// message is displayed.  Upon completion of the job, a message
// is returned to the user's screen, regardless of where they
// are at, to let them know that the job has completed.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      07/15/98  ESMIT2  New application.
//          05/04/99  marbuc  modify EP0OT01 and EP0OT02
//                            to use CATMQPD instead of CATMQTT
// multgpc  08/06/99  OENFIE  regenerate to pick up changes to
//                            XPEP-00000
// DLVRUSA  08/27/01  SSETHU  changed the EP0ot01 to refer
//                            to the correct PROCs
// *********************
Program EP0O type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "EP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  EP0OW00 EP0OW00; // record
  EP0OW01 EP0OW01; // record
  EPWREC EPWREC; // record
  ERRSQLCA ERRSQLCA; // record
  SQLCA SQLCA; // record
  SW2REC SW2REC; // record
  TA1REC TA1REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use EP0OTF1 {deleteAfterUse = yes}; // table
  use EP0OTF2 {deleteAfterUse = yes}; // table
  use EP0OT01 {deleteAfterUse = yes}; // table
  use EP0OT02 {deleteAfterUse = yes}; // table
  use EP0OM.EP0OM001,  // forms
      EP0OM.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPEP-00000: XPEP-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set EP0OM001 initial; /* M001 input/output*/
    set EP0OW00 empty; /* Working storage*/
    set EP0OW01 empty; /* M001 display storage*/
    set SW2REC empty; /* SL Program table*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diag information*/
    set TA1REC empty; /* Error diag parameters*/
    set XX0XW01 empty; /* Date/time sub parameters*/

    EP0OW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
    EP0OW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    EPWREC.EPW-FIRST-TM-SW = "Y"; /* First time in switch*/

    EP0OW00.EP0OW-RA-JOB-SUBMIT-FL = "N"; /* Submit RA request job*/
    EP0OW00.EP0OW-ASN-JOB-SUBMIT-FL = "N"; /* Submit ASN request job*/

    EPWREC.EPW-MSG-NO = 0; /* Get rid of any passed msg*/
    converseLib.validationFailed(0);

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto EP0O-00000; /* Converse the main process*/


    EP0O-00000: EP0O-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto EP0O-00000; /* Converse the main process*/


  end // end main
end // end EP0O

// Main process to display map
Function EP0O-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/


  EP0O-10000(); /* Obtain the data to display*/

  EP0O-20000(); /* Format and display the map*/

  EP0O-30000(); /* Check attention identifier*/

  EP0O-40000(); /* Verify the entered data*/

  EP0O-50000(); /* Process valid input request*/


end // end EP0O-00000

// Obtain the data to display
Function EP0O-10000()
   /* ------------------------------------------------------------*/
   /* If first time into application, perform any first time*/
   /* through processes and set first time switch to no.*/
   /* ------------------------------------------------------------*/

  if (EPWREC.EPW-FIRST-TM-SW == "Y" /* First time in*/
  )                                
    /* No first time through processes required at this time*/

    EPWREC.EPW-FIRST-TM-SW = "N"; /* Set 1st time to NO*/

  end


   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (EP0OW00.XXX-RQT-DATA-FL != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0) /* or an error*/

    return; /* Return*/

  end


  EP0OW00.XXX-MAP-FMAT-FL = "Y"; /* Format map*/

  EP0OW01.EP0OM-RA-RQST-FL = "N"; /* RA request flag*/
  EP0OW01.EP0OM-ASN-RQST-FL = "N"; /* ASN request flag*/

  set EP0OM001.EP0OM-RA-RQST-FL cursor; /* Position cursor*/


   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  EP0OW00.XXX-RQT-DATA-FL = "N"; /* Data Request*/


end // end EP0O-10000

// Format and converse the map
Function EP0O-20000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    EPWREC.EPW-MSG-NO = converseVar.validationMsgNum; /* Message number*/

  end


   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (EP0OW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/

    EP0O-21000(); /* Format map*/

  end


   /* ------------------------------------------------------------*/
   /* Determine whether to protect any of the modifiable fields.*/
   /* ------------------------------------------------------------*/

  EP0O-22000(); /* Check access*/


   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  EP0OM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  EP0OM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  EP0OM001.CAITEM = COMMAREA.CAITEM; /* Application data*/


   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (EPWREC.EPW-MSG-NO != 0) /* Msg*/

    if (EPWREC.EPW-MSG-NO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(EPWREC.EPW-MSG-NO);
    end /* Msg nbr*/

    EP0OM001.XXX-MSG-LOC-ID = EPWREC.XXXLOCID;

    set EP0OM001 alarm; /* Sound alarm*/

  end


   /* ------------------------------------------------------------*/
   /* If RA and/or ASN job submitted, protect appropriate fields.*/
   /* ------------------------------------------------------------*/

  if (EP0OW00.EP0OW-RA-JOB-SUBMIT-FL == "Y"
   || EP0OW00.EP0OW-RA-JOB-SUBMIT-FL == "*")
    set EP0OM001.EP0OM-RA-RQST-FL protect; /* Protect*/
  end

  if (EP0OW00.EP0OW-ASN-JOB-SUBMIT-FL == "Y"
   || EP0OW00.EP0OW-ASN-JOB-SUBMIT-FL == "*")
    set EP0OM001.EP0OM-ASN-RQST-FL protect; /* Protect*/
  end

   /* ------------------------------------------------------------*/
   /* If no error, set cursor at first empty field.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No errors*/

    if (EP0OW01.EP0OM-RA-RQST-FL == " ") /* RA request flag*/
      set EP0OM001.EP0OM-RA-RQST-FL cursor; /* Position cursor*/
    end

    if (EP0OW01.EP0OM-ASN-RQST-FL == " ") /* ASN request flag*/
      set EP0OM001.EP0OM-ASN-RQST-FL cursor; /* Position cursor*/
    end

    if (EP0OW01.EP0OM-ASN-RQST-FL == "*" /* ASN request flag*/
     && EP0OW01.EP0OM-RA-RQST-FL == "*") /* RA request flag*/
      set EP0OM001.CAITEM cursor;
    end

  else

    if (converseVar.validationMsgNum != 67
     && converseVar.validationMsgNum != 68
     && converseVar.validationMsgNum != 69
     && converseVar.validationMsgNum != 121
     && converseVar.validationMsgNum != 258
     && converseVar.validationMsgNum != 259)

      set EP0OM001.EP0OM-RA-RQST-FL cursor; /* Position cursor*/

    end
  end


  converse EP0OM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  EPWREC.XXXLOCID = " "; /* Message location*/
  EPWREC.EPW-MSG-NO = 0; /* Message number*/
  converseLib.validationFailed(0); /* Application Error*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = EP0OM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = EP0OM001.CAITEM; /* Application data*/


   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set EP0OM001.EP0OM-RA-RQST-FL normal; /* RA request flag*/
  set EP0OM001.EP0OM-ASN-RQST-FL normal; /* ASN request flag*/

  set EP0OM001.CATOAP normal; /* TO application*/
  set EP0OM001.CAITEM normal; /* Application data*/


end // end EP0O-20000

// Format the data in the map
Function EP0O-21000()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set EP0OM001 initial; /* Map 1*/

  EP0OW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/


   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  EP0OM001.EP0OM-RA-RQST-FL = EP0OW01.EP0OM-RA-RQST-FL; /* RA request flag*/

  EP0OM001.EP0OM-ASN-RQST-FL = EP0OW01.EP0OM-ASN-RQST-FL; /* ASN request flag*/


   /* ------------------------------------------------------------*/
   /* Place cursor on first empty field.*/
   /* ------------------------------------------------------------*/

  if (EP0OW01.EP0OM-RA-RQST-FL == " ") /* RA request flag*/
    set EP0OM001.EP0OM-RA-RQST-FL cursor; /* Position cursor*/
  end

  if (EP0OW01.EP0OM-ASN-RQST-FL == " ") /* ASN request flag*/
    set EP0OM001.EP0OM-ASN-RQST-FL cursor; /* Position cursor*/
  end


   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  EP0OW00.XXX-RQT-DATA-FL = "N"; /* Request for data*/


end // end EP0O-21000

// Check change authorization
Function EP0O-22000()
   /* ------------------------------------------------------------*/
   /* If requested data was found and the user is authorized to*/
   /* change data on the screen, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CACHGFL == "Y") /* User authorization*/

    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* Otherwise, protect the modifiable fields on the screen.*/
   /* ------------------------------------------------------------*/

  set EP0OM001.EP0OM-RA-RQST-FL skip; /* RA request flag*/

  set EP0OM001.EP0OM-ASN-RQST-FL skip; /* ASN request flag*/


end // end EP0O-22000

// Check attention identifier
Function EP0O-30000()
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (EP0OM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      XSEPS-EXIT(); /* Exit to another application*/
      set EP0OM001.CATOAP cursor, bold; /* Highlight*/

    else

      EPWREC.XXXLOCID = "30000"; /* Message location*/
      set EP0OM001.CATOAP cursor; /* Highlight*/
      converseLib.validationFailed(258); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end


   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "EP0M"; /* System Menu*/
    end

    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* GOAL Master Menu*/
    end

    XSEPS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end


   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6)  /* and PF6 was not pressed*/

    EPWREC.XXXLOCID = "30000"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end EP0O-30000

// Verify data that was entered
Function EP0O-40000()
   /* ------------------------------------------------------------*/
   /* Check for valid values*/
   /* ------------------------------------------------------------*/

  if (EP0OM001.EP0OM-ASN-RQST-FL == "Y"
   || EP0OM001.EP0OM-ASN-RQST-FL == "N") /* Valid value*/
     /* next sentence*/
  else

    if (EP0OM001.EP0OM-ASN-RQST-FL == "*")
       /* next sentence*/
    else

      EPWREC.XXXLOCID = "40000"; /* Message location*/
      converseLib.validationFailed(67); /* Invalid value*/
      set EP0OM001.EP0OM-ASN-RQST-FL cursor, bold;
    end

  end


  if (EP0OM001.EP0OM-RA-RQST-FL == "Y"
   || EP0OM001.EP0OM-RA-RQST-FL == "N") /* Valid value*/
     /* next sentence*/
  else

    if (EP0OM001.EP0OM-RA-RQST-FL == "*")
       /* next sentence*/
    else

      EPWREC.XXXLOCID = "40000"; /* Message location*/
      converseLib.validationFailed(67); /* Invalid value*/
      set EP0OM001.EP0OM-RA-RQST-FL cursor, bold;
    end

  end


   /* ------------------------------------------------------------*/
   /* If transmit requested, insure at least one of the flags*/
   /* is set to yes.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf6) /* Xfer in process*/

    if (EP0OM001.EP0OM-RA-RQST-FL != "Y"
     && EP0OM001.EP0OM-ASN-RQST-FL != "Y") /* No flag set Yes*/

      EPWREC.XXXLOCID = "4000"; /* Msg location*/
      converseLib.validationFailed(121); /* Set flag(s) Yes*/

      set EP0OM001.EP0OM-RA-RQST-FL bold, cursor; /* RA Request*/
      set EP0OM001.EP0OM-ASN-RQST-FL bold; /* ASN Request*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    EPWREC.XXXLOCID = "40000"; /* Message location*/
    converseLib.validationFailed(259); /* Enter only with FAST PATH*/
    set EP0OM001.CAITEM cursor, bold; /* Highlight*/

  end


   /* ------------------------------------------------------------*/
   /* Check for prior submissions in this session*/
   /* ------------------------------------------------------------*/

  if (EP0OW00.EP0OW-RA-JOB-SUBMIT-FL == "Y" /* RA already submitted*/
   && EP0OM001.EP0OM-RA-RQST-FL == "Y")     /* another request*/

    EPWREC.XXXLOCID = "40000"; /* Message location*/
    converseLib.validationFailed(68); /* Already submitted*/
    set EP0OM001.EP0OM-RA-RQST-FL cursor, bold;

  end

  if (EP0OW00.EP0OW-ASN-JOB-SUBMIT-FL == "Y" /* ASN already submitted*/
   && EP0OM001.EP0OM-ASN-RQST-FL == "Y")     /* another request*/

    EPWREC.XXXLOCID = "40000"; /* Message location*/
    converseLib.validationFailed(69); /* Already submitted*/
    set EP0OM001.EP0OM-ASN-RQST-FL cursor, bold;

  end


   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error found*/

    exit stack; /* Exit to map*/

  end


end // end EP0O-40000

// Process valid input request
Function EP0O-50000()
   /* ------------------------------------------------------------*/
   /* BUILD the JCL and SUBMIT the background batch job(s) to*/
   /* create and send a Receipt Authorization and/or an ASN*/
   /* to the APPAREL WMS package (DCMS).*/
   /* ------------------------------------------------------------*/

  EP0OW01.EP0OM-RA-RQST-FL = EP0OM001.EP0OM-RA-RQST-FL;
  EP0OW01.EP0OM-ASN-RQST-FL = EP0OM001.EP0OM-ASN-RQST-FL;

  if (converseVar.eventKey not pf6) /* Transmit request*/

    if (EP0OM001.EP0OM-RA-RQST-FL == "Y"
     || EP0OM001.EP0OM-ASN-RQST-FL == "Y")

      converseLib.validationFailed(120); /* Press PF6 to submit job*/

    else

      converseLib.validationFailed(122); /* Please make you request*/

    end

    return; /* Do not submit JCL*/

  end


  if (EP0OM001.EP0OM-RA-RQST-FL == "Y") /* RA requested*/

    EP0O-53000(); /* RA job running in prod?*/

    if (SQLCA.VAGen_SQLCODE == 0)

      EP0OW00.EP0OW-RA-JOB-SUBMIT-FL = "Y";
      /* This flag prevents re-submission of this job in this session*/
      EP0OW01.EP0OM-RA-RQST-FL = "*"; /* Submitted, protect*/
      converseLib.validationFailed(405); /* Disallow RA job*/

      EP0OW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
      EP0OW00.XXX-RQT-DATA-FL = "Y";

      exit stack; /* Go back to map*/
    end

    EP0O-51000(); /* Build RA JCL & submit*/

    EP0OW00.EP0OW-RA-JOB-SUBMIT-FL = "Y"; /* RA Job submitted*/
    /* This flag prevents re-submission of this job in this session*/

    EP0OW01.EP0OM-RA-RQST-FL = "*"; /* Submitted, protect*/

    converseLib.validationFailed(402); /* Msg - RA jcl submitted*/

  end


  if (EP0OM001.EP0OM-ASN-RQST-FL == "Y") /* ASN requested*/


    EP0O-54000(); /* ASN job running in prod?*/

    if (SQLCA.VAGen_SQLCODE == 0)
      EP0OW00.EP0OW-ASN-JOB-SUBMIT-FL = "Y";
      /* This flag prevents re-submission of this job in this session*/
      EP0OW01.EP0OM-ASN-RQST-FL = "*"; /* Submitted, protect*/
      converseLib.validationFailed(406); /* Disallow ASN job*/

      EP0OW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
      EP0OW00.XXX-RQT-DATA-FL = "Y";

      exit stack; /* Go back to map*/
    end

    EP0O-52000(); /* Build ASN JCL & submit*/

    EP0OW00.EP0OW-ASN-JOB-SUBMIT-FL = "Y"; /* ASN Job submitted*/
    /* This flag prevents re-submission of this job in this session*/

    EP0OW01.EP0OM-ASN-RQST-FL = "*"; /* Submitted, protect*/

    if (converseVar.validationMsgNum == 402) /* RA just submitted also*/
      converseLib.validationFailed(404); /* Both RA & ASN submitted*/
    else
      converseLib.validationFailed(403); /* Msg - ASN jcl submitted*/
    end

  end

  EP0OW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
  EP0OW00.XXX-RQT-DATA-FL = "Y";


end // end EP0O-50000

// Build JCL for RA submit
Function EP0O-51000()
   /* -------------------------------------------------------------*/
   /* BUILD JCL FOR BACKGROUND JOB TO CREATE RA.*/
   /* -------------------------------------------------------------*/


   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  TA6REC.TA6INDEX = 1; /* Initialize index*/


   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Til end of table*/

    /* ------------------------------------------------------------*/
    /* Format the Job Control Language statement from the table.*/
    /* ------------------------------------------------------------*/

    TA6REC.TARJCL[TA6INDEX] = EP0OT01.TARJCL[TA6INDEX]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = EP0OT01.TARTYPE[TA6INDEX]; /* Type*/


    /* ------------------------------------------------------------*/
    /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (EP0OT01.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    end

  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/


   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  EPWREC.XXXLOCID = "51000"; /* Msg loc*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    converseLib.validationFailed(401); /* Batch job was submitted*/
    set EP0OM001 initial; /* Clear map output area*/

    return; /* Return*/

  end


   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(01); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/


end // end EP0O-51000

// Build ASN jcl for submit
Function EP0O-52000()
   /* -------------------------------------------------------------*/
   /* BUILD JCL FOR BACKGROUND JOB TO CREATE ASNs.*/
   /* -------------------------------------------------------------*/


   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  TA6REC.TA6INDEX = 1; /* Initialize index*/


   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Til end of table*/

    /* ------------------------------------------------------------*/
    /* Format the Job Control Language statement from the table.*/
    /* ------------------------------------------------------------*/

    TA6REC.TARJCL[TA6INDEX] = EP0OT02.TARJCL[TA6INDEX]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = EP0OT02.TARTYPE[TA6INDEX]; /* Type*/


    /* ------------------------------------------------------------*/
    /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (EP0OT02.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    end

  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for ASN*/


   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  EPWREC.XXXLOCID = "52000"; /* Msg loc*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    set EP0OM001 initial; /* Clear map output area*/

    return; /* Return*/

  end


   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(01); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/


end // end EP0O-52000

// See if current RA job running
Function EP0O-53000()
   /* ------------------------------------------------------------*/
   /* Select unique row from DSTLOC.VSLPGM01.*/
   /* ------------------------------------------------------------*/

  set SW2REC empty; /* Init record*/

  SW2REC.XWHCD = "51"; /* Apparel DC*/
  SW2REC.XXXPGMNB = "EP51RAO"; /* RA Job*/

  try
    call "IO5700" ("S ", SQLCA, SW2REC) {isNoRefresh = yes, isExternal = yes};
  end /* SEL Unique*/


   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* Not found*/

      return; /* Return to previous process*/

    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  EPWREC.XXXLOCID = "5300"; /* Module id*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* & resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(1); /* Unexpected error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN CURSOR         ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = EPWREC.XXXLOCID; /* Program number*/
  TA1REC.TA1DBASE = "DSTLOC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSLPGM01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end EP0O-53000

// See if current ASN job running
Function EP0O-54000()
   /* ------------------------------------------------------------*/
   /* Select unique row from DSTLOC.VSLPGM01.*/
   /* ------------------------------------------------------------*/

  set SW2REC empty; /* Init record*/

  SW2REC.XWHCD = "51"; /* Apparel DC*/
  SW2REC.XXXPGMNB = "EP51ASO"; /* ASN Job*/

  try
    call "IO5700" ("S ", SQLCA, SW2REC) {isNoRefresh = yes, isExternal = yes};
  end /* SEL Unique*/


   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* Not found*/

      return; /* Return to previous process*/

    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  EPWREC.XXXLOCID = "5300"; /* Module id*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* & resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(1); /* Unexpected error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN CURSOR         ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = EPWREC.XXXLOCID; /* Program number*/
  TA1REC.TA1DBASE = "DSTLOC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSLPGM01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end EP0O-54000

//*** RECORD=EP0OW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record EP0OW00 type basicRecord
  10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 EP0OW-JCL-SUB-SW EP0OW-JCL-SUB-SW ; 
  10 EP0OW-RA-JOB-SUBMIT-FL EP0OW-RA-JOB-SUBMIT-FL ; 
  10 EP0OW-ASN-JOB-SUBMIT-FL EP0OW-ASN-JOB-SUBMIT-FL ; 
  10 EP0OW-IX EP0OW-IX ; 
  10 EP0OW-JCL-LINE-TYPE EP0OW-JCL-LINE-TYPE ; 
end // end EP0OW00

//*** RECORD=EP0OW01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record EP0OW01 type basicRecord
  10 EP0OM-RA-RQST-FL EP0OM-RA-RQST-FL ; 
  10 EP0OM-ASN-RQST-FL EP0OM-ASN-RQST-FL ; 
end // end EP0OW01

// ASN Requested Flag
DataItem EP0OM-ASN-RQST-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RA Requested Flag
DataItem EP0OM-RA-RQST-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ASN jcl submitted
DataItem EP0OW-ASN-JOB-SUBMIT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// EP0O Work Index
DataItem EP0OW-IX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// EP0O JCL Line Type indicator
DataItem EP0OW-JCL-LINE-TYPE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// EP0O Job submitted switch
DataItem EP0OW-JCL-SUB-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RA jcl submitted
DataItem EP0OW-RA-JOB-SUBMIT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

