package nb0e;

import corpcom3.XPNB100;
import corpcom3.XPNB200;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XBCCD;
import corpy2.YADTBL;
import corpz3.ZZZCHGCT;
import corpz3.ZZZSDT;
import ku.common.KUCREC;
import nb.common.*;
import ta.common.TA1REC;
import ta.common.TA2REC;
//*** PROGRAM=NB0E ****
// nike bank group account definition
// 
// OVERVIEW:  nb0e is a stand alone application within the
//            nike bank system.  company groups are for those
//            companies who chose to have their advertising
//            dollars combined into one account for several
//            stores and/or departments.
// 
// date created:  11/20/87
// 
// MAINTENANCE HISTORY:
// 
// 
//   when       who        what
// --------  ---------  --------------------------------------
// 03/02/88   SJOB      changed pf keys to standard bank pf's.
// 11/21/88   SJOB      changed length of company from 8 to 7
// 03/30/89   SJOB      add division of domestic (01)
// 04/13/89   SJOB      support multiple divisions.
// 04/26/89   jwood     added noncsp option to calls
// 04/26/89   jwood     added xssegtr logic
// 04/03/90   s.job     e65: defect allow. deleted from nb1rec.
// 06/11/90   s.job     e69:change old divisions to div/brand
// 10/10/90   s.job     e0:DB CHANGES - ADD BRAND TO CUSTOMER
// 11-4-91    oar       687,692,693: allow group to be expired
//                      when all its members are all expired.
//                      750: fix call to include xdvcd.
// 10/27/93   lgross    added numeric edits when fast pathed
//                      into Nike Bank applications. changed:
//                      nb0ew01, nb0e010
// 01/14/97   CTRAN     Changed nb0ewary occurences to 400
// 02/23/1998 TTHAN1    Y2KFIX - CHANGE END DATE IN NB0E620 AND
//                      NB0E687.
// *********************
Program NB0E type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  NB0EW01 NB0EW01; // record
  NB1REC NB1REC; // record
  NB5REC NB5REC; // record
  NB6REC NB6REC; // record
  NBWREC NBWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use YADTBL {deleteAfterUse = yes}; // table
  use NB0EM.NB0EM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NB0E010: NB0E010();
    ;
    ;
    ;
    ;
    goto NB0E020; /* master loop for application*/
    ;
    ;
    ;
    NB0E020: NB0E020();
    ;
    ;
    ;
    ;
    goto NB0E020; /* master loop for application*/
    ;
    ;
    ;
  end // end main
end // end NB0E

// initialization
Function NB0E010()
  ;
  ;
  ;
     /* ******************************************************/
     /* * this process initializes program work area and map**/
     /* 10-27-93 lgross Added numeric check for customer id **/
     /* ******************************************************/
  ;
     /* * check entry security*/
  ;
  XSENTRY();
  XSSEGTR(); /* set segmented transaction id*/
  ;
     /* * initialize map and working storage*/
  ;
  set NB0EW01 empty;
  set SQLCA empty;
  ;
  NB0E015(); /* initialize map*/
  ;
  NB0EW01.NB0EWFL2 = "N"; /* scrolling requested flag*/
  NB0EW01.NB0EWTOP = 1; /* set array top*/
  ;
  if (COMMAREA.CAITEM > " ")
    NB0EW01.NB0EWEKE = COMMAREA.CAITEM;
  end
  if (NB0EW01.NB0EWECC is numeric) /* /no spaces entered*/
     /* /next sentence*/
  else
    NB0EW01.NB0EWCO = 0; /* /set company to zero*/
  end
  ;
  if (NB0EW01.NB0EWECO > 0)
    NB0EM001.NB0EMCO = NB0EW01.NB0EWECO;
    if (NB0EW01.NB0EWEBC > "  ") /* brand*/
      NB0EM001.XBCCD = NB0EW01.NB0EWEBC;
      NB0EW01.XBCCD = NB0EW01.NB0EWEBC;
    else
      NB0EM001.XBCCD = "01"; /* default:domestic*/
      NB0EW01.XBCCD = "01";
    end
  end
  ;
  ;
   /* current date to w/s field nb0ew01.nb0ewdt - ccyymmdd format*/
  ;
  NB0EW01.NB0EWDT1 = VGVar.currentShortGregorianDate;
  NB0EW01.NB0EWYY = NB0EW01.NB0EWD1Y;
  NB0EW01.NB0EWMM = NB0EW01.NB0EWD1M;
  NB0EW01.NB0EWDD = NB0EW01.NB0EWD1D;
  ;
  if (NB0EW01.NB0EWYY <= 51)
    NB0EW01.NB0EWCC = 20;
  else
    NB0EW01.NB0EWCC = 19;
  end
  ;
  ;
  ;
end // end NB0E010

// initialize map
Function NB0E015()
  ;
  ;
  ;
  set NB0EM001 initial;
  ;
  NB0EM001.NB0EMDTE = VGVar.currentShortGregorianDate;
  NB0EM001.NB0EMREV = "01";
  NB0EM001.NB0EMPRO = "NB0E300";
  ;
  ;
  ;
end // end NB0E015

// master loop for application
Function NB0E020()
  ;
  ;
    /* *****************************************************/
    /* *  this process is the main control loop for the*/
    /* *  group account definition application . . . . .*/
    /* *****************************************************/
  ;
  NB0E030(); /* test for key change*/
  ;
  if (NB0EW01.NB0EWFL2 == "Y" /* scrolling requested flag*/
   || converseVar.eventKey is pa2) /* clear & reload screen*/
    NB0E200(); /* load map*/
  end
  ;
  if (converseVar.validationMsgNum == 0)
    NB0EMMSG = "AN \"S\" IN THE ACTION FIELD WILL SHOW GROUP MEMBERS";
  end
  ;
  ;
  ;
  NB0E300(); /* converse map*/
  ;
  ;
  NB0EM001.NB0EMMSG = " ";
  ;
  NB0EW01.NB0EWFL1 = "N"; /* data modified flag*/
  NB0EW01.NB0EWFL2 = "N"; /* scrolling requested flag*/
  ;
  NB0E400(); /* attention key processing*/
  ;
  NB0E500(); /* set attributes - defined*/
  ;
  if (converseVar.eventKey is pa2) /* clear & reload screen*/
     /* do nothing*/
  else
    NB0E600(); /* data validation*/
    ;
    if (NB0EW01.NB0EWFL1 == "Y") /* data modified*/
      if (NB0EM001.NB0EMCO == NB0EW01.NB0EWCO /* co was not changed*/
       && NB0EM001.XBCCD == NB0EW01.XBCCD)    /* brand  not changed*/
        if (converseVar.validationMsgNum == 0) /* no edit errors*/
          NB0E700(); /* update database*/
          if (converseVar.validationMsgNum == 0) /* not edit errors*/
            converseLib.validationFailed(19); /* database update successful*/
          end
        end
      end
    else
      if (converseVar.validationMsgNum == 0) /* no edit errors*/
        if (converseVar.eventKey is pf7 /* scroll backwards*/
         || converseVar.eventKey is pf8) /* scroll forwards*/
          NB0E800();
        else
          if (NB0EW01.NB0EWFL6 == "Y") /* group code selected*/
            NB0E900();
          end
        end
      end
    end
  end
  ;
  ;
  ;
end // end NB0E020

// test for key change
Function NB0E030()
  ;
  ;
  if (NB0EM001.NB0EMCO > 0) /* company number entered*/
    ;
    if (NB0EM001.XBCCD == "  ") /* no brand*/
      NB0EM001.XBCCD = "01"; /* default to domestic*/
      NB0EW01.XBCCD = "01"; /* default to domestic*/
    end
    ;
    if (NB0EM001.NB0EMCO == NB0EW01.NB0EWCO /* same company*/
     && NB0EM001.XBCCD == NB0EW01.XBCCD)    /* same brand*/
        /* next sentence*/
    else
      NB0E100(); /* get kucrec*/
      if (converseVar.validationMsgNum == 0) /* no errors*/
        NB0E200(); /* load map*/
      end
    end
  else
    NB0E015(); /* initilize map*/
    converseLib.validationFailed(31); /* company id number required*/
    NB0EW01.NB0EWCO = 0; /* set w/s to 0*/
    NB0EW01.NB0EWMAX = 0; /* set max to 0*/
    set NB0EM001.NB0EMCO cursor, modified, bold;
  end
  ;
end // end NB0E030

// get kucrec and load w/s
Function NB0E100()
  ;
  ;
  set KUCREC empty;
  set TA1REC empty;
  set ERRSQLCA empty;
  ;
  NB0EW01.NB0EWCO = NB0EM001.NB0EMCO; /* hold new key*/
  NB0EW01.XBCCD = NB0EM001.XBCCD;
  ;
  NB0E015(); /* clear & initilize the map*/
  ;
  NB0EM001.NB0EMCO = NB0EW01.NB0EWCO; /* move back*/
  NB0EM001.XBCCD = NB0EW01.XBCCD;
  ;
  ;
  KUCREC.KUCCOID = NB0EM001.NB0EMCO;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* a good return - record found*/
    NB0EM001.NB0EMCNM = KUCREC.KUCCONM;
    NB0EW01.NB0EWCNM = KUCREC.KUCCONM;
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* not found condition*/
      converseLib.validationFailed(44); /* not a valid nike co*/
      set NB0EM001.NB0EMCO cursor, modified, bold;
      NB0EW01.NB0EWCO = 0;
      NB0EW01.NB0EWCNM = " ";
      NB0EW01.NB0EWMAX = 0;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
      else
        TA1REC.TA1LOCAT[1] = "S ";
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0E";
        TA1REC.TA1LOCAT[2] = "NB0E100";
        TA1REC.TA1LOCAT[3] = "IO0240";
        TA1REC.TA1LOCAT[4] = "NB0E010";
        TA1REC.TA1DBASE = "DNBANK";
        TA1REC.TA1TBLVU = "VCMPNY01";
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        XSPF4();
        VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    NB0E110(); /* select set nb5rec*/
  end
  ;
  ;
  ;
end // end NB0E100

// select set nb5rec
Function NB0E110()
  ;
  ;
  set NB5REC empty;
  set TA1REC empty;
  set ERRSQLCA empty;
  ;
  NB5REC.NB5PNTCO = NB0EM001.NB0EMCO; /* parent company*/
  NB5REC.XDVCD = "01"; /* division*/
  NB5REC.XBCCD = NB0EM001.XBCCD; /* brand*/
  ;
  call "IO2220" ("S1", SQLCA, NB5REC) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* a good return - record found*/
    NB0EW01.NB0EWSB5 = 1; /* initialize w/s array subscript*/
    NB0E120(); /* get first nb5rec*/
    if (SQLCA.VAGen_SQLCODE == +0) /* record found*/
      while (SQLCA.VAGen_SQLCODE == +0) /* record found*/
        NB0E120(); /* continue to get nb5rec's*/
      end
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* not found condition*/
        converseLib.validationFailed(40); /* this co / group has no members*/
        set NB0EM001.NB0EMCO cursor, modified, bold;
        NB0EW01.NB0EWMAX = 0;
      end
    end
    call "IO2220" ("C1", SQLCA, NB5REC) {isNoRefresh = yes, isExternal = yes}; /* close set*/
    if (SQLCA.VAGen_SQLCODE != +0) /* could not close....*/
      TA1REC.TA1LOCAT[1] = "C1";
      TA1REC.TA1LOCAT[2] = "NB0E110";
    end
  else
    TA1REC.TA1LOCAT[1] = "S1";
    TA1REC.TA1LOCAT[2] = "NB0E110";
  end
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0
   || SQLCA.VAGen_SQLCODE == +100)
     /* every thing is fine....*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
    else
      TA1REC.TA1LOCAT[1] = "S ";
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0E";
      TA1REC.TA1LOCAT[2] = "NB0E100";
      TA1REC.TA1LOCAT[3] = "IO0240";
      TA1REC.TA1LOCAT[4] = "NB0G010";
      TA1REC.TA1DBASE = "DNBANK";
      TA1REC.TA1TBLVU = "VCMPNY01";
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end
  ;
  ;
  ;
  ;
end // end NB0E110

// select next nb5rec & load w/s
Function NB0E120()
  ;
  ;
  ;
    /* ***************************************************/
    /* *  purpose:  get next nb5rec... customer group   **/
    /* ***************************************************/
  ;
    /* ***************************************************/
    /* *         MAINTENANCE SECTION*/
    /* *  CHANGED NB0EW01.NB0EWSB5 FROM 100 TO 400  CTRAN 01/14/97*/
    /* ***************************************************/
    /* ****************************************************/
    /* * NB0EW01.NB0EWSB5 = POSITION IN ARRAY BEING LOADED*/
    /* ****************************************************/
  ;
  call "IO2220" ("N1", SQLCA, NB5REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    if (NB0EW01.NB0EWSB5 <= 400)
                                   /* can only retriEVE 400 RECORDS INTO WS*/
      NB0EW01.NB0EWCDE[NB0EWSB5] = NB5REC.NB1GRPCD;
      NB0EW01.NB0EWPGM[NB0EWSB5] = NB5REC.YADCD;
      NB0EW01.NB0EWDSC[NB0EWSB5] = NB5REC.NB5GPDSC;
      NB0EW01.NB0EWABR[NB0EWSB5] = NB5REC.NB5GPABR;
      NB0EW01.NB0EWSDT[NB0EWSB5] = NB5REC.NB5GPEDT;
      NB0EW01.NB0EWEDT[NB0EWSB5] = NB5REC.NB5GPXDT;
      NB0EW01.ZZZSDT[NB0EWSB5] = NB5REC.ZZZSDT;
      NB0EW01.ZZZCHGCT[NB0EWSB5] = NB5REC.ZZZCHGCT;
      NB0EW01.NB0EWSB5 = NB0EW01.NB0EWSB5 + 1; /* bump up subscript*/
    else
      converseLib.validationFailed(28); /* limits of table exceeded - call*/
                                   /* programming*/
    end
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* not found, no more records*/
      NB0EW01.NB0EWMAX = NB0EW01.NB0EWSB5 - 1; /* array's last valid entry*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
      else
        set TA1REC empty;
        set ERRSQLCA empty;
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0E";
        TA1REC.TA1LOCAT[1] = "N2";
        TA1REC.TA1LOCAT[2] = "NB0E120";
        TA1REC.TA1LOCAT[3] = "IO2220 ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1LOCAT[4] = "NB0GM001";
        TA1REC.TA1DBASE = "DNBANK.";
        TA1REC.TA1TBLVU = "VBCGRP01";
        TA1TBLKE = NB0EW01.NB0EWCKX;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        XSPF4();
        VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end
  ;
  ;
  ;
end // end NB0E120

// load map
Function NB0E200()
  ;
  ;
         /* ************************************/
         /* *          load map               **/
         /* ************************************/
  ;
   /* *************************************************************/
   /* * NB0EW01.NB0EWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0EW01.NB0EWSB3 = location on the map of the current    **/
   /* *                    line being loaded                     **/
   /* * NB0EW01.NB0EWSB5 = location in working storage of the    **/
   /* *                    current line being loaded             **/
   /* * NB0EW01.NB0EWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
  ;
  NB0EW01.NB0EWSB5 = NB0EW01.NB0EWTOP; /* w/s subscript*/
  NB0EW01.NB0EWSB3 = 1; /* screen subscript*/
  ;
  NB0EM001.NB0EMCNM = NB0EW01.NB0EWCNM; /* company name to map*/
  ;
  ;
  while (NB0EW01.NB0EWSB3 <= 13)
    if (NB0EW01.NB0EWSB5 <= NB0EW01.NB0EWMAX)
      NB0EM001.NB0EMACT[NB0EWSB3] = " ";
      NB0EM001.NB0EMCDE[NB0EWSB3] = NB0EW01.NB0EWCDE[NB0EWSB5];
      set NB0EM001.NB0EMCDE[NB0EWSB3] protect;
      NB0EM001.NB0EMPGM[NB0EWSB3] = NB0EW01.NB0EWPGM[NB0EWSB5];
      set NB0EM001.NB0EMPGM[NB0EWSB3] protect;
      NB0EM001.NB0EMDSC[NB0EWSB3] = NB0EW01.NB0EWDSC[NB0EWSB5];
      NB0EM001.NB0EMABR[NB0EWSB3] = NB0EW01.NB0EWABR[NB0EWSB5];
      ;
      NBWREC.NBWNU8 = NB0EW01.NB0EWSDT[NB0EWSB5];
      XPNB200();
      NB0EM001.NB0EMSDT[NB0EWSB3] = NBWREC.NBWCH8;
      ;
      ;
      NBWREC.NBWNU8 = NB0EW01.NB0EWEDT[NB0EWSB5];
      XPNB200(); /* date format routine*/
      NB0EM001.NB0EMEDT[NB0EWSB3] = NBWREC.NBWCH8;
      ;
      NB0EM001.ZZZSDT[NB0EWSB3] = NB0EW01.ZZZSDT[NB0EWSB5];
      set NB0EM001.ZZZSDT[NB0EWSB3] protect;
    else
       /* handle setting up of add lines*/
      NB0EM001.NB0EMACT[NB0EWSB3] = " ";
      NB0EM001.NB0EMCDE[NB0EWSB3] = " ";
      NB0EM001.NB0EMPGM[NB0EWSB3] = " ";
      NB0EM001.NB0EMDSC[NB0EWSB3] = " ";
      NB0EM001.NB0EMABR[NB0EWSB3] = " ";
      NB0EM001.NB0EMSDT[NB0EWSB3] = " ";
      NB0EM001.NB0EMEDT[NB0EWSB3] = " ";
      set NB0EM001.ZZZSDT[NB0EWSB3] protect, invisible;
    end
    NB0EW01.NB0EWSB3 = NB0EW01.NB0EWSB3 + 1; /* bump up subscript*/
    NB0EW01.NB0EWSB5 = NB0EW01.NB0EWSB5 + 1; /* bump up subscript*/
  end
  ;
  ;
  ;
end // end NB0E200

// MAP
Function NB0E300()
  ;
  converse NB0EM001 ;
  ;
  ;
end // end NB0E300

// attention key processing
Function NB0E400()
  ;
  ;
         /* *****************************************************/
         /* * severe cut & paste...3/3/88   ssj                **/
         /* *****************************************************/
  ;
  ;
  if (NB0EM001.CATOAP > " ")
    COMMAREA.CATOAP = NB0EM001.CATOAP;
    COMMAREA.CAITEM = NB0EM001.CAITEM;
    COMMAREA.CAFROMAP = "NB0E";
    XSEXIT();
  else
    NB0EM001.CAITEM = " "; /* clear any display garbage*/
  end
  ;
  ;
  if (converseVar.eventKey is enter /* enter*/
   || converseVar.eventKey is pf7   /* scroll backward*/
   || converseVar.eventKey is pf8)  /* scroll forward*/
    return;
  else
    ;
    if (converseVar.eventKey is pa2  /* cancel*/
     || converseVar.eventKey is pf1  /* help!*/
     || converseVar.eventKey is pf3  /* nb0m menu*/
     || converseVar.eventKey is pf4  /* master menu mn0m*/
     || converseVar.eventKey is pf13 /* nb0g acct summary*/
     || converseVar.eventKey is pf14 /* nb0a acct bal*/
     || converseVar.eventKey is pf15 /* nb0c history*/
     || converseVar.eventKey is pf16 /* nb0b cust*/
     || converseVar.eventKey is pf18 /* nb0d cust*/
     || converseVar.eventKey is pf21) /* nb0f group memb.*/
        /* approved pf key used*/
    else
      converseLib.validationFailed(3); /* invalid pf key used*/
      set NB0EM001.NB0EMCO cursor;
      exit stack;
    end
  end
  ;
  ;
  ;
  if (converseVar.eventKey is pa2)
    NB0EM001.NB0EMCO = NB0EW01.NB0EWCO; /* moves ws co # to map*/
    NB0EM001.XBCCD = NB0EW01.XBCCD; /* moves ws brand to map*/
  end
  ;
  ;
  if (converseVar.eventKey is pf1) /* check for system help*/
    XSPF1(); /* help facility*/
  end
  ;
  ;
  if (converseVar.eventKey is pf3) /* check for nike bank menu level*/
    COMMAREA.CAITEM = " "; /* clear any key values*/
    COMMAREA.CATOAP = "NB0M"; /* invoke nike bank menu*/
    COMMAREA.CAFROMAP = "NB0E";
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf4) /* check for master menu*/
    COMMAREA.CAITEM = " "; /* clear any key values*/
    COMMAREA.CATOAP = "MN0M"; /* invoke master menu request*/
    COMMAREA.CAFROMAP = "NB0E"; /* invoke master menu request*/
    XSPF4(); /* invoke master menu request*/
  end
  ;
  ;
  if (converseVar.eventKey is pf13) /* acct.summary nb0g*/
    NB0E410(); /* load any key data*/
    COMMAREA.CATOAP = "NB0G"; /* invoke master menu request*/
    XSEXIT(); /* leave here.*/
  end
  ;
  ;
  if (converseVar.eventKey is pf14) /* acct.bal nb0a*/
    NB0E410(); /* load any key data*/
    COMMAREA.CATOAP = "NB0A"; /* invoke master menu request*/
    XSEXIT(); /* leave here.*/
  end
  ;
  ;
  if (converseVar.eventKey is pf15) /* history  nb0c*/
    NB0E410(); /* load any key data*/
    COMMAREA.CATOAP = "NB0C"; /* invoke master menu request*/
    XSEXIT(); /* leave here.*/
  end
  ;
  ;
  if (converseVar.eventKey is pf16) /* customer nb0b*/
    NB0E410(); /* load any key data*/
    COMMAREA.CATOAP = "NB0B"; /* invoke master menu request*/
    XSEXIT(); /* leave here.*/
  end
  ;
  ;
  if (converseVar.eventKey is pf18) /* transfer nb0d*/
    NB0E410(); /* load any key data*/
    COMMAREA.CATOAP = "NB0D"; /* invoke master menu request*/
    XSEXIT(); /* leave here.*/
  end
  ;
  ;
  if (converseVar.eventKey is pf21) /* group member nb0f*/
    NB0E410(); /* load any key data*/
    COMMAREA.CATOAP = "NB0F"; /* invoke master menu request*/
    XSEXIT(); /* leave here.*/
  end
  ;
  ;
  ;
end // end NB0E400

// load any key data for transfer
Function NB0E410()
  if (NB0EM001.NB0EMCO == NB0EW01.NB0EWCO
   && NB0EM001.XBCCD == NB0EW01.XBCCD) /* brand*/
    COMMAREA.CAITEM = NB0EW01.NB0EWEKE;
    COMMAREA.CAFROMAP = "NB0E";
    XSEXIT();
  else
    NB0EW01.NB0EWECO = NB0EM001.NB0EMCO;
    NB0EW01.NB0EWEBC = NB0EM001.XBCCD; /* brand*/
    NB0EW01.NB0EWEST = 0;
    NB0EW01.NB0EWEDP = 0;
    NB0EW01.NB0EWEGP = "  ";
    COMMAREA.CAITEM = NB0EW01.NB0EWEKE;
    COMMAREA.CAFROMAP = "NB0E";
    XSEXIT();
  end
  ;
  ;
  ;
end // end NB0E410

// set map attributes defined
Function NB0E500()
  ;
  ;
         /* ************************************/
         /* *     set attributes defined      **/
         /* ************************************/
  ;
  ;
  set NB0EM001.NB0EMCO cursor, initialAttributes;
  set NB0EM001.XBCCD initialAttributes; /* brand*/
  ;
  NB0EW01.NB0EWSB1 = 1;
  while (NB0EW01.NB0EWSB1 <= 13)
    set NB0EM001.NB0EMACT[NB0EWSB1] initialAttributes;
    set NB0EM001.NB0EMCDE[NB0EWSB1] initialAttributes;
    set NB0EM001.NB0EMPGM[NB0EWSB1] initialAttributes;
    set NB0EM001.NB0EMDSC[NB0EWSB1] initialAttributes;
    set NB0EM001.NB0EMABR[NB0EWSB1] initialAttributes;
    set NB0EM001.NB0EMSDT[NB0EWSB1] initialAttributes;
    set NB0EM001.NB0EMEDT[NB0EWSB1] initialAttributes;
    NB0EW01.NB0EWSB1 = NB0EW01.NB0EWSB1 + 1;
  end
  ;
  set NB0EM001.CATOAP initialAttributes;
  set NB0EM001.CAITEM initialAttributes;
  ;
  ;
  ;
end // end NB0E500

// data validation
Function NB0E600()
  ;
  ;
  if (NB0EM001.NB0EMCO == 0
   && NB0EW01.NB0EWCO == 0)
    converseLib.validationFailed(31); /* a company id is required*/
    set NB0EM001.NB0EMCO cursor, modified, bold;
    return;
  end
  ;
  if (NB0EM001.XBCCD == "  ") /* no brand*/
    NB0EM001.XBCCD = "01";
  end
  ;
  ;
  NB0E601(); /* remove embedded blank lines*/
  ;
  NB0E602(); /* set attributes*/
  ;
  NB0EW01.NB0EWMOD = " "; /* space modified line array*/
  ;
  NB0EW01.NB0EWSB3 = 13; /* set screen sub to bottom*/
  NB0EW01.NB0EWSB5 = NB0EW01.NB0EWTOP + 12;
  ;
  while (NB0EW01.NB0EWSB3 >= 1)
    if (NB0EW01.NB0EWSB5 > NB0EW01.NB0EWMAX)
      NB0E610(); /* add routine edits*/
    else
      NB0E680(); /* change routine edits*/
    end
    NB0EW01.NB0EWSB3 = NB0EW01.NB0EWSB3 - 1; /* subtract 1 from subscript*/
    NB0EW01.NB0EWSB5 = NB0EW01.NB0EWSB5 - 1; /* subtract 1 from subscript*/
  end
  ;
  NB0E690(); /* selection edits*/
  ;
  if (NB0EW01.NB0EWFL1 == "Y")
    if (converseVar.eventKey is pf7
     || converseVar.eventKey is pf8)
      converseLib.validationFailed(29); /* scrolling while updating not allowed*/
    end
  end
  ;
  if (NB0EW01.NB0EWFL1 == "Y")
    if (NB0EW01.NB0EWCO == NB0EM001.NB0EMCO
     && NB0EW01.XBCCD == NB0EM001.XBCCD) /* brand*/
      /* do nothing*/
    else
      NB0EM001.NB0EMCO = NB0EW01.NB0EWCO;
      NB0EM001.XBCCD = NB0EW01.XBCCD; /* brand*/
      converseLib.validationFailed(33); /* company can't be changed while updating*/
      set NB0EM001.NB0EMCO cursor, modified, bold;
      NB0E699(); /* highlight modified lines*/
    end
  end
  ;
  ;
  ;
end // end NB0E600

// remove embedded blank lines
Function NB0E601()
  ;
  ;
   /* *************************************************************/
   /* * NB0eW01.NB0eWSB3 = location on the map of the current    **/
   /* *                    line being checked for blanks         **/
   /* * NB0eW01.NB0eWSB1 = location on the map of the next       **/
   /* *                    avaliable blank line                  **/
   /* *************************************************************/
  ;
  ;
  NB0EW01.NB0EWSB3 = 1; /* current position on the screen*/
  NB0EW01.NB0EWSB1 = 0; /* pointing to current blank line*/
  ;
  while (NB0EW01.NB0EWSB3 <= 13)
    if (NB0EM001.NB0EMACT[NB0EWSB3] == " "
     && NB0EM001.NB0EMCDE[NB0EWSB3] == " "
     && NB0EM001.NB0EMPGM[NB0EWSB3] == " "
     && NB0EM001.NB0EMDSC[NB0EWSB3] == " "
     && NB0EM001.NB0EMABR[NB0EWSB3] == " "
     && NB0EM001.NB0EMSDT[NB0EWSB3] == " "
     && NB0EM001.NB0EMEDT[NB0EWSB3] == " ")
      if (NB0EW01.NB0EWSB1 == 0)
        NB0EW01.NB0EWSB1 = NB0EW01.NB0EWSB3;
      end
    else
      if (NB0EW01.NB0EWSB1 > 0) /* a blank line is available*/
           /* move current line to blank line*/
        NB0EM001.NB0EMACT[NB0EWSB1] = NB0EM001.NB0EMACT[NB0EWSB3];
        NB0EM001.NB0EMCDE[NB0EWSB1] = NB0EM001.NB0EMCDE[NB0EWSB3];
        NB0EM001.NB0EMPGM[NB0EWSB1] = NB0EM001.NB0EMPGM[NB0EWSB3];
        NB0EM001.NB0EMDSC[NB0EWSB1] = NB0EM001.NB0EMDSC[NB0EWSB3];
        NB0EM001.NB0EMABR[NB0EWSB1] = NB0EM001.NB0EMABR[NB0EWSB3];
        NB0EM001.NB0EMSDT[NB0EWSB1] = NB0EM001.NB0EMSDT[NB0EWSB3];
        NB0EM001.NB0EMEDT[NB0EWSB1] = NB0EM001.NB0EMEDT[NB0EWSB3];
        NB0EM001.ZZZSDT[NB0EWSB1] = NB0EM001.ZZZSDT[NB0EWSB3];
        ;
           /* blank out current line - it is now in previous blank line*/
        NB0EM001.NB0EMACT[NB0EWSB3] = " ";
        NB0EM001.NB0EMCDE[NB0EWSB3] = " ";
        NB0EM001.NB0EMPGM[NB0EWSB3] = " ";
        NB0EM001.NB0EMDSC[NB0EWSB3] = " ";
        NB0EM001.NB0EMABR[NB0EWSB3] = " ";
        NB0EM001.NB0EMSDT[NB0EWSB3] = " ";
        NB0EM001.NB0EMEDT[NB0EWSB3] = " ";
        NB0EM001.ZZZSDT[NB0EWSB3] = 0;
        ;
        NB0EW01.NB0EWSB1 = NB0EW01.NB0EWSB1 + 1;
      end
    end
    NB0EW01.NB0EWSB3 = NB0EW01.NB0EWSB3 + 1;
  end
  ;
  ;
  ;
  ;
  ;
end // end NB0E601

// set attributes
Function NB0E602()
  ;
  ;
   /* *************************************************************/
   /* * NB0eW01.NB0eWSB3 = location on the map of the current    **/
   /* *                    line being checked for blanks         **/
   /* *************************************************************/
  ;
  ;
  NB0EW01.NB0EWSB3 = 13; /* current position on the screen*/
  NB0EW01.NB0EWSB5 = NB0EW01.NB0EWTOP + 12; /* set w/s = screen position*/
  ;
  while (NB0EW01.NB0EWSB3 >= 1)
    if (NB0EW01.NB0EWSB5 <= NB0EW01.NB0EWMAX)
      set NB0EM001.NB0EMCDE[NB0EWSB3] protect;
      set NB0EM001.NB0EMPGM[NB0EWSB3] protect;
    end
    NB0EW01.NB0EWSB3 = NB0EW01.NB0EWSB3 - 1;
    NB0EW01.NB0EWSB5 = NB0EW01.NB0EWSB5 - 1;
  end
  ;
  ;
  ;
  ;
  ;
end // end NB0E602

// add routine edits
Function NB0E610()
  ;
  ;
   /* *************************************************************/
   /* * NB0eW01.NB0eWSB3 = location on the map of the current    **/
   /* *                    line being checked for blanks         **/
   /* * NB0eW01.NB0eWSB5 = location in working storage of line   **/
   /* *                    being edited                          **/
   /* *************************************************************/
  ;
  ;
  if (NB0EM001.NB0EMCDE[NB0EWSB3] == " "
   && NB0EM001.NB0EMPGM[NB0EWSB3] == " "
   && NB0EM001.NB0EMDSC[NB0EWSB3] == " "
   && NB0EM001.NB0EMABR[NB0EWSB3] == " "
   && NB0EM001.NB0EMSDT[NB0EWSB3] == " "
   && NB0EM001.NB0EMEDT[NB0EWSB3] == " ")
    NB0EM001.NB0EMACT[NB0EWSB3] = " ";
  else
    ;
    NB0EW01.NB0EWFL4 = "Y"; /* valid dates flag*/
    NB0EW01.NB0EWFL1 = "Y"; /* data modified flag*/
    NB0EW01.NB0EWCHA[NB0EWSB3] = "M"; /* modified line indicator*/
    ;
    NB0E620(); /* format and validate ending date*/
    ;
    NB0E622(); /* format and validate start date*/
    ;
    if (NB0EW01.NB0EWFL4 == "Y") /* valid dates flag*/
      if (NB0EW01.NB0EWCD2 < NB0EW01.NB0EWCD1) /* range compare*/
         /* no problem - do nothing*/
      else
        converseLib.validationFailed(6); /* invalid date range*/
        set NB0EM001.NB0EMSDT[NB0EWSB3] cursor, modified, bold;
        set NB0EM001.NB0EMEDT[NB0EWSB3] modified, bold;
      end
    end
    ;
    NB0E630(); /* ad program edit*/
    ;
    NB0E640(); /* code edit*/
    ;
    if (NB0EM001.NB0EMDSC[NB0EWSB3] > " ") /* description contains a value*/
        /* do nothing*/
    else
      converseLib.validationFailed(48); /* each group must have a description*/
      set NB0EM001.NB0EMDSC[NB0EWSB3] cursor, modified, bold;
    end
    ;
    NB0E650(); /* action field edit*/
    ;
  end
  ;
  ;
  ;
end // end NB0E610

// format / validate ending date
Function NB0E620()
  ;
  ;
   /* *************************************************************/
   /* * NB0eW01.NB0eWSB3 = location on the map of the current    **/
   /* *                    line being checked for blanks         **/
   /* *************************************************************/
  ;
    /* validate ending date*/
  ;
  if (NB0EM001.NB0EMEDT[NB0EWSB3] > " ")
    NBWREC.NBWDATE = NB0EM001.NB0EMEDT[NB0EWSB3];
    XPNB100(); /* put ending dte in mm-dd-yy format*/
    if (NBWREC.NBWNUMFL == "Y") /* numeric date*/
      NB0EM001.NB0EMEDT[NB0EWSB3] = NBWREC.NBWCH8;
      NB0E621(); /* validate date*/
      if (TA2REC.TA2RTNCD == 0) /* valid date*/
        NB0EW01.NB0EWCD1 = TA2REC.TA2GRGGN; /* for range compare*/
      else
        NB0EW01.NB0EWFL4 = "N"; /* valid dates flag*/
        converseLib.validationFailed(8); /* invalid date*/
        set NB0EM001.NB0EMEDT[NB0EWSB3] cursor, modified, bold;
      end
    else
      NB0EW01.NB0EWFL4 = "N"; /* valid dates flag*/
      converseLib.validationFailed(8); /* invalid date*/
      set NB0EM001.NB0EMEDT[NB0EWSB3] cursor, modified, bold;
    end
  else
    if (NB0EM001.NB0EMACT[NB0EWSB3] == " "
     || NB0EM001.NB0EMACT[NB0EWSB3] == "A")
  /* ******************Y2K OUT BEGIN*******************/
  /* **MOVE '12-31-99' TO NB0EM001.NB0EMEDT(NB0EWSB3);*/
  /* **MOVE 19991231 TO NB0EW01.NB0EWCD1;    /* for range compare*/
  /* ******************Y2K OUT END*********************/
  /* ******************Y2K IN BEGIN********************/
      NB0EM001.NB0EMEDT[NB0EWSB3] = "12-31-43";
      NB0EW01.NB0EWCD1 = 20431231; /* for range compare*/
  /* ******************Y2K IN END**********************/
    else
      NB0EW01.NB0EWFL4 = "N"; /* valid dates flag*/
    end
  end
  ;
  ;
  ;
end // end NB0E620

// validate date
Function NB0E621()
  ;
  ;
  set TA2REC empty;
  TA2REC.TA2GRGB = NBWREC.NBWCH8; /* mm-dd-yy format*/
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "B";
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
  ;
end // end NB0E621

// format / validate start date
Function NB0E622()
  ;
  ;
   /* *************************************************************/
   /* * NB0eW01.NB0eWSB3 = location on the map of the current    **/
   /* *                    line being checked for blanks         **/
   /* *************************************************************/
  ;
    /* validate start date*/
  ;
  if (NB0EM001.NB0EMSDT[NB0EWSB3] > " ")
    NBWREC.NBWDATE = NB0EM001.NB0EMSDT[NB0EWSB3];
    XPNB100(); /* put start dte in mm-dd-yy format*/
    if (NBWREC.NBWNUMFL == "Y") /* numeric date*/
      NB0EM001.NB0EMSDT[NB0EWSB3] = NBWREC.NBWCH8;
      NB0E621(); /* validate date*/
      if (TA2REC.TA2RTNCD == 0) /* valid date*/
        NB0EW01.NB0EWCD2 = TA2REC.TA2GRGGN; /* for range compare*/
      else
        NB0EW01.NB0EWFL4 = "N"; /* valid dates flag*/
        converseLib.validationFailed(8); /* invalid date*/
        set NB0EM001.NB0EMSDT[NB0EWSB3] cursor, modified, bold;
      end
    else
      NB0EW01.NB0EWFL4 = "N"; /* valid dates flag*/
      converseLib.validationFailed(8); /* invalid date*/
      set NB0EM001.NB0EMSDT[NB0EWSB3] cursor, modified, bold;
    end
  else
    if (NB0EM001.NB0EMACT[NB0EWSB3] == " "
     || NB0EM001.NB0EMACT[NB0EWSB3] == "A")
      NB0EW01.NB0EWDT1 = VGVar.currentShortGregorianDate;
      NB0EW01.NB0EWD2Y = NB0EW01.NB0EWD1Y;
      NB0EW01.NB0EWD1 = "-"; /* dash-1*/
      NB0EW01.NB0EWD2M = NB0EW01.NB0EWD1M;
      NB0EW01.NB0EWD2 = "-"; /* dash-2*/
      NB0EW01.NB0EWD2D = NB0EW01.NB0EWD1D;
      NB0EM001.NB0EMSDT[NB0EWSB3] = NB0EW01.NB0EWDT2;
      NB0EW01.NB0EWCD2 = NB0EW01.NB0EWDT; /* for range compare*/
    else
      NB0EW01.NB0EWFL4 = "N"; /* valid dates flag*/
    end
  end
  ;
  ;
  ;
  ;
end // end NB0E622

// validate ad program
Function NB0E630()
  ;
  ;
  if (NB0EM001.NB0EMPGM[NB0EWSB3] > " ")
    if (NB0EM001.NB0EMPGM[NB0EWSB3] != "99")
      if (NB0EM001.NB0EMPGM[NB0EWSB3] in YADTBL.YADCD)
        NB0EWHPG = YADTBL.YADCD[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(47); /* invalid ad program*/
        set NB0EM001.NB0EMPGM[NB0EWSB3] cursor, modified, bold;
      end
    end
  else
    if (NB0EM001.NB0EMACT[NB0EWSB3] == " "
     || NB0EM001.NB0EMACT[NB0EWSB3] == "A")
      NB0EM001.NB0EMPGM[NB0EWSB3] = "99"; /* defalut value if blank*/
    end
  end
  ;
  ;
  ;
end // end NB0E630

// validate group code
Function NB0E640()
  ;
  ;
   /* *************************************************************/
   /* * NB0eW01.NB0eWSB1 = location on the map of the field      **/
   /* *                    being compared                        **/
   /* *               or = location in w/s of the field being    **/
   /* *                    compared                              **/
   /* * NB0eW01.NB0eWSB3 = location on the map of the current    **/
   /* *                    line being loaded/edited              **/
   /* * NB0eW01.NB0eWSB5 = location in working storage of the    **/
   /* *                    current line being loaded/edited      **/
   /* * NB0eW01.NB0eWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
  ;
  if (NB0EM001.NB0EMCDE[NB0EWSB3] == " ") /* no code entered*/
    converseLib.validationFailed(62); /* must enter group code*/
    set NB0EM001.NB0EMCDE[NB0EWSB3] cursor, modified, bold;
    return;
  end
  ;
  NB0EW01.NB0EWFL5 = "Y"; /* ** unique code flag*/
  NB0EW01.NB0EWSB1 = 1; /* ** location of compare field on map*/
  ;
         /* ************************************/
         /* * search screen for a duplicate   **/
         /* ************************************/
  ;
  while (NB0EW01.NB0EWSB1 <= 13
   && NB0EW01.NB0EWFL5 == "Y") /* unique code flag*/
    if (NB0EW01.NB0EWSB1 == NB0EW01.NB0EWSB3) /* ** compare loc = map loc*/
       /* do nothing*/
    else
      if (NB0EM001.NB0EMCDE[NB0EWSB1] == NB0EM001.NB0EMCDE[NB0EWSB3])
        NB0EW01.NB0EWFL5 = "N";
        converseLib.validationFailed(46); /* ** this group already exists*/
        set NB0EM001.NB0EMCDE[NB0EWSB3] cursor, modified, bold;
        set NB0EM001.NB0EMCDE[NB0EWSB1] modified, bold;
      end
    end
    NB0EW01.NB0EWSB1 = NB0EW01.NB0EWSB1 + 1;
  end
  ;
         /* *****************************************/
         /* * search working storage for duplicate **/
         /* *****************************************/
  ;
   /* if element is unique search working storage for a duplicate*/
  ;
  NB0EW01.NB0EWSB1 = 1; /* ** location of compare field in w/s*/
  ;
  while (NB0EW01.NB0EWSB1 <= NB0EW01.NB0EWMAX
   && NB0EW01.NB0EWFL5 == "Y")
    if (NB0EW01.NB0EWSB1 == NB0EW01.NB0EWSB5) /* ** compare loc = w/s loc*/
       /* do nothing*/
    else
      if (NB0EW01.NB0EWCDE[NB0EWSB1] == NB0EM001.NB0EMCDE[NB0EWSB3])
        NB0EW01.NB0EWFL5 = "N";
        converseLib.validationFailed(46); /* ** group already exists*/
        set NB0EM001.NB0EMCDE[NB0EWSB3] cursor, modified, bold;
      end
    end
    NB0EW01.NB0EWSB1 = NB0EW01.NB0EWSB1 + 1;
  end
  ;
  ;
  ;
end // end NB0E640

// validate action field - add
Function NB0E650()
  ;
  ;
  if (NB0EM001.NB0EMACT[NB0EWSB3] == "A")
      /* ok - do nothing*/
  else
    if (NB0EM001.NB0EMACT[NB0EWSB3] == " ")
      NB0EM001.NB0EMACT[NB0EWSB3] = "A";
    else
      converseLib.validationFailed(10);
                                   /* only an action code of 'a' valid here*/
      set NB0EM001.NB0EMACT[NB0EWSB3] cursor, modified, bold;
    end
  end
  ;
  ;
  ;
end // end NB0E650

// change routine edits
Function NB0E680()
  ;
  ;
  NB0EW01.NB0EWFL4 = "Y"; /* valid date flag*/
  NB0EW01.NB0EWCHG = "N"; /* change requested flag*/
  ;
  if (NB0EM001.NB0EMCDE[NB0EWSB3] == NB0EW01.NB0EWCDE[NB0EWSB5]
   && NB0EM001.NB0EMPGM[NB0EWSB3] == NB0EW01.NB0EWPGM[NB0EWSB5]
   && NB0EM001.NB0EMABR[NB0EWSB3] == NB0EW01.NB0EWABR[NB0EWSB5]
   && NB0EM001.NB0EMDSC[NB0EWSB3] == NB0EW01.NB0EWDSC[NB0EWSB5])
       /* do nothing*/
  else
    NB0EW01.NB0EWCHG = "Y"; /* change requested flag*/
  end
  ;
  if (NB0EW01.NB0EWCHG == "N") /* change requested flag*/
    NB0E682(); /* ck end date for chg*/
    if (NB0EW01.NB0EWCHG == "N") /* change requested flag*/
      NB0E684(); /* ck start date for chg*/
    end
  end
  ;
  if (NB0EW01.NB0EWCHG == "Y") /* change requested flag*/
    NB0EW01.NB0EWFL1 = "Y"; /* data modified flag*/
    NB0EW01.NB0EWCHA[NB0EWSB3] = "M"; /* modified line indicator*/
  end
  ;
  if (NB0EW01.NB0EWCHG == "N" /* change requested flg*/
   && NB0EM001.NB0EMACT[NB0EWSB3] == "C")
    converseLib.validationFailed(36); /* no change has been entered*/
    set NB0EM001.NB0EMACT[NB0EWSB3] cursor, modified, bold;
  else
    if (NB0EW01.NB0EWCHG == "N" /* change requested flg*/
     && NB0EM001.NB0EMACT[NB0EWSB3] > " "
     && NB0EM001.NB0EMACT[NB0EWSB3] != "S")
      converseLib.validationFailed(55); /* invalid action code*/
      set NB0EM001.NB0EMACT[NB0EWSB3] cursor, modified, bold;
    end
  end
  ;
  if (NB0EW01.NB0EWCHG == "Y") /* CHANGE REQUESTED FLAG*/
    NB0EW01.NB0EWFL4 = "Y"; /* valid dates flag*/
    NB0E687(); /* format & validate end date*/
    NB0E688(); /* format & validate start date*/
    if (NB0EW01.NB0EWFL4 == "Y") /* valid dates flag*/
      if (NB0EW01.NB0EWCD2 < NB0EW01.NB0EWCD1) /* range compare*/
         /* no problem  -  do nothing*/
      else
        converseLib.validationFailed(6); /* invalid date range*/
        set NB0EM001.NB0EMSDT[NB0EWSB3] cursor, modified, bold;
        set NB0EM001.NB0EMEDT[NB0EWSB3] modified, bold;
      end
    end
    if (NB0EM001.NB0EMDSC[NB0EWSB3] > " ")
       /* do nothing*/
    else
      converseLib.validationFailed(48); /* each group must have a description*/
      set NB0EM001.NB0EMDSC[NB0EWSB3] cursor, modified, bold;
    end
    NB0E686(); /* validate action field - change*/
  end
  ;
  ;
  ;
  ;
end // end NB0E680

// ck end date for change
Function NB0E682()
  ;
  ;
   /* *************************************************************/
   /* * NB0eW01.NB0eWSB3 = location on the map of the current    **/
   /* *                    line being edited                     **/
   /* *************************************************************/
  ;
    /* check ending date for change*/
  ;
  if (NB0EM001.NB0EMEDT[NB0EWSB3] > " ")
    NBWREC.NBWDATE = NB0EM001.NB0EMEDT[NB0EWSB3];
    XPNB100(); /* put ending dte in mm-dd-yy format*/
    if (NBWREC.NBWNUMFL == "Y") /* numeric date*/
      NB0EM001.NB0EMEDT[NB0EWSB3] = NBWREC.NBWCH8;
      if (NBWREC.NBWNU8 == NB0EW01.NB0EWEDT[NB0EWSB5])
         /* do nothing  - no change in ending date*/
      else
        NB0EW01.NB0EWCHG = "Y"; /* change requested flag*/
      end
    else
      NB0EW01.NB0EWCHG = "Y"; /* change requested flag*/
    end
  else
    NB0EW01.NB0EWCHG = "Y"; /* change requested flag*/
  end
  ;
  ;
  ;
end // end NB0E682

// ck start date for change
Function NB0E684()
  ;
  ;
   /* *************************************************************/
   /* * NB0eW01.NB0eWSB3 = location on the map of the current    **/
   /* *                    line being edited                     **/
   /* *************************************************************/
  ;
    /* check start date for change*/
  ;
  if (NB0EM001.NB0EMSDT[NB0EWSB3] > " ")
    NBWREC.NBWDATE = NB0EM001.NB0EMSDT[NB0EWSB3];
    XPNB100(); /* put ending dte in mm-dd-yy format*/
    if (NBWREC.NBWNUMFL == "Y") /* numeric date*/
      NB0EM001.NB0EMSDT[NB0EWSB3] = NBWREC.NBWCH8;
      if (NBWREC.NBWNU8 == NB0EW01.NB0EWSDT[NB0EWSB5])
         /* do nothing  - no change in ending date*/
      else
        NB0EW01.NB0EWCHG = "Y"; /* change requested flag*/
      end
    else
      NB0EW01.NB0EWCHG = "Y"; /* change requested flag*/
    end
  else
    NB0EW01.NB0EWCHG = "Y"; /* change requested flag*/
  end
  ;
  ;
  ;
end // end NB0E684

// validate action field - change
Function NB0E686()
  ;
  ;
  if (NB0EM001.NB0EMACT[NB0EWSB3] == "C")
      /* ok - do nothing*/
  else
    if (NB0EM001.NB0EMACT[NB0EWSB3] == " ")
      NB0EM001.NB0EMACT[NB0EWSB3] = "C";
    else
      converseLib.validationFailed(54); /* only action code of 'c' valid here*/
      set NB0EM001.NB0EMACT[NB0EWSB3] cursor, modified, bold;
    end
  end
  ;
  ;
  ;
end // end NB0E686

// format/validate end date - chg
Function NB0E687()
  ;
  ;
   /* *************************************************************/
   /* * NB0eW01.NB0eWSB3 = location on the map of the current    **/
   /* *                    line being checked for blanks         **/
   /* *************************************************************/
  ;
    /* validate ending date*/
  ;
  if (NB0EM001.NB0EMEDT[NB0EWSB3] > " ")
    NBWREC.NBWDATE = NB0EM001.NB0EMEDT[NB0EWSB3];
    XPNB100(); /* put ending dte in mm-dd-yy format*/
    if (NBWREC.NBWNUMFL == "Y") /* numeric date*/
      NB0EM001.NB0EMEDT[NB0EWSB3] = NBWREC.NBWCH8;
      NB0E621(); /* validate date*/
      if (TA2REC.TA2RTNCD == 0) /* valid date*/
        NB0EW01.NB0EWCD1 = TA2REC.TA2GRGGN; /* for range compare*/
      else
        NB0EW01.NB0EWFL4 = "N"; /* valid dates flag*/
        converseLib.validationFailed(8); /* invalid date*/
        set NB0EM001.NB0EMEDT[NB0EWSB3] cursor, modified, bold;
      end
    else
      NB0EW01.NB0EWFL4 = "N"; /* valid dates flag*/
      converseLib.validationFailed(8); /* invalid date*/
      set NB0EM001.NB0EMEDT[NB0EWSB3] cursor, modified, bold;
    end
  else
    if (NB0EM001.NB0EMACT[NB0EWSB3] == " "
     || NB0EM001.NB0EMACT[NB0EWSB3] == "C")
  /* ****************Y2K OUT BEGIN*******************/
  /* **MOVE '12-31-99' TO NB0EM001.NB0EMEDT(NB0EWSB3);*/
  /* **MOVE 19991231 TO NB0EW01.NB0EWCD1;/* for range compare*/
  /* ****************Y2K OUT END*********************/
  /* ****************Y2K IN BEGIN********************/
      NB0EM001.NB0EMEDT[NB0EWSB3] = "12-31-43";
      NB0EW01.NB0EWCD1 = 20431231; /* for range compare*/
  /* ****************Y2K IN END**********************/
    else
      NB0EW01.NB0EWFL4 = "N"; /* valid dates flag*/
    end
  end
  ;
  if (NB0EW01.NB0EWFL4 == "Y") /* VALID DATE*/
    NB0E692(); /* make sure all members are <= chgd*/
                                   /* date*/
  end
  ;
  ;
end // end NB0E687

// format/validate start dte-chg
Function NB0E688()
  ;
  ;
   /* *************************************************************/
   /* * NB0eW01.NB0eWSB3 = location on the map of the current    **/
   /* *                    line being checked for blanks         **/
   /* *************************************************************/
  ;
    /* validate start date - change*/
  ;
  if (NB0EM001.NB0EMSDT[NB0EWSB3] > " ")
    NBWREC.NBWDATE = NB0EM001.NB0EMSDT[NB0EWSB3];
    XPNB100(); /* put start dte in mm-dd-yy format*/
    if (NBWREC.NBWNUMFL == "Y") /* numeric date*/
      NB0EM001.NB0EMSDT[NB0EWSB3] = NBWREC.NBWCH8;
      NB0E621(); /* validate date*/
      if (TA2REC.TA2RTNCD == 0) /* valid date*/
        NB0EW01.NB0EWCD2 = TA2REC.TA2GRGGN; /* for range compare*/
      else
        NB0EW01.NB0EWFL4 = "N"; /* valid dates flag*/
        converseLib.validationFailed(8); /* invalid date*/
        set NB0EM001.NB0EMSDT[NB0EWSB3] cursor, modified, bold;
      end
    else
      NB0EW01.NB0EWFL4 = "N"; /* valid dates flag*/
      converseLib.validationFailed(8); /* invalid date*/
      set NB0EM001.NB0EMSDT[NB0EWSB3] cursor, modified, bold;
    end
  else
    if (NB0EM001.NB0EMACT[NB0EWSB3] == " "
     || NB0EM001.NB0EMACT[NB0EWSB3] == "C")
      NB0EW01.NB0EWDT1 = VGVar.currentShortGregorianDate;
      NB0EW01.NB0EWD2Y = NB0EW01.NB0EWD1Y;
      NB0EW01.NB0EWD1 = "-"; /* dash-1*/
      NB0EW01.NB0EWD2M = NB0EW01.NB0EWD1M;
      NB0EW01.NB0EWD2 = "-"; /* dash-2*/
      NB0EW01.NB0EWD2D = NB0EW01.NB0EWD1D;
      NB0EM001.NB0EMSDT[NB0EWSB3] = NB0EW01.NB0EWDT2;
      NB0EW01.NB0EWCD2 = NB0EW01.NB0EWDT; /* for range compare*/
    else
      NB0EW01.NB0EWFL4 = "N"; /* valid dates flag*/
    end
  end
  ;
  ;
  ;
  ;
end // end NB0E688

// selection edit routine
Function NB0E690()
  ;
  ;
  NB0EW01.NB0EWSB3 = 13;
  ;
  NB0EW01.NB0EWFL6 = "N"; /* group code selected flag*/
  NB0EW01.NB0EWCNT = 0; /* group code selected counter*/
  ;
     /* data modified - ck for and error any 's'*/
  ;
  if (NB0EW01.NB0EWFL1 == "Y") /* data modified flag*/
    while (NB0EW01.NB0EWSB3 >= 1)
      if (NB0EM001.NB0EMACT[NB0EWSB3] == "S")
        converseLib.validationFailed(35); /* can not make selection & enter changes*/
        set NB0EM001.NB0EMACT[NB0EWSB3] cursor, modified, bold;
      end
      NB0EW01.NB0EWSB3 = NB0EW01.NB0EWSB3 - 1; /* subtract 1 from subscript*/
    end
  end
  ;
   /* data not modified - ck and count number of 's'*/
  ;
  if (NB0EW01.NB0EWFL1 == "N") /* data modified flag*/
    while (NB0EW01.NB0EWSB3 >= 1)
      if (NB0EM001.NB0EMACT[NB0EWSB3] == "S")
        NB0EW01.NB0EWCNT = NB0EW01.NB0EWCNT + 1; /* add 1 to selection cnt*/
      end
      NB0EW01.NB0EWSB3 = NB0EW01.NB0EWSB3 - 1; /* subtract 1 from subscript*/
    end
  end
  ;
    /* more than one 's' highlight and error all*/
  ;
  if (NB0EW01.NB0EWCNT > 1) /* selection count*/
    NB0EW01.NB0EWSB3 = 13;
    while (NB0EW01.NB0EWSB3 >= 1)
      if (NB0EM001.NB0EMACT[NB0EWSB3] == "S")
        converseLib.validationFailed(45); /* only one select at a time*/
        set NB0EM001.NB0EMACT[NB0EWSB3] cursor, modified, bold;
      end
      NB0EW01.NB0EWSB3 = NB0EW01.NB0EWSB3 - 1; /* subtract 1 from subscript*/
    end
  end
  ;
    /* only one 's' - find and set pointer (nb0ewcnt)*/
  ;
  if (NB0EW01.NB0EWCNT == 1) /* selection count*/
    NB0EW01.NB0EWSB3 = 13;
    while (NB0EW01.NB0EWSB3 >= 1)
      if (NB0EM001.NB0EMACT[NB0EWSB3] == "S")
        NB0EW01.NB0EWCNT = NB0EW01.NB0EWSB3;
        NB0EW01.NB0EWFL6 = "Y";
      end
      NB0EW01.NB0EWSB3 = NB0EW01.NB0EWSB3 - 1; /* subtract 1 from subscript*/
    end
  end
  ;
  ;
  ;
  ;
end // end NB0E690

// end dt: check members
Function NB0E692()
  ;
  NB6REC.NB5PNTCO = NB0EM001.NB0EMCO;
  NB6REC.NB1GRPCD = NB0EM001.NB0EMCDE[NB0EWSB3];
  NB6REC.XDVCD = "01";
  NB6REC.XBCCD = NB0EM001.XBCCD;
  ;
  call "IO2230" ("S1", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes};
  TA1REC.TA1LOCAT[1] = "S1";
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* a good return - record found*/
    NB0E693(); /* fetch next*/
    if (SQLCA.VAGen_SQLCODE == +0) /* a good return - record found*/
      while (SQLCA.VAGen_SQLCODE == +0 /* record found*/
       && NB0EW01.NB0EWFL4 == "Y") /* valid date*/
        NB0E693(); /* continue to get nb6rec's*/
      end
    end
    ;
    call "IO2230" ("C1", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes}; /* close set*/
    TA1REC.TA1LOCAT[1] = "C1";
  end
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0
   || SQLCA.VAGen_SQLCODE == +100)
     /* every thing is fine....*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
    else
      set TA1REC empty;
      set ERRSQLCA empty;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0E";
      TA1REC.TA1LOCAT[2] = "NB0E692";
      TA1REC.TA1LOCAT[3] = "IO2230 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1LOCAT[4] = "NB0EM001";
      TA1REC.TA1DBASE = "DNBANK.";
      TA1REC.TA1TBLVU = "VBGMEM01";
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end
end // end NB0E692

// end dt: fetch members
Function NB0E693()
  ;
  call "IO2230" ("N1", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* a good return - record found*/
    if (NB0EW01.NB0EWCD1 >= NB6REC.NB6GMXDT)
    /* next sentence*/
    else
      NB0EW01.NB0EWFL4 = "N"; /* VALID DATES FLAG*/
      converseLib.validationFailed(98); /* group end date must be equal to or*/
                                   /* greater than its corresp. members*/
      set NB0EM001.NB0EMEDT[NB0EWSB3] cursor, modified, bold;
    end
  end
  ;
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0
   || SQLCA.VAGen_SQLCODE == +100)
     /* every thing is fine....*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
    else
      set TA1REC empty;
      set ERRSQLCA empty;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0E";
      TA1REC.TA1LOCAT[1] = "N1";
      TA1REC.TA1LOCAT[2] = "NB0E693";
      TA1REC.TA1LOCAT[3] = "IO2230 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1LOCAT[4] = "NB0EM001";
      TA1REC.TA1DBASE = "DNBANK.";
      TA1REC.TA1TBLVU = "VBGMEM01";
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end
end // end NB0E693

// highlite modified lines
Function NB0E699()
  ;
  ;
  NB0EW01.NB0EWSB1 = 1;
  ;
  while (NB0EW01.NB0EWSB1 <= 13)
    if (NB0EW01.NB0EWCHA[NB0EWSB1] == "M")
      set NB0EM001.NB0EMACT[NB0EWSB1] modified, bold;
      set NB0EM001.NB0EMCDE[NB0EWSB1] modified, bold;
      set NB0EM001.NB0EMPGM[NB0EWSB1] modified, bold;
      set NB0EM001.NB0EMDSC[NB0EWSB1] modified, bold;
      set NB0EM001.NB0EMABR[NB0EWSB1] modified, bold;
      set NB0EM001.NB0EMSDT[NB0EWSB1] modified, bold;
      set NB0EM001.NB0EMEDT[NB0EWSB1] modified, bold;
      set NB0EM001.ZZZSDT[NB0EWSB1] modified, bold;
    end
    ;
    NB0EW01.NB0EWSB1 = NB0EW01.NB0EWSB1 + 1;
  end
  ;
  ;
  ;
end // end NB0E699

// update database
Function NB0E700()
  ;
  ;
         /* ************************************/
         /* *        update data base         **/
         /* ************************************/
   /* ************************************************************/
   /* MAINTENANCE SECTION*/
   /* DATE    USERID  COMMENTS*/
   /* 011597  CTRAN   CHANGED NB0E201.NB0ELMAX FROM 100 TO 400*/
   /*  */
   /* ************************************************************/
   /* *************************************************************/
   /* * NB0EW01.NB0EWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0EW01.NB0EWSB3 = location on the map of the current    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0EW01.NB0EWSB5 = location in working storage of the    **/
   /* *                    current line being loaded/edited/updt **/
   /* * NB0EW01.NB0EWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
       /* get current time*/
  ;
  NB0EW01.NB0EWT1 = VGVar.currentFormattedTime;
  NB0EW01.NB0EWTHH = NB0EW01.NB0EWTHR;
  NB0EW01.NB0EWTMN = NB0EW01.NB0EWTMI;
  ;
  NB0EW01.NB0EWSB3 = 1;
  NB0EW01.NB0EWSB5 = NB0EW01.NB0EWTOP;
  ;
  while (NB0EW01.NB0EWSB3 <= 13
   && converseVar.validationMsgNum == 0)
    if (NB0EM001.NB0EMACT[NB0EWSB3] == "A")
      if (NB0EW01.NB0EWMAX < 400)
        NB0E710(); /* add to the data base*/
      else
        converseLib.validationFailed(28); /* limits of table exceeded*/
        set NB0EM001.NB0EMCO cursor;
      end
    else
      if (NB0EM001.NB0EMACT[NB0EWSB3] == "C")
        NB0E750(); /* change the data base*/
      end
    end
    NB0EW01.NB0EWSB3 = NB0EW01.NB0EWSB3 + 1;
    NB0EW01.NB0EWSB5 = NB0EW01.NB0EWSB5 + 1;
  end
  ;
  ;
  ;
end // end NB0E700

// add to database
Function NB0E710()
  ;
  ;
         /* ************************************/
         /* *       add to data base          **/
         /* ************************************/
  ;
   /* *************************************************************/
   /* * NB0EW01.NB0EWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0EW01.NB0EWSB3 = location on the map of the current    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0EW01.NB0EWSB5 = location in working storage of the    **/
   /* *                    current line being loaded             **/
   /* * NB0EW01.NB0EWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
  ;
  set NB5REC empty;
  set TA1REC empty;
  ;
  NB5REC.NB5PNTCO = NB0EM001.NB0EMCO;
  NB5REC.XBCCD = NB0EM001.XBCCD; /* brand*/
  NB5REC.NB1GRPCD = NB0EM001.NB0EMCDE[NB0EWSB3];
  ;
  call "IO2220" ("S ", SQLCA, NB5REC) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +100) /* not eq 'not found'*/
      /* do nothing*/
  else
    if (SQLCA.VAGen_SQLCODE == +0)
                                   /* found condition - not unique - error*/
      converseLib.validationFailed(46); /* group alread exists for company*/
      set NB0EM001.NB0EMCDE[NB0EWSB3] cursor, modified, bold;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
      else
        TA1REC.TA1LOCAT[1] = "S ";
        NB0E715(); /* error handling*/
      end
    end
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +100) /* not found - ok to add*/
    set NB5REC empty;
    ;
    NB5REC.NB5PNTCO = NB0EM001.NB0EMCO;
    NB5REC.NB1GRPCD = NB0EM001.NB0EMCDE[NB0EWSB3];
    NB5REC.XDVCD = "01"; /* division*/
    NB5REC.XBCCD = NB0EM001.XBCCD; /* brand*/
    NB5REC.YADCD = NB0EM001.NB0EMPGM[NB0EWSB3];
    NB5REC.NB5GPDSC = NB0EM001.NB0EMDSC[NB0EWSB3];
    NB5REC.NB5GPABR = NB0EM001.NB0EMABR[NB0EWSB3];
    ;
    NB0E711(); /* load time and dates*/
    ;
    call "IO2220" ("A ", SQLCA, NB5REC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE == +0)
       /* do nothing*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
      else
        TA1REC.TA1LOCAT[1] = "A ";
        NB0E715(); /* error handling*/
      end
    end
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    NB0E720(); /* add NB1REC*/
    ;
    if (SQLCA.VAGen_SQLCODE == +0)
       /* do nothing*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
      else
        TA1REC.TA1LOCAT[1] = "A ";
        NB0E725(); /* error handling*/
      end
    end
  end
  if (SQLCA.VAGen_SQLCODE == +0)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    NB0E730(); /* update w/s & screen*/
  end
  ;
  ;
  ;
  ;
end // end NB0E710

// load time and dates
Function NB0E711()
  ;
  ;
   /* *************************************************************/
   /* * NB0EW01.NB0EWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0EW01.NB0EWSB3 = LOCATION ON THE MAP OF THE CURRENT    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0EW01.NB0EWSB5 = LOCATION IN WORKING STORAGE OF THE    **/
   /* *                    current line being loaded             **/
   /* * NB0EW01.NB0EWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
        /* ******************************/
        /* *     data base add         **/
        /* ******************************/
  ;
  NB5REC.ZZZCHGTM = 0; /* change time set to 0*/
  NB5REC.ZZZCHGDT = 0; /* change date set to 0*/
  ;
  NB5REC.ZZZSDT = NB0EW01.NB0EWDT; /* current dte to setup date*/
  NB0EM001.ZZZSDT[NB0EWSB3] = NB0EW01.NB0EWDT; /* set-up dte to map*/
  ;
   /* move map 'start date' to record*/
  ;
  NBWREC.NBWDATE = NB0EM001.NB0EMSDT[NB0EWSB3];
  XPNB100();
  NB5REC.NB5GPEDT = NBWREC.NBWNU8; /* starting / effective date*/
  ;
   /* move map 'end date' to record*/
  ;
  NBWREC.NBWDATE = NB0EM001.NB0EMEDT[NB0EWSB3];
  XPNB100();
  NB5REC.NB5GPXDT = NBWREC.NBWNU8; /* ending date*/
  ;
  ;
  ;
end // end NB0E711

// error handling
Function NB0E715()
  ;
  ;
  set ERRSQLCA empty;
  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1FUNC = "ADD";
  TA1REC.TA1PGMNM = "NB0E";
  TA1REC.TA1LOCAT[2] = "NB0E710";
  TA1REC.TA1LOCAT[3] = "IO2220";
  TA1REC.TA1LOCAT[4] = "NB0E020";
  TA1REC.TA1DBASE = "DNBANK";
  TA1REC.TA1TBLVU = "VBCGRP01";
  TA1REC.TA1TBLKE = NB0EW01.NB0EWCKX;
  move SQLCA to ERRSQLCA withV60Compat;
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.rollback();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
  
  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
  XSPF4();
  VAGen_EZEMSG = COMMAREA.CAMSG;
  ;
  ;
  ;
end // end NB0E715

// add nb1rec to database
Function NB0E720()
  ;
  ;
   /* *************************************************************/
   /* * NB0EW01.NB0EWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0EW01.NB0EWSB3 = LOCATION ON THE MAP OF THE CURRENT    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0EW01.NB0EWSB5 = LOCATION IN WORKING STORAGE OF THE    **/
   /* *                    current line being loaded             **/
   /* * NB0EW01.NB0EWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
  ;
  set NB1REC empty;
  ;
  NB1REC.NB1CUST = NB0EM001.NB0EMCO;
  NB1REC.XDVCD = "01"; /* division*/
  NB1REC.XBCCD = NB0EM001.XBCCD; /* brand*/
  NB1REC.KUMSTRID = 0;
  NB1REC.XNXCD = 0;
  NB1REC.NB1GRPCD = NB0EM001.NB0EMCDE[NB0EWSB3];
  ;
  call "IO2210" ("S ", SQLCA, NB1REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == +0
   || SQLCA.VAGen_SQLCODE == +100)
     /* do nothing*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
    else
      TA1REC.TA1LOCAT[1] = "S ";
      NB0E725(); /* error handling*/
    end
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +100) /* not found condition*/
    ;
    set NB1REC empty;
    ;
    NB1REC.NB1CUST = NB0EM001.NB0EMCO;
    NB1REC.XDVCD = "01"; /* division*/
    NB1REC.XBCCD = NB0EM001.XBCCD; /* brand*/
    NB1REC.KUMSTRID = 0;
    NB1REC.XNXCD = 0;
    NB1REC.NB1GRPCD = NB0EM001.NB0EMCDE[NB0EWSB3];
    NB1REC.NB1BTYPE = "AA";
    NB1REC.NB1CMBFL = "N";
    NB1REC.NB1PAYFL = "Y"; /* pay promo inv from bank $$*/
    ;
    NB1REC.NB1CPFL = "Y"; /* cust statment display flags*/
    NB1REC.NB1FCFL = "N";
    NB1REC.NB1AAFL = "N";
    NB1REC.NB1TDFL = "N";
    ;
    NB1REC.NB1SFREQ = "MO"; /* srep.statement freq.*/
    NB1REC.NB1CFREQ = "QT"; /* cust.statement freq.*/
    ;
    NB1REC.ZZZSDT = NB0EW01.NB0EWDT; /* current date to set-up dte*/
    NB1REC.ZZZCHGDT = 0;
    NB1REC.ZZZCHGTM = 0;
    ;
    ;
    call "IO2210" ("A ", SQLCA, NB1REC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE == +0)
       /* do nothing*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
      else
        TA1REC.TA1LOCAT[1] = "A ";
        NB0E725(); /* error handling*/
      end
    end
  end
  ;
  ;
  ;
end // end NB0E720

// error handling
Function NB0E725()
  ;
  ;
  set ERRSQLCA empty;
  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1FUNC = "ADD";
  TA1REC.TA1PGMNM = "NB0E";
  TA1REC.TA1LOCAT[2] = "NB0E720";
  TA1REC.TA1LOCAT[3] = "IO2210";
  TA1REC.TA1LOCAT[4] = "NB0E020";
  TA1REC.TA1DBASE = "DNBANK";
  TA1REC.TA1TBLVU = "VBCUST01";
  TA1REC.TA1TBLKE = NB0EW01.NB0EWCKX;
  move SQLCA to ERRSQLCA withV60Compat;
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.rollback();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
  
  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
  XSPF4();
  VAGen_EZEMSG = COMMAREA.CAMSG;
  ;
  ;
  ;
end // end NB0E725

// 'add' update w/s and screen
Function NB0E730()
  ;
  ;
   /* *************************************************************/
   /* * NB0EW01.NB0EWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0EW01.NB0EWSB3 = location on the map of the current    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0EW01.NB0EWSB5 = location in working storage of the    **/
   /* *                    current line being loaded/edited/updte**/
   /* * NB0EW01.NB0EWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
   /* move map fields to working storage*/
  ;
  NB0EW01.NB0EWCDE[NB0EWSB5] = NB0EM001.NB0EMCDE[NB0EWSB3];
  NB0EW01.NB0EWPGM[NB0EWSB5] = NB0EM001.NB0EMPGM[NB0EWSB3];
  NB0EW01.NB0EWDSC[NB0EWSB5] = NB0EM001.NB0EMDSC[NB0EWSB3];
  NB0EW01.NB0EWABR[NB0EWSB5] = NB0EM001.NB0EMABR[NB0EWSB3];
  NB0EW01.ZZZSDT[NB0EWSB5] = NB0EM001.ZZZSDT[NB0EWSB3];
  ;
     /* move start date to working storage*/
  ;
  NBWREC.NBWDATE = NB0EM001.NB0EMSDT[NB0EWSB3];
  XPNB100();
  NB0EW01.NB0EWSDT[NB0EWSB5] = NBWREC.NBWNU8;
  ;
     /* move ending date to working storage*/
  ;
  NBWREC.NBWDATE = NB0EM001.NB0EMEDT[NB0EWSB3];
  XPNB100();
  NB0EW01.NB0EWEDT[NB0EWSB5] = NBWREC.NBWNU8;
  ;
     /* update screen fields and attributes*/
  ;
  NB0EM001.NB0EMACT[NB0EWSB3] = " "; /* space out the action code*/
  set NB0EM001.NB0EMCDE[NB0EWSB3] protect;
  set NB0EM001.NB0EMPGM[NB0EWSB3] protect;
  set NB0EM001.ZZZSDT[NB0EWSB3] initialAttributes;
  ;
  NB0EW01.NB0EWMAX = NB0EW01.NB0EWMAX + 1; /* increase the array size*/
  ;
  NB0EW01.ZZZCHGCT[NB0EWSB5] = 0; /* setting the change count*/
  ;
  ;
  ;
end // end NB0E730

// change database
Function NB0E750()
  ;
  ;
         /* ************************************/
         /* *       change the database       **/
         /* ************************************/
  ;
   /* *************************************************************/
   /* * NB0EW01.NB0EWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0EW01.NB0EWSB3 = location on the map of the current    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0EW01.NB0EWSB5 = location in working storage of the    **/
   /* *                    current line being loaded             **/
   /* * NB0EW01.NB0EWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
  ;
  set NB5REC empty;
  set TA1REC empty;
  ;
  NB5REC.NB5PNTCO = NB0EM001.NB0EMCO;
  NB5REC.XBCCD = NB0EM001.XBCCD; /* brand*/
  NB5REC.XDVCD = "01"; /* division*/
  NB5REC.NB1GRPCD = NB0EM001.NB0EMCDE[NB0EWSB3];
  ;
  call "IO2220" ("S ", SQLCA, NB5REC) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* good return - record found*/
      /* do nothing*/
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* not found condition*/
      converseLib.validationFailed(37); /* record deleted prior to change*/
      set NB0EM001.NB0EMCDE[NB0EWSB3] cursor, modified, bold;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
      else
        TA1REC.TA1LOCAT[1] = "S ";
        NB0E755(); /* error handling*/
      end
    end
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* record found*/
    if (NB0EW01.ZZZCHGCT[NB0EWSB5] != NB5REC.ZZZCHGCT)
      converseLib.validationFailed(17); /* database updated since last display*/
      set NB0EM001.NB0EMCDE[NB0EWSB3] cursor, modified, bold;
      NB0E760(); /* reload screen & w/s from database*/
    else
      NB5REC.YADCD = NB0EM001.NB0EMPGM[NB0EWSB3];
      NB5REC.NB5GPDSC = NB0EM001.NB0EMDSC[NB0EWSB3];
      NB5REC.NB5GPABR = NB0EM001.NB0EMABR[NB0EWSB3];
      NB0E765(); /* load dates and time*/
      ;
      call "IO2220" ("U ", SQLCA, NB5REC) {isNoRefresh = yes, isExternal = yes};
      ;
      if (SQLCA.VAGen_SQLCODE == +0)
         /* do nothing*/
      else
        if (SQLCA.VAGen_SQLCODE == -911)
          converseLib.validationFailed(16); /* database in use - try again later*/
        else
          TA1REC.TA1LOCAT[1] = "U ";
          NB0E755(); /* error handling*/
        end
      end
    end
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    if (NB0EW01.NB0EWFL7 == "Y") /* ending date changed flag*/
      NB0E767(); /* update nb6rec*/
    end
    if (SQLCA.VAGen_SQLCODE == +0)
       /* do nothing*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
      else
        TA1REC.TA1LOCAT[1] = "A ";
        NB0E757(); /* error handling*/
      end
    end
  end
  if (SQLCA.VAGen_SQLCODE == +0)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    NB0E770(); /* update w/s & screen*/
  end
  ;
  ;
  ;
end // end NB0E750

// error handling - nb0e750
Function NB0E755()
  ;
  ;
  set ERRSQLCA empty;
  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1FUNC = "RTN";
  TA1REC.TA1PGMNM = "NB0E";
  TA1REC.TA1LOCAT[2] = "NB0E755";
  TA1REC.TA1LOCAT[3] = "IO2220";
  TA1REC.TA1LOCAT[4] = "NB0E020";
  TA1REC.TA1DBASE = "DNBANK";
  TA1REC.TA1TBLVU = "VBCGRP01";
  move SQLCA to ERRSQLCA withV60Compat;
  TA1REC.TA1TBLKE = NB0EW01.NB0EWCKX;
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.rollback();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
  
  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
  XSPF4();
  VAGen_EZEMSG = COMMAREA.CAMSG;
  ;
  ;
  ;
end // end NB0E755

// error handling - nb0e750
Function NB0E757()
  ;
  ;
  set ERRSQLCA empty;
  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1FUNC = "RTN";
  TA1REC.TA1PGMNM = "NB0E";
  TA1REC.TA1LOCAT[1] = "U ";
  TA1REC.TA1LOCAT[2] = "NB0E750";
  TA1REC.TA1LOCAT[3] = "IO2230";
  TA1REC.TA1LOCAT[4] = "NB0E020";
  TA1REC.TA1DBASE = "DNBANK";
  TA1REC.TA1TBLVU = "VBGMEM01";
  move SQLCA to ERRSQLCA withV60Compat;
  TA1REC.TA1TBLKE = NB0EW01.NB0EWCKX;
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.rollback();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
  
  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
  XSPF4();
  VAGen_EZEMSG = COMMAREA.CAMSG;
  ;
  ;
  ;
end // end NB0E757

// reload screen & w/s from db
Function NB0E760()
  ;
  ;
   /* *************************************************************/
   /* * NB0EW01.NB0EWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0EW01.NB0EWSB3 = location on the map of the current    **/
   /* *                    line being loaded                     **/
   /* * NB0EW01.NB0EWSB5 = location in working storage of the    **/
   /* *                    current line being loaded             **/
   /* * NB0EW01.NB0EWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
      /* load w/s from database*/
  ;
  NB0EW01.NB0EWCDE[NB0EWSB5] = NB5REC.NB1GRPCD;
  NB0EW01.NB0EWPGM[NB0EWSB5] = NB5REC.YADCD;
  NB0EW01.NB0EWDSC[NB0EWSB5] = NB5REC.NB5GPDSC;
  NB0EW01.NB0EWABR[NB0EWSB5] = NB5REC.NB5GPABR;
  NB0EW01.NB0EWSDT[NB0EWSB5] = NB5REC.NB5GPEDT;
  NB0EW01.NB0EWEDT[NB0EWSB5] = NB5REC.NB5GPXDT;
  NB0EW01.ZZZSDT[NB0EWSB5] = NB5REC.ZZZSDT;
  NB0EW01.ZZZCHGCT[NB0EWSB5] = NB5REC.ZZZCHGCT;
  ;
     /* load map*/
  ;
  NB0EM001.NB0EMACT[NB0EWSB3] = " ";
  NB0EM001.NB0EMCDE[NB0EWSB3] = NB0EW01.NB0EWCDE[NB0EWSB5];
  set NB0EM001.NB0EMCDE[NB0EWSB3] protect, modified, bold;
  NB0EM001.NB0EMPGM[NB0EWSB3] = NB0EW01.NB0EWPGM[NB0EWSB5];
  set NB0EM001.NB0EMPGM[NB0EWSB3] protect, modified, bold;
  NB0EM001.NB0EMDSC[NB0EWSB3] = NB0EW01.NB0EWDSC[NB0EWSB5];
  NB0EM001.NB0EMABR[NB0EWSB3] = NB0EW01.NB0EWABR[NB0EWSB5];
  ;
  NBWREC.NBWNU8 = NB0EW01.NB0EWSDT[NB0EWSB5];
  XPNB200();
  NB0EM001.NB0EMSDT = NBWREC.NBWCH8;
  ;
  NBWREC.NBWNU8 = NB0EW01.NB0EWEDT[NB0EWSB5];
  XPNB200();
  NB0EM001.NB0EMEDT = NBWREC.NBWCH8;
  ;
  NB0EM001.ZZZSDT[NB0EWSB3] = NB0EW01.ZZZSDT[NB0EWSB5];
  ;
  ;
  ;
  ;
end // end NB0E760

// load dates & time (change)
Function NB0E765()
  ;
  ;
   /* *************************************************************/
   /* * NB0EW01.NB0EWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0EW01.NB0EWSB3 = LOCATION ON THE MAP OF THE CURRENT    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0EW01.NB0EWSB5 = LOCATION IN WORKING STORAGE OF THE    **/
   /* *                    current line being loaded             **/
   /* * NB0EW01.NB0EWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
  NB5REC.ZZZCHGTM = NB0EW01.NB0EWT2; /* current time to chg time*/
  ;
  NB5REC.ZZZCHGDT = NB0EW01.NB0EWDT; /* current date to change date*/
  ;
   /* move map 'start date' to record*/
  ;
  NBWREC.NBWDATE = NB0EM001.NB0EMSDT[NB0EWSB3];
  XPNB100();
  NB5REC.NB5GPEDT = NBWREC.NBWNU8; /* starting / effective date*/
  ;
   /* move map 'end date' to record*/
  ;
  NBWREC.NBWDATE = NB0EM001.NB0EMEDT[NB0EWSB3];
  XPNB100();
  NB5REC.NB5GPXDT = NBWREC.NBWNU8; /* ending date*/
  ;
  if (NB5REC.NB5GPXDT == NB0EW01.NB0EWEDT[NB0EWSB5])
                                   /* ending date not chged*/
    NB0EW01.NB0EWFL7 = "N"; /* ending date chged flag*/
  else
    NB0EW01.NB0EWFL7 = "Y"; /* ending date chged flag*/
  end
  ;
  ;
  ;
end // end NB0E765

// select set nb6rec
Function NB0E767()
  ;
  ;
   /* *************************************************************/
   /* * NB0EW01.NB0EWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0EW01.NB0EWSB3 = location on the map of the current    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0EW01.NB0EWSB5 = location in working storage of the    **/
   /* *                    current line being loaded             **/
   /* * NB0EW01.NB0EWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
         /* ************************************/
         /* *       change the database       **/
         /* ************************************/
  ;
  ;
  set NB6REC empty;
  set TA1REC empty;
  set ERRSQLCA empty;
  ;
  NB6REC.NB5PNTCO = NB0EM001.NB0EMCO;
  NB6REC.XBCCD = NB0EM001.XBCCD; /* brand*/
  NB6REC.NB1GRPCD = NB0EM001.NB0EMCDE[NB0EWSB3];
  ;
  call "IO2230" ("S1", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* a good return - record found*/
    NB0E769(); /* get first nb6rec*/
    if (SQLCA.VAGen_SQLCODE == +0) /* record found*/
      while (SQLCA.VAGen_SQLCODE == +0)
        NB0E769(); /* get next nb6rec*/
      end
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* not found condition*/
         /* do nothing - no records to update*/
      end
    end
    call "IO2230" ("C1", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes}; /* close set*/
    if (SQLCA.VAGen_SQLCODE != +0) /* could not close....*/
      TA1REC.TA1LOCAT[1] = "C1";
      TA1REC.TA1LOCAT[2] = "NB0E767";
    end
  else
    TA1REC.TA1LOCAT[1] = "S1";
    TA1REC.TA1LOCAT[2] = "NB0E767";
  end
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0
   || SQLCA.VAGen_SQLCODE == +100)
     /* every thing is fine....*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
    else
      TA1REC.TA1LOCAT[1] = "S ";
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0E";
      TA1REC.TA1LOCAT[2] = "NB0E767";
      TA1REC.TA1LOCAT[3] = "IO2230";
      TA1REC.TA1LOCAT[4] = "NB0E010";
      TA1REC.TA1DBASE = "DNBANK";
      TA1REC.TA1TBLVU = "VBGMEM01";
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end
  ;
  ;
  ;
end // end NB0E767

// select next nb6rec & update
Function NB0E769()
  ;
  ;
   /* *************************************************************/
   /* * NB0EW01.NB0EWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0EW01.NB0EWSB3 = location on the map of the current    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0EW01.NB0EWSB5 = location in working storage of the    **/
   /* *                    current line being loaded             **/
   /* * NB0EW01.NB0EWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
         /* ************************************/
         /* *       change the database       **/
         /* ************************************/
  ;
  ;
  ;
  call "IO2230" ("N1", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* a good return - record found*/
    if (NB6REC.NB6GMXDT <= NB5REC.NB5GPXDT)
       /* do nothing - no changes need to be made*/
    else
      NB0E775(); /* update nb6rec*/
    end
  end
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0
   || SQLCA.VAGen_SQLCODE == +100)
     /* every thing is fine....*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
    else
      TA1REC.TA1LOCAT[1] = "S ";
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0E";
      TA1REC.TA1LOCAT[2] = "NB0E760";
      TA1REC.TA1LOCAT[3] = "IO2230";
      TA1REC.TA1LOCAT[4] = "NB0E020";
      TA1REC.TA1DBASE = "DNBANK";
      TA1REC.TA1TBLVU = "VBGMEM01";
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end
  ;
  ;
  ;
end // end NB0E769

// update working storage/screen
Function NB0E770()
  ;
  ;
   /* *************************************************************/
   /* * NB0EW01.NB0EWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0EW01.NB0EWSB3 = location on the map of the current    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0EW01.NB0EWSB5 = location in working storage of the    **/
   /* *                    current line being loaded/edited/updte**/
   /* * NB0EW01.NB0EWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
   /* move map fields to working storage*/
  ;
  NB0EW01.NB0EWCDE[NB0EWSB5] = NB0EM001.NB0EMCDE[NB0EWSB3];
  NB0EW01.NB0EWPGM[NB0EWSB5] = NB0EM001.NB0EMPGM[NB0EWSB3];
  NB0EW01.NB0EWDSC[NB0EWSB5] = NB0EM001.NB0EMDSC[NB0EWSB3];
  NB0EW01.NB0EWABR[NB0EWSB5] = NB0EM001.NB0EMABR[NB0EWSB3];
  NB0EW01.ZZZSDT[NB0EWSB5] = NB0EM001.ZZZSDT[NB0EWSB3];
  ;
     /* move start date to working storage*/
  ;
  NBWREC.NBWDATE = NB0EM001.NB0EMSDT[NB0EWSB3];
  XPNB100();
  NB0EW01.NB0EWSDT[NB0EWSB5] = NBWREC.NBWNU8;
  ;
     /* move ending date to working storage*/
  ;
  NBWREC.NBWDATE = NB0EM001.NB0EMEDT[NB0EWSB3];
  XPNB100();
  NB0EW01.NB0EWEDT[NB0EWSB5] = NBWREC.NBWNU8;
  ;
     /* update screen fields and attributes*/
  ;
  NB0EM001.NB0EMACT[NB0EWSB3] = " "; /* space out the action code*/
  set NB0EM001.NB0EMACT[NB0EWSB3] initialAttributes;
  set NB0EM001.ZZZSDT[NB0EWSB3] initialAttributes;
  ;
  NB0EW01.ZZZCHGCT[NB0EWSB5] = NB0EW01.ZZZCHGCT[NB0EWSB5] + 1;
  ;
  ;
  ;
end // end NB0E770

// update nb6rec
Function NB0E775()
  ;
  ;
  NB6REC.ZZZCHGDT = NB0EW01.NB0EWDT; /* current date to record*/
  NB6REC.ZZZCHGTM = NB0EW01.NB0EWT2; /* current time to record*/
  ;
  NBWREC.NBWDATE = NB0EM001.NB0EMEDT[NB0EWSB3];
  XPNB100();
  NB6REC.NB6GMXDT = NBWREC.NBWNU8;
  ;
  call "IO2230" ("U ", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    /* do nothing*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
    else
      set ERRSQLCA empty;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RTN";
      TA1REC.TA1PGMNM = "NB0E";
      TA1REC.TA1LOCAT[1] = "U ";
      TA1REC.TA1LOCAT[2] = "NB0E770";
      TA1REC.TA1LOCAT[3] = "IO2230";
      TA1REC.TA1LOCAT[4] = "NB0E020";
      TA1REC.TA1DBASE = "DNBANK";
      TA1REC.TA1TBLVU = "VBGMEM01";
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end
  ;
  ;
  ;
  ;
end // end NB0E775

// scrolling process
Function NB0E800()
         /* ************************************/
         /* *      scrolling process          **/
         /* ************************************/
  ;
  ;
   /* *************************************************************/
   /* * NB0eW01.NB0eWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0eW01.NB0eWnum = w/s field used to compute new top     **/
   /* *                    of screen for scroll froward          **/
   /* * NB0eW01.NB0eWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
  ;
  if (converseVar.eventKey is pf7)
    if (NB0EW01.NB0EWTOP == 1)
      converseLib.validationFailed(20); /* no more back scrolling possible*/
    else
      if (NB0EW01.NB0EWTOP <= 13)
        NB0EW01.NB0EWTOP = 1; /* set top of screen to 1*/
        NB0EW01.NB0EWFL2 = "Y"; /* scrolling requested*/
      else
        NB0EW01.NB0EWTOP = NB0EW01.NB0EWTOP - 13;
        NB0EW01.NB0EWFL2 = "Y"; /* scrolling requested*/
      end
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf8)
    NB0EW01.NB0EWNUM = 12;
    NB0EW01.NB0EWNUM = NB0EW01.NB0EWNUM + NB0EW01.NB0EWTOP;
    if (NB0EW01.NB0EWNUM <= NB0EW01.NB0EWMAX)
      NB0EW01.NB0EWTOP = NB0EW01.NB0EWTOP + 13;
      NB0EW01.NB0EWFL2 = "Y"; /* scrolling requested*/
    else
      converseLib.validationFailed(21); /* no forward scrolling*/
    end
     /* END ;*/
  end
  ;
  ;
  ;
end // end NB0E800

// transfer process (nb0f)
Function NB0E900()
  ;
  ;
  NB0EW01.NB0EWECO = NB0EM001.NB0EMCO;
  NB0EW01.NB0EWEBC = NB0EM001.XBCCD; /* brand*/
  NB0EW01.NB0EWEST = 0;
  NB0EW01.NB0EWEDP = 0;
  NB0EW01.NB0EWEGP = NB0EM001.NB0EMCDE[NB0EWCNT];
  COMMAREA.CAITEM = NB0EW01.NB0EWEKE;
  COMMAREA.CATOAP = "NB0F";
  COMMAREA.CAFROMAP = "NB0E";
  XSEXIT();
  ;
  ;
  ;
end // end NB0E900

//*** RECORD=NB0EW01 ****
// ************************************************************
// *** CREATED: 10-20-87                 BY: d.harrison     ***
// ***                                                      ***
// *** USED BY: NB0G                                        ***
// *** PURPOSE: a working storage area for this application.***
// * 10/27/93 lgross Reduced the size of NB0EWECO TO 7 AND  ***
//                   NB0EWEDP TO 2.  Added NB0EWECC, NB0EWESC
//                   and NB0EWEDC.
// ************************************************************
// ***********************
Record NB0EW01 type basicRecord
  10 NB0EWFL1 NB0EWFL1 ; 
  10 NB0EWFL2 NB0EWFL2 ; 
  10 NB0EWFL3 NB0EWFL3 ; 
  10 NB0EWFL4 NB0EWFL4 ; 
  10 NB0EWFL5 NB0EWFL5 ; 
  10 NB0EWFL6 NB0EWFL6 ; 
  10 NB0EWFL7 NB0EWFL7 ; 
  10 NB0EWCHG NB0EWCHG ; 
  10 NB0EWCNT NB0EWCNT ; 
  10 NB0EWSB1 NB0EWSB1 ; 
  10 NB0EWSB3 NB0EWSB3 ; 
  10 NB0EWSB5 NB0EWSB5 ; 
  10 NB0EWTOP NB0EWTOP ; 
  10 NB0EWMAX NB0EWMAX ; 
  10 NB0EWNUM NB0EWNUM ; 
  10 NB0EWARY NB0EWARY [400] ; 
    15 NB0EWCDE NB0EWCDE ; 
    15 NB0EWPGM NB0EWPGM ; 
    15 NB0EWDSC NB0EWDSC ; 
    15 NB0EWABR NB0EWABR ; 
    15 NB0EWSDT NB0EWSDT ; 
    15 NB0EWEDT NB0EWEDT ; 
    15 ZZZSDT ZZZSDT ; 
    15 ZZZCHGCT ZZZCHGCT ; 
  10 NB0EWEKE NB0EWEKE ; 
    15 NB0EWECC NB0EWECC ; 
      20 NB0EWECO NB0EWECO ; 
    15 NB0EWESC NB0EWESC ; 
      20 NB0EWEST NB0EWEST ; 
    15 NB0EWEDC NB0EWEDC ; 
      20 NB0EWEDP NB0EWEDP ; 
    15 NB0EWEGP NB0EWEGP ; 
    15 NB0EWEBC NB0EWEBC ; 
  10 NB0EWDT1 NB0EWDT1 ; 
    15 NB0EWD1Y NB0EWD1Y ; 
    15 NB0EWD1M NB0EWD1M ; 
    15 NB0EWD1D NB0EWD1D ; 
  10 NB0EWDT2 NB0EWDT2 ; 
    15 NB0EWD2M NB0EWD2M ; 
    15 NB0EWD1 NB0EWD1 ; 
    15 NB0EWD2D NB0EWD2D ; 
    15 NB0EWD2 NB0EWD2 ; 
    15 NB0EWD2Y NB0EWD2Y ; 
  10 NB0EWCD1 NB0EWCD1 ; 
  10 NB0EWCD2 NB0EWCD2 ; 
  10 NB0EWHDT NB0EWHDT ; 
    15 NB0EWHCC NB0EWHCC ; 
    15 NB0EWHYY NB0EWHYY ; 
    15 NB0EWHMM NB0EWHMM ; 
    15 NB0EWHDD NB0EWHDD ; 
  10 NB0EWDT NB0EWDT ; 
    15 NB0EWCC NB0EWCC ; 
    15 NB0EWYY NB0EWYY ; 
    15 NB0EWMM NB0EWMM ; 
    15 NB0EWDD NB0EWDD ; 
  10 NB0EWT1 NB0EWT1 ; 
    15 NB0EWTHR NB0EWTHR ; 
    15 NB0EWTC1 NB0EWTC1 ; 
    15 NB0EWTMI NB0EWTMI ; 
    15 NB0EWTC2 NB0EWTC2 ; 
    15 NB0EWTSC NB0EWTSC ; 
  10 NB0EWT2 NB0EWT2 ; 
    15 NB0EWTHH NB0EWTHH ; 
    15 NB0EWTMN NB0EWTMN ; 
  10 NB0EWCKX NB0EWCKX ; 
    15 NB0EWCO NB0EWCO ; 
    15 XBCCD XBCCD ; 
    15 NB0EWHPG NB0EWHPG ; 
  10 NB0EWMOD NB0EWMOD ; 
    15 NB0EWCHA NB0EWCHA [13] ; 
  10 NB0EWCNM NB0EWCNM [30] ; 
  10 NB0EWSTA NB0EWSTA [8] ; 
end // end NB0EW01

// abbreviation
DataItem NB0EWABR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// select set array
DataItem NB0EWARY char(64)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// eze  century
DataItem NB0EWCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// compare date 1
DataItem NB0EWCD1 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// compare date 2
DataItem NB0EWCD2 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// code
DataItem NB0EWCDE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// modified line indicator
DataItem NB0EWCHA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// change requested flag
DataItem NB0EWCHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key fields
DataItem NB0EWCKX char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// company name
DataItem NB0EWCNM char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group code selected counter
DataItem NB0EWCNT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// co hold for key chg compare
DataItem NB0EWCO num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// dash-1
DataItem NB0EWD1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ezedte day
DataItem NB0EWD1D num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ezedte motnh
DataItem NB0EWD1M num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ezedte year
DataItem NB0EWD1Y num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// dash-2
DataItem NB0EWD2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current day
DataItem NB0EWD2D char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current month
DataItem NB0EWD2M char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current year
DataItem NB0EWD2Y char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// eze  day
DataItem NB0EWDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// description
DataItem NB0EWDSC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ezedte - ccyymmdd
DataItem NB0EWDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold field for ezedte
DataItem NB0EWDT1 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold current dte mm-dd-yy
DataItem NB0EWDT2 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// entry brand
DataItem NB0EWEBC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NB0EWECC char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// entry company id
DataItem NB0EWECO num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NB0EWEDC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// entry nike dept code
DataItem NB0EWEDP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ending date
DataItem NB0EWEDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// entry nbank group acct cd
DataItem NB0EWEGP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold entry key
DataItem NB0EWEKE char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NB0EWESC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// entry store id
DataItem NB0EWEST num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// data modified flag
DataItem NB0EWFL1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// scrolling requested flag
DataItem NB0EWFL2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// add lines flag
DataItem NB0EWFL3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// valid dates flag
DataItem NB0EWFL4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// unique code
DataItem NB0EWFL5 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group code selected flag
DataItem NB0EWFL6 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ending date changed flag
DataItem NB0EWFL7 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold century
DataItem NB0EWHCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold day
DataItem NB0EWHDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold date
DataItem NB0EWHDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold month
DataItem NB0EWHMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold ad pgm validation
DataItem NB0EWHPG char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold year
DataItem NB0EWHYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w/s array last valid entry
DataItem NB0EWMAX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// eze  month
DataItem NB0EWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// modified lines array
DataItem NB0EWMOD char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws hold number
DataItem NB0EWNUM num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// program
DataItem NB0EWPGM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map attribute sub
DataItem NB0EWSB1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// map array sub
DataItem NB0EWSB3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w/s location of curr line
DataItem NB0EWSB5 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// starting date
DataItem NB0EWSDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nb1rec status
DataItem NB0EWSTA char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// curr time hh:mm:ss
DataItem NB0EWT1 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws hold curr hr/mi
DataItem NB0EWT2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// curr time : (1)
DataItem NB0EWTC1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// curr time : (2)
DataItem NB0EWTC2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// curr time hours
DataItem NB0EWTHH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// curr time hours
DataItem NB0EWTHR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// curr time minutes
DataItem NB0EWTMI num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// curr time minutes
DataItem NB0EWTMN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w/s location - top of screen
DataItem NB0EWTOP num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// curr time seconds
DataItem NB0EWTSC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// eze  year
DataItem NB0EWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

