package nb0c;

import corpcom1.CLACLMNB;
import corpcom1.CLASTTDT;
import corpcom1.CLHMEMNB;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom5.GLCD;
import corpcom6.SQLCA;
import corpcom7.ZZZSTM;
import corpx1.XBCCD;
import corpx1.XDVCD;
import corpx1.XGPCD;
import corpx1.XIECD;
import corpx2.XNXCD;
import corpx2.XOTCD;
import corpy2.YADCD;
import corpy2.YADTBL;
import corpy2.YCPCD;
import corpy2.YCRCD;
import corpz3.ZZZSDT;
import iv.common.IV0IVCDT;
import iv.common.IV0IVCID;
import iv.common.IVABUSMO;
import ku.common.KUMSTRID;
import nb.common.NB-ADV-PERIOD-CD;
import nb.common.NB1CUST;
import nb.common.NB1GRPCD;
import nb.common.NB1REC;
import nb.common.NB4PRBAL;
import nb.common.NB4TRAMT;
import nb.common.NB4XREF;
import nb.common.NB4XSEQ;
import op.common.OP1CUPO;
import sp.common.SP1ID;
import ta.common.TA1REC;
import ta.common.TA2REC;
import vv.common.VCOPER01;
//*** PROGRAM=NB0C ****
// NIKE BANK SYSTEM
// 
// OVERVIEW:  NB0C - HISTORY DISPLAY
// 
// date created:  12/20/87
// 
// maintenance history:
// 
// 
//   when     who        what
// -------- --------   ------------------------------------
// 01/04/88 d.harrison *  created.
// 01/25/88 S.JOB      1. Change NB0C to reflect database mod.
//                        Reference number can now come from
//                        separate fields for xfers, invoicing,
//                        or claims.  Maps have added reference
//                        source fields in the secondary key
//                        area.
//                     2. Analyst code as a secondary selection
//                        criteria was deleted from maps 1 & 2.
//                        All supporting code for this select
//                        remains in the application and is
//                        commented out.
// 
// 03/02/88 S.job      * changed pf keys to standard bank pf's
// 11/21/88 S.job      * changed length of company from 8 to 7
// 03/30/89 S.job      * force all d.base calls to division =01
// 04/10/89 S.JOB      * support multiple divisions.
// 04/26/89 jwood      * added noncsp option to calls
// 04/26/89 jwood      * added xssegtr logic
// 10/25/89 s.job      e9: add ability to select by invoice #
// 11/09/89 s.job      e59:convert bank co-op system to admin.
//                      quarterly.
// 06/11/90 s.job      e69:convert from div to  div/brand.
// 09/13/90 S.Job      E13:DISPLAY INVOICE NUMBER ON POP.
// 10/10/90 S.Job      E0:DB CHANGES - ADD BRAND TO CUSTOMER.
// 10/27/93 lgross     Added numeric checks when entering from
//                     fastpath - reduced size of nb0cwcco to
//                     7 bytes as used by customer.
// 
// 
// 
// *********************
Program NB0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  NB0CW01 NB0CW01; // record
  NB0CW02 NB0CW02; // record
  NB1REC NB1REC; // record
  NB7REC NB7REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  VCOPER01 VCOPER01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use YADTBL; // table
  use NB0CM.NB0CM001,  // forms
      NB0CM.NB0CM002, 
      NB0CM.NB0CM003
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NB0C010: NB0C010();
    ;
    ;
    goto NB0C020; /* master loop for application*/
    ;
    ;
    ;
    NB0C020: NB0C020();
    ;
    ;
    if (NB0CW01.NB0CWFL2 == "Y"           /* selection requested*/
     && converseVar.validationMsgNum == 0 /* no errors*/
     && converseVar.eventKey is enter)    /* enter has been depressed*/
      goto NB0C800; /* map 3 processing loop*/
    else
      goto NB0C020; /* master loop for application*/
    end
    ;
    ;
    ;
    NB0C800: NB0C800();
    ;
    ;
    if (converseVar.eventKey is pf3)
      goto NB0C020; /* flow to master loop of application*/
    else
      goto NB0C800; /* map 3 processing*/
    end
    ;
    ;
    ;
  end // end main
end // end NB0C

// initilization
Function NB0C010()
  ;
  ;
     /* **********************************************************/
     /* * this process initializes program work area and clears **/
     /* * the map areas.                                        **/
     /* * lgross 10/27/93 added checks form numerics in nb0cwcc **/
     /* *        nb0cwscs and nb0cwcdc                          **/
     /* **********************************************************/
  ;
  ;
      /* check entry security*/
  ;
  XSENTRY();
  XSSEGTR(); /* set segmented transaction id*/
  ;
  ;
      /* initialize map and working storage*/
  ;
  set NB0CW01 empty;
  set SQLCA empty;
  ;
  NB0C015(); /* initilize map 1, 2 & 3*/
  ;
  NB0CW01.NB0CWSSW = 1; /* set screen display switch to 1*/
  NB0CW01.NB0CWTOP = 1; /* set top of w/s array*/
  NB0CW01.NB0CWFL1 = "N"; /* scrolling requested flag*/
  NB0CW01.NB0CWFL2 = "N"; /* selection requested flag*/
  ;
  if (COMMAREA.CAITEM > " ")
    NB0CW01.NB0CWCAI = COMMAREA.CAITEM;
  end
  ;
  if (NB0CW01.NB0CWCCC is numeric)
     /* next sentence*/
  else
    NB0CW01.NB0CWCCO = 0; /* if spaces are in field*/
  end
  ;
  if (NB0CW01.NB0CWCCO > 0)
    NB0CM001.NB0CMBID = NB0CW01.NB0CWCCO;
  end
  ;
  if (NB0CW01.NB0CWCSC is numeric)
     /* next sentence*/
  else
    NB0CW01.NB0CWCST = 0; /* if spaces are in field*/
  end
  ;
  if (NB0CW01.NB0CWCST > 0)
    NB0CM001.NB0CMBSN = NB0CW01.NB0CWCST;
  end
  ;
  if (NB0CW01.NB0CWCDC is numeric)
     /* next sentence*/
  else
    NB0CW01.NB0CWCDP = 0; /* if spaces are in field*/
  end
  ;
  if (NB0CW01.NB0CWCDP > 0)
    NB0CM001.NB0CMBDC = NB0CW01.NB0CWCDP;
  end
  ;
  if (NB0CW01.NB0CWCGP > 0)
    NB0CM001.NB0CMGRP = NB0CW01.NB0CWCGP;
  end
  ;
  if (NB0CW01.NB0CWBCD > "  ")
    NB0CM001.XBCCD = NB0CW01.NB0CWBCD; /* brand*/
  else
    NB0CM001.XBCCD = "01"; /* default to domestic*/
  end
  ;
  ;
  ;
end // end NB0C010

// initilize map 1, 2 & 3
Function NB0C015()
  ;
  ;
  set NB0CM001 empty; /* enterable numeric fields to display 0's*/
  set NB0CM002 empty; /* upon initial display of map*/
  set NB0CM003 empty;
  ;
  NB0CM001.NB0CMDTE = VGVar.currentShortGregorianDate;
  NB0CM001.NB0CMREV = "01";
  NB0CM001.NB0CMPRO = "NB0C400";
  NB0CM001.NB0CMRF2 = "C";
  ;
  NB0CM002.NB0CMDTE = VGVar.currentShortGregorianDate;
  NB0CM002.NB0CMREV = "01";
  NB0CM002.NB0CMPRO = "NB0C500";
  NB0CM002.NB0CMRF2 = "C";
  ;
  NB0CM003.NB0CMDTE = VGVar.currentShortGregorianDate;
  NB0CM003.NB0CMREV = "01";
  NB0CM003.NB0CMPRO = "NB0C800";
  ;
  ;
  ;
end // end NB0C015

// master loop for application
Function NB0C020()
  ;
  ;
     /* **********************************************************/
     /* * this process is the main control loop for the         **/
     /* * nike bank customer activity history application ..... **/
     /* **********************************************************/
  ;
  NB0C100(); /* key change / validation*/
  ;
  if (NB0CW01.NB0CWKCH == "Y") /* key change*/
    converseLib.validationFailed(0); /* reset ezemno*/
    NB0C200(); /* load working storage*/
    if (converseVar.validationMsgNum == 0) /* no errors loading w/s*/
      NB0C300(); /* format & load screens 1 & 2*/
    end
  end
  NB0CW01.NB0CWTOP = NB0CW01.NB0CWTOP; /* display 'top'*/
  ;
  if (NB0CW01.NB0CWFL1 == "Y" /* scrolling requested*/
   || converseVar.eventKey is pa2) /* clear and reload screen*/
    NB0C300(); /* format & load screens 1 & 2*/
  end
  ;
  NB0CW01.NB0CWMNO = converseVar.validationMsgNum; /* save ezemno*/
  ;
  if (NB0CW01.NB0CWSSW == 1) /* screen dispaly switch*/
    NB0C400(); /* converse map 1*/
  else
    NB0C500(); /* converse map 2*/
  end
  ;
  NB0CW01.NB0CWFL1 = "N"; /* scrolling requested*/
  ;
  NB0C550(); /* set attributes defined*/
  ;
  NB0C575(); /* echo map changes*/
  ;
  NB0C600(); /* attention key processing*/
  ;
  NB0C650(); /* 's' editing process*/
  ;
  if (converseVar.eventKey is pf7 /* scroll back*/
   || converseVar.eventKey is pf8) /* scroll forward*/
    if (converseVar.validationMsgNum == 0)
      if (NB0CW01.NB0CWFL2 == "N") /* selection requested*/
        NB0C700(); /* scrolling process*/
      else
        converseLib.validationFailed(75); /* can't make selection & scroll*/
      end
    end
  end
  ;
  if (converseVar.eventKey is pf5) /* detail*/
    if (NB0CW01.NB0CWSSW == 1) /* screen display switch*/
      NB0CW01.NB0CWSSW = 2; /* screen display switch*/
    else
      NB0CW01.NB0CWSSW = 1; /* screen display switch*/
    end
  end
  ;
  ;
  ;
end // end NB0C020

// key change
Function NB0C100()
  ;
  ;
  if (NB0CW01.NB0CWMNO == 59) /* no activity*/
    if (NB0CW01.NB0CWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(NB0CW01.NB0CWMNO);
    end
    set NB0CM001.NB0CMBID cursor;
    set NB0CM002.NB0CMBID cursor;
  end
  ;
  NB0CW01.NB0CWKCH = "N"; /* key change flag*/
  ;
  NB0CW01.NB0CWIVF = "YES";
  NB0C105(); /* load key if user gave inv# only*/
  ;
  if (NB0CW01.NB0CWBID > 0)
    NB0C110(); /* check for key change*/
    if (NB0CW01.NB0CWKCH == "Y") /* key change flag*/
      converseLib.validationFailed(0); /* reset ezemno*/
      NB0C115(); /* reset screen display*/
      NB0C120(); /* validate key*/
    end
  else
    NB0CW01.NB0CWKCH = "Y"; /* key change flag*/
    converseLib.validationFailed(0); /* reset ezemno*/
    NB0C115(); /* reset screen display*/
    NB0C120(); /* validate key*/
  end
  ;
  if (NB0CW01.NB0CWIVF == "NO") /* invalid inv#*/
    converseLib.validationFailed(96); /* invalid inv#*/
  end
  ;
  ;
  ;
end // end NB0C100

// if invoice# only find key
Function NB0C105()
  ;
  ;
  if (NB0CW01.NB0CWSSW == 1)
    if (NB0CM001.NB0CMBID <= 0    /* customer #*/
     && NB0CM001.NB0CMBSN <= 0    /* store #*/
     && NB0CM001.NB0CMBDC <= 0    /* department*/
     && NB0CM001.NB0CMGRP == " "  /* group*/
     && NB0CM001.NB0CMFDT <= 0    /* from date*/
     && NB0CM001.NB0CMTDT <= 0    /* to date*/
     && NB0CM001.NB0CMPGM == "  " /* ad program*/
     && NB0CM001.NB0CMOID <= 0    /* orig. cust*/
     && NB0CM001.NB0CMOSN <= 0    /* orig. store*/
     && NB0CM001.NB0CMODC <= 0    /* orig. dept*/
     && NB0CM001.NB0CMOBC == " "  /* orig. brand*/
     && NB0CM001.NB0CMSAC == "  " /* subaccount*/
     && NB0CM001.NB0CMGPC == " "  /* gpc*/
     && NB0CM001.NB0CMRSN == " "  /* reason*/
     && NB0CM001.NB0CMREF > 0     /* invoice #*/
     && NB0CM001.NB0CMRF2 == "I"  /* ref source*/
     && NB0CM001.NB0CMOT == " "   /* order type*/
     && NB0CM001.NB0CMGL == " ")  /* gl code*/
      NB0CW01.NB0CWREF = NB0CM001.NB0CMREF; /* hold reference #*/
      NB0CW01.NB0CWBID = 0; /* force key change*/
      NB0C106(); /* get customer*/
    end
  else
    if (NB0CM002.NB0CMBID <= 0    /* customer #*/
     && NB0CM002.NB0CMBSN <= 0    /* store #*/
     && NB0CM002.NB0CMBDC <= 0    /* dept*/
     && NB0CM002.NB0CMGRP == " "  /* group*/
     && NB0CM002.NB0CMFDT <= 0    /* from date*/
     && NB0CM002.NB0CMTDT <= 0    /* to date*/
     && NB0CM002.NB0CMPGM == "  " /* ad program*/
     && NB0CM002.NB0CMOID <= 0    /* orig. cust*/
     && NB0CM002.NB0CMOSN <= 0    /* orig. store*/
     && NB0CM002.NB0CMODC <= 0    /* orig. dept*/
     && NB0CM002.NB7OBCD == " "   /* orig. brand*/
     && NB0CM002.NB0CMSAC == "  " /* subaccount*/
     && NB0CM002.NB0CMGPC == " "  /* gpc*/
     && NB0CM002.NB0CMRSN == " "  /* reason*/
     && NB0CM002.NB0CMREF > 0     /* invoice #*/
     && NB0CM002.NB0CMRF2 == "I"  /* ref source*/
     && NB0CM002.NB0CMOT == " "   /* order type*/
     && NB0CM002.NB0CMGL == " ")  /* gl code*/
      /* AND NB0CM002.NB0CMAL EQ NB0CW01.NB0CWAL; analyst code*/
      NB0CW01.NB0CWREF = NB0CM002.NB0CMREF; /* hold reference #*/
      NB0CW01.NB0CWBID = 0; /* force key change*/
      NB0C106(); /* get customer*/
    end
  end
  ;
  ;
  ;
end // end NB0C105

// get nb7rec set = invoice #
Function NB0C106()
  ;
  ;
    /* *****************************************************/
    /* *  purpose:  get nb7rec select set*/
    /* *****************************************************/
  ;
  set NB0CW02 empty;
  set NB7REC empty;
  set TA1REC empty;
  set SQLCA empty;
  ;
  NB7REC.IV0IVCID = NB0CW01.NB0CWREF; /* invoice #*/
  ;
  ;
  call "IO2270" ("S2", SQLCA, NB7REC) {isNoRefresh = yes, isExternal = yes}; /* set of nb7rec*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    call "IO2270" ("N2", SQLCA, NB7REC) {isNoRefresh = yes, isExternal = yes}; /* fetch first nb7rec*/
    if (SQLCA.VAGen_SQLCODE == +0)
      if (NB0CW01.NB0CWSSW == 1) /* map 1*/
        NB0CM001.NB0CMBID = NB7REC.NB1CUST; /* cust #*/
        NB0CM001.NB0CMBSN = NB7REC.KUMSTRID; /* store*/
        NB0CM001.NB0CMBDC = NB7REC.XNXCD; /* dept*/
        NB0CM001.XBCCD = NB7REC.XBCCD; /* brand*/
        NB0CM001.NB0CMGRP = NB7REC.NB1GRPCD; /* group*/
        NB0CM001.NB0CMFDT = 010188; /* from date*/
        NB0CM001.NB0CMTDT = 123199; /* to date*/
        NB0CM001.NB0CMPGM = "  "; /* all ad pgms*/
      else
        NB0CM002.NB0CMBID = NB7REC.NB1CUST; /* cust #*/
        NB0CM002.NB0CMBSN = NB7REC.KUMSTRID; /* store*/
        NB0CM002.NB0CMBDC = NB7REC.XNXCD; /* dept*/
        NB0CM002.XBCCD = NB7REC.XBCCD; /* brand*/
        NB0CM002.NB0CMGRP = NB7REC.NB1GRPCD; /* group*/
        NB0CM002.NB0CMFDT = 010188; /* from date*/
        NB0CM002.NB0CMTDT = 123199; /* to date*/
        NB0CM002.NB0CMPGM = "  "; /* all ad pgms*/
        ;
      end
      NB0CW01.NB0CWIVF = "YES"; /* activity for this invoice*/
    else
      NB0CW01.NB0CWIVF = "NO"; /* no activity for this invoice*/
    end
    ;
    ;
    call "IO2270" ("C2", SQLCA, NB7REC) {isNoRefresh = yes, isExternal = yes}; /* set of nb7rec*/
    ;
    if (SQLCA.VAGen_SQLCODE != +0) /* could not close....*/
      TA1REC.TA1LOCAT[1] = "  ";
      TA1REC.TA1LOCAT[2] = "NB0C106";
    end
  else
    TA1REC.TA1LOCAT[1] = "  ";
    TA1REC.TA1LOCAT[2] = "NB0C106";
  end
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0 /* good return..*/
   || SQLCA.VAGen_SQLCODE == +100) /* end of file*/
     /* everything is fine....*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
    else
      set ERRSQLCA empty;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0C";
      TA1REC.TA1LOCAT[3] = "IO2270 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1LOCAT[4] = "NB0CM001";
      TA1REC.TA1DBASE = "DNBANK.";
      TA1REC.TA1TBLVU = "VNBAUD01";
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      NB0CM001.NB0CMMSG = COMMAREA.CAMSG;
    end
  end
  ;
  ;
  ;
end // end NB0C106

// check for key change
Function NB0C110()
  ;
  ;
  if (NB0CW01.NB0CWSSW == 1)
    if (NB0CM001.NB0CMBID == NB0CW01.NB0CWBID 
     && NB0CM001.NB0CMBSN == NB0CW01.NB0CWBSN 
     && NB0CM001.NB0CMBDC == NB0CW01.NB0CWBDC 
     && NB0CM001.NB0CMGRP == NB0CW01.NB0CWGRP 
     && NB0CM001.XBCCD == NB0CW01.XBCCD       /* brand*/
     && NB0CM001.NB0CMFDT == NB0CW01.NB0CWFDT 
     && NB0CM001.NB0CMTDT == NB0CW01.NB0CWTDT 
     && NB0CM001.NB0CMPGM == NB0CW01.NB0CWPGM 
     && NB0CM001.NB0CMOID == NB0CW01.NB0CWOID 
     && NB0CM001.NB0CMOSN == NB0CW01.NB0CWOSN 
     && NB0CM001.NB0CMODC == NB0CW01.NB0CWODC 
     && NB0CM001.NB0CMSAC == NB0CW01.NB0CWSAC /* subaccount*/
     && NB0CM001.NB0CMGPC == NB0CW01.NB0CWGPC 
     && NB0CM001.NB0CMRSN == NB0CW01.NB0CWRSN 
     && NB0CM001.NB0CMREF == NB0CW01.NB0CWREF 
     && NB0CM001.NB0CMRF2 == NB0CW01.NB0CWRF2 /* reference source*/
     && NB0CM001.NB0CMOT == NB0CW01.NB0CWOT   
     && NB0CM001.NB0CMGL == NB0CW01.NB0CWGL   
     && NB0CM001.NB0CMSPM == NB0CW01.NB0CWSPM)
      /* AND NB0CM001.NB0CMAL EQ NB0CW01.NB0CWAL; analyst code*/
      NB0CW01.NB0CWKCH = "N"; /* change of key flag*/
    else
      NB0CW01.NB0CWKCH = "Y"; /* change of key flag*/
    end
  else
    if (NB0CM002.NB0CMBID == NB0CW01.NB0CWBID 
     && NB0CM002.NB0CMBSN == NB0CW01.NB0CWBSN 
     && NB0CM002.NB0CMBDC == NB0CW01.NB0CWBDC 
     && NB0CM002.NB0CMGRP == NB0CW01.NB0CWGRP 
     && NB0CM002.XBCCD == NB0CW01.XBCCD       /* brand*/
     && NB0CM002.NB0CMFDT == NB0CW01.NB0CWFDT 
     && NB0CM002.NB0CMTDT == NB0CW01.NB0CWTDT 
     && NB0CM002.NB0CMPGM == NB0CW01.NB0CWPGM 
     && NB0CM002.NB0CMOID == NB0CW01.NB0CWOID 
     && NB0CM002.NB0CMOSN == NB0CW01.NB0CWOSN 
     && NB0CM002.NB0CMODC == NB0CW01.NB0CWODC 
     && NB0CM002.NB0CMSAC == NB0CW01.NB0CWSAC /* subaccount*/
     && NB0CM002.NB0CMGPC == NB0CW01.NB0CWGPC 
     && NB0CM002.NB0CMRSN == NB0CW01.NB0CWRSN 
     && NB0CM002.NB0CMREF == NB0CW01.NB0CWREF 
     && NB0CM002.NB0CMRF2 == NB0CW01.NB0CWRF2 /* reference source*/
     && NB0CM002.NB0CMOT == NB0CW01.NB0CWOT   
     && NB0CM002.NB0CMGL == NB0CW01.NB0CWGL   
     && NB0CM002.NB0CMSPM == NB0CW01.NB0CWSPM)
      /* AND NB0CM002.NB0CMAL EQ NB0CW01.NB0CWAL;  analyst code*/
      NB0CW01.NB0CWKCH = "N"; /* change of key flag*/
    else
      NB0CW01.NB0CWKCH = "Y"; /* change of key flag*/
    end
  end
  ;
  ;
  ;
end // end NB0C110

// reset screen display.
Function NB0C115()
  ;
  ;
  ;
  ;
  NB0CW01.NB0CWSB4 = 1;
  while (NB0CW01.NB0CWSB4 <= 12)
    NB0CM001.NB0CMSEL[NB0CWSB4] = " ";
    NB0CM002.NB0CMSEL[NB0CWSB4] = " ";
    ;
    NB0CM001.NB0CMORF[NB0CWSB4] = " ";
    NB0CM002.NB0CMORF[NB0CWSB4] = " ";
    ;
    NB0CM001.NB4XSEQ[NB0CWSB4] = " ";
    NB0CM002.NB4XSEQ[NB0CWSB4] = " ";
    ;
    NB0CM001.YCRCD[NB0CWSB4] = " ";
    NB0CM002.YCRCD[NB0CWSB4] = " ";
    ;
    NB0CM001.XOTCD[NB0CWSB4] = " ";
    NB0CM002.XOTCD[NB0CWSB4] = " ";
    ;
    NB0CM001.NB7PRCDT[NB0CWSB4] = 0;
    ;
    NB0CM001.NB7OCUST[NB0CWSB4] = " ";
    NB0CM001.NB7OSTOR[NB0CWSB4] = " ";
    NB0CM001.NB7ODEPT[NB0CWSB4] = " ";
    NB0CM001.NB7OBCD[NB0CWSB4] = " "; /* brand*/
    NB0CM001.XGPCD[NB0CWSB4] = " ";
    ;
    NB0CM002.NB7SUBAC[NB0CWSB4] = " "; /* subacct (spgm)*/
    NB0CM002.GLCD[NB0CWSB4] = " ";
    NB0CM002.XIECD[NB0CWSB4] = " ";
    NB0CM002.YCPCD[NB0CWSB4] = 0;
    NB0CM002.NB0CMOTD[NB0CWSB4] = 0;
    ;
    NB0CM001.NB4TRAMT[NB0CWSB4] = 0;
    NB0CM002.NB4TRAMT[NB0CWSB4] = 0;
    ;
    NB0CM001.NB4PRBAL[NB0CWSB4] = 0;
    NB0CM002.NB4PRBAL[NB0CWSB4] = 0;
    ;
    NB0CW01.NB0CWSB4 = NB0CW01.NB0CWSB4 + 1; /* bump up subscript*/
  end
  ;
  ;
  ;
end // end NB0C115

// validate key
Function NB0C120()
  ;
  ;
  ;
  if (NB0CW01.NB0CWSSW == 1) /* screen display switch*/
    ;
    NB0CW01.NB0CWPGM = NB0CM001.NB0CMPGM;
    if (NB0CM001.NB0CMPGM > " ")
      NB0C126(); /* VALIDATE AD PROGRAM*/
      if (SQLCA.VAGen_SQLCODE == +0 /* VALID CODE FOUND*/
       || SQLCA.VAGen_SQLCODE == -811) /* MORE THAN ONE VALID CODE FOUND*/
    /* NEXT SENTENCE*/
      else
        if (NB0CM001.NB0CMPGM in YADTBL.YADCD)
    /* NEXT SENTENCE*/
        else
          converseLib.validationFailed(47); /* INVALID AD PGM*/
          set NB0CM001.NB0CMPGM cursor, modified, bold;
          NB0CW01.NB0CWPGM = "Z9";
        end
      end
    end
    ;
    if (NB0CM001.NB0CMTDT == 0)
      converseLib.validationFailed(57); /* to date required*/
      set NB0CM001.NB0CMTDT cursor, modified, bold;
    end
    ;
    if (NB0CM001.NB0CMFDT == 0)
      converseLib.validationFailed(56); /* from date required*/
      set NB0CM001.NB0CMFDT cursor, modified, bold;
    end
    ;
    if (NB0CM001.NB0CMBID == 0)
      converseLib.validationFailed(31); /* company id required*/
      set NB0CM001.NB0CMBID cursor, modified, bold;
    end
    ;
  end
  ;
  ;
  ;
  if (NB0CW01.NB0CWSSW == 2) /* screen display switch*/
    ;
    NB0CW01.NB0CWPGM = NB0CM002.NB0CMPGM;
    if (NB0CM002.NB0CMPGM > " ")
      NB0C126(); /* VALIDATE AD PROGRAM*/
      if (SQLCA.VAGen_SQLCODE == +0 /* VALID CODE FOUND*/
       || SQLCA.VAGen_SQLCODE == -811) /* MORE THAN ONE VALID CODE FOUND*/
    /* NEXT SENTENCE*/
      else
        if (NB0CM002.NB0CMPGM in YADTBL.YADCD)
    /* NEXT SENTENCE*/
        else
          converseLib.validationFailed(47); /* INVALID AD PGM*/
          set NB0CM002.NB0CMPGM cursor, modified, bold;
          NB0CW01.NB0CWPGM = "Z9";
        end
      end
    end
    ;
    if (NB0CM002.NB0CMTDT == 0)
      converseLib.validationFailed(57); /* to date required*/
      set NB0CM002.NB0CMTDT cursor, modified, bold;
    end
    ;
    if (NB0CM002.NB0CMFDT == 0)
      converseLib.validationFailed(56); /* from date required*/
      set NB0CM002.NB0CMFDT cursor, modified, bold;
    end
    ;
    if (NB0CM002.NB0CMBID == 0)
      converseLib.validationFailed(31); /* company id required*/
      set NB0CM002.NB0CMBID cursor, modified, bold;
    end
    ;
  end
  ;
  ;
  if (converseVar.validationMsgNum == 0)
    NB0C121(); /* read nb1rec*/
  end
  ;
  if (converseVar.validationMsgNum == 0)
    NB0C122(); /* validate secondary key*/
  end
  ;
  if (converseVar.validationMsgNum == 0)
    NB0C124(); /* move key to working storage*/
  else
    NB0CW01.NB0CWKCH = "N"; /* key change flag*/
     /* MOVE ' ' TO NB0CW01.NB0CWKEY  ;  w/s key*/
     /* MOVE ' ' TO NB0CW01.NB0CW2KY  ;  w/s secondary key*/
  end
  ;
  ;
  ;
end // end NB0C120

// read nb1rec
Function NB0C121()
  ;
  set NB1REC empty;
  ;
  if (NB0CW01.NB0CWSSW == 1) /* screen display switch*/
    NB1REC.NB1CUST = NB0CM001.NB0CMBID;
    NB1REC.KUMSTRID = NB0CM001.NB0CMBSN;
    NB1REC.XNXCD = NB0CM001.NB0CMBDC;
    NB1REC.NB1GRPCD = NB0CM001.NB0CMGRP;
    NB1REC.XDVCD = "01"; /* div field*/
    NB1REC.XBCCD = NB0CM001.XBCCD; /* brand*/
  else
    NB1REC.NB1CUST = NB0CM002.NB0CMBID;
    NB1REC.KUMSTRID = NB0CM002.NB0CMBSN;
    NB1REC.XNXCD = NB0CM002.NB0CMBDC;
    NB1REC.NB1GRPCD = NB0CM002.NB0CMGRP;
    NB1REC.XDVCD = "01"; /* div field*/
    NB1REC.XBCCD = NB0CM002.XBCCD; /* brand*/
  end
  ;
  ;
  call "IO2210" ("S ", SQLCA, NB1REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == +0
   || SQLCA.VAGen_SQLCODE == +100)
     /* do nothing*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
    else
      set ERRSQLCA empty;
      TA1REC.TA1LOCAT[1] = "S ";
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RTN";
      TA1REC.TA1PGMNM = "NB0C";
      TA1REC.TA1LOCAT[2] = "NB0C121";
      TA1REC.TA1LOCAT[3] = "IO2210";
      TA1REC.TA1LOCAT[4] = "NB0C020";
      TA1REC.TA1DBASE = "DNBANK";
      TA1REC.TA1TBLVU = "VBCUST01";
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      ;
      ;
      ;
    end
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +100) /* not found condition*/
    converseLib.validationFailed(58); /* this is not a valid bank customer*/
    NB0CW01.NB0CWBID = 0; /* force new key processing*/
    NB0CW01.NB0CWBSN = 0;
    NB0CW01.NB0CWBDC = 0;
    NB0CW01.NB0CWGRP = " ";
    ;
    if (NB0CW01.NB0CWSSW == 1)
      set NB0CM001.NB0CMBID cursor, modified, bold;
      set NB0CM001.NB0CMBSN modified, bold;
      set NB0CM001.NB0CMBDC modified, bold;
    else
      set NB0CM002.NB0CMBID cursor, modified, bold;
      set NB0CM002.NB0CMBSN modified, bold;
      set NB0CM002.NB0CMBDC modified, bold;
    end
  end
  ;
  ;
  ;
end // end NB0C121

// validate secondary key.
Function NB0C122()
  ;
  ;
  ;
     /* **  test validity of the reference code source field ***/
  ;
  if (converseVar.validationMsgNum == 0)
    if (NB0CW01.NB0CWSSW == 1) /* screen display switch*/
      ;
      if (NB0CM001.NB0CMGPC > 0) /* gpc*/
        if (NB0CM001.NB0CMGPC == "02"
         || NB0CM001.NB0CMGPC == "03")
           /* ok*/
        else
          set NB0CM001.NB0CMGPC cursor, modified, bold;
          converseLib.validationFailed(87); /* invalid gpc code*/
        end
      end
      ;
      if (NB0CM001.NB0CMREF > 0) /* reference number*/
        if (NB0CM001.NB0CMRF2 == "T" /* transfer*/
         || NB0CM001.NB0CMRF2 == "I" /* invoice*/
         || NB0CM001.NB0CMRF2 == "C") /* claims*/
            /* here we have a good code*/
          ;
        else
          if (NB0CM001.NB0CMRF2 == " ") /* none was entered*/
            NB0CM001.NB0CMRF2 = "C";
          else
            converseLib.validationFailed(90); /* valid codes are t,i, or c*/
          end
        end
      end
      ;
    else
      ;
      if (NB0CM002.NB0CMGPC > 0) /* gpc*/
        if (NB0CM002.NB0CMGPC == "02"
         || NB0CM002.NB0CMGPC == "03")
           /* ok*/
        else
          set NB0CM002.NB0CMGPC cursor, modified, bold;
          converseLib.validationFailed(87); /* invalid gpc code*/
        end
      end
      ;
      if (NB0CM002.NB0CMREF > 0) /* reference number*/
        if (NB0CM002.NB0CMRF2 == "T" /* transfer*/
         || NB0CM002.NB0CMRF2 == "I" /* invoice*/
         || NB0CM002.NB0CMRF2 == "C") /* claims*/
            /* here we have a good code*/
          ;
        else
          if (NB0CM002.NB0CMRF2 == " ") /* none was entered*/
            NB0CM002.NB0CMRF2 = "C";
          else
            converseLib.validationFailed(90); /* valid codes are t,i, or c*/
          end
        end
      end
    end
  end
  ;
  ;
  ;
end // end NB0C122

// move key to working storage
Function NB0C124()
  ;
  ;
   /* ------------------------------------------------------*/
   /* move the new key values to working storage.      ssj*/
   /* ------------------------------------------------------*/
  ;
  if (NB0CW01.NB0CWSSW == 1)
    NB0CW01.NB0CWBID = NB0CM001.NB0CMBID;
    NB0CW01.NB0CWBSN = NB0CM001.NB0CMBSN;
    NB0CW01.NB0CWBDC = NB0CM001.NB0CMBDC;
    NB0CW01.XBCCD = NB0CM001.XBCCD; /* brand*/
    NB0CW01.NB0CWGRP = NB0CM001.NB0CMGRP;
    NB0CW01.NB0CWFDT = NB0CM001.NB0CMFDT;
    NB0CW01.NB0CWTDT = NB0CM001.NB0CMTDT;
    NB0CW01.NB0CWPGM = NB0CM001.NB0CMPGM;
    NB0CW01.NB0CWOID = NB0CM001.NB0CMOID;
    NB0CW01.NB0CWOSN = NB0CM001.NB0CMOSN;
    NB0CW01.NB0CWODC = NB0CM001.NB0CMODC;
    NB0CW01.NB0CWSAC = NB0CM001.NB0CMSAC; /* subaccount*/
    NB0CW01.NB0CWGPC = NB0CM001.NB0CMGPC;
    NB0CW01.NB0CWRSN = NB0CM001.NB0CMRSN;
    NB0CW01.NB0CWREF = NB0CM001.NB0CMREF;
    NB0CW01.NB0CWRF2 = NB0CM001.NB0CMRF2; /* source code*/
    NB0CW01.NB0CWOT = NB0CM001.NB0CMOT;
    NB0CW01.NB0CWGL = NB0CM001.NB0CMGL;
    NB0CW01.NB0CWSPM = NB0CM001.NB0CMSPM;
    /* MOVE NB0CM001.NB0CMAL TO NB0CW01.NB0CWAL;    analyst key*/
  else
    NB0CW01.NB0CWBID = NB0CM002.NB0CMBID;
    NB0CW01.NB0CWBSN = NB0CM002.NB0CMBSN;
    NB0CW01.NB0CWBDC = NB0CM002.NB0CMBDC;
    NB0CW01.NB0CWGRP = NB0CM002.NB0CMGRP;
    NB0CW01.XBCCD = NB0CM002.XBCCD; /* brand*/
    NB0CW01.NB0CWFDT = NB0CM002.NB0CMFDT;
    NB0CW01.NB0CWTDT = NB0CM002.NB0CMTDT;
    NB0CW01.NB0CWPGM = NB0CM002.NB0CMPGM;
    NB0CW01.NB0CWOID = NB0CM002.NB0CMOID;
    NB0CW01.NB0CWOSN = NB0CM002.NB0CMOSN;
    NB0CW01.NB0CWODC = NB0CM002.NB0CMODC;
    NB0CW01.NB0CWSAC = NB0CM002.NB0CMSAC; /* subaccount*/
    NB0CW01.NB0CWGPC = NB0CM002.NB0CMGPC;
    NB0CW01.NB0CWRSN = NB0CM002.NB0CMRSN;
    NB0CW01.NB0CWREF = NB0CM002.NB0CMREF;
    NB0CW01.NB0CWRF2 = NB0CM002.NB0CMRF2; /* source code*/
    NB0CW01.NB0CWOT = NB0CM002.NB0CMOT;
    NB0CW01.NB0CWGL = NB0CM002.NB0CMGL;
    NB0CW01.NB0CWSPM = NB0CM002.NB0CMSPM;
    /* MOVE NB0CM002.NB0CMAL TO NB0CW01.NB0CWAL;  analyst code*/
  end
  ;
  ;
  if (NB0CW01.XBCCD == "  ") /* no brand*/
    NB0CW01.XBCCD = "01"; /* default to domestic*/
    NB0CM001.XBCCD = "01"; /* default to domestic*/
    NB0CM002.XBCCD = "01"; /* default to domestic*/
  end
  ;
   /* ------------------------------------------------------*/
   /* move the new key values to the other screen.     ssj*/
   /* ------------------------------------------------------*/
  ;
  if (NB0CW01.NB0CWSSW == 1)
    NB0CM002.NB0CMBID = NB0CW01.NB0CWBID;
    NB0CM002.NB0CMBSN = NB0CW01.NB0CWBSN;
    NB0CM002.NB0CMBDC = NB0CW01.NB0CWBDC;
    NB0CM002.NB0CMGRP = NB0CW01.NB0CWGRP;
    NB0CM002.XBCCD = NB0CW01.XBCCD; /* brand*/
    NB0CM002.NB0CMFDT = NB0CW01.NB0CWFDT;
    NB0CM002.NB0CMTDT = NB0CW01.NB0CWTDT;
    NB0CM002.NB0CMPGM = NB0CW01.NB0CWPGM;
    NB0CM002.NB0CMOID = NB0CW01.NB0CWOID;
    NB0CM002.NB0CMOSN = NB0CW01.NB0CWOSN;
    NB0CM002.NB0CMODC = NB0CW01.NB0CWODC;
    NB0CM002.NB0CMSAC = NB0CW01.NB0CWSAC; /* subaccount*/
    NB0CM002.NB0CMGPC = NB0CW01.NB0CWGPC;
    NB0CM002.NB0CMRSN = NB0CW01.NB0CWRSN;
    NB0CM002.NB0CMREF = NB0CW01.NB0CWREF;
    NB0CM002.NB0CMRF2 = NB0CW01.NB0CWRF2; /* source code*/
    NB0CM002.NB0CMOT = NB0CW01.NB0CWOT;
    NB0CM002.NB0CMGL = NB0CW01.NB0CWGL;
    NB0CM002.NB0CMSPM = NB0CW01.NB0CWSPM;
    /* MOVE NB0CW01.NB0CWAL TO NB0CM002.NB0CMAL;   analyst code*/
  else
    NB0CM001.NB0CMBID = NB0CW01.NB0CWBID;
    NB0CM001.NB0CMBSN = NB0CW01.NB0CWBSN;
    NB0CM001.NB0CMBDC = NB0CW01.NB0CWBDC;
    NB0CM001.NB0CMGRP = NB0CW01.NB0CWGRP;
    NB0CM001.XBCCD = NB0CW01.XBCCD; /* brand*/
    NB0CM001.NB0CMFDT = NB0CW01.NB0CWFDT;
    NB0CM001.NB0CMTDT = NB0CW01.NB0CWTDT;
    NB0CM001.NB0CMPGM = NB0CW01.NB0CWPGM;
    NB0CM001.NB0CMOID = NB0CW01.NB0CWOID;
    NB0CM001.NB0CMOSN = NB0CW01.NB0CWOSN;
    NB0CM001.NB0CMODC = NB0CW01.NB0CWODC;
    NB0CM001.NB0CMSAC = NB0CW01.NB0CWSAC; /* subaccount*/
    NB0CM001.NB0CMGPC = NB0CW01.NB0CWGPC;
    NB0CM001.NB0CMRSN = NB0CW01.NB0CWRSN;
    NB0CM001.NB0CMREF = NB0CW01.NB0CWREF;
    NB0CM001.NB0CMRF2 = NB0CW01.NB0CWRF2; /* source code*/
    NB0CM001.NB0CMOT = NB0CW01.NB0CWOT;
    NB0CM001.NB0CMGL = NB0CW01.NB0CWGL;
    NB0CM001.NB0CMSPM = NB0CW01.NB0CWSPM;
    /* MOVE NB0CW01.NB0CWAL TO NB0CM001.NB0CMAL;   analyst code*/
  end
  ;
  NB0CW01.NB0CWTOP = 1;
  ;
  ;
  ;
end // end NB0C124

// VALIDATE AD PROGRAM
Function NB0C126()
  ;
  ;
  set VCOPER01 empty;
  set SQLCA empty;
  set TA1REC empty;
  ;
  VCOPER01.NB-ADV-PERIOD-CD = NB0CW01.NB0CWPGM;
  ;
  call "IO1860" ("SE", SQLCA, VCOPER01) {isNoRefresh = yes, isExternal = yes}; /**/
  ;
  if (SQLCA.VAGen_SQLCODE == +0
   || SQLCA.VAGen_SQLCODE == +100
   || SQLCA.VAGen_SQLCODE == -811)
    /* NEXT SENTENCE*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0C";
      TA1REC.TA1LOCAT[1] = "SE";
      TA1REC.TA1LOCAT[2] = "NB0A126";
      TA1REC.TA1LOCAT[3] = "IO1860 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1LOCAT[4] = "NB0CM   ";
      TA1REC.TA1DBASE = "DNBANK ";
      TA1REC.TA1TBLVU = "VCOPER01";
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
  ;
  ;
end // end NB0C126

// load working storage
Function NB0C200()
  ;
  ;
    /* *****************************************************/
    /* *  purpose:  get nb7rec select set*/
    /* *****************************************************/
  ;
  set NB0CW02 empty;
  set NB7REC empty;
  set TA1REC empty;
  set SQLCA empty;
  ;
  NB0C201(); /* fill nb7rec key from w/s*/
  ;
  ;
  call "IO2270" (NB0CW02, SQLCA, NB7REC) {isNoRefresh = yes, isExternal = yes}; /* get set of nb7rec*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    NB0CW01.NB0CWSB1 = 1; /* initialize subscript.*/
    NB0C210(); /* get first nb7rec*/
    if (SQLCA.VAGen_SQLCODE == +0)
      while (SQLCA.VAGen_SQLCODE == +0
       && NB0CW01.NB0CWSB1 <= 121) /* max entries*/
        NB0C210(); /* continue to get nb7rec's*/
        ;
        NB0CW01.NB0CWMAX = NB0CW01.NB0CWMAX;
        NB0CW01.NB0CWTOP = NB0CW01.NB0CWTOP;
        NB0CW01.NB0CWSB1 = NB0CW01.NB0CWSB1;
        ;
      end
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* no records found on 1st read*/
        converseLib.validationFailed(59); /* no activity for this account*/
        NB0CW01.NB0CWMAX = 0; /* maximum # records = 0*/
        set NB0CM001.NB0CMBID cursor;
        set NB0CM002.NB0CMBID cursor;
      end
    end
    ;
    NB0CW02.NB0CWSOP = "C1"; /* select option*/
    NB0CW02.NB0CWHDT = 0; /* hi-date*/
    ;
    call "IO2270" (NB0CW02, SQLCA, NB7REC) {isNoRefresh = yes, isExternal = yes}; /* close set*/
    if (SQLCA.VAGen_SQLCODE != +0) /* could not close....*/
      TA1REC.TA1LOCAT[1] = "  ";
      TA1REC.TA1LOCAT[2] = "NB0C200";
    end
  else
    TA1REC.TA1LOCAT[1] = "  ";
    TA1REC.TA1LOCAT[2] = "NB0C200";
  end
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0 /* good return..*/
   || SQLCA.VAGen_SQLCODE == +100) /* end of file*/
     /* everything is fine....*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
    else
      set ERRSQLCA empty;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0C";
      TA1REC.TA1LOCAT[3] = "IO2270 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1LOCAT[4] = "NB0CM001";
      TA1REC.TA1DBASE = "DNBANK.";
      TA1REC.TA1TBLVU = "VNBAUD01";
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      NB0CM001.NB0CMMSG = COMMAREA.CAMSG;
    end
  end
  ;
  if (NB0CW01.NB0CWSB1 > 120) /* max displayable entries*/
    NB0CW01.NB0CWMSW = "Y"; /* max display switch*/
  else
    NB0CW01.NB0CWMSW = "N"; /* max display switch*/
  end
  ;
  ;
  ;
end // end NB0C200

// fill nb7rec key.
Function NB0C201()
  ;
  ;
   /* --------------------------------------------------*/
             /* fill nb0cw02 record*/
   /* --------------------------------------------------*/
  ;
  NB0CW02.NB0CWSOP = "S1"; /* selection option*/
  ;
   /* --------------------------------------------------*/
        /* move w/s to date to w/s ccyymmdd format*/
   /* --------------------------------------------------*/
  ;
  NB0CW01.NB0CWMM = NB0CW01.NB0CWTMM;
  NB0CW01.NB0CWDD = NB0CW01.NB0CWTDD;
  NB0CW01.NB0CWYY = NB0CW01.NB0CWTYY;
  if (NB0CW01.NB0CWTYY <= 51)
    NB0CW01.NB0CWCC = 20;
  else
    NB0CW01.NB0CWCC = 19;
  end
  ;
   /* --------------------------------------------------*/
    /* w/s ccyymmdd format to nb0cw02 record*/
   /* --------------------------------------------------*/
  ;
  NB0CW02.NB0CWHDT = NB0CW01.NB0CWDT; /* hi-date*/
  ;
   /* --------------------------------------------------*/
    /* fill nb7rec key*/
   /* --------------------------------------------------*/
  ;
  NB7REC.NB1CUST = NB0CW01.NB0CWBID; /* bank id - cust*/
  NB7REC.KUMSTRID = NB0CW01.NB0CWBSN; /* bank id - stor*/
  NB7REC.XNXCD = NB0CW01.NB0CWBDC; /* bank id - dept*/
  NB7REC.NB1GRPCD = NB0CW01.NB0CWGRP; /* group code*/
  NB7REC.XDVCD = "01"; /* bank id - division*/
  NB7REC.XBCCD = NB0CW01.XBCCD; /* bank id - brand*/
  ;
  ;
   /* --------------------------------------------------*/
    /* move w/s from date to w/s ccyymmdd format*/
   /* --------------------------------------------------*/
  ;
  NB0CW01.NB0CWMM = NB0CW01.NB0CWFMM;
  NB0CW01.NB0CWDD = NB0CW01.NB0CWFDD;
  NB0CW01.NB0CWYY = NB0CW01.NB0CWFYY;
  if (NB0CW01.NB0CWFYY <= 51)
    NB0CW01.NB0CWCC = 20;
  else
    NB0CW01.NB0CWCC = 19;
  end
  ;
    /* w/s ccyymmdd format to nb7rec*/
  ;
  NB7REC.NB7PRCDT = NB0CW01.NB0CWDT;
  ;
  if (NB0CW01.NB0CWPGM > "  ")
    NB7REC.NB-ADV-PERIOD-CD = NB0CW01.NB0CWPGM;
  else
    NB7REC.NB-ADV-PERIOD-CD = "**"; /* get all ad pgms.*/
  end
  ;
  if (NB0CW01.NB0CWSAC > "  ")
    NB7REC.NB7SUBAC = NB0CW01.NB0CWSAC; /* subaccounts*/
  else
    NB7REC.NB7SUBAC = "**"; /* get all subaccounts.*/
  end
  ;
   /* -----------------------------------------------*/
    /* An originating company must first be entered.*/
    /* Then, if the store or dept were entered, use*/
    /* them in the key, else get all stores/departments.*/
                 /* logic changed - 2/16/88 (ssj)*/
   /* -----------------------------------------------*/
  if (NB0CW01.NB0CWOID > 0) /* originating company id*/
    NB7REC.NB7OCUST = NB0CW01.NB0CWOID;
    ;
    if (NB0CW01.NB0CWOSN >= "   0") /* originating store id*/
      NB0CW01.NB0CWNU1 = NB0CW01.NB0CWOSN; /* convert to num.*/
      NB7REC.NB7OSTOR = NB0CW01.NB0CWNU1;
    else
      NB7REC.NB7OSTOR = -1;
    end
    ;
    if (NB0CW01.NB0CWODC >= "   0") /* originating dept code*/
      NB0CW01.NB0CWNU1 = NB0CW01.NB0CWODC; /* convert to num.*/
      NB7REC.NB7ODEPT = NB0CW01.NB0CWNU1;
    else
      NB7REC.NB7ODEPT = -1;
    end
    ;
    if (NB0CW01.NB0CWOBC > "  ")
      NB7REC.NB7ODIV = "01"; /* division*/
      NB7REC.NB7OBCD = NB0CW01.NB0CWOBC; /* brand*/
    else
      NB7REC.NB7ODIV = "**";
      NB7REC.NB7OBCD = "**";
    end
    ;
    ;
    ;
  else /* get all*/
    NB7REC.NB7OCUST = -1;
    NB7REC.NB7OSTOR = -1;
    NB7REC.NB7ODEPT = -1;
    NB7REC.NB7ODIV = "**"; /* division*/
    NB7REC.NB7OBCD = "**"; /* brand*/
  end
  ;
  ;
  ;
  if (NB0CW01.NB0CWGPC > " ")
    NB7REC.XGPCD = NB0CW01.NB0CWGPC;
  else
    NB7REC.XGPCD = "**";
  end
  ;
  if (NB0CW01.NB0CWRSN > " ")
    NB7REC.YCRCD = NB0CW01.NB0CWRSN;
  else
    NB7REC.YCRCD = "***";
  end
  ;
   /* --------------------------------------------------*/
      /* ****  reference number  ******/
   /* --------------------------------------------------*/
  ;
  if (NB0CW01.NB0CWREF > 0)
    if (NB0CW01.NB0CWRF2 == "T")
      NB7REC.NB4XREF = NB0CW01.NB0CWREF; /* transfer*/
      NB7REC.IV0IVCID = -1; /* invoice*/
      NB7REC.CLACLMNB = -1; /* claim*/
    else
      if (NB0CW01.NB0CWRF2 == "I")
        NB7REC.NB4XREF = -1; /* transfer #*/
        NB7REC.IV0IVCID = NB0CW01.NB0CWREF; /* invoice#*/
        NB7REC.CLACLMNB = -1; /* claim #*/
      else
        NB7REC.NB4XREF = -1; /* transfer #*/
        NB7REC.IV0IVCID = -1; /* invoice #*/
        NB7REC.CLACLMNB = NB0CW01.NB0CWREF; /* claim*/
      end
    end
  else
    NB7REC.NB4XREF = -1; /* transfer*/
    NB7REC.IV0IVCID = -1; /* invoice*/
    NB7REC.CLACLMNB = -1; /* claim*/
  end
  ;
  ;
  ;
  if (NB0CW01.NB0CWOT > " ")
    NB7REC.XOTCD = NB0CW01.NB0CWOT;
  else
    NB7REC.XOTCD = "**";
  end
  ;
  if (NB0CW01.NB0CWGL > " ")
    NB7REC.GLCD = NB0CW01.NB0CWGL;
  else
    NB7REC.GLCD = "***";
  end
  ;
  if (NB0CW01.NB0CWAL > 0)
    NB7REC.YCPCD = NB0CW01.NB0CWAL;
  else
    NB7REC.YCPCD = -1;
  end
  ;
  NB7REC.SP1ID = NB0CW01.NB0CWSPM;
  ;
end // end NB0C201

// select next nb7rec & load w/s.
Function NB0C210()
  ;
  ;
    /* ***************************************************/
    /* *  purpose:  get next nb7rec                     **/
    /* ***************************************************/
  ;
    /* ****************************************************/
    /* * NB0cW01.NB0cWSB1 = POSITION IN ARRAY BEING LOADED*/
    /* ****************************************************/
  ;
  set SQLCA empty;
  ;
  NB0CW02.NB0CWSOP = "N1"; /* select option*/
  ;
  call "IO2270" (NB0CW02, SQLCA, NB7REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    if (NB0CW01.NB0CWSB1 < 121)
                                   /* can only retrive 121 records into w/s*/
      NB0CW01.NB0CWSL1[NB0CWSB1] = " ";
      NB0CW01.NB0CWSL2[NB0CWSB1] = " ";
      ;
         /* ****  invoice record *****/
      ;
      /* IF NB7REC.YCRCD = 'INV';*/
      if (NB7REC.IV0IVCID > 0)
        NB0CW01.NB0CWOR1[NB0CWSB1] = NB7REC.IV0IVCID; /* ref #*/
        NB0CW01.NB0CWOR2[NB0CWSB1] = NB7REC.IV0IVCID;
        NB0CW01.NB0CWOT2[NB0CWSB1] = NB7REC.IV0IVCDT; /* date*/
      else
        ;
           /* ****  transfer record  ***/
        ;
        if (NB7REC.YCRCD == "XFR")
          NB0CW01.NB0CWOR1[NB0CWSB1] = NB7REC.NB4XREF; /* ref #*/
          NB0CW01.NB0CWOR2[NB0CWSB1] = NB7REC.NB4XREF;
          NB0CW01.NB0CWOT2[NB0CWSB1] = NB7REC.NB7XRFDT; /* date*/
        else
          ;
             /* ****  claim   record *****/
          ;
          NB0CW01.NB0CWOR1[NB0CWSB1] = NB7REC.CLACLMNB; /* ref #*/
          NB0CW01.NB0CWOR2[NB0CWSB1] = NB7REC.CLACLMNB;
          NB0CW01.NB0CWOT2[NB0CWSB1] = NB7REC.CLASTTDT; /* date*/
        end
      end
      ;
        /* -----------------------------------------------*/
       /* NOTE: the map fields nb0cwsq1 & 2 were designed*/
       /* to hold sequence numbers.  this was modified to*/
       /* display ad pgm for greater user flex.  2/25/88 (ssj)*/
        /* -----------------------------------------------*/
      ;
      NB0CW01.NB0CWSQ1[NB0CWSB1] = NB7REC.NB-ADV-PERIOD-CD;
      NB0CW01.NB0CWSQ2[NB0CWSB1] = NB7REC.NB-ADV-PERIOD-CD;
      ;
      NB0CW01.NB0CWYD1[NB0CWSB1] = NB7REC.YCRCD;
      NB0CW01.NB0CWYD2[NB0CWSB1] = NB7REC.YCRCD;
      ;
      NB0CW01.NB0CWXD1[NB0CWSB1] = NB7REC.XOTCD;
      NB0CW01.NB0CWXD2[NB0CWSB1] = NB7REC.XOTCD;
      ;
      NB0CW01.NB0CWPD1[NB0CWSB1] = NB7REC.NB7PRCDT;
      NB7REC.NB7SUBAC = NB7REC.NB7SUBAC; /* test*/
      NB0CW01.NB7SUBAC[NB0CWSB1] = NB7REC.NB7SUBAC;
                                   /* subacct (spgm)*/
      ;
      NB0CW01.NB0CWCT1[NB0CWSB1] = NB7REC.NB7OCUST;
      NB0CW01.NB0CWST1[NB0CWSB1] = NB7REC.NB7OSTOR;
      NB0CW01.NB0CWDP1[NB0CWSB1] = NB7REC.NB7ODEPT;
      NB0CW01.NB0CWOBC[NB0CWSB1] = NB7REC.NB7OBCD; /* brand*/
      NB0CW01.NB0CWGP1[NB0CWSB1] = NB7REC.XGPCD;
      ;
      NB0CW01.NB0CWGL2[NB0CWSB1] = NB7REC.GLCD;
      NB0CW01.NB0CWIE2[NB0CWSB1] = NB7REC.XIECD;
      NB0CW01.NB0CWCP2[NB0CWSB1] = NB7REC.YCPCD;
      ;
      NB0CW01.NB0CWTA1[NB0CWSB1] = NB7REC.NB4TRAMT;
      NB0CW01.NB0CWTA2[NB0CWSB1] = NB7REC.NB4TRAMT;
      ;
      NB0CW01.NB0CWPB1[NB0CWSB1] = NB7REC.NB4PRBAL;
      NB0CW01.NB0CWPB2[NB0CWSB1] = NB7REC.NB4PRBAL;
      ;
      NB0CW01.NB0CWSB1 = NB0CW01.NB0CWSB1 + 1; /* bump up subscript*/
    else
      NB0CW01.NB0CWMAX = 120;
    end
    ;
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* not found, no more records*/
      ;
      if (NB0CW01.NB0CWSB1 > 1) /* we are past the first valid entry*/
        NB0CW01.NB0CWMAX = NB0CW01.NB0CWSB1 - 1;
                                   /* array's last valid entry*/
      end
      ;
      if (NB0CW01.NB0CWMAX > 120) /* max displayable*/
        NB0CW01.NB0CWMAX = 120;
      end
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
      else
        set TA1REC empty;
        set ERRSQLCA empty;
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0C";
        TA1REC.TA1LOCAT[1] = "  ";
        TA1REC.TA1LOCAT[2] = "NB0C210";
        TA1REC.TA1LOCAT[3] = "IO2270 ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1LOCAT[4] = "NB0CM001";
        TA1REC.TA1DBASE = "DNBANK.";
        TA1REC.TA1TBLVU = "VNBAUD01";
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        XSPF4();
      end
    end
  end
  ;
  ;
  ;
end // end NB0C210

// format and load screens 1 & 2.
Function NB0C300()
  ;
  ;
   /* *************************************************************/
   /* * NB0CW01.NB0CWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0CW01.NB0CWSB1 = location in working storage of the    **/
   /* *                    current line being loaded             **/
   /* * NB0CW01.NB0CWSB2 = location on the map of the current    **/
   /* *                    line being loaded                     **/
   /* * NB0CW01.NB0CWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
  ;
  NB0CW01.NB0CWSB1 = NB0CW01.NB0CWTOP; /* w/s subscript*/
  NB0CW01.NB0CWSB2 = 1; /* screen subscript*/
  ;
  while (NB0CW01.NB0CWSB2 <= 12)
    if (NB0CW01.NB0CWSB1 <= NB0CW01.NB0CWMAX)
      NB0CM001.NB0CMSEL[NB0CWSB2] = NB0CW01.NB0CWSL1[NB0CWSB1];
      NB0CM002.NB0CMSEL[NB0CWSB2] = NB0CW01.NB0CWSL2[NB0CWSB1];
      ;
      if (NB0CW01.NB0CWOR1[NB0CWSB1] > 0)
        NB0CM001.NB0CMORF[NB0CWSB2] = NB0CW01.NB0CWOR1[NB0CWSB1];
        NB0CM002.NB0CMORF[NB0CWSB2] = NB0CW01.NB0CWOR2[NB0CWSB1];
      else
        NB0CM001.NB0CMORF[NB0CWSB2] = "0";
        NB0CM002.NB0CMORF[NB0CWSB2] = "0";
      end
      ;
       /* ---------------------------------------------------*/
      /* NOTE: the nb0cwsq1 & 2 fields in w.s. and on maps 1 & 2*/
      /* were designed to show sequence numbers.  this was modified*/
      /* to show ad program for greater user flex. 2/25/88 (ssj)*/
       /* ---------------------------------------------------*/
      ;
      NB0CM001.NB4XSEQ[NB0CWSB2] = NB0CW01.NB0CWSQ1[NB0CWSB1];
      NB0CM002.NB4XSEQ[NB0CWSB2] = NB0CW01.NB0CWSQ2[NB0CWSB1];
      ;
      NB0CM001.YCRCD[NB0CWSB2] = NB0CW01.NB0CWYD1[NB0CWSB1];
      NB0CM002.YCRCD[NB0CWSB2] = NB0CW01.NB0CWYD2[NB0CWSB1];
      ;
      NB0CM001.XOTCD[NB0CWSB2] = NB0CW01.NB0CWXD1[NB0CWSB1];
      NB0CM002.XOTCD[NB0CWSB2] = NB0CW01.NB0CWXD2[NB0CWSB1];
      ;
      NB0CM001.NB7PRCDT[NB0CWSB2] = NB0CW01.NB0CWPD1[NB0CWSB1];
      NB0CM002.NB7SUBAC[NB0CWSB2] = NB0CW01.NB7SUBAC[NB0CWSB1];
                                   /* spgm*/
      ;
      if (NB0CW01.NB0CWCT1[NB0CWSB1] > 0)
        NB0CM001.NB7OCUST[NB0CWSB2] = NB0CW01.NB0CWCT1[NB0CWSB1];
      else
        NB0CM001.NB7OCUST[NB0CWSB2] = "0";
      end
      ;
      if (NB0CW01.NB0CWST1[NB0CWSB1] > 0)
        NB0CM001.NB7OSTOR[NB0CWSB2] = NB0CW01.NB0CWST1[NB0CWSB1];
      else
        NB0CM001.NB7OSTOR[NB0CWSB2] = "0";
      end
      ;
      if (NB0CW01.NB0CWDP1[NB0CWSB1] > 0)
        NB0CM001.NB7ODEPT[NB0CWSB2] = NB0CW01.NB0CWDP1[NB0CWSB1];
      else
        NB0CM001.NB7ODEPT[NB0CWSB2] = "0";
      end
      ;
      if (NB0CW01.NB0CWOBC[NB0CWSB1] > "  ") /* brand*/
        NB0CM001.NB7OBCD[NB0CWSB2] = NB0CW01.NB0CWOBC[NB0CWSB1];
      else
        NB0CM001.NB7OBCD[NB0CWSB2] = "  ";
      end
      ;
      NB0CM001.XGPCD[NB0CWSB2] = NB0CW01.NB0CWGP1[NB0CWSB1];
      ;
      NB0CM002.GLCD[NB0CWSB2] = NB0CW01.NB0CWGL2[NB0CWSB1];
      NB0CM002.XIECD[NB0CWSB2] = NB0CW01.NB0CWIE2[NB0CWSB1];
      NB0CM002.YCPCD[NB0CWSB2] = NB0CW01.NB0CWCP2[NB0CWSB1];
      NB0CM002.NB0CMOTD[NB0CWSB2] = NB0CW01.NB0CWOT2[NB0CWSB1];
      ;
      NB0CM001.NB4TRAMT[NB0CWSB2] = NB0CW01.NB0CWTA1[NB0CWSB1];
      NB0CM002.NB4TRAMT[NB0CWSB2] = NB0CW01.NB0CWTA2[NB0CWSB1];
      ;
      NB0CM001.NB4PRBAL[NB0CWSB2] = NB0CW01.NB0CWPB1[NB0CWSB1];
      NB0CM002.NB4PRBAL[NB0CWSB2] = NB0CW01.NB0CWPB2[NB0CWSB1];
      ;
    else
       /* handle setting up of blank lines - no more data in array*/
      NB0CM001.NB0CMSEL[NB0CWSB2] = " ";
      NB0CM002.NB0CMSEL[NB0CWSB2] = " ";
      ;
      NB0CM001.NB0CMORF[NB0CWSB2] = " ";
      NB0CM002.NB0CMORF[NB0CWSB2] = " ";
      ;
      NB0CM001.NB4XSEQ[NB0CWSB2] = " ";
      NB0CM002.NB4XSEQ[NB0CWSB2] = " ";
      ;
      NB0CM001.YCRCD[NB0CWSB2] = " ";
      NB0CM002.YCRCD[NB0CWSB2] = " ";
      ;
      NB0CM001.XOTCD[NB0CWSB2] = " ";
      NB0CM002.XOTCD[NB0CWSB2] = " ";
      ;
      NB0CM001.NB7PRCDT[NB0CWSB2] = 0;
      NB0CM002.NB7SUBAC[NB0CWSB2] = " "; /* spgm*/
      ;
      NB0CM001.NB7OCUST[NB0CWSB2] = " ";
      NB0CM001.NB7OSTOR[NB0CWSB2] = " ";
      NB0CM001.NB7ODEPT[NB0CWSB2] = " ";
      NB0CM001.NB7OBCD[NB0CWSB2] = " "; /* brand*/
      NB0CM001.XGPCD[NB0CWSB2] = " ";
      ;
      NB0CM002.GLCD[NB0CWSB2] = " ";
      NB0CM002.XIECD[NB0CWSB2] = " ";
      NB0CM002.YCPCD[NB0CWSB2] = 0;
      NB0CM002.NB0CMOTD[NB0CWSB2] = 0;
      ;
      NB0CM001.NB4TRAMT[NB0CWSB2] = 0;
      NB0CM002.NB4TRAMT[NB0CWSB2] = 0;
      ;
      NB0CM001.NB4PRBAL[NB0CWSB2] = 0;
      NB0CM002.NB4PRBAL[NB0CWSB2] = 0;
      ;
    end
    NB0CW01.NB0CWSB1 = NB0CW01.NB0CWSB1 + 1; /* bump up subscript*/
    NB0CW01.NB0CWSB2 = NB0CW01.NB0CWSB2 + 1; /* bump up subscript*/
  end
  ;
  ;
  ;
end // end NB0C300

// map 1
Function NB0C400()
  converse NB0CM001 ;
  ;
  ;
  ;
end // end NB0C400

// map 2
Function NB0C500()
  ;
  converse NB0CM002 ;
  ;
  ;
  ;
end // end NB0C500

// set attributes defined
Function NB0C550()
  ;
  ;
  set NB0CM001.NB0CMBID initialAttributes;
  set NB0CM001.NB0CMBSN initialAttributes;
  set NB0CM001.NB0CMBDC initialAttributes;
  set NB0CM001.NB0CMGRP initialAttributes;
  set NB0CM001.NB0CMFDT initialAttributes;
  set NB0CM001.NB0CMTDT initialAttributes;
  set NB0CM001.NB0CMPGM initialAttributes;
  set NB0CM001.NB0CMOID initialAttributes;
  set NB0CM001.NB0CMOSN initialAttributes;
  set NB0CM001.NB0CMODC initialAttributes;
  set NB0CM001.NB0CMGPC initialAttributes;
  set NB0CM001.NB0CMRSN initialAttributes;
  set NB0CM001.NB0CMREF initialAttributes;
  set NB0CM001.NB0CMRF2 initialAttributes; /* reference source*/
  set NB0CM001.NB0CMOT initialAttributes;
  set NB0CM001.NB0CMGL initialAttributes;
  set NB0CM001.NB0CMSPM initialAttributes;
   /* SET NB0CM001.NB0CMAL DEFINED; analyst code*/
  set NB0CM002.NB0CMBID initialAttributes;
  set NB0CM002.NB0CMBSN initialAttributes;
  set NB0CM002.NB0CMBDC initialAttributes;
  set NB0CM002.NB0CMGRP initialAttributes;
  set NB0CM002.NB0CMFDT initialAttributes;
  set NB0CM002.NB0CMTDT initialAttributes;
  set NB0CM002.NB0CMPGM initialAttributes;
  set NB0CM002.NB0CMOID initialAttributes;
  set NB0CM002.NB0CMOSN initialAttributes;
  set NB0CM002.NB0CMODC initialAttributes;
  set NB0CM002.NB0CMGPC initialAttributes;
  set NB0CM002.NB0CMRSN initialAttributes;
  set NB0CM002.NB0CMREF initialAttributes;
  set NB0CM002.NB0CMRF2 initialAttributes; /* reference source*/
  set NB0CM002.NB0CMOT initialAttributes;
  set NB0CM002.NB0CMGL initialAttributes;
  set NB0CM002.NB0CMSPM initialAttributes;
   /* SET NB0CM002.NB0CMAL DEFINED; analyst code*/
  ;
  NB0CW01.NB0CWSB2 = 12;
  ;
  while (NB0CW01.NB0CWSB2 >= 1)
    set NB0CM001.NB0CMSEL[NB0CWSB2] cursor, initialAttributes;
    set NB0CM002.NB0CMSEL[NB0CWSB2] cursor, initialAttributes;
    NB0CW01.NB0CWSB2 = NB0CW01.NB0CWSB2 - 1;
  end
  ;
  ;
  ;
end // end NB0C550

// echo changes
Function NB0C575()
  ;
  ;
   /* ---------  default to a division of '01'(domestic)*/
  ;
  if (NB0CW01.NB0CWSSW == 1)
    if (NB0CM001.XBCCD == "  ")
      NB0CM001.XBCCD = "01";
    end
  else
    if (NB0CM002.XBCCD == "  ")
      NB0CM002.XBCCD = "01";
    end
  end
  ;
  ;
  ;
  if (NB0CW01.NB0CWSSW == 1)
    NB0CM002.NB0CMBID = NB0CM001.NB0CMBID;
    NB0CM002.NB0CMBSN = NB0CM001.NB0CMBSN;
    NB0CM002.NB0CMBDC = NB0CM001.NB0CMBDC;
    NB0CM002.NB0CMGRP = NB0CM001.NB0CMGRP;
    NB0CM002.NB0CMFDT = NB0CM001.NB0CMFDT;
    NB0CM002.NB0CMTDT = NB0CM001.NB0CMTDT;
    NB0CM002.NB0CMPGM = NB0CM001.NB0CMPGM;
    NB0CM002.NB0CMOID = NB0CM001.NB0CMOID;
    NB0CM002.NB0CMOSN = NB0CM001.NB0CMOSN;
    NB0CM002.NB0CMODC = NB0CM001.NB0CMODC;
    NB0CM002.NB0CMGPC = NB0CM001.NB0CMGPC;
    NB0CM002.NB0CMRSN = NB0CM001.NB0CMRSN;
    NB0CM002.NB0CMREF = NB0CM001.NB0CMREF;
    NB0CM002.NB0CMRF2 = NB0CM001.NB0CMRF2; /* reference source*/
    NB0CM002.NB0CMOT = NB0CM001.NB0CMOT;
    NB0CM002.NB0CMGL = NB0CM001.NB0CMGL;
    NB0CM002.NB0CMSPM = NB0CM001.NB0CMSPM;
    /* MOVE NB0CM001.NB0CMAL TO NB0CM002.NB0CMAL; analyst code*/
  else
    NB0CM001.NB0CMBID = NB0CM002.NB0CMBID;
    NB0CM001.NB0CMBSN = NB0CM002.NB0CMBSN;
    NB0CM001.NB0CMBDC = NB0CM002.NB0CMBDC;
    NB0CM001.NB0CMGRP = NB0CM002.NB0CMGRP;
    NB0CM001.NB0CMFDT = NB0CM002.NB0CMFDT;
    NB0CM001.NB0CMTDT = NB0CM002.NB0CMTDT;
    NB0CM001.NB0CMPGM = NB0CM002.NB0CMPGM;
    NB0CM001.NB0CMOID = NB0CM002.NB0CMOID;
    NB0CM001.NB0CMOSN = NB0CM002.NB0CMOSN;
    NB0CM001.NB0CMODC = NB0CM002.NB0CMODC;
    NB0CM001.NB0CMGPC = NB0CM002.NB0CMGPC;
    NB0CM001.NB0CMRSN = NB0CM002.NB0CMRSN;
    NB0CM001.NB0CMREF = NB0CM002.NB0CMREF;
    NB0CM001.NB0CMRF2 = NB0CM002.NB0CMRF2; /* reference source*/
    NB0CM001.NB0CMOT = NB0CM002.NB0CMOT;
    NB0CM001.NB0CMGL = NB0CM002.NB0CMGL;
    NB0CM001.NB0CMSPM = NB0CM002.NB0CMSPM;
    /* MOVE NB0CM002.NB0CMAL TO NB0CM001.NB0CMAL; analyst code*/
  end
  ;
  ;
  ;
  ;
  ;
  NB0CW01.NB0CWSB2 = 1;
  ;
  while (NB0CW01.NB0CWSB2 <= 12)
    if (NB0CW01.NB0CWSSW == 1)
      NB0CM002.NB0CMSEL[NB0CWSB2] = NB0CM001.NB0CMSEL[NB0CWSB2];
    else
      NB0CM001.NB0CMSEL[NB0CWSB2] = NB0CM002.NB0CMSEL[NB0CWSB2];
    end
    NB0CW01.NB0CWSB2 = NB0CW01.NB0CWSB2 + 1;
  end
  ;
  ;
  ;
end // end NB0C575

// attention key processing
Function NB0C600()
  ;
  ;
         /* *****************************************************/
         /* * fast path request terminates all processing.(ssj)**/
         /* *****************************************************/
  ;
  if (NB0CW01.NB0CWSSW == 1 /* screen 1*/
   && NB0CM001.CATOAP > " ") /* request of fast path*/
    COMMAREA.CATOAP = NB0CM001.CATOAP;
    COMMAREA.CAITEM = NB0CM001.CAITEM;
    COMMAREA.CAFROMAP = "NB0C";
    XSEXIT();
    ;
     /* --- you should never get here!!!*/
    NB0CM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* returned error msg.*/
    converseLib.validationFailed();
                                   /* force alarm to sound*/
    exit stack;
  end
  ;
  ;
  ;
  if (NB0CW01.NB0CWSSW == 2 /* screen 2*/
   && NB0CM002.CATOAP > " ") /* request of fast path*/
    COMMAREA.CATOAP = NB0CM002.CATOAP;
    COMMAREA.CAITEM = NB0CM002.CAITEM;
    COMMAREA.CAFROMAP = "NB0C";
    XSEXIT();
    ;
     /* --- you should never get here!!!*/
    NB0CM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* returned error msg.*/
    converseLib.validationFailed();
                                   /* force alarm to sound*/
    exit stack;
  end
  ;
  ;
  ;
         /* *****************************************************/
         /* * check and process valid pf key requests          **/
         /* *                                                  **/
         /* *   pa2 - refresh the map                          **/
         /* *   pf1 - transfer to help application             **/
         /* *   pf3 - transfer to nike bank menu               **/
         /* *   pf4 - transfer to master menu application      **/
         /* *   pf13- transfer to acct.summary          NB0G   **/
         /* *   pf14- transfer to account balance appl. NB0A   **/
         /* *   pf16- transfer to customer              nb0b   **/
         /* *   pf18- transfer to fund transfer         NB0d   **/
         /* *   pf20- transfer to group descriptions    NB0e   **/
         /* *   pf21- transfer to group member          NB0f   **/
         /* *****************************************************/
  ;
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf5 /* detail/orig store*/
   || converseVar.eventKey is pf7 /* scroll back*/
   || converseVar.eventKey is pf8) /* scroll forward*/
    return;
  else
    if (converseVar.eventKey is pa2
     || converseVar.eventKey is pf1
     || converseVar.eventKey is pf3
     || converseVar.eventKey is pf4
     || converseVar.eventKey is pf13
     || converseVar.eventKey is pf14
     || converseVar.eventKey is pf16
     || converseVar.eventKey is pf18
     || converseVar.eventKey is pf20
     || converseVar.eventKey is pf21)
         /* all ok.*/
    else
      converseLib.validationFailed(3); /* invalid pf key used*/
      if (NB0CW01.NB0CWSSW == 1)
        set NB0CM001.NB0CMBID cursor;
        exit stack;
      else
        set NB0CM002.NB0CMBID cursor;
        exit stack;
      end
    end
  end
  ;
  ;
  if (converseVar.eventKey is pa2)
    NB0C015(); /* set attributes defined*/
    NB0C610(); /* refresh screen from w/s*/
    return;
  end
  ;
  ;
  if (converseVar.eventKey is pf1) /* check for system help*/
    XSPF1(); /* help facility*/
  end
  ;
  ;
  if (converseVar.eventKey is pf3) /* check for nike bank menu level*/
    COMMAREA.CAITEM = " "; /* clear old key data*/
    COMMAREA.CATOAP = "NB0M"; /* invoke nike bank menu*/
    COMMAREA.CAFROMAP = "NB0C";
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf4) /* check for master menu*/
    COMMAREA.CAITEM = " "; /* clear old key data*/
    COMMAREA.CATOAP = "MN0M"; /* invoke master menu request*/
    COMMAREA.CAFROMAP = "NB0C"; /* invoke master menu request*/
    XSPF4(); /* invoke master menu request*/
  end
  ;
  ;
  if (converseVar.eventKey is pf13) /* check for acct.summary transfer*/
    NB0C620(); /* set up transfer key*/
    COMMAREA.CATOAP = "NB0G";
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf14) /* check for acct.balance transfer*/
    NB0C620(); /* set up transfer key*/
    COMMAREA.CATOAP = "NB0A";
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf16) /* customer nb0b*/
    NB0C620(); /* set up transfer key*/
    COMMAREA.CATOAP = "NB0B";
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf18) /* transfer nb0d*/
    NB0C620(); /* set up transfer key*/
    COMMAREA.CATOAP = "NB0D";
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf20) /* group desc. nb0e*/
    NB0C620(); /* set up transfer key*/
    COMMAREA.CATOAP = "NB0E";
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf21) /* group member nb0f*/
    NB0C620(); /* set up transfer key*/
    COMMAREA.CATOAP = "NB0F";
    XSEXIT();
  end
  ;
  ;
  ;
end // end NB0C600

// refresh key & secondary key
Function NB0C610()
  ;
  ;
  NB0CM001.NB0CMBID = NB0CW01.NB0CWBID;
  NB0CM002.NB0CMBID = NB0CW01.NB0CWBID;
  NB0CM001.NB0CMBSN = NB0CW01.NB0CWBSN;
  NB0CM002.NB0CMBSN = NB0CW01.NB0CWBSN;
  NB0CM001.NB0CMBDC = NB0CW01.NB0CWBDC;
  NB0CM002.NB0CMBDC = NB0CW01.NB0CWBDC;
  NB0CM001.NB0CMGRP = NB0CW01.NB0CWGRP;
  NB0CM002.NB0CMGRP = NB0CW01.NB0CWGRP;
  NB0CM001.XBCCD = NB0CW01.XBCCD; /* brand*/
  NB0CM002.XBCCD = NB0CW01.XBCCD; /* brand*/
  NB0CM001.NB0CMFDT = NB0CW01.NB0CWFDT;
  NB0CM002.NB0CMFDT = NB0CW01.NB0CWFDT;
  NB0CM001.NB0CMTDT = NB0CW01.NB0CWTDT;
  NB0CM002.NB0CMTDT = NB0CW01.NB0CWTDT;
  NB0CM001.NB0CMPGM = NB0CW01.NB0CWPGM;
  NB0CM002.NB0CMPGM = NB0CW01.NB0CWPGM;
  NB0CM001.NB0CMOID = NB0CW01.NB0CWOID;
  NB0CM002.NB0CMOID = NB0CW01.NB0CWOID;
  NB0CM001.NB0CMOSN = NB0CW01.NB0CWOSN;
  NB0CM002.NB0CMOSN = NB0CW01.NB0CWOSN;
  NB0CM001.NB0CMODC = NB0CW01.NB0CWODC;
  NB0CM002.NB0CMODC = NB0CW01.NB0CWODC;
  NB0CM001.NB0CMGPC = NB0CW01.NB0CWGPC;
  NB0CM002.NB0CMGPC = NB0CW01.NB0CWGPC;
  NB0CM001.NB0CMRSN = NB0CW01.NB0CWRSN;
  NB0CM002.NB0CMRSN = NB0CW01.NB0CWRSN;
  NB0CM001.NB0CMREF = NB0CW01.NB0CWREF;
  NB0CM002.NB0CMREF = NB0CW01.NB0CWREF;
  NB0CM001.NB0CMRF2 = NB0CW01.NB0CWRF2; /* reference source*/
  NB0CM002.NB0CMRF2 = NB0CW01.NB0CWRF2; /* reference source*/
  NB0CM001.NB0CMOT = NB0CW01.NB0CWOT;
  NB0CM002.NB0CMOT = NB0CW01.NB0CWOT;
  NB0CM001.NB0CMGL = NB0CW01.NB0CWGL;
  NB0CM002.NB0CMGL = NB0CW01.NB0CWGL;
  NB0CM001.NB0CMSPM = NB0CW01.NB0CWSPM;
  NB0CM002.NB0CMSPM = NB0CW01.NB0CWSPM;
   /* MOVE NB0CW01.NB0CWAL TO NB0CM001.NB0CMAL; analyst key*/
   /* MOVE NB0CW01.NB0CWAL TO NB0CM002.NB0CMAL; analyst key*/
  ;
  ;
  ;
  ;
end // end NB0C610

// transfer out of app.with key.
Function NB0C620()
  ;
  ;
  ;
  if (NB0CW01.NB0CWSSW == 1) /* viewing first screen*/
    NB0CW01.NB0CWCCO = NB0CM001.NB0CMBID; /* save company*/
    NB0CW01.NB0CWCST = NB0CM001.NB0CMBSN; /* save store*/
    NB0CW01.NB0CWCDP = NB0CM001.NB0CMBDC; /* save dpt*/
    NB0CW01.NB0CWCGP = NB0CM001.NB0CMGRP; /* save group*/
    NB0CW01.NB0CWBCD = NB0CM001.XBCCD; /* save brand*/
    ;
    COMMAREA.CAITEM = NB0CW01.NB0CWCAI; /* move key to comm*/
    COMMAREA.CAFROMAP = "NB0C";
  end
  ;
  ;
  ;
  if (NB0CW01.NB0CWSSW == 2) /* viewing first screen*/
    NB0CW01.NB0CWCCO = NB0CM002.NB0CMBID; /* save company*/
    NB0CW01.NB0CWCST = NB0CM002.NB0CMBSN; /* save store*/
    NB0CW01.NB0CWCDP = NB0CM002.NB0CMBDC; /* save dpt*/
    NB0CW01.NB0CWCGP = NB0CM002.NB0CMGRP; /* save group*/
    NB0CW01.NB0CWBCD = NB0CM002.XBCCD; /* save brand*/
    ;
    COMMAREA.CAITEM = NB0CW01.NB0CWCAI; /* move key to comm*/
    COMMAREA.CAFROMAP = "NB0C";
  end
  ;
  ;
  ;
end // end NB0C620

// 's' editing process
Function NB0C650()
  ;
  ;
   /* *************************************************************/
   /* * NB0CW01.NB0CWSB2 = location on the map of the current    **/
   /* *                    line being edited for a select        **/
   /* *************************************************************/
  ;
  NB0CW01.NB0CWSB2 = 12;
  NB0CW01.NB0CWFL2 = "N"; /* selection requested*/
  ;
  while (NB0CW01.NB0CWSB2 >= 1)
    if (NB0CW01.NB0CWSSW == 1)
      if (NB0CM001.NB0CMSEL[NB0CWSB2] == "S")
        if (NB0CM001.NB0CMORF[NB0CWSB2] > "0")
          NB0CW01.NB0CWFL2 = "Y"; /* selection requested*/
          NB0CM002.NB0CMSEL[NB0CWSB2] = "S";
        else
          set NB0CM001.NB0CMSEL[NB0CWSB2] cursor, modified, bold;
          set NB0CM002.NB0CMSEL[NB0CWSB2] cursor, modified, bold;
                 /* MOVE 'S' TO NB0CM002.NB0CMSEL(NB0CWSB2);*/
          converseLib.validationFailed(80); /* can't select if ref # is zero*/
        end
      end
      if (NB0CM001.NB0CMSEL[NB0CWSB2] == " "
       || NB0CM001.NB0CMSEL[NB0CWSB2] == "S"
       || NB0CM001.NB0CMSEL[NB0CWSB2] == "V")
         /* do nothing - valid selection*/
      else
        converseLib.validationFailed(2); /* invalid selection*/
        set NB0CM001.NB0CMSEL[NB0CWSB2] cursor, modified, bold;
        set NB0CM002.NB0CMSEL[NB0CWSB2] cursor, modified, bold;
        /* MOVE NB0CM001.NB0CMSEL(NB0CWSB2) TO NB0CM002.*/
      end
    else
      if (NB0CM002.NB0CMSEL[NB0CWSB2] == "S")
        if (NB0CM002.NB0CMORF[NB0CWSB2] > "0")
          NB0CW01.NB0CWFL2 = "Y"; /* selection requested*/
                 /* MOVE 'S' TO NB0CM001.NB0CMSEL(NB0CWSB2);*/
        else
          set NB0CM002.NB0CMSEL[NB0CWSB2] cursor, modified, bold;
          set NB0CM001.NB0CMSEL[NB0CWSB2] cursor, modified, bold;
                 /* MOVE 'S' TO NB0CM001.NB0CMSEL(NB0CWSB2);*/
          converseLib.validationFailed(80); /* can't select if ref # is zero*/
        end
      end
      if (NB0CM002.NB0CMSEL[NB0CWSB2] == " "
       || NB0CM002.NB0CMSEL[NB0CWSB2] == "S"
       || NB0CM002.NB0CMSEL[NB0CWSB2] == "V")
         /* do nothing - valid selection*/
      else
        converseLib.validationFailed(2); /* invalid selection*/
        set NB0CM002.NB0CMSEL[NB0CWSB2] cursor, modified, bold;
        set NB0CM001.NB0CMSEL[NB0CWSB2] cursor, modified, bold;
        /* MOVE NB0CM001.NB0CMSEL(NB0CWSB2) TO NB0CM002.NB0CMSEL(NB0CWS*/
      end
    end
    NB0CW01.NB0CWSB2 = NB0CW01.NB0CWSB2 - 1; /* subtract 1 from subscript*/
  end
  ;
  ;
  ;
end // end NB0C650

// scrolling pointer seting(ssj)
Function NB0C700()
  ;
  ;
         /* *****************************/
         /* *   pf7 - scroll back      **/
         /* *   pf8 - scroll forward   **/
         /* *****************************/
  ;
  if (converseVar.eventKey is pf7)
    if (NB0CW01.NB0CWTOP == 1)
      converseLib.validationFailed(20); /* no more back scrolling possible*/
    else
      if (NB0CW01.NB0CWTOP <= 12)
        NB0CW01.NB0CWTOP = 1; /* set top of screen to 1*/
        NB0CW01.NB0CWFL1 = "Y"; /* scrolling requested*/
      else
        NB0CW01.NB0CWTOP = NB0CW01.NB0CWTOP - 12;
        NB0CW01.NB0CWFL1 = "Y"; /* scrolling requested*/
      end
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf8)
    NB0CW01.NB0CWNUM = 11;
    NB0CW01.NB0CWNUM = NB0CW01.NB0CWNUM + NB0CW01.NB0CWTOP;
    if (NB0CW01.NB0CWNUM < NB0CW01.NB0CWMAX)
      NB0CW01.NB0CWTOP = NB0CW01.NB0CWTOP + 12;
      NB0CW01.NB0CWFL1 = "Y"; /* scrolling requested*/
    else
      if (NB0CW01.NB0CWMSW == "Y") /* max displayable entries*/
        converseLib.validationFailed(61); /* additional related entries*/
      else
        converseLib.validationFailed(21); /* no forward scrolling*/
      end
    end
     /* END ;*/
  end
  ;
  ;
  ;
  ;
  ;
end // end NB0C700

// map 3 processing.
Function NB0C800()
  ;
  ;
     /* **********************************************************/
     /* * this process main control loop the map 3 processing   **/
     /* **********************************************************/
  ;
   /* *************************************************************/
   /* * NB0CW01.NB0CWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0CW01.NB0CWSB1 = location in working storage of the    **/
   /* *                    current line being selected           **/
   /* * NB0CW01.NB0CWSB2 = location on the map of the current    **/
   /* *                    line being selected                   **/
   /* * NB0CW01.NB0CWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
  NB0CW01.NB0CWSFL = "N"; /* select flag*/
  NB0CW01.NB0CWSB2 = 1; /* set screen subscript to 1*/
  NB0CW01.NB0CWSB1 = NB0CW01.NB0CWTOP; /* set w/s sub*/
  ;
  while (NB0CW01.NB0CWSB2 <= 12
   && NB0CW01.NB0CWSFL == "N") /* select flag eq no*/
    if (NB0CW01.NB0CWSSW == 1) /* screen dispaly switch*/
      if (NB0CM001.NB0CMSEL[NB0CWSB2] == "S")
        NB0CW01.NB0CWSFL = "Y"; /* select flag*/
      else
        NB0CW01.NB0CWSB1 = NB0CW01.NB0CWSB1 + 1; /* bump w/s subscript*/
        NB0CW01.NB0CWSB2 = NB0CW01.NB0CWSB2 + 1; /* bump screen subscript*/
      end
    else
      if (NB0CM002.NB0CMSEL[NB0CWSB2] == "S")
        NB0CW01.NB0CWSFL = "Y"; /* select flag*/
      else
        NB0CW01.NB0CWSB1 = NB0CW01.NB0CWSB1 + 1; /* bump w/s subscript*/
        NB0CW01.NB0CWSB2 = NB0CW01.NB0CWSB2 + 1; /* bump screen subscript*/
      end
    end
  end
  ;
  if (NB0CW01.NB0CWSFL == "Y")
    ;
    set NB0CM003 empty;
    ;
    if (NB0CW01.NB0CWSSW == 1) /* screen display switch*/
      NB0CM003.NB0CMORF = NB0CM001.NB0CMORF[NB0CWSB2];
    else
      NB0CM003.NB0CMORF = NB0CM002.NB0CMORF[NB0CWSB2];
    end
    ;
    NB0CM003.NB0CMDTE = VGVar.currentShortGregorianDate;
    NB0CM003.NB0CMREV = "01";
    NB0CM003.NB0CMPRO = "NB0C800";
    ;
    NB0C810(); /* format & load screen 3*/
    NB0CM001.NB0CMSEL[NB0CWSB2] = "V"; /* move v to screen*/
    NB0CM002.NB0CMSEL[NB0CWSB2] = "V";
    NB0CW01.NB0CWSL1[NB0CWSB1] = "V"; /* move v to w/s*/
    NB0CW01.NB0CWSL2[NB0CWSB1] = "V";
  else
    converseLib.validationFailed(64); /* all selections processed - pf3*/
    NB0CW01.NB0CWFL2 = "N"; /* selection requested flag*/
  end
  ;
  NB0C900(); /* converse map 3*/
  ;
  ;
  ;
  ;
end // end NB0C800

// format and load map 3
Function NB0C810()
  ;
  ;
  NB0C815(); /* fill nb0c02 & nb7rec key*/
  ;
  call "IO2270" (NB0CW02, SQLCA, NB7REC) {isNoRefresh = yes, isExternal = yes}; /* get set of nb7rec*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    NB0CW01.NB0CWSB4 = 1; /* initialize subscript.*/
    NB0C820(); /* get first nb7rec*/
    if (SQLCA.VAGen_SQLCODE == +0)
      while (SQLCA.VAGen_SQLCODE == +0
       && NB0CW01.NB0CWSB4 <= 15) /* max of 14 in w.s. + 15th to set*/
                                   /* switch*/
        NB0C820(); /* continue to get nb7rec's*/
      end
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* no records found on 1st read*/
        converseLib.validationFailed(59); /* no activity for this account*/
      end
    end
    ;
    NB0CW02.NB0CWSOP = "C1"; /* select option*/
    ;
    call "IO2270" (NB0CW02, SQLCA, NB7REC) {isNoRefresh = yes, isExternal = yes}; /* close set*/
    if (SQLCA.VAGen_SQLCODE != +0) /* could not close....*/
      TA1REC.TA1LOCAT[1] = "  ";
      TA1REC.TA1LOCAT[2] = "NB0C810";
    end
  else
    TA1REC.TA1LOCAT[1] = "  ";
    TA1REC.TA1LOCAT[2] = "NB0C800";
  end
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0 /* good return..*/
   || SQLCA.VAGen_SQLCODE == +100) /* end of file*/
     /* everything is fine....*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
    else
      set ERRSQLCA empty;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0C";
      TA1REC.TA1LOCAT[3] = "IO2270 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1LOCAT[4] = "NB0CM001";
      TA1REC.TA1DBASE = "DNBANK.";
      TA1REC.TA1TBLVU = "VNBAUD01";
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      NB0CM001.NB0CMMSG = COMMAREA.CAMSG;
    end
  end
  ;
  ;
  ;
end // end NB0C810

// fill nbc7rec key
Function NB0C815()
  ;
  ;
  ;
  set NB0CW02 empty;
  set NB7REC empty;
  set TA1REC empty;
  set SQLCA empty;
  ;
   /* --------------------------------------------*/
    /* fill nb0cw02 record*/
   /* --------------------------------------------*/
  ;
  NB0CW02.NB0CWSOP = "S1"; /* selection option*/
  ;
   /* --------------------------------------------*/
    /* move w/s to date to w/s ccyymmdd format*/
   /* --------------------------------------------*/
  ;
  NB0CW01.NB0CWMM = NB0CW01.NB0CWTMM;
  NB0CW01.NB0CWDD = NB0CW01.NB0CWTDD;
  NB0CW01.NB0CWYY = NB0CW01.NB0CWTYY;
  if (NB0CW01.NB0CWTYY <= 51)
    NB0CW01.NB0CWCC = 20;
  else
    NB0CW01.NB0CWCC = 19;
  end
  ;
   /* --------------------------------------------*/
    /* w/s ccyymmdd format to nb0cw02 record*/
   /* --------------------------------------------*/
  ;
  NB0CW02.NB0CWHDT = NB0CW01.NB0CWDT; /* hi-date*/
  ;
   /* --------------------------------------------*/
    /* fill nb7rec key*/
   /* --------------------------------------------*/
  ;
  NB7REC.NB1CUST = NB0CW01.NB0CWBID; /* bank id - cust*/
  NB7REC.KUMSTRID = NB0CW01.NB0CWBSN; /* bank id - stor*/
  NB7REC.XNXCD = NB0CW01.NB0CWBDC; /* bank id - dept*/
  NB7REC.XDVCD = "01"; /* bank id - div*/
  NB7REC.XBCCD = NB0CW01.XBCCD; /* bank id - brand*/
  ;
  NB7REC.NB1GRPCD = NB0CW01.NB0CWGRP; /* group code*/
  ;
   /* --------------------------------------------*/
    /* move w/s from date to w/s ccyymmdd format*/
   /* --------------------------------------------*/
  ;
  NB0CW01.NB0CWMM = NB0CW01.NB0CWFMM;
  NB0CW01.NB0CWDD = NB0CW01.NB0CWFDD;
  NB0CW01.NB0CWYY = NB0CW01.NB0CWFYY;
  if (NB0CW01.NB0CWFYY <= 51)
    NB0CW01.NB0CWCC = 20;
  else
    NB0CW01.NB0CWCC = 19;
  end
  ;
   /* --------------------------------------------*/
    /* w/s ccyymmdd format to nb7rec*/
   /* --------------------------------------------*/
  ;
  NB7REC.NB7PRCDT = NB0CW01.NB0CWDT;
  ;
  NB7REC.NB-ADV-PERIOD-CD = "**";
  NB7REC.NB7OCUST = -1;
  NB7REC.NB7OSTOR = -1;
  NB7REC.NB7ODEPT = -1;
  NB7REC.NB7ODIV = "**"; /* division*/
  NB7REC.NB7OBCD = "**"; /* brand*/
  NB7REC.XGPCD = "**";
  NB7REC.YCRCD = "***";
  NB7REC.XOTCD = "**";
  NB7REC.GLCD = "***";
  NB7REC.YCPCD = -1;
  NB7REC.SP1ID = NB0CM001.NB0CMSPM;
  ;
  ;
   /* ---------------------------------------------*/
      /* reference number .....*/
   /* ---------------------------------------------*/
  ;
  if (NB0CM001.YCRCD[NB0CWSB2] == "INV") /* source - invoice*/
    NB0CW01.NB0CWFD = NB0CM001.NB0CMORF[NB0CWSB2];
    NB7REC.IV0IVCID = NB0CW01.NB0CWFD; /* invoice*/
    NB7REC.NB4XREF = -1; /* transfer*/
    NB7REC.CLACLMNB = -1; /* claims*/
  else
    ;
    if (NB0CM001.YCRCD[NB0CWSB2] == "XFR") /* SOURCE-TRANS*/
      NB0CW01.NB0CWFD = NB0CM001.NB0CMORF[NB0CWSB2];
      NB7REC.IV0IVCID = -1; /* invoice*/
      NB7REC.NB4XREF = NB0CW01.NB0CWFD; /* transfer*/
      NB7REC.CLACLMNB = -1; /* claims*/
    else
                          /* ;                       source is claims*/
      NB0CW01.NB0CWFD = NB0CM001.NB0CMORF[NB0CWSB2];
      NB7REC.IV0IVCID = -1; /* invoice*/
      NB7REC.NB4XREF = -1; /* transfer*/
      NB7REC.CLACLMNB = NB0CW01.NB0CWFD; /* claims*/
      ;
    end
  end
  ;
  NB7REC.NB7ODIV = "**"; /* division*/
  NB7REC.NB7OBCD = "**"; /* brand*/
  ;
  ;
  ;
end // end NB0C815

// select next nb7rec & load map
Function NB0C820()
  ;
  ;
    /* ****************************************************/
    /* * NB0cW01.NB0cWSB4 = POSITION IN ARRAY BEING LOADED*/
    /* ****************************************************/
  ;
  NB0CW02.NB0CWSOP = "N1"; /* select option*/
  ;
  call "IO2270" (NB0CW02, SQLCA, NB7REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    if (NB0CW01.NB0CWSB4 <= 14) /* can only retrive 14 records into w/s*/
      if (NB7REC.NB7OCUST > 0)
        NB0CW01.NB0CWCO3 = NB7REC.NB7OCUST; /* numeric work field*/
        NB0CM003.NB7OCUST[NB0CWSB4] = NB0CW01.NB0CWCO3;
      else
        NB0CM003.NB7OCUST[NB0CWSB4] = "0";
      end
      ;
      if (NB7REC.NB7OSTOR > 0)
        NB0CW01.NB0CWST3 = NB7REC.NB7OSTOR; /* numeric work field*/
        NB0CM003.NB7OSTOR[NB0CWSB4] = NB0CW01.NB0CWST3;
      else
        NB0CM003.NB7OSTOR[NB0CWSB4] = "0";
      end
      ;
      if (NB7REC.NB7ODEPT > 0)
        NB0CW01.NB0CWDP3 = NB7REC.NB7ODEPT; /* numeric work field*/
        NB0CM003.NB7ODEPT[NB0CWSB4] = NB0CW01.NB0CWDP3;
      else
        NB0CM003.NB7ODEPT[NB0CWSB4] = "0";
      end
      ;
      if (NB7REC.NB7OBCD > "  ")
        NB0CM003.XBCCD[NB0CWSB4] = NB7REC.NB7OBCD;
      else
        NB0CM003.XBCCD[NB0CWSB4] = "  ";
      end
      ;
      NB0CM003.XGPCD[NB0CWSB4] = NB7REC.XGPCD;
      ;
      NB0CM003.YADCD[NB0CWSB4] = NB7REC.NB-ADV-PERIOD-CD;
      ;
      NB0CM003.YCRCD[NB0CWSB4] = NB7REC.YCRCD;
      ;
      NB0CM003.XOTCD[NB0CWSB4] = NB7REC.XOTCD;
      ;
      NB0CM003.GLCD[NB0CWSB4] = NB7REC.GLCD;
      ;
      NB0CM003.NB4TRAMT[NB0CWSB4] = NB7REC.NB4TRAMT;
      NB0CM003.NB4PRBAL[NB0CWSB4] = NB7REC.NB4PRBAL;
      ;
      NB0CW01.NB0CWSB4 = NB0CW01.NB0CWSB4 + 1; /* bump up subscript*/
    else
      converseLib.validationFailed(61); /* additional related entries exist*/
    end
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* not found, no more records*/
       /* do nothing*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
      else
        set TA1REC empty;
        set ERRSQLCA empty;
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0C";
        TA1REC.TA1LOCAT[1] = "  ";
        TA1REC.TA1LOCAT[2] = "NB0C820";
        TA1REC.TA1LOCAT[3] = "IO2270 ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1LOCAT[4] = "NB0CM001";
        TA1REC.TA1DBASE = "DNBANK.";
        TA1REC.TA1TBLVU = "VNBAUD01";
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        XSPF4();
      end
    end
  end
  ;
  ;
  ;
end // end NB0C820

// map 3
Function NB0C900()
  converse NB0CM003 ;
end // end NB0C900

//*** RECORD=NB0CW01 ****
// ************************************************************
// *** CREATED: 12-20-87                 BY: d.harrison     ***
// ***                                                      ***
// *** USED BY: NB0C                                        ***
// *** PURPOSE: a working storage area for this application.***
// *10/29/93 lgross added fields NB0CWCCC, NB0CWCSC,NB0CCDC ***
//                  Reduced size of nb0cwco to 7 to allow   ***
//                  fastpath entry from customer            ***
// ************************************************************
// ************************************************************
// ***********************
Record NB0CW01 type basicRecord
  10 NB0CWFL1 NB0CWFL1 ; 
  10 NB0CWFL2 NB0CWFL2 ; 
  10 NB0CWFL3 NB0CWFL3 ; 
  10 NB0CWSFL NB0CWSFL ; 
  10 NB0CWKCH NB0CWKCH ; 
  10 NB0CWCNT NB0CWCNT ; 
  10 NB0CWSSW NB0CWSSW ; 
  10 NB0CWMSW NB0CWMSW ; 
  10 NB0CWSB1 NB0CWSB1 ; 
  10 NB0CWSB2 NB0CWSB2 ; 
  10 NB0CWSB3 NB0CWSB3 ; 
  10 NB0CWSB4 NB0CWSB4 ; 
  10 NB0CWTOP NB0CWTOP ; 
  10 NB0CWMAX NB0CWMAX ; 
  10 NB0CWNUM NB0CWNUM ; 
  10 NB0CWMNO NB0CWMNO ; 
  10 NB0CWKEY NB0CWKEY ; 
    15 NB0CWBID NB0CWBID ; 
    15 NB0CWBSN NB0CWBSN ; 
    15 NB0CWBDC NB0CWBDC ; 
    15 NB0CWGRP NB0CWGRP ; 
    15 XBCCD XBCCD ; 
    15 NB0CWFDT NB0CWFDT ; 
      20 NB0CWFMM NB0CWFMM ; 
      20 NB0CWFDD NB0CWFDD ; 
      20 NB0CWFYY NB0CWFYY ; 
    15 NB0CWTDT NB0CWTDT ; 
      20 NB0CWTMM NB0CWTMM ; 
      20 NB0CWTDD NB0CWTDD ; 
      20 NB0CWTYY NB0CWTYY ; 
    15 NB0CWPGM NB0CWPGM ; 
  10 NB0CW2KY NB0CW2KY ; 
    15 NB0CWOID NB0CWOID ; 
    15 NB0CWOSN NB0CWOSN ; 
    15 NB0CWODC NB0CWODC ; 
    15 NB0CWSAC NB0CWSAC ; 
    15 NB0CWGPC NB0CWGPC ; 
    15 NB0CWSPM NB0CWSPM ; 
    15 NB0CWRSN NB0CWRSN ; 
    15 NB0CWREF NB0CWREF ; 
    15 NB0CWRF2 NB0CWRF2 ; 
    15 NB0CWOT NB0CWOT ; 
    15 NB0CWGL NB0CWGL ; 
    15 NB0CWAL NB0CWAL ; 
  10 NB0CWAR1 NB0CWAR1 [121] ; 
    15 NB0CWSL1 NB0CWSL1 ; 
    15 NB0CWOR1 NB0CWOR1 ; 
    15 NB0CWSQ1 NB0CWSQ1 ; 
    15 NB0CWYD1 NB0CWYD1 ; 
    15 NB0CWXD1 NB0CWXD1 ; 
    15 NB0CWPD1 NB0CWPD1 ; 
    15 NB0CWCT1 NB0CWCT1 ; 
    15 NB0CWST1 NB0CWST1 ; 
    15 NB0CWDP1 NB0CWDP1 ; 
    15 NB0CWOBC NB0CWOBC ; 
    15 NB0CWGP1 NB0CWGP1 ; 
    15 NB0CWTA1 NB0CWTA1 ; 
    15 NB0CWPB1 NB0CWPB1 ; 
  10 NB0CWAR2 NB0CWAR2 [121] ; 
    15 NB0CWSL2 NB0CWSL2 ; 
    15 NB0CWOR2 NB0CWOR2 ; 
    15 NB0CWSQ2 NB0CWSQ2 ; 
    15 NB0CWYD2 NB0CWYD2 ; 
    15 NB0CWXD2 NB0CWXD2 ; 
    15 NB7SUBAC NB7SUBAC ; 
    15 NB0CWTA2 NB0CWTA2 ; 
    15 NB0CWPB2 NB0CWPB2 ; 
    15 NB0CWGL2 NB0CWGL2 ; 
    15 NB0CWIE2 NB0CWIE2 ; 
    15 NB0CWCP2 NB0CWCP2 ; 
    15 NB0CWOT2 NB0CWOT2 ; 
  10 NB0CWDT NB0CWDT ; 
    15 NB0CWCC NB0CWCC ; 
    15 NB0CWYY NB0CWYY ; 
    15 NB0CWMM NB0CWMM ; 
    15 NB0CWDD NB0CWDD ; 
  10 NB0CWFD NB0CWFD ; 
  10 NB0CWCO3 NB0CWCO3 ; 
  10 NB0CWST3 NB0CWST3 ; 
  10 NB0CWDP3 NB0CWDP3 ; 
  10 NB0CWNU1 NB0CWNU1 ; 
  10 NB0CWCAI NB0CWCAI ; 
    15 NB0CWCCC NB0CWCCC ; 
      20 NB0CWCCO NB0CWCCO ; 
    15 NB0CWCSC NB0CWCSC ; 
      20 NB0CWCST NB0CWCST ; 
    15 NB0CWCDC NB0CWCDC ; 
      20 NB0CWCDP NB0CWCDP ; 
    15 NB0CWCGP NB0CWCGP ; 
    15 NB0CWBCD NB0CWBCD ; 
  10 NB0CWIVF NB0CWIVF ; 
end // end NB0CW01

//*** RECORD=NB0CW02 ****
// ************************************************************
// *** CREATED: 12-20-87                 BY: d.harrison     ***
// ***                                                      ***
// *** USED BY: NB0C                                        ***
// *** PURPOSE: a working storage area for this application.***
// ************************************************************
// ***********************
Record NB0CW02 type basicRecord
  5 NB0CWGR2 NB0CWGR2 ; 
    10 NB0CWSOP NB0CWSOP ; 
    10 NB0CWHDT NB0CWHDT ; 
end // end NB0CW02

//*** RECORD=NB7REC ****
// *************** nike bank customer history *****************
// 
// DB2 TABLE:           dnbank.vnbaud01
// 
// COPYLIB MEMBER:      DCL00398
// 
// I/O MOD:             IO2270
// 
// KEY TO DB2 TABLE:    nb1cust  (company id)
//                      kumstrid (store)
//                      xnxcd    (department)
//                      nb1grpcd (group code)
//                      yadcd    (ad program)
//                      nb4prcdt (process date)
// 
// 
// DATE CREATED:        12/09/87
// 
// MAINTENANCE LOG:
// 
//   DATE    INIT.   COMMENT
// --------  -----  ---------------------------------------
// 12-09-87   ssj   INITIAL RECORD CREATION
// 01-25-88   ssj   modified to include specific reference #'s
//                  & dates for inv., claims, & transfer trans.
// 03-28-89   ssj   add 'from' and 'to' division codes
//                  add invoicing business month
// 09-20-89   ssj   add 'claim memo number'
// 06-11-90   ssj   add brand
// 01/03/91  CHYDE  Chg data item descriptions to db2 names.
// 02/11/91   sjob  add 'customer p.o. number'
// 04-17-92   OAR   ADD NB-ADV-PERIOD-CD, SP1ID
// 
// ------------------------------------------------------------
// **********************
Record NB7REC type basicRecord
  5 NB7GROUP NB7GROUP ; 
    10 NB1CUST NB1CUST ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 XDVCD XDVCD ; 
    10 XBCCD XBCCD ; 
    10 NB1GRPCD NB1GRPCD ; 
    10 NB-ADV-PERIOD-CD NB-ADV-PERIOD-CD ; 
    10 YADCD YADCD ; 
    10 SP1ID SP1ID ; 
    10 NB7PRCDT NB7PRCDT ; 
    10 NB7PRCTM NB7PRCTM ; 
    10 NB7TRSRC NB7TRSRC ; 
    10 NB7SUBAC NB7SUBAC ; 
    10 NB7UPSEQ NB7UPSEQ ; 
    10 NB7OCUST NB7OCUST ; 
    10 NB7OSTOR NB7OSTOR ; 
    10 NB7ODEPT NB7ODEPT ; 
    10 NB7ODIV NB7ODIV ; 
    10 NB7OBCD NB7OBCD ; 
    10 XGPCD XGPCD ; 
    10 CLACLMNB CLACLMNB ; 
    10 CLHMEMNB CLHMEMNB ; 
    10 IV0IVCID IV0IVCID ; 
    10 NB4XREF NB4XREF ; 
    10 NB4XSEQ NB4XSEQ ; 
    10 OP1CUPO OP1CUPO ; 
    10 XOTCD XOTCD ; 
    10 YCRCD YCRCD ; 
    10 NB4TRAMT NB4TRAMT ; 
    10 NB4PRBAL NB4PRBAL ; 
    10 YCPCD YCPCD ; 
    10 GLCD GLCD ; 
    10 XIECD XIECD ; 
    10 CLASTTDT CLASTTDT ; 
    10 IV0IVCDT IV0IVCDT ; 
    10 IVABUSMO IVABUSMO ; 
    10 NB7XRFDT NB7XRFDT ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZSTM ZZZSTM ; 
end // end NB7REC

// secondary key
DataItem NB0CW2KY char(47)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// analyst code
DataItem NB0CWAL num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// select set array map 1
DataItem NB0CWAR1 char(66)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// select set array map 2
DataItem NB0CWAR2 char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// brand code
DataItem NB0CWBCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// bank dept code
DataItem NB0CWBDC num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// bank id company
DataItem NB0CWBID num(8)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// bank store number
DataItem NB0CWBSN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// key: entry & transfer
DataItem NB0CWCAI char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date century
DataItem NB0CWCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem NB0CWCCC char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// company
DataItem NB0CWCCO num(7)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem NB0CWCDC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dept code
DataItem NB0CWCDP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// group code
DataItem NB0CWCGP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2nd key field count
DataItem NB0CWCNT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work field customer
DataItem NB0CWCO3 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// co-op analyst
DataItem NB0CWCP2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NB0CWCSC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// store number
DataItem NB0CWCST num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// originating customer id
DataItem NB0CWCT1 num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// work date day
DataItem NB0CWDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// originating dept.code
DataItem NB0CWDP1 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// work field department
DataItem NB0CWDP3 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date ccyymmdd format
DataItem NB0CWDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work field numeric
DataItem NB0CWFD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// from day
DataItem NB0CWFDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// from date
DataItem NB0CWFDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// scrolling requested flag
DataItem NB0CWFL1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// selection requested flag
DataItem NB0CWFL2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// orig company flag
DataItem NB0CWFL3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// from month
DataItem NB0CWFMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// from year
DataItem NB0CWFYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// general ledger code
DataItem NB0CWGL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// general ledger code
DataItem NB0CWGL2 char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gen product class
DataItem NB0CWGP1 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gpc code
DataItem NB0CWGPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem NB0CWGR2 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// bank group code
DataItem NB0CWGRP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hi-date / to-date
DataItem NB0CWHDT int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Memo Internal/External code
DataItem NB0CWIE2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// invoice # found on history
DataItem NB0CWIVF char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key change flag
DataItem NB0CWKCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key
DataItem NB0CWKEY char(34)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w/s array last valid entry
DataItem NB0CWMAX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date month
DataItem NB0CWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// ws hold ezemno
DataItem NB0CWMNO num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// max display switch
DataItem NB0CWMSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reformat numeric fields
DataItem NB0CWNU1 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// ws hold number
DataItem NB0CWNUM num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// originating brand
DataItem NB0CWOBC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// orig dept code
DataItem NB0CWODC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// orig id company
DataItem NB0CWOID num(8)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// original reference number
DataItem NB0CWOR1 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// original reference number
DataItem NB0CWOR2 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// orig store number
DataItem NB0CWOSN char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// order type
DataItem NB0CWOT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// original transaction date
DataItem NB0CWOT2 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// prior balance
DataItem NB0CWPB1 num(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// prior balance
DataItem NB0CWPB2 num(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// processing date
DataItem NB0CWPD1 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ad program
DataItem NB0CWPGM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reference
DataItem NB0CWREF num(8)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// reference source (I,T,C)
DataItem NB0CWRF2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reason code
DataItem NB0CWRSN char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key subaccount (spgm)
DataItem NB0CWSAC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// load w/s & w/s array
DataItem NB0CWSB1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen 1 & 2 sub
DataItem NB0CWSB2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// map sub - screen 3
DataItem NB0CWSB3 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// misc sub
DataItem NB0CWSB4 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// select flag
DataItem NB0CWSFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// selection field map 1
DataItem NB0CWSL1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// selection field - map 2
DataItem NB0CWSL2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// selection option
DataItem NB0CWSOP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SALES PROGRAM
DataItem NB0CWSPM char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new ad pgm field....
DataItem NB0CWSQ1 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new ad pgm field........
DataItem NB0CWSQ2 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen display switch
DataItem NB0CWSSW num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// originating store id
DataItem NB0CWST1 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// work field store
DataItem NB0CWST3 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// transfer amount
DataItem NB0CWTA1 num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// transfer amount
DataItem NB0CWTA2 num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// to day
DataItem NB0CWTDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// to date
DataItem NB0CWTDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// to month
DataItem NB0CWTMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// w/s location - top of screen
DataItem NB0CWTOP num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// to year
DataItem NB0CWTYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// order type code
DataItem NB0CWXD1 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// order type code
DataItem NB0CWXD2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// claim reason code
DataItem NB0CWYD1 char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// claim reason code
DataItem NB0CWYD2 char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date year
DataItem NB0CWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// record group level.
DataItem NB7GROUP char(139)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NB_ORIG_CUST_XBC
DataItem NB7OBCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NB_ORIG_CUST_ID
DataItem NB7OCUST int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// NB_ORIG_DEPT_ID
DataItem NB7ODEPT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// nb_orig_cust_xdv
DataItem NB7ODIV char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NB_ORIG_STOR_ID
DataItem NB7OSTOR smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// NB_PROC_DT
DataItem NB7PRCDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NB_PROC_TM
DataItem NB7PRCTM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nb-sub-acct-cd (spgm group)
DataItem NB7SUBAC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NB_TRN_SRC_IND (i,c,t)
DataItem NB7TRSRC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NB_UPD_SEQ_NBR
DataItem NB7UPSEQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NB_XFER_DT
DataItem NB7XRFDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

