package nb0a;

import corpcom2.XX0XW01;
import corpcom3.XPNB200;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.GLCD;
import corpcom6.SQLCA;
import corpx1.XBCCD;
import corpx1.XDVCD;
import corpx2.XNXCD;
import corpy2.YADCD;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import ku.common.KU5REC;
import ku.common.KUCCOID;
import ku.common.KUCREC;
import ku.common.KUGREC;
import ku.common.KULREC;
import ku.common.KUMREC;
import ku.common.KUMSTRID;
import nb.common.*;
import sp.common.SP1ID;
import ta.common.TA1REC;
//*** PROGRAM=NB0A ****
//  *********      NB0A: nike bank system         *************
//                     bank balance inquiry
// 
// 
// PURPOSE: display nike bank account balances in each of
//          the bank programs.
// 
// 
// NARRATIVE:
//    there are initially five different bank programs. nike
//    customers may participate in 0 to all 5 of these
//    programs.  program balances are for the current year
//    amounts except for co-op, which will show current and
//    prior year.  within each of these bank programs,
//    footwear and apparal are shown separately.
// 
// 
// 
//   MAINTENANCE HISTORY:
// 
//    date      name      description
//  --------  ---------  --------------------------------------
//  11-04-87  sjob       creation........
//  03-02-88  sjob       changed pfkeys to standard bank pf's
//  10-12-88  sjob       added a customer notes: yes/no display
//  11-21-88  sjob       cut length of company from 8 to 7
//  02-30-89  sjob       add division of '01'(domestic default)
//  03-04-89  sjob       support multiple divisions.
//  04-26-89  jwood      added noncsp option to calls
//  04-26-89  jwood      added xssegtr logic
//  07-06-89  sjob       adjusted nb0a550 & 560 to count the
//                       first unass. pending claim per cust.
//  07-10-89  rcoron     added procedure nb0a450 to get the
//                       nike bank customer group name whenever
//                       a parent group company is entered with
//                       a group code.
//  10-18-89  sjob       e59:converted current & prior co-op to
//                       business quarters. added map 3.
//  03-28-90  sjob       b32:display pending claims using gl
//                       codes for the new business quarters.
//  04-03-90  sjob       e65:support multiple sales reps.
//  06-11-90  sjob       e69:convert from division to div/brand
//  06-26-90  sjob       e69:add brand to pending file
//  10-10-90  sjob       e0:DB CHANGES - ADD BRAND CODE TO CUST
//  09-04-91  sjob       e0:ADD CUSTOMER NAME & # TO ALL SCREEN
//  09-16-91  sjob       e0:only display cust notes flag if yes
//  05-04-92  ORICHA     add season and sales program screens.
//  02-04-93  oricha     100,900: prevent current quarter scrn
//                       from showing.  560: move pending
//                       claims to current season.
//  10/26/93 LGROSS      added checks for numerics and
//                       substituted zeroes for spaces when
//                       data comes in from fastpath or cust-
//                       omer screens. changed: NB0AW01,
//                       NB0AW100
//  11/09/93 lgross      changed kulrec.xxxaddr1,2,3 to kulrec.
//                       xxx-addr1,2,3. Changed: NB0A430
//  01-10-94 lgross      changed screens 4 and 5 to screens
//                       1 and 2.  Deleted screens 1, 2 and
//                       6 which had displayed quarter and
//                       sales program data.  Changed:
//                       NB0AM001, NB0AM002, NB0AM003, NB0A100
//                       NB0A110, NB0A200, NB0A300, NB0A400,
//                       NB0A410, NB0A420, NB0A450, NB0A460,
//                       NB0A510, NB0A520, NB0A530, NB0A540,
//                       NB0A560, NB0A592, NB0A610, NB0A620,
//                       NB0A900, NB0A910
//  02-23-1998 TTHAN1    Y2KFIX - REGEN TO PICK UP NEW XX0XS01
// *********************
Program NB0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KU5REC KU5REC; // record
  KUCREC KUCREC; // record
  KUGREC KUGREC; // record
  KULREC KULREC; // record
  KUMREC KUMREC; // record
  NB0AW01 NB0AW01; // record
  NB1REC NB1REC; // record
  NB2REC NB2REC; // record
  NB3REC NB3REC; // record
  NB5REC NB5REC; // record
  NB8REC NB8REC; // record
  NBWREC NBWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use NB0AM.NB0AM001,  // forms
      NB0AM.NB0AM002, 
      NB0AM.NB0AM003
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NB0A100: NB0A100();

    goto NB0A200;



    NB0A200: NB0A200();

    goto NB0A200;


  end // end main
end // end NB0A

// initial process
Function NB0A100()

   /* ----------------------------------------------------------*/
   /* initialization process....*/
   /* 10/26/93 added check for numerics in NB0AWCCO.  We still*/
   /* need to add routine to eliminate spaces before checking*/
   /* for valid numeric data.  Substitute zeroes for spaces*/
   /* in NB0AWCDP and NB0AWCST*/
   /* 01/05/93 lgross set nb0awssw to '1' to look at current screen*/
   /* first*/
   /* ----------------------------------------------------------*/
  XSENTRY();
  XSSEGTR(); /* set segmented transaction id*/



  set NB0AM001 empty; /* ; clear maps & work record*/
  set NB0AM002 empty;
  set NB0AM003 empty;
  set NB0AW01 empty;
  set SQLCA empty;



  if (COMMAREA.CAITEM > " ")
    NB0AW01.NB0AWCAI = COMMAREA.CAITEM; /* key passed in?*/
    if (NB0AW01.NB0AWCCC is numeric) /* make sure there are no spaces*/
      /* /next sentence*/
    else
      NB0AW01.NB0AWCCO = 0; /* fill with zero*/
    end
    if (NB0AW01.NB0AWCCO > 0)
      if (NB0AW01.NB0AWBCD == "  ")
        NB0AW01.NB0AWBCD = "01";
      end
      /* ----------------------------------------------------------*/
                       /* move initial key to map#1*/
      /* ----------------------------------------------------------*/
      NB0AM001.KUCCOID = NB0AW01.NB0AWCCO; /* move company to map1*/
      if (NB0AW01.NB0AWCSC == " ") /* move 0 to store if*/
        NB0AW01.NB0AWCST = 0; /* spaces*/
      end
      NB0AM001.KUMSTRID = NB0AW01.NB0AWCST; /* move store   to map1*/
      if (NB0AW01.NB0AWCDC == " ") /* move 0 to dept if*/
        NB0AW01.NB0AWCDP = 0; /* spaces*/
      end
      NB0AM001.XNXCD = NB0AW01.NB0AWCDP; /* move dept    to map1*/
      NB0AM001.NB1GRPCD = NB0AW01.NB0AWCGP; /* move group cd to map1*/
      NB0AM001.XBCCD = NB0AW01.NB0AWBCD; /* move brand   to map1*/
      /* ----------------------------------------------------------*/
                       /* move initial key to map#2*/
      /* ----------------------------------------------------------*/
      NB0AM002.KUCCOID = NB0AW01.NB0AWCCO; /* move company to map2*/
      NB0AM002.KUMSTRID = NB0AW01.NB0AWCST; /* move store   to map2*/
      NB0AM002.XNXCD = NB0AW01.NB0AWCDP; /* move dept    to map2*/
      NB0AM002.NB1GRPCD = NB0AW01.NB0AWCGP; /* move group cd to map2*/
      NB0AM002.XBCCD = NB0AW01.NB0AWBCD; /* move brand   to map2*/
      /* ----------------------------------------------------------*/
                       /* move initial key to map#3*/
      /* ----------------------------------------------------------*/
      NB0AM003.KUCCOID = NB0AW01.NB0AWCCO; /* move company to map3*/
      NB0AM003.KUMSTRID = NB0AW01.NB0AWCST; /* move store   to map3*/
      NB0AM003.XNXCD = NB0AW01.NB0AWCDP; /* move dept    to map3*/
      NB0AM003.NB1GRPCD = NB0AW01.NB0AWCGP; /* move group cd to map3*/
      NB0AM003.XBCCD = NB0AW01.NB0AWBCD; /* move brand to map3*/
      /* ----------------------------------------------------------*/
                       /* clear work area to force key change*/
      /* ----------------------------------------------------------*/
      NB0AW01.NB0AWCCO = 0; /* company*/
      NB0AW01.NB0AWCST = 0; /* store*/
      NB0AW01.NB0AWCDP = 0; /* dept*/
      NB0AW01.NB0AWCGP = " "; /* group*/
      NB0AW01.NB0AWBCD = " "; /* brand*/
    end
  end

  COMMAREA.CAITEM = " ";


  NB0AM001.XXXRVNBR = "01"; /* ; revision*/
  NB0AM002.XXXRVNBR = "01"; /* ; revision*/
  NB0AM003.XXXRVNBR = "01"; /* ; revision*/
  NB0AM001.XXXERRID = "NB0A600"; /* initial map display proc.*/
  NB0AM002.XXXERRID = "NB0A700"; /* initial map display proc.*/
  NB0AM003.XXXERRID = "NB0A800"; /* initial map display proc.*/
  NB0AM001.XXXCURDT = VGVar.currentShortGregorianDate; /* date.*/
  NB0AM002.XXXCURDT = VGVar.currentShortGregorianDate; /* date.*/
  NB0AM003.XXXCURDT = VGVar.currentShortGregorianDate; /* date.*/
  NB0AW01.NB0AWSSW = "1"; /* ; map display switch*/
  set NB0AM001.NB0AMNOT invisible; /* blank out cust notes*/
  set NB0AM002.NB0AMNOT invisible; /* blank out cust notes*/
  set NB0AM003.NB0AMNOT invisible; /* blank out cust notes*/
  NB0A110(); /* ; get last run date*/

end // end NB0A100

// get nb2rec - bank account data
Function NB0A110()


    /* ----------------------------------------------------*/
         /* last run date for account balance data*/
   /* 01-05-94 lgross   remove references to screens 4,5 & 6*/
    /* ----------------------------------------------------*/


  set NB2REC empty;
  set TA1REC empty;

  NB2REC.NB1CUST = 0; /* company*/
  NB2REC.KUMSTRID = 1234; /* store*/
  NB2REC.XNXCD = 5678; /* dept.*/
  NB2REC.XDVCD = "01"; /* division*/
  NB2REC.XBCCD = "01"; /* brand*/
  NB2REC.NB1GRPCD = " "; /* group*/

  call "IO2200" ("S1", SQLCA, NB2REC) {isNoRefresh = yes, isExternal = yes}; /* obtain acct mstr*/

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    while (SQLCA.VAGen_SQLCODE == +0)
      call "IO2200" ("N1", SQLCA, NB2REC) {isNoRefresh = yes, isExternal = yes}; /* get next acct mstr*/
      if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
        NBWREC.NBWNU8 = NB2REC.ZZZCHGDT; /* LAST CHANGE DATE*/
        XPNB200(); /* format date*/
        NB0AM001.NB0AMRDT = NBWREC.NBWCH8; /* to map 1*/
        NB0AM002.NB0AMRDT = NBWREC.NBWCH8; /* to map 2*/
        NB0AM003.NB0AMRDT = NBWREC.NBWCH8; /* to map 3*/
        NB0AW01.NB0AMRDT = NBWREC.NBWCH8; /* to hold*/
      end
    end
    call "IO2200" ("C1", SQLCA, NB2REC) {isNoRefresh = yes, isExternal = yes}; /* close  acct mstr*/
  end



end // end NB0A110

// master loop
Function NB0A200()

   /* 01-05-93  lgross removed references to screens 4,5,6.   Screens*/
   /* 1 and 2 (quarters) replaced with season screens*/

  NB0A300(); /* check for key change*/

  if (NB0AW01.NB0AWKSW == "Y") /* key was changed*/
    converseLib.validationFailed(0); /* reset ezemno*/
    NB0A400(); /* get cust/store data*/
    if (converseVar.validationMsgNum == 0) /* no problems...*/
      NB0A500(); /* format screens.*/
    end
  end


  NB0AW01.NB0AWMNO = converseVar.validationMsgNum;

      /* --------------------------------------------------------*/
               /* display map#1, map#2, or map#3*/
      /* --------------------------------------------------------*/

  if (NB0AW01.NB0AWSSW == "1") /* screen display switch*/
    NB0A600(); /* converse current coop season*/
  else
    if (NB0AW01.NB0AWSSW == "2") /* screen display switch*/
      NB0A700(); /* converse prior coop seaspm*/
    else
      if (NB0AW01.NB0AWSSW == "3") /* screen display switch*/
        NB0A800(); /* converse aa/td/df/ff*/
      end
    end
  end



  converseLib.validationFailed(0); /* reset error msg*/
   /* MOVE NB0AW01.NB0AWMNO TO EZEMNO ; restore error msg*/

      /* --------------------------------------------------------*/
      /* att. key validation - stops wild & crazy button pressing*/
      /* --------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* --restore original key.*/

    NB0AM001.KUCCOID = NB0AW01.NB0AWCCO; /* restore co*/
    NB0AM001.KUMSTRID = NB0AW01.NB0AWCST; /* restore store*/
    NB0AM001.XNXCD = NB0AW01.NB0AWCDP; /* restore dpt*/
    NB0AM001.NB1GRPCD = NB0AW01.NB0AWCGP; /* restore group*/
    NB0AM001.XBCCD = NB0AW01.NB0AWBCD; /* restore brand*/

    NB0AM002.KUCCOID = NB0AW01.NB0AWCCO; /* restore co*/
    NB0AM002.KUMSTRID = NB0AW01.NB0AWCST; /* restore store*/
    NB0AM002.XNXCD = NB0AW01.NB0AWCDP; /* restore dpt*/
    NB0AM002.NB1GRPCD = NB0AW01.NB0AWCGP; /* restore group*/
    NB0AM002.XBCCD = NB0AW01.NB0AWBCD; /* restore brand*/

    NB0AM003.KUCCOID = NB0AW01.NB0AWCCO; /* restore co*/
    NB0AM003.KUMSTRID = NB0AW01.NB0AWCST; /* restore store*/
    NB0AM003.XNXCD = NB0AW01.NB0AWCDP; /* restore dpt*/
    NB0AM003.NB1GRPCD = NB0AW01.NB0AWCGP; /* restore group*/
    NB0AM003.XBCCD = NB0AW01.NB0AWBCD; /* restore brand*/


  else
    NB0A900(); /* validate pf keys & fastpathing*/
  end



   /* ------------------- end nb0a200 -------------------------*/
end // end NB0A200

// check for key change
Function NB0A300()



      /* --------------------------------------------------------*/
      /* check for any change in key (comp,store,dept, or group*/
   /* 01-05-93  lgross removed map#4 and 5*/
      /* --------------------------------------------------------*/

  NB0AW01.NB0AWKSW = "N"; /* key change switch*/

  if (NB0AW01.NB0AWSSW == "1") /* map#1 display*/
    NB0A310();
  else
    if (NB0AW01.NB0AWSSW == "2") /* map#2 display*/
      NB0A320();
    else
      if (NB0AW01.NB0AWSSW == "3")
        NB0A330(); /* map#3 display*/
      end
    end
  end



   /* ------------------- end nb0a300 -------------------------*/
end // end NB0A300

// check for key change
Function NB0A310()



      /* --------------------------------------------------------*/
      /* check for any change in key (map 1)*/
      /* --------------------------------------------------------*/


  if (NB0AM001.XBCCD == "  ") /* brand default value*/
    NB0AM001.XBCCD = "01";
  end
  if (NB0AM001.KUCCOID > 0)
    if (NB0AM001.KUMSTRID != 0
     && NB0AM001.NB1GRPCD != " ")
      converseLib.validationFailed(70); /* no store & group cd*/
    else
      if (NB0AM001.KUCCOID != NB0AW01.NB0AWCCO  /* change in: company*/
       || NB0AM001.KUMSTRID != NB0AW01.NB0AWCST /* store*/
       || NB0AM001.XNXCD != NB0AW01.NB0AWCDP    /* dept*/
       || NB0AM001.NB1GRPCD != NB0AW01.NB0AWCGP /* group cd*/
       || NB0AM001.XBCCD != NB0AW01.NB0AWBCD)   /* brand*/

        NB0AW01.NB0AWCCO = NB0AM001.KUCCOID; /* move key to hold*/
        NB0AW01.NB0AWCST = NB0AM001.KUMSTRID; /* store*/
        NB0AW01.NB0AWCDP = NB0AM001.XNXCD; /* dept*/
        NB0AW01.NB0AWCGP = NB0AM001.NB1GRPCD; /* group*/
        NB0AW01.NB0AWBCD = NB0AM001.XBCCD; /* brand*/

        NB0AW01.NB0AWKSW = "Y"; /* key change switch*/

      end
    end
  else
    converseLib.validationFailed(31); /* customer number req.*/
  end



   /* ------------------- end nb0a310 -------------------------*/
end // end NB0A310

// check for key change
Function NB0A320()



      /* --------------------------------------------------------*/
      /* check for any change in key (map 2)*/
      /* --------------------------------------------------------*/


  if (NB0AM002.XBCCD == "  ") /* brand default value*/
    NB0AM002.XBCCD = "01";
  end
  if (NB0AM002.KUCCOID > 0)
    if (NB0AM002.KUMSTRID != 0
     && NB0AM002.NB1GRPCD != " ")
      converseLib.validationFailed(70);
    else
      if (NB0AM002.KUCCOID != NB0AW01.NB0AWCCO  /* changed company*/
       || NB0AM002.KUMSTRID != NB0AW01.NB0AWCST /* store*/
       || NB0AM002.XNXCD != NB0AW01.NB0AWCDP    /* dept*/
       || NB0AM002.NB1GRPCD != NB0AW01.NB0AWCGP /* group cd*/
       || NB0AM002.XBCCD != NB0AW01.NB0AWBCD)   /* brand*/

        NB0AW01.NB0AWCCO = NB0AM002.KUCCOID; /* move key to hold*/
        NB0AW01.NB0AWCST = NB0AM002.KUMSTRID; /* store*/
        NB0AW01.NB0AWCDP = NB0AM002.XNXCD; /* dept*/
        NB0AW01.NB0AWCGP = NB0AM002.NB1GRPCD; /* group cd*/
        NB0AW01.NB0AWBCD = NB0AM002.XBCCD; /* brand*/

        NB0AW01.NB0AWKSW = "Y"; /* key change switch*/
      end
    end
  else
    converseLib.validationFailed(31); /* customer num req.*/
  end


   /* ------------------- end nb0a320 -------------------------*/
end // end NB0A320

// check for key change
Function NB0A330()



      /* --------------------------------------------------------*/
      /* check for any change in key (map 3)*/
      /* --------------------------------------------------------*/


  if (NB0AM003.XBCCD == "  ") /* brand default value*/
    NB0AM003.XBCCD = "01";
  end
  if (NB0AM003.KUCCOID > 0)
    if (NB0AM003.KUMSTRID != 0
     && NB0AM003.NB1GRPCD != " ")
      converseLib.validationFailed(70);
    else
      if (NB0AM003.KUCCOID != NB0AW01.NB0AWCCO  /* changed company*/
       || NB0AM003.KUMSTRID != NB0AW01.NB0AWCST /* store*/
       || NB0AM003.XNXCD != NB0AW01.NB0AWCDP    /* dept*/
       || NB0AM003.NB1GRPCD != NB0AW01.NB0AWCGP /* group cd*/
       || NB0AM003.XBCCD != NB0AW01.NB0AWBCD)   /* brand*/

        NB0AW01.NB0AWCCO = NB0AM003.KUCCOID; /* move key to hold*/
        NB0AW01.NB0AWCST = NB0AM003.KUMSTRID; /* store*/
        NB0AW01.NB0AWCDP = NB0AM003.XNXCD; /* dept*/
        NB0AW01.NB0AWCGP = NB0AM003.NB1GRPCD; /* group*/
        NB0AW01.NB0AWBCD = NB0AM003.XBCCD; /* brand*/

        NB0AW01.NB0AWKSW = "Y"; /* key change switch*/
      end
    end
  else
    converseLib.validationFailed(31); /* customer num req.*/
  end


   /* ------------------- end nb0a330 -------------------------*/
end // end NB0A330

// get company/store info.
Function NB0A400()


      /* --------------------------------------------------------*/
          /* clear previous display... move key fields back in.*/
   /* 01-05-94  lgross   remove references to screen 4, 5 & 6*/
      /* --------------------------------------------------------*/

  set NB0AM001 empty;
  set NB0AM002 empty;
  set NB0AM003 empty;

  NB0AM001.KUCCOID = NB0AW01.NB0AWCCO;
  NB0AM002.KUCCOID = NB0AW01.NB0AWCCO;
  NB0AM003.KUCCOID = NB0AW01.NB0AWCCO;

  NB0AM001.KUMSTRID = NB0AW01.NB0AWCST;
  NB0AM002.KUMSTRID = NB0AW01.NB0AWCST;
  NB0AM003.KUMSTRID = NB0AW01.NB0AWCST;

  NB0AM001.XNXCD = NB0AW01.NB0AWCDP;
  NB0AM002.XNXCD = NB0AW01.NB0AWCDP;
  NB0AM003.XNXCD = NB0AW01.NB0AWCDP;

  NB0AM001.NB1GRPCD = NB0AW01.NB0AWCGP;
  NB0AM002.NB1GRPCD = NB0AW01.NB0AWCGP;
  NB0AM003.NB1GRPCD = NB0AW01.NB0AWCGP;

  NB0AM001.XBCCD = NB0AW01.NB0AWBCD; /* brand*/
  NB0AM002.XBCCD = NB0AW01.NB0AWBCD; /* brand*/
  NB0AM003.XBCCD = NB0AW01.NB0AWBCD; /* brand*/

  NB0AM001.XXXRVNBR = "01"; /* ;      revision*/
  NB0AM002.XXXRVNBR = "01"; /* ;      revision*/
  NB0AM003.XXXRVNBR = "01"; /* ;      revision*/

  NB0AM001.XXXCURDT = VGVar.currentShortGregorianDate; /* date*/
  NB0AM002.XXXCURDT = VGVar.currentShortGregorianDate; /* date*/
  NB0AM003.XXXCURDT = VGVar.currentShortGregorianDate; /* date*/

  NB0AM001.XXXERRID = "NB0A600"; /* initial map proc*/
  NB0AM002.XXXERRID = "NB0A700"; /* initial map proc*/
  NB0AM003.XXXERRID = "NB0A800"; /* initial map proc*/

  NB0AM001.NB0AMRDT = NB0AW01.NB0AMRDT; /* last run date*/
  NB0AM002.NB0AMRDT = NB0AW01.NB0AMRDT; /* last run date*/
  NB0AM003.NB0AMRDT = NB0AW01.NB0AMRDT; /* last run date*/

      /* --------------------------------------------------------*/
          /* get information at store level if possible.*/
      /* --------------------------------------------------------*/

  if (NB0AW01.NB0AWCST > 0) /* specific store*/
    NB0A410(); /* store level*/
  else
    NB0A420(); /* company level*/
  end

  if (NB0AW01.NB0AWCCO > 0
   && NB0AW01.NB0AWCST == 0
   && NB0AW01.NB0AWCDP == 0
   && NB0AW01.NB0AWCGP > "  ")
    NB0AM001.NB0AMLIT = "GROUP NAME:";
    NB0AM002.NB0AMLIT = "GROUP NAME:";
    NB0AM003.NB0AMLIT = "GROUP NAME:";
    NB0A450(); /* get customer group name*/
  else
    NB0AM001.NB0AMLIT = "          ";
    NB0AM002.NB0AMLIT = "          ";
    NB0AM003.NB0AMLIT = "          ";
    NB0AM001.NB0AMGNM = "                              ";
    NB0AM002.NB0AMGNM = "                              ";
    NB0AM003.NB0AMGNM = "                              ";
  end


  NB0A460(); /* initialize amt.fields*/
  set NB0AM001.NB0AMNOT invisible;
  set NB0AM002.NB0AMNOT invisible;
  set NB0AM003.NB0AMNOT invisible;


   /* ------------------- end nb0a400 -------------------------*/
end // end NB0A400

// find store (kumrec) record
Function NB0A410()


    /* ----------------------------------------------------*/
                    /* find store data*/
   /* 01/05/94 lgross  removed references to screens 4, 5 & 6*/
    /* ----------------------------------------------------*/


  set KUMREC empty;
  set SQLCA empty;
  set TA1REC empty;

  KUMREC.KUCCOID = NB0AW01.NB0AWCCO; /* company*/
  KUMREC.KUMSTRID = NB0AW01.NB0AWCST; /* store*/

  call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes}; /* obtain store record*/

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/

    NB0AM001.NB0AMNM1 = KUMREC.KUMSTRNM; /* move store name to map1*/
    NB0AM002.NB0AMNM1 = KUMREC.KUMSTRNM; /* move store name to map2*/
    NB0AM003.NB0AMNM1 = KUMREC.KUMSTRNM; /* move store name to map3*/

    set KULREC empty;
    KULREC.KUCCOID = KUMREC.KUCCOID; /* company id*/
    KULREC.KULAAID = KUMREC.KUMSTAID; /* store addr pointer*/
    NB0A430(); /* get address*/

    set KUGREC empty;
    KUGREC.KUCCOID = KUMREC.KUCCOID; /* company*/
    KUGREC.KUMSTRID = KUMREC.KUMSTAID; /* store*/
    KUGREC.XNXCD = 0; /* department*/
    NB0A440(); /* get sales rep numbers*/

  else
    if (SQLCA.VAGen_SQLCODE == +100) /* this acct is not on nike bank*/
      converseLib.validationFailed(49); /* not a valid nike company/store.*/
      NB0AW01.NB0AWCCO = 0;
      NB0AW01.NB0AWCST = 0;
      NB0AW01.NB0AWCDP = 0;
      NB0AW01.NB0AWCDP = " ";
    end
  end



  if (SQLCA.VAGen_SQLCODE == +0 /* good return..*/
   || SQLCA.VAGen_SQLCODE == +100) /* rec not found*/

     /* all ok, or handled above*/

  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
      NB0AM001.XXXERRID = "NB0A410"; /* error process*/
      NB0AM002.XXXERRID = "NB0A410"; /* error process*/
      NB0AM003.XXXERRID = "NB0A410"; /* error process*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0A";
      TA1REC.TA1LOCAT[1] = "S ";
      TA1REC.TA1LOCAT[2] = "NB0A310";
      TA1REC.TA1LOCAT[3] = "IO0340 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1LOCAT[4] = "NB0AM001";
      TA1REC.TA1DBASE = "DCUST. ";
      TA1REC.TA1TBLVU = "VCSTOR01";
      NB0AW01.NB0AWCKX = " "; /* clear key display area*/
      NB0AW01.NB0AWCCX = NB0AW01.NB0AWCCO; /* convert co. display*/
      NB0AW01.NB0AWCSX = NB0AW01.NB0AWCST; /* convert st. display*/
      TA1REC.TA1TBLKE = NB0AW01.NB0AWCKX; /* display key used.*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
      NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end



end // end NB0A410

// find company(kucrec)record
Function NB0A420()


    /* ----------------------------------------------------*/
                    /* find company data*/
   /* 01/05/94 lgross  Removed references to screens 4, 5 & 6*/
    /* ----------------------------------------------------*/


  set KUCREC empty;
  set SQLCA empty;
  set TA1REC empty;

  KUCREC.KUCCOID = NB0AW01.NB0AWCCO; /* company*/

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* obtain store record*/

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    NB0AM001.NB0AMNM1 = KUCREC.KUCCONM; /* co. name to map*/
    NB0AM002.NB0AMNM1 = KUCREC.KUCCONM; /* co. name to map*/
    NB0AM003.NB0AMNM1 = KUCREC.KUCCONM; /* co. name to map*/

    set KULREC empty;
    KULREC.KUCCOID = KUCREC.KUCCOID; /* company id*/
    KULREC.KULAAID = KUCREC.KUCCOAID; /* comp. addr pointer*/
    NB0A430(); /* get address*/

    set KUGREC empty;
    KUGREC.KUCCOID = KUCREC.KUCCOID; /* company id*/
    KUGREC.KUMSTRID = 0; /* store  id*/
    KUGREC.XNXCD = 0; /* dept.  cd*/
    NB0A440(); /* get srep num*/
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* no acct.rec*/
      converseLib.validationFailed(44); /* not a valid nike company/store.*/
      NB0AW01.NB0AWCCO = 0;
      NB0AW01.NB0AWCST = 0;
      NB0AW01.NB0AWCDP = 0;
      NB0AW01.NB0AWCGP = " ";
    end
  end



  if (SQLCA.VAGen_SQLCODE == +0 /* good return..*/
   || SQLCA.VAGen_SQLCODE == +100) /* rec not found*/

     /* all ok, or handled above*/

  else
    if (SQLCA.VAGen_SQLCODE == -911)
      NB0AM001.XXXERRID = "NB0A420"; /* error process*/
      NB0AM002.XXXERRID = "NB0A420"; /* error process*/
      NB0AM003.XXXERRID = "NB0A420"; /* error process*/
      converseLib.validationFailed(16); /* in use-try later*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0A";
      TA1REC.TA1LOCAT[1] = "S ";
      TA1REC.TA1LOCAT[2] = "NB0A310";
      TA1REC.TA1LOCAT[3] = "IO0340 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1LOCAT[4] = "NB0AM001";
      TA1REC.TA1DBASE = "DCUST. ";
      TA1REC.TA1TBLVU = "VCSTOR01";
      NB0AW01.NB0AWCKX = " "; /* clear key display area*/
      NB0AW01.NB0AWCCX = NB0AW01.NB0AWCST; /* convert to display co.*/
      TA1REC.TA1TBLKE = NB0AW01.NB0AWCKX;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
      NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end



end // end NB0A420

// find address(kulrec)record
Function NB0A430()


    /* ----------------------------------------------------*/
        /* find address .... & move to working storage*/
   /* 11-9-93 LGROSS changed kulrec.xxxaddr1,2,3 to*/
   /* KULREC.XXX-ADDR1,2,3*/
    /* ----------------------------------------------------*/

  call "IO0170" ("S ", SQLCA, KULREC) {isNoRefresh = yes, isExternal = yes}; /* address.*/

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    NB0AW01.NB0AWAD1 = KULREC.XXX-ADDR1; /* line1*/
    NB0AW01.NB0AWAD2 = KULREC.XXX-ADDR2; /* line2*/
    NB0AW01.NB0AWAD3 = KULREC.XXX-ADDR3; /* line3*/
    NB0AW01.NB0AWADC = KULREC.XXXCITY; /* city*/
    NB0AW01.NB0AWADS = KULREC.XSTCD; /* state*/
    NB0AW01.NB0AWADZ = KULREC.XXXZIP; /* zip*/

  else
    if (SQLCA.VAGen_SQLCODE == +100 /* no address record.*/
     || SQLCA.VAGen_SQLCODE == -911) /* database in use*/
                                /* ;             continue processing*/
    else
      NB0AM001.XXXERRID = "NB0A430"; /* error process*/
      NB0AM002.XXXERRID = "NB0A430"; /* error process*/
      NB0AM003.XXXERRID = "NB0A430"; /* error process*/
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0A";
      TA1REC.TA1LOCAT[1] = "S ";
      TA1REC.TA1LOCAT[2] = "NB0A430";
      TA1REC.TA1LOCAT[3] = "IO0170 ";
      TA1REC.TA1LOCAT[4] = "NB0AM001";
      TA1REC.TA1DBASE = "DCUST. ";
      TA1REC.TA1TBLVU = "VADDR001";
      NB0AW01.NB0AWCCX = NB0AW01.NB0AWCCO; /* convert co. display*/
      TA1REC.TA1TBLKE = NB0AW01.NB0AWCKX; /* display key used*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
      NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end



end // end NB0A430

// find srep record  (kugrec)
Function NB0A440()

  XX0XS01(); /* format ezedte*/
  KU5REC.OP1ORCDT = XX0XW01.XX0XWDAT;

  NB0AW01.NB0AWFRP = 0; /* clear ftwr srep id*/
  NB0AW01.NB0AWARP = 0; /* clear app. srep id*/
  NB0AW01.NB0AWHRP = 0; /* clear hold srep id*/

  KU5REC.KUCCOID = NB0AW01.NB0AWCCO;
  KU5REC.KUMSTRID = NB0AW01.NB0AWCST;
  KU5REC.XNXCD = NB0AW01.NB0AWCDP;


  KU5REC.KU5-CONV-DEPT-FLAG = "N";
  KU5REC.KU5-READ-SA-FLAG = "N";

   /* ******************* get footwear rep ********************/
  KU5REC.KU5-RQT-YSB-CD = "02";

  NB0A441(); /* call ku1350*/

  if (NB0AW01.NB0AWHRP > 0) /* found a srep #*/
    NB0AW01.NB0AWFRP = NB0AWHRP; /* hold ftwr rep*/
  end

   /* ******************* get apparel  rep ********************/

  KU5REC.KU5-RQT-YSB-CD = "03";

  NB0A441(); /* call ku1350*/

  if (NB0AW01.NB0AWHRP > 0) /* found a srep #*/
    NB0AW01.NB0AWARP = NB0AWHRP; /* hold aprl rep*/
  end


end // end NB0A440

// call customer srep(kugrec)
Function NB0A441()

  call "KU1350" (KU5REC) {isNoRefresh = yes, isExternal = yes};

  if (KU5REC.KU5-SEARCH-LEVEL-FLAG > "0")
    NB0AW01.NB0AWHRP = KU5REC.SM4REPID; /* hold srep id*/
  end
end // end NB0A441

// find group name(nb5rec)record
Function NB0A450()


    /* ----------------------------------------------------*/
                    /* find group name*/
   /* 01-05-05  lgross  removed references to screens 4, 5 & 6*/
    /* ----------------------------------------------------*/


  set NB5REC empty;
  set SQLCA empty;
  set TA1REC empty;

  NB5REC.NB5PNTCO = NB0AW01.NB0AWCCO; /* group parent co*/
  NB5REC.XBCCD = NB0AW01.NB0AWBCD; /* brand*/
  NB5REC.NB1GRPCD = NB0AW01.NB0AWCGP; /* nike bank group acct cd.*/

  call "IO2220" ("S ", SQLCA, NB5REC) {isNoRefresh = yes, isExternal = yes}; /* obtain group record*/

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    NB0AM001.NB0AMGNM = NB5REC.NB5GPDSC; /* grp name to map*/
    NB0AM002.NB0AMGNM = NB5REC.NB5GPDSC; /* grp name to map*/
    NB0AM003.NB0AMGNM = NB5REC.NB5GPDSC; /* grp name to map*/

  else
    if (SQLCA.VAGen_SQLCODE == +100) /* group not found*/
      NB0AM001.NB0AMLIT = " ";
      NB0AM002.NB0AMLIT = " ";
      NB0AM003.NB0AMLIT = " ";

      NB0AM001.NB0AMGNM = " ";
      NB0AM002.NB0AMGNM = " ";
      NB0AM003.NB0AMGNM = " ";
    else
      if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
        NB0AM001.XXXERRID = "NB0A450"; /* error process*/
        NB0AM002.XXXERRID = "NB0A450"; /* error process*/
        NB0AM003.XXXERRID = "NB0A450"; /* error process*/
        converseLib.validationFailed(16); /* in use-try later*/
      else
        TA1REC.TA1TYPE = "DB2"; /* db2 error*/
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0A";
        TA1REC.TA1LOCAT[1] = "S ";
        TA1REC.TA1LOCAT[2] = "NB0A450";
        TA1REC.TA1LOCAT[3] = "IO2220 ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1LOCAT[4] = "NB0AM001";
        TA1REC.TA1DBASE = "DNBANK.";
        TA1REC.TA1TBLVU = "VBCGRP01";
        NB0AW01.NB0AWCKX = " "; /* clear key display area*/
        NB0AW01.NB0AWCCX = NB0AW01.NB0AWCCO; /* conv to disp co.*/
        TA1REC.TA1TBLKE = NB0AW01.NB0AWCKX;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
        NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end



end // end NB0A450

// initialize amount fields.
Function NB0A460()


    /* --------------------------------------------------*/
    /* 01-05-94  lgross removed references to screens 4, 5 & 6*/
       /* purpose:  place single '0' in amount fields*/
              /* for default place holders.*/

              /* ****   map 1   *******/
    /* --------------------------------------------------*/

  NB0AW01.NB0AWSB1 = 1; /* ; set subscript*/

  while (NB0AW01.NB0AWSB1 <= 6)
    NB0AM001.NB0AMCB1[NB0AWSB1] = "0"; /* current bal.*/
    NB0AM001.NB0AMAC1[NB0AWSB1] = "0"; /* accrual tot.*/
    NB0AM001.NB0AMCL1[NB0AWSB1] = "0"; /* claim total.*/
    NB0AM001.NB0AMPD1[NB0AWSB1] = "0"; /* claim total.*/

    NB0AW01.NB0AWSB1 = NB0AW01.NB0AWSB1 + 1;
  end


    /* ---------- reporting an incomplete data line -----------*/
  NB0AM001.NB0AMUAN = 0; /* number unassigned clms*/
  NB0AM001.NB0AMUAN = 0; /* number unassigned clms*/
  NB0AW01.NB0AW-SPGM-UAN = 0; /* unassigned dollars*/
   /* unassigned dollars*/
  NB0AW01.NB0AW-SPGM-UAD = 0;

    /* --------------------------------------------------*/
              /* ****   map 2   *******/
    /* --------------------------------------------------*/
  NB0AW01.NB0AWSB1 = 1; /* ; set subscript*/

  while (NB0AW01.NB0AWSB1 <= 6)
    NB0AM002.NB0AMCB1[NB0AWSB1] = "0"; /* current bal.*/
    NB0AM002.NB0AMAC1[NB0AWSB1] = "0"; /* accrual tot.*/
    NB0AM002.NB0AMCL1[NB0AWSB1] = "0"; /* claim total.*/
    NB0AM002.NB0AMPD1[NB0AWSB1] = "0"; /* claim total.*/

    NB0AW01.NB0AWSB1 = NB0AW01.NB0AWSB1 + 1;
  end


    /* --------------------------------------------------*/
              /* ****   map 3   *******/
    /* --------------------------------------------------*/
  NB0AW01.NB0AWSB1 = 1; /* ; set subscript*/

  while (NB0AW01.NB0AWSB1 <= 8)
    NB0AM003.NB0AMCB1[NB0AWSB1] = "0"; /* current bal.*/
    NB0AM003.NB0AMAC1[NB0AWSB1] = "0"; /* accrual tot.*/
    NB0AM003.NB0AMCL1[NB0AWSB1] = "0"; /* claim total.*/
    NB0AM003.NB0AMPD1[NB0AWSB1] = "0"; /* claim total.*/

    NB0AW01.NB0AWSB1 = NB0AW01.NB0AWSB1 + 1;
  end




end // end NB0A460

// format both screens
Function NB0A500()



  NB0AW01.NB0AW2SW = "N"; /* account records   (nb2rec)?*/
  NB0AW01.NB0AW1SW = "N"; /* bank customer mstr(nb1rec)?*/
  NB0AW01.NB0AW3SW = "N"; /* pending records   (nb3rec)?*/


  NB0A510(); /* move address to screens*/

  NB0A592(); /* customer notes?*/

  NB0A520(); /* get bank account records.*/


  if (converseVar.validationMsgNum == 0)
    NB0A540(); /* get customer master*/
  end


  if (converseVar.validationMsgNum == 0)
    NB0A550(); /* get any pending records.*/
  end


  if (converseVar.validationMsgNum == 0)

    if (NB0AW01.NB0AW2SW == "N" /* no account records(nb2rec)*/
     && NB0AW01.NB0AW1SW == "N" /* no bank cust mstr (nb1rec)*/
     && NB0AW01.NB0AW3SW == "N") /* no pending records(nb3rec)*/
      converseLib.validationFailed(50); /* this is not a nike bank customer*/
    end

    if (NB0AW01.NB0AW2SW == "N" /* no account records(nb2rec)*/
     && NB0AW01.NB0AW1SW == "N" /* no bank cust mstr (nb1rec)*/
     && NB0AW01.NB0AW3SW == "Y") /* pending records   (nb3rec)*/
      converseLib.validationFailed(51); /* pending claims only. no bank cust*/
                                   /* mstr*/
    end

    if (NB0AW01.NB0AW2SW == "N" /* no account records(nb2rec)*/
     && NB0AW01.NB0AW1SW == "Y") /* bank customer mstr(nb1rec)*/
      if (NB0AW01.NB0AW3SW == "Y") /* pending records   (nb3rec)*/
        converseLib.validationFailed(52); /* pending claims only*/
      else
        converseLib.validationFailed(53);
                                   /* customer not active in any bank pgms.*/
      end
    end

  end



end // end NB0A500

// format address on screens..
Function NB0A510()


    /* ----------------------------------------------------*/
      /* move company data to map.*/
   /* 01-05-94  lgross removed references to screens 4, 5 & 6*/
    /* ----------------------------------------------------*/

  NB0AM001.NB0AMASR = NB0AW01.NB0AWARP; /* ap.srep id*/
  NB0AM001.NB0AMFSR = NB0AW01.NB0AWFRP; /* ftwr srep id*/

  NB0AM002.NB0AMASR = NB0AW01.NB0AWARP; /* ap.srep id*/
  NB0AM002.NB0AMFSR = NB0AW01.NB0AWFRP; /* ftwr srep id*/

  NB0AM003.NB0AMASR = NB0AW01.NB0AWARP; /* ap.srep id*/
  NB0AM003.NB0AMFSR = NB0AW01.NB0AWFRP; /* ftwr srep id*/


    /* *** clear any previous address*/

  NB0AM001.NB0AMHD1 = "       ";
  NB0AM001.NB0AMHD2 = "       ";
  NB0AM001.NB0AMHD3 = "       ";

  NB0AM002.NB0AMHD1 = "       ";
  NB0AM002.NB0AMHD2 = "       ";
  NB0AM002.NB0AMHD3 = "       ";

  NB0AM003.NB0AMHD1 = "       ";
  NB0AM003.NB0AMHD2 = "       ";
  NB0AM003.NB0AMHD3 = "       ";


    /* ----------------------------------------------------*/
    /* customer address may be 1-3 lines plus the city,state*/
    /* and zip.  the customer system pushes these lines to*/
    /* the bottom so a 1 line address will start in line 3.*/
    /* nb0a needs the address to start directly following*/
    /* the customer name if it is 3 lines long.  in all*/
    /* other cases, to skip a line and float the address*/
    /* up as far as possible.             ssj*/
    /* ----------------------------------------------------*/

  if (NB0AW01.NB0AWAD1 > " ") /* address is 3 lines long*/
    NB0AM001.NB0AMHD1 = "ADDRESS:";
    NB0AM002.NB0AMHD1 = "ADDRESS:";
    NB0AM003.NB0AMHD1 = "ADDRESS:";

        /* ****** move to map#1 **********/

    NB0AM001.NB0AMADR[1] = NB0AW01.NB0AWAD1;
    NB0AM001.NB0AMADR[2] = NB0AW01.NB0AWAD2;
    NB0AM001.NB0AMADR[3] = NB0AW01.NB0AWAD3;
    NB0AM001.NB0AMADR[4] = NB0AW01.NB0AWAD4;

        /* ****** move to map#2 **********/
    NB0AM002.NB0AMADR[1] = NB0AW01.NB0AWAD1;
    NB0AM002.NB0AMADR[2] = NB0AW01.NB0AWAD2;
    NB0AM002.NB0AMADR[3] = NB0AW01.NB0AWAD3;
    NB0AM002.NB0AMADR[4] = NB0AW01.NB0AWAD4;
        /* ****** move to map#3 **********/
    NB0AM003.NB0AMADR[1] = NB0AW01.NB0AWAD1;
    NB0AM003.NB0AMADR[2] = NB0AW01.NB0AWAD2;
    NB0AM003.NB0AMADR[3] = NB0AW01.NB0AWAD3;
    NB0AM003.NB0AMADR[4] = NB0AW01.NB0AWAD4;
  else
    NB0AM001.NB0AMHD2 = "ADDRESS:";
    NB0AM002.NB0AMHD2 = "ADDRESS:";
    NB0AM003.NB0AMHD2 = "ADDRESS:";

    if (NB0AW01.NB0AWAD2 > " ") /* address is 2 lines long*/
          /* ****** move to map#1 **********/
      NB0AM001.NB0AMADR[1] = NB0AW01.NB0AWAD1;
      NB0AM001.NB0AMADR[2] = NB0AW01.NB0AWAD2;
      NB0AM001.NB0AMADR[3] = NB0AW01.NB0AWAD3;
      NB0AM001.NB0AMADR[4] = NB0AW01.NB0AWAD4;
          /* ****** move to map#2 **********/
      NB0AM002.NB0AMADR[1] = NB0AW01.NB0AWAD1;
      NB0AM002.NB0AMADR[2] = NB0AW01.NB0AWAD2;
      NB0AM002.NB0AMADR[3] = NB0AW01.NB0AWAD3;
      NB0AM002.NB0AMADR[4] = NB0AW01.NB0AWAD4;
          /* ****** move to map#3 **********/
      NB0AM003.NB0AMADR[1] = NB0AW01.NB0AWAD1;
      NB0AM003.NB0AMADR[2] = NB0AW01.NB0AWAD2;
      NB0AM003.NB0AMADR[3] = NB0AW01.NB0AWAD3;
      NB0AM003.NB0AMADR[4] = NB0AW01.NB0AWAD4;
    else
      if (NB0AW01.NB0AWAD3 > " ") /* address is 1 lines long*/
            /* ****** move to map#1 **********/
        NB0AM001.NB0AMADR[2] = NB0AW01.NB0AWAD3;
                                   /* slide it up one*/
        NB0AM001.NB0AMADR[3] = NB0AW01.NB0AWAD4;
            /* ****** move to map#2 **********/
        NB0AM002.NB0AMADR[2] = NB0AW01.NB0AWAD3;
        NB0AM002.NB0AMADR[3] = NB0AW01.NB0AWAD4;
            /* ****** move to map#3 **********/
        NB0AM003.NB0AMADR[2] = NB0AW01.NB0AWAD3;
        NB0AM003.NB0AMADR[3] = NB0AW01.NB0AWAD4;
      else
                                   /* ; city, state & zip only*/
            /* ****** move to map#1 **********/
        NB0AM001.NB0AMADR[2] = NB0AW01.NB0AWAD4;
                                   /* slide it up two*/
            /* ****** move to map#2 **********/
        NB0AM002.NB0AMADR[2] = NB0AW01.NB0AWAD4;
            /* ****** move to map#3 **********/
        NB0AM003.NB0AMADR[2] = NB0AW01.NB0AWAD4;
      end
    end
  end



end // end NB0A510

// get nb2rec - bank account data
Function NB0A520()


    /* ----------------------------------------------------*/
           /* get bank account data.......*/
    /* ----------------------------------------------------*/

  set NB2REC empty;
  set TA1REC empty;

  NB2REC.NB1CUST = NB0AW01.NB0AWCCO; /* company*/
  NB2REC.KUMSTRID = NB0AW01.NB0AWCST; /* store*/
  NB2REC.XNXCD = NB0AW01.NB0AWCDP; /* dept.*/
  NB2REC.NB1GRPCD = NB0AW01.NB0AWCGP; /* group*/
  NB2REC.XDVCD = "01"; /* division*/
  NB2REC.XBCCD = NB0AW01.NB0AWBCD; /* brand*/

  call "IO2200" ("S1", SQLCA, NB2REC) {isNoRefresh = yes, isExternal = yes}; /* obtain acct mstr*/

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    NB0A530(); /* get first rec*/
    if (SQLCA.VAGen_SQLCODE == +0)
      NB0AW01.NB0AW2SW = "Y"; /* acct rec.found*/
      while (SQLCA.VAGen_SQLCODE == +0)
        NB0A530(); /* get next rec*/
      end
      if (SQLCA.VAGen_SQLCODE == +0
       || SQLCA.VAGen_SQLCODE == +100)
         /* ok*/
      else
        if (SQLCA.VAGen_SQLCODE == -911)
          converseLib.validationFailed(16);
          NB0AM001.XXXERRID = "NB0A530"; /* error process*/
          NB0AM002.XXXERRID = "NB0A530"; /* error process*/
          NB0AM003.XXXERRID = "NB0A530"; /* error process*/
        else

          TA1REC.TA1TYPE = "DB2";
          TA1REC.TA1FUNC = "RETN";
          TA1REC.TA1PGMNM = "NB0A";
          TA1REC.TA1LOCAT[2] = "NB0A530";
          TA1REC.TA1LOCAT[3] = "IO2200 ";
          TA1REC.TA1LOCAT[4] = "NB0AM001";
          TA1REC.TA1DBASE = "DNBANK.";
          TA1REC.TA1TBLVU = "VNBXCP01";
          NB0AW01.NB0AWCKX = " "; /* clear key display*/
          NB0AW01.NB0AWCCX = NB0AW01.NB0AWCCO; /* convert co. to display*/
          NB0AW01.NB0AWCSX = NB0AW01.NB0AWCST; /* convert str.to display*/
          NB0AW01.NB0AWCDX = NB0AW01.NB0AWCDP; /* convert dpt.to display*/
          NB0AW01.NB0AWCGX = NB0AW01.NB0AWCGP; /* convert grp.to display*/
          NB0AW01.NB0AWBCX = NB0AW01.NB0AWBCD; /* convert brand  display*/
          TA1REC.TA1TBLKE = NB0AW01.NB0AWCKX;
          VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
          VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
          sysLib.rollback();
          VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
          
          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
          XSPF4();
          NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;

        end
      end
    end
    call "IO2200" ("C1", SQLCA, NB2REC) {isNoRefresh = yes, isExternal = yes}; /* obtain acct mstr*/
    if (SQLCA.VAGen_SQLCODE != +0)
      TA1REC.TA1LOCAT[1] = "C1";
    end
  else
    TA1REC.TA1LOCAT[1] = "S1";
  end



  if (SQLCA.VAGen_SQLCODE == +0 /* good return..*/
   || SQLCA.VAGen_SQLCODE == +100) /* rec not found*/

     /* all ok*/

  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* db in use-try later*/
      NB0AM001.XXXERRID = "NB0A520"; /* error process*/
      NB0AM002.XXXERRID = "NB0A520"; /* error process*/
      NB0AM003.XXXERRID = "NB0A520"; /* error process*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0A";
      TA1REC.TA1LOCAT[2] = "NB0A520";
      TA1REC.TA1LOCAT[3] = "IO2200 ";
      TA1REC.TA1LOCAT[4] = "NB0AM001";
      TA1REC.TA1DBASE = "DNBANK.";
      TA1REC.TA1TBLVU = "VNBXCP01";
      NB0AW01.NB0AWCKX = " "; /* clear key display*/
      NB0AW01.NB0AWCCX = NB0AW01.NB0AWCCO; /* convert co. to display*/
      NB0AW01.NB0AWCSX = NB0AW01.NB0AWCST; /* convert str.to display*/
      NB0AW01.NB0AWCDX = NB0AW01.NB0AWCDP; /* convert dpt.to display*/
      NB0AW01.NB0AWCGX = NB0AW01.NB0AWCGP; /* convert grp.to display*/
      NB0AW01.NB0AWBCX = NB0AW01.NB0AWBCD; /* convert brand  display*/
      TA1REC.TA1TBLKE = NB0AW01.NB0AWCKX;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
      NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end



end // end NB0A520

// select next account record.
Function NB0A530()

   /* **************************************************************/
   /* 01-06-94 lgross removed quarter and sales program logic*/
   /* *****************************************************************/

  call "IO2200" ("N1", SQLCA, NB2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/


           /* *********** fill map 3  ********************/
           /* -------------------------------------------*/
           /* --      add allowance                    --*/
           /* -------------------------------------------*/

    if (NB2REC.NB-ADV-PERIOD-CD == "AA")
      NB0AW01.NB0AWSB2 = 1; /* ftwr location*/
      NB0AW01.NB0AWSB3 = 2; /* appr location*/
      NB0A590(); /* format & move*/

    end

           /* -------------------------------------------*/
           /* --      trade discount                   --*/
           /* -------------------------------------------*/

    if (NB2REC.NB-ADV-PERIOD-CD == "TD")
      NB0AW01.NB0AWSB2 = 3; /* ftwr location*/
      NB0AW01.NB0AWSB3 = 4; /* appr location*/
      NB0A590(); /* format & move*/

    end


      /* --------------------------------------------------*/
        /* unassigned pending is on line 9 & 10  of map #1.*/
      /* --------------------------------------------------*/

           /* -------------------------------------------*/
           /* --      defective allowance              --*/
           /* -------------------------------------------*/

    if (NB2REC.NB-ADV-PERIOD-CD == "DA")
      NB0AW01.NB0AWSB2 = 5; /* ftwr location*/
      NB0AW01.NB0AWSB3 = 6; /* appr location*/
      NB0A590(); /* format & movemap2*/

    end


           /* -------------------------------------------*/
           /* --      forfeit co-op                    --*/
           /* -------------------------------------------*/

    if (NB2REC.NB-ADV-PERIOD-CD == "FC")
      NB0AW01.NB0AWSB2 = 7; /* ftwr location*/
      NB0AW01.NB0AWSB3 = 8; /* appr location*/
      NB0A590(); /* format & movemap2*/

    end

           /* -------------------------------------------*/
           /* --      COOP SEASON MAP #1               --*/
           /* -------------------------------------------*/

    if (NB2REC.NB-ADV-PERIOD-CD == "CF"
     && NB2REC.SP1ID == " ")
      NB0AW01.NB0AWSB2 = 1; /* ftwr location*/
      NB0AW01.NB0AWSB3 = 2; /* appr location*/
      NB0A610(); /* format & move*/
    end

    if (NB2REC.NB-ADV-PERIOD-CD == "CB" /* BRIDGE SEASON*/
     && NB2REC.SP1ID == " ")           
      NB0AW01.NB0AWSB2 = 3; /* ftwr location*/
      NB0AW01.NB0AWSB3 = 4; /* appr location*/
      NB0A610(); /* format & move*/
    end

    if (NB2REC.NB-ADV-PERIOD-CD == "CS"
     && NB2REC.SP1ID == " ")
      NB0AW01.NB0AWSB2 = 5; /* ftwr location*/
      NB0AW01.NB0AWSB3 = 6; /* appr location*/
      NB0A610(); /* format & move*/
    end

           /* -------------------------------------------*/
           /* --      COOP SEASON MAP #2               --*/
           /* --         PRIOR YEAR                    --*/
           /* -------------------------------------------*/

    if (NB2REC.NB-ADV-PERIOD-CD == "PF"
     && NB2REC.SP1ID == " ")
      NB0AW01.NB0AWSB2 = 1; /* ftwr location*/
      NB0AW01.NB0AWSB3 = 2; /* appr location*/
      NB0A620(); /* format & move*/
    end

    if (NB2REC.NB-ADV-PERIOD-CD == "PB"
     && NB2REC.SP1ID == " ")
      NB0AW01.NB0AWSB2 = 3; /* ftwr location*/
      NB0AW01.NB0AWSB3 = 4; /* appr location*/
      NB0A620(); /* format & move*/
    end

    if (NB2REC.NB-ADV-PERIOD-CD == "PS"
     && NB2REC.SP1ID == " ")
      NB0AW01.NB0AWSB2 = 5; /* ftwr location*/
      NB0AW01.NB0AWSB3 = 6; /* appr location*/
      NB0A620(); /* format & move*/
    end


  end
end // end NB0A530

// find bank customer (nb1rec)
Function NB0A540()


    /* ----------------------------------------------------*/
            /* bank customer master...(nb1rec)*/
   /* 01-06-94  lgross removed references to screens 4, 5 & 6*/
    /* ----------------------------------------------------*/


  set NB1REC empty;
  set TA1REC empty;

  NB1REC.NB1CUST = NB0AW01.NB0AWCCO; /* company*/
  NB1REC.KUMSTRID = NB0AW01.NB0AWCST; /* store*/
  NB1REC.XNXCD = NB0AW01.NB0AWCDP; /* dept.*/
  NB1REC.NB1GRPCD = NB0AW01.NB0AWCGP; /* group*/
  NB1REC.XDVCD = "01"; /* DIVISION*/
  NB1REC.XBCCD = NB0AW01.NB0AWBCD; /* brand*/

  call "IO2210" ("S ", SQLCA, NB1REC) {isNoRefresh = yes, isExternal = yes}; /* get acct master*/

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    NB0AW01.NB0AW1SW = "Y"; /* a bank cust mstr*/

           /* *** map 1 *****/
    NB0AM001.NB1CSTCT = NB1REC.NB1CSTCT; /* contact name*/
    NB0AM001.NB1CTPH = NB1REC.NB1CTPH; /* contact phone*/

           /* *** map 2 *****/
    NB0AM002.NB1CSTCT = NB1REC.NB1CSTCT; /* contact name*/
    NB0AM002.NB1CTPH = NB1REC.NB1CTPH; /* contact phone*/

           /* *** map 3 *****/
    NB0AM003.NB1CSTCT = NB1REC.NB1CSTCT; /* contact name*/
    NB0AM003.NB1CTPH = NB1REC.NB1CTPH; /* contact phone*/

  else
    if (SQLCA.VAGen_SQLCODE == +100) /* no cust mstr*/

    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* db in use-try later*/
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0A";
        TA1REC.TA1LOCAT[1] = "S ";
        TA1REC.TA1LOCAT[2] = "NB0A540";
        TA1REC.TA1LOCAT[3] = "IO2210 ";
        TA1REC.TA1LOCAT[4] = "NB0AM001";
        TA1REC.TA1DBASE = "DNBANK.";
        TA1REC.TA1TBLVU = "VBCUST01";
        NB0AW01.NB0AWCKX = " ";
                                   /* clear key display area*/
        NB0AW01.NB0AWCCX = NB0AW01.NB0AWCCO;
                                   /* convert co. to display*/
        NB0AW01.NB0AWCSX = NB0AW01.NB0AWCST;
                                   /* convert store -display*/
        NB0AW01.NB0AWCDX = NB0AW01.NB0AWCDP;
                                   /* convert dept  -display*/
        NB0AW01.NB0AWCGX = NB0AW01.NB0AWCGP;
                                   /* convert group -display*/
        NB0AW01.NB0AWBCX = NB0AW01.NB0AWBCD;
                                   /* convert brand -display*/
        TA1REC.TA1TBLKE = NB0AW01.NB0AWCKX;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
        NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end



end // end NB0A540

// get nb3rec - pending total rec
Function NB0A550()


    /* ----------------------------------------------------*/
          /* pending records.....*/
    /* ----------------------------------------------------*/


  set NB3REC empty;
  set TA1REC empty;

  NB3REC.NB1CUST = NB0AW01.NB0AWCCO; /* company*/
  NB3REC.KUMSTRID = NB0AW01.NB0AWCST; /* store*/
  NB3REC.XNXCD = NB0AW01.NB0AWCDP; /* dept.*/
  NB3REC.XDVCD = "01"; /* division*/
  NB3REC.XBCCD = NB0AW01.NB0AWBCD; /* brand*/
  NB3REC.NB1GRPCD = NB0AW01.NB0AWCGP; /* group*/

  call "IO2250" ("S1", SQLCA, NB3REC) {isNoRefresh = yes, isExternal = yes}; /* obtain pending set*/

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    NB0AW01.NB0AMUAN = 0; /* unassigned number*/
    NB0AW01.NB0AMUAD = 0; /* unassigned dollars*/
    NB0A560(); /* get first record*/
    if (SQLCA.VAGen_SQLCODE == +0)
      NB0AW01.NB0AW3SW = "Y"; /* a pending rec found*/
      while (SQLCA.VAGen_SQLCODE == +0)
        NB0A560(); /* get next record*/
      end
    end
    if (SQLCA.VAGen_SQLCODE == +0
     || SQLCA.VAGen_SQLCODE == 100)
       /* ok*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16);
        NB0AM001.XXXERRID = "NB0A550"; /* error process*/
      else

        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0A";
        TA1REC.TA1LOCAT[2] = "NB0A550";
        TA1REC.TA1LOCAT[3] = "IO2250 ";
        TA1REC.TA1LOCAT[4] = "NB0AM001";
        TA1REC.TA1DBASE = "DNBANK.";
        TA1REC.TA1TBLVU = "VBCCLM01";
        NB0AW01.NB0AWCCX = NB0AW01.NB0AWCCO; /* comp*/
        NB0AW01.NB0AWCSX = NB0AW01.NB0AWCST; /* store*/
        NB0AW01.NB0AWCDX = NB0AW01.NB0AWCDP; /* dept*/
        NB0AW01.NB0AWCGX = NB0AW01.NB0AWCGP; /* group*/
        NB0AW01.NB0AWBCX = NB0AW01.NB0AWBCD; /* brand*/
        TA1REC.TA1TBLKE = NB0AW01.NB0AWCKX; /* table key*/
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
        NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;

      end
    end
    call "IO2250" ("C1", SQLCA, NB3REC) {isNoRefresh = yes, isExternal = yes}; /* obtain acct master*/
    if (SQLCA.VAGen_SQLCODE != +0)
      TA1REC.TA1LOCAT[1] = "C1";
    end
  else
    TA1REC.TA1LOCAT[1] = "S1";
  end



  if (SQLCA.VAGen_SQLCODE == +0 /* good return..*/
   || SQLCA.VAGen_SQLCODE == +100) /* rec not found*/

     /* all ok*/

  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0A";
      TA1REC.TA1LOCAT[2] = "NB0A550";
      TA1REC.TA1LOCAT[3] = "IO2250 ";
      TA1REC.TA1LOCAT[4] = "NB0AM001";
      TA1REC.TA1DBASE = "DNBANK.";
      TA1REC.TA1TBLVU = "VBCCLM01";
      NB0AW01.NB0AWCCX = NB0AW01.NB0AWCCO; /* comp*/
      NB0AW01.NB0AWCSX = NB0AW01.NB0AWCST; /* store*/
      NB0AW01.NB0AWCDX = NB0AW01.NB0AWCDP; /* dept*/
      NB0AW01.NB0AWCGX = NB0AW01.NB0AWCGP; /* group*/
      NB0AW01.NB0AWBCX = NB0AW01.NB0AWBCD; /* brand*/
      TA1REC.TA1TBLKE = NB0AW01.NB0AWCKX; /* table key*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
      NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end



end // end NB0A550

// select next pending record.
Function NB0A560()

   /* 01-06-94 lgross removed quarter and sales program logic*/

  call "IO2250" ("N1", SQLCA, NB3REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    if (NB3REC.NB-ADV-PERIOD-CD == "CF" /**/
     && NB3REC.SP1ID == " ")           
      if (NB3REC.NB3FTWPC != 0) /* ftwr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3FTWPC;
        NB0A574(); /* format number*/
        NB0AM001.NB0AMPD1[1] = NB0AW01.NB0AWC08;
      end

      if (NB3REC.NB3APRPC != 0) /* appr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3APRPC;
        NB0A574(); /* format number*/
        NB0AM001.NB0AMPD1[2] = NB0AW01.NB0AWC08;
      end
    end
    /* --------------------------------------------------*/
    if (NB3REC.NB-ADV-PERIOD-CD == "CB" /**/
     && NB3REC.SP1ID == " ")           
      if (NB3REC.NB3FTWPC != 0) /* ftwr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3FTWPC;
        NB0A574(); /* format number*/
        NB0AM001.NB0AMPD1[3] = NB0AW01.NB0AWC08;
      end

      if (NB3REC.NB3APRPC != 0) /* appr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3APRPC;
        NB0A574(); /* format number*/
        NB0AM001.NB0AMPD1[4] = NB0AW01.NB0AWC08;
      end
    end
    /* --------------------------------------------------*/
    if (NB3REC.NB-ADV-PERIOD-CD == "CS" /**/
     && NB3REC.SP1ID == " ")           
      if (NB3REC.NB3FTWPC != 0) /* ftwr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3FTWPC;
        NB0A574(); /* format number*/
        NB0AM001.NB0AMPD1[5] = NB0AW01.NB0AWC08;
      end

      if (NB3REC.NB3APRPC != 0) /* appr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3APRPC;
        NB0A574(); /* format number*/
        NB0AM001.NB0AMPD1[6] = NB0AW01.NB0AWC08;
      end
    end
    /* ------------------------------------------------------------*/
    /* - unassigned pending has no gl code - NON SALES PROGRAMS*/
    /* ------------------------------------------------------------*/
    if (NB3REC.NB-ADV-PERIOD-CD == "UN" /* unassigned pending?*/
     && NB3REC.SP1ID == " ")           
      if (NB3REC.NB3FWCNT != 0) /* ftwr pending tot.count*/
        NB0AW01.NB0AMUAN = NB0AW01.NB0AMUAN + NB3REC.NB3FWCNT; /* count*/
        NB0AW01.NB0AMUAD = NB0AW01.NB0AMUAD + NB3REC.NB3FTWPC; /* $*/
      end

      if (NB3REC.NB3APCNT != 0) /* appr pending tot.count*/
        NB0AW01.NB0AMUAN = NB0AW01.NB0AMUAN + NB3REC.NB3APCNT; /* count*/
        NB0AW01.NB0AMUAD = NB0AW01.NB0AMUAD + NB3REC.NB3APRPC; /* $*/
      end

      if (NB0AW01.NB0AMUAN != 0)
        NB0AM001.NB0AMUAN = NB0AW01.NB0AMUAN; /* unassigned num*/
        NB0AM001.NB0AMUAD = NB0AW01.NB0AMUAD; /* unassigned $*/
        NB0AM002.NB0AMUAN = NB0AW01.NB0AMUAN; /* unassigned num*/
        NB0AM002.NB0AMUAD = NB0AW01.NB0AMUAD; /* unassigned $*/
        NB0AM003.NB0AMUAN = NB0AW01.NB0AMUAN; /* unassigned num*/
        NB0AM003.NB0AMUAD = NB0AW01.NB0AMUAD; /* unassigned $*/
      end
    end
    /* --------------------------------------------------------------*/
    /* ----   prior year co-op    -----------------------*/
    /* --------------------------------------------------*/
    if (NB3REC.NB-ADV-PERIOD-CD == "PF") /* prior year co-op qtr.1*/
      if (NB3REC.NB3FTWPC != 0) /* ftwr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3FTWPC;
        NB0A574(); /* format number*/
        NB0AM002.NB0AMPD1[1] = NB0AW01.NB0AWC08; /* ftwr pend prior yr.*/
      end

      if (NB3REC.NB3APRPC != 0) /* appr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3APRPC;
        NB0A574(); /* format number*/
        NB0AM002.NB0AMPD1[2] = NB0AW01.NB0AWC08; /* appr pend prior yr.*/
      end
    end
    /* --------------------------------------------------*/
    if (NB3REC.NB-ADV-PERIOD-CD == "PB") /* prior year co-op*/
      if (NB3REC.NB3FTWPC != 0) /* ftwr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3FTWPC;
        NB0A574(); /* format number*/
        NB0AM002.NB0AMPD1[3] = NB0AW01.NB0AWC08; /* ftwr pend prior yr.*/
      end

      if (NB3REC.NB3APRPC != 0) /* appr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3APRPC;
        NB0A574(); /* format number*/
        NB0AM002.NB0AMPD1[4] = NB0AW01.NB0AWC08; /* appr pend prior yr.*/
      end
    end
    /* --------------------------------------------------*/
    if (NB3REC.NB-ADV-PERIOD-CD == "PS") /* prior year co-op qtr.3*/
      if (NB3REC.NB3FTWPC != 0) /* ftwr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3FTWPC;
        NB0A574(); /* format number*/
        NB0AM002.NB0AMPD1[5] = NB0AW01.NB0AWC08; /* ftwr pend prior yr.*/
      end

      if (NB3REC.NB3APRPC != 0) /* appr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3APRPC;
        NB0A574(); /* format number*/
        NB0AM002.NB0AMPD1[6] = NB0AW01.NB0AWC08; /* appr pend prior yr.*/
      end
    end
    /* --------------------------------------------------*/
    /* -----      ad allowance .... ---------------------*/
    /* --------------------------------------------------*/
    if (NB3REC.NB-ADV-PERIOD-CD == "AA") /* add allowance.....?*/
      if (NB3REC.NB3FTWPC != 0) /* ftwr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3FTWPC;
        NB0A574(); /* format number*/
        NB0AM003.NB0AMPD1[1] = NB0AW01.NB0AWC08; /* ftwr pending tot.*/
      end

      if (NB3REC.NB3APRPC != 0) /* appr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3APRPC;
        NB0A574(); /* format number*/
        NB0AM003.NB0AMPD1[2] = NB0AW01.NB0AWC08; /* appr pending tot.*/
      end
    end
    /* --------------------------------------------------*/
    if (NB3REC.NB-ADV-PERIOD-CD == "TD") /* trade discount....?*/
      if (NB3REC.NB3FTWPC != 0) /* ftwr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3FTWPC;
        NB0A574(); /* format number*/
        NB0AM003.NB0AMPD1[3] = NB0AW01.NB0AWC08; /* ftwr pending tot.*/
      end

      if (NB3REC.NB3APRPC != 0) /* appr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3APRPC;
        NB0A574(); /* format number*/
        NB0AM003.NB0AMPD1[4] = NB0AW01.NB0AWC08; /* appr pending tot.*/
      end
    end
    /* --------------------------------------------------*/
    if (NB3REC.NB-ADV-PERIOD-CD == "DA") /* defective allowance ??*/
      if (NB3REC.NB3FTWPC != 0) /* ftwr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3FTWPC;
        NB0A572(); /* format number*/
        NB0AM003.NB0AMPD1[5] = NB0AW01.NB0AWC13; /* ftwr pending tot.*/
      end

      if (NB3REC.NB3APRPC != 0) /* appr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3APRPC;
        NB0A574(); /* format number*/
        NB0AM003.NB0AMPD1[6] = NB0AW01.NB0AWC08; /* appr pending tot.*/
      end
    end
    /* --------------------------------------------------*/
    if (NB3REC.NB-ADV-PERIOD-CD == "FC") /* forfeit co-op...... ??*/
      if (NB3REC.NB3FTWPC != 0) /* ftwr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3FTWPC;
        NB0A574(); /* format number*/
        NB0AM003.NB0AMPD1[7] = NB0AW01.NB0AWC08; /* ftwr pending tot.*/
      end

      if (NB3REC.NB3APRPC != 0) /* appr pending tot.*/
        NB0AW01.NB0AWN11 = NB3REC.NB3APRPC;
        NB0A574(); /* format number*/
        NB0AM003.NB0AMPD1[8] = NB0AW01.NB0AWC08; /* appr pending tot.*/
      end
    end
  end



end // end NB0A560

// self edit num. fields
Function NB0A572()


    /* --------------------------------------------------*/
       /* purpose:  zero suppress and insert the decimal*/
                 /* into num. fields.*/
    /* --------------------------------------------------*/

  NB0AW01.NB0AWC13 = " "; /* ; clear edit area*/

  if (NB0AW01.NB0AWN11 < 0)
    NB0AW01.NB0AWNFL = "Y"; /* negative number*/
    NB0AW01.NB0AWN11 = NB0AW01.NB0AWN11 * -1; /* absolute value*/
  else
    NB0AW01.NB0AWNFL = "N"; /* negative number*/
  end

  NB0AW01.NB0AWSB1 = 1; /* ; set subscript-sending*/
  NB0AW01.NB0AWSB4 = 2; /* ; set subscript-rec. field*/
  NB0AW01.NB0AWNSW = "N"; /* ; 1st num. gt 0 found*/
  NB0AW01.NB0AWCHP = "."; /* ; set decimal point*/
  NB0AW01.NB0AWCH2 = NB0AW01.NB0AWNU2; /* move cents*/

      /* -------------------------------------------------------*/
      /* *** loading a num 9v99 into cha 9999999999.99*/
      /* *** start load on 2nd number, formatted = 99,999,999.99*/
      /* -------------------------------------------------------*/

  while (NB0AW01.NB0AWSB1 <= 9)
    if (NB0AW01.NB0AWNSW == "N") /* first number gt 0 not found*/
      if (NB0AW01.NB0AWNU9[NB0AWSB1] == 0)
         /* move nothing*/
      else
        NB0AW01.NB0AWNSW = "Y"; /* first number gt 0 found*/
        NB0AW01.NB0AWCH9[NB0AWSB4] = NB0AW01.NB0AWNU9[NB0AWSB1];
        if (NB0AW01.NB0AWNFL == "Y") /* negative number*/
          NB0AW01.NB0AWSBX = NB0AW01.NB0AWSB4 - 1; /* preceed with neg sign*/
          NB0AW01.NB0AWCH9[NB0AWSBX] = "-";
        end
      end
    else
      NB0AW01.NB0AWCH9[NB0AWSB4] = NB0AW01.NB0AWNU9[NB0AWSB1];
    end

    NB0AW01.NB0AWSB1 = NB0AW01.NB0AWSB1 + 1;
    NB0AW01.NB0AWSB4 = NB0AW01.NB0AWSB4 + 1;
  end

    /* ---------------------------------------------------*/
    /* --   negative number less than -$1.00             -*/
    /* ---------------------------------------------------*/
  if (NB0AW01.NB0AWNFL == "Y" /* negative number*/
   && NB0AW01.NB0AWNSW == "N") /* amt is less than $1.00*/
    NB0AW01.NB0AWCH9[10] = "-"; /* format like: -.59*/
  end



    /* ------------------------------*/
    /* --- insert the ,'s -----------*/
    /* ------------------------------*/

  if (NB0AW01.NB0AWCH9[1] == " ") /* we have room to insert*/
    if (NB0AW01.NB0AWN11 <= -1000.00
     || NB0AW01.NB0AWN11 >= 1000.00)
      NB0AW01.NB0AWCH9[1] = NB0AW01.NB0AWCH9[2];
      NB0AW01.NB0AWCH9[2] = NB0AW01.NB0AWCH9[3];
      NB0AW01.NB0AWCH9[3] = NB0AW01.NB0AWCH9[4];
      NB0AW01.NB0AWCH9[4] = NB0AW01.NB0AWCH9[5];
      NB0AW01.NB0AWCH9[5] = NB0AW01.NB0AWCH9[6];
      NB0AW01.NB0AWCH9[6] = NB0AW01.NB0AWCH9[7];
      NB0AW01.NB0AWCH9[7] = ",";
    end
  end



  if (NB0AW01.NB0AWCH9[1] == " ") /* we have room to insert*/
    if (NB0AW01.NB0AWN11 <= -1000000.00
     || NB0AW01.NB0AWN11 >= 1000000.00)
      NB0AW01.NB0AWCH9[1] = NB0AW01.NB0AWCH9[2];
      NB0AW01.NB0AWCH9[2] = NB0AW01.NB0AWCH9[3];
      NB0AW01.NB0AWCH9[3] = ",";
    end
  end



end // end NB0A572

// pending edit to num fields
Function NB0A574()



    /* --------------------------------------------------*/
       /* purpose:  *** pending file only ***************/
                 /* zero suppress and insert the decimal*/
                 /* into num. fields.*/
    /* --------------------------------------------------*/

  NB0AW01.NB0AWC08 = " "; /* ; clear edit area*/

  if (NB0AW01.NB0AWN11 < 0)
    NB0AW01.NB0AWN11 = NB0AW01.NB0AWN11 * -1;
    NB0AW01.NB0AWNFL = "Y"; /* ; negative number*/
  else
    NB0AW01.NB0AWNFL = "N"; /* ; positive number*/
  end

  NB0AW01.NB0AWSB1 = 3; /* ; set subscript*/
  NB0AW01.NB0AWSB4 = 1; /* ; receiving subscript*/
  NB0AW01.NB0AWNSW = "N"; /* ; 1st num. gt 0 found*/
  NB0AW01.NB0AWC2P = "."; /* ; set decimal point*/
  NB0AW01.NB0AWC22 = NB0AW01.NB0AWNU2; /* move cents*/


  while (NB0AW01.NB0AWSB1 <= 9)
    if (NB0AW01.NB0AWNSW == "N")
      if (NB0AW01.NB0AWNU9[NB0AWSB1] == 0)
         /* move nothing*/
      else
        NB0AW01.NB0AWNSW = "Y"; /* first number gt 0 found*/
        NB0AW01.NB0AWC25[NB0AWSB4] = NB0AW01.NB0AWNU9[NB0AWSB1];
        if (NB0AW01.NB0AWNFL == "Y") /* negative number*/
          if (NB0AW01.NB0AWSB4 > 1)
            NB0AW01.NB0AWSBX = NB0AW01.NB0AWSB4 - 1;
            NB0AW01.NB0AWC25[NB0AWSBX] = "-";
          else
            NB0AW01.NB0AWC08 = "ERROR";
            NB0AW01.NB0AWSB1 = 9; /* stop move.*/
            NB0AW01.NB0AWC22 = "**"; /* clear out cents*/
          end
        end
      end
    else
      NB0AW01.NB0AWC25[NB0AWSB4] = NB0AW01.NB0AWNU9[NB0AWSB1];
    end

    NB0AW01.NB0AWSB1 = NB0AW01.NB0AWSB1 + 1;
    NB0AW01.NB0AWSB4 = NB0AW01.NB0AWSB4 + 1;
  end


     /* ********   insert the ,'s ************/

  if (NB0AW01.NB0AWC25[1] == " ")
    if (NB0AW01.NB0AWN11 <= -1000.00
     || NB0AW01.NB0AWN11 >= 1000.00)
      NB0AW01.NB0AWC25[1] = NB0AW01.NB0AWC25[2];
      NB0AW01.NB0AWC25[2] = NB0AW01.NB0AWC25[3];
      NB0AW01.NB0AWC25[3] = NB0AW01.NB0AWC25[4];
      NB0AW01.NB0AWC25[4] = ",";
    end
  end




end // end NB0A574

// load map line ..(map 3 )
Function NB0A590()


    /* --------------------------------------------------*/
    /* *  purpose:  load map3 data                      **/

            /* 'aa' - add alowance*/
            /* 'td' - trade discount*/
            /* 'da' - defective allowance*/
            /* 'fc' - forfeit co-op*/

         /* nb0awsb2 - location of ftwr*/
         /* nb0awsb3 - location of appr*/
    /* --------------------------------------------------*/

  if (NB2REC.NB2FTWCB != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2FTWCB; /* ftwr current bal.*/
    NB0A572(); /* ;        format number*/
    NB0AM003.NB0AMCB1[NB0AWSB2] = NB0AW01.NB0AWC13; /* ftwr cur bal*/
  end

    /* --------------------------------------------------*/

  if (NB2REC.NB2FWACR != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2FWACR; /* ftwr accrual bal.*/
    NB0A572(); /* ;        format number*/
    NB0AM003.NB0AMAC1[NB0AWSB2] = NB0AW01.NB0AWC13; /* ftwr accrual*/
  end

    /* --------------------------------------------------*/

  if (NB2REC.NB2FWCLM != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2FWCLM; /* ftwr claims*/
    NB0A572(); /* ;        format number*/
    NB0AM003.NB0AMCL1[NB0AWSB2] = NB0AW01.NB0AWC13; /* ftwr claims*/
  end



  if (NB2REC.NB2FTWCB != 0
   || NB2REC.NB2FWACR != 0
   || NB2REC.NB2FWCLM != 0)

    NBWREC.NBWNU8 = NB2REC.ZZZCHGDT; /* reformat*/
    XPNB200();
    NB0AM003.NB0AMLT1[NB0AWSB2] = NBWREC.NBWCH8; /* last change dt*/

    NB0AM003.NB0AMRN1[NB0AWSB2] = NB2REC.NB2CHRSN; /* last chg rsn*/
  end

    /* --------------------------------------------------*/

  if (NB2REC.NB2APRCB != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2APRCB; /* appr current bal.*/
    NB0A572(); /* ;        format number*/
    NB0AM003.NB0AMCB1[NB0AWSB3] = NB0AW01.NB0AWC13; /* appr cur bal.*/
  end

    /* --------------------------------------------------*/

  if (NB2REC.NB2APACR != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2APACR; /* appr accruals*/
    NB0A572(); /* ;        format number*/
    NB0AM003.NB0AMAC1[NB0AWSB3] = NB0AW01.NB0AWC13; /* appr accruals*/
  end

    /* --------------------------------------------------*/

  if (NB2REC.NB2APCLM != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2APCLM; /* appr claims*/
    NB0A572(); /* ;        format number*/
    NB0AM003.NB0AMCL1[NB0AWSB3] = NB0AW01.NB0AWC13; /* appr claims*/
  end


  if (NB2REC.NB2APRCB != 0
   || NB2REC.NB2APACR != 0
   || NB2REC.NB2APCLM != 0)

    NBWREC.NBWNU8 = NB2REC.ZZZCHGDT; /* reformat*/
    XPNB200();
    NB0AM003.NB0AMLT1[NB0AWSB3] = NBWREC.NBWCH8; /* last change dt*/

    NB0AM003.NB0AMRN1[NB0AWSB3] = NB2REC.NB2CHRSN; /* last chg rsn*/
  end



end // end NB0A590

// get set of nb8rec records
Function NB0A592()


    /* ----------------------------------------------------*/
            /* bank customer text  ...(nb8rec)*/
       /* note: there can only be 28 lines - max!*/
   /* 01-06-93  lgross   removed all references to screens 4, 5 & 6*/
    /* ----------------------------------------------------*/


  set NB8REC empty;
  set TA1REC empty;

  NB8REC.NB1CUST = NB0AW01.NB0AWCCO; /* company*/
  NB8REC.XDVCD = "01"; /* brand*/
  NB8REC.XBCCD = NB0AW01.NB0AWBCD; /* division*/
  NB0AW01.NB0AWNOT = "NO "; /* no notes found*/

  TA1REC.TA1LOCAT[1] = "S1";
  call "IO2240" ("S1", SQLCA, NB8REC) {isNoRefresh = yes, isExternal = yes}; /* get acct master*/

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/

    while (SQLCA.VAGen_SQLCODE == +0 /* good return....*/
     && NB0AW01.NB0AWNOT == "NO ")
      NB0A594(); /* find a note!*/
    end

    NB0AM001.NB0AMNOT = NB0AW01.NB0AWNOT; /* cust note yes/no to screen*/
    NB0AM002.NB0AMNOT = NB0AW01.NB0AWNOT; /* cust note yes/no to screen*/
    NB0AM003.NB0AMNOT = NB0AW01.NB0AWNOT; /* cust note yes/no to screen*/

    if (NB0AW01.NB0AWNOT == "YES") /* defined = bright pink..*/
      set NB0AM001.NB0AMNOT initialAttributes;
      set NB0AM002.NB0AMNOT initialAttributes;
      set NB0AM003.NB0AMNOT initialAttributes;
    else
      set NB0AM001.NB0AMNOT invisible;
      set NB0AM002.NB0AMNOT invisible;
      set NB0AM003.NB0AMNOT invisible;
    end

    TA1REC.TA1LOCAT[1] = "C1";
    call "IO2240" ("C1", SQLCA, NB8REC) {isNoRefresh = yes, isExternal = yes}; /* get acct master*/
  end

  if (SQLCA.VAGen_SQLCODE == +0) /* file opened & closed ok*/
    /* .... no problem, continue*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* db in use-try later*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0A";
      TA1REC.TA1LOCAT[2] = "NB0A592";
      TA1REC.TA1LOCAT[3] = "IO2240 ";
      TA1REC.TA1LOCAT[4] = "NB0AM001";
      TA1REC.TA1DBASE = "DNBANK.";
      TA1REC.TA1TBLVU = "VBCTXT01";
      NB0AW01.NB0AWCKX = " "; /* clear key display area*/
      NB0AW01.NB0AWCCX = NB0AW01.NB0AWCCO; /* convert co. to display*/
      NB0AW01.NB0AWBCX = NB0AW01.NB0AWBCD; /* convert brand for display*/
      TA1REC.TA1TBLKE = NB0AW01.NB0AWCKX;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
      NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end



end // end NB0A592

// find non-blank cust rec.
Function NB0A594()



  call "IO2240" ("N1", SQLCA, NB8REC) {isNoRefresh = yes, isExternal = yes}; /* next text rec*/

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/

    if (NB8REC.NB8TEXT > " ") /* text*/
      NB0AW01.NB0AWNOT = "YES"; /* found it!*/
    end

  else
    if (SQLCA.VAGen_SQLCODE == +100) /* no cust notes*/
      /* .... no problem, continue*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* db in use-try later*/
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0A";
        TA1REC.TA1LOCAT[1] = "N1";
        TA1REC.TA1LOCAT[2] = "NB0A594";
        TA1REC.TA1LOCAT[3] = "IO2240 ";
        TA1REC.TA1LOCAT[4] = "NB0AM001";
        TA1REC.TA1DBASE = "DNBANK.";
        TA1REC.TA1TBLVU = "VBCTXT01";
        NB0AW01.NB0AWCKX = " ";
                                   /* clear key display area*/
        NB0AW01.NB0AWCCX = NB0AW01.NB0AWCCO;
                                   /* convert co. to display*/
        TA1REC.TA1TBLKE = NB0AW01.NB0AWCKX;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
        NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end



end // end NB0A594

// converse map1
Function NB0A600()
   /* **/

  converse NB0AM001 ;



   /* ------------------- end nb0a600 -------------------------*/
end // end NB0A600

// LOAD MAP LINE (MAP 1)
Function NB0A610()
         /* nb0awsb2 - location of ftwr*/
         /* nb0awsb3 - location of appr*/
   /* 01-06-94  lgross  changed from map 4 to map 1*/
    /* --------------------------------------------------*/

  if (NB2REC.NB2FTWCB != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2FTWCB; /* ftwr current bal.*/
    NB0A572(); /* ;        format number*/
    NB0AM001.NB0AMCB1[NB0AWSB2] = NB0AW01.NB0AWC13; /* ftwr cur bal*/
  end

    /* --------------------------------------------------*/

  if (NB2REC.NB2FWACR != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2FWACR; /* ftwr accrual*/
    NB0A572(); /* ;        format number*/
    NB0AM001.NB0AMAC1[NB0AWSB2] = NB0AW01.NB0AWC13; /* ftwr accrual*/
  end

    /* --------------------------------------------------*/

  if (NB2REC.NB2FWCLM != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2FWCLM; /* ftwr claims*/
    NB0A572(); /* ;        format number*/
    NB0AM001.NB0AMCL1[NB0AWSB2] = NB0AW01.NB0AWC13; /* ftwr claims*/
  end


  if (NB2REC.NB2FTWCB != 0
   || NB2REC.NB2FWACR != 0
   || NB2REC.NB2FWCLM != 0)

    NBWREC.NBWNU8 = NB2REC.ZZZCHGDT; /* reformat*/
    XPNB200();
    NB0AM001.NB0AMLT1[NB0AWSB2] = NBWREC.NBWCH8; /* last chg dt*/

    NB0AM001.NB0AMRN1[NB0AWSB2] = NB2REC.NB2CHRSN; /* last chg rsn*/
  end

    /* --------------------------------------------------*/
    /* --------------------------------------------------*/
    /* --------------------------------------------------*/

  if (NB2REC.NB2APRCB != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2APRCB; /* appr current bal.*/
    NB0A572(); /* format number*/
    NB0AM001.NB0AMCB1[NB0AWSB3] = NB0AW01.NB0AWC13; /* appr cur bal.*/
  end

    /* --------------------------------------------------*/

  if (NB2REC.NB2APACR != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2APACR; /* appr accrual tot.*/
    NB0A572(); /* ;        format number*/
    NB0AM001.NB0AMAC1[NB0AWSB3] = NB0AW01.NB0AWC13; /* appr accruals*/
  end

    /* --------------------------------------------------*/

  if (NB2REC.NB2APCLM != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2APCLM; /* appr claims*/
    NB0A572(); /* ;        format number*/
    NB0AM001.NB0AMCL1[NB0AWSB3] = NB0AW01.NB0AWC13; /* appr claims*/
  end


  if (NB2REC.NB2APRCB != 0
   || NB2REC.NB2APACR != 0
   || NB2REC.NB2APCLM != 0)

    NBWREC.NBWNU8 = NB2REC.ZZZCHGDT; /* reformat*/
    XPNB200();
    NB0AM001.NB0AMLT1[NB0AWSB3] = NBWREC.NBWCH8; /* last chg dt*/

    NB0AM001.NB0AMRN1[NB0AWSB3] = NB2REC.NB2CHRSN; /* last chg rsn*/
  end



end // end NB0A610

// LOAD MAP LINE (MAP 2)
Function NB0A620()
         /* nb0awsb2 - location of ftwr*/
         /* nb0awsb3 - location of appr*/

   /* 01-06-94  lgross changed map5 to map2*/
    /* --------------------------------------------------*/

  if (NB2REC.NB2FTWCB != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2FTWCB; /* ftwr current bal.*/
    NB0A572(); /* ;        format number*/
    NB0AM002.NB0AMCB1[NB0AWSB2] = NB0AW01.NB0AWC13; /* ftwr cur bal*/
  end

    /* --------------------------------------------------*/

  if (NB2REC.NB2FWACR != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2FWACR; /* ftwr accrual*/
    NB0A572(); /* ;        format number*/
    NB0AM002.NB0AMAC1[NB0AWSB2] = NB0AW01.NB0AWC13; /* ftwr accrual*/
  end

    /* --------------------------------------------------*/

  if (NB2REC.NB2FWCLM != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2FWCLM; /* ftwr claims*/
    NB0A572(); /* ;        format number*/
    NB0AM002.NB0AMCL1[NB0AWSB2] = NB0AW01.NB0AWC13; /* ftwr claims*/
  end


  if (NB2REC.NB2FTWCB != 0
   || NB2REC.NB2FWACR != 0
   || NB2REC.NB2FWCLM != 0)

    NBWREC.NBWNU8 = NB2REC.ZZZCHGDT; /* reformat*/
    XPNB200();
    NB0AM002.NB0AMLT1[NB0AWSB2] = NBWREC.NBWCH8; /* last chg dt*/

    NB0AM002.NB0AMRN1[NB0AWSB2] = NB2REC.NB2CHRSN; /* last chg rsn*/
  end

    /* --------------------------------------------------*/
    /* --------------------------------------------------*/
    /* --------------------------------------------------*/

  if (NB2REC.NB2APRCB != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2APRCB; /* appr current bal.*/
    NB0A572(); /* format number*/
    NB0AM002.NB0AMCB1[NB0AWSB3] = NB0AW01.NB0AWC13; /* appr cur bal.*/
  end

    /* --------------------------------------------------*/

  if (NB2REC.NB2APACR != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2APACR; /* appr accrual tot.*/
    NB0A572(); /* ;        format number*/
    NB0AM002.NB0AMAC1[NB0AWSB3] = NB0AW01.NB0AWC13; /* appr accruals*/
  end

    /* --------------------------------------------------*/

  if (NB2REC.NB2APCLM != 0)
    NB0AW01.NB0AWN11 = NB2REC.NB2APCLM; /* appr claims*/
    NB0A572(); /* ;        format number*/
    NB0AM002.NB0AMCL1[NB0AWSB3] = NB0AW01.NB0AWC13; /* appr claims*/
  end


  if (NB2REC.NB2APRCB != 0
   || NB2REC.NB2APACR != 0
   || NB2REC.NB2APCLM != 0)

    NBWREC.NBWNU8 = NB2REC.ZZZCHGDT; /* reformat*/
    XPNB200();
    NB0AM002.NB0AMLT1[NB0AWSB3] = NBWREC.NBWCH8; /* last chg dt*/

    NB0AM002.NB0AMRN1[NB0AWSB3] = NB2REC.NB2CHRSN; /* last chg rsn*/
  end



end // end NB0A620

// converse map2
Function NB0A700()
   /* **/

  converse NB0AM002 ;



   /* ------------------- end nb0a700 -------------------------*/
end // end NB0A700

// converse map3
Function NB0A800()
   /* **/

  converse NB0AM003 ;



   /* ------------------- end nb0a800 -------------------------*/
end // end NB0A800

// validate attention keys...
Function NB0A900()


   /* 01-04-94 lgross removed references to screens 4,5 and 6*/
   /* ------------------------------------------------------------*/
   /* stop indiscriminate button pressing..........*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf1
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pa2
   || converseVar.eventKey is pf13
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf16
   || converseVar.eventKey is pf18
   || converseVar.eventKey is pf20
   || converseVar.eventKey is pf21)

     /* screen operator awake!*/
  else
    converseLib.validationFailed(03); /* invalid pk key..*/
  end



  if (NB0AW01.NB0AWSSW == "1") /* viewing first screen*/
    if (NB0AM001.CATOAP > " ") /* requesting fast pathing*/
      COMMAREA.CATOAP = NB0AM001.CATOAP;
      COMMAREA.CAITEM = NB0AM001.CAITEM;
      COMMAREA.CAFROMAP = "NB0A";
      XSEXIT(); /* transfer out*/

       /* --- and if you are still in here !*/
      NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
      converseLib.validationFailed(); /* Force alarm to sound*/
      exit stack; /* Exit to redisplay map*/
    end
  end

  if (NB0AW01.NB0AWSSW == "2") /* viewing second screen*/
    if (NB0AM002.CATOAP > " ") /* requesting fast pathing*/
      COMMAREA.CATOAP = NB0AM002.CATOAP;
      COMMAREA.CAITEM = NB0AM002.CAITEM;
      COMMAREA.CAFROMAP = "NB0A";
      XSEXIT(); /* transfer out*/

       /* --- and if you are still in here !*/
      NB0AM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
      converseLib.validationFailed(); /* Force alarm to sound*/
      exit stack; /* Exit to redisplay map*/
    end
  end


  if (NB0AW01.NB0AWSSW == "3") /* viewing ad allow screen*/
    if (NB0AM003.CATOAP > " ") /* requesting fast pathing*/
      COMMAREA.CATOAP = NB0AM003.CATOAP;
      COMMAREA.CAITEM = NB0AM003.CAITEM;
      COMMAREA.CAFROMAP = "NB0A";
      XSEXIT(); /* transfer out*/

       /* --- and if you are still in here !*/
      NB0AM003.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
      converseLib.validationFailed(); /* Force alarm to sound*/
      exit stack; /* Exit to redisplay map*/
    end
  end


  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    XSPF1(); /* Exit to the HELP facility*/

    NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force error*/
    exit stack; /* Exit to redisplay map*/
  end


  if (converseVar.eventKey is pf3) /* PF4 was pressed*/
    COMMAREA.CATOAP = "NB0M"; /* return to menu*/
    COMMAREA.CAFROMAP = "NB0A"; /* from here to there*/
    XSEXIT();

     /* --- and if you are still in here !*/
    NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    exit stack; /* Exit to redisplay map*/
  end


  if (converseVar.eventKey is pf4) /* PF4 was pressed*/
    XSPF4(); /* Exit to system main menu*/

    NB0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    exit stack; /* Exit to redisplay map*/
  end


  if (converseVar.eventKey is pf7) /* scroll backwards*/
    if (NB0AW01.NB0AWSSW == "1")
      NB0AW01.NB0AWSSW = "1"; /* current season*/
    else
      if (NB0AW01.NB0AWSSW == "2") /* PRIOR seasonR*/
        NB0AW01.NB0AWSSW = "1"; /* stay here*/
      else
        if (NB0AW01.NB0AWSSW == "3") /* AD ALLOW/TD*/
          NB0AW01.NB0AWSSW = "2"; /* SALES PROGRAM*/
        end
      end
    end
  end


  if (converseVar.eventKey is pf8) /* scroll forwards*/
    if (NB0AW01.NB0AWSSW == "1")
      NB0AW01.NB0AWSSW = "2"; /* PRIOR season*/
    else
      if (NB0AW01.NB0AWSSW == "2")
        NB0AW01.NB0AWSSW = "3"; /* trade allowance*/
      else
        if (NB0AW01.NB0AWSSW == "3") /* /TRADE IS LAST SCREEN*/
          NB0AW01.NB0AWSSW = "3";
        end
      end
    end
  end



  if (converseVar.eventKey is pf13) /* transfer to acct.summary*/
    NB0A910(); /* set up transfer fields*/
    COMMAREA.CATOAP = "NB0G";
    XSEXIT();
  end


  if (converseVar.eventKey is pf15) /* transfer to history*/
    NB0A910(); /* set up transfer fields*/
    COMMAREA.CATOAP = "NB0C";
    XSEXIT();
  end


  if (converseVar.eventKey is pf16) /* transfer to customer inq.*/
    NB0A910(); /* set up transfer fields*/
    COMMAREA.CATOAP = "NB0B";
    XSEXIT();
  end


  if (converseVar.eventKey is pf18) /* fund transfer*/
    NB0A910(); /* set up transfer fields*/
    COMMAREA.CATOAP = "NB0D";
    XSEXIT();
  end


  if (converseVar.eventKey is pf20) /* transfer to group desc.*/
    NB0A910(); /* set up transfer fields*/
    COMMAREA.CATOAP = "NB0E";
    XSEXIT();
  end


  if (converseVar.eventKey is pf21) /* transfer to group member*/
    NB0A910(); /* set up transfer fields*/
    COMMAREA.CATOAP = "NB0F";
    XSEXIT();
  end



end // end NB0A900

// transfer from nb0a to nb0b
Function NB0A910()

   /* 01-05-93  lgross removed references to screen 4,5 and 6*/
   /* ***************************************************************/
  if (NB0AW01.NB0AWSSW == "1") /* viewing first screen*/
    NB0AW01.NB0AWCCO = NB0AM001.KUCCOID; /* save company*/
    NB0AW01.NB0AWCST = NB0AM001.KUMSTRID; /* store*/
    NB0AW01.NB0AWCDP = NB0AM001.XNXCD; /* dept*/
    NB0AW01.NB0AWCGP = NB0AM001.NB1GRPCD; /* group*/
    NB0AW01.NB0AWBCD = NB0AM001.XBCCD; /* brand*/
    COMMAREA.CAITEM = NB0AW01.NB0AWCAI; /* move key to comm*/
    COMMAREA.CAFROMAP = "NB0A";
  end


  if (NB0AW01.NB0AWSSW == "2") /* viewing second screen*/
    NB0AW01.NB0AWCCO = NB0AM002.KUCCOID; /* save  company*/
    NB0AW01.NB0AWCST = NB0AM002.KUMSTRID; /* store*/
    NB0AW01.NB0AWCDP = NB0AM002.XNXCD; /* dept*/
    NB0AW01.NB0AWCGP = NB0AM002.NB1GRPCD; /* group*/
    NB0AW01.NB0AWBCD = NB0AM002.XBCCD; /* brand*/
    COMMAREA.CAITEM = NB0AW01.NB0AWCAI; /* move key to comm*/
    COMMAREA.CAFROMAP = "NB0A";
  end


  if (NB0AW01.NB0AWSSW == "3") /* viewing third  screen*/
    NB0AW01.NB0AWCCO = NB0AM003.KUCCOID; /* save company*/
    NB0AW01.NB0AWCST = NB0AM003.KUMSTRID; /* store*/
    NB0AW01.NB0AWCDP = NB0AM003.XNXCD; /* dept*/
    NB0AW01.NB0AWCGP = NB0AM003.NB1GRPCD; /* group*/
    NB0AW01.NB0AWBCD = NB0AM003.XBCCD; /* brand*/
    COMMAREA.CAITEM = NB0AW01.NB0AWCAI; /* move key to comm*/
    COMMAREA.CAFROMAP = "NB0A";
  end



end // end NB0A910

//*** RECORD=NB0AW01 ****
// ;********************** nb0aw01 ****************************
// ;
// ;         work record for nb0a: bank balance inquiry
// ;
// ; 10/26/93 lgross Added NB0AWCC, NB0AWCSC and NB0AWCDC as
// ;                 redefines to allow spaces to enter from
// ;                 fastpath or customer screens. Shortened
// ;                 NB0AWCCO to 7 bytes from 8 and NB0AWCDP
// ;                 FROM to 2 bytes from 4.  They will now
// ;                 match data from customer screens.
// ;
// ;***********************************************************
// ***********************
Record NB0AW01 type basicRecord
  5 NB0AWGRP NB0AWGRP ; 
    10 NB0AWSB1 NB0AWSB1 ; 
    10 NB0AWSB2 NB0AWSB2 ; 
    10 NB0AWSB3 NB0AWSB3 ; 
    10 NB0AWSB4 NB0AWSB4 ; 
    10 NB0AWSBX NB0AWSBX ; 
    10 NB0AWMNO NB0AWMNO ; 
    10 NB0AMUAN NB0AMUAN ; 
    10 NB0AMUAD NB0AMUAD ; 
    10 NB0AW-SPGM-UAN NB0AW-SPGM-UAN ; 
    10 NB0AW-SPGM-UAD NB0AW-SPGM-UAD ; 
    10 NB0AW1SW NB0AW1SW ; 
    10 NB0AW2SW NB0AW2SW ; 
    10 NB0AW3SW NB0AW3SW ; 
    10 NB0AWSSW NB0AWSSW ; 
    10 NB0AWKSW NB0AWKSW ; 
    10 NB0AWNSW NB0AWNSW ; 
    10 NB0AWNFL NB0AWNFL ; 
    10 NB0AWKEY NB0AWKEY ; 
      15 KUCCOID KUCCOID ; 
      15 KUMSTRID KUMSTRID ; 
      15 XNXCD XNXCD ; 
      15 NB1GRPCD NB1GRPCD ; 
      15 XBCCD XBCCD ; 
    10 * char(1) ; 
    10 NB0AWCAI NB0AWCAI ; 
      15 NB0AWCCC NB0AWCCC ; 
        20 NB0AWCCO NB0AWCCO ; 
      15 NB0AWCSC NB0AWCSC ; 
        20 NB0AWCST NB0AWCST ; 
      15 NB0AWCDC NB0AWCDC ; 
        20 NB0AWCDP NB0AWCDP ; 
      15 NB0AWCGP NB0AWCGP ; 
      15 NB0AWBCD NB0AWBCD ; 
    10 NB0AWCKX NB0AWCKX ; 
      15 NB0AWCCX NB0AWCCX ; 
      15 NB0AWCSX NB0AWCSX ; 
      15 NB0AWCDX NB0AWCDX ; 
      15 NB0AWCGX NB0AWCGX ; 
      15 NB0AWBCX NB0AWBCX ; 
    10 NB0AWFRP NB0AWFRP ; 
    10 NB0AWARP NB0AWARP ; 
    10 NB0AWAD1 NB0AWAD1 ; 
    10 NB0AWAD2 NB0AWAD2 ; 
    10 NB0AWAD3 NB0AWAD3 ; 
    10 NB0AWAD4 NB0AWAD4 ; 
      15 NB0AWADC NB0AWADC ; 
      15 NB0AWADS NB0AWADS ; 
      15 NB0AWAX1 NB0AWAX1 ; 
      15 NB0AWADZ NB0AWADZ ; 
    10 * char(2) ; 
    10 NB0AWN11 NB0AWN11 ; 
      15 NB0AWNU9 NB0AWNU9 [9] ; 
      15 NB0AWNU2 NB0AWNU2 ; 
    10 * char(3) ; 
    10 NB0AWC13 NB0AWC13 ; 
      15 NB0AWCH9 NB0AWCH9 [10] ; 
      15 NB0AWCHP NB0AWCHP ; 
      15 NB0AWCH2 NB0AWCH2 ; 
    10 * char(4) ; 
    10 NB0AWC08 NB0AWC08 ; 
      15 NB0AWC25 NB0AWC25 [7] ; 
      15 NB0AWC2P NB0AWC2P ; 
      15 NB0AWC22 NB0AWC22 ; 
    10 NB0AMRDT NB0AMRDT ; 
    10 NB0AWNOT NB0AWNOT ; 
    10 NB0AWHRP NB0AWHRP ; 
end // end NB0AW01

//*** RECORD=NB3REC ****
// **************  nike bank pending claims  ******************
// 
// DB2 TABLE:           dnbank.vbcclm01
// 
// COPYLIB MEMBER:      DCL00396
// 
// I/O MOD:             IO2250
// 
// KEY TO DB2 TABLE:    nb1cust (customer id)
//                      kumstrid(store)
//                      xnxcd   (department)
//                      nb1gprcd(group code)
//                      yadcd   (ad program)
// 
// DATE CREATED:        11/11/87
// 
// MAINTENANCE LOG:
// 
//   DATE    INIT.      COMMENT
// --------  -----      ---------------------------------------
// 11-11-87   ssj       INITIAL RECORD CREATION
// 03-28-89   ssj       add division codes.
// 06-11-90   ssj       add brand.
// 01/01/91  CHYDE      Chg data item descriptions to db2 nms.
// 04-17-92   OAR       ADD NB-ADV-PERIOD-CD, SP1ID
// 
// 
// 
// ------------------------------------------------------------
// **********************
Record NB3REC type basicRecord
  5 NB3GROUP NB3GROUP ; 
    10 NB1CUST NB1CUST ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 XDVCD XDVCD ; 
    10 XBCCD XBCCD ; 
    10 NB1GRPCD NB1GRPCD ; 
    10 NB-ADV-PERIOD-CD NB-ADV-PERIOD-CD ; 
    10 YADCD YADCD ; 
    10 SP1ID SP1ID ; 
    10 GLCD GLCD ; 
    10 NB3FWCNT NB3FWCNT ; 
    10 NB3FTWPC NB3FTWPC ; 
    10 NB3APCNT NB3APCNT ; 
    10 NB3APRPC NB3APRPC ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end NB3REC

DataItem NB0AMRDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// total $ in unassigned claims
DataItem NB0AMUAD num(10,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// number of unassigned claims
DataItem NB0AMUAN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// total $ in unass. claims spgm
DataItem NB0AW-SPGM-UAD num(10,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// number of unass. claims spgm
DataItem NB0AW-SPGM-UAN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// found nb1rec (cust)
DataItem NB0AW1SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// found nb2rec (acct)
DataItem NB0AW2SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// found nb3rec (pending)
DataItem NB0AW3SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// address line 1
DataItem NB0AWAD1 char(37)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// address line 2
DataItem NB0AWAD2 char(37)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// address line 3
DataItem NB0AWAD3 char(37)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// address line 4
DataItem NB0AWAD4 char(37)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// city
DataItem NB0AWADC char(24)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// state
DataItem NB0AWADS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// zip
DataItem NB0AWADZ char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// app. srep id
DataItem NB0AWARP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// filler
DataItem NB0AWAX1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// caitem brand
DataItem NB0AWBCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error group brand
DataItem NB0AWBCX char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pending edit num field
DataItem NB0AWC08 char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// edited num.field
DataItem NB0AWC13 char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NB0AWC22 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NB0AWC25 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// decimal point
DataItem NB0AWC2P char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key on entry or change
DataItem NB0AWCAI char(17)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

DataItem NB0AWCCC char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// caitem company id
DataItem NB0AWCCO num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// error  company id
DataItem NB0AWCCX num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// caitem dept code
DataItem NB0AWCDC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// caitem dept code
DataItem NB0AWCDP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// error  dept code
DataItem NB0AWCDX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// caitem group code
DataItem NB0AWCGP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error  group code
DataItem NB0AWCGX char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NB0AWCH2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NB0AWCH9 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// decimal point
DataItem NB0AWCHP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new key-error display only
DataItem NB0AWCKX char(21)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

DataItem NB0AWCSC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// caitem store id
DataItem NB0AWCST num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// error  store id
DataItem NB0AWCSX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// ftwr srep id
DataItem NB0AWFRP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group level
DataItem NB0AWGRP char(308)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold sales rep.....
DataItem NB0AWHRP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// previous valid key...
DataItem NB0AWKEY char(12)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// change in key switch
DataItem NB0AWKSW char(1)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// hold ezemno number
DataItem NB0AWMNO num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// num.field s9(9)v99
DataItem NB0AWN11 num(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// this is a negative number!
DataItem NB0AWNFL char(1)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// customer notes exist yes/no
DataItem NB0AWNOT char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// found a valid num.char.
DataItem NB0AWNSW char(1)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

DataItem NB0AWNU2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NB0AWNU9 num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript
DataItem NB0AWSB1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// subscript-footwear loc.
DataItem NB0AWSB2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// subscript-app. location
DataItem NB0AWSB3 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// subscript- receiving field
DataItem NB0AWSB4 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// subscript- temporary for sign
DataItem NB0AWSBX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// screen select switch
DataItem NB0AWSSW char(1)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// NB_APRL_PCLM_CNT
DataItem NB3APCNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NB_APRL_PCLM_TOT
DataItem NB3APRPC decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NB_FTWR_PCLM_TOT
DataItem NB3FTWPC decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NB_FTWR_PCLM_CNT
DataItem NB3FWCNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record group level.
DataItem NB3GROUP char(51)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

