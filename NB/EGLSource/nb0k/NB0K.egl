package nb0k;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import nb.common.*;
import ta.common.TA1REC;
//*** PROGRAM=NB0K ****
//  *********      NB0K: SPECIAL MESSAGES FOR -          ******
//                       SALES REP & AGENCY REPORTS.
// 
// 
// PURPOSE: HOLD A SPECIAL MESSAGE THAT WILL PRINT AT THE
//          TOP OF THE SALES REP AND AGENCY REPORTS.
// 
// 
// NARRATIVE:
//    AT REGULAR INTERVALS, THERE IS A NEED TO COMMUNICATE
//    NIKE BANK INFORMATION TO THE SALES REPS AND AGENCIES.
//    BY PRINTING THIS ON EXISTING REPORTS,  A MORE CONSISTANT
//    COMMUNICATION METHOD CAN BE MAINTAINED.
// 
// 
// 
//   MAINTENANCE HISTORY:
// 
//    date      name      description
//  --------  ---------  --------------------------------------
//  00-00-89  sjob       creation........
//  10-10-90  sjob  E0:DB CHANE-ADD BRAND TO BANK CUST NOTES.
// 
// ************************************************************
// 
// 
// *********************
Program NB0K type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  NB0KW01 NB0KW01; // record
  NB8REC NB8REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use NB0KM.NB0KM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NB0K050: NB0K050();
    ;
    ;
    goto NB0K100;
    ;
    ;
    ;
    NB0K100: NB0K100();
    ;
    ;
    goto NB0K100;
    ;
    ;
    ;
  end // end main
end // end NB0K

// initial process
Function NB0K050()
  ;
   /* ----------------------------------------------------------*/
   /* initialization process....*/
   /* ----------------------------------------------------------*/
  ;
  XSENTRY();
  XSSEGTR(); /* set segmented*/
  ;
  ;
  ;
  set NB0KM001 empty; /* clear maps & w/s*/
  set NB0KW01 empty;
  set SQLCA empty;
  ;
  ;
  ;
  NB0KM001.XXXERRID = "NB0K100"; /* location of converse*/
  NB0KM001.XXXCURDT = VGVar.currentShortGregorianDate; /* current date*/
  NB0KW01.NB0KWDT1 = VGVar.currentShortGregorianDate;
  NB0KW01.NB0KWHYY = NB0KW01.NB0KWD1Y; /* year*/
  NB0KW01.NB0KWHMM = NB0KW01.NB0KWD1M; /* month*/
  NB0KW01.NB0KWHDD = NB0KW01.NB0KWD1D; /* day*/
  ;
  if (NB0KWD1Y >= "50")
    NB0KW01.NB0KWHCC = 19; /* century*/
  else
    NB0KW01.NB0KWHCC = 20; /* century*/
  end
  ;
  COMMAREA.CAUSERA = " ";
  NB0K052(); /* load ws with existing data*/
  NB0K054(); /* move ws to map*/
  ;
  ;
  ;
   /* -------------  end process nb0k050  --------------------*/
end // end NB0K050

// get  customer text(nb8rec)
Function NB0K052()
  ;
  ;
   /* -----------------------------------------------------*/
   /* BANK CUSTOMER TEXT    .....     (nb8rec)    ....*/
   /* note: * Customer #989898989 is the dummy record used to put*/
           /* specialty messages on both the monthly sales rep*/
           /* and the agency reports.  Lines 1 - 6 used by sales*/
           /* rep, lines 7 - 12 for agency.*/
   /* -----------------------------------------------------*/
  ;
  NB0KW01.NB0KWSB1 = 1; /* subscript*/
  while (NB0KW01.NB0KWSB1 <= 12)
    NB0KW01.NB8TEXT[NB0KWSB1] = " "; /* instruction*/
    NB0KW01.NB0KWSB1 = NB0KW01.NB0KWSB1 + 1; /* set up subscript*/
  end
  ;
  ;
  set NB8REC empty;
  set TA1REC empty;
  ;
  NB8REC.NB1CUST = 989898989; /* company dummy #*/
  NB8REC.XDVCD = "01"; /* division*/
  NB8REC.XBCCD = "01"; /* BRAND*/
  TA1REC.TA1LOCAT[1] = "S1";
  ;
  ;
  call "IO2240" ("S1", SQLCA, NB8REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    ;
    NB0KW01.NB0KWSB1 = 1; /* initialize subscript*/
    while (SQLCA.VAGen_SQLCODE == +0) /* good return*/
      NB0K056(); /* load w/s with text*/
    end
    ;
    TA1REC.TA1LOCAT[1] = "C1";
    call "IO2240" ("C1", SQLCA, NB8REC) {isNoRefresh = yes, isExternal = yes};
    ;
  end
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* filer opened & closed ok*/
    /* ok*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* in use*/
      converseLib.validationFailed(16);
    else
      NB0KM001.XXXERRID = "NB0K052"; /* error process*/
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0K";
      TA1REC.TA1LOCAT[2] = "NB0K052";
      TA1REC.TA1LOCAT[3] = "IO2240 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1LOCAT[4] = "NB0KM001";
      TA1REC.TA1DBASE = "DNBANK.";
      TA1REC.TA1TBLVU = "VBCTXT01";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
      NB0KM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end
  ;
  ;
  ;
end // end NB0K052

// reset messages from w/s
Function NB0K054()
  ;
  ;
  ;
   /* ----------------------------------------------------*/
            /* restore both messages from last update.*/
   /* ----------------------------------------------------*/
  ;
  NB0KW01.NB0KWSB1 = 1;
  while (NB0KW01.NB0KWSB1 <= 12)
    NB0KM001.NB8TEXT[NB0KWSB1] = NB0KW01.NB8TEXT[NB0KWSB1];
    NB0KW01.NB0KWSB1 = NB0KW01.NB0KWSB1 + 1; /* bump up subscript*/
  end
  ;
  ;
  ;
end // end NB0K054

// load w/s with text
Function NB0K056()
  ;
  ;
  ;
  call "IO2240" ("N1", SQLCA, NB8REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    NB0KW01.NB8TEXT[NB0KWSB1] = NB8REC.NB8TEXT;
    NB0KW01.NB0KWSB1 = NB0KW01.NB0KWSB1 + 1; /* bump up subscript*/
  else
    if (SQLCA.VAGen_SQLCODE == +100)
      /* .....no problem, continue*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* db in use, try later*/
      else
        NB0KM001.XXXERRID = "NB0K056"; /* error process*/
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0K";
        TA1REC.TA1LOCAT[1] = "N1";
        TA1REC.TA1LOCAT[2] = "NB0K056";
        TA1REC.TA1LOCAT[3] = "IO2240 ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1LOCAT[4] = "NB0KM001";
        TA1REC.TA1DBASE = "DNBANK.";
        TA1REC.TA1TBLVU = "VBCTXT01";
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
        NB0KM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end
  ;
  ;
  ;
end // end NB0K056

// main process
Function NB0K100()
  ;
  ;
  NB0K110(); /* converse map*/
  ;
  NB0K120(); /* pf key processing*/
  ;
  if (converseVar.eventKey is pa2)
    NB0K054(); /* cancel any current input*/
  else
    NB0KM001.XXXERRID = "NB0K100"; /* map display process*/
    NB0KW01.NB0KWSB1 = 1;
    while (NB0KW01.NB0KWSB1 <= 12)
      NB0K130(); /* change/add message*/
    end
  end
  ;
  ;
  ;
   /* -------------  end process nb0k100  --------------------*/
end // end NB0K100

// converse
Function NB0K110()
  converse NB0KM001 ;
  ;
  ;
end // end NB0K110

// validate attention keys...
Function NB0K120()
  ;
  ;
   /* ------------------------------------------------------------*/
   /* stop indiscriminate button pressing..........*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf1
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pa2
   || converseVar.eventKey is pf13
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf16
   || converseVar.eventKey is pf18
   || converseVar.eventKey is pf20
   || converseVar.eventKey is pf21)
    ;
     /* screen operator awake!*/
  else
    converseLib.validationFailed(03); /* invalid pk key..*/
  end
  ;
  if (NB0KM001.CATOAP > " ") /* requesting fast pathing*/
    COMMAREA.CATOAP = NB0KM001.CATOAP;
    COMMAREA.CAITEM = NB0KM001.CAITEM;
    COMMAREA.CAFROMAP = "NB0K";
    XSEXIT(); /* transfer out*/
    ;
     /* --- and if you are still in here !*/
    NB0KM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    XSPF1(); /* Exit to the HELP facility*/
    NB0KM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force error*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (converseVar.eventKey is pf3) /* PF4 was pressed*/
    COMMAREA.CATOAP = "NB0M"; /* return to menu*/
    COMMAREA.CAFROMAP = "NB0K"; /* from here to there*/
    XSEXIT();
    ;
     /* --- and if you are still in here !*/
    NB0KM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (converseVar.eventKey is pf4) /* PF4 was pressed*/
    XSPF4(); /* Exit to system main menu*/
    NB0KM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (converseVar.eventKey is pf13) /* transfer to acct.summary*/
    COMMAREA.CATOAP = "NB0G";
    COMMAREA.CAFROMAP = "NB0K";
    XSEXIT();
  end
  ;
  if (converseVar.eventKey is pf15) /* transfer to history*/
    COMMAREA.CATOAP = "NB0C";
    COMMAREA.CAFROMAP = "NB0K";
    XSEXIT();
  end
  ;
  if (converseVar.eventKey is pf16) /* transfer to customer inq.*/
    COMMAREA.CATOAP = "NB0B";
    COMMAREA.CAFROMAP = "NB0K";
    XSEXIT();
  end
  ;
  if (converseVar.eventKey is pf18) /* fund transfer*/
    COMMAREA.CATOAP = "NB0D";
    COMMAREA.CAFROMAP = "NB0K";
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf20) /* transfer to group desc.*/
    COMMAREA.CATOAP = "NB0E";
    COMMAREA.CAFROMAP = "NB0K";
    XSEXIT();
  end
  ;
  if (converseVar.eventKey is pf21) /* transfer to group member*/
    COMMAREA.CATOAP = "NB0F";
    COMMAREA.CAFROMAP = "NB0K";
    XSEXIT();
  end
  ;
  ;
  ;
end // end NB0K120

// locate screen changes.
Function NB0K130()
  ;
  ;
  ;
   /* ----------------------------------------------------*/
            /* locate changes.*/
   /* ----------------------------------------------------*/
  ;
  if (NB0KW01.NB8TEXT[NB0KWSB1] != NB0KM001.NB8TEXT[NB0KWSB1]) /* changed*/
    set NB8REC empty;
    NB8REC.NB1CUST = 989898989; /* company*/
    NB8REC.XDVCD = "01"; /* division*/
    NB8REC.XBCCD = "01"; /* BRAND*/
    NB8REC.NB8TXSEQ = NB0KW01.NB0KWSB1; /* text sequence number*/
    TA1REC.TA1LOCAT[1] = "S ";
    call "IO2240" ("S ", SQLCA, NB8REC) {isNoRefresh = yes};
    if (SQLCA.VAGen_SQLCODE == +100) /* new message line*/
      NB0K132();
    else
      if (SQLCA.VAGen_SQLCODE == +0)
        NB0K134(); /* update message line*/
      else
        if (SQLCA.VAGen_SQLCODE == -911) /* db conflict*/
          converseLib.validationFailed(16);
        else
          NB0KM001.XXXERRID = "NB0K130"; /* error process*/
          TA1REC.TA1TYPE = "DB2";
          TA1REC.TA1FUNC = "RETN";
          TA1REC.TA1PGMNM = "NB0K";
          TA1REC.TA1LOCAT[2] = "NB0K130";
          TA1REC.TA1LOCAT[3] = "IO2240 ";
          TA1REC.TA1LOCAT[4] = "NB0KM001";
          TA1REC.TA1DBASE = "DNBANK.";
          TA1REC.TA1TBLVU = "VBCTXT01";
          TA1REC.TA1TBLKE = 989898989; /* key used*/
          VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
          VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
          sysLib.rollback();
          VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
          
          call "TA0020" (TA1REC, SQLCA);
          XSPF4();
          NB0KM001.VAGen_EZEMSG = COMMAREA.CAMSG;
        end
      end
    end
  end
  ;
  NB0KW01.NB0KWSB1 = NB0KW01.NB0KWSB1 + 1; /* set up subscript*/
  ;
  ;
  ;
end // end NB0K130

// add (nb8rec) instructions
Function NB0K132()
  ;
  ;
   /* -----------------------------------------------------*/
       /* add nb8rec instruction line.*/
   /* -----------------------------------------------------*/
  ;
  set NB8REC empty;
  set TA1REC empty;
  ;
  NB8REC.NB1CUST = 989898989; /* company dummy #*/
  NB8REC.XDVCD = "01"; /* division*/
  NB8REC.XBCCD = "01"; /* BRAND*/
  NB8REC.NB8TXSEQ = NB0KW01.NB0KWSB1; /* sequence number*/
  NB8REC.NB8TEXT = NB0KM001.NB8TEXT[NB0KWSB1];
  NB8REC.ZZZSDT = NB0KW01.NB0KWHDT; /* set up date*/
  NB8REC.ZZZCHGDT = 0; /* change date*/
  TA1REC.TA1LOCAT[1] = "A ";
  ;
  call "IO2240" ("A ", SQLCA, NB8REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    /* ok*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* in use*/
      converseLib.validationFailed(16);
    else
      NB0KM001.XXXERRID = "NB0K132"; /* error process*/
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0K";
      TA1REC.TA1LOCAT[2] = "NB0K132";
      TA1REC.TA1LOCAT[3] = "IO2240 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1LOCAT[4] = "NB0KM001";
      TA1REC.TA1DBASE = "DNBANK.";
      TA1REC.TA1TBLVU = "VBCTXT01";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
      NB0KM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end
  ;
  ;
  ;
end // end NB0K132

// change (nb8rec) instructions
Function NB0K134()
  ;
  ;
   /* -----------------------------------------------------*/
       /* update nb8rec instruction line.*/
   /* -----------------------------------------------------*/
  ;
  ;
  NB8REC.NB8TXSEQ = NB0KW01.NB0KWSB1; /* sequence number*/
  NB8REC.NB8TEXT = NB0KM001.NB8TEXT[NB0KWSB1];
  NB8REC.ZZZSDT = NB0KW01.NB0KWHDT; /* set up date*/
  TA1REC.TA1LOCAT[1] = "U ";
  ;
  call "IO2240" ("U ", SQLCA, NB8REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    /* ok*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* in use*/
      converseLib.validationFailed(16);
    else
      NB0KM001.XXXERRID = "NB0K134"; /* error process*/
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0K";
      TA1REC.TA1LOCAT[2] = "NB0K134";
      TA1REC.TA1LOCAT[3] = "IO2240 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1LOCAT[4] = "NB0KM001";
      TA1REC.TA1DBASE = "DNBANK.";
      TA1REC.TA1TBLVU = "VBCTXT01";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
      NB0KM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end
  ;
  ;
  ;
end // end NB0K134

//*** RECORD=NB0KW01 ****
// ;********************** nb0aw01 ****************************
// ;
// ;         work record for nb0a: bank balance inquiry
// ;
// ;***********************************************************
// ***********************
Record NB0KW01 type basicRecord
  5 NB0KW1GP NB0KW1GP ; 
    10 NB0KWSB1 NB0KWSB1 ; 
    10 NB8TEXT NB8TEXT [12] ; 
    10 NB0KWDT1 NB0KWDT1 ; 
      15 NB0KWD1Y NB0KWD1Y ; 
      15 NB0KWD1M NB0KWD1M ; 
      15 NB0KWD1D NB0KWD1D ; 
    10 NB0KWHDT NB0KWHDT ; 
      15 NB0KWHCC NB0KWHCC ; 
      15 NB0KWHYY NB0KWHYY ; 
      15 NB0KWHMM NB0KWHMM ; 
      15 NB0KWHDD NB0KWHDD ; 
    10 NB0KWT1 NB0KWT1 ; 
      15 NB0KWTHR NB0KWTHR ; 
      15 NB0KWTC1 NB0KWTC1 ; 
      15 NB0KWTMI NB0KWTMI ; 
      15 NB0KWTC2 NB0KWTC2 ; 
      15 NB0KWTSC NB0KWTSC ; 
    10 NB0KWT2 NB0KWT2 ; 
      15 NB0KWTHH NB0KWTHH ; 
      15 NB0KWTMN NB0KWTMN ; 
    10 NB0KWT3 NB0KWT3 ; 
      15 NB0KWT3H NB0KWT3H ; 
      15 NB0KWT3M NB0KWT3M ; 
      15 NB0KWT3S NB0KWT3S ; 
end // end NB0KW01

// group level
DataItem NB0KW1GP char(755)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   - day
DataItem NB0KWD1D char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   - month
DataItem NB0KWD1M char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   - year
DataItem NB0KWD1Y char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ezedte
DataItem NB0KWDT1 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//    - century
DataItem NB0KWHCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//    - day
DataItem NB0KWHDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// reformatted date
DataItem NB0KWHDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//    - month
DataItem NB0KWHMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//    - year
DataItem NB0KWHYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript
DataItem NB0KWSB1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// hh:mm:ss
DataItem NB0KWT1 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hh mm
DataItem NB0KWT2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hhmmss
DataItem NB0KWT3 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//     hours
DataItem NB0KWT3H num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//     minutes
DataItem NB0KWT3M num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//     seconds
DataItem NB0KWT3S num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//     :
DataItem NB0KWTC1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//     :
DataItem NB0KWTC2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//     hours
DataItem NB0KWTHH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//     hours
DataItem NB0KWTHR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//     minutes
DataItem NB0KWTMI num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//     minutes
DataItem NB0KWTMN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//     seconds
DataItem NB0KWTSC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

