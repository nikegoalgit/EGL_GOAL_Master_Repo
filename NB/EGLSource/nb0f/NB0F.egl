package nb0f;

import corpcom3.XPNB100;
import corpcom3.XPNB200;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XBCCD;
import corpx1.XGPCD;
import corpx2.XNXCD;
import corpy2.YADCD;
import corpz3.ZZZCHGCT;
import ku.common.KUCREC;
import ku.common.KUMCITYS;
import ku.common.KUMREC;
import ku.common.KUMSTRID;
import ku.common.KUMSTSNM;
import ku.common.KUMXSTCD;
import ku.common.KUNREC;
import nb.common.*;
import ta.common.TA1REC;
import ta.common.TA2REC;
//*** PROGRAM=NB0F ****
// NIKE BANK GROUP MEMBER MAINTENANCE
// 
// OVERVIEW:
//     nb0f is a stand alone application within the nike bank
//     system.  company groups are for those companies who
//     choose to have their advertising dollars accumulated at
//     at the store/department/gpc level combined into a group
//     account.
// 
// PURPOSE:
//     nb0f supports the maintenance of each group member list.
//     each new member to be added to the group will have a
//     company, store, department and gpc code entered.  each
//     group member can only be active in one group at a time.
// 
//                    MAINTENANCE
// 
//  date      init     reason
// ------     ----     ----------------------------------------
// 120787      glw     created
// 030288     sjob     changed pfkeys to standard bank pf's
// 112188     sjob     changed company length from 8 to 7
// 020189     sjob     b22:pf8 is not paging.
// 033089     sjob     add division code  of 01 (domestic).
// 041389     sjob     support multiple divisions
// 042689     jwood    added noncsp option to calls
// 042689     jwood    added xssegtr logic
// 061190     sjob     e69: convert old divisions to div/brand.
// 072690     sjob     e69: add division to member update proc.
// 070991     sjob     e71: add ability to group across
//                         companies, wild card stores, & wild
//                         card departments.
// 112291     oricha   fix w01: increase sb3 subscript to 3
//                     and increase array from 200 to 300.
// 1126961    oricha   fix nb0f130,600: hardcoded array amount
//                     needed adjustment from 200 to 300.
//                     130,600,010 fix top/bottom scrolling.
// 10-27-93   lgross   added numeric checks to company.
//                     Changed: NB0F000, NB0FW01
// 02-24-1998 TTHAN1   Y2KFIX - CHANGE NB0F622 FOR NEW END
//                     DATE FROM 12-31-1999 TO 12-31-2043.
// *********************
Program NB0F type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  KUMREC KUMREC; // record
  KUNREC KUNREC; // record
  NB0FW01 NB0FW01; // record
  NB5REC NB5REC; // record
  NB6REC NB6REC; // record
  NBWREC NBWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use NB0FM.NB0FM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NB0F000: NB0F000();
    goto NB0F010;
    NB0F010: NB0F010();
    goto NB0F010;
  end // end main
end // end NB0F

// application initial
Function NB0F000()

                       /* initialization*/

     /* **********************************************************/
     /* * this process initializes program work area and clears **/
     /* * the map areas.                                        **/
     /* 10-27-93 lgross Added numeric check for customer id     **/
     /* **********************************************************/


      /* check entry security*/

  XSENTRY();
  XSSEGTR(); /* set segmented transaction id*/


      /* initialize map and working storage*/

  set NB0FW01 empty; /* initialize work record*/
  set SQLCA empty;
  set NB0FM001 initial; /* initialize map*/
  NB0FW01.NB0FWALL = -1; /* compare for the 'all' condition*/

  if (COMMAREA.CAITEM > " ")
    NB0FW01.NB0FWCAI = COMMAREA.CAITEM; /* key passed in?*/
    if (NB0FW01.NB0FWCBC == "  ")
      NB0FW01.NB0FWCBC = "01"; /* default to domestic*/
    end

    if (NB0FW01.NB0FWCCC is numeric) /* no spaces*/
       /* next sentence*/
    else
      NB0FW01.NB0FWCCO = 0; /* set store to zero*/
    end
    if (NB0FW01.NB0FWCCO > 0)
       /* ------------------------*/
          /* move key to map*/
       /* -----------------------*/
      NB0FM001.NB5PNTCO = NB0FW01.NB0FWCCO;
      NB0FM001.NB1GRPCD = NB0FW01.NB0FWCGP;
      NB0FM001.XBCCD = NB0FW01.NB0FWCBC; /* brand*/
    end
  end

   /* --------------------------------------*/
      /* force key change*/
   /* --------------------------------------*/
  NB0FW01.NB0FWCCO = 0;
  NB0FW01.NB0FWCGP = " ";
  NB0FW01.NB0FWCBC = " "; /* brand*/

  COMMAREA.CAITEM = " ";


  NB0FW01.NB0FWTOP = 1; /* setting array top*/
  NB0FM001.XXXRVNBR = 1; /* map revision number*/

  NB0FW01.NB0FWCUS = 0; /* initialize hold company*/
  NB0FW01.NB0FWSTO = 0; /* initialize hold store*/
  NB0FW01.NB0FWDPT = 0; /* initialize hold dept*/
  NB0FW01.NB0FWGPC = " "; /* initialize hold gpc*/

    /* move current date to working storage ccyymmdd format*/

  NB0FW01.NB0FWDT1 = VGVar.currentShortGregorianDate;
  NB0FW01.NB0FWYY = NB0FW01.NB0FWD1Y;
  NB0FW01.NB0FWMM = NB0FW01.NB0FWD1M;
  NB0FW01.NB0FWDD = NB0FW01.NB0FWD1D;

  NB0FW01.NB0FWD2M = NB0FW01.NB0FWMM;
  NB0FW01.NB0FWD1 = "-";
  NB0FW01.NB0FWD2D = NB0FW01.NB0FWDD;
  NB0FW01.NB0FWD2 = "-";
  NB0FW01.NB0FWD2Y = NB0FW01.NB0FWYY;
  NB0FM001.NB0FMDTE = NB0FW01.NB0FWDT2;

  if (NB0FW01.NB0FWYY <= 51)
    NB0FW01.NB0FWCC = 20;
  else
    NB0FW01.NB0FWCC = 19;
  end


  NB0FM001.XXXERRID = "NB0F300";
                                   /* initialize map display process*/



end // end NB0F000

// master loop
Function NB0F010()


     /* ********************************************************/
     /* *     master loop - group member maintenance          **/
     /* ********************************************************/


  NB0F100(); /* check for key change*/

  if (converseVar.validationMsgNum == 0) /* no errors*/
    if (NB0FW01.NB0FWKSW == "Y"     /* key change*/
     || converseVar.eventKey is pa2 /* refresh map*/
     || converseVar.eventKey is pf7 /* scroll back*/
     || converseVar.eventKey is pf8 /* scroll forward*/
     || converseVar.eventKey is pf9 /* scroll top*/
     || converseVar.eventKey is pf10) /* scroll bottom*/

      NB0F200(); /* format screen fro w/s*/
    end
  else
    if (converseVar.validationMsgNum == 76 /* no members*/
     || converseVar.validationMsgNum == 19) /* database updated*/
      NB0F200(); /* format screen from w/s*/
    end
  end

  NB0FW01.NB0FWKSW = "N"; /* turn off key change*/

  NB0F300(); /* converse map*/

  if (NB0FM001.XBCCD == "  ") /* no brand    entered*/
    NB0FM001.XBCCD = "01";
  end

  NB0F400(); /* attention key processing*/

  NB0F500(); /* reset errors/setup add lines*/

  if (converseVar.eventKey is pa2) /* cancel*/
    NB0FM001.NB5PNTCO = NB0FW01.NB5PNTCO; /* restore group company*/
    NB0FM001.NB1GRPCD = NB0FW01.NB1GRPCD; /* restore group cd*/
    NB0FM001.XBCCD = NB0FW01.XBCCD; /* restore brand*/
  else
    NB0F600(); /* edit screen*/
    if (NB0FW01.NB0FWUSW == "Y" /* updates made*/
     && converseVar.validationMsgNum == 0) /* no errors*/
      NB0F700(); /* update database*/

      if (converseVar.validationMsgNum == 0) /* no errors*/
        converseLib.validationFailed(19); /* database update successful*/
      end
    else
      if (converseVar.validationMsgNum == 0) /* no errors*/
        if (converseVar.eventKey is pf7 /* scroll back*/
         || converseVar.eventKey is pf8 /* scroll forward*/
         || converseVar.eventKey is pf9 /* scroll top*/
         || converseVar.eventKey is pf10) /* scroll bottom*/
          NB0F800(); /* scroll pointers*/
        end
      else
        exit stack;
      end
    end
    /* END ;*/
  end



end // end NB0F010

// check key change
Function NB0F100()

                      /* check key change*/

     /* ---------------------------------------------------------*/
       /* check for any change in key (comp,store,dept,group)*/
     /* ---------------------------------------------------------*/

  NB0FW01.NB0FWKSW = "N"; /* turnoff key change*/

  if (NB0FM001.NB5PNTCO > 0) /* company entered*/
    if (NB0FM001.NB1GRPCD > " ") /* group code entered*/
      if (NB0FM001.NB5PNTCO != NB0FW01.NB0FWCCO /* change in comp*/
       || NB0FM001.NB1GRPCD != NB0FW01.NB0FWCGP /* chg.in grp. cd*/
       || NB0FM001.XBCCD != NB0FW01.XBCCD)      /* chg.in brand*/

        NB0F110(); /* validate key*/

        if (converseVar.validationMsgNum == 0 /* valid key*/
         || converseVar.validationMsgNum == 76) /* no members*/
          NB0FW01.NB0FWKSW = "Y"; /* key change*/
          NB0FW01.NB0FWCCO = NB0FM001.NB5PNTCO; /* move to hold*/
          NB0FW01.NB0FWCGP = NB0FM001.NB1GRPCD; /* entry key*/
          NB0FW01.NB0FWCBC = NB0FM001.XBCCD; /* brand*/

          NB0FW01.NB5PNTCO = NB0FM001.NB5PNTCO; /* working storage*/
          NB0FW01.NB1GRPCD = NB0FM001.NB1GRPCD; /* key area*/
          NB0FW01.XBCCD = NB0FM001.XBCCD; /* brand*/
        end

      end
    else
      converseLib.validationFailed(62); /* group code required*/
      NB0FM001.XXXERRID = "NB0F100"; /* error process*/
      set NB0FM001.NB1GRPCD cursor, modified, bold;
    end
  else
    converseLib.validationFailed(31); /* customer number req.*/
    NB0FM001.XXXERRID = "NB0F100"; /* error process*/
    set NB0FM001.NB5PNTCO cursor, modified, bold;
  end


     /* ----------------- end of nb0f100 ------------------------*/
end // end NB0F100

// validate key
Function NB0F110()

    /* ----------------------------------------------------*/
                    /* find store data*/
    /* ----------------------------------------------------*/


  set NB5REC empty;
  set SQLCA empty;
  set TA1REC empty;

  NB5REC.NB5PNTCO = NB0FM001.NB5PNTCO; /* group parent company*/
  NB5REC.NB1GRPCD = NB0FM001.NB1GRPCD; /* bank group code*/
  NB5REC.XDVCD = "01"; /* group division*/
  NB5REC.XBCCD = NB0FM001.XBCCD; /* group brand*/

  call "IO2220" ("S ", SQLCA, NB5REC) {isNoRefresh = yes, isExternal = yes}; /* obtain group record*/

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/

    NB0FW01.YADCD = NB5REC.YADCD; /* load ad program to w/s*/
    NB0FW01.NB5GPDSC = NB5REC.NB5GPDSC; /* load description to w/s*/
    NB0FW01.XBCCD = NB5REC.XBCCD; /* load brand       to w/s*/

    NB0FM001.YADCD = NB5REC.YADCD; /* load ad program to map*/
    NB0FM001.NB5GPDSC = NB5REC.NB5GPDSC; /* load description to map*/
    NB0FM001.XBCCD = NB5REC.XBCCD; /* load brand       to map*/

    set NB6REC empty;
    set SQLCA empty;
    set TA1REC empty;

    NB6REC.NB5PNTCO = NB5REC.NB5PNTCO; /* company id*/
    NB6REC.NB1GRPCD = NB5REC.NB1GRPCD; /* group code*/
    NB6REC.XDVCD = "01"; /* division*/
    NB6REC.XBCCD = NB5REC.XBCCD; /* brand*/
    NB0F120(); /* get member list*/

  else
    if (SQLCA.VAGen_SQLCODE == +100) /* rec not found - this company/*/
      converseLib.validationFailed(39); /* group has not been created*/
      NB0FM001.XXXERRID = "NB0F110"; /* error process*/
      set NB0FM001.NB5PNTCO cursor, modified, bold;
      set NB0FM001.NB1GRPCD modified, bold;
      NB0FW01.NB0FWCCO = 0;
      NB0FW01.NB0FWCGP = " ";
    end
  end


  if (SQLCA.VAGen_SQLCODE == 0 /* good return*/
   || SQLCA.VAGen_SQLCODE == 100) /* not found*/
     /* everything ok*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
      NB0FM001.XXXERRID = "NB0F110"; /* error process*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0F";
      TA1REC.TA1LOCAT[1] = "S ";
      TA1REC.TA1LOCAT[2] = "NB0F110";
      TA1REC.TA1LOCAT[3] = "IO2220 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1LOCAT[4] = "NB0FM001";
      TA1REC.TA1DBASE = "NBANK. ";
      TA1REC.TA1TBLVU = "VBCGRP01";
      NB0FW01.NB0FWCKX = " "; /* clear key display area*/
      NB0FW01.NB0FWCCX = NB0FW01.NB5PNTCO; /* convert co. display*/
      NB0FW01.NB0FWCSX = NB0FW01.KUMSTRID; /* convert st. display*/
      NB0FW01.NB0FWCXX = NB0FW01.XBCCD; /* convert brand*/
      TA1REC.TA1TBLKE = NB0FW01.NB0FWCKX; /* display key used.*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
      NB0FM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end



end // end NB0F110

// get member list
Function NB0F120()

                      /* get member list*/


  call "IO2230" ("S1", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == +0) /* a good return - record found*/
    NB0FW01.NB0FWKSW = "Y"; /* key change*/
    NB0FW01.NB0FWSB1 = 1; /* initialize w/s array subscript*/
    NB0FW01.NB0FWTOP = 1; /* initialize w/s top array*/
    NB0FW01.NB0FWMAX = 0; /* initialize max line in w.s.*/
    NB0FW01.NB0FWCOM = 0; /* initialize hold company*/
    NB0FW01.NB0FWSTR = 0; /* initialize hold store*/
    NB0F130(); /* get first nb6rec*/
    if (SQLCA.VAGen_SQLCODE == +0) /* record found*/
      while (SQLCA.VAGen_SQLCODE == +0) /* record found*/
        NB0F130(); /* continue to get nb6rec's*/
      end
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* not found condition*/
        converseLib.validationFailed(76); /* this co / group has no members*/
        NB0FM001.XXXERRID = "NB0F120"; /* error process*/
        set NB0FM001.NB5PNTCO cursor, modified, bold;
        set NB0FM001.NB1GRPCD modified, bold;
      end
    end

    NB0FW01.NB0FWMAX = NB0FW01.NB0FWSB1 - 1; /* last valid entry*/

    call "IO2230" ("C1", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes}; /* close set*/
    if (SQLCA.VAGen_SQLCODE != +0) /* could not close....*/
      TA1REC.TA1LOCAT[1] = "C1";
      TA1REC.TA1LOCAT[2] = "NB0F120";
      NB0FM001.XXXERRID = "NB0F120";
    end
  else
    TA1REC.TA1LOCAT[1] = "S1";
    TA1REC.TA1LOCAT[2] = "NB0F120";
    NB0FM001.XXXERRID = "NB0F120";
  end


  if (SQLCA.VAGen_SQLCODE == +0
   || SQLCA.VAGen_SQLCODE == +100)
     /* every thing is fine....*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
      NB0FM001.XXXERRID = "NB0F120"; /* error process*/
    else
      TA1REC.TA1LOCAT[1] = "S ";
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0F";
      TA1REC.TA1LOCAT[2] = "NB0F120";
      TA1REC.TA1LOCAT[3] = "IO2230";
      TA1REC.TA1LOCAT[4] = "NB0F130";
      TA1REC.TA1DBASE = "DNBANK";
      TA1REC.TA1TBLVU = "VBGMEM01";
      NB0FW01.NB0FWCKX = " "; /* clear key display area*/
      NB0FW01.NB0FWCCX = NB0FW01.NB5PNTCO; /* convert company*/
      NB0FW01.NB0FWCSX = NB0FW01.KUMSTRID; /* convert store*/
      NB0FW01.NB0FWCXX = NB0FW01.XBCCD; /* convert brand*/
      TA1REC.TA1TBLKE = NB0FW01.NB0FWCKX; /* display key*/
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end




end // end NB0F120

// get member list/load ws.
Function NB0F130()

              /* get member list/load working storage*/


    /* ***************************************************/
    /* *  purpose:  get next nb6rec...group member list **/
    /* *            load working storage                **/
    /* ***************************************************/

    /* ****************************************************/
    /* * NB0fW01.NB0fWSB1 = POSITION IN ARRAY BEING LOADED*/
    /* * NB0fW01.NB0fWmax = end of used working storage*/
    /* ****************************************************/

  call "IO2230" ("N1", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    if (NB0FW01.NB0FWSB1 <= 300)
                                   /* can only retrive 200 records into w/s*/
      NB0FW01.NB1CUST[NB0FWSB1] = NB6REC.NB1CUST;
      NB0FW01.KUMSTRID[NB0FWSB1] = NB6REC.KUMSTRID;
      NB0FW01.XNXCD[NB0FWSB1] = NB6REC.XNXCD;
      NB0FW01.XGPCD[NB0FWSB1] = NB6REC.XGPCD;
      NB0FW01.NB6GMEDT[NB0FWSB1] = NB6REC.NB6GMEDT;
      NB0FW01.NB6GMXDT[NB0FWSB1] = NB6REC.NB6GMXDT;
      NB0FW01.ZZZCHGCT[NB0FWSB1] = NB6REC.ZZZCHGCT;

      if (NB0FW01.NB0FWCOM == NB6REC.NB1CUST /* no change in*/
       && NB0FW01.NB0FWSTR == NB6REC.KUMSTRID) /* customer or store*/
        NB0FW01.KUMSTSNM[NB0FWSB1] = NB0FW01.NB0FWSNM; /* from hold*/
        NB0FW01.KUMCITYS[NB0FWSB1] = NB0FW01.NB0FWCTY; /* in working*/
        NB0FW01.KUMXSTCD[NB0FWSB1] = NB0FW01.NB0FWXST; /* storage*/
      else
        NB0FW01.NB0FWCOM = NB6REC.NB1CUST;
        NB0FW01.NB0FWSTR = NB6REC.KUMSTRID;
        NB0F140(); /* get customer name,city,state*/
      end
      SQLCA.VAGen_SQLCODE = 0;
      NB0FW01.NB0FWSB1 = NB0FW01.NB0FWSB1 + 1; /* bump w/s subscript*/
    else
      converseLib.validationFailed(28); /* limits of table exceeded - call programming*/
      NB0FM001.XXXERRID = "NB0F130"; /* error process*/
    end
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* not found, no more records*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
        NB0FM001.XXXERRID = "NB0F130"; /* error process*/
      else
        set TA1REC empty;
        set ERRSQLCA empty;
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0F";
        TA1REC.TA1LOCAT[1] = "N2";
        TA1REC.TA1LOCAT[2] = "NB0F130";
        TA1REC.TA1LOCAT[3] = "IO2230 ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1LOCAT[4] = "NB0FM001";
        TA1REC.TA1DBASE = "DNBANK.";
        TA1REC.TA1TBLVU = "VBGMEM01";
        TA1TBLKE = NB0FM001.NB5PNTCO;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        XSPF4();
        VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end



end // end NB0F130

// get name,city,state
Function NB0F140()


    /* ----------------------------------------------------*/
                /* get name, city and state*/
    /* ----------------------------------------------------*/


  set KUMREC empty;
  set SQLCA empty;
  set TA1REC empty;

  KUMREC.KUCCOID = NB0FW01.NB0FWCOM; /* company*/
  KUMREC.KUMSTRID = NB0FW01.NB0FWSTR; /* store*/

  call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes}; /* obtain store record*/

  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/

    NB0FW01.KUMSTSNM[NB0FWSB1] = KUMREC.KUMSTSNM; /* to w.s.*/
    NB0FW01.NB0FWSNM = KUMREC.KUMSTSNM; /* move store name to hold*/
    NB0FW01.KUMCITYS[NB0FWSB1] = KUMREC.KUMCITYS; /* TO W.S.*/
    NB0FW01.NB0FWCTY = KUMREC.KUMCITYS; /* move store city to hold*/
    NB0FW01.KUMXSTCD[NB0FWSB1] = KUMREC.KUMXSTCD; /* to w.s.*/
    NB0FW01.NB0FWXST = KUMREC.KUMXSTCD; /* move store state to hold*/

  else
    if (SQLCA.VAGen_SQLCODE == +100) /* not found*/
      set KUCREC empty;
      set SQLCA empty;
      set TA1REC empty;
      KUCREC.KUCCOID = NB0FW01.NB0FWCOM; /* company only*/
      call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/

        NB0FW01.KUMSTSNM[NB0FWSB1] = KUCREC.KUCCONM; /* to w.s.*/
        NB0FW01.NB0FWSNM = KUCREC.KUCCONM; /* move store name to hold*/
        NB0FW01.KUMCITYS[NB0FWSB1] = " "; /* TO W.S.*/
        NB0FW01.NB0FWCTY = " "; /* move store city to hold*/
        NB0FW01.KUMXSTCD[NB0FWSB1] = " "; /* to w.s.*/
        NB0FW01.NB0FWXST = " "; /* move store state to hold*/
      else
        NB0FW01.KUMSTSNM[NB0FWSB1] = " ";
        NB0FW01.NB0FWSNM = " ";
        NB0FW01.KUMCITYS[NB0FWSB1] = " ";
        NB0FW01.NB0FWCTY = " ";
        NB0FW01.KUMXSTCD[NB0FWSB1] = " ";
        NB0FW01.NB0FWXST = " ";
      end
    end
  end



  if (SQLCA.VAGen_SQLCODE == +0 /* good return..*/
   || SQLCA.VAGen_SQLCODE == +100) /* rec not found*/

     /* all ok, or handled above*/

  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
      NB0FM001.XXXERRID = "NB0F140"; /* error process*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0F";
      TA1REC.TA1LOCAT[1] = "S ";
      TA1REC.TA1LOCAT[2] = "NB0F140";
      TA1REC.TA1LOCAT[3] = "IO0340 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1LOCAT[4] = "NB0FM001";
      TA1REC.TA1DBASE = "DCUST. ";
      TA1REC.TA1TBLVU = "VCSTOR01";
      NB0FW01.NB0FWCKX = " "; /* clear key display area*/
      NB0FW01.NB0FWCCX = NB0FW01.NB0FWCOM; /* convert co. display*/
      NB0FW01.NB0FWCSX = NB0FW01.NB0FWSTR; /* convert st. display*/
      TA1REC.TA1TBLKE = NB0FW01.NB0FWCKX; /* display key used.*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
      NB0FM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end



end // end NB0F140

// format screen
Function NB0F200()


         /* ************************************/
         /* *          load map               **/
         /* ************************************/

   /* *************************************************************/
   /* * NB0fW01.NB0fWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0fW01.NB0fWSB1 = location in working storage of the    **/
   /* *                    current line being loaded             **/
   /* * NB0fW01.NB0fWSB2 = location on the map of the current    **/
   /* *                    line being loaded                     **/
   /* * NB0fW01.NB0fWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/


  NB0FW01.NB0FWSB1 = NB0FW01.NB0FWTOP; /* w/s subscript*/
  NB0FW01.NB0FWSB2 = 1; /* screen subscript*/


  NB0FM001.NB5PNTCO = NB0FW01.NB5PNTCO; /* parent company*/
  NB0FM001.NB1GRPCD = NB0FW01.NB1GRPCD; /* group code*/
  NB0FM001.XBCCD = NB0FW01.XBCCD; /* brand*/
  NB0FM001.YADCD = NB0FW01.YADCD; /* ad program*/
  NB0FM001.NB5GPDSC = NB0FW01.NB5GPDSC; /* description*/


  while (NB0FW01.NB0FWSB2 <= 13)
    if (NB0FW01.NB0FWSB1 <= NB0FW01.NB0FWMAX)
      NB0FM001.NB0FMACT[NB0FWSB2] = " ";
      set NB0FM001.NB0FMACT[NB0FWSB2] initialAttributes;
      NB0FW01.NB0FWCUS = NB0FW01.NB1CUST[NB0FWSB1];
      NB0FM001.NB1CUST[NB0FWSB2] = NB0FW01.NB0FWCUS;
      set NB0FM001.NB1CUST[NB0FWSB2] initialAttributes;

      /* ------------  store ---------------------------*/
      NB0FW01.NB0FWSTO = NB0FW01.KUMSTRID[NB0FWSB1]; /* hold key*/
      if (NB0FW01.KUMSTRID[NB0FWSB1] == NB0FW01.NB0FWALL) /* 'all'= -1*/
        NB0FM001.NB0FMSTR[NB0FWSB2] = "****";
      else
        NB0FM001.NB0FMSTR[NB0FWSB2] = NB0FW01.NB0FWSTO;
      end
      set NB0FM001.NB0FMSTR[NB0FWSB2] initialAttributes;

      /* ------------  dept. ---------------------------*/
      NB0FW01.NB0FWDPT = NB0FW01.XNXCD[NB0FWSB1]; /* hold key*/
      if (NB0FW01.XNXCD[NB0FWSB1] == NB0FW01.NB0FWALL) /* 'all'= -1*/
        NB0FM001.NB0FMDPT[NB0FWSB2] = "****";
      else
        NB0FM001.NB0FMDPT[NB0FWSB2] = NB0FW01.NB0FWDPT;
      end
      set NB0FM001.NB0FMDPT[NB0FWSB2] initialAttributes;
      /* ------------  gpc   ---------------------------*/
      NB0FW01.NB0FWGPC = NB0FW01.XGPCD[NB0FWSB1];
      NB0FM001.XGPCD[NB0FWSB2] = NB0FW01.NB0FWGPC;
      set NB0FM001.XGPCD[NB0FWSB2] initialAttributes;

      /* ------------ effective date -------------------*/
      NBWREC.NBWNU8 = NB0FW01.NB6GMEDT[NB0FWSB1]; /* date*/
      XPNB200(); /* format*/
      NB0FM001.NB6GMEDT[NB0FWSB2] = NBWREC.NBWCH8; /* routine*/
      set NB0FM001.NB6GMEDT[NB0FWSB2] initialAttributes;

      /* ------------ termination date within group. ---*/
      NBWREC.NBWNU8 = NB0FW01.NB6GMXDT[NB0FWSB1]; /* date*/
      XPNB200(); /* format*/
      NB0FM001.NB6GMXDT[NB0FWSB2] = NBWREC.NBWCH8; /* routine*/
      set NB0FM001.NB6GMXDT[NB0FWSB2] initialAttributes;
      /* -----------------------------------------------*/

      NB0FM001.KUMSTSNM[NB0FWSB2] = NB0FW01.KUMSTSNM[NB0FWSB1];
      NB0FM001.KUMCITYS[NB0FWSB2] = NB0FW01.KUMCITYS[NB0FWSB1];
      NB0FM001.KUMXSTCD[NB0FWSB2] = NB0FW01.KUMXSTCD[NB0FWSB1];
    else
       /* handle setting up of add lines*/
      NB0FM001.NB0FMACT[NB0FWSB2] = " ";
      NB0FM001.NB1CUST[NB0FWSB2] = " ";
      set NB0FM001.NB1CUST[NB0FWSB2] normal;
      NB0FM001.NB0FMSTR[NB0FWSB2] = " ";
      set NB0FM001.NB0FMSTR[NB0FWSB2] normal;
      NB0FM001.NB0FMDPT[NB0FWSB2] = " ";
      set NB0FM001.NB0FMDPT[NB0FWSB2] normal;
      NB0FM001.XGPCD[NB0FWSB2] = " ";
      set NB0FM001.XGPCD[NB0FWSB2] normal;
      NB0FM001.NB6GMEDT[NB0FWSB2] = " ";
      set NB0FM001.NB6GMEDT[NB0FWSB2] normal;
      NB0FM001.NB6GMXDT[NB0FWSB2] = " ";
      set NB0FM001.NB6GMXDT[NB0FWSB2] normal;
      NB0FM001.KUMSTSNM[NB0FWSB2] = " ";
      NB0FM001.KUMCITYS[NB0FWSB2] = " ";
      NB0FM001.KUMXSTCD[NB0FWSB2] = " ";
    end
    NB0FW01.NB0FWSB1 = NB0FW01.NB0FWSB1 + 1; /* bump up subscript (w/s)*/
    NB0FW01.NB0FWSB2 = NB0FW01.NB0FWSB2 + 1; /* bump up subscript (map)*/
  end



end // end NB0F200

// MAP
Function NB0F300()

  converse NB0FM001 ;


end // end NB0F300

// attention key processing
Function NB0F400()

                    /* attention key processing*/


         /* *****************************************************/
         /* * check and process valid pf key requests          **/
         /* *****************************************************/


  if (converseVar.eventKey is enter /* **** enter*/
   || converseVar.eventKey is pf1   /* **** help facility*/
   || converseVar.eventKey is pf3   /* **** nike bank menu*/
   || converseVar.eventKey is pf4   /* **** master menu*/
   || converseVar.eventKey is pf7   /* **** scroll backward*/
   || converseVar.eventKey is pf8   /* **** scroll forward*/
   || converseVar.eventKey is pf9   /* **** scroll top*/
   || converseVar.eventKey is pf10  /* **** scroll bottom*/
   || converseVar.eventKey is pa2   /* **** refresh map*/
   || converseVar.eventKey is pf13  /* **** transfer nb0g*/
   || converseVar.eventKey is pf14  /* **** transfer nb0a*/
   || converseVar.eventKey is pf15  /* **** transfer nb0c*/
   || converseVar.eventKey is pf16  /* **** transfer nb0b*/
   || converseVar.eventKey is pf18  /* **** transfer nb0d*/
   || converseVar.eventKey is pf20) /* **** transfer nb0e*/
     /* continue - everything okay*/
  else
    converseLib.validationFailed(3); /* invalid pf key used*/
    NB0FM001.XXXERRID = "NB0F400"; /* error process*/
    set NB0FM001.NB5PNTCO cursor;
    exit stack;
  end


  if (NB0FM001.CATOAP > " ") /* requesting fast pathing*/
    COMMAREA.CATOAP = NB0FM001.CATOAP;
    COMMAREA.CAITEM = NB0FM001.CAITEM;
    XSEXIT(); /* transfer out*/
  end


  if (converseVar.eventKey is pf1) /* check for system help*/
    XSPF1(); /* help facility*/
  end


  if (converseVar.eventKey is pf3) /* check for nike bank menu level*/
    COMMAREA.CATOAP = "NB0M"; /* invoke nike bank menu*/
    COMMAREA.CAFROMAP = "NB0F";
    XSEXIT();
  end


  if (converseVar.eventKey is pf4) /* check for master menu*/
    COMMAREA.CATOAP = "MN0M"; /* invoke master menu request*/
    COMMAREA.CAFROMAP = "NB0F";
    XSPF4(); /* invoke master menu request*/
  end


  if (converseVar.eventKey is pf13)
    COMMAREA.CATOAP = "NB0G"; /* acct.summary*/
    NB0F410();
  end


  if (converseVar.eventKey is pf14)
    COMMAREA.CATOAP = "NB0A"; /* acct.bal.*/
    NB0F410();
  end


  if (converseVar.eventKey is pf15)
    COMMAREA.CATOAP = "NB0C"; /* history*/
    NB0F410();
  end


  if (converseVar.eventKey is pf16)
    COMMAREA.CATOAP = "NB0B"; /* customer*/
    NB0F410();
  end


  if (converseVar.eventKey is pf18)
    COMMAREA.CATOAP = "NB0D"; /* transfers*/
    NB0F410();
  end


  if (converseVar.eventKey is pf20) /* transfer to group set-up screen*/
    NB0FW01.NB0FWCCO = NB0FM001.NB5PNTCO;
    NB0FW01.NB0FWCST = 0;
    NB0FW01.NB0FWCDP = 0;
    NB0FW01.NB0FWCGP = NB0FM001.NB1GRPCD;
    NB0FW01.NB0FWCBC = NB0FM001.XBCCD; /* brand*/
    COMMAREA.CAITEM = NB0FW01.NB0FWCAI;

    COMMAREA.CATOAP = "NB0E";
    COMMAREA.CAFROMAP = "NB0F";
    XSEXIT();
  end



end // end NB0F400

// load any key data for transfer
Function NB0F410()


  if (NB0FM001.NB5PNTCO == NB0FW01.NB0FWCCO
   && NB0FM001.NB1GRPCD == NB0FW01.NB0FWCGP
   && NB0FM001.XBCCD == NB0FW01.NB0FWCBC)
    COMMAREA.CAITEM = NB0FW01.NB0FWCAI;
    COMMAREA.CAFROMAP = "NB0F";
    XSEXIT();
  else
    NB0FW01.NB0FWCCO = NB0FM001.NB5PNTCO; /* company*/
    NB0FW01.NB0FWCST = 0; /* store*/
    NB0FW01.NB0FWCDP = 0; /* dept.*/
    NB0FW01.NB0FWCGP = NB0FM001.NB1GRPCD;
    NB0FW01.NB0FWCBC = NB0FM001.XBCCD;
    COMMAREA.CAITEM = NB0FW01.NB0FWCAI;
    COMMAREA.CAFROMAP = "NB0F";
    XSEXIT();
  end



end // end NB0F410

// reset errors/setup add lines
Function NB0F500()

   /* reset the process number displaying the map.*/

  NB0FM001.XXXERRID = "NB0F300";


           /* reset errors and setup add lines*/

         /* ************************************/
         /* *     turn off all error hilites  **/
         /* *     set map fields to defined   **/
         /* ************************************/


  set NB0FM001.NB5PNTCO cursor, initialAttributes;
  set NB0FM001.NB1GRPCD initialAttributes;

  NB0FW01.NB0FWSB2 = 1; /* map subscript*/
  while (NB0FW01.NB0FWSB2 <= 13)
    set NB0FM001.NB0FMACT[NB0FWSB2] initialAttributes;
    set NB0FM001.NB1CUST[NB0FWSB2] initialAttributes;
    set NB0FM001.NB0FMSTR[NB0FWSB2] initialAttributes;
    set NB0FM001.NB0FMDPT[NB0FWSB2] initialAttributes;
    set NB0FM001.XGPCD[NB0FWSB2] initialAttributes;
    set NB0FM001.NB6GMEDT[NB0FWSB2] initialAttributes;
    set NB0FM001.NB6GMXDT[NB0FWSB2] initialAttributes;
    NB0FW01.NB0FWSB2 = NB0FW01.NB0FWSB2 + 1;
  end

  set NB0FM001.CATOAP initialAttributes;
  set NB0FM001.CAITEM initialAttributes;



         /* ************************************/
         /* *    set up for add lines         **/
         /* ************************************/


  NB0FW01.NB0FWSB1 = NB0FW01.NB0FWTOP; /* w/s subscript*/
  NB0FW01.NB0FWSB2 = 1; /* screen subscript*/


  while (NB0FW01.NB0FWSB2 <= 13)
    if (NB0FW01.NB0FWSB1 <= NB0FW01.NB0FWMAX
     || NB0FW01.NB0FWMAX == 0)
       /* okay - continue*/
    else
      set NB0FM001.NB1CUST[NB0FWSB2] normal;
      set NB0FM001.NB0FMSTR[NB0FWSB2] normal;
      set NB0FM001.NB0FMDPT[NB0FWSB2] normal;
      set NB0FM001.XGPCD[NB0FWSB2] normal;
      /* SET NB0FM001.NB6GMEDT(NB0FWSB2) NORMAL;*/
      /* SET NB0FM001.NB6GMXDT(NB0FWSB2) NORMAL;*/
    end
    NB0FW01.NB0FWSB1 = NB0FW01.NB0FWSB1 + 1; /* bump up subscript (w/s)*/
    NB0FW01.NB0FWSB2 = NB0FW01.NB0FWSB2 + 1; /* bump up subscript (map)*/
  end



end // end NB0F500

// edit screen
Function NB0F600()


         /* ************************************/
         /* *        edit screen              **/
         /* ************************************/


  NB0F602(); /* remove embedded blank lines*/

  NB0FW01.NB0FWUSW = "N"; /* turnoff update switch*/

  NB0FW01.NB0FWSB2 = 13; /* set screen sub to bottom*/
  NB0FW01.NB0FWSB1 = NB0FW01.NB0FWTOP + 12; /* w/s subscript*/

  while (NB0FW01.NB0FWSB2 >= 1)
    NB0F604(); /* setup hold customer key*/

    if (NB0FW01.NB0FWSB1 > NB0FW01.NB0FWMAX)
      if (NB0FW01.NB0FWMAX < 300) /* enough room to add line*/
        NB0F610(); /* edit add line*/
      else
        converseLib.validationFailed(28); /* limits of table exceeded*/
        NB0FM001.XXXERRID = "NB0F600"; /* error process*/
        set NB0FM001.NB5PNTCO cursor;
      end
    else
      NB0F640(); /* edit change line*/
    end
    NB0FW01.NB0FWSB2 = NB0FW01.NB0FWSB2 - 1; /* sub 1 from map subscript*/
    NB0FW01.NB0FWSB1 = NB0FW01.NB0FWSB1 - 1; /* sub 1 from w/s subscript*/
  end


  if (NB0FW01.NB0FWUSW == "Y")
    if (converseVar.eventKey is pf7
     || converseVar.eventKey is pf8
     || converseVar.eventKey is pf9
     || converseVar.eventKey is pf10)
      converseLib.validationFailed(29); /* scrolling while updating not allowed*/
      NB0FM001.XXXERRID = "NB0F600"; /* error process*/
    end
  end

  if (NB0FW01.NB0FWUSW == "Y")
    if (NB0FW01.NB5PNTCO == NB0FM001.NB5PNTCO
     && NB0FW01.NB1GRPCD == NB0FM001.NB1GRPCD)
       /* do nothing*/
    else
      NB0FM001.NB5PNTCO = NB0FW01.NB5PNTCO;
      NB0FM001.NB1GRPCD = NB0FW01.NB1GRPCD;
      converseLib.validationFailed(41); /* company/grp cannot be changed while updating*/
      set NB0FM001.NB5PNTCO cursor, modified, bold;
      set NB0FM001.NB1GRPCD modified, bold;
    end
  end


end // end NB0F600

// remove embedded blanks
Function NB0F602()

              /* remove embedded blanks*/

   /* *************************************************************/
   /* * NB0fW01.NB0fWSB2 = location on the map of the current    **/
   /* *                    line being checked for blanks         **/
   /* * NB0fW01.NB0fWSB3 = location on the map of the next       **/
   /* *                    avaliable blank line                  **/
   /* *************************************************************/


  NB0FW01.NB0FWSB2 = 1; /* current position on the screen*/
  NB0FW01.NB0FWSB3 = 0; /* pointing to current blank line*/

  while (NB0FW01.NB0FWSB2 <= 13)
    if (NB0FM001.NB0FMACT[NB0FWSB2] == " "
     && NB0FM001.NB1CUST[NB0FWSB2] == " "
     && NB0FM001.XGPCD[NB0FWSB2] == " "
     && NB0FM001.NB6GMEDT[NB0FWSB2] == " "
     && NB0FM001.NB6GMXDT[NB0FWSB2] == " ")
      if (NB0FW01.NB0FWSB3 == 0)
        NB0FW01.NB0FWSB3 = NB0FW01.NB0FWSB2;
      end
    else
      if (NB0FW01.NB0FWSB3 > 0) /* a blank line is available*/
                                     /* move current line to blank line*/
        NB0FM001.NB0FMACT[NB0FWSB3] = NB0FM001.NB0FMACT[NB0FWSB2];
        NB0FM001.NB1CUST[NB0FWSB3] = NB0FM001.NB1CUST[NB0FWSB2];
        NB0FM001.NB0FMSTR[NB0FWSB3] = NB0FM001.NB0FMSTR[NB0FWSB2];
        NB0FM001.NB0FMDPT[NB0FWSB3] = NB0FM001.NB0FMDPT[NB0FWSB2];
        NB0FM001.XGPCD[NB0FWSB3] = NB0FM001.XGPCD[NB0FWSB2];
        NB0FM001.NB6GMEDT[NB0FWSB3] = NB0FM001.NB6GMEDT[NB0FWSB2];
        NB0FM001.NB6GMXDT[NB0FWSB3] = NB0FM001.NB6GMXDT[NB0FWSB2];

           /* blank out current line - it is now in previous blank line*/
        NB0FM001.NB0FMACT[NB0FWSB2] = " ";
        NB0FM001.NB1CUST[NB0FWSB2] = " ";
        NB0FM001.NB0FMSTR[NB0FWSB2] = " ";
        NB0FM001.NB0FMDPT[NB0FWSB2] = " ";
        NB0FM001.XGPCD[NB0FWSB2] = " ";
        NB0FM001.NB6GMEDT[NB0FWSB2] = " ";
        NB0FM001.NB6GMXDT[NB0FWSB2] = " ";

        NB0FW01.NB0FWSB3 = NB0FW01.NB0FWSB3 + 1;
      end
    end
    NB0FW01.NB0FWSB2 = NB0FW01.NB0FWSB2 + 1;
  end





end // end NB0F602

// setup hold customer key
Function NB0F604()


         /* ************************************/
         /* *     setup hold customer key     **/
         /* ************************************/

  NB0FW01.NB0FWCUS = NB0FM001.NB1CUST[NB0FWSB2];
  NB0FW01.NB0FWBCD = NB0FM001.XBCCD; /* brand*/

  if (NB0FM001.NB0FMSTR[NB0FWSB2] > " ")
    if (NB0FM001.NB0FMSTR[NB0FWSB2] == "****")
      NB0FW01.NB0FWSTO = -1;
    else
      NB0FW01.NB0FWSTO = NB0FM001.NB0FMSTR[NB0FWSB2];
    end
  else
    NB0FW01.NB0FWSTO = 0000;
  end

  if (NB0FM001.NB0FMDPT[NB0FWSB2] > " ")
    if (NB0FM001.NB0FMDPT[NB0FWSB2] == "****")
      NB0FW01.NB0FWDPT = -1;
    else
      NB0FW01.NB0FWDPT = NB0FM001.NB0FMDPT[NB0FWSB2];
    end
  else
    NB0FW01.NB0FWDPT = 0000;
  end

  NB0FW01.NB0FWGPC = NB0FM001.XGPCD[NB0FWSB2];



end // end NB0F604

// edit add line
Function NB0F610()

                      /* edit add line*/


   /* *************************************************************/
   /* * NB0fW01.NB0fWSB2 = location on the map of the current    **/
   /* *                    line being checked for blanks         **/
   /* * NB0fW01.NB0fWSB1 = location in working storage of line   **/
   /* *                    being edited                          **/
   /* *************************************************************/

  NB0FW01.NB0FWACT[NB0FWSB1] = " ";

  if (NB0FM001.NB1CUST[NB0FWSB2] == " "
   && NB0FM001.NB0FMSTR[NB0FWSB2] == " "
   && NB0FM001.NB0FMDPT[NB0FWSB2] == " "
   && NB0FM001.XGPCD[NB0FWSB2] == " "
   && NB0FM001.NB6GMEDT[NB0FWSB2] == " "
   && NB0FM001.NB6GMXDT[NB0FWSB2] == " ")
    NB0FM001.NB0FMACT[NB0FWSB2] = " ";
  else

    if (NB0FM001.NB1CUST[NB0FWSB2] > " "
     && NB0FM001.XGPCD[NB0FWSB2] != " ")
      NB0FW01.NB0FWUSW = "Y"; /* data updated switch*/
      NB0FW01.NB0FWACT[NB0FWSB1] = "A";

      if (NB0FM001.NB0FMSTR[NB0FWSB2] == "****" /* all stores*/
       || NB0FM001.NB0FMDPT[NB0FWSB2] == "****") /* all depts*/
        NB0F611(); /* validate customer only*/
      else
        NB0F612(); /* validate cust,str,dept,gpc*/
      end
      if (converseVar.validationMsgNum == 0) /* no errors*/
        NB0F620(); /* edit dates*/
      end

      NB0F630(); /* edit action code*/

    else
      converseLib.validationFailed(43); /* must enter comp,gpc*/
      set NB0FM001.NB1CUST[NB0FWSB2] cursor, modified, bold;
      set NB0FM001.XGPCD[NB0FWSB2] modified, bold;
    end
  end



end // end NB0F610

// validate customer only
Function NB0F611()

                        /* validate customer*/


  set KUCREC empty;
  set SQLCA empty;
  set TA1REC empty;

  KUCREC.KUCCOID = NB0FW01.NB0FWCUS; /* company*/

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  TA1REC.TA1LOCAT[1] = "S ";


  if (SQLCA.VAGen_SQLCODE == +0) /* a good return - record found*/
     /* valid customer -- keep going*/
    NB0F614();
                                   /* validate unique customer within group*/
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* not found condition*/
      converseLib.validationFailed(77); /* this customer does not exist*/
      NB0FM001.XXXERRID = "NB0F612"; /* error process*/
      set NB0FM001.NB1CUST[NB0FWSB2] cursor, modified, bold;
      set NB0FM001.NB0FMSTR[NB0FWSB2] modified, bold;
      set NB0FM001.NB0FMDPT[NB0FWSB2] modified, bold;
      set NB0FM001.XGPCD[NB0FWSB2] modified, bold;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
        NB0FM001.XXXERRID = "NB0F612"; /* error process*/
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0F";
        TA1REC.TA1LOCAT[2] = "NB0F630";
        TA1REC.TA1LOCAT[3] = "IO0280";
        TA1REC.TA1LOCAT[4] = "NB0F630";
        TA1REC.TA1DBASE = "DCUST";
        TA1REC.TA1TBLVU = "VCUST001";
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        XSPF4();
        VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end



end // end NB0F611

// validate cust,str,dept,gpc
Function NB0F612()

                        /* validate customer*/


   /* *************************************************************/
   /* *         validate company, store, dept, gpc               **/
   /* *************************************************************/


  set KUNREC empty;
  set SQLCA empty;
  set TA1REC empty;

  KUNREC.KUCCOID = NB0FW01.NB0FWCUS; /* company*/
  KUNREC.KUMSTRID = NB0FW01.NB0FWSTO; /* store*/
  KUNREC.XNXCD = NB0FW01.NB0FWDPT; /* dept*/
  KUNREC.XGPCD = NB0FW01.NB0FWGPC; /* gpc*/

  call "IO0280" ("S ", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes};
  TA1REC.TA1LOCAT[1] = "S ";


  if (SQLCA.VAGen_SQLCODE == +0) /* a good return - record found*/
     /* valid customer -- keep going*/
    NB0F614();
                                   /* validate unique customer within group*/
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* not found condition*/
      converseLib.validationFailed(77); /* this customer does not exist*/
      NB0FM001.XXXERRID = "NB0F612"; /* error process*/
      set NB0FM001.NB1CUST[NB0FWSB2] cursor, modified, bold;
      set NB0FM001.NB0FMSTR[NB0FWSB2] modified, bold;
      set NB0FM001.NB0FMDPT[NB0FWSB2] modified, bold;
      set NB0FM001.XGPCD[NB0FWSB2] modified, bold;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
        NB0FM001.XXXERRID = "NB0F612"; /* error process*/
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0F";
        TA1REC.TA1LOCAT[2] = "NB0F630";
        TA1REC.TA1LOCAT[3] = "IO0280";
        TA1REC.TA1LOCAT[4] = "NB0F630";
        TA1REC.TA1DBASE = "DCUST";
        TA1REC.TA1TBLVU = "VCUST001";
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        XSPF4();
        VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end



end // end NB0F612

// validate unique customer
Function NB0F614()

                        /* validate unique customer*/


  NB0FW01.NB0FWSB3 = 1; /* customer pointer on map*/
  NB0FW01.NB0FWCF1 = "Y"; /* unique customer flag*/
  while (NB0FW01.NB0FWSB3 <= 13
   && NB0FW01.NB0FWCF1 == "Y") /* unique customer*/
    if (NB0FW01.NB0FWSB2 == NB0FW01.NB0FWSB3)
       /* next sentence - pointing to line trying to edit*/
    else
      if (NB0FM001.NB1CUST[NB0FWSB2] == NB0FM001.NB1CUST[NB0FWSB3]
       && NB0FM001.NB0FMSTR[NB0FWSB2] == NB0FM001.NB0FMSTR[NB0FWSB3]
       && NB0FM001.NB0FMDPT[NB0FWSB2] == NB0FM001.NB0FMDPT[NB0FWSB3]
       && NB0FM001.XGPCD[NB0FWSB2] == NB0FM001.XGPCD[NB0FWSB3])
        NB0FW01.NB0FWCF1 = "N"; /* customer is not unique*/
        converseLib.validationFailed(78); /* within group id*/
        set NB0FM001.NB1CUST[NB0FWSB2] cursor, modified, bold;
        set NB0FM001.NB0FMSTR[NB0FWSB2] modified, bold;
        set NB0FM001.NB0FMDPT[NB0FWSB2] modified, bold;
        set NB0FM001.XGPCD[NB0FWSB2] modified, bold;
        set NB0FM001.NB1CUST[NB0FWSB3] modified, bold;
        set NB0FM001.NB0FMSTR[NB0FWSB3] modified, bold;
        set NB0FM001.NB0FMDPT[NB0FWSB3] modified, bold;
        set NB0FM001.XGPCD[NB0FWSB3] modified, bold;
      end
    end
    NB0FW01.NB0FWSB3 = NB0FW01.NB0FWSB3 + 1; /* bump subscript*/
  end


  if (converseVar.validationMsgNum == 0)
    NB0FW01.NB0FWSB3 = 1; /* top of w/s now*/
    while (converseVar.validationMsgNum == 0 /* no errors*/
     && NB0FW01.NB0FWCF1 == "Y"           /* customer is unique*/
     && NB0FW01.NB0FWSB3 <= NB0FW01.NB0FWMAX)
      if (NB0FW01.NB0FWCUS == NB0FW01.NB1CUST[NB0FWSB3]
       && NB0FW01.NB0FWSTO == NB0FW01.KUMSTRID[NB0FWSB3]
       && NB0FW01.NB0FWDPT == NB0FW01.XNXCD[NB0FWSB3]
       && NB0FW01.NB0FWGPC == NB0FW01.XGPCD[NB0FWSB3])
        NB0FW01.NB0FWCF1 = "N"; /* customer is not unique*/
        converseLib.validationFailed(78); /* within group id*/
        set NB0FM001.NB1CUST[NB0FWSB2] cursor, modified, bold;
        set NB0FM001.NB0FMSTR[NB0FWSB2] modified, bold;
        set NB0FM001.NB0FMDPT[NB0FWSB2] modified, bold;
        set NB0FM001.XGPCD[NB0FWSB2] modified, bold;
      end
      NB0FW01.NB0FWSB3 = NB0FW01.NB0FWSB3 + 1; /* bump subscript*/
    end
  end




end // end NB0F614

// edit dates
Function NB0F620()

         /* ---------------------------------------*/
           /* validate effective and expiry dates*/
         /* ---------------------------------------*/


  NB0FW01.NB0FWDF1 = "Y"; /* valid dates flag*/

  NB0F622(); /* format and validate expiry date*/

  NB0F624(); /* format and validate effective date*/


  if (NB0FW01.NB0FWDF1 == "Y") /* valid dates flag*/
    if (NB0FW01.NB0FWCD2 < NB0FW01.NB0FWCD1) /* range compare*/
       /* no problem*/
      NB0F626(); /* validate unique group date span*/
    else
      converseLib.validationFailed(6); /* invalid date range*/
      NB0FM001.XXXERRID = "NB0F630"; /* error process*/
      set NB0FM001.NB6GMEDT[NB0FWSB2] cursor, modified, bold;
      set NB0FM001.NB6GMXDT[NB0FWSB2] modified, bold;
    end
  end




end // end NB0F620

// validate expiry date
Function NB0F622()

                    /* validate expiry date*/

   /* *************************************************************/
   /* * NB0fW01.NB0fWSB2 = location on the map of the current    **/
   /* *                    line being checked for blanks         **/
   /* *************************************************************/


  if (NB0FM001.NB6GMXDT[NB0FWSB2] > " ")
    NBWREC.NBWDATE = NB0FM001.NB6GMXDT[NB0FWSB2];
    XPNB100(); /* put ending dte in mm-dd-yy format*/
    if (NBWREC.NBWNUMFL == "Y") /* numeric date*/
      NB0FM001.NB6GMXDT[NB0FWSB2] = NBWREC.NBWCH8;
          /* ------------------------------*/
            /* validate date using ta0040*/
          /* ------------------------------*/
      set TA2REC empty;
      TA2REC.TA2GRGB = NBWREC.NBWCH8; /* mm-dd-yy format*/
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "B";

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};



      if (TA2REC.TA2RTNCD == 0) /* valid date*/
        NB0FW01.NB0FWCD1 = TA2REC.TA2GRGGN; /* for range compare*/
      else
        NB0FW01.NB0FWDF1 = "N"; /* valid dates flag*/
        converseLib.validationFailed(8); /* invalid date*/
        NB0FM001.XXXERRID = "NB0F632"; /* error process*/
        set NB0FM001.NB6GMXDT[NB0FWSB2] cursor, modified, bold;
      end
    else
      NB0FW01.NB0FWDF1 = "N"; /* valid dates flag*/
      converseLib.validationFailed(8); /* invalid date*/
      NB0FM001.XXXERRID = "NB0F632"; /* error process*/
      set NB0FM001.NB6GMXDT[NB0FWSB2] cursor, modified, bold;
    end
  else
    if (NB0FM001.NB0FMACT[NB0FWSB2] == " "
     || NB0FM001.NB0FMACT[NB0FWSB2] == "A")
  /* *****************Y2K OUT BEGIN***************/
  /* **MOVE '12-31-99' TO NB0FM001.NB6GMXDT(NB0FWSB2);*/
  /* **MOVE 19991231 TO NB0FW01.NB0FWCD1;    /* for range compare*/
  /* *****************Y2K OUT END*****************/
  /* *****************Y2K OUT BEGIN***************/
      NB0FM001.NB6GMXDT[NB0FWSB2] = "12-31-43";
      NB0FW01.NB0FWCD1 = 20431231; /* for range compare*/
  /* *****************Y2K OUT END*****************/
    else
      NB0FW01.NB0FWDF1 = "N"; /* valid dates flag*/
    end
  end



end // end NB0F622

// validate effective date
Function NB0F624()

                  /* validate effective date*/

   /* *************************************************************/
   /* * NB0fW01.NB0fWSB2 = location on the map of the current    **/
   /* *                    line being checked for blanks         **/
   /* *************************************************************/


  if (NB0FM001.NB6GMEDT[NB0FWSB2] > " ")
    NBWREC.NBWDATE = NB0FM001.NB6GMEDT[NB0FWSB2];
    XPNB100(); /* put start dte in mm-dd-yy format*/
    if (NBWREC.NBWNUMFL == "Y") /* numeric date*/
      NB0FM001.NB6GMEDT[NB0FWSB2] = NBWREC.NBWCH8;
         /* ------------------------------*/
           /* validate date using ta0040*/
         /* ------------------------------*/
      set TA2REC empty;
      TA2REC.TA2GRGB = NBWREC.NBWCH8; /* mm-dd-yy format*/
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "B";

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};



      if (TA2REC.TA2RTNCD == 0) /* valid date*/
        NB0FW01.NB0FWCD2 = TA2REC.TA2GRGGN; /* for range compare*/
      else
        NB0FW01.NB0FWDF1 = "N"; /* valid dates flag*/
        converseLib.validationFailed(8); /* invalid date*/
        NB0FM001.XXXERRID = "NB0F634"; /* error process*/
        set NB0FM001.NB6GMEDT[NB0FWSB2] cursor, modified, bold;
      end
    else
      NB0FW01.NB0FWDF1 = "N"; /* valid dates flag*/
      converseLib.validationFailed(8); /* invalid date*/
      NB0FM001.XXXERRID = "NB0F634"; /* error process*/
      set NB0FM001.NB6GMXDT[NB0FWSB2] cursor, modified, bold;
    end
  else
    if (NB0FM001.NB0FMACT[NB0FWSB2] == " "
     || NB0FM001.NB0FMACT[NB0FWSB2] == "A")
      NB0FW01.NB0FWDT1 = VGVar.currentShortGregorianDate;
      NB0FW01.NB0FWD2Y = NB0FW01.NB0FWD1Y;
      NB0FW01.NB0FWD1 = "-"; /* dash-1*/
      NB0FW01.NB0FWD2M = NB0FW01.NB0FWD1M;
      NB0FW01.NB0FWD2 = "-"; /* dash-2*/
      NB0FW01.NB0FWD2D = NB0FW01.NB0FWD1D;
      NB0FM001.NB6GMEDT[NB0FWSB2] = NB0FW01.NB0FWDT2;
      NB0FW01.NB0FWCD2 = NB0FW01.NB0FWDT; /* for range compare*/
    else
      NB0FW01.NB0FWDF1 = "N"; /* valid dates flag*/
    end
  end




end // end NB0F624

// validate unique grp date span
Function NB0F626()

                /* validate unique group date span*/

    /* ----------------------------------------------------*/
        /* validate that this member is active in only*/
        /* one group at a time (using given date span)*/
    /* ----------------------------------------------------*/


  set NB6REC empty;
  set SQLCA empty;
  set TA1REC empty;

  NB6REC.NB1CUST = NB0FW01.NB0FWCUS; /* customer*/
  NB6REC.KUMSTRID = NB0FW01.NB0FWSTO; /* store*/
  NB6REC.XNXCD = NB0FW01.NB0FWDPT; /* dept*/
  NB6REC.XDVCD = "01"; /* division*/
  NB6REC.XBCCD = NB0FW01.XBCCD; /* brand*/
  NB6REC.XGPCD = NB0FW01.NB0FWGPC; /* gpc*/

  call "IO2230" ("S2", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes}; /* select next*/
  TA1REC.TA1LOCAT[1] = "S2";


  if (SQLCA.VAGen_SQLCODE == +0) /* a good return - record found*/
    NB0FW01.NB0FWDF2 = "Y"; /* unique date flag*/
    while (SQLCA.VAGen_SQLCODE == +0 /* good return*/
     && NB0FW01.NB0FWDF2 == "Y") /* date is unique*/
      NB0F628(); /* get next nb6rec*/
    end
    call "IO2230" ("C2", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes}; /* close cursor*/
    TA1REC.TA1LOCAT[1] = "C2";
  end

  if (SQLCA.VAGen_SQLCODE == +100 /* not found condition*/
   || SQLCA.VAGen_SQLCODE == +0)  /* good return*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* database in use - try again later*/
      NB0FM001.XXXERRID = "NB0F636"; /* error process*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0F";
      TA1REC.TA1LOCAT[2] = "NB0F632";
      TA1REC.TA1LOCAT[3] = "IO2230";
      TA1REC.TA1LOCAT[4] = "NB0F634";
      TA1REC.TA1DBASE = "DNBANK";
      TA1REC.TA1TBLVU = "VBGMEM01";
      NB0FW01.NB0FWCKX = "  "; /* CLEAR KEY DISPLAY AREA*/
      NB0FW01.NB0FWCCX = NB0FW01.NB5PNTCO; /* convert company*/
      NB0FW01.NB0FWCSX = NB0FW01.KUMSTRID; /* convert store*/
      NB0FW01.NB0FWCXX = NB0FW01.XBCCD; /* convert brand*/
      TA1REC.TA1TBLKE = NB0FW01.NB0FWCKX; /* display*/
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end




end // end NB0F626

// get next nb6rec
Function NB0F628()

   /* -------------------- get next nb6rec------------------*/


  call "IO2230" ("N2", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == +0) /* good return*/
    if (NB0FW01.NB5PNTCO == NB6REC.NB5PNTCO /* same record that*/
     && NB0FW01.NB1GRPCD == NB6REC.NB1GRPCD) /* is being edited*/
       /* next sentence -- date is unique*/
    else
      if (NB0FW01.NB0FWCD2 > NB6REC.NB6GMXDT
       || NB0FW01.NB0FWCD1 < NB6REC.NB6GMEDT)
         /* next sentence -- date is unique*/
      else
        NB0FW01.NB0FWDF2 = "N"; /* date is not unique*/
        converseLib.validationFailed(42); /* active in another group*/
        NB0FM001.XXXERRID = "NB0F638"; /* error process*/
        set NB0FM001.NB6GMEDT[NB0FWSB2] cursor, modified, bold;
        set NB0FM001.NB6GMXDT[NB0FWSB2] modified, bold;
      end
    end
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* record not found*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
        NB0FM001.XXXERRID = "NB0F638"; /* error process*/
      else
        set TA1REC empty;
        set ERRSQLCA empty;
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0F";
        TA1REC.TA1LOCAT[1] = "N2";
        TA1REC.TA1LOCAT[2] = "NB0F647";
        TA1REC.TA1LOCAT[3] = "IO2230 ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1LOCAT[4] = "NB0FM001";
        TA1REC.TA1DBASE = "DNBANK.";
        TA1REC.TA1TBLVU = "VBGMEM01";
        NB0FW01.NB0FWCKX = "  "; /* clear key display*/
        NB0FW01.NB0FWCCX = NB0FW01.NB5PNTCO; /* convert company*/
        NB0FW01.NB0FWCSX = NB0FW01.KUMSTRID; /* convert store*/
        NB0FW01.NB0FWCXX = NB0FW01.XBCCD; /* convert brand*/
        TA1REC.TA1TBLKE = NB0FW01.NB0FWCKX; /* display key*/
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        XSPF4();
        VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end



end // end NB0F628

// edit action code
Function NB0F630()


         /* ************************************/
         /* *        action field edit        **/
         /* ************************************/


   /* *************************************************************/
   /* * NB0fW01.NB0fWSB1 = location in working storage of the    **/
   /* *                    current line being loaded/edited      **/
   /* * NB0fW01.NB0fWSB2 = location on the map of the field      **/
   /* *                    being compared                        **/
   /* * NB0fW01.NB0fWMAX = POSITION IN ARRAY OF LAST w/s record  **/
   /* *************************************************************/

    /* check to see if line being edited is an add*/

  if (NB0FW01.NB0FWSB1 > NB0FW01.NB0FWMAX)
    if (NB0FM001.NB0FMACT[NB0FWSB2] == " "
     || NB0FM001.NB0FMACT[NB0FWSB2] == "A")
      if (NB0FW01.NB0FWACT[NB0FWSB1] == "A")
        NB0FM001.NB0FMACT[NB0FWSB2] = "A";
      end
    else
      set NB0FM001.NB0FMACT[NB0FWSB2] modified, bold;
      converseLib.validationFailed(10); /* ** only action code of 'a' valid*/
      NB0FM001.XXXERRID = "NB0F640"; /* error process*/
    end
  else
    if (NB0FM001.NB0FMACT[NB0FWSB2] == " ")
      if (NB0FW01.NB0FWACT[NB0FWSB1] == "C")
        NB0FM001.NB0FMACT[NB0FWSB2] = "C";
      else
         /* do nothing - no changes to that line*/
      end
    else
      if (NB0FM001.NB0FMACT[NB0FWSB2] == "C")
        if (NB0FW01.NB0FWACT[NB0FWSB1] == "C")
           /* do nothing - this is good*/
        else
          converseLib.validationFailed(36); /* no change has been entered*/
          NB0FM001.XXXERRID = "NB0F640"; /* error process*/
          set NB0FM001.NB0FMACT[NB0FWSB2] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(54); /* c only valid action code*/
        NB0FM001.XXXERRID = "NB0F640"; /* error process*/
        set NB0FM001.NB0FMACT[NB0FWSB2] cursor, modified, bold;
      end
    end
  end



end // end NB0F630

// edit change line
Function NB0F640()

                           /* edit change line*/


   /* *************************************************************/
   /* * NB0fW01.NB0fWSB2 = location on the map of the current    **/
   /* *                    line being checked for blanks         **/
   /* * NB0fW01.NB0fWSB1 = location in working storage of line   **/
   /* *                    being edited                          **/
   /* *************************************************************/


  NB0F620(); /* edit dates*/

  NB0FW01.NB0FWACT[NB0FWSB1] = " ";

  if (NB0FW01.NB6GMEDT[NB0FWSB1] != NB0FW01.NB0FWCD2 /* effective date*/
   || NB0FW01.NB6GMXDT[NB0FWSB1] != NB0FW01.NB0FWCD1) /* expiry date*/
    NB0FW01.NB0FWUSW = "Y"; /* data updated*/
    NB0FW01.NB0FWACT[NB0FWSB1] = "C";
  end

  NB0F630(); /* edit action code*/


end // end NB0F640

// update database
Function NB0F700()


         /* ************************************/
         /* *        update data base         **/
         /* ************************************/


   /* *************************************************************/
   /* * NB0fW01.NB0fWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0fW01.NB0fWSB2 = location on the map of the current    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0fW01.NB0fWSB1 = location in working storage of the    **/
   /* *                    current line being loaded/edited/updt **/
   /* * NB0fW01.NB0fWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/

       /* get current time*/

  NB0FW01.NB0FWT1 = VGVar.currentFormattedTime;
  NB0FW01.NB0FWTHH = NB0FW01.NB0FWTHR;
  NB0FW01.NB0FWTMN = NB0FW01.NB0FWTMI;

  NB0FW01.NB0FWSB2 = 1;
  NB0FW01.NB0FWSB1 = NB0FW01.NB0FWTOP;

  while (NB0FW01.NB0FWSB2 <= 13
   && converseVar.validationMsgNum == 0)
    if (NB0FM001.NB0FMACT[NB0FWSB2] == "A")
      NB0F710(); /* add to the data base*/
    else
      if (NB0FM001.NB0FMACT[NB0FWSB2] == "C") /* change*/
        NB0F720(); /* change database*/
      end
    end
    NB0FW01.NB0FWSB1 = NB0FW01.NB0FWSB1 + 1;
    NB0FW01.NB0FWSB2 = NB0FW01.NB0FWSB2 + 1;
  end



end // end NB0F700

// add to database
Function NB0F710()


         /* ************************************/
         /* *       add to data base          **/
         /* ************************************/

   /* *************************************************************/
   /* * NB0fW01.NB0fWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0fW01.NB0fWSB2 = location on the map of the current    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0fW01.NB0fWSB1 = location in working storage of the    **/
   /* *                    current line being loaded             **/
   /* * NB0fW01.NB0fWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/


  set NB6REC empty;
  set TA1REC empty;

  NB6REC.NB5PNTCO = NB0FM001.NB5PNTCO;
  NB6REC.XDVCD = "01"; /* division*/
  NB6REC.XBCCD = NB0FM001.XBCCD; /* brand*/
  NB6REC.NB1GRPCD = NB0FM001.NB1GRPCD;

  NB0F604(); /* setup hold customer key*/
  NB6REC.NB1CUST = NB0FW01.NB0FWCUS;
  NB6REC.KUMSTRID = NB0FW01.NB0FWSTO;
  NB6REC.XNXCD = NB0FW01.NB0FWDPT;
  NB6REC.XGPCD = NB0FW01.NB0FWGPC;
  NB6REC.XDVCD = "01"; /* division*/
  NB6REC.XBCCD = NB0FW01.NB0FWBCD; /* brand*/

  call "IO2230" ("S ", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == +100) /* not eq 'not found'*/
      /* do nothing*/
  else
    if (SQLCA.VAGen_SQLCODE == +0)
                                   /* found condition - not unique - error*/
      converseLib.validationFailed(79); /* group member already exists*/
      NB0FM001.XXXERRID = "NB0F710"; /* error process*/
      set NB0FM001.NB1CUST[NB0FWSB2] cursor, modified, bold;
      set NB0FM001.NB0FMSTR[NB0FWSB2] modified, bold;
      set NB0FM001.NB0FMDPT[NB0FWSB2] modified, bold;
      set NB0FM001.XGPCD[NB0FWSB2] modified, bold;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
        NB0FM001.XXXERRID = "NB0F710"; /* error process*/
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0F";
        TA1REC.TA1LOCAT[1] = "S ";
        TA1REC.TA1LOCAT[2] = "NB0F710";
        TA1REC.TA1LOCAT[3] = "IO2230 ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1LOCAT[4] = "NB0FM001";
        TA1REC.TA1DBASE = "NBANK. ";
        TA1REC.TA1TBLVU = "VBGMEM01";
        NB0FW01.NB0FWCKX = "  "; /* clear key display*/
        NB0FW01.NB0FWCCX = NB0FW01.NB5PNTCO; /* convert company*/
        NB0FW01.NB0FWCSX = NB0FW01.KUMSTRID; /* convert store*/
        NB0FW01.NB0FWCXX = NB0FW01.XBCCD; /* convert brand*/
        TA1REC.TA1TBLKE = NB0FW01.NB0FWCKX; /* display*/
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
        NB0FM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end


  if (SQLCA.VAGen_SQLCODE == +100) /* not found - ok to add*/
    set NB6REC empty;

    NB6REC.ZZZSDT = NB0FW01.NB0FWDT; /* current setup date*/
    NB6REC.NB5PNTCO = NB0FM001.NB5PNTCO;
    NB6REC.NB1GRPCD = NB0FM001.NB1GRPCD;
    NB6REC.XDVCD = "01"; /* division*/
    NB6REC.XBCCD = NB0FM001.XBCCD; /* brand*/
    NB6REC.YADCD = NB0FM001.YADCD;
    NB6REC.NB1CUST = NB0FW01.NB0FWCUS;
    NB6REC.KUMSTRID = NB0FW01.NB0FWSTO;
    NB6REC.XNXCD = NB0FW01.NB0FWDPT;
    NB6REC.XGPCD = NB0FW01.NB0FWGPC;

    NB0F711(); /* load dates*/

    call "IO2230" ("A ", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == +0)
       /* do nothing*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
        NB0FM001.XXXERRID = "NB0F710"; /* error process*/
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0F";
        TA1REC.TA1LOCAT[1] = "A ";
        TA1REC.TA1LOCAT[2] = "NB0F710";
        TA1REC.TA1LOCAT[3] = "IO2230 ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1LOCAT[4] = "NB0FM001";
        TA1REC.TA1DBASE = "NBANK. ";
        TA1REC.TA1TBLVU = "VBGMEM01";
        NB0FW01.NB0FWCKX = "  "; /* clear key display*/
        NB0FW01.NB0FWCCX = NB0FW01.NB5PNTCO; /* convert company*/
        NB0FW01.NB0FWCSX = NB0FW01.KUMSTRID; /* convert store*/
        NB0FW01.NB0FWCXX = NB0FW01.XBCCD; /* convert brand*/
        TA1REC.TA1TBLKE = NB0FW01.NB0FWCKX; /* display*/
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
        NB0FM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end

  if (SQLCA.VAGen_SQLCODE == +0)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    NB0F725(); /* update w/s & screen*/
  end




end // end NB0F710

// load dates
Function NB0F711()

                       /* load dates*/


   /* *************************************************************/
   /* * NB0fW01.NB0EWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0fW01.NB0fWSB2 = LOCATION ON THE MAP OF THE CURRENT    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0fW01.NB0fWSB1 = LOCATION IN WORKING STORAGE OF THE    **/
   /* *                    current line being loaded             **/
   /* * NB0fW01.NB0fWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/


   /* move map 'effective date' to record*/

  NBWREC.NBWDATE = NB0FM001.NB6GMEDT[NB0FWSB2];
  XPNB100();
  NB6REC.NB6GMEDT = NBWREC.NBWNU8; /* effective date*/

   /* move map 'expiry date' to record*/

  NBWREC.NBWDATE = NB0FM001.NB6GMXDT[NB0FWSB2];
  XPNB100();
  NB6REC.NB6GMXDT = NBWREC.NBWNU8; /* expiry date*/



end // end NB0F711

// change database
Function NB0F720()


         /* ************************************/
         /* *       change the database       **/
         /* ************************************/

   /* *************************************************************/
   /* * NB0fW01.NB0fWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0fW01.NB0fWSB2 = location on the map of the current    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0fW01.NB0fwSB1 = location in working storage of the    **/
   /* *                    current line being loaded             **/
   /* * NB0fW01.NB0fWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/


  set NB6REC empty;
  set TA1REC empty;

  NB6REC.NB5PNTCO = NB0FM001.NB5PNTCO;
  NB6REC.NB1GRPCD = NB0FM001.NB1GRPCD;

  NB0F604(); /* setup hold customer key*/
  NB6REC.NB1CUST = NB0FW01.NB0FWCUS;
  NB6REC.KUMSTRID = NB0FW01.NB0FWSTO;
  NB6REC.XNXCD = NB0FW01.NB0FWDPT;
  NB6REC.XDVCD = "01";
  NB6REC.XBCCD = NB0FW01.NB0FWBCD;
  NB6REC.XGPCD = NB0FW01.NB0FWGPC;

  call "IO2230" ("S ", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == +0) /* good return - record found*/
      /* do nothing*/
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* not found condition*/
      converseLib.validationFailed(37); /* record deleted prior to change*/
      NB0FM001.XXXERRID = "NB0F720"; /* error process*/
      set NB0FM001.NB5PNTCO cursor, modified, bold;
      set NB0FM001.NB1GRPCD modified, bold;
      set NB0FM001.NB1CUST[NB0FWSB2] modified, bold;
      set NB0FM001.NB0FMSTR[NB0FWSB2] modified, bold;
      set NB0FM001.NB0FMDPT[NB0FWSB2] modified, bold;
      set NB0FM001.XGPCD[NB0FWSB2] modified, bold;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(16); /* database in use - try again later*/
        NB0FM001.XXXERRID = "NB0F720"; /* error process*/
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "NB0F";
        TA1REC.TA1LOCAT[1] = "S ";
        TA1REC.TA1LOCAT[2] = "NB0F720";
        TA1REC.TA1LOCAT[3] = "IO2230 ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1LOCAT[4] = "NB0FM001";
        TA1REC.TA1DBASE = "NBANK. ";
        TA1REC.TA1TBLVU = "VBGMEM01";
        NB0FW01.NB0FWCKX = "  "; /* clear key display area*/
        NB0FW01.NB0FWCCX = NB0FW01.NB5PNTCO; /* convert company*/
        NB0FW01.NB0FWCSX = NB0FW01.KUMSTRID; /* convert store*/
        NB0FW01.NB0FWCXX = NB0FW01.XBCCD; /* convert brand*/
        TA1REC.TA1TBLKE = NB0FW01.NB0FWCKX; /* convert division*/
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
        NB0FM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end


  if (SQLCA.VAGen_SQLCODE == +0) /* record found*/
    if (NB0FW01.ZZZCHGCT[NB0FWSB1] != NB6REC.ZZZCHGCT)
      converseLib.validationFailed(17); /* database updated since last display*/
      NB0FM001.XXXERRID = "NB0F720"; /* error process*/
      set NB0FM001.NB5PNTCO cursor, modified, bold;
      set NB0FM001.NB1GRPCD modified, bold;
      set NB0FM001.NB1CUST[NB0FWSB2] modified, bold;
      set NB0FM001.NB0FMSTR[NB0FWSB2] modified, bold;
      set NB0FM001.NB0FMDPT[NB0FWSB2] modified, bold;
      set NB0FM001.XGPCD[NB0FWSB2] modified, bold;
      NB0F730(); /* reload screen & w/s from database*/
    else
      NB6REC.ZZZCHGTM = NB0FW01.NB0FWT2; /* current time to chg time*/
      NB6REC.ZZZCHGDT = NB0FW01.NB0FWDT; /* current date to chg date*/
      NB0F711(); /* load dates*/

      call "IO2230" ("U ", SQLCA, NB6REC) {isNoRefresh = yes, isExternal = yes};

      if (SQLCA.VAGen_SQLCODE == +0)
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.commit();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        NB0F725(); /* update w/s and screen*/
      else
        if (SQLCA.VAGen_SQLCODE == -911)
          converseLib.validationFailed(16); /* database in use - try again later*/
          NB0FM001.XXXERRID = "NB0F720"; /* error process*/
        else
          TA1REC.TA1TYPE = "DB2";
          TA1REC.TA1FUNC = "RETN";
          TA1REC.TA1PGMNM = "NB0F";
          TA1REC.TA1LOCAT[1] = "U ";
          TA1REC.TA1LOCAT[2] = "NB0F720";
          TA1REC.TA1LOCAT[3] = "IO2230 ";
          TA1REC.TA1LOCAT[4] = " ";
          TA1REC.TA1LOCAT[4] = "NB0FM001";
          TA1REC.TA1DBASE = "NBANK. ";
          TA1REC.TA1TBLVU = "VBGMEM01";
          NB0FW01.NB0FWCKX = "  "; /* clear key display area*/
          NB0FW01.NB0FWCCX = NB0FW01.NB5PNTCO; /* convert company*/
          NB0FW01.NB0FWCSX = NB0FW01.KUMSTRID; /* convert store*/
          NB0FW01.NB0FWCXX = NB0FW01.XBCCD; /* convert brand*/
          TA1REC.TA1TBLKE = NB0FW01.NB0FWCKX; /* display*/
          VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
          VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
          sysLib.rollback();
          VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
          
          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
          XSPF4();
          NB0FM001.VAGen_EZEMSG = COMMAREA.CAMSG;
        end
      end
    end
  end



end // end NB0F720

// update w/s & screen
Function NB0F725()

                   /* update w/s and screen*/


   /* *************************************************************/
   /* * NB0fW01.NB0fWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0fW01.NB0fWSB2 = location on the map of the current    **/
   /* *                    line being loaded/edited/updated      **/
   /* * NB0fW01.NB0fWSB1 = location in working storage of the    **/
   /* *                    current line being loaded/edited/updte**/
   /* * NB0fW01.NB0fWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/

                     /* update working storage*/

  if (NB0FM001.NB0FMACT[NB0FWSB2] == "A") /* this is an add*/
    NB0FW01.NB1CUST[NB0FWSB1] = NB0FW01.NB0FWCUS;
    NB0FW01.KUMSTRID[NB0FWSB1] = NB0FW01.NB0FWSTO;
    NB0FW01.XNXCD[NB0FWSB1] = NB0FW01.NB0FWDPT;
    NB0FW01.XGPCD[NB0FWSB1] = NB0FW01.NB0FWGPC;
  end

   /* -----------------------------------------*/
     /* move effective date to working storage*/
   /* -----------------------------------------*/

  NBWREC.NBWDATE = NB0FM001.NB6GMEDT[NB0FWSB2];
  XPNB100();
  NB0FW01.NB6GMEDT[NB0FWSB1] = NBWREC.NBWNU8;

   /* --------------------------------------*/
     /* move expiry date to working storage*/
   /* --------------------------------------*/

  NBWREC.NBWDATE = NB0FM001.NB6GMXDT[NB0FWSB2];
  XPNB100();
  NB0FW01.NB6GMXDT[NB0FWSB1] = NBWREC.NBWNU8;


   /* --------------------------------------*/
     /* bump change counter up by one.*/
   /* --------------------------------------*/

  NB0FW01.ZZZCHGCT[NB0FWSB1] = NB0FW01.ZZZCHGCT[NB0FWSB1] + 1;


  if (NB0FM001.NB0FMACT[NB0FWSB2] == "A") /* this is an add*/
      /* ----------------------------------------------------*/
                  /* get name, city and state*/
      /* ----------------------------------------------------*/

    if (NB0FW01.NB0FWCUS == NB0FW01.NB0FWCOM /* get name city and*/
     && NB0FW01.NB0FWSTO == NB0FW01.NB0FWSTR) /* state from w/s*/
      NB0FM001.KUMSTSNM[NB0FWSB2] = NB0FW01.NB0FWSNM;
      NB0FM001.KUMCITYS[NB0FWSB2] = NB0FW01.NB0FWCTY;
      NB0FM001.KUMXSTCD[NB0FWSB2] = NB0FW01.NB0FWXST;
    else
      NB0FW01.NB0FWCOM = NB0FW01.NB0FWCUS; /* new customer*/
      NB0FW01.NB0FWSTR = NB0FW01.NB0FWSTO; /* new store*/

      NB0F140(); /* get name city and state*/

                   /* update map*/
      NB0FM001.NB1CUST[NB0FWSB2] = NB0FW01.NB0FWCUS;
      if (NB0FW01.NB0FWSTO == -1)
        NB0FM001.NB0FMSTR[NB0FWSB2] = "****";
      else
        NB0FM001.NB0FMSTR[NB0FWSB2] = NB0FW01.NB0FWSTO;
      end
      if (NB0FW01.NB0FWDPT == -1)
        NB0FM001.NB0FMDPT[NB0FWSB2] = "****";
      else
        NB0FM001.NB0FMDPT[NB0FWSB2] = NB0FW01.NB0FWDPT;
      end

      NB0FM001.XGPCD[NB0FWSB2] = NB0FW01.NB0FWGPC;
      NB0FM001.KUMSTSNM[NB0FWSB2] = NB0FW01.NB0FWSNM;
      NB0FM001.KUMCITYS[NB0FWSB2] = NB0FW01.NB0FWCTY;
      NB0FM001.KUMXSTCD[NB0FWSB2] = NB0FW01.NB0FWXST;
    end
    NB0FW01.NB0FWMAX = NB0FW01.NB0FWMAX + 1; /* increase the array size*/
  end


              /* reset screen field attributes*/

  NB0FM001.NB0FMACT[NB0FWSB2] = " "; /* space out the action code*/
  set NB0FM001.NB1CUST[NB0FWSB2] initialAttributes;
  set NB0FM001.NB0FMSTR[NB0FWSB2] initialAttributes;
  set NB0FM001.NB0FMDPT[NB0FWSB2] initialAttributes;
  set NB0FM001.XGPCD[NB0FWSB2] initialAttributes;



end // end NB0F725

// reload map & w/s from database
Function NB0F730()

                /* load w/s and map from database*/


   /* *************************************************************/
   /* * NB0fW01.NB0fWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0fW01.NB0fWSB2 = location on the map of the current    **/
   /* *                    line being loaded                     **/
   /* * NB0fW01.NB0fWSB1 = location in working storage of the    **/
   /* *                    current line being loaded             **/
   /* * NB0fW01.NB0fWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/

                  /* load working storage*/

  NB0FW01.NB1CUST[NB0FWSB1] = NB6REC.NB1CUST;
  NB0FW01.KUMSTRID[NB0FWSB1] = NB6REC.KUMSTRID;
  NB0FW01.XNXCD[NB0FWSB1] = NB6REC.XNXCD;
  NB0FW01.XGPCD[NB0FWSB1] = NB6REC.XGPCD;
  NB0FW01.NB6GMEDT[NB0FWSB1] = NB6REC.NB6GMEDT;
  NB0FW01.NB6GMXDT[NB0FWSB1] = NB6REC.NB6GMXDT;

                    /* load map*/

  NB0FM001.NB0FMACT[NB0FWSB2] = " ";
  NB0FW01.NB0FWCUS = NB6REC.NB1CUST;
  NB0FM001.NB1CUST[NB0FWSB2] = NB0FW01.NB0FWCUS;
  set NB0FM001.NB1CUST[NB0FWSB2] modified, bold;

   /* ------------ store ------------------------------*/
  NB0FW01.NB0FWSTO = NB6REC.KUMSTRID;
  if (NB0FW01.NB0FWSTO == -1)
    NB0FM001.NB0FMSTR[NB0FWSB2] = "****";
  else
    NB0FM001.NB0FMSTR[NB0FWSB2] = NB0FW01.NB0FWSTO;
  end
  set NB0FM001.NB0FMSTR[NB0FWSB2] modified, bold;

   /* ------------ dept  ------------------------------*/
  NB0FW01.NB0FWDPT = NB6REC.XNXCD;
  if (NB0FW01.NB0FWDPT == -1)
    NB0FM001.NB0FMDPT[NB0FWSB2] = "****";
  else
    NB0FM001.NB0FMDPT[NB0FWSB2] = NB0FW01.NB0FWDPT;
  end
  set NB0FM001.NB0FMDPT[NB0FWSB2] modified, bold;
   /* -------------------------------------------------*/
  NB0FW01.NB0FWGPC = NB6REC.XGPCD;
  NB0FM001.XGPCD[NB0FWSB2] = NB0FW01.NB0FWGPC;
  set NB0FM001.XGPCD[NB0FWSB2] modified, bold;

  NBWREC.NBWNU8 = NB0FW01.NB6GMEDT[NB0FWSB1];
  XPNB200();
  NB0FM001.NB6GMEDT[NB0FWSB2] = NBWREC.NBWCH8;
  set NB0FM001.NB6GMEDT[NB0FWSB2] modified, bold;

  NBWREC.NBWNU8 = NB0FW01.NB6GMXDT[NB0FWSB1];
  XPNB200();
  NB0FM001.NB6GMXDT[NB0FWSB2] = NBWREC.NBWCH8;
  set NB0FM001.NB6GMXDT[NB0FWSB2] modified, bold;



end // end NB0F730

// scroll pointers
Function NB0F800()
         /* ************************************/
         /* *      scroll pointers            **/
         /* ************************************/


   /* *************************************************************/
   /* * NB0fW01.NB0fWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0fW01.NB0fWnum = w/s field used to compute new top     **/
   /* *                    of screen for scroll froward          **/
   /* * NB0fW01.NB0fWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/


  if (converseVar.eventKey is pf7)
    if (NB0FW01.NB0FWTOP == 1)
      converseLib.validationFailed(20); /* no back scroll poss*/
      NB0FM001.XXXERRID = "NB0F800"; /* error process*/
    else
      if (NB0FW01.NB0FWTOP <= 13)
        NB0FW01.NB0FWTOP = 1; /* set top of screen to 1*/
      else
        NB0FW01.NB0FWTOP = NB0FW01.NB0FWTOP - 13;
      end
    end

  end
  if (converseVar.eventKey is pf8)
    NB0FW01.NB0FWNUM = 12;
    NB0FW01.NB0FWNUM = NB0FW01.NB0FWNUM + NB0FW01.NB0FWTOP;
    if (NB0FW01.NB0FWNUM <= NB0FW01.NB0FWMAX)
      NB0FW01.NB0FWTOP = NB0FW01.NB0FWTOP + 13;
    else
      converseLib.validationFailed(21); /* no forward scrolling*/
      NB0FM001.XXXERRID = "NB0F800"; /* error process*/
    end
  end


  if (converseVar.eventKey is pf9) /* top*/
    NB0FW01.NB0FWTOP = 1;
  end


  if (converseVar.eventKey is pf10) /* bottom*/
    NB0FW01.NB0FWNUM = NB0FW01.NB0FWMAX - 12;
    if (NB0FW01.NB0FWNUM > 0)
      NB0FW01.NB0FWTOP = NB0FW01.NB0FWNUM;
    else
      NB0FW01.NB0FWTOP = 1;
    end
  end



end // end NB0F800

//*** RECORD=NB0FW01 ****
// ************************************************************
// *** CREATED: 12-04-87                 BY: g.wells        ***
// ***                                                      ***
// *** USED BY: NB0f                                        ***
// *** PURPOSE: a working storage area for this application.***
// *10/27/93 lgross Reduced size of nb0fwcco to 7 and nb0fwcdp*
// *         to 2.  Added NB0FWCCC, NB0FWCSC and NBWCDP
// ************************************************************
// ***********************
Record NB0FW01 type basicRecord
  10 NB0FWUSW NB0FWUSW ; 
  10 NB0FWKSW NB0FWKSW ; 
  10 NB0FWSB1 NB0FWSB1 ; 
  10 NB0FWSB2 NB0FWSB2 ; 
  10 NB0FWSB3 NB0FWSB3 ; 
  10 NB0FWCF1 NB0FWCF1 ; 
  10 NB0FWDF1 NB0FWDF1 ; 
  10 NB0FWDF2 NB0FWDF2 ; 
  10 NB0FWNUM NB0FWNUM ; 
  10 NB0FWTOP NB0FWTOP ; 
  10 NB0FWMAX NB0FWMAX ; 
  10 NB5PNTCO NB5PNTCO ; 
  10 NB1GRPCD NB1GRPCD ; 
  10 XBCCD XBCCD ; 
  10 YADCD YADCD ; 
  10 NB5GPDSC NB5GPDSC ; 
  10 NB0FWARR NB0FWARR [300] ; 
    15 NB0FWACT NB0FWACT ; 
    15 NB1CUST NB1CUST ; 
    15 KUMSTRID KUMSTRID ; 
    15 XNXCD XNXCD ; 
    15 XGPCD XGPCD ; 
    15 NB6GMEDT NB6GMEDT ; 
    15 NB6GMXDT NB6GMXDT ; 
    15 KUMSTSNM KUMSTSNM ; 
    15 KUMCITYS KUMCITYS ; 
    15 KUMXSTCD KUMXSTCD ; 
    15 ZZZCHGCT ZZZCHGCT ; 
  10 NB0FWCAI NB0FWCAI ; 
    15 NB0FWCCC NB0FWCCC ; 
      20 NB0FWCCO NB0FWCCO ; 
    15 NB0FWCSC NB0FWCSC ; 
      20 NB0FWCST NB0FWCST ; 
    15 NB0FWCDC NB0FWCDC ; 
      20 NB0FWCDP NB0FWCDP ; 
    15 NB0FWCGP NB0FWCGP ; 
    15 NB0FWCBC NB0FWCBC ; 
  10 NB0FWALL NB0FWALL ; 
  10 NB0FWCOM NB0FWCOM ; 
  10 NB0FWSTR NB0FWSTR ; 
  10 NB0FWSNM NB0FWSNM ; 
  10 NB0FWCTY NB0FWCTY ; 
  10 NB0FWXST NB0FWXST ; 
  10 NB0FWHKY NB0FWHKY ; 
    15 NB0FWCUS NB0FWCUS ; 
    15 NB0FWSTO NB0FWSTO ; 
    15 NB0FWDPT NB0FWDPT ; 
    15 NB0FWGPC NB0FWGPC ; 
    15 NB0FWBCD NB0FWBCD ; 
  10 NB0FWCKX NB0FWCKX ; 
    15 NB0FWCCX NB0FWCCX ; 
    15 NB0FWCSX NB0FWCSX ; 
    15 NB0FWCDX NB0FWCDX ; 
    15 NB0FWCGX NB0FWCGX ; 
    15 NB0FWCXX NB0FWCXX ; 
  10 NB0FWDT1 NB0FWDT1 ; 
    15 NB0FWD1Y NB0FWD1Y ; 
    15 NB0FWD1M NB0FWD1M ; 
    15 NB0FWD1D NB0FWD1D ; 
  10 NB0FWDT2 NB0FWDT2 ; 
    15 NB0FWD2M NB0FWD2M ; 
    15 NB0FWD1 NB0FWD1 ; 
    15 NB0FWD2D NB0FWD2D ; 
    15 NB0FWD2 NB0FWD2 ; 
    15 NB0FWD2Y NB0FWD2Y ; 
  10 NB0FWCD1 NB0FWCD1 ; 
  10 NB0FWCD2 NB0FWCD2 ; 
  10 NB0FWHDT NB0FWHDT ; 
    15 NB0FWHCC NB0FWHCC ; 
    15 NB0FWHYY NB0FWHYY ; 
    15 NB0FWHMM NB0FWHMM ; 
    15 NB0FWHDD NB0FWHDD ; 
  10 NB0FWDT NB0FWDT ; 
    15 NB0FWCC NB0FWCC ; 
    15 NB0FWYY NB0FWYY ; 
    15 NB0FWMM NB0FWMM ; 
    15 NB0FWDD NB0FWDD ; 
  10 NB0FWT1 NB0FWT1 ; 
    15 NB0FWTHR NB0FWTHR ; 
    15 NB0FWTC1 NB0FWTC1 ; 
    15 NB0FWTMI NB0FWTMI ; 
    15 NB0FWTC2 NB0FWTC2 ; 
    15 NB0FWTSC NB0FWTSC ; 
  10 NB0FWT2 NB0FWT2 ; 
    15 NB0FWTHH NB0FWTHH ; 
    15 NB0FWTMN NB0FWTMN ; 
end // end NB0FW01

// action code
DataItem NB0FWACT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// a (-1) ='all'condition
DataItem NB0FWALL smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working storage array
DataItem NB0FWARR char(43)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold brand   - for valid.
DataItem NB0FWBCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key on entry or change
DataItem NB0FWCAI char(17)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// caitem brand
DataItem NB0FWCBC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// eze  century
DataItem NB0FWCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NB0FWCCC char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// caitem company id
DataItem NB0FWCCO num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// error  company id
DataItem NB0FWCCX num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// compare date 1
DataItem NB0FWCD1 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// compare date 2
DataItem NB0FWCD2 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NB0FWCDC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// caitem dept code
DataItem NB0FWCDP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// error  dept code
DataItem NB0FWCDX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// unique customer flag
DataItem NB0FWCF1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// caitem group code
DataItem NB0FWCGP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error  group code
DataItem NB0FWCGX char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new key-error display only
DataItem NB0FWCKX char(21)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// hold company
DataItem NB0FWCOM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NB0FWCSC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// caitem store id
DataItem NB0FWCST num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// error  store id
DataItem NB0FWCSX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// hold store city
DataItem NB0FWCTY char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold company
DataItem NB0FWCUS num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// error division.
DataItem NB0FWCXX char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dash-1
DataItem NB0FWD1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ezedte day
DataItem NB0FWD1D num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ezedte motnh
DataItem NB0FWD1M num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ezedte year
DataItem NB0FWD1Y num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// dash-2
DataItem NB0FWD2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current day
DataItem NB0FWD2D char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current month
DataItem NB0FWD2M char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current year
DataItem NB0FWD2Y char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// eze  day
DataItem NB0FWDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// valid date flag
DataItem NB0FWDF1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// unique date flag
DataItem NB0FWDF2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold dept-for validation
DataItem NB0FWDPT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ezedte - ccyymmdd
DataItem NB0FWDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold field for ezedte
DataItem NB0FWDT1 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold current dte mm-dd-yy
DataItem NB0FWDT2 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold gpc-for validation
DataItem NB0FWGPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold century
DataItem NB0FWHCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold day
DataItem NB0FWHDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold date
DataItem NB0FWHDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold key for validation
DataItem NB0FWHKY char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold month
DataItem NB0FWHMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold year
DataItem NB0FWHYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// key change switch
DataItem NB0FWKSW char(1)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// w/s array last valid entry
DataItem NB0FWMAX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// eze  month
DataItem NB0FWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws hold number
DataItem NB0FWNUM num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript working storage
DataItem NB0FWSB1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// map subscript
DataItem NB0FWSB2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current line avail for add
DataItem NB0FWSB3 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold store name
DataItem NB0FWSNM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold store
DataItem NB0FWSTO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hold store
DataItem NB0FWSTR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// curr time hh:mm:ss
DataItem NB0FWT1 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws hold curr hr/mi
DataItem NB0FWT2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// curr time : (1)
DataItem NB0FWTC1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// curr time : (2)
DataItem NB0FWTC2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// curr time hours
DataItem NB0FWTHH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// curr time hours
DataItem NB0FWTHR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// curr time minutes
DataItem NB0FWTMI num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// curr time minutes
DataItem NB0FWTMN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w/s location - top of screen
DataItem NB0FWTOP num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// curr time seconds
DataItem NB0FWTSC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// data update switch
DataItem NB0FWUSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold state
DataItem NB0FWXST char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// eze  year
DataItem NB0FWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

