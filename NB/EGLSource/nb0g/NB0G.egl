package nb0g;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpx1.XBCCD;
import ku.common.KUCREC;
import ku.common.KUMREC;
import nb.common.NB2REC;
import nb.common.NB5REC;
import ta.common.TA1REC;
//*** PROGRAM=NB0G ****
//  *********      NB0G: nike bank system         *************
//                     bank account summary
// 
// 
// PURPOSE: display all  bank accounts for a single company.
// 
// 
// NARRATIVE:
//    this screen is designed to list all bank accounts within
//    a company.  from this listing, users may select an entry
//    and pf directly to the application they are interested in
//    with the appropriate key value.
// 
// 
// 
// MAINTENANCE HISTORY:
// 
//    date      name      description
//  --------  ---------  --------------------------------------
//   3-03-88  sjob       creation........
//  11-21-88  sjob       change company length from 8 to 7
//   3-30-88  sjob       add division code of 01 (domestic)
//   4-17-89  sjob       support multiple divisions.
//   4-26-89  jwood      added noncsp option to calls
//   4-26-89  jwood      added xssegtr logic
//   6-11-90  s.job      e69:convert old divisions to div/brand
// 10/27/93 lgross   added numeric check for customer
//                   changed: nb0gw01, nb0g000
// 
// 
// 
// ************************************************************
// 
// 
// *********************
Program NB0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KUCREC KUCREC; // record
  KUMREC KUMREC; // record
  NB0GW01 NB0GW01; // record
  NB2REC NB2REC; // record
  NB5REC NB5REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use NB0GM.NB0GM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NB0G000: NB0G000();
    ;
    goto NB0G050;
    ;
    ;
    ;
    NB0G050: NB0G050();
    ;
    goto NB0G050;
    ;
    ;
  end // end main
end // end NB0G

// initial process
Function NB0G000()
  ;
   /* ----------------------------------------------------------*/
   /* initialization process....*/
   /* 10-27-93 lgross added numeric check to customer id*/
   /* ----------------------------------------------------------*/
  XSENTRY();
  XSSEGTR(); /* set segmented transaction id*/
  ;
  ;
  set NB0GM001 empty; /* ; clear maps & work record*/
  set NB0GW01 empty;
  set SQLCA empty;
  ;
  ;
  ;
  if (COMMAREA.CAITEM > " ")
    NB0GW01.NB0GWCAI = COMMAREA.CAITEM; /* key passed in?*/
    if (NB0GW01.NB0GWCCC is numeric) /* if no spaces*/
      /* / next sentence*/
    else
      NB0GW01.NB0GWCCO = 0; /* set customer to zero*/
    end
    if (NB0GW01.NB0GWCCO > 0)
      NB0GM001.NB0GMCCO = NB0GW01.NB0GWCCO; /* move company to map*/
      NB0GW01.NB0GWCCO = 0; /* force new key processing*/
    end
  end
  ;
  COMMAREA.CAITEM = " ";
  ;
  ;
  NB0GM001.XXXRVNBR = "00"; /* ; revision*/
  NB0GM001.XXXERRID = "NB0G300"; /* initial map display proc.*/
  NB0GM001.XXXCURDT = VGVar.currentShortGregorianDate; /* date.*/
  ;
  ;
   /* -------------  end process nb0g000  --------------------*/
end // end NB0G000

// master loop
Function NB0G050()
  ;
  ;
  if (NB0GM001.NB0GMCCO > 0)
    if (NB0GM001.NB0GMCCO != NB0GW01.NB0GWCCO)
      NB0GW01.NB0GWCCO = NB0GM001.NB0GMCCO;
      NB0G100(); /* get new data*/
      NB0G200(); /* load map*/
    else
      ;
      if (converseVar.validationMsgNum == 0)
        if (converseVar.eventKey is pf7 /* up*/
         || converseVar.eventKey is pf8 /* down*/
         || converseVar.eventKey is pf9 /* top*/
         || converseVar.eventKey is pf10) /* bottom*/
          NB0G200(); /* load map*/
        end
      end
    end
  else
    NB0G055(); /* clear screen*/
    NB0GW01.NB0GWCCO = 0; /* force key change*/
    converseLib.validationFailed(31); /* need company id*/
  end
  ;
  ;
  NB0G300(); /* converse map*/
  ;
  ;
  NB0G400(); /* validate pf 1,2,3*/
  ;
  ;
  if (converseVar.eventKey is pa2)
    ;
    NB0GM001.NB0GMCCO = NB0GW01.NB0GWCCO; /* restore co*/
    NB0G055(); /* clear action fields*/
    ;
  else
    NB0G500(); /* validate screen entry & transfer*/
    NB0G600(); /* adjust pointers if nec.*/
  end
  ;
  ;
  ;
   /* ------------------- end nb0g050 -------------------------*/
end // end NB0G050

// clear action field
Function NB0G055()
  ;
  ;
  NB0GW01.NB0GWSB2 = 1; /* clear old screen data*/
  while (NB0GW01.NB0GWSB2 <= 14)
    if (converseVar.eventKey is pa2)
      NB0GM001.NB0GMACT[NB0GWSB2] = " ";
    else
      NB0GM001.NB0GMACT[NB0GWSB2] = " ";
      NB0GM001.NB0GMCMP[NB0GWSB2] = " ";
      NB0GM001.NB0GMSTR[NB0GWSB2] = " ";
      NB0GM001.NB0GMDPT[NB0GWSB2] = " ";
      NB0GM001.NB0GMGRP[NB0GWSB2] = " ";
      NB0GM001.XBCCD[NB0GWSB2] = " ";
      NB0GM001.NB0GMDES[NB0GWSB2] = " ";
    end
    NB0GW01.NB0GWSB2 = NB0GW01.NB0GWSB2 + 1;
  end
  ;
  ;
   /* ------------------- end nb0g055 -------------------------*/
end // end NB0G055

// get nb2rec - bank account data
Function NB0G100()
  ;
  ;
    /* ----------------------------------------------------*/
           /* get bank account data.......*/
    /* ----------------------------------------------------*/
  ;
  ;
  set NB2REC empty;
  set TA1REC empty;
  ;
  ;
  NB0GW01.NB0GWTOP = 1;
                                   /* start map with 1st entry*/
  NB0GW01.NB0GWMAX = 0; /* reset array size*/
  NB0GW01.NB0GWCMP[1] = 0;
  NB0GW01.NB0GWSTR[1] = 0;
  NB0GW01.NB0GWDPT[1] = 0;
  NB0GW01.NB0GWGRP[1] = " ";
  NB2REC.NB1CUST = NB0GM001.NB0GMCCO; /* company*/
  NB2REC.XDVCD = "**"; /* division*/
  NB2REC.XBCCD = "**"; /* brand*/
  ;
  call "IO2200" ("S2", SQLCA, NB2REC) {isNoRefresh = yes, isExternal = yes}; /* obtain acct mstr*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    NB0GW01.NB0GWSB1 = 1; /* set w.s. subscript*/
    NB0G110(); /* get first rec*/
    if (SQLCA.VAGen_SQLCODE == +0)
      ;
      while (SQLCA.VAGen_SQLCODE == +0
       && NB0GW01.NB0GWMAX <= 201)
        NB0G110(); /* get next rec*/
      end
      if (NB0GW01.NB0GWMAX > 200) /* table size exceeded*/
        NB0GW01.NB0GWTMX = "Y";
        NB0GW01.NB0GWMAX = 200; /* reset max.*/
      else
        NB0GW01.NB0GWTMX = "N";
      end
      if (SQLCA.VAGen_SQLCODE == +0
       || SQLCA.VAGen_SQLCODE == +100)
         /* ok*/
      else
        if (SQLCA.VAGen_SQLCODE == -911)
          converseLib.validationFailed(16);
          NB0GM001.XXXERRID = "NB0G110"; /* error process*/
        else
          ;
          TA1REC.TA1LOCAT[1] = "N2";
          TA1REC.TA1LOCAT[2] = "NB0G110";
          ;
        end
      end
    else
      converseLib.validationFailed(50); /* this is not a bank customer*/
    end
    call "IO2200" ("C2", SQLCA, NB2REC) {isNoRefresh = yes, isExternal = yes}; /* obtain acct mstr*/
    if (SQLCA.VAGen_SQLCODE != +0)
      TA1REC.TA1LOCAT[1] = "C1";
      TA1REC.TA1LOCAT[2] = "NB0G100";
    end
  else
    TA1REC.TA1LOCAT[1] = "S2";
    TA1REC.TA1LOCAT[2] = "NB0G100";
  end
  ;
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0 /* good return..*/
   || SQLCA.VAGen_SQLCODE == +100) /* rec not found*/
    ;
     /* all ok*/
    ;
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(16); /* db in use-try later*/
      NB0GM001.XXXERRID = "NB0G100"; /* error process*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "NB0G";
      TA1REC.TA1LOCAT[3] = "IO2200 ";
      TA1REC.TA1LOCAT[4] = "NB0GM001";
      TA1REC.TA1DBASE = "DNBANK.";
      TA1REC.TA1TBLVU = "VBACCT01";
      NB0GW01.NB0GWCKX = " "; /* clear key display*/
      NB0GW01.NB0GWCCX = NB0GM001.NB0GMCCO; /* convert co. to display*/
      NB0GW01.NB0GWCSX = 0; /* store*/
      NB0GW01.NB0GWCDX = 0; /* dpt*/
      NB0GW01.NB0GWCGX = " "; /* grp.*/
      TA1REC.TA1TBLKE = NB0GW01.NB0GWCKX;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
      NB0GM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end
  ;
  ;
  ;
end // end NB0G100

// select next account record.
Function NB0G110()
  ;
  ;
  ;
    /* --------------------------------------------------*/
    /* *  purpose:  get next nb2rec, (account record)   **/
       /* and move each unique number to working storage.*/
    /* --------------------------------------------------*/
  ;
  if (NB0GW01.NB0GWSB1 == 1)
    NB0GW01.NB0GWSB2 = 1;
  else
    NB0GW01.NB0GWSB2 = NB0GWSB1 - 1;
  end
  ;
  call "IO2200" ("N2", SQLCA, NB2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* good return....*/
    if (NB2REC.NB1CUST == NB0GW01.NB0GWCMP[NB0GWSB2]  /* company*/
     && NB2REC.KUMSTRID == NB0GW01.NB0GWSTR[NB0GWSB2] /* store*/
     && NB2REC.XNXCD == NB0GW01.NB0GWDPT[NB0GWSB2]    /* dept.*/
     && NB2REC.NB1GRPCD == NB0GW01.NB0GWGRP[NB0GWSB2] /* group*/
     && NB2REC.XBCCD == NB0GW01.XBCCD[NB0GWSB2])      /* ; brand*/
      ;
      /* .this account is already in working storage.*/
      ;
    else
      ;
      NB0GW01.NB0GWCMP[NB0GWSB1] = NB2REC.NB1CUST; /* company*/
      NB0GW01.NB0GWSTR[NB0GWSB1] = NB2REC.KUMSTRID; /* store*/
      NB0GW01.NB0GWDPT[NB0GWSB1] = NB2REC.XNXCD; /* dept.*/
      NB0GW01.NB0GWGRP[NB0GWSB1] = NB2REC.NB1GRPCD; /* group*/
      NB0GW01.XBCCD[NB0GWSB1] = NB2REC.XBCCD; /* ; brand*/
      ;
      /* -----------------------------------------------------------*/
       /* -- if no store,dept, or group....acct is at company level.*/
      /* ---------------------------------------------------x-------*/
      if (NB2REC.KUMSTRID == 0 /* no store id*/
       && NB2REC.XNXCD == 0    /* no dept*/
       && NB2REC.NB1GRPCD == " ") /* no group*/
        ;
        set KUCREC empty;
        KUCREC.KUCCOID = NB0GW01.NB0GWCMP[NB0GWSB1];
        NB0G120();
        ;
        if (SQLCA.VAGen_SQLCODE == 0)
          NB0GW01.NB0GWDES[NB0GWSB1] = KUCREC.KUCCONM;
        else
          NB0GW01.NB0GWDES[NB0GWSB1] = " ";
          SQLCA.VAGen_SQLCODE = 0;
        end
        ;
        /* ------------------------------------------------------------*/
        /* --  if store or department are given, acct is at store level*/
        /* ------------------------------------------------------------*/
      else
        if (NB2REC.KUMSTRID > 0 /* store id*/
         || NB2REC.XNXCD > 0)   /* dept*/
          ;
          set KUMREC empty;
          KUMREC.KUCCOID = NB0GW01.NB0GWCMP[NB0GWSB1];
          KUMREC.KUMSTRID = NB0GW01.NB0GWSTR[NB0GWSB1];
          NB0G130();
          ;
          if (SQLCA.VAGen_SQLCODE == 0)
            NB0GW01.NB0GWDES[NB0GWSB1] = KUMREC.KUMSTRNM;
          else
            NB0GW01.NB0GWDES[NB0GWSB1] = " ";
            SQLCA.VAGen_SQLCODE = 0;
          end
          ;
          /* -------------------------------------------*/
          /* --  account is a group account.          --*/
          /* -------------------------------------------*/
        else
          ;
          set NB5REC empty;
          NB5REC.NB5PNTCO = NB0GW01.NB0GWCMP[NB0GWSB1];
          NB5REC.NB1GRPCD = NB0GW01.NB0GWGRP[NB0GWSB1];
          NB5REC.XBCCD = NB0GW01.XBCCD[NB0GWSB1]; /* ; brand*/
          NB0G140();
          if (SQLCA.VAGen_SQLCODE == 0)
            NB0GW01.NB0GWDES[NB0GWSB1] = NB5REC.NB5GPDSC;
          else
            NB0GW01.NB0GWDES[NB0GWSB1] = " ";
            SQLCA.VAGen_SQLCODE = 0;
          end
          ;
        end
      end
      NB0GW01.NB0GWMAX = NB0GW01.NB0GWMAX + 1; /* set up size of array*/
      NB0GW01.NB0GWSB1 = NB0GW01.NB0GWSB1 + 1; /* set up w.s. subscript*/
    end
  end
  ;
  ;
  ;
end // end NB0G110

// find company(kucrec)record
Function NB0G120()
  ;
  ;
    /* ----------------------------------------------------*/
                    /* find company data*/
    /* ----------------------------------------------------*/
  ;
  ;
  set SQLCA empty;
  set TA1REC empty;
  ;
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* obtain store record*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0   /* good return....*/
   || SQLCA.VAGen_SQLCODE == +100 /* not found  ....*/
   || SQLCA.VAGen_SQLCODE == +911) /* database in use*/
    ;
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "NB0G";
    TA1REC.TA1LOCAT[1] = "S ";
    TA1REC.TA1LOCAT[2] = "NB0G120";
    TA1REC.TA1LOCAT[3] = "IO0340 ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1LOCAT[4] = "NB0GM001";
    TA1REC.TA1DBASE = "DCUST. ";
    TA1REC.TA1TBLVU = "VCMPNY01";
    NB0GW01.NB0GWCKX = " "; /* clear key display area*/
    NB0GW01.NB0GWCCX = NB0GW01.NB0GWCMP[NB0GWSB1];
    TA1REC.TA1TBLKE = NB0GW01.NB0GWCKX;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
    NB0GM001.VAGen_EZEMSG = COMMAREA.CAMSG;
  end
  ;
  ;
  ;
end // end NB0G120

// find store (kumrec) record
Function NB0G130()
  ;
  ;
    /* ----------------------------------------------------*/
                    /* find store data*/
    /* ----------------------------------------------------*/
  ;
  ;
  set SQLCA empty;
  set TA1REC empty;
  ;
  call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes}; /* obtain store record*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0   /* good return....*/
   || SQLCA.VAGen_SQLCODE == +100 /* record not found.*/
   || SQLCA.VAGen_SQLCODE == -911) /* database in use*/
    ;
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "NB0G";
    TA1REC.TA1LOCAT[1] = "S ";
    TA1REC.TA1LOCAT[2] = "NB0G130";
    TA1REC.TA1LOCAT[3] = "IO0340 ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1LOCAT[4] = "NB0GM001";
    TA1REC.TA1DBASE = "DCUST. ";
    TA1REC.TA1TBLVU = "VSTORE01";
    NB0GW01.NB0GWCKX = " "; /* clear key display area*/
    NB0GW01.NB0GWCCX = NB0GW01.NB0GWCMP[NB0GWSB1];
    NB0GW01.NB0GWCSX = NB0GW01.NB0GWSTR[NB0GWSB1];
    TA1REC.TA1TBLKE = NB0GW01.NB0GWCKX; /* display key used.*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
    NB0GM001.VAGen_EZEMSG = COMMAREA.CAMSG;
  end
  ;
  ;
  ;
end // end NB0G130

// select nb5rec & load map
Function NB0G140()
  ;
  ;
  ;
    /* --------------------------------------------------*/
       /* purpose:  get nb5rec for group description*/
    /* --------------------------------------------------*/
  set SQLCA empty;
  set TA1REC empty;
  ;
  call "IO2220" ("S ", SQLCA, NB5REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == +0   /* good return....*/
   || SQLCA.VAGen_SQLCODE == +100 /* no records*/
   || SQLCA.VAGen_SQLCODE == -911) /* database in use*/
  else
    ;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "NB0G";
    TA1REC.TA1LOCAT[1] = "S ";
    TA1REC.TA1LOCAT[2] = "NB0G140";
    TA1REC.TA1LOCAT[3] = "IO2220 ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1LOCAT[4] = "NB0GM001";
    TA1REC.TA1DBASE = "DNBANK.";
    TA1REC.TA1TBLVU = "VBCGRP01";
    NB0GW01.NB0GWCKX = "  "; /* clear key display*/
    NB0GW01.NB0GWCCX = NB0GW01.NB0GWCMP[NB0GWSB1]; /* company*/
    NB0GW01.NB0GWCSX = " "; /* no store*/
    NB0GW01.NB0GWCDX = " "; /* no dept*/
    NB0GW01.NB0GWCGX = NB0GW01.NB0GWGRP[NB0GWSB1]; /* group*/
    NB0GW01.NB0GWCXX = NB0GW01.XBCCD[NB0GWSB1]; /* brand*/
    TA1REC.TA1TBLKE = NB0GW01.NB0GWCKX;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
    NB0GM001.VAGen_EZEMSG = COMMAREA.CAMSG;
  end
  ;
  ;
  ;
end // end NB0G140

// load map
Function NB0G200()
  ;
  ;
         /* ************************************/
         /* *          load map               **/
         /* ************************************/
  ;
   /* *************************************************************/
   /* * NB0gW01.NB0gWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0gW01.NB0gWSB1 = location in working storage of the    **/
   /* *                    current line being loaded             **/
   /* * NB0gW01.NB0gWSB2 = location on the map of the current    **/
   /* *                    line being loaded                     **/
   /* * NB0gW01.NB0gWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
  ;
  NB0GW01.NB0GWSB1 = NB0GW01.NB0GWTOP; /* w/s subscript*/
  NB0GW01.NB0GWSB2 = 1; /* screen subscript*/
  ;
  ;
  while (NB0GW01.NB0GWSB2 < 15)
    if (NB0GW01.NB0GWSB1 <= NB0GW01.NB0GWMAX)
      NB0GM001.NB0GMACT[NB0GWSB2] = " ";
      NB0GM001.NB0GMCMP[NB0GWSB2] = NB0GW01.NB0GWCMP[NB0GWSB1];
      NB0GM001.NB0GMSTR[NB0GWSB2] = NB0GW01.NB0GWSTR[NB0GWSB1];
      NB0GM001.NB0GMDPT[NB0GWSB2] = NB0GW01.NB0GWDPT[NB0GWSB1];
      NB0GM001.NB0GMGRP[NB0GWSB2] = NB0GW01.NB0GWGRP[NB0GWSB1];
      NB0GM001.XBCCD[NB0GWSB2] = NB0GW01.XBCCD[NB0GWSB1];
      NB0GM001.NB0GMDES[NB0GWSB2] = NB0GW01.NB0GWDES[NB0GWSB1];
      ;
      ;
    else
      NB0GM001.NB0GMACT[NB0GWSB2] = " ";
      NB0GM001.NB0GMCMP[NB0GWSB2] = " ";
      NB0GM001.NB0GMSTR[NB0GWSB2] = " ";
      NB0GM001.NB0GMDPT[NB0GWSB2] = " ";
      NB0GM001.NB0GMGRP[NB0GWSB2] = " ";
      NB0GM001.XBCCD[NB0GWSB2] = "  ";
      NB0GM001.NB0GMDES[NB0GWSB2] = " ";
      ;
    end
    NB0GW01.NB0GWSB1 = NB0GW01.NB0GWSB1 + 1; /* bump up subscript*/
    NB0GW01.NB0GWSB2 = NB0GW01.NB0GWSB2 + 1; /* bump up subscript*/
  end
  ;
  ;
  NB0GW01.NB0GWNUM = NB0GW01.NB0GWTOP + 13;
  if (NB0GW01.NB0GWNUM >= 200
   && NB0GW01.NB0GWTMX == "Y") /* over 200 entries on d.b.*/
    converseLib.validationFailed(28);
  end
  ;
  ;
  ;
end // end NB0G200

// converse map1
Function NB0G300()
   /* **/
  ;
  converse NB0GM001 ;
  ;
  ;
  ;
   /* ------------------- end nb0g300 -------------------------*/
end // end NB0G300

// validate attention keys...
Function NB0G400()
  ;
  ;
   /* ------------------------------------------------------------*/
   /* reset modified data tags.*/
   /* ------------------------------------------------------------*/
  ;
  NB0GW01.NB0GWSB2 = 1; /* location on screen*/
  while (NB0GW01.NB0GWSB2 <= 14)
    set NB0GM001.NB0GMACT[NB0GWSB2] initialAttributes;
    NB0GW01.NB0GWSB2 = NB0GW01.NB0GWSB2 + 1;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* stop indiscriminate button pressing..........*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* help*/
   || converseVar.eventKey is pf3  /* nike menu*/
   || converseVar.eventKey is pf4  /* master menu*/
   || converseVar.eventKey is pf7  /* page back*/
   || converseVar.eventKey is pf8  /* page forward*/
   || converseVar.eventKey is pf9  /* top*/
   || converseVar.eventKey is pf10 /* bottom*/
   || converseVar.eventKey is pf14 /* account bal. nb0a*/
   || converseVar.eventKey is pf15 /* history nb0c*/
   || converseVar.eventKey is pf16 /* customer nb0b*/
   || converseVar.eventKey is pf18 /* transfers nb0d*/
   || converseVar.eventKey is pf20 /* group desc. nb0e*/
   || converseVar.eventKey is pf21 /* group members nb0f*/
   || converseVar.eventKey is pa2  /* cancel*/
   || converseVar.eventKey is enter) /* nothing*/
    ;
     /* screen operator awake!*/
  else
    converseLib.validationFailed(03); /* invalid pk key..*/
  end
  ;
  ;
  ;
  if (NB0GM001.CATOAP > " ") /* requesting fast pathing*/
    COMMAREA.CATOAP = NB0GM001.CATOAP;
    COMMAREA.CAITEM = NB0GM001.CAITEM;
    COMMAREA.CAFROMAP = "NB0G";
    XSEXIT(); /* transfer out*/
    ;
     /* --- and if you are still in here !*/
    NB0GM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  ;
  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    XSPF1(); /* Exit to the HELP facility*/
    ;
    NB0GM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force error*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  ;
  if (converseVar.eventKey is pf3) /* PF4 was pressed*/
    COMMAREA.CATOAP = "NB0M"; /* return to menu*/
    COMMAREA.CAFROMAP = "NB0G"; /* from here to there*/
    XSEXIT();
    ;
     /* --- and if you are still in here !*/
    NB0GM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  ;
  if (converseVar.eventKey is pf4) /* PF4 was pressed*/
    XSPF4(); /* Exit to system main menu*/
    ;
    NB0GM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  ;
  ;
end // end NB0G400

// edit screen for transfer
Function NB0G500()
  ;
  ;
  ;
   /* ---------------------------------------------------------*/
   /* edit for action code other than blank or 's'*/
   /* and count the number of selections requested.*/
   /* ---------------------------------------------------------*/
  ;
  NB0GW01.NB0GWSB2 = 14; /* screen subscript*/
  NB0GW01.NB0GWSEL = 0; /* num of map selects*/
  ;
  while (NB0GW01.NB0GWSB2 >= 1)
    if (NB0GM001.NB0GMACT[NB0GWSB2] == " ")
      ;
    else
      if (NB0GM001.NB0GMACT[NB0GWSB2] == "S")
        NB0GW01.NB0GWSEL = NB0GW01.NB0GWSEL + 1;
        NB0GW01.NB0GWCCO = NB0GM001.NB0GMCMP[NB0GWSB2];
        NB0GW01.NB0GWCST = NB0GM001.NB0GMSTR[NB0GWSB2];
        NB0GW01.NB0GWCDP = NB0GM001.NB0GMDPT[NB0GWSB2];
        NB0GW01.NB0GWCGP = NB0GM001.NB0GMGRP[NB0GWSB2];
        NB0GW01.NB0GWCBC = NB0GM001.XBCCD[NB0GWSB2];
        ;
      else
         /* ...bad select code..*/
        converseLib.validationFailed(94); /* only a 's' action code is valid*/
        set NB0GM001.NB0GMACT[NB0GWSB2] cursor, modified, bold;
      end
    end
    NB0GW01.NB0GWSB2 = NB0GW01.NB0GWSB2 - 1;
  end
  ;
  ;
  ;
   /* ---------------------------------------------------------*/
         /* hilite the duplicate selects.*/
   /* ---------------------------------------------------------*/
  ;
  if (NB0GW01.NB0GWSEL > 1)
    converseLib.validationFailed(45); /* only one select accepted*/
    NB0GW01.NB0GWSB2 = 14; /* screen subscript*/
    while (NB0GW01.NB0GWSB2 >= 1)
      if (NB0GM001.NB0GMACT[NB0GWSB2] == " ")
      else
        if (NB0GM001.NB0GMACT[NB0GWSB2] == "S")
          set NB0GM001.NB0GMACT[NB0GWSB2] cursor, modified, bold;
        end
      end
      NB0GW01.NB0GWSB2 = NB0GW01.NB0GWSB2 - 1;
    end
  end
  ;
  ;
  if (converseVar.validationMsgNum == 0)
    if (converseVar.eventKey is enter)
      converseLib.validationFailed(93);
                                   /* press pf key to exit or scroll*/
    else
      if (NB0GW01.NB0GWSEL <= 1)
        NB0G510(); /* set up key & transfer out*/
      end
    end
  end
  ;
  ;
  ;
end // end NB0G500

// load any key data for transfer
Function NB0G510()
  ;
  ;
  COMMAREA.CAITEM = NB0GW01.NB0GWCAI;
  COMMAREA.CAFROMAP = "NB0G";
  ;
  if (converseVar.eventKey is pf14)
    COMMAREA.CATOAP = "NB0A"; /* acct bal (nb0a)*/
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf15)
    COMMAREA.CATOAP = "NB0C"; /* history  (nb0c)*/
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf16)
    COMMAREA.CATOAP = "NB0B"; /* customer (nb0b)*/
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf18)
    COMMAREA.CATOAP = "NB0D"; /* transfer (nb0d)*/
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf20)
    COMMAREA.CATOAP = "NB0E"; /* group desc(nb0e)*/
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf21)
    COMMAREA.CATOAP = "NB0F"; /* group member(nb0f)*/
    XSEXIT();
  end
  ;
  ;
  ;
end // end NB0G510

// scrolling process
Function NB0G600()
         /* ************************************/
         /* *      scrolling process          **/
         /* ************************************/
  ;
  ;
   /* *************************************************************/
   /* * NB0GW01.NB0GWTOP = LOCATION OF TOP OF SCREEN IN W/S      **/
   /* * NB0GW01.NB0GWnum = w/s field used to compute new top     **/
   /* *                    of screen for scroll froward          **/
   /* * NB0GW01.NB0GWMAX = POSITION IN ARRAY OF LAST RECORD      **/
   /* *************************************************************/
  ;
  ;
  if (converseVar.eventKey is pf7)
    if (NB0GW01.NB0GWTOP == 1)
      converseLib.validationFailed(20); /* no more back scrolling possible*/
    else
      if (NB0GW01.NB0GWTOP <= 14)
        NB0GW01.NB0GWTOP = 1; /* set top of screen to 1*/
      else
        NB0GW01.NB0GWTOP = NB0GW01.NB0GWTOP - 14;
      end
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf8)
    NB0GW01.NB0GWNUM = 13;
    NB0GW01.NB0GWNUM = NB0GW01.NB0GWNUM + NB0GW01.NB0GWTOP;
    if (NB0GW01.NB0GWNUM < NB0GW01.NB0GWMAX)
      NB0GW01.NB0GWTOP = NB0GW01.NB0GWTOP + 14;
    else
      converseLib.validationFailed(21); /* no forward scrolling*/
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf9) /* top*/
    NB0GW01.NB0GWTOP = 1;
  end
  ;
  ;
  if (converseVar.eventKey is pf10) /* bottom*/
    if (NB0GWMAX > 14)
      NB0GW01.NB0GWTOP = NB0GW01.NB0GWMAX - 13;
    else
      NB0GW01.NB0GWTOP = 1;
    end
  end
  ;
  ;
  ;
end // end NB0G600

//*** RECORD=NB0GW01 ****
// ;********************** nb0aw01 ****************************
// ;
// ;         work record for nb0a: bank balance inquiry
// ;
// ; 10/27/93 LGROSS Reduced size of nb0gwcco to 7 and
// ;                 nb0gwcdp to 2.  Added fields nb0gwccc,
// ;                 nb0gwcsc and nb0gwcdc
// ;***********************************************************
// ***********************
Record NB0GW01 type basicRecord
  10 NB0GWSB1 NB0GWSB1 ; 
  10 NB0GWSB2 NB0GWSB2 ; 
  10 NB0GWSEL NB0GWSEL ; 
  10 NB0GWMAX NB0GWMAX ; 
  10 NB0GWTMX NB0GWTMX ; 
  10 NB0GWNUM NB0GWNUM ; 
  10 NB0GWTOP NB0GWTOP ; 
  10 * char(1) ; 
  10 NB0GWARY NB0GWARY [200] ; 
    15 NB0GWCMP NB0GWCMP ; 
    15 NB0GWSTR NB0GWSTR ; 
    15 NB0GWDPT NB0GWDPT ; 
    15 NB0GWGRP NB0GWGRP ; 
    15 XBCCD XBCCD ; 
    15 NB0GWDES NB0GWDES ; 
  10 NB0GWCAI NB0GWCAI ; 
    15 NB0GWCCC NB0GWCCC ; 
      20 NB0GWCCO NB0GWCCO ; 
    15 NB0GWCSC NB0GWCSC ; 
      20 NB0GWCST NB0GWCST ; 
    15 NB0GWCDC NB0GWCDC ; 
      20 NB0GWCDP NB0GWCDP ; 
    15 NB0GWCGP NB0GWCGP ; 
    15 NB0GWCBC NB0GWCBC ; 
  10 NB0GWCKX NB0GWCKX ; 
    15 NB0GWCCX NB0GWCCX ; 
    15 NB0GWCSX NB0GWCSX ; 
    15 NB0GWCDX NB0GWCDX ; 
    15 NB0GWCGX NB0GWCGX ; 
    15 NB0GWCXX NB0GWCXX ; 
end // end NB0GW01

// w.s. array for screen display
DataItem NB0GWARY char(50)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// key on entry or change
DataItem NB0GWCAI char(17)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

//        brand
DataItem NB0GWCBC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NB0GWCCC char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//        company id
DataItem NB0GWCCO num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// error  company id
DataItem NB0GWCCX num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

DataItem NB0GWCDC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//        dept code
DataItem NB0GWCDP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// error  dept code
DataItem NB0GWCDX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

//        group code
DataItem NB0GWCGP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error  group code
DataItem NB0GWCGX char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key for error display only
DataItem NB0GWCKX char(21)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

//       company
DataItem NB0GWCMP num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

DataItem NB0GWCSC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//        store id
DataItem NB0GWCST num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// error  store id
DataItem NB0GWCSX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// error  brand
DataItem NB0GWCXX char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//       name
DataItem NB0GWDES char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//       dept code
DataItem NB0GWDPT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

//       group
DataItem NB0GWGRP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// amount of array being used
DataItem NB0GWMAX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// total selects from one screen
DataItem NB0GWNUM num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript
DataItem NB0GWSB1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// subscript
DataItem NB0GWSB2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// counting screen selections
DataItem NB0GWSEL num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

//       store id
DataItem NB0GWSTR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// are there more than 200 entrys
DataItem NB0GWTMX char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// top
DataItem NB0GWTOP num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

