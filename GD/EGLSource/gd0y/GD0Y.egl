package gd0y;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import da.common.*;
import gd.common.*;
import sy.common.*;
import ta.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=GD0Y ****
// NIKE TABLE HANDLER - TABLE MAINTENANCE  - SUMMARY CODE
// 
// OVERVIEW: This application is maintenance application for
//           the SUMMARY CODE table.
// 
// DB2 TBL: DCORP.VSUMCD01
// CSP TBL: YSMTBL
// 
// DATE CREATED: 09/18/97
//       AUTHOR: Eric Chan
// 
// MAINTENANCE HISTORY:
// 
//     date     by whom     overview of changes made
//   --------  ----------  ------------------------------------
//   11/11/97  ECHAN       CHG LOGIC IN GD0YP25-SET-ATTR-1
//                         CHG LOGIC IN GD0YP25-SET-ATTR-2
//                         CHG LOGIC IN GD0YP69-EDIT-KEY
//   06/25/98  ECHAN       DISPLAY STATUS IN GD0YM001
//   02/25/99  ECHAN       ADD NOHILITE IN GD0YP25-SET-ATTR-1.
//                         CHG TRAMSACTION TO TRANSACTION IN
//                         GD0YP70-PROC-MAP-1.
//                         CHECK DUPLICATE AND DEADLOCK IN
//                         GD0YP70-PROC-MAP-2.
//   06/16/99  ECHAN       CHG GD0YW01-KEY-SUMID TO NUM 9(4).
//   05/23/01  SKUMA3      Modified to DB2 only application.
// 
// *********************
Program GD0Y type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "DA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  DAWREC DAWREC; // record
  ERRSQLCA ERRSQLCA; // record
  GD0YW01 GD0YW01; // record
  GD0YW02 GD0YW02; // record
  GD3REC GD3REC; // record
  GDWREC GDWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VDATRN01 VDATRN01; // record
  VSUMCD01 VSUMCD01; // record
  WDA1140 WDA1140; // record
  XSDAW01 XSDAW01; // record
  XSDAW02 XSDAW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGLTBL {deleteAfterUse = yes}; // table
  use GD0YM.GD0YM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    GD0YP00-DRIVER: GD0YP00-DRIVER();
    exit program;
  end // end main
end // end GD0Y

// Close cursor based on search
Function GD0Y-CLOSE-YSM()
  /* **************************************************************/
  /* Determine and CLOSE the correct YSM cursor*/
  /* **************************************************************/

  /* Use the C1 cursor if no search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("C1", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the C2 cursor if all(TBL, SYS, SID, SCD, and SVL) search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("C2", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the C3 cursor if TBL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("C3", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the C4 cursor if SYS search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("C4", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the C5 cursor if SID search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("C5", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the C6 cursor if SCD search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("C6", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the C7 cursor if SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("C7", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the C8 cursor if TBL and SYS search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("C8", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the C9 cursor if TBL and SID search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("C9", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CA cursor if TBL and SCD search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("CA", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CB cursor if TBL and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CB", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CC cursor if SYS and SID search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("CC", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CD cursor if SYS and SCD search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("CD", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CE cursor if SYS and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CE", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CF cursor if SID and SCD search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("CF", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CG cursor if SID and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CG", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CH cursor if SCD and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CH", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CI cursor if TBL, SYS, and SID search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("CI", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CJ cursor if TBL, SYS, and SCD search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("CJ", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CK cursor if TBL, SYS, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CK", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CL cursor if TBL, SID, and SCD search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("CL", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CM cursor if TBL, SID, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CM", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CN cursor if TBL, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CN", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CO cursor if SYS, SID, and SCD search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("CO", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CP cursor if SYS, SID, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CP", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CQ cursor if SYS, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CQ", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CR cursor if SID, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CR", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CS cursor if TBL, SYS, SID, and SCD search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("CS", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CT cursor if TBL, SYS, SID, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CT", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CU cursor if TBL, SYS, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CU", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CV cursor if TBL, SID, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CV", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the CW cursor if SYS, SID, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("CW", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100) /* or not found*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* database busy*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
      DAWREC.DAW-INFO-MESSAGE = "DATABASE BUSY - PLEASE TRY AGAIN ";
    else
      DAWREC.DAW-EDIT-ERROR-FL = "Y";

      TA1REC.TA1DBASE = "DCORP   "; /* data base name*/
      TA1REC.TA1TBLVU = "VSUMCD01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "CLOSE   ";
      TA1REC.TA1LOCAT[2] = "VSUMCD01";
      XSDAS-DB2-ABEND-RB();
    end
  end


end // end GD0Y-CLOSE-YSM

// Fetch cursor based on search
Function GD0Y-FETCH-YSM()
  /* **************************************************************/
  /* Determine and FETCH the correct YSM cursor*/
  /* **************************************************************/

  /* Use the N1 cursor if no search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("N1", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the N2 cursor if all(TBL, SYS, SID, SCD, and SVL) search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("N2", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the N3 cursor if TBL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("N3", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the N4 cursor if SYS search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("N4", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the N5 cursor if SID search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("N5", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the N6 cursor if SCD search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("N6", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the N7 cursor if SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("N7", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the N8 cursor if TBL and SYS search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("N8", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the N9 cursor if TBL and SID search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("N9", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NA cursor if TBL and SCD search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("NA", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NB cursor if TBL and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NB", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NC cursor if SYS and SID search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("NC", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the ND cursor if SYS and SCD search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("ND", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NE cursor if SYS and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NE", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NF cursor if SID and SCD search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("NF", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NG cursor if SID and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NG", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NH cursor if SCD and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NH", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NI cursor if TBL, SYS, and SID search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("NI", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NJ cursor if TBL, SYS, and SCD search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("NJ", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NK cursor if TBL, SYS, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NK", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NL cursor if TBL, SID, and SCD search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("NL", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NM cursor if TBL, SID, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NM", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NN cursor if TBL, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NN", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NO cursor if SYS, SID, and SCD search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("NO", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NP cursor if SYS, SID, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NP", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NQ cursor if SYS, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NQ", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NR cursor if SID, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NR", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NS cursor if TBL, SYS, SID, and SCD search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("NS", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NT cursor if TBL, SYS, SID, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NT", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NU cursor if TBL, SYS, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NU", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NV cursor if TBL, SID, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NV", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the NW cursor if SYS, SID, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("NW", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100) /* or not found*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* database busy*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
      DAWREC.DAW-INFO-MESSAGE = "DATABASE BUSY - PLEASE TRY AGAIN ";
    else
      DAWREC.DAW-EDIT-ERROR-FL = "Y";

      TA1REC.TA1DBASE = "DCORP   "; /* data base name*/
      TA1REC.TA1TBLVU = "VSUMCD01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "FETCH   ";
      TA1REC.TA1LOCAT[2] = "VSUMCD01";
      XSDAS-DB2-ABEND-RB();
    end
  end


end // end GD0Y-FETCH-YSM

// Open cursor based on search
Function GD0Y-OPEN-YSM()
  /* **************************************************************/
  /* Determine and OPEN the correct YSM cursor*/
  /* **************************************************************/
  set SQLCA empty;
  set VSUMCD01 empty;
  VSUMCD01.YSMTBLPF = GD0YM001.TBL-SRCH;
  VSUMCD01.YSMSYSPF = GD0YM001.SYS-SRCH;
  VSUMCD01.YSMSUMID = GD0YM001.SID-SRCH;
  VSUMCD01.YSMSUMCD = GD0YM001.SCD-SRCH;
  VSUMCD01.YSMSRCVL = GD0YM001.SVL-SRCH;

  /* Use the S1 cursor if no search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("S1", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the S2 cursor if all(TBL, SYS, SID, SCD, and SVL) search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("S2", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the S3 cursor if TBL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("S3", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the S4 cursor if SYS search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("S4", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the S5 cursor if SID search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("S5", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the S6 cursor if SCD search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("S6", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the S7 cursor if SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("S7", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the S8 cursor if TBL and SYS search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("S8", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the S9 cursor if TBL and SID search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("S9", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SA cursor if TBL and SCD search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("SA", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SB cursor if TBL and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("SB", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SC cursor if SYS and SID search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("SC", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SD cursor if SYS and SCD search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("SD", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SE cursor if SYS and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("SE", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SF cursor if SID and SCD search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("SF", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SG cursor if SID and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("SG", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SH cursor if SCD and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("SH", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SI cursor if TBL, SYS, and SID search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("SI", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SJ cursor if TBL, SYS, and SCD search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("SJ", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SK cursor if TBL, SYS, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("SK", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SL cursor if TBL, SID, and SCD search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("SL", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SM cursor if TBL, SID, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("SM", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SN cursor if TBL, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("SN", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SO cursor if SYS, SID, and SCD search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("SO", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SP cursor if SYS, SID, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("SP", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SQ cursor if SYS, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("SQ", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SR cursor if SID, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("SR", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SS cursor if TBL, SYS, SID, and SCD search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH == " ")
    call "DA1180" ("SS", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the ST cursor if TBL, SYS, SID, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH == " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("ST", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SU cursor if TBL, SYS, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH == 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("SU", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SV cursor if TBL, SID, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH > " " && GD0YM001.SYS-SRCH == " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("SV", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* Use the SW cursor if SYS, SID, SCD, and SVL search criteria*/
  if (GD0YM001.TBL-SRCH == " " && GD0YM001.SYS-SRCH > " "
   && GD0YM001.SID-SRCH > 0 && GD0YM001.SCD-SRCH > " "
   && GD0YM001.SVL-SRCH > " ")
    call "DA1180" ("SW", SQLCA, VSUMCD01) {isNoRefresh = yes, isExternal = yes};
  end

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100) /* or not found*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* database busy*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
      DAWREC.DAW-INFO-MESSAGE = "DATABASE BUSY - PLEASE TRY AGAIN ";
    else
      DAWREC.DAW-EDIT-ERROR-FL = "Y";

      TA1REC.TA1DBASE = "DCORP   "; /* data base name*/
      TA1REC.TA1TBLVU = "VSUMCD01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "OPEN YSM";
      TA1REC.TA1LOCAT[2] = "VSUMCD01";
      XSDAS-DB2-ABEND-RB();
    end
  end


end // end GD0Y-OPEN-YSM

// DRIVER FOR APPLICATION
Function GD0YP00-DRIVER()
  /* **************************************************************/
  /* DRIVER FOR APPLICATION*/
  /* **************************************************************/

  GD0YP10-INITIALIZE(); /* Initialize application*/

  GD0YW01.TBL-SRCH = "ZZZ";
  GD0YW01.SYS-SRCH = "ZZ";
  GD0YW01.SID-SRCH = 9999;
  GD0YW01.SCD-SRCH = "ZZ";
  GD0YW01.SVL-SRCH = "ZZZZ";

  while (DAWREC.DAW-TERM-APPL-FL == "N")
    GD0YP30-MAIN-MAP-1(); /* Process map until ready to exit*/
  end

  GD0YP99-TERMINATE(); /* Terminate the application*/

  /* **************/
  /* ****************** END GD0YP00 *******************************/
  /* **************/
end // end GD0YP00-DRIVER

// INITIALIZE THE APPLICATION
Function GD0YP10-INITIALIZE()
  /* **********************************************************/
  /* This process initializes the program work area and map.*/
  /* **********************************************************/

  XSENTRY(); /* Check entry security*/

  XSSEGTR(); /* Set segmented transaction id*/

  /* Initialize records*/

  COMMAREA.CAITEM = " ";
  DAWREC.DAWGROUP = COMMAREA.CAUSERA; /* restore system record*/
  set GD0YW01 empty; /* Working storage record*/
  set GD0YW02 empty; /* Temp storage record*/
  DAWREC.DAW-CURR-PAGE = 0;

  DAWREC.DAW-TERM-APPL-FL = "N";
  DAWREC.DAW-EDIT-ERROR-FL = "N";

  /* Initialize and move standard information to the map*/

  set GD0YM001 initial;
  GD0YM001.DAW-MAP-TIME = VGVar.currentFormattedTime;
  GD0YM001.DAW-MAP-DATE = VGVar.currentShortGregorianDate;

  if (COMMAREA.CAMSG != " "
   && COMMAREA.CAFRMSYS == "DA")
    GD0YM001.DAW-INFO-MESSAGE = COMMAREA.CAMSG; /* commarea message*/
  end

  /* **************/
  /* ****************** END GD0YP10 ******************************/
  /* **************/
end // end GD0YP10-INITIALIZE

// BUILD MAP 1 - LIST TABLE ROWS
Function GD0YP20-BUILD-MAP1()
  /* ****************************************************************/
  /* Build temp storage and move first page to MAP 001*/
  /* ****************************************************************/

  GD0YP22-BUILD-TSQ(); /* build temp storage file*/

  if (DAWREC.DAW-CURR-PAGE != GD0YM001.DAW-CURR-PAGE
   || GD0YM001.DAW-CURR-PAGE == 1)
    GD0YS-TS-READ-PAGE(); /* read temp storage page*/
    GD0YP71-TSQ-TO-MAP(); /* move page to the map*/
  end

  GD0YP25-SET-ATTR-1(); /* Set field attributes*/

  /* **************/
  /* ***************** END GD0YP20 **********************************/
  /* **************/
end // end GD0YP20-BUILD-MAP1

// BUILD TEMP STORAGE FILE
Function GD0YP22-BUILD-TSQ()
  /* ****************************************************************/
  /* Build temp storage from menu table to allow scrolling*/
  /* ****************************************************************/

  set GD0YW02 empty; /* temp storage record*/
  DAWREC.DAW-ROW-NBR = 0; /* temp storage row subscript*/
  DAWREC.DAW-CURR-PAGE = 0; /* temp storage page(record) number*/
  DAWREC.DAW-MAX-PAGE = 0; /* temp storage max page number*/

  /* Move the Selected SUMCD rows to temp storage*/

  GD0Y-OPEN-YSM();

  while (SQLCA.VAGen_SQLCODE == 0) /* until last row*/
    DAWREC.DAW-ROW-NBR = DAWREC.DAW-ROW-NBR + 1;

    GD0Y-FETCH-YSM();

    if (SQLCA.VAGen_SQLCODE == 0) /* if row found*/
      GD0YW02.DAW-RECORD-TYPE[DAW-ROW-NBR] = "TBL ";
      GD0YW02.YSMTBLPF[DAW-ROW-NBR] = VSUMCD01.YSMTBLPF;
      GD0YW02.YSMSYSPF[DAW-ROW-NBR] = VSUMCD01.YSMSYSPF;
      GD0YW02.YSMSUMID[DAW-ROW-NBR] = VSUMCD01.YSMSUMID;
      GD0YW02.YSMSUMCD[DAW-ROW-NBR] = VSUMCD01.YSMSUMCD;
      GD0YW02.YSMSRCVL[DAW-ROW-NBR] = VSUMCD01.YSMSRCVL;
      GD0YW02.YSMSMDSC[DAW-ROW-NBR] = VSUMCD01.YSMSMDSC;
      GD0YW02.XXXSTAT[DAW-ROW-NBR] = VSUMCD01.XXXSTAT;
      GD0YW02.ZZZSDT[DAW-ROW-NBR] = VSUMCD01.ZZZSDT;
      GD0YW02.ZZZCHGDT[DAW-ROW-NBR] = VSUMCD01.ZZZCHGDT;
    end

    if (DAWREC.DAW-ROW-NBR == 14) /* maximum tsq rows per map*/
      GD0YS-TS-ADD-PAGE(); /* write temp storage record when full*/
    end
  end

  GD0Y-CLOSE-YSM();

  if (DAWREC.DAW-ROW-NBR > 0 /* rows were moved*/
   || DAWREC.DAW-MAX-PAGE > 0) /* or tsq pages were written*/

    if (DAWREC.DAW-ROW-NBR < 14 /* last page not full*/
     && DAWREC.DAW-ROW-NBR != 0) /* rows exist*/
      GD0YS-TS-ADD-PAGE();
    end

    GD0YM001.DAW-CURR-PAGE = 1; /* page number to read*/
    DAWREC.DAW-CURR-PAGE = 1; /* last page read*/
    /* MOVE 0 TO DAWREC.DAW-CURR-PAGE;/* last page read*/
    GD0YM001.DAW-LAST-PAGE = DAWREC.DAW-MAX-PAGE;

  end

  /* **************/
  /* ***************** END GD0YP22 **********************************/
  /* **************/
end // end GD0YP22-BUILD-TSQ

// SET MAP 1 FIELD ATTRIBUTES
Function GD0YP25-SET-ATTR-1()
  /* *********************************************************/
  /* Set MAP 001 field attributes - only show page numbers when*/
  /* there is more than 1 page. Autoskip,dark any rows with*/
  /* no value (zeros) for YSMSUMID.*/
  /* *********************************************************/

  if (DAW-LAST-PAGE > 1)
    GD0YM001.DAW-PAGE-LIT = "PAGE";
    set GD0YM001.DAW-CURR-PAGE initialAttributes;
    GD0YM001.DAW-OF-LIT = "OF";
    set GD0YM001.DAW-LAST-PAGE initialAttributes;
    GD0YM001.DAW-PF7-LIT = "PF7 = SCROLL BACK";
    GD0YM001.DAW-PF8-LIT = "PF8 = SCROLL FRWD";
  else
    GD0YM001.DAW-PAGE-LIT = " ";
    set GD0YM001.DAW-CURR-PAGE skip, noHighLight, invisible;
    set GD0YM001.DAW-LAST-PAGE skip, noHighLight, invisible;
    GD0YM001.DAW-OF-LIT = " ";
    set GD0YM001.DAW-LAST-PAGE skip, invisible;
    GD0YM001.DAW-PF7-LIT = " ";
    set GD0YM001.DAW-PF7-LIT skip;
    GD0YM001.DAW-PF8-LIT = " ";
    set GD0YM001.DAW-PF8-LIT skip;
  end

  sysVar.arrayIndex = 14;

  while (sysVar.arrayIndex > 0)
    if (GD0YM001.YSMSUMID[sysVar.arrayIndex] <= 0)
      set GD0YM001.YSMSUMID[sysVar.arrayIndex] skip, invisible;
    else
      set GD0YM001.YSMSUMID[sysVar.arrayIndex] initialAttributes;
    end
    sysVar.arrayIndex = sysVar.arrayIndex - 1;
  end
  /* **************/
  /* ****************** END GD0YP25 **************************/
  /* **************/
end // end GD0YP25-SET-ATTR-1

// MAIN PROCESS LOOP FOR MAP 1
Function GD0YP30-MAIN-MAP-1()
  /* **********************************************************/
  /* MAIN PROCESS - Program loops through this process until*/
  /* the user exits with a PF key or transfers to another*/
  /* application. Exit occurs when DA-TERM-APPL = 'Y'*/
  /* **********************************************************/

  GD0YP40-CONVERSE-1(); /* Display the map*/

  converseLib.validationFailed(0);
  GD0YM001.VAGen_EZEMSG = " ";
  GD0YM001.DAW-INFO-MESSAGE = " ";
  DAWREC.DAW-EDIT-ERROR-FL = "N";

  GD0YP25-SET-ATTR-1(); /* Reset field attributes to defined*/

  GD0YP50-PF-KEYS-1(); /* Edit pf keys*/

  if (DAWREC.DAW-EDIT-ERROR-FL == "N"
   && DAWREC.DAW-TERM-APPL-FL == "N") /* No errors and not ready to exit*/

    GD0YP60-EDIT-MAP-1(); /* Do all edits for map 1*/

    if (DAWREC.DAW-EDIT-ERROR-FL == "N")
      GD0YP70-PROC-MAP-1(); /* Do any processing needed for map 1*/
    end

  end


  /* **************/
  /* ****************** END GD0YP30 *****************************/
  /* **************/
end // end GD0YP30-MAIN-MAP-1

// CONVERSE MAP 001
Function GD0YP40-CONVERSE-1()
  /* **********************************************************/
  /* CONVERSE MAP 001 - LIST TABLE*/
  /* **********************************************************/
  converse GD0YM001 ;
  /*  */
  /*  */
  /*  */
  if (converseVar.eventKey is enter)
    GDWREC.GDWAIDS = "0"; /* set key flag for flow stage.*/

    if (GD0YM001.XMGDM2AP is modified
     && GD0YM001.XMGDM2AP != GD3REC.GD304B) /* and not spaces*/

      COMMAREA.CAITEM = GD0YM001.XMGDMITM;
      COMMAREA.CATOAP = GD0YM001.XMGDM2AP;

      XSEXIT(); /* link to specified application.*/

      XSGD040(); /* If the link fails, A message is*/
                                   /* formatted,*/
      GD0YM001.VAGen_EZEMSG = GD3REC.GD3PEND;
      GD3REC.GD3PEND = " ";

      return;

    end /* fast path field not modified.*/

    if (GD0YM001.XMGDMITM is modified /* item entered*/
     && GD0YM001.XMGDMITM != GD3REC.GD320B) /* and not spaces*/

      COMMAREA.CAITEM = GD0YM001.XMGDMITM;

      XSGDG90(); /* determine desired application, and*/
                                   /* link.*/
      GD0YM001.VAGen_EZEMSG = GD3REC.GD3PEND;
      GD3REC.GD3PEND = " ";

      return;
    end /* item field not modified.*/

  end /* not ENTER*/

   /* ************************************************************/
  /* **************/
  /* ****************** END GD0YP40 *****************************/
  /* **************/
end // end GD0YP40-CONVERSE-1

// EDIT PF KEYS FOR MAP 1
Function GD0YP50-PF-KEYS-1()
  /* **************************************************************/
  /* Edit the PF keys for MAP 001*/
  /* **************************************************************/

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf10
   || converseVar.eventKey is pf11)
    /* valid pf keys for this application*/
  else
    converseLib.validationFailed(001); /* Invalid PF Key*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  if (converseVar.eventKey is pf7)
    if (GD0YM001.DAW-CURR-PAGE != DAWREC.DAW-CURR-PAGE)
      converseLib.validationFailed(002); /* Can't change page number and use*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* PF7 at the same time*/
    end
    if (GD0YM001.DAW-LAST-PAGE <= 1)
      converseLib.validationFailed(001); /* Invalid PF Key*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
    end
    if (GD0YM001.DAW-CURR-PAGE <= 1)
      converseLib.validationFailed(003); /* Can't use PF7 - already at the*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* first page*/
    end
  end

  if (converseVar.eventKey is pf8)
    if (GD0YM001.DAW-CURR-PAGE != DAWREC.DAW-CURR-PAGE)
      converseLib.validationFailed(004); /* Can't change page number and use*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* PF8 at the same time*/
    end
    if (GD0YM001.DAW-LAST-PAGE <= 1)
      converseLib.validationFailed(001); /* Invalid PF Key*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
    end
    if (GD0YM001.DAW-CURR-PAGE >= DAWREC.DAW-MAX-PAGE)
      converseLib.validationFailed(005); /* Can't use PF8 - already at the*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* last page*/
    end
  end

  if (DAWREC.DAW-EDIT-ERROR-FL == "N")
    GD0YP55-HNDL-PFK-1();
  end

  /* **************/
  /* ****************** END GD0YP50 *******************************/
  /* **************/
end // end GD0YP50-PF-KEYS-1

// HANDLE MAP 1 PF KEYS
Function GD0YP55-HNDL-PFK-1()
  /* ************************************************************/
  /* MAP 001 Process PF Keys - do whatever is needed to handle the*/
  /* pf key and set the exit flag to 'y' when the pfkey does not*/
  /* require any furthur edits. If the pf key does require editting*/
  /* of anything entered on the map (like fastpath option) the exit*/
  /* flag will be set to 'Y' in the map edit process when there are*/
  /* no errors and there is something in the DA-EXIT-OPTION*/
  /* ************************************************************/

  if (converseVar.eventKey is pf3)
    DAWREC.DAW-EXIT-OPTION = "RETN";
    DAWREC.DAW-TERM-APPL-FL = "Y";
  end

  if (converseVar.eventKey is pf4)
    DAWREC.DAW-EXIT-OPTION = "MENU";
    DAWREC.DAW-TERM-APPL-FL = "Y";
  end

  if (converseVar.eventKey is pf7) /* subtract 1 from the map page number*/
    GD0YM001.DAW-CURR-PAGE = GD0YM001.DAW-CURR-PAGE - 1;
  end

  if (converseVar.eventKey is pf8) /* add 1 to the map page number*/
    GD0YM001.DAW-CURR-PAGE = GD0YM001.DAW-CURR-PAGE + 1;
  end

  if (converseVar.eventKey is pf9) /* print the tables*/
    set XSDAW01 empty;
    XSDAW01.XXX-TBL-PFX = DAWREC.XXX-TBL-PFX;
    XSDAS-PRINT-TABLE();
    GD0YM001.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
  end

  if (converseVar.eventKey is pf10) /* set in process status to pending*/
    DAWREC.DAW-SET-PENDING-ALL-FL = "Y";
  else
    DAWREC.DAW-SET-PENDING-ALL-FL = "N";
  end

  if (converseVar.eventKey is pf11) /* add a new code*/
    DAWREC.DAW-ADD-ROW-FL = "Y";
  else
    DAWREC.DAW-ADD-ROW-FL = "N";
  end

  /* **************/
  /* ****************** END GD0YP55 *****************************/
  /* **************/
end // end GD0YP55-HNDL-PFK-1

// EDIT ALL MAP FIELDS ON MAP 1
Function GD0YP60-EDIT-MAP-1()
  /* ***********************************************************/
  /* Edit MAP 001 fields in reverse order*/
  /* ***********************************************************/

  DAWREC.DAW-SELECT-ROW-FL = "N";
  DAWREC.DAW-DELETE-ROW-FL = "N";
  DAWREC.DAW-COPY-ROW-FL = "N";

  GD0YP61-EDIT-PAGE(); /* edit current page number*/

  if (DAWREC.DAW-EDIT-ERROR-FL == "Y" /* any errors*/
   && DAWREC.DAW-EXIT-OPTION != " ")  /* don't allow exit from appl*/
    DAWREC.DAW-TERM-APPL-FL = "N";
    DAWREC.DAW-EXIT-OPTION = " ";
  end

  /* **************/
  /* ****************** END GD0YP60 ****************************/
  /* **************/
end // end GD0YP60-EDIT-MAP-1

// EDIT MAP PAGE NUMBER
Function GD0YP61-EDIT-PAGE()
  /* ***********************************************************/
  /* Edit map current page number*/
  /* ***********************************************************/

  if (GD0YM001.DAW-CURR-PAGE == DAWREC.DAW-CURR-PAGE)
    return;
  end

  /* if select codes entered and page number changed*/
  /* then reset page number*/

  if (DAWREC.DAW-ADD-ROW-FL == "Y"
   || DAWREC.DAW-DELETE-ROW-FL == "Y"
   || DAWREC.DAW-SELECT-ROW-FL == "Y"
   || DAWREC.DAW-COPY-ROW-FL == "Y")
    set GD0YM001.DAW-CURR-PAGE bold;
    GD0YM001.VAGen_EZEMSG = "CANNOT MAINTAIN OR ADD A ROW AND CHANGE PAGE AT THE SAME TIME";
    GD0YM001.DAW-CURR-PAGE = DAWREC.DAW-CURR-PAGE;
    GD0YM001.DAW-INFO-MESSAGE = "PAGE NUMBER HAS BEEN RESET - HIT ENTER OR PF11 TO CONTINUE";
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  if (GD0YM001.DAW-CURR-PAGE > 1)
    if (GD0YM001.DAW-CURR-PAGE > GD0YM001.DAW-LAST-PAGE)
      set GD0YM001.DAW-CURR-PAGE cursor, bold;
      converseLib.validationFailed(006); /* page number entered is greater than*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* last page available*/
    end
  end

  if (GD0YM001.DAW-CURR-PAGE == 0)
    set GD0YM001.DAW-CURR-PAGE cursor, bold;
    converseLib.validationFailed(007); /* page number entered is zero - page*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* does not exist*/
  end

  /* **************/
  /* ****************** END GD0YP62 ****************************/
  /* **************/
end // end GD0YP61-EDIT-PAGE

// DO PROCESSING FOR THE MAP 1
Function GD0YP70-PROC-MAP-1()
  /* ****************************************************************/
  /* Do any processing for MAP 001*/
  /* ****************************************************************/

  /* *****************************************************************/
  /* Display new page*/
  /* *****************************************************************/

  if (DAWREC.DAW-CURR-PAGE != GD0YM001.DAW-CURR-PAGE)
    GD0YS-TS-READ-PAGE();
    GD0YP71-TSQ-TO-MAP();
    GD0YP25-SET-ATTR-1();
  end

  /* *****************************************************************/
  /* Any maintenance selections are now completed so rebuild*/
  /* temp storage*/
  /* *****************************************************************/

  if (DAWREC.DAW-TERM-APPL-FL == "N") /* not ready to exit this application*/
    if ((GD0YM001.TBL-SRCH != GD0YW01.TBL-SRCH
     || GD0YM001.SYS-SRCH != GD0YW01.SYS-SRCH
     || GD0YM001.SID-SRCH != GD0YW01.SID-SRCH
     || GD0YM001.SCD-SRCH != GD0YW01.SCD-SRCH
     || GD0YM001.SVL-SRCH != GD0YW01.SVL-SRCH))
      GD0YW01.TBL-SRCH = GD0YM001.TBL-SRCH;
      GD0YW01.SYS-SRCH = GD0YM001.SYS-SRCH;
      GD0YW01.SID-SRCH = GD0YM001.SID-SRCH;
      GD0YW01.SCD-SRCH = GD0YM001.SCD-SRCH;
      GD0YW01.SVL-SRCH = GD0YM001.SVL-SRCH;
      GD0YM001.DAW-CURR-PAGE = 1;
      GD0YS-TS-PURGE-FIL(); /* purge temp storage*/
      GD0YP20-BUILD-MAP1(); /* and then rebuilt it*/
    end
  end

  /* **************/
  /* ***************** END GD0YP70 **********************************/
  /* **************/
end // end GD0YP70-PROC-MAP-1

// MOVE TEMP STORAGE PAGE TO MAP
Function GD0YP71-TSQ-TO-MAP()
  /* ************************************************************/
  /* Move temp storage page to map*/
  /* ************************************************************/

  sysVar.arrayIndex = 1;

  while (sysVar.arrayIndex <= 14)
    GD0YM001.YSMTBLPF[sysVar.arrayIndex] = GD0YW02.YSMTBLPF[sysVar.arrayIndex];
    GD0YM001.YSMSYSPF[sysVar.arrayIndex] = GD0YW02.YSMSYSPF[sysVar.arrayIndex];
    GD0YM001.YSMSUMID[sysVar.arrayIndex] = GD0YW02.YSMSUMID[sysVar.arrayIndex];
    GD0YM001.YSMSUMCD[sysVar.arrayIndex] = GD0YW02.YSMSUMCD[sysVar.arrayIndex];
    GD0YM001.YSMSRCVL[sysVar.arrayIndex] = GD0YW02.YSMSRCVL[sysVar.arrayIndex];
    GD0YM001.YSMSMDSC[sysVar.arrayIndex] = GD0YW02.YSMSMDSC[sysVar.arrayIndex];
    GD0YM001.XXXSTAT[sysVar.arrayIndex] = GD0YW02.XXXSTAT[sysVar.arrayIndex];
    GD0YM001.ZZZSDT[sysVar.arrayIndex] = GD0YW02.ZZZSDT[sysVar.arrayIndex];
    GD0YM001.ZZZCHGDT[sysVar.arrayIndex] = GD0YW02.ZZZCHGDT[sysVar.arrayIndex];

    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

  /* **************/
  /* ****************** END GD0YP71 *****************************/
  /* **************/
end // end GD0YP71-TSQ-TO-MAP

// EXIT FROM THE APPLICATION
Function GD0YP99-TERMINATE()
  /* ************************************************************/
  /* Transfer out of the application*/
  /* ************************************************************/

  COMMAREA.CAUSERA = DAWREC.DAWGROUP;

  GD0YS-TS-PURGE-FIL(); /* purge temp storage*/

  if (DAWREC.DAW-RETURN-TO-DA01-FL == "Y") /* return to DA01 application*/
    COMMAREA.CATOAP = "DA01";
    XSEXIT();
  end

  if (DAW-EXIT-OPTION == "RETN") /* return to prior application*/
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    XSEXIT();
  end

  if (DAW-EXIT-OPTION == "MENU") /* return to main menu*/
    XSPF4();
  end

  if (DAW-EXIT-OPTION == "HELP") /* check for system help*/
    XSPF1(); /* help facility*/
  end

  /* Still here - then XSEXIT didn't allow the transfer so restart*/
  /* the current application and display the error message*/

  if (COMMAREA.CASECRC != 0) /* no message from xsexit*/
    XSDAS-XSEXIT-CAMSG();
  end

  COMMAREA.CAFROMAP = "GD0Y";
  sysVar.transferName = "GD0Y";
  transfer to program sysVar.transferName passing COMMAREA;

  /* **************/
  /* ****************** END GD0YP99 *****************************/
  /* **************/
end // end GD0YP99-TERMINATE

// ADD TEMP STORAGE PAGE(RECORD)
Function GD0YS-TS-ADD-PAGE()
  /* ************************************************************/
  /* Write temporary storage*/
  /* ************************************************************/

  TA5REC.TA5APPID = "GD0Y"; /* appl identification*/
  TA5REC.TA5FNCCD = "A"; /* function code*/
  GD0YW02.DAW-TEMP-STORAGE-LENGTH = 1096;

  call "TA0050" (GD0YW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0)
    DAWREC.DAW-MAX-PAGE = TA5REC.TA5TSQIX;
    set GD0YW02 empty; /* Reset for next write*/
    DAWREC.DAW-ROW-NBR = 0;
  else
    TA1REC.TA1LOCAT[1] = "ADD TSQ";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = DAWREC.XXX-TBL-PFX; /* first row*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    GD0YM001.DAW-INFO-MESSAGE = "TEMPORARY STORAGE FAILURE - CONTACT HELP DESK";
  end

  /* *************************/
  /* ****************** END GD0YS-ADD-TSQ-PAGE ******************/
  /* *************************/
end // end GD0YS-TS-ADD-PAGE

// PURGE TEMP STORAGE FILE
Function GD0YS-TS-PURGE-FIL()
  /* ************************************************************/
  /* Purge temporary storage*/
  /* ************************************************************/

  TA5REC.TA5APPID = "GD0Y"; /* appl identification*/
  TA5REC.TA5FNCCD = "P"; /* function code*/

  call "TA0050" (GD0YW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  /* **********************/
  /* ****************** END GD0YS-PURGE-TSQ *********************/
  /* **********************/
end // end GD0YS-TS-PURGE-FIL

// READ TEMP STORAGE PAGE
Function GD0YS-TS-READ-PAGE()
  /* ************************************************************/
  /* Read temporary storage*/
  /* ************************************************************/

  DAWREC.DAW-CURR-PAGE = GD0YM001.DAW-CURR-PAGE;

  set GD0YW02 empty;

  TA5REC.TA5APPID = "GD0Y"; /* appl identification*/
  TA5REC.TA5FNCCD = "R"; /* function code*/
  TA5REC.TA5TSQIX = DAWREC.DAW-CURR-PAGE; /* current page*/
  GD0YW02.DAW-TEMP-STORAGE-LENGTH = 1096;

  call "TA0050" (GD0YW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0)
     /* NEXT SENTENCE*/
  else
    TA1REC.TA1LOCAT[1] = "READ TSQ";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = DAWREC.XXX-TBL-PFX; /* first row*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    GD0YM001.DAW-INFO-MESSAGE = "TEMPORARY STORAGE FAILURE - CONTACT HELP DESK";
  end

  /* *************************/
  /* ****************** END GD0YS-READ-TSQ-PAGE ******************/
  /* *************************/
end // end GD0YS-TS-READ-PAGE

//*** RECORD=GD0YW01 ****
// /*********************************************************
// /*  working storage record used to hold the concatinated
// /*  table key and the table record.
// /*********************************************************
// /* DATE      USERID     DESC. OF CHANGE
// /* --------  ------     ----------------------------------
// /* 05/23/01  SKUMA3     CREATED RECORD
// /*
// /*********************************************************
// ***********************
Record GD0YW01 type basicRecord
  10 YSMGROUP YSMGROUP ; 
    15 YSMTBLPF YSMTBLPF ; 
    15 YSMSYSPF YSMSYSPF ; 
    15 YSMSUMID YSMSUMID ; 
    15 YSMSUMCD YSMSUMCD ; 
    15 YSMSRCVL YSMSRCVL ; 
    15 YSMSMDSC YSMSMDSC ; 
    15 XXXSTAT XXXSTAT ; 
    15 ZZZSDT ZZZSDT ; 
    15 ZZZCHGDT ZZZCHGDT ; 
    15 ZZZCHGTM ZZZCHGTM ; 
    15 ZZZCHGCT ZZZCHGCT ; 
  10 DA-CCAT-KEY-TXT DA-CCAT-KEY-TXT ; 
    15 GD0YW-KEY-TBLPF GD0YW-KEY-TBLPF ; 
    15 GD0YW-KEY-SYSPF GD0YW-KEY-SYSPF ; 
    15 GD0YW-KEY-SUMID GD0YW-KEY-SUMID ; 
    15 GD0YW-KEY-SUMCD GD0YW-KEY-SUMCD ; 
    15 GD0YW-KEY-SRCVL GD0YW-KEY-SRCVL ; 
    15 GD0YW-FILLER char(5) ; // AND REDUCE SIZE OF FILLER
  10 DA-PLOG-TXT1 DA-PLOG-TXT1 ; 
  10 DA-PLOG-TXT2 DA-PLOG-TXT2 ; 
  10 GD0YW-FND-FL GD0YW-FND-FL ; 
  10 TBL-SRCH TBL-SRCH ; 
  10 SYS-SRCH SYS-SRCH ; 
  10 SID-SRCH SID-SRCH ; 
  10 SCD-SRCH SCD-SRCH ; 
  10 SVL-SRCH SVL-SRCH ; 
end // end GD0YW01

//*** RECORD=GD0YW02 ****
// /*********************************************************
// /* Temp storage record for the application
// /*********************************************************
// /*
// /* DATE      USERID     DESC. OF CHANGE
// /* --------  ------     ----------------------------------
// /* 05/23/01  SKUMA3     CREATED RECORD
// /*
// /*********************************************************
// ***********************
Record GD0YW02 type basicRecord
  5 DA00W-TEMP-STORAGE-RECORD char(1096) ; // TEMP STORAGE RECORD FOR DA0A
    10 DAW-TEMP-STORAGE-LENGTH DAW-TEMP-STORAGE-LENGTH ; 
    10 DA00W-TEMP-STORAGE-ROW char(78) [14] ; // DA0A TSQ ROW
      15 DAW-RECORD-TYPE DAW-RECORD-TYPE ; 
      15 GD0YW-KEY GD0YW-KEY ; 
        20 YSMTBLPF YSMTBLPF ; 
        20 YSMSYSPF YSMSYSPF ; 
        20 YSMSUMID YSMSUMID ; 
        20 YSMSUMCD YSMSUMCD ; 
        20 YSMSRCVL YSMSRCVL ; 
      15 YSMSMDSC YSMSMDSC ; 
      15 XXXSTAT XXXSTAT ; 
      15 ZZZSDT ZZZSDT ; 
      15 ZZZCHGDT ZZZCHGDT ; 
      15 DAW-VDATRN01-KEY DAW-VDATRN01-KEY ; 
        20 XXX-TBL-PFX XXX-TBL-PFX ; 
        20 DA-CCAT-KEY-TXT DA-CCAT-KEY-TXT ; 
        20 ZZ-CHNG-DT ZZ-CHNG-DT ; 
end // end GD0YW02

DataItem GD0YW-FND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RECORD TYPE 'TRAN' OR 'TBL'
DataItem GD0YW-KEY char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TABLE KEY - ADD MORE IF NEEDED
DataItem GD0YW-KEY-SRCVL char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TABLE KEY - ADD MORE IF NEEDED
DataItem GD0YW-KEY-SUMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TABLE KEY - ADD MORE IF NEEDED
DataItem GD0YW-KEY-SUMID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// TABLE KEY - ADD MORE IF NEEDED
DataItem GD0YW-KEY-SYSPF char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TABLE KEY - ADD MORE IF NEEDED
DataItem GD0YW-KEY-TBLPF char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

