package fl07;

import corpcom2.XPCREC;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFL001;
import corpcom3.XPTA0P;
import corpcom4.XSFLS01;
import corpcom4.XSPG202;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXPGMNB;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpcom7.ZZHHMMSS;
import corpx1.XCTCD;
import corpx1.XDMCD;
import corpx1.XFRCD;
import corpx1.XGAABRV;
import corpx1.XGATBL;
import corpx1.XSUTBL;
import corpx2.XPGCD;
import corpx2.XQACD;
import corpx2.XSUABRV;
import corpx2.XUMCD;
import corpx2.XXXUSRID;
import corpz3.ZZZSDT;
import fb.common.FB8BUYDT;
import fb.common.FBAMDNBR;
import fb.common.FBDBTCD;
import fb.common.FBDMDTYP;
import fb.common.FBDQTB;
import ff.common.*;
import fl.common.FLWREC;
import fy.common.FTWR-EQMT-FL;
import fy.common.FY1FCTYC;
import pc.common.PC2CUXID;
import pc.common.PC2INSEG;
import pg.common.PG2REC;
import pg.common.PG4REC;
import pg.common.PGAREC;
import sy.common.SY1SSTNM;
import sy.common.SY1STNBR;
import sy.common.SY2CLRAB;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TA6REC;
import ta.common.TAEREC;
import ww.common.WEU0100;
//*** PROGRAM=FL07 ****
// This application allows a user to inquire and submit a
// report that shows an audit trail of net quantity changes
// to the factory load model.
// 
// The screen is displayed for the user to enter the key to the
// table rows for which data is to be displayed.
// 
// The entered data is verified to be complete and correct.
// The requested table row is selected and the data is
// formatted and displayed to the user.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW       1/07/91  pmainw  New application.
// fl-214    4/18/91  pmainw  Get style short name from
//                            dprodg.vsyprd01.
// 000000    5/29/91  pmainw  Handle sql 100 in process fl07134
// FL293    11/27/91  jmclau  Add Gender age and Silhouette to
//                            the changes to current prelim
//                            report.
// 000000    6/12/92  pmainw  change fl07w01.
// fl-339    6/22/92  jmclau  add reason codes to the map and
//                            batch report.
// FB9994   08/10/93  LDELUH  Chg loadlibs for cob2 & chg
//                            testrms to testenc.
// FL2015   08/17/98  AMAND1  Footwear and Equipment separation
//                            in FL07 screen.
// #583     12/02/99  SKATHI  Throw a Warning when the total
//                            excluded styles nears 400.
// *********************
Program FL07 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FL07W00 FL07W00; // record
  FL07W01 FL07W01; // record
  FL07W02 FL07W02; // record
  FL07W03 FL07W03; // record
  FLWREC FLWREC; // record
  PG2REC PG2REC; // record
  PG4REC PG4REC; // record
  PGAREC PGAREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  WEU0100 WEU0100; // record
  XPCREC XPCREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FL07T01; // table
  use FL07T02; // table
  use XGATBL; // table
  use XSUTBL; // table
  use FL07M.FL07M010, // form
  		FL07M.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFL001: XPFL001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set FL07M010 initial; /* M001 input/output*/
    set FL07W00 empty; /* Working storage*/
    set FL07W01 empty; /* M001 display storage*/
    set FL07W02 empty; /* temp storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA2REC empty; /* Date edit*/
    set TA3REC empty; /* Environment record*/
    set TA6REC empty; /* Jcl image record*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    FL07W00.FL07-EXCL-CTR = 0; /* Exclusion counter*/
    FL07W00.FL07-PF9-ADD = "Y"; /* Add Flag for PF9*/
    FL07W00.FL07WSWF = "N"; /* Format the map switch*/
    FL07W00.FL07WSWR = "N"; /* Request for data switch*/
    FL07W00.FL07-MAX-PAGE = 0; /* First page*/
    FL07W00.XXXTSPAG = 1; /* First page*/
    FL07W00.XXXTSLEN = 702; /* page length*/

    XX0XW01.XX0XWZDT = VGVar.currentShortGregorianDate; /* Current date*/
    FL07M010.FL07MTYY = XX0XW01.XX0XWZYY; /* Default*/
    FL07M010.FL07MTMM = XX0XW01.XX0XWZMM; /* Default*/
    FL07M010.FL07MTDD = XX0XW01.XX0XWZDD; /* Default*/
    FL07M010.FL07MFYY = XX0XW01.XX0XWZYY; /* Default*/
    FL07M010.FL07MFMM = XX0XW01.XX0XWZMM; /* Default*/
    FL07M010.FL07MFDD = XX0XW01.XX0XWZDD; /* Default*/
    FL07M010.FL07FW-R-EQ = "F"; /* Default*/
    FL07W00.FL07WFW-R-EQ = FL07M010.FL07FW-R-EQ;
    if (FLWREC.FBAMDNBR > 0)
      FL07M010.FBAMDNBR = FLWREC.FBAMDNBR;
    end





     /* ------------------------------------------------------------*/
     /* Default gpc to footwear if blank.*/
     /* ------------------------------------------------------------*/
    if (COMMAREA.XGPCD == "  ")
      COMMAREA.XGPCD = "02";
    end




     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto FL07001; /* Converse the main process*/


    FL07001: FL07001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto FL07001; /* Converse the main process*/


  end // end main
end // end FL07

// Inquire/maintain a table row
Function FL07001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FL07100(); /* Obtain the data to display*/

  FL07200(); /* Format and display the map*/

  FL07300(); /* Check attention identifier*/

  FL07400(); /* Reset fields to normal intensity*/

  FL07500(); /* Verify the entered data*/

  FL07600(); /* Process valid input request*/


end // end FL07001

// Obtain the data to display
Function FL07100()
   /* --------------------- FL07100 ------------------------------*/
   /* ------------------------------------------------------------*/
   /* If data entered was neither footwear nor Equipment 'F' or 'E'*/
   /* display error and stop processing.*/
   /* ------------------------------------------------------------*/
  if ((FL07M010.FL07FW-R-EQ != "E") /* If not Ftwr /Equip.*/
   && (FL07M010.FL07FW-R-EQ != "F"))

    FL07W00.FL07WFW-R-EQ = FL07M010.FL07FW-R-EQ;

    FL07W00.FL07WSWR = "N"; /* DISPlay error message*/
    converseLib.validationFailed(0010); /* Display error message*/
  end

   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (FL07W00.FL07WSWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Clear the map display storage area and save the key fields.*/
   /* ------------------------------------------------------------*/

  FL07110(); /* purge temporary storage*/

  FL07120(); /* Declare cursor for*/
                                  /* VFLQTB01 / VFCTY001 join*/

   /* ------------------------------------------------------------*/
   /* Save the data from the table row in display storage.*/
   /* ------------------------------------------------------------*/

  FL07W00.VFLAUD01-EOC = "N"; /* Initialize EOC flag*/
  FL07W00.FL07WIX1 = 1; /* Initialize index*/
  FL07W00.FL07WDFS = "N"; /* Data found switch*/

   /* ------------------------------------------------------------*/
   /* VFLAUD01-EOC is a flag to signify end of cursor of FL1210*/
   /* ------------------------------------------------------------*/

  while (FL07W00.VFLAUD01-EOC == "N" /* Normal return code*/
   && sysVar.errorCode == "00000000") /* Call successful*/

    FL07130(); /* Save in display storage*/

  end


  if (FL07W00.VFLAUD01-EOC == "Y") /* Normal End of cursor*/
    FL07140(); /* Close cursor*/
  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  FL07W00.FL07WSWR = "N"; /* Request for data switch*/


  if (FL07W00.FL07WDFS == "N") /* Data found switch*/
    FL07650(); /* format blank screen*/
  end
end // end FL07100

// Purge any temporary storage
Function FL07110()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set FL07W02 empty; /* M001 display storage*/
  set TA5REC empty; /* temp storage*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FL07W00.TA5TSQIX = 0; /* Highest page number*/
  FL07W02.XXXTSLEN = FL07W00.XXXTSLEN; /* Temporary storage length*/

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (FL07W02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  FLWREC.XXXMODID = "110"; /* Module identification*/
  converseLib.validationFailed(1); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FLWREC.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FL07110

// Declare vflqtb01/vfcty001 crs
Function FL07120()
  set FL07W01 empty; /* fl1210 record*/

  XX0XW01.XX0XWMM = FL07M010.FL07MFMM; /* from sdt month*/
  XX0XW01.XX0XWDD = FL07M010.FL07MFDD; /* from sdt day*/
  XX0XW01.XX0XWYY = FL07M010.FL07MFYY; /* from sdt year*/
  if (FL07M010.FL07MFYY > 57)
    XX0XW01.XX0XW19 = 19; /* from century*/
  else
    XX0XW01.XX0XW19 = 20; /* from century*/
  end
  FL07W01.FL07WFRM = XX0XW01.XX0XWDAT; /* date (yyyymmdd)*/
  FL07W00.FL07WSFR = XX0XW01.XX0XWDAT; /* save from date*/


  XX0XW01.XX0XWMM = FL07M010.FL07MTMM; /* to sdt month*/
  XX0XW01.XX0XWDD = FL07M010.FL07MTDD; /* to sdt day*/
  XX0XW01.XX0XWYY = FL07M010.FL07MTYY; /* to sdt year*/
  if (FL07M010.FL07MTYY > 57)
    XX0XW01.XX0XW19 = 19; /* from century*/
  else
    XX0XW01.XX0XW19 = 20; /* from century*/
  end
  FL07W01.FL07WTO = XX0XW01.XX0XWDAT; /* date (yyyymmdd)*/
  FL07W00.FL07WSTO = XX0XW01.XX0XWDAT; /* save to date*/

  FL07W01.FBAMDNBR = FL07M010.FBAMDNBR; /* model number*/
  FL07W00.FBAMDNBR = FL07M010.FBAMDNBR; /* save model number*/
  FL07W00.FL07WFW-R-EQ = FL07M010.FL07FW-R-EQ;

   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/


  try
    call "FL1210" ("S1", SQLCA, FL07W01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end


  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FLWREC.XXXMODID = "120"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(1); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FL1210 DECLARE      ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FLWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFLAUD01"; /* Table view name*/
  TA1REC.TA1TBLKE = FL07W01.FL07WGR2; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  return; /* Exit to display map*/


end // end FL07120

// save the data to display
Function FL07130()

   /* ------------------------------------------------------------*/
   /* Save the data from the table row in display storage.*/
   /* ------------------------------------------------------------*/

  FL07132(); /* Fetch next*/


  if (FL07W00.VFLAUD01-EOC == "Y") /* End of cursor*/
    if (FL07W00.FL07WIX1 > 1) /* rows were read*/
      FL07136(); /* Write page to temp storage*/
    else /**/
      converseLib.validationFailed(18); /* No data to display*/
    end /**/

  else
    if (FL07W00.VFLAUD01-EOC == "N")


      /* ------------------------------------------------------------*/
      /* Select footwear data if Ftwr/Equip flag is 'F' else Equipment*/
      /* ------------------------------------------------------------*/

      if ((FL07W00.FL07WFW-R-EQ == "F" && FL07W00.FTWR-EQMT-FL == "N")
       || (FL07W00.FL07WFW-R-EQ == "E" && FL07W00.FTWR-EQMT-FL == "Y"))

        FL07W00.FL07WDFS = "Y"; /* Data found switch*/
        FL07W02.SY1STNBR[FL07WIX1] = FL07W01.SY1STNBR; /* Style #*/
        FL07W02.SY2CLRID[FL07WIX1] = FL07W01.SY2CLRID; /* Color id*/
        FL07W02.XDMCD[FL07WIX1] = FL07W01.XDMCD; /* DIM*/
        FL07W02.FBDQTB[FL07WIX1] = FL07W01.FBDQTB; /* Fcty QTB*/
        FL07W02.FY1FCTYC[FL07WIX1] = FL07W01.FY1FCTYC; /* Factory ID*/
        FL07W02.XFRCD[FL07WIX1] = FL07W01.XFRCD; /* Factory Rsn cd*/
        FL07W02.XCTCD[FL07WIX1] = FL07W01.XCTCD; /* Mfg Cntry Cd*/

        FL07134(); /* Get style/color descriptions*/

        if (FL07W00.FL07WIX1 == 13) /* The temp storage page is full*/
          FL07136(); /* Write page to temp storage*/
          FL07W00.FL07WIX1 = 0; /* Iinitialize index*/
        end
        FL07W00.FL07WIX1 = FL07W00.FL07WIX1 + 1; /* Increment index*/
      end
    end
  end


   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  FL07W00.FL07WSWR = "N"; /* Request for data switch*/


end // end FL07130

// fetch next
Function FL07132()
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/

   /* This IO-MOD is non-standard. Although there are several*/
   /* fields in the FL07W01 record,  the only fields retrieved*/
   /* in the fetch command are:*/

          /* FL07W01.SY1STNBR    Style number*/
          /* FL07W01.SY2CLRID    Color id*/
          /* FL07W01.XDMCD       Dimension code*/
          /* FL07W01.FBDQTB      Fcty qty to buy (Summarized)*/
          /* FL07W01.FY1FCTYC    Factory code*/
          /* FL07W01.XFRCD       Factory reason code*/
          /* FL07W01.XCTCD       Mfg Country code*/

   /* ------------------------------------------------------------*/

  try
    call "FL1210" ("N1", SQLCA, FL07W01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      VFLAUD01-EOC = "Y"; /* End of cursor Flag*/
      return;
    end
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      /* ------------------------------------------------------------*/
      /* Call to routine that checks if the data fetched is Footwear*/
      /* or Equipment product.*/
      /* ------------------------------------------------------------*/

      FL07133(); /* Check if Ftwr/Equip.*/
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FLWREC.XXXMODID = "132"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(1); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FL1210  FETCH NEXT ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FLWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFLAUD01"; /* Table view name*/
  TA1REC.TA1TBLKE = FL07W01.FL07WGR2; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  return; /* Exit to display map*/


end // end FL07132

// Check Ftwr/Equip product
Function FL07133()
   /* ---------------------------- fl07133 ---------------------------*/
   /* ROUTINE to check if the data is Footwear or Equipment*/
   /* product - Call to IO-MOD EU0100.*/
   /* In this process EU0100 is called twice.  Once to check if the*/
   /* fetched product is Equipment product in the Product Table.  If*/
   /* not, its check for Equipment product in the Development Table.*/
   /* If also not available there it is designated a Footwear Product.*/
   /* ----------------------------------------------------------------*/

  set WEU0100 empty; /* initialize the passing record*/
  set SQLCA empty; /* initialize sqlca record*/

  WEU0100.WEU0100-EQUIP-PROD-FL = "N";
  FL07W00.FTWR-EQMT-FL = "N"; /* Ftwr r Equipment Ind flg*/
  WEU0100.WEU0100-CALLING-APPL = "FL07";
  WEU0100.SQLCAREC = SQLCA.SQLCAREC;

  WEU0100.XGPCD = "02"; /* For Footwear/Equip only.*/
  WEU0100.SY1STNBR = FL07W01.SY1STNBR;
  WEU0100.SY2CLRID = FL07W01.SY2CLRID;
  WEU0100.XDMCD = FL07W01.XDMCD;
  WEU0100.WEU0100-TASK = "S "; /* select unique*/
  WEU0100.WEU0100-CALLER-LOCATION = "FL07133";

  try
    call "EU0100" (WEU0100) {isNoRefresh = yes, isExternal = yes};
  end /* Call EU0100 Rtn to check*/
                                  /* Ftwr or Euip*/
  SQLCA.SQLCAREC = WEU0100.SQLCAREC;

  TA1REC.TA1MAP = WEU0100.WEU0100-RETURN-CODE; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  if (WEU0100.WEU0100-RETURN-CODE != 0) /* call successful*/
    if (WEU0100.WEU0100-RETURN-CODE == 8) /* resource not available*/
      TA1REC.TA1FUNC = "POST"; /* termination function*/
    else
      TA1REC.TA1FUNC = "RETN"; /* termination function*/
    end

    TA1REC.TA1TYPE = "DB2"; /* type of error*/
    TA1REC.TA1LOC = "FL07133"; /* program location*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
    TA1REC.TA1PGMNO = "EU0100"; /* called program*/
    TA1REC.TA1DBASE = "DEQUIP"; /* database name*/
    TA1REC.TA1TBLVU = "VEQPRD01"; /* table view name*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error handler*/
  end

  if (WEU0100.WEU0100-RETURN-CODE == 0) /* call successful*/
    if (WEU0100.WEU0100-EQUIP-PROD-FL == "N") /* Not a equipment record*/
      set WEU0100 empty;
      set SQLCA empty;
      WEU0100.WEU0100-CALLING-APPL = "FL07";
      WEU0100.SQLCAREC = SQLCA.SQLCAREC;

      WEU0100.XGPCD = "02"; /* For Footwear/Equip only.*/
      WEU0100.SY1STNBR = FL07W01.SY1STNBR;
      WEU0100.SY2CLRID = FL07W01.SY2CLRID;
      WEU0100.XDMCD = FL07W01.XDMCD;

      WEU0100.WEU0100-TASK = "SD"; /* Check development Equip.*/
      WEU0100.WEU0100-CALLER-LOCATION = "FL07133";

      try
        call "EU0100" (WEU0100) {isNoRefresh = yes, isExternal = yes};
      end /* select dev. equipment*/

      SQLCA.SQLCAREC = WEU0100.SQLCAREC;

      TA1REC.TA1MAP = WEU0100.WEU0100-RETURN-CODE;
      TAEREC.SQLCAREC = SQLCA.SQLCAREC;

      if (WEU0100.WEU0100-RETURN-CODE == 0) /* call successful*/
        if (WEU0100.WEU0100-EQUIP-PROD-FL == "Y") /* equipment record*/
          FL07W00.FTWR-EQMT-FL = "Y"; /* Set flag to Equip*/
        end
      else
        if (WEU0100.WEU0100-RETURN-CODE == 8) /* resource not available*/
          TA1REC.TA1FUNC = "POST"; /* termination function*/
        else
          TA1REC.TA1FUNC = "RETN"; /* termination function*/
        end

        TA1REC.TA1TYPE = "DB2"; /* type of error*/
        TA1REC.TA1LOC = "FL07133"; /* program location*/
        TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
        TA1REC.TA1PGMNO = "EU0100"; /* called program*/
        TA1REC.TA1DBASE = "DEQUIP"; /* database name*/
        TA1REC.TA1TBLVU = "VEQPRD01"; /* table view name*/
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error handler*/
      end

    else
      FL07W00.FTWR-EQMT-FL = "Y"; /* Set flag to Equip*/
    end
  end

end // end FL07133

// GET product/color description
Function FL07134()

   /* ------------------------------------------------------------*/
   /* Clear row storage areas, format the key*/
   /* ------------------------------------------------------------*/


  set PG2REC empty; /* Clear row storage area*/

  PG2REC.XGPCD = COMMAREA.XGPCD;
  PG2REC.SY1STNBR = FL07W01.SY1STNBR; /* Style*/
  PG2REC.SY2CLRID = FL07W01.SY2CLRID; /* Color*/
  PG2REC.XDMCD = FL07W01.XDMCD; /* Dimension*/


  XSPG202(); /* Get style and color descriptions*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/
    FL07W02.SY2CLRAB[FL07WIX1] = PG2REC.SY2CLRAB;

    if (PG2REC.XGACD in XGATBL.XGACD) /* Get GNDR/AGE abbrev*/
      FL07W00.XGAABRV = XGATBL.XGAABRV[sysVar.arrayIndex];
      FL07W02.FL07W-XGAA[FL07WIX1] = FL07W00.FL07W-XGAA;
                                                             /* SHORT ABREV*/
    else
      FL07W02.FL07W-XGAA[FL07WIX1] = "  ";
    end

    if (PG2REC.XSUCD in XSUTBL.XSUCD) /* Get Silh abbrev*/
      FL07W00.XSUABRV = XSUTBL.XSUABRV[sysVar.arrayIndex];
      FL07W02.FL07W-XSUA[FL07WIX1] = FL07W00.FL07W-XSUA;
                                                             /* SHORT ABREV*/
    else
      FL07W02.FL07W-XSUA[FL07WIX1] = " ";
    end

    FL07137(); /* Get style short name*/
  else
    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == 100)    /* Not found*/
      FL07135(); /* Get Gndr age/Silh abrev*/
      FL07137(); /* Get style short name*/
      FL07W02.SY2CLRAB[FL07WIX1] = "           ";
    else
      FL07W00.FL07WSWF = "N"; /* do not format data*/
    end
  end
end // end FL07134

// Get Gndr age and silh abrev
Function FL07135()
   /* -----------------------------------------------------------*/
    /* GET STYLE INFORMAION FROM DPRODG.VSYDVL01*/
   /* -----------------------------------------------------------*/

  set PG4REC empty;

  PG4REC.PG4STNBR = FL07W02.SY1STNBR[FL07WIX1];

  TA1REC.TA1PGMNM = "XSPG201";

  try
    call "IO4390" ("S ", SQLCA, PG4REC) {isNoRefresh = yes, isExternal = yes};
  end


  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

     /* NEXT SENTENCE               ; Next sentence*/

  else

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == 100)    /* and row not found*/

       /* NEXT SENTENCE               ; Next sentence*/

    else

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1LOC = "FL07135 GET GNDR AGE AND SILH ABRV";
      TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VSYDVL01"; /* Table view name*/
      TA1REC.TA1TBLKE = PG4REC.PG4STNBR; /* Table key*/

      if (sysVar.errorCode == "00000000" /* Call successful*/
       && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

        TA1REC.TA1FUNC = "POST"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
                                   /* Error diagnosis routine*/

   /* Data base is busy please*/
        converseLib.validationFailed(11);
      else

        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      end

      return; /* Return to previous process*/

    end

  end


  if (SQLCA.VAGen_SQLCODE == 100)
    FL07W02.FL07W-XSUA[FL07WIX1] = " ";
    FL07W02.FL07W-XGAA[FL07WIX1] = "  ";
    return;
  end

  if (SQLCA.VAGen_SQLCODE == 0)
    if (PG4REC.XGACD in XGATBL.XGACD) /* Get XGA Short abrv*/
      FL07W00.XGAABRV = XGATBL.XGAABRV[sysVar.arrayIndex];
      FL07W02.FL07W-XGAA[FL07WIX1] = FL07W00.FL07W-XGAA;
    end

    if (PG4REC.XSUCD in XSUTBL.XSUCD) /* Get XSU Short abrv*/
      FL07W00.XSUABRV = XSUTBL.XSUABRV[sysVar.arrayIndex];
      FL07W02.FL07W-XSUA[FL07WIX1] = FL07W00.FL07W-XSUA;
    end

  end




end // end FL07135

// Add page to temporary storage
Function FL07136()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/

  FL07W02.XXXTSLEN = FL07W00.XXXTSLEN; /* Temporary storage length*/
  FL07W00.TA5TSQIX = FL07W00.TA5TSQIX + 1; /* Highest page nbr*/
  TA5REC.TA5TSQIX = FL07W00.TA5TSQIX;

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (FL07W02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set FL07W02 empty; /* M001 display storage*/

    FL07W00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  FLWREC.XXXMODID = "136"; /* Module identification*/
  converseLib.validationFailed(1); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FLWREC.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FL07136

// Get style short name
Function FL07137()
   /* ---------------------------------------------------------*/
    /* SELECT A UNIQUE ROW FROM DPRODG.VSYPRD01*/
   /* ---------------------------------------------------------*/


  set PGAREC empty;

  PGAREC.XGPCD = COMMAREA.XGPCD;

  PGAREC.SY1STNBR = FL07W01.SY1STNBR;

  try
    call "IO5740" ("S ", SQLCA, PGAREC) {isNoRefresh = yes, isExternal = yes};
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    FL07W02.SY1SSTNM[FL07WIX1] = PGAREC.PGASSTNM;
    return;

  else

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == 100)    /* and row not found*/

      SQLCA.VAGen_SQLCODE = 0; /* reset sqlcode*/
      FL07W02.SY1SSTNM[FL07WIX1] = "************";
      return;

    else

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1LOC = "GET SHORT STYLE NAME            ";
      TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VSYPRD01"; /* Table view name*/
      TA1REC.TA1TBLKE = PGAREC.PGAKEY; /* Table key*/

      if (sysVar.errorCode == "00000000" /* Call successful*/
       && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

        TA1REC.TA1FUNC = "POST"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
                                   /* Error diagnosis routine*/

      else

        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      end


      return; /* Return to previous process*/

    end

  end



end // end FL07137

// close cursor
Function FL07140()



  try
    call "FL1210" ("C1", SQLCA, FL07W01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end


  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FLWREC.XXXMODID = "140"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(1); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FL1210  CLOSE SET  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FLWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFLQTB01"; /* Table view name*/
  TA1REC.TA1TBLKE = FL07W01.FL07WGR2; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  return; /* Exit to display map*/


end // end FL07140

// Format and display map
Function FL07200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FLWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  if (converseVar.validationMsgNum == 554) /* Error was found*/
    converseLib.validationFailed(0); /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If obtain data failed or no error, format data to display.*/
   /* else blank out*/
   /* ------------------------------------------------------------*/

  if (FL07W00.FL07WSWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (FL07W00.FL07WSWF == "Y" /* Map must be formatted*/
     && FL07W00.FL07WDFS == "Y") /* Data was found*/
      FL07210(); /* Format the data on the map*/
    end
  end



   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FL07M010.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FL07M010.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FL07M010.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (FLWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (FLWREC.XXXMSGNO != 0) /* Message to display*/

      if (FLWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FLWREC.XXXMSGNO);
      end /* Message number*/
    else
      FL07M010.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    FL07M010.XXXMODID = FLWREC.XXXMODID; /* Module identification*/

    set FL07M010 alarm; /* Indicate sound alarm*/

  end

  FL07M010.FL07FW-R-EQ = FL07W00.FL07WFW-R-EQ; /* Ftwr r Equip Flag*/

  converse FL07M010 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FLWREC.XXXMODID = " "; /* Module identification*/
  FLWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = FL07M010.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FL07M010.CAITEM; /* Application data*/


end // end FL07200

// Format the display data
Function FL07210()

  FL07W00.FL07WSWF = "N"; /* Format the map switch*/

  if (FL07W00.TA5TSQIX == 0) /* Highest page number written*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/


  FL07M010.XXXTSPAG = FL07W00.XXXTSPAG;
  FL07M010.TA5TSQIX = FL07W00.TA5TSQIX;
  FL07W02.XXXTSLEN = FL07W00.XXXTSLEN; /* Temporary storage length*/
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FL07W00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (FL07W02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    FL07W00.FL07WIX1 = 1; /* General index 1*/
    while (FL07W00.FL07WIX1 <= 13)

      /* ------------------------------------------------------------*/
       /* Format the map key fields from the display storage area.*/
      /* ------------------------------------------------------------*/


      FL07M010.SY1STNBR[FL07WIX1] = FL07W02.SY1STNBR[FL07WIX1];
      FL07M010.SY2CLRID[FL07WIX1] = FL07W02.SY2CLRID[FL07WIX1];
      FL07M010.XDMCD[FL07WIX1] = FL07W02.XDMCD[FL07WIX1];
      FL07M010.SY1SSTNM[FL07WIX1] = FL07W02.SY1SSTNM[FL07WIX1];
      FL07M010.SY2CLRAB[FL07WIX1] = FL07W02.SY2CLRAB[FL07WIX1];
      FL07M010.FL07W-XSUA[FL07WIX1] = FL07W02.FL07W-XSUA[FL07WIX1];
      FL07M010.FL07W-XGAA[FL07WIX1] = FL07W02.FL07W-XGAA[FL07WIX1];
      FL07M010.FY1FCTYC[FL07WIX1] = FL07W02.FY1FCTYC[FL07WIX1];
      FL07M010.XFRCD[FL07WIX1] = FL07W02.XFRCD[FL07WIX1];
      FL07M010.XCTCD[FL07WIX1] = FL07W02.XCTCD[FL07WIX1];
      FL07M010.FBDQTB[FL07WIX1] = FL07W02.FBDQTB[FL07WIX1];
      if (FL07W02.SY1STNBR[FL07WIX1] > "      ")
        FL07M010.FL07MSEL[FL07WIX1] = FL07W02.FL07WSEL[FL07WIX1];
        set FL07M010.FL07MSEL[FL07WIX1] normal;
        if (FL07W02.FBDQTB[FL07WIX1] < 0)
          FL07M010.FL07MADJ[FL07WIX1] = "CXL";
        else
          FL07M010.FL07MADJ[FL07WIX1] = "ADD";
        end
      else
        set FL07M010.FL07MSEL[FL07WIX1] protect, invisible;
        FL07M010.FL07MADJ[FL07WIX1] = "   ";
      end

      FL07W00.FL07WIX1 = FL07W00.FL07WIX1 + 1;
    end





    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  FLWREC.XXXMODID = "210"; /* Module identification*/
  converseLib.validationFailed(1); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FLWREC.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

end // end FL07210

// Check attention identifier
Function FL07300()

   /* ------------------------------------------------------------*/
   /* Pass Model Number in the commarea when transferring*/
   /* ------------------------------------------------------------*/

  if (FL07M010.FBAMDNBR > 0)
    FLWREC.FBAMDNBR = FL07M010.FBAMDNBR;
    COMMAREA.CAUSERA = FLWREC.CAUSERA;
  end



   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pakey) /* PA was pressed*/
    COMMAREA.CATOAP = "FL07 "; /* TO application*/
    XSFLS01(); /* Exit to another application*/
    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (FL07M010.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      XSFLS01(); /* Exit to another application*/

      set FL07M010.CATOAP cursor, bold; /* Highlight*/

    else

      FLWREC.XXXMODID = "300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1  /* PF1 was pressed*/
   || converseVar.eventKey is pf3  /* or PF3 was pressed*/
   || converseVar.eventKey is pf4  /* or PF4 was pressed*/
   || converseVar.eventKey is pf7  /* or PF7 was pressed*/
   || converseVar.eventKey is pf8  /* or PF8 was pressed*/
   || converseVar.eventKey is pf9  /* or PF9 was pressed*/
   || converseVar.eventKey is pf14 /* or PF14 was pressed*/
   || converseVar.eventKey is pf15 /* or PF15 was pressed*/
   || converseVar.eventKey is pf16 /* or PF16 was pressed*/
   || converseVar.eventKey is pf20 /* or PF20 was pressed*/
   || converseVar.eventKey is pf21) /* or PF21 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "FL07M001"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FL0A"; /* TO application*/
    end

    if (converseVar.eventKey is pf9)
      return;
    end



    if (converseVar.eventKey is pf8) /* scroll forward*/
      if (FL07W00.FL07-EXCL-CTR > 342) /* Reached the Exclusion limit*/
        FL07M010.XXXMODID = "300"; /* process number*/
        converseLib.validationFailed(555); /* Force to submit the job*/
        FL07W00.FL07-PF9-ADD = "N"; /* Stop from adding twice*/
        exit stack; /* display the map*/
      end
      if (FL07W00.XXXTSPAG >= FL07W00.TA5TSQIX) /* already on last page*/
        FL07M010.XXXMODID = "300"; /* process number*/
        converseLib.validationFailed(7); /* no more pages to display*/
        exit stack; /* display the map*/
      else
        return; /* display the map*/
      end
    end

    if (converseVar.eventKey is pf7) /* scroll backward*/
      if (FL07W00.XXXTSPAG == 1) /* already on first page*/
        FL07M010.XXXMODID = "300"; /* process number*/
        converseLib.validationFailed(6); /* no previous pages*/
        exit stack; /* display the map*/
      else
        return; /* display the map*/
      end
    end


    if (converseVar.eventKey is pf14)
      COMMAREA.CATOAP = "FL0D"; /* MOVES*/
    end

    if (converseVar.eventKey is pf15)
      COMMAREA.CATOAP = "FL0E"; /* SPLITS*/
    end

    if (converseVar.eventKey is pf16)
      COMMAREA.CATOAP = "FL0K"; /* QTBY*/
    end

    if (converseVar.eventKey is pf20)
      COMMAREA.CATOAP = "FL0H"; /* LIST*/
    end

    if (converseVar.eventKey is pf21)
      COMMAREA.CATOAP = "FL0I"; /* RPTS*/
    end





    XSFLS01(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    FLWREC.XXXMODID = "300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end FL07300

// Save select fields
Function FL07310()
  if (FL07M010.FL07MSEL[1] != "X"
   && FL07M010.FL07MSEL[2] != "X"
   && FL07M010.FL07MSEL[3] != "X"
   && FL07M010.FL07MSEL[4] != "X"
   && FL07M010.FL07MSEL[5] != "X"
   && FL07M010.FL07MSEL[6] != "X"
   && FL07M010.FL07MSEL[7] != "X"
   && FL07M010.FL07MSEL[8] != "X"
   && FL07M010.FL07MSEL[9] != "X"
   && FL07M010.FL07MSEL[10] != "X"
   && FL07M010.FL07MSEL[11] != "X"
   && FL07M010.FL07MSEL[12] != "X"
   && FL07M010.FL07MSEL[13] != "X")
    return;
  end

  if (FL07W00.XXXTSPAG > FL07W00.FL07-MAX-PAGE) /* Avoid PF7 after PF8*/
    FL07W00.FL07-PF8-UPDATE = "Y";
  else
    FL07W00.FL07-PF8-UPDATE = "N";
  end

  FL07W00.FL07WIX1 = 1; /* Inititalize index*/
  while (FL07W00.FL07WIX1 <= 13)
    FL07W02.FL07WSEL[FL07WIX1] = FL07M010.FL07MSEL[FL07WIX1];
    if (FL07M010.FL07MSEL[FL07WIX1] == "X") /* Count of excluded styles*/
      if (FL07W00.FL07-PF8-UPDATE == "Y")
        FL07W00.FL07-EXCL-CTR = FL07W00.FL07-EXCL-CTR + 1;
        FL07W00.FL07-MAX-PAGE = FL07W00.XXXTSPAG;
      end
    end
    FL07W00.FL07WIX1 = FL07W00.FL07WIX1 + 1; /* Increment page*/
  end

   /* ------------------------------------------------------------*/
   /* Update the current page to temporary storage.*/
   /* ------------------------------------------------------------*/

  FL07W02.XXXTSLEN = FL07W00.XXXTSLEN; /* Temporary storage length*/
  TA5REC.TA5TSQIX = FL07W00.XXXTSPAG; /* Current page number*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (FL07W02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set FL07W02 empty; /* M001 display storage*/

    if (FL07W00.FL07-EXCL-CTR > 330
     && (converseVar.eventKey is pf7
     || converseVar.eventKey is pf8))
      if (FL07W00.FL07-EXCL-CTR > 343
       && FL07W00.FL07-EXCL-CTR < 355)
        FLWREC.XXXMODID = "310"; /* Module identification*/
        converseLib.validationFailed(555); /* Force to submit job*/
        FL07W00.FL07-PF9-ADD = "N"; /* Stop from adding twice*/
        exit stack; /* Return to the map*/
      else
        FLWREC.XXXMODID = "310"; /* Module identification*/
        converseLib.validationFailed(554); /* Warn about the limit*/
      end
    end
    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  FLWREC.XXXMODID = "310"; /* Module identification*/
  converseLib.validationFailed(1); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATDE TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FLWREC.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FL07310

// Reset highlighted fields
Function FL07400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  FL07W00.FL07WIX1 = 1; /* initialize index*/
  while (FL07W00.FL07WIX1 <= 13) /* while in bounds of map*/
    if (FL07M010.SY1STNBR[FL07WIX1] > "      ")
      set FL07M010.FL07MSEL[FL07WIX1] initialAttributes; /* Select field*/
    end
    FL07W00.FL07WIX1 = FL07W00.FL07WIX1 + 1; /* increment index*/
  end

  set FL07M010.FL07MFMM initialAttributes;
  set FL07M010.FL07MFDD initialAttributes;
  set FL07M010.FL07MFYY initialAttributes;
  set FL07M010.FL07MTMM initialAttributes;
  set FL07M010.FL07MTDD initialAttributes;
  set FL07M010.FL07MTYY initialAttributes;
  set FL07M010.CATOAP initialAttributes;
  if (FL07W00.FL07WDFS == "Y")
    set FL07M010.FL07MSEL[1] cursor; /* Select field*/
  else
    set FL07M010.FBAMDNBR cursor;
  end
  set FL07M010.FL07FW-R-EQ initialAttributes;
end // end FL07400

// Verify data that was entered
Function FL07500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  FL07W00.FL07WERS = "N"; /* Error switch*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    FLWREC.XXXMODID = "500"; /* Module identification*/
    set FL07M010.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end


  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf9)
    /* ------------------------------------------------------------*/
     /* Edit select field*/
    /* ------------------------------------------------------------*/

    /* ------------------------------------------------------------*/
    /* Check if the Footwear/Equipment flag is 'F' or 'E'.  If neither*/
    /* of the two, then clear screen and display error message.*/
    /* ------------------------------------------------------------*/

    if ((FL07M010.FL07FW-R-EQ != "E") && 
    (FL07M010.FL07FW-R-EQ != "F"))
      FL07650(); /* Blank out the map*/
      converseLib.validationFailed(0010); /* Display error message*/
      FL07W00.FL07WSWF = "N"; /* reset no format*/
      set FL07M010.FL07FW-R-EQ cursor, modified, bold; /* highlight field*/
    end

    FL07W00.FL07WIX1 = 13; /* initialize index*/
    while (FL07W00.FL07WIX1 >= 1) /* while in bounds of map*/
      if (FL07M010.FL07MSEL[FL07WIX1] != " "
       && FL07M010.FL07MSEL[FL07WIX1] != "X")
        set FL07M010.FL07MSEL[FL07WIX1] cursor, modified, bold;

        FLWREC.XXXMODID = "500"; /* Module identification*/
        converseLib.validationFailed(10); /* Invalid value entered*/

      end
      FL07W00.FL07WIX1 = FL07W00.FL07WIX1 - 1; /* decrement index*/
    end
    FL07510(); /* edit dates*/
  end


  if (converseVar.validationMsgNum != 0)
    FL07W00.FL07WERS = "Y"; /* Error switch*/
  end
end // end FL07500

// Validate start date
Function FL07510()

   /* ------------------------------------------------------------*/
   /* Determine if End Date entered is valid. Use subroutine*/
   /* TA0040.*/
   /* ------------------------------------------------------------*/

  FL07W00.FL07WYY = FL07M010.FL07MTYY; /* year*/
  FL07W00.FL07WMM = FL07M010.FL07MTMM; /* month*/
  FL07W00.FL07WDD = FL07M010.FL07MTDD; /* day*/

  set TA2REC empty; /* initialize record*/

  TA2REC.TA2DTOPT = "GREGGREG"; /* date option*/
  TA2REC.TA2GRTYP = "A"; /* date format*/
  TA2REC.TA2GRGAN = FL07W00.FL07WGRG; /* move date*/

  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(367); /* invalid to date*/
      FL07M010.XXXMODID = "510"; /* module identification*/
      set FL07M010.FL07MTMM cursor, modified, bold; /* set cursor*/
      set FL07M010.FL07MTDD modified, bold; /* set cursor*/
      set FL07M010.FL07MTYY modified, bold; /* set cursor*/
    end
  end


   /* ------------------------------------------------------------*/
   /* Determine if Start Date entered is valid. Use subroutine*/
   /* TA0040.*/
   /* ------------------------------------------------------------*/

  FL07W00.FL07WYY = FL07M010.FL07MFYY; /* year*/
  FL07W00.FL07WMM = FL07M010.FL07MFMM; /* month*/
  FL07W00.FL07WDD = FL07M010.FL07MFDD; /* day*/

  set TA2REC empty; /* initialize record*/

  TA2REC.TA2DTOPT = "GREGGREG"; /* date option*/
  TA2REC.TA2GRTYP = "A"; /* date format*/
  TA2REC.TA2GRGAN = FL07W00.FL07WGRG; /* move date*/

  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(366); /* invalid from date*/
      FL07M010.XXXMODID = "510"; /* module identification*/
      set FL07M010.FL07MFMM cursor, modified, bold; /* set cursor*/
      set FL07M010.FL07MFDD modified, bold; /* set cursor*/
      set FL07M010.FL07MFYY modified, bold; /* set cursor*/
    end
  end




   /* ------------------------------------------------------------*/
   /* Compare dates.  If the from date is greater than  the*/
   /* to date, display error message.*/
   /* ------------------------------------------------------------*/

  if (FL07M010.FL07MFYY > FL07M010.FL07MTYY)
    converseLib.validationFailed(368); /* from dt > to dt*/
    FL07M010.XXXMODID = "510"; /* module identification*/
    set FL07M010.FL07MFMM cursor, modified, bold; /* set cursor*/
    set FL07M010.FL07MFDD modified, bold; /* set cursor*/
    set FL07M010.FL07MFYY modified, bold; /* set cursor*/
  else
    if (FL07M010.FL07MFYY == FL07M010.FL07MTYY
     && FL07M010.FL07MFMM > FL07M010.FL07MTMM)
      converseLib.validationFailed(368); /* from dt > to dt*/
      FL07M010.XXXMODID = "510"; /* module identification*/
      set FL07M010.FL07MFMM cursor, modified, bold; /* set cursor*/
      set FL07M010.FL07MFDD modified, bold; /* set cursor*/
      set FL07M010.FL07MFYY modified, bold; /* set cursor*/
    else
      if (FL07M010.FL07MFYY == FL07M010.FL07MTYY
       && FL07M010.FL07MFMM == FL07M010.FL07MTMM
       && FL07M010.FL07MFDD > FL07M010.FL07MTDD)
        converseLib.validationFailed(368); /* from dt > to dt*/
        FL07M010.XXXMODID = "510"; /* module identification*/
        set FL07M010.FL07MFMM cursor, modified, bold; /* set cursor*/
        set FL07M010.FL07MFDD modified, bold; /* set cursor*/
        set FL07M010.FL07MFYY modified, bold; /* set cursor*/
      end
    end
  end


end // end FL07510

// Process valid input request
Function FL07600()

  XX0XW01.XX0XWMM = FL07M010.FL07MFMM; /* from sdt month*/
  XX0XW01.XX0XWDD = FL07M010.FL07MFDD; /* from sdt day*/
  XX0XW01.XX0XWYY = FL07M010.FL07MFYY; /* from sdt year*/
  if (FL07M010.FL07MFYY > 57)
    XX0XW01.XX0XW19 = 19; /* from century*/
  else
    XX0XW01.XX0XW19 = 20; /* from century*/
  end
  FL07W00.FL07WFRM = XX0XW01.XX0XWDAT; /* date (yyyymmdd)*/

  XX0XW01.XX0XWMM = FL07M010.FL07MTMM; /* to sdt month*/
  XX0XW01.XX0XWDD = FL07M010.FL07MTDD; /* to sdt day*/
  XX0XW01.XX0XWYY = FL07M010.FL07MTYY; /* to sdt year*/
  if (FL07M010.FL07MTYY > 57)
    XX0XW01.XX0XW19 = 19; /* from century*/
  else
    XX0XW01.XX0XW19 = 20; /* from century*/
  end
  FL07W00.FL07WTO = XX0XW01.XX0XWDAT; /* date (yyyymmdd)*/


  if (FL07M010.FBAMDNBR != FL07W00.FBAMDNBR /* model nbr changed*/
   || FL07W00.FL07WFRM != FL07W00.FL07WSFR  /* from date changed*/
   || FL07W00.FL07WTO != FL07W00.FL07WSTO   /* to date changed*/
   || FL07W00.FL07WFW-R-EQ != FL07M010.FL07FW-R-EQ) /* Ftwr /Equip Req.*/

    FL07W00.FL07WSWR = "Y"; /* Request for data switch*/
    FL07W00.FL07WSWF = "Y"; /* Format the map switch*/
    FL07W00.XXXTSPAG = 1; /* Display first page*/
    FL07650(); /* blank out map*/
    converseLib.validationFailed(0);

    return; /* Return to previous process*/

  end





  if (FL07W00.FL07WERS == "Y") /* Errors were found*/
    return;
  end




  if (converseVar.eventKey is pf7 /* Scroll back*/
   || converseVar.eventKey is pf8) /* Scroll frwd*/
    if (FL07W00.FL07WDFS == "Y") /* Data was found switch*/
      FL07605(); /* scrolling*/
    end
  end




  if (converseVar.eventKey is pf9 /* Submit the report*/
   && FL07W00.FL07WDFS == "Y")    /* Data was found*/

    if (FL07W00.FL07-PF9-ADD == "Y")
      FL07310(); /* Update current page of temp storage*/
    end


    /* ------------------------------------------------------------*/
     /* Call sub-routine to find which environment*/
     /* the program is executing in, development*/
     /* or production.*/
    /* ------------------------------------------------------------*/
    set TA3REC empty;
    TA3REC.TA3OPTN = "ASSIGN ";
    try
      call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
    end

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && TA3REC.TA3RTNCD == 0)          /* Good return code*/


      if (TA3REC.TA3RGNID == "03") /* if on production system*/
        FL07610(); /* production jcl- fl07t01*/
      else
        FL07620(); /* development jcl- fl07t02*/
      end

      FL07630(); /* Submit the JCL*/

    else

      FL07M010.XXXMODID = "600"; /* module identification*/
      converseLib.validationFailed(87); /* Error encountered with print request*/
      exit stack;
    end

  end
end // end FL07600

// scolling
Function FL07605()
  if (converseVar.eventKey is pf8) /* scroll forward*/
    FL07310(); /* Save select fields*/
    FL07W00.XXXTSPAG = FL07W00.XXXTSPAG + 1; /* increment page*/
    FL07W00.FL07WSWF = "Y"; /* format the map sw*/
    return; /* display the map*/
  end

  if (converseVar.eventKey is pf7) /* scroll backward*/
    FL07310(); /* Save select fields*/
    FL07W00.XXXTSPAG = FL07W00.XXXTSPAG - 1; /* decrement page*/
    FL07W00.FL07WSWF = "Y"; /* format the map sw*/
    return; /* display the map*/
  end
end // end FL07605

// Format production jcl
Function FL07610()
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  FL07W00.FL07WIX1 = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  TA6REC.TA6MSGSW = "N"; /* No on-line notify message*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (FL07T01.TARJCL[FL07WIX1] != "/*EOF") /* End of table*/


    if (FL07T01.TARTYPE[FL07WIX1] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format  parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARTYPE[TA6INDEX] = FL07T01.TARTYPE[FL07WIX1]; /* Type*/

      FL07615();

    else
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FL07T01.TARJCL[FL07WIX1]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FL07T01.TARTYPE[FL07WIX1]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* Increment the table index.*/
     /* If end, move /*eof to jcl.*/
    /* ------------------------------------------------------------*/

    FL07W00.FL07WIX1 = FL07W00.FL07WIX1 + 1; /* Increment table index*/
    if (FL07T01.TARJCL[FL07WIX1] == "/*EOF") /* End of table*/

      TA6REC.TARJCL[TA6INDEX] = FL07T01.TARJCL[FL07WIX1]; /* JCL*/

    end

  end

end // end FL07610

// Format parameters
Function FL07615()
  set FL07W03 empty;
  XX0XW01.XX0XWMM = FL07M010.FL07MFMM; /* from sdt month*/
  XX0XW01.XX0XWDD = FL07M010.FL07MFDD; /* from sdt day*/
  XX0XW01.XX0XWYY = FL07M010.FL07MFYY; /* from sdt year*/
  if (FL07M010.FL07MFYY > 57)
    XX0XW01.XX0XW19 = 19; /* from century*/
  else
    XX0XW01.XX0XW19 = 20; /* from century*/
  end
  FL07W03.FL07WFDT = XX0XW01.XX0XWDAT; /* date (yyyymmdd)*/

  XX0XW01.XX0XWMM = FL07M010.FL07MTMM; /* to sdt month*/
  XX0XW01.XX0XWDD = FL07M010.FL07MTDD; /* to sdt day*/
  XX0XW01.XX0XWYY = FL07M010.FL07MTYY; /* to sdt year*/
  if (FL07M010.FL07MTYY > 57)
    XX0XW01.XX0XW19 = 19; /* from century*/
  else
    XX0XW01.XX0XW19 = 20; /* from century*/
  end
  FL07W03.FL07WTDT = XX0XW01.XX0XWDAT; /* date (yyyymmdd)*/

  FL07W03.FL07WMDL = FL07M010.FBAMDNBR; /* model nbr*/

  TA6REC.TARJCL[TA6INDEX] = FL07W03.FL07WGN1; /* JCL*/

  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

  FL07W00.XXXTSPAG = 1;
  while (FL07W00.XXXTSPAG <= FL07W00.TA5TSQIX)
    FL07617(); /* Put in styles to be excluded*/
    FL07W00.XXXTSPAG = FL07W00.XXXTSPAG + 1;
  end





   /* Now put the same parms into comment cards in the JCL*/

  /* MOVE '//*' TO FL07W03.FL07WCM1;   /* Put the parm into comments*/
  /* MOVE '//*' TO FL07W03.FL07WCM2;   /* Put the parm into comments*/


  /* MOVE FL07W03.FL07WG1 TO TA6REC.TARJCL(TA6INDEX); /* JCL*/

  /* TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;   /* Increment parms index*/

  /* MOVE 1 TO FL07W00.XXXTSPAG;*/
  /* WHILE FL07W00.XXXTSPAG LE FL07W00.TA5TSQIX;*/
  /* PERFORM FL07618;                /* Put in styles to be excluded*/
  /* FL07W00.XXXTSPAG = FL07W00.XXXTSPAG + 1;*/
  /* END;*/

  FL07W00.XXXTSPAG = 1;


end // end FL07615

// Style parm
Function FL07617()


  FL07W02.XXXTSLEN = FL07W00.XXXTSLEN; /* Temporary storage length*/
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FL07W00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (FL07W02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    FL07W00.FL07WIX2 = 1; /* General index 2*/
    while (FL07W00.FL07WIX2 <= 13)

      /* ------------------------------------------------------------*/
       /* Format the map key fields from the display storage area.*/
      /* ------------------------------------------------------------*/


      if (FL07W02.FL07WSEL[FL07WIX2] == "X")
        FL07W03.SY1STNBR = FL07W02.SY1STNBR[FL07WIX2];
        FL07W03.SY2CLRID = FL07W02.SY2CLRID[FL07WIX2];
        FL07W03.XDMCD = FL07W02.XDMCD[FL07WIX2];
        FL07W03.FY1FCTYC = FL07W02.FY1FCTYC[FL07WIX2];
        FL07W03.XFRCD = FL07W02.XFRCD[FL07WIX2];

        if (TA6INDEX < 399) /* To keep the Parm card within the limit*/
          TA6REC.TARJCL[TA6INDEX] = FL07W03.FL07WGN2; /* JCL*/
        else
          return;
        end

        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

      end

      FL07W00.FL07WIX2 = FL07W00.FL07WIX2 + 1;
    end





  end





   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  if (sysVar.errorCode != "00000000" /* Call successful*/
   || TA5REC.TA5RTNCD != 0)          /* and normal return code*/

    TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
    TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

    FLWREC.XXXMODID = "617"; /* Module identification*/
    converseLib.validationFailed(1); /* Indicate system error*/

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = FLWREC.XXXMODID; /* Program number*/
    TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
    TA1REC.TA1MAPNO = "M010"; /* Map number*/

    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end
end // end FL07617

// Format Development jcl
Function FL07620()
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  FL07W00.FL07WIX1 = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  TA6REC.TA6MSGSW = "N"; /* No on-line notify message*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (FL07T02.TARJCL[FL07WIX1] != "/*EOF") /* End of table*/


    if (FL07T02.TARTYPE[FL07WIX1] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format  parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARTYPE[TA6INDEX] = FL07T02.TARTYPE[FL07WIX1]; /* Type*/

      FL07615();

    else
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FL07T02.TARJCL[FL07WIX1]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FL07T02.TARTYPE[FL07WIX1]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* Increment the table index.*/
     /* If end, move /*eof to jcl.*/
    /* ------------------------------------------------------------*/

    FL07W00.FL07WIX1 = FL07W00.FL07WIX1 + 1; /* Increment table index*/
    if (FL07T02.TARJCL[FL07WIX1] == "/*EOF") /* End of table*/

      TA6REC.TARJCL[TA6INDEX] = FL07T02.TARJCL[FL07WIX1]; /* JCL*/

    end

  end

end // end FL07620

// Submit the JCL
Function FL07630()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "Y"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* no msgs when batch job done*/

  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end

   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    converseLib.validationFailed(76); /* Return message*/

    FL07650(); /* Format balank screen*/
    FL07W00.FL07WDFS = "N"; /* Data was found switch*/
    FL07W00.TA5TSQIX = 0; /* Highest page*/
    FL07W00.XXXTSPAG = 0; /* current page*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/

    converseLib.validationFailed(86); /* Indicate user cancelled*/
    FL07M010.XXXMODID = "630"; /* module identification*/

    FL07650(); /* Format balank screen*/
    FL07W00.FL07WDFS = "N"; /* Data was found switch*/
    FL07W00.TA5TSQIX = 0; /* Highest page*/
    FL07W00.XXXTSPAG = 0; /* current page*/

  else
    converseLib.validationFailed(01); /* Indicate system error*/
    FL07M010.XXXMODID = "630"; /* module identification*/

  end

  exit stack; /* Exit to display map*/


end // end FL07630

// Format blank map
Function FL07650()

  FL07W00.FL07WIX1 = 1; /* General index 1*/
  while (FL07W00.FL07WIX1 <= 13)
    FL07M010.SY1STNBR[FL07WIX1] = "      ";
    FL07M010.SY2CLRID[FL07WIX1] = "   ";
    FL07M010.XDMCD[FL07WIX1] = "  ";
    FL07M010.FL07W-XSUA[FL07WIX1] = " ";
    FL07M010.FL07W-XGAA[FL07WIX1] = "  ";
    FL07M010.SY1SSTNM[FL07WIX1] = "            ";
    FL07M010.SY2CLRAB[FL07WIX1] = "            ";
    FL07M010.FY1FCTYC[FL07WIX1] = "    ";
    FL07M010.XFRCD[FL07WIX1] = "  ";
    FL07M010.XCTCD[FL07WIX1] = "  ";
    FL07M010.FBDQTB[FL07WIX1] = 0;
    FL07M010.FL07MSEL[FL07WIX1] = " ";
    set FL07M010.FL07MSEL[FL07WIX1] protect, invisible;
    FL07M010.FL07MADJ[FL07WIX1] = "   ";
    FL07W00.FL07WIX1 = FL07W00.FL07WIX1 + 1;
  end

end // end FL07650

//*** RECORD=FL07W00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FL07W00 type basicRecord
  10 FL07WSWF FL07WSWF ; 
  10 FL07WSWR FL07WSWR ; 
  10 FL07WDFS FL07WDFS ; 
  10 FL07WERS FL07WERS ; 
  10 FL07WIX1 FL07WIX1 ; 
  10 FL07WIX2 FL07WIX2 ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 FBAMDNBR FBAMDNBR ; 
  10 FL07WFRM FL07WFRM ; 
  10 FL07WSFR FL07WSFR ; 
  10 FL07WTO FL07WTO ; 
  10 FL07WSTO FL07WSTO ; 
  10 FL07WGRG FL07WGRG ; 
    15 FL07WMM FL07WMM ; 
    15 FL07WDD FL07WDD ; 
    15 FL07WYY FL07WYY ; 
  10 XGAABRV XGAABRV ; 
    15 FL07W-XGAA FL07W-XGAA ; 
    15 * char(4) ; // FILLER
  10 XSUABRV XSUABRV ; 
    15 FL07W-XSUA FL07W-XSUA ; 
    15 * char(9) ; // FILLER
  10 FL07WFW-R-EQ FL07WFW-R-EQ ; 
  10 FTWR-EQMT-FL FTWR-EQMT-FL ; 
  10 VFLAUD01-EOC VFLAUD01-EOC ; 
  10 FL07-EXCL-CTR FL07-EXCL-CTR ; 
  10 FL07-PF9-ADD FL07-PF9-ADD ; 
  10 FL07-PF8-UPDATE FL07-PF8-UPDATE ; 
  10 FL07-MAX-PAGE FL07-MAX-PAGE ; 
end // end FL07W00

//*** RECORD=FL07W01 ****
// ------------------------
// Working storage record used
// with IO-MOD FL1210
// ------------------------
// ***********************
Record FL07W01 type basicRecord
  5 FL07WGR2 FL07WGR2 ; 
    10 FBDMDTYP FBDMDTYP ; 
    10 FB8BUYDT FB8BUYDT ; 
    10 FBAMDNBR FBAMDNBR ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 PC2CUXID PC2CUXID ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 XQACD XQACD ; 
    10 PC2INSEG PC2INSEG ; 
    10 XPGCD XPGCD ; 
    10 XUMCD XUMCD ; 
    10 FBDBTCD FBDBTCD ; 
    10 XFRCD XFRCD ; 
    10 FBDQTB FBDQTB ; 
    10 XXXPGMNB XXXPGMNB ; 
    10 XXXUSRID XXXUSRID ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZHHMMSS ZZHHMMSS ; 
    10 XCTCD XCTCD ; 
    10 FL07WFRM FL07WFRM ; 
    10 FL07WTO FL07WTO ; 
end // end FL07W01

//*** RECORD=FL07W02 ****
// ------------------------
// Working storage record used
// For temporary storage
// ------------------------
// ***********************
Record FL07W02 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 FL07WGR FL07WGR ; 
    10 FL07WSEL FL07WSEL [13] ; 
    10 SY1STNBR SY1STNBR [13] ; 
    10 SY2CLRID SY2CLRID [13] ; 
    10 XDMCD XDMCD [13] ; 
    10 SY1SSTNM SY1SSTNM [13] ; 
    10 SY2CLRAB SY2CLRAB [13] ; 
    10 FBDQTB FBDQTB [13] ; 
    10 FL07W-XSUA FL07W-XSUA [13] ; 
    10 FL07W-XGAA FL07W-XGAA [13] ; 
    10 FY1FCTYC FY1FCTYC [13] ; 
    10 XFRCD XFRCD [13] ; 
    10 XCTCD XCTCD [13] ; 
end // end FL07W02

//*** RECORD=FL07W03 ****
// ------------------------
// Working storage record used
// For Jcl parms
// ------------------------
// ***********************
Record FL07W03 type basicRecord
  5 FL07WG1 FL07WG1 ; 
    10 FL07WCM1 FL07WCM1 ; 
    10 FL07WGN1 FL07WGN1 ; 
      15 FL07WMDL FL07WMDL ; 
      15 FL07WFDT FL07WFDT ; 
      15 FL07WTDT FL07WTDT ; 
      15 * char(57) ; 
  5 FL07WG2 FL07WG2 ; 
    10 FL07WCM2 FL07WCM2 ; 
    10 FL07WGN2 FL07WGN2 ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
      15 XDMCD XDMCD ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 XFRCD XFRCD ; 
      15 * char(63) ; 
end // end FL07W03

// Count of Excluded styles
DataItem FL07-EXCL-CTR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Maximum page navigated
DataItem FL07-MAX-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Flag to update with PF8
DataItem FL07-PF8-UPDATE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Addition Flag for PF9
DataItem FL07-PF9-ADD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// First two bytes of G/A ABRV
DataItem FL07W-XGAA char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// First byte of silh abrv
DataItem FL07W-XSUA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Comment literal
DataItem FL07WCM1 char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Comment literal
DataItem FL07WCM2 char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// day
DataItem FL07WDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data found switch
DataItem FL07WDFS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Error switch
DataItem FL07WERS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// From setup date
DataItem FL07WFDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// from setup date
DataItem FL07WFRM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Ftwr or Equip Ind.
DataItem FL07WFW-R-EQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group 1 with comments
DataItem FL07WG1 char(83)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group 2 with comments
DataItem FL07WG2 char(83)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group 1 without comments
DataItem FL07WGN1 char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group 2 without comments
DataItem FL07WGN2 char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level item
DataItem FL07WGR char(702)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Group item
DataItem FL07WGR2 char(84)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gregorian date
DataItem FL07WGRG num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// General index 1
DataItem FL07WIX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// General index 1
DataItem FL07WIX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Model number
DataItem FL07WMDL num(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// month
DataItem FL07WMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Select field
DataItem FL07WSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// save from setup date
DataItem FL07WSFR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save to setup date
DataItem FL07WSTO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format the map switch
DataItem FL07WSWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem FL07WSWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// to setup date
DataItem FL07WTDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// to setup date
DataItem FL07WTO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// year
DataItem FL07WYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// End of cursor VFLAUD01 flag.
DataItem VFLAUD01-EOC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

