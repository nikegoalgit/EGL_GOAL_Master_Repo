package fl06;

import corpcom2.XPCREC;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFL001;
import corpcom4.XSFLS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpx1.XPLTBL;
import fb.common.FBMGROUP;
import fb.common.FBMREC;
import fl.common.FLWREC;
import pg.common.PG1REC;
import ta.common.TA1REC;
import ta.common.TAEREC;
//*** PROGRAM=FL06 ****
// This application is part of the Footwear Factory Load system
// 
// it is a display only screen that shows all schedulers and
// current flag settings.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          05/04/88  pmainw  New application.
//          11/21/94  pmainw  Change to handle more than ten
//                            product lines.
// *********************
Program FL06 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FBMREC FBMREC; // record
  FL06W00 FL06W00; // record
  FLWREC FLWREC; // record
  PG1REC PG1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record
  XPCREC XPCREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XPLTBL {deleteAfterUse = yes}; // table
  use FL06M.FL06M010,  // forms
      FL06M.FL06M020
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFL001: XPFL001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FL06M010 initial; /* M001 input/output*/
    set FL06W00 empty; /* Working storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    ;
    FL06W00.FL06WSWR = "Y"; /* Request for data switch*/
    ;
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FL06-00000; /* Converse the main process*/
    ;
    ;
    FL06-00000: FL06-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FL06-00000; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FL06

// Determine which map to display
Function FL06-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the map that was requested.*/
   /* 2) Otherwise, indicate error and exit to System Menu.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (FL06W00.FL06WMAP-DISPLAY-SW != "2"
  ) /* Map 1 was requested*/
    ;
    FL06-10000(); /* Display map 1*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  if (FL06W00.FL06WMAP-DISPLAY-SW == "2")
                                  /* Map 2 was requested*/
    ;
    FL06-20000(); /* Display map 2*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FL06-00000

// Main process to display a map1
Function FL06-10000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset fields to normal display.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FL06-11000(); /* Obtain the data to display*/
  ;
  FL06-12000(); /* Format and display the map*/
  ;
  FL06-13000(); /* Check attention identifier*/
  ;
  FL06-14000(); /* Reset fields to normal display*/
  ;
  FL06-15000(); /* Verify the entered data*/
  ;
  FL06-16000(); /* Process valid input request*/
  ;
  ;
end // end FL06-10000

// Obtain the data to display
Function FL06-11000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (FL06W00.FL06WSWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Open FSCTL.*/
   /* ------------------------------------------------------------*/
  ;
  FL06-11100(); /* declare cursor FSCTL*/
  ;
   /* ------------------------------------------------------------*/
   /* Loop through FSCTL rows.*/
   /* ------------------------------------------------------------*/
  ;
  FL06W00.FL06WIX1 = 1; /* set index*/
  while (FL06W00.FL06WSWC == "N" /* While not end of cursor*/
   && FL06W00.FL06WIX1 <= 15) /* Map limit*/
    ;
    /* ------------------------------------------------------------*/
     /* Fetch FSCTL.*/
    /* ------------------------------------------------------------*/
    ;
    FL06-11200(); /* fetch cursor FSCTL*/
    ;
    /* ------------------------------------------------------------*/
     /* If row found, select SUSER.*/
    /* ------------------------------------------------------------*/
    ;
    if (FL06W00.FL06WSWC == "N") /* if not end of cursor*/
      ;
      FL06-11300(); /* Select SUSER*/
      ;
      /* ------------------------------------------------------------*/
      /* If row found, select SUSER.*/
      /* ------------------------------------------------------------*/
      ;
      FL06-11400(); /* Save data on map*/
      ;
      /* ------------------------------------------------------------*/
       /* Add to count.*/
      /* ------------------------------------------------------------*/
      ;
      FL06W00.FL06WIX1 = FL06W00.FL06WIX1 + 1; /* increment index*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Close FSCTL.*/
   /* ------------------------------------------------------------*/
  ;
  if (FL06W00.FL06WSWC == "Y") /* end of cursor*/
    FL06-11500(); /* close cursor FSCTL*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/
  ;
  FL06W00.FL06WSWR = "N"; /* Request for data switch*/
  ;
  FL06W00.FL06WIX1 = 15; /* General index 1*/
  while (FL06W00.FL06WIX1 >= 1)
    if (FL06M010.PG1SC4CD[FL06WIX1] == "  ") /* no data displayed*/
      set FL06M010.FL06MSEL[FL06WIX1] protect, invisible; /* item select*/
    end
    FL06W00.FL06WIX1 = FL06W00.FL06WIX1 - 1; /* Decrement General index 1*/
  end
end // end FL06-11000

// Open FSCTL
Function FL06-11100()
   /* ------------------------------------------------------------*/
   /* Clear copybook.*/
   /* ------------------------------------------------------------*/
  ;
  set FBMREC empty;
  ;
   /* ------------------------------------------------------------*/
   /* Open FSCTL.  No key required.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4670" ("S1", SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FL06W00.FL06WSWC = "N"; /* Set end of cursor switch*/
      return; /* Return to previous process*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FLWREC.XXXMODID = "111"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET          ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FLWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBMREC.FBMGROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  ;
end // end FL06-11100

// Fetch FSCTL
Function FL06-11200()
   /* ------------------------------------------------------------*/
   /* Clear copybook.*/
   /* ------------------------------------------------------------*/
  ;
  set FBMREC empty; /* Clear copybook*/
  ;
   /* ------------------------------------------------------------*/
   /* Fetch FSCTL.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4670" ("N1", SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful or row not found, return.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      ;
      if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
        FL06WSWC = "Y"; /* End of cursor switch*/
      end
      ;
      return;
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FLWREC.XXXMODID = "112"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT          ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FLWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBMREC.FBMGROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  ;
  ;
end // end FL06-11200

// Select SUSER
Function FL06-11300()
   /* ------------------------------------------------------------*/
   /* Fetch SUSER.*/
   /* ------------------------------------------------------------*/
  ;
  set PG1REC empty;
  ;
   /* ------------------------------------------------------------*/
   /* format key.*/
   /* ------------------------------------------------------------*/
  PG1REC.PG1SC4CD = FBMREC.PG1SC4CD; /* sched code*/
  PG1REC.XGPCD = "02"; /* gen prod cls cd*/
  PG1REC.PG1FCTCD = "  "; /* fcst code*/
  ;
   /* ------------------------------------------------------------*/
   /* select suser*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO1200" ("S ", SQLCA, PG1REC) {isNoRefresh = yes, isExternal = yes};
  end /* select row*/
  ;
   /* ------------------------------------------------------------*/
   /* if the call was successful, return to the previous process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
      FL06M010.XXXUSER[FL06WIX1] = PG1REC.XXXUSER;
      ;
      return; /* return to previous process*/
      ;
    end
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      FL06M010.XXXUSER[FL06WIX1] = "********";
      ;
      return; /* return to previous process*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FLWREC.XXXMODID = "113"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE ROW   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FLWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUSER01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG1REC.PG1GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  ;
end // end FL06-11300

// Save data for display
Function FL06-11400()
   /* ------------------------------------------------------------*/
   /* Save SUSER data.*/
   /* ------------------------------------------------------------*/
  ;
  FL06M010.PG1SC4CD[FL06WIX1] = PG1REC.PG1SC4CD; /* sched code*/
  ;
   /* ------------------------------------------------------------*/
   /* Save FSCTL data.*/
   /* ------------------------------------------------------------*/
  ;
  FL06M010.FBMFINFL[FL06WIX1] = FBMREC.FBMFINFL; /* ds finish fl*/
  FL06M010.FBMCFFL[FL06WIX1] = FBMREC.FBMCFFL; /* calc finish fl*/
  FL06M010.FBMALAFL[FL06WIX1] = FBMREC.FBMALAFL; /* auto load acpt*/
  FL06M010.FBMFLRFL[FL06WIX1] = FBMREC.FBMFLRFL; /* fcty load run fl*/
  ;
  FL06W00.FBMGROUP[FL06WIX1] = FBMREC.FBMGROUP; /* save row*/
end // end FL06-11400

// Close FSCTL
Function FL06-11500()
   /* ------------------------------------------------------------*/
   /* Close FSCTL.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4670" ("C1", SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FLWREC.XXXMODID = "115"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE CURSOR       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FLWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBMREC.FBMGROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  ;
end // end FL06-11500

// Format and converse the map
Function FL06-12000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FLWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FL06M010.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FL06M010.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FL06M010.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FLWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FLWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FLWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FLWREC.XXXMSGNO);
      end /* Message number*/
    else
      FL06M010.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FL06M010.XXXMODID = FLWREC.XXXMODID; /* Module identification*/
    ;
    set FL06M010 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse FL06M010 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FLWREC.XXXMODID = " "; /* Module identification*/
  FLWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FL06M010.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FL06M010.CAITEM; /* Application data*/
  ;
  ;
end // end FL06-12000

// Check attention identifier
Function FL06-13000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    ;
    FL06W00.FL06WSWR = "Y"; /* Request for data switch*/
    ;
    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FL06M010.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      XSFLS01(); /* Exit to another application*/
      ;
      set FL06M010.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FLWREC.XXXMODID = "130"; /* Module identification*/
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* PF1 was pressed*/
   || converseVar.eventKey is pf3  /* or PF3 was pressed*/
   || converseVar.eventKey is pf4  /* or PF4 was pressed*/
   || converseVar.eventKey is pf5  /* or PF5 was pressed*/
   || converseVar.eventKey is pf12 /* or PF12 was pressed*/
   || converseVar.eventKey is pf13 /* or PF13 was pressed*/
   || converseVar.eventKey is pf15) /* or pf15 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "FL06M010"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3 /* PF3 was pressed*/
     || converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FL0A"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf5) /* PF5 was pressed*/
      COMMAREA.CATOAP = "FY0M"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FL0M"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      return;
    end
    ;
    XSFLS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   /* and PF1  was not pressed*/
   && converseVar.eventKey not pf3   /* and PF3  was not pressed*/
   && converseVar.eventKey not pf4   /* and PF4  was not pressed*/
   && converseVar.eventKey not pf5   /* and PF5  was not pressed*/
   && converseVar.eventKey not pf12  /* and PF12 was not pressed*/
   && converseVar.eventKey not pf13  /* and PF13 was not pressed*/
   && converseVar.eventKey not pf15) /* and pf15 was not pressed*/
    ;
    FLWREC.XXXMODID = "130"; /* Module identification*/
    converseLib.validationFailed(3); /* Indicate invalid attention key*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      ;
      FL06WSWR = "Y"; /* Data is requested*/
      ;
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FL06-13000

// Reset highlighted fields
Function FL06-14000()
  FL06W00.FL06WIX1 = 15; /* General index 1*/
  while (FL06W00.FL06WIX1 >= 1)
    ;
    if (FL06M010.PG1SC4CD[FL06WIX1] != "  ") /* data displayed*/
      set FL06M010.FL06MSEL[FL06WIX1] initialAttributes; /* item select*/
      ;
    else
      set FL06M010.FL06MSEL[FL06WIX1] protect, invisible; /* item select*/
    end
    FL06W00.FL06WIX1 = FL06W00.FL06WIX1 - 1; /* Decrement General index 1*/
  end
end // end FL06-14000

// Verify data that was entered
Function FL06-15000()
        /* ---------------------------------------------------------------*/
        /* Verify the Select field*/
        /* ---------------------------------------------------------------*/
  ;
  FL06W00.FL06W-NBR-SELECTED = 0; /* number of items selected*/
  FL06W00.FL06WIX1 = 15; /* General index 1*/
  while (FL06W00.FL06WIX1 >= 1)
    ;
    if (FL06M010.FL06MSEL[FL06WIX1] != " ") /* item selected*/
      if (FL06M010.FL06MSEL[FL06WIX1] != "S") /* item selected*/
        ;
        set FL06M010.FL06MSEL[FL06WIX1] cursor, bold; /* Highlight*/
        converseLib.validationFailed(41); /* Only 's' is valid*/
        ;
      else
        FL06W00.FL06W-NBR-SELECTED = FL06W00.FL06W-NBR-SELECTED + 1; /* number of items selected*/
        ;
        if (FL06W00.FL06W-NBR-SELECTED > 1)
          set FL06M010.FL06MSEL[FL06WIX1] cursor, bold; /* Highlight*/
          converseLib.validationFailed(136); /* Can only select one item*/
        end
      end
    end
    FL06W00.FL06WIX1 = FL06W00.FL06WIX1 - 1; /* Decrement General index 1*/
  end
  ;
  ;
  if (FL06W00.FL06W-NBR-SELECTED < 1)
    if (converseVar.eventKey is pf15)
      converseLib.validationFailed(154); /* no selection was made*/
    end
  end
  ;
  ;
  ;
        /* ---------------------------------------------------------------*/
        /* If any errors were found, exit to display the map*/
        /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    exit stack;
  end
  ;
end // end FL06-15000

// Process valid input request
Function FL06-16000()
  if (converseVar.eventKey is pf15) /* pf15 was pressed*/
    FL06W00.FL06WMAP-DISPLAY-SW = "2"; /* Show second map*/
    return;
  end
  ;
  ;
end // end FL06-16000

// Main process to display a map2
Function FL06-20000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset fields to normal display.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FL06-21000(); /* Obtain the data to display*/
  ;
  FL06-22000(); /* Format and display the map*/
  ;
  FL06-23000(); /* Check attention identifier*/
  ;
  FL06-24000(); /* Reset fields to normal display*/
  ;
  FL06-25000(); /* Verify the entered data*/
  ;
  FL06-26000(); /* Process valid input request*/
  ;
  ;
end // end FL06-20000

// Obtain the data to display
Function FL06-21000()
  set FBMREC empty;
  set FL06M020 initial;
  FL06W00.FL06WIX1 = 15; /* General index 1*/
  while (FL06W00.FL06WIX1 >= 1)
    if (FL06M010.FL06MSEL[FL06WIX1] == "S") /* scheduler selected*/
      FBMREC.FBMGROUP = FL06W00.FBMGROUP[FL06WIX1];
      FL06M020.PG1SC4CD = FL06M010.PG1SC4CD[FL06WIX1]; /* sched code*/
      FL06M020.XXXUSER = FL06M010.XXXUSER[FL06WIX1]; /* sched desc*/
    end
    FL06W00.FL06WIX1 = FL06W00.FL06WIX1 - 1; /* Decrement General index 1*/
  end
  ;
  ;
  ;
  ;
      /* ------------------------------------------------------------*/
      /* Save FSCTL data.*/
      /* ------------------------------------------------------------*/
  ;
  FL06M020.FBMFINFL = FBMREC.FBMFINFL; /* ds finish fl*/
  FL06M020.FBMCFFL = FBMREC.FBMCFFL; /* calc finish fl*/
  FL06M020.FBMALAFL = FBMREC.FBMALAFL; /* auto load acpt*/
  FL06M020.FBMFLRFL = FBMREC.FBMFLRFL;
                                   /* fcty load run fl*/
  FL06W00.FL06WIX1 = 1; /* General index 1*/
  while (FL06W00.FL06WIX1 <= 20)
    ;
    ;
    ;
    if (FBMREC.FBMPCD[FL06WIX1] != "  ")
      FL06M020.XPLCD[FL06WIX1] = FBMREC.FBMPCD[FL06WIX1];
                                   /* product line code*/
      ;
      FL06M020.FL06M-LN-ACPT-FL[FL06WIX1] = FBMREC.FBMPAFL[FL06WIX1];
                                   /* prdln finish fl*/
      ;
      FL06M020.FL06M-DRS-FNSH-FL[FL06WIX1] = FBMREC.FBMDSLNF[FL06WIX1];
                                   /* dirship ln finish*/
      ;
      if (FL06M020.XPLCD[FL06WIX1] in XPLTBL.XPLCD)
        if (XPLTBL.XGPCD[sysVar.arrayIndex] == "02")
          FL06M020.XPLSDESC[FL06WIX1] = XPLTBL.XPLSDESC[sysVar.arrayIndex];
                                   /* product line description*/
        else
          FL06M020.XPLSDESC[FL06WIX1] = "UNKNOWN";
        end
      else
        FL06M020.XPLSDESC[FL06WIX1] = "UNKNOWN";
      end
    end
    ;
    FL06W00.FL06WIX1 = FL06W00.FL06WIX1 + 1; /* Increment General index 1*/
  end
  ;
end // end FL06-21000

// Format and converse the map
Function FL06-22000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FLWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FL06M020.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FL06M020.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FL06M020.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FLWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FLWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FLWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FLWREC.XXXMSGNO);
      end /* Message number*/
    else
      FL06M020.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FL06M020.XXXMODID = FLWREC.XXXMODID; /* Module identification*/
    ;
    set FL06M020 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse FL06M020 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FLWREC.XXXMODID = " "; /* Module identification*/
  FLWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FL06M020.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FL06M020.CAITEM; /* Application data*/
  ;
  ;
end // end FL06-22000

// Check attention identifier
Function FL06-23000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    ;
    FL06W00.FL06WSWR = "Y"; /* Request for data switch*/
    ;
    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FL06M020.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      XSFLS01(); /* Exit to another application*/
      ;
      set FL06M010.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FLWREC.XXXMODID = "230"; /* Module identification*/
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* PF1 was pressed*/
   || converseVar.eventKey is pf3  /* or PF3 was pressed*/
   || converseVar.eventKey is pf4  /* or PF4 was pressed*/
   || converseVar.eventKey is pf5  /* or PF5 was pressed*/
   || converseVar.eventKey is pf7  /* or PF7 was pressed*/
   || converseVar.eventKey is pf8  /* or PF8 was pressed*/
   || converseVar.eventKey is pf12 /* or PF12 was pressed*/
   || converseVar.eventKey is pf13 /* or PF13 was pressed*/
  )                               
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "FL06M010"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf7 /* or PF7 was pressed*/
     || converseVar.eventKey is pf8 /* or PF8 was pressed*/
     || converseVar.eventKey is pf3) /* PF12 was pressed*/
      return;
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FL0A"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf5) /* PF5 was pressed*/
      COMMAREA.CATOAP = "FY0M"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FL0M"; /* TO application*/
    end
    ;
    XSFLS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   /* and PF1  was not pressed*/
   && converseVar.eventKey not pf3   /* and PF3  was not pressed*/
   && converseVar.eventKey not pf4   /* and PF4  was not pressed*/
   && converseVar.eventKey not pf5   /* and PF5  was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7  was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8  was not pressed*/
   && converseVar.eventKey not pf12  /* and PF12 was not pressed*/
   && converseVar.eventKey not pf13  /* and PF13 was not pressed*/
  )                                 
    FLWREC.XXXMODID = "230"; /* Module identification*/
    converseLib.validationFailed(3); /* Indicate invalid attention key*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      ;
      FL06WSWR = "Y"; /* Data is requested*/
      ;
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FL06-23000

// Reset highlighted fields
Function FL06-24000()
end // end FL06-24000

// Verify data that was entered
Function FL06-25000()
  FL06W00.FL06WIX1 = 15; /* General index 1*/
  while (FL06W00.FL06WIX1 >= 1)
    if (FL06M010.FL06MSEL[FL06WIX1] == "S") /* scheduler selected*/
      ;
      ;
      ;
      if (converseVar.eventKey is pf7 /* PF7 was pressed*/
       && FL06W00.FL06WIX1 == 1)     
        FLWREC.XXXMODID = "250"; /* Module identification*/
        converseLib.validationFailed(6); /* no more pages to display*/
      end
      ;
      ;
      ;
      if (converseVar.eventKey is pf8) /* PF8 was pressed*/
        if (FL06W00.FL06WIX1 == 15)
          FLWREC.XXXMODID = "250"; /* Module identification*/
          converseLib.validationFailed(7); /* no more pages to display*/
        end
        if (FL06W00.FL06WIX1 < 15)
          FL06W00.FL06WIX1 = FL06W00.FL06WIX1 + 1; /* Increment General index 1*/
          if (FL06M010.PG1SC4CD[FL06WIX1] == "  ") /* no data displayed*/
            FLWREC.XXXMODID = "250"; /* Module identification*/
            converseLib.validationFailed(7); /* no more pages to display*/
          end
          FL06W00.FL06WIX1 = FL06W00.FL06WIX1 - 1; /* Decrement General index 1*/
        end
      end
      ;
      ;
      ;
    end
    FL06W00.FL06WIX1 = FL06W00.FL06WIX1 - 1; /* Decrement General index 1*/
  end
  ;
        /* ---------------------------------------------------------------*/
        /* If any errors were found, exit to display the map*/
        /* ---------------------------------------------------------------*/
  if (converseVar.validationMsgNum != 0)
    exit stack;
  end
end // end FL06-25000

// Process valid input request
Function FL06-26000()
  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FL06W00.FL06WMAP-DISPLAY-SW = "1"; /* Show first map*/
    FL06W00.FL06WIX1 = 15; /* General index 1*/
    while (FL06W00.FL06WIX1 >= 1)
      FL06M010.FL06MSEL[FL06WIX1] = " "; /* item select*/
      FL06W00.FL06WIX1 = FL06W00.FL06WIX1 - 1; /* Decrement General index 1*/
    end
    return;
  end
  ;
  ;
  ;
  ;
  FL06W00.FL06WIX1 = 15; /* General index 1*/
  while (FL06W00.FL06WIX1 >= 1)
    if (FL06M010.FL06MSEL[FL06WIX1] == "S") /* scheduler selected*/
      if (converseVar.eventKey is pf7) /* PF7 was pressed*/
        FL06M010.FL06MSEL[FL06WIX1] = " "; /* item select*/
        FL06W00.FL06WIX1 = FL06W00.FL06WIX1 - 1;
        FL06M010.FL06MSEL[FL06WIX1] = "S"; /* item select*/
        return;
      end
      if (converseVar.eventKey is pf8) /* PF8 was pressed*/
        FL06M010.FL06MSEL[FL06WIX1] = " "; /* item select*/
        FL06W00.FL06WIX1 = FL06W00.FL06WIX1 + 1;
        FL06M010.FL06MSEL[FL06WIX1] = "S"; /* item select*/
        return;
      end
    end
    FL06W00.FL06WIX1 = FL06W00.FL06WIX1 - 1; /* Decrement General index 1*/
  end
  ;
end // end FL06-26000

//*** RECORD=FL06W00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FL06W00 type basicRecord
  10 FL06WSWF FL06WSWF ; 
  10 FL06WSWR FL06WSWR ; 
  10 FL06WSWC FL06WSWC ; 
  10 FL06WMAP-DISPLAY-SW FL06WMAP-DISPLAY-SW ; 
  10 FL06WIX1 FL06WIX1 ; 
  10 FL06W-NBR-SELECTED FL06W-NBR-SELECTED ; 
  10 FBMGROUP FBMGROUP [20] ; 
end // end FL06W00

// Number of map items selected
DataItem FL06W-NBR-SELECTED smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Map index
DataItem FL06WIX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// map display switch
DataItem FL06WMAP-DISPLAY-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of cursor switch
DataItem FL06WSWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem FL06WSWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem FL06WSWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

