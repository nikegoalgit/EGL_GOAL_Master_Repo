package fl0a;

import corpcom3.XPFL001;
import corpcom4.XSFLS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import fl.common.FLWREC;
import ta.common.TA1REC;
import ta.common.TA5REC;
//*** PROGRAM=FL0A ****
// This application is the main menu for the Factory Load
// system. The user must enter a number that corresponds
// to a valid option on the map. The application will then
// transfer to the application chosen.
// 
// The user may exit to any allowed application via FAST PATH
// or PF key at any time.
// 
//   DATE      NAME        DESCRIPTION OF CHANGE
// --------   ------       ------------------------------------
// 04/14/89   C. K. Newman  New application
// 12/23/92   LDELUH        Add new selection for FL02.
// *********************
Program FL0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FLWREC FLWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FL0AT {deleteAfterUse = yes}; // table
  use FL0AM.FL0AM010 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFL001: XPFL001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/
    ;
    set FL0AM010 initial; /* Initialize map output area*/
    set FLWREC empty; /* Initialize working storage*/
    COMMAREA.CAUSERA = FLWREC.FLWKEY;
    ;
    goto FL0A001; /* Converse Factory Load Menu*/
    ;
    ;
    FL0A001: FL0A001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/
    ;
    goto FL0A001; /* Converse Transportation Prototype*/
    ;
    ;
  end // end main
end // end FL0A

// Factory Load main menu
Function FL0A001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) display appropriate map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FL0A100(); /* Format and display the map*/
  ;
  FL0A200(); /* Check attention identifier*/
  ;
  FL0A300(); /* Reset fields to normal intensity*/
  ;
  FL0A400(); /* Verify the entered data*/
  ;
  FL0A500(); /* Process valid input request*/
  ;
  ;
end // end FL0A001

// Format and display the map
Function FL0A100()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set FL0AM010 alarm; /* Indicate sound alarm*/
    ;
  else
    set FL0AM010 initial; /* Clear map output area*/
    FL0AM010.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    ;
  end
  ;
  converse FL0AM010 ;
  ;
  ;
end // end FL0A100

// Check attention identifier
Function FL0A200()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  if (FL0AM010.CATOAP > " ") /* FAST PATH was requested*/
    if (FL0AM010.FL0AMSEL <= 0) /* selection not entered*/
      ;
      if (converseVar.eventKey is enter) /* ENTER was pressed*/
        ;
        COMMAREA.CATOAP = FL0AM010.CATOAP; /* TO application*/
        COMMAREA.CAITEM = FL0AM010.CAITEM; /* Application data*/
        ;
        XSFLS01(); /* Exit to another application*/
        FL0AM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* If bad transfer*/
        exit stack;
        ;
      else
        ;
        converseLib.validationFailed(44); /* Indicate invalid application*/
        ;
      end
      ;
      set FL0AM010.CATOAP cursor, modified, bold; /* Highlight*/
      ;
      FL0AM010.XXXMODID = "200"; /* Process name*/
      converseLib.validationFailed(44); /* Indicate invalid application*/
      exit stack; /* Exit to redisplay map*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    COMMAREA.CATOAP = "FL0A"; /* selection criteria*/
    XSFLS01();
    FL0AM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* if bad transfer*/
    exit stack; /* return to show error msg*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If PF1 is pressed, go to HELP screen*/
   /* If PF3 is pressed, go to Footwear Buy Menu*/
   /* If PF4 is pressed, go to Main Menu*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4 /* pf4 was pressed*/
   || converseVar.eventKey is pf5) /* pf5 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "FL0AM010"; /* APPLICATION FIND CODE*/
    end
    ;
    XSFLS01();
    exit stack;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If PF3 is pressed, go to Footwear Buy Menu*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf3) /* pf3 was pressed*/
    ;
    COMMAREA.CATOAP = "FY0M";
    XSFLS01();
    exit stack;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If PF12 is pressed, go to Control Menu*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf12) /* pf12 was pressed*/
    ;
    COMMAREA.CATOAP = "FL0L";
    XSFLS01();
    exit stack;
    ;
  end
  ;
  if (converseVar.eventKey is pf13) /* pf13 was pressed*/
    ;
    COMMAREA.CATOAP = "FL06";
    XSFLS01();
    exit stack;
    ;
  end
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FL0AM010.XXXMODID = "200"; /* Process name*/
    converseLib.validationFailed(3); /* Indicate invalid attention key*/
    ;
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      ;
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      ;
    end
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  if (converseVar.eventKey is enter) /* enter was pressed*/
    return; /* return to previous process*/
  end
  ;
  converseLib.validationFailed(3); /* Indicate PF key not valid*/
  set FL0AM010.CATOAP cursor, modified, bold; /* Highlight*/
  FL0AM010.XXXMODID = "200"; /* Process name*/
  ;
  ;
end // end FL0A200

// Reset highlighted fields
Function FL0A300()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set FL0AM010.FL0AMSEL initialAttributes; /* Selection field*/
  set FL0AM010.CATOAP initialAttributes; /* Commarea TO application*/
  set FL0AM010.CAITEM initialAttributes; /* Commarea application data*/
  ;
  ;
end // end FL0A300

// Verify the entered data
Function FL0A400()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (FL0AM010.CAITEM > " ") /* Application data was entered*/
    ;
    set FL0AM010.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(40); /* Enter only with FAST PATH*/
    FL0AM010.XXXMODID = "400"; /* Process name*/
    ;
  end
  ;
  if (FL0AM010.CATOAP > " ") /* Application data was entered*/
    if (FL0AM010.FL0AMSEL > 0) /* menu selection was entered*/
      converseLib.validationFailed(123); /* 'selection invalid with fast path'*/
      FL0AM010.XXXMODID = "400"; /* module identification*/
      exit stack;
    end
  end
  ;
  if (FL0AM010.FL0AMSEL > 0) /* Menu selection was entered*/
    ;
    FL0A410(); /* Verify the menu selection*/
    ;
  end
  ;
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
end // end FL0A400

// Verify the menu selection
Function FL0A410()
   /* ------------------------------------------------------------*/
   /* Verify the menu selection against the selection table.*/
   /* Return an error message if the selection is not found.*/
   /* ------------------------------------------------------------*/
  ;
  if (FL0AM010.FL0AMSEL in FL0AT.FL0AMSEL)
    return;
  end /* Verify selection*/
  ;
  set FL0AM010.FL0AMSEL cursor, modified, bold; /* Highlight*/
  ;
  ;
  ;
  converseLib.validationFailed(10); /* Indicate invalid selection*/
  FL0AM010.XXXMODID = "410"; /* Process name*/
  ;
  ;
end // end FL0A410

// Process valid input request
Function FL0A500()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* If the request failed, display the returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  if (FL0AM010.FL0AMSEL > 0) /* Menu selection was entered*/
    ;
    COMMAREA.CATOAP = FL0AT.CATOAP[sysVar.arrayIndex]; /* TO application*/
    ;
  end
  ;
  XSFLS01(); /* Exit to another application*/
  COMMAREA.CAITEM = " ";
  ;
  if (COMMAREA.CASECRC == 3 /* Application not found*/
   || COMMAREA.CASECRC == 4) /* or transfer not allowed*/
    ;
    converseLib.validationFailed(25); /* Indicate not allowed*/
  else
    converseLib.validationFailed(1); /* Indicate system error*/
    ;
  end
  ;
  ;
end // end FL0A500

