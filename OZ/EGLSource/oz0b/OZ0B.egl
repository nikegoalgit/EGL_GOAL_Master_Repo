package oz0b;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPOZ-00001;
import corpcom3.XPXGP01;
import corpcom3.XPXOT01;
import corpcom3.XPXX001;
import corpcom4.XSOZ-S0001;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpx1.XGPTBL;
import corpx1.XOTTBL;
import corpx1.XSETBL;
import op.common.OPJREC;
import oz.common.OZWREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VOCROT01;

//*** PROGRAM=OZ0B ****
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      06/04/97  dsmit0  New application.
// #1030    07/30/98  UDAFON  Added PF13 on screen.
//          08/14/98  UDAFON  Checked correct century for
//                            current date.
// *********************
Program OZ0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OZ00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  OPJREC OPJREC; // record
  OZ0BW00 OZ0BW00; // record
  OZ0BW01 OZ0BW01; // record
  OZ0BW02 OZ0BW02; // record
  OZWREC OZWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VOCROT01 VOCROT01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use XOTTBL {deleteAfterUse = yes}; // table
  use OZ0BM.OZ0BM001, // form
  OZ0BM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPOZ-00001: XPOZ-00001();
    /* ------------------------------------------------------------*/
    /* Initialize working storage and display storage areas.*/
    /* ------------------------------------------------------------*/

    set OZ0BM001 initial; /* M001 input/output*/
    set OZ0BW00 empty; /* Working storage*/
    set OZ0BW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    OZ0BW00.OZ0BW-SWD = "1"; /* Map to be displayed switch*/
    OZ0BW00.OZ0BW-SWF = "Y"; /* Format the map switch*/
    OZ0BW00.OZ0BW-SWR = "N"; /* Request for data switch*/
  
    if (OZWREC.OZW-APPIDX == 0)
      OZWREC.OZW-APPIDX = 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0A";
    end
  
    /* ------------------------------------------------------------*/
    /* If data was passed in the COMMAREA, use as the initial key.*/
    /* ------------------------------------------------------------*/

    if (COMMAREA.CAITEM > " ") /* Data was passed*/

      COMMAREA.CAITEM = " "; /* Clear passed data*/

      OZ0BW00.OZ0BW-SWR = "Y"; /* Request for data switch*/

    end

    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OZ0B-00000; /* Converse the main process*/


    OZ0B-00000: OZ0B-00000();
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OZ0B-00000; /* Converse the main process*/


  end // end main
end // end OZ0B


// Main process to display a map
Function OZ0B-00000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) If specified, display the first map.*/
  /* 2) Otherwise, if specified, display the second map, depending*/
  /* on function = add or change*/
  /* 3) Otherwise, indicate error and exit to Application Menu.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  if (OZ0BW00.OZ0BW-SWD == "1") /* Map 1 was requested*/

    OZ0B-10000(); /* Display map 1*/

  else

      /* ------------------------------------------------------------*/
      /* Write the error to the Error Diagnosis Reporting Facility.*/
      /* ------------------------------------------------------------*/

    OZWREC.XXXPRCNM = "00000"; /* Module identification*/
    OZWREC.XXXMSGNO = 10; /* Unexpected error occurred*/

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";
    TA1REC.TA1MAPNO = OZ0BW00.OZ0BW-SWD; /* Map number*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/

    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      /* ------------------------------------------------------------*/
      /* Exit to display the application system menu.*/
      /* ------------------------------------------------------------*/

    COMMAREA.CATOAP = "KS0A"; /* TO application*/

    XSOZ-S0001(); /* Exit to another application*/

      /* ------------------------------------------------------------*/
      /* Abnormally terminate the transaction if the exit failed.*/
      /* ------------------------------------------------------------*/

    TA1REC.TA1FUNC = "ABND"; /* Termination function*/

    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end



end // end OZ0B-00000


// List the rows in the table
Function OZ0B-10000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Obtain the data to display.*/
  /* 2) Format the map output area and display the map.*/
  /* 3) Check the attention identifier used to respond.*/
  /* 4) Reset highlighted fields to normal intensity.*/
  /* 5) Verify the data that was entered.*/
  /* 6) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0B-11000(); /* Obtain the data to display*/

  OZ0B-12000(); /* Format and display the map*/

  OZ0B-13000(); /* Check attention identifier*/

  OZ0B-14000(); /* Reset fields to normal intensity*/

  OZ0B-15000(); /* Verify the entered data*/

  OZ0B-16000(); /* Process valid input request*/


end // end OZ0B-10000


// Obtain the data to display
Function OZ0B-11000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/

  if (OZ0BW00.OZ0BW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/

  OZ0BW00.XXXTSLEN = 600; /* temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0BW00.XXXTSPAG == 0) /* no pages established*/
    OZ0BW00.XXXTSPAG = 1; /* Page number to display*/
  end

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/

  OZ0B-11100(); /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Select and open the cursor for the set to be formatted.*/
  /* ------------------------------------------------------------*/

  OZ0B-11300(); /* Select set and open cursor*/

  /* ------------------------------------------------------------*/
  /* Fetch and format the data into pages until end of cursor.*/
  /* ------------------------------------------------------------*/

  OZ0BW00.OZ0BW-IXM = 1; /* Display line index*/
  OZ0BW00.OZ0BW-SWC = "N"; /* End of cursor switch*/

  while (OZ0BW00.OZ0BW-SWC == "N") /* Until end of cursor*/

    OZ0B-11400(); /* Fetch next row in the cursor*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (OZ0BW00.OZ0BW-SWC == "N") /* Not end of cursor*/
      OZ0B-11500(); /* Save data in display storage*/
    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (OZ0BW00.OZ0BW-IXM > 13) /* Page is full*/

      OZ0B-11600(); /* Add page to temporary storage*/

      OZ0BW00.OZ0BW-IXM = 1; /* Display line index*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Add any partially formatted last page to the queue.*/
  /* ------------------------------------------------------------*/

  if (OZ0BW00.OZ0BW-IXM > 1) /* Page was formatted*/
    OZ0B-11600(); /* Add page to temporary storage*/
  end

  /* ------------------------------------------------------------*/
  /* Close the cursor for the selected set.*/
  /* ------------------------------------------------------------*/

  OZ0B-11700(); /* Close the selected set cursor*/

  /* ------------------------------------------------------------*/
  /* If no pages were formatted, indicate no data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0BW00.TA5TSQIX == 0) /* No pages formatted*/

    OZWREC.XXXPRCNM = "11000"; /* Module identification*/
    OZWREC.XXXMSGNO = 16; /* No data was found to display*/
    set OZ0BM001.OZ0BMSEL[1] cursor; /* cursor*/
    OZ0BM001.OZ0BMSEL[1] = " "; /* reset select field*/
    set OZ0BM001.OZ0BMSEL[1] skip;

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/

  OZ0BW00.OZ0BW-SWR = "N"; /* Request for data switch*/


end // end OZ0B-11000


// Purge any temporary storage
Function OZ0B-11100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/

  set OZ0BW01 empty; /* M001 display storage*/

  OZ0BW00.OZ0BW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0BW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "11100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0B-11100


// Select set and open cursor
Function OZ0B-11300()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set VOCROT01 empty; /* Clear row storage area*/

  VOCROT01.XGPCD = OZ0BM001.OZ0BM-XGPCD;
  VOCROT01.XOTCD = OZ0BM001.OZ0BM-XOTCD;

  try
    call "VOCROT01" ("S1", SQLCA, VOCROT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/

      return; /* Return to previous process*/
    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCROT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCROT01.XOTCD; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0B-11300


// Fetch next row in the cursor
Function OZ0B-11400()
  /* ------------------------------------------------------------*/
  /* Fetch the next row to display from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCROT01" ("N1", SQLCA, VOCROT01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      OZ0BW00.OZ0BW-SWC = "Y"; /* Indicate end of cursor*/

      return; /* Return to previous process*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11400"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCROT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCROT01.XOTCD; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0B-11400


// Save data in display storage
Function OZ0B-11500()
  /* ------------------------------------------------------------*/
  /* Save the data from the table row in display storage.*/
  /* ------------------------------------------------------------*/

  OZ0BW01.OZ0BW-SOCD-CUST-NEED-BDT[OZ0BW-IXM] = VOCROT01.SOCD-CUST-NEED-BDT;
  OZ0BW01.OZ0BW-SOCD-CUST-NEED-XDT[OZ0BW-IXM] = VOCROT01.SOCD-CUST-NEED-XDT;

  OZ0B-11510();

  OZ0BW01.OZ0BW-OP-CUST-CUTOFF-DT[OZ0BW-IXM] = OPJREC.OPJCUTDT;

  OZ0BW01.OZ0BW-OCD-REL-DT[OZ0BW-IXM] = VOCROT01.OCD-REL-DT;
  OZ0BW01.OZ0BW-XXX-STAT[OZ0BW-IXM] = VOCROT01.XXX-STAT;

  if (VOCROT01.XXX-STAT == "I")
    OZ0BW01.OZ0BW-XXX-STAT-DESC[OZ0BW-IXM] = "INACTIVE";
  else
    OZ0BW01.OZ0BW-XXX-STAT-DESC[OZ0BW-IXM] = "ACTIVE";
    OZ0BW01.OZ0BW-XXX-STAT[OZ0BW-IXM] = "A";
  end

  OZ0BW01.OZ0BW-ZZZSDT[OZ0BW-IXM] = VOCROT01.ZZZSDT;
  OZ0BW01.OZ0BW-ZZZSDTM[OZ0BW-IXM] = VOCROT01.ZZZSDTM;
  OZ0BW01.OZ0BW-ZZZCHGDT[OZ0BW-IXM] = VOCROT01.ZZZCHGDT;
  OZ0BW01.OZ0BW-ZZZCHGTM[OZ0BW-IXM] = VOCROT01.ZZZCHGTM;
  OZ0BW01.OZ0BW-ZZZCHGCT[OZ0BW-IXM] = VOCROT01.ZZZCHGCT;

  OZ0BW00.OZ0BW-IXM = OZ0BW00.OZ0BW-IXM + 1; /* Increment index*/
end // end OZ0B-11500


// call io2560
Function OZ0B-11510()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set OPJREC empty; /* Clear row storage area*/

  OPJREC.XOTCD = OZ0BM001.OZ0BM-XOTCD;
  OPJREC.OPJCNDTB = VOCROT01.SOCD-CUST-NEED-BDT;
  OPJREC.OPJCNDTX = VOCROT01.SOCD-CUST-NEED-XDT;

  try
    call "IO2560" ("S ", SQLCA, OPJREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0    /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100 /* and normal return code*/
    )                              
      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11510"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "OPJREC"; /* Table view name*/
  TA1REC.TA1TBLKE = OPJREC.OPJRECKY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0B-11510


// Add page to temporary storage
Function OZ0B-11600()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OZ0BW01.XXXTSLEN = OZ0BW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OZ0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OZ0BW01 empty; /* M001 display storage*/

    OZ0BW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "11600"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0B-11600


// Close selected set cursor
Function OZ0B-11700()
  /* ------------------------------------------------------------*/
  /* Close the selected set of table rows.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCROT01" ("C1", SQLCA, VOCROT01) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11700"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCROT01"; /* Table view name*/

  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0B-11700


// Format and converse the map
Function OZ0B-12000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0BW00.OZ0BW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OZ0BW00.OZ0BW-SWF == "Y") /* Map must be formatted*/
      OZ0B-12100(); /* Format the data on the map*/
    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZ0BM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  OZ0BW00.OZ0BW-CDT = VGVar.currentShortGregorianDate; /* Current date*/

  OZ0BM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0BM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OZWREC.XXXMSGNO != 0) /* Message to display*/

      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0BM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OZ0BM001.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/

    set OZ0BM001 alarm; /* Indicate sound alarm*/

  end

  converse OZ0BM001 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  OZ0BW00.OZ0BW-SFN = " "; /* reset function switch*/
   /* reset saved page*/
  OZ0BW00.OZ0BW-SAVE-PAGE = 0;
  COMMAREA.CATOAP = OZ0BM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0BM001.CAITEM; /* Application data*/
end // end OZ0B-12000


// Format the display data
Function OZ0B-12100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/
  OZ0BW00.OZ0BW-SV-GPC = OZ0BM001.OZ0BM-XGPCD;
  OZ0BW00.OZ0BW-SV-GPCDESC = OZ0BM001.OZ0BM-XGPDESC;
  OZ0BW00.OZ0BW-SV-XOT = OZ0BM001.OZ0BM-XOTCD;
  OZ0BW00.OZ0BW-SV-XOTDESC = OZ0BM001.OZ0BM-XOTDESC;

  if (converseVar.validationMsgNum == 0)
    set OZ0BM001 initial; /* M001 input/output area*/
  end

  OZ0BW00.OZ0BW-SWF = "N"; /* Format the map switch*/

  /* ------------------------------------------------------------*/

  if (OZ0BW00.OZ0BW-SAVE-PAGE != 0) /* if page saved off*/

    OZ0BW00.XXXTSPAG = OZ0BW-SAVE-PAGE; /* use saved page*/

    OZ0B-12110(); /* Obtain temporary storage page*/

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set OZ0BM001.XXXLITPG skip; /* "PAGE" literal*/
    OZ0BM001.XXXTSPAG = OZ0BW00.XXXTSPAG; /* Current page*/
    set OZ0BM001.XXXLITOF skip; /* "OF" literal*/
    OZ0BM001.TA5TSQIX = OZ0BW00.TA5TSQIX; /* Highest page*/

  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/

  else
    if (OZ0BW00.TA5TSQIX > 0) /* Pages were formatted*/

      if (OZ0BW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/

        if (OZ0BW00.OZ0BW-SWU == "Y") /* Current page was changed*/

          OZ0B-12120(); /* Update temporary storage page*/

          OZ0BW00.OZ0BW-SWU = "N"; /* Storage update switch*/

        end

        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/

        if (OZ0BW00.XXXTSPAG > OZ0BW00.TA5TSQIX) /* Desired greater highest*/
          OZ0BW00.XXXTSPAG = OZ0BW00.TA5TSQIX; /* Default to highest*/
        end

        OZ0B-12110(); /* Obtain temporary storage page*/

      end

      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/

      set OZ0BM001.XXXLITPG skip; /* "PAGE" literal*/
      OZ0BM001.XXXTSPAG = OZ0BW00.XXXTSPAG; /* Current page*/
      set OZ0BM001.XXXLITOF skip; /* "OF" literal*/
      OZ0BM001.TA5TSQIX = OZ0BW00.TA5TSQIX; /* Highest page*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the data in the map from the display storage.*/
  /* ------------------------------------------------------------*/
  OZ0BM001.OZ0BM-XGPCD = OZ0BW00.OZ0BW-SV-GPC;
  OZ0BM001.OZ0BM-XGPDESC = OZ0BW00.OZ0BW-SV-GPCDESC;
  OZ0BM001.OZ0BM-XOTCD = OZ0BW00.OZ0BW-SV-XOT;
  OZ0BM001.OZ0BM-XOTDESC = OZ0BW00.OZ0BW-SV-XOTDESC;

  if (OZ0BM001.OZ0BMSEL[1] == " ") /* NO ERROR*/
    OZ0BW00.OZ0BW-IXM = 1; /* Initialize map index*/
    while (OZ0BW00.OZ0BW-IXM < 14) /* Until screen is full or*/

      OZ0BM001.OZ0BMSEL[OZ0BW-IXM] = OZ0BW01.OZ0BW-SEL[OZ0BW-IXM];
  /*  */
      OZ0BW00.OZ0BW-B4DT-NUM = OZ0BW01.OZ0BW-SOCD-CUST-NEED-BDT[OZ0BW-IXM];

      if (OZ0BW00.OZ0BW-B4DT-CHAR == "000000")
        OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[OZ0BW-IXM] = "      ";
      else
        OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[OZ0BW-IXM] = OZ0BW00.OZ0BW-B4DT-CHAR;
      end

  /*  */
      OZ0BW00.OZ0BW-AFTDT-NUM = OZ0BW01.OZ0BW-SOCD-CUST-NEED-XDT[OZ0BW-IXM];

      if (OZ0BW00.OZ0BW-AFTDT-CHAR == "000000")
        OZ0BM001.OZ0BM-SOCD-CUST-NEED-XDT[OZ0BW-IXM] = "      ";
      else
        OZ0BM001.OZ0BM-SOCD-CUST-NEED-XDT[OZ0BW-IXM] = OZ0BW00.OZ0BW-AFTDT-CHAR;
      end

  /*  */
      OZ0BW00.OZ0BW-CUTDT-NUM = OZ0BW01.OZ0BW-OP-CUST-CUTOFF-DT[OZ0BW-IXM];

      if (OZ0BW00.OZ0BW-CUTDT-CHAR == "000000")
        OZ0BM001.OZ0BM-OP-CUST-CUTOFF-DT[OZ0BW-IXM] = "      ";
      else
        OZ0BM001.OZ0BM-OP-CUST-CUTOFF-DT[OZ0BW-IXM] = OZ0BW00.OZ0BW-CUTDT-CHAR;

      end
  /*  */
      OZ0BW00.OZ0BW-ORDDT-NUM = OZ0BW01.OZ0BW-OCD-REL-DT[OZ0BW-IXM];

      if (OZ0BW00.OZ0BW-ORDDT-CHAR == "000000")
        OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM] = "      ";
      else
        OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM] = OZ0BW00.OZ0BW-ORDDT-CHAR;
      end

      OZ0BM001.OZ0BM-XXX-STAT[OZ0BW-IXM] = OZ0BW01.OZ0BW-XXX-STAT[OZ0BW-IXM];
      OZ0BM001.OZ0BM-XXX-STAT-DESC[OZ0BW-IXM] = OZ0BW01.OZ0BW-XXX-STAT-DESC[OZ0BW-IXM];

  /*  */
      if (OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[OZ0BW-IXM] == " ")
        set OZ0BM001.OZ0BMSEL[OZ0BW-IXM] noHighLight, skip;
        set OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[OZ0BW-IXM] noHighLight, skip;
        set OZ0BM001.OZ0BM-SOCD-CUST-NEED-XDT[OZ0BW-IXM] noHighLight, skip;
        set OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM] noHighLight, skip;
        set OZ0BM001.OZ0BM-XXX-STAT[OZ0BW-IXM] noHighLight, skip;
        OZ0BM001.OZ0BM-XXX-STAT[OZ0BW-IXM] = " ";
        OZ0BM001.OZ0BM-XXX-STAT-DESC[OZ0BW-IXM] = " ";
      end

  /*  */
      if (COMMAREA.CACHGFL == "N")
        set OZ0BM001.OZ0BMSEL[OZ0BW-IXM] noHighLight, skip;
        set OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[OZ0BW-IXM] noHighLight;
        set OZ0BM001.OZ0BM-SOCD-CUST-NEED-XDT[OZ0BW-IXM] noHighLight;
        set OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM] noHighLight, skip;
        set OZ0BM001.OZ0BM-XXX-STAT[OZ0BW-IXM] noHighLight, skip;
      end

  /*  */
      OZ0BW00.OZ0BW-IXM = OZ0BW00.OZ0BW-IXM + 1;
                                   /* Increment map index*/

    end
  end


end // end OZ0B-12100


// Read temporary storage page
Function OZ0B-12110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OZ0BW01.XXXTSLEN = OZ0BW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = OZ0BW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OZ0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "12100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0B-12110


// Update temporary storage page
Function OZ0B-12120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (OZ0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "12120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0B-12120


// Check attention identifier
Function OZ0B-13000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0BW00.OZ0BW-SWR == "Y") /* Request for data*/
      set OZ0BW01 empty; /* M001 display storage*/
    end

    OZ0BW00.OZ0BW-SWF = "Y"; /* Format the map switch*/
    OZ0BW00.OZ0BW-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/
  if (OZ0BM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0B")
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
        OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0B";
      end

      OZ0B-11100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0BM001.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid attention identifier was used to*/
  /* invoke the transaction.  Display an error message to the*/
  /* user if the PF key used is not supported.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   /* and PF1 was not pressed*/
   && converseVar.eventKey not pf3   /* and PF3 was not pressed*/
   && converseVar.eventKey not pf4   /* and PF4 was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf13) /* and PF13 was not pressed*/

    OZWREC.XXXPRCNM = "13000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  else

    if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0B")
      OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0B";
    end

  end

  /* ------------------------------------------------------------*/
  /* If HELP, exit to the previous level or exit to the Master*/
  /* Menu was requested, exit to another application.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      if (OZWREC.OZW-APPIDX > 1)
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX - 1;

        if (OZWREC.OZW-APPL[OZW-APPIDX] > "    ")
          COMMAREA.CATOAP = OZWREC.OZW-APPL[OZW-APPIDX];
        else
          COMMAREA.CATOAP = "OZ0A";
        end

      else
        COMMAREA.CATOAP = COMMAREA.CAFROMAP;
      end

    end

    OZ0B-11100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* PF13 - ADD*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf13) /* PF13 WAS PRESS*/
    if (COMMAREA.CACHGFL == "N")
      converseLib.validationFailed(74); /* NO AUTHORITY*/
      OZ0BW00.OZ0BW-SWR = "N";
      exit stack;
    else
      OZ0BW00.OZ0BW-SWR = "Y"; /* REQUEST FOR DATA SWITCH*/
      OZ0BW00.OZ0BW-SWF = "Y"; /* REQUEST FOR DATA SWITCH*/
    end
  end
  /*  */
  /* ------------------------------------------------------------*/
  /* enter*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter)

    OZ0BW00.OZ0BW-SWR = "Y"; /* Request for data switch*/
    OZ0BW00.OZ0BW-SWF = "Y"; /* Request for data switch*/

  end

end // end OZ0B-13000


// Reset highlighted fields
Function OZ0B-14000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/

  OZ0BW00.OZ0BW-IXM = 1; /* Initialize line index*/

  if (COMMAREA.CACHGFL == "Y")
    while (OZ0BW00.OZ0BW-IXM < 14 /* * Until end of lines*/
    )
      set OZ0BM001.OZ0BMSEL[OZ0BW-IXM] normal; /* Reset select flag*/
      set OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM] normal;
      set OZ0BM001.OZ0BM-XXX-STAT[OZ0BW-IXM] normal;

      OZ0BW00.OZ0BW-IXM = OZ0BW00.OZ0BW-IXM + 1; /* Increment line index*/

    end
  end

  set OZ0BM001.CATOAP initialAttributes; /* TO application*/
  set OZ0BM001.CAITEM initialAttributes; /* Application data*/

   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (OZ0BM001.OZ0BM-XGPCD == "?" /* if any ? entered*/
  )                              
    XPXX001(); /* perform pop-up window initialize*/
    XX0XW02.XX0XWHDR = "                   GPC       "; /* heading*/

    while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
      XPXGP01(); /* perform gpc window*/
    end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code and description to the map.                     **/
       /* **********************************************************/

    if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
      OZ0BM001.OZ0BM-XGPCD = XGPTBL.XGPCD[XX0XWPIX];
      OZ0BM001.OZ0BM-XGPDESC = XGPTBL.XGPDESC[XX0XWPIX];
      set OZ0BM001.OZ0BM-XOTCD cursor;
    else
      OZ0BM001.OZ0BM-XGPCD = " "; /* clear fields*/
      set OZ0BM001.OZ0BM-XGPCD cursor; /* put cursor on gpc cd*/
      OZ0BM001.OZ0BM-XGPDESC = " "; /* clear description*/
    end



    converseLib.clearScreen();
     /* restore the original map*/

    OZ0BW00.OZ0BW-SWR = "N"; /* no to request for data*/
    OZ0BW00.OZ0BW-SWF = "N"; /* no to format map*/

    exit stack; /* go display map*/

  end


  if (OZ0BM001.OZ0BM-XOTCD == "?" /* if any ? entered*/
  )                              
    XPXX001(); /* perform pop-up window initialize*/
    XX0XW02.XX0XWHDR = "                   XOT       "; /* heading*/

    while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
      XPXOT01(); /* perform gpc window*/
    end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code and description to the map.                     **/
       /* **********************************************************/

    if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
      OZ0BM001.OZ0BM-XOTCD = XOTTBL.XOTCD[XX0XWPIX];
      OZ0BM001.OZ0BM-XOTDESC = XOTTBL.XOTDESC[XX0XWPIX];
      set OZ0BM001.OZ0BM-XOTCD cursor;
    else
      OZ0BM001.OZ0BM-XOTCD = " "; /* clear fields*/
      set OZ0BM001.OZ0BM-XOTCD cursor; /* put cursor on gpc cd*/
      OZ0BM001.OZ0BM-XOTDESC = " "; /* clear description*/
    end



    converseLib.clearScreen();
     /* restore the original map*/

    OZ0BW00.OZ0BW-SWR = "N"; /* no to request for data*/
    OZ0BW00.OZ0BW-SWF = "N"; /* no to format map*/

    exit stack; /* go display map*/

  end


end // end OZ0B-14000


// Verify data that was entered
Function OZ0B-15000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (OZ0BM001.CAITEM > " ") /* Application data was entered*/

    OZWREC.XXXPRCNM = "15000"; /* Module identification*/
    set OZ0BM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end


  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    OZ0B-15100(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the line.*/
    /* ------------------------------------------------------------*/

    if (converseVar.eventKey is enter /* Enter was pressed*/
     || converseVar.eventKey is pf13)

      OZ0B-15200(); /* Verify data in the line*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end


end // end OZ0B-15000


// Verify scroll request
Function OZ0B-15100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OZ0BW00.XXXTSPAG < 2)       /* and no previous pages*/

    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OZ0BW00.XXXTSPAG >= OZ0BW00.TA5TSQIX) /* and no more pages*/

    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate an error for any data that was modified.*/
  /* ------------------------------------------------------------*/

  OZ0BW00.OZ0BW-IXM = 1; /* Initialize line index*/

  while (OZ0BW00.OZ0BW-IXM < 14) /* Until end of lines*/

    if (OZ0BM001.OZ0BMSEL[OZ0BW-IXM] != OZ0BW01.OZ0BW-SEL[OZ0BW-IXM])

      OZWREC.XXXPRCNM = "15100"; /* Module identification*/
      set OZ0BM001.OZ0BMSEL[OZ0BW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(14); /* Field may not change*/

    end

    OZ0BW00.OZ0BW-IXM = OZ0BW00.OZ0BW-IXM + 1; /* Decrement line number*/

  end


end // end OZ0B-15100


// Verify data in the line
Function OZ0B-15200()
  /* ----------- Added correct century for Current Date ------*/
  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    OZ0BW00.OZ0BW-CDT = TA2REC.TA2GRGG;
  else
    OZWREC.XXXPRCNM = "15200"; /* Module identification*/
    set OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM] cursor, bold;
    converseLib.validationFailed(10); /* date invalid*/
    OZ0BW00.OZ0BW-SWF = "N";
    return;
  end
  /* ---------------------------------------------------------*/

  if (OZ0BM001.OZ0BM-XGPCD > "  ")
    if (OZ0BM001.OZ0BM-XGPCD in XGPTBL.XGPCD)
      OZ0BM001.OZ0BM-XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      set OZ0BM001.OZ0BM-XGPCD initialAttributes;
    else
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0BM001.OZ0BM-XGPCD cursor, bold;
      OZ0BM001.OZ0BM-XGPDESC = " ";
      OZ0BW00.OZ0BW-SWF = "N";
      converseLib.validationFailed(22); /* xgp cd invalid*/
      return;
    end
  else
    OZWREC.XXXPRCNM = "15200"; /* Module identification*/
    set OZ0BM001.OZ0BM-XGPCD cursor, bold;
    OZ0BM001.OZ0BM-XGPDESC = " ";
    OZ0BW00.OZ0BW-SWF = "N";
    converseLib.validationFailed(22); /* xgp cd invalid*/
    return;
  end

  if (OZ0BM001.OZ0BM-XOTCD > "  ")
    if (OZ0BM001.OZ0BM-XOTCD in XOTTBL.XOTCD)
      OZ0BM001.OZ0BM-XOTDESC = XOTTBL.XOTDESC[sysVar.arrayIndex];
      set OZ0BM001.OZ0BM-XOTCD initialAttributes;
    else
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0BM001.OZ0BM-XOTCD cursor, bold;
      OZ0BM001.OZ0BM-XOTDESC = " ";
      OZ0BW00.OZ0BW-SWF = "N";
      converseLib.validationFailed(29); /* xot cd invalid*/
      return;
    end
  else
    OZWREC.XXXPRCNM = "15200"; /* Module identification*/
    set OZ0BM001.OZ0BM-XOTCD cursor, bold;
    OZ0BM001.OZ0BM-XOTDESC = " ";
    OZ0BW00.OZ0BW-SWF = "N";
    converseLib.validationFailed(29); /* xot cd invalid*/
    return;
  end


  /* ------------------------------------------------------------*/
  /* If selection was entered and is not an "S", indicate that*/
  /* only "S" may be entered to select a line.*/
  /* ------------------------------------------------------------*/

  OZ0BW00.OZ0BW-IXM = 1; /* initialize index*/

  while (OZ0BW00.OZ0BW-IXM < 14) /* until end of lines*/

    if (OZ0BM001.OZ0BMSEL[OZ0BW-IXM] == "C")

  /* -------------------------------------------------------------*/
      if (OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM] > 0)
        /* continue*/
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM] cursor, bold;
        converseLib.validationFailed(30); /* date invalid*/
        OZ0BW00.OZ0BW-SWF = "N";
        return;
      end

  /* -------------------------------------------------------------*/
      if (OZ0BM001.OZ0BM-XXX-STAT[OZ0BW-IXM] == "A" || 
      OZ0BM001.OZ0BM-XXX-STAT[OZ0BW-IXM] == "I")
        /* continue*/
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM] cursor, bold;
        converseLib.validationFailed(17); /* date invalid*/
        OZ0BW00.OZ0BW-SWF = "N";
        return;
      end

  /* -------------------------------------------------------------*/
      if (OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM] is modified)

        set TA2REC empty;
        TA2REC.TA2DTOPT = "GREGGREG";
        TA2REC.TA2GRTYP = "E";
        TA2REC.TA2GRGE = OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM];

        call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

        if (TA2REC.TA2RTNCD == 0)
          /* next sentence;*/
        else
          OZWREC.XXXPRCNM = "15200"; /* Module identification*/
          set OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM] cursor, bold;
          converseLib.validationFailed(30); /* date invalid*/
          OZ0BW00.OZ0BW-SWF = "N";
          return;
        end

      end
    end

  /* -------------------------------------------------------------*/

    if (OZ0BM001.OZ0BMSEL[OZ0BW-IXM] == " "
     || OZ0BM001.OZ0BMSEL[OZ0BW-IXM] == "C"
     || OZ0BM001.OZ0BMSEL[OZ0BW-IXM] == "A")
                                  /* continue*/
    else
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0BM001.OZ0BMSEL[OZ0BW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(14); /* Only ' ' or 'c' may be entered*/
      OZ0BW00.OZ0BW-SWF = "N";
      return;

    end

  /* -------------------------------------------------------------*/
    if (OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM] not modified
     && OZ0BM001.OZ0BM-XXX-STAT[OZ0BW-IXM] not modified
    ) /* continue*/
    else
      if (OZ0BM001.OZ0BMSEL[OZ0BW-IXM] != "C"
       && OZ0BM001.OZ0BMSEL[OZ0BW-IXM] != "A")
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0BM001.OZ0BMSEL[OZ0BW-IXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(14); /* select invalid*/
        OZ0BW00.OZ0BW-SWF = "N";
        return;
      end
    end

  /* ----------------------  UDAFON  -----------------------------*/
    if (OZ0BM001.OZ0BMSEL[1] == "A")
      if (OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[1] != " ")
        /* continue*/
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[1] cursor, bold;
        converseLib.validationFailed(30); /* date invalid*/
        OZ0BW00.OZ0BW-SWF = "N";
        OZ0BW00.OZ0BW-ERR-PF13 = "Y";
        return;
      end

      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "E";
      TA2REC.TA2GRGE = OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[1];

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

      if (TA2REC.TA2RTNCD == 0)
        OZ0BW00.OZ0BW-SV-B4-DT = TA2REC.TA2GRGG;
        OZ0BW00.OZ0BW-DATE-MAP = TA2REC.TA2GRGG;
        OZ0BW00.OZ0BW-SAVE-BDT = OZ0BW00.OZ0BW-DATE-MAP;
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[1] cursor, bold;
        converseLib.validationFailed(30); /* date invalid*/
        OZ0BW00.OZ0BW-SWF = "N";
        OZ0BW00.OZ0BW-ERR-PF13 = "Y";
        return;
      end

      if (OZ0BW00.OZ0BW-DATE-MAP >= OZ0BW00.OZ0BW-CDT)
         /* Next sentence*/
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[1] cursor, bold;
        converseLib.validationFailed(35); /* date invalid*/
        OZ0BW00.OZ0BW-SWF = "N";
        OZ0BW00.OZ0BW-ERR-PF13 = "Y";
        return;
      end

      if (OZ0BM001.OZ0BM-SOCD-CUST-NEED-XDT[1] != " ")
        /* continue*/
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0BM001.OZ0BM-SOCD-CUST-NEED-XDT[1] cursor, bold;
        converseLib.validationFailed(30); /* date invalid*/
        OZ0BW00.OZ0BW-SWF = "N";
        OZ0BW00.OZ0BW-ERR-PF13 = "Y";
        return;
      end

      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "E";
      TA2REC.TA2GRGE = OZ0BM001.OZ0BM-SOCD-CUST-NEED-XDT[1];

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

      if (TA2REC.TA2RTNCD == 0)
        OZ0BW00.OZ0BW-SV-AFT-DT = TA2REC.TA2GRGG;
        OZ0BW00.OZ0BW-DATE-MAP = TA2REC.TA2GRGG;
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0BM001.OZ0BM-SOCD-CUST-NEED-XDT[1] cursor, bold;
        converseLib.validationFailed(30); /* date invalid*/
        OZ0BW00.OZ0BW-SWF = "N";
        OZ0BW00.OZ0BW-ERR-PF13 = "Y";
        return;
      end

      if (OZ0BW00.OZ0BW-DATE-MAP > OZ0BW00.OZ0BW-SAVE-BDT
       && OZ0BW00.OZ0BW-DATE-MAP >= OZ0BW00.OZ0BW-CDT)
        /* Next sentence*/
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0BM001.OZ0BM-SOCD-CUST-NEED-XDT[1] cursor, bold;
        converseLib.validationFailed(32); /* date invalid*/
        OZ0BW00.OZ0BW-SWF = "N";
        OZ0BW00.OZ0BW-ERR-PF13 = "Y";
        return;
      end

      if (OZ0BM001.OZ0BM-OCD-REL-DT[1] != " ")
        /* continue*/
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0BM001.OZ0BM-OCD-REL-DT[1] cursor, bold;
        converseLib.validationFailed(30); /* date invalid*/
        OZ0BW00.OZ0BW-SWF = "N";
        OZ0BW00.OZ0BW-ERR-PF13 = "Y";
        return;
      end

      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "E";
      TA2REC.TA2GRGE = OZ0BM001.OZ0BM-OCD-REL-DT[1];

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

      if (TA2REC.TA2RTNCD == 0)
        OZ0BW00.OZ0BW-SV-OCD-REL-DT = TA2REC.TA2GRGG;
        OZ0BW00.OZ0BW-DATE-MAP = TA2REC.TA2GRGG;
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0BM001.OZ0BM-OCD-REL-DT[1] cursor, bold;
        converseLib.validationFailed(30); /* date invalid*/
        OZ0BW00.OZ0BW-SWF = "N";
        OZ0BW00.OZ0BW-ERR-PF13 = "Y";
        return;
      end

      if (OZ0BW00.OZ0BW-DATE-MAP >= OZ0BW00.OZ0BW-CDT)
         /* Next sentence*/
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0BM001.OZ0BM-OCD-REL-DT[1] cursor, bold;
        converseLib.validationFailed(35); /* date invalid*/
        OZ0BW00.OZ0BW-SWF = "N";
        OZ0BW00.OZ0BW-ERR-PF13 = "Y";
        return;
      end

  /* ----------------------  UDAFON  -----------------------------*/

    end

  /* -------------------------------------------------------------*/

    OZ0BW00.OZ0BW-IXM = OZ0BW00.OZ0BW-IXM + 1; /* increment line number*/

  end


end // end OZ0B-15200


// Process valid input request
Function OZ0B-16000()
  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    OZ0BW00.XXXTSPAG = OZ0BW00.XXXTSPAG - 1; /* Decrement page number*/
    OZ0BW00.OZ0BW-SWF = "Y";

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    OZ0BW00.XXXTSPAG = OZ0BW00.XXXTSPAG + 1; /* Increment page number*/
    OZ0BW00.OZ0BW-SWF = "Y";

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey not enter
   && converseVar.eventKey not pf7
   && converseVar.eventKey not pf8
   && converseVar.eventKey not pa2
   && converseVar.eventKey not pf1
   && converseVar.eventKey not pf4
   && converseVar.eventKey not pf13)

    OZWREC.XXXPRCNM = "16000"; /* module id*/
    converseLib.validationFailed(4); /* pa/pf key pressed is not valid*/
    exit stack; /* exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* PF13 WAS PRESSED                      /* udafon*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf13)
    OZ0BM001.OZ0BMSEL[1] = "A";
    set OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[1] cursor, initialAttributes;
    OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[1] = "      ";
    set OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[1] initialAttributes;
    OZ0BM001.OZ0BM-SOCD-CUST-NEED-XDT[1] = "      ";
    set OZ0BM001.OZ0BM-SOCD-CUST-NEED-XDT[1] initialAttributes;
    OZ0BM001.OZ0BM-OP-CUST-CUTOFF-DT[1] = "      ";
    set OZ0BM001.OZ0BM-OP-CUST-CUTOFF-DT[1] initialAttributes;
    OZ0BM001.OZ0BM-OCD-REL-DT[1] = "      ";
    set OZ0BM001.OZ0BM-OCD-REL-DT[1] initialAttributes;
    OZ0BM001.OZ0BM-XXX-STAT[1] = "A";
    set OZ0BM001.OZ0BM-XXX-STAT[1] initialAttributes;
    OZ0BM001.OZ0BM-XXX-STAT-DESC[1] = "ACTIVE";
    OZ0BW00.OZ0BW-SWF = "N";
    exit stack; /* exit to display map*/
  end

  /* ------------------------------------------------------------*/
  /* enter pressed*/
  /* ------------------------------------------------------------*/
  OZ0BW00.OZ0BW-ERR-PF13 = "N"; /* NO ERROR FOR PF13*/
  OZ0BW00.OZ0BW-UPDATE-SW = "N";

  if (converseVar.eventKey is enter)
    OZ0BW00.OZ0BW-IXM = 1;
    while (OZ0BW-IXM < 14)

      if (OZ0BM001.OZ0BMSEL[OZ0BW-IXM] == "C")
    /* ------------------------------------------------------------*/
    /* Select the row for update*/
    /* ------------------------------------------------------------*/

        OZ0B-16100(); /* select row*/

    /* ------------------------------------------------------------*/
    /* If record was changed since initial display, flag error*/
    /* ------------------------------------------------------------*/

        if (OZ0BW01.OZ0BW-ZZZCHGCT[OZ0BW-IXM] != VOCROT01.ZZZCHGCT) /* count*/
                                   /* changed*/

          OZWREC.XXXPRCNM = "16000"; /* module id*/
          converseLib.validationFailed(12); /* row was updated by another*/
                                   /* application*/
          OZ0BW00.OZ0BW-SWR = "Y"; /* request for data*/
          OZ0BW00.OZ0BW-SWF = "Y"; /* format a new map*/
          exit stack; /* exit to display map*/

        end

    /* ------------------------------------------------------------*/
    /* format the ocd release date*/
    /* ------------------------------------------------------------*/
        set TA2REC empty;
        TA2REC.TA2DTOPT = "GREGGREG";
        TA2REC.TA2GRTYP = "E";
        TA2REC.TA2GRGE = OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM];

        call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

        if (TA2REC.TA2RTNCD == 0)
          OZ0BW00.OZ0BW-FULLDATE = TA2REC.TA2GRGG;
        else
          OZWREC.XXXPRCNM = "15200"; /* Module identification*/
          set OZ0BM001.OZ0BM-OCD-REL-DT[OZ0BW-IXM] cursor, bold;
          converseLib.validationFailed(20); /* date invalid*/
        end

    /* ------------------------------------------------------------*/
    /* Update the row in the table*/
    /* ------------------------------------------------------------*/

        OZ0B-16200(); /* update table row*/

    /* ------------------------------------------------------------*/
    /* Indicate that the table update was successfully completed.*/
    /* ------------------------------------------------------------*/

        OZWREC.XXXPRCNM = "16000"; /* show message*/
        OZWREC.XXXMSGNO = 1; /* Table update was completed*/

      else

  /* ------------------------------------------------------------*/
  /* STRAIGHT  ADD  FROM  SCREEN*/
  /* ------------------------------------------------------------*/
        if (OZ0BM001.OZ0BMSEL[1] == "A")
  /* ------------------------------------------------------------*/
  /* HERE I HAVE WRITTEN A SIMILAR CODE FROM OZ0C*/
  /* ------------------------------------------------------------*/

          set VOCROT01 empty; /* clear row storage area*/

          VOCROT01.XOTCD = OZ0BM001.OZ0BM-XOTCD;
          VOCROT01.XGPCD = OZ0BM001.OZ0BM-XGPCD;

          set TA2REC empty;
          TA2REC.TA2DTOPT = "GREGGREG";
          TA2REC.TA2GRTYP = "E";
          TA2REC.TA2GRGE = OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[1];

          call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* VALID DATE PGM*/

          if (TA2REC.TA2RTNCD == 0)
            OZ0BW00.OZ0BW-SV-B4-DT = TA2REC.TA2GRGG;
          else
            OZWREC.XXXPRCNM = "16000"; /* MODULE IDENTIFICATION*/
            set OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[1] cursor, bold;
            converseLib.validationFailed(30); /* DATE INVALID*/
            OZ0BW00.OZ0BW-ERR-PF13 = "Y";
            return;
          end

          set TA2REC empty;
          TA2REC.TA2DTOPT = "GREGGREG";
          TA2REC.TA2GRTYP = "E";
          TA2REC.TA2GRGE = OZ0BM001.OZ0BM-SOCD-CUST-NEED-XDT[1];

          call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* VALID DATE PGM*/

          if (TA2REC.TA2RTNCD == 0)
            OZ0BW00.OZ0BW-SV-AFT-DT = TA2REC.TA2GRGG;
          else
            OZWREC.XXXPRCNM = "16000"; /* MODULE IDENTIFICATION*/
            set OZ0BM001.OZ0BM-SOCD-CUST-NEED-XDT[1] cursor, bold;
            converseLib.validationFailed(30); /* invalid date*/
            OZ0BW00.OZ0BW-ERR-PF13 = "Y";
            return;
          end

          set TA2REC empty;
          TA2REC.TA2DTOPT = "GREGGREG";
          TA2REC.TA2GRTYP = "E";
          TA2REC.TA2GRGE = OZ0BM001.OZ0BM-OCD-REL-DT[1];

          call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* VALID DATE PGM*/

          if (TA2REC.TA2RTNCD == 0)
            OZ0BW00.OZ0BW-SV-OCD-REL-DT = TA2REC.TA2GRGG;
          else
            OZWREC.XXXPRCNM = "16000"; /* MODULE IDENTIFICATION*/
            set OZ0BM001.OZ0BM-OCD-REL-DT[1] cursor, bold;
            converseLib.validationFailed(30); /* invalid date*/
            OZ0BW00.OZ0BW-ERR-PF13 = "Y";
            return;
          end

          if (OZ0BW00.OZ0BW-ERR-PF13 == "N")
            OZ0B-16300(); /* add new row*/
          end

          if (OZ0BW00.OZ0BW-UPDATE-SW == "N") /* ERROR*/
            return;
          end

        end /* END OF SEL CHECK FOR ADD*/

      end /* END OF SEL CHECK FOR CHANGE*/

      OZ0BW-IXM = OZ0BW-IXM + 1;
    end /* END OF WHILE*/

  /* ------------------------------------------------------------*/
  /* Commit all changes made to protected resources.*/
  /* ------------------------------------------------------------*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.commit(); /* Commit all changes*/


  end
end // end OZ0B-16000


// Select row before update
Function OZ0B-16100()
  /* ------------------------------------------------------------*/
  /* Select the requested row from the table.*/
  /* ------------------------------------------------------------*/

  set VOCROT01 empty; /* Clear row storage area*/

  VOCROT01.XGPCD = OZ0BM001.OZ0BM-XGPCD;
  VOCROT01.XOTCD = OZ0BM001.OZ0BM-XOTCD;
  VOCROT01.SOCD-CUST-NEED-BDT = OZ0BW-SOCD-CUST-NEED-BDT[OZ0BW-IXM];

  try
    call "VOCROT01" ("S ", SQLCA, VOCROT01) {isNoRefresh = yes, isExternal = yes};
  end

  /* HOW UPDATE SINGLE ROW W/O MORE KEY?-----------------*/
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16100"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT ROW BEFORE UPDATE     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCROT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCROT01.XOTCD; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0B-16100


// Update the changed table row
Function OZ0B-16200()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/


  VOCROT01.OCD-REL-DT = OZ0BW00.OZ0BW-FULLDATE;
  VOCROT01.XXX-STAT = OZ0BM001.OZ0BM-XXX-STAT[OZ0BW-IXM];
  VOCROT01.ZZZCHGCT = OZ0BW01.OZ0BW-ZZZCHGCT[OZ0BW-IXM];

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCROT01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "15200"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0BW00.OZ0BW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0BW00.OZ0BW-TM-HH = OZ0BW00.OZ0BW-TB-HH;
  OZ0BW00.OZ0BW-TM-MM = OZ0BW00.OZ0BW-TB-MM;
  VOCROT01.ZZZCHGTM = OZ0BW00.OZ0BW-TIME-MK;

  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCROT01" ("U ", SQLCA, VOCROT01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      OZ0BW00.OZ0BW-UPDATE-SW = "Y"; /* update switch*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16200"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCROT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCROT01.XOTCD; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0B-16200


// add new row
Function OZ0B-16300()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  VOCROT01.SOCD-CUST-NEED-BDT = OZ0BW00.OZ0BW-SV-B4-DT;
  VOCROT01.SOCD-CUST-NEED-XDT = OZ0BW00.OZ0BW-SV-AFT-DT;
  VOCROT01.OCD-REL-DT = OZ0BW00.OZ0BW-SV-OCD-REL-DT;
  VOCROT01.XXX-STAT = "A";

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCROT01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16300"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0BW00.OZ0BW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0BW00.OZ0BW-TM-HH = OZ0BW00.OZ0BW-TB-HH;
  OZ0BW00.OZ0BW-TM-MM = OZ0BW00.OZ0BW-TB-MM;
  VOCROT01.ZZZCHGTM = OZ0BW00.OZ0BW-TIME-MK;

  if (OZ0BM001.OZ0BMSEL[1] == "A")
    VOCROT01.ZZZSDTM = OZ0BW00.OZ0BW-TIME-MK;
    VOCROT01.ZZZSDT = TA2REC.TA2GRGGN;
    VOCROT01.ZZZCHGCT = 0;
  else
    VOCROT01.ZZZSDT = OZ0BW01.OZ0BW-ZZZSDT[1];
    VOCROT01.ZZZSDTM = OZ0BW01.OZ0BW-ZZZSDTM[1];
    VOCROT01.ZZZCHGCT = OZ0BW01.OZ0BW-ZZZCHGCT[1];
  end

  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCROT01" ("A ", SQLCA, VOCROT01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      OZ0BW00.OZ0BW-UPDATE-SW = "Y"; /* update switch*/
      OZ0BW-IXM = 13; /* Exit loop*/
      converseLib.validationFailed(1); /* Update successfully completed*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == -803) /* duplicate add attempt*/
        OZWREC.XXXPRCNM = "16300"; /* Module identification*/
        set OZ0BM001.OZ0BM-SOCD-CUST-NEED-BDT[OZ0BW-IXM] cursor, bold;
        converseLib.validationFailed(34); /* this record already exists*/
        OZ0BW00.OZ0BW-UPDATE-SW = "N"; /* update switch*/
        OZ0BW00.OZ0BW-SWF = "N";
        return; /* Return to previous process*/
      end
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16200"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCROT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCROT01.XOTCD; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0B-16300


//*** RECORD=OZ0BW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record OZ0BW00 type basicRecord
  10 OZ0BW-IXM OZ0BW-IXM ; 
  10 OZ0BW-IDX OZ0BW-IDX ; 
  10 OZ0BW-IX1 OZ0BW-IX1 ; 
  10 OZ0BW-IX2 OZ0BW-IX2 ; 
  10 OZ0BW-IXX OZ0BW-IXX ; 
  10 OZ0BW-SWC OZ0BW-SWC ; 
  10 OZ0BW-SWD OZ0BW-SWD ; 
  10 OZ0BW-SWF OZ0BW-SWF ; 
  10 OZ0BW-SWR OZ0BW-SWR ; 
  10 OZ0BW-SWU OZ0BW-SWU ; 
  10 OZ0BW-SFN OZ0BW-SFN ; 
  10 OZ0BW-EDIT-FLAG OZ0BW-EDIT-FLAG ; 
  10 OZ0BW-TIME-BRK OZ0BW-TIME-BRK ; 
    15 OZ0BW-TB-HH OZ0BW-TB-HH ; 
    15 * char(1) ; 
    15 OZ0BW-TB-MM OZ0BW-TB-MM ; 
    15 * char(1) ; 
    15 OZ0BW-TB-SS OZ0BW-TB-SS ; 
  10 OZ0BW-TIME-MK OZ0BW-TIME-MK ; 
    15 OZ0BW-TM-HH OZ0BW-TM-HH ; 
    15 OZ0BW-TM-MM OZ0BW-TM-MM ; 
  10 OZ0BW-B4DT-CHAR OZ0BW-B4DT-CHAR ; 
    15 OZ0BW-B4DT-NUM OZ0BW-B4DT-NUM ; 
  10 OZ0BW-AFTDT-CHAR OZ0BW-AFTDT-CHAR ; 
    15 OZ0BW-AFTDT-NUM OZ0BW-AFTDT-NUM ; 
  10 OZ0BW-CUTDT-CHAR OZ0BW-CUTDT-CHAR ; 
    15 OZ0BW-CUTDT-NUM OZ0BW-CUTDT-NUM ; 
  10 OZ0BW-ORDDT-CHAR OZ0BW-ORDDT-CHAR ; 
    15 OZ0BW-ORDDT-NUM OZ0BW-ORDDT-NUM ; 
  10 OZ0BW-YEAR-DESC-CHAR OZ0BW-YEAR-DESC-CHAR ; 
  10 OZ0BW-YEAR-DESC OZ0BW-YEAR-DESC ; 
    15 OZ0BW-YEAR-DESC-CC OZ0BW-YEAR-DESC-CC ; 
    15 OZ0BW-YEAR-DESC-YY OZ0BW-YEAR-DESC-YY ; 
  10 OZ0BW-STAT OZ0BW-STAT ; 
  10 OZ0BW-STAT-DESC OZ0BW-STAT-DESC ; 
  10 OZ0BW-UPDATE-SW OZ0BW-UPDATE-SW ; 
  10 OZ0BW-LAST-RULE-KEY OZ0BW-LAST-RULE-KEY ; 
    15 OZ0BW-LAST-RULE-DT OZ0BW-LAST-RULE-DT ; 
    15 OZ0BW-LAST-RULE-NBR OZ0BW-LAST-RULE-NBR ; 
  10 OZ0BW-SAVE-PAGE OZ0BW-SAVE-PAGE ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 OZ0BW-BIN-YEAR OZ0BW-BIN-YEAR ; 
    15 OZ0BW-BIN-YEAR-CC OZ0BW-BIN-YEAR-CC ; 
    15 OZ0BW-BIN-YEAR-YY OZ0BW-BIN-YEAR-YY ; 
  10 OZ0BW-FULLDATE OZ0BW-FULLDATE ; 
    15 OZ0BW-FULLCC OZ0BW-FULLCC ; 
    15 OZ0BW-FULLYY OZ0BW-FULLYY ; 
    15 OZ0BW-FULLMM OZ0BW-FULLMM ; 
    15 OZ0BW-FULLDD OZ0BW-FULLDD ; 
  10 OZ0BW-FORMDATE OZ0BW-FORMDATE ; 
    15 OZ0BW-FORMMM OZ0BW-FORMMM ; 
    15 OZ0BW-FORMDD OZ0BW-FORMDD ; 
    15 OZ0BW-FORMYY OZ0BW-FORMYY ; 
  10 OZ0BW-HOLD-DATE1 OZ0BW-HOLD-DATE1 ; 
  10 OZ0BW-HOLD-DATE2 OZ0BW-HOLD-DATE2 ; 
  10 OZ0BW-HOLD-YEAR OZ0BW-HOLD-YEAR ; 
  10 OZ0BW-HOLD-YEAR-CHAR OZ0BW-HOLD-YEAR-CHAR ; 
  10 OZ0BW-HOLD-YEAR-CHAR2 OZ0BW-HOLD-YEAR-CHAR2 ; 
  10 OZ0BW-HOLD-YEAR-CHAR3 OZ0BW-HOLD-YEAR-CHAR3 ; 
  10 OZ0BW-CTL-FLD OZ0BW-CTL-FLD ; 
    15 OZ0BW-FNC OZ0BW-FNC ; 
    15 OZ0BW-SAV OZ0BW-SAV ; 
    15 OZ0BW-SAV-PAGE OZ0BW-SAV-PAGE ; 
  10 OZ0BW-SV-GPC OZ0BW-SV-GPC ; 
  10 OZ0BW-SV-GPCDESC OZ0BW-SV-GPCDESC ; 
  10 OZ0BW-SV-XOT OZ0BW-SV-XOT ; 
  10 OZ0BW-SV-XOTDESC OZ0BW-SV-XOTDESC ; 
  10 OZ0BW-SV-B4-DT OZ0BW-SV-B4-DT ; 
  10 OZ0BW-SV-AFT-DT OZ0BW-SV-AFT-DT ; 
  10 OZ0BW-SV-OCD-REL-DT OZ0BW-SV-OCD-REL-DT ; 
  10 OZ0BW-ERR-PF13 OZ0BW-ERR-PF13 ; 
  10 OZ0BW-CDT OZ0BW-CDT ; 
  10 OZ0BW-DATE-MAP OZ0BW-DATE-MAP ; 
    15 OZ0BW-DATE-MAP-YYC OZ0BW-DATE-MAP-YYC ; 
    15 OZ0BW-DATE-MAP-YY OZ0BW-DATE-MAP-YY ; 
    15 OZ0BW-DATE-MAP-MM OZ0BW-DATE-MAP-MM ; 
    15 OZ0BW-DATE-MAP-DD OZ0BW-DATE-MAP-DD ; 
  10 OZ0BW-DATE-TST OZ0BW-DATE-TST ; 
    15 OZ0BW-DATE-TST-YYC OZ0BW-DATE-TST-YYC ; 
    15 OZ0BW-DATE-TST-YY OZ0BW-DATE-TST-YY ; 
    15 OZ0BW-DATE-TST-MM OZ0BW-DATE-TST-MM ; 
    15 OZ0BW-DATE-TST-DD OZ0BW-DATE-TST-DD ; 
  10 OZ0BW-SAVE-BDT OZ0BW-SAVE-BDT ; 
end // end OZ0BW00


//*** RECORD=OZ0BW01 ****
// /*
// /*      application working storage for map1
// /*
// ***********************
Record OZ0BW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(520) ; // Temporary storage page length
    10 OZ0BW-SEL OZ0BW-SEL [13] ; 
    10 OZ0BW-GROUP OZ0BW-GROUP [13] ; 
      15 OZ0BW-SOCD-CUST-NEED-BDT OZ0BW-SOCD-CUST-NEED-BDT ; 
      15 OZ0BW-SOCD-CUST-NEED-XDT OZ0BW-SOCD-CUST-NEED-XDT ; 
      15 OZ0BW-OP-CUST-CUTOFF-DT OZ0BW-OP-CUST-CUTOFF-DT ; 
      15 OZ0BW-OCD-REL-DT OZ0BW-OCD-REL-DT ; 
      15 OZ0BW-XXX-STAT OZ0BW-XXX-STAT ; 
      15 OZ0BW-XXX-STAT-DESC OZ0BW-XXX-STAT-DESC ; 
      15 OZ0BW-ZZZSDT OZ0BW-ZZZSDT ; 
      15 OZ0BW-ZZZSDTM OZ0BW-ZZZSDTM ; 
      15 OZ0BW-ZZZCHGDT OZ0BW-ZZZCHGDT ; 
      15 OZ0BW-ZZZCHGTM OZ0BW-ZZZCHGTM ; 
      15 OZ0BW-ZZZCHGCT OZ0BW-ZZZCHGCT ; 
end // end OZ0BW01


//*** RECORD=OZ0BW02 ****
// /*
// /*      application working storage for map 2
// /*
// ***********************
Record OZ0BW02 type basicRecord
  10 OZ0BW02-GROUP-DATA OZ0BW02-GROUP-DATA ; 
    15 OZ0BW-GPC-CD OZ0BW-GPC-CD ; 
    15 OZ0BW-RULE-NBR OZ0BW-RULE-NBR ; 
    15 OZ0BW-RULE-XREF-CD OZ0BW-RULE-XREF-CD ; 
    15 OZ0BW-RULE-DT OZ0BW-RULE-DT ; 
    15 OZ0BW-RULE-RCPT-DT OZ0BW-RULE-RCPT-DT ; 
    15 OZ0BW-SESN-CD OZ0BW-SESN-CD [3] ; 
    15 OZ0BW-SESN-YEAR OZ0BW-SESN-YEAR [3] ; 
    15 OZ0BW-RULE-COMNT OZ0BW-RULE-COMNT ; 
    15 OZ0BW-STAT OZ0BW-STAT ; 
    15 OZ0BW-XXXUSRID OZ0BW-XXXUSRID ; 
    15 OZ0BW-ZZZSDT OZ0BW-ZZZSDT ; 
    15 OZ0BW-ZZZCHGDT OZ0BW-ZZZCHGDT ; 
    15 OZ0BW-ZZZCHGTM OZ0BW-ZZZCHGTM ; 
    15 OZ0BW-ZZZCHGCT OZ0BW-ZZZCHGCT ; 
  10 OZ0BW-GPC-DESC OZ0BW-GPC-DESC ; 
end // end OZ0BW02


DataItem OZ0BW-AFTDT-CHAR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-AFTDT-NUM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0BW-B4DT-CHAR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-B4DT-NUM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Binary work year
DataItem OZ0BW-BIN-YEAR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Binary work year cc
DataItem OZ0BW-BIN-YEAR-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Binary work year yy
DataItem OZ0BW-BIN-YEAR-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Save current date
DataItem OZ0BW-CDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Pass record control field
DataItem OZ0BW-CTL-FLD char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-CUTDT-CHAR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-CUTDT-NUM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save current date
DataItem OZ0BW-DATE-MAP num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save current date
DataItem OZ0BW-DATE-MAP-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save current date
DataItem OZ0BW-DATE-MAP-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save current date
DataItem OZ0BW-DATE-MAP-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save current date
DataItem OZ0BW-DATE-MAP-YYC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save current date
DataItem OZ0BW-DATE-TST num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save current date
DataItem OZ0BW-DATE-TST-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save current date
DataItem OZ0BW-DATE-TST-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save current date
DataItem OZ0BW-DATE-TST-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save current date
DataItem OZ0BW-DATE-TST-YYC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0BW-EDIT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-ERR-PF13 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Map function switch
DataItem OZ0BW-FNC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format Date
DataItem OZ0BW-FORMDATE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format Date dd
DataItem OZ0BW-FORMDD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format Date mm
DataItem OZ0BW-FORMMM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format Date yy
DataItem OZ0BW-FORMYY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date cc
DataItem OZ0BW-FULLCC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date
DataItem OZ0BW-FULLDATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date dd
DataItem OZ0BW-FULLDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date mm
DataItem OZ0BW-FULLMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date yy
DataItem OZ0BW-FULLYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE
DataItem OZ0BW-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0BW-GPC-DESC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0BW-GROUP char(39)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Holding Date 1
DataItem OZ0BW-HOLD-DATE1 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Holding Date 2
DataItem OZ0BW-HOLD-DATE2 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Holding Year numeric
DataItem OZ0BW-HOLD-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Holding Year character
DataItem OZ0BW-HOLD-YEAR-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Holding Year character
DataItem OZ0BW-HOLD-YEAR-CHAR2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Holding Year character
DataItem OZ0BW-HOLD-YEAR-CHAR3 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0BW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0BW-IX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0BW-IX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0BW-IXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0BW-IXX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Update switch
DataItem OZ0BW-LAST-RULE-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Update switch
DataItem OZ0BW-LAST-RULE-KEY char(19)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Last ruling nbr processed
DataItem OZ0BW-LAST-RULE-NBR char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-OCD-REL-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0BW-OP-CUST-CUTOFF-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0BW-ORDDT-CHAR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-ORDDT-NUM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// BINDING RULING COMMENT
DataItem OZ0BW-RULE-COMNT char(45)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING DATE
DataItem OZ0BW-RULE-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// BINDING RULING NUMBER
DataItem OZ0BW-RULE-NBR char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING RECEIPT DATE
DataItem OZ0BW-RULE-RCPT-DT int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING CROSS REFERENCE
DataItem OZ0BW-RULE-XREF-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Save index for WS
DataItem OZ0BW-SAV num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save page for cursor placement
DataItem OZ0BW-SAV-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save current date
DataItem OZ0BW-SAVE-BDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Page save field
DataItem OZ0BW-SAVE-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0BW-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// SEASON CODE
DataItem OZ0BW-SESN-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// SEASON YEAR
DataItem OZ0BW-SESN-YEAR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0BW-SFN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-SOCD-CUST-NEED-BDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0BW-SOCD-CUST-NEED-XDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// STATUS CODE
DataItem OZ0BW-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// STATUS CODE DESCRIPTION - HDR
DataItem OZ0BW-STAT-DESC char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-SV-AFT-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0BW-SV-B4-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0BW-SV-GPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-SV-GPCDESC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-SV-OCD-REL-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0BW-SV-XOT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-SV-XOTDESC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0BW-SWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Map to be displayed switch
DataItem OZ0BW-SWD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format the map switch
DataItem OZ0BW-SWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Request for data switch
DataItem OZ0BW-SWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Storage page update switch
DataItem OZ0BW-SWU char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-TB-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0BW-TB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0BW-TB-SS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0BW-TIME-BRK char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0BW-TIME-MK num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0BW-TM-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0BW-TM-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Update switch
DataItem OZ0BW-UPDATE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE - DETAIL
DataItem OZ0BW-XXX-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE - DETAIL
DataItem OZ0BW-XXX-STAT-DESC char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING COMMENT -DETAIL
DataItem OZ0BW-XXXUSRID char(8)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end


// SEASON YEARdescription
DataItem OZ0BW-YEAR-DESC num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// SEASON YEAR description cc
DataItem OZ0BW-YEAR-DESC-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// SEASON YEAR description char
DataItem OZ0BW-YEAR-DESC-CHAR char(4)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end


// SEASON YEAR description yy
DataItem OZ0BW-YEAR-DESC-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING COMMENT -DETAIL
DataItem OZ0BW-ZZZCHGCT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING COMMENT -DETAIL
DataItem OZ0BW-ZZZCHGDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING COMMENT -DETAIL
DataItem OZ0BW-ZZZCHGTM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING COMMENT -DETAIL
DataItem OZ0BW-ZZZSDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING COMMENT -DETAIL
DataItem OZ0BW-ZZZSDTM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0BW02-GROUP-DATA char(102)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


