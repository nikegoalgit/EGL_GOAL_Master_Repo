package oz0f;

import corpcom2.XP0PW00;
import corpcom2.XP0PW01;
import corpcom2.XP0RW00;
import corpcom2.XP0RW01;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XP0P001;
import corpcom3.XPOZ-00001;
import corpcom3.XPXGP01;
import corpcom3.XPXSO01;
import corpcom3.XPXX001;
import corpcom4.XSOZ-S0001;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpx1.XGPTBL;
import corpx1.XOMTBL;
import corpx1.XPTTBL;
import corpx1.XSETBL;
import corpx1.XSOTBL;
import ku.common.KU5REC;
import ku.common.KUCREC;
import ku.common.KUNREC;
import op.common.OP1REC;
import op.common.OP2REC;
import op.common.OP3REC;
import op.common.OPAGREC;
import oz.common.OZAREC;
import oz.common.OZBREC;
import oz.common.OZCREC;
import oz.common.OZDREC;
import oz.common.OZWREC;
import sm.common.SM1REC;
import sm.common.SM4REC;
import sm.common.SM5REC;
import sp.common.SP1REC;
import sy.common.SY1REC;
import sy.common.SY2REC;
import sy.common.SY4REC;
import sy.common.SYCREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VOCHDR01;
import vv.common.VOCITM01;
import vv.common.VOCLDO01;
import vv.common.VOCSIZ01;
import vv.common.VSOCRC01;
import vv.common.VSOHCR01;
import vv.common.VSOSCR01;
import ww.common.WOZ2110;
import ww.common.WOZSZRNP;
import ww.common.WOZSZRNR;
import ww.common.WOZSZRUN;

//*** PROGRAM=OZ0F ****
// This application will display the OC&D Change Reason Text
// and the change reason text eligibility flag.   The user
// may update one line at a time by changing the eligibility
// flag or the reason text and pressing enter.
// The user may page forward (pf8) and page backward (pf7)
// through the selected list.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      06/12/97  dsmit0  New application.
// 
//          01/05/98  dsmit0  added cust rpt flag to m004.
// #1023    04/20/98  dsmit0/ added logic for 'airspeed
//                    dhuffm  cancelled' items.
// #1156    06/22/98  sgopal  Added code to goto OZ0I screen
//                            by pressing PF14 key.
// #1088    07/07/98  UDAFON  Added last report date and time
//                            to M002 and M003.
// #1156    08/13/98  UDAFON  Fixed Enter or PF20 to get back
//                            from OZ0I to OZ0F. Fixed PF3 only
//                            for exit from OZ0I.
//                            Enhancement in screen to allow no
//                            eligible customers/orders to have
//                            their OC&D letter produced.
// #2254    12/14/98  UDAFON  Fixed size of oz0fw00.oz0fw-sel-
//                            cust-po from 15 to 25 bytes into
//                            oz0fw00. Fixed the problem in to
//                            oz0f-21320 stm g and abend in to
//                            oz0f-11337 stm g.
//                            Fixed size of oz0fw00.oz0fw-m2-
//                            socd-curr-cust-po field from 15
//                            to 25 bytes.
// *********************
Program OZ0F type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OZ00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KU5REC KU5REC; // record
  KUCREC KUCREC; // record
  KUNREC KUNREC; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  OP3REC OP3REC; // record
  OPAGREC OPAGREC; // record
  OZ0FW00 OZ0FW00; // record
  OZ0FW01 OZ0FW01; // record
  OZ0FW02 OZ0FW02; // record
  OZ0FW03 OZ0FW03; // record
  OZ0FW04 OZ0FW04; // record
  OZ0FW05 OZ0FW05; // record
  OZ0FW05A OZ0FW05A; // record
  OZ0FW06 OZ0FW06; // record
  OZ0FW99 OZ0FW99; // record
  OZAREC OZAREC; // record
  OZBREC OZBREC; // record
  OZCREC OZCREC; // record
  OZDREC OZDREC; // record
  OZWREC OZWREC; // record
  SM1REC SM1REC; // record
  SM4REC SM4REC; // record
  SM5REC SM5REC; // record
  SP1REC SP1REC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY4REC SY4REC; // record
  SYCREC SYCREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VOCHDR01 VOCHDR01; // record
  VOCITM01 VOCITM01; // record
  VOCLDO01 VOCLDO01; // record
  VOCSIZ01 VOCSIZ01; // record
  VSOCRC01 VSOCRC01; // record
  VSOHCR01 VSOHCR01; // record
  VSOSCR01 VSOSCR01; // record
  WOZ2110 WOZ2110; // record
  WOZSZRNP WOZSZRNP; // record
  WOZSZRNR WOZSZRNR; // record
  WOZSZRUN WOZSZRUN; // record
  XP0PW00 XP0PW00; // record
  XP0PW01 XP0PW01; // record
  XP0RW00 XP0RW00; // record
  XP0RW01 XP0RW01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use XOMTBL {deleteAfterUse = yes}; // table
  use XSOTBL {deleteAfterUse = yes}; // table
  use XPTTBL {deleteAfterUse = yes}; // table
  use OZ0FM.OZ0FM001,  // forms
      OZ0FM.OZ0FM002, 
      OZ0FM.OZ0FM003, 
      OZ0FM.OZ0FM004, 
      OZ0FM.OZ0FM005, 
      OZ0FM.OZ0FM006, 
      OZ0FM.XP0RM001,
      OZ0FM.XP0PM001,
      OZ0FM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPOZ-00001: XPOZ-00001();
    /* ------------------------------------------------------------*/
    /* Initialize working storage and display storage areas.*/
    /* ------------------------------------------------------------*/

    set OZ0FM001 initial; /* M001 input/output*/
    set OZ0FW00 empty; /* Working storage*/
    set OZ0FW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    OZ0FW00.OZ0FW-SWD = "1"; /* Map to be displayed switch*/
    OZ0FW00.OZ0FW-SWF = "Y"; /* Format the map switch*/
    OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/
  
    if (OZWREC.OZW-APPIDX == 0)
      OZWREC.OZW-APPIDX = 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0A";
    end
  
    /* ------------------------------------------------------------*/
    /* If data was passed in the COMMAREA, use as the initial key.*/
    /* ------------------------------------------------------------*/

    if (COMMAREA.CAFROMAP == "OZ0A") /* coming from menu*/
      OZ0FW00.OZ0FW-SWF = "N"; /* Format the map switch*/
      OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/
  
      OZ0FW00.OZ0FW-IXM = 1; /* Initialize line index*/
  
      while (OZ0FW00.OZ0FW-IXM < 12) /* * Until end of lines*/
        if (OZ0FM001.OZ0FM-CUST-STR-DPT[OZ0FW-IXM] == " ")
          set OZ0FM001.OZ0FMSEL[OZ0FW-IXM] skip, noHighLight;
        end
        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* Increment line index*/
      end
  
    else
  
      if (COMMAREA.CAUSERA > " ") /* Data was passed*/

        OZWREC.CAUSERA = COMMAREA.CAUSERA;
    /* what was entered*/
  
        if (OZWREC.XSOCD == "  "
         && OZWREC.XGPCD == "  ")
          OZ0FW00.OZ0FW-SWF = "N"; /* Format the map switch*/
          OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/
        else
  
          if (OZWREC.OZW-HDR-CSD > 0000000
           && COMMAREA.CAFROMAP != "OZ0I")
            OZWREC.CUST-STR-DPT = OZWREC.OZW-HDR-CSD;
          end
  
          if ((COMMAREA.CAFROMAP != "OZ0E") || 
          (COMMAREA.CAFROMAP == "OZ0E" && 
          OZWREC.OZW-HDR-CSD > 0000000))
  
            if (COMMAREA.CAFROMAP == "OZ0I")
              OZ0FM001.OZ0FM-CURR-CU-CO-ID = OZWREC.OZW-HDR-CUST;
              OZ0FM001.OZ0FM-CURR-STOR-ID = OZWREC.OZW-HDR-STR;
              OZ0FM001.OZ0FM-CURR-XNX-DEPT = OZWREC.OZW-HDR-DPT;
            else
              OZ0FM001.OZ0FM-CURR-CU-CO-ID = OZWREC.OZW-CUST;
              OZ0FM001.OZ0FM-CURR-STOR-ID = OZWREC.OZW-STOR;
              OZ0FM001.OZ0FM-CURR-XNX-DEPT = OZWREC.OZW-DEPT;
            end
  
            if (OZ0FM001.OZ0FM-CURR-STOR-ID not numeric)
              OZ0FM001.OZ0FM-CURR-STOR-ID = "    ";
            end
            if (OZ0FM001.OZ0FM-CURR-XNX-DEPT not numeric)
              OZ0FM001.OZ0FM-CURR-XNX-DEPT = "    ";
            end
  
          end
  
          OZ0FM001.OZ0FM-CU-CO-NM-HDR = OZWREC.KUCCONM;
          OZ0FM001.OZ0FM-CURR-GPC-CD = OZWREC.XGPCD;
  
          if (COMMAREA.CAFROMAP == "OZ0D" || 
          COMMAREA.CAFROMAP == "OZ0H" || 
          COMMAREA.CAFROMAP == "OZ0G")
            OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM = OZWREC.SOCD-CURR-CUST-PO;
            OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-TO = OZWREC.SOCD-CURR-CUST-PO-TO;
          end
  
          OZ0FM001.OZ0FM-OP-CUST-ORD-ID = OZWREC.OZW-SV-OP1CUOID;
          OZ0FM001.OZ0FM-XSO-SLS-OFC-ID = OZWREC.XSOCD;
          OZ0FM001.OZ0FM-SM-SREP-ID = OZWREC.SM4REPID;
          OZ0FM001.OZ0FM-SM-SAGCY-ID = OZWREC.SM1AGYID;
          OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM = OZWREC.NEED-DATE-FROM;
          OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO = OZWREC.NEED-DATE-TO;
          OZ0FM001.OZ0FM-SP-SPGM-ID = OZWREC.SP1ID;
          OZ0FM001.OZ0FM-OVERRIDE-DI = OZWREC.OVERRIDE-DI;
          OZ0FW00.OZ0FW-OVERRIDE-DI = OZWREC.OVERRIDE-DI;
          OZ0FW00.OZ0FW-SOCD-LTR-OVRD-ID = OZWREC.SOCD-LTR-OVRD-ID;
          OZ0FW00.OZ0FW-BYPASS-ELIGB = OZWREC.BYPASS-ELIGB;
  
          OZ0FW00.OZ0FW-SWR = "Y"; /* Request for data switch*/
        end
  
      end
    end


    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OZ0F-00000; /* Converse the main process*/


    OZ0F-00000: OZ0F-00000();
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OZ0F-00000; /* Converse the main process*/


  end // end main
end // end OZ0F


// Main process to display a map
Function OZ0F-00000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) If specified, display the first map.*/
  /* 2) Otherwise, if specified, display the second map, depending*/
  /* on function = add or change*/
  /* 3) Otherwise, indicate error and exit to Application Menu.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  if (OZ0FW00.OZ0FW-SWD == "1") /* Map 1 was requested*/

    OZ0F-10000(); /* Display map 1*/

  else

    if (OZ0FW00.OZ0FW-SWD == "2") /* Map 2 was requested*/

  /* PERFORM OZ0F-20000;          /* Display map 2*/

    else

      if (OZ0FW00.OZ0FW-SWD == "2") /* Map 2 was requested*/

  /* PERFORM OZ0F-30000;        /* Display map 2*/

      else

      /* ------------------------------------------------------------*/
      /* Write the error to the Error Diagnosis Reporting Facility.*/
      /* ------------------------------------------------------------*/

        OZWREC.XXXPRCNM = "00000"; /* Module identification*/
        OZWREC.XXXMSGNO = 10; /* Unexpected error occurred*/

        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        TA1REC.TA1TYPE = "APPL"; /* Type of error*/
        TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";
        TA1REC.TA1MAPNO = OZ0FW00.OZ0FW-SWD; /* Map number*/
        TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
        TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/

        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      /* ------------------------------------------------------------*/
      /* Exit to display the application system menu.*/
      /* ------------------------------------------------------------*/

        COMMAREA.CATOAP = "KS0A"; /* TO application*/

        XSOZ-S0001(); /* Exit to another application*/

      /* ------------------------------------------------------------*/
      /* Abnormally terminate the transaction if the exit failed.*/
      /* ------------------------------------------------------------*/

        TA1REC.TA1FUNC = "ABND"; /* Termination function*/

        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      end

    end

  end


end // end OZ0F-00000


// List the rows in the table
Function OZ0F-10000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Obtain the data to display.*/
  /* 2) Format the map output area and display the map.*/
  /* 3) Check the attention identifier used to respond.*/
  /* 4) Reset highlighted fields to normal intensity.*/
  /* 5) Verify the data that was entered.*/
  /* 6) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0F-11000(); /* Obtain the data to display*/

  OZ0F-12000(); /* Format and display the map*/

  OZ0F-13000(); /* Check attention identifier*/

  OZ0F-14000(); /* Reset fields to normal intensity*/

  OZ0F-15000(); /* Verify the entered data*/

  OZ0F-16000(); /* Process valid input request*/


end // end OZ0F-10000


// Obtain the data to display
Function OZ0F-11000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.OZ0FW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/
  OZ0FW00.XXXTSLEN = 2486; /* temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.XXXTSPAG == 0) /* no pages established*/
    OZ0FW00.XXXTSPAG = 1; /* Page number to display*/
  end

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/
  OZ0F-11100(); /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Perform screen header edits*/
  /* ------------------------------------------------------------*/
  OZ0F-11200(); /* screen header edits*/

  if (OZ0FW00.OZ0FW-EDIT-FLAG == "Y") /* didn't pass edits*/
    return;
  end

  /* ------------------------------------------------------------*/
  /* get the data*/
  /* ------------------------------------------------------------*/
  OZ0F-11300();
end // end OZ0F-11000


// Purge any temporary storage
Function OZ0F-11100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/

  set OZ0FW01 empty; /* M001 display storage*/

  OZ0FW00.OZ0FW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0FW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "OZ1F"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0FW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "11100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-11100


// screen header edits
Function OZ0F-11200()
  /* -------------------------------------------------------------*/
  /* check valid gpc code*/
  /* -------------------------------------------------------------*/
  if (OZ0FM001.OZ0FM-CURR-GPC-CD == " ") /* code is blank - flag edit*/
    OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZ0FW00.OZ0FW-SWR = "N";
    OZ0FW00.OZ0FW-SWF = "N";
    OZWREC.XXXPRCNM = "11200"; /* Module identification*/
    set OZ0FM001.OZ0FM-CURR-GPC-CD cursor, bold; /* Highlight*/
    set OZ0FM001.OZ0FM-GPC-DESC skip, invisible; /* darken desc*/
    converseLib.validationFailed(22); /* GPC code invalid*/
    return;

  else
    if (OZ0FM001.OZ0FM-CURR-GPC-CD in XGPTBL.XGPCD) /* code in table*/

   /* get description*/
      if (OZ0FM001.OZ0FM-CURR-GPC-CD in XGPTBL.XGPCD)
        OZ0FM001.OZ0FM-GPC-DESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      end
      set OZ0FM001.OZ0FM-GPC-DESC skip;

    else
      OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0FW00.OZ0FW-SWR = "N";
      OZ0FW00.OZ0FW-SWF = "N";
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0FM001.OZ0FM-CURR-GPC-CD cursor, bold; /* Highlight*/
      set OZ0FM001.OZ0FM-GPC-DESC skip, invisible; /* darken desc*/
      converseLib.validationFailed(22); /* GPC code invalid*/
      return;

    end

  end

  /* -------------------------------------------------------------*/
  /* check if minimum allowed fields entered*/
  /* -------------------------------------------------------------*/
  if (OZ0FM001.OZ0FM-CURR-GPC-CD > " ") /* gpc code entered*/

    if (OZ0FM001.OZ0FM-CURR-CU-CO-ID == 0 && 
    (OZ0FM001.OZ0FM-OP-CUST-ORD-ID == " " || 
    OZ0FM001.OZ0FM-OP-CUST-ORD-ID == 0) && 
    OZ0FM001.OZ0FM-XSO-SLS-OFC-ID == "  ")

      OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0FW00.OZ0FW-SWR = "N";
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0FM001.OZ0FM-CURR-CU-CO-ID cursor, bold; /* Highlight*/
      set OZ0FM001.OZ0FM-OP-CUST-ORD-ID bold; /* highlight*/
      set OZ0FM001.OZ0FM-XSO-SLS-OFC-ID bold; /* highlight*/
      converseLib.validationFailed(23); /* GPC code invalid*/
      return;

    end

  end

  /* -------------------------------------------------------------*/
  /* if cust.str.dpt all entered verify against dcust.vcust001*/
  /* else use cust number against dcust.vcmpny01*/
  /* in either case read vcmpny01 to get company name*/
  /* -------------------------------------------------------------*/
  if (OZ0FM001.OZ0FM-CURR-CU-CO-ID > 0)
    OZ0FW00.OZ0FW-SV-CU-CO-ID = OZ0FM001.OZ0FM-CURR-CU-CO-ID;
    if (OZ0FM001.OZ0FM-CURR-STOR-ID > " " || 
    OZ0FM001.OZ0FM-CURR-XNX-DEPT > " ")
      if (OZ0FM001.OZ0FM-CURR-STOR-ID > " ")
        OZ0FW00.OZ0FW-SV-STOR-ID-NUM = OZ0FM001.OZ0FM-CURR-STOR-ID;
        OZ0FW00.OZ0FW-SV-STOR-ID = OZ0FW00.OZ0FW-SV-STOR-ID-NUM;
      else
        OZ0FW00.OZ0FW-SV-STOR-ID-NUM = 0000;
        OZ0FW00.OZ0FW-SV-STOR-ID = 0000;
      end
      if (OZ0FM001.OZ0FM-CURR-XNX-DEPT > " ")
        OZ0FW00.OZ0FW-SV-XNX-DEPT-NUM = OZ0FM001.OZ0FM-CURR-XNX-DEPT;
        OZ0FW00.OZ0FW-SV-XNX-DEPT = OZ0FW00.OZ0FW-SV-XNX-DEPT-NUM;
      else
        OZ0FW00.OZ0FW-SV-XNX-DEPT-NUM = 00;
        OZ0FW00.OZ0FW-SV-XNX-DEPT = 00;
      end

  /* PERFORM OZ0F-11210;  /*validate against dcust.vcust001  #1156*/
  /* IF SQLCA.SQLCODE = 0;                                   #1156*/
      OZ0F-11220(); /* retrv cmpny name from dcust.vcmpny01*/
      OZ0FM001.OZ0FM-CU-CO-NM-HDR = KUCREC.KUCCONM;
  /* END;                                                    #1156*/

    else
      OZ0F-11220(); /* validate against dcust.vcmpny01*/
      OZ0FM001.OZ0FM-CU-CO-NM-HDR = KUCREC.KUCCONM;
    end

    if (SQLCA.VAGen_SQLCODE == +100)
      OZWREC.XXXPRCNM = "11220"; /* Module identification*/
      set OZ0FM001.OZ0FM-CURR-CU-CO-ID cursor, bold;
      converseLib.validationFailed(51); /* date invalid*/
      OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0FW00.OZ0FW-SWR = "N"; /**/
      return;
    end
  end

  /* -------------------------------------------------------------*/
  /* if cust p.o. entered then curr-cu-co-id must also be entered*/
  /* -------------------------------------------------------------*/
  if (OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM > " "
   && OZ0FM001.OZ0FM-CURR-CU-CO-ID == 0)
    OZWREC.XXXPRCNM = "11200"; /* Module identification*/
    set OZ0FM001.OZ0FM-CURR-CU-CO-ID cursor, bold;
    converseLib.validationFailed(23); /* date invalid*/
    OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZ0FW00.OZ0FW-SWR = "N"; /**/
    return;
  end

  if (OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-TO > " " && 
  OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM == " ")
    OZWREC.XXXPRCNM = "11200"; /* Module identification*/
    set OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM cursor, bold;
    converseLib.validationFailed(23);
    OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZ0FW00.OZ0FW-SWR = "N"; /**/
    return;
  end

  if (OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM > " ")
    OZ0FW00.OZ0FW-CUST-BREAK = OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM;
    OZ0FW00.OZ0FW-IDX1 = 1;
    OZ0FW00.OZ0FW-WC-FLG = " ";

    while (OZ0FW00.OZ0FW-IDX1 < 26)
      if (OZ0FW00.OZ0FW-CUST-BRK[OZ0FW-IDX1] == "*")
        OZ0FW00.OZ0FW-IDX1 = 25;
        OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-TO = "  ";
        OZ0FW00.OZ0FW-WC-FLG = "Y";
      end
      OZ0FW00.OZ0FW-IDX1 = OZ0FW00.OZ0FW-IDX1 + 1;
    end
  end

  /* -------------------------------------------------------------*/
  /* if need dates entered verify that end date is greater than*/
  /* begin date and both are valid dates.*/
  /* -------------------------------------------------------------*/
  OZ0FW00.OZ0FW-SV-NEED-DT-FROM = 0;
  OZ0FW00.OZ0FW-SV-NEED-DT-TO = 0;

  if ((OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM > 0 && 
  OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO == 0)
   || (OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM == 0 && 
  OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO > 0))
    OZWREC.XXXPRCNM = "11200"; /* Module identification*/
    set OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM cursor, bold;
    set OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO bold;
    converseLib.validationFailed(25); /* date invalid*/
    OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZ0FW00.OZ0FW-SWR = "N"; /**/
    return;
  end

  if (OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM > 0)
  /* from date check*/
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "A";
    TA2REC.TA2GRGA = OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM;

    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

    if (TA2REC.TA2RTNCD == 0)
      OZ0FW00.OZ0FW-SV-NEED-DT-FROM = TA2GRGGN;
    else
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM cursor, bold;
      converseLib.validationFailed(20); /* date invalid*/
      OZ0FW00.OZ0FW-SWR = "N"; /**/
      OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      return;
    end
    if (OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO > 0)
  /* to date check*/
      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "A";
      TA2REC.TA2GRGA = OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO;

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

      if (TA2REC.TA2RTNCD == 0)
        OZ0FW00.OZ0FW-SV-NEED-DT-TO = TA2GRGGN;

      else
        OZWREC.XXXPRCNM = "11200"; /* Module identification*/
        set OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO cursor, bold;
        converseLib.validationFailed(20); /* date invalid*/
        OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
        OZ0FW00.OZ0FW-SWR = "N"; /**/
        return;
      end
    end
  /*  */
    if ((OZ0FW00.OZ0FW-SV-NEED-DT-FROM > 
    OZ0FW00.OZ0FW-SV-NEED-DT-TO)
     && (OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO > 0))
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM cursor, bold;
      set OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO bold;
      converseLib.validationFailed(26); /* date invalid*/
      OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0FW00.OZ0FW-SWR = "N"; /**/
      return;
    end

  end

  /* -------------------------------------------------------------*/
  /* if sales office id entered verify against xsotbl*/
  /* retrieve the sales office description*/
  /* -------------------------------------------------------------*/
  if (OZ0FM001.OZ0FM-XSO-SLS-OFC-ID > "  ")
    if (OZ0FM001.OZ0FM-XSO-SLS-OFC-ID in XSOTBL.XSOCD) /* code in table*/

   /* get description*/
      if (OZ0FM001.OZ0FM-XSO-SLS-OFC-ID in XSOTBL.XSOCD)
        OZ0FM001.OZ0FM-XSO-SLS-OFC-ID-DESC = XSOTBL.XSOSNM[sysVar.arrayIndex];
      end
    else
      OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0FW00.OZ0FW-SWR = "N"; /**/
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0FM001.OZ0FM-XSO-SLS-OFC-ID cursor, bold; /* Highlight*/
      set OZ0FM001.OZ0FM-XSO-SLS-OFC-ID-DESC skip, invisible; /* darken desc*/
      converseLib.validationFailed(24); /* sales office code invalid*/
      return;

    end
  else
    OZ0FM001.OZ0FM-XSO-SLS-OFC-ID = "  ";
    OZ0FM001.OZ0FM-XSO-SLS-OFC-ID-DESC = "  ";
  end

  /* -------------------------------------------------------------*/
  /* if sales program id entered verify against dspgm.vspmg001*/
  /* retrieve the sales program id description*/
  /* -------------------------------------------------------------*/
  if (OZ0FM001.OZ0FM-SP-SPGM-ID > " ")
    set SP1REC empty; /* Clear row storage area*/

    SP1REC.SP1ID = OZ0FM001.OZ0FM-SP-SPGM-ID;

    OZ0F-11230(); /* validate against dspgm.vspgm001*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OZ0FM001.OZ0FM-SP-SPGM-ID = SP1REC.SP1ID;
      OZ0FM001.OZ0FM-SP-SPGM-ID-DESC = SP1REC.SP1NM;
    else
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0FM001.OZ0FM-SP-SPGM-ID cursor, bold;
      OZ0FM001.OZ0FM-SP-SPGM-ID-DESC = " ";
      converseLib.validationFailed(36); /* sales rep invalid*/
      OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0FW00.OZ0FW-SWR = "N"; /**/
      return;
    end
  else
    OZ0FM001.OZ0FM-SP-SPGM-ID = "  ";
    OZ0FM001.OZ0FM-SP-SPGM-ID-DESC = "  ";
  end

  /* -------------------------------------------------------------*/
  /* if sales agency id entered verify against dslsmn.vSagcy01*/
  /* retrieve the sales agency name*/
  /* -------------------------------------------------------------*/
  if (OZ0FM001.OZ0FM-SM-SAGCY-ID > " ")
    OZ0FW00.OZ0FW-WS-SALES-AGENCY = OZ0FM001.OZ0FM-SM-SAGCY-ID;
    OZ0F-11240(); /* validate against dslsmn.vsagcy01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OZ0FM001.OZ0FM-SM-SAGCY-ID-DESC = SM1REC.SM1AGYNM;
    else
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0FM001.OZ0FM-SM-SAGCY-ID cursor, bold;
      OZ0FM001.OZ0FM-SM-SAGCY-ID-DESC = "  ";
      converseLib.validationFailed(43); /* sales rep invalid*/
      OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0FW00.OZ0FW-SWR = "N"; /**/
      return;
    end
  else
    OZ0FM001.OZ0FM-SM-SAGCY-ID-DESC = "  ";
  end

  /* -------------------------------------------------------------*/
  /* if sales rep id entered verify against dslsmn.vreps001*/
  /* retrieve the sm-srep-cont-tdt if this is 0 or GT today's date*/
  /* display the sales rep's first and last name*/
  /* else display error*/
  /* -------------------------------------------------------------*/
  if (OZ0FM001.OZ0FM-SM-SREP-ID > 0)
    OZ0FW00.OZ0FW-WS-SALES-REP = OZ0FM001.OZ0FM-SM-SREP-ID;
    OZ0F-11260(); /* get reps first and last names*/
    if (SQLCA.VAGen_SQLCODE == 0)
      if (SM4REC.SM4TDT == 0)
        OZ0FM001.OZ0FM-SM-SREP-LAST-NM = SM4REC.XXXLSTNM;
        OZ0FM001.OZ0FM-SM-SREP-FIRST-NM = SM4REC.XXXFSTNM;
      else
        OZ0FW00.OZ0FW-NUM-DATE = SM4REC.SM4TDT;
  /* MOVE OZ0FW00.OZ0FW-NUM-DATE TO OZ0FW00.OZ0FW-WS-DATE;*/

        set TA2REC empty;
        TA2REC.TA2DTOPT = "GREGGREG";
        TA2REC.TA2GRTYP = "A";
        TA2REC.TA2GRGA = VGVar.currentShortGregorianDate;

        call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

        if (TA2REC.TA2RTNCD == 0)
          OZ0FW00.OZ0FW-SV-DATE = TA2GRGGN;
        else
          OZWREC.XXXPRCNM = "11200"; /* Module identification*/
          converseLib.validationFailed(27); /* date invalid*/
          OZ0FW00.OZ0FW-SWR = "N"; /**/
          OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
        end

        if (OZ0FW00.OZ0FW-NUM-DATE > OZ0FW00.OZ0FW-SV-DATE)
          OZ0FM001.OZ0FM-SM-SREP-LAST-NM = SM4REC.XXXLSTNM;
          OZ0FM001.OZ0FM-SM-SREP-FIRST-NM = SM4REC.XXXFSTNM;
        else
          OZWREC.XXXPRCNM = "11200"; /* Module identification*/
          set OZ0FM001.OZ0FM-SM-SREP-ID cursor, bold;
          converseLib.validationFailed(27); /* sales rep invalid*/
          OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
          OZ0FW00.OZ0FW-SWR = "N"; /**/
          return;
        end
      end
    else
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0FM001.OZ0FM-SM-SREP-ID cursor, bold;
      set OZ0FM001.OZ0FM-SM-SREP-LAST-NM invisible;
      set OZ0FM001.OZ0FM-SM-SREP-FIRST-NM invisible;
      converseLib.validationFailed(27); /* sales rep invalid*/
      OZ0FW00.OZ0FW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0FW00.OZ0FW-SWR = "N"; /**/
      return;
    end
  else
    OZ0FM001.OZ0FM-SM-SREP-LAST-NM = "    ";
    OZ0FM001.OZ0FM-SM-SREP-FIRST-NM = "    ";
    OZ0FW00.OZ0FW-WS-SALES-REP = 0000;
  end

end // end OZ0F-11200


// Select set and open cursor
Function OZ0F-11220()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set KUCREC empty; /* Clear row storage area*/

  KUCREC.KUCCOID = OZ0FW00.OZ0FW-SV-CU-CO-ID;


  try
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0      
   || SQLCA.VAGen_SQLCODE == +100)) 

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUCREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-11220


// Select set and open cursor
Function OZ0F-11230()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  try
    call "IO0070" ("S ", SQLCA, SP1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11230"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "SP1REC"; /* Table view name*/
  TA1REC.TA1TBLKE = SP1REC.SP1KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-11230


// Select set and open cursor
Function OZ0F-11240()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set SM1REC empty; /* Clear row storage area*/

  /* VE OZ0FM001.OZ0FM-SM-SAGCY-ID TO SM1REC.SM1AGYID;*/
  SM1REC.SM1AGYID = OZ0FW00.OZ0FW-WS-SALES-AGENCY;


  try
    call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11240"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DSLSMN "; /* Data base name*/
  TA1REC.TA1TBLVU = "SM1REC"; /* Table view name*/
  TA1REC.TA1TBLKE = SM1REC.SM1AGYID; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-11240


// Select set and open cursor
Function OZ0F-11260()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set SM4REC empty; /* Clear row storage area*/

  /* VE OZ0FM001.OZ0FM-SM-SREP-ID TO SM4REC.SM4REPID;*/
  SM4REC.SM4REPID = OZ0FW00.OZ0FW-WS-SALES-REP;


  try
    call "IO0020" ("S ", SQLCA, SM4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0      /* and normal return code*/
   || SQLCA.VAGen_SQLCODE == 100))  

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DSLSMN  "; /* Data base name*/
  TA1REC.TA1TBLVU = "SM4REC"; /* Table view name*/
  TA1REC.TA1TBLKE = SM4REC.VREPS001-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-11260


// Obtain the data to display
Function OZ0F-11300()
  /* ------------------------------------------------------------*/
  /* build ozarec from screen header*/
  /* ------------------------------------------------------------*/
  OZ0F-11305(); /* build ozarec and open selected cursor*/

  /* ------------------------------------------------------------*/
  /* Fetch and format the data into pages until end of cursor.*/
  /* ------------------------------------------------------------*/
  OZ0FW00.OZ0FW-IXM = 1; /* Display line index*/
  OZ0FW00.OZ0FW-SWC = "N"; /* End of cursor switch*/

  while (OZ0FW00.OZ0FW-SWC == "N") /* Until end of cursor*/

    OZ0F-11320(); /* Fetch next row in the cursor*/

    if (OZ0FW00.OZ0FW-SWC == "N") /* Not end of cursor*/
      OZ0F-11330(); /* Save data in display storage*/
    end

    if (OZ0FW00.OZ0FW-IXM > 11) /* Page is full*/

      OZ0F-11340(); /* Add page to temporary storage*/

      OZ0FW00.OZ0FW-IXM = 1; /* Display line index*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Add any partially formatted last page to the queue.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.OZ0FW-IXM > 1) /* Page was formatted*/
    OZ0F-11340(); /* Add page to temporary storage*/
  end

  /* ------------------------------------------------------------*/
  /* close the cursor*/
  /* ------------------------------------------------------------*/
  OZ0F-11350(); /* Close the selected set cursor*/


  if (OZ0FW00.TA5TSQIX == 0) /* No pages formatted*/

    OZWREC.XXXPRCNM = "11300"; /* Module identification*/
    OZWREC.XXXMSGNO = 16; /* No data was found to display*/
    set OZ0FM001.OZ0FM-CURR-CU-CO-ID cursor; /* cursor*/
  /* MOVE ' ' TO OZ0FM001.OZ0FMSEL(1);/* reset select field*/
  /* SET OZ0FM001.OZ0FMSEL(1) AUTOSKIP;*/

    return; /* Return to previous process*/

  end

  /* RFORM OZ0F-11360;              /* check for sales rep info*/
  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/
end // end OZ0F-11300


// Select set and open cursor
Function OZ0F-11305()
  set OZAREC empty;
  set OP1REC empty;
  set VOCHDR01 empty;
  OZ0FW00.OZ0FW-SV-CUSTOMER = 0;
  OZ0FW00.OZ0FW-SV-CUST-ORD = 0;
  OZ0FW00.OZ0FW-SV-CUST-PO = " ";
  /* ------------------------------------------------------------*/
  /* build ozarec w/ data from screen header*/
  /* ------------------------------------------------------------*/
  VOCHDR01.SOCD-CURR-GPC-CD = OZ0FM001.OZ0FM-CURR-GPC-CD;
  VOCHDR01.SOCD-CURR-CU-CO-ID = OZ0FM001.OZ0FM-CURR-CU-CO-ID;
  OZ0FW00.OZ0FW-SV-STOR-ID-NUM = OZ0FM001.OZ0FM-CURR-STOR-ID; /* udafo*/
  VOCHDR01.SOCD-CURR-STOR-ID = OZ0FW00.OZ0FW-SV-STOR-ID-NUM;
  OZ0FW00.OZ0FW-SV-XNX-DEPT-NUM = OZ0FM001.OZ0FM-CURR-XNX-DEPT; /* udaf*/
  VOCHDR01.SOCD-CURR-XNX-DEPT = OZ0FW00.OZ0FW-SV-XNX-DEPT-NUM;
  VOCHDR01.OP1PARTN = OZ0FW00.OZ0FW-ORD-PART-CHAR;
  VOCHDR01.OP1CUOID = OZ0FM001.OZ0FM-OP-CUST-ORD-ID;
  VOCHDR01.SOCD-APPL-SRC-CD = "OP";

  if (OZ0FW00.OZ0FW-WC-FLG == "Y")
    OZ0FW00.OZ0FW-IDX1 = 1;
    OZ0FW00.OZ0FW-CUST-BREAK = OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM;

    while (OZ0FW00.OZ0FW-IDX1 < 26)
      if (OZ0FW00.OZ0FW-CUST-BRK[OZ0FW-IDX1] == " ")
        OZ0FW00.OZ0FW-CUST-BRK[OZ0FW-IDX1] = "*";
      end
      OZ0FW00.OZ0FW-IDX1 = OZ0FW00.OZ0FW-IDX1 + 1;
    end

    OZAREC.SOCD-CURR-CUST-PO-FROM = OZ0FW00.OZ0FW-CUST-BREAK;

  else

    OZAREC.SOCD-CURR-CUST-PO-FROM = OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM;
  end

  OZAREC.SOCD-CURR-CUST-PO-TO = OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-TO;


  OZAREC.SOCD-CURR-NEED-DT-FROM = OZ0FW00.OZ0FW-SV-NEED-DT-FROM;
  OZAREC.SOCD-CURR-NEED-DT-TO = OZ0FW00.OZ0FW-SV-NEED-DT-TO;

  OP1REC.XSOCD = OZ0FM001.OZ0FM-XSO-SLS-OFC-ID;
  OP1REC.SP1ID = OZ0FM001.OZ0FM-SP-SPGM-ID;
  OP1REC.SM1AGYID = OZ0FM001.OZ0FM-SM-SAGCY-ID;
  OP1REC.SM4REPID = OZ0FW00.OZ0FW-WS-SALES-REP;

  /* ------------------------------------------------------------*/
  /* Based on the options entered - determine which cursor*/
  /* to open.*/
  /*  */
  /* "I1" and "J1" are wildcard options added after the creation*/
  /* of the program.. they are more descriptive of the paragraphs*/
  /* called in the iomod oz2080 than which select it is because*/
  /* frankly, i ran out of creative 2 byte acronyms for the selects.*/
  /*  */
  /* ------------------------------------------------------------*/
  if (OZ0FM001.OZ0FM-XSO-SLS-OFC-ID == " "
   && OZ0FM001.OZ0FM-SP-SPGM-ID == " "
   && (OZ0FM001.OZ0FM-CURR-CU-CO-ID > 0
   || OZ0FM001.OZ0FM-OP-CUST-ORD-ID > 0))

    if (OZ0FM001.OZ0FM-OP-CUST-ORD-ID > 0)
      VOCHDR01.SOCD-CURR-CU-CO-ID = 0;
    end

    if (OZ0FW00.OZ0FW-WC-FLG == "Y")
      OZAREC.IO-TASK = "I1";
    else
      OZAREC.IO-TASK = "S1";
    end

    OZ0F-11310();
    return;
  end

  if ((OZ0FM001.OZ0FM-XSO-SLS-OFC-ID > " "
   || OZ0FM001.OZ0FM-SP-SPGM-ID > " ")
   && (OZ0FM001.OZ0FM-CURR-CU-CO-ID > 0
   || OZ0FM001.OZ0FM-OP-CUST-ORD-ID > 0))

    if (OZ0FM001.OZ0FM-OP-CUST-ORD-ID > 0)
      VOCHDR01.SOCD-CURR-CU-CO-ID = 0;
    end

    if (OZ0FW00.OZ0FW-WC-FLG == "Y")
      OZAREC.IO-TASK = "J1";
    else
      OZAREC.IO-TASK = "S2";
    end

    OZ0F-11310();
    return;
  end

  if ((OZ0FM001.OZ0FM-XSO-SLS-OFC-ID > " "
   || OZ0FM001.OZ0FM-SP-SPGM-ID > " ")
   && OZ0FM001.OZ0FM-CURR-CU-CO-ID == 0
   && OZ0FM001.OZ0FM-OP-CUST-ORD-ID == 0)

    if (OZ0FW00.OZ0FW-WC-FLG == "Y")
      OZAREC.IO-TASK = "J1";
    else
      OZAREC.IO-TASK = "S2";
    end

    OZ0F-11310();
    return;
  end
end // end OZ0F-11305


// Select set and open cursor
Function OZ0F-11310()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01, OP2REC) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11310"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCHDR01.VOCHDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-11310


// Fetch next row in the cursor
Function OZ0F-11320()
  /* fetch next row*/

  if (OZ0FW00.OZ0FW-WC-FLG == "Y") /* wildcarded cust po*/

    if (OZAREC.IO-TASK == "I1"
     || OZAREC.IO-TASK == "I2")
      OZAREC.IO-TASK = "I2";
    else
      OZAREC.IO-TASK = "J2";
    end

  else

    if (OZAREC.IO-TASK == "S1"
     || OZAREC.IO-TASK == "N1")
      OZAREC.IO-TASK = "N1";
    else
      OZAREC.IO-TASK = "N2";
    end

  end

  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01, OP2REC) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      OZ0FW00.OZ0FW-SWC = "Y"; /* Indicate end of cursor*/

      return; /* Return to previous process*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11320"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCHDR01.VOCHDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-11320


// Save data in display storage
Function OZ0F-11330()
  OZ0FW00.OZ0FW-SEL-SALES-OFF = OP1REC.XSOCD;
  /* MOVE OP1REC.XSOCD TO OZ0FM001.OZ0FM-XSO-SLS-OFC-ID;*/
  /* --------------------------------------------------------------*/
  /* check cust just read against the previously read cust*/
  /* --------------------------------------------------------------*/
  if (VOCHDR01.SOCD-CURR-CU-CO-ID != OZ0FW00.OZ0FW-SV-CUSTOMER)
    set OZ0FW99 empty;
    OZ0FW00.OZ0FW-SV-CNT = 1; /* w99 index*/
    OZ0FW00.OZ0FW-SV-CUSTOMER = VOCHDR01.SOCD-CURR-CU-CO-ID;
  end

  /* --------------------------------------------------------------*/
  /* check ord id against saved w99 table to ensure it hasn't*/
  /* already been processed.*/
  /* --------------------------------------------------------------*/
  OZ0FW00.OZ0FW-IDX = 1; /* work index*/
  OZ0FW00.OZ0FW-ORD-MATCH = "N";

  while (OZ0FW00.OZ0FW-IDX < 5001 /* max occurences*/
   && OZ0FW00.OZ0FW-ORD-MATCH == "N"
   && OZ0FW99.OZ0FW-SV-ORD-ID[OZ0FW-IDX] > 0)

    if (VOCHDR01.OP1CUOID == OZ0FW99.OZ0FW-SV-ORD-ID[OZ0FW-IDX])
      OZ0FW00.OZ0FW-ORD-MATCH = "Y"; /* ord already processed*/
      OZ0FW00.OZ0FW-IDX = 5000;
    end

    OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
  end


  /* --------------------------------------------------------------*/
  /* new order from oz2080 - it hasn't been processed yet*/
  /* --------------------------------------------------------------*/
  if (OZ0FW00.OZ0FW-ORD-MATCH == "N") /* new order from oz2080*/

  /* --------------------------------------------------------------*/
  /* call oz2000 for the letter type cd(po/so) and dist inst data*/
  /* --------------------------------------------------------------*/
    OZ0FW00.OZ0FW-FL-PO-SO = "Y"; /* udafon*/
    if (OZ0FW00.OZ0FW-OVERRIDE-DI == "Y")
      OZ0F-11336(); /* read vocldo01 to get po/so*/
    else
      OZ0F-11335(); /* call oz2000 to determine po/so*/
    end

    OZWREC.SOCD-LTR-TYP-CD = OZDREC.DIST-INST-LTR-TYP-CD;

    if (OZDREC.DIST-INST-LTR-TYP-CD == "PO")

      OZ0FW00.OZ0FW-WRITE-FLG = "N";
      OZ0FW00.OZ0FW-ORD-FL = "Y";

      while (OZ0FW00.OZ0FW-ORD-FL == "Y")

  /* --------------------------------------------------------------*/
  /* call oz2070 for the cust associated orders*/
  /* --------------------------------------------------------------*/
        OZ0F-11339(); /* call oz2070*/

        if (OZCREC.RETURN-CD == "00")

  /* --------------------------------------------------------------*/
  /* check for return from oz0i w/ overrides and if not*/
  /* call oz2020 for the eligibility, otherwise force 'y' into*/
  /* the order eligible flag. Changed : forced 'n' the ord.elibible*/
  /* --------------------------------------------------------------*/
          if (OZ0FW00.OZ0FW-BYPASS-ELIGB == " " || 
          OZ0FW00.OZ0FW-BYPASS-ELIGB == "N")
            OZ0F-11337(); /* call oz2020*/
          else
            OZBREC.RTN-ORDER-ELIGB = "Y";
          end

          if (OZBREC.RTN-ORDER-ELIGB == "Y")
            OZ0FW99.OZ0FW-SV-ORD-ID[OZ0FW-SV-CNT] = OZCREC.OP1CUOID;
            OZ0FW01.OZ0FW-1ST-ORD-ID[OZ0FW-IXM] = OZCREC.OP1CUOID;
            OZ0FW00.OZ0FW-SV-CNT = OZ0FW00.OZ0FW-SV-CNT + 1;
                                   /* sv ord id to w99 & up index*/
            OZ0FW00.OZ0FW-WRITE-FLG = "Y";
          end

        else
          OZ0FW00.OZ0FW-ORD-FL = "N";
        end

      end

                                   /* this cust should go to the screen*/
      if (OZ0FW00.OZ0FW-SV-CNT > 1
       && OZ0FW00.OZ0FW-WRITE-FLG == "Y")

        OZ0FW01.OZ0FW-CUST[OZ0FW-IXM] = OZCREC.DIST-INST-CU-CO-ID;
        OZ0FW01.OZ0FW-STR[OZ0FW-IXM] = OZCREC.DIST-INST-CU-STOR-ID;
        OZ0FW01.OZ0FW-DPT[OZ0FW-IXM] = OZCREC.DIST-INST-XNX-DEPT-ID-XREF;

        OZ0FW01.OZ0FW-WS-CUST[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-CU-CO-ID;
        OZ0FW01.OZ0FW-WS-STR[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-STOR-ID;
        OZ0FW01.OZ0FW-WS-DPT[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-XNX-DEPT;
  /*  */
        OZ0FW01.OZ0FW-PO-SO[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-CUST-PO;
        OZ0FW01.OZ0FW-SOCD-CURR-CUST-PO[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-CUST-PO;
        OZ0FW01.OZ0FW-SOCD-LTR-TYP-CD[OZ0FW-IXM] = "PO";
  /*  */
        OZ0FW01.OZ0FW-OP-ORD-PART-CHAR[OZ0FW-IXM] = VOCHDR01.OP1PARTN; /* udafon*/

        OZ0FW01.OZ0FW-OP-NIKE-ORD-ID[OZ0FW-IXM] = VOCHDR01.OP1NORID; /* udafon*/

        OZ0FW01.OZ0FW-OP-CUST-ORD-ID[OZ0FW-IXM] = VOCHDR01.OP1CUOID; /* udafon*/
  /*  */
                                   /* sv ord for m002 & m003 read*/
        OZ0FW01.OZ0FW-TOT-ORD-VAL[OZ0FW-IXM] = OP1REC.OP1OVALU;
        OZ0FW01.OZ0FW-TOT-ORD-QTY[OZ0FW-IXM] = OP1REC.OP1OTUNT;
        OZ0FW01.OZ0FW-XPTCD[OZ0FW-IXM] = OP1REC.XPTCD;
        OZ0FW01.OZ0FW-CURR-DSBDT[OZ0FW-IXM] = OP1REC.OP1DSBDT;
        OZ0FW01.OZ0FW-CURR-DSADT[OZ0FW-IXM] = OP1REC.OP1DSADT;
        OZ0FW01.OZ0FW-PO-MONEY-MTH[OZ0FW-IXM] = OP1REC.OP1WIPIN;
        OZ0FW01.OZ0FW-SP1ID[OZ0FW-IXM] = OP1REC.SP1ID;

        OZ0FW01.OZ0FW-OP-CUST-PO[OZ0FW-IXM] = VOCHDR01.OP1CUPO;
        OZ0FW01.OZ0FW-ORIG-DSBDT[OZ0FW-IXM] = VOCHDR01.OP1DSBDT;
        OZ0FW01.OZ0FW-ORIG-DSADT[OZ0FW-IXM] = VOCHDR01.OP1DSADT;

  /* -------------------------------------------------------------*/
  /* get date/time for last letter*/
  /* -------------------------------------------------------------*/
        OZ0FW00.OZ0FW-LAST-RPT-DT = VOCHDR01.SOCD-LAST-RPT-DT;
        OZ0FW00.OZ0FW-LAST-RPT-YY1 = OZ0FW00.OZ0FW-LAST-RPT-YYA;
        OZ0FW00.OZ0FW-LAST-RPT-YY2 = OZ0FW00.OZ0FW-LAST-RPT-YYB;
        OZ0FW00.OZ0FW-LAST-RPT-MM1 = OZ0FW00.OZ0FW-LAST-RPT-MM;
        OZ0FW00.OZ0FW-LAST-RPT-DD1 = OZ0FW00.OZ0FW-LAST-RPT-DD;
        OZ0FW01.OZ0FW-WS-LAST-RPT-DT[OZ0FW-IXM] = OZ0FW00.OZ0FW-LAST-RPT-DT1;
        OZ0FW00.OZ0FW-RPT-HHMMSS = VOCHDR01.SOCD-RPT-HHMMSS;
        OZ0FW01.OZ0FW-WS-RPT-HHMMSS[OZ0FW-IXM] = OZ0FW00.OZ0FW-RPT-HHMMSS;
  /* -------------------------------------------------------------*/

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* Increment line index*/

      end

    else /* it's an 'SO'*/

      if (OZ0FW00.OZ0FW-BYPASS-ELIGB == " " || 
      OZ0FW00.OZ0FW-BYPASS-ELIGB == "N")
        OZ0F-11337(); /* read to determine order eligibility*/
      else
        OZBREC.RTN-ORDER-ELIGB = "Y";
      end

      if (OZBREC.RTN-ORDER-ELIGB == "Y")

        if (OZ0FW01.OZ0FW-NO-DI[OZ0FW-IXM] == " ")
          OZ0FW01.OZ0FW-CUST[OZ0FW-IXM] = OZDREC.DIST-INST-CU-CO-ID;
          OZ0FW01.OZ0FW-STR[OZ0FW-IXM] = OZDREC.DIST-INST-CU-STOR-ID;
          OZ0FW01.OZ0FW-DPT[OZ0FW-IXM] = OZDREC.DIST-INST-XNX-DEPT-ID;
        else
          OZ0FW01.OZ0FW-CUST[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-CU-CO-ID;
          OZ0FW01.OZ0FW-STR[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-STOR-ID;
          OZ0FW01.OZ0FW-DPT[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-XNX-DEPT;
        end

        OZ0FW01.OZ0FW-WS-CUST[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-CU-CO-ID;
        OZ0FW01.OZ0FW-WS-STR[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-STOR-ID;
        OZ0FW01.OZ0FW-WS-DPT[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-XNX-DEPT;
        OZ0FW01.OZ0FW-SOCD-CURR-CUST-PO[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-CUST-PO;
        OZ0FW00.OZ0FW-SV-CUST-ORD = VOCHDR01.OP1CUOID;
        OZ0FW01.OZ0FW-PO-SO[OZ0FW-IXM] = OZ0FW00.OZ0FW-SV-CUST-ORD;
        OZ0FW01.OZ0FW-SOCD-LTR-TYP-CD[OZ0FW-IXM] = "SO";

                                   /* sv ord id to w99 tbl*/
        OZ0FW99.OZ0FW-SV-ORD-ID[OZ0FW-SV-CNT] = VOCHDR01.OP1CUOID;
        OZ0FW01.OZ0FW-1ST-ORD-ID[OZ0FW-IXM] = VOCHDR01.OP1CUOID;
  /*  */
        OZ0FW01.OZ0FW-OP-ORD-PART-CHAR[OZ0FW-IXM] = VOCHDR01.OP1PARTN; /* udafon*/

        OZ0FW01.OZ0FW-OP-NIKE-ORD-ID[OZ0FW-IXM] = VOCHDR01.OP1NORID; /* udafon*/

        OZ0FW01.OZ0FW-OP-CUST-ORD-ID[OZ0FW-IXM] = VOCHDR01.OP1CUOID; /* udafon*/
  /*  */

                                   /* sv for m002 & m003 read*/
        OZ0FW01.OZ0FW-TOT-ORD-VAL[OZ0FW-IXM] = OP1REC.OP1OVALU;
        OZ0FW01.OZ0FW-TOT-ORD-QTY[OZ0FW-IXM] = OP1REC.OP1OTUNT;
        OZ0FW01.OZ0FW-XPTCD[OZ0FW-IXM] = OP1REC.XPTCD;
        OZ0FW01.OZ0FW-CURR-DSBDT[OZ0FW-IXM] = OP1REC.OP1DSBDT;
        OZ0FW01.OZ0FW-CURR-DSADT[OZ0FW-IXM] = OP1REC.OP1DSADT;
        OZ0FW01.OZ0FW-PO-MONEY-MTH[OZ0FW-IXM] = OP1REC.OP1WIPIN;
        OZ0FW01.OZ0FW-SP1ID[OZ0FW-IXM] = OP1REC.SP1ID;

        OZ0FW01.OZ0FW-OP-CUST-PO[OZ0FW-IXM] = VOCHDR01.OP1CUPO;
        OZ0FW01.OZ0FW-ORIG-DSBDT[OZ0FW-IXM] = VOCHDR01.OP1DSBDT;
        OZ0FW01.OZ0FW-ORIG-DSADT[OZ0FW-IXM] = VOCHDR01.OP1DSADT;

  /* -------------------------------------------------------------*/
  /* get date/time for last letter*/
  /* -------------------------------------------------------------*/
        OZ0FW00.OZ0FW-LAST-RPT-DT = VOCHDR01.SOCD-LAST-RPT-DT;
        OZ0FW00.OZ0FW-LAST-RPT-YY1 = OZ0FW00.OZ0FW-LAST-RPT-YYA;
        OZ0FW00.OZ0FW-LAST-RPT-YY2 = OZ0FW00.OZ0FW-LAST-RPT-YYB;
        OZ0FW00.OZ0FW-LAST-RPT-MM1 = OZ0FW00.OZ0FW-LAST-RPT-MM;
        OZ0FW00.OZ0FW-LAST-RPT-DD1 = OZ0FW00.OZ0FW-LAST-RPT-DD;
        OZ0FW01.OZ0FW-WS-LAST-RPT-DT[OZ0FW-IXM] = OZ0FW00.OZ0FW-LAST-RPT-DT1;
        OZ0FW00.OZ0FW-RPT-HHMMSS = VOCHDR01.SOCD-RPT-HHMMSS;
        OZ0FW01.OZ0FW-WS-RPT-HHMMSS[OZ0FW-IXM] = OZ0FW00.OZ0FW-RPT-HHMMSS;
  /* -------------------------------------------------------------*/

        OZ0FW00.OZ0FW-SV-CNT = OZ0FW00.OZ0FW-SV-CNT + 1; /* up w99 index*/
        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* up w01 index*/

      else /* - UDAFON*/
        if (converseVar.eventKey is pf14
         && converseVar.validationMsgNum == 0)
          if (OZ0FW01.OZ0FW-NO-DI[OZ0FW-IXM] == " ")
            OZ0FW01.OZ0FW-CUST[OZ0FW-IXM] = OZDREC.DIST-INST-CU-CO-ID;
            OZ0FW01.OZ0FW-STR[OZ0FW-IXM] = OZDREC.DIST-INST-CU-STOR-ID;
            OZ0FW01.OZ0FW-DPT[OZ0FW-IXM] = OZDREC.DIST-INST-XNX-DEPT-ID;
          else
            OZ0FW01.OZ0FW-CUST[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-CU-CO-ID;
            OZ0FW01.OZ0FW-STR[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-STOR-ID;
            OZ0FW01.OZ0FW-DPT[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-XNX-DEPT;
          end

          OZ0FW01.OZ0FW-WS-CUST[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-CU-CO-ID;
          OZ0FW01.OZ0FW-WS-STR[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-STOR-ID;
          OZ0FW01.OZ0FW-WS-DPT[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-XNX-DEPT;
          OZ0FW01.OZ0FW-SOCD-CURR-CUST-PO[OZ0FW-IXM] = VOCHDR01.SOCD-CURR-CUST-PO;
          OZ0FW00.OZ0FW-SV-CUST-ORD = VOCHDR01.OP1CUOID;
          OZ0FW01.OZ0FW-PO-SO[OZ0FW-IXM] = OZ0FW00.OZ0FW-SV-CUST-ORD;
          OZ0FW01.OZ0FW-SOCD-LTR-TYP-CD[OZ0FW-IXM] = "SO";

                                   /* sv ord id to w99 tbl*/
          OZ0FW99.OZ0FW-SV-ORD-ID[OZ0FW-SV-CNT] = VOCHDR01.OP1CUOID;
          OZ0FW01.OZ0FW-1ST-ORD-ID[OZ0FW-IXM] = VOCHDR01.OP1CUOID;
  /*  */
          OZ0FW01.OZ0FW-OP-ORD-PART-CHAR[OZ0FW-IXM] = VOCHDR01.OP1PARTN; /* udafon*/

          OZ0FW01.OZ0FW-OP-NIKE-ORD-ID[OZ0FW-IXM] = VOCHDR01.OP1NORID; /* udafon*/

          OZ0FW01.OZ0FW-OP-CUST-ORD-ID[OZ0FW-IXM] = VOCHDR01.OP1CUOID; /* udafon*/
  /*  */

                                   /* sv for m002 & m003 read*/
          OZ0FW01.OZ0FW-TOT-ORD-VAL[OZ0FW-IXM] = OP1REC.OP1OVALU;
          OZ0FW01.OZ0FW-TOT-ORD-QTY[OZ0FW-IXM] = OP1REC.OP1OTUNT;
          OZ0FW01.OZ0FW-XPTCD[OZ0FW-IXM] = OP1REC.XPTCD;
          OZ0FW01.OZ0FW-CURR-DSBDT[OZ0FW-IXM] = OP1REC.OP1DSBDT;
          OZ0FW01.OZ0FW-CURR-DSADT[OZ0FW-IXM] = OP1REC.OP1DSADT;
          OZ0FW01.OZ0FW-PO-MONEY-MTH[OZ0FW-IXM] = OP1REC.OP1WIPIN;
          OZ0FW01.OZ0FW-SP1ID[OZ0FW-IXM] = OP1REC.SP1ID;

          OZ0FW01.OZ0FW-OP-CUST-PO[OZ0FW-IXM] = VOCHDR01.OP1CUPO;
          OZ0FW01.OZ0FW-ORIG-DSBDT[OZ0FW-IXM] = VOCHDR01.OP1DSBDT;
          OZ0FW01.OZ0FW-ORIG-DSADT[OZ0FW-IXM] = VOCHDR01.OP1DSADT;

  /* -------------------------------------------------------------*/
  /* get date/time for last letter*/
  /* -------------------------------------------------------------*/
          OZ0FW00.OZ0FW-LAST-RPT-DT = VOCHDR01.SOCD-LAST-RPT-DT;
          OZ0FW00.OZ0FW-LAST-RPT-YY1 = OZ0FW00.OZ0FW-LAST-RPT-YYA;
          OZ0FW00.OZ0FW-LAST-RPT-YY2 = OZ0FW00.OZ0FW-LAST-RPT-YYB;
          OZ0FW00.OZ0FW-LAST-RPT-MM1 = OZ0FW00.OZ0FW-LAST-RPT-MM;
          OZ0FW00.OZ0FW-LAST-RPT-DD1 = OZ0FW00.OZ0FW-LAST-RPT-DD;
          OZ0FW01.OZ0FW-WS-LAST-RPT-DT[OZ0FW-IXM] = OZ0FW00.OZ0FW-LAST-RPT-DT1;
          OZ0FW00.OZ0FW-RPT-HHMMSS = VOCHDR01.SOCD-RPT-HHMMSS;
          OZ0FW01.OZ0FW-WS-RPT-HHMMSS[OZ0FW-IXM] = OZ0FW00.OZ0FW-RPT-HHMMSS;
  /* -------------------------------------------------------------*/

          OZ0FW00.OZ0FW-SV-CNT = OZ0FW00.OZ0FW-SV-CNT + 1; /* up w99 index*/
          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* up w01 index*/

        end /* UDAFON*/
      end /* -*/
    end /* -*/
  end /* -*/
end // end OZ0F-11330


// call oz2000
Function OZ0F-11335()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set OZDREC empty; /* Clear row storage area*/

  OZDREC.REQ-XGP-GPC = OZ0FM001.OZ0FM-CURR-GPC-CD;
  OZDREC.REQ-XSO-SLS-OFC-ID = OP1REC.XSOCD;
  OZDREC.REQ-CU-CO-ID = VOCHDR01.SOCD-CURR-CU-CO-ID;
  OZDREC.REQ-CU-STOR-ID = VOCHDR01.SOCD-CURR-STOR-ID;
  OZDREC.REQ-XNX-DEPT-ID = VOCHDR01.SOCD-CURR-XNX-DEPT;

  try
    call "OZ2000" (OZDREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (OZDREC.RETURN-CD == "00")
      return; /* Return to previous process*/
    else
      if (OZDREC.RETURN-CD == "02")
        OZ0FW00.OZ0FW-FL-PO-SO = "N";
        OZDREC.DIST-INST-LTR-TYP-CD = "SO";
        OZWREC.SOCD-LTR-TYP-CD = "SO";
        OZ0FW01.OZ0FW-NO-DI[OZ0FW-IXM] = "*";
        return; /* Return to previous process*/
      end
    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = OZDREC.RETURN-CD; /* SQL commarea*/

  OZWREC.XXXPRCNM = "11335"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && OZDREC.RETURN-CD == "03")      /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "OZDREC "; /* Type of error*/
  TA1REC.TA1LOC = "READ FOR LETTER TYPE CD";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "OZ2000 "; /* Data base name*/
  TA1REC.TA1TBLVU = "OZDREC  "; /* Table view name*/
  TA1REC.TA1TBLKE = OZDREC.OZD-PASS-REC; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-11335


// select vocldo01 record
Function OZ0F-11336()
  set VOCLDO01 empty;
  VOCLDO01.SOCD-LTR-OVRD-ID = OZ0FW00.OZ0FW-SOCD-LTR-OVRD-ID;

  try
    call "VOCLDO01" ("S ", SQLCA, VOCLDO01) {isNoRefresh = yes, isExternal = yes};
  end

  OZDREC.DIST-INST-LTR-TYP-CD = VOCLDO01.SOCD-LTR-TYP-CD;
  OZDREC.DIST-INST-GPC-CD = VOCLDO01.SOCD-XGP-GPC-CD;
  OZDREC.DIST-INST-XSO-SLS-OFC-ID = VOCLDO01.XSOCD;
  OZDREC.DIST-INST-CU-CO-ID = VOCLDO01.SOCD-CU-CO-ID;
  OZDREC.DIST-INST-CU-STOR-ID = VOCLDO01.SOCD-CU-STOR-ID;
  OZDREC.DIST-INST-XNX-DEPT-ID = VOCLDO01.SOCD-XNX-DEPT-ID;

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11336"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDO01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDO01.VOCLDO01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-11336


// call oz2020
Function OZ0F-11337()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set OZBREC empty; /* Clear row storage area*/

  OZBREC.REQ-CHK-CUSTOMER-ELIGB = "Y";
  OZBREC.REQ-CHK-BULK-DRAW-ELIGB = "Y";
  OZBREC.REQ-CHK-ORDER-TYPE-ELIGB = "Y";
  OZBREC.REQ-OP-ORD-PART-CHAR = VOCHDR01.OP1PARTN;
  OZBREC.REQ-OP-CUST-ORD-ID = VOCHDR01.OP1CUOID;
  OZBREC.REQ-OP-NIKE-ORD-ID = VOCHDR01.OP1NORID;
  OZBREC.REQ-SOCD-APPL-SRC-CD = "OP";

  try
    call "OZ2020" (OZBREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && OZBREC.RETURN-CD == "00")      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && OZBREC.RETURN-CD == "02")      /* row not found  #2254*/

    return; /* Return to previous process*/

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = OZBREC.RETURN-CD; /* SQL commarea*/

  OZWREC.XXXPRCNM = "11337"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && OZBREC.RETURN-CD == "03")      /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "OZBREC"; /* Type of error*/
  TA1REC.TA1LOC = "GET ELIGIBILITY OF ORDER";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "OZ2020 "; /* Data base name*/
  TA1REC.TA1TBLVU = "OZBREC  "; /* Table view name*/
  TA1REC.TA1TBLKE = OZBREC.OZB-PASS-REC; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-11337


// call oz2070
Function OZ0F-11339()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  if (OZCREC.REQ-ACTION == "  ")
    set OZCREC empty; /* Clear row storage area*/
    OZCREC.REQ-ACTION = "FF";
  else
    set OZCREC empty; /* Clear row storage area*/
    OZCREC.REQ-ACTION = "FN";
  end

  OZCREC.REQ-LTR-DIST-CD = OZDREC.DIST-INST-LTR-TYP-CD;
  OZCREC.DIST-INST-GPC-CD = OZDREC.DIST-INST-GPC-CD;
  OZCREC.DIST-INST-XSO-SLS-OFC-ID = OZDREC.DIST-INST-XSO-SLS-OFC-ID;
  OZCREC.DIST-INST-CU-CO-ID = OZDREC.DIST-INST-CU-CO-ID;
  OZCREC.DIST-INST-CU-STOR-ID = OZDREC.DIST-INST-CU-STOR-ID;
  OZCREC.DIST-INST-XNX-DEPT-ID-XREF = OZDREC.DIST-INST-XNX-DEPT-ID;
  OZCREC.OVERRIDE-DI-LOOKUP = OZWREC.OVERRIDE-DI; /* udafon*/

  OZCREC.REQ-CUST-PO = VOCHDR01.SOCD-CURR-CUST-PO;
  OZCREC.REQ-CUST-ORD-ID = VOCHDR01.OP1CUOID;
  OZCREC.REQ-SOCD-APPL-SRC-CD = "OP";

  try
    call "OZ2070" (OZCREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (OZCREC.RETURN-CD == "00") /* and normal return code*/

      return; /* Return to previous process*/
    else
      if (OZCREC.RETURN-CD == "02") /* and normal return code*/
        OZCREC.REQ-ACTION = "  ";
        return; /* Return to previous process*/
      end

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = OZCREC.RETURN-CD; /* SQL commarea*/

  OZWREC.XXXPRCNM = "11337"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && OZCREC.RETURN-CD == "03")      /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "OZCREC"; /* Type of error*/
  TA1REC.TA1LOC = "GET ALL ORDER IDS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "OZ2070 "; /* Data base name*/
  TA1REC.TA1TBLVU = "OZCREC  "; /* Table view name*/
  TA1REC.TA1TBLKE = OZCREC.OZC-PASS-REC; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-11339


// Add page to temporary storage
Function OZ0F-11340()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OZ0FW01.XXXTSLEN = OZ0FW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ1F"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OZ0FW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OZ0FW01 empty; /* M001 display storage*/

    OZ0FW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "11600"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-11340


// Close selected set cursor
Function OZ0F-11350()
  /* Close the cursor*/

  if (OZ0FW00.OZ0FW-WC-FLG == "Y") /* wildcarded cust po*/

    if (OZAREC.IO-TASK == "I1"
     || OZAREC.IO-TASK == "I2")
      OZAREC.IO-TASK = "I3";
    else
      OZAREC.IO-TASK = "J3";
    end

  else

    if (OZAREC.IO-TASK == "N1"
     || OZAREC.IO-TASK == "S1")
      OZAREC.IO-TASK = "C1";
    else
      OZAREC.IO-TASK = "C2";
    end

  end

  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to previous process*/
  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11700"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCHDR01"; /* Table view name*/

  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

end // end OZ0F-11350


// Format and converse the map
Function OZ0F-12000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0FW00.OZ0FW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OZ0FW00.OZ0FW-SWF == "Y") /* Map must be formatted*/
  /* Save header info in working storage*/
      OZ0FW00.OZ0FW-CURR-CU-CO-ID = OZ0FM001.OZ0FM-CURR-CU-CO-ID;
      OZ0FW00.OZ0FW-CURR-STOR-ID = OZ0FM001.OZ0FM-CURR-STOR-ID;
      OZ0FW00.OZ0FW-CURR-XNX-DEPT = OZ0FM001.OZ0FM-CURR-XNX-DEPT;
      OZ0FW00.OZ0FW-CU-CO-NM-HDR = OZ0FM001.OZ0FM-CU-CO-NM-HDR;
      OZ0FW00.OZ0FW-OVERRIDE-DI = OZ0FM001.OZ0FM-OVERRIDE-DI;
      OZ0FW00.OZ0FW-SOCD-CURR-CUST-PO-FROM = OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM;
      OZ0FW00.OZ0FW-SOCD-CURR-CUST-PO-TO = OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-TO;
      OZ0FW00.OZ0FW-OP-CUST-ORD-ID = OZ0FM001.OZ0FM-OP-CUST-ORD-ID;
      OZ0FW00.OZ0FW-SOCD-CURR-NEED-DT-FROM = OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM;
      OZ0FW00.OZ0FW-SOCD-CURR-NEED-DT-TO = OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO;
      OZ0FW00.OZ0FW-CURR-GPC-CD = OZ0FM001.OZ0FM-CURR-GPC-CD;
      OZ0FW00.OZ0FW-GPC-DESC = OZ0FM001.OZ0FM-GPC-DESC;
      OZ0FW00.OZ0FW-XSO-SLS-OFC-ID = OZ0FM001.OZ0FM-XSO-SLS-OFC-ID;
      OZ0FW00.OZ0FW-XSO-SLS-OFC-ID-DESC = OZ0FM001.OZ0FM-XSO-SLS-OFC-ID-DESC;
      OZ0FW00.OZ0FW-SP-SPGM-ID = OZ0FM001.OZ0FM-SP-SPGM-ID;
      OZ0FW00.OZ0FW-SP-SPGM-ID-DESC = OZ0FM001.OZ0FM-SP-SPGM-ID-DESC;
      OZ0FW00.OZ0FW-SM-SAGCY-ID = OZ0FM001.OZ0FM-SM-SAGCY-ID;
      OZ0FW00.OZ0FW-SM-SAGCY-ID-DESC = OZ0FM001.OZ0FM-SM-SAGCY-ID-DESC;
      OZ0FW00.OZ0FW-SM-SREP-ID = OZ0FM001.OZ0FM-SM-SREP-ID;
      OZ0FW00.OZ0FW-SM-SREP-FIRST-NM = OZ0FM001.OZ0FM-SM-SREP-FIRST-NM;
      OZ0FW00.OZ0FW-SM-SREP-LAST-NM = OZ0FM001.OZ0FM-SM-SREP-LAST-NM;
      OZ0FW00.OZ0FW-BYPASS-ELIGB = "N"; /* UDAFON*/

      OZ0F-12100(); /* Format the data on the map*/
    end

  end
  if (converseVar.eventKey is pf14 /* udafon test change*/
   && OZ0FW00.OZ0FW-FL-PO-SO == "Y"
   && converseVar.validationMsgNum == 0)
    OZWREC.KUCCOID = OZ0FW-CURR-CU-CO-ID;
    OZWREC.SOCD-CURR-CU-CO-ID = OZ0FW-CURR-CU-CO-ID; /* UDAFON*/
    OZWREC.XGPCD = OZ0FW-CURR-GPC-CD;
    OZWREC.XSOCD = OZ0FW-XSO-SLS-OFC-ID;
    OZWREC.XOTCD = OZ0FW-XSO-SLS-OFC-ID; /* UDAFON*/
    OZWREC.XSOSNM = OZ0FW-XSO-SLS-OFC-ID-DESC;
    OZWREC.XGPDESC = OZ0FW-GPC-DESC;
    OZWREC.XXXFSTNM = OZ0FW-SM-SREP-FIRST-NM;
    OZWREC.XXXLSTNM = OZ0FW-SM-SREP-LAST-NM;
    OZWREC.KUCCONM = OZ0FW-CU-CO-NM-HDR;
    OZWREC.CUST-STR-DPT = OZ0FW00.OZ0FW-CUST-STR-DPT;
    OZWREC.OZW-HDR-CSD = OZ0FW00.OZ0FW-CUST-STR-DPT; /* UDAFON*/
    OZWREC.OVERRIDE-DI = "N"; /* UDAFON*/
    OZWREC.SOCD-LTR-OVRD-ID = 0; /* UDAFON*/
    OZWREC.SOCD-LTR-RQT-ID = 0; /* UDAFON*/
    COMMAREA.CATOAP = "OZ0I";
    XSOZ-S0001();
    exit stack;
  end

  if (converseVar.eventKey is pf14 /* udafon*/
   && OZ0FW00.OZ0FW-FL-PO-SO == "N"
   && converseVar.validationMsgNum == 0)
  /* MOVE OZWREC.OZW-APPIDX TO OZ0FW00.OZ0FW-SAVE-APPIDX; /* save index*/
  /* MOVE OZWREC.OZW-APPL(OZW-APPIDX) TO OZ0FW00.OZ0FW-SAVE-APPL;*/
  /* SET OZWREC EMPTY;*/
  /* MOVE OZ0FW00.OZ0FW-SAVE-APPIDX TO OZWREC.OZW-APPIDX; /* restore index*/
  /* MOVE OZ0FW00.OZ0FW-SAVE-APPL TO OZWREC.OZW-APPL(OZW-APPIDX);*/
    OZWREC.SOCD-CURR-CU-CO-ID = OZ0FM001.OZ0FM-CURR-CU-CO-ID;
    OZWREC.KUCCOID = OZ0FM001.OZ0FM-CURR-CU-CO-ID;
    OZWREC.XGPCD = OZ0FM001.OZ0FM-CURR-GPC-CD;
    OZWREC.XOTCD = OZ0FM001.OZ0FM-XSO-SLS-OFC-ID;
    OZWREC.XSOCD = OZ0FW-XSO-SLS-OFC-ID;
    OZWREC.CUST-STR-DPT = OZ0FW00.OZ0FW-CUST-STR-DPT;
    OZWREC.OZW-HDR-CSD = OZ0FW00.OZ0FW-CUST-STR-DPT; /* UDAFON*/
    OZWREC.OVERRIDE-DI = "N";
    OZWREC.SOCD-LTR-OVRD-ID = 0; /* UDAFON*/
    OZWREC.SOCD-LTR-RQT-ID = 0; /* UDAFON*/
    OZWREC.XXXMSGNO = 16;
    COMMAREA.CATOAP = "OZ0I";
    XSOZ-S0001();
    exit stack;
  end
  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZ0FM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OZ0FM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0FM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* Set attributes for add and change depending on authority*/
  /* ------------------------------------------------------------*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OZWREC.XXXMSGNO != 0) /* Message to display*/

      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0FM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OZ0FM001.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/

    set OZ0FM001 alarm; /* Indicate sound alarm*/

  end

  converse OZ0FM001 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  OZ0FW00.OZ0FW-SFN = " "; /* reset function switch*/
  OZ0FW00.OZ0FW-SAVE-PAGE = 0; /* reset saved page*/
  converseLib.validationFailed(0);

  COMMAREA.CATOAP = OZ0FM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0FM001.CAITEM; /* Application data*/
end // end OZ0F-12000


// Format the display data
Function OZ0F-12100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set OZ0FM001 initial; /* M001 input/output area*/

  OZ0FW00.OZ0FW-SWF = "N"; /* Format the map switch*/

  /* ------------------------------------------------------------*/
  /* If a ruling was added, get the page from temp storage that the*/
  /* ruling's on and display it.*/
  /* ------------------------------------------------------------*/

  if (OZ0FW00.OZ0FW-M1-SAVE-PAGE != 0)
    OZ0FW00.OZ0FW-SAVE-PAGE = OZ0FW00.OZ0FW-M1-SAVE-PAGE;
    OZ0FW00.OZ0FW-M1-SAVE-PAGE = 0;
    OZ0FW00.TA5TSQIX = OZ0FW00.OZ0FW-M1-TSQIX;
    OZ0FW00.OZ0FW-M1-TSQIX = 0;
    OZ0FW00.XXXTSLEN = 2486;
  end

  if (OZ0FW00.OZ0FW-SAVE-PAGE != 0) /* if page saved off*/

    OZ0FW00.XXXTSPAG = OZ0FW-SAVE-PAGE; /* use saved page*/

    OZ0F-12110(); /* Obtain temporary storage page*/

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set OZ0FM001.XXXLITPG skip; /* "PAGE" literal*/
    OZ0FM001.XXXTSPAG = OZ0FW00.XXXTSPAG; /* Current page*/
    set OZ0FM001.XXXLITOF skip; /* "OF" literal*/
    OZ0FM001.TA5TSQIX = OZ0FW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
    OZ0FW00.OZ0FW-IXM = 1; /* Initialize map index*/
    while (OZ0FW00.OZ0FW-IXM < 12 /* Until screen is full or*/
     && OZ0FW01.OZ0FW-CUST[OZ0FW-IXM] > 0)

      set OZ0FM001.OZ0FMSEL[OZ0FW-IXM] normal;

      /* build the cust-str-dpt string*/
      OZ0FW00.OZ0FW-SV-CUST = OZ0FW01.OZ0FW-CUST[OZ0FW-IXM];

      OZ0FW00.OZ0FW-IX1 = 1;
      while (OZ0FW00.OZ0FW-SV-CUST-CHAR[OZ0FW-IX1] == "0"
       && OZ0FW-IX1 < 8)
        OZ0FW00.OZ0FW-SV-CUST-CHAR[OZ0FW-IX1] = " ";
        OZ0FW-IX1 = OZ0FW-IX1 + 1;
      end

      OZ0FW00.OZ0FW-SV-STR = OZ0FW01.OZ0FW-STR[OZ0FW-IXM];
      OZ0FW00.OZ0FW-SV-DPT = OZ0FW01.OZ0FW-DPT[OZ0FW-IXM];
      OZ0FW00.OZ0FW-DOT1 = ".";
      OZ0FW00.OZ0FW-DOT2 = ".";
      OZ0FM001.OZ0FM-CUST-STR-DPT[OZ0FW-IXM] = OZ0FW00.OZ0FW-CUST-STR-DPT;

  /* --------------------------------------------------------------*/
  /* retrieve the detail line company name*/
  /* --------------------------------------------------------------*/
      OZ0FW00.OZ0FW-SV-CU-CO-ID = OZ0FW01.OZ0FW-CUST[OZ0FW-IXM];

      OZ0F-11220();
      OZ0FM001.OZ0FM-CU-CO-NM[OZ0FW-IXM] = KUCREC.KUCCONM;

  /* --------------------------------------------------------------*/
  /* remove leading zeros from the po/so fld*/
  /* --------------------------------------------------------------*/
      if (OZ0FW01.OZ0FW-SOCD-LTR-TYP-CD[OZ0FW-IXM] == "SO")
        OZ0FW00.OZ0FW-PO-SO-BLD = OZ0FW01.OZ0FW-PO-SO[OZ0FW-IXM];

        OZ0FW00.OZ0FW-IX1 = 1;
        while (OZ0FW00.OZ0FW-PO-SO-CHAR[OZ0FW-IX1] == "0"
         && OZ0FW-IX1 < 26)
          OZ0FW00.OZ0FW-PO-SO-CHAR[OZ0FW-IX1] = " ";
          OZ0FW-IX1 = OZ0FW-IX1 + 1;
        end

        OZ0FM001.OZ0FM-PO-SO[OZ0FW-IXM] = OZ0FW00.OZ0FW-PO-SO-BLD;
      else
        OZ0FM001.OZ0FM-PO-SO[OZ0FW-IXM] = OZ0FW01.OZ0FW-PO-SO[OZ0FW-IXM];
      end

      OZ0FM001.OZ0FM-SOCD-LTR-TYP-CD[OZ0FW-IXM] = OZ0FW01.OZ0FW-SOCD-LTR-TYP-CD[OZ0FW-IXM];
      OZ0FM001.OZ0FM-NO-DI[OZ0FW-IXM] = OZ0FW01.OZ0FW-NO-DI[OZ0FW-IXM];

      OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
                                   /* Increment map index*/

    end

    set OZ0FM001.OZ0FMSEL[1] cursor;
  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/

  else
    if (OZ0FW00.TA5TSQIX > 0) /* Pages were formatted*/

      if (OZ0FW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/

        if (OZ0FW00.OZ0FW-SWU == "Y") /* Current page was changed*/

          OZ0F-12120(); /* Update temporary storage page*/

          OZ0FW00.OZ0FW-SWU = "N"; /* Storage update switch*/

        end

        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/

        if (OZ0FW00.XXXTSPAG > OZ0FW00.TA5TSQIX) /* Desired greater highest*/
          OZ0FW00.XXXTSPAG = OZ0FW00.TA5TSQIX; /* Default to highest*/
        end

        OZ0F-12110(); /* Obtain temporary storage page*/

      end

      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/

      set OZ0FM001.XXXLITPG skip; /* "PAGE" literal*/
      OZ0FM001.XXXTSPAG = OZ0FW00.XXXTSPAG; /* Current page*/
      set OZ0FM001.XXXLITOF skip; /* "OF" literal*/
      OZ0FM001.TA5TSQIX = OZ0FW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
      OZ0FW00.OZ0FW-IXM = 1; /* Initialize map index*/
      while (OZ0FW00.OZ0FW-IXM < 12 /* Until screen is full or*/
       && OZ0FW01.OZ0FW-CUST[OZ0FW-IXM] > 0)

        set OZ0FM001.OZ0FMSEL[OZ0FW-IXM] normal;

        /* build the cust-str-dpt string*/
        OZ0FW00.OZ0FW-SV-CUST = OZ0FW01.OZ0FW-CUST[OZ0FW-IXM];

        OZ0FW00.OZ0FW-IX1 = 1;
        while (OZ0FW00.OZ0FW-SV-CUST-CHAR[OZ0FW-IX1] == "0"
         && OZ0FW-IX1 < 8)
          OZ0FW00.OZ0FW-SV-CUST-CHAR[OZ0FW-IX1] = " ";
          OZ0FW-IX1 = OZ0FW-IX1 + 1;
        end

        OZ0FW00.OZ0FW-SV-STR = OZ0FW01.OZ0FW-STR[OZ0FW-IXM];
        OZ0FW00.OZ0FW-SV-DPT = OZ0FW01.OZ0FW-DPT[OZ0FW-IXM];
        OZ0FW00.OZ0FW-DOT1 = ".";
        OZ0FW00.OZ0FW-DOT2 = ".";
        OZ0FM001.OZ0FM-CUST-STR-DPT[OZ0FW-IXM] = OZ0FW00.OZ0FW-CUST-STR-DPT;

  /* --------------------------------------------------------------*/
  /* retrieve the detail line company name*/
  /* --------------------------------------------------------------*/
        OZ0FW00.OZ0FW-SV-CU-CO-ID = OZ0FW01.OZ0FW-CUST[OZ0FW-IXM];

        OZ0F-11220();
        OZ0FM001.OZ0FM-CU-CO-NM[OZ0FW-IXM] = KUCREC.KUCCONM;

  /* --------------------------------------------------------------*/
  /* remove leading zeros from the po/so fld*/
  /* --------------------------------------------------------------*/
        if (OZ0FW01.OZ0FW-SOCD-LTR-TYP-CD[OZ0FW-IXM] == "SO")
          OZ0FW00.OZ0FW-PO-SO-BLD = OZ0FW01.OZ0FW-PO-SO[OZ0FW-IXM];

          OZ0FW00.OZ0FW-IX1 = 1;
          while (OZ0FW00.OZ0FW-PO-SO-CHAR[OZ0FW-IX1] == "0"
           && OZ0FW-IX1 < 26)
            OZ0FW00.OZ0FW-PO-SO-CHAR[OZ0FW-IX1] = " ";
            OZ0FW-IX1 = OZ0FW-IX1 + 1;
          end

          OZ0FM001.OZ0FM-PO-SO[OZ0FW-IXM] = OZ0FW00.OZ0FW-PO-SO-BLD;
        else
          OZ0FM001.OZ0FM-PO-SO[OZ0FW-IXM] = OZ0FW01.OZ0FW-PO-SO[OZ0FW-IXM];
        end

        OZ0FM001.OZ0FM-SOCD-LTR-TYP-CD[OZ0FW-IXM] = OZ0FW01.OZ0FW-SOCD-LTR-TYP-CD[OZ0FW-IXM];

        OZ0FM001.OZ0FM-NO-DI[OZ0FW-IXM] = OZ0FW01.OZ0FW-NO-DI[OZ0FW-IXM];

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
                                   /* Increment map index*/

      end

      set OZ0FM001.OZ0FMSEL[1] cursor;

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/
  OZ0FM001.OZ0FM-CURR-CU-CO-ID = OZ0FW00.OZ0FW-CURR-CU-CO-ID;
  OZ0FM001.OZ0FM-CURR-STOR-ID = OZ0FW00.OZ0FW-CURR-STOR-ID;
  OZ0FM001.OZ0FM-CURR-XNX-DEPT = OZ0FW00.OZ0FW-CURR-XNX-DEPT;
  if (OZ0FW00.OZ0FW-CURR-CU-CO-ID > 0000000)
    OZ0FM001.OZ0FM-CU-CO-NM-HDR = OZ0FW00.OZ0FW-CU-CO-NM-HDR;
  else
    OZ0FM001.OZ0FM-CU-CO-NM-HDR = "  ";
  end

  OZ0FM001.OZ0FM-OVERRIDE-DI = OZ0FW00.OZ0FW-OVERRIDE-DI;
  if (OZ0FM001.OZ0FM-OVERRIDE-DI != "Y")
    OZ0FM001.OZ0FM-OVERRIDE-DI = "N";
  end

  OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM = OZ0FW00.OZ0FW-SOCD-CURR-CUST-PO-FROM;
  OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-TO = OZ0FW00.OZ0FW-SOCD-CURR-CUST-PO-TO;
  OZ0FM001.OZ0FM-OP-CUST-ORD-ID = OZ0FW00.OZ0FW-OP-CUST-ORD-ID;
  OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM = OZ0FW00.OZ0FW-SOCD-CURR-NEED-DT-FROM;
  if (OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM == "000000")
    OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM = "      ";
  end
  OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO = OZ0FW00.OZ0FW-SOCD-CURR-NEED-DT-TO;
  if (OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO == "000000")
    OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO = "      ";
  end
  OZ0FM001.OZ0FM-CURR-GPC-CD = OZ0FW00.OZ0FW-CURR-GPC-CD;
  OZ0FM001.OZ0FM-GPC-DESC = OZ0FW00.OZ0FW-GPC-DESC;
  OZ0FM001.OZ0FM-XSO-SLS-OFC-ID = OZ0FW00.OZ0FW-XSO-SLS-OFC-ID;
  if (OZ0FM001.OZ0FM-XSO-SLS-OFC-ID == "00")
    OZ0FM001.OZ0FM-XSO-SLS-OFC-ID = "  ";
  end
  OZ0FM001.OZ0FM-XSO-SLS-OFC-ID-DESC = OZ0FW00.OZ0FW-XSO-SLS-OFC-ID-DESC;
  OZ0FM001.OZ0FM-SP-SPGM-ID = OZ0FW00.OZ0FW-SP-SPGM-ID;
  OZ0FM001.OZ0FM-SP-SPGM-ID-DESC = OZ0FW00.OZ0FW-SP-SPGM-ID-DESC;
  OZ0FM001.OZ0FM-SM-SAGCY-ID = OZ0FW00.OZ0FW-SM-SAGCY-ID;
  OZ0FM001.OZ0FM-SM-SAGCY-ID-DESC = OZ0FW00.OZ0FW-SM-SAGCY-ID-DESC;
  OZ0FM001.OZ0FM-SM-SREP-ID = OZ0FW00.OZ0FW-SM-SREP-ID;
  OZ0FM001.OZ0FM-SM-SREP-FIRST-NM = OZ0FW00.OZ0FW-SM-SREP-FIRST-NM;
  OZ0FM001.OZ0FM-SM-SREP-LAST-NM = OZ0FW00.OZ0FW-SM-SREP-LAST-NM;

  /*  */
  OZ0FW00.OZ0FW-IXM = 1; /* Initialize line index*/

  while (OZ0FW00.OZ0FW-IXM < 12) /* * Until end of lines*/

    if (OZ0FM001.OZ0FM-CUST-STR-DPT[OZ0FW-IXM] == " ")
      set OZ0FM001.OZ0FMSEL[OZ0FW-IXM] skip, noHighLight;
    end

    OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* Increment line index*/

  end
  /*  */
end // end OZ0F-12100


// Read temporary storage page
Function OZ0F-12110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OZ0FW01.XXXTSLEN = OZ0FW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ1F"; /* Application identification*/
  TA5REC.TA5TSQIX = OZ0FW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OZ0FW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "12100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-12110


// Update temporary storage page
Function OZ0F-12120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (OZ0FW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "12120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-12120


// Check attention identifier
Function OZ0F-13000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0FW00.OZ0FW-SWR == "Y") /* Request for data*/
      set OZ0FW01 empty; /* M001 display storage*/
    end

    OZ0FW00.OZ0FW-SWF = "Y"; /* Format the map switch*/
    OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/
  if (OZ0FM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0F")
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
        OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0F";
      end

      OZ0F-11100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0FM001.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   
   && converseVar.eventKey not pf3   
   && converseVar.eventKey not pf4   
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf14  /* and PF14 was not pressed*/
   && converseVar.eventKey not pf16  /* and PF16 was not pressed*/
   && converseVar.eventKey not pf17) /* and PF17 was not pressed*/

    OZWREC.XXXPRCNM = "13000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  else

    if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0F")
      OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0F";
    end

  end

   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      if (OZWREC.OZW-APPIDX > 1)
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX - 1;

        if (OZWREC.OZW-APPL[OZW-APPIDX] > "    ")
          COMMAREA.CATOAP = OZWREC.OZW-APPL[OZW-APPIDX];
        else
          COMMAREA.CATOAP = "OZ0A";
        end

      else
        COMMAREA.CATOAP = COMMAREA.CAFROMAP;
      end

    end

    OZ0F-11100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* pf14 action*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf14) /* pf14 pressed*/

    if (OZ0FM001.OZ0FM-CURR-CU-CO-ID == 0
     || OZ0FM001.OZ0FM-CURR-GPC-CD == " "
     || OZ0FM001.OZ0FM-XSO-SLS-OFC-ID == " ")
      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(23); /* highlighted fields must be entered*/
      set OZ0FM001.OZ0FM-CURR-CU-CO-ID cursor, bold;
      set OZ0FM001.OZ0FM-CURR-GPC-CD bold;
      set OZ0FM001.OZ0FM-XSO-SLS-OFC-ID bold;
      exit stack; /* Exit to display map*/
    end


    if ("S" in OZ0FM001.OZ0FMSEL) /* line was selected*/
      OZ0F-13300(); /* build ozwrec to pass*/
      OZ0F-11100(); /* Purge temporary storage*/
      COMMAREA.CATOAP = "OZ0I"; /* TO application*/
      XSOZ-S0001(); /* Exit to another application*/
      exit stack; /* Exit to display map*/
  /* ELSE;                          /* no line selected*/
  /* MOVE '13000' TO OZWREC.XXXPRCNM;/* Module identification*/
  /* MOVE 13 TO EZEMNO;           /* pf14 pressed but nothing*/
  /* EZEFLO;                      /* Exit to display map*/
  /* END;*/
    else
      OZ0F-13400(); /* build ozwrec to pass*/
      OZ0F-11100(); /* Purge temporary storage*/
  /* IF OZ0FM001 IS MODIFIED;*/
      OZ0FW00.OZ0FW-OVERRIDE-DI = "N";
      OZ0FM001.OZ0FM-OVERRIDE-DI = "N";
      OZWREC.SOCD-LTR-OVRD-ID = 0;
      OZWREC.SOCD-LTR-RQT-ID = 0;
      OZ0FW00.XXXTSPAG = 1;
  /* END;*/
      OZ0FW00.OZ0FW-SWR = "Y";
      OZ0FW00.OZ0FW-SWF = "Y";
    end
  end

  /* ------------------------------------------------------------*/
  /* pf16 action*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf16) /* pf16 pressed*/

    if (OZ0FM001.OZ0FM-CURR-CU-CO-ID == 0
     || OZ0FM001.OZ0FM-XSO-SLS-OFC-ID == " ")
      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(28); /* need cust and sales office*/
      set OZ0FM001.OZ0FM-CURR-CU-CO-ID cursor, bold;
      set OZ0FM001.OZ0FM-XSO-SLS-OFC-ID bold;
      exit stack; /* Exit to display map*/
    end

  /* IF 'S' IN OZ0FM001.OZ0FMSEL;   /* line was selected*/
    OZ0F-13400(); /* build ozwrec to pass*/
    OZ0F-11100(); /* Purge temporary storage*/
    COMMAREA.CATOAP = "OZ0H"; /* TO application*/
    XSOZ-S0001(); /* Exit to another application*/
    exit stack; /* Exit to display map*/
  /* ELSE;                          /* no line selected*/
  /* MOVE '13000' TO OZWREC.XXXPRCNM;/* Module identification*/
  /* MOVE 13 TO EZEMNO;           /* pf14 pressed but nothing*/
  /* EZEFLO;                      /* Exit to display map*/
  /* END;*/

  end

  /* ------------------------------------------------------------*/
  /* pf17 action*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf17) /* pf17 pressed*/

  /* IF OZ0FM001.OZ0FM-CURR-CU-CO-ID = 0*/
    if (OZ0FM001.OZ0FM-XSO-SLS-OFC-ID == " ")
      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(28); /* need cust and sales office*/
      set OZ0FM001.OZ0FM-CURR-CU-CO-ID cursor, bold;
      set OZ0FM001.OZ0FM-XSO-SLS-OFC-ID bold;
      exit stack; /* Exit to display map*/
    end

    if ("S" in OZ0FM001.OZ0FMSEL) /* line was selected*/
      OZ0F-13300(); /* build ozwrec to pass*/
      OZ0F-11100(); /* Purge temporary storage*/
      COMMAREA.CATOAP = "OZ0E"; /* TO application*/
      XSOZ-S0001(); /* Exit to another application*/
      exit stack; /* Exit to display map*/
    else /* no line selected*/
      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(13); /* pf17 pressed but nothing*/
      exit stack; /* Exit to display map*/
    end

  end

  /* ------------------------------------------------------------*/
  /* enter action*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter)
    if ("S" in OZ0FM001.OZ0FMSEL) /* line was selected*/
      OZ0FW00.OZ0FW-IXM = sysVar.arrayIndex;
      if (OZ0FM001.OZ0FM-NO-DI[OZ0FW-IXM] == "*")
        OZWREC.XXXPRCNM = "13000"; /* Module identification*/
        converseLib.validationFailed(65); /* pf17 pressed but nothing*/
        exit stack; /* Exit to display map*/
      end
      OZ0F-13100();
      OZ0FW00.OZ0FW-SWR = "Y"; /* to pull up data on m002*/
      OZ0FW00.OZ0FW-SWF = "Y"; /* to pull up data on m002*/
      OZ0FW00.OZ0FW-M1-SAVE-PAGE = OZ0FW00.XXXTSPAG;
      OZ0FW00.OZ0FW-M1-TSQIX = OZ0FW00.TA5TSQIX;
      OZ0F-20000();
    else /* no line selected*/
      if (OZ0FM001 is modified)
        OZ0FW00.OZ0FW-OVERRIDE-DI = "N";
        OZ0FM001.OZ0FM-OVERRIDE-DI = "N";
        OZ0FW00.XXXTSPAG = 1;
      end

      OZ0FW00.OZ0FW-SWR = "Y";
      OZ0FW00.OZ0FW-SWF = "Y";
    end
  end
end // end OZ0F-13000


// Check attention identifier
Function OZ0F-13100()
  OZ0FW-IXM = sysVar.arrayIndex;
  OZ0FW00.OZ0FW-SEL-CUST = OZ0FW01.OZ0FW-CUST[OZ0FW-IXM];
  OZ0FW00.OZ0FW-SEL-STR = OZ0FW01.OZ0FW-STR[OZ0FW-IXM];
  OZ0FW00.OZ0FW-SEL-DPT = OZ0FW01.OZ0FW-DPT[OZ0FW-IXM];
  /* VE OZ0FW00.OZ0FW-SEL-CUST-STR-DPT*/
  /* TO OZ0FM002.OZ0FM-CUST-STR-DPT;*/
  OZ0FW00.OZ0FW-SV-CU-CO-ID = OZ0FW01.OZ0FW-CUST[OZ0FW-IXM];
  OZ0F-11220(); /* retrieve company name*/
  OZ0FW00.OZ0FW-SEL-CUST-NM-HDR = KUCREC.KUCCONM;

  OZ0FW00.OZ0FW-SEL-OVERRIDE-DI = OZ0FM001.OZ0FM-OVERRIDE-DI;
  if (OZ0FM001.OZ0FM-SOCD-LTR-TYP-CD[OZ0FW-IXM] == "SO")
    OZ0FW00.OZ0FW-SEL-ORD-NBR = OZ0FM001.OZ0FM-PO-SO[OZ0FW-IXM];
  else
    OZ0FW00.OZ0FW-SEL-ORD-NBR = " ";
  end
  OZ0FW00.OZ0FW-SEL-LTR-TYP-CD = OZ0FM001.OZ0FM-SOCD-LTR-TYP-CD[OZ0FW-IXM];
  OZ0FW00.OZ0FW-SEL-GPC = OZ0FM001.OZ0FM-CURR-GPC-CD;
  OZ0FW00.OZ0FW-SEL-GPC-DESC = OZ0FM001.OZ0FM-GPC-DESC;
  OZ0FW00.OZ0FW-SEL-CUST-PO = OZ0FW01.OZ0FW-SOCD-CURR-CUST-PO[OZ0FW-IXM];
  /* MOVE OZ0FM001.OZ0FM-XSO-SLS-OFC-ID TO OZ0FW00.OZ0FW-SEL-SALES-OFF;*/
  /* MOVE OZ0FM001.OZ0FM-XSO-SLS-OFC-ID-DESC*/
  /* TO OZ0FW00.OZ0FW-SEL-SALES-OFF-DESC;*/

  /* MOVE OP1REC.XSOCD TO OZ0FW00.OZ0FW-SEL-SALES-OFF;*/
  if (OZ0FW00.OZ0FW-SEL-SALES-OFF in XSOTBL.XSOCD) /* code in table*/

   /* get description*/
    if (OZ0FW00.OZ0FW-SEL-SALES-OFF in XSOTBL.XSOCD)
      OZ0FW00.OZ0FW-SEL-SALES-OFF-DESC = XSOTBL.XSOSNM[sysVar.arrayIndex];
    end
  end

  /* -------------------------------------------------------------*/
  /* if sales rep id not entered find it*/
  /* -------------------------------------------------------------*/
  if (OZ0FM001.OZ0FM-SM-SREP-ID == 0000)
    OZ0FW00.OZ0FW-SEL-GPC = OZ0FM001.OZ0FM-CURR-GPC-CD;
    OZ0F-21210(); /* call ku1350 for sales rep info*/
  end

  if (OZ0FW00.OZ0FW-SEL-SALES-REP > 0000)
    /* VE OZ0FW00.OZ0FW-SEL-SALES-REP TO OZ0FM001.OZ0FM-SM-SREP-ID;*/
    OZ0FW00.OZ0FW-WS-SALES-REP = OZ0FW00.OZ0FW-SEL-SALES-REP;

    OZ0F-11260(); /* get reps first and last names*/

    if (SQLCA.VAGen_SQLCODE == 0)
      if (SM4REC.SM4TDT == 0)
        OZ0FM001.OZ0FM-SM-SREP-LAST-NM = SM4REC.XXXLSTNM;
        OZ0FM001.OZ0FM-SM-SREP-FIRST-NM = SM4REC.XXXFSTNM;
      else
        OZ0FW00.OZ0FW-NUM-DATE = SM4REC.SM4TDT;

        set TA2REC empty;
        TA2REC.TA2DTOPT = "GREGGREG";
        TA2REC.TA2GRTYP = "A";
        TA2REC.TA2GRGA = VGVar.currentShortGregorianDate;

        call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

        if (TA2REC.TA2RTNCD == 0)
          OZ0FW00.OZ0FW-SV-DATE = TA2GRGGN;
        end

        if (OZ0FW00.OZ0FW-NUM-DATE > OZ0FW00.OZ0FW-SV-DATE)
          OZ0FM001.OZ0FM-SM-SREP-LAST-NM = SM4REC.XXXLSTNM;
          OZ0FM001.OZ0FM-SM-SREP-FIRST-NM = SM4REC.XXXFSTNM;
        end
      end
    end

    OZ0FW00.OZ0FW-WS-SALES-AGENCY = OZ0FW00.OZ0FW-SEL-SALES-AGENCY;
    OZ0F-11240(); /* validate against dslsmn.vsagcy01*/

    OZ0FW00.OZ0FW-SEL-SALES-AGENCY-DESC = SM1REC.SM1AGYNM;
    OZ0FM001.OZ0FM-SM-SAGCY-ID-DESC = OZ0FW00.OZ0FW-SEL-SALES-AGENCY-DESC;

  end


  OZ0FM002.OZ0FM-CUST-STR-DPT = OZ0FM001.OZ0FM-CUST-STR-DPT[OZ0FW-IXM];
  OZ0FW00.OZ0FW-SEL-SALES-AGENCY = OZ0FM001.OZ0FM-SM-SAGCY-ID;
  OZ0FW00.OZ0FW-SEL-SALES-AGENCY-DESC = OZ0FM001.OZ0FM-SM-SAGCY-ID-DESC;
  OZ0FW00.OZ0FW-SEL-SALES-REP = OZ0FM001.OZ0FM-SM-SREP-ID;
  OZ0FW00.OZ0FW-SEL-SREP-FIRST-NM = OZ0FM001.OZ0FM-SM-SREP-FIRST-NM;
  OZ0FW00.OZ0FW-SEL-SREP-LAST-NM = OZ0FM001.OZ0FM-SM-SREP-LAST-NM;
  /* MOVE OZ0FW01.OZ0FW-TOT-ORD-QTY(OZ0FW-IXM)*/
  /* TO OZ0FW00.OZ0FW-SEL-TOT-ORD-QTY;*/
  /* MOVE OZ0FW01.OZ0FW-TOT-ORD-VAL(OZ0FW-IXM)*/
  /* TO OZ0FW00.OZ0FW-SEL-TOT-ORD-VAL;*/
  OZ0FW00.OZ0FW-SEL-1ST-ORD-ID = OZ0FW01.OZ0FW-1ST-ORD-ID[OZ0FW-IXM];
  OZ0FW00.OZ0FW-SEL-XPTCD = OZ0FW01.OZ0FW-XPTCD[OZ0FW-IXM];
  OZ0FW00.OZ0FW-SEL-CURR-DSBDT = OZ0FW01.OZ0FW-CURR-DSBDT[OZ0FW-IXM];
  OZ0FW00.OZ0FW-SEL-CURR-DSADT = OZ0FW01.OZ0FW-CURR-DSADT[OZ0FW-IXM];
  OZ0FW00.OZ0FW-SEL-ORIG-DSBDT = OZ0FW01.OZ0FW-ORIG-DSBDT[OZ0FW-IXM];
  OZ0FW00.OZ0FW-SEL-ORIG-DSADT = OZ0FW01.OZ0FW-ORIG-DSADT[OZ0FW-IXM];
  OZ0FW00.OZ0FW-SEL-PO-MONEY-MTH = OZ0FW01.OZ0FW-PO-MONEY-MTH[OZ0FW-IXM];
  OZ0FW00.OZ0FW-SEL-OP-CUST-PO = OZ0FW01.OZ0FW-OP-CUST-PO[OZ0FW-IXM];
  OZ0FW00.OZ0FW-SEL-SP1ID = OZ0FW01.OZ0FW-SP1ID[OZ0FW-IXM];

  OZ0FW00.OZ0FW-SEL-OP-ORD-PART-CHAR = OZ0FW01.OZ0FW-OP-ORD-PART-CHAR[OZ0FW-IXM]; /* udafon*/
  OZ0FW00.OZ0FW-OP-CUST-ORD-ID = OZ0FW01.OZ0FW-OP-CUST-ORD-ID[OZ0FW-IXM]; /* udafon*/
  OZ0FW00.OZ0FW-SEL-OP-NIKE-ORD-ID = OZ0FW01.OZ0FW-OP-NIKE-ORD-ID[OZ0FW-IXM]; /* udafon*/

  OZWREC.OZW-HDR-CUST = OZ0FM001.OZ0FM-CURR-CU-CO-ID;
  OZWREC.OZW-HDR-STR = OZ0FM001.OZ0FM-CURR-STOR-ID;
  OZWREC.OZW-HDR-DPT = OZ0FM001.OZ0FM-CURR-XNX-DEPT;
  /* ---------- SAVE LAST RPT DATE AND TIME ---*/
  OZ0FW00.OZ0FW-LAST-RPT-DT1 = OZ0FW01.OZ0FW-WS-LAST-RPT-DT[OZ0FW-IXM];
  OZ0FW00.OZ0FW-RPT-HHMMSS = OZ0FW01.OZ0FW-WS-RPT-HHMMSS[OZ0FW-IXM];
  /* ------------------------------------------*/
end // end OZ0F-13100


// Check attention identifier
Function OZ0F-13300()
  OZ0FW-IXM = sysVar.arrayIndex;

  OZWREC.CUST-STR-DPT = OZ0FM001.OZ0FM-CUST-STR-DPT[OZ0FW-IXM];

  OZ0FW00.OZ0FW-SV-CUSTOMER = OZ0FW00.OZ0FW-SV-CUST;
  OZWREC.KUCCOID = OZ0FW00.OZ0FW-SV-CUSTOMER;
  OZWREC.SOCD-CURR-CU-CO-ID = OZ0FW00.OZ0FW-SV-CUSTOMER;
  OZ0FW00.OZ0FW-SV-STOR-ID-NUM = OZ0FW00.OZ0FW-SV-STR;
  OZWREC.KUMSTRID = OZ0FW00.OZ0FW-SV-STOR-ID-NUM;
  OZWREC.SOCD-CURR-STOR-ID = OZ0FW00.OZ0FW-SV-STOR-ID-NUM;
  OZ0FW00.OZ0FW-SV-XNX-DEPT-NUM = OZ0FW00.OZ0FW-SV-DPT;
  OZWREC.XNXCD = OZ0FW00.OZ0FW-SV-XNX-DEPT-NUM;
  OZWREC.SOCD-CURR-XNX-DEPT = OZ0FW00.OZ0FW-SV-XNX-DEPT-NUM;

  OZWREC.KUCCONM = OZ0FM001.OZ0FM-CU-CO-NM[OZ0FW-IXM];

  OZWREC.SOCD-LTR-TYP-CD = OZ0FM001.OZ0FM-SOCD-LTR-TYP-CD[OZ0FW-IXM];
  OZWREC.SOCD-CURR-CUST-PO = OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM;
  OZWREC.SOCD-CURR-CUST-PO-TO = OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-TO;
  OZWREC.OP1CUOID = OZ0FM001.OZ0FM-OP-CUST-ORD-ID;
  OZWREC.OZW-SV-OP1CUOID = OZ0FM001.OZ0FM-OP-CUST-ORD-ID;
  OZWREC.XGPCD = OZ0FM001.OZ0FM-CURR-GPC-CD;
  OZWREC.XGPDESC = OZ0FM001.OZ0FM-GPC-DESC;
  OZWREC.XSOCD = OZ0FM001.OZ0FM-XSO-SLS-OFC-ID;
  OZWREC.XSOSNM = OZ0FM001.OZ0FM-XSO-SLS-OFC-ID-DESC;
  OZWREC.SM1AGYID = OZ0FM001.OZ0FM-SM-SAGCY-ID;
  OZWREC.SM4REPID = OZ0FM001.OZ0FM-SM-SREP-ID;
  OZWREC.XXXFSTNM = OZ0FM001.OZ0FM-SM-SREP-FIRST-NM;
  OZWREC.XXXLSTNM = OZ0FM001.OZ0FM-SM-SREP-LAST-NM;
  OZWREC.OVERRIDE-DI = OZ0FM001.OZ0FM-OVERRIDE-DI;
  /* MOVE OZ0FW00.OZ0FW-SOCD-LTR-OVRD-ID TO OZWREC.SOCD-LTR-OVRD-ID;*/
  OZWREC.SOCD-LTR-OVRD-ID = 0;
  OZWREC.SOCD-LTR-RQT-ID = 0;
  OZWREC.NEED-DATE-FROM = OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM;
  OZWREC.NEED-DATE-TO = OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO;
  OZWREC.SP1ID = OZ0FM001.OZ0FM-SP-SPGM-ID;
  OZWREC.SP1NM = OZ0FM001.OZ0FM-SP-SPGM-ID-DESC;

  OZWREC.OZW-HDR-CUST = OZ0FM001.OZ0FM-CURR-CU-CO-ID;
  OZWREC.OZW-HDR-STR = OZ0FM001.OZ0FM-CURR-STOR-ID;
  OZWREC.OZW-HDR-DPT = OZ0FM001.OZ0FM-CURR-XNX-DEPT;
end // end OZ0F-13300


// Check attention identifier
Function OZ0F-13400()
  /* MOVE EZETST TO OZ0FW-IXM;*/

  /* MOVE OZ0FM001.OZ0FM-CUST-STR-DPT(OZ0FW-IXM)*/
  /* TO OZWREC.CUST-STR-DPT;*/

  OZWREC.OZW-HDR-CUST = OZ0FM001.OZ0FM-CURR-CU-CO-ID;
  OZWREC.OZW-HDR-STR = OZ0FM001.OZ0FM-CURR-STOR-ID;
  OZWREC.OZW-HDR-DPT = OZ0FM001.OZ0FM-CURR-XNX-DEPT;
  OZWREC.CUST-STR-DPT = OZWREC.OZW-HDR-CSD;
  OZWREC.KUCCONM = OZ0FM001.OZ0FM-CU-CO-NM-HDR;

  OZ0FW00.OZ0FW-SV-CUSTOMER = OZ0FW00.OZ0FW-SV-CUST;
  OZWREC.KUCCOID = OZ0FW00.OZ0FW-SV-CUSTOMER;
  OZWREC.SOCD-CURR-CU-CO-ID = OZ0FW00.OZ0FW-SV-CUSTOMER;
  OZ0FW00.OZ0FW-SV-STOR-ID-NUM = OZ0FW00.OZ0FW-SV-STR;
  OZWREC.KUMSTRID = OZ0FW00.OZ0FW-SV-STOR-ID-NUM;
  OZWREC.SOCD-CURR-STOR-ID = OZ0FW00.OZ0FW-SV-STOR-ID-NUM;
  OZ0FW00.OZ0FW-SV-XNX-DEPT-NUM = OZ0FW00.OZ0FW-SV-DPT;
  OZWREC.XNXCD = OZ0FW00.OZ0FW-SV-XNX-DEPT-NUM;
  OZWREC.SOCD-CURR-XNX-DEPT = OZ0FW00.OZ0FW-SV-XNX-DEPT-NUM;

  /* VE OZ0FM001.OZ0FM-SOCD-LTR-TYP-CD(OZ0FW-IXM) TO OZWREC.SOCD-LTR-TYP-CD;*/
  OZWREC.SOCD-CURR-CUST-PO = OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM;
  OZWREC.SOCD-CURR-CUST-PO-TO = OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-TO;
  OZWREC.OP1CUOID = OZ0FM001.OZ0FM-OP-CUST-ORD-ID;
  OZWREC.OZW-SV-OP1CUOID = OZ0FM001.OZ0FM-OP-CUST-ORD-ID;
  OZWREC.XGPCD = OZ0FM001.OZ0FM-CURR-GPC-CD;
  OZWREC.XGPDESC = OZ0FM001.OZ0FM-GPC-DESC;
  OZWREC.XSOCD = OZ0FM001.OZ0FM-XSO-SLS-OFC-ID;
  OZWREC.XSOSNM = OZ0FM001.OZ0FM-XSO-SLS-OFC-ID-DESC;
  OZWREC.SM1AGYID = OZ0FM001.OZ0FM-SM-SAGCY-ID;
  OZWREC.SM4REPID = OZ0FM001.OZ0FM-SM-SREP-ID;
  OZWREC.XXXFSTNM = OZ0FM001.OZ0FM-SM-SREP-FIRST-NM;
  OZWREC.XXXLSTNM = OZ0FM001.OZ0FM-SM-SREP-LAST-NM;
  OZWREC.OVERRIDE-DI = OZ0FM001.OZ0FM-OVERRIDE-DI;
  OZWREC.SOCD-LTR-OVRD-ID = OZ0FW00.OZ0FW-SOCD-LTR-OVRD-ID;
  OZWREC.NEED-DATE-FROM = OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM;
  OZWREC.NEED-DATE-TO = OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO;
  OZWREC.SP1ID = OZ0FM001.OZ0FM-SP-SPGM-ID;
  OZWREC.SP1NM = OZ0FM001.OZ0FM-SP-SPGM-ID-DESC;
end // end OZ0F-13400


// Reset highlighted fields
Function OZ0F-14000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/

  set OZ0FM001.OZ0FM-CURR-CU-CO-ID normal;
  set OZ0FM001.OZ0FM-CURR-STOR-ID normal;
  set OZ0FM001.OZ0FM-CURR-XNX-DEPT normal;
  set OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM normal;
  set OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-TO normal;
  set OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM normal;
  set OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO normal;
  set OZ0FM001.OZ0FM-CURR-GPC-CD normal;
  set OZ0FM001.OZ0FM-XSO-SLS-OFC-ID normal;
  set OZ0FM001.OZ0FM-SP-SPGM-ID normal;
  set OZ0FM001.OZ0FM-SM-SAGCY-ID normal;
  set OZ0FM001.OZ0FM-SM-SREP-ID normal;

  OZ0FW00.OZ0FW-IXM = 1; /* Initialize line index*/

  while (OZ0FW00.OZ0FW-IXM < 12) /* * Until end of lines*/

    set OZ0FM001.OZ0FMSEL[OZ0FW-IXM] normal; /* Reset select flag*/

    OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* Increment line index*/

  end

  set OZ0FM001.CATOAP initialAttributes; /* TO application*/
  set OZ0FM001.CAITEM initialAttributes; /* Application data*/

   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (OZ0FM001.OZ0FM-CURR-GPC-CD == "?" /* if any ? entered*/
   || OZ0FM001.OZ0FM-SP-SPGM-ID == "?"  
   || OZ0FM001.OZ0FM-XSO-SLS-OFC-ID == " ?")

    if (OZ0FM001.OZ0FM-CURR-GPC-CD == "?") /* if ? entered in gpc*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC       "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code and description to the map.                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        OZ0FM001.OZ0FM-CURR-GPC-CD = XGPTBL.XGPCD[XX0XWPIX];
        OZ0FM001.OZ0FM-GPC-DESC = XGPTBL.XGPDESC[XX0XWPIX];
        set OZ0FM001.OZ0FM-CURR-GPC-CD cursor; /* put cursor on gpc cd*/
      else
        OZ0FM001.OZ0FM-CURR-GPC-CD = " "; /* clear fields*/
        set OZ0FM001.OZ0FM-CURR-GPC-CD cursor; /* put cursor on gpc cd*/
        OZ0FM001.OZ0FM-GPC-DESC = " "; /* clear description*/
      end
      converseLib.clearScreen();
       /* restore the original map*/
      OZ0FW00.OZ0FW-SWR = "N"; /* no to request for data*/
  /* MOVE 'Y' TO OZ0FW00.OZ0FW-SWF;/* yes to format map*/

      exit stack; /* go display map*/
    end

    if (OZ0FM001.OZ0FM-SP-SPGM-ID == "?") /* if ? in season field*/

      XP0P001(); /* perform pop-up window initialize*/

      if (XP0PW00.XP0PWPIX > 0) /* if user selected a code*/
        OZ0FM001.OZ0FM-SP-SPGM-ID = XP0PM001.XP0PM-SP1ID[XP0PWPIX];
        OZ0FM001.OZ0FM-SP-SPGM-ID-DESC = XP0PM001.XP0PM-SP1NM[XP0PWPIX];
        set OZ0FM001.OZ0FM-SP-SPGM-ID cursor;
      else
        OZ0FM001.OZ0FM-SP-SPGM-ID = " "; /* clear sales id*/
        set OZ0FM001.OZ0FM-SP-SPGM-ID cursor;
        OZ0FM001.OZ0FM-SP-SPGM-ID-DESC = " "; /* clear desc*/
      end

      converseLib.clearScreen();
       /* restore the original map*/
      OZ0FW00.OZ0FW-SWR = "N"; /* no to request for data*/
  /* MOVE 'Y' TO OZ0FW00.OZ0FW-SWF;/* yo to format map*/

      exit stack; /* go display map*/

    end

    if (OZ0FM001.OZ0FM-XSO-SLS-OFC-ID == " ?")
      /* *******************************************************************/
      /* popup xsocd sales office code*/
      /* *******************************************************************/

      XPXX001(); /* initialize*/

      set OZ0FM001.OZ0FM-XSO-SLS-OFC-ID cursor;
      XX0XW02.XX0XWHDR = "              SALES OFFICE";

      while (XX0XW02.XX0XWEND == "N") /* not end of process*/
        XPXSO01(); /* popup xsocd window*/
      end

      if (XX0XW02.XX0XWPIX > 0) /* selection was made*/
        OZ0FM001.OZ0FM-XSO-SLS-OFC-ID = XSOTBL.XSOCD[XX0XWPIX];
        OZ0FM001.OZ0FM-XSO-SLS-OFC-ID-DESC = XSOTBL.XSOSNM[XX0XWPIX];
        set OZ0FM001.OZ0FM-XSO-SLS-OFC-ID cursor;
      else
        OZ0FM001.OZ0FM-XSO-SLS-OFC-ID = " ";
        set OZ0FM001.OZ0FM-XSO-SLS-OFC-ID cursor;
        OZ0FM001.OZ0FM-XSO-SLS-OFC-ID-DESC = " ";
      end

      converseLib.clearScreen();
       /* restore the original map*/
      OZ0FW00.OZ0FW-SWR = "N"; /* no to request for data*/
  /* MOVE 'Y' TO OZ0FW00.OZ0FW-SWF;/* yo to format map*/
      exit stack; /* go display map*/

    end
  end


end // end OZ0F-14000


// Verify data that was entered
Function OZ0F-15000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (OZ0FM001.CAITEM > " ") /* Application data was entered*/

    OZWREC.XXXPRCNM = "15000"; /* Module identification*/
    set OZ0FM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

   /* ------------------------------------------------------------*/
   /* If no header data entered, ask for it.*/
   /* ------------------------------------------------------------*/

  if (OZ0FM001.OZ0FM-CURR-GPC-CD == " ") /* gpc is blank*/
    OZ0FW00.OZ0FW-CURR-CU-CO-ID = OZ0FM001.OZ0FM-CURR-CU-CO-ID;
    OZ0FW00.OZ0FW-CURR-STOR-ID = OZ0FM001.OZ0FM-CURR-STOR-ID;
    OZ0FW00.OZ0FW-CURR-XNX-DEPT = OZ0FM001.OZ0FM-CURR-XNX-DEPT;
    OZ0FW00.OZ0FW-CU-CO-NM-HDR = OZ0FM001.OZ0FM-CU-CO-NM-HDR;
    OZ0FW00.OZ0FW-OVERRIDE-DI = OZ0FM001.OZ0FM-OVERRIDE-DI;
    OZ0FW00.OZ0FW-SOCD-CURR-CUST-PO-FROM = OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-FROM;
    OZ0FW00.OZ0FW-SOCD-CURR-CUST-PO-TO = OZ0FM001.OZ0FM-SOCD-CURR-CUST-PO-TO;
    OZ0FW00.OZ0FW-OP-CUST-ORD-ID = OZ0FM001.OZ0FM-OP-CUST-ORD-ID;
    OZ0FW00.OZ0FW-SOCD-CURR-NEED-DT-FROM = OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-FROM;
    OZ0FW00.OZ0FW-SOCD-CURR-NEED-DT-TO = OZ0FM001.OZ0FM-SOCD-CURR-NEED-DT-TO;
    OZ0FW00.OZ0FW-CURR-GPC-CD = OZ0FM001.OZ0FM-CURR-GPC-CD;
    OZ0FW00.OZ0FW-GPC-DESC = OZ0FM001.OZ0FM-GPC-DESC;
    OZ0FW00.OZ0FW-XSO-SLS-OFC-ID = OZ0FM001.OZ0FM-XSO-SLS-OFC-ID;
    OZ0FW00.OZ0FW-XSO-SLS-OFC-ID-DESC = OZ0FM001.OZ0FM-XSO-SLS-OFC-ID-DESC;
    OZ0FW00.OZ0FW-SP-SPGM-ID = OZ0FM001.OZ0FM-SP-SPGM-ID;
    OZ0FW00.OZ0FW-SP-SPGM-ID-DESC = OZ0FM001.OZ0FM-SP-SPGM-ID-DESC;
    OZ0FW00.OZ0FW-SM-SAGCY-ID = OZ0FM001.OZ0FM-SM-SAGCY-ID;
    OZ0FW00.OZ0FW-SM-SAGCY-ID-DESC = OZ0FM001.OZ0FM-SM-SAGCY-ID-DESC;
    OZ0FW00.OZ0FW-SM-SREP-ID = OZ0FM001.OZ0FM-SM-SREP-ID;
    OZ0FW00.OZ0FW-SM-SREP-FIRST-NM = OZ0FM001.OZ0FM-SM-SREP-FIRST-NM;
    OZ0FW00.OZ0FW-SM-SREP-LAST-NM = OZ0FM001.OZ0FM-SM-SREP-LAST-NM;

  /* SET OZ0FM001 CLEAR;            /* clear screen*/

    OZWREC.XXXPRCNM = "15000"; /* Module identification*/
    set OZ0FM001.OZ0FM-CURR-GPC-CD cursor, bold; /* cursor & hi-lite*/
    converseLib.validationFailed(22); /* gpc missing or invalid*/
    OZ0FW00.OZ0FW-SWF = "N";
    OZ0FW00.OZ0FW-SWR = "N";
    OZ0FM001.OZ0FM-CURR-CU-CO-ID = OZ0FW00.OZ0FW-CURR-CU-CO-ID;
    exit stack; /* return to previous process*/
  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    OZ0F-15100(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the line.*/
    /* ------------------------------------------------------------*/

    if (converseVar.eventKey is enter /* Enter was pressed*/
     || converseVar.eventKey is pf14  /* PF14 was pressed*/
     || converseVar.eventKey is pf16  /* PF16 was pressed*/
     || converseVar.eventKey is pf19) /* PF19 was pressed*/

      OZ0F-15200(); /* Verify data in the line*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end


end // end OZ0F-15000


// Verify scroll request
Function OZ0F-15100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OZ0FW00.XXXTSPAG < 2)       /* and no previous pages*/

    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OZ0FW00.XXXTSPAG >= OZ0FW00.TA5TSQIX) /* and no more pages*/

    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate an error for any data that was modified.*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-IXM = 1; /* Initialize line index*/

  while (OZ0FW00.OZ0FW-IXM < 12) /* Until end of lines*/

    if (OZ0FM001.OZ0FMSEL[OZ0FW-IXM] != OZ0FW01.OZ0FW-SEL[OZ0FW-IXM])

      OZWREC.XXXPRCNM = "15100"; /* Module identification*/
      set OZ0FM001.OZ0FMSEL[OZ0FW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(14); /* Field may not change*/

    end

    OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* Decrement line number*/

  end


end // end OZ0F-15100


// Verify data in the line
Function OZ0F-15200()
  /* ------------------------------------------------------------*/
  /* If selection was entered and is not an "S", indicate that*/
  /* only "S" may be entered to select a line.*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-IXM = 1; /* initialize index*/

  while (OZ0FW00.OZ0FW-IXM < 12) /* until end of lines*/

    if (OZ0FM001.OZ0FMSEL[OZ0FW-IXM] != OZ0FW01.OZ0FW-SEL[OZ0FW-IXM]
     && OZ0FM001.OZ0FMSEL[OZ0FW-IXM] != "S") /* and is not a "S"*/

      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0FM001.OZ0FMSEL[OZ0FW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(13); /* Only "S" may be entered*/

    else

      if (OZ0FM001.OZ0FMSEL[OZ0FW-IXM] == "S" /* if 'S' but*/
       && converseVar.eventKey not pf14       /* no pf14*/
       && converseVar.eventKey not pf16       /* no pf16*/
       && converseVar.eventKey not pf17)      /* no pf19*/
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0FM001.OZ0FMSEL[OZ0FW-IXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(4);
      end

    end

    OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* decrement line number*/

  end


  if (OZ0FW00.OZ0FW-EDIT-FLAG == "Y") /* edit flag is on - clear dtls*/

    OZ0FW00.OZ0FW-IXM = 1; /* initialize index*/

    while (OZ0FW00.OZ0FW-IXM < 12) /* until end of lines*/

      OZ0FM001.OZ0FMSEL[OZ0FW-IXM] = " ";
      set OZ0FM001.OZ0FMSEL[OZ0FW-IXM] skip, invisible;
      OZ0FM001.OZ0FM-CUST-STR-DPT[OZ0FW-IXM] = " ";
      OZ0FM001.OZ0FM-CU-CO-NM[OZ0FW-IXM] = " ";
      OZ0FM001.OZ0FM-SOCD-LTR-TYP-CD[OZ0FW-IXM] = " ";
      OZ0FM001.OZ0FM-PO-SO[OZ0FW-IXM] = " ";

      OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* increment line number*/

    end

    OZ0FW00.OZ0FW-EDIT-FLAG = "N"; /* reset flag*/

  end

end // end OZ0F-15200


// Process valid input request
Function OZ0F-16000()
  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-SWF = "Y"; /* format the map switch*/



  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    OZ0FW00.XXXTSPAG = OZ0FW00.XXXTSPAG - 1; /* Decrement page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    OZ0FW00.XXXTSPAG = OZ0FW00.XXXTSPAG + 1; /* Increment page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter) /* enter pressed*/

    OZ0FW00.OZ0FW-SWF = "Y"; /* Format the map switch*/
  end

  /* ------------------------------------------------------------*/
  /* Save the select fields and clear the map input/output area.*/
  /* ------------------------------------------------------------*/

  /* VE 'N' TO OZ0FW00.OZ0FW-UPDATE-SW;/* turn off updated switch*/


  if (converseVar.eventKey is pf14) /* pf14*/

    if ("S" in OZ0FM001.OZ0FMSEL
    )
      OZ0FW00.OZ0FW-IXM = 1; /* Initialize line index*/
      OZ0FW00.OZ0FW-SWU = "N"; /* reset switch*/

      while (OZ0FW00.OZ0FW-IXM <= 12 /* Until end of lines*/
       && OZ0FW00.OZ0FW-SWU != "Y") /* or 'S' is found*/

        if (OZ0FM001.OZ0FMSEL[OZ0FW-IXM] != OZ0FW01.OZ0FW-SEL[OZ0FW-IXM])

          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* Increment line index*/

        end
      end
    end
  end

  if (converseVar.eventKey is pf19) /* PF19 pressed*/
    if ("S" in OZ0FM001.OZ0FMSEL /* If line was selected*/
     && OZ0FW00.OZ0FW-SWR != "Y") /* data not requested*/
      OZ0FW00.OZ0FW-IX1 = sysVar.arrayIndex;
    end
    if (converseVar.validationMsgNum == 0) /* If no errors*/
      XSOZ-S0001(); /* Exit to another application*/
    else
      OZ0FW00.OZ0FW-SWF = "N";
      exit stack; /* Exit to display map*/
    end
  end

end // end OZ0F-16000


// Process to add a new row
Function OZ0F-20000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Format the map output area and display the map.*/
  /* 2) Check the attention identifier used to respond.*/
  /* 3) Reset highlighted fields to normal intensity.*/
  /* 4) Verify the data that was entered.*/
  /* 5) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0F-21000(); /* Obtain data to display*/

  OZ0F-22000(); /* Format and display the map*/

  OZ0F-23000(); /* Check attention identifier*/

  OZ0F-24000(); /* Reset fields to normal intensity*/

  OZ0F-25000(); /* Verify the entered data*/

  OZ0F-26000(); /* Process valid input request*/


end // end OZ0F-20000


// Obtain the data to display
Function OZ0F-21000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.OZ0FW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/
  OZ0FW00.XXXTSLEN = 0957; /* temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/
  /* OZ0FW00.XXXTSPAG EQ 0;        /* no pages established*/
  OZ0FW00.XXXTSPAG = 1; /* Page number to display*/
  /* D;*/

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/
  OZ0F-21100(); /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Perform screen header edits*/
  /* ------------------------------------------------------------*/
  OZ0F-21200(); /* build screen header*/

  /* ------------------------------------------------------------*/
  /* get the data*/
  /* ------------------------------------------------------------*/
  OZ0F-21300();
end // end OZ0F-21000


// Purge any temporary storage
Function OZ0F-21100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/

  set OZ0FW02 empty; /* M001 display storage*/

  OZ0FW00.OZ0FW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0FW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "OZ2F"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "21100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M002"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-21100


// screen header edits
Function OZ0F-21200()
  OZ0FM002.OZ0FM-CU-CO-NM-HDR = OZ0FW00.OZ0FW-SEL-CUST-NM-HDR;

  OZ0FW00.OZ0FW-SEL-OVERRIDE-DI = OZ0FM001.OZ0FM-OVERRIDE-DI;
  OZ0FM002.OZ0FM-OVERRIDE-DI = OZ0FW00.OZ0FW-SEL-OVERRIDE-DI;

  if (OZ0FW00.OZ0FW-SEL-ORD-NBR == 0)
    OZ0FM002.OZ0FM-OP-CUST-ORD-ID = "  ";
  else
    OZ0FM002.OZ0FM-OP-CUST-ORD-ID = OZ0FW00.OZ0FW-SEL-ORD-NBR;
  end

  OZ0FM002.OZ0FM-CURR-GPC-CD = OZ0FW00.OZ0FW-SEL-GPC;
  OZ0FM002.OZ0FM-GPC-DESC = OZ0FW00.OZ0FW-SEL-GPC-DESC;
  OZ0FM002.OZ0FM-SOCD-CURR-CUST-PO = OZ0FW00.OZ0FW-SEL-CUST-PO;
  OZ0FM002.OZ0FM-XSO-SLS-OFC-ID = OZ0FW00.OZ0FW-SEL-SALES-OFF;
  OZ0FM002.OZ0FM-XSO-SLS-OFC-ID-DESC = OZ0FW00.OZ0FW-SEL-SALES-OFF-DESC;

  /* IF OZ0FW00.OZ0FW-SEL-SALES-REP = 0000;*/
  OZ0F-21210(); /* call ku1350 for sales rep info*/
  /* END;*/

  OZ0FW00.OZ0FW-WS-SALES-AGENCY = OZ0FW00.OZ0FW-SEL-SALES-AGENCY;
  OZ0F-11240(); /* validate against dslsmn.vsagcy01*/

  OZ0FW00.OZ0FW-SEL-SALES-AGENCY-DESC = SM1REC.SM1AGYNM;
  OZ0FM002.OZ0FM-SM-SAGCY-ID = OZ0FW00.OZ0FW-SEL-SALES-AGENCY;
  OZ0FM002.OZ0FM-SM-SAGCY-ID-DESC = OZ0FW00.OZ0FW-SEL-SALES-AGENCY-DESC;
  OZ0FM001.OZ0FM-SM-SAGCY-ID-DESC = OZ0FW00.OZ0FW-SEL-SALES-AGENCY-DESC;

  /* VE OZ0FW00.OZ0FW-SEL-SALES-REP*/
  /* TO OZ0FM001.OZ0FM-SM-SREP-ID;*/
  OZ0FW00.OZ0FW-WS-SALES-REP = OZ0FW00.OZ0FW-SEL-SALES-REP;
  OZ0F-11260(); /* get reps first and last names*/
  if (SQLCA.VAGen_SQLCODE == 0)
    OZ0FW00.OZ0FW-SEL-SREP-LAST-NM = SM4REC.XXXLSTNM;
    OZ0FW00.OZ0FW-SEL-SREP-FIRST-NM = SM4REC.XXXFSTNM;
  end

  OZ0FM002.OZ0FM-SM-SREP-ID = OZ0FW00.OZ0FW-SEL-SALES-REP;
  OZ0FM002.OZ0FM-SM-SREP-FIRST-NM = OZ0FW00.OZ0FW-SEL-SREP-FIRST-NM;
  OZ0FM001.OZ0FM-SM-SREP-FIRST-NM = OZ0FW00.OZ0FW-SEL-SREP-FIRST-NM;
  OZ0FM002.OZ0FM-SM-SREP-LAST-NM = OZ0FW00.OZ0FW-SEL-SREP-LAST-NM;
  OZ0FM001.OZ0FM-SM-SREP-LAST-NM = OZ0FW00.OZ0FW-SEL-SREP-LAST-NM;
  OZ0FW00.OZ0FW-SEL-TOT-ORD-QTY = 0;
  OZ0FW00.OZ0FW-SEL-TOT-ORD-VAL = 0;
  /* MOVE OZ0FW00.OZ0FW-SEL-TOT-ORD-QTY*/
  /* TO OZ0FM002.OZ0FM-TOT-ORD-QTY;*/
  /* MOVE OZ0FW00.OZ0FW-SEL-TOT-ORD-VAL*/
  /* TO OZ0FM002.OZ0FM-TOT-ORD-VALUE;*/
  OZ0FM002.OZ0FM-HEADER-CHGS = "N";
  OZ0FW00.OZ0FW-SAVE-STORE = 0;
  /* -------------------------------------------------------------*/
end // end OZ0F-21200


// screen header edits
Function OZ0F-21210()
                         /* KG0I-call-ku1350*/
      /* ------------------------------------------------------*/
   /* This statement accesses the customer/*/
   /* rep table (vcurep01) via nikeboth pgm ku1350 to get the correct*/
   /* rep and sales agency for the entered customer and product parameters*/


  set SQLCA empty;
  set KU5REC empty;
  XX0XS01();

  KU5REC.KU5-CALLING-PROGRAM-ID = "OZ0F"; /* prepare key for*/
  KU5REC.KU5-CONV-DEPT-FLAG = "N"; /* call to ku1350*/
  KU5REC.KU5-READ-SA-FLAG = "N";
  KU5REC.KUCCOID = OZ0FW00.OZ0FW-SEL-CUST;
  KU5REC.KUMSTRID = OZ0FW00.OZ0FW-SEL-STR;
  /* VE OZ0FW00.OZ0FW-SEL-DIV TO KU5REC.XDVCD;*/
  KU5REC.XNXCD = OZ0FW00.OZ0FW-SEL-DPT;
  KU5REC.XGPCD = OZ0FW00.OZ0FW-SEL-GPC;
  KU5REC.OP1ORCDT = XX0XW01.XX0XWDAT;
  KU5REC.XOBCD = "**";
  /* MOVE SY2REC.SY1STNBR TO KU5REC.SY1STNBR;*/
  /* MOVE SY2REC.SY2CLRID TO KU5REC.SY2CLRID;*/
  /* MOVE SY2REC.XDMCD TO KU5REC.XDMCD;*/
  /* MOVE SY2REC.XPCCD TO KU5REC.XPCCD;*/
  /* MOVE SY2REC.XPLCD TO KU5REC.XPLCD;*/
  /* MOVE SY1REC.XGACD TO KU5REC.XGACD;*/


  call "KU1350" (KU5REC) {isNoRefresh = yes, isExternal = yes}; /* get best choice rep*/

  if (KU5REC.KU5-READ-STATUS == "00")
    OZ0FW00.OZ0FW-SEL-SALES-REP = KU5REC.SM4REPID;
    OZ0FW00.OZ0FW-SEL-SALES-AGENCY = KU5REC.SM1AGYID;
  else
    OZ0FW00.OZ0FW-SEL-SALES-REP = 0;
    OZ0FW00.OZ0FW-SEL-SALES-AGENCY = "    ";
    return;
  end

end // end OZ0F-21210


// Obtain the data to display
Function OZ0F-21300()
  /* VE 'N' TO OZ0FW00.OZ0FW-M5-ITM-CHG;*/
  OZCREC.REQ-ACTION = "  ";
  set OZ0FW99 empty;
  OZ0FW00.OZ0FW-SV-CNT = 1; /* Display line index*/
  /* ------------------------------------------------------------*/
  /* Fetch and format the data into pages until end of cursor.*/
  /* ------------------------------------------------------------*/
  OZ0FW00.OZ0FW-IXM = 1; /* Display line index*/
  OZ0FW00.OZ0FW-SWC = "N"; /* End of cursor switch*/

  OZ0F-21320(); /* 1st fetch        UDAFON*/

  if (OZ0FW00.OZ0FW-SWC == "Y") /* No rows found    UDAFON*/
                                  /* It doesn't have distr. instr*/
    OZCREC.CU-CO-ID = OZCREC.DIST-INST-CU-CO-ID;
    OZCREC.CU-STOR-ID = OZCREC.DIST-INST-CU-STOR-ID;
    OZCREC.DEPT-ID-XREF = OZCREC.DIST-INST-XNX-DEPT-ID-XREF;

    OZCREC.OP1PARTN = OZ0FW00.OZ0FW-SEL-OP-ORD-PART-CHAR;
    OZCREC.OP1NORID = OZ0FW00.OZ0FW-SEL-OP-NIKE-ORD-ID;
    OZCREC.OP1CUOID = OZCREC.REQ-CUST-ORD-ID;
    OZ0F-21330(); /* Save data in display storage*/

    if (OZ0FW00.OZ0FW-IXM > 11) /* Page is full*/

      OZ0F-21340(); /* Add page to temporary storage*/

      OZ0FW00.OZ0FW-IXM = 1; /* Display line index*/

    end
  end

  while (OZ0FW00.OZ0FW-SWC == "N") /* Until end of cursor*/

    OZ0F-21330(); /* Save data in display storage*/

    if (OZ0FW00.OZ0FW-IXM > 11) /* Page is full*/

      OZ0F-21340(); /* Add page to temporary storage*/

      OZ0FW00.OZ0FW-IXM = 1; /* Display line index*/

    end

    OZ0F-21320(); /* Fetch next row in the cursor*/

  end

  /* ------------------------------------------------------------*/
  /* Add any partially formatted last page to the queue.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.OZ0FW-IXM > 1) /* Page was formatted*/
    OZ0F-21340(); /* Add page to temporary storage*/
  end

  /* ------------------------------------------------------------*/
  /* close the cursor*/
  /* ------------------------------------------------------------*/
  /* RFORM OZ0F-21350;              /* Close the selected set cursor*/


  if (OZ0FW00.TA5TSQIX == 0) /* No pages formatted*/

    OZWREC.XXXPRCNM = "21300"; /* Module identification*/
    OZWREC.XXXMSGNO = 16; /* No data was found to display*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/
end // end OZ0F-21300


// call oz2070
Function OZ0F-21320()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  if (OZCREC.REQ-ACTION == "  ")
    set OZCREC empty; /* Clear row storage area*/

    OZCREC.REQ-ACTION = "FF";
  else
    set OZCREC empty; /* Clear row storage area*/
    OZCREC.REQ-ACTION = "FN";
  end


  OZCREC.REQ-LTR-DIST-CD = OZ0FW00.OZ0FW-SEL-LTR-TYP-CD;
  OZCREC.DIST-INST-GPC-CD = OZ0FW00.OZ0FW-SEL-GPC;
  OZCREC.DIST-INST-XSO-SLS-OFC-ID = OZ0FW00.OZ0FW-SEL-SALES-OFF;
  OZCREC.DIST-INST-CU-CO-ID = OZ0FW00.OZ0FW-SEL-CUST;
  OZCREC.DIST-INST-CU-STOR-ID = OZ0FW00.OZ0FW-SEL-STR;
  OZCREC.DIST-INST-XNX-DEPT-ID-XREF = OZ0FW00.OZ0FW-SEL-DPT;

  OZCREC.REQ-CUST-PO = OZ0FW00.OZ0FW-SEL-CUST-PO;
  if (OZ0FM001.OZ0FM-OP-CUST-ORD-ID == 0)
  /* MOVE OZ0FW00.OZ0FW-SEL-1ST-ORD-ID TO OZCREC.REQ-CUST-ORD-ID;*/
    OZCREC.REQ-CUST-ORD-ID = OZ0FW00.OZ0FW-OP-CUST-ORD-ID;
    OZCREC.OP1CUOID = OZ0FW00.OZ0FW-OP-CUST-ORD-ID;
  else
    OZCREC.REQ-CUST-ORD-ID = OZ0FM001.OZ0FM-OP-CUST-ORD-ID;
    OZCREC.OP1CUOID = OZ0FM001.OZ0FM-OP-CUST-ORD-ID;
  end
  OZCREC.REQ-SOCD-APPL-SRC-CD = "OP";

  try
    call "OZ2070" (OZCREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (OZCREC.RETURN-CD == "00") /* and normal return code*/

      return; /* Return to previous process*/
    else
      if (OZCREC.RETURN-CD == "02") /* and normal return code*/
        OZCREC.REQ-ACTION = "  ";
        OZ0FW00.OZ0FW-SWC = "Y";
        return; /* Return to previous process*/
      end

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = OZCREC.RETURN-CD; /* SQL commarea*/

  OZWREC.XXXPRCNM = "21305"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && OZCREC.RETURN-CD == "03")      /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "OZCREC"; /* Type of error*/
  TA1REC.TA1LOC = "GET ALL ORDER IDS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "OZ2070 "; /* Data base name*/
  TA1REC.TA1TBLVU = "OZCREC  "; /* Table view name*/
  TA1REC.TA1TBLKE = OZCREC.OZC-PASS-REC; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-21320


// Save data in display storage
Function OZ0F-21330()
  OZ0FM002.OZ0FM-HEADER-CHGS = "N";
  /* --------------------------------------------------------------*/
  /* call oz2020 for the eligibility*/
  /* --------------------------------------------------------------*/
  VOCHDR01.OP1PARTN = OZCREC.OP1PARTN;
  VOCHDR01.OP1CUOID = OZCREC.OP1CUOID;
  VOCHDR01.OP1NORID = OZCREC.OP1NORID;
  VOCHDR01.SOCD-APPL-SRC-CD = "OP";

  OZ0F-11337(); /* read to determine order eligibility*/

  /* ---IF OZBREC.RTN-ORDER-ELIGB = 'Y';      /* udafon #1156*/

  if (OZCREC.OP1CUOID == OZ0FW99.OZ0FW-WS-ORD)
  /* continue;*/
  else
    OZ0FW99.OZ0FW-SV-ORD-ID[OZ0FW-SV-CNT] = OZCREC.OP1CUOID;
    OZ0FW99.OZ0FW-WS-ORD = OZCREC.OP1CUOID;
    OZ0FW-SV-CNT = OZ0FW-SV-CNT + 1;
  end

  OZ0FW00.OZ0FW-ITEM-FLG = "Y";

  OZ0F-21331(); /* read vitem001 open cursor*/

  while (OZ0FW00.OZ0FW-ITEM-FLG == "Y")

    if (OZ0FW00.OZ0FW-IXM > 11) /* Page is full*/
      OZ0F-21340(); /* Add page to temporary storage*/
      OZ0FW00.OZ0FW-IXM = 1; /* Display line index*/
    end

    OZ0F-21333(); /* fetch vitem001 cursor*/

    if (SQLCA.VAGen_SQLCODE == +100)
      OZ0FW00.OZ0FW-ITEM-FLG = "N";
      OZ0F-21335(); /* close vitem001 cursor*/
    else

      OZ0FW00.OZ0FW-IX2 = 1;
      OZ0FW00.OZ0FW-SKIP = "N";

      while (OZ0FW00.OZ0FW-IX2 < 12
       && OP2REC.XDZ-DATA-DIST-CD == "OB")

        if (OP2REC.OP2LNINB == OZ0FW02.OZ0FW-LINE-ITEM-NBR[OZ0FW-IX2]
         && OP2REC.SY1STNBR == OZ0FW02.OZ0FW-STYLE[OZ0FW-IX2]
         && OP2REC.SY2CLRID == OZ0FW02.OZ0FW-COLOR[OZ0FW-IX2]
         && OP2REC.XDMCD == OZ0FW02.OZ0FW-DIM[OZ0FW-IX2]
         && OP2REC.OP1CUOID == OZ0FW02.OZ0FW-OP-CUST-ORD-ID[OZ0FW-IX2]
         && OP2REC.OP1NORID == 
        OZ0FW02.OZ0FW-OP-NIKE-ORD-ID[OZ0FW-IX2])
          OZ0FW00.OZ0FW-SKIP = "Y";
        else
            /* continue*/
        end

        OZ0FW-IX2 = OZ0FW-IX2 + 1;
      end

      if (OZ0FW-SKIP != "Y")
        if (OZ0FW-IXM == 1)
          OZ0FW02.OZ0FW-STR[OZ0FW-IXM] = OZCREC.CU-STOR-ID;
          OZ0FW00.OZ0FW-SAVE-STORE = OZCREC.CU-STOR-ID;
        else
          if (OZCREC.CU-STOR-ID != OZ0FW00.OZ0FW-SAVE-STORE)
            OZ0FW02.OZ0FW-STR[OZ0FW-IXM] = OZCREC.CU-STOR-ID;
            OZ0FW00.OZ0FW-SAVE-STORE = OZCREC.CU-STOR-ID;
          else
            OZ0FW02.OZ0FW-STR[OZ0FW-IXM] = "    ";
          end
        end

        OZ0FW00.OZ0FW-CUSTOMER = OZCREC.CU-CO-ID;
        OZ0FW00.OZ0FW-STORE = OZCREC.CU-STOR-ID;
        OZ0FW00.OZ0FW-DEPT = OZCREC.DEPT-ID-XREF;
        OZ0FW00.OZ0FW-DOTA = ".";
        OZ0FW00.OZ0FW-DOTB = ".";
        OZ0FW02.OZ0FW-CUST-STR-DPT[OZ0FW-IXM] = OZ0FW00.OZ0FW-CUST-STR-DPT2;


        OZ0FW02.OZ0FW-LINE-ITEM-NBR[OZ0FW-IXM] = OP2REC.OP2LNINB;

        OZ0FW02.OZ0FW-STYLE[OZ0FW-IXM] = OP2REC.SY1STNBR;
        OZ0FW02.OZ0FW-COLOR[OZ0FW-IXM] = OP2REC.SY2CLRID;
        OZ0FW02.OZ0FW-DIM[OZ0FW-IXM] = OP2REC.XDMCD;
        OZ0FW02.OZ0FW-SLASH1[OZ0FW-IXM] = "/";
        OZ0FW02.OZ0FW-SLASH2[OZ0FW-IXM] = "/";
        OZ0FW02.OZ0FW-ITEM-ORD-QTY[OZ0FW-IXM] = OP2REC.OP2TONOQ;

        OZ0FW00.OZ0FW-SEL-TOT-ORD-QTY = OZ0FW00.OZ0FW-SEL-TOT-ORD-QTY +           OP2REC.OP2TONOQ;
        OZ0FW00.OZ0FW-SEL-TOT-ORD-VAL = OZ0FW00.OZ0FW-SEL-TOT-ORD-VAL +           OP2REC.OP2LNIVL;

        OZ0FW02.OZ0FW-OP-ORD-PART-CHAR[OZ0FW-IXM] = OZCREC.OP1PARTN;
        OZ0FW02.OZ0FW-OP-CUST-ORD-ID[OZ0FW-IXM] = OZCREC.OP1CUOID;
        OZ0FW02.OZ0FW-OP-NIKE-ORD-ID[OZ0FW-IXM] = OP2REC.OP1NORID;

  /* ------*/
        if (OP2REC.XDZ-DATA-DIST-CD != "OB")
          OZ0F-21337(); /* read vstyle for description*/
          OZ0FW02.OZ0FW-STY-COL-ABRV[OZ0FW-IXM] = SY1REC.SY1SSTNM;

          OZ0F-21338(); /* read vcolor for description*/
          OZ0FW02.OZ0FW-COLOR-NAME[OZ0FW-IXM] = SY2REC.SY2CLRAB;
        else
          OZ0FW02.OZ0FW-STY-COL-ABRV[OZ0FW-IXM] = "AIRSPEED";
          OZ0FW02.OZ0FW-COLOR-NAME[OZ0FW-IXM] = "CANCELLED";
        end

  /* ------*/

        OZ0F-21339(); /* open vsoscr01 for conf/discrep*/
        OZ0F-21339-FETCH(); /* fetch vsoscr01*/
        if (SQLCA.VAGen_SQLCODE == 0)
          OZ0FW02.OZ0FW-CONF-DISC[OZ0FW-IXM] = "Y";
          OZ0FW02.OZ0FW-ITM-CHG[OZ0FW-IXM] = "Y";
        else
          OZ0FW02.OZ0FW-CONF-DISC[OZ0FW-IXM] = "N";
          OZ0FW02.OZ0FW-ITM-CHG[OZ0FW-IXM] = "N";
        end
        OZ0F-21339-CLOSE(); /* close vsoscr01*/

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* Increment line index*/
      end /* -*/
    end /* -*/

  end /* -*/

  OZ0F-21330-CNT(); /* cnt vsohcr01 for header chg flg*/

  if (SQLCA.VAGen_SQLCODE == 0 && 
  VSOHCR01.SOCD-HDR-RSN-SEQ > 0)
    OZ0FM002.OZ0FM-HEADER-CHGS = "Y";
  end

  /* --END;                             /* -*/

end // end OZ0F-21330


// call vsoscr01
Function OZ0F-21330-CNT()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set VSOHCR01 empty; /* Clear row storage area*/

  VSOHCR01.OP1CUOID = OZCREC.OP1CUOID;
  VSOHCR01.OP1NORID = OZCREC.OP1NORID;
  VSOHCR01.SOCD-APPL-SRC-CD = "OP";

  try
    call "VSOHCR01" ("SC", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21330"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911    /* and resource not available*/
  )                                 
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2  "; /* Type of error*/
  TA1REC.TA1LOC = "READ W/ VSOHCR01 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOHCR01.VSOHCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-21330-CNT


// call io0440 vitem001
Function OZ0F-21331()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set OP2REC empty; /* Clear row storage area*/
  set OZAREC empty; /* Clear row storage area*/
  set SQLCA empty; /* Clear row storage area*/
  set OP1REC empty; /* Clear row storage area*/
  set VOCHDR01 empty; /* Clear row storage area*/

  OP2REC.OP1PARTN = OZCREC.OP1PARTN;
  OP2REC.OP1CUOID = OZCREC.OP1CUOID;
  OP2REC.OP1NORID = OZCREC.OP1NORID;

  OZAREC.IO-TASK = "K1";

  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01, OP2REC) {isNoRefresh = yes, isExternal = yes};
  end
  /* LL IO0440 'S3',SQLCA,OP2REC (NOMAPS,NONCSP,REPLY;*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21331"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911    /* and resource not available*/
  )                                 
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2  "; /* Type of error*/
  TA1REC.TA1LOC = "READ W/ IO0440 OP2REC";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDER "; /* Data base name*/
  TA1REC.TA1TBLVU = "VITEM001"; /* Table view name*/
  TA1REC.TA1TBLKE = OP2REC.OP2KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-21331


// fetch io0440
Function OZ0F-21333()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  OZAREC.IO-TASK = "K2";

  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01, OP2REC) {isNoRefresh = yes, isExternal = yes};
  end


  /* LL IO0440 'N3',SQLCA,OP2REC (NOMAPS,NONCSP,REPLY;*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100)

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21333"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911    /* and resource not available*/
  )                                 
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2  "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH   IO0440 OP2REC";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDER "; /* Data base name*/
  TA1REC.TA1TBLVU = "VITEM001"; /* Table view name*/
  TA1REC.TA1TBLKE = OP2REC.OP2KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-21333


// close io0440
Function OZ0F-21335()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  OZAREC.IO-TASK = "K3";

  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01, OP2REC) {isNoRefresh = yes, isExternal = yes};
  end


  /* CALL IO0440 'C3',SQLCA,OP2REC (NOMAPS,NONCSP,REPLY;*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100)

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21335"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911    /* and resource not available*/
  )                                 
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2  "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE  IO0440 OP2REC";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDER "; /* Data base name*/
  TA1REC.TA1TBLVU = "VITEM001"; /* Table view name*/
  TA1REC.TA1TBLKE = OP2REC.OP2KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-21335


// call io0120 vstyle01
Function OZ0F-21337()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set SY1REC empty; /* Clear row storage area*/

  SY1REC.SY1STNBR = OP2REC.SY1STNBR;
  SY1REC.XGPCD = OZ0FW00.OZ0FW-SEL-GPC;

  try
    call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21337"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911    /* and resource not available*/
  )                                 
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2  "; /* Type of error*/
  TA1REC.TA1LOC = "READ W/ IO0120 SY1REC";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSTYLE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY1REC.SY1KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-21337


// call io0130 vcolor01
Function OZ0F-21338()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set SY2REC empty; /* Clear row storage area*/

  SY2REC.SY1STNBR = OP2REC.SY1STNBR;
  SY2REC.SY2CLRID = OP2REC.SY2CLRID;
  SY2REC.XDMCD = OP2REC.XDMCD;
  SY2REC.XGPCD = OZ0FW00.OZ0FW-SEL-GPC;

  try
    call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21338"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911    /* and resource not available*/
  )                                 
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2  "; /* Type of error*/
  TA1REC.TA1LOC = "READ W/ IO0130 SY2REC";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-21338


// call vsoscr01
Function OZ0F-21339()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set VSOSCR01 empty; /* Clear row storage area*/

  VSOSCR01.OP-CUST-ORD-ID = OP2REC.OP1CUOID;
  VSOSCR01.OP-NIKE-ORD-ID = OP2REC.OP1NORID;
  VSOSCR01.OP-LINE-ITEM-NBR = OP2REC.OP2LNINB;
  if (OP2REC.XDZ-DATA-DIST-CD == "OB")
    VSOSCR01.SOCD-APPL-SRC-CD = OP2REC.XDZ-DATA-DIST-CD;
  else
    VSOSCR01.SOCD-APPL-SRC-CD = "OP";
  end

  try
    call "VSOSCR01" ("S3", SQLCA, VSOSCR01) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21339"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911    /* and resource not available*/
  )                                 
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2  "; /* Type of error*/
  TA1REC.TA1LOC = "READ W/ VSOSCR01 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOSCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOSCR01.VSOSCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-21339


// call vsoscr01
Function OZ0F-21339-CLOSE()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  try
    call "VSOSCR01" ("C3", SQLCA, VSOSCR01) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21339-CLOSE"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911    /* and resource not available*/
  )                                 
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2  "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE  VSOSCR01 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOSCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOSCR01.VSOSCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-21339-CLOSE


// call vsoscr01
Function OZ0F-21339-FETCH()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  try
    call "VSOSCR01" ("N3", SQLCA, VSOSCR01) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21339-FETCH"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911    /* and resource not available*/
  )                                 
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2  "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH  VSOSCR01 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOSCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOSCR01.VSOSCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-21339-FETCH


// Add page to temporary storage
Function OZ0F-21340()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OZ0FW02.XXXTSLEN = OZ0FW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ2F"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OZ0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OZ0FW02 empty; /* M002 display storage*/

    OZ0FW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "21340"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M002"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-21340


// Format and converse the map
Function OZ0F-22000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0FW00.OZ0FW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OZ0FW00.OZ0FW-SWF == "Y") /* Map must be formatted*/
                                   /* save header info*/
      OZ0FW00.OZ0FW-M2-CUST-STR-DPT = OZ0FM002.OZ0FM-CUST-STR-DPT;
      OZ0FW00.OZ0FW-M2-CU-CO-NM-HDR = OZ0FM002.OZ0FM-CU-CO-NM-HDR;
      OZ0FW00.OZ0FW-M2-OVERRIDE-DI = OZ0FM002.OZ0FM-OVERRIDE-DI;
      OZ0FW00.OZ0FW-M2-OP-CUST-ORD-ID = OZ0FM002.OZ0FM-OP-CUST-ORD-ID;
      OZ0FW00.OZ0FW-M2-CURR-GPC-CD = OZ0FM002.OZ0FM-CURR-GPC-CD;
      OZ0FW00.OZ0FW-M2-GPC-DESC = OZ0FM002.OZ0FM-GPC-DESC;
      OZ0FW00.OZ0FW-M2-HEADER-CHGS = OZ0FM002.OZ0FM-HEADER-CHGS;
      OZ0FW00.OZ0FW-M2-SOCD-CURR-CUST-PO = OZ0FM002.OZ0FM-SOCD-CURR-CUST-PO;
      OZ0FW00.OZ0FW-M2-XSO-SLS-OFC-ID = OZ0FM002.OZ0FM-XSO-SLS-OFC-ID;
      OZ0FW00.OZ0FW-M2-XSO-SLS-OFC-ID-DESC = OZ0FM002.OZ0FM-XSO-SLS-OFC-ID-DESC;
      OZ0FW00.OZ0FW-M2-SM-SAGCY-ID = OZ0FM002.OZ0FM-SM-SAGCY-ID;
      OZ0FW00.OZ0FW-M2-SM-SAGCY-ID-DESC = OZ0FM002.OZ0FM-SM-SAGCY-ID-DESC;
      OZ0FW00.OZ0FW-M2-SM-SREP-ID = OZ0FM002.OZ0FM-SM-SREP-ID;
      OZ0FW00.OZ0FW-M2-SM-SREP-FIRST-NM = OZ0FM002.OZ0FM-SM-SREP-FIRST-NM;
      OZ0FW00.OZ0FW-M2-SM-SREP-LAST-NM = OZ0FM002.OZ0FM-SM-SREP-LAST-NM;
      OZ0FW00.OZ0FW-M2-TOT-ORD-QTY = OZ0FW00.OZ0FW-SEL-TOT-ORD-QTY;
      OZ0FW00.OZ0FW-M2-TOT-ORD-VALUE = OZ0FW00.OZ0FW-SEL-TOT-ORD-VAL;
      OZ0FW00.OZ0FW-SEL-TOT-ORD-QTY = 0;
      OZ0FW00.OZ0FW-SEL-TOT-ORD-VAL = 0;

      OZ0F-22100(); /* Format the data on the map*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZ0FM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OZ0FM002.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0FM002.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OZWREC.XXXMSGNO != 0) /* Message to display*/

      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0FM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OZ0FM002.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/

    set OZ0FM002 alarm; /* Indicate sound alarm*/

  end

  converse OZ0FM002 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = OZ0FM002.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0FM002.CAITEM; /* Application data*/

end // end OZ0F-22000


// Format the display data
Function OZ0F-22100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set OZ0FM002 initial; /* m002 input/output area*/

  OZ0FW00.OZ0FW-SWF = "N"; /* Format the map switch*/

  /* ------------------------------------------------------------*/
  /* If a ruling was added, get the page from temp storage that the*/
  /* ruling's on and display it.*/
  /* ------------------------------------------------------------*/

  if (OZ0FW00.OZ0FW-M2-SAVE-PAGE != 0) /* if page saved off*/
    OZ0FW00.OZ0FW-SAVE-PAGE = OZ0FW-M2-SAVE-PAGE;
    OZ0FW00.OZ0FW-M2-SAVE-PAGE = 0;
    OZ0FW00.TA5TSQIX = OZ0FW00.OZ0FW-M2-TSQIX;
    OZ0FW00.OZ0FW-M2-TSQIX = 0;
    OZ0FW00.XXXTSLEN = 2486;
  end

  if (OZ0FW00.OZ0FW-SAVE-PAGE != 0)

    OZ0FW00.XXXTSPAG = OZ0FW00.OZ0FW-SAVE-PAGE; /* use saved page*/
    OZ0FW00.OZ0FW-SAVE-PAGE = 0;
    OZ0F-22110(); /* Obtain temporary storage page*/

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set OZ0FM002.XXXLITPG skip; /* "PAGE" literal*/
    OZ0FM002.XXXTSPAG = OZ0FW00.XXXTSPAG; /* Current page*/
    set OZ0FM002.XXXLITOF skip; /* "OF" literal*/
    OZ0FM002.TA5TSQIX = OZ0FW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
    OZ0FW00.OZ0FW-IXM = 1; /* Initialize map index*/
    while (OZ0FW00.OZ0FW-IXM < 12 /* Until screen is full*/
     && OZ0FW02.OZ0FW-STY-COL-DIM[OZ0FW-IXM] > " ")

      set OZ0FM002.OZ0FMSEL[OZ0FW-IXM] normal;

      if (OZ0FW-IXM == 1)
        OZ0FM002.OZ0FM-CURR-STOR-ID-DTL[OZ0FW-IXM] = OZ0FW02.OZ0FW-STR[OZ0FW-IXM];
        OZ0FW00.OZ0FW-SAVE-STORE = OZ0FW02.OZ0FW-STR[OZ0FW-IXM];
      else
        if (OZ0FW02.OZ0FW-STR[OZ0FW-IXM] == OZ0FW00.OZ0FW-SAVE-STORE)
          OZ0FM002.OZ0FM-CURR-STOR-ID-DTL[OZ0FW-IXM] = OZ0FW02.OZ0FW-STR[OZ0FW-IXM];
          OZ0FW00.OZ0FW-SAVE-STORE = OZ0FW02.OZ0FW-STR[OZ0FW-IXM];
          set OZ0FM002.OZ0FM-CURR-STOR-ID-DTL[OZ0FW-IXM] invisible, noHighLight;
        else
          OZ0FM002.OZ0FM-CURR-STOR-ID-DTL[OZ0FW-IXM] = OZ0FW02.OZ0FW-STR[OZ0FW-IXM];
        end
      end

      OZ0FM002.OZ0FM-CURR-STOR-ID-DTL[OZ0FW-IXM] = OZ0FW02.OZ0FW-STR[OZ0FW-IXM];
      OZ0FM002.OZ0FM-STYLE-CLR-DIM[OZ0FW-IXM] = OZ0FW02.OZ0FW-STY-COL-DIM[OZ0FW-IXM];
      OZ0FM002.OZ0FM-SY-STY-COLOR-ABRV[OZ0FW-IXM] = OZ0FW02.OZ0FW-STY-COL-ABRV[OZ0FW-IXM];
      OZ0FM002.OZ0FM-COLOR-NAME[OZ0FW-IXM] = OZ0FW02.OZ0FW-COLOR-NAME[OZ0FW-IXM];
      OZ0FM002.OZ0FM-ITEM-ORD-QTY[OZ0FW-IXM] = OZ0FW02.OZ0FW-ITEM-ORD-QTY[OZ0FW-IXM];
      OZ0FM002.OZ0FM-CONF-DISC[OZ0FW-IXM] = OZ0FW02.OZ0FW-CONF-DISC[OZ0FW-IXM];

      OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
                                   /* Increment map index*/

    end

    set OZ0FM002.OZ0FMSEL[1] cursor;
  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/

  else
    if (OZ0FW00.TA5TSQIX > 0) /* Pages were formatted*/

      if (OZ0FW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/

        if (OZ0FW00.OZ0FW-SWU == "Y") /* Current page was changed*/

          OZ0F-22120(); /* Update temporary storage page*/

          OZ0FW00.OZ0FW-SWU = "N"; /* Storage update switch*/

        end

        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/

        if (OZ0FW00.XXXTSPAG > OZ0FW00.TA5TSQIX) /* Desired greater highest*/
          OZ0FW00.XXXTSPAG = OZ0FW00.TA5TSQIX; /* Default to highest*/
        end

        OZ0F-22110(); /* Obtain temporary storage page*/

      end

      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/

      set OZ0FM002.XXXLITPG skip; /* "PAGE" literal*/
      OZ0FM002.XXXTSPAG = OZ0FW00.XXXTSPAG; /* Current page*/
      set OZ0FM002.XXXLITOF skip; /* "OF" literal*/
      OZ0FM002.TA5TSQIX = OZ0FW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
      OZ0FW00.OZ0FW-IXM = 1; /* Initialize map index*/
      while (OZ0FW00.OZ0FW-IXM < 12 /* Until screen is full*/
       && OZ0FW02.OZ0FW-STY-COL-DIM[OZ0FW-IXM] > " ")

        set OZ0FM002.OZ0FMSEL[OZ0FW-IXM] normal;

        if (OZ0FW-IXM == 1)
          OZ0FM002.OZ0FM-CURR-STOR-ID-DTL[OZ0FW-IXM] = OZ0FW02.OZ0FW-STR[OZ0FW-IXM];
          OZ0FW00.OZ0FW-SAVE-STORE = OZ0FW02.OZ0FW-STR[OZ0FW-IXM];
        else
          if (OZ0FW02.OZ0FW-STR[OZ0FW-IXM] == OZ0FW00.OZ0FW-SAVE-STORE)
            OZ0FM002.OZ0FM-CURR-STOR-ID-DTL[OZ0FW-IXM] = OZ0FW02.OZ0FW-STR[OZ0FW-IXM];
            OZ0FW00.OZ0FW-SAVE-STORE = OZ0FW02.OZ0FW-STR[OZ0FW-IXM];
            set OZ0FM002.OZ0FM-CURR-STOR-ID-DTL[OZ0FW-IXM] invisible, noHighLight;
          else
            OZ0FM002.OZ0FM-CURR-STOR-ID-DTL[OZ0FW-IXM] = OZ0FW02.OZ0FW-STR[OZ0FW-IXM];
          end
        end
        OZ0FM002.OZ0FM-CURR-STOR-ID-DTL[OZ0FW-IXM] = OZ0FW02.OZ0FW-STR[OZ0FW-IXM];
        OZ0FM002.OZ0FM-STYLE-CLR-DIM[OZ0FW-IXM] = OZ0FW02.OZ0FW-STY-COL-DIM[OZ0FW-IXM];
        OZ0FM002.OZ0FM-SY-STY-COLOR-ABRV[OZ0FW-IXM] = OZ0FW02.OZ0FW-STY-COL-ABRV[OZ0FW-IXM];
        OZ0FM002.OZ0FM-COLOR-NAME[OZ0FW-IXM] = OZ0FW02.OZ0FW-COLOR-NAME[OZ0FW-IXM];
        OZ0FM002.OZ0FM-ITEM-ORD-QTY[OZ0FW-IXM] = OZ0FW02.OZ0FW-ITEM-ORD-QTY[OZ0FW-IXM];
        OZ0FM002.OZ0FM-CONF-DISC[OZ0FW-IXM] = OZ0FW02.OZ0FW-CONF-DISC[OZ0FW-IXM];

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
                                   /* Increment map index*/

      end

      set OZ0FM002.OZ0FMSEL[1] cursor;

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/
  OZ0FM002.OZ0FM-CUST-STR-DPT = OZ0FW00.OZ0FW-M2-CUST-STR-DPT;
  OZ0FM002.OZ0FM-CU-CO-NM-HDR = OZ0FW00.OZ0FW-M2-CU-CO-NM-HDR;
  OZ0FM002.OZ0FM-OVERRIDE-DI = OZ0FW00.OZ0FW-M2-OVERRIDE-DI;
  OZ0FM002.OZ0FM-OP-CUST-ORD-ID = OZ0FW00.OZ0FW-M2-OP-CUST-ORD-ID;

  OZ0FM002.OZ0FM-CURR-GPC-CD = OZ0FW00.OZ0FW-M2-CURR-GPC-CD;
  OZ0FM002.OZ0FM-GPC-DESC = OZ0FW00.OZ0FW-M2-GPC-DESC;
  OZ0FM002.OZ0FM-HEADER-CHGS = OZ0FW00.OZ0FW-M2-HEADER-CHGS;
  OZ0FM002.OZ0FM-SOCD-CURR-CUST-PO = OZ0FW00.OZ0FW-M2-SOCD-CURR-CUST-PO;
  OZ0FM002.OZ0FM-XSO-SLS-OFC-ID = OZ0FW00.OZ0FW-M2-XSO-SLS-OFC-ID;

  OZ0FM002.OZ0FM-XSO-SLS-OFC-ID-DESC = OZ0FW00.OZ0FW-M2-XSO-SLS-OFC-ID-DESC;
  OZ0FM002.OZ0FM-SM-SAGCY-ID = OZ0FW00.OZ0FW-M2-SM-SAGCY-ID;
  OZ0FM002.OZ0FM-SM-SAGCY-ID-DESC = OZ0FW00.OZ0FW-M2-SM-SAGCY-ID-DESC;
  OZ0FM002.OZ0FM-SM-SREP-ID = OZ0FW00.OZ0FW-M2-SM-SREP-ID;
  OZ0FM002.OZ0FM-SM-SREP-FIRST-NM = OZ0FW00.OZ0FW-M2-SM-SREP-FIRST-NM;
  OZ0FM002.OZ0FM-SM-SREP-LAST-NM = OZ0FW00.OZ0FW-M2-SM-SREP-LAST-NM;
  OZ0FM002.OZ0FM-TOT-ORD-QTY = OZ0FW00.OZ0FW-M2-TOT-ORD-QTY;
  OZ0FM002.OZ0FM-TOT-ORD-VALUE = OZ0FW00.OZ0FW-M2-TOT-ORD-VALUE;

  /* ------Last report date and time ------------*/
  if (OZ0FW00.OZ0FW-LAST-RPT-DT1 == 0)
    OZ0FM002.OZ0FM-LAST-RPT-DATE = " ";
    OZ0FM002.OZ0FM-LAST-RPT-TIME = " ";
  else
    OZ0FW00.OZ0FW-LAST-RPT-MO = OZ0FW00.OZ0FW-LAST-RPT-MM1;
    OZ0FW00.OZ0FW-LAST-RPT-SL1 = "/";
    OZ0FW00.OZ0FW-LAST-RPT-DAY = OZ0FW00.OZ0FW-LAST-RPT-DD1;
    OZ0FW00.OZ0FW-LAST-RPT-SL2 = "/";
    OZ0FW00.OZ0FW-LAST-RPT-YE = OZ0FW00.OZ0FW-LAST-RPT-YY;
    OZ0FM002.OZ0FM-LAST-RPT-DATE = OZ0FW00.OZ0FW-LAST-RPT-DATE;
    OZ0FW00.OZ0FW-LAST-RPT-HH = OZ0FW00.OZ0FW-RPT-HH;
    OZ0FW00.OZ0FW-LAST-RPT-SL3 = ":";
    OZ0FW00.OZ0FW-LAST-RPT-MI = OZ0FW00.OZ0FW-RPT-MM;
    OZ0FM002.OZ0FM-LAST-RPT-TIME = OZ0FW00.OZ0FW-LAST-RPT-TIME;
  end
  /* ---------------------------------------------*/

  OZ0FW00.OZ0FW-IXM = 1; /* Initialize line index*/

  while (OZ0FW00.OZ0FW-IXM < 12) /* * Until end of lines*/

    if (OZ0FM002.OZ0FM-CURR-STOR-ID-DTL[OZ0FW-IXM] == 0000 && 
    OZ0FW00.OZ0FW-IXM > 1)
      set OZ0FM002.OZ0FM-CURR-STOR-ID-DTL[OZ0FW-IXM] skip, invisible;
    end

    if (OZ0FM002.OZ0FM-STYLE-CLR-DIM[OZ0FW-IXM] == " ")
      set OZ0FM002.OZ0FMSEL[OZ0FW-IXM] skip, noHighLight;
      set OZ0FM002.OZ0FM-CURR-STOR-ID-DTL[OZ0FW-IXM] skip, noHighLight;
      set OZ0FM002.OZ0FM-STYLE-CLR-DIM[OZ0FW-IXM] skip, noHighLight;
      set OZ0FM002.OZ0FM-COLOR-NAME[OZ0FW-IXM] skip, noHighLight;
      set OZ0FM002.OZ0FM-ITEM-ORD-QTY[OZ0FW-IXM] skip, noHighLight;
      set OZ0FM002.OZ0FM-CONF-DISC[OZ0FW-IXM] skip, noHighLight;
    end

    OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* Increment line index*/

  end
  /*  */
end // end OZ0F-22100


// Read temporary storage page
Function OZ0F-22110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OZ0FW02.XXXTSLEN = OZ0FW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ2F"; /* Application identification*/
  TA5REC.TA5TSQIX = OZ0FW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OZ0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "22110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M002"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-22110


// Update temporary storage page
Function OZ0F-22120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (OZ0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "22120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M002"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-22120


// Check attention identifier
Function OZ0F-23000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0FW00.OZ0FW-SWR == "Y") /* Request for data*/
      set OZ0FW02 empty; /* m002 display storage*/
    end

    OZ0FW00.OZ0FW-SWF = "Y"; /* Format the map switch*/
    OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/
  if (OZ0FM002.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      OZ0F-21100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0FM002.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "23000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If HELP, exit to the previous level or exit to the Master*/
  /* Menu was requested, exit to another application.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      if (OZ0FM001.OZ0FM-SM-SAGCY-ID == " ")
        OZ0FM001.OZ0FM-SM-SAGCY-ID-DESC = " ";
      end
      if (OZ0FM001.OZ0FM-SM-SREP-ID == 0)
        OZ0FM001.OZ0FM-SM-SREP-LAST-NM = "    ";
        OZ0FM001.OZ0FM-SM-SREP-FIRST-NM = "    ";
      end
      OZ0FW00.OZ0FW-SWR = "N";
      OZ0FW00.OZ0FW-SWF = "Y";
      exit stack;
    end

    if (converseVar.eventKey is pf4) /* PF3 was pressed*/
      COMMAREA.CATOAP = "OZ0A"; /* TO application*/
    end

    OZ0F-21100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid attention identifier was used to*/
  /* invoke the transaction.  Display an error message to the*/
  /* user if the PF key used is not supported.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf3   /* and PF3 was not pressed*/
   && converseVar.eventKey not pf4   /* and PF4 was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf15) /* and PF15 was not pressed*/
  /* AND EZEAID NOT PF17;           /* and PF17 was not pressed*/

    OZWREC.XXXPRCNM = "23000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    OZ0F-20000(); /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* pf15*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf15) /* pf15 pressed*/

    OZ0F-23100();
    OZ0FW00.OZ0FW-SWR = "Y"; /* to pull up data on m003*/
    OZ0FW00.OZ0FW-SWF = "Y"; /* to pull up data on m003*/
    OZ0FW00.XXXTSPAG = 1; /* reset ts page counter*/
    OZ0F-30000();

  end

  /* ------------------------------------------------------------*/
  /* pf17*/
  /* ------------------------------------------------------------*/
  /* IF EZEAID IS PF17;               /* pf17 pressed*/

  /* SET OZWREC EMPTY;*/
  /* MOVE OZ0FM002.OZ0FM-CUST-STR-DPT TO OZWREC.CUST-STR-DPT;*/
  /* MOVE OZ0FM002.OZ0FM-CURR-GPC-CD TO OZWREC.XGPCD;*/
  /* MOVE OZ0FM002.OZ0FM-XSO-SLS-OFC-ID TO OZWREC.XSOCD;*/
  /* PERFORM OZ0F-11100;            /* Purge w01 temp storage*/
  /* PERFORM OZ0F-21100;            /* Purge w02 temp storage*/
  /* MOVE 'OZ0E' TO COMMAREA.CATOAP;/* TO application*/
  /* XSOZ-S0001;                    /* Exit to another application*/
  /* EZEFLO;                        /* Exit to display map*/
  /*  */
  /* end;*/
  /*  */
  /* ------------------------------------------------------------*/
  /* enter*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter)

    if ("S" in OZ0FM002.OZ0FMSEL) /* line was selected*/
      OZ0F-23200(); /* build ws for m005*/
      OZ0FW00.OZ0FW-SWR = "Y"; /* to pull up data on m005*/
      OZ0FW00.OZ0FW-SWF = "Y"; /* to pull up data on m005*/
  /* MOVE 1 TO OZ0FW00.XXXTSPAG;  /* reset ts page counter*/
      OZ0FW00.OZ0FW-M2-SAVE-PAGE = OZ0FW00.XXXTSPAG;
      OZ0FW00.OZ0FW-M2-TSQIX = OZ0FW00.TA5TSQIX;
      OZ0F-50000();
    else /* no line selected*/
      OZ0FW00.OZ0FW-SWR = "Y";
    end

  end
end // end OZ0F-23000


// Check attention identifier
Function OZ0F-23100()
  OZ0FM003.OZ0FM-CUST-STR-DPT = OZ0FM002.OZ0FM-CUST-STR-DPT;
  OZ0FW00.OZ0FW-SEL-CUST-NM-HDR = OZ0FM002.OZ0FM-CU-CO-NM-HDR;
  OZ0FW00.OZ0FW-SEL-OVERRIDE-DI = OZ0FM001.OZ0FM-OVERRIDE-DI;


  OZ0FW00.OZ0FW-SEL-GPC = OZ0FM002.OZ0FM-CURR-GPC-CD;
  OZ0FW00.OZ0FW-SEL-GPC-DESC = OZ0FM002.OZ0FM-GPC-DESC;
  OZ0FW00.OZ0FW-SEL-CUST-PO = OZ0FM002.OZ0FM-SOCD-CURR-CUST-PO;

  OZ0FW00.OZ0FW-SEL-SALES-OFF = OZ0FM002.OZ0FM-XSO-SLS-OFC-ID;
  OZ0FW00.OZ0FW-SEL-SALES-OFF-DESC = OZ0FM002.OZ0FM-XSO-SLS-OFC-ID-DESC;
  OZ0FW00.OZ0FW-SEL-SALES-AGENCY = OZ0FM002.OZ0FM-SM-SAGCY-ID;
  OZ0FW00.OZ0FW-SEL-SALES-AGENCY-DESC = OZ0FM002.OZ0FM-SM-SAGCY-ID-DESC;
  OZ0FW00.OZ0FW-SEL-SALES-REP = OZ0FM002.OZ0FM-SM-SREP-ID;
  OZ0FW00.OZ0FW-SEL-SREP-FIRST-NM = OZ0FM002.OZ0FM-SM-SREP-FIRST-NM;
  OZ0FW00.OZ0FW-SEL-SREP-LAST-NM = OZ0FM002.OZ0FM-SM-SREP-LAST-NM;
  OZ0FW00.OZ0FW-SEL-TOT-ORD-QTY = OZ0FM002.OZ0FM-TOT-ORD-QTY;
  OZ0FW00.OZ0FW-SEL-TOT-ORD-VAL = OZ0FM002.OZ0FM-TOT-ORD-VALUE;
  /* VE OZ0FW01.OZ0FW-1ST-ORD-ID(OZ0FW-IXM) TO oz0fw00.OZ0FW-SEL-1ST-ORD-ID;*/
end // end OZ0F-23100


// Check attention identifier
Function OZ0F-23200()
  OZ0F-23205(); /* clean up w5idx table before reloading*/

  OZ0FW00.OZ0FW-SEL-CUST-NM-HDR = OZ0FM002.OZ0FM-CU-CO-NM-HDR;

  OZ0FW-IXM = sysVar.arrayIndex;
  OZ0FW00.OZ0FW-M5IDX = 1;

  while (OZ0FW00.OZ0FW-IXM < 12)
    if (OZ0FM002.OZ0FMSEL[OZ0FW-IXM] == "S")
      OZ0FW00.OZ0FW-M5IDX-CUST-STR-DPT[OZ0FW-M5IDX] = OZ0FW02.OZ0FW-CUST-STR-DPT[OZ0FW-IXM];

      OZ0FW00.OZ0FW-M5IDX-STYLE-CLR-DIM[OZ0FW-M5IDX] = OZ0FM002.OZ0FM-STYLE-CLR-DIM[OZ0FW-IXM];

      OZ0FW00.OZ0FW-M5IDX-SY-STY-COLOR-ABRV[OZ0FW-M5IDX] = OZ0FM002.OZ0FM-SY-STY-COLOR-ABRV[OZ0FW-IXM];

      OZ0FW00.OZ0FW-M5IDX-COLOR-NAME[OZ0FW-M5IDX] = OZ0FM002.OZ0FM-COLOR-NAME[OZ0FW-IXM];

      OZ0FW00.OZ0FW-M5IDX-OP-ORD-PART-CHAR[OZ0FW-M5IDX] = OZ0FW02.OZ0FW-OP-ORD-PART-CHAR[OZ0FW-IXM];

      OZ0FW00.OZ0FW-M5IDX-OP-CUST-ORD-ID[OZ0FW-M5IDX] = OZ0FW02.OZ0FW-OP-CUST-ORD-ID[OZ0FW-IXM];

      OZ0FW00.OZ0FW-M5IDX-LINE-ITEM-NBR[OZ0FW-M5IDX] = OZ0FW02.OZ0FW-LINE-ITEM-NBR[OZ0FW-IXM];

      OZ0FW00.OZ0FW-M5IDX-ITM-CHG[OZ0FW-M5IDX] = OZ0FW02.OZ0FW-ITM-CHG[OZ0FW-IXM];

      OZ0FW00.OZ0FW-M5IDX = OZ0FW00.OZ0FW-M5IDX + 1;

    end

    OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

  end

  OZ0FW00.OZ0FW-M5IDX = 1;
end // end OZ0F-23200


// Check attention identifier
Function OZ0F-23205()
  /* empty m5idx table*/

  OZ0FW00.OZ0FW-M5IDX = 1;

  while (OZ0FW00.OZ0FW-M5IDX < 12)
    OZ0FW00.OZ0FW-M5IDX-CUST-STR-DPT[OZ0FW-M5IDX] = " ";
    OZ0FW00.OZ0FW-M5IDX-STYLE-CLR-DIM[OZ0FW-M5IDX] = " ";
    OZ0FW00.OZ0FW-M5IDX-SY-STY-COLOR-ABRV[OZ0FW-M5IDX] = " ";
    OZ0FW00.OZ0FW-M5IDX-COLOR-NAME[OZ0FW-M5IDX] = " ";
    OZ0FW00.OZ0FW-M5IDX-OP-ORD-PART-CHAR[OZ0FW-M5IDX] = " ";
    OZ0FW00.OZ0FW-M5IDX-OP-CUST-ORD-ID[OZ0FW-M5IDX] = 0;
    OZ0FW00.OZ0FW-M5IDX-ITM-CHG[OZ0FW-M5IDX] = " ";

    OZ0FW00.OZ0FW-M5IDX = OZ0FW00.OZ0FW-M5IDX + 1;

  end
end // end OZ0F-23205


// Reset highlighted fields
Function OZ0F-24000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/

  set OZ0FM002.OZ0FM-CUST-STR-DPT normal;
  set OZ0FM002.OZ0FM-CU-CO-NM-HDR normal;
  set OZ0FM002.OZ0FM-OVERRIDE-DI normal;
  set OZ0FM002.OZ0FM-OP-CUST-ORD-ID normal;
  set OZ0FM002.OZ0FM-CURR-GPC-CD normal;
  set OZ0FM002.OZ0FM-HEADER-CHGS normal;
  set OZ0FM002.OZ0FM-SOCD-CURR-CUST-PO normal;
  set OZ0FM002.OZ0FM-XSO-SLS-OFC-ID normal;
  set OZ0FM002.OZ0FM-SM-SAGCY-ID normal;
  set OZ0FM002.OZ0FM-SM-SREP-ID normal;
  set OZ0FM002.OZ0FM-SM-SREP-FIRST-NM normal;
  set OZ0FM002.OZ0FM-SM-SREP-LAST-NM normal;
  set OZ0FM002.OZ0FM-TOT-ORD-QTY normal;
  set OZ0FM002.OZ0FM-TOT-ORD-VALUE normal;

  OZ0FW00.OZ0FW-IXM = 1; /* Initialize line index*/

  while (OZ0FW00.OZ0FW-IXM < 12) /* * Until end of lines*/

    set OZ0FM002.OZ0FMSEL[OZ0FW-IXM] normal; /* Reset select flag*/

    OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* Increment line index*/

  end

  set OZ0FM002.CATOAP initialAttributes; /* TO application*/
  set OZ0FM002.CAITEM initialAttributes; /* Application data*/


end // end OZ0F-24000


// Verify data that was entered
Function OZ0F-25000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (OZ0FM002.CAITEM > " ") /* Application data was entered*/

    OZWREC.XXXPRCNM = "25000"; /* Module identification*/
    set OZ0FM002.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    OZ0F-25100(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the line.*/
    /* ------------------------------------------------------------*/

    if (converseVar.eventKey is enter /* Enter was pressed*/
     || converseVar.eventKey is pf16  /* PF16 was pressed*/
     || converseVar.eventKey is pf19) /* PF19 was pressed*/

      OZ0F-25200(); /* Verify data in the line*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    OZ0F-20000(); /* Exit to display map*/
  end


end // end OZ0F-25000


// Verify scroll request
Function OZ0F-25100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OZ0FW00.XXXTSPAG < 2)       /* and no previous pages*/

    OZWREC.XXXPRCNM = "25100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OZ0FW00.XXXTSPAG >= OZ0FW00.TA5TSQIX) /* and no more pages*/

    OZWREC.XXXPRCNM = "25100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate an error for any data that was modified.*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-IXM = 1; /* Initialize line index*/

  while (OZ0FW00.OZ0FW-IXM < 12) /* Until end of lines*/

    if (OZ0FM002.OZ0FMSEL[OZ0FW-IXM] != OZ0FW02.OZ0FW-SEL[OZ0FW-IXM])

      OZWREC.XXXPRCNM = "25100"; /* Module identification*/
      set OZ0FM002.OZ0FMSEL[OZ0FW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(13); /* Field may not change*/

    end

    OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* increment line number*/

  end


end // end OZ0F-25100


// Verify data in the line
Function OZ0F-25200()
  /* ------------------------------------------------------------*/
  /* If selection was entered and is not an "S", indicate that*/
  /* only "S" may be entered to select a line.*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-IXM = 1; /* initialize index*/

  while (OZ0FW00.OZ0FW-IXM < 12) /* until end of lines*/

    if (OZ0FM002.OZ0FMSEL[OZ0FW-IXM] != OZ0FW02.OZ0FW-SEL[OZ0FW-IXM]
     && OZ0FM002.OZ0FMSEL[OZ0FW-IXM] != "S") /* and is not a "S"*/

      OZWREC.XXXPRCNM = "25200"; /* Module identification*/
      set OZ0FM002.OZ0FMSEL[OZ0FW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(13); /* Only "S" may be entered*/

    else

      if (OZ0FM002.OZ0FMSEL[OZ0FW-IXM] == "S" /* if 'S' but*/
       && converseVar.eventKey not pf14       /* no pf14*/
       && converseVar.eventKey not pf15       /* no pf16*/
       && converseVar.eventKey not pf17)      /* no pf19*/
        OZWREC.XXXPRCNM = "25200"; /* Module identification*/
        set OZ0FM002.OZ0FMSEL[OZ0FW-IXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(4);
      end

    end

    OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* decrement line number*/

  end


end // end OZ0F-25200


// Process valid input request
Function OZ0F-26000()
  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-SWF = "Y"; /* format the map switch*/



  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    OZ0FW00.XXXTSPAG = OZ0FW00.XXXTSPAG - 1; /* Decrement page number*/

    OZ0F-20000(); /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    OZ0FW00.XXXTSPAG = OZ0FW00.XXXTSPAG + 1; /* Increment page number*/

    OZ0F-20000(); /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter) /* enter pressed*/

    OZ0FW00.OZ0FW-SWF = "N"; /* Format the map switch*/
    OZ0F-20000(); /* Return to previous process*/
  end

  /* ------------------------------------------------------------*/
  /* Save the select fields and clear the map input/output area.*/
  /* ------------------------------------------------------------*/

  /* VE 'N' TO OZ0FW00.OZ0FW-UPDATE-SW;/* turn off updated switch*/


  if (converseVar.eventKey is pf14) /* pf14*/

    OZ0FW00.OZ0FW-IXM = 1; /* Initialize line index*/
    OZ0FW00.OZ0FW-SWU = "N"; /* reset switch*/

    while (OZ0FW00.OZ0FW-IXM <= 12 /* Until end of lines*/
     && OZ0FW00.OZ0FW-SWU != "Y") /* or 'S' is found*/

      if (OZ0FM002.OZ0FMSEL[OZ0FW-IXM] != OZ0FW02.OZ0FW-SEL[OZ0FW-IXM])

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1; /* Increment line index*/

      end
    end
  end

  if (converseVar.eventKey is pf19) /* PF19 pressed*/
    if ("S" in OZ0FM002.OZ0FMSEL /* If line was selected*/
     && OZ0FW00.OZ0FW-SWR != "Y") /* data not requested*/
      OZ0FW00.OZ0FW-IX1 = sysVar.arrayIndex;
    end
    if (converseVar.validationMsgNum == 0) /* If no errors*/
      XSOZ-S0001(); /* Exit to another application*/
    else
      OZ0FW00.OZ0FW-SWF = "N";
      exit stack; /* Exit to display map*/
    end
  end

end // end OZ0F-26000


// Process to add a new row
Function OZ0F-30000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Format the map output area and display the map.*/
  /* 2) Check the attention identifier used to respond.*/
  /* 3) Reset highlighted fields to normal intensity.*/
  /* 4) Verify the data that was entered.*/
  /* 5) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0F-31000(); /* Obtain data to display*/

  OZ0F-32000(); /* Format and display the map*/

  OZ0F-33000(); /* Check attention identifier*/

  OZ0F-34000(); /* Reset fields to normal intensity*/

  OZ0F-35000(); /* Verify the entered data*/

  OZ0F-36000(); /* Process valid input request*/


end // end OZ0F-30000


// Obtain the data to display
Function OZ0F-31000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.OZ0FW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/
  OZ0FW00.XXXTSLEN = 0440; /* temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.XXXTSPAG == 0) /* no pages established*/
    OZ0FW00.XXXTSPAG = 1; /* Page number to display*/
  end

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/
  OZ0F-31100(); /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Perform screen header edits*/
  /* ------------------------------------------------------------*/
  OZ0F-31200(); /* build screen header*/

  /* ------------------------------------------------------------*/
  /* get the data*/
  /* ------------------------------------------------------------*/
  OZ0F-31300();
end // end OZ0F-31000


// Purge any temporary storage
Function OZ0F-31100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/

  set OZ0FW03 empty; /* M001 display storage*/

  OZ0FW00.OZ0FW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0FW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "OZ3F"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0FW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "31100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M003"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-31100


// screen header edits
Function OZ0F-31200()
  /* VE OZ0FW00.OZ0FW-SEL-CUST-STR-DPT TO OZ0FM003.OZ0FM-CUST-STR-DPT;*/
  OZ0FM003.OZ0FM-CU-CO-NM-HDR = OZ0FW00.OZ0FW-SEL-CUST-NM-HDR;

  OZ0FM003.OZ0FM-OVERRIDE-DI = OZ0FW00.OZ0FW-SEL-OVERRIDE-DI;

  OZ0FM003.OZ0FM-OP-CUST-ORD-ID = OZ0FW00.OZ0FW-SEL-ORD-NBR;

  OZ0FM003.OZ0FM-CURR-GPC-CD = OZ0FW00.OZ0FW-SEL-GPC;
  OZ0FM003.OZ0FM-GPC-DESC = OZ0FW00.OZ0FW-SEL-GPC-DESC;
  OZ0FM003.OZ0FM-SOCD-CURR-CUST-PO = OZ0FW00.OZ0FW-SEL-CUST-PO;
  OZ0FM003.OZ0FM-XSO-SLS-OFC-ID = OZ0FW00.OZ0FW-SEL-SALES-OFF;

  OZ0FM003.OZ0FM-XSO-SLS-OFC-ID-DESC = OZ0FW00.OZ0FW-SEL-SALES-OFF-DESC;

  OZ0FM003.OZ0FM-SM-SAGCY-ID = OZ0FW00.OZ0FW-SEL-SALES-AGENCY;

  OZ0FM003.OZ0FM-SM-SAGCY-ID-DESC = OZ0FW00.OZ0FW-SEL-SALES-AGENCY-DESC;

  OZ0FM003.OZ0FM-SM-SREP-ID = OZ0FW00.OZ0FW-SEL-SALES-REP;
  OZ0FM003.OZ0FM-SM-SREP-FIRST-NM = OZ0FW00.OZ0FW-SEL-SREP-FIRST-NM;
  OZ0FM003.OZ0FM-SM-SREP-LAST-NM = OZ0FW00.OZ0FW-SEL-SREP-LAST-NM;
  OZ0FM003.OZ0FM-TOT-ORD-QTY = OZ0FW00.OZ0FW-SEL-TOT-ORD-QTY;
  OZ0FM003.OZ0FM-TOT-ORD-VALUE = OZ0FW00.OZ0FW-SEL-TOT-ORD-VAL;

  /* ----------Not in use --------------------------------*/
  /* IF OZ0FW00.OZ0FW-SEL-XPTCD IN XPTTBL.XPTCD;/* code in table*/
  /* RETR OZ0FW00.OZ0FW-SEL-XPTCD XPTTBL.XPTCD*/
  /* OZ0FM003.OZ0FM-PYMNT-TERMS XPTDESC;*/
  /* END;*/
  /* -----------------------------------------------------*/
  OZ0FM003.OZ0FM-CURR-DNSB = OZ0FW00.OZ0FW-SEL-CURR-DSBDT;
  OZ0FM003.OZ0FM-CURR-DNSA = OZ0FW00.OZ0FW-SEL-CURR-DSADT;
  OZ0FM003.OZ0FM-ORIG-DNSB = OZ0FW00.OZ0FW-SEL-ORIG-DSBDT;
  OZ0FM003.OZ0FM-ORIG-DNSA = OZ0FW00.OZ0FW-SEL-ORIG-DSADT;
  OZ0FM003.OZ0FM-PO-MONEY-MTH = OZ0FW00.OZ0FW-SEL-PO-MONEY-MTH;
  OZ0FM003.OZ0FM-OP-CUST-PO = OZ0FW00.OZ0FW-SEL-OP-CUST-PO;
  OZ0FM003.OZ0FM-SP1ID = OZ0FW00.OZ0FW-SEL-SP1ID;

  if (OZ0FW00.OZ0FW-SEL-SP1ID > " ")
    set SP1REC empty; /* Clear row storage area*/

    SP1REC.SP1ID = OZ0FW00.OZ0FW-SEL-SP1ID;

    OZ0F-11230(); /* validate against dspgm.vspgm001*/
  /* MOVE SP1REC.SP1NM TO OZ0FM001.OZ0FM-SP-SPGM-ID-DESC;*/
    OZ0FW00.OZ0FW-SEL-SP1NM = SP1REC.SP1NM;
  end

  OZ0FM003.OZ0FM-SP1NM = OZ0FW00.OZ0FW-SEL-SP1NM;

  /* -------------------------------------------------------------*/
end // end OZ0F-31200


// Obtain the data to display
Function OZ0F-31300()
  OZ0F-31305(); /* empty work table*/

  OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-SV-CNT;
  OZ0FW00.OZ0FW-SV-CNT = 1;
  OZ0FW00.OZ0FW-IX1 = 1;

  while (OZ0FW00.OZ0FW-SV-CNT <= OZ0FW00.OZ0FW-IDX
   && OZ0FW99.OZ0FW-SV-ORD-ID[OZ0FW-SV-CNT] > 0)

    OZ0F-31310(); /* open vsohcr01 cursor*/

    OZ0FW00.OZ0FW-IXM = 1; /* Display line index*/
    OZ0FW00.OZ0FW-SWC = "N"; /* End of cursor switch*/

    while (OZ0FW00.OZ0FW-SWC == "N") /* Until end of cursor*/

      OZ0F-31320(); /* Fetch next row in the cursor*/

      if (OZ0FW00.OZ0FW-SWC == "N") /* Not end of cursor*/
        OZ0F-31330(); /* Save data in display storage*/
      end

      if (OZ0FW00.OZ0FW-IXM >= 8) /* Page is full*/

        OZ0F-31340(); /* Add page to temporary storage*/

        OZ0FW00.OZ0FW-IXM = 1; /* Display line index*/

      end

    end

  /* ------------------------------------------------------------*/
  /* Add any partially formatted last page to the queue.*/
  /* ------------------------------------------------------------*/
    if (OZ0FW00.OZ0FW-IXM > 1) /* Page was formatted*/
      OZ0F-31340(); /* Add page to temporary storage*/
    end

  /* ------------------------------------------------------------*/
  /* close the cursor*/
  /* ------------------------------------------------------------*/
    OZ0F-31350(); /* Close the selected set cursor*/

    OZ0FW00.OZ0FW-SV-CNT = OZ0FW00.OZ0FW-SV-CNT + 1;
  end

  if (OZ0FW00.TA5TSQIX == 0) /* No pages formatted*/

    OZWREC.XXXPRCNM = "31300"; /* Module identification*/
    OZWREC.XXXMSGNO = 16; /* No data was found to display*/
  /* SET OZ0FM002.OZ0FM-CURR-CU-CO-ID CURSOR;/* cursor*/
  /* MOVE ' ' TO OZ0FM001.OZ0FMSEL(1);/* reset select field*/
  /* SET OZ0FM001.OZ0FMSEL(1) AUTOSKIP;*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/
end // end OZ0F-31300


// empty m3 work table
Function OZ0F-31305()
  OZ0FW00.OZ0FW-IX1 = 1;

  while (OZ0FW00.OZ0FW-IX1 < 501)
    OZ0FW00.OZ0FW-M3-WS-XOMCD[OZ0FW-IX1] = "  ";
    OZ0FW00.OZ0FW-M3-WS-COMMENT[OZ0FW-IX1] = "  ";
    OZ0FW00.OZ0FW-IX1 = OZ0FW00.OZ0FW-IX1 + 1;
  end
end // end OZ0F-31305


// Select set and open cursor
Function OZ0F-31310()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  set VSOHCR01 empty;

  VSOHCR01.OP1CUOID = OZ0FW99.OZ0FW-SV-ORD-ID[OZ0FW-SV-CNT];

  try
    call "VSOHCR01" ("S2", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31310"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF VSOHCR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOHCR01.VSOHCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-31310


// Select set and open cursor
Function OZ0F-31320()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VSOHCR01" ("N2", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
        OZ0FW00.OZ0FW-SWC = "Y";
        return; /* Return to previous process*/
      end
    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31320"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH VSOHCR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOHCR01.VSOHCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-31320


// Save data in display storage
Function OZ0F-31330()
  /* --------------------------------------------------------------*/
  /* call vsocrc01 for the change description*/
  /* --------------------------------------------------------------*/
  OZ0F-31335();

  OZ0FW00.OZ0FW-FND = "N";
  OZ0FW00.OZ0FW-IX2 = 1;

  while (OZ0FW00.OZ0FW-IX2 < 501
   && OZ0FW00.OZ0FW-FND == "N"
   && OZ0FW00.OZ0FW-M3-WS-XOMCD[OZ0FW-IX2] > "  ")

    if (VSOHCR01.XOMCD == OZ0FW00.OZ0FW-M3-WS-XOMCD[OZ0FW-IX2]
     && VSOHCR01.SOCD-HDR-RSN-TXT == 
    OZ0FW00.OZ0FW-M3-WS-COMMENT[OZ0FW-IX2])
      OZ0FW00.OZ0FW-FND = "Y";
      OZ0FW00.OZ0FW-IX2 = 501;
    end

    OZ0FW-IX2 = OZ0FW-IX2 + 1;
  end

  if (OZ0FW00.OZ0FW-FND == "N")

    OZ0FW00.OZ0FW-M3-WS-XOMCD[OZ0FW-IX1] = VSOHCR01.XOMCD;
    OZ0FW00.OZ0FW-M3-WS-COMMENT[OZ0FW-IX1] = VSOHCR01.SOCD-HDR-RSN-TXT;

    OZ0FW03.OZ0FW-XOMCD[OZ0FW-IXM] = VSOHCR01.XOMCD;
    OZ0FW03.OZ0FW-DASH[OZ0FW-IXM] = "-";
    OZ0FW03.OZ0FW-COMMENT[OZ0FW-IXM] = VSOCRC01.SOCD-CHNG-RSN-DESC;

    if (VSOHCR01.SOCD-HDR-RSN-TXT > " ")
      OZ0FW-IXM = OZ0FW-IXM + 1;
      OZ0FW03.OZ0FW-CHG-REASON[OZ0FW-IXM] = "  ";
      OZ0FW03.OZ0FW-COMMENT[OZ0FW-IXM] = VSOHCR01.SOCD-HDR-RSN-TXT;
    end

    OZ0FW-IXM = OZ0FW-IXM + 1;
    OZ0FW-IX1 = OZ0FW-IX1 + 1;

  end
end // end OZ0F-31330


// Select set and open cursor
Function OZ0F-31335()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  set VSOCRC01 empty;

  VSOCRC01.XOMCD = VSOHCR01.XOMCD;

  try
    call "VSOCRC01" ("S ", SQLCA, VSOCRC01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31335"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT ROW FROM VSOCRC01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOCRC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOCRC01.VSOCRC01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-31335


// Add page to temporary storage
Function OZ0F-31340()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OZ0FW03.XXXTSLEN = OZ0FW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ3F"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OZ0FW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OZ0FW03 empty; /* M001 display storage*/

    OZ0FW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "31340"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M003"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-31340


// Close selected set cursor
Function OZ0F-31350()
  /* ------------------------------------------------------------*/
  /* Close the selected set of table rows.*/
  /* ------------------------------------------------------------*/

  try
    call "VSOHCR01" ("C2", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31350"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/

  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-31350


// Format and converse the map
Function OZ0F-32000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0FW00.OZ0FW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OZ0FW00.OZ0FW-SWF == "Y") /* Map must be formatted*/
                                   /* save header info*/
      OZ0FW00.OZ0FW-M2-CUST-STR-DPT = OZ0FM003.OZ0FM-CUST-STR-DPT;
      OZ0FW00.OZ0FW-M2-CU-CO-NM-HDR = OZ0FM003.OZ0FM-CU-CO-NM-HDR;
      OZ0FW00.OZ0FW-M2-OVERRIDE-DI = OZ0FM003.OZ0FM-OVERRIDE-DI;
      OZ0FW00.OZ0FW-M2-OP-CUST-ORD-ID = OZ0FM003.OZ0FM-OP-CUST-ORD-ID;
      OZ0FW00.OZ0FW-M2-CURR-GPC-CD = OZ0FM003.OZ0FM-CURR-GPC-CD;
      OZ0FW00.OZ0FW-M2-GPC-DESC = OZ0FM003.OZ0FM-GPC-DESC;
      OZ0FW00.OZ0FW-M2-SOCD-CURR-CUST-PO = OZ0FM003.OZ0FM-SOCD-CURR-CUST-PO;
      OZ0FW00.OZ0FW-M2-XSO-SLS-OFC-ID = OZ0FM003.OZ0FM-XSO-SLS-OFC-ID;
      OZ0FW00.OZ0FW-M2-XSO-SLS-OFC-ID-DESC = OZ0FM003.OZ0FM-XSO-SLS-OFC-ID-DESC;
      OZ0FW00.OZ0FW-M2-SM-SAGCY-ID = OZ0FM003.OZ0FM-SM-SAGCY-ID;
      OZ0FW00.OZ0FW-M2-SM-SAGCY-ID-DESC = OZ0FM003.OZ0FM-SM-SAGCY-ID-DESC;
      OZ0FW00.OZ0FW-M2-SM-SREP-ID = OZ0FM003.OZ0FM-SM-SREP-ID;
      OZ0FW00.OZ0FW-M2-SM-SREP-FIRST-NM = OZ0FM003.OZ0FM-SM-SREP-FIRST-NM;
      OZ0FW00.OZ0FW-M2-SM-SREP-LAST-NM = OZ0FM003.OZ0FM-SM-SREP-LAST-NM;
      OZ0FW00.OZ0FW-M2-TOT-ORD-QTY = OZ0FM003.OZ0FM-TOT-ORD-QTY;
      OZ0FW00.OZ0FW-M2-TOT-ORD-VALUE = OZ0FM003.OZ0FM-TOT-ORD-VALUE;
  /* MOVE OZ0FM003.OZ0FM-PYMNT-TERMS TO OZ0FW00.OZ0FW-M3-PYMNT-TERMS;*/
      OZ0FW00.OZ0FW-M3-PO-MONEY-MTH = OZ0FM003.OZ0FM-PO-MONEY-MTH;
      OZ0FW00.OZ0FW-M3-ORIG-DNSB = OZ0FM003.OZ0FM-ORIG-DNSB;
      OZ0FW00.OZ0FW-M3-ORIG-DNSA = OZ0FM003.OZ0FM-ORIG-DNSA;
      OZ0FW00.OZ0FW-M3-CURR-DNSB = OZ0FM003.OZ0FM-CURR-DNSB;
      OZ0FW00.OZ0FW-M3-CURR-DNSA = OZ0FM003.OZ0FM-CURR-DNSA;
      OZ0FW00.OZ0FW-M3-OP-CUST-PO = OZ0FM003.OZ0FM-OP-CUST-PO;
      OZ0FW00.OZ0FW-M3-SP1ID = OZ0FM003.OZ0FM-SP1ID;
      OZ0FW00.OZ0FW-M3-SP1NM = OZ0FM003.OZ0FM-SP1NM;
      OZ0F-32100(); /* Format the data on the map*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZ0FM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OZ0FM003.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0FM003.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OZWREC.XXXMSGNO != 0) /* Message to display*/

      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0FM003.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OZ0FM003.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/

    set OZ0FM003 alarm; /* Indicate sound alarm*/

  end

  converse OZ0FM003 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = OZ0FM003.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0FM003.CAITEM; /* Application data*/

end // end OZ0F-32000


// Format the display data
Function OZ0F-32100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set OZ0FM003 initial; /* m003 input/output area*/

  OZ0FW00.OZ0FW-SWF = "N"; /* Format the map switch*/

  /* ------------------------------------------------------------*/
  /* If a ruling was added, get the page from temp storage that the*/
  /* ruling's on and display it.*/
  /* ------------------------------------------------------------*/

  if (OZ0FW00.OZ0FW-SAVE-PAGE != 0) /* if page saved off*/

    OZ0FW00.XXXTSPAG = OZ0FW00.OZ0FW-SAVE-PAGE; /* use saved page*/

    OZ0F-32110(); /* Obtain temporary storage page*/

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set OZ0FM003.XXXLITPG skip; /* "PAGE" literal*/
    OZ0FM003.XXXTSPAG = OZ0FW00.XXXTSPAG; /* Current page*/
    set OZ0FM003.XXXLITOF skip; /* "OF" literal*/
    OZ0FM003.TA5TSQIX = OZ0FW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
    OZ0FW00.OZ0FW-IXM = 1; /* Initialize map index*/
    while (OZ0FW00.OZ0FW-IXM < 9) /* Until screen is full*/

      OZ0FM003.OZ0FM-XOMCD[OZ0FW-IXM] = OZ0FW03.OZ0FW-CHG-REASON[OZ0FW-IXM];
      OZ0FM003.OZ0FM-COMMENT[OZ0FW-IXM] = OZ0FW03.OZ0FW-COMMENT[OZ0FW-IXM];

      OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
                                   /* Increment map index*/

    end

  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/

  else
    if (OZ0FW00.TA5TSQIX > 0) /* Pages were formatted*/

      if (OZ0FW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/

        if (OZ0FW00.OZ0FW-SWU == "Y") /* Current page was changed*/

          OZ0F-32120(); /* Update temporary storage page*/

          OZ0FW00.OZ0FW-SWU = "N"; /* Storage update switch*/

        end

        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/

        if (OZ0FW00.XXXTSPAG > OZ0FW00.TA5TSQIX) /* Desired greater highest*/
          OZ0FW00.XXXTSPAG = OZ0FW00.TA5TSQIX; /* Default to highest*/
        end

        OZ0F-32110(); /* Obtain temporary storage page*/

      end

      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/

      set OZ0FM003.XXXLITPG skip; /* "PAGE" literal*/
      OZ0FM003.XXXTSPAG = OZ0FW00.XXXTSPAG; /* Current page*/
      set OZ0FM003.XXXLITOF skip; /* "OF" literal*/
      OZ0FM003.TA5TSQIX = OZ0FW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
      OZ0FW00.OZ0FW-IXM = 1; /* Initialize map index*/
      while (OZ0FW00.OZ0FW-IXM < 9) /* Until screen is full*/

        OZ0FM003.OZ0FM-XOMCD[OZ0FW-IXM] = OZ0FW03.OZ0FW-CHG-REASON[OZ0FW-IXM];
        OZ0FM003.OZ0FM-COMMENT[OZ0FW-IXM] = OZ0FW03.OZ0FW-COMMENT[OZ0FW-IXM];

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
                                   /* Increment map index*/

      end

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/
  OZ0FM003.OZ0FM-CUST-STR-DPT = OZ0FW00.OZ0FW-M2-CUST-STR-DPT;
  OZ0FM003.OZ0FM-CU-CO-NM-HDR = OZ0FW00.OZ0FW-M2-CU-CO-NM-HDR;
  OZ0FM003.OZ0FM-OVERRIDE-DI = OZ0FW00.OZ0FW-M2-OVERRIDE-DI;
  OZ0FM003.OZ0FM-OP-CUST-ORD-ID = OZ0FW00.OZ0FW-M2-OP-CUST-ORD-ID;

  OZ0FM003.OZ0FM-CURR-GPC-CD = OZ0FW00.OZ0FW-M2-CURR-GPC-CD;
  OZ0FM003.OZ0FM-GPC-DESC = OZ0FW00.OZ0FW-M2-GPC-DESC;
  OZ0FM003.OZ0FM-SOCD-CURR-CUST-PO = OZ0FW00.OZ0FW-M2-SOCD-CURR-CUST-PO;
  OZ0FM003.OZ0FM-XSO-SLS-OFC-ID = OZ0FW00.OZ0FW-M2-XSO-SLS-OFC-ID;

  OZ0FM003.OZ0FM-XSO-SLS-OFC-ID-DESC = OZ0FW00.OZ0FW-M2-XSO-SLS-OFC-ID-DESC;
  OZ0FM003.OZ0FM-SM-SAGCY-ID = OZ0FW00.OZ0FW-M2-SM-SAGCY-ID;
  OZ0FM003.OZ0FM-SM-SAGCY-ID-DESC = OZ0FW00.OZ0FW-M2-SM-SAGCY-ID-DESC;
  OZ0FM003.OZ0FM-SM-SREP-ID = OZ0FW00.OZ0FW-M2-SM-SREP-ID;
  OZ0FM003.OZ0FM-SM-SREP-FIRST-NM = OZ0FW00.OZ0FW-M2-SM-SREP-FIRST-NM;
  OZ0FM003.OZ0FM-SM-SREP-LAST-NM = OZ0FW00.OZ0FW-M2-SM-SREP-LAST-NM;
  OZ0FM003.OZ0FM-TOT-ORD-QTY = OZ0FW00.OZ0FW-M2-TOT-ORD-QTY;
  OZ0FM003.OZ0FM-TOT-ORD-VALUE = OZ0FW00.OZ0FW-M2-TOT-ORD-VALUE;

  /* MOVE OZ0FW00.OZ0FW-M3-PYMNT-TERMS*/
  /* TO OZ0FM003.OZ0FM-PYMNT-TERMS;*/
  OZ0FM003.OZ0FM-PO-MONEY-MTH = OZ0FW00.OZ0FW-M3-PO-MONEY-MTH;
  OZ0FM003.OZ0FM-CURR-DNSB = OZ0FW00.OZ0FW-M3-CURR-DNSB;
  OZ0FM003.OZ0FM-CURR-DNSA = OZ0FW00.OZ0FW-M3-CURR-DNSA;

  /* ---Last report date and time --------------------------*/
  if (OZ0FW00.OZ0FW-LAST-RPT-DT1 == 0)
    OZ0FM003.OZ0FM-LAST-RPT-DATE = " ";
    OZ0FM003.OZ0FM-LAST-RPT-TIME = " ";
  else
    OZ0FW00.OZ0FW-LAST-RPT-MO = OZ0FW00.OZ0FW-LAST-RPT-MM1;
    OZ0FW00.OZ0FW-LAST-RPT-SL1 = "/";
    OZ0FW00.OZ0FW-LAST-RPT-DAY = OZ0FW00.OZ0FW-LAST-RPT-DD1;
    OZ0FW00.OZ0FW-LAST-RPT-SL2 = "/";
    OZ0FW00.OZ0FW-LAST-RPT-YE = OZ0FW00.OZ0FW-LAST-RPT-YY;
    OZ0FM003.OZ0FM-LAST-RPT-DATE = OZ0FW00.OZ0FW-LAST-RPT-DATE;
    OZ0FW00.OZ0FW-LAST-RPT-HH = OZ0FW00.OZ0FW-RPT-HH;
    OZ0FW00.OZ0FW-LAST-RPT-SL3 = ":";
    OZ0FW00.OZ0FW-LAST-RPT-MI = OZ0FW00.OZ0FW-RPT-MM;
    OZ0FM003.OZ0FM-LAST-RPT-TIME = OZ0FW00.OZ0FW-LAST-RPT-TIME;
  end
  /* -------------------------------------------------------*/
  if (OZ0FW00.OZ0FW-M3-CURR-DNSB == OZ0FW00.OZ0FW-M3-ORIG-DNSB)
    OZ0FM003.OZ0FM-ORIG-DNSB = " ";
  else
    OZ0FM003.OZ0FM-ORIG-DNSB = OZ0FW00.OZ0FW-M3-ORIG-DNSB;
  end

  if (OZ0FW00.OZ0FW-M3-CURR-DNSA == OZ0FW00.OZ0FW-M3-ORIG-DNSA)
    OZ0FM003.OZ0FM-ORIG-DNSA = " ";
  else
    OZ0FM003.OZ0FM-ORIG-DNSA = OZ0FW00.OZ0FW-M3-ORIG-DNSA;
  end

  OZ0FM003.OZ0FM-OP-CUST-PO = OZ0FW00.OZ0FW-M3-OP-CUST-PO;

  OZ0FM003.OZ0FM-SP1ID = OZ0FW00.OZ0FW-M3-SP1ID;
  OZ0FM003.OZ0FM-SP1NM = OZ0FW00.OZ0FW-M3-SP1NM;
  /*  */
end // end OZ0F-32100


// Read temporary storage page
Function OZ0F-32110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OZ0FW03.XXXTSLEN = OZ0FW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ3F"; /* Application identification*/
  TA5REC.TA5TSQIX = OZ0FW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OZ0FW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "32110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M003"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-32110


// Update temporary storage page
Function OZ0F-32120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (OZ0FW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "32120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M003"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-32120


// Check attention identifier
Function OZ0F-33000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0FW00.OZ0FW-SWR == "Y") /* Request for data*/
      set OZ0FW03 empty; /* m003 display storage*/
    end

    OZ0FW00.OZ0FW-SWF = "Y"; /* Format the map switch*/
    OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/

  if (OZ0FM003.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      OZ0F-31100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0FM003.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "33000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    OZ0F-30000(); /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      OZ0FW00.OZ0FW-SWR = "Y";
      OZ0FW00.OZ0FW-SWF = "Y";
      OZ0FW00.XXXTSPAG = 1; /* reset ts page counter*/
      OZ0F-20000();
    end

    if (converseVar.eventKey is pf4) /* PF3 was pressed*/
      COMMAREA.CATOAP = "OZ0A"; /* TO application*/
    end

    OZ0F-31100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    OZ0F-30000(); /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   /* and PF1 was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf15  /* and PF15 was not pressed*/
  )                                 
    OZWREC.XXXPRCNM = "33000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    OZ0F-30000(); /* Exit to display map*/

  end
   /* ------------------------------------------------------------*/
   /* Flag edit if pf13 or pf14 pressed without add/change authority*/
   /* ------------------------------------------------------------*/


  if (converseVar.eventKey is pf15) /* pf15 pressed*/

    OZ0FW-M4-WS-XOMCD = " ";
    OZ0FW-M4-WS-COMMENT = " ";
    OZ0FW-M4-WS-CHG-FLD = " ";
    OZ0FW00.OZ0FW-SV-CHG-FLD = " ";
    OZ0FW00.OZ0FW-SWR = "Y"; /* to pull up data on m003*/
    OZ0FW00.OZ0FW-SWF = "Y"; /* to pull up data on m003*/
    OZ0FW00.XXXTSPAG = 1; /* reset ts page counter*/
    OZ0FW00.OZ0FW-SEL-CUST-STR-DPT = OZ0FM003.OZ0FM-CUST-STR-DPT;
    OZ0F-40000();

  end


  if (converseVar.eventKey is enter)
    OZ0F-30000();

  end
end // end OZ0F-33000


// Reset highlighted fields
Function OZ0F-34000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/


  set OZ0FM003.CATOAP initialAttributes; /* TO application*/
  set OZ0FM003.CAITEM initialAttributes; /* Application data*/


end // end OZ0F-34000


// Verify data that was entered
Function OZ0F-35000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (OZ0FM003.CAITEM > " ") /* Application data was entered*/

    OZWREC.XXXPRCNM = "25000"; /* Module identification*/
    set OZ0FM003.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    OZ0F-35100(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the line.*/
    /* ------------------------------------------------------------*/

    if (converseVar.eventKey is enter) /* Enter was pressed*/
      return;

    end

  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    OZ0F-30000(); /* Exit to display map*/
  end


end // end OZ0F-35000


// Verify scroll request
Function OZ0F-35100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OZ0FW00.XXXTSPAG < 2)       /* and no previous pages*/

    OZWREC.XXXPRCNM = "35100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OZ0FW00.XXXTSPAG >= OZ0FW00.TA5TSQIX) /* and no more pages*/

    OZWREC.XXXPRCNM = "35100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end


end // end OZ0F-35100


// Process valid input request
Function OZ0F-36000()
  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-SWF = "Y"; /* format the map switch*/



  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    OZ0FW00.XXXTSPAG = OZ0FW00.XXXTSPAG - 1; /* Decrement page number*/

    OZ0F-30000(); /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    OZ0FW00.XXXTSPAG = OZ0FW00.XXXTSPAG + 1; /* Increment page number*/

    OZ0F-30000(); /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter) /* enter pressed*/

    OZ0FW00.OZ0FW-SWF = "Y"; /* Format the map switch*/
    OZ0F-30000(); /* Return to previous process*/
  end

  /* ------------------------------------------------------------*/
  /* Save the select fields and clear the map input/output area.*/
  /* ------------------------------------------------------------*/


  if (converseVar.eventKey is pf15) /* pf14*/

    OZ0FW00.OZ0FW-IXM = 1; /* Initialize line index*/
    OZ0FW00.OZ0FW-SWU = "N"; /* reset switch*/

  end


end // end OZ0F-36000


// screen 4 main process
Function OZ0F-40000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Format the map output area and display the map.*/
  /* 2) Check the attention identifier used to respond.*/
  /* 3) Reset highlighted fields to normal intensity.*/
  /* 4) Verify the data that was entered.*/
  /* 5) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0F-41000(); /* Obtain data to display*/

  OZ0F-42000(); /* Format and display the map*/

  OZ0F-43000(); /* Check attention identifier*/

  OZ0F-44000(); /* Reset fields to normal intensity*/

  OZ0F-45000(); /* Verify the entered data*/

  OZ0F-46000(); /* Process valid input request*/


end // end OZ0F-40000


// Obtain the data to display
Function OZ0F-41000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.OZ0FW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/
  OZ0FW00.XXXTSLEN = 0938; /* temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.XXXTSPAG == 0) /* no pages established*/
    OZ0FW00.XXXTSPAG = 1; /* Page number to display*/
  end

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/
  OZ0F-41100(); /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Perform screen header edits*/
  /* ------------------------------------------------------------*/
  OZ0F-41200(); /* build screen header*/

  /* ------------------------------------------------------------*/
  /* get the data*/
  /* ------------------------------------------------------------*/
  OZ0F-41300();
end // end OZ0F-41000


// Purge any temporary storage
Function OZ0F-41100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/

  set OZ0FW04 empty; /* M001 display storage*/

  OZ0FW00.OZ0FW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0FW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "OZ4F"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0FW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "41100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M004"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-41100


// screen header edits
Function OZ0F-41200()
  OZ0FM004.OZ0FM-CUST-STR-DPT = OZ0FW00.OZ0FW-SEL-CUST-STR-DPT;
  OZ0FM004.OZ0FM-CU-CO-NM-HDR = OZ0FW00.OZ0FW-SEL-CUST-NM-HDR;
  OZ0FM004.OZ0FM-OVERRIDE-DI = OZ0FW00.OZ0FW-SEL-OVERRIDE-DI;
  OZ0FM004.OZ0FM-OP-CUST-ORD-ID = OZ0FW00.OZ0FW-SEL-ORD-NBR;
  OZ0FM004.OZ0FM-SOCD-CURR-CUST-PO = OZ0FW00.OZ0FW-SEL-CUST-PO;

  /* -------------------------------------------------------------*/
end // end OZ0F-41200


// Obtain the data to display
Function OZ0F-41300()
  OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-SV-CNT;
  OZ0FW00.OZ0FW-SV-CNT = 1;
  OZ0FW00.OZ0FW-IX1 = 1;
  OZ0FW00.OZ0FW-SV-XOMCD = " ";

  while (OZ0FW00.OZ0FW-SV-CNT <= OZ0FW00.OZ0FW-IDX
   && OZ0FW99.OZ0FW-SV-ORD-ID[OZ0FW-SV-CNT] > 0)

    OZ0F-41310(); /* open vsohcr01 cursor*/

    OZ0FW00.OZ0FW-IXM = 0; /* Display line index*/
    OZ0FW00.OZ0FW-SWC = "N"; /* End of cursor switch*/

    while (OZ0FW00.OZ0FW-SWC == "N") /* Until end of cursor*/

      OZ0F-41320(); /* Fetch next row in the cursor*/

      if (OZ0FW00.OZ0FW-SWC == "N") /* Not end of cursor*/
        OZ0F-41330(); /* Save data in display storage*/
      end

      if (OZ0FW00.OZ0FW-IXM >= 14) /* Page is full*/

        OZ0F-41340(); /* Add page to temporary storage*/

        OZ0FW00.OZ0FW-IXM = 0; /* Display line index*/

      end

    end

  /* IF OZ0FW00.OZ0FW-IXM GE 1;     /* Page was formatted*/
  /* PERFORM OZ0F-41340;          /* Add page to temporary storage*/
  /* END;*/

  /* ------------------------------------------------------------*/
  /* close the cursor*/
  /* ------------------------------------------------------------*/
    OZ0F-41350(); /* Close the selected set cursor*/

    OZ0FW00.OZ0FW-SV-CNT = OZ0FW00.OZ0FW-SV-CNT + 1;
  end

  /* ------------------------------------------------------------*/
  /* Add any partially formatted last page to the queue.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.OZ0FW-IXM > 1) /* Page was formatted*/
    OZ0F-41340(); /* Add page to temporary storage*/
  end

  if (OZ0FW00.TA5TSQIX == 0) /* No pages formatted*/

    OZWREC.XXXPRCNM = "41300"; /* Module identification*/
    OZWREC.XXXMSGNO = 16; /* No data was found to display*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/
end // end OZ0F-41300


// Select set and open cursor
Function OZ0F-41310()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  set VSOHCR01 empty;

  VSOHCR01.OP1CUOID = OZ0FW99.OZ0FW-SV-ORD-ID[OZ0FW-SV-CNT];
  VSOHCR01.OP1NORID = -1;
  VSOHCR01.SOCD-APPL-SRC-CD = "OP";

  try
    call "VSOHCR01" ("S3", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31310"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF VSOHCR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOHCR01.VSOHCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-41310


// Select set and open cursor
Function OZ0F-41320()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VSOHCR01" ("N3", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
        OZ0FW00.OZ0FW-SWC = "Y";
        return; /* Return to previous process*/
      end
    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "41320"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH VSOHCR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOHCR01.VSOHCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-41320


// Save data in display storage
Function OZ0F-41330()
  /* --------------------------------------------------------------*/
  /* call vsocrc01 for the change description*/
  /* --------------------------------------------------------------*/
  OZ0F-31335();

  if (VSOHCR01.OP1CUPO > " ")
    OZ0FW00.OZ0FW-SV-CHG-FLD = "CUST P.O.";
  else
    if (VSOHCR01.OP1CUNDT > 0)
      OZ0FW00.OZ0FW-SV-CHG-FLD = "NEED DATE";
    else
      if (VSOHCR01.OP1DSBDT > 0)
        OZ0FW00.OZ0FW-SV-CHG-FLD = "DNSB DATE";
      else
        if (VSOHCR01.OP1DSADT > 0)
          OZ0FW00.OZ0FW-SV-CHG-FLD = "DNSA DATE";
        end
      end
    end
  end

  if (VSOHCR01.XOMCD == OZ0FW00.OZ0FW-SV-XOMCD
   && OZ0FW00.OZ0FW-SV-CHG-FLD == OZ0FW00.OZ0FW-M4-WS-CHG-FLD
   && VSOHCR01.ZZZCHGDT == OZ0FW00.OZ0FW-SV-DATE)

    if (VSOHCR01.SOCD-HDR-RSN-TXT != OZ0FW00.OZ0FW-M4-WS-COMMENT)
      OZ0FW-IXM = OZ0FW-IXM + 1;
      OZ0FW04.OZ0FW-COMMENT-SP[OZ0FW-IXM] = "   ";
      OZ0FW04.OZ0FW-COMMENT-DTL[OZ0FW-IXM] = VSOHCR01.SOCD-HDR-RSN-TXT;
    end

  else
    OZ0FW-IXM = OZ0FW-IXM + 1;
    OZ0FW00.OZ0FW-SV-XOMCD = VSOHCR01.XOMCD;
    OZ0FW00.OZ0FW-M4-WS-COMMENT = VSOHCR01.SOCD-HDR-RSN-TXT;
    OZ0FW00.OZ0FW-M4-WS-CHG-FLD = OZ0FW00.OZ0FW-SV-CHG-FLD;

    OZ0FW04.OZ0FW-CUST-RPT[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
    OZ0FW04.OZ0FW-XOM-DTL[OZ0FW-IXM] = VSOHCR01.XOMCD;
    OZ0FW04.OZ0FW-CHG-USERID[OZ0FW-IXM] = VSOHCR01.XXX-USER-ID;

    OZ0FW00.OZ0FW-SV-DATE = VSOHCR01.ZZZCHGDT;
    OZ0FW00.OZ0FW-DATE-BRK = VSOHCR01.ZZZSDT;
    OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
    OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
    OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
    OZ0FW00.OZ0FW-DM-DASH1 = "-";
    OZ0FW00.OZ0FW-DM-DASH2 = "-";
    OZ0FW04.OZ0FW-CHG-DATE[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

    OZ0FW00.OZ0FW-TIME-BRK = VSOHCR01.ZZZSTM;
    OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
    OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
    OZ0FW00.OZ0FW-TM-CL = ":";
    OZ0FW04.OZ0FW-CHG-TIME[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;

    if (VSOHCR01.OP1CUPO > " ")
      OZ0FW04.OZ0FW-CHG-FLD[OZ0FW-IXM] = "CUST P.O.";
      OZ0FW04.OZ0FW-VAL-FLD[OZ0FW-IXM] = VSOHCR01.OP1CUPO;
    else
      if (VSOHCR01.OP1CUNDT > 0)
        OZ0FW04.OZ0FW-CHG-FLD[OZ0FW-IXM] = "NEED DATE";
        OZ0FW00.OZ0FW-DATE-BRK = VSOHCR01.OP1CUNDT;
        OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
        OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
        OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
        OZ0FW00.OZ0FW-DM-DASH1 = "-";
        OZ0FW00.OZ0FW-DM-DASH2 = "-";
        OZ0FW04.OZ0FW-VAL-FLD[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;
      else
        if (VSOHCR01.OP1DSBDT > 0)
          OZ0FW04.OZ0FW-CHG-FLD[OZ0FW-IXM] = "DNSB DATE";
          OZ0FW00.OZ0FW-DATE-BRK = VSOHCR01.OP1DSBDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW04.OZ0FW-VAL-FLD[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;
        else
          if (VSOHCR01.OP1DSADT > 0)
            OZ0FW04.OZ0FW-CHG-FLD[OZ0FW-IXM] = "DNSA DATE";
            OZ0FW00.OZ0FW-DATE-BRK = VSOHCR01.OP1DSADT;
            OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
            OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
            OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
            OZ0FW00.OZ0FW-DM-DASH1 = "-";
            OZ0FW00.OZ0FW-DM-DASH2 = "-";
            OZ0FW04.OZ0FW-VAL-FLD[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;
          end
        end
      end
    end

    if (OZ0FW00.OZ0FW-IXM >= 14) /* Page is full*/
      OZ0F-41340(); /* Add page to temporary storage*/
      OZ0FW00.OZ0FW-IXM = 0; /* Display line index*/
    end

    if (VSOHCR01.SOCD-HDR-RSN-TXT > " ")
      OZ0FW-IXM = OZ0FW-IXM + 1;
      OZ0FW04.OZ0FW-COMMENT-SP[OZ0FW-IXM] = "   ";
      OZ0FW04.OZ0FW-COMMENT-DTL[OZ0FW-IXM] = VSOHCR01.SOCD-HDR-RSN-TXT;
    end

    OZ0FW-IXM = OZ0FW-IXM + 1;

  end
end // end OZ0F-41330


// Add page to temporary storage
Function OZ0F-41340()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OZ0FW04.XXXTSLEN = OZ0FW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ4F"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OZ0FW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OZ0FW04 empty; /* M001 display storage*/

    OZ0FW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "41340"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M004"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-41340


// Close selected set cursor
Function OZ0F-41350()
  /* ------------------------------------------------------------*/
  /* Close the selected set of table rows.*/
  /* ------------------------------------------------------------*/

  try
    call "VSOHCR01" ("C3", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "41350"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/

  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-41350


// Format and converse the map
Function OZ0F-42000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0FW00.OZ0FW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OZ0FW00.OZ0FW-SWF == "Y") /* Map must be formatted*/
                                   /* save header info*/
      OZ0FW00.OZ0FW-M2-CUST-STR-DPT = OZ0FM004.OZ0FM-CUST-STR-DPT;
      OZ0FW00.OZ0FW-M2-CU-CO-NM-HDR = OZ0FM004.OZ0FM-CU-CO-NM-HDR;
      OZ0FW00.OZ0FW-M2-OVERRIDE-DI = OZ0FM004.OZ0FM-OVERRIDE-DI;
      OZ0FW00.OZ0FW-M2-OP-CUST-ORD-ID = OZ0FM004.OZ0FM-OP-CUST-ORD-ID;
      OZ0FW00.OZ0FW-M2-SOCD-CURR-CUST-PO = OZ0FM004.OZ0FM-SOCD-CURR-CUST-PO;
      OZ0F-42100(); /* Format the data on the map*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZ0FM004.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OZ0FM004.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0FM004.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OZWREC.XXXMSGNO != 0) /* Message to display*/

      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0FM004.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OZ0FM004.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/

    set OZ0FM004 alarm; /* Indicate sound alarm*/

  end

  converse OZ0FM004 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = OZ0FM004.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0FM004.CAITEM; /* Application data*/

end // end OZ0F-42000


// Format the display data
Function OZ0F-42100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set OZ0FM004 initial; /* m004 input/output area*/

  OZ0FW00.OZ0FW-SWF = "N"; /* Format the map switch*/

  /* ------------------------------------------------------------*/
  /* If a ruling was added, get the page from temp storage that the*/
  /* ruling's on and display it.*/
  /* ------------------------------------------------------------*/

  if (OZ0FW00.OZ0FW-SAVE-PAGE != 0) /* if page saved off*/

    OZ0FW00.XXXTSPAG = OZ0FW00.OZ0FW-SAVE-PAGE; /* use saved page*/

    OZ0F-42110(); /* Obtain temporary storage page*/

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set OZ0FM004.XXXLITPG skip; /* "PAGE" literal*/
    OZ0FM004.XXXTSPAG = OZ0FW00.XXXTSPAG; /* Current page*/
    set OZ0FM004.XXXLITOF skip; /* "OF" literal*/
    OZ0FM004.TA5TSQIX = OZ0FW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
    OZ0FW00.OZ0FW-IXM = 1; /* Initialize map index*/
    while (OZ0FW00.OZ0FW-IXM < 15) /* Until screen is full*/

      OZ0FM004.OZ0FM-CUST-RPT[OZ0FW-IXM] = OZ0FW04.OZ0FW-CUST-RPT[OZ0FW-IXM];
      OZ0FM004.OZ0FM-XOMCD[OZ0FW-IXM] = OZ0FW04.OZ0FW-COMMENT-SP[OZ0FW-IXM];
      OZ0FM004.OZ0FM-COMMENT[OZ0FW-IXM] = OZ0FW04.OZ0FW-COMMENT-DTL[OZ0FW-IXM];
      OZ0FM004.OZ0FM-USERID[OZ0FW-IXM] = OZ0FW04.OZ0FW-CHG-USERID[OZ0FW-IXM];
      OZ0FM004.OZ0FM-CHGDT[OZ0FW-IXM] = OZ0FW04.OZ0FW-CHG-DATE[OZ0FW-IXM];
      OZ0FM004.OZ0FM-CHGTM[OZ0FW-IXM] = OZ0FW04.OZ0FW-CHG-TIME[OZ0FW-IXM];

      OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
                                   /* Increment map index*/

    end

  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/

  else
    if (OZ0FW00.TA5TSQIX > 0) /* Pages were formatted*/

      if (OZ0FW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/

        if (OZ0FW00.OZ0FW-SWU == "Y") /* Current page was changed*/

          OZ0F-42120(); /* Update temporary storage page*/

          OZ0FW00.OZ0FW-SWU = "N"; /* Storage update switch*/

        end

        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/

        if (OZ0FW00.XXXTSPAG > OZ0FW00.TA5TSQIX) /* Desired greater highest*/
          OZ0FW00.XXXTSPAG = OZ0FW00.TA5TSQIX; /* Default to highest*/
        end

        OZ0F-42110(); /* Obtain temporary storage page*/

      end

      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/

      set OZ0FM004.XXXLITPG skip; /* "PAGE" literal*/
      OZ0FM004.XXXTSPAG = OZ0FW00.XXXTSPAG; /* Current page*/
      set OZ0FM004.XXXLITOF skip; /* "OF" literal*/
      OZ0FM004.TA5TSQIX = OZ0FW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
      OZ0FW00.OZ0FW-IXM = 1; /* Initialize map index*/
      while (OZ0FW00.OZ0FW-IXM < 15) /* Until screen is full*/

        OZ0FM004.OZ0FM-CUST-RPT[OZ0FW-IXM] = OZ0FW04.OZ0FW-CUST-RPT[OZ0FW-IXM];
        OZ0FM004.OZ0FM-XOMCD[OZ0FW-IXM] = OZ0FW04.OZ0FW-COMMENT-SP[OZ0FW-IXM];
        OZ0FM004.OZ0FM-COMMENT[OZ0FW-IXM] = OZ0FW04.OZ0FW-COMMENT-DTL[OZ0FW-IXM];
        OZ0FM004.OZ0FM-USERID[OZ0FW-IXM] = OZ0FW04.OZ0FW-CHG-USERID[OZ0FW-IXM];
        OZ0FM004.OZ0FM-CHGDT[OZ0FW-IXM] = OZ0FW04.OZ0FW-CHG-DATE[OZ0FW-IXM];
        OZ0FM004.OZ0FM-CHGTM[OZ0FW-IXM] = OZ0FW04.OZ0FW-CHG-TIME[OZ0FW-IXM];

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
                                   /* Increment map index*/

      end

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/
  OZ0FM004.OZ0FM-CUST-STR-DPT = OZ0FW00.OZ0FW-M2-CUST-STR-DPT;
  OZ0FM004.OZ0FM-CU-CO-NM-HDR = OZ0FW00.OZ0FW-M2-CU-CO-NM-HDR;
  OZ0FM004.OZ0FM-OVERRIDE-DI = OZ0FW00.OZ0FW-M2-OVERRIDE-DI;
  OZ0FM004.OZ0FM-OP-CUST-ORD-ID = OZ0FW00.OZ0FW-M2-OP-CUST-ORD-ID;
  OZ0FM004.OZ0FM-SOCD-CURR-CUST-PO = OZ0FW00.OZ0FW-M2-SOCD-CURR-CUST-PO;
  /*  */
end // end OZ0F-42100


// Read temporary storage page
Function OZ0F-42110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OZ0FW04.XXXTSLEN = OZ0FW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ4F"; /* Application identification*/
  TA5REC.TA5TSQIX = OZ0FW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OZ0FW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "42110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M004"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-42110


// Update temporary storage page
Function OZ0F-42120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (OZ0FW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "42120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M004"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-42120


// Check attention identifier
Function OZ0F-43000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0FW00.OZ0FW-SWR == "Y") /* Request for data*/
      set OZ0FW04 empty; /* m003 display storage*/
    end

    OZ0FW00.OZ0FW-SWF = "Y"; /* Format the map switch*/
    OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/

  if (OZ0FM004.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      OZ0F-41100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0FM004.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "43000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    OZ0F-40000(); /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      OZ0FW00.OZ0FW-SWR = "Y";
      OZ0FW00.OZ0FW-SWF = "Y";
      OZ0FW00.XXXTSPAG = 1; /* reset ts page counter*/
      OZ0F-20000();
    end

    if (converseVar.eventKey is pf4) /* PF3 was pressed*/
      COMMAREA.CATOAP = "OZ0A"; /* TO application*/
    end

    OZ0F-41100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    OZ0F-40000(); /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf15  /* and PF15 was not pressed*/
  )                                 
    OZWREC.XXXPRCNM = "43000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    OZ0F-40000(); /* Exit to display map*/

  end


  if (converseVar.eventKey is pf15) /* pf15 pressed*/

    OZ0FW00.OZ0FW-SWR = "Y"; /* to pull up data on m003*/
    OZ0FW00.OZ0FW-SWF = "Y"; /* to pull up data on m003*/
    OZ0FW00.XXXTSPAG = 1; /* reset ts page counter*/
    OZ0F-30000();

  end


  if (converseVar.eventKey is enter)
    OZ0F-40000();

  end
end // end OZ0F-43000


// Reset highlighted fields
Function OZ0F-44000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/


  set OZ0FM004.CATOAP initialAttributes; /* TO application*/
  set OZ0FM004.CAITEM initialAttributes; /* Application data*/


end // end OZ0F-44000


// Verify data that was entered
Function OZ0F-45000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (OZ0FM004.CAITEM > " ") /* Application data was entered*/

    OZWREC.XXXPRCNM = "45000"; /* Module identification*/
    set OZ0FM004.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    OZ0F-45100(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the line.*/
    /* ------------------------------------------------------------*/

    if (converseVar.eventKey is enter) /* Enter was pressed*/
      return;

    end

  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    OZ0F-40000(); /* Exit to display map*/
  end


end // end OZ0F-45000


// Verify scroll request
Function OZ0F-45100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OZ0FW00.XXXTSPAG < 2)       /* and no previous pages*/

    OZWREC.XXXPRCNM = "45100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OZ0FW00.XXXTSPAG >= OZ0FW00.TA5TSQIX) /* and no more pages*/

    OZWREC.XXXPRCNM = "45100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end


end // end OZ0F-45100


// Process valid input request
Function OZ0F-46000()
  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-SWF = "Y"; /* format the map switch*/



  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    OZ0FW00.XXXTSPAG = OZ0FW00.XXXTSPAG - 1; /* Decrement page number*/

    OZ0F-40000(); /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    OZ0FW00.XXXTSPAG = OZ0FW00.XXXTSPAG + 1; /* Increment page number*/

    OZ0F-40000(); /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter) /* enter pressed*/

    OZ0FW00.OZ0FW-SWF = "Y"; /* Format the map switch*/
    OZ0F-40000(); /* Return to previous process*/
  end

  /* ------------------------------------------------------------*/
  /* Save the select fields and clear the map input/output area.*/
  /* ------------------------------------------------------------*/


  if (converseVar.eventKey is pf15) /* pf14*/

    OZ0FW00.OZ0FW-IXM = 1; /* Initialize line index*/
    OZ0FW00.OZ0FW-SWU = "N"; /* reset switch*/
    OZ0F-30000(); /* Return to previous process*/

  end


end // end OZ0F-46000


// Process to add a new row
Function OZ0F-50000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Format the map output area and display the map.*/
  /* 2) Check the attention identifier used to respond.*/
  /* 3) Reset highlighted fields to normal intensity.*/
  /* 4) Verify the data that was entered.*/
  /* 5) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0F-51000(); /* Obtain data to display*/

  OZ0F-52000(); /* Format and display the map*/

  OZ0F-53000(); /* Check attention identifier*/

  OZ0F-54000(); /* Reset fields to normal intensity*/

  OZ0F-55000(); /* Verify the entered data*/

  OZ0F-56000(); /* Process valid input request*/


end // end OZ0F-50000


// Obtain the data to display
Function OZ0F-51000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.OZ0FW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/
  /* VE 0708 TO OZ0FW00.XXXTSLEN;   /*temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.XXXTSPAG == 0) /* no pages established*/
    OZ0FW00.XXXTSPAG = 1; /* Page number to display*/
  end

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/
  OZ0F-51100(); /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Perform screen header edits*/
  /* ------------------------------------------------------------*/
  OZ0F-51200(); /* build screen header*/

  /* ------------------------------------------------------------*/
  /* get the data*/
  /* ------------------------------------------------------------*/
  OZ0F-51300();
end // end OZ0F-51000


// Purge any temporary storage
Function OZ0F-51100()
  OZ0F-51105(); /* purge w05a record*/

  OZ0F-51110(); /* purge w05 record*/

end // end OZ0F-51100


// Purge any temporary storage
Function OZ0F-51105()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/
  OZ0FW00.XXXTSLEN = 2560;

  set OZ0FW05A empty; /* M005 size display*/

  OZ0FW00.OZ0FW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0FW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "OZ5F"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0FW05A, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "51105"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M005"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-51105


// Purge any temporary storage
Function OZ0F-51110()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/
  OZ0FW00.XXXTSLEN = 0768;

  set OZ0FW05 empty; /* M005 size display*/

  OZ0FW00.OZ0FW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0FW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "OZ6F"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0FW05, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "51110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M005"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-51110


// screen header edits
Function OZ0F-51200()

  if (OZ0FW00.OZ0FW-M5IDX > 11 || 
  OZ0FW00.OZ0FW-M5IDX-STYLE-CLR-DIM[OZ0FW-M5IDX] == " ")
    OZ0FW00.OZ0FW-SWR = "Y";
    OZ0FW00.OZ0FW-SWF = "Y";
    OZ0F-20000();
  end

  OZ0FM005.OZ0FM-CUST-STR-DPT = OZ0FW00.OZ0FW-M5IDX-CUST-STR-DPT[OZ0FW-M5IDX];

  OZ0FW00.OZ0FW-M5-STYLE-CLR-DIM = OZ0FW00.OZ0FW-M5IDX-STYLE-CLR-DIM[OZ0FW-M5IDX];

  OZ0FW00.OZ0FW-M5-SY-STY-COLOR-ABRV = OZ0FW00.OZ0FW-M5IDX-SY-STY-COLOR-ABRV[OZ0FW-M5IDX];

  OZ0FW00.OZ0FW-M5-COLOR-NAME = OZ0FW00.OZ0FW-M5IDX-COLOR-NAME[OZ0FW-M5IDX];

  OZ0FW00.OZ0FW-M5-OP-ORD-PART-CHAR = OZ0FW00.OZ0FW-M5IDX-OP-ORD-PART-CHAR[OZ0FW-M5IDX];

  OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID = OZ0FW00.OZ0FW-M5IDX-OP-CUST-ORD-ID[OZ0FW-M5IDX];

  OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR = OZ0FW00.OZ0FW-M5IDX-LINE-ITEM-NBR[OZ0FW-M5IDX];

  OZ0FM005.OZ0FM-ITM-CHG = OZ0FW00.OZ0FW-M5IDX-ITM-CHG[OZ0FW-M5IDX];

  OZ0FM005.OZ0FM-STYLE-CLR-DIM = OZ0FW00.OZ0FW-M5-STYLE-CLR-DIM;
  OZ0FM005.OZ0FM-SY-STY-COLOR-ABRV = OZ0FW00.OZ0FW-M5-SY-STY-COLOR-ABRV;
  OZ0FM005.OZ0FM-COLOR-NAME = OZ0FW00.OZ0FW-M5-COLOR-NAME;
  OZ0FM005.OZ0FM-CU-CO-NM-HDR = OZ0FW00.OZ0FW-SEL-CUST-NM-HDR;
  /* VE OZ0FW00.OZ0FW-M5-ITM-CHG TO OZ0FM005.OZ0FM-ITM-CHG;*/
  /* -------------------------------------------------------------*/
end // end OZ0F-51200


// Obtain the data to display
Function OZ0F-51300()
  OZ0F-51302(); /* empty total fields*/

  OZ0F-51305(); /* build ord id work table*/

  OZ0FW-CNT = 1; /* line item index*/

  while (OZ0FW00.OZ0FW-CNT < 5
   && OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT[OZ0FW-CNT] > 0)

    OZ0F-51310(); /* get sycrec*/
    OZ0F-51315(); /* get size description w/ sycrec*/
    OZ0F-51320(); /* get size array info from dorder*/
    OZ0F-51325(); /* get size array info from dordcd*/

    OZ0FW00.OZ0FW-IXM = 1; /* Display line index*/
    OZ0FW00.OZ0FW-SV-CNT = 1; /* size array index*/

    while (OZ0FW00.OZ0FW-SV-CNT < 41) /* Until end of array*/

      OZ0F-51330(); /* spin thru sz array*/

      OZ0FW00.OZ0FW-SV-CNT = OZ0FW00.OZ0FW-SV-CNT + 1;

    end

    OZ0FW00.OZ0FW-CNT = OZ0FW00.OZ0FW-CNT + 1;

  end


  if (OZ0FW00.OZ0FW-IXM > 1) /* Page was formatted*/
    OZ0F-51340(); /* Add page to temporary storage*/
    OZ0F-51350(); /* build map pages*/
    OZ0FW00.OZ0FW-SWF = "Y";
  end


  if (OZ0FW00.TA5TSQIX == 0) /* No pages formatted*/
    OZWREC.XXXPRCNM = "51300"; /* Module identification*/
    OZWREC.XXXMSGNO = 16; /* No data was found to display*/
    return; /* Return to previous process*/
  end

  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/
end // end OZ0F-51300


// build m5 ord id work table
Function OZ0F-51302()
  OZ0FW00.OZ0FW-SV-TOT-AVAIL-1 = 0;
  OZ0FW00.OZ0FW-SV-TOT-AVAIL-2 = 0;
  OZ0FW00.OZ0FW-SV-TOT-AVAIL-3 = 0;
  OZ0FW00.OZ0FW-SV-TOT-AVAIL-4 = 0;
  OZ0FW00.OZ0FW-SV-TOT-REQ-QTY = 0;
  OZ0FW00.OZ0FW-SV-TOT-ORIG-VAL = 0;
  OZ0FW00.OZ0FW-SV-TOT-CURR-VAL = 0;
end // end OZ0F-51302


// build m5 ord id work table
Function OZ0F-51305()
  set OZAREC empty;
  set OP1REC empty;
  set OP2REC empty;
  set VOCHDR01 empty;

  VOCHDR01.OP1PARTN = OZ0FW00.OZ0FW-M5-OP-ORD-PART-CHAR;
  VOCHDR01.OP1CUOID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  VOCHDR01.SOCD-CURR-GPC-CD = OZ0FW00.OZ0FW-SEL-GPC;

  if (OZ0FW00.OZ0FW-M5-COLOR-NAME == "CANCELLED")
    VOCHDR01.SOCD-APPL-SRC-CD = "OB";
    OZAREC.IO-TASK = "S5";
  else
    VOCHDR01.SOCD-APPL-SRC-CD = "OP";
    OZAREC.IO-TASK = "S3";
  end

  OP2REC.SY1STNBR = OZ0FW00.OZ0FW-M5-STYLE;
  OP2REC.SY2CLRID = OZ0FW00.OZ0FW-M5-COLOR;
  OP2REC.XDMCD = OZ0FW00.OZ0FW-M5-DIM;

  OZ0F-51306();

  OZ0FW00.OZ0FW-CNT = 1;
  OZ0FW00.OZ0FW-SWC = "N";

  while (OZ0FW00.OZ0FW-SWC == "N")

    if (OZ0FW00.OZ0FW-M5-COLOR-NAME == "CANCELLED")
      OZAREC.IO-TASK = "N5";
    else
      OZAREC.IO-TASK = "N3";
    end
    OZ0F-51307();

    if (OZ0FW00.OZ0FW-SWC == "N")
      if (OP2REC.OP2LNINB == OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR)
        OZ0F-51308(); /* roll up need dates*/
      end
    end

  end

  if (OZ0FW00.OZ0FW-M5-COLOR-NAME == "CANCELLED")
    OZAREC.IO-TASK = "C5";
  else
    OZAREC.IO-TASK = "C3";
  end
  OZ0F-51309(); /* close cursor*/
end // end OZ0F-51305


// Select set and open cursor
Function OZ0F-51306()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01, OP2REC) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "51306"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCHDR01.VOCHDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-51306


// Select set and open cursor
Function OZ0F-51307()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01, OP2REC) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
        OZ0FW00.OZ0FW-SWC = "Y";

        return; /* Return to previous process*/

      end
    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "51307"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCHDR01.VOCHDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-51307


// roll up need dates
Function OZ0F-51308()
  if (OZ0FW00.OZ0FW-CNT == 1)
    OZ0FW00.OZ0FW-M5-OP-ORIG-NEED-DT = VOCHDR01.OP-ORIG-NEED-DT;
  end

  if (OP1REC.OP1CUNDT == 0)
    OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT[OZ0FW-CNT] = VOCHDR01.OP-ORIG-NEED-DT;
    OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[OZ0FW-CNT] = VOCHDR01.OP1NORID;
    OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR[OZ0FW-CNT] = OP2REC.OP2LNINB;
    OZ0FW00.OZ0FW-CNT = OZ0FW00.OZ0FW-CNT + 1;
    OZ0FW00.OZ0FW-SV-NEED-DT = VOCHDR01.OP-ORIG-NEED-DT;
    OZ0FW00.OZ0FW-M5-CURR-VALUE = OZ0FW00.OZ0FW-M5-CURR-VALUE +     OP2REC.OP2LNIVL;
  else
    if (OP1REC.OP1CUNDT == OZ0FW00.OZ0FW-SV-NEED-DT)
      /* continue*/
    else
      OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT[OZ0FW-CNT] = OP1REC.OP1CUNDT;
      OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[OZ0FW-CNT] = VOCHDR01.OP1NORID;
      OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR[OZ0FW-CNT] = OP2REC.OP2LNINB;
      OZ0FW00.OZ0FW-CNT = OZ0FW00.OZ0FW-CNT + 1;
      OZ0FW00.OZ0FW-SV-NEED-DT = OP1REC.OP1CUNDT;
      OZ0FW00.OZ0FW-M5-CURR-VALUE = OZ0FW00.OZ0FW-M5-CURR-VALUE +       OP2REC.OP2LNIVL;
    end
  end

  if (OZ0FW00.OZ0FW-CNT > 4)
    OZ0FW00.OZ0FW-SWC = "Y";
  end

end // end OZ0F-51308


// Select set and open cursor
Function OZ0F-51309()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01, OP2REC) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "51309"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCHDR01.VOCHDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-51309


// Obtain the data to display
Function OZ0F-51310()


  set SYCREC empty;

  SYCREC.SY1STNBR = OZ0FW00.OZ0FW-M5-STYLE;
  SYCREC.SY2CLRID = OZ0FW00.OZ0FW-M5-COLOR;
  SYCREC.XDMCD = OZ0FW00.OZ0FW-M5-DIM;
  SYCREC.XGPCD = OZ0FW00.OZ0FW-SEL-GPC;

  call "IO0560" ("S ", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes};

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or no record found*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "51310"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR02"; /* Table view name*/
  TA1REC.TA1TBLKE = SYCREC.SYCKEY;

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/



end // end OZ0F-51310


// Obtain the data to display
Function OZ0F-51315()


  set SY4REC empty;

  SY4REC.SY4SZSCL = SYCREC.SY4SZSCL;

  call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* no record found*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "51315"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSCALE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY4REC.SY4SZSCL;

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/



end // end OZ0F-51315


// Obtain the data to display
Function OZ0F-51320()
  set OPAGREC empty;
  set OP3REC empty;
  set SQLCA empty;

  OP3REC.OP1PARTN = OZ0FW00.OZ0FW-M5-OP-ORD-PART-CHAR;
  OP3REC.OP1CUOID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  OP3REC.OP1NORID = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[OZ0FW-CNT];
  OP3REC.OP2LNINB = OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR[OZ0FW-CNT]; /* line item*/

  if (OZ0FW00.OZ0FW-M5-COLOR-NAME != "CANCELLED")
    OPAGREC.OPAG-TASK = "S ";
    OPAGREC.OPAG-CALLER-LOC-1 = "S       ";
    OPAGREC.OPAG-CALLER-LOC-2 = "DB1050  ";
    OPAGREC.OPAG-CALLER-LOC-3 = "51320   ";
    OPAGREC.OPAG-CALLING-APPL = "OZ0F";
    OPAGREC.OP3GROUP = OP3REC.OP3GROUP;

    call "DB1050" (OPAGREC) {isNoRefresh = yes, isExternal = yes};

    OP3REC.OP3GROUP = OPAGREC.OP3GROUP;

    if (OPAGREC.OPAG-RETURN-CODE == 0) /* if good return*/
      return;
      /* continue*/
    else
      if (OPAGREC.OPAG-RETURN-CODE == 1 /* if not found*/
       || OPAGREC.OPAG-RETURN-CODE == 11) /* or no sizes*/
        return;
        /* ok - continue*/
      else

        TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
        move SQLCA to ERRSQLCA withV60Compat;

        OZWREC.XXXPRCNM = "51320"; /* Module identification*/

        if (sysVar.errorCode == "00000000" /* Call successful*/
         && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

          converseLib.validationFailed(11); /* Data in use by another*/
          TA1REC.TA1FUNC = "POST"; /* Termination function*/

        else

          converseLib.validationFailed(10); /* Unexpected error occurred*/
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/

          converseLib.clearScreen();
           /* Clear screen before display*/

        end

        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
        TA1REC.TA1LOC = "SELECT SET OF TABLE ROW";
        TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
        TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
        TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
        TA1REC.TA1TBLVU = "VITEM001"; /* Table view name*/
        TA1REC.TA1TBLKE = OPAGREC.OPAG-DIAG-KEY; /* table key*/

        call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
                                   /* Error diagnosis routine*/

        OZ0F-50000(); /* Exit to display map*/

      end
    end
  end

end // end OZ0F-51320


// Obtain the data to display
Function OZ0F-51325()
  set WOZ2110 empty;
  set WOZSZRUN empty;
  set WOZSZRNR empty;
  set WOZSZRNP empty;
  set SQLCA empty;

  WOZSZRUN.SZRUN-OP-ORD-PART-CHAR = OP3REC.OP1PARTN;
  WOZSZRUN.SZRUN-OP-CUST-ORD-ID = OP3REC.OP1CUOID;
  WOZSZRUN.SZRUN-OP-NIKE-ORD-ID = OP3REC.OP1NORID;
  WOZSZRUN.SZRUN-OP-LINE-ITEM-NBR = OP3REC.OP2LNINB;
  if (OZ0FW00.OZ0FW-M5-COLOR-NAME == "CANCELLED")
    WOZSZRUN.SZRUN-SOCD-APPL-SRC-CD = "OB";
  else
    WOZSZRUN.SZRUN-SOCD-APPL-SRC-CD = "OP";
  end

  WOZSZRNP.SZRUN-TASK = "S ";

  WOZ2110.SZRUN-RECORD = WOZSZRUN.SZRUN-RECORD;
  WOZ2110.SZRUN-RETURN-INFO = WOZSZRNR.SZRUN-RETURN-INFO;
  WOZ2110.SZRUN-PASS-INFO = WOZSZRNP.SZRUN-PASS-INFO;

  call "OZ2110" (WOZ2110) {isNoRefresh = yes, isExternal = yes};

  WOZSZRUN.SZRUN-RECORD = WOZ2110.SZRUN-RECORD;
  WOZSZRNR.SZRUN-RETURN-INFO = WOZ2110.SZRUN-RETURN-INFO;
  WOZSZRNP.SZRUN-PASS-INFO = WOZ2110.SZRUN-PASS-INFO;
  SQLCA.SQLCAREC = WOZ2110.SZRUN-SQLCA;

  if (WOZSZRNR.SZRUN-RETURN-CODE == 0 /* good return code*/
   || WOZSZRNR.SZRUN-RETURN-CODE == 1) /* no record found*/
    return;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "OZ0F    ";
    TA1REC.TA1LOCAT[1] = "SELECT  ";
    TA1REC.TA1LOCAT[2] = WOZSZRNR.SZRUN-RETURN-CODE;
    TA1REC.TA1LOCAT[3] = "-51325  ";
    TA1REC.TA1LOCAT[4] = "OZ2110  ";
    TA1REC.TA1MAP = "OZ0FM005";
    TA1REC.TA1DBASE = "DORDCD  ";
    TA1REC.TA1TBLVU = "VOCSIZ01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    exit stack;
  end

end // end OZ0F-51325


// Save data in display storage
Function OZ0F-51330()

  /* WOZSZRUN.SZRUN-OP-ORIG-ORD-QTY(OZ0FW-SV-CNT) > 0*/
  if (OP3REC.OP3SZAFL[OZ0FW-SV-CNT] == "Y" || 
  WOZSZRUN.SZRUN-OP-ORIG-ORD-QTY[OZ0FW-SV-CNT] > 0)

    OZ0FW05A.OZ0FW-SIZE[OZ0FW-IXM] = SY4REC.SY4IDDSC[OZ0FW-SV-CNT];

    OZ0FW05A.OZ0FW-REQ-QTY[OZ0FW-IXM] = WOZSZRUN.SZRUN-OP-ORIG-ORD-QTY[OZ0FW-SV-CNT];

  /* IF WOZSZRUN.SZRUN-OP-ORIG-ORD-QTY(OZ0FW-SV-CNT) > 0;*/
    OZ0FW05A.OZ0FW-ORIG-PRICE[OZ0FW-IXM] = WOZSZRUN.SZRUN-SY-PRC-PER-UNIT[OZ0FW-SV-CNT];
  /* END;*/

    OZ0FW05A.OZ0FW-GRP-SEQ[OZ0FW-IXM] = WOZSZRUN.SZRUN-GRP-SEQ[OZ0FW-SV-CNT];

    OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-IXM] = WOZSZRUN.SZRUN-QTY-SEQ[OZ0FW-SV-CNT];

    if (OP3REC.OP3ONOQT[OZ0FW-SV-CNT] > 0)
      OZ0FW05A.OZ0FW-CURR-PRICE[OZ0FW-IXM] = OP3REC.SY5PRCUN[OZ0FW-SV-CNT];
    end

    if (OZ0FW00.OZ0FW-CNT == 1)
      OZ0FW05A.OZ0FW-AVAIL-QTY-1[OZ0FW-IXM] = OP3REC.OP3ONOQT[OZ0FW-SV-CNT];
      OZ0FW00.OZ0FW-SV-TOT-AVAIL-1 = OZ0FW00.OZ0FW-SV-TOT-AVAIL-1 +       OP3REC.OP3ONOQT[OZ0FW-SV-CNT]; /* avail total*/
    end

    if (OZ0FW00.OZ0FW-CNT == 2)
      OZ0FW05A.OZ0FW-AVAIL-QTY-2[OZ0FW-IXM] = OP3REC.OP3ONOQT[OZ0FW-SV-CNT];
      OZ0FW00.OZ0FW-SV-TOT-AVAIL-2 = OZ0FW00.OZ0FW-SV-TOT-AVAIL-2 +       OP3REC.OP3ONOQT[OZ0FW-SV-CNT]; /* avail total*/
    end

    if (OZ0FW00.OZ0FW-CNT == 3)
      OZ0FW05A.OZ0FW-AVAIL-QTY-3[OZ0FW-IXM] = OP3REC.OP3ONOQT[OZ0FW-SV-CNT];
      OZ0FW00.OZ0FW-SV-TOT-AVAIL-3 = OZ0FW00.OZ0FW-SV-TOT-AVAIL-3 +       OP3REC.OP3ONOQT[OZ0FW-SV-CNT]; /* avail total*/
    end

    if (OZ0FW00.OZ0FW-CNT == 4)
      OZ0FW05A.OZ0FW-AVAIL-QTY-4[OZ0FW-IXM] = OP3REC.OP3ONOQT[OZ0FW-SV-CNT];
      OZ0FW00.OZ0FW-SV-TOT-AVAIL-4 = OZ0FW00.OZ0FW-SV-TOT-AVAIL-4 +       OP3REC.OP3ONOQT[OZ0FW-SV-CNT]; /* avail total*/
    end

  /* -------------------------------------------------------------*/
  /* calculate total qty's*/
  /* -------------------------------------------------------------*/
    OZ0FW00.OZ0FW-SV-TOT-REQ-QTY = OZ0FW00.OZ0FW-SV-TOT-REQ-QTY +     WOZSZRUN.SZRUN-OP-ORIG-ORD-QTY[OZ0FW-SV-CNT]; /* orig req qty*/

    OZ0FW00.OZ0FW-HOLD-VALUE = WOZSZRUN.SZRUN-OP-ORIG-ORD-QTY[OZ0FW-SV-CNT] *     WOZSZRUN.SZRUN-SY-PRC-PER-UNIT[OZ0FW-SV-CNT];

    OZ0FW00.OZ0FW-SV-TOT-ORIG-VAL = OZ0FW00.OZ0FW-SV-TOT-ORIG-VAL +     OZ0FW00.OZ0FW-HOLD-VALUE; /* total orig value*/


    OZ0FW00.OZ0FW-HOLD-VALUE = OP3REC.OP3ONOQT[OZ0FW-SV-CNT] *     OP3REC.SY5PRCUN[OZ0FW-SV-CNT];

    OZ0FW00.OZ0FW-SV-TOT-CURR-VAL = OZ0FW00.OZ0FW-SV-TOT-CURR-VAL +     OZ0FW00.OZ0FW-HOLD-VALUE; /* total curr value*/


    OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

  end

end // end OZ0F-51330


// Add page to temporary storage
Function OZ0F-51340()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OZ0FW05A.XXXTSLEN = 2560; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ5F"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OZ0FW05A, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OZ0FW05A empty; /* M001 display storage*/

    OZ0FW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "51340"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M005"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  OZ0F-50000(); /* Exit to display map*/


end // end OZ0F-51340


// Close selected set cursor
Function OZ0F-51350()
  OZ0F-51351(); /* get w05a temp storage*/

  OZ0FW00.OZ0FW-IXM = 1;
  OZ0FW00.OZ0FW-SV-CNT = 1;

  while (OZ0FW05A.OZ0FW-SIZE[OZ0FW-SV-CNT] > " ")

    OZ0FW05.OZ0FW-SIZE[OZ0FW-IXM] = OZ0FW05A.OZ0FW-SIZE[OZ0FW-SV-CNT];
    OZ0FW05.OZ0FW-REQ-QTY[OZ0FW-IXM] = OZ0FW05A.OZ0FW-REQ-QTY[OZ0FW-SV-CNT];

    OZ0FW05.OZ0FW-AVAIL-QTY-1[OZ0FW-IXM] = OZ0FW05A.OZ0FW-AVAIL-QTY-1[OZ0FW-SV-CNT];

    OZ0FW05.OZ0FW-AVAIL-QTY-2[OZ0FW-IXM] = OZ0FW05A.OZ0FW-AVAIL-QTY-2[OZ0FW-SV-CNT];

    OZ0FW05.OZ0FW-AVAIL-QTY-3[OZ0FW-IXM] = OZ0FW05A.OZ0FW-AVAIL-QTY-3[OZ0FW-SV-CNT];

    OZ0FW05.OZ0FW-AVAIL-QTY-4[OZ0FW-IXM] = OZ0FW05A.OZ0FW-AVAIL-QTY-4[OZ0FW-SV-CNT];

    OZ0FW05.OZ0FW-ORIG-PRICE[OZ0FW-IXM] = OZ0FW05A.OZ0FW-ORIG-PRICE[OZ0FW-SV-CNT];

    OZ0FW05.OZ0FW-CURR-PRICE[OZ0FW-IXM] = OZ0FW05A.OZ0FW-CURR-PRICE[OZ0FW-SV-CNT];

    OZ0FW00.OZ0FW-SV-CNT = OZ0FW00.OZ0FW-SV-CNT + 1;
    OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

    if (OZ0FW00.OZ0FW-IXM > 12)
      OZ0F-51352(); /* write map page*/
      OZ0FW00.OZ0FW-IXM = 1;
    end

  end

  if (OZ0FW00.OZ0FW-IXM > 1)
    OZ0F-51352(); /* write map page*/
  end

end // end OZ0F-51350


// Read temporary storage page
Function OZ0F-51351()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OZ0FW05A.XXXTSLEN = 2560; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ5F"; /* Application identification*/
  TA5REC.TA5TSQIX = 1; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OZ0FW05A, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "51351"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M005"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-51351


// Add page to temporary storage
Function OZ0F-51352()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OZ0FW05.XXXTSLEN = 0768; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ6F"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OZ0FW05, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OZ0FW05 empty; /* M001 display storage*/

    OZ0FW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "51352"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M005"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-51352


// Format and converse the map
Function OZ0F-52000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0FW00.OZ0FW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OZ0FW00.OZ0FW-SWF == "Y") /* Map must be formatted*/
                                   /* save header info*/
      OZ0FW00.OZ0FW-M2-CUST-STR-DPT = OZ0FM005.OZ0FM-CUST-STR-DPT;
      OZ0FW00.OZ0FW-M2-CU-CO-NM-HDR = OZ0FM005.OZ0FM-CU-CO-NM-HDR;
      OZ0FW00.OZ0FW-M5-STYLE-CLR-DIM = OZ0FM005.OZ0FM-STYLE-CLR-DIM;
      OZ0FW00.OZ0FW-M5-SY-STY-COLOR-ABRV = OZ0FM005.OZ0FM-SY-STY-COLOR-ABRV;
      OZ0FW00.OZ0FW-M5-COLOR-NAME = OZ0FM005.OZ0FM-COLOR-NAME;
      OZ0FW00.OZ0FW-M5-ITM-CHG = OZ0FM005.OZ0FM-ITM-CHG;

      OZ0F-52100(); /* Format the data on the map*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZ0FM005.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OZ0FM005.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0FM005.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OZWREC.XXXMSGNO != 0) /* Message to display*/

      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0FM005.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OZ0FM005.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/

    set OZ0FM005 alarm; /* Indicate sound alarm*/

  end

  converse OZ0FM005 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = OZ0FM005.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0FM005.CAITEM; /* Application data*/

end // end OZ0F-52000


// Format the display data
Function OZ0F-52100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set OZ0FM005 initial;

  OZ0FW00.OZ0FW-SWF = "N"; /* Format the map switch*/

  /* ------------------------------------------------------------*/
  /* If a ruling was added, get the page from temp storage that the*/
  /* ruling's on and display it.*/
  /* ------------------------------------------------------------*/

  if (OZ0FW00.OZ0FW-SAVE-PAGE != 0) /* if page saved off*/

    OZ0FW00.XXXTSPAG = OZ0FW00.OZ0FW-SAVE-PAGE; /* use saved page*/

    OZ0F-52110(); /* Obtain temporary storage page*/

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set OZ0FM005.XXXLITPG skip; /* "PAGE" literal*/
    OZ0FM005.XXXTSPAG = OZ0FW00.XXXTSPAG; /* Current page*/
    set OZ0FM005.XXXLITOF skip; /* "OF" literal*/
    OZ0FM005.TA5TSQIX = OZ0FW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
    OZ0FW00.OZ0FW-IXM = 1; /* Initialize map index*/
    while (OZ0FW00.OZ0FW-IXM < 13) /* Until screen is full*/

      OZ0FM005.OZ0FM-SIZE[OZ0FW-IXM] = OZ0FW05.OZ0FW-SIZE[OZ0FW-IXM];

      OZ0FM005.OZ0FM-REQ-QTY[OZ0FW-IXM] = OZ0FW05.OZ0FW-REQ-QTY[OZ0FW-IXM];

      OZ0FM005.OZ0FM-AVAIL-QTY-1[OZ0FW-IXM] = OZ0FW05.OZ0FW-AVAIL-QTY-1[OZ0FW-IXM];

      OZ0FM005.OZ0FM-AVAIL-QTY-2[OZ0FW-IXM] = OZ0FW05.OZ0FW-AVAIL-QTY-2[OZ0FW-IXM];

      OZ0FM005.OZ0FM-AVAIL-QTY-3[OZ0FW-IXM] = OZ0FW05.OZ0FW-AVAIL-QTY-3[OZ0FW-IXM];

      OZ0FM005.OZ0FM-AVAIL-QTY-4[OZ0FW-IXM] = OZ0FW05.OZ0FW-AVAIL-QTY-4[OZ0FW-IXM];

      OZ0FM005.OZ0FM-ORIG-PRICE[OZ0FW-IXM] = OZ0FW05.OZ0FW-ORIG-PRICE[OZ0FW-IXM];

      OZ0FM005.OZ0FM-CURR-PRICE[OZ0FW-IXM] = OZ0FW05.OZ0FW-CURR-PRICE[OZ0FW-IXM];

      OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
                                   /* Increment map index*/

    end

  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/

  else
    if (OZ0FW00.TA5TSQIX > 0) /* Pages were formatted*/

      if (OZ0FW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/

        if (OZ0FW00.OZ0FW-SWU == "Y") /* Current page was changed*/

          OZ0F-52120(); /* Update temporary storage page*/

          OZ0FW00.OZ0FW-SWU = "N"; /* Storage update switch*/

        end

        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/

        if (OZ0FW00.XXXTSPAG > OZ0FW00.TA5TSQIX) /* Desired greater highest*/
          OZ0FW00.XXXTSPAG = OZ0FW00.TA5TSQIX; /* Default to highest*/
        end

        OZ0F-52110(); /* Obtain temporary storage page*/

      end

      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/

      set OZ0FM005.XXXLITPG skip; /* "PAGE" literal*/
      OZ0FM005.XXXTSPAG = OZ0FW00.XXXTSPAG; /* Current page*/
      set OZ0FM005.XXXLITOF skip; /* "OF" literal*/
      OZ0FM005.TA5TSQIX = OZ0FW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
      OZ0FW00.OZ0FW-IXM = 1; /* Initialize map index*/
      while (OZ0FW00.OZ0FW-IXM < 13) /* Until screen is full*/

        OZ0FM005.OZ0FM-SIZE[OZ0FW-IXM] = OZ0FW05.OZ0FW-SIZE[OZ0FW-IXM];

        OZ0FM005.OZ0FM-REQ-QTY[OZ0FW-IXM] = OZ0FW05.OZ0FW-REQ-QTY[OZ0FW-IXM];

        OZ0FM005.OZ0FM-AVAIL-QTY-1[OZ0FW-IXM] = OZ0FW05.OZ0FW-AVAIL-QTY-1[OZ0FW-IXM];

        OZ0FM005.OZ0FM-AVAIL-QTY-2[OZ0FW-IXM] = OZ0FW05.OZ0FW-AVAIL-QTY-2[OZ0FW-IXM];

        OZ0FM005.OZ0FM-AVAIL-QTY-3[OZ0FW-IXM] = OZ0FW05.OZ0FW-AVAIL-QTY-3[OZ0FW-IXM];

        OZ0FM005.OZ0FM-AVAIL-QTY-4[OZ0FW-IXM] = OZ0FW05.OZ0FW-AVAIL-QTY-4[OZ0FW-IXM];

        OZ0FM005.OZ0FM-ORIG-PRICE[OZ0FW-IXM] = OZ0FW05.OZ0FW-ORIG-PRICE[OZ0FW-IXM];

        OZ0FM005.OZ0FM-CURR-PRICE[OZ0FW-IXM] = OZ0FW05.OZ0FW-CURR-PRICE[OZ0FW-IXM];

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
                                   /* Increment map index*/

      end

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/
  OZ0FW00.OZ0FW-IDX1 = 1;
  OZ0FW00.OZ0FW-CSD-BREAK = OZ0FW00.OZ0FW-M2-CUST-STR-DPT;

  while (OZ0FW00.OZ0FW-IDX1 < 16 && 
  OZ0FW00.OZ0FW-CSD-BRK[OZ0FW-IDX1] == "0")
    OZ0FW00.OZ0FW-CSD-BRK[OZ0FW-IDX1] = " ";
    OZ0FW00.OZ0FW-IDX1 = OZ0FW00.OZ0FW-IDX1 + 1;
  end

  OZ0FM005.OZ0FM-CUST-STR-DPT = OZ0FW00.OZ0FW-CSD-BREAK;

  OZ0FM005.OZ0FM-CU-CO-NM-HDR = OZ0FW00.OZ0FW-M2-CU-CO-NM-HDR;

  OZ0FM005.OZ0FM-STYLE-CLR-DIM = OZ0FW00.OZ0FW-M5-STYLE-CLR-DIM;
  OZ0FM005.OZ0FM-SY-STY-COLOR-ABRV = OZ0FW00.OZ0FW-M5-SY-STY-COLOR-ABRV;
  OZ0FM005.OZ0FM-COLOR-NAME = OZ0FW00.OZ0FW-M5-COLOR-NAME;

  OZ0FM005.OZ0FM-TOT-REQ-QTY = OZ0FW00.OZ0FW-SV-TOT-REQ-QTY;
  OZ0FM005.OZ0FM-ORIG-VALUE = OZ0FW00.OZ0FW-SV-TOT-ORIG-VAL;
  OZ0FM005.OZ0FM-CURR-VALUE = OZ0FW00.OZ0FW-SV-TOT-CURR-VAL;

  OZ0FM005.OZ0FM-ITM-CHG = OZ0FW00.OZ0FW-M5-ITM-CHG;

  /* VE OZ0FW00.OZ0FW-M5-OP-ORIG-NEED-DT TO OZ0Fw00.OZ0Fw-need-date*/
  OZ0FW00.OZ0FW-ND-MM = OZ0FW00.OZ0FW-M5-OOND-MM;
  OZ0FW00.OZ0FW-ND-SLASH = "/";
  OZ0FW00.OZ0FW-ND-DD = OZ0FW00.OZ0FW-M5-OOND-DD;
  OZ0FM005.OZ0FM-OP-ORIG-NEED-DT = OZ0FW00.OZ0FW-NEED-DATE;

  /* IF OZ0FW00.OZ0FW-SV-TOT-AVAIL-1 > 0;*/
  /* MOVE OZ0FW00.OZ0FW-SV-TOT-AVAIL-1 TO OZ0FM005.OZ0FM-AVAIL-TOT-QTY-1;*/
  /* MOVE 'AVAIL' TO OZ0FM005.OZ0FM-AVAIL-HDR(1);*/

  if (OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT[1] > 0)
  /* MOVE OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT(1)*/
  /* TO OZ0FM005.OZ0FM-OP-CUST-NEED-DT(1);*/
    OZ0FW00.OZ0FW-ND-MM = OZ0FW00.OZ0FW-M5-OCND-MM[1];
    OZ0FW00.OZ0FW-ND-SLASH = "/";
    OZ0FW00.OZ0FW-ND-DD = OZ0FW00.OZ0FW-M5-OCND-DD[1];
    OZ0FM005.OZ0FM-OP-CUST-NEED-DT[1] = OZ0FW00.OZ0FW-NEED-DATE;
    OZ0FM005.OZ0FM-AVAIL-TOT-QTY-1 = OZ0FW00.OZ0FW-SV-TOT-AVAIL-1;
    OZ0FM005.OZ0FM-AVAIL-HDR[1] = "AVAIL";

  end

  if (OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT[2] > 0)
  /* IF OZ0FW00.OZ0FW-SV-TOT-AVAIL-2 > 0;*/
  /* MOVE OZ0FW00.OZ0FW-SV-TOT-AVAIL-2 TO OZ0FM005.OZ0FM-AVAIL-TOT-QTY-2;*/
  /* MOVE 'AVAIL' TO OZ0FM005.OZ0FM-AVAIL-HDR(2);*/
  /* MOVE OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT(2)*/
  /* TO OZ0FM005.OZ0FM-OP-CUST-NEED-DT(2);*/
    OZ0FW00.OZ0FW-ND-MM = OZ0FW00.OZ0FW-M5-OCND-MM[2];
    OZ0FW00.OZ0FW-ND-SLASH = "/";
    OZ0FW00.OZ0FW-ND-DD = OZ0FW00.OZ0FW-M5-OCND-DD[2];
    OZ0FM005.OZ0FM-OP-CUST-NEED-DT[2] = OZ0FW00.OZ0FW-NEED-DATE;
    OZ0FM005.OZ0FM-AVAIL-TOT-QTY-2 = OZ0FW00.OZ0FW-SV-TOT-AVAIL-2;
    OZ0FM005.OZ0FM-AVAIL-HDR[2] = "AVAIL";
  end

  if (OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT[3] > 0)
  /* IF OZ0FW00.OZ0FW-SV-TOT-AVAIL-3 > 0;*/
  /* MOVE OZ0FW00.OZ0FW-SV-TOT-AVAIL-3 TO OZ0FM005.OZ0FM-AVAIL-TOT-QTY-3;*/
  /* MOVE 'AVAIL' TO OZ0FM005.OZ0FM-AVAIL-HDR(3);*/
  /* MOVE OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT(3)*/
  /* TO OZ0FM005.OZ0FM-OP-CUST-NEED-DT(3);*/
    OZ0FW00.OZ0FW-ND-MM = OZ0FW00.OZ0FW-M5-OCND-MM[3];
    OZ0FW00.OZ0FW-ND-SLASH = "/";
    OZ0FW00.OZ0FW-ND-DD = OZ0FW00.OZ0FW-M5-OCND-DD[3];
    OZ0FM005.OZ0FM-OP-CUST-NEED-DT[3] = OZ0FW00.OZ0FW-NEED-DATE;
    OZ0FM005.OZ0FM-AVAIL-TOT-QTY-3 = OZ0FW00.OZ0FW-SV-TOT-AVAIL-3;
    OZ0FM005.OZ0FM-AVAIL-HDR[3] = "AVAIL";
  end

  if (OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT[4] > 0)
  /* IF OZ0FW00.OZ0FW-SV-TOT-AVAIL-4 > 0;*/
  /* MOVE OZ0FW00.OZ0FW-SV-TOT-AVAIL-4 TO OZ0FM005.OZ0FM-AVAIL-TOT-QTY-4;*/
  /* MOVE 'AVAIL' TO OZ0FM005.OZ0FM-AVAIL-HDR(4);*/
  /* MOVE OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT(4)*/
  /* TO OZ0FM005.OZ0FM-OP-CUST-NEED-DT(4);*/
    OZ0FW00.OZ0FW-ND-MM = OZ0FW00.OZ0FW-M5-OCND-MM[4];
    OZ0FW00.OZ0FW-ND-SLASH = "/";
    OZ0FW00.OZ0FW-ND-DD = OZ0FW00.OZ0FW-M5-OCND-DD[4];
    OZ0FM005.OZ0FM-OP-CUST-NEED-DT[4] = OZ0FW00.OZ0FW-NEED-DATE;
    OZ0FM005.OZ0FM-AVAIL-TOT-QTY-4 = OZ0FW00.OZ0FW-SV-TOT-AVAIL-4;
    OZ0FM005.OZ0FM-AVAIL-HDR[4] = "AVAIL";
  end


  /*  */
end // end OZ0F-52100


// Read temporary storage page
Function OZ0F-52110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OZ0FW05.XXXTSLEN = 0768; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ6F"; /* Application identification*/
  TA5REC.TA5TSQIX = OZ0FW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OZ0FW05, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "52110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M005"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-52110


// Update temporary storage page
Function OZ0F-52120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (OZ0FW05, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "52120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M005"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-52120


// Check attention identifier
Function OZ0F-53000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0FW00.OZ0FW-SWR == "Y") /* Request for data*/
      set OZ0FW05 empty; /* m003 display storage*/
    end

    OZ0FW00.OZ0FW-SWF = "Y"; /* Format the map switch*/
    OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/
  if (OZ0FM005.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      OZ0F-51100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0FM005.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "53000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    OZ0F-50000(); /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If HELP, exit to the previous level or exit to the Master*/
  /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      OZ0FW00.OZ0FW-SV-NEED-DT = 0;
      OZ0FW00.OZ0FW-SWR = "Y";
      OZ0FW00.OZ0FW-SWF = "Y";
      OZ0FW00.XXXTSPAG = 1; /* reset ts page counter*/
      OZ0F-20000();
    end

    if (converseVar.eventKey is pf4) /* PF3 was pressed*/
      COMMAREA.CATOAP = "OZ0A"; /* TO application*/
    end

    OZ0F-51100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    OZ0F-50000(); /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid attention identifier was used to*/
  /* invoke the transaction.  Display an error message to the*/
  /* user if the PF key used is not supported.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   /* and PF1 was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf15  /* and PF15 was not pressed*/
   && converseVar.eventKey not pf23) /* and PF23 was not pressed*/

    OZWREC.XXXPRCNM = "53000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    OZ0F-50000(); /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* pf15*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf15) /* pf15 pressed*/

    if (OZ0FM005.OZ0FM-ITM-CHG == "N")
      converseLib.validationFailed(78);
      OZWREC.XXXPRCNM = "53000";
      OZ0F-50000(); /* Exit to display map*/

    else

      OZ0FW00.OZ0FW-SWR = "Y"; /* to pull up data on m006*/
      OZ0FW00.OZ0FW-SWF = "Y"; /* to pull up data on m006*/
      OZ0FW00.XXXTSPAG = 1; /* reset ts page counter*/
      OZ0F-60000();

    end
  end

  /* ------------------------------------------------------------*/
  /* pf23*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf23) /* pf23 pressed*/

    OZ0F-53100(); /* build xp0r ord table*/
    XP0R001(); /* build and display chg reason codes*/
    if (XP0RW00.XP0RWERR == "Y")
      converseLib.validationFailed(78);
      OZWREC.XXXPRCNM = "53000";
    else
      OZ0FW00.OZ0FW-SWR = "Y"; /* to pull up data on map*/
      OZ0FW00.OZ0FW-SWF = "Y"; /* to pull up data on map*/
    end
    OZ0F-50000();

  end

  /* ------------------------------------------------------------*/
  /* enter*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter)
    set OZ0FM005 initial;
    OZ0FW00.OZ0FW-SV-NEED-DT = 0;
    OZ0FW00.OZ0FW-SWR = "Y"; /* to pull up data on map*/
    OZ0FW00.OZ0FW-M5IDX = OZ0FW00.OZ0FW-M5IDX + 1;
    OZ0F-50000();
  end

end // end OZ0F-53000


// Check attention identifier
Function OZ0F-53100()
  OZ0FW00.OZ0FW-CNT = 1;

  while (OZ0FW00.OZ0FW-CNT < 5
   && OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[OZ0FW-CNT] > 0)

   /* only 1 occurance of*/
    XP0RW00.XP0RW-CUST-ORD-ID[OZ0FW-CNT] = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID; /* cust ord id*/

    XP0RW00.XP0RW-NIKE-ORD-ID[OZ0FW-CNT] = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[OZ0FW-CNT];

    XP0RW00.XP0RW-LINE-ITEM-NBR[OZ0FW-CNT] = OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR[OZ0FW-CNT];

    OZ0FW00.OZ0FW-CNT = OZ0FW00.OZ0FW-CNT + 1;

  end
end // end OZ0F-53100


// Reset highlighted fields
Function OZ0F-54000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/


  set OZ0FM005.CATOAP initialAttributes; /* TO application*/
  set OZ0FM005.CAITEM initialAttributes; /* Application data*/


end // end OZ0F-54000


// Verify data that was entered
Function OZ0F-55000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (OZ0FM005.CAITEM > " ") /* Application data was entered*/

    OZWREC.XXXPRCNM = "25000"; /* Module identification*/
    set OZ0FM005.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    OZ0F-55100(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the line.*/
    /* ------------------------------------------------------------*/

    if (converseVar.eventKey is enter) /* Enter was pressed*/
      return;

    end

  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    OZ0F-50000(); /* Exit to display map*/
  end


end // end OZ0F-55000


// Verify scroll request
Function OZ0F-55100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OZ0FW00.XXXTSPAG < 2)       /* and no previous pages*/

    OZWREC.XXXPRCNM = "55100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OZ0FW00.XXXTSPAG >= OZ0FW00.TA5TSQIX) /* and no more pages*/

    OZWREC.XXXPRCNM = "55100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end


end // end OZ0F-55100


// Process valid input request
Function OZ0F-56000()
  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-SWF = "Y"; /* format the map switch*/



  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    OZ0FW00.XXXTSPAG = OZ0FW00.XXXTSPAG - 1; /* Decrement page number*/

    OZ0F-50000(); /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    OZ0FW00.XXXTSPAG = OZ0FW00.XXXTSPAG + 1; /* Increment page number*/

    OZ0F-50000(); /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter) /* enter pressed*/

    OZ0FW00.OZ0FW-SWF = "Y"; /* Format the map switch*/
    OZ0F-50000(); /* Return to previous process*/
  end

  /* ------------------------------------------------------------*/
  /* Save the select fields and clear the map input/output area.*/
  /* ------------------------------------------------------------*/


  if (converseVar.eventKey is pf15) /* pf14*/

    OZ0FW00.OZ0FW-IXM = 1; /* Initialize line index*/
    OZ0FW00.OZ0FW-SWU = "N"; /* reset switch*/

  end


end // end OZ0F-56000


// Process to add a new row
Function OZ0F-60000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Format the map output area and display the map.*/
  /* 2) Check the attention identifier used to respond.*/
  /* 3) Reset highlighted fields to normal intensity.*/
  /* 4) Verify the data that was entered.*/
  /* 5) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0F-61000(); /* Obtain data to display*/

  OZ0F-62000(); /* Format and display the map*/

  OZ0F-63000(); /* Check attention identifier*/

  OZ0F-64000(); /* Reset fields to normal intensity*/

  OZ0F-65000(); /* Verify the entered data*/

  OZ0F-66000(); /* Process valid input request*/


end // end OZ0F-60000


// Obtain the data to display
Function OZ0F-61000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.OZ0FW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/
  OZ0FW00.XXXTSLEN = 0832; /* temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/
  if (OZ0FW00.XXXTSPAG == 0) /* no pages established*/
    OZ0FW00.XXXTSPAG = 1; /* Page number to display*/
  end

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/
  OZ0F-61100(); /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Perform screen header edits*/
  /* ------------------------------------------------------------*/
  OZ0F-61200(); /* build screen header*/

  /* ------------------------------------------------------------*/
  /* get the data*/
  /* ------------------------------------------------------------*/
  OZ0F-61300();
end // end OZ0F-61000


// Purge any temporary storage
Function OZ0F-61100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/

  set OZ0FW06 empty; /* M001 display storage*/

  OZ0FW00.OZ0FW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0FW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "OZ7F"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0FW06, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "61100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M006"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-61100


// screen header edits
Function OZ0F-61200()
  OZ0FM006.OZ0FM-CUST-STR-DPT = OZ0FM005.OZ0FM-CUST-STR-DPT;
  /* VE OZ0FW00.OZ0FW-SEL-CUST-STR-DPT TO OZ0FM006.OZ0FM-CUST-STR-DPT;*/
  OZ0FM006.OZ0FM-CU-CO-NM-HDR = OZ0FW00.OZ0FW-SEL-CUST-NM-HDR;
  OZ0FM006.OZ0FM-STYLE-CLR-DIM = OZ0FW00.OZ0FW-M5-STYLE-CLR-DIM;
  OZ0FM006.OZ0FM-SY-STY-COLOR-ABRV = OZ0FW00.OZ0FW-M5-SY-STY-COLOR-ABRV;
  OZ0FM006.OZ0FM-COLOR-NAME = OZ0FW00.OZ0FW-M5-COLOR-NAME;

  OZ0FM006.OZ0FM-OP-ORIG-NEED-DT = OZ0FM005.OZ0FM-OP-ORIG-NEED-DT;

  OZ0FM006.OZ0FM-AVAIL-HDR[1] = OZ0FM005.OZ0FM-AVAIL-HDR[1];
  OZ0FM006.OZ0FM-OP-CUST-NEED-DT[1] = OZ0FM005.OZ0FM-OP-CUST-NEED-DT[1];

  OZ0FM006.OZ0FM-AVAIL-HDR[2] = OZ0FM005.OZ0FM-AVAIL-HDR[2];
  OZ0FM006.OZ0FM-OP-CUST-NEED-DT[2] = OZ0FM005.OZ0FM-OP-CUST-NEED-DT[2];

  OZ0FM006.OZ0FM-AVAIL-HDR[3] = OZ0FM005.OZ0FM-AVAIL-HDR[3];
  OZ0FM006.OZ0FM-OP-CUST-NEED-DT[3] = OZ0FM005.OZ0FM-OP-CUST-NEED-DT[3];

  OZ0FM006.OZ0FM-AVAIL-HDR[4] = OZ0FM005.OZ0FM-AVAIL-HDR[4];
  OZ0FM006.OZ0FM-OP-CUST-NEED-DT[4] = OZ0FM005.OZ0FM-OP-CUST-NEED-DT[4];


  /* -------------------------------------------------------------*/
end // end OZ0F-61200


// Obtain the data to display
Function OZ0F-61300()
  OZ0FW00.OZ0FW-IXM = 1; /* Display line index*/
  OZ0FW00.OZ0FW-SV-CNT = 1; /* size array index*/

  while (OZ0FW00.OZ0FW-SV-CNT < 41) /* Until end of array*/

    OZ0F-61330(); /* spin thru sz array*/

    OZ0FW00.OZ0FW-SV-CNT = OZ0FW00.OZ0FW-SV-CNT + 1;

  end


  if (OZ0FW00.OZ0FW-IXM > 1) /* Page was formatted*/
    OZ0F-61340(); /* Add page to temporary storage*/
  end


  if (OZ0FW00.TA5TSQIX == 0) /* No pages formatted*/
    OZWREC.XXXPRCNM = "61300"; /* Module identification*/
    OZWREC.XXXMSGNO = 16; /* No data was found to display*/
    return; /* Return to previous process*/
  end

  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/
end // end OZ0F-61300


// Save data in display storage
Function OZ0F-61330()
  if (OZ0FW05A.OZ0FW-SIZE[OZ0FW-SV-CNT] > " ")

    OZ0FW06.OZ0FW-SIZE = OZ0FW05A.OZ0FW-SIZE[OZ0FW-SV-CNT];

    if (OZ0FW05A.OZ0FW-REQ-QTY[OZ0FW-SV-CNT] > 0)
      OZ0FW06.OZ0FW-REQ-QTY = OZ0FW05A.OZ0FW-REQ-QTY[OZ0FW-SV-CNT];
    end

    OZ0FW06.OZ0FW-ORIG-PRICE = OZ0FW05A.OZ0FW-ORIG-PRICE[OZ0FW-SV-CNT];

    OZ0FW06.OZ0FW-CURR-PRICE = OZ0FW05A.OZ0FW-CURR-PRICE[OZ0FW-SV-CNT];

    if (OZ0FW05A.OZ0FW-AVAIL-QTY-1[OZ0FW-SV-CNT] > 0)
      OZ0FW06.OZ0FW-AVAIL-QTY-1 = OZ0FW05A.OZ0FW-AVAIL-QTY-1[OZ0FW-SV-CNT];
    end

    if (OZ0FW05A.OZ0FW-AVAIL-QTY-2[OZ0FW-SV-CNT] > 0)
      OZ0FW06.OZ0FW-AVAIL-QTY-2 = OZ0FW05A.OZ0FW-AVAIL-QTY-2[OZ0FW-SV-CNT];
    end

    if (OZ0FW05A.OZ0FW-AVAIL-QTY-3[OZ0FW-SV-CNT] > 0)
      OZ0FW06.OZ0FW-AVAIL-QTY-3 = OZ0FW05A.OZ0FW-AVAIL-QTY-3[OZ0FW-SV-CNT];
    end

    if (OZ0FW05A.OZ0FW-AVAIL-QTY-4[OZ0FW-SV-CNT] > 0)
      OZ0FW06.OZ0FW-AVAIL-QTY-4 = OZ0FW05A.OZ0FW-AVAIL-QTY-4[OZ0FW-SV-CNT];
    end

    OZ0FW00.OZ0FW-M6-SIZE-DTL = OZ0FW06.OZ0FW-SIZE-DTL;

  /* IF OZ0FW05A.OZ0FW-AVAIL-QTY-1(OZ0FW-SV-CNT) > 0;*/
    if (OZ0FM006.OZ0FM-AVAIL-HDR[1] > "  ")
      OZ0F-61332(); /* logic for dtl build*/
    end

  /* IF OZ0FW05A.OZ0FW-AVAIL-QTY-2(OZ0FW-SV-CNT) > 0;*/
    if (OZ0FM006.OZ0FM-AVAIL-HDR[2] > "  ")
      OZ0F-61334(); /* logic for dtl build*/
    end

  /* iF OZ0FW05A.OZ0FW-AVAIL-QTY-3(OZ0FW-SV-CNT) > 0;*/
    if (OZ0FM006.OZ0FM-AVAIL-HDR[3] > "  ")
      OZ0F-61336(); /* logic for dtl build*/
    end

  /* IF OZ0FW05A.OZ0FW-AVAIL-QTY-4(OZ0FW-SV-CNT) > 0;*/
    if (OZ0FM006.OZ0FM-AVAIL-HDR[4] > "  ")
      OZ0F-61338(); /* logic for dtl build*/
    end


    if (OZ0FW00.OZ0FW-IXM > 1)
      OZ0F-61340();
      OZ0FW00.OZ0FW-IXM = 1;
    end

  end

end // end OZ0F-61330


// logic for first need date
Function OZ0F-61332()
  /* --------------------------------------------------------------------*/
  /* read header changes first*/
  /* --------------------------------------------------------------------*/
  set VSOHCR01 empty;

  VSOHCR01.OP1CUOID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  VSOHCR01.OP1NORID = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[1];
  if (OZ0FW00.OZ0FW-M5-COLOR-NAME == "CANCELLED")
    VSOHCR01.SOCD-APPL-SRC-CD = "OB";
  else
    VSOHCR01.SOCD-APPL-SRC-CD = "OP";
  end

  OZ0F-61350(); /* open vsohcr01 cursor*/

  OZ0FW00.OZ0FW-SWC = "N";
  while (OZ0FW00.OZ0FW-SWC == "N")

    OZ0F-61352(); /* fetch vsohcr01*/

    if (SQLCA.VAGen_SQLCODE == +100)
      OZ0FW00.OZ0FW-SWC = "Y";
    else
      if (VSOHCR01.OP1CUNDT > 0)

        set VSOCRC01 empty;

        VSOCRC01.XOMCD = VSOHCR01.XOMCD;
        OZ0F-61359(); /* read vsocrc01*/

        OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;

        OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOHCR01.XOMCD;
        OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "NEED DATE";

        OZ0FW00.OZ0FW-DATE-BRK = VSOHCR01.OP1CUNDT;
        OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
        OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
        OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
        OZ0FW00.OZ0FW-DM-DASH1 = "-";
        OZ0FW00.OZ0FW-DM-DASH2 = "-";
        OZ0FW06.OZ0FW-VALUE-FLD[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

        OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOHCR01.XXX-USER-ID;

        OZ0FW00.OZ0FW-DATE-BRK = VSOHCR01.ZZZSDT;
        OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
        OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
        OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
        OZ0FW00.OZ0FW-DM-DASH1 = "-";
        OZ0FW00.OZ0FW-DM-DASH2 = "-";
        OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

        OZ0FW00.OZ0FW-TIME-BRK = VSOHCR01.ZZZSTM;
        OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
        OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
        OZ0FW00.OZ0FW-TM-CL = ":";
        OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


        if (VSOHCR01.SOCD-HDR-RSN-TXT > " ")
          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
          OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM] = VSOHCR01.SOCD-HDR-RSN-TXT;
        end

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end
    end
  end

  OZ0F-61354(); /* close vsohcr01 cursor*/

  /* --------------------------------------------------------------------*/
  /* start size reads*/
  /* --------------------------------------------------------------------*/
  set VOCSIZ01 empty;

  VOCSIZ01.OP1CUOID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  VOCSIZ01.OP1NORID = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[1];
  VOCSIZ01.OP2LNINB = OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR[1];
  if (VSOHCR01.SOCD-APPL-SRC-CD == "OB")
    VOCSIZ01.SOCD-APPL-SRC-CD = "OB";
  else
    VOCSIZ01.SOCD-APPL-SRC-CD = "OP";
  end
  VOCSIZ01.OP-SZ-GRP-SEQ = OZ0FW05A.OZ0FW-GRP-SEQ[OZ0FW-SV-CNT];

  OZ0F-61358(); /* read vocsiz01*/


  set VSOSCR01 empty;

  VSOSCR01.OP-CUST-ORD-ID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  VSOSCR01.OP-NIKE-ORD-ID = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[1];
  VSOSCR01.OP-LINE-ITEM-NBR = OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR[1];
  if (VSOHCR01.SOCD-APPL-SRC-CD == "OB")
    VSOSCR01.SOCD-APPL-SRC-CD = "OB";
  else
    VSOSCR01.SOCD-APPL-SRC-CD = "OP";
  end
  VSOSCR01.OP-SZ-GRP-SEQ = OZ0FW05A.OZ0FW-GRP-SEQ[OZ0FW-SV-CNT];

  OZ0F-61355(); /* open vsoscr01 cursor*/

  OZ0FW00.OZ0FW-SWC = "N";

  while (OZ0FW00.OZ0FW-SWC == "N")

    OZ0F-61356(); /* fetch vsoscr01*/

    if (SQLCA.VAGen_SQLCODE == +100)
      OZ0FW00.OZ0FW-SWC = "Y";
    else

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 1)

        if (VSOSCR01.OP-ON-ORD-QTY1 != VOCSIZ01.OP-ORIG-ORD-QTY1
         || VSOSCR01.SOCD-APPL-SRC-CD == "OB")

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY1;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           /* WHILE OZ0FW00.OZ0FW-IDX < 10*/
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end
  /* here*/
          if (OZ0FW00.OZ0FW-VALUE-FIELD == "  "
           || VSOSCR01.SOCD-APPL-SRC-CD == "OB")
            OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = "CANCELLED";
          else
            OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
          end
  /* here*/
  /* MOVE VSOSCR01.OP-ON-ORD-QTY1 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZSDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZSDTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;

          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW00.OZ0FW-IXM = 1;
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT1 != VOCSIZ01.SY-PRC-PER-UNIT1)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT1;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT1 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZSDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZSDTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 2)

        if (VSOSCR01.OP-ON-ORD-QTY2 != VOCSIZ01.OP-ORIG-ORD-QTY2)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY2;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY2 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZSDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZSDTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT2 != VOCSIZ01.SY-PRC-PER-UNIT2)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT2;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT2 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZSDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZSDTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 3)

        if (VSOSCR01.OP-ON-ORD-QTY3 != VOCSIZ01.OP-ORIG-ORD-QTY3)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY3;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY3 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZSDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZSDTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT3 != VOCSIZ01.SY-PRC-PER-UNIT3)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT3;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT3 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZSDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZSDTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 4)

        if (VSOSCR01.OP-ON-ORD-QTY4 != VOCSIZ01.OP-ORIG-ORD-QTY4)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY4;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY4 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZSDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZSDTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT4 != VOCSIZ01.SY-PRC-PER-UNIT4)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT4;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT4 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZSDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZSDTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 5)

        if (VSOSCR01.OP-ON-ORD-QTY5 != VOCSIZ01.OP-ORIG-ORD-QTY5)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY5;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY5 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZSDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZSDTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT5 != VOCSIZ01.SY-PRC-PER-UNIT5)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT5;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT5 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZSDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZSDTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end


      if (VSOSCR01.SOCD-SZ-RSN-TXT > " ") /* check for comments*/

        if (OZ0FW00.OZ0FW-IXM > 1
         && OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM] > " ")
          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
        end

        OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM] = VSOSCR01.SOCD-SZ-RSN-TXT;

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
      end

      if (OZ0FW00.OZ0FW-IXM > 12)
        OZ0F-61340(); /* write page to temp storage*/
        OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
        OZ0FW00.OZ0FW-IXM = 1;
      end

    end
  end

  OZ0F-61357(); /* close vsoscr01 cursor*/
end // end OZ0F-61332


// logic for 2nd need date
Function OZ0F-61334()
  /* --------------------------------------------------------------------*/
  /* read header changes first*/
  /* --------------------------------------------------------------------*/
  set VSOHCR01 empty;

  VSOHCR01.OP1CUOID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  VSOHCR01.OP1NORID = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[2];
  VSOHCR01.SOCD-APPL-SRC-CD = "OP";

  OZ0F-61350(); /* open vsohcr01 cursor*/

  OZ0FW00.OZ0FW-SWC = "N";
  while (OZ0FW00.OZ0FW-SWC == "N")

    OZ0F-61352(); /* fetch vsohcr01*/

    if (SQLCA.VAGen_SQLCODE == +100)
      OZ0FW00.OZ0FW-SWC = "Y";
    else
      if (VSOHCR01.OP1CUNDT > 0)

        set VSOCRC01 empty;

        VSOCRC01.XOMCD = VSOHCR01.XOMCD;
        OZ0F-61359(); /* read vsocrc01*/

        OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;

        OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOHCR01.XOMCD;
        OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "NEED DATE";

        OZ0FW00.OZ0FW-DATE-BRK = VSOHCR01.OP1CUNDT;
        OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
        OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
        OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
        OZ0FW00.OZ0FW-DM-DASH1 = "-";
        OZ0FW00.OZ0FW-DM-DASH2 = "-";
        OZ0FW06.OZ0FW-VALUE-FLD[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

        OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOHCR01.XXX-USER-ID;

        OZ0FW00.OZ0FW-DATE-BRK = VSOHCR01.ZZZCHGDT;
        OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
        OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
        OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
        OZ0FW00.OZ0FW-DM-DASH1 = "-";
        OZ0FW00.OZ0FW-DM-DASH2 = "-";
        OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

        OZ0FW00.OZ0FW-TIME-BRK = VSOHCR01.ZZZCHGTM;
        OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
        OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
        OZ0FW00.OZ0FW-TM-CL = ":";
        OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


        if (VSOHCR01.SOCD-HDR-RSN-TXT > " ")
          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
          OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM] = VSOHCR01.SOCD-HDR-RSN-TXT;
        end

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end
    end
  end

  OZ0F-61354(); /* close vsohcr01 cursor*/

  /* --------------------------------------------------------------------*/
  /* start size reads*/
  /* --------------------------------------------------------------------*/
  set VOCSIZ01 empty;

  VOCSIZ01.OP1CUOID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  VOCSIZ01.OP1NORID = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[2];
  VOCSIZ01.OP2LNINB = OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR[2];
  VOCSIZ01.SOCD-APPL-SRC-CD = "OP";
  VOCSIZ01.OP-SZ-GRP-SEQ = OZ0FW05A.OZ0FW-GRP-SEQ[OZ0FW-SV-CNT];

  OZ0F-61358(); /* read vocsiz01*/


  set VSOSCR01 empty;

  VSOSCR01.OP-CUST-ORD-ID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  VSOSCR01.OP-NIKE-ORD-ID = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[2];
  VSOSCR01.OP-LINE-ITEM-NBR = OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR[2];
  VSOSCR01.SOCD-APPL-SRC-CD = "OP";
  VSOSCR01.OP-SZ-GRP-SEQ = OZ0FW05A.OZ0FW-GRP-SEQ[OZ0FW-SV-CNT];

  OZ0F-61355(); /* open vsoscr01 cursor*/

  OZ0FW00.OZ0FW-SWC = "N";

  while (OZ0FW00.OZ0FW-SWC == "N")

    OZ0F-61356(); /* fetch vsoscr01*/

    if (SQLCA.VAGen_SQLCODE == +100)
      OZ0FW00.OZ0FW-SWC = "Y";
    else

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 1)

        if (VSOSCR01.OP-ON-ORD-QTY1 != VOCSIZ01.OP-ORIG-ORD-QTY1)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY1;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY1 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;

          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT1 != VOCSIZ01.SY-PRC-PER-UNIT1)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT1;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT1 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 2)

        if (VSOSCR01.OP-ON-ORD-QTY2 != VOCSIZ01.OP-ORIG-ORD-QTY2)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY2;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY2 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT2 != VOCSIZ01.SY-PRC-PER-UNIT2)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT2;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT2 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 3)

        if (VSOSCR01.OP-ON-ORD-QTY3 != VOCSIZ01.OP-ORIG-ORD-QTY3)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY3;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY3 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT3 != VOCSIZ01.SY-PRC-PER-UNIT3)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT3;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT3 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 4)

        if (VSOSCR01.OP-ON-ORD-QTY4 != VOCSIZ01.OP-ORIG-ORD-QTY4)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY4;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY4 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT4 != VOCSIZ01.SY-PRC-PER-UNIT4)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT4;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT4 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 5)

        if (VSOSCR01.OP-ON-ORD-QTY5 != VOCSIZ01.OP-ORIG-ORD-QTY5)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY5;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY5 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT5 != VOCSIZ01.SY-PRC-PER-UNIT5)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT5;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT5 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end


      if (VSOSCR01.SOCD-SZ-RSN-TXT > " ") /* check for comments*/

        if (OZ0FW00.OZ0FW-IXM > 1
         && OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM] > " ")
          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
        end

        OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM] = VSOSCR01.SOCD-SZ-RSN-TXT;

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
      end

      if (OZ0FW00.OZ0FW-IXM > 12)
        OZ0F-61340(); /* write page to temp storage*/
        OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
        OZ0FW00.OZ0FW-IXM = 1;
      end

    end
  end

  OZ0F-61357(); /* close vsoscr01 cursor*/
end // end OZ0F-61334


// logic for 3rd need date
Function OZ0F-61336()
  /* --------------------------------------------------------------------*/
  /* read header changes first*/
  /* --------------------------------------------------------------------*/
  set VSOHCR01 empty;

  VSOHCR01.OP1CUOID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  VSOHCR01.OP1NORID = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[3];
  VSOHCR01.SOCD-APPL-SRC-CD = "OP";

  OZ0F-61350(); /* open vsohcr01 cursor*/

  OZ0FW00.OZ0FW-SWC = "N";
  while (OZ0FW00.OZ0FW-SWC == "N")

    OZ0F-61352(); /* fetch vsohcr01*/

    if (SQLCA.VAGen_SQLCODE == +100)
      OZ0FW00.OZ0FW-SWC = "Y";
    else
      if (VSOHCR01.OP1CUNDT > 0)

        set VSOCRC01 empty;

        VSOCRC01.XOMCD = VSOHCR01.XOMCD;
        OZ0F-61359(); /* read vsocrc01*/

        OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;

        OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOHCR01.XOMCD;
        OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "NEED DATE";

        OZ0FW00.OZ0FW-DATE-BRK = VSOHCR01.OP1CUNDT;
        OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
        OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
        OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
        OZ0FW00.OZ0FW-DM-DASH1 = "-";
        OZ0FW00.OZ0FW-DM-DASH2 = "-";
        OZ0FW06.OZ0FW-VALUE-FLD[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

        OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOHCR01.XXX-USER-ID;

        OZ0FW00.OZ0FW-DATE-BRK = VSOHCR01.ZZZCHGDT;
        OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
        OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
        OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
        OZ0FW00.OZ0FW-DM-DASH1 = "-";
        OZ0FW00.OZ0FW-DM-DASH2 = "-";
        OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

        OZ0FW00.OZ0FW-TIME-BRK = VSOHCR01.ZZZCHGTM;
        OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
        OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
        OZ0FW00.OZ0FW-TM-CL = ":";
        OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


        if (VSOHCR01.SOCD-HDR-RSN-TXT > " ")
          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
          OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM] = VSOHCR01.SOCD-HDR-RSN-TXT;
        end

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end
    end
  end

  OZ0F-61354(); /* close vsohcr01 cursor*/

  /* --------------------------------------------------------------------*/
  /* start size reads*/
  /* --------------------------------------------------------------------*/
  set VOCSIZ01 empty;

  VOCSIZ01.OP1CUOID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  VOCSIZ01.OP1NORID = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[3];
  VOCSIZ01.OP2LNINB = OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR[3];
  VOCSIZ01.SOCD-APPL-SRC-CD = "OP";
  VOCSIZ01.OP-SZ-GRP-SEQ = OZ0FW05A.OZ0FW-GRP-SEQ[OZ0FW-SV-CNT];

  OZ0F-61358(); /* read vocsiz01*/


  set VSOSCR01 empty;

  VSOSCR01.OP-CUST-ORD-ID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  VSOSCR01.OP-NIKE-ORD-ID = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[3];
  VSOSCR01.OP-LINE-ITEM-NBR = OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR[3];
  VSOSCR01.SOCD-APPL-SRC-CD = "OP";
  VSOSCR01.OP-SZ-GRP-SEQ = OZ0FW05A.OZ0FW-GRP-SEQ[OZ0FW-SV-CNT];

  OZ0F-61355(); /* open vsoscr01 cursor*/

  OZ0FW00.OZ0FW-SWC = "N";

  while (OZ0FW00.OZ0FW-SWC == "N")

    OZ0F-61356(); /* fetch vsoscr01*/

    if (SQLCA.VAGen_SQLCODE == +100)
      OZ0FW00.OZ0FW-SWC = "Y";
    else

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 1)

        if (VSOSCR01.OP-ON-ORD-QTY1 != VOCSIZ01.OP-ORIG-ORD-QTY1)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY1;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY1 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;

          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT1 != VOCSIZ01.SY-PRC-PER-UNIT1)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT1;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT1 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 2)

        if (VSOSCR01.OP-ON-ORD-QTY2 != VOCSIZ01.OP-ORIG-ORD-QTY2)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY2;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY2 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT2 != VOCSIZ01.SY-PRC-PER-UNIT2)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT2;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT2 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 3)

        if (VSOSCR01.OP-ON-ORD-QTY3 != VOCSIZ01.OP-ORIG-ORD-QTY3)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY3;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY3 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT3 != VOCSIZ01.SY-PRC-PER-UNIT3)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT3;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT3 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 4)

        if (VSOSCR01.OP-ON-ORD-QTY4 != VOCSIZ01.OP-ORIG-ORD-QTY4)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY4;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY4 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT4 != VOCSIZ01.SY-PRC-PER-UNIT4)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT4;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT4 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 5)

        if (VSOSCR01.OP-ON-ORD-QTY5 != VOCSIZ01.OP-ORIG-ORD-QTY5)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY5;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY5 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT5 != VOCSIZ01.SY-PRC-PER-UNIT5)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT5;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT5 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end


      if (VSOSCR01.SOCD-SZ-RSN-TXT > " ") /* check for comments*/

        if (OZ0FW00.OZ0FW-IXM > 1
         && OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM] > " ")
          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
        end

        OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM] = VSOSCR01.SOCD-SZ-RSN-TXT;

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
      end

      if (OZ0FW00.OZ0FW-IXM > 12)
        OZ0F-61340(); /* write page to temp storage*/
        OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
        OZ0FW00.OZ0FW-IXM = 1;
      end

    end
  end

  OZ0F-61357(); /* close vsoscr01 cursor*/
end // end OZ0F-61336


// logic for 3rd need date
Function OZ0F-61338()
  /* --------------------------------------------------------------------*/
  /* read header changes first*/
  /* --------------------------------------------------------------------*/
  set VSOHCR01 empty;

  VSOHCR01.OP1CUOID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  VSOHCR01.OP1NORID = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[4];
  VSOHCR01.SOCD-APPL-SRC-CD = "OP";

  OZ0F-61350(); /* open vsohcr01 cursor*/

  OZ0FW00.OZ0FW-SWC = "N";
  while (OZ0FW00.OZ0FW-SWC == "N")

    OZ0F-61352(); /* fetch vsohcr01*/

    if (SQLCA.VAGen_SQLCODE == +100)
      OZ0FW00.OZ0FW-SWC = "Y";
    else
      if (VSOHCR01.OP1CUNDT > 0)

        set VSOCRC01 empty;

        VSOCRC01.XOMCD = VSOHCR01.XOMCD;
        OZ0F-61359(); /* read vsocrc01*/

        OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;

        OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOHCR01.XOMCD;
        OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "NEED DATE";

        OZ0FW00.OZ0FW-DATE-BRK = VSOHCR01.OP1CUNDT;
        OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
        OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
        OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
        OZ0FW00.OZ0FW-DM-DASH1 = "-";
        OZ0FW00.OZ0FW-DM-DASH2 = "-";
        OZ0FW06.OZ0FW-VALUE-FLD[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

        OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOHCR01.XXX-USER-ID;

        OZ0FW00.OZ0FW-DATE-BRK = VSOHCR01.ZZZCHGDT;
        OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
        OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
        OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
        OZ0FW00.OZ0FW-DM-DASH1 = "-";
        OZ0FW00.OZ0FW-DM-DASH2 = "-";
        OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

        OZ0FW00.OZ0FW-TIME-BRK = VSOHCR01.ZZZCHGTM;
        OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
        OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
        OZ0FW00.OZ0FW-TM-CL = ":";
        OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


        if (VSOHCR01.SOCD-HDR-RSN-TXT > " ")
          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
          OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM] = VSOHCR01.SOCD-HDR-RSN-TXT;
        end

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end
    end
  end

  OZ0F-61354(); /* close vsohcr01 cursor*/

  /* --------------------------------------------------------------------*/
  /* start size reads*/
  /* --------------------------------------------------------------------*/
  set VOCSIZ01 empty;

  VOCSIZ01.OP1CUOID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  VOCSIZ01.OP1NORID = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[4];
  VOCSIZ01.OP2LNINB = OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR[4];
  VOCSIZ01.SOCD-APPL-SRC-CD = "OP";
  VOCSIZ01.OP-SZ-GRP-SEQ = OZ0FW05A.OZ0FW-GRP-SEQ[OZ0FW-SV-CNT];

  OZ0F-61358(); /* read vocsiz01*/


  set VSOSCR01 empty;

  VSOSCR01.OP-CUST-ORD-ID = OZ0FW00.OZ0FW-M5-OP-CUST-ORD-ID;
  VSOSCR01.OP-NIKE-ORD-ID = OZ0FW00.OZ0FW-M5-OP-NIKE-ORD-ID[4];
  VSOSCR01.OP-LINE-ITEM-NBR = OZ0FW00.OZ0FW-M5-LINE-ITEM-NBR[4];
  VSOSCR01.SOCD-APPL-SRC-CD = "OP";
  VSOSCR01.OP-SZ-GRP-SEQ = OZ0FW05A.OZ0FW-GRP-SEQ[OZ0FW-SV-CNT];

  OZ0F-61355(); /* open vsoscr01 cursor*/

  OZ0FW00.OZ0FW-SWC = "N";

  while (OZ0FW00.OZ0FW-SWC == "N")

    OZ0F-61356(); /* fetch vsoscr01*/

    if (SQLCA.VAGen_SQLCODE == +100)
      OZ0FW00.OZ0FW-SWC = "Y";
    else

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 1)

        if (VSOSCR01.OP-ON-ORD-QTY1 != VOCSIZ01.OP-ORIG-ORD-QTY1)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY1;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY1 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;

          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT1 != VOCSIZ01.SY-PRC-PER-UNIT1)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT1;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT1 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 2)

        if (VSOSCR01.OP-ON-ORD-QTY2 != VOCSIZ01.OP-ORIG-ORD-QTY2)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY2;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY2 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT2 != VOCSIZ01.SY-PRC-PER-UNIT2)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT2;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT2 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 3)

        if (VSOSCR01.OP-ON-ORD-QTY3 != VOCSIZ01.OP-ORIG-ORD-QTY3)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY3;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY3 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT3 != VOCSIZ01.SY-PRC-PER-UNIT3)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT3;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT3 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 4)

        if (VSOSCR01.OP-ON-ORD-QTY4 != VOCSIZ01.OP-ORIG-ORD-QTY4)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY4;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY4 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT4 != VOCSIZ01.SY-PRC-PER-UNIT4)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT4;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT4 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end

      if (OZ0FW05A.OZ0FW-QTY-SEQ[OZ0FW-SV-CNT] == 5)

        if (VSOSCR01.OP-ON-ORD-QTY5 != VOCSIZ01.OP-ORIG-ORD-QTY5)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM QTY";

          OZ0FW00.OZ0FW-SV-NUM = VSOSCR01.OP-ON-ORD-QTY5;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-NUM;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-FIELD;
  /* MOVE VSOSCR01.OP-ON-ORD-QTY5 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

        if (VSOSCR01.SY-PRC-PER-UNIT5 != VOCSIZ01.SY-PRC-PER-UNIT5)

          VSOCRC01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0F-61359(); /* read vsocrc01*/
          OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM] = VSOCRC01.SOCD-CUST-RPT-FL;
          OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM] = VSOSCR01.XOM-ORD-MNTN-CD;
          OZ0FW06.OZ0FW-CHANGE-FLD[OZ0FW-IXM] = "ITEM VALUE";
          OZ0FW00.OZ0FW-SV-DEC = VSOSCR01.SY-PRC-PER-UNIT5;
          OZ0FW00.OZ0FW-VALUE-FIELD = OZ0FW00.OZ0FW-SV-DEC-INT;

          OZ0FW00.OZ0FW-IDX = 1;
          while (OZ0FW00.OZ0FW-IDX < 11
           && OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] == 0)
            OZ0FW00.OZ0FW-VALUE-BRK[OZ0FW-IDX] = " ";
            OZ0FW00.OZ0FW-IDX = OZ0FW00.OZ0FW-IDX + 1;
          end

          OZ0FW00.OZ0FW-VB-INT = OZ0FW00.OZ0FW-VALUE-FIELD;
          OZ0FW00.OZ0FW-VB-DOT = ".";
          OZ0FW00.OZ0FW-VB-DEC = OZ0FW00.OZ0FW-SV-DECIMAL;

          OZ0FW06.OZ0FW-VALUE-FLD-CHA[OZ0FW-IXM] = OZ0FW00.OZ0FW-VALUE-BUILD;

  /* MOVE VSOSCR01.SY-PRC-PER-UNIT5 TO*/
  /* OZ0FW06.OZ0FW-VALUE-FLD-NUM(OZ0FW-IXM);*/
          OZ0FW06.OZ0FW-USERID[OZ0FW-IXM] = VSOSCR01.XXX-USER-ID;

          OZ0FW00.OZ0FW-DATE-BRK = VSOSCR01.ZZZCHGDT;
          OZ0FW00.OZ0FW-DM-YY = OZ0FW00.OZ0FW-DB-YY;
          OZ0FW00.OZ0FW-DM-MM = OZ0FW00.OZ0FW-DB-MM;
          OZ0FW00.OZ0FW-DM-DD = OZ0FW00.OZ0FW-DB-DD;
          OZ0FW00.OZ0FW-DM-DASH1 = "-";
          OZ0FW00.OZ0FW-DM-DASH2 = "-";
          OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM] = OZ0FW00.OZ0FW-DATE-MK;

          OZ0FW00.OZ0FW-TIME-BRK = VSOSCR01.ZZZCHGTM;
          OZ0FW00.OZ0FW-TM-HH = OZ0FW00.OZ0FW-TB-HH;
          OZ0FW00.OZ0FW-TM-MM = OZ0FW00.OZ0FW-TB-MM;
          OZ0FW00.OZ0FW-TM-CL = ":";
          OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM] = OZ0FW00.OZ0FW-TIME-MK;


          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;

        end

        if (OZ0FW00.OZ0FW-IXM >= 12)
          OZ0F-61340(); /* write page to temp storage*/
          OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
          OZ0FW00.OZ0FW-IXM = 1;
        end

      end


      if (VSOSCR01.SOCD-SZ-RSN-TXT > " ") /* check for comments*/

        if (OZ0FW00.OZ0FW-IXM > 1
         && OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM] > " ")
          OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
        end

        OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM] = VSOSCR01.SOCD-SZ-RSN-TXT;

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
      end

      if (OZ0FW00.OZ0FW-IXM > 12)
        OZ0F-61340(); /* write page to temp storage*/
        OZ0FW06.OZ0FW-SIZE-DTL = OZ0FW00.OZ0FW-M6-SIZE-DTL;
        OZ0FW00.OZ0FW-IXM = 1;
      end

    end
  end

  OZ0F-61357(); /* close vsoscr01 cursor*/
end // end OZ0F-61338


// Add page to temporary storage
Function OZ0F-61340()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OZ0FW06.XXXTSLEN = OZ0FW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ7F"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OZ0FW06, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OZ0FW06 empty; /* M001 display storage*/

    OZ0FW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "61340"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M006"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-61340


// open vsorcr01 cursor
Function OZ0F-61350()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  try
    call "VSOHCR01" ("S3", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "61350"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOHCR01.VSOHCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-61350


// fetch vsorcr01 cursor
Function OZ0F-61352()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  try
    call "VSOHCR01" ("N3", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "61352"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOHCR01.VSOHCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-61352


// close vsohcr01 cursor
Function OZ0F-61354()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  try
    call "VSOHCR01" ("C3", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "61350"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE CURSOR       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOHCR01.VSOHCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-61354


// open vsoscr01 cursor
Function OZ0F-61355()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  try
    call "VSOSCR01" ("S2", SQLCA, VSOSCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or no records found*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "61355"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOSCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOSCR01.VSOSCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-61355


// fetch vsoscr01 cursor
Function OZ0F-61356()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  try
    call "VSOSCR01" ("N2", SQLCA, VSOSCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100)

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "61356"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOSCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOSCR01.VSOSCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-61356


// close vsoscr01 cursor
Function OZ0F-61357()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  try
    call "VSOSCR01" ("C2", SQLCA, VSOSCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "61357"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOSCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOSCR01.VSOSCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-61357


// read vocsiz01
Function OZ0F-61358()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  try
    call "VOCSIZ01" ("S ", SQLCA, VOCSIZ01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or no record found*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "61358"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCSIZ01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCSIZ01.VOCSIZ01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-61358


// read vsocrc01
Function OZ0F-61359()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  try
    call "VSOCRC01" ("S ", SQLCA, VSOCRC01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or no record found*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "61359"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOCRC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOCRC01.VSOCRC01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-61359


// Format and converse the map
Function OZ0F-62000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0FW00.OZ0FW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OZ0FW00.OZ0FW-SWF == "Y") /* Map must be formatted*/
                                   /* save header info*/
      OZ0FW00.OZ0FW-M2-CUST-STR-DPT = OZ0FM006.OZ0FM-CUST-STR-DPT;
      OZ0FW00.OZ0FW-M2-CU-CO-NM-HDR = OZ0FM006.OZ0FM-CU-CO-NM-HDR;
      OZ0FW00.OZ0FW-M5-STYLE-CLR-DIM = OZ0FM006.OZ0FM-STYLE-CLR-DIM;
      OZ0FW00.OZ0FW-M5-SY-STY-COLOR-ABRV = OZ0FM006.OZ0FM-SY-STY-COLOR-ABRV;
      OZ0FW00.OZ0FW-M5-COLOR-NAME = OZ0FM006.OZ0FM-COLOR-NAME;

      OZ0F-62100(); /* Format the data on the map*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZ0FM006.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OZ0FM006.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0FM006.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OZWREC.XXXMSGNO != 0) /* Message to display*/

      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0FM006.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OZ0FM006.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/

    set OZ0FM006 alarm; /* Indicate sound alarm*/

  end

  converse OZ0FM006 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = OZ0FM006.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0FM006.CAITEM; /* Application data*/

end // end OZ0F-62000


// Format the display data
Function OZ0F-62100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set OZ0FM006 initial;

  OZ0FW00.OZ0FW-SWF = "N"; /* Format the map switch*/

  /* ------------------------------------------------------------*/
  /* If a ruling was added, get the page from temp storage that the*/
  /* ruling's on and display it.*/
  /* ------------------------------------------------------------*/

  if (OZ0FW00.OZ0FW-SAVE-PAGE != 0) /* if page saved off*/

    OZ0FW00.XXXTSPAG = OZ0FW00.OZ0FW-SAVE-PAGE; /* use saved page*/

    OZ0F-62110(); /* Obtain temporary storage page*/

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set OZ0FM006.XXXLITPG skip; /* "PAGE" literal*/
    OZ0FM006.XXXTSPAG = OZ0FW00.XXXTSPAG; /* Current page*/
    set OZ0FM006.XXXLITOF skip; /* "OF" literal*/
    OZ0FM006.TA5TSQIX = OZ0FW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
    OZ0FW00.OZ0FW-IXM = 1; /* Initialize map index*/
    while (OZ0FW00.OZ0FW-IXM < 13) /* Until screen is full*/

      OZ0FM006.OZ0FM-RPT-FL[OZ0FW-IXM] = OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM];

      OZ0FM006.OZ0FM-XOMCD[OZ0FW-IXM] = OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM];

      OZ0FM006.OZ0FM-COMMENT[OZ0FW-IXM] = OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM];

      OZ0FM006.OZ0FM-USERID[OZ0FW-IXM] = OZ0FW06.OZ0FW-USERID[OZ0FW-IXM];

      OZ0FM006.OZ0FM-CHGDT[OZ0FW-IXM] = OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM];

      OZ0FM006.OZ0FM-CHGTM[OZ0FW-IXM] = OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM];

      OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
                                   /* Increment map index*/

    end

  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/

  else
    if (OZ0FW00.TA5TSQIX > 0) /* Pages were formatted*/

      if (OZ0FW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/

        if (OZ0FW00.OZ0FW-SWU == "Y") /* Current page was changed*/

          OZ0F-62120(); /* Update temporary storage page*/

          OZ0FW00.OZ0FW-SWU = "N"; /* Storage update switch*/

        end

        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/

        if (OZ0FW00.XXXTSPAG > OZ0FW00.TA5TSQIX) /* Desired greater highest*/
          OZ0FW00.XXXTSPAG = OZ0FW00.TA5TSQIX; /* Default to highest*/
        end

        OZ0F-62110(); /* Obtain temporary storage page*/

      end

      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/

      set OZ0FM006.XXXLITPG skip; /* "PAGE" literal*/
      OZ0FM006.XXXTSPAG = OZ0FW00.XXXTSPAG; /* Current page*/
      set OZ0FM006.XXXLITOF skip; /* "OF" literal*/
      OZ0FM006.TA5TSQIX = OZ0FW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
      OZ0FW00.OZ0FW-IXM = 1; /* Initialize map index*/
      while (OZ0FW00.OZ0FW-IXM < 13) /* Until screen is full*/

        OZ0FM006.OZ0FM-RPT-FL[OZ0FW-IXM] = OZ0FW06.OZ0FW-RPT-FL[OZ0FW-IXM];

        OZ0FM006.OZ0FM-XOMCD[OZ0FW-IXM] = OZ0FW06.OZ0FW-XOMCD[OZ0FW-IXM];

        OZ0FM006.OZ0FM-COMMENT[OZ0FW-IXM] = OZ0FW06.OZ0FW-CMNT[OZ0FW-IXM];

        OZ0FM006.OZ0FM-USERID[OZ0FW-IXM] = OZ0FW06.OZ0FW-USERID[OZ0FW-IXM];

        OZ0FM006.OZ0FM-CHGDT[OZ0FW-IXM] = OZ0FW06.OZ0FW-CHGDT[OZ0FW-IXM];

        OZ0FM006.OZ0FM-CHGTM[OZ0FW-IXM] = OZ0FW06.OZ0FW-CHGTM[OZ0FW-IXM];

        OZ0FW00.OZ0FW-IXM = OZ0FW00.OZ0FW-IXM + 1;
                                   /* Increment map index*/

      end

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/

  OZ0FM006.OZ0FM-CUST-STR-DPT = OZ0FW00.OZ0FW-M2-CUST-STR-DPT;
  OZ0FM006.OZ0FM-CU-CO-NM-HDR = OZ0FW00.OZ0FW-M2-CU-CO-NM-HDR;
  OZ0FM006.OZ0FM-STYLE-CLR-DIM = OZ0FW00.OZ0FW-M5-STYLE-CLR-DIM;
  OZ0FM006.OZ0FM-SY-STY-COLOR-ABRV = OZ0FW00.OZ0FW-M5-SY-STY-COLOR-ABRV;
  OZ0FM006.OZ0FM-COLOR-NAME = OZ0FW00.OZ0FW-M5-COLOR-NAME;

  OZ0FW00.OZ0FW-ND-MM = OZ0FW00.OZ0FW-M5-OOND-MM;
  OZ0FW00.OZ0FW-ND-SLASH = "/";
  OZ0FW00.OZ0FW-ND-DD = OZ0FW00.OZ0FW-M5-OOND-DD;
  OZ0FM006.OZ0FM-OP-ORIG-NEED-DT = OZ0FW00.OZ0FW-NEED-DATE;

  OZ0FM006.OZ0FM-SIZE = OZ0FW06.OZ0FW-SIZE;
  OZ0FM006.OZ0FM-TOT-REQ-QTY = OZ0FW06.OZ0FW-REQ-QTY;
  OZ0FM006.OZ0FM-ORIG-VALUE = OZ0FW06.OZ0FW-ORIG-PRICE;
  OZ0FM006.OZ0FM-CURR-VALUE = OZ0FW06.OZ0FW-CURR-PRICE;

  /* IF OZ0FW06.OZ0FW-AVAIL-QTY-1 > 0;*/
  if (OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT[1] > 0)
    OZ0FM006.OZ0FM-AVAIL-TOT-QTY-1 = OZ0FW06.OZ0FW-AVAIL-QTY-1;
    OZ0FM006.OZ0FM-AVAIL-HDR[1] = "AVAIL";
    OZ0FW00.OZ0FW-ND-MM = OZ0FW00.OZ0FW-M5-OCND-MM[1];
    OZ0FW00.OZ0FW-ND-SLASH = "/";
    OZ0FW00.OZ0FW-ND-DD = OZ0FW00.OZ0FW-M5-OCND-DD[1];
    OZ0FM006.OZ0FM-OP-CUST-NEED-DT[1] = OZ0FW00.OZ0FW-NEED-DATE;
  end

  /* IF OZ0FW06.OZ0FW-AVAIL-QTY-2 > 0;*/
  if (OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT[2] > 0)
    OZ0FM006.OZ0FM-AVAIL-TOT-QTY-2 = OZ0FW06.OZ0FW-AVAIL-QTY-2;
    OZ0FM006.OZ0FM-AVAIL-HDR[2] = "AVAIL";
    OZ0FW00.OZ0FW-ND-MM = OZ0FW00.OZ0FW-M5-OCND-MM[2];
    OZ0FW00.OZ0FW-ND-SLASH = "/";
    OZ0FW00.OZ0FW-ND-DD = OZ0FW00.OZ0FW-M5-OCND-DD[2];
    OZ0FM006.OZ0FM-OP-CUST-NEED-DT[2] = OZ0FW00.OZ0FW-NEED-DATE;
  end

  /* OZ0FW00.OZ0FW-SV-TOT-AVAIL-3 > 0;*/
  /* IF OZ0FW06.OZ0FW-AVAIL-QTY-3 > 0;*/
  if (OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT[3] > 0)
    OZ0FM006.OZ0FM-AVAIL-TOT-QTY-3 = OZ0FW06.OZ0FW-AVAIL-QTY-3;
    OZ0FM006.OZ0FM-AVAIL-HDR[3] = "AVAIL";
    OZ0FW00.OZ0FW-ND-MM = OZ0FW00.OZ0FW-M5-OCND-MM[3];
    OZ0FW00.OZ0FW-ND-SLASH = "/";
    OZ0FW00.OZ0FW-ND-DD = OZ0FW00.OZ0FW-M5-OCND-DD[3];
    OZ0FM006.OZ0FM-OP-CUST-NEED-DT[3] = OZ0FW00.OZ0FW-NEED-DATE;
  end

  /* IF OZ0FW06.OZ0FW-AVAIL-QTY-4 > 0;*/
  if (OZ0FW00.OZ0FW-M5-OP-CUST-NEED-DT[4] > 0)
    OZ0FM006.OZ0FM-AVAIL-TOT-QTY-4 = OZ0FW06.OZ0FW-AVAIL-QTY-4;
    OZ0FM006.OZ0FM-AVAIL-HDR[4] = "AVAIL";
    OZ0FW00.OZ0FW-ND-MM = OZ0FW00.OZ0FW-M5-OCND-MM[4];
    OZ0FW00.OZ0FW-ND-SLASH = "/";
    OZ0FW00.OZ0FW-ND-DD = OZ0FW00.OZ0FW-M5-OCND-DD[4];
    OZ0FM006.OZ0FM-OP-CUST-NEED-DT[4] = OZ0FW00.OZ0FW-NEED-DATE;
  end


  /*  */
end // end OZ0F-62100


// Read temporary storage page
Function OZ0F-62110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OZ0FW06.XXXTSLEN = OZ0FW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ7F"; /* Application identification*/
  TA5REC.TA5TSQIX = OZ0FW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OZ0FW06, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "62110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M006"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-62110


// Update temporary storage page
Function OZ0F-62120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (OZ0FW06, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "62120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M006"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0F-62120


// Check attention identifier
Function OZ0F-63000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0FW00.OZ0FW-SWR == "Y") /* Request for data*/
      set OZ0FW06 empty; /* m003 display storage*/
    end

    OZ0FW00.OZ0FW-SWF = "Y"; /* Format the map switch*/
    OZ0FW00.OZ0FW-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/

  if (OZ0FM006.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      OZ0F-61100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0FM006.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "63000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    OZ0F-60000(); /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      OZ0FW00.OZ0FW-SWR = "Y";
      OZ0FW00.OZ0FW-SWF = "Y";
      OZ0FW00.XXXTSPAG = 1; /* reset ts page counter*/
      OZ0F-50000();
    end

    if (converseVar.eventKey is pf4) /* PF3 was pressed*/
      COMMAREA.CATOAP = "OZ0A"; /* TO application*/
    end

    OZ0F-61100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    OZ0F-60000(); /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   /* and PF1 was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf15  /* and PF15 was not pressed*/
   && converseVar.eventKey not pf23  /* and PF23 was not pressed*/
  )                                 
    OZWREC.XXXPRCNM = "63000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    OZ0F-60000(); /* Exit to display map*/

  end
   /* ------------------------------------------------------------*/
   /*  */
   /* ------------------------------------------------------------*/


  if (converseVar.eventKey is pf15) /* pf15 pressed*/

    OZ0FW00.OZ0FW-SWR = "Y"; /* to pull up data on m006*/
    OZ0FW00.OZ0FW-SWF = "Y"; /* to pull up data on m006*/
    OZ0FW00.XXXTSPAG = 1; /* reset ts page counter*/
    OZ0F-50000();

  end


  if (converseVar.eventKey is enter)
    OZ0F-60000();

  end
end // end OZ0F-63000


// Reset highlighted fields
Function OZ0F-64000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/


  set OZ0FM006.CATOAP initialAttributes; /* TO application*/
  set OZ0FM006.CAITEM initialAttributes; /* Application data*/


end // end OZ0F-64000


// Verify data that was entered
Function OZ0F-65000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (OZ0FM006.CAITEM > " ") /* Application data was entered*/

    OZWREC.XXXPRCNM = "65000"; /* Module identification*/
    set OZ0FM006.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    OZ0F-65100(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the line.*/
    /* ------------------------------------------------------------*/

    if (converseVar.eventKey is enter) /* Enter was pressed*/
      return;

    end

  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    OZ0F-60000(); /* Exit to display map*/
  end


end // end OZ0F-65000


// Verify scroll request
Function OZ0F-65100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OZ0FW00.XXXTSPAG < 2)       /* and no previous pages*/

    OZWREC.XXXPRCNM = "65100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OZ0FW00.XXXTSPAG >= OZ0FW00.TA5TSQIX) /* and no more pages*/

    OZWREC.XXXPRCNM = "65100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end


end // end OZ0F-65100


// Process valid input request
Function OZ0F-66000()
  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display*/
  /* ------------------------------------------------------------*/

  OZ0FW00.OZ0FW-SWF = "Y"; /* format the map switch*/



  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    OZ0FW00.XXXTSPAG = OZ0FW00.XXXTSPAG - 1; /* Decrement page number*/

    OZ0F-60000(); /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    OZ0FW00.XXXTSPAG = OZ0FW00.XXXTSPAG + 1; /* Increment page number*/

    OZ0F-60000(); /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter) /* enter pressed*/

    OZ0FW00.OZ0FW-SWF = "Y"; /* Format the map switch*/
    OZ0F-60000(); /* Return to previous process*/
  end

  /* ------------------------------------------------------------*/
  /* Save the select fields and clear the map input/output area.*/
  /* ------------------------------------------------------------*/


  if (converseVar.eventKey is pf15) /* pf15*/

    OZ0FW00.OZ0FW-IXM = 1; /* Initialize line index*/
    OZ0FW00.OZ0FW-SWU = "N"; /* reset switch*/

  end


end // end OZ0F-66000


// get valid colors for a product
Function XP0R001()
   /* *************************************************************/
    /* ***  THE FOLLOWING MUST BE ADDED TO THE HOST APPLICATION*/
    /* ***  FOR THIS MODULE TO EXECUTE SUCCESSFULLY*/
           /* ADD TO RECORDS LIST:*/
               /* vsohcr01*/
               /* vsoscr01*/
               /* vsocrc01*/
               /* xp0rw00*/
               /* xp0rw01*/
           /* ADD TO MAP GROUP:*/
               /* xp0rM001*/
   /* *************************************************************/

    /* PROCESS SYNOPSIS:*/
    /* 1. select and load table with valid sales program id's.*/
    /* 2. move table values to popup window map and converse*/
       /* popup window map.*/
   /* ------------------------------------------------------------*/

  XP0R003(); /* popup window initialization*/
  XP0RW00.XP0RWHDR = "          CHANGE REASON DESCRIPTIONS          "; /* popup window heading*/

  XP0RW00.XP0RWERR = "N"; /* set db2 error flag to no*/
  XP0RS01(); /* select set and load table with valid*/
                                   /* colors*/

  if (XP0RW00.XP0RWERR == "Y") /* if db2 error*/
    return;
  end

  while (XP0RW00.XP0RWEND == "N") /* until end of request*/
    XP0R012(); /* display table values on popup map*/
  end

  converseLib.clearScreen();
  
end // end XP0R001


// Select set and open cursor
Function XP0R002()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  set VSOHCR01 empty;

  VSOHCR01.OP1CUOID = XP0RW00.XP0RW-CUST-ORD-ID[XP0RW-CNT];
  VSOHCR01.OP1NORID = XP0RW00.XP0RW-NIKE-ORD-ID[XP0RW-CNT];
  if (OZ0FW00.OZ0FW-M5-COLOR-NAME == "CANCELLED")
    VSOHCR01.SOCD-APPL-SRC-CD = "OB";
  else
    VSOHCR01.SOCD-APPL-SRC-CD = "OP";
  end

  try
    call "VSOHCR01" ("S3", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "XP0R"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF VSOHCR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOHCR01.VSOHCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  OZ0F-50000(); /* Exit to display map*/


end // end XP0R002


// Initialization - pop up window
Function XP0R003()
   /* ------------------------------------------------------------*/

           /* INITIALIZATION PROCESS FOR POP UP WINDOWS*/

      /* Initialize fields on map and in working storage.*/

   /* ------------------------------------------------------------*/

     /* ***********************************************/
     /* ******  Initialize appropriate fields   *******/
     /* ***********************************************/

  set XP0RM001 initial; /* Clear the map area*/
  set XP0RW01 empty; /* clear working storage*/
  XP0RW00.XP0RWCT1 = 1; /* Table index*/
  XP0RW00.XP0RWCT2 = 1; /* Screen index*/
  XP0RW00.XP0RWSIX = 0; /* End of first page save index*/
  XP0RW00.XP0RWPIX = 0; /* Initialize pass index to zero*/
  XP0RW00.XP0RWFFL = "Y"; /* first time thru flag*/
  XP0RW00.XP0RWERR = "N"; /* Scroll error flag to no*/
  XP0RW00.XP0RWEND = "N"; /* End of pop up window session flag*/

end // end XP0R003


// Purge any temporary storage
Function XP0R005()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/

  set XP0RW01 empty; /* M001 display storage*/

  XP0RW00.XP0RW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  XP0RW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "XP0R"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (XP0RW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "P005 "; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = "XP0R"; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = "XP0R"; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end XP0R005


// Select set and open cursor
Function XP0R006()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VSOHCR01" ("N3", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
        XP0RW00.XP0RW-SWC = "Y";
        return; /* Return to previous process*/
      end
    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "XP0R"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH VSOHCR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOHCR01.VSOHCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  OZ0F-50000(); /* Exit to display map*/


end // end XP0R006


// Save data in display storage
Function XP0R007()
  XP0R011(); /* read vsocrc01 for change desc*/

  XP0RW00.XP0RW-FND = "N";
  XP0RW00.XP0RW-IX2 = 1;

  while (XP0RW00.XP0RW-IX2 < 501
   && XP0RW00.XP0RW-FND == "N"
   && XP0RW00.XP0RW-WS-XOMCD[XP0RW-IX2] > "  ")

    if (VSOHCR01.XOMCD == XP0RW00.XP0RW-WS-XOMCD[XP0RW-IX2]
     && VSOHCR01.SOCD-HDR-RSN-TXT == 
    XP0RW00.XP0RW-WS-COMMENT[XP0RW-IX2])
      XP0RW00.XP0RW-FND = "Y";
      XP0RW00.XP0RW-IX2 = 501;
    end

    XP0RW-IX2 = XP0RW-IX2 + 1;
  end

  if (XP0RW00.XP0RW-FND == "N")

    XP0RW00.XP0RW-WS-XOMCD[XP0RW-IX1] = VSOHCR01.XOMCD;
    XP0RW00.XP0RW-WS-COMMENT[XP0RW-IX1] = VSOHCR01.SOCD-HDR-RSN-TXT;

    XP0RW01.XP0RW-XOMCD[XP0RW-IXM] = VSOHCR01.XOMCD;
    XP0RW01.XP0RW-DASH[XP0RW-IXM] = "-";
    XP0RW01.XP0RW-COMMENT[XP0RW-IXM] = VSOCRC01.SOCD-CHNG-RSN-DESC;

    if (VSOHCR01.SOCD-HDR-RSN-TXT > " ")
      XP0RW-IXM = XP0RW-IXM + 1;
      XP0RW01.XP0RW-XOMCD[XP0RW-IXM] = "  ";
      XP0RW01.XP0RW-DASH[XP0RW-IXM] = " ";
      XP0RW01.XP0RW-COMMENT[XP0RW-IXM] = VSOHCR01.SOCD-HDR-RSN-TXT;
    end

    XP0RW-IXM = XP0RW-IXM + 1;
    XP0RW-IX1 = XP0RW-IX1 + 1;

  end
end // end XP0R007


// Add page to temporary storage
Function XP0R008()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  XP0RW01.XXXTSLEN = XP0RW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "XP0R"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (XP0RW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set XP0RW01 empty; /* M001 display storage*/

    XP0RW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "P008 "; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = "XP0R"; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = "XP0R"; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end XP0R008


// empty m3 work table
Function XP0R009()
  XP0RW00.XP0RW-NO-HDR = " ";
  XP0RW00.XP0RW-NO-ITM = " ";

  XP0RW00.XP0RW-IX1 = 1;

  while (XP0RW00.XP0RW-IX1 < 501)
    XP0RW00.XP0RW-WS-XOMCD[XP0RW-IX1] = "  ";
    XP0RW00.XP0RW-WS-COMMENT[XP0RW-IX1] = "  ";
    XP0RW00.XP0RW-IX1 = XP0RW00.XP0RW-IX1 + 1;
  end
end // end XP0R009


// Close selected set cursor
Function XP0R010()
  /* ------------------------------------------------------------*/
  /* Close the selected set of table rows.*/
  /* ------------------------------------------------------------*/

  try
    call "VSOHCR01" ("C3", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "XP0R"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/

  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* Error diagnosis routine*/

  OZ0F-50000(); /* Exit to display map*/


end // end XP0R010


// Select set and open cursor
Function XP0R011()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  set VSOCRC01 empty;

  VSOCRC01.XOMCD = VSOHCR01.XOMCD;

  try
    call "VSOCRC01" ("S ", SQLCA, VSOCRC01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "XP0R"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT ROW FROM VSOCRC01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOCRC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOCRC01.VSOCRC01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  OZ0F-50000(); /* Exit to display map*/


end // end XP0R011


// converse popup valid colors
Function XP0R012()
   /* ------------------------------------------------------------*/

    /* CONVERSE POP UP WINDOW FOR valid style colors*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

      /* Note that the values for the pop-up screen will come*/
       /* from a temporary working storage table and not from*/
       /* a CSP table as normally would be.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XP0RW00.XP0RWERR == "N") /* If error flag not yes*/

    set XP0RM001 initial; /* Clear map output area*/
    XP0RM001.XP0RMHDR = XP0RW00.XP0RWHDR; /* Place heading on map*/
    XP0RM001.XP0RMTR1 = "                                      ";
    XP0RM001.XP0RMTR2 = "   PF3:END      PF7:BACK      PF8:FRWD";

    XP0R013(); /* retrieve temp storage*/

    XP0RW00.XP0RWCT1 = 1; /* Set up screen index*/

    while (XP0RW00.XP0RWCT1 < 11) /* Until end of screen lines*/
      XP0RM001.XP0RM-CODE[XP0RWCT1] = XP0RW01.XP0RW-XOMCD[XP0RWCT1];
      XP0RM001.XP0RM-DASH[XP0RWCT1] = XP0RW01.XP0RW-DASH[XP0RWCT1];
      XP0RM001.XP0RM-COMMENT[XP0RWCT1] = XP0RW01.XP0RW-COMMENT[XP0RWCT1];

      XP0RW00.XP0RWCT1 = XP0RW00.XP0RWCT1 + 1; /* Increment table index*/

    end

    XP0RW00.XP0RWFFL = "N"; /* Set first time flag to no*/

  end

  converse XP0RM001 ;

  XP0RW00.XP0RWERR = "N"; /* Reset error flag*/

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8) /* If PF8 pressed*/
    XP0RW00.XXXTSPAG = XP0RW00.XXXTSPAG + 1;
    if (XP0RW00.XXXTSPAG > XP0RW00.TA5TSQIX) /* Desired greater highest*/
      XP0RW00.XXXTSPAG = XP0RW00.TA5TSQIX; /* Default to highest*/
    end
    return;
  else
    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XP0RW00.XXXTSPAG = XP0RW00.XXXTSPAG - 1;
      if (XP0RW00.XXXTSPAG == 0)
        XP0RW00.XXXTSPAG = 1;
      end
      return;
    else
      if (converseVar.eventKey is enter /* If enter pressed*/
       || converseVar.eventKey is pf3)  /* If pf3 pressed*/
        XP0RW00.XP0RWEND = "Y"; /* Set end flag*/
        return;

      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not pf3 
         && converseVar.eventKey not enter)
          XP0RW00.XP0RWERR = "Y"; /* set error flag*/
        end
      end
    end
  end

end // end XP0R012


// Read temporary storage page
Function XP0R013()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  XP0RW01.XXXTSLEN = XP0RW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "XP0R"; /* Application identification*/
  TA5REC.TA5TSQIX = XP0RW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (XP0RW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "013  "; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = "XP0R"; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = "XP0R"; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  OZ0F-50000(); /* Exit to display map*/


end // end XP0R013


// Select set and open cursor
Function XP0R014()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  set VSOSCR01 empty;

  VSOSCR01.OP-CUST-ORD-ID = XP0RW00.XP0RW-CUST-ORD-ID[XP0RW-CNT];
  VSOSCR01.OP-NIKE-ORD-ID = XP0RW00.XP0RW-NIKE-ORD-ID[XP0RW-CNT];
  VSOSCR01.OP-LINE-ITEM-NBR = XP0RW00.XP0RW-LINE-ITEM-NBR[XP0RW-CNT];
  if (OZ0FW00.OZ0FW-M5-COLOR-NAME == "CANCELLED")
    VSOSCR01.SOCD-APPL-SRC-CD = "OB";
  else
    VSOSCR01.SOCD-APPL-SRC-CD = "OP";
  end

  try
    call "VSOSCR01" ("S3", SQLCA, VSOSCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "XP0R"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF VSOHCR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOSCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOSCR01.VSOSCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  OZ0F-50000(); /* Exit to display map*/


end // end XP0R014


// Select set and open cursor
Function XP0R015()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VSOSCR01" ("N3", SQLCA, VSOSCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      VSOHCR01.XOMCD = VSOSCR01.XOM-ORD-MNTN-CD;
      VSOHCR01.SOCD-HDR-RSN-TXT = VSOSCR01.SOCD-SZ-RSN-TXT;
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
        XP0RW00.XP0RW-SWC = "Y";
        return; /* Return to previous process*/
      end
    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "XP0R"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH VSOHCR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOSCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOSCR01.VSOSCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  OZ0F-50000(); /* Exit to display map*/


end // end XP0R015


// Close selected set cursor
Function XP0R016()
  /* ------------------------------------------------------------*/
  /* Close the selected set of table rows.*/
  /* ------------------------------------------------------------*/

  try
    call "VSOSCR01" ("C3", SQLCA, VSOSCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "XP0R"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOSCR01"; /* Table view name*/

  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* Error diagnosis routine*/

  OZ0F-50000(); /* Exit to display map*/


end // end XP0R016


// get valid colors for a product
Function XP0RS01()

  XX0XS01(); /* format ezedate*/

  XP0RW00.XXXTSLEN = 0430;

  if (XP0RW00.XXXTSPAG == 0)
    XP0RW00.XXXTSPAG = 1;
  end

  XP0R005(); /* purge temp storage*/

  XP0R009(); /* empty work table*/

  XP0RW00.XP0RW-CNT = 1;
  XP0RW00.XP0RW-IX1 = 1;

  while (XP0RW00.XP0RW-CNT < 5
   && XP0RW00.XP0RW-NIKE-ORD-ID[XP0RW-CNT] > 0)

  /* -------------------------------------------------------------------*/
  /* read for hdr change records*/
  /* -------------------------------------------------------------------*/
    XP0R002(); /* open header change cursor*/

    if (SQLCA.VAGen_SQLCODE != 0) /* error in db2 select*/
      return; /* return*/
    end

    XP0RW00.XP0RW-IXM = 1;
    XP0RW00.XP0RW-SWC = "N";

    while (XP0RW00.XP0RW-SWC == "N") /* until end of hdr cursor*/

      XP0R006(); /* fetch next row*/

      if (XP0RW00.XP0RW-SWC == "Y" && 
      XP0RW00.XP0RW-IXM == 1)
        XP0RW00.XP0RW-NO-HDR = "Y";
      end

      if (XP0RW00.XP0RW-SWC == "N" && 
      VSOHCR01.OP1CUNDT > 0)
        XP0R007(); /* save data in storage*/
      end

      if (XP0RW00.XP0RW-IXM > 10) /* page is full*/
        XP0R008(); /* add page to temp storage*/
        XP0RW00.XP0RW-IXM = 1;
      end
    end

    XP0R010(); /* close hdr cursor*/

  /* -------------------------------------------------------------------*/
  /* read for size change records*/
  /* -------------------------------------------------------------------*/
    XP0R014(); /* open size change cursor*/

    if (SQLCA.VAGen_SQLCODE != 0) /* error in db2 select*/
      return; /* return*/
    end

    XP0RW00.XP0RW-SWC = "N";

    while (XP0RW00.XP0RW-SWC == "N") /* until end of cursor*/

      XP0R015(); /* fetch next row*/

      if (XP0RW00.XP0RW-SWC == "Y" && 
      XP0RW00.XP0RW-IXM == 1)
        XP0RW00.XP0RW-NO-ITM = "Y";
      end

      if (XP0RW00.XP0RW-SWC == "N")
        XP0R007(); /* save data in storage*/
      end

      if (XP0RW00.XP0RW-IXM > 10) /* page is full*/
        XP0R008(); /* add page to temp storage*/
        XP0RW00.XP0RW-IXM = 1;
      end
    end

    XP0R016(); /* close cursor*/

    XP0RW00.XP0RW-CNT = XP0RW00.XP0RW-CNT + 1;

  end

  if (XP0RW00.XP0RW-IXM > 1) /* page was formatted*/
    XP0R008(); /* add page to temp storage*/
  end

  if (XP0RW00.XP0RW-NO-HDR == "Y" && 
  XP0RW00.XP0RW-NO-ITM == "Y")
    XP0RW00.XP0RWERR = "Y";
  end
end // end XP0RS01


//*** RECORD=OZ0FW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record OZ0FW00 type basicRecord
  10 OZ0FW-IXM OZ0FW-IXM ; 
  10 OZ0FW-IX1 OZ0FW-IX1 ; 
  10 OZ0FW-IX2 OZ0FW-IX2 ; 
  10 OZ0FW-IDX OZ0FW-IDX ; 
  10 OZ0FW-IDX1 OZ0FW-IDX1 ; 
  10 OZ0FW-M5IDX OZ0FW-M5IDX ; 
  10 OZ0FW-WKIDX OZ0FW-WKIDX ; 
  10 OZ0FW-CNT OZ0FW-CNT ; 
  10 OZ0FW-SV-CNT OZ0FW-SV-CNT ; 
  10 OZ0FW-ORD-FL OZ0FW-ORD-FL ; 
  10 OZ0FW-ORD-MATCH OZ0FW-ORD-MATCH ; 
  10 OZ0FW-SWC OZ0FW-SWC ; 
  10 OZ0FW-SWD OZ0FW-SWD ; 
  10 OZ0FW-SWF OZ0FW-SWF ; 
  10 OZ0FW-SWR OZ0FW-SWR ; 
  10 OZ0FW-SWU OZ0FW-SWU ; 
  10 OZ0FW-SFN OZ0FW-SFN ; 
  10 OZ0FW-FND OZ0FW-FND ; 
  10 OZ0FW-WRITE-FLG OZ0FW-WRITE-FLG ; 
  10 OZ0FW-WC-FLG OZ0FW-WC-FLG ; 
  10 OZ0FW-ITEM-FLG OZ0FW-ITEM-FLG ; 
  10 OZ0FW-SKIP OZ0FW-SKIP ; 
  10 OZ0FW-LOW-VALUES OZ0FW-LOW-VALUES ; 
  10 OZ0FW-SAVE-PAGE OZ0FW-SAVE-PAGE ; 
  10 OZ0FW-M1-SAVE-PAGE OZ0FW-M1-SAVE-PAGE ; 
  10 OZ0FW-M2-SAVE-PAGE OZ0FW-M2-SAVE-PAGE ; 
  10 OZ0FW-M1-TSQIX OZ0FW-M1-TSQIX ; 
  10 OZ0FW-M2-TSQIX OZ0FW-M2-TSQIX ; 
  10 OZ0FW-SAVE-STORE OZ0FW-SAVE-STORE ; 
  10 OZ0FW-CUST-BREAK OZ0FW-CUST-BREAK ; 
    15 OZ0FW-CUST-BRK OZ0FW-CUST-BRK [25] ; 
  10 OZ0FW-CSD-BREAK OZ0FW-CSD-BREAK ; 
    15 OZ0FW-CSD-BRK OZ0FW-CSD-BRK [15] ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 OZ0FW-CTL-FLD OZ0FW-CTL-FLD ; 
    15 OZ0FW-FNC OZ0FW-FNC ; 
    15 OZ0FW-SAV OZ0FW-SAV ; 
    15 OZ0FW-SAV-PAGE OZ0FW-SAV-PAGE ; 
  10 OZ0FW-TIME-BRK OZ0FW-TIME-BRK ; 
    15 OZ0FW-TB-HH OZ0FW-TB-HH ; 
    15 OZ0FW-TB-MM OZ0FW-TB-MM ; 
  10 OZ0FW-TIME-MK OZ0FW-TIME-MK ; 
    15 OZ0FW-TM-HH OZ0FW-TM-HH ; 
    15 OZ0FW-TM-CL OZ0FW-TM-CL ; 
    15 OZ0FW-TM-MM OZ0FW-TM-MM ; 
  10 OZ0FW-DATE-BRK OZ0FW-DATE-BRK ; 
    15 OZ0FW-DB-CC OZ0FW-DB-CC ; 
    15 OZ0FW-DB-YY OZ0FW-DB-YY ; 
    15 OZ0FW-DB-MM OZ0FW-DB-MM ; 
    15 OZ0FW-DB-DD OZ0FW-DB-DD ; 
  10 OZ0FW-DATE-MK OZ0FW-DATE-MK ; 
    15 OZ0FW-DM-MM OZ0FW-DM-MM ; 
    15 OZ0FW-DM-DASH1 OZ0FW-DM-DASH1 ; 
    15 OZ0FW-DM-DD OZ0FW-DM-DD ; 
    15 OZ0FW-DM-DASH2 OZ0FW-DM-DASH2 ; 
    15 OZ0FW-DM-YY OZ0FW-DM-YY ; 
  10 OZ0FW-NEED-DATE OZ0FW-NEED-DATE ; 
    15 OZ0FW-ND-MM OZ0FW-ND-MM ; 
    15 OZ0FW-ND-SLASH OZ0FW-ND-SLASH ; 
    15 OZ0FW-ND-DD OZ0FW-ND-DD ; 
  10 OZ0FW-SV-CHG-FLD OZ0FW-SV-CHG-FLD ; 
  10 OZ0FW-SV-XOMCD OZ0FW-SV-XOMCD ; 
  10 OZ0FW-SV-COMMENT OZ0FW-SV-COMMENT ; 
  10 OZ0FW-SV-DATE OZ0FW-SV-DATE ; 
  10 OZ0FW-NUM-DATE OZ0FW-NUM-DATE ; 
  10 OZ0FW-PO-SO-BLD OZ0FW-PO-SO-BLD ; 
    15 OZ0FW-PO-SO-CHAR OZ0FW-PO-SO-CHAR [25] ; 
  10 OZ0FW-SV-CUSTOMER OZ0FW-SV-CUSTOMER ; 
  10 OZ0FW-SV-CUST-ORD OZ0FW-SV-CUST-ORD ; 
  10 OZ0FW-SV-CUST-PO OZ0FW-SV-CUST-PO ; 
  10 OZ0FW-SV-DEPT OZ0FW-SV-DEPT ; 
  10 OZ0FW-CUST-STR-DPT OZ0FW-CUST-STR-DPT ; 
    15 OZ0FW-SV-CUST OZ0FW-SV-CUST ; 
      20 OZ0FW-SV-CUST-CHAR OZ0FW-SV-CUST-CHAR [7] ; 
    15 OZ0FW-DOT1 OZ0FW-DOT1 ; 
    15 OZ0FW-SV-STR OZ0FW-SV-STR ; 
    15 OZ0FW-DOT2 OZ0FW-DOT2 ; 
    15 OZ0FW-SV-DPT OZ0FW-SV-DPT ; 
  10 OZ0FW-SV-STOR-ID OZ0FW-SV-STOR-ID ; 
  10 OZ0FW-SV-XNX-DEPT OZ0FW-SV-XNX-DEPT ; 
  10 OZ0FW-SV-STOR-ID-NUM OZ0FW-SV-STOR-ID-NUM ; 
  10 OZ0FW-SV-XNX-DEPT-NUM OZ0FW-SV-XNX-DEPT-NUM ; 
  10 OZ0FW-SV-CU-CO-ID OZ0FW-SV-CU-CO-ID ; 
  10 OZ0FW-SV-NEED-DT-FROM OZ0FW-SV-NEED-DT-FROM ; 
  10 OZ0FW-SV-NEED-DT-TO OZ0FW-SV-NEED-DT-TO ; 
  10 OZ0FW-SV-NEED-DT OZ0FW-SV-NEED-DT ; 
  10 OZ0FW-SV-TOT-REQ-QTY OZ0FW-SV-TOT-REQ-QTY ; 
  10 OZ0FW-SV-TOT-ORIG-VAL OZ0FW-SV-TOT-ORIG-VAL ; 
  10 OZ0FW-SV-TOT-CURR-VAL OZ0FW-SV-TOT-CURR-VAL ; 
  10 OZ0FW-SV-TOT-AVAIL-1 OZ0FW-SV-TOT-AVAIL-1 ; 
  10 OZ0FW-SV-TOT-AVAIL-2 OZ0FW-SV-TOT-AVAIL-2 ; 
  10 OZ0FW-SV-TOT-AVAIL-3 OZ0FW-SV-TOT-AVAIL-3 ; 
  10 OZ0FW-SV-TOT-AVAIL-4 OZ0FW-SV-TOT-AVAIL-4 ; 
  10 OZ0FW-HOLD-VALUE OZ0FW-HOLD-VALUE ; 
  10 OZ0FW-SV-NUM OZ0FW-SV-NUM ; 
  10 OZ0FW-SV-DEC OZ0FW-SV-DEC ; 
    15 OZ0FW-SV-DEC-INT OZ0FW-SV-DEC-INT ; 
    15 OZ0FW-SV-DECIMAL OZ0FW-SV-DECIMAL ; 
  10 OZ0FW-VALUE-FIELD OZ0FW-VALUE-FIELD ; 
    15 OZ0FW-VALUE-BRK OZ0FW-VALUE-BRK [10] ; 
  10 OZ0FW-VALUE-BUILD OZ0FW-VALUE-BUILD ; 
    15 OZ0FW-VB-INT OZ0FW-VB-INT ; 
    15 OZ0FW-VB-DOT OZ0FW-VB-DOT ; 
    15 OZ0FW-VB-DEC OZ0FW-VB-DEC ; 
  10 OZ0FW-EDIT-FLAG OZ0FW-EDIT-FLAG ; 
  10 OZ0FW-WS-SALES-AGENCY OZ0FW-WS-SALES-AGENCY ; 
  10 OZ0FW-WS-SALES-REP OZ0FW-WS-SALES-REP ; 
  10 OZ0FW-CURR-CU-CO-ID OZ0FW-CURR-CU-CO-ID ; 
  10 OZ0FW-CURR-STOR-ID OZ0FW-CURR-STOR-ID ; 
  10 OZ0FW-CURR-XNX-DEPT OZ0FW-CURR-XNX-DEPT ; 
  10 OZ0FW-CU-CO-NM-HDR OZ0FW-CU-CO-NM-HDR ; 
  10 OZ0FW-OVERRIDE-DI OZ0FW-OVERRIDE-DI ; 
  10 OZ0FW-BYPASS-ELIGB OZ0FW-BYPASS-ELIGB ; 
  10 OZ0FW-SOCD-LTR-OVRD-ID OZ0FW-SOCD-LTR-OVRD-ID ; 
  10 OZ0FW-SOCD-CURR-CUST-PO-FROM OZ0FW-SOCD-CURR-CUST-PO-FROM ; 
  10 OZ0FW-SOCD-CURR-CUST-PO-TO OZ0FW-SOCD-CURR-CUST-PO-TO ; 
  10 OZ0FW-OP-CUST-ORD-ID OZ0FW-OP-CUST-ORD-ID ; 
    15 * char(8) ; // Edit Flag
    15 OZ0FW-ORD-PART-CHAR OZ0FW-ORD-PART-CHAR ; 
  10 OZ0FW-SOCD-CURR-NEED-DT-FROM OZ0FW-SOCD-CURR-NEED-DT-FROM ; 
  10 OZ0FW-SOCD-CURR-NEED-DT-TO OZ0FW-SOCD-CURR-NEED-DT-TO ; 
  10 OZ0FW-CURR-GPC-CD OZ0FW-CURR-GPC-CD ; 
  10 OZ0FW-GPC-DESC OZ0FW-GPC-DESC ; 
  10 OZ0FW-XSO-SLS-OFC-ID OZ0FW-XSO-SLS-OFC-ID ; 
  10 OZ0FW-XSO-SLS-OFC-ID-DESC OZ0FW-XSO-SLS-OFC-ID-DESC ; 
  10 OZ0FW-SP-SPGM-ID OZ0FW-SP-SPGM-ID ; 
  10 OZ0FW-SP-SPGM-ID-DESC OZ0FW-SP-SPGM-ID-DESC ; 
  10 OZ0FW-SM-SAGCY-ID OZ0FW-SM-SAGCY-ID ; 
  10 OZ0FW-SM-SAGCY-ID-DESC OZ0FW-SM-SAGCY-ID-DESC ; 
  10 OZ0FW-SM-SREP-ID OZ0FW-SM-SREP-ID ; 
  10 OZ0FW-SM-SREP-ID-DESC OZ0FW-SM-SREP-ID-DESC ; 
  10 OZ0FW-SM-SREP-FIRST-NM OZ0FW-SM-SREP-FIRST-NM ; 
  10 OZ0FW-SM-SREP-LAST-NM OZ0FW-SM-SREP-LAST-NM ; 
  10 * char(1) ; 
  10 OZ0FW-CUST-STR-DPT2 OZ0FW-CUST-STR-DPT2 ; 
    15 OZ0FW-CUSTOMER OZ0FW-CUSTOMER ; 
    15 OZ0FW-DOTA char(1) ; 
    15 OZ0FW-STORE OZ0FW-STORE ; 
    15 OZ0FW-DOTB char(1) ; 
    15 OZ0FW-DEPT OZ0FW-DEPT ; 
  10 * char(1) ; 
  10 OZ0FW-M5IDX-TBL OZ0FW-M5IDX-TBL [11] ; 
    15 OZ0FW-M5IDX-CUST-STR-DPT OZ0FW-M5IDX-CUST-STR-DPT ; 
    15 OZ0FW-M5IDX-STYLE-CLR-DIM OZ0FW-M5IDX-STYLE-CLR-DIM ; 
    15 OZ0FW-M5IDX-SY-STY-COLOR-ABRV OZ0FW-M5IDX-SY-STY-COLOR-ABRV ; 
    15 OZ0FW-M5IDX-COLOR-NAME OZ0FW-M5IDX-COLOR-NAME ; 
    15 OZ0FW-M5IDX-OP-ORD-PART-CHAR OZ0FW-M5IDX-OP-ORD-PART-CHAR ; 
    15 OZ0FW-M5IDX-OP-CUST-ORD-ID OZ0FW-M5IDX-OP-CUST-ORD-ID ; 
    15 OZ0FW-M5IDX-LINE-ITEM-NBR OZ0FW-M5IDX-LINE-ITEM-NBR ; 
    15 OZ0FW-M5IDX-ITM-CHG OZ0FW-M5IDX-ITM-CHG ; 
  10 * char(1) ; 
  10 OZ0FW-SEL-GROUP OZ0FW-SEL-GROUP ; 
    15 OZ0FW-SEL-CUST-STR-DPT OZ0FW-SEL-CUST-STR-DPT ; 
      20 OZ0FW-SEL-CUST OZ0FW-SEL-CUST ; 
      20 * char(1) ; 
      20 OZ0FW-SEL-STR OZ0FW-SEL-STR ; 
      20 * char(1) ; 
      20 OZ0FW-SEL-DPT OZ0FW-SEL-DPT ; 
    15 OZ0FW-SEL-CUST-NM-HDR OZ0FW-SEL-CUST-NM-HDR ; 
    15 OZ0FW-SEL-OVERRIDE-DI OZ0FW-SEL-OVERRIDE-DI ; 
    15 OZ0FW-SEL-ORD-NBR OZ0FW-SEL-ORD-NBR ; 
    15 OZ0FW-SEL-LTR-TYP-CD OZ0FW-SEL-LTR-TYP-CD ; 
    15 OZ0FW-SEL-GPC OZ0FW-SEL-GPC ; 
    15 OZ0FW-SEL-GPC-DESC OZ0FW-SEL-GPC-DESC ; 
    15 OZ0FW-SEL-CUST-PO OZ0FW-SEL-CUST-PO ; 
    15 OZ0FW-SEL-SALES-OFF OZ0FW-SEL-SALES-OFF ; 
    15 OZ0FW-SEL-SALES-OFF-DESC OZ0FW-SEL-SALES-OFF-DESC ; 
    15 OZ0FW-SEL-SALES-AGENCY OZ0FW-SEL-SALES-AGENCY ; 
    15 OZ0FW-SEL-SALES-AGENCY-DESC OZ0FW-SEL-SALES-AGENCY-DESC ; 
    15 OZ0FW-SEL-SALES-REP OZ0FW-SEL-SALES-REP ; 
    15 OZ0FW-SEL-OP-NIKE-ORD-ID OZ0FW-SEL-OP-NIKE-ORD-ID ; 
    15 OZ0FW-SEL-OP-ORD-PART-CHAR OZ0FW-SEL-OP-ORD-PART-CHAR ; 
    15 OZ0FW-SEL-SREP-FIRST-NM OZ0FW-SEL-SREP-FIRST-NM ; 
    15 OZ0FW-SEL-SREP-LAST-NM OZ0FW-SEL-SREP-LAST-NM ; 
    15 OZ0FW-SEL-TOT-ORD-QTY OZ0FW-SEL-TOT-ORD-QTY ; 
    15 OZ0FW-SEL-TOT-ORD-VAL OZ0FW-SEL-TOT-ORD-VAL ; 
    15 OZ0FW-SEL-1ST-ORD-ID OZ0FW-SEL-1ST-ORD-ID ; 
    15 OZ0FW-SEL-XPTCD OZ0FW-SEL-XPTCD ; 
    15 OZ0FW-SEL-CURR-DSBDT OZ0FW-SEL-CURR-DSBDT ; 
    15 OZ0FW-SEL-CURR-DSADT OZ0FW-SEL-CURR-DSADT ; 
    15 OZ0FW-SEL-ORIG-DSBDT OZ0FW-SEL-ORIG-DSBDT ; 
    15 OZ0FW-SEL-ORIG-DSADT OZ0FW-SEL-ORIG-DSADT ; 
    15 OZ0FW-SEL-PO-MONEY-MTH OZ0FW-SEL-PO-MONEY-MTH ; 
    15 OZ0FW-SEL-OP-CUST-PO OZ0FW-SEL-OP-CUST-PO ; 
    15 OZ0FW-SEL-SP1ID OZ0FW-SEL-SP1ID ; 
    15 OZ0FW-SEL-SP1NM OZ0FW-SEL-SP1NM ; 
  10 * char(1) ; 
  10 OZ0FW-M2-GROUP OZ0FW-M2-GROUP ; 
    15 OZ0FW-M2-CUST-STR-DPT OZ0FW-M2-CUST-STR-DPT ; 
    15 OZ0FW-M2-CU-CO-NM-HDR OZ0FW-M2-CU-CO-NM-HDR ; 
    15 OZ0FW-M2-OVERRIDE-DI OZ0FW-M2-OVERRIDE-DI ; 
    15 OZ0FW-M2-OP-CUST-ORD-ID OZ0FW-M2-OP-CUST-ORD-ID ; 
    15 OZ0FW-M2-CURR-GPC-CD OZ0FW-M2-CURR-GPC-CD ; 
    15 OZ0FW-M2-GPC-DESC OZ0FW-M2-GPC-DESC ; 
    15 OZ0FW-M2-HEADER-CHGS OZ0FW-M2-HEADER-CHGS ; 
    15 OZ0FW-M2-SOCD-CURR-CUST-PO OZ0FW-M2-SOCD-CURR-CUST-PO ; 
    15 OZ0FW-M2-XSO-SLS-OFC-ID OZ0FW-M2-XSO-SLS-OFC-ID ; 
    15 OZ0FW-M2-XSO-SLS-OFC-ID-DESC OZ0FW-M2-XSO-SLS-OFC-ID-DESC ; 
    15 OZ0FW-M2-SM-SAGCY-ID OZ0FW-M2-SM-SAGCY-ID ; 
    15 OZ0FW-M2-SM-SAGCY-ID-DESC OZ0FW-M2-SM-SAGCY-ID-DESC ; 
    15 OZ0FW-M2-SM-SREP-ID OZ0FW-M2-SM-SREP-ID ; 
    15 OZ0FW-M2-SM-SREP-FIRST-NM OZ0FW-M2-SM-SREP-FIRST-NM ; 
    15 OZ0FW-M2-SM-SREP-LAST-NM OZ0FW-M2-SM-SREP-LAST-NM ; 
    15 OZ0FW-M2-TOT-ORD-QTY OZ0FW-M2-TOT-ORD-QTY ; 
    15 OZ0FW-M2-TOT-ORD-VALUE OZ0FW-M2-TOT-ORD-VALUE ; 
    15 OZ0FW-M3-PYMNT-TERMS OZ0FW-M3-PYMNT-TERMS ; 
    15 OZ0FW-M3-CURR-DNSB OZ0FW-M3-CURR-DNSB ; 
    15 OZ0FW-M3-CURR-DNSA OZ0FW-M3-CURR-DNSA ; 
    15 OZ0FW-M3-ORIG-DNSB OZ0FW-M3-ORIG-DNSB ; 
    15 OZ0FW-M3-ORIG-DNSA OZ0FW-M3-ORIG-DNSA ; 
    15 OZ0FW-M3-PO-MONEY-MTH OZ0FW-M3-PO-MONEY-MTH ; 
    15 OZ0FW-M3-OP-CUST-PO OZ0FW-M3-OP-CUST-PO ; 
    15 OZ0FW-M3-SP1ID OZ0FW-M3-SP1ID ; 
    15 OZ0FW-M3-SP1NM OZ0FW-M3-SP1NM ; 
  10 OZ0FW-M3-WS-TABLE OZ0FW-M3-WS-TABLE [500] ; 
    15 OZ0FW-M3-WS-XOMCD OZ0FW-M3-WS-XOMCD ; 
    15 OZ0FW-M3-WS-COMMENT OZ0FW-M3-WS-COMMENT ; 
  10 OZ0FW-M4-WS-TABLE OZ0FW-M4-WS-TABLE ; 
    15 OZ0FW-M4-WS-XOMCD OZ0FW-M4-WS-XOMCD ; 
    15 OZ0FW-M4-WS-COMMENT OZ0FW-M4-WS-COMMENT ; 
  10 OZ0FW-M4-WS-CHG-FLD OZ0FW-M4-WS-CHG-FLD ; 
  10 OZ0FW-M5-STYLE-CLR-DIM OZ0FW-M5-STYLE-CLR-DIM ; 
    15 OZ0FW-M5-STYLE OZ0FW-M5-STYLE ; 
    15 * char(1) ; 
    15 OZ0FW-M5-COLOR OZ0FW-M5-COLOR ; 
    15 * char(1) ; 
    15 OZ0FW-M5-DIM OZ0FW-M5-DIM ; 
  10 OZ0FW-M5-SY-STY-COLOR-ABRV OZ0FW-M5-SY-STY-COLOR-ABRV ; 
  10 OZ0FW-M5-COLOR-NAME OZ0FW-M5-COLOR-NAME ; 
  10 OZ0FW-M5-OP-ORD-PART-CHAR OZ0FW-M5-OP-ORD-PART-CHAR ; 
  10 OZ0FW-M5-OP-CUST-ORD-ID OZ0FW-M5-OP-CUST-ORD-ID ; 
  10 OZ0FW-M5-OP-ORIG-NEED-DT OZ0FW-M5-OP-ORIG-NEED-DT ; 
    20 OZ0FW-M5-OOND-CC OZ0FW-M5-OOND-CC ; 
    20 OZ0FW-M5-OOND-MM OZ0FW-M5-OOND-MM ; 
    20 OZ0FW-M5-OOND-DD OZ0FW-M5-OOND-DD ; 
  10 OZ0FW-M5-TABLE OZ0FW-M5-TABLE [4] ; 
    15 OZ0FW-M5-OP-NIKE-ORD-ID OZ0FW-M5-OP-NIKE-ORD-ID ; 
    15 OZ0FW-M5-LINE-ITEM-NBR OZ0FW-M5-LINE-ITEM-NBR ; 
    15 OZ0FW-M5-OP-CUST-NEED-DT OZ0FW-M5-OP-CUST-NEED-DT ; 
      20 OZ0FW-M5-OCND-CC OZ0FW-M5-OCND-CC ; 
      20 OZ0FW-M5-OCND-MM OZ0FW-M5-OCND-MM ; 
      20 OZ0FW-M5-OCND-DD OZ0FW-M5-OCND-DD ; 
  10 OZ0FW-M5-CURR-VALUE OZ0FW-M5-CURR-VALUE ; 
  10 OZ0FW-M5-ITM-CHG OZ0FW-M5-ITM-CHG ; 
  10 * char(1) ; 
  10 OZ0FW-M6-SIZE-DTL OZ0FW-M6-SIZE-DTL ; 
    15 OZ0FW-M6-SIZE OZ0FW-M6-SIZE ; 
    15 OZ0FW-M6-REQ-QTY OZ0FW-M6-REQ-QTY ; 
    15 OZ0FW-M6-AVAIL-QTY-1 OZ0FW-M6-AVAIL-QTY-1 ; 
    15 OZ0FW-M6-AVAIL-QTY-2 OZ0FW-M6-AVAIL-QTY-2 ; 
    15 OZ0FW-M6-AVAIL-QTY-3 OZ0FW-M6-AVAIL-QTY-3 ; 
    15 OZ0FW-M6-AVAIL-QTY-4 OZ0FW-M6-AVAIL-QTY-4 ; 
    15 OZ0FW-M6-ORIG-PRICE OZ0FW-M6-ORIG-PRICE ; 
    15 OZ0FW-M6-CURR-PRICE OZ0FW-M6-CURR-PRICE ; 
    15 * char(2) ; 
  10 OZ0FW-LAST-RPT-DT OZ0FW-LAST-RPT-DT ; 
    15 OZ0FW-LAST-RPT-YYA OZ0FW-LAST-RPT-YYA ; 
    15 OZ0FW-LAST-RPT-YYB OZ0FW-LAST-RPT-YYB ; 
    15 OZ0FW-LAST-RPT-MM OZ0FW-LAST-RPT-MM ; 
    15 OZ0FW-LAST-RPT-DD OZ0FW-LAST-RPT-DD ; 
  10 OZ0FW-LAST-RPT-DT1 OZ0FW-LAST-RPT-DT1 ; 
    15 OZ0FW-LAST-RPT-MM1 OZ0FW-LAST-RPT-MM1 ; 
    15 OZ0FW-LAST-RPT-DD1 OZ0FW-LAST-RPT-DD1 ; 
    15 OZ0FW-LAST-RPT-YY OZ0FW-LAST-RPT-YY ; 
      20 OZ0FW-LAST-RPT-YY1 OZ0FW-LAST-RPT-YY1 ; 
      20 OZ0FW-LAST-RPT-YY2 OZ0FW-LAST-RPT-YY2 ; 
  10 OZ0FW-RPT-HHMMSS OZ0FW-RPT-HHMMSS ; 
    15 OZ0FW-RPT-HH OZ0FW-RPT-HH ; 
    15 OZ0FW-RPT-MM OZ0FW-RPT-MM ; 
    15 OZ0FW-RPT-SS OZ0FW-RPT-SS ; 
  10 OZ0FW-LAST-RPT-DATE OZ0FW-LAST-RPT-DATE ; 
    15 OZ0FW-LAST-RPT-MO OZ0FW-LAST-RPT-MO ; 
    15 OZ0FW-LAST-RPT-SL1 OZ0FW-LAST-RPT-SL1 ; 
    15 OZ0FW-LAST-RPT-DAY OZ0FW-LAST-RPT-DAY ; 
    15 OZ0FW-LAST-RPT-SL2 OZ0FW-LAST-RPT-SL2 ; 
    15 OZ0FW-LAST-RPT-YE OZ0FW-LAST-RPT-YE ; 
  10 OZ0FW-LAST-RPT-TIME OZ0FW-LAST-RPT-TIME ; 
    15 OZ0FW-LAST-RPT-HH OZ0FW-LAST-RPT-HH ; 
    15 OZ0FW-LAST-RPT-SL3 OZ0FW-LAST-RPT-SL3 ; 
    15 OZ0FW-LAST-RPT-MI OZ0FW-LAST-RPT-MI ; 
  10 OZ0FW-FL-PO-SO OZ0FW-FL-PO-SO ; 
  10 OZ0FW-SAVE-APPL OZ0FW-SAVE-APPL ; 
  10 OZ0FW-SAVE-APPIDX OZ0FW-SAVE-APPIDX ; 
end // end OZ0FW00


//*** RECORD=OZ0FW01 ****
// /*
// /*      application working storage for map1
// /*
// ***********************
Record OZ0FW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(2486) ; // Temporary storage page length
    10 OZ0FW-SEL OZ0FW-SEL [11] ; 
    10 OZ0FW-NO-DI OZ0FW-NO-DI [11] ; 
    10 OZ0FW-GROUP OZ0FW-GROUP [11] ; 
      15 OZ0FW-CUST OZ0FW-CUST ; 
      15 OZ0FW-STR OZ0FW-STR ; 
      15 OZ0FW-DPT OZ0FW-DPT ; 
      15 OZ0FW-CU-CO-NM OZ0FW-CU-CO-NM ; 
      15 OZ0FW-SOCD-LTR-TYP-CD OZ0FW-SOCD-LTR-TYP-CD ; 
      15 OZ0FW-PO-SO OZ0FW-PO-SO ; 
      15 OZ0FW-SOCD-CURR-CUST-PO OZ0FW-SOCD-CURR-CUST-PO ; 
      15 OZ0FW-OP-CUST-ORD-ID OZ0FW-OP-CUST-ORD-ID ; 
      15 OZ0FW-OP-NIKE-ORD-ID OZ0FW-OP-NIKE-ORD-ID ; 
      15 OZ0FW-OP-ORD-PART-CHAR OZ0FW-OP-ORD-PART-CHAR ; 
      15 OZ0FW-TOT-ORD-QTY OZ0FW-TOT-ORD-QTY ; 
      15 OZ0FW-TOT-ORD-VAL OZ0FW-TOT-ORD-VAL ; 
      15 OZ0FW-1ST-ORD-ID OZ0FW-1ST-ORD-ID ; 
      15 OZ0FW-XPTCD OZ0FW-XPTCD ; 
      15 OZ0FW-CURR-DSBDT OZ0FW-CURR-DSBDT ; 
      15 OZ0FW-CURR-DSADT OZ0FW-CURR-DSADT ; 
      15 OZ0FW-ORIG-DSBDT OZ0FW-ORIG-DSBDT ; 
      15 OZ0FW-ORIG-DSADT OZ0FW-ORIG-DSADT ; 
      15 OZ0FW-PO-MONEY-MTH OZ0FW-PO-MONEY-MTH ; 
      15 OZ0FW-OP-CUST-PO OZ0FW-OP-CUST-PO ; 
      15 OZ0FW-SP1ID OZ0FW-SP1ID ; 
      15 OZ0FW-WS-CUST OZ0FW-WS-CUST ; 
      15 OZ0FW-WS-STR OZ0FW-WS-STR ; 
      15 OZ0FW-WS-DPT OZ0FW-WS-DPT ; 
      15 OZ0FW-WS-LAST-RPT-DT OZ0FW-WS-LAST-RPT-DT ; 
      15 OZ0FW-WS-RPT-HHMMSS OZ0FW-WS-RPT-HHMMSS ; 
end // end OZ0FW01


//*** RECORD=OZ0FW02 ****
// /*
// /*      application working storage for map2
// /*
// ***********************
Record OZ0FW02 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(957) ; // Temporary storage page length
    10 OZ0FW-SEL OZ0FW-SEL [11] ; 
    10 OZ0FW-GRP OZ0FW-GRP [11] ; 
      15 OZ0FW-STR OZ0FW-STR ; 
      15 OZ0FW-STY-COL-DIM OZ0FW-STY-COL-DIM ; 
        20 OZ0FW-STYLE OZ0FW-STYLE ; 
        20 OZ0FW-SLASH1 OZ0FW-SLASH1 ; 
        20 OZ0FW-COLOR OZ0FW-COLOR ; 
        20 OZ0FW-SLASH2 OZ0FW-SLASH2 ; 
        20 OZ0FW-DIM OZ0FW-DIM ; 
      15 OZ0FW-STY-COL-ABRV OZ0FW-STY-COL-ABRV ; 
      15 OZ0FW-COLOR-NAME OZ0FW-COLOR-NAME ; 
      15 OZ0FW-ITEM-ORD-QTY OZ0FW-ITEM-ORD-QTY ; 
      15 OZ0FW-CONF-DISC OZ0FW-CONF-DISC ; 
      15 OZ0FW-ITM-CHG OZ0FW-ITM-CHG ; 
      15 OZ0FW-OP-ORD-PART-CHAR OZ0FW-OP-ORD-PART-CHAR ; 
      15 OZ0FW-OP-CUST-ORD-ID OZ0FW-OP-CUST-ORD-ID ; 
      15 OZ0FW-OP-NIKE-ORD-ID OZ0FW-OP-NIKE-ORD-ID ; 
      15 OZ0FW-LINE-ITEM-NBR OZ0FW-LINE-ITEM-NBR ; 
      15 OZ0FW-CUST-STR-DPT OZ0FW-CUST-STR-DPT ; 
end // end OZ0FW02


//*** RECORD=OZ0FW03 ****
// /*
// /*      application working storage for map3
// /*
// ***********************
Record OZ0FW03 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(440) ; // Temporary storage page length
    10 OZ0FW-CHG-TBL OZ0FW-CHG-TBL [8] ; 
      15 OZ0FW-CHG-REASON OZ0FW-CHG-REASON ; 
        20 OZ0FW-XOMCD OZ0FW-XOMCD ; 
        20 * char(1) ; 
        20 OZ0FW-DASH char(1) ; 
        20 * char(1) ; 
      15 OZ0FW-COMMENT OZ0FW-COMMENT ; 
end // end OZ0FW03


//*** RECORD=OZ0FW04 ****
// /*
// /*      application working storage for map3
// /*
// ***********************
Record OZ0FW04 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(938) ; // Temporary storage page length
    10 OZ0FW-AUDIT-DETAIL OZ0FW-AUDIT-DETAIL [14] ; 
      15 OZ0FW-COMMENT-BLD OZ0FW-COMMENT-BLD ; 
        20 OZ0FW-COMMENT-SP char(3) ; 
          25 OZ0FW-XOM-DTL OZ0FW-XOM-DTL ; 
        20 OZ0FW-COMMENT-DTL OZ0FW-COMMENT-DTL ; 
          25 OZ0FW-CHG-FLD OZ0FW-CHG-FLD ; 
          25 OZ0FW-VAL-FLD OZ0FW-VAL-FLD ; 
      15 OZ0FW-CHG-USERID OZ0FW-CHG-USERID ; 
      15 OZ0FW-CHG-DATE OZ0FW-CHG-DATE ; 
      15 OZ0FW-CHG-TIME OZ0FW-CHG-TIME ; 
      15 OZ0FW-CUST-RPT OZ0FW-CUST-RPT ; 
end // end OZ0FW04


//*** RECORD=OZ0FW05 ****
// /*
// /*      application working storage for map3
// /*
// ***********************
Record OZ0FW05 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(768) ; // Temporary storage page length
    10 OZ0FW-SIZE-DTL OZ0FW-SIZE-DTL [12] ; 
      15 OZ0FW-SIZE OZ0FW-SIZE ; 
      15 OZ0FW-REQ-QTY OZ0FW-REQ-QTY ; 
      15 OZ0FW-AVAIL-QTY-1 OZ0FW-AVAIL-QTY-1 ; 
      15 OZ0FW-AVAIL-QTY-2 OZ0FW-AVAIL-QTY-2 ; 
      15 OZ0FW-AVAIL-QTY-3 OZ0FW-AVAIL-QTY-3 ; 
      15 OZ0FW-AVAIL-QTY-4 OZ0FW-AVAIL-QTY-4 ; 
      15 OZ0FW-ORIG-PRICE OZ0FW-ORIG-PRICE ; 
      15 OZ0FW-CURR-PRICE OZ0FW-CURR-PRICE ; 
      15 * char(2) ; 
end // end OZ0FW05


//*** RECORD=OZ0FW05A ****
// /*
// /*      application working storage for map3
// /*
// ************************
Record OZ0FW05A type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(2560) ; // Temporary storage page length
    10 OZ0FW-SIZE-DTL OZ0FW-SIZE-DTL [40] ; 
      15 OZ0FW-SIZE OZ0FW-SIZE ; 
      15 OZ0FW-REQ-QTY OZ0FW-REQ-QTY ; 
      15 OZ0FW-AVAIL-QTY-1 OZ0FW-AVAIL-QTY-1 ; 
      15 OZ0FW-AVAIL-QTY-2 OZ0FW-AVAIL-QTY-2 ; 
      15 OZ0FW-AVAIL-QTY-3 OZ0FW-AVAIL-QTY-3 ; 
      15 OZ0FW-AVAIL-QTY-4 OZ0FW-AVAIL-QTY-4 ; 
      15 OZ0FW-ORIG-PRICE OZ0FW-ORIG-PRICE ; 
      15 OZ0FW-CURR-PRICE OZ0FW-CURR-PRICE ; 
      15 OZ0FW-GRP-SEQ OZ0FW-GRP-SEQ ; 
      15 OZ0FW-QTY-SEQ OZ0FW-QTY-SEQ ; 
end // end OZ0FW05A


//*** RECORD=OZ0FW06 ****
// /*
// /*      application working storage for map3
// /*
// ***********************
Record OZ0FW06 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(832) ; // Temporary storage page length
    10 OZ0FW-SIZE-DTL OZ0FW-SIZE-DTL ; 
      15 OZ0FW-SIZE OZ0FW-SIZE ; 
      15 OZ0FW-REQ-QTY OZ0FW-REQ-QTY ; 
      15 OZ0FW-AVAIL-QTY-1 OZ0FW-AVAIL-QTY-1 ; 
      15 OZ0FW-AVAIL-QTY-2 OZ0FW-AVAIL-QTY-2 ; 
      15 OZ0FW-AVAIL-QTY-3 OZ0FW-AVAIL-QTY-3 ; 
      15 OZ0FW-AVAIL-QTY-4 OZ0FW-AVAIL-QTY-4 ; 
      15 OZ0FW-ORIG-PRICE OZ0FW-ORIG-PRICE ; 
      15 OZ0FW-CURR-PRICE OZ0FW-CURR-PRICE ; 
      15 * char(2) ; 
    10 OZ0FW-CHG-DTL OZ0FW-CHG-DTL [12] ; 
      15 OZ0FW-RPT-FL OZ0FW-RPT-FL ; 
      15 OZ0FW-XOMCD OZ0FW-XOMCD ; 
      15 OZ0FW-CMNT OZ0FW-CMNT ; 
        20 OZ0FW-CHANGE-FLD OZ0FW-CHANGE-FLD ; 
        20 OZ0FW-VALUE-FLD OZ0FW-VALUE-FLD ; 
          25 OZ0FW-VALUE-FLD-CHA OZ0FW-VALUE-FLD-CHA ; 
          25 OZ0FW-VALUE-FLD-REM OZ0FW-VALUE-FLD-REM ; 
      15 OZ0FW-USERID OZ0FW-USERID ; 
      15 OZ0FW-CHGDT OZ0FW-CHGDT ; 
      15 OZ0FW-CHGTM OZ0FW-CHGTM ; 
end // end OZ0FW06


//*** RECORD=OZ0FW99 ****
// /*
// /*      application working storage for map2
// /*
// ***********************
Record OZ0FW99 type basicRecord
  10 OZ0FW-SV-ORD-ID OZ0FW-SV-ORD-ID [5000] ; 
  10 OZ0FW-WS-ORD OZ0FW-WS-ORD ; 
end // end OZ0FW99


// Edit Flag
DataItem OZ0FW-1ST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-AUDIT-DETAIL char(67)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-AVAIL-QTY-1 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-AVAIL-QTY-2 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-AVAIL-QTY-3 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-AVAIL-QTY-4 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-BYPASS-ELIGB char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CHANGE-FLD char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CHG-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CHG-DTL char(64)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0FW-CHG-FLD char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CHG-REASON char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CHG-TBL char(55)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CHG-TIME char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CHG-USERID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CHGDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CHGTM char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0FW-CMNT char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0FW-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-COLOR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-COLOR-NAME char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0FW-COMMENT char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-COMMENT-BLD char(45)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0FW-COMMENT-DTL char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CONF-DISC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CSD-BREAK char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CSD-BRK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Pass record control field
DataItem OZ0FW-CTL-FLD char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-CU-CO-NM char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-CU-CO-NM-HDR char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-CURR-CU-CO-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-CURR-DSADT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-CURR-DSBDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-CURR-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0FW-CURR-PRICE num(8,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-CURR-STOR-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-CURR-XNX-DEPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-CUST num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-CUST-BREAK char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CUST-BRK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CUST-RPT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CUST-STR-DPT2 char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-CUSTOMER num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-DATE-BRK num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-DATE-MK char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-DB-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-DB-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-DB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-DB-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-DEPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-DIM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-DM-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-DM-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-DM-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-DM-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-DM-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-DOT1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-DOT2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-DPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-EDIT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Y or N for PO and SO
DataItem OZ0FW-FL-PO-SO char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Map function switch
DataItem OZ0FW-FNC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0FW-FND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0FW-GPC-DESC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-GROUP char(224)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-GRP char(86)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-GRP-SEQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-HOLD-VALUE num(13,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Index for map fields
DataItem OZ0FW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0FW-IDX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0FW-ITEM-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-ITEM-ORD-QTY num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-ITM-CHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0FW-IX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0FW-IX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0FW-IXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-DATE char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-DAY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-DD1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-DT1 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-MI num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-MM1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-MO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-SL1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-SL2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-SL3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-TIME char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-YE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-YY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-YY1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-YY2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-YYA num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LAST-RPT-YYB num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-LINE-ITEM-NBR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// function switch
DataItem OZ0FW-LOW-VALUES char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Page save field
DataItem OZ0FW-M1-SAVE-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// TSQ rel rec no./index
DataItem OZ0FW-M1-TSQIX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-CU-CO-NM-HDR char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-CURR-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-GPC-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-GROUP char(274)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-HEADER-CHGS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-OP-CUST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M2-OVERRIDE-DI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Page save field
DataItem OZ0FW-M2-SAVE-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-SM-SAGCY-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-SM-SAGCY-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-SM-SREP-FIRST-NM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-SM-SREP-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-SM-SREP-LAST-NM char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-SOCD-CURR-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-TOT-ORD-QTY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M2-TOT-ORD-VALUE num(13)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// TSQ rel rec no./index
DataItem OZ0FW-M2-TSQIX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-XSO-SLS-OFC-ID char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M2-XSO-SLS-OFC-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M3-CURR-DNSA num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M3-CURR-DNSB num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M3-OP-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M3-ORIG-DNSA num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M3-ORIG-DNSB num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M3-PO-MONEY-MTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M3-PYMNT-TERMS char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M3-SP1ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M3-SP1NM char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M3-WS-COMMENT char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M3-WS-TABLE char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M3-WS-XOMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M4-WS-CHG-FLD char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M4-WS-COMMENT char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M4-WS-TABLE char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M4-WS-XOMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5-COLOR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5-COLOR-NAME char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5-CURR-VALUE num(13,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5-DIM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5-ITM-CHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5-LINE-ITEM-NBR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5-OCND-CC num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5-OCND-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5-OCND-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5-OOND-CC num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5-OOND-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5-OOND-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5-OP-CUST-NEED-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5-OP-CUST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5-OP-NIKE-ORD-ID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5-OP-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5-OP-ORIG-NEED-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5-STYLE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5-STYLE-CLR-DIM char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5-SY-STY-COLOR-ABRV char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5-TABLE char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0FW-M5IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5IDX-COLOR-NAME char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5IDX-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5IDX-ITM-CHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5IDX-LINE-ITEM-NBR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5IDX-OP-CUST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M5IDX-OP-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5IDX-STYLE-CLR-DIM char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5IDX-SY-STY-COLOR-ABRV char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M5IDX-TBL char(71)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M6-AVAIL-QTY-1 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M6-AVAIL-QTY-2 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M6-AVAIL-QTY-3 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M6-AVAIL-QTY-4 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M6-CURR-PRICE num(8,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M6-ORIG-PRICE num(8,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M6-REQ-QTY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-M6-SIZE char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-M6-SIZE-DTL char(64)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-ND-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-ND-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-ND-SLASH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-NEED-DATE char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-NO-DI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Binary work year
DataItem OZ0FW-NUM-DATE int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-OP-CUST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-OP-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-OP-NIKE-ORD-ID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-OP-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0FW-ORD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0FW-ORD-MATCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-ORIG-DSADT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-ORIG-DSBDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0FW-ORIG-PRICE num(8,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-OVERRIDE-DI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-PO-MONEY-MTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-PO-SO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-PO-SO-BLD char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-PO-SO-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-QTY-SEQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-REQ-QTY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-RPT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-RPT-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-RPT-HHMMSS num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-RPT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-RPT-SS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save index for WS
DataItem OZ0FW-SAV num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save page for cursor placement
DataItem OZ0FW-SAV-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Y or N for PO and SO
DataItem OZ0FW-SAVE-APPIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Y or N for PO and SO
DataItem OZ0FW-SAVE-APPL char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Page save field
DataItem OZ0FW-SAVE-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Page save field
DataItem OZ0FW-SAVE-STORE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0FW-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SEL-1ST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SEL-CURR-DSADT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SEL-CURR-DSBDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SEL-CUST num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SEL-CUST-NM-HDR char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-DPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SEL-GPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-GPC-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-GROUP char(266)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-LTR-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SEL-OP-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-OP-NIKE-ORD-ID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SEL-OP-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-ORD-NBR num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SEL-ORIG-DSADT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SEL-ORIG-DSBDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SEL-OVERRIDE-DI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SEL-PO-MONEY-MTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-SALES-AGENCY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-SALES-AGENCY-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-SALES-OFF char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-SALES-OFF-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-SALES-REP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SEL-SP1ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SEL-SP1NM char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-SREP-FIRST-NM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-SREP-LAST-NM char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SEL-STR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SEL-TOT-ORD-QTY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SEL-TOT-ORD-VAL num(13)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SEL-XPTCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0FW-SFN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SIZE char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SIZE-DTL char(64)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// skip switch
DataItem OZ0FW-SKIP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SLASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SLASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0FW-SM-SAGCY-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0FW-SM-SAGCY-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0FW-SM-SREP-FIRST-NM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0FW-SM-SREP-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0FW-SM-SREP-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0FW-SM-SREP-LAST-NM char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SOCD-CURR-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SOCD-CURR-CUST-PO-FROM char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SOCD-CURR-CUST-PO-TO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SOCD-CURR-NEED-DT-FROM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SOCD-CURR-NEED-DT-TO num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SOCD-LTR-OVRD-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-SOCD-LTR-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0FW-SP-SPGM-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0FW-SP-SPGM-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SP1ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-STORE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-STR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-STY-COL-ABRV char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-STY-COL-DIM char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-STYLE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SV-CHG-FLD char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0FW-SV-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SV-COMMENT char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SV-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SV-CUST char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SV-CUST-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SV-CUST-ORD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SV-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SV-CUSTOMER num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Format Date
DataItem OZ0FW-SV-DATE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SV-DEC num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SV-DEC-INT num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SV-DECIMAL num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SV-DEPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SV-DPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SV-NEED-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SV-NEED-DT-FROM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SV-NEED-DT-TO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SV-NUM num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0FW-SV-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SV-STOR-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SV-STOR-ID-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SV-STR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-SV-TOT-AVAIL-1 num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SV-TOT-AVAIL-2 num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SV-TOT-AVAIL-3 num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SV-TOT-AVAIL-4 num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SV-TOT-CURR-VAL num(12,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SV-TOT-ORIG-VAL num(12,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SV-TOT-REQ-QTY num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SV-XNX-DEPT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0FW-SV-XNX-DEPT-NUM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-SV-XOMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0FW-SWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Map to be displayed switch
DataItem OZ0FW-SWD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format the map switch
DataItem OZ0FW-SWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Request for data switch
DataItem OZ0FW-SWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Storage page update switch
DataItem OZ0FW-SWU char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-TB-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-TB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-TIME-BRK num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-TIME-MK char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-TM-CL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-TM-HH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-TM-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-TOT-ORD-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-TOT-ORD-VAL bin(18,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-USERID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0FW-VAL-FLD char(27)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-VALUE-BRK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-VALUE-BUILD char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-VALUE-FIELD char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-VALUE-FLD char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-VALUE-FLD-CHA char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-VALUE-FLD-REM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-VB-DEC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-VB-DOT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-VB-INT char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0FW-WC-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0FW-WKIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0FW-WRITE-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-WS-CUST num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-WS-DPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-WS-LAST-RPT-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0FW-WS-ORD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-WS-RPT-HHMMSS num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-WS-SALES-AGENCY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-WS-SALES-REP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


//  Group Level
DataItem OZ0FW-WS-STR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0FW-XOM-DTL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-XOMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0FW-XPTCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0FW-XSO-SLS-OFC-ID char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0FW-XSO-SLS-OFC-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


