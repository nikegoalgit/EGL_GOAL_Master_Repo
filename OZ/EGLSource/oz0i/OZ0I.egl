package oz0i;

import corpcom2.XP0SW00;
import corpcom2.XP0SW01;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XP0S001;
import corpcom3.XPOZ-00001;
import corpcom4.XSOZ-S0001;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXX-JOB-ID;
import corpcom7.XXX-USER-ID;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpcom7.ZZZSTM;
import corpx1.XGPTBL;
import corpx1.XOMTBL;
import corpx1.XPTTBL;
import corpx1.XSETBL;
import corpx1.XSOTBL;
import corpx2.XSOCD;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import ku.common.KU5REC;
import ku.common.KUCREC;
import ku.common.KULREC;
import ku.common.KUMREC;
import ku.common.KUNREC;
import op.common.OP1CUOID;
import op.common.OP1NORID;
import op.common.OP1PARTN;
import op.common.OP1REC;
import op.common.OP2REC;
import op.common.OP3REC;
import op.common.OPAGREC;
import oz.common.OZAREC;
import oz.common.OZBREC;
import oz.common.OZCREC;
import oz.common.OZDREC;
import oz.common.OZWREC;
import sm.common.SM1REC;
import sm.common.SM4REC;
import sm.common.SM5REC;
import sp.common.SOCD-APPL-SRC-CD;
import sp.common.SOCD-CURR-CU-CO-ID;
import sp.common.SOCD-CURR-CUST-PO;
import sp.common.SOCD-CURR-GPC-CD;
import sp.common.SOCD-CURR-STOR-ID;
import sp.common.SOCD-CURR-XNX-DEPT;
import sp.common.SOCD-DIST-SEQ-NBR;
import sp.common.SOCD-LTR-OVRD-ID;
import sp.common.SOCD-LTR-SEQ-NBR;
import sp.common.SOCD-LTR-TYP-CD;
import sp.common.SP1REC;
import sy.common.SY1REC;
import sy.common.SY2REC;
import sy.common.SY4REC;
import sy.common.SYCREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VOCBAD01;
import vv.common.VOCBUY01;
import vv.common.VOCHDR01;
import vv.common.VOCITM01;
import vv.common.VOCLCD01;
import vv.common.VOCLDC01;
import vv.common.VOCLDO01;
import vv.common.VOCLDR01;
import vv.common.VOCLEA01;
import vv.common.VOCLEM01;
import vv.common.VOZCTL01;
import vv.common.VSOCRC01;
import vv.common.VSOHCR01;
import vv.common.VSOSCR01;

//*** PROGRAM=OZ0I ****
// this program writes override distribution instructions for
// the ocd screens.  it is accessed only through other ocd
// appls, not directly from a menu.   it updates or writes to
// vocldc01 and vocldr01.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      06/12/97  dsmit0  New application.
// #1156    06/22/98  sgopal  Added code to transfer from OZ0F
//                            to OZ0I screen by pressing PF14.
// #1156    09/30/98  udafon  Added code for default fields
//                            when no distribution instruction
//                            exists.
// *********************
Program OZ0I type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OZ00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KU5REC KU5REC; // record
  KUCREC KUCREC; // record
  KULREC KULREC; // record
  KUMREC KUMREC; // record
  KUNREC KUNREC; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  OP3REC OP3REC; // record
  OPAGREC OPAGREC; // record
  OZ0IW00 OZ0IW00; // record
  OZ0IW01 OZ0IW01; // record
  OZAREC OZAREC; // record
  OZBREC OZBREC; // record
  OZCREC OZCREC; // record
  OZDREC OZDREC; // record
  OZWREC OZWREC; // record
  SM1REC SM1REC; // record
  SM4REC SM4REC; // record
  SM5REC SM5REC; // record
  SP1REC SP1REC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY4REC SY4REC; // record
  SYCREC SYCREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VOCBAD01 VOCBAD01; // record
  VOCBUY01 VOCBUY01; // record
  VOCHDR01 VOCHDR01; // record
  VOCITM01 VOCITM01; // record
  VOCLCD01 VOCLCD01; // record
  VOCLDC01 VOCLDC01; // record
  VOCLDO01 VOCLDO01; // record
  VOCLDR01 VOCLDR01; // record
  VOCLEA01 VOCLEA01; // record
  VOCLEM01 VOCLEM01; // record
  VOCLTM01 VOCLTM01; // record
  VOCLTR01 VOCLTR01; // record
  VOZCTL01 VOZCTL01; // record
  VSOCRC01 VSOCRC01; // record
  VSOHCR01 VSOHCR01; // record
  VSOSCR01 VSOSCR01; // record
  XP0SW00 XP0SW00; // record
  XP0SW01 XP0SW01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use XOMTBL {deleteAfterUse = yes}; // table
  use XSOTBL {deleteAfterUse = yes}; // table
  use XPTTBL {deleteAfterUse = yes}; // table
  use OZ0IM.OZ0IM001, // form
  OZ0IM.XP0SM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPOZ-00001: XPOZ-00001();
    /* ------------------------------------------------------------*/
    /* Initialize working storage and display storage areas.*/
    /* ------------------------------------------------------------*/

    set OZ0IM001 initial; /* M001 input/output*/
    set OZ0IW00 empty; /* Working storage*/
    set OZ0IW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/

    OZ0IW00.OZ0IW-SWD = "1"; /* Map to be displayed switch*/
    OZ0IW00.OZ0IW-SWF = "Y"; /* Format the map switch*/
    OZ0IW00.OZ0IW-SWR = "Y"; /* Request for data switch*/
    /* ------------------------------------------------------------*/
    /* If data was passed in the COMMAREA, use as the initial key.*/
    /* ------------------------------------------------------------*/
    if (COMMAREA.CAUSERA > "              ") /* Data was passed*/
  
      OZ0IM001.OZ0IM-CUST-STR-DPT = OZWREC.CUST-STR-DPT;
      OZ0IW00.OZ0IW-CUST-STR-DPT = OZWREC.CUST-STR-DPT;
      OZ0IM001.OZ0IM-CU-CO-NM-HDR = OZWREC.KUCCONM;
      OZ0IM001.OZ0IM-GPC-CD = OZWREC.XGPCD;
      OZ0IM001.OZ0IM-GPC-DESC = OZWREC.XGPDESC;
      OZ0IM001.OZ0IM-CUST-PO = OZWREC.SOCD-CURR-CUST-PO;
      OZ0IM001.OZ0IM-CUST-ORD-ID = OZWREC.OP1CUOID;
      OZ0IM001.OZ0IM-SALES-OFF = OZWREC.XSOCD;
      OZ0IM001.OZ0IM-SALES-OFF-DESC = OZWREC.XSOSNM;
      OZ0IM001.OZ0IM-GROUP-BY = OZWREC.SOCD-LTR-TYP-CD;
      OZ0IW00.OZ0IW-OVERRIDE-DI = OZWREC.OVERRIDE-DI;
      OZ0IW00.OZ0IW-SOCD-LTR-OVRD-ID = OZWREC.SOCD-LTR-OVRD-ID;
      OZ0IW00.OZ0IW-SOCD-APPL-SRC-CD = OZWREC.SOCD-APPL-SRC-CD;
      OZ0IW00.OZ0IW-TBL-SRC = OZWREC.TBL-SRC;
      OZ0IW00.OZ0IW-SM-SAGCY-ID = OZWREC.SM1AGYID;
      OZ0IM001.OZ0IM-SALES-REP = OZWREC.SM4REPID;
      OZ0IM001.OZ0IM-SR-FIRST-NM = OZWREC.XXXFSTNM;
      OZ0IM001.OZ0IM-SR-LAST-NM = OZWREC.XXXLSTNM;
      /* sgopa test change*/
  
      if (OZ0IM001.OZ0IM-SALES-OFF in XSOTBL.XSOCD)

        if (OZ0IM001.OZ0IM-SALES-OFF in XSOTBL.XSOCD)
          OZ0IM001.OZ0IM-SALES-OFF-DESC = XSOTBL.XSOSNM[sysVar.arrayIndex];
        end
        if (OZ0IM001.OZ0IM-SALES-OFF in XSOTBL.XSOCD)
          OZ0IM001.OZ0IM-ADDRESS1 = XSOTBL.XXX-ADDR1[sysVar.arrayIndex];
        end
        if (OZ0IM001.OZ0IM-SALES-OFF in XSOTBL.XSOCD)
          OZ0IM001.OZ0IM-ADDRESS2 = XSOTBL.XXX-ADDR2[sysVar.arrayIndex];
        end
        if (OZ0IM001.OZ0IM-SALES-OFF in XSOTBL.XSOCD)
          OZ0IM001.OZ0IM-CITY = XSOTBL.XXXCITY[sysVar.arrayIndex];
        end
        if (OZ0IM001.OZ0IM-SALES-OFF in XSOTBL.XSOCD)
          OZ0IM001.OZ0IM-ZIP = XSOTBL.XXXZIP[sysVar.arrayIndex];
        end
  
      end
  
  
      OZ0IW00.OZ0IW-SWR = "Y"; /* Request for data switch*/

    end


    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OZ0I-00000; /* Converse the main process*/


    OZ0I-00000: OZ0I-00000();
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OZ0I-00000; /* Converse the main process*/


  end // end main
end // end OZ0I


// Main process to display a map
Function OZ0I-00000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) If specified, display the first map.*/
  /* 2) Otherwise, if specified, display the second map, depending*/
  /* on function = add or change*/
  /* 3) Otherwise, indicate error and exit to Application Menu.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  if (OZ0IW00.OZ0IW-SWD == "1") /* Map 1 was requested*/

    OZ0I-10000(); /* Display map 1*/

  else

    if (OZ0IW00.OZ0IW-SWD == "2") /* Map 2 was requested*/

  /* PERFORM oz0i-20000;          /* Display map 2*/

    else

      if (OZ0IW00.OZ0IW-SWD == "2") /* Map 2 was requested*/

  /* PERFORM oz0i-30000;        /* Display map 2*/

      else

      /* ------------------------------------------------------------*/
      /* Write the error to the Error Diagnosis Reporting Facility.*/
      /* ------------------------------------------------------------*/

        OZWREC.XXXPRCNM = "00000"; /* Module identification*/
        OZWREC.XXXMSGNO = 10; /* Unexpected error occurred*/

        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        TA1REC.TA1TYPE = "APPL"; /* Type of error*/
        TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";
        TA1REC.TA1MAPNO = OZ0IW00.OZ0IW-SWD; /* Map number*/
        TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
        TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/

        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      /* ------------------------------------------------------------*/
      /* Exit to display the application system menu.*/
      /* ------------------------------------------------------------*/

        COMMAREA.CATOAP = "KS0A"; /* TO application*/

        XSOZ-S0001(); /* Exit to another application*/

      /* ------------------------------------------------------------*/
      /* Abnormally terminate the transaction if the exit failed.*/
      /* ------------------------------------------------------------*/

        TA1REC.TA1FUNC = "ABND"; /* Termination function*/

        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      end

    end

  end


end // end OZ0I-00000


// Process to add a new row
Function OZ0I-10000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Format the map output area and display the map.*/
  /* 2) Check the attention identifier used to respond.*/
  /* 3) Reset highlighted fields to normal intensity.*/
  /* 4) Verify the data that was entered.*/
  /* 5) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0I-11000(); /* Obtain data to display*/

  OZ0I-12000(); /* Format and display the map*/

  OZ0I-13000(); /* Check attention identifier*/

  OZ0I-14000(); /* Reset fields to normal intensity*/

  OZ0I-16000(); /* Process valid input request*/


end // end OZ0I-10000


// Obtain the data to display
Function OZ0I-11000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  if (OZ0IW00.OZ0IW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/
  /* VE 0440 TO OZ0IW00.XXXTSLEN;   /*temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/
  /* IF OZ0IW00.XXXTSPAG EQ 0;        /* no pages established*/
  /* MOVE 1 TO OZ0IW00.XXXTSPAG;    /* Page number to display*/
  /* END;*/

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/
  /* RFORM OZ0I-11100;              /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Perform screen header edits*/
  /* ------------------------------------------------------------*/
  /* RFORM OZ0I-11200;              /* build screen header*/

  /* ------------------------------------------------------------*/
  /* get the data*/
  /* ------------------------------------------------------------*/
  if (OZ0IW00.OZ0IW-OVERRIDE-DI == "Y")
    OZ0I-11700(); /* read vocldo01*/
  else
    OZ0I-11300(); /* read vocldc01*/
  end

end // end OZ0I-11000


// Purge any temporary storage
Function OZ0I-11100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/

  set OZ0IW01 empty; /* M001 display storage*/

  OZ0IW00.OZ0IW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0IW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "OZ0I"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "11100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-11100


// Obtain the data to display
Function OZ0I-11300()
  if (OZ0IW00.OZ0IW-SV-CUST > "      ")
    OZ0IW00.OZ0IW-CUST-STR-DPT = OZ0IM001.OZ0IM-CUST-STR-DPT;
    OZ0IW00.OZ0IW-SV-CUST-NUM = OZ0IW00.OZ0IW-SV-CUST;
    OZ0IW00.OZ0IW-SV-STR-NUM = OZ0IW00.OZ0IW-SV-STR;
    OZ0IW00.OZ0IW-SV-DPT-NUM = OZ0IW00.OZ0IW-SV-DPT;

    OZ0I-11310(); /* select vocldc01 record*/

    if (SQLCA.VAGen_SQLCODE == +100)
      if (COMMAREA.CAFROMAP == "OZ0H"
       || COMMAREA.CAFROMAP == "OZ0G")
        OZ0IW00.OZ0IW-SWR = "Y";
        OZ0IW00.OZ0IW-SWF = "N";
        OZWREC.XXXMSGNO = 79; /* No data - highlighted flds*/

        set OZ0IM001.OZ0IM-CUST-CONFIRM bold;
        set OZ0IM001.OZ0IM-CUST-DISCREP bold;
        set OZ0IM001.OZ0IM-SR-CONFIRM bold;
        set OZ0IM001.OZ0IM-SR-DISCREP bold;
        set OZ0IM001.OZ0IM-GROUP-BY bold;
        set OZ0IM001.OZ0IM-DIST-TYPE bold;
        set OZ0IM001.OZ0IM-ADDRESS-NM bold;
        set OZ0IM001.OZ0IM-ADDRESS1 bold;
        set OZ0IM001.OZ0IM-ADDRESS2 bold;
        set OZ0IM001.OZ0IM-CITY bold;
        set OZ0IM001.OZ0IM-STATE bold;
        set OZ0IM001.OZ0IM-ZIP bold;

        set OZ0IM001.OZ0IM-SLS-REP-HDR noHighLight;
        set OZ0IM001.OZ0IM-SALES-REP skip, noHighLight;
        set OZ0IM001.OZ0IM-SR-FIRST-NM noHighLight;
        set OZ0IM001.OZ0IM-SR-LAST-NM noHighLight;

      else

        OZWREC.XXXMSGNO = 16; /* No data was found to display*/
        OZ0IM001.OZ0IM-CUST-CONFIRM = "N";
        OZ0IM001.OZ0IM-CUST-DISCREP = "N";
        OZ0IM001.OZ0IM-SR-CONFIRM = "N";
        OZ0IM001.OZ0IM-SR-DISCREP = "N";
        OZ0IM001.OZ0IM-DIST-TYPE = "US";
        OZWREC.XXXPRCNM = "11300";
        return;
      end

    end

    if (VOCLDC01.SOCD-CUST-REQ-CD == "NR")
      OZ0IM001.OZ0IM-CUST-CONFIRM = "N";
      OZ0IM001.OZ0IM-CUST-DISCREP = "N";
    else
      if (VOCLDC01.SOCD-CUST-REQ-CD == "CO")
        OZ0IM001.OZ0IM-CUST-CONFIRM = "Y";
        OZ0IM001.OZ0IM-CUST-DISCREP = "N";
      else
        if (VOCLDC01.SOCD-CUST-REQ-CD == "DO")
          OZ0IM001.OZ0IM-CUST-CONFIRM = "N";
          OZ0IM001.OZ0IM-CUST-DISCREP = "Y";
        else
          if (VOCLDC01.SOCD-CUST-REQ-CD == "CD")
            OZ0IM001.OZ0IM-CUST-CONFIRM = "Y";
            OZ0IM001.OZ0IM-CUST-DISCREP = "Y";
          end
        end
      end
    end

    if (VOCLDC01.SOCD-SREP-REQ-CD == "NR")
      OZ0IM001.OZ0IM-SR-CONFIRM = "N";
      OZ0IM001.OZ0IM-SR-DISCREP = "N";
    else
      if (VOCLDC01.SOCD-SREP-REQ-CD == "CO")
        OZ0IM001.OZ0IM-SR-CONFIRM = "Y";
        OZ0IM001.OZ0IM-SR-DISCREP = "N";
      else
        if (VOCLDC01.SOCD-SREP-REQ-CD == "DO")
          OZ0IM001.OZ0IM-SR-CONFIRM = "N";
          OZ0IM001.OZ0IM-SR-DISCREP = "Y";
        else
          if (VOCLDC01.SOCD-SREP-REQ-CD == "CD")
            OZ0IM001.OZ0IM-SR-CONFIRM = "Y";
            OZ0IM001.OZ0IM-SR-DISCREP = "Y";
          end
        end
      end
    end

    OZ0IM001.OZ0IM-GROUP-BY = VOCLDC01.SOCD-LTR-TYP-CD;
    OZ0IM001.OZ0IM-DIST-TYPE = VOCLDC01.SOCD-LTR-DIST-CD;

    set VOCLCD01 empty;

    VOCLCD01.SOCD-LTR-DIST-CD = VOCLDC01.SOCD-LTR-DIST-CD;

    OZ0I-11315(); /* read for ltr dist cd desc*/
    OZ0IM001.OZ0IM-DIST-TYPE-DESC = VOCLCD01.SOCD-LTR-DIST-DESC;

    OZ0I-11320(); /* read for address type cd*/

    if (VOCBUY01.SOCD-ADDR-TYP-CD == "CO"
     || VOCBUY01.SOCD-ADDR-TYP-CD == "CR"
     || VOCBUY01.SOCD-ADDR-TYP-CD == "BG")
      OZ0I-11400();
    end

    if (VOCBUY01.SOCD-ADDR-TYP-CD == "ST"
     || VOCBUY01.SOCD-ADDR-TYP-CD == "SG")
      OZ0I-11500(); /* build address*/
    end

    if (VOCBUY01.SOCD-ADDR-TYP-CD == "BA")
      OZ0I-11600(); /* build address*/
    end

    if (OZ0IW00.OZ0IW-NAME-BLD1 == " ")
      OZ0IW00.OZ0IW-NAME-BLD1 = OZ0IM001.OZ0IM-CU-CO-NM-HDR;
    end

    OZ0IW00.OZ0IW-NAME-BLD2 = "NIKE";

    if (OZ0IM001.OZ0IM-SALES-OFF == "70" || 
    OZ0IM001.OZ0IM-SALES-OFF == "71" || 
    OZ0IM001.OZ0IM-SALES-OFF == "72")
      OZ0IW00.OZ0IW-NAME-BLD3 = OZ0IM001.OZ0IM-SALES-OFF-DESC;
    else
      OZ0IW00.OZ0IW-NAME-BLD3 = OZ0IM001.OZ0IM-GPC-DESC;
    end

    OZ0IW00.OZ0IW-NAME-BLD4 = "BUYER";
    OZ0IM001.OZ0IM-ADDRESS-NM = OZ0IW00.OZ0IW-NAME-BUILD;

    OZ0IW00.OZ0IW-SWR = "N"; /* Request for data switch*/
  else
    OZ0IM001.OZ0IM-CUST-STR-DPT = "ALL";
    OZ0IM001.OZ0IM-CUST-CONFIRM = "Y";
    OZ0IM001.OZ0IM-CUST-DISCREP = "Y";
    OZ0IM001.OZ0IM-SR-CONFIRM = "Y";
    OZ0IM001.OZ0IM-SR-DISCREP = "Y";
    OZ0IM001.OZ0IM-DIST-TYPE = "US";
    VOCLCD01.SOCD-LTR-DIST-CD = "US";
    OZ0I-11315(); /* read for ltr dist cd desc*/
    OZ0IM001.OZ0IM-DIST-TYPE-DESC = VOCLCD01.SOCD-LTR-DIST-DESC;
    OZ0IM001.OZ0IM-INCLUDE-ALL = "Y";
    if (OZ0IM001.OZ0IM-GROUP-BY == " ")
      set OZ0IM001.OZ0IM-GROUP-BY cursor, bold;
      converseLib.validationFailed(37);
      OZ0IW00.OZ0IW-SWF = "N";
    end
  end
end // end OZ0I-11300


// select vocldc01 record
Function OZ0I-11310()
  set VOCLCD01 empty;
  VOCLDC01.KUCCOID = OZ0IW00.OZ0IW-SV-CUST-NUM;
  VOCLDC01.KUMSTRID = OZ0IW00.OZ0IW-SV-STR-NUM;
  VOCLDC01.XNXCD = OZ0IW00.OZ0IW-SV-DPT-NUM;
  VOCLDC01.XGPCD = OZ0IM001.OZ0IM-GPC-CD;
  VOCLDC01.XSOCD = OZ0IM001.OZ0IM-SALES-OFF;
  VOCLDC01.SOCD-DIST-SEQ-NBR = 0000;

  try
    call "VOCLDC01" ("S ", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01.VOCLDC01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-11310


// select voclcd01 record
Function OZ0I-11315()

  try
    call "VOCLCD01" ("S ", SQLCA, VOCLCD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11315"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLCD01.VOCLCD01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-11315


// read vocbuy01 record
Function OZ0I-11320()
  set VOCBUY01 empty;

  VOCBUY01.SOCD-CUST-BUYER-ID = VOCLDC01.SOCD-BUYER-ID;

  try
    call "VOCBUY01" ("S ", SQLCA, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11315"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLCD01.VOCLCD01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-11320


// Select vaddr001 record
Function OZ0I-11340()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  try
    call "IO0170" ("S ", SQLCA, KULREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11420"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KULREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KULREC.KULGRP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-11340


// lookup address
Function OZ0I-11400()
  if (VOCBUY01.SOCD-ADDR-TYP-CD == "CO"
   || VOCBUY01.SOCD-ADDR-TYP-CD == "CR"
   || VOCBUY01.SOCD-ADDR-TYP-CD == "BG")

    OZ0I-11410(); /* read vcmpny01 table*/

    OZ0IW00.OZ0IW-NAME-BLD1 = KUCREC.KUCCONM;

    set KULREC empty;

    if (VOCBUY01.SOCD-ADDR-TYP-CD == "CO")
      KULREC.KULAAID = KUCREC.KUCCOAID;
    else
      if (VOCBUY01.SOCD-ADDR-TYP-CD == "CR")
        KULREC.KULAAID = KUCREC.KUCCOAID;
      else
        KULREC.KULAAID = KUCREC.KUCBLAID;
      end
    end

    KULREC.KUCCOID = KUCREC.KUCCOID;

    OZ0I-11340(); /* read vaddr001 table*/

    OZ0IM001.OZ0IM-ADDRESS1 = KULREC.XXX-ADDR3;
    OZ0IM001.OZ0IM-ADDRESS2 = KULREC.XXX-ADDR4;
    OZ0IM001.OZ0IM-CITY = KULREC.XXXCITY;
    OZ0IM001.OZ0IM-STATE = KULREC.XSTCD;
    OZ0IM001.OZ0IM-ZIP = KULREC.XXXZIP;

  end
end // end OZ0I-11400


// Select vcmpny01 record
Function OZ0I-11410()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set KUCREC empty; /* Clear row storage area*/

  KUCREC.KUCCOID = OZ0IW00.OZ0IW-SV-CUST-NUM;


  try
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11410"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUCREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-11410


// lookup address
Function OZ0I-11500()
  if (VOCBUY01.SOCD-ADDR-TYP-CD == "ST"
   || VOCBUY01.SOCD-ADDR-TYP-CD == "SG")

    OZ0I-11510(); /* read vstore01 table*/

    OZ0IW00.OZ0IW-NAME-BLD1 = KUMREC.KUMSTSNM;

    set KULREC empty;

    if (VOCBUY01.SOCD-ADDR-TYP-CD == "ST")
      KULREC.KULAAID = KUMREC.KUMSTAID;
    else
      if (VOCBUY01.SOCD-ADDR-TYP-CD == "SG")
        KULREC.KULAAID = KUMREC.KUMSHAID;
      end
    end

    KULREC.KUCCOID = KUMREC.KUCCOID;

    OZ0I-11340(); /* read vaddr001 table*/

    OZ0IM001.OZ0IM-ADDRESS1 = KULREC.XXX-ADDR3;
    OZ0IM001.OZ0IM-ADDRESS2 = KULREC.XXX-ADDR4;
    OZ0IM001.OZ0IM-CITY = KULREC.XXXCITY;
    OZ0IM001.OZ0IM-STATE = KULREC.XSTCD;
    OZ0IM001.OZ0IM-ZIP = KULREC.XXXZIP;

  end
end // end OZ0I-11500


// Select vstore01 record
Function OZ0I-11510()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set KUMREC empty; /* Clear row storage area*/

  KUMREC.KUCCOID = OZ0IW00.OZ0IW-SV-CUST-NUM;
  KUMREC.KUMSTRID = VOCBUY01.KUMSTRID;


  try
    call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11510"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUMREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUMREC.KUMGRP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-11510


// lookup address
Function OZ0I-11600()
  OZ0I-11610(); /* read vocbad01 table*/

  OZ0IM001.OZ0IM-EMAIL-ADDRESS = VOCBAD01.XXX-EMAIL-ADDR;
  OZ0IM001.OZ0IM-ADDRESS1 = VOCBAD01.XXX-ADDR1;
  OZ0IM001.OZ0IM-ADDRESS2 = VOCBAD01.XXX-ADDR2;
  OZ0IM001.OZ0IM-CITY = VOCBAD01.XXX-CITY;
  OZ0IM001.OZ0IM-STATE = VOCBAD01.XST-ST-CD;
  OZ0IM001.OZ0IM-ZIP = VOCBAD01.XXX-ZIP;
end // end OZ0I-11600


// Select vocbad01 record
Function OZ0I-11610()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set VOCBAD01 empty; /* Clear row storage area*/

  VOCBAD01.SOCD-CUST-BUYER-ID = VOCBUY01.SOCD-CUST-BUYER-ID;


  try
    call "VOCBAD01" ("S ", SQLCA, VOCBAD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11610"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCBAD01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCBAD01.VOCBAD01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-11610


// Obtain the data to display
Function OZ0I-11700()
  OZ0I-11710(); /* select vocldo01 record*/

  if (SQLCA.VAGen_SQLCODE == +100)
    OZWREC.XXXPRCNM = "11700";
    OZ0IM001.OZ0IM-CUST-CONFIRM = "N";
    OZ0IM001.OZ0IM-CUST-DISCREP = "N";
    OZ0IM001.OZ0IM-SR-CONFIRM = "N";
    OZ0IM001.OZ0IM-SR-DISCREP = "N";
    OZ0IM001.OZ0IM-DIST-TYPE = "US";
    OZWREC.XXXMSGNO = 16; /* No data was found to display*/
    set OZ0IM001.OZ0IM-SALES-REP cursor;
    return;
  end

  if (VOCLDO01.SOCD-CUST-REQ-CD == "NR")
    OZ0IM001.OZ0IM-CUST-CONFIRM = "N";
    OZ0IM001.OZ0IM-CUST-DISCREP = "N";
  else
    if (VOCLDO01.SOCD-CUST-REQ-CD == "CO")
      OZ0IM001.OZ0IM-CUST-CONFIRM = "Y";
      OZ0IM001.OZ0IM-CUST-DISCREP = "N";
    else
      if (VOCLDO01.SOCD-CUST-REQ-CD == "DO")
        OZ0IM001.OZ0IM-CUST-CONFIRM = "N";
        OZ0IM001.OZ0IM-CUST-DISCREP = "Y";
      else
        if (VOCLDO01.SOCD-CUST-REQ-CD == "CD")
          OZ0IM001.OZ0IM-CUST-CONFIRM = "Y";
          OZ0IM001.OZ0IM-CUST-DISCREP = "Y";
        end
      end
    end
  end

  if (VOCLDO01.SOCD-SREP-REQ-CD == "NR")
    OZ0IM001.OZ0IM-SR-CONFIRM = "N";
    OZ0IM001.OZ0IM-SR-DISCREP = "N";
  else
    if (VOCLDO01.SOCD-SREP-REQ-CD == "CO")
      OZ0IM001.OZ0IM-SR-CONFIRM = "Y";
      OZ0IM001.OZ0IM-SR-DISCREP = "N";
    else
      if (VOCLDO01.SOCD-SREP-REQ-CD == "DO")
        OZ0IM001.OZ0IM-SR-CONFIRM = "N";
        OZ0IM001.OZ0IM-SR-DISCREP = "Y";
      else
        if (VOCLDO01.SOCD-SREP-REQ-CD == "CD")
          OZ0IM001.OZ0IM-SR-CONFIRM = "Y";
          OZ0IM001.OZ0IM-SR-DISCREP = "Y";
        end
      end
    end
  end

  OZ0IM001.OZ0IM-GROUP-BY = VOCLDO01.SOCD-LTR-TYP-CD;
  OZ0IM001.OZ0IM-INCLUDE-ALL = VOCLDO01.SOCD-BYPAS-ELIG-FL;

  OZ0IM001.OZ0IM-DIST-TYPE = VOCLDO01.SOCD-LTR-DIST-CD;

  set VOCLCD01 empty;

  VOCLCD01.SOCD-LTR-DIST-CD = VOCLDO01.SOCD-LTR-DIST-CD;

  OZ0I-11315(); /* read for ltr dist cd desc*/
  OZ0IM001.OZ0IM-DIST-TYPE-DESC = VOCLCD01.SOCD-LTR-DIST-DESC;

  if (OZ0IW00.OZ0IW-NAME-BLD1 == " ")
    OZ0IW00.OZ0IW-NAME-BLD1 = OZ0IM001.OZ0IM-CU-CO-NM-HDR;
  end

  OZ0IW00.OZ0IW-NAME-BLD2 = "NIKE";
  OZ0IW00.OZ0IW-NAME-BLD3 = OZ0IM001.OZ0IM-GPC-DESC;
  OZ0IW00.OZ0IW-NAME-BLD4 = "BUYER";
  OZ0IM001.OZ0IM-ADDRESS-NM = OZ0IW00.OZ0IW-NAME-BUILD;

  OZ0IM001.OZ0IM-ADDRESS1 = VOCLDO01.XXX-ADDR1;
  OZ0IM001.OZ0IM-ADDRESS2 = VOCLDO01.XXX-ADDR2;
  OZ0IM001.OZ0IM-CITY = VOCLDO01.XXX-CITY;
  OZ0IM001.OZ0IM-STATE = VOCLDO01.XST-ST-CD;
  OZ0IM001.OZ0IM-ZIP = VOCLDO01.XXX-ZIP;

  OZ0IW00.OZ0IW-SWR = "N"; /* Request for data switch*/
end // end OZ0I-11700


// select vocldo01 record
Function OZ0I-11710()
  set VOCLDO01 empty;
  VOCLDO01.SOCD-LTR-OVRD-ID = OZ0IW00.OZ0IW-SOCD-LTR-OVRD-ID;

  try
    call "VOCLDO01" ("S ", SQLCA, VOCLDO01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11710"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDO01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDO01.VOCLDO01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-11710


// Format and converse the map
Function OZ0I-12000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0IW00.OZ0IW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OZ0IW00.OZ0IW-SWF == "Y") /* Map must be formatted*/
                                   /* save header info*/
      OZ0IW00.OZ0IW-CUST-STR-DPT = OZ0IM001.OZ0IM-CUST-STR-DPT;
      OZ0IW00.OZ0IW-CU-CO-NM-HDR = OZ0IM001.OZ0IM-CU-CO-NM-HDR;
      OZ0IW00.OZ0IW-CUST-ORD-ID = OZ0IM001.OZ0IM-CUST-ORD-ID;
      OZ0IW00.OZ0IW-GPC-CD = OZ0IM001.OZ0IM-GPC-CD;
      OZ0IW00.OZ0IW-GPC-DESC = OZ0IM001.OZ0IM-GPC-DESC;
      OZ0IW00.OZ0IW-CUST-PO = OZ0IM001.OZ0IM-CUST-PO;
      OZ0IW00.OZ0IW-SALES-OFF = OZ0IM001.OZ0IM-SALES-OFF;
      OZ0IW00.OZ0IW-SALES-OFF-DESC = OZ0IM001.OZ0IM-SALES-OFF-DESC;
      OZ0IW00.OZ0IW-SALES-REP = OZ0IM001.OZ0IM-SALES-REP;
      OZ0IW00.OZ0IW-SM-SREP-FIRST-NM = OZ0IM001.OZ0IM-SR-FIRST-NM;
      OZ0IW00.OZ0IW-SM-SREP-LAST-NM = OZ0IM001.OZ0IM-SR-LAST-NM;
      OZ0IW00.OZ0IW-CUST-CONFIRM = OZ0IM001.OZ0IM-CUST-CONFIRM;
      OZ0IW00.OZ0IW-CUST-DISCREP = OZ0IM001.OZ0IM-CUST-DISCREP;
      OZ0IW00.OZ0IW-SR-CONFIRM = OZ0IM001.OZ0IM-SR-CONFIRM;
      OZ0IW00.OZ0IW-SR-DISCREP = OZ0IM001.OZ0IM-SR-DISCREP;
      OZ0IW00.OZ0IW-GROUP-BY = OZ0IM001.OZ0IM-GROUP-BY;
      OZ0IW00.OZ0IW-DIST-TYPE = OZ0IM001.OZ0IM-DIST-TYPE;
      OZ0IW00.OZ0IW-DIST-TYPE-DESC = OZ0IM001.OZ0IM-DIST-TYPE-DESC;
      OZ0IW00.OZ0IW-INCLUDE-ALL = OZ0IM001.OZ0IM-INCLUDE-ALL;
      OZ0IW00.OZ0IW-EMAIL-ADDRESS = OZ0IM001.OZ0IM-EMAIL-ADDRESS;
      OZ0IW00.OZ0IW-ADDRESS-NM = OZ0IM001.OZ0IM-ADDRESS-NM;
      OZ0IW00.OZ0IW-ADDRESS1 = OZ0IM001.OZ0IM-ADDRESS1;
      OZ0IW00.OZ0IW-ADDRESS2 = OZ0IM001.OZ0IM-ADDRESS2;
      OZ0IW00.OZ0IW-CITY = OZ0IM001.OZ0IM-CITY;
      OZ0IW00.OZ0IW-STATE = OZ0IM001.OZ0IM-STATE;
      OZ0IW00.OZ0IW-ZIP = OZ0IM001.OZ0IM-ZIP;

      OZ0I-12100(); /* Format the data on the map*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZ0IM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OZ0IM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0IM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OZWREC.XXXMSGNO != 0) /* Message to display*/

      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0IM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OZ0IM001.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/

    set OZ0IM001 alarm; /* Indicate sound alarm*/

  end

  converse OZ0IM001 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = OZ0IM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0IM001.CAITEM; /* Application data*/

end // end OZ0I-12000


// Format the display data
Function OZ0I-12100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set OZ0IM001 initial; /* m001 input/output area*/

  OZ0IW00.OZ0IW-SWF = "N"; /* Format the map switch*/


  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/

  if (OZ0IW00.OZ0IW-SV-CUST == "0000000")
    OZ0IW00.OZ0IW-SV-CUST = "ALL";
    OZ0IW00.OZ0IW-SV-STR = "  ";
    OZ0IW00.OZ0IW-SV-DPT = "  ";
  else
    if (OZ0IW00.OZ0IW-SV-CUST != "ALL")
      if (OZ0IW00.OZ0IW-SV-STR == 0000)
        OZ0IW00.OZ0IW-SV-STR = "****";
      end
      if (OZ0IW00.OZ0IW-SV-DPT == 00)
        OZ0IW00.OZ0IW-SV-DPT = "**";
      end
    end
  end

  OZ0IM001.OZ0IM-CUST-STR-DPT = OZ0IW00.OZ0IW-CUST-STR-DPT;
  OZ0IM001.OZ0IM-CU-CO-NM-HDR = OZ0IW00.OZ0IW-CU-CO-NM-HDR;
  OZ0IM001.OZ0IM-CUST-ORD-ID = OZ0IW00.OZ0IW-CUST-ORD-ID;
  OZ0IM001.OZ0IM-GPC-CD = OZ0IW00.OZ0IW-GPC-CD;
  OZ0IM001.OZ0IM-GPC-DESC = OZ0IW00.OZ0IW-GPC-DESC;
  OZ0IM001.OZ0IM-CUST-PO = OZ0IW00.OZ0IW-CUST-PO;
  OZ0IM001.OZ0IM-SALES-OFF = OZ0IW00.OZ0IW-SALES-OFF;
  OZ0IM001.OZ0IM-SALES-OFF-DESC = OZ0IW00.OZ0IW-SALES-OFF-DESC;
  OZ0IM001.OZ0IM-CUST-CONFIRM = OZ0IW00.OZ0IW-CUST-CONFIRM;
  OZ0IM001.OZ0IM-CUST-DISCREP = OZ0IW00.OZ0IW-CUST-DISCREP;
  OZ0IM001.OZ0IM-SR-CONFIRM = OZ0IW00.OZ0IW-SR-CONFIRM;
  OZ0IM001.OZ0IM-SR-DISCREP = OZ0IW00.OZ0IW-SR-DISCREP;
  OZ0IM001.OZ0IM-GROUP-BY = OZ0IW00.OZ0IW-GROUP-BY;
  OZ0IM001.OZ0IM-DIST-TYPE = OZ0IW00.OZ0IW-DIST-TYPE;
  OZ0IM001.OZ0IM-DIST-TYPE-DESC = OZ0IW00.OZ0IW-DIST-TYPE-DESC;
  OZ0IM001.OZ0IM-INCLUDE-ALL = OZ0IW00.OZ0IW-INCLUDE-ALL;
  OZ0IM001.OZ0IM-EMAIL-ADDRESS = OZ0IW00.OZ0IW-EMAIL-ADDRESS;
  OZ0IM001.OZ0IM-ADDRESS-NM = OZ0IW00.OZ0IW-ADDRESS-NM;
  OZ0IM001.OZ0IM-ADDRESS1 = OZ0IW00.OZ0IW-ADDRESS1;
  OZ0IM001.OZ0IM-ADDRESS2 = OZ0IW00.OZ0IW-ADDRESS2;
  OZ0IM001.OZ0IM-CITY = OZ0IW00.OZ0IW-CITY;
  OZ0IM001.OZ0IM-STATE = OZ0IW00.OZ0IW-STATE;
  OZ0IM001.OZ0IM-ZIP = OZ0IW00.OZ0IW-ZIP;

  if (COMMAREA.CAFROMAP == "OZ0G"
   && OZWREC.EXCEPT-CD == "05")
    OZ0IM001.OZ0IM-SLS-REP-HDR = "SLS REP:";
    OZ0IM001.OZ0IM-SALES-REP = OZ0IW00.OZ0IW-SALES-REP;
    OZ0IM001.OZ0IM-SR-FIRST-NM = OZ0IW00.OZ0IW-SM-SREP-FIRST-NM;
    OZ0IM001.OZ0IM-SR-LAST-NM = OZ0IW00.OZ0IW-SM-SREP-LAST-NM;
    set OZ0IM001.OZ0IM-SALES-REP cursor;
  else
    set OZ0IM001.OZ0IM-SLS-REP-HDR noHighLight;
    set OZ0IM001.OZ0IM-SALES-REP skip, noHighLight;
    set OZ0IM001.OZ0IM-SR-FIRST-NM noHighLight;
    set OZ0IM001.OZ0IM-SR-LAST-NM noHighLight;
  end

  /*  */
end // end OZ0I-12100


// Check attention identifier
Function OZ0I-13000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0IW00.OZ0IW-SWR == "Y") /* Request for data*/
      set OZ0IW01 empty; /* m001 display storage*/
    end

    OZ0IW00.OZ0IW-SWF = "Y"; /* Format the map switch*/
    OZ0IW00.OZ0IW-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/

  if (OZ0IM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0I")
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
        OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0I";
      end

      OZ0I-11100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0IM001.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "33000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack;

  end
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   /* and PF1 was not pressed*/
   && converseVar.eventKey not pf3   /* and PF3 was not pressed*/
   && converseVar.eventKey not pf4   /* and PF3 was not pressed*/
   && converseVar.eventKey not pf20) /* and PF20 was not pressed*/

    OZWREC.XXXPRCNM = "13000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack;

  else

    if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0I")
      OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0I";
    end

  end


   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      OZ0I-13100(); /* build ozwrec*/

      if (OZWREC.OZW-APPIDX > 1)
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX - 1;

        if (OZWREC.OZW-APPL[OZW-APPIDX] > "    ")
          COMMAREA.CATOAP = OZWREC.OZW-APPL[OZW-APPIDX];
        else
          COMMAREA.CATOAP = "OZ0A";
        end

      else
        COMMAREA.CATOAP = COMMAREA.CAFROMAP;
      end

  /* MOVE COMMAREA.CAFROMAP TO COMMAREA.CATOAP;/* TO application*/
    end

    OZ0I-11100(); /* Purge temporary storage*/
    XSOZ-S0001(); /* Exit to another application*/
    exit stack; /* Exit to display map*/

  end


  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf20)

    if (OZ0IM001 not modified)
  /* EZEFLO;*/
    end

  /* the program will return to the calling program at the end of these*/
  /* updates -> in oz0i-16000*/

  end
end // end OZ0I-13000


// Check attention identifier
Function OZ0I-13100()

  /* VE OZ0IM001.OZ0IM-CUST-STR-DPT TO OZWREC.CUST-STR-DPT;*/
  OZWREC.KUCCONM = OZ0IM001.OZ0IM-CU-CO-NM-HDR;
  OZWREC.SOCD-LTR-TYP-CD = OZ0IM001.OZ0IM-GROUP-BY; /* UDAFON*/
  OZWREC.XGPCD = OZ0IM001.OZ0IM-GPC-CD;
  OZWREC.XGPDESC = OZ0IM001.OZ0IM-GPC-DESC;
  OZWREC.SOCD-CURR-CUST-PO = OZ0IM001.OZ0IM-CUST-PO;
  OZWREC.OP1CUOID = OZ0IM001.OZ0IM-CUST-ORD-ID;
  OZWREC.XSOCD = OZ0IM001.OZ0IM-SALES-OFF;
  OZWREC.XSOSNM = OZ0IM001.OZ0IM-SALES-OFF-DESC;
  /* MOVE OZ0IM001.OZ0IM-SALES-REP TO OZWREC.SM4REPID;*/
  OZWREC.XXXFSTNM = OZ0IM001.OZ0IM-SR-FIRST-NM;
  OZWREC.XXXLSTNM = OZ0IM001.OZ0IM-SR-LAST-NM;
  OZWREC.BYPASS-ELIGB = OZ0IM001.OZ0IM-INCLUDE-ALL;
  OZWREC.OVERRIDE-DI = OZ0IW00.OZ0IW-OVERRIDE-DI;
  OZWREC.SOCD-LTR-OVRD-ID = OZ0IW00.OZ0IW-SOCD-LTR-OVRD-ID;
  OZWREC.SOCD-LTR-RQT-ID = OZ0IW00.OZ0IW-SOCD-LTR-RQT-ID;
  OZWREC.SM1AGYID = OZ0IW00.OZ0IW-SM-SAGCY-ID;
  OZWREC.SOCD-APPL-SRC-CD = OZ0IW00.OZ0IW-SOCD-APPL-SRC-CD;
  OZWREC.OZW-HDR-CSD = OZWREC.CUST-STR-DPT; /* /SGOPAL TEST CHANGE*/
  OZWREC.OZW-HDR-CUST = OZWREC.OZW-CUST;
  OZWREC.OZW-HDR-STR = OZWREC.OZW-STOR;
  OZWREC.OZW-HDR-DPT = OZWREC.OZW-DEPT;
end // end OZ0I-13100


// Reset highlighted fields
Function OZ0I-14000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/
  if (COMMAREA.CAFROMAP == "OZ0I")
    set OZ0IM001.OZ0IM-SALES-REP initialAttributes;
  end
  set OZ0IM001.OZ0IM-CUST-CONFIRM initialAttributes;
  set OZ0IM001.OZ0IM-CUST-DISCREP initialAttributes;
  set OZ0IM001.OZ0IM-SR-CONFIRM initialAttributes;
  set OZ0IM001.OZ0IM-SR-DISCREP initialAttributes;
  set OZ0IM001.OZ0IM-GROUP-BY initialAttributes;
  set OZ0IM001.OZ0IM-DIST-TYPE initialAttributes;
  set OZ0IM001.OZ0IM-INCLUDE-ALL initialAttributes;
  set OZ0IM001.OZ0IM-ADDRESS-NM initialAttributes;
  set OZ0IM001.OZ0IM-ADDRESS1 initialAttributes;
  set OZ0IM001.OZ0IM-ADDRESS2 initialAttributes;
  set OZ0IM001.OZ0IM-CITY initialAttributes;
  set OZ0IM001.OZ0IM-STATE initialAttributes;
  set OZ0IM001.OZ0IM-ZIP initialAttributes;

  if (OZ0IM001.OZ0IM-DIST-TYPE == "?")

    XP0S001(); /* perform pop-up window initialize*/

    if (XP0SW00.XP0SWPIX > 0) /* if user selected a code*/
      OZ0IM001.OZ0IM-DIST-TYPE = XP0SM001.XP0SM-SOCD-LTR-DIST-CD[XP0SWPIX];
      OZ0IM001.OZ0IM-DIST-TYPE-DESC = XP0SM001.XP0SM-SOCD-LTR-DIST-DESC[XP0SWPIX];
      set OZ0IM001.OZ0IM-DIST-TYPE cursor;
    else
      OZ0IM001.OZ0IM-DIST-TYPE = " ";
      set OZ0IM001.OZ0IM-DIST-TYPE cursor;
      OZ0IM001.OZ0IM-DIST-TYPE-DESC = " ";
    end

    converseLib.clearScreen();
     /* restore the original map*/
    OZ0IW00.OZ0IW-SWR = "N"; /* no to request for data*/
    OZ0IW00.OZ0IW-SWF = "Y"; /* yo to format map*/

    exit stack; /* go display map*/

  end


  /* ------------------------------------------------------------*/
  /* check for changes*/
  /* ------------------------------------------------------------*/
  if (OZ0IM001.OZ0IM-SALES-REP > 0
   && OZ0IM001.OZ0IM-SALES-REP is modified)
    OZ0I-14100(); /* validate sales rep*/
    if (SQLCA.VAGen_SQLCODE == +100)
      set OZ0IM001.OZ0IM-SALES-REP cursor, bold;
      OZWREC.XXXPRCNM = "14000"; /* Module identification*/
      converseLib.validationFailed(27);
      exit stack;
    else
      if (SM4REC.SM4TDT == 0)
        OZ0IM001.OZ0IM-SR-LAST-NM = SM4REC.XXXLSTNM;
        OZ0IM001.OZ0IM-SR-FIRST-NM = SM4REC.XXXFSTNM;
      else
        OZ0IW00.OZ0IW-NUM-DATE = SM4REC.SM4TDT;

        set TA2REC empty;
        TA2REC.TA2DTOPT = "GREGGREG";
        TA2REC.TA2GRTYP = "A";
        TA2REC.TA2GRGA = VGVar.currentShortGregorianDate;

        call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

        if (TA2REC.TA2RTNCD == 0)
          OZ0IW00.OZ0IW-SV-DATE = TA2GRGGN;
        else
          OZWREC.XXXPRCNM = "11200"; /* Module identification*/
          converseLib.validationFailed(27); /* date invalid*/
          OZ0IW00.OZ0IW-SWR = "N"; /**/
          OZ0IW00.OZ0IW-EDIT-FLAG = "Y"; /* yes to edit flag*/
        end

        if (OZ0IW00.OZ0IW-NUM-DATE > OZ0IW00.OZ0IW-SV-DATE)
          OZ0IM001.OZ0IM-SR-LAST-NM = SM4REC.XXXLSTNM;
          OZ0IM001.OZ0IM-SR-FIRST-NM = SM4REC.XXXFSTNM;

        else
          OZWREC.XXXPRCNM = "11200"; /* Module identification*/
          set OZ0IM001.OZ0IM-SALES-REP cursor, bold;
          converseLib.validationFailed(27); /* sales rep invalid*/
          OZ0IW00.OZ0IW-EDIT-FLAG = "Y"; /* yes to edit flag*/
          OZ0IW00.OZ0IW-SWR = "N"; /**/
        end
      end
    end
  else
    OZ0IM001.OZ0IM-SR-FIRST-NM = " ";
    OZ0IM001.OZ0IM-SR-LAST-NM = " ";
  end

  if (OZ0IM001.OZ0IM-CUST-CONFIRM is modified)
    if (OZ0IM001.OZ0IM-CUST-CONFIRM == "Y" || 
    OZ0IM001.OZ0IM-CUST-CONFIRM == "N")
      /* continue*/
    else
      set OZ0IM001.OZ0IM-CUST-CONFIRM cursor, bold;
      OZWREC.XXXPRCNM = "14000"; /* Module identification*/
      converseLib.validationFailed(18);
      exit stack;
    end
  else
    if (OZ0IM001.OZ0IM-CUST-CONFIRM == " ")
      set OZ0IM001.OZ0IM-CUST-CONFIRM cursor, bold;
      OZWREC.XXXPRCNM = "14000"; /* Module identification*/
      converseLib.validationFailed(18);
      exit stack;
    end
  end

  if (OZ0IM001.OZ0IM-CUST-DISCREP is modified)
    if (OZ0IM001.OZ0IM-CUST-DISCREP == "Y" || 
    OZ0IM001.OZ0IM-CUST-DISCREP == "N")
      /* continue*/
    else
      set OZ0IM001.OZ0IM-CUST-DISCREP cursor, bold;
      OZWREC.XXXPRCNM = "14000"; /* Module identification*/
      converseLib.validationFailed(18);
      exit stack;
    end
  else
    if (OZ0IM001.OZ0IM-CUST-DISCREP == " ")
      set OZ0IM001.OZ0IM-CUST-DISCREP cursor, bold;
      OZWREC.XXXPRCNM = "14000"; /* Module identification*/
      converseLib.validationFailed(18);
      exit stack;
    end
  end

  if (OZ0IM001.OZ0IM-SR-CONFIRM is modified)
    if (OZ0IM001.OZ0IM-SR-CONFIRM == "Y" || 
    OZ0IM001.OZ0IM-SR-CONFIRM == "N")
      /* continue*/
    else
      set OZ0IM001.OZ0IM-SR-CONFIRM cursor, bold;
      OZWREC.XXXPRCNM = "14000"; /* Module identification*/
      converseLib.validationFailed(18);
      exit stack;
    end
  else
    if (OZ0IM001.OZ0IM-SR-CONFIRM == " ")
      set OZ0IM001.OZ0IM-SR-CONFIRM cursor, bold;
      OZWREC.XXXPRCNM = "14000"; /* Module identification*/
      converseLib.validationFailed(18);
      exit stack;
    end
  end

  if (OZ0IM001.OZ0IM-SR-DISCREP is modified)
    if (OZ0IM001.OZ0IM-SR-DISCREP == "Y" || 
    OZ0IM001.OZ0IM-SR-DISCREP == "N")
      /* continue*/
    else
      set OZ0IM001.OZ0IM-SR-DISCREP cursor, bold;
      OZWREC.XXXPRCNM = "14000"; /* Module identification*/
      converseLib.validationFailed(18);
      exit stack;
    end
  else
    if (OZ0IM001.OZ0IM-SR-DISCREP == " ")
      set OZ0IM001.OZ0IM-SR-DISCREP cursor, bold;
      OZWREC.XXXPRCNM = "14000"; /* Module identification*/
      converseLib.validationFailed(18);
      exit stack;
    end
  end

  if (OZ0IM001.OZ0IM-GROUP-BY == "PO" || 
  OZ0IM001.OZ0IM-GROUP-BY == "SO")
      /* continue*/
  else
    set OZ0IM001.OZ0IM-GROUP-BY cursor, bold;
    OZWREC.XXXPRCNM = "14000"; /* Module identification*/
    converseLib.validationFailed(37);
    exit stack;
  end

  set VOCLCD01 empty;
  VOCLCD01.SOCD-LTR-DIST-CD = OZ0IM001.OZ0IM-DIST-TYPE;

  if (OZ0IM001.OZ0IM-DIST-TYPE is modified)
    if (OZ0IM001.OZ0IM-DIST-TYPE > " ")
      OZ0I-11315(); /* read for ltr dist cd desc*/
      if (SQLCA.VAGen_SQLCODE == +100)
        set OZ0IM001.OZ0IM-DIST-TYPE cursor, bold;
        OZWREC.XXXPRCNM = "14000"; /* Module identification*/
        converseLib.validationFailed(38);
        exit stack;
      end
    else
      set OZ0IM001.OZ0IM-DIST-TYPE cursor, bold;
      OZWREC.XXXPRCNM = "14000"; /* Module identification*/
      converseLib.validationFailed(38);
      exit stack;
    end
  else

    if (OZ0IM001.OZ0IM-DIST-TYPE == " ")
      set OZ0IM001.OZ0IM-DIST-TYPE cursor, bold;
      OZWREC.XXXPRCNM = "14000"; /* Module identification*/
      converseLib.validationFailed(38);
      exit stack;
    end
  end

  if (OZ0IM001.OZ0IM-INCLUDE-ALL == " " || 
  OZ0IM001.OZ0IM-INCLUDE-ALL == "Y" || 
  OZ0IM001.OZ0IM-INCLUDE-ALL == "N")
    /* continue*/
  else
    set OZ0IM001.OZ0IM-INCLUDE-ALL cursor, bold;
    OZWREC.XXXPRCNM = "14000"; /* Module identification*/
    converseLib.validationFailed(39);
    exit stack;
  end

  if (COMMAREA.CAFROMAP == "OZ0H"
   || COMMAREA.CAFROMAP == "OZ0G")
    if (OZ0IM001.OZ0IM-ADDRESS-NM == " " || 
    OZ0IM001.OZ0IM-ADDRESS1 == " " || 
    OZ0IM001.OZ0IM-CITY == " " || 
    OZ0IM001.OZ0IM-STATE == " " || 
    OZ0IM001.OZ0IM-ZIP == " ")
      set OZ0IM001.OZ0IM-ADDRESS-NM cursor, bold;
      set OZ0IM001.OZ0IM-ADDRESS1 bold;
      set OZ0IM001.OZ0IM-CITY bold;
      set OZ0IM001.OZ0IM-STATE bold;
      set OZ0IM001.OZ0IM-ZIP bold;
      OZWREC.XXXPRCNM = "14000"; /* Module identification*/
      converseLib.validationFailed(80);
      exit stack;
    end
  end


end // end OZ0I-14000


// Select set and open cursor
Function OZ0I-14100()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set SM4REC empty; /* Clear row storage area*/

  SM4REC.SM4REPID = OZ0IM001.OZ0IM-SALES-REP;


  try
    call "IO0020" ("S ", SQLCA, SM4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0      /* and normal return code*/
   || SQLCA.VAGen_SQLCODE == 100))  

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "14100"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DSLSMN  "; /* Data base name*/
  TA1REC.TA1TBLVU = "SM4REC"; /* Table view name*/
  TA1REC.TA1TBLKE = SM4REC.VREPS001-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-14100


// Process valid input request
Function OZ0I-16000()
  OZ0IW00.OZ0IW-SWF = "Y"; /* Format the map switch*/

  /* IF OZ0IM001.OZ0IM-SALES-REP = OZ0IW00.OZ0IW-SALES-REP AND*/
  /* OZ0IM001.OZ0IM-CUST-CONFIRM = OZ0IW00.OZ0IW-CUST-CONFIRM AND*/
  /* OZ0IM001.OZ0IM-CUST-DISCREP = OZ0IW00.OZ0IW-CUST-DISCREP AND*/
  /* OZ0IM001.OZ0IM-GROUP-BY = OZ0IW00.OZ0IW-GROUP-BY AND*/
  /* OZ0IM001.OZ0IM-SR-CONFIRM = OZ0IW00.OZ0IW-SR-CONFIRM AND*/
  /* OZ0IM001.OZ0IM-SR-DISCREP = OZ0IW00.OZ0IW-SR-DISCREP AND*/
  /* OZ0IM001.OZ0IM-DIST-TYPE = OZ0IW00.OZ0IW-DIST-TYPE AND*/
  /* OZ0IM001.OZ0IM-INCLUDE-ALL = OZ0IW00.OZ0IW-INCLUDE-ALL AND*/
  /* OZ0IM001.OZ0IM-EMAIL-ADDRESS = OZ0IW00.OZ0IW-EMAIL-ADDRESS AND*/
  /* OZ0IM001.OZ0IM-ADDRESS-NM = OZ0IW00.OZ0IW-ADDRESS-NM AND*/
  /* OZ0IM001.OZ0IM-ADDRESS1 = OZ0IW00.OZ0IW-ADDRESS1 AND*/
  /* OZ0IM001.OZ0IM-ADDRESS2 = OZ0IW00.OZ0IW-ADDRESS2 AND*/
  /* OZ0IM001.OZ0IM-CITY = OZ0IW00.OZ0IW-CITY AND*/
  /* OZ0IM001.OZ0IM-STATE = OZ0IW00.OZ0IW-STATE AND*/
  /* OZ0IM001.OZ0IM-ZIP = OZ0IW00.OZ0IW-ZIP;*/
  /* ;  /*   continue*/
  /* ELSE;*/
  OZ0I-16100(); /* build vocldo01 rec to add*/
  OZ0IW00.OZ0IW-OVERRIDE-DI = "Y";
  OZ0IW00.OZ0IW-SOCD-LTR-OVRD-ID = VOCLDO01.SOCD-LTR-OVRD-ID;
  OZ0IW00.OZ0IW-SOCD-LTR-RQT-ID = VOCLDO01.SOCD-LTR-RQT-ID;

  if (COMMAREA.CAFROMAP == "OZ0G")
    if (OZ0IW00.OZ0IW-TBL-SRC == "LTR")
      OZ0I-16200(); /* write new ltm rec/del ltr rec*/
    else
      OZ0I-16300(); /* update existing ltm rec*/
    end
  end

  /* ----------------------------------------------------------------*/
  /* return to calling program*/
  /* ----------------------------------------------------------------*/

  OZ0I-13100(); /* build ozwrec*/

  if (OZWREC.OZW-APPIDX > 1)
    OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX - 1;

    if (OZWREC.OZW-APPL[OZW-APPIDX] > "    ")
      COMMAREA.CATOAP = OZWREC.OZW-APPL[OZW-APPIDX];
    else
      COMMAREA.CATOAP = "OZ0A";
    end

  else
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
  end

  /* MOVE COMMAREA.CAFROMAP TO COMMAREA.CATOAP;/* TO application*/

  OZ0I-11100(); /* Purge temporary storage*/
  XSOZ-S0001(); /* Exit to another application*/
  exit stack; /* Exit to display map*/

  converseLib.validationFailed(1);

  /* END;*/

end // end OZ0I-16000


// build vocldo01 record
Function OZ0I-16100()
  set VOCLDO01 empty;

  if (OZ0IW00.OZ0IW-SOCD-LTR-OVRD-ID == 0)

    OZ0I-16110(); /* get next ovrd id*/
    VOCLDO01.SOCD-LTR-OVRD-ID = VOZCTL01.SOCD-NXT-LTR-OVRD;

    OZ0I-16115(); /* get next ltr req id*/
    VOCLDO01.SOCD-LTR-RQT-ID = VOZCTL01.SOCD-NXT-LTR-RQT;

  else
    VOCLDO01.SOCD-LTR-OVRD-ID = OZ0IW00.OZ0IW-SOCD-LTR-OVRD-ID;
  end


  OZ0IW00.OZ0IW-SEL-CUST-STR-DPT = OZ0IM001.OZ0IM-CUST-STR-DPT;
  OZ0IW00.OZ0IW-CUST-STR-DPT = OZ0IM001.OZ0IM-CUST-STR-DPT;

  if (OZ0IW00.OZ0IW-SV-CUST == "ALL")
    OZ0IW00.OZ0IW-SV-CUST-NUM = 0;
  else
    OZ0IW00.OZ0IW-SV-CUST-NUM = OZ0IW00.OZ0IW-SEL-CUST;
  end
  VOCLDO01.SOCD-CU-CO-ID = OZ0IW00.OZ0IW-SV-CUST-NUM;

  if (OZ0IW00.OZ0IW-SV-STR not numeric)
    OZ0IW00.OZ0IW-SV-STR-NUM = 0;
  else
    OZ0IW00.OZ0IW-SV-STR-NUM = OZ0IW00.OZ0IW-SEL-STR;
  end
  VOCLDO01.SOCD-CU-STOR-ID = OZ0IW00.OZ0IW-SV-STR-NUM;

  if (OZ0IW00.OZ0IW-SV-DPT not numeric)
    OZ0IW00.OZ0IW-SV-DPT-NUM = 0;
  else
    OZ0IW00.OZ0IW-SV-DPT-NUM = OZ0IW00.OZ0IW-SEL-DPT;
  end
  VOCLDO01.SOCD-XNX-DEPT-ID = OZ0IW00.OZ0IW-SV-DPT-NUM;

  VOCLDO01.SOCD-XGP-GPC-CD = OZ0IM001.OZ0IM-GPC-CD;
  VOCLDO01.XSOCD = OZ0IM001.OZ0IM-SALES-OFF;
  VOCLDO01.SOCD-LTR-TYP-CD = OZ0IM001.OZ0IM-GROUP-BY;
  VOCLDO01.SOCD-BYPAS-ELIG-FL = OZ0IM001.OZ0IM-INCLUDE-ALL;
  VOCLDO01.SOCD-LTR-DIST-CD = OZ0IM001.OZ0IM-DIST-TYPE;
  VOCLDO01.XXX-ATTN = OZ0IM001.OZ0IM-ADDRESS-NM;
  VOCLDO01.XXX-ADDR1 = OZ0IM001.OZ0IM-ADDRESS1;
  VOCLDO01.XXX-ADDR2 = OZ0IM001.OZ0IM-ADDRESS2;
  VOCLDO01.XXX-CITY = OZ0IM001.OZ0IM-CITY;
  VOCLDO01.XST-ST-CD = OZ0IM001.OZ0IM-STATE;
  VOCLDO01.XXX-ZIP = OZ0IM001.OZ0IM-ZIP;
  VOCLDO01.XXX-EMAIL-ADDR = OZ0IM001.OZ0IM-EMAIL-ADDRESS;

  if (OZ0IM001.OZ0IM-CUST-CONFIRM == "N" && 
  OZ0IM001.OZ0IM-CUST-DISCREP == "N")
    VOCLDO01.SOCD-CUST-REQ-CD = "NR";
  else
    if (OZ0IM001.OZ0IM-CUST-CONFIRM == "Y" && 
    OZ0IM001.OZ0IM-CUST-DISCREP == "N")
      VOCLDO01.SOCD-CUST-REQ-CD = "CO";
    else
      if (OZ0IM001.OZ0IM-CUST-CONFIRM == "N" && 
      OZ0IM001.OZ0IM-CUST-DISCREP == "Y")
        VOCLDO01.SOCD-CUST-REQ-CD = "DO";
      else
        if (OZ0IM001.OZ0IM-CUST-CONFIRM == "Y" && 
        OZ0IM001.OZ0IM-CUST-DISCREP == "Y")
          VOCLDO01.SOCD-CUST-REQ-CD = "CD";
        end
      end
    end
  end

  if (OZ0IM001.OZ0IM-SR-CONFIRM == "N" && 
  OZ0IM001.OZ0IM-SR-DISCREP == "N")
    VOCLDO01.SOCD-SREP-REQ-CD = "NR";
  else
    if (OZ0IM001.OZ0IM-SR-CONFIRM == "Y" && 
    OZ0IM001.OZ0IM-SR-DISCREP == "N")
      VOCLDO01.SOCD-SREP-REQ-CD = "CO";
    else
      if (OZ0IM001.OZ0IM-SR-CONFIRM == "N" && 
      OZ0IM001.OZ0IM-SR-DISCREP == "Y")
        VOCLDO01.SOCD-SREP-REQ-CD = "DO";
      else
        if (OZ0IM001.OZ0IM-SR-CONFIRM == "Y" && 
        OZ0IM001.OZ0IM-SR-DISCREP == "Y")
          VOCLDO01.SOCD-SREP-REQ-CD = "CD";
        end
      end
    end
  end

  VOCLDO01.SOCD-LTR-COMNT1 = OZWREC.VAGen_COMMENT[1];
  VOCLDO01.SOCD-LTR-COMNT2 = OZWREC.VAGen_COMMENT[2];
  VOCLDO01.SOCD-LTR-COMNT3 = OZWREC.VAGen_COMMENT[3];
  VOCLDO01.SOCD-LTR-COMNT4 = OZWREC.VAGen_COMMENT[4];
  VOCLDO01.SOCD-LTR-COMNT5 = OZWREC.VAGen_COMMENT[5];

  OZ0I-16120(); /* add vocldo01 record*/
  if (SQLCA.VAGen_SQLCODE == 0)
    if (OZ0IM001.OZ0IM-SALES-REP > 0)
      OZ0I-16125(); /* add vocldr01 record*/
    end
  else
    if (SQLCA.VAGen_SQLCODE == -803) /* dup record*/
      OZ0I-16130(); /* update curr vocldo01 record*/
      if (OZ0IM001.OZ0IM-SALES-REP > 0)
        OZ0I-16131(); /* read  curr vocldr01 record*/
        if (SQLCA.VAGen_SQLCODE == 0)
          OZ0I-16132(); /* update curr vocldr01 record*/
        else
          OZ0I-16133(); /* write new  vocldr01 record*/
        end
      end
    end
  end
end // end OZ0I-16100


// read vozctl01
Function OZ0I-16110()
  set VOZCTL01 empty;

  try
    call "VOZCTL01" ("U2", SQLCA, VOZCTL01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16110"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOZCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOZCTL01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16110


// read vozctl01
Function OZ0I-16115()
  set VOZCTL01 empty;

  try
    call "VOZCTL01" ("U3", SQLCA, VOZCTL01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16115"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOZCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOZCTL01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16115


// add new vocldo01 row
Function OZ0I-16120()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDO01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16120"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0IW00.OZ0IW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0IW00.OZ0IW-TM-HH = OZ0IW00.OZ0IW-TB-HH;
  OZ0IW00.OZ0IW-TM-MM = OZ0IW00.OZ0IW-TB-MM;
  VOCLDO01.ZZZCHGTM = OZ0IW00.OZ0IW-TIME-MK;
  VOCLDO01.ZZZSDTM = OZ0IW00.OZ0IW-TIME-MK;

  VOCLDO01.ZZZSDT = TA2REC.TA2GRGGN;
  VOCLDO01.ZZZCHGCT = 0;
  VOCLDO01.XXX-USER-ID = COMMAREA.CAFROMAP;

  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCLDO01" ("A ", SQLCA, VOCLDO01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == -803) /* dup record*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16120"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDO01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDO01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16120


// build vocldo01 record
Function OZ0I-16125()
  set VOCLDR01 empty;

  VOCLDR01.SOCD-LTR-RQT-ID = VOCLDO01.SOCD-LTR-RQT-ID;
  VOCLDR01.SOCD-CU-CO-ID = VOCLDO01.SOCD-CU-CO-ID;
  VOCLDR01.SOCD-CU-STOR-ID = VOCLDO01.SOCD-CU-STOR-ID;
  VOCLDR01.SOCD-XNX-DEPT-ID = VOCLDO01.SOCD-XNX-DEPT-ID;
  VOCLDR01.SOCD-XGP-GPC-CD = VOCLDO01.SOCD-XGP-GPC-CD;
  VOCLDR01.SOCD-SLS-OFC-ID = VOCLDO01.XSOCD;

  VOCLDR01.SM4REPID = OZ0IM001.OZ0IM-SALES-REP;

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDR01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16120"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0IW00.OZ0IW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0IW00.OZ0IW-TM-HH = OZ0IW00.OZ0IW-TB-HH;
  OZ0IW00.OZ0IW-TM-MM = OZ0IW00.OZ0IW-TB-MM;
  VOCLDR01.ZZZCHGTM = OZ0IW00.OZ0IW-TIME-MK;
  VOCLDR01.ZZZSDTM = OZ0IW00.OZ0IW-TIME-MK;

  VOCLDR01.ZZZSDT = TA2REC.TA2GRGGN;
  VOCLDR01.ZZZCHGCT = 0;
  VOCLDR01.XXX-USER-ID = COMMAREA.CAFROMAP;

  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCLDR01" ("A ", SQLCA, VOCLDR01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == -803) /* dup record*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16125"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16125


// build vocldo01 record
Function OZ0I-16130()
  OZ0I-16135(); /* read vocldo01*/

  VOCLDO01.SOCD-LTR-TYP-CD = OZ0IM001.OZ0IM-GROUP-BY;
  VOCLDO01.SOCD-BYPAS-ELIG-FL = OZ0IM001.OZ0IM-INCLUDE-ALL;
  VOCLDO01.SOCD-LTR-DIST-CD = OZ0IM001.OZ0IM-DIST-TYPE;
  VOCLDO01.XXX-ADDR1 = OZ0IM001.OZ0IM-ADDRESS1;
  VOCLDO01.XXX-ADDR2 = OZ0IM001.OZ0IM-ADDRESS2;
  VOCLDO01.XXX-CITY = OZ0IM001.OZ0IM-CITY;
  VOCLDO01.XST-ST-CD = OZ0IM001.OZ0IM-STATE;
  VOCLDO01.XXX-ZIP = OZ0IM001.OZ0IM-ZIP;
  VOCLDO01.XXX-EMAIL-ADDR = OZ0IM001.OZ0IM-EMAIL-ADDRESS;

  if (OZ0IM001.OZ0IM-CUST-CONFIRM == "N" && 
  OZ0IM001.OZ0IM-CUST-DISCREP == "N")
    VOCLDO01.SOCD-CUST-REQ-CD = "NR";
  else
    if (OZ0IM001.OZ0IM-CUST-CONFIRM == "Y" && 
    OZ0IM001.OZ0IM-CUST-DISCREP == "N")
      VOCLDO01.SOCD-CUST-REQ-CD = "CO";
    else
      if (OZ0IM001.OZ0IM-CUST-CONFIRM == "N" && 
      OZ0IM001.OZ0IM-CUST-DISCREP == "Y")
        VOCLDO01.SOCD-CUST-REQ-CD = "DO";
      else
        if (OZ0IM001.OZ0IM-CUST-CONFIRM == "Y" && 
        OZ0IM001.OZ0IM-CUST-DISCREP == "Y")
          VOCLDO01.SOCD-CUST-REQ-CD = "CD";
        end
      end
    end
  end

  if (OZ0IM001.OZ0IM-SR-CONFIRM == "N" && 
  OZ0IM001.OZ0IM-SR-DISCREP == "N")
    VOCLDO01.SOCD-SREP-REQ-CD = "NR";
  else
    if (OZ0IM001.OZ0IM-SR-CONFIRM == "Y" && 
    OZ0IM001.OZ0IM-SR-DISCREP == "N")
      VOCLDO01.SOCD-SREP-REQ-CD = "CO";
    else
      if (OZ0IM001.OZ0IM-SR-CONFIRM == "N" && 
      OZ0IM001.OZ0IM-SR-DISCREP == "Y")
        VOCLDO01.SOCD-SREP-REQ-CD = "DO";
      else
        if (OZ0IM001.OZ0IM-SR-CONFIRM == "Y" && 
        OZ0IM001.OZ0IM-SR-DISCREP == "Y")
          VOCLDO01.SOCD-SREP-REQ-CD = "CD";
        end
      end
    end
  end

  OZ0I-16137(); /* update vocld01*/
end // end OZ0I-16130


// build vocldo01 record
Function OZ0I-16131()
  set VOCLDR01 empty;

  VOCLDR01.SOCD-LTR-RQT-ID = VOCLDO01.SOCD-LTR-RQT-ID;

  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCLDR01" ("S ", SQLCA, VOCLDR01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16131"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16131


// upd  vocldo01 row
Function OZ0I-16132()
  VOCLDR01.SOCD-CU-CO-ID = VOCLDO01.SOCD-CU-CO-ID;
  VOCLDR01.SOCD-CU-STOR-ID = VOCLDO01.SOCD-CU-STOR-ID;
  VOCLDR01.SOCD-XNX-DEPT-ID = VOCLDO01.SOCD-XNX-DEPT-ID;
  VOCLDR01.SOCD-XGP-GPC-CD = VOCLDO01.SOCD-XGP-GPC-CD;
  VOCLDR01.SOCD-SLS-OFC-ID = VOCLDO01.XSOCD;
  VOCLDR01.SM4REPID = OZ0IM001.OZ0IM-SALES-REP;
  VOCLDR01.XXX-USER-ID = COMMAREA.CAFROMAP;

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDR01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16132"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0IW00.OZ0IW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0IW00.OZ0IW-TM-HH = OZ0IW00.OZ0IW-TB-HH;
  OZ0IW00.OZ0IW-TM-MM = OZ0IW00.OZ0IW-TB-MM;
  VOCLDR01.ZZZCHGTM = OZ0IW00.OZ0IW-TIME-MK;

  try
    call "VOCLDR01" ("U ", SQLCA, VOCLDR01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16132"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16132


// upd  vocldo01 row
Function OZ0I-16133()
  VOCLDR01.SOCD-LTR-RQT-ID = VOCLDO01.SOCD-LTR-RQT-ID;
  VOCLDR01.SOCD-CU-CO-ID = VOCLDO01.SOCD-CU-CO-ID;
  VOCLDR01.SOCD-CU-STOR-ID = VOCLDO01.SOCD-CU-STOR-ID;
  VOCLDR01.SOCD-XNX-DEPT-ID = VOCLDO01.SOCD-XNX-DEPT-ID;
  VOCLDR01.SOCD-XGP-GPC-CD = VOCLDO01.SOCD-XGP-GPC-CD;
  VOCLDR01.SOCD-SLS-OFC-ID = VOCLDO01.XSOCD;
  VOCLDR01.SM4REPID = OZ0IM001.OZ0IM-SALES-REP;
  VOCLDR01.XXX-USER-ID = COMMAREA.CAFROMAP;

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDR01.ZZZCHGDT = TA2REC.TA2GRGGN;
    VOCLDR01.ZZZSDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16132"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0IW00.OZ0IW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0IW00.OZ0IW-TM-HH = OZ0IW00.OZ0IW-TB-HH;
  OZ0IW00.OZ0IW-TM-MM = OZ0IW00.OZ0IW-TB-MM;
  VOCLDR01.ZZZCHGTM = OZ0IW00.OZ0IW-TIME-MK;
  VOCLDR01.ZZZSDT = OZ0IW00.OZ0IW-TIME-MK;

  try
    call "VOCLDR01" ("A ", SQLCA, VOCLDR01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16132"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16133


// read vocldo01 row
Function OZ0I-16135()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCLDO01" ("S ", SQLCA, VOCLDO01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16120"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDO01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDO01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16135


// upd  vocldo01 row
Function OZ0I-16137()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/
  VOCLDO01.XXX-USER-ID = COMMAREA.CAFROMAP;

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDO01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16137"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0IW00.OZ0IW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0IW00.OZ0IW-TM-HH = OZ0IW00.OZ0IW-TB-HH;
  OZ0IW00.OZ0IW-TM-MM = OZ0IW00.OZ0IW-TB-MM;
  VOCLDO01.ZZZCHGTM = OZ0IW00.OZ0IW-TIME-MK;

  try
    call "VOCLDO01" ("U ", SQLCA, VOCLDO01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16120"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDO01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDO01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16137


// build vocldo01 record
Function OZ0I-16200()
  set VOCLTR01 empty;

  VOCLTR01.SOCD-CURR-CU-CO-ID = OZWREC.OZW-CUST;
  VOCLTR01.SOCD-CURR-STOR-ID = OZWREC.OZW-STOR;
  VOCLTR01.SOCD-CURR-XNX-DEPT = OZWREC.OZW-DEPT;
  VOCLTR01.SOCD-CURR-GPC-CD = OZWREC.XGPCD;
  VOCLTR01.XSOCD = OZWREC.XSOCD;
  VOCLTR01.SOCD-DIST-SEQ-NBR = OZWREC.SOCD-DIST-SEQ-NBR;
  VOCLTR01.SOCD-LTR-TYP-CD = OZWREC.SOCD-LTR-TYP-CD;
  VOCLTR01.SOCD-LTR-SEQ-NBR = OZWREC.SOCD-LTR-SEQ-NBR;
  VOCLTR01.OP1PARTN = OZWREC.OP1PARTN;
  VOCLTR01.OP1CUOID = OZWREC.OP1CUOID;
  VOCLTR01.OP1NORID = OZWREC.OP1NORID;
  VOCLTR01.SOCD-APPL-SRC-CD = OZWREC.SOCD-APPL-SRC-CD;

  OZ0I-16210(); /* select vocltr01 rec*/


  set VOCLTM01 empty; /* write manual record*/

  VOCLTM01.SOCD-LTR-OVRD-ID = VOCLDO01.SOCD-LTR-OVRD-ID;
  VOCLTM01.OP1PARTN = VOCLTR01.OP1PARTN;
  VOCLTM01.OP1CUOID = VOCLTR01.OP1CUOID;
  VOCLTM01.OP1NORID = VOCLTR01.OP1NORID;
  VOCLTM01.SOCD-APPL-SRC-CD = VOCLTR01.SOCD-APPL-SRC-CD;
  VOCLTM01.SOCD-LTR-TYP-CD = VOCLTR01.SOCD-LTR-TYP-CD;
  VOCLTM01.SOCD-CURR-CUST-PO = VOCLTR01.SOCD-CURR-CUST-PO;
  VOCLTM01.SOCD-LTR-STAT-CD = "RE";
  VOCLTM01.SOCD-REL-SRC-CD = VOCLTR01.SOCD-REL-SRC-CD;
  VOCLTM01.XXX-USER-ID = "OZ0G";

  OZ0I-16220(); /* add vocltm01 rec*/

  /* ------------------------------------------------------------*/
  set VOCLEA01 empty;

  VOCLEA01.SOCD-CURR-CU-CO-ID = VOCLTR01.SOCD-CURR-CU-CO-ID;
  VOCLEA01.SOCD-CURR-STOR-ID = VOCLTR01.SOCD-CURR-STOR-ID;
  VOCLEA01.SOCD-CURR-XNX-DEPT = VOCLTR01.SOCD-CURR-XNX-DEPT;
  VOCLEA01.SOCD-CURR-GPC-CD = VOCLTR01.SOCD-CURR-GPC-CD;
  VOCLEA01.XSOCD = VOCLTR01.XSOCD;
  VOCLEA01.SOCD-DIST-SEQ-NBR = VOCLTR01.SOCD-DIST-SEQ-NBR;
  VOCLEA01.SOCD-LTR-TYP-CD = VOCLTR01.SOCD-LTR-TYP-CD;
  VOCLEA01.SOCD-LTR-SEQ-NBR = VOCLTR01.SOCD-LTR-SEQ-NBR;
  VOCLEA01.OP1PARTN = VOCLTR01.OP1PARTN;
  VOCLEA01.OP1CUOID = VOCLTR01.OP1CUOID;
  VOCLEA01.OP1NORID = VOCLTR01.OP1NORID;
  VOCLEA01.SOCD-APPL-SRC-CD = VOCLTR01.SOCD-APPL-SRC-CD;
  VOCLEA01.SOCD-LTR-XCEP-CD = OZWREC.EXCEPT-CD;

  OZ0I-16230(); /* delete auto dist except record - lea*/

  OZ0I-16235(); /* count any records left of lea*/

  if (VOCLEA01.ZZZSTM == 0) /* no other exceptions found*/

    OZ0I-16240(); /* delete auto dist record - ltr*/

  end
  /* ------------------------------------------------------------*/
end // end OZ0I-16200


// read vocldo01 row
Function OZ0I-16210()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCLTR01" ("S ", SQLCA, VOCLTR01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/
    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16210"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLTR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLTR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16210


// upd  vocldo01 row
Function OZ0I-16220()
  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLTM01.ZZZCHGDT = TA2REC.TA2GRGGN;
    VOCLTM01.ZZZSDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16220"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0IW00.OZ0IW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0IW00.OZ0IW-TM-HH = OZ0IW00.OZ0IW-TB-HH;
  OZ0IW00.OZ0IW-TM-MM = OZ0IW00.OZ0IW-TB-MM;
  VOCLTM01.ZZZCHGTM = OZ0IW00.OZ0IW-TIME-MK;
  VOCLTM01.ZZZSTM = OZ0IW00.OZ0IW-TIME-MK;

  try
    call "VOCLTM01" ("A ", SQLCA, VOCLTM01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16220"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLTM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLTM01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16220


// upd  vocldo01 row
Function OZ0I-16230()

  try
    call "VOCLEA01" ("D ", SQLCA, VOCLEA01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16230"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLEA01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLEA01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16230


// upd  vocldo01 row
Function OZ0I-16235()

  try
    call "VOCLEA01" ("SC", SQLCA, VOCLEA01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16230"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLEA01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLEA01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16235


// upd  vocldo01 row
Function OZ0I-16240()

  try
    call "VOCLTR01" ("D ", SQLCA, VOCLTR01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16240"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLTR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLTR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16240


// build vocldo01 record
Function OZ0I-16300()
  set VOCLTM01 empty;
  set VOCLEM01 empty;

  VOCLEM01.SOCD-LTR-OVRD-ID = OZWREC.SOCD-LTR-OVRD-ID;
  VOCLEM01.OP1PARTN = OZWREC.OP1PARTN;
  VOCLEM01.OP1CUOID = OZWREC.OP1CUOID;
  VOCLEM01.OP1NORID = OZWREC.OP1NORID;
  VOCLEM01.SOCD-APPL-SRC-CD = OZWREC.SOCD-APPL-SRC-CD;

  OZ0I-16305(); /* select voclem01 count*/

  if (VOCLEM01.ZZZSTM <= 1)

    VOCLTM01.SOCD-LTR-OVRD-ID = VOCLDO01.SOCD-LTR-OVRD-ID;
    VOCLTM01.OP1PARTN = OZWREC.OP1PARTN;
    VOCLTM01.OP1CUOID = OZWREC.OP1CUOID;
    VOCLTM01.OP1NORID = OZWREC.OP1NORID;
    VOCLTM01.SOCD-APPL-SRC-CD = OZWREC.SOCD-APPL-SRC-CD;
    OZ0I-16310(); /* select vocltm01 rec*/

    VOCLTM01.SOCD-LTR-STAT-CD = "RE";

    OZ0I-16320(); /* update vocltm01 rec*/

  end

  /* ------------------------------------------------------------*/

  VOCLEM01.SOCD-LTR-XCEP-CD = OZWREC.EXCEPT-CD;

  OZ0I-16330(); /* delete exception records*/
  /* ------------------------------------------------------------*/
end // end OZ0I-16300


// upd  vocldo01 row
Function OZ0I-16305()

  try
    call "VOCLEM01" ("SC", SQLCA, VOCLEM01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16330"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLEM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLEM01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16305


// read vocldo01 row
Function OZ0I-16310()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCLTM01" ("S ", SQLCA, VOCLTM01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/
    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16310"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLTM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLTM01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16310


// upd  vocldo01 row
Function OZ0I-16320()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/
  VOCLTM01.XXX-USER-ID = COMMAREA.CAFROMAP;

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLTM01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16320"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0IW00.OZ0IW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0IW00.OZ0IW-TM-HH = OZ0IW00.OZ0IW-TB-HH;
  OZ0IW00.OZ0IW-TM-MM = OZ0IW00.OZ0IW-TB-MM;
  VOCLTM01.ZZZCHGTM = OZ0IW00.OZ0IW-TIME-MK;

  try
    call "VOCLTM01" ("U ", SQLCA, VOCLTM01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16320"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLTM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLTM01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16320


// upd  vocldo01 row
Function OZ0I-16330()

  try
    call "VOCLEM01" ("D ", SQLCA, VOCLEM01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16330"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLEM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLEM01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0I-16330


//*** RECORD=OZ0IW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record OZ0IW00 type basicRecord
  10 OZ0IW-IXM OZ0IW-IXM ; 
  10 OZ0IW-IX1 OZ0IW-IX1 ; 
  10 OZ0IW-IX2 OZ0IW-IX2 ; 
  10 OZ0IW-IDX OZ0IW-IDX ; 
  10 OZ0IW-CNT OZ0IW-CNT ; 
  10 OZ0IW-SV-CNT OZ0IW-SV-CNT ; 
  10 OZ0IW-ORD-FL OZ0IW-ORD-FL ; 
  10 OZ0IW-ORD-MATCH OZ0IW-ORD-MATCH ; 
  10 OZ0IW-SWC OZ0IW-SWC ; 
  10 OZ0IW-SWD OZ0IW-SWD ; 
  10 OZ0IW-SWF OZ0IW-SWF ; 
  10 OZ0IW-SWR OZ0IW-SWR ; 
  10 OZ0IW-SWU OZ0IW-SWU ; 
  10 OZ0IW-SFN OZ0IW-SFN ; 
  10 OZ0IW-FND OZ0IW-FND ; 
  10 OZ0IW-WRITE-FLG OZ0IW-WRITE-FLG ; 
  10 OZ0IW-ITEM-FLG OZ0IW-ITEM-FLG ; 
  10 OZ0IW-OVERRIDE-DI OZ0IW-OVERRIDE-DI ; 
  10 OZ0IW-SAVE-PAGE OZ0IW-SAVE-PAGE ; 
  10 OZ0IW-SAVE-STORE OZ0IW-SAVE-STORE ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 OZ0IW-CTL-FLD OZ0IW-CTL-FLD ; 
    15 OZ0IW-FNC OZ0IW-FNC ; 
    15 OZ0IW-SAV OZ0IW-SAV ; 
    15 OZ0IW-SAV-PAGE OZ0IW-SAV-PAGE ; 
  10 OZ0IW-TIME-BRK OZ0IW-TIME-BRK ; 
    15 OZ0IW-TB-HH OZ0IW-TB-HH ; 
    15 * char(1) ; 
    15 OZ0IW-TB-MM OZ0IW-TB-MM ; 
    15 * char(1) ; 
    15 OZ0IW-TB-SS OZ0IW-TB-SS ; 
  10 OZ0IW-TIME-MK OZ0IW-TIME-MK ; 
    15 OZ0IW-TM-HH OZ0IW-TM-HH ; 
    15 OZ0IW-TM-MM OZ0IW-TM-MM ; 
  10 * char(3) ; 
  10 OZ0IW-DATE-BRK OZ0IW-DATE-BRK ; 
    15 OZ0IW-DB-CC OZ0IW-DB-CC ; 
    15 OZ0IW-DB-YY OZ0IW-DB-YY ; 
    15 OZ0IW-DB-MM OZ0IW-DB-MM ; 
    15 OZ0IW-DB-DD OZ0IW-DB-DD ; 
  10 OZ0IW-DATE-MK OZ0IW-DATE-MK ; 
    15 OZ0IW-DM-MM OZ0IW-DM-MM ; 
    15 OZ0IW-DM-DASH1 OZ0IW-DM-DASH1 ; 
    15 OZ0IW-DM-DD OZ0IW-DM-DD ; 
    15 OZ0IW-DM-DASH2 OZ0IW-DM-DASH2 ; 
    15 OZ0IW-DM-YY OZ0IW-DM-YY ; 
  10 OZ0IW-NEED-DATE OZ0IW-NEED-DATE ; 
    15 OZ0IW-ND-MM OZ0IW-ND-MM ; 
    15 OZ0IW-ND-SLASH OZ0IW-ND-SLASH ; 
    15 OZ0IW-ND-DD OZ0IW-ND-DD ; 
  10 OZ0IW-SV-DATE OZ0IW-SV-DATE ; 
  10 OZ0IW-NUM-DATE OZ0IW-NUM-DATE ; 
  10 OZ0IW-PO-SO-BLD OZ0IW-PO-SO-BLD ; 
    15 OZ0IW-PO-SO-CHAR OZ0IW-PO-SO-CHAR [25] ; 
  10 OZ0IW-SV-CUSTOMER OZ0IW-SV-CUSTOMER ; 
  10 OZ0IW-SV-CUST-ORD OZ0IW-SV-CUST-ORD ; 
  10 OZ0IW-SV-CUST-PO OZ0IW-SV-CUST-PO ; 
  10 OZ0IW-SV-DEPT OZ0IW-SV-DEPT ; 
  10 OZ0IW-CUST-STR-DPT OZ0IW-CUST-STR-DPT ; 
    15 OZ0IW-SV-CUST OZ0IW-SV-CUST ; 
    15 OZ0IW-DOT1 OZ0IW-DOT1 ; 
    15 OZ0IW-SV-STR OZ0IW-SV-STR ; 
    15 OZ0IW-DOT2 OZ0IW-DOT2 ; 
    15 OZ0IW-SV-DPT OZ0IW-SV-DPT ; 
  10 OZ0IW-CUST-STR-DPT-NUM OZ0IW-CUST-STR-DPT-NUM ; 
    15 OZ0IW-SV-CUST-NUM OZ0IW-SV-CUST-NUM ; 
    15 OZ0IW-SV-STR-NUM OZ0IW-SV-STR-NUM ; 
    15 OZ0IW-SV-DPT-NUM OZ0IW-SV-DPT-NUM ; 
  10 OZ0IW-SV-STOR-ID OZ0IW-SV-STOR-ID ; 
  10 OZ0IW-SV-XNX-DEPT OZ0IW-SV-XNX-DEPT ; 
  10 OZ0IW-SV-STOR-ID-NUM OZ0IW-SV-STOR-ID-NUM ; 
  10 OZ0IW-SV-XNX-DEPT-NUM OZ0IW-SV-XNX-DEPT-NUM ; 
  10 OZ0IW-SV-CU-CO-ID OZ0IW-SV-CU-CO-ID ; 
  10 OZ0IW-VALUE-FIELD OZ0IW-VALUE-FIELD ; 
    15 OZ0IW-VALUE-BRK OZ0IW-VALUE-BRK [10] ; 
  10 OZ0IW-VALUE-BUILD OZ0IW-VALUE-BUILD ; 
    15 OZ0IW-VB-INT OZ0IW-VB-INT ; 
    15 OZ0IW-VB-DOT OZ0IW-VB-DOT ; 
    15 OZ0IW-VB-DEC OZ0IW-VB-DEC ; 
  10 * char(1) ; 
  10 OZ0IW-NAME-BUILD OZ0IW-NAME-BUILD ; 
    15 OZ0IW-NAME-BLD1 OZ0IW-NAME-BLD1 ; 
    15 * char(1) ; 
    15 OZ0IW-NAME-BLD2 OZ0IW-NAME-BLD2 ; 
    15 * char(1) ; 
    15 OZ0IW-NAME-BLD3 OZ0IW-NAME-BLD3 ; 
    15 * char(1) ; 
    15 OZ0IW-NAME-BLD4 OZ0IW-NAME-BLD4 ; 
  10 * char(1) ; 
  10 OZ0IW-EDIT-FLAG OZ0IW-EDIT-FLAG ; 
  10 OZ0IW-CURR-CU-CO-ID OZ0IW-CURR-CU-CO-ID ; 
  10 OZ0IW-CURR-STOR-ID OZ0IW-CURR-STOR-ID ; 
  10 OZ0IW-CURR-XNX-DEPT OZ0IW-CURR-XNX-DEPT ; 
  10 OZ0IW-CU-CO-NM-HDR OZ0IW-CU-CO-NM-HDR ; 
  10 OZ0IW-OP-CUST-ORD-ID OZ0IW-OP-CUST-ORD-ID ; 
    15 * char(8) ; // Edit Flag
    15 OZ0IW-ORD-PART-CHAR OZ0IW-ORD-PART-CHAR ; 
  10 OZ0IW-SOCD-CURR-NEED-DT-FROM OZ0IW-SOCD-CURR-NEED-DT-FROM ; 
  10 OZ0IW-SOCD-CURR-NEED-DT-TO OZ0IW-SOCD-CURR-NEED-DT-TO ; 
  10 OZ0IW-SOCD-APPL-SRC-CD OZ0IW-SOCD-APPL-SRC-CD ; 
  10 OZ0IW-TBL-SRC OZ0IW-TBL-SRC ; 
  10 OZ0IW-CURR-GPC-CD OZ0IW-CURR-GPC-CD ; 
  10 OZ0IW-GPC-DESC OZ0IW-GPC-DESC ; 
  10 OZ0IW-XSO-SLS-OFC-ID OZ0IW-XSO-SLS-OFC-ID ; 
  10 OZ0IW-XSO-SLS-OFC-ID-DESC OZ0IW-XSO-SLS-OFC-ID-DESC ; 
  10 OZ0IW-SP-SPGM-ID OZ0IW-SP-SPGM-ID ; 
  10 OZ0IW-SP-SPGM-ID-DESC OZ0IW-SP-SPGM-ID-DESC ; 
  10 OZ0IW-SM-SAGCY-ID OZ0IW-SM-SAGCY-ID ; 
  10 OZ0IW-SM-SAGCY-ID-DESC OZ0IW-SM-SAGCY-ID-DESC ; 
  10 OZ0IW-SM-SREP-ID OZ0IW-SM-SREP-ID ; 
  10 OZ0IW-SM-SREP-ID-DESC OZ0IW-SM-SREP-ID-DESC ; 
  10 OZ0IW-SM-SREP-FIRST-NM OZ0IW-SM-SREP-FIRST-NM ; 
  10 OZ0IW-SM-SREP-LAST-NM OZ0IW-SM-SREP-LAST-NM ; 
  10 * char(1) ; 
  10 OZ0IW-SEL-GROUP OZ0IW-SEL-GROUP ; 
    15 OZ0IW-SEL-CUST-STR-DPT OZ0IW-SEL-CUST-STR-DPT ; 
      20 OZ0IW-SEL-CUST OZ0IW-SEL-CUST ; 
      20 OZ0IW-SEL-DOT1 char(1) ; 
      20 OZ0IW-SEL-STR OZ0IW-SEL-STR ; 
      20 OZ0IW-SEL-DOT2 char(1) ; 
      20 OZ0IW-SEL-DPT OZ0IW-SEL-DPT ; 
    15 OZ0IW-SEL-CUST-NM-HDR OZ0IW-SEL-CUST-NM-HDR ; 
    15 OZ0IW-CUST-ORD-ID OZ0IW-CUST-ORD-ID ; 
    15 OZ0IW-SEL-LTR-TYP-CD OZ0IW-SEL-LTR-TYP-CD ; 
    15 OZ0IW-SEL-GPC OZ0IW-SEL-GPC ; 
    15 OZ0IW-SEL-GPC-DESC OZ0IW-SEL-GPC-DESC ; 
    15 OZ0IW-CUST-PO OZ0IW-CUST-PO ; 
    15 OZ0IW-SALES-OFF OZ0IW-SALES-OFF ; 
    15 OZ0IW-SALES-OFF-DESC OZ0IW-SALES-OFF-DESC ; 
    15 OZ0IW-SALES-REP OZ0IW-SALES-REP ; 
    15 OZ0IW-SEL-SREP-FIRST-NM OZ0IW-SEL-SREP-FIRST-NM ; 
    15 OZ0IW-SEL-SREP-LAST-NM OZ0IW-SEL-SREP-LAST-NM ; 
    15 OZ0IW-SEL-1ST-ORD-ID OZ0IW-SEL-1ST-ORD-ID ; 
    15 OZ0IW-SEL-XPTCD OZ0IW-SEL-XPTCD ; 
    15 OZ0IW-SEL-OP-CUST-PO OZ0IW-SEL-OP-CUST-PO ; 
  10 * char(1) ; 
  10 OZ0IW-GROUP OZ0IW-GROUP ; 
    15 OZ0IW-GPC-CD OZ0IW-GPC-CD ; 
    15 OZ0IW-SOCD-CURR-CUST-PO OZ0IW-SOCD-CURR-CUST-PO ; 
    15 OZ0IW-SREP-FIRST-NM OZ0IW-SREP-FIRST-NM ; 
    15 OZ0IW-SREP-LAST-NM OZ0IW-SREP-LAST-NM ; 
  10 OZ0IW-CUST-CONFIRM OZ0IW-CUST-CONFIRM ; 
  10 OZ0IW-CUST-DISCREP OZ0IW-CUST-DISCREP ; 
  10 OZ0IW-SR-CONFIRM OZ0IW-SR-CONFIRM ; 
  10 OZ0IW-SR-DISCREP OZ0IW-SR-DISCREP ; 
  10 OZ0IW-GROUP-BY OZ0IW-GROUP-BY ; 
  10 OZ0IW-DIST-TYPE OZ0IW-DIST-TYPE ; 
  10 OZ0IW-DIST-TYPE-DESC OZ0IW-DIST-TYPE-DESC ; 
  10 OZ0IW-INCLUDE-ALL OZ0IW-INCLUDE-ALL ; 
  10 OZ0IW-EMAIL-ADDRESS OZ0IW-EMAIL-ADDRESS ; 
  10 OZ0IW-ADDRESS-NM OZ0IW-ADDRESS-NM ; 
  10 OZ0IW-ADDRESS1 OZ0IW-ADDRESS1 ; 
  10 OZ0IW-ADDRESS2 OZ0IW-ADDRESS2 ; 
  10 OZ0IW-CITY OZ0IW-CITY ; 
  10 OZ0IW-STATE OZ0IW-STATE ; 
  10 OZ0IW-ZIP OZ0IW-ZIP ; 
  10 OZ0IW-SOCD-LTR-OVRD-ID OZ0IW-SOCD-LTR-OVRD-ID ; 
  10 OZ0IW-SOCD-LTR-RQT-ID OZ0IW-SOCD-LTR-RQT-ID ; 
end // end OZ0IW00


//*** RECORD=OZ0IW01 ****
// /*
// /*      application working storage for map1
// /*
// ***********************
Record OZ0IW01 type basicRecord
  5 OZ0IW-MAP OZ0IW-MAP ; 
    10 * char(15) ; // Temporary storage page length
    10 OZ0IW-CUST-STR-DPT OZ0IW-CUST-STR-DPT ; 
    10 OZ0IW-CU-CO-NM-HDR OZ0IW-CU-CO-NM-HDR ; 
    10 OZ0IW-GPC-CD OZ0IW-GPC-CD ; 
    10 OZ0IW-GPC-DESC OZ0IW-GPC-DESC ; 
    10 OZ0IW-SALES-OFF OZ0IW-SALES-OFF ; 
    10 OZ0IW-SALES-OFF-DESC OZ0IW-SALES-OFF-DESC ; 
    10 OZ0IW-CUST-ORD-ID OZ0IW-CUST-ORD-ID ; 
    10 OZ0IW-CUST-PO OZ0IW-CUST-PO ; 
    10 OZ0IW-SALES-REP OZ0IW-SALES-REP ; 
    10 OZ0IW-SR-FIRST-NM OZ0IW-SR-FIRST-NM ; 
    10 OZ0IW-SR-LAST-NM OZ0IW-SR-LAST-NM ; 
    10 OZ0IW-CUST-CONFIRM OZ0IW-CUST-CONFIRM ; 
    10 OZ0IW-CUST-DISCREP OZ0IW-CUST-DISCREP ; 
    10 OZ0IW-GROUP-BY OZ0IW-GROUP-BY ; 
    10 OZ0IW-SR-CONFIRM OZ0IW-SR-CONFIRM ; 
    10 OZ0IW-SR-DISCREP OZ0IW-SR-DISCREP ; 
    10 OZ0IW-DIST-TYPE OZ0IW-DIST-TYPE ; 
    10 OZ0IW-DIST-TYPE-DESC OZ0IW-DIST-TYPE-DESC ; 
    10 OZ0IW-INCLUDE-ALL OZ0IW-INCLUDE-ALL ; 
    10 OZ0IW-EMAIL-ADDRESS OZ0IW-EMAIL-ADDRESS ; 
    10 OZ0IW-ADDRESS-NM OZ0IW-ADDRESS-NM ; 
    10 OZ0IW-ADDRESS1 OZ0IW-ADDRESS1 ; 
    10 OZ0IW-ADDRESS2 OZ0IW-ADDRESS2 ; 
    10 OZ0IW-CITY OZ0IW-CITY ; 
    10 OZ0IW-STATE OZ0IW-STATE ; 
    10 OZ0IW-ZIP OZ0IW-ZIP ; 
    10 * char(96) ; 
end // end OZ0IW01


//*** RECORD=VOCLTM01 ****
// 09/09/97 dordcd.vocltm01 csp record layout
// 
// ************************
Record VOCLTM01 type basicRecord
  5 VOCLTM01-GROUP VOCLTM01-GROUP ; 
    10 VOCLTM01-KEY VOCLTM01-KEY ; 
      15 SOCD-LTR-OVRD-ID SOCD-LTR-OVRD-ID ; 
      15 OP1PARTN OP1PARTN ; 
      15 OP1CUOID OP1CUOID ; 
      15 OP1NORID OP1NORID ; 
      15 SOCD-APPL-SRC-CD SOCD-APPL-SRC-CD ; 
    10 SOCD-LTR-TYP-CD SOCD-LTR-TYP-CD ; 
    10 SOCD-CURR-CUST-PO SOCD-CURR-CUST-PO ; 
    10 SOCD-LTR-STAT-CD SOCD-LTR-STAT-CD ; 
    10 SOCD-REL-SRC-CD SOCD-REL-SRC-CD ; 
    10 XXX-USER-ID XXX-USER-ID ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZSTM ZZZSTM ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end VOCLTM01


//*** RECORD=VOCLTR01 ****
// 09/09/97 dordcd.vocltr01 csp record layout
// 
// ************************
Record VOCLTR01 type basicRecord
  5 VOCLTR01-GROUP VOCLTR01-GROUP ; 
    10 VOCLTR01-KEY VOCLTR01-KEY ; 
      15 SOCD-CURR-CU-CO-ID SOCD-CURR-CU-CO-ID ; 
      15 SOCD-CURR-STOR-ID SOCD-CURR-STOR-ID ; 
      15 SOCD-CURR-XNX-DEPT SOCD-CURR-XNX-DEPT ; 
      15 SOCD-CURR-GPC-CD SOCD-CURR-GPC-CD ; 
      15 XSOCD XSOCD ; 
      15 SOCD-DIST-SEQ-NBR SOCD-DIST-SEQ-NBR ; 
      15 SOCD-LTR-TYP-CD SOCD-LTR-TYP-CD ; 
      15 SOCD-LTR-SEQ-NBR SOCD-LTR-SEQ-NBR ; 
      15 OP1PARTN OP1PARTN ; 
      15 OP1CUOID OP1CUOID ; 
      15 OP1NORID OP1NORID ; 
      15 SOCD-APPL-SRC-CD SOCD-APPL-SRC-CD ; 
    10 SOCD-CURR-CUST-PO SOCD-CURR-CUST-PO ; 
    10 SOCD-LTR-STAT-CD SOCD-LTR-STAT-CD ; 
    10 SOCD-REL-SRC-CD SOCD-REL-SRC-CD ; 
    10 XXX-JOB-ID XXX-JOB-ID ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZSTM ZZZSTM ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end VOCLTR01


DataItem OZ0IW-ADDRESS-NM char(38)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-ADDRESS1 char(38)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-ADDRESS2 char(38)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-CITY char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0IW-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Pass record control field
DataItem OZ0IW-CTL-FLD char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-CU-CO-NM-HDR char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-CURR-CU-CO-ID char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-CURR-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-CURR-STOR-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-CURR-XNX-DEPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-CUST-CONFIRM char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-CUST-DISCREP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-CUST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0IW-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0IW-CUST-STR-DPT-NUM num(13)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-DATE-BRK num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-DATE-MK char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-DB-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-DB-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-DB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-DB-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-DIST-TYPE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-DIST-TYPE-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-DM-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-DM-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-DM-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-DM-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-DM-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-DOT1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-DOT2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-EDIT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-EMAIL-ADDRESS char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Map function switch
DataItem OZ0IW-FNC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0IW-FND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0IW-GPC-DESC char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-GROUP char(41)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-GROUP-BY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0IW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-INCLUDE-ALL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0IW-ITEM-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0IW-IX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0IW-IX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0IW-IXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Temporary storage page length
DataItem OZ0IW-MAP char(511)  {
  align = right, fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-NAME-BLD1 char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-NAME-BLD2 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-NAME-BLD3 char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-NAME-BLD4 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-NAME-BUILD char(31)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-ND-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-ND-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-ND-SLASH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-NEED-DATE char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Binary work year
DataItem OZ0IW-NUM-DATE int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-OP-CUST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0IW-ORD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0IW-ORD-MATCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0IW-OVERRIDE-DI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-PO-SO-BLD char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-PO-SO-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SALES-OFF char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SALES-OFF-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SALES-REP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save index for WS
DataItem OZ0IW-SAV num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save page for cursor placement
DataItem OZ0IW-SAV-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Page save field
DataItem OZ0IW-SAVE-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Page save field
DataItem OZ0IW-SAVE-STORE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SEL-1ST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-SEL-CUST num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-SEL-CUST-NM-HDR char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SEL-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SEL-DPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-SEL-GPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SEL-GPC-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SEL-GROUP char(168)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SEL-LTR-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SEL-OP-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SEL-SREP-FIRST-NM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SEL-SREP-LAST-NM char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SEL-STR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SEL-XPTCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0IW-SFN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0IW-SM-SAGCY-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0IW-SM-SAGCY-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0IW-SM-SREP-FIRST-NM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0IW-SM-SREP-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0IW-SM-SREP-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0IW-SM-SREP-LAST-NM char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SOCD-APPL-SRC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SOCD-CURR-CUST-PO char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SOCD-CURR-NEED-DT-FROM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SOCD-CURR-NEED-DT-TO num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-SOCD-LTR-OVRD-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-SOCD-LTR-RQT-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0IW-SP-SPGM-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0IW-SP-SPGM-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SR-CONFIRM char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SR-DISCREP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SR-FIRST-NM char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SR-LAST-NM char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SREP-FIRST-NM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-SREP-LAST-NM char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-STATE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0IW-SV-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-CUST char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-CUST-NUM num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-CUST-ORD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-CUSTOMER num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Format Date
DataItem OZ0IW-SV-DATE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-DEPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-DPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-DPT-NUM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-STOR-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-STOR-ID-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-STR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-STR-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-XNX-DEPT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0IW-SV-XNX-DEPT-NUM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0IW-SWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Map to be displayed switch
DataItem OZ0IW-SWD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format the map switch
DataItem OZ0IW-SWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Request for data switch
DataItem OZ0IW-SWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Storage page update switch
DataItem OZ0IW-SWU char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-TB-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-TB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-TB-SS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-TBL-SRC char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-TIME-BRK char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-TIME-MK num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-TM-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-TM-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0IW-VALUE-BRK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-VALUE-BUILD char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-VALUE-FIELD char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-VB-DEC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-VB-DOT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-VB-INT char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0IW-WRITE-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0IW-XSO-SLS-OFC-ID char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0IW-XSO-SLS-OFC-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0IW-ZIP char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem SOCD-LTR-STAT-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem SOCD-REL-SRC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCLTM01-GROUP char(66)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCLTM01-KEY char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCLTR01-GROUP char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCLTR01-KEY char(27)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


