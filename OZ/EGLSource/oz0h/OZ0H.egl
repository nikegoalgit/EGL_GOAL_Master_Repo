package oz0h;

import corpcom1.CAUSERID;
import corpcom2.XP0PW00;
import corpcom2.XP0PW01;
import corpcom2.XP0RW00;
import corpcom2.XP0RW01;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPOZ-00001;
import corpcom3.XPTA0P;
import corpcom3.XPXGP01;
import corpcom3.XPXSO01;
import corpcom3.XPXX001;
import corpcom4.XSOZ-S0001;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpx1.XGPTBL;
import corpx1.XOMTBL;
import corpx1.XPTTBL;
import corpx1.XSETBL;
import corpx1.XSOTBL;
import ku.common.KU5REC;
import ku.common.KUCREC;
import ku.common.KUNREC;
import op.common.OP1REC;
import op.common.OP2REC;
import op.common.OP3REC;
import op.common.OPAGREC;
import oz.common.OZAREC;
import oz.common.OZBREC;
import oz.common.OZCREC;
import oz.common.OZDREC;
import oz.common.OZWREC;
import sm.common.SM1REC;
import sm.common.SM4REC;
import sm.common.SM5REC;
import sp.common.SP1REC;
import sy.common.SY1REC;
import sy.common.SY2REC;
import sy.common.SY4REC;
import sy.common.SYCREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TA6REC;
import ta.common.TAEREC;
import ta.common.TARJCL;
import vv.common.VDIST001;
import vv.common.VOCHDR01;
import vv.common.VOCITM01;
import vv.common.VOCLDO01;
import vv.common.VOCLDR01;
import vv.common.VOCSIZ01;
import vv.common.VOZCTL01;
import vv.common.VSOCRC01;
import vv.common.VSOHCR01;
import vv.common.VSOSCR01;
import ww.common.WOZ2110;
import ww.common.WOZSZRNP;
import ww.common.WOZSZRNR;
import ww.common.WOZSZRUN;

//*** PROGRAM=OZ0H ****
// This is the oc&d manual release screen
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      09/22/97  dsmit0  New application.
//          04/07/98  LRAO    Made the store and dept fields
//                            are RIGHT justified in map
//                            OZ0HM001. Changed fields are:
//                            OZ0HM-CURR-STOR-ID and
//                            OZ0HM-CURR-XNX-DEPT
// #1157    08/18/98  jkenne  Changed override di logic to not
//                            insert vocldo01.
// #2248    11/11/98  udafon  Fixed code into OZ0H-11200 stm g
//                            to not access dcust.vcust001.
// #2784    03/01/99  sgopal  Fixed code into OZ0H-11305 proc
//                            such that the stor id is also
//                            passed to pull records.
// #8141    09/27/00  SBHARA  This application have been modifi
//                            ed to fix the regular abend in
//                            the IMOZ1035
//                            Two procs have been added
//                            OZ0H-16305,OZ0H-IO7010-V
//                            OZ0H-13000 been modified
// TT#8789  11/10/01 Rshaik   The application have been changed
//                            to fix the ABEND in IMOZ1035 When
//                            both OZ1035 & OZ1031 triggered
//                            simaltaneously. Please refer the
//                            OZ0HT2,OZ0HT2F & OZ0HT2T tables
//                            for changes. Both IMoz1035 &
//                            OZ1035 merged together.
// 
// 
// 
// *********************
Program OZ0H type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OZ00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KU5REC KU5REC; // record
  KUCREC KUCREC; // record
  KUNREC KUNREC; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  OP3REC OP3REC; // record
  OPAGREC OPAGREC; // record
  OZ0HW00 OZ0HW00; // record
  OZ0HW01 OZ0HW01; // record
  OZ0HW02 OZ0HW02; // record
  OZAREC OZAREC; // record
  OZBREC OZBREC; // record
  OZCREC OZCREC; // record
  OZDREC OZDREC; // record
  OZWREC OZWREC; // record
  SM1REC SM1REC; // record
  SM4REC SM4REC; // record
  SM5REC SM5REC; // record
  SP1REC SP1REC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY4REC SY4REC; // record
  SYCREC SYCREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  VDIST001 VDIST001; // record
  VOCHDR01 VOCHDR01; // record
  VOCITM01 VOCITM01; // record
  VOCLDO01 VOCLDO01; // record
  VOCLDR01 VOCLDR01; // record
  VOCSIZ01 VOCSIZ01; // record
  VOZCTL01 VOZCTL01; // record
  VSOCRC01 VSOCRC01; // record
  VSOHCR01 VSOHCR01; // record
  VSOSCR01 VSOSCR01; // record
  WOZ2110 WOZ2110; // record
  WOZSZRNP WOZSZRNP; // record
  WOZSZRNR WOZSZRNR; // record
  WOZSZRUN WOZSZRUN; // record
  XP0PW00 XP0PW00; // record
  XP0PW01 XP0PW01; // record
  XP0RW00 XP0RW00; // record
  XP0RW01 XP0RW01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use XOMTBL {deleteAfterUse = yes}; // table
  use XSOTBL {deleteAfterUse = yes}; // table
  use XPTTBL {deleteAfterUse = yes}; // table
  use OZ0HT {deleteAfterUse = yes}; // table
  use OZ0HTDT {deleteAfterUse = yes}; // table
  use OZ0HTDF {deleteAfterUse = yes}; // table
  use OZ0HT2 {deleteAfterUse = yes}; // table
  use OZ0HT2T {deleteAfterUse = yes}; // table
  use OZ0HT2F {deleteAfterUse = yes}; // table
  use OZ0HM.OZ0HM001, // form
  OZ0HM.TA0PM001,
  OZ0HM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPOZ-00001: XPOZ-00001();
    /* ------------------------------------------------------------*/
    /* Initialize working storage and display storage areas.*/
    /* ------------------------------------------------------------*/

    set OZ0HM001 initial; /* M001 input/output*/
    set OZ0HW00 empty; /* Working storage*/
    set OZ0HW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    OZ0HW00.OZ0HW-SWD = "1"; /* Map to be displayed switch*/
    OZ0HW00.OZ0HW-SWF = "Y"; /* Format the map switch*/
    OZ0HW00.OZ0HW-SWR = "N"; /* Request for data switch*/
    OZ0HW00.OZ0HW-WRITE-FLG = " ";
    OZ0HW00.OZ0HW-UPD-FLG = " ";
  
    if (OZWREC.OZW-APPIDX == 0)
      OZWREC.OZW-APPIDX = 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0A";
    end

    /* ------------------------------------------------------------*/
    /* If data was passed in the COMMAREA, use as the initial key.*/
    /* ------------------------------------------------------------*/

    if (COMMAREA.CAFROMAP == "OZ0A") /* coming from menu*/
      OZ0HW00.OZ0HW-SWF = "N"; /* Format the map switch*/
      OZ0HW00.OZ0HW-SWR = "N"; /* Request for data switch*/
    else
  
      if (COMMAREA.CAUSERA > " ") /* Data was passed*/

        OZWREC.CAUSERA = COMMAREA.CAUSERA;
  
        if (OZWREC.OZW-SV-APPL == " ")
          OZWREC.OZW-SV-APPL = COMMAREA.CAFROMAP;
        end
  
        if (OZWREC.OZW-CUST == 0)
          OZ0HM001.OZ0HM-CURR-CU-CO-ID = " ";
          OZ0HM001.OZ0HM-CURR-STOR-ID = " ";
          OZ0HM001.OZ0HM-CURR-XNX-DEPT = " ";
        else
          OZ0HM001.OZ0HM-CURR-CU-CO-ID = OZWREC.OZW-CUST;
          OZ0HM001.OZ0HM-CURR-STOR-ID = OZWREC.OZW-STOR;
          OZ0HM001.OZ0HM-CURR-XNX-DEPT = OZWREC.OZW-DEPT;
        end
  
        OZ0HM001.OZ0HM-CU-CO-NM-HDR = OZWREC.KUCCONM;
        OZ0HM001.OZ0HM-CURR-GPC-CD = OZWREC.XGPCD;
        OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM = OZWREC.SOCD-CURR-CUST-PO;
        OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-TO = OZWREC.SOCD-CURR-CUST-PO-TO;
        OZ0HM001.OZ0HM-OP-CUST-ORD-ID = OZWREC.OP1CUOID;
        OZ0HM001.OZ0HM-XSO-SLS-OFC-ID = OZWREC.XSOCD;
        OZ0HM001.OZ0HM-SM-SREP-ID = OZWREC.SM4REPID;
        OZ0HM001.OZ0HM-SM-SAGCY-ID = OZWREC.SM1AGYID;
        OZ0HM001.OZ0HM-OVERRIDE-DI = OZWREC.OVERRIDE-DI;
        OZ0HW00.OZ0HW-OVERRIDE-DI = OZWREC.OVERRIDE-DI;
        OZ0HW00.OZ0HW-SOCD-LTR-OVRD-ID = OZWREC.SOCD-LTR-OVRD-ID;
        OZ0HW00.OZ0HW-SOCD-LTR-RQT-ID = OZWREC.SOCD-LTR-RQT-ID;
        OZ0HW00.OZ0HW-BYPASS-ELIGB = OZWREC.BYPASS-ELIGB;
        OZ0HW00.OZ0HW-WC-FLG = OZWREC.WC-FLG;
        OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM = OZWREC.NEED-DATE-FROM;
        OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO = OZWREC.NEED-DATE-TO;
  
        OZ0HW00.OZ0HW-IXM = 1;
        while (OZ0HW00.OZ0HW-IXM < 6)
          OZ0HM001.OZ0HM-COMMENT[OZ0HW-IXM] = OZWREC.VAGen_COMMENT[OZ0HW-IXM];
          OZ0HW00.OZ0HW-IXM = OZ0HW00.OZ0HW-IXM + 1;
        end

        OZ0HW00.OZ0HW-SWR = "Y"; /* Request for data switch*/

      end
    end


    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OZ0H-00000; /* Converse the main process*/


    OZ0H-00000: OZ0H-00000();
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OZ0H-00000; /* Converse the main process*/


  end // end main
end // end OZ0H


// Main process to display a map
Function OZ0H-00000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) If specified, display the first map.*/
  /* 2) Otherwise, if specified, display the second map, depending*/
  /* on function = add or change*/
  /* 3) Otherwise, indicate error and exit to Application Menu.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  if (OZ0HW00.OZ0HW-SWD == "1") /* Map 1 was requested*/

    OZ0H-10000(); /* Display map 1*/

  else

    if (OZ0HW00.OZ0HW-SWD == "2") /* Map 2 was requested*/

  /* PERFORM oz0h-20000;          /* Display map 2*/

    else

      if (OZ0HW00.OZ0HW-SWD == "2") /* Map 2 was requested*/

  /* PERFORM oz0h-30000;        /* Display map 2*/

      else

      /* ------------------------------------------------------------*/
      /* Write the error to the Error Diagnosis Reporting Facility.*/
      /* ------------------------------------------------------------*/

        OZWREC.XXXPRCNM = "00000"; /* Module identification*/
        OZWREC.XXXMSGNO = 10; /* Unexpected error occurred*/

        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        TA1REC.TA1TYPE = "APPL"; /* Type of error*/
        TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";
        TA1REC.TA1MAPNO = OZ0HW00.OZ0HW-SWD; /* Map number*/
        TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
        TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/

        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      /* ------------------------------------------------------------*/
      /* Exit to display the application system menu.*/
      /* ------------------------------------------------------------*/

        COMMAREA.CATOAP = "KS0A"; /* TO application*/

        XSOZ-S0001(); /* Exit to another application*/

      /* ------------------------------------------------------------*/
      /* Abnormally terminate the transaction if the exit failed.*/
      /* ------------------------------------------------------------*/

        TA1REC.TA1FUNC = "ABND"; /* Termination function*/

        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      end

    end

  end


end // end OZ0H-00000


// List the rows in the table
Function OZ0H-10000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Obtain the data to display.*/
  /* 2) Format the map output area and display the map.*/
  /* 3) Check the attention identifier used to respond.*/
  /* 4) Reset highlighted fields to normal intensity.*/
  /* 5) Verify the data that was entered.*/
  /* 6) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0H-11000(); /* Obtain the data to display*/

  OZ0H-12000(); /* Format and display the map*/

  OZ0H-13000(); /* Check attention identifier*/

  OZ0H-14000(); /* Reset fields to normal intensity*/

  OZ0H-15000(); /* Verify the entered data*/

  OZ0H-16000(); /* Process valid input request*/


end // end OZ0H-10000


// Obtain the data to display
Function OZ0H-11000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  if (converseVar.validationMsgNum != 0) /* An error was found*/

    return; /* Return to previous process*/
  end

  if (OZ0HW00.OZ0HW-SWR != "Y" /* Data was not requested*/
   && converseVar.eventKey not pf14) /* AND PF14 KEY NOT PRESSED*/

    return; /* Return to previous process*/
  end

  /* ------------------------------------------------------------*/
  /* Perform screen header edits*/
  /* ------------------------------------------------------------*/
  OZ0HW00.OZ0HW-EDIT-FLAG = " ";
  if (converseVar.eventKey is pf14)
    OZ0HW00.OZ0HW-PF14-EDIT-FLAG = "Y";
  end

  OZ0H-11200(); /* screen header edits*/

  if (OZ0HW00.OZ0HW-EDIT-FLAG == "Y" /* didn't pass edits*/
   || converseVar.eventKey is pf14)  /* PF14 KEY PRESSED*/
    return;
  end

  /* ------------------------------------------------------------*/
  /* get the data*/
  /* ------------------------------------------------------------*/
  OZ0H-11300();
end // end OZ0H-11000


// screen header edits
Function OZ0H-11200()
  /* -------------------------------------------------------------*/
  /* check valid gpc code*/
  /* -------------------------------------------------------------*/
  if (OZ0HM001.OZ0HM-CURR-GPC-CD == " ") /* code is blank - flag edit*/
    OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZ0HW00.OZ0HW-SWR = "N";
    OZ0HW00.OZ0HW-SWF = "N";
    OZWREC.XXXPRCNM = "11200"; /* Module identification*/
    set OZ0HM001.OZ0HM-CURR-GPC-CD cursor, bold; /* Highlight*/
    set OZ0HM001.OZ0HM-GPC-DESC skip, invisible; /* darken desc*/
    converseLib.validationFailed(22); /* GPC code invalid*/
    return;

  else
    if (OZ0HM001.OZ0HM-CURR-GPC-CD in XGPTBL.XGPCD) /* code in table*/

   /* get description*/
      if (OZ0HM001.OZ0HM-CURR-GPC-CD in XGPTBL.XGPCD)
        OZ0HM001.OZ0HM-GPC-DESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      end
      set OZ0HM001.OZ0HM-GPC-DESC skip;

    else
      OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0HW00.OZ0HW-SWR = "N";
      OZ0HW00.OZ0HW-SWF = "N";
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0HM001.OZ0HM-CURR-GPC-CD cursor, bold; /* Highlight*/
      set OZ0HM001.OZ0HM-GPC-DESC skip, invisible; /* darken desc*/
      converseLib.validationFailed(22); /* GPC code invalid*/
      return;

    end

  end

  /* -------------------------------------------------------------*/
  /* if sales office id entered verify against xsotbl*/
  /* retrieve the sales office description*/
  /* -------------------------------------------------------------*/
  if (OZ0HM001.OZ0HM-XSO-SLS-OFC-ID > " ")
    if (OZ0HM001.OZ0HM-XSO-SLS-OFC-ID in XSOTBL.XSOCD) /* code in table*/

   /* get description*/
      if (OZ0HM001.OZ0HM-XSO-SLS-OFC-ID in XSOTBL.XSOCD)
        OZ0HM001.OZ0HM-XSO-SLS-OFC-ID-DESC = XSOTBL.XSOSNM[sysVar.arrayIndex];
      end
    else
      OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0HW00.OZ0HW-SWR = "N"; /**/
      OZ0HW00.OZ0HW-SWF = "N";
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0HM001.OZ0HM-XSO-SLS-OFC-ID cursor, bold; /* Highlight*/
      set OZ0HM001.OZ0HM-XSO-SLS-OFC-ID-DESC skip, invisible; /* darken desc*/
      converseLib.validationFailed(24); /* sales office code invalid*/
      return;

    end
  else
    OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZ0HW00.OZ0HW-SWF = "N";
    OZ0HW00.OZ0HW-SWR = "N";
    OZWREC.XXXPRCNM = "11200"; /* Module identification*/
    set OZ0HM001.OZ0HM-XSO-SLS-OFC-ID cursor, bold; /* Highlight*/
    set OZ0HM001.OZ0HM-XSO-SLS-OFC-ID-DESC skip, invisible; /* darken desc*/
    OZ0HM001.OZ0HM-XSO-SLS-OFC-ID-DESC = " ";
    converseLib.validationFailed(24); /* sales office code invalid*/
    return;

  end

  /* -------------------------------------------------------------*/
  /* check if minimum allowed fields entered*/
  /* -------------------------------------------------------------*/
  if (OZ0HM001.OZ0HM-CURR-GPC-CD > " " /* gpc code entered*/
   && OZ0HM001.OZ0HM-XSO-SLS-OFC-ID > " ") /* sales off entered*/

    if (OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM > " "
     && OZ0HM001.OZ0HM-CURR-CU-CO-ID == 0)
      OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0HW00.OZ0HW-SWR = "N"; /**/
      OZ0HW00.OZ0HW-SWF = "N"; /**/
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0HM001.OZ0HM-CURR-CU-CO-ID cursor, bold;
      converseLib.validationFailed(73);
      return;
    end

    if (OZ0HM001.OZ0HM-CURR-CU-CO-ID == 0 && 
    (OZ0HM001.OZ0HM-OP-CUST-ORD-ID == " " || 
    OZ0HM001.OZ0HM-OP-CUST-ORD-ID == 0) && 
    OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM == " " && 
    OZ0HM001.OZ0HM-SM-SAGCY-ID == " ")

      OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0HW00.OZ0HW-SWR = "N";
      OZ0HW00.OZ0HW-SWF = "N";
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0HM001.OZ0HM-CURR-CU-CO-ID cursor, bold; /* Highlight*/
      set OZ0HM001.OZ0HM-OP-CUST-ORD-ID bold;
      set OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM bold;
      set OZ0HM001.OZ0HM-SM-SAGCY-ID bold;
      converseLib.validationFailed(23);
      return;

    end

  end

  /* -------------------------------------------------------------*/
  /* if cust.str.dpt all entered verify against dcust.vcust001*/
  /* else use cust number against dcust.vcmpny01*/
  /* in either case read vcmpny01 to get company name*/
  /* -------------------------------------------------------------*/
  if (OZ0HM001.OZ0HM-CURR-CU-CO-ID > 0)
    OZ0HW00.OZ0HW-SV-CU-CO-ID = OZ0HM001.OZ0HM-CURR-CU-CO-ID;
    if (OZ0HM001.OZ0HM-CURR-STOR-ID > " " && 
    OZ0HM001.OZ0HM-CURR-XNX-DEPT > " ")
      OZ0HW00.OZ0HW-SV-STOR-ID-CHAR = OZ0HM001.OZ0HM-CURR-STOR-ID;
      OZ0HW00.OZ0HW-SV-XNX-DEPT-CHAR = OZ0HM001.OZ0HM-CURR-XNX-DEPT;
      OZ0HW00.OZ0HW-HDR-STR = OZ0HW00.OZ0HW-SV-STOR-ID-NUM;
      OZ0HW00.OZ0HW-HDR-DPT = OZ0HW00.OZ0HW-SV-XNX-DEPT-NUM;
      OZ0HW00.OZ0HW-SV-STOR-ID = OZ0HW00.OZ0HW-HDR-STR;
      OZ0HW00.OZ0HW-SV-XNX-DEPT = OZ0HW00.OZ0HW-HDR-DPT;

  /* PERFORM OZ0H-11210;  #2248   /*  validate against dcust.vcust001*/
      OZ0H-11220(); /* retrv cmpny name from dcust.vcmpny01*/
      if (SQLCA.VAGen_SQLCODE == 0)
        OZ0HM001.OZ0HM-CU-CO-NM-HDR = KUCREC.KUCCONM;
      else
        set OZ0HM001.OZ0HM-CURR-CU-CO-ID bold;
        converseLib.validationFailed(51); /* date invalid*/
        OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
        OZ0HW00.OZ0HW-SWR = "N"; /**/
        return;
      end

    else
      OZ0H-11220(); /* validate against dcust.vcmpny01*/
      if (SQLCA.VAGen_SQLCODE == 0)
        OZ0HM001.OZ0HM-CU-CO-NM-HDR = KUCREC.KUCCONM;
      else
        set OZ0HM001.OZ0HM-CURR-CU-CO-ID bold;
        converseLib.validationFailed(51); /* date invalid*/
        OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
        OZ0HW00.OZ0HW-SWR = "N"; /**/
        return;
      end
    end
  end

  /* -------------------------------------------------------------*/
  /* cust p.o. edits*/
  /* -------------------------------------------------------------*/
  if (OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-TO > " " && 
  OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM == " ")
    OZWREC.XXXPRCNM = "11200"; /* Module identification*/
    set OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM cursor, bold;
    converseLib.validationFailed(23);
    OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZ0HW00.OZ0HW-SWR = "N"; /**/
    return;
  end

  if (OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM > " ")
    OZ0HW00.OZ0HW-CUST-BREAK = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM;
    OZ0HW00.OZ0HW-IDX = 1;
    OZ0HW00.OZ0HW-WC-FLG = " ";

    while (OZ0HW00.OZ0HW-IDX < 26)
      if (OZ0HW00.OZ0HW-CUST-BRK[OZ0HW-IDX] == "*")
        OZ0HW00.OZ0HW-IDX = 25;
        OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-TO = "  ";
        OZ0HW00.OZ0HW-WC-FLG = "Y";
      end
      OZ0HW00.OZ0HW-IDX = OZ0HW00.OZ0HW-IDX + 1;
    end
  end
  /* -------------------------------------------------------------*/
  /* if need dates entered verify that end date is greater than*/
  /* begin date and both are valid dates.*/
  /* -------------------------------------------------------------*/
  OZ0HW00.OZ0HW-SV-NEED-DT-FROM = 0;
  OZ0HW00.OZ0HW-SV-NEED-DT-TO = 0;

  if ((OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM > 0 && 
  OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO == 0)
   || (OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM == 0 && 
  OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO > 0))
    OZWREC.XXXPRCNM = "11200"; /* Module identification*/
    set OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM cursor, bold;
    set OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO bold;
    converseLib.validationFailed(25); /* date invalid*/
    OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZ0HW00.OZ0HW-SWR = "N"; /**/
    OZ0HW00.OZ0HW-SWF = "N"; /**/
    return;
  end

  if (OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM > 0)
  /* from date check*/
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "A";
    TA2REC.TA2GRGA = OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM;

    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

    if (TA2REC.TA2RTNCD == 0)
      OZ0HW00.OZ0HW-SV-NEED-DT-FROM = TA2GRGGN;
    else
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM cursor, bold;
      converseLib.validationFailed(20); /* date invalid*/
      OZ0HW00.OZ0HW-SWR = "N"; /**/
      OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      return;
    end

    if (OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO > 0)
  /* to date check*/
      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "A";
      TA2REC.TA2GRGA = OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO;

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

      if (TA2REC.TA2RTNCD == 0)
        OZ0HW00.OZ0HW-SV-NEED-DT-TO = TA2GRGGN;

      else
        OZWREC.XXXPRCNM = "11200"; /* Module identification*/
        set OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO cursor, bold;
        converseLib.validationFailed(20); /* date invalid*/
        OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
        OZ0HW00.OZ0HW-SWR = "N"; /**/
        return;
      end
    end
  /*  */

  /*  */
    if ((OZ0HW00.OZ0HW-SV-NEED-DT-FROM > 
    OZ0HW00.OZ0HW-SV-NEED-DT-TO)
     && (OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO > 0))
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM cursor, bold;
      set OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO bold;
      converseLib.validationFailed(26); /* date invalid*/
      OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0HW00.OZ0HW-SWR = "N"; /**/
      return;
    end

  end


  /* -------------------------------------------------------------*/
  /* if sales agency id entered verify against dslsmn.vSagcy01*/
  /* retrieve the sales agency name*/
  /* -------------------------------------------------------------*/
  if (OZ0HM001.OZ0HM-SM-SAGCY-ID > " ")
    OZ0H-11240(); /* validate against dslsmn.vsagcy01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OZ0HM001.OZ0HM-SM-SAGCY-ID-DESC = SM1REC.SM1AGYNM;
    else
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0HM001.OZ0HM-SM-SAGCY-ID cursor, bold;
      OZ0HM001.OZ0HM-SM-SAGCY-ID-DESC = "  ";
      converseLib.validationFailed(43); /* sales rep invalid*/
      OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0HW00.OZ0HW-SWR = "N"; /**/
      OZ0HW00.OZ0HW-SWF = "N"; /**/
      return;
    end
  end

  /* -------------------------------------------------------------*/
  /* if sales rep id entered verify against dslsmn.vreps001*/
  /* retrieve the sm-srep-cont-tdt if this is 0 or GT today's date*/
  /* display the sales rep's first and last name*/
  /* else display error*/
  /* -------------------------------------------------------------*/
  if (OZ0HM001.OZ0HM-SM-SREP-ID > 0)
    OZ0H-11260(); /* get reps first and last names*/
    if (SQLCA.VAGen_SQLCODE == 0)
      if (SM4REC.SM4TDT == 0)
        OZ0HM001.OZ0HM-SM-SREP-LAST-NM = SM4REC.XXXLSTNM;
        OZ0HM001.OZ0HM-SM-SREP-FIRST-NM = SM4REC.XXXFSTNM;
      else
        OZ0HW00.OZ0HW-NUM-DATE = SM4REC.SM4TDT;
  /* MOVE oz0hW00.oz0hW-NUM-DATE TO oz0hW00.oz0hW-WS-DATE;*/

        set TA2REC empty;
        TA2REC.TA2DTOPT = "GREGGREG";
        TA2REC.TA2GRTYP = "A";
        TA2REC.TA2GRGA = VGVar.currentShortGregorianDate;

        call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

        if (TA2REC.TA2RTNCD == 0)
          OZ0HW00.OZ0HW-SV-DATE = TA2GRGGN;
        else
          OZWREC.XXXPRCNM = "11200"; /* Module identification*/
          converseLib.validationFailed(27); /* date invalid*/
          OZ0HW00.OZ0HW-SWR = "N"; /**/
          OZ0HW00.OZ0HW-SWF = "N"; /**/
          OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
        end

        if (OZ0HW00.OZ0HW-NUM-DATE > OZ0HW00.OZ0HW-SV-DATE)
          OZ0HM001.OZ0HM-SM-SREP-LAST-NM = SM4REC.XXXLSTNM;
          OZ0HM001.OZ0HM-SM-SREP-FIRST-NM = SM4REC.XXXFSTNM;
        else
          OZWREC.XXXPRCNM = "11200"; /* Module identification*/
          set OZ0HM001.OZ0HM-SM-SREP-ID cursor, bold;
          converseLib.validationFailed(27); /* sales rep invalid*/
          OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
          OZ0HW00.OZ0HW-SWR = "N"; /**/
          OZ0HW00.OZ0HW-SWF = "N"; /**/
          return;
        end
      end
    else
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0HM001.OZ0HM-SM-SREP-ID cursor, bold;
      set OZ0HM001.OZ0HM-SM-SREP-LAST-NM invisible;
      set OZ0HM001.OZ0HM-SM-SREP-FIRST-NM invisible;
      converseLib.validationFailed(27); /* sales rep invalid*/
      OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0HW00.OZ0HW-SWR = "N"; /**/
      OZ0HW00.OZ0HW-SWF = "N"; /**/
      return;
    end
  end

end // end OZ0H-11200


// Select set and open cursor
Function OZ0H-11220()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set KUCREC empty; /* Clear row storage area*/

  KUCREC.KUCCOID = OZ0HW00.OZ0HW-SV-CU-CO-ID;


  try
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0      
   || SQLCA.VAGen_SQLCODE == +100)) 

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUCREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0H-11220


// Select set and open cursor
Function OZ0H-11240()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set SM1REC empty; /* Clear row storage area*/

  SM1REC.SM1AGYID = OZ0HM001.OZ0HM-SM-SAGCY-ID;


  try
    call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11240"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DSLSMN "; /* Data base name*/
  TA1REC.TA1TBLVU = "SM1REC"; /* Table view name*/
  TA1REC.TA1TBLKE = SM1REC.SM1AGYID; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0H-11240


// Select set and open cursor
Function OZ0H-11260()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set SM4REC empty; /* Clear row storage area*/

  SM4REC.SM4REPID = OZ0HM001.OZ0HM-SM-SREP-ID;


  try
    call "IO0020" ("S ", SQLCA, SM4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0      /* and normal return code*/
   || SQLCA.VAGen_SQLCODE == 100))  

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DSLSMN  "; /* Data base name*/
  TA1REC.TA1TBLVU = "SM4REC"; /* Table view name*/
  TA1REC.TA1TBLKE = SM4REC.VREPS001-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0H-11260


// Obtain the data to display
Function OZ0H-11300()
  /* ------------------------------------------------------------*/
  /* build ozarec from screen header*/
  /* ------------------------------------------------------------*/
  OZ0H-11305(); /* build ozarec*/

  /* ------------------------------------------------------------*/
  /* Select and open the cursor for the set to be formatted.*/
  /* ------------------------------------------------------------*/
  OZ0H-11315(); /* Select release rec cnt*/

  if (SQLCA.VAGen_SQLCODE == +100
   || OZAREC.IO-REL-CNT == 0)
    OZWREC.XXXPRCNM = "11300"; /* Module identification*/
    OZWREC.XXXMSGNO = 16; /* No data was found to display*/
    set OZ0HM001.OZ0HM-CURR-CU-CO-ID cursor; /* cursor*/
    return; /* Return to previous process*/
  end

  OZ0HW00.OZ0HW-SV-REL-CNT = OZAREC.IO-REL-CNT;
  OZ0HW00.OZ0HW-WS-REL-CNT = OZ0HW00.OZ0HW-SV-REL-CNT;

  OZ0HW00.OZ0HW-IX1 = 1;
  while (OZ0HW00.OZ0HW-WS-REL-CNT-BLD[OZ0HW-IX1] == "0"
   && OZ0HW-IX1 < 10)
    OZ0HW00.OZ0HW-WS-REL-CNT-BLD[OZ0HW-IX1] = " ";
    OZ0HW-IX1 = OZ0HW-IX1 + 1;
  end
  OZ0HW00.OZ0HW-WS-MSG = "Orders found, press PF20 to accept, PF19 to print or PA2 to cancel";
  OZ0HM001.VAGen_EZEMSG = OZ0HW00.OZ0HW-WS-MESSAGE;

  OZ0HW00.OZ0HW-SWR = "N"; /* Request for data switch*/
  OZ0HW00.OZ0HW-SWF = "N"; /* Request for data switch*/
end // end OZ0H-11300


// Select set and open cursor
Function OZ0H-11305()
  set OZAREC empty;
  set OP1REC empty;
  set VOCHDR01 empty;
  OZ0HW00.OZ0HW-SV-CUSTOMER = 0;
  OZ0HW00.OZ0HW-SV-CUST-ORD = 0;
  OZ0HW00.OZ0HW-SV-CUST-PO = " ";
  /* ------------------------------------------------------------*/
  /* build ozarec w/ data from screen header*/
  /* ------------------------------------------------------------*/
  VOCHDR01.SOCD-CURR-GPC-CD = OZ0HM001.OZ0HM-CURR-GPC-CD;
  VOCHDR01.SOCD-CURR-CU-CO-ID = OZ0HM001.OZ0HM-CURR-CU-CO-ID;
  /* ------------------------------------------------------------*/
   /* tcs change begin 03/01/99*/
   /* MOVE OZ0HW00.OZ0HW-SV-STOR-ID-NUM TO VOCHDR01.SOCD-CURR-STOR-ID;*/
  OZ0HW00.OZ0HW-SV-STOR-ID-NUM = OZ0HM001.OZ0HM-CURR-STOR-ID;
  VOCHDR01.SOCD-CURR-STOR-ID = OZ0HW00.OZ0HW-SV-STOR-ID-NUM;
  OZ0HW00.OZ0HW-SV-XNX-DEPT-NUM = OZ0HM001.OZ0HM-CURR-XNX-DEPT;
   /* tcs change end 03/01/99*/
  /* ------------------------------------------------------------*/
  VOCHDR01.SOCD-CURR-XNX-DEPT = OZ0HW00.OZ0HW-SV-XNX-DEPT-NUM;
  VOCHDR01.OP1PARTN = OZ0HW00.OZ0HW-ORD-PART-CHAR;
  VOCHDR01.OP1CUOID = OZ0HM001.OZ0HM-OP-CUST-ORD-ID;
  VOCHDR01.SOCD-APPL-SRC-CD = "OP";

  if (OZ0HW00.OZ0HW-WC-FLG == "Y")
    OZ0HW00.OZ0HW-IDX = 1;
    OZ0HW00.OZ0HW-CUST-BREAK = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM;

    while (OZ0HW00.OZ0HW-IDX < 26)
      if (OZ0HW00.OZ0HW-CUST-BRK[OZ0HW-IDX] == " ")
        OZ0HW00.OZ0HW-CUST-BRK[OZ0HW-IDX] = "*";
      end
      OZ0HW00.OZ0HW-IDX = OZ0HW00.OZ0HW-IDX + 1;
    end

    OZAREC.SOCD-CURR-CUST-PO-FROM = OZ0HW00.OZ0HW-CUST-BREAK;

  else

    OZAREC.SOCD-CURR-CUST-PO-FROM = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM;
  end

  OZAREC.SOCD-CURR-CUST-PO-TO = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-TO;

  OZAREC.SOCD-CURR-NEED-DT-FROM = OZ0HW00.OZ0HW-SV-NEED-DT-FROM;
  OZAREC.SOCD-CURR-NEED-DT-TO = OZ0HW00.OZ0HW-SV-NEED-DT-TO;

  OP1REC.XSOCD = OZ0HM001.OZ0HM-XSO-SLS-OFC-ID;
  OP1REC.SM1AGYID = OZ0HM001.OZ0HM-SM-SAGCY-ID;
  OP1REC.SM4REPID = OZ0HM001.OZ0HM-SM-SREP-ID;
end // end OZ0H-11305


// Select set and open cursor
Function OZ0H-11315()
  if (OZ0HW00.OZ0HW-WC-FLG == "Y")
    OZAREC.IO-TASK = "SW"; /* select count*/
  else
    OZAREC.IO-TASK = "SC"; /* select count*/
  end

  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0      /* and normal return code*/
   || SQLCA.VAGen_SQLCODE == +100))  /* no records found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11315"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCHDR01.VOCHDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0H-11315


// Format and converse the map
Function OZ0H-12000()
  if (converseVar.eventKey is pf14 /* pf14 key pressed*/
   && OZ0HW00.OZ0HW-EDIT-FLAG != "Y") /* no error found*/
    return; /* do not converse the map*/
  end

  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0HW00.OZ0HW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OZ0HW00.OZ0HW-SWF == "Y") /* Map must be formatted*/
  /* Save header info in working storage*/
      OZ0HW00.OZ0HW-CURR-CU-CO-ID = OZ0HM001.OZ0HM-CURR-CU-CO-ID;
      OZ0HW00.OZ0HW-CURR-STOR-ID = OZ0HM001.OZ0HM-CURR-STOR-ID;
      OZ0HW00.OZ0HW-CURR-XNX-DEPT = OZ0HM001.OZ0HM-CURR-XNX-DEPT;
      OZ0HW00.OZ0HW-CU-CO-NM-HDR = OZ0HM001.OZ0HM-CU-CO-NM-HDR;
      OZ0HW00.OZ0HW-OVERRIDE-DI = OZ0HM001.OZ0HM-OVERRIDE-DI;
      OZ0HW00.OZ0HW-SOCD-CURR-CUST-PO-FROM = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM;
      OZ0HW00.OZ0HW-SOCD-CURR-CUST-PO-TO = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-TO;
      OZ0HW00.OZ0HW-OP-CUST-ORD-ID = OZ0HM001.OZ0HM-OP-CUST-ORD-ID;
      OZ0HW00.OZ0HW-SOCD-CURR-NEED-DT-FROM = OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM;
      OZ0HW00.OZ0HW-SOCD-CURR-NEED-DT-TO = OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO;
      OZ0HW00.OZ0HW-CURR-GPC-CD = OZ0HM001.OZ0HM-CURR-GPC-CD;
      OZ0HW00.OZ0HW-GPC-DESC = OZ0HM001.OZ0HM-GPC-DESC;
      OZ0HW00.OZ0HW-XSO-SLS-OFC-ID = OZ0HM001.OZ0HM-XSO-SLS-OFC-ID;
      OZ0HW00.OZ0HW-XSO-SLS-OFC-ID-DESC = OZ0HM001.OZ0HM-XSO-SLS-OFC-ID-DESC;
      OZ0HW00.OZ0HW-SM-SAGCY-ID = OZ0HM001.OZ0HM-SM-SAGCY-ID;
      OZ0HW00.OZ0HW-SM-SAGCY-ID-DESC = OZ0HM001.OZ0HM-SM-SAGCY-ID-DESC;
      OZ0HW00.OZ0HW-SM-SREP-ID = OZ0HM001.OZ0HM-SM-SREP-ID;
      OZ0HW00.OZ0HW-SM-SREP-FIRST-NM = OZ0HM001.OZ0HM-SM-SREP-FIRST-NM;
      OZ0HW00.OZ0HW-SM-SREP-LAST-NM = OZ0HM001.OZ0HM-SM-SREP-LAST-NM;

      OZ0H-12100(); /* Format the data on the map*/
    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZ0HM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OZ0HM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0HM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* Set attributes for add and change depending on authority*/
  /* ------------------------------------------------------------*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OZWREC.XXXMSGNO != 0) /* Message to display*/

      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0HM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OZ0HM001.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/

    set OZ0HM001 alarm; /* Indicate sound alarm*/

  end

  converse OZ0HM001 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  OZ0HW00.OZ0HW-SFN = " "; /* reset function switch*/
   /* reset saved page*/
  OZ0HW00.OZ0HW-SAVE-PAGE = 0;
  COMMAREA.CATOAP = OZ0HM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0HM001.CAITEM; /* Application data*/
end // end OZ0H-12000


// Format the display data
Function OZ0H-12100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set OZ0HM001 initial; /* M001 input/output area*/

  OZ0HW00.OZ0HW-SWF = "N"; /* Format the map switch*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/

  OZ0HW00.OZ0HW-IXM = 1; /* Initialize map index*/
  while (OZ0HW00.OZ0HW-IXM < 6) /* Until screen is full*/

    OZ0HM001.OZ0HM-COMMENT[OZ0HW-IXM] = OZ0HW01.OZ0HW-COMMENT[OZ0HW-IXM];

    OZ0HW00.OZ0HW-IXM = OZ0HW00.OZ0HW-IXM + 1;
                                   /* Increment map index*/
  end

  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/

  OZ0HM001.OZ0HM-CURR-CU-CO-ID = OZ0HW00.OZ0HW-CURR-CU-CO-ID;
  OZ0HM001.OZ0HM-CURR-STOR-ID = OZ0HW00.OZ0HW-CURR-STOR-ID;
  OZ0HM001.OZ0HM-CURR-XNX-DEPT = OZ0HW00.OZ0HW-CURR-XNX-DEPT;
  if (OZ0HW00.OZ0HW-CURR-CU-CO-ID > 0000000)
    OZ0HM001.OZ0HM-CU-CO-NM-HDR = OZ0HW00.OZ0HW-CU-CO-NM-HDR;
  else
    OZ0HM001.OZ0HM-CU-CO-NM-HDR = "  ";
  end

  OZ0HM001.OZ0HM-OVERRIDE-DI = OZ0HW00.OZ0HW-OVERRIDE-DI;
  if (OZ0HM001.OZ0HM-OVERRIDE-DI != "Y")
    OZ0HM001.OZ0HM-OVERRIDE-DI = "N";
  end

  OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM = OZ0HW00.OZ0HW-SOCD-CURR-CUST-PO-FROM;
  OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-TO = OZ0HW00.OZ0HW-SOCD-CURR-CUST-PO-TO;
  OZ0HM001.OZ0HM-OP-CUST-ORD-ID = OZ0HW00.OZ0HW-OP-CUST-ORD-ID;
  OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM = OZ0HW00.OZ0HW-SOCD-CURR-NEED-DT-FROM;
  if (OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM == "000000")
    OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM = "      ";
  end
  OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO = OZ0HW00.OZ0HW-SOCD-CURR-NEED-DT-TO;
  if (OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO == "000000")
    OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO = "      ";
  end
  OZ0HM001.OZ0HM-CURR-GPC-CD = OZ0HW00.OZ0HW-CURR-GPC-CD;
  OZ0HM001.OZ0HM-GPC-DESC = OZ0HW00.OZ0HW-GPC-DESC;
  OZ0HM001.OZ0HM-XSO-SLS-OFC-ID = OZ0HW00.OZ0HW-XSO-SLS-OFC-ID;
  if (OZ0HM001.OZ0HM-XSO-SLS-OFC-ID == "00")
    OZ0HM001.OZ0HM-XSO-SLS-OFC-ID = "  ";
  end
  OZ0HM001.OZ0HM-XSO-SLS-OFC-ID-DESC = OZ0HW00.OZ0HW-XSO-SLS-OFC-ID-DESC;
  OZ0HM001.OZ0HM-SM-SAGCY-ID = OZ0HW00.OZ0HW-SM-SAGCY-ID;
  OZ0HM001.OZ0HM-SM-SAGCY-ID-DESC = OZ0HW00.OZ0HW-SM-SAGCY-ID-DESC;
  OZ0HM001.OZ0HM-SM-SREP-ID = OZ0HW00.OZ0HW-SM-SREP-ID;
  OZ0HM001.OZ0HM-SM-SREP-FIRST-NM = OZ0HW00.OZ0HW-SM-SREP-FIRST-NM;
  OZ0HM001.OZ0HM-SM-SREP-LAST-NM = OZ0HW00.OZ0HW-SM-SREP-LAST-NM;

end // end OZ0H-12100


// Check attention identifier
Function OZ0H-13000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0HW00.OZ0HW-SWR == "Y") /* Request for data*/
      set OZ0HW01 empty; /* M001 display storage*/
    end

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/
  if (OZ0HM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0H")
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
        OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0H";
      end

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0HM001.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid attention identifier was used to*/
  /* invoke the transaction.  Display an error message to the*/
  /* user if the PF key used is not supported.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   
   && converseVar.eventKey not pf3   
   && converseVar.eventKey not pf4   
   && converseVar.eventKey not pf14  /* and PF14 was not pressed*/
   && converseVar.eventKey not pf18  /* and PF18 was not pressed*/
   && converseVar.eventKey not pf19  /* and PF19 was not pressed*/
   && converseVar.eventKey not pf20) /* and PF20 was not pressed*/

    OZ0HW00.OZ0HW-UPD-FLG = " ";
    OZ0HW00.OZ0HW-ENT-FLG = " ";
    OZWREC.XXXPRCNM = "13000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/
  else

    if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0H")
      OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0H";
    end

  end

  /* ------------------------------------------------------------*/
  /* If HELP, exit to the previous level or exit to the Master*/
  /* Menu was requested, exit to another application.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      if (OZWREC.OZW-APPIDX > 1)
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX - 1;

        if (OZWREC.OZW-APPL[OZW-APPIDX] > "    ")
          COMMAREA.CATOAP = OZWREC.OZW-APPL[OZW-APPIDX];
        else
          COMMAREA.CATOAP = "OZ0A";
        end

      else
        COMMAREA.CATOAP = COMMAREA.CAFROMAP;
      end
    end

    XSOZ-S0001(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* ------------------------------------------------------------*/
  /* ------------------------------------------------------------*/
  /* pf14 action*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf14) /* pf14 pressed*/
    if (OZ0HW00.OZ0HW-PF14-EDIT-FLAG == " ") /* edits haven't been performed*/
      exit stack; /* exit to edit the data*/
    else
      if (OZ0HW00.OZ0HW-EDIT-FLAG == "Y") /* didn't pass edits*/
        exit stack; /* exit to display map*/
      else
        OZ0H-15200(); /* tidy up the comment area*/
        COMMAREA.CATOAP = "OZ0I"; /* TO application*/
        OZ0H-13200(); /* build ozwrec to pass*/
        XSOZ-S0001(); /* Exit to another application*/
        exit stack; /* Exit to display map*/
      end
    end
  end

  /* ------------------------------------------------------------*/
  /* pf18 action*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf18) /* pf18 pressed*/

    OZ0H-15200(); /* tidy up the comment area*/
    COMMAREA.CATOAP = "OZ0F"; /* TO application*/
    OZ0H-13200(); /* build ozwrec to pass*/
    XSOZ-S0001(); /* Exit to another application*/
    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* pf19 action*/
  /* TT#8141 SBHARA 09/27/00*/
  /* The IF loop have been modified to validate the user access*/
  /* and to avoid IMOZ1035 from abending*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf19)

    if (OZ0HW00.OZ0HW-UPD-FLG == "Y")
      if (OZ0HM001 not modified)
        OZ0H-16305(); /* validate userid*/
        if (SQLCA.VAGen_SQLCODE == 0) /* user have access*/
          OZ0H-16300(); /* submit jcl for rmt prt*/
        end
        if (SQLCA.VAGen_SQLCODE == 100) /* user  does not have access*/
          exit stack;
        end
      else
        converseLib.validationFailed(50);
      end
      OZ0HW00.OZ0HW-UPD-FLG = " ";
      exit stack; /* Exit to display map*/
    end
  end


  /* ------------------------------------------------------------*/
  /* pf20 action*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf20)

    if (OZ0HW00.OZ0HW-ENT-FLG == "Y") /* has enter been pressed*/
      if (OZ0HW00.OZ0HW-UPD-FLG == "Y")
        if (OZ0HM001 not modified)
          OZ0H-16200(); /* submit jcl for release*/
          OZ0HW00.OZ0HW-OVERRIDE-DI = "N";
          OZ0HM001.OZ0HM-OVERRIDE-DI = "N";
        else
          converseLib.validationFailed(50);
        end
        OZ0HW00.OZ0HW-UPD-FLG = " ";
        exit stack; /* Exit to display map*/
      end
    else
      converseLib.validationFailed(81); /* must press enter first*/
      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      exit stack; /* Exit to display map*/
    end

  end

  /* ------------------------------------------------------------*/
  /* enter action*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter)
    OZ0HW00.OZ0HW-UPD-FLG = " ";
    OZ0HW00.OZ0HW-ENT-FLG = "Y";
    OZ0HW00.OZ0HW-SWF = "Y"; /* Format the map switch*/
    OZ0HW00.OZ0HW-SWR = "Y"; /* Request for data switch*/
  end
end // end OZ0H-13000


// Check attention identifier
Function OZ0H-13200()
  /* T OZWREC EMPTY;*/
  if (COMMAREA.CATOAP == "OZ0I")
    if (OZ0HM001.OZ0HM-CURR-CU-CO-ID == "       ")
      OZWREC.OZW-HDR-CUST = OZ0HM001.OZ0HM-CURR-CU-CO-ID;
    else
      OZ0HW00.OZ0HW-SV-CUSTOMER = OZ0HM001.OZ0HM-CURR-CU-CO-ID;
      OZWREC.OZW-HDR-CUST = OZ0HW00.OZ0HW-SV-CUSTOMER;
    end

    if (OZ0HM001.OZ0HM-CURR-STOR-ID == "    ")
      OZWREC.OZW-HDR-STR = OZ0HM001.OZ0HM-CURR-STOR-ID;
    else
      OZ0HW00.OZ0HW-SV-STORE-NUM = OZ0HM001.OZ0HM-CURR-STOR-ID;
      OZWREC.OZW-HDR-STR = OZ0HW00.OZ0HW-SV-STORE-NUM;
    end

    if (OZ0HM001.OZ0HM-CURR-XNX-DEPT == "  ")
      OZWREC.OZW-HDR-DPT = OZ0HM001.OZ0HM-CURR-XNX-DEPT;
    else
      OZ0HW00.OZ0HW-SV-DEPT-NUM = OZ0HM001.OZ0HM-CURR-XNX-DEPT;
      OZWREC.OZW-HDR-DPT = OZ0HW00.OZ0HW-SV-DEPT-NUM;
    end

  else
    OZWREC.OZW-HDR-CUST = OZ0HM001.OZ0HM-CURR-CU-CO-ID;
    OZWREC.OZW-HDR-STR = OZ0HM001.OZ0HM-CURR-STOR-ID;
    OZWREC.OZW-HDR-DPT = OZ0HM001.OZ0HM-CURR-XNX-DEPT;
  end
  OZWREC.CUST-STR-DPT = OZWREC.OZW-HDR-CSD;
  OZWREC.KUCCONM = OZ0HM001.OZ0HM-CU-CO-NM-HDR;
  OZWREC.XGPCD = OZ0HM001.OZ0HM-CURR-GPC-CD;
  OZWREC.XGPDESC = OZ0HM001.OZ0HM-GPC-DESC;
  OZWREC.SOCD-CURR-CUST-PO = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM;
  OZWREC.SOCD-CURR-CUST-PO-TO = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-TO;
  OZWREC.OP1CUOID = OZ0HM001.OZ0HM-OP-CUST-ORD-ID;
  OZWREC.OZW-SV-OP1CUOID = OZ0HM001.OZ0HM-OP-CUST-ORD-ID;
  OZWREC.XSOCD = OZ0HM001.OZ0HM-XSO-SLS-OFC-ID;
  OZWREC.XSOSNM = OZ0HM001.OZ0HM-XSO-SLS-OFC-ID-DESC;
  OZWREC.SM1AGYID = OZ0HM001.OZ0HM-SM-SAGCY-ID;
  OZWREC.SM4REPID = OZ0HM001.OZ0HM-SM-SREP-ID;
  OZWREC.XXXFSTNM = OZ0HM001.OZ0HM-SM-SREP-FIRST-NM;
  OZWREC.XXXLSTNM = OZ0HM001.OZ0HM-SM-SREP-LAST-NM;
  OZWREC.OVERRIDE-DI = OZ0HM001.OZ0HM-OVERRIDE-DI;
  OZWREC.NEED-DATE-FROM = OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM;
  OZWREC.NEED-DATE-TO = OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO;
  if (converseVar.eventKey is pf14)
    OZWREC.SOCD-LTR-OVRD-ID = 0;
  else
    OZWREC.SOCD-LTR-OVRD-ID = OZ0HW00.OZ0HW-SOCD-LTR-OVRD-ID;
  end
  OZWREC.WC-FLG = OZ0HW00.OZ0HW-WC-FLG;
  OZ0HW00.OZ0HW-IXM = 1;
  while (OZ0HW00.OZ0HW-IXM < 6)
    OZWREC.VAGen_COMMENT[OZ0HW-IXM] = OZ0HM001.OZ0HM-COMMENT[OZ0HW-IXM];
    OZ0HW00.OZ0HW-IXM = OZ0HW00.OZ0HW-IXM + 1;
  end
end // end OZ0H-13200


// Reset highlighted fields
Function OZ0H-14000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/
  set OZ0HM001.OZ0HM-CURR-CU-CO-ID normal;
  set OZ0HM001.OZ0HM-CURR-STOR-ID normal;
  set OZ0HM001.OZ0HM-CURR-XNX-DEPT normal;
  set OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM normal;
  set OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-TO normal;
  set OZ0HM001.OZ0HM-OP-CUST-ORD-ID normal;
  set OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM normal;
  set OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO normal;
  set OZ0HM001.OZ0HM-CURR-GPC-CD normal;
  set OZ0HM001.OZ0HM-XSO-SLS-OFC-ID normal;
  set OZ0HM001.OZ0HM-SM-SAGCY-ID normal;
  set OZ0HM001.OZ0HM-SM-SREP-ID normal;

  set OZ0HM001.CATOAP initialAttributes; /* TO application*/
  set OZ0HM001.CAITEM initialAttributes; /* Application data*/

   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (OZ0HM001.OZ0HM-CURR-GPC-CD == "?" /* if any ? entered*/
   || OZ0HM001.OZ0HM-XSO-SLS-OFC-ID == " ?")

    if (OZ0HM001.OZ0HM-CURR-GPC-CD == "?") /* if ? entered in gpc*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC       "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc window*/
      end

        /* **********************************************************/
        /* *  If the pass index is greater than zero, use the      **/
        /* *  passed table index 'XX0XWPIX' to move the gpc        **/
        /* *  code and description to the map.                     **/
        /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        OZ0HM001.OZ0HM-CURR-GPC-CD = XGPTBL.XGPCD[XX0XWPIX];
        OZ0HM001.OZ0HM-GPC-DESC = XGPTBL.XGPDESC[XX0XWPIX];
        set OZ0HM001.OZ0HM-CURR-GPC-CD cursor; /* put cursor on gpc cd*/
      else
        OZ0HM001.OZ0HM-CURR-GPC-CD = " "; /* clear fields*/
        set OZ0HM001.OZ0HM-CURR-GPC-CD cursor; /* put cursor on gpc cd*/
        OZ0HM001.OZ0HM-GPC-DESC = " "; /* clear description*/
      end
      converseLib.clearScreen();
      
      OZ0HW00.OZ0HW-SWR = "N"; /* no to request for data*/
  /* MOVE 'Y' TO OZ0HW00.OZ0HW-SWF;/* yes to format map*/

      exit stack; /* go display map*/
    end

    if (OZ0HM001.OZ0HM-XSO-SLS-OFC-ID == " ?")
       /* *******************************************************************/
       /* popup xsocd sales office code*/
       /* *******************************************************************/

      XPXX001(); /* initialize*/

      set OZ0HM001.OZ0HM-XSO-SLS-OFC-ID cursor;
      XX0XW02.XX0XWHDR = "              SALES OFFICE";

      while (XX0XW02.XX0XWEND == "N") /* not end of process*/
        XPXSO01(); /* popup xsocd window*/
      end

      if (XX0XW02.XX0XWPIX > 0) /* selection was made*/
        OZ0HM001.OZ0HM-XSO-SLS-OFC-ID = XSOTBL.XSOCD[XX0XWPIX];
        OZ0HM001.OZ0HM-XSO-SLS-OFC-ID-DESC = XSOTBL.XSOSNM[XX0XWPIX];
      else
        OZ0HM001.OZ0HM-XSO-SLS-OFC-ID = " ";
        set OZ0HM001.OZ0HM-XSO-SLS-OFC-ID cursor;
        OZ0HM001.OZ0HM-XSO-SLS-OFC-ID-DESC = " ";
      end

      converseLib.clearScreen();
      
      OZ0HW00.OZ0HW-SWR = "N"; /* no to request for data*/
  /* MOVE 'Y' TO OZ0HW00.OZ0HW-SWF;/* yo to format map*/
      exit stack; /* go display map*/

    end
  end

end // end OZ0H-14000


// Verify data that was entered
Function OZ0H-15000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (OZ0HM001.CAITEM > " ") /* Application data was entered*/

    OZWREC.XXXPRCNM = "15000"; /* Module identification*/
    set OZ0HM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

  if (converseVar.eventKey is enter /* Enter was pressed*/
   || converseVar.eventKey is pf18  /* PF18 was pressed*/
   || converseVar.eventKey is pf19  /* PF19 was pressed*/
   || converseVar.eventKey is pf20) /* PF20 was pressed*/
    OZ0H-15200(); /* Verify data in the line*/
  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end

end // end OZ0H-15000


// Verify data in the line
Function OZ0H-15200()
  /* move up the comments if first line blank*/

  OZ0HW00.OZ0HW-IX1 = 1;

  while (OZ0HM001.OZ0HM-COMMENT[1] == " " && 
  OZ0HW00.OZ0HW-IX1 < 6)

    if (OZ0HM001.OZ0HM-COMMENT[1] == " ")
      OZ0HW00.OZ0HW-IXM = 1;
      OZ0HW00.OZ0HW-IDX = 2;

      while (OZ0HW00.OZ0HW-IDX < 6)
        OZ0HM001.OZ0HM-COMMENT[OZ0HW-IXM] = OZ0HM001.OZ0HM-COMMENT[OZ0HW-IDX];
        OZ0HM001.OZ0HM-COMMENT[OZ0HW-IDX] = " ";
        OZ0HW00.OZ0HW-IXM = OZ0HW00.OZ0HW-IXM + 1;
        OZ0HW00.OZ0HW-IDX = OZ0HW00.OZ0HW-IDX + 1;
      end

    end

    OZ0HW00.OZ0HW-IX1 = OZ0HW00.OZ0HW-IX1 + 1;

  end


  /* write the comments to the work record*/

  OZ0HW00.OZ0HW-IXM = 1; /* initialize index*/
  while (OZ0HW00.OZ0HW-IXM < 6) /* until end of lines*/

    OZ0HW01.OZ0HW-COMMENT[OZ0HW-IXM] = OZ0HM001.OZ0HM-COMMENT[OZ0HW-IXM];

    OZ0HW00.OZ0HW-IXM = OZ0HW00.OZ0HW-IXM + 1;

  end

end // end OZ0H-15200


// Process valid input request
Function OZ0H-16000()
  /* ------------------------------------------------------------*/
  /* PF19 / PF20 section*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf19
   || converseVar.eventKey is pf20)

    if (OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM > 0 && 
    OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO > 0)
  /* from date check*/
      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "A";
      TA2REC.TA2GRGA = OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM;

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

      if (TA2REC.TA2RTNCD == 0)
        OZ0HW00.OZ0HW-SV-NEED-DT-FROM = TA2GRGGN;
      else
        OZWREC.XXXPRCNM = "11200"; /* Module identification*/
        set OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-FROM cursor, bold;
        converseLib.validationFailed(20); /* date invalid*/
        OZ0HW00.OZ0HW-SWR = "N"; /**/
        OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      end
  /* to date check*/
      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "A";
      TA2REC.TA2GRGA = OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO;

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

      if (TA2REC.TA2RTNCD == 0)
        OZ0HW00.OZ0HW-SV-NEED-DT-TO = TA2GRGGN;

      else
        OZWREC.XXXPRCNM = "11200"; /* Module identification*/
        set OZ0HM001.OZ0HM-SOCD-CURR-NEED-DT-TO cursor, bold;
        converseLib.validationFailed(20); /* date invalid*/
        OZ0HW00.OZ0HW-EDIT-FLAG = "Y"; /* yes to edit flag*/
        OZ0HW00.OZ0HW-SWR = "N"; /**/
      end

    end

    OZ0H-16100(); /* write or update override rec's*/

    OZ0HW00.OZ0HW-UPD-FLG = "Y";
    OZ0HW00.OZ0HW-WRITE-FLG = "Y";

    if (converseVar.eventKey is pf20)
      converseLib.validationFailed(48);
    else
      converseLib.validationFailed(76);
    end

  end

  OZ0HW00.OZ0HW-SWF = "Y"; /* format the map switch*/
end // end OZ0H-16000


// build vocldo01 record
Function OZ0H-16100()
  set VOCLDO01 empty;

  if (OZ0HW00.OZ0HW-OVERRIDE-DI == "Y") /* OZ0I ovrd di scn inserted vocldo01*/

    VOCLDO01.SOCD-LTR-OVRD-ID = OZ0HW00.OZ0HW-SOCD-LTR-OVRD-ID;

    OZ0H-16135(); /* select vocldo01*/
    OZ0H-16125(); /* insert vocldr01*/
    if (SQLCA.VAGen_SQLCODE == -803) /* dup record*/
      OZ0H-16132(); /* update curr vocldr01 record*/
    end

  else
    OZ0H-16110(); /* get next ovrd id*/
    VOCLDO01.SOCD-LTR-OVRD-ID = VOZCTL01.SOCD-NXT-LTR-OVRD;
    OZ0HW00.OZ0HW-SOCD-LTR-OVRD-ID = VOZCTL01.SOCD-NXT-LTR-OVRD;

    OZ0H-16115(); /* get next ltr req id*/
    VOCLDO01.SOCD-LTR-RQT-ID = VOZCTL01.SOCD-NXT-LTR-RQT;
    OZ0HW00.OZ0HW-SOCD-LTR-RQT-ID = VOZCTL01.SOCD-NXT-LTR-RQT;


    OZ0HW00.OZ0HW-SV-CU-CO-ID = OZ0HM001.OZ0HM-CURR-CU-CO-ID;
    VOCLDO01.SOCD-CU-CO-ID = OZ0HW00.OZ0HW-SV-CU-CO-ID;

    OZ0HW00.OZ0HW-SV-STOR-ID-NUM = OZ0HM001.OZ0HM-CURR-STOR-ID;
    OZ0HW00.OZ0HW-SV-STOR-ID = OZ0HW00.OZ0HW-SV-STOR-ID-NUM;
    VOCLDO01.SOCD-CU-STOR-ID = OZ0HW00.OZ0HW-SV-STOR-ID;

    OZ0HW00.OZ0HW-SV-XNX-DEPT-NUM = OZ0HM001.OZ0HM-CURR-XNX-DEPT;
    OZ0HW00.OZ0HW-SV-XNX-DEPT = OZ0HW00.OZ0HW-SV-XNX-DEPT-NUM;
    VOCLDO01.SOCD-XNX-DEPT-ID = OZ0HW00.OZ0HW-SV-XNX-DEPT;

    VOCLDO01.SOCD-XGP-GPC-CD = OZ0HM001.OZ0HM-CURR-GPC-CD;
    VOCLDO01.XSOCD = OZ0HM001.OZ0HM-XSO-SLS-OFC-ID;

    VOCLDO01.SOCD-LTR-DIST-CD = "US";
    VOCLDO01.SOCD-CUST-REQ-CD = "CD";
    VOCLDO01.SOCD-SREP-REQ-CD = "CD";
    VOCLDO01.SOCD-BYPAS-ELIG-FL = "N";

    VOCLDO01.SOCD-LTR-COMNT1 = OZ0HW01.OZ0HW-COMMENT[1];
    VOCLDO01.SOCD-LTR-COMNT2 = OZ0HW01.OZ0HW-COMMENT[2];
    VOCLDO01.SOCD-LTR-COMNT3 = OZ0HW01.OZ0HW-COMMENT[3];
    VOCLDO01.SOCD-LTR-COMNT4 = OZ0HW01.OZ0HW-COMMENT[4];
    VOCLDO01.SOCD-LTR-COMNT5 = OZ0HW01.OZ0HW-COMMENT[5];

    OZ0H-16120(); /* add vocldo01 record*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OZ0H-16125(); /* add vocldr01 record*/
    else
      if (SQLCA.VAGen_SQLCODE == -803) /* dup record*/
        OZ0H-16130(); /* update curr vocldo01 record*/
        OZ0H-16131(); /* read  curr vocldr01 record*/
        if (SQLCA.VAGen_SQLCODE == 0)
          OZ0H-16132(); /* update curr vocldr01 record*/
        else
          OZ0H-16133(); /* write new  vocldr01 record*/
        end
      end
    end
  end
end // end OZ0H-16100


// read vozctl01
Function OZ0H-16110()
  set VOZCTL01 empty;

  try
    call "VOZCTL01" ("U2", SQLCA, VOZCTL01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16110"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOZCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOZCTL01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16110


// read vozctl01
Function OZ0H-16115()
  set VOZCTL01 empty;

  try
    call "VOZCTL01" ("U3", SQLCA, VOZCTL01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16115"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOZCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOZCTL01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16115


// add new vocldo01 row
Function OZ0H-16120()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDO01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16120"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  VOCLDO01.ZZZSDT = TA2REC.TA2GRGGN;
  VOCLDO01.ZZZCHGCT = 0;
  VOCLDO01.XXX-USER-ID = "OZ0H";

  XX0XS01();
  VOCLDO01.ZZZCHGTM = XX0XWTIM;
  VOCLDO01.ZZZSDTM = XX0XWTIM;

  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCLDO01" ("A ", SQLCA, VOCLDO01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == -803) /* dup record*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16120"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDO01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDO01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16120


// build vocldo01 record
Function OZ0H-16125()
  set VOCLDR01 empty;

  VOCLDR01.SOCD-LTR-RQT-ID = VOCLDO01.SOCD-LTR-RQT-ID;
  VOCLDR01.SOCD-CU-CO-ID = VOCLDO01.SOCD-CU-CO-ID;
  VOCLDR01.SOCD-CU-STOR-ID = VOCLDO01.SOCD-CU-STOR-ID;
  VOCLDR01.SOCD-XNX-DEPT-ID = VOCLDO01.SOCD-XNX-DEPT-ID;
  VOCLDR01.SOCD-XGP-GPC-CD = VOCLDO01.SOCD-XGP-GPC-CD;
  VOCLDR01.SOCD-SLS-OFC-ID = VOCLDO01.XSOCD;

  VOCLDR01.SOCD-CUST-ORD-ID = OZ0HM001.OZ0HM-OP-CUST-ORD-ID;

  if (OZ0HW00.OZ0HW-WC-FLG == "Y")
    VOCLDR01.SOCD-CUST-PO-BEG = OZAREC.SOCD-CURR-CUST-PO-FROM;
  else
    VOCLDR01.SOCD-CUST-PO-BEG = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM;
  end

  VOCLDR01.SOCD-CUST-PO-END = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-TO;

  VOCLDR01.SOCD-CUST-NEED-BDT = OZ0HW00.OZ0HW-SV-NEED-DT-FROM;
  VOCLDR01.SOCD-CUST-NEED-XDT = OZ0HW00.OZ0HW-SV-NEED-DT-TO;
  VOCLDR01.SM4REPID = OZ0HM001.OZ0HM-SM-SREP-ID;
  VOCLDR01.SM1AGYID = OZ0HM001.OZ0HM-SM-SAGCY-ID;

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDR01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16120"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  VOCLDR01.ZZZSDT = TA2REC.TA2GRGGN;
  VOCLDR01.ZZZCHGCT = 0;
  VOCLDR01.XXX-USER-ID = "OZ0H";

  XX0XS01();
  VOCLDR01.ZZZCHGTM = XX0XWTIM;
  VOCLDR01.ZZZSDTM = XX0XWTIM;

  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCLDR01" ("A ", SQLCA, VOCLDR01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == -803) /* dup record*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16125"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16125


// build vocldo01 record
Function OZ0H-16130()
  OZ0H-16135(); /* read vocldo01*/

  OZ0HW00.OZ0HW-SV-CU-CO-ID = OZ0HM001.OZ0HM-CURR-CU-CO-ID;
  VOCLDO01.SOCD-CU-CO-ID = OZ0HW00.OZ0HW-SV-CU-CO-ID;

  OZ0HW00.OZ0HW-SV-STOR-ID-NUM = OZ0HM001.OZ0HM-CURR-STOR-ID;
  OZ0HW00.OZ0HW-SV-STOR-ID = OZ0HW00.OZ0HW-SV-STOR-ID-NUM;
  VOCLDO01.SOCD-CU-STOR-ID = OZ0HW00.OZ0HW-SV-STOR-ID;

  OZ0HW00.OZ0HW-SV-XNX-DEPT-NUM = OZ0HM001.OZ0HM-CURR-XNX-DEPT;
  OZ0HW00.OZ0HW-SV-XNX-DEPT = OZ0HW00.OZ0HW-SV-XNX-DEPT-NUM;
  VOCLDO01.SOCD-XNX-DEPT-ID = OZ0HW00.OZ0HW-SV-XNX-DEPT;

  VOCLDO01.SOCD-XGP-GPC-CD = OZ0HM001.OZ0HM-CURR-GPC-CD;
  VOCLDO01.XSOCD = OZ0HM001.OZ0HM-XSO-SLS-OFC-ID;

  VOCLDO01.SOCD-LTR-DIST-CD = "US";
  VOCLDO01.SOCD-CUST-REQ-CD = "CD";
  VOCLDO01.SOCD-SREP-REQ-CD = "CD";
  VOCLDO01.SOCD-BYPAS-ELIG-FL = "N";

  VOCLDO01.SOCD-LTR-COMNT1 = OZ0HW01.OZ0HW-COMMENT[1];
  VOCLDO01.SOCD-LTR-COMNT2 = OZ0HW01.OZ0HW-COMMENT[2];
  VOCLDO01.SOCD-LTR-COMNT3 = OZ0HW01.OZ0HW-COMMENT[3];
  VOCLDO01.SOCD-LTR-COMNT4 = OZ0HW01.OZ0HW-COMMENT[4];
  VOCLDO01.SOCD-LTR-COMNT5 = OZ0HW01.OZ0HW-COMMENT[5];

  OZ0H-16137(); /* update vocldo01*/
end // end OZ0H-16130


// build vocldo01 record
Function OZ0H-16131()
  set VOCLDR01 empty;

  VOCLDR01.SOCD-LTR-RQT-ID = VOCLDO01.SOCD-LTR-RQT-ID;

  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCLDR01" ("S ", SQLCA, VOCLDR01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16131"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16131


// upd  vocldo01 row
Function OZ0H-16132()
  VOCLDR01.SOCD-CU-CO-ID = VOCLDO01.SOCD-CU-CO-ID;
  VOCLDR01.SOCD-CU-STOR-ID = VOCLDO01.SOCD-CU-STOR-ID;
  VOCLDR01.SOCD-XNX-DEPT-ID = VOCLDO01.SOCD-XNX-DEPT-ID;
  VOCLDR01.SOCD-XGP-GPC-CD = VOCLDO01.SOCD-XGP-GPC-CD;
  VOCLDR01.SOCD-SLS-OFC-ID = VOCLDO01.XSOCD;
  VOCLDR01.SM4REPID = OZ0HM001.OZ0HM-SM-SREP-ID;

  VOCLDR01.SOCD-CUST-ORD-ID = OZ0HM001.OZ0HM-OP-CUST-ORD-ID;

  if (OZ0HW00.OZ0HW-WC-FLG == "Y")
    VOCLDR01.SOCD-CUST-PO-BEG = OZAREC.SOCD-CURR-CUST-PO-FROM;
  else
    VOCLDR01.SOCD-CUST-PO-BEG = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM;
  end

  VOCLDR01.SOCD-CUST-PO-END = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-TO;

  VOCLDR01.SOCD-CUST-NEED-BDT = OZ0HW00.OZ0HW-SV-NEED-DT-FROM;
  VOCLDR01.SOCD-CUST-NEED-XDT = OZ0HW00.OZ0HW-SV-NEED-DT-TO;

  VOCLDR01.XXX-USER-ID = "OZ0H";

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDR01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16132"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  XX0XS01();
  VOCLDR01.ZZZCHGTM = XX0XWTIM;

  try
    call "VOCLDR01" ("U ", SQLCA, VOCLDR01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16132"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16132


// upd  vocldo01 row
Function OZ0H-16133()
  VOCLDR01.SOCD-LTR-RQT-ID = VOCLDO01.SOCD-LTR-RQT-ID;
  VOCLDR01.SOCD-CU-CO-ID = VOCLDO01.SOCD-CU-CO-ID;
  VOCLDR01.SOCD-CU-STOR-ID = VOCLDO01.SOCD-CU-STOR-ID;
  VOCLDR01.SOCD-XNX-DEPT-ID = VOCLDO01.SOCD-XNX-DEPT-ID;
  VOCLDR01.SOCD-XGP-GPC-CD = VOCLDO01.SOCD-XGP-GPC-CD;
  VOCLDR01.SOCD-SLS-OFC-ID = VOCLDO01.XSOCD;
  VOCLDR01.SM4REPID = OZ0HM001.OZ0HM-SM-SREP-ID;

  VOCLDR01.SOCD-CUST-ORD-ID = OZ0HM001.OZ0HM-OP-CUST-ORD-ID;

  if (OZ0HW00.OZ0HW-WC-FLG == "Y")
    VOCLDR01.SOCD-CUST-PO-BEG = OZAREC.SOCD-CURR-CUST-PO-FROM;
  else
    VOCLDR01.SOCD-CUST-PO-BEG = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-FROM;
  end

  VOCLDR01.SOCD-CUST-PO-END = OZ0HM001.OZ0HM-SOCD-CURR-CUST-PO-TO;

  VOCLDR01.SOCD-CUST-NEED-BDT = OZ0HW00.OZ0HW-SV-NEED-DT-FROM;
  VOCLDR01.SOCD-CUST-NEED-XDT = OZ0HW00.OZ0HW-SV-NEED-DT-TO;

  VOCLDR01.XXX-USER-ID = "OZ0H";

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDR01.ZZZCHGDT = TA2REC.TA2GRGGN;
    VOCLDR01.ZZZSDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16132"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  XX0XS01();
  VOCLDR01.ZZZCHGTM = XX0XWTIM;
  VOCLDR01.ZZZSDTM = XX0XWTIM;

  try
    call "VOCLDR01" ("A ", SQLCA, VOCLDR01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16132"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16133


// read vocldo01 row
Function OZ0H-16135()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCLDO01" ("S ", SQLCA, VOCLDO01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    if (SQLCA.VAGen_SQLCODE == 100 /* no rec fnd*/
     && OZ0HW00.OZ0HW-OVERRIDE-DI != "Y") /* not insrtd by di ovrd process*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16120"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDO01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDO01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16135


// upd  vocldo01 row
Function OZ0H-16137()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/
  VOCLDO01.XXX-USER-ID = "OZ0H";

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDO01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16137"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  XX0XS01();
  VOCLDO01.ZZZCHGTM = XX0XWTIM;

  try
    call "VOCLDO01" ("U ", SQLCA, VOCLDO01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16120"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDO01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDO01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16137


// Submit prod JCL FF7201
Function OZ0H-16200()
   /* ------------------------------------------------------------*/
   /* Call sub-routine to find which environment*/
   /* the program is executing in, development*/
   /* or production.*/
   /* ------------------------------------------------------------*/
  set TA3REC empty;
  TA3REC.TA3OPTN = "ASSIGN ";
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA3REC.TA3RTNCD == 0)          /* Good return code*/

    if (TA3REC.TA3RGNID == "03") /* if on production system*/
      OZ0H-16210(); /* format production jcl*/
    else
      if (TA3REC.TA3RGNID == "04") /* if on production system*/
        OZ0H-16220(); /* format development jcl dsnt*/
      else
        OZ0H-16230(); /* format development jcl dsnf*/
      end
    end

  else
    converseLib.validationFailed(10);
    exit stack;
  end
end // end OZ0H-16200


// Submit prod JCL FF7201
Function OZ0H-16210()

   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  TA6REC.TA6INDEX = 1; /* Initialize index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (OZ0HT.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      OZ0HW02.OZ0HW-SOCD-LTR-OVRD-ID = OZ0HW00.OZ0HW-SOCD-LTR-OVRD-ID;
      OZ0HW02.OZ0HW-SOCD-LTR-RQT-ID = OZ0HW00.OZ0HW-SOCD-LTR-RQT-ID;
      OZ0HW02.OZ0HW-OVERRIDE-DI = OZ0HM001.OZ0HM-OVERRIDE-DI;
      OZ0HW02.OZ0HW-SALES-AGENCY = OZ0HM001.OZ0HM-SM-SAGCY-ID;
      OZ0HW02.CAUSERID = COMMAREA.CAUSERID;
      OZ0HW02.OZ0HW-RMT-PRT-FLG = "N";

      TA6REC.TARJCL[TA6INDEX] = OZ0HW02.TARJCL; /* Parameters*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = OZ0HT.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = OZ0HT.TARTYPE[TA6INDEX]; /* Type*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (OZ0HT.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online msg switch*/

  XPTA0P(); /* Print Request Subroutine*/

   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = "12600";

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    set OZ0HW02 empty;

    OZ0HW00.OZ0HW-SWD = "1";
    OZ0HW00.OZ0HW-SWF = "Y";
    OZ0HW00.OZ0HW-SWR = "N";
    OZ0HW00.OZ0HW-WRITE-FLG = " ";
    OZ0HW00.OZ0HW-UPD-FLG = " ";
    OZ0HW00.OZ0HW-WC-FLG = " ";

    converseLib.validationFailed(49);

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  converseLib.validationFailed(10); /* Indicate system error*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16210


// Submit prod JCL FF7201
Function OZ0H-16220()

   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  TA6REC.TA6INDEX = 1; /* Initialize index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (OZ0HTDT.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      OZ0HW02.OZ0HW-SOCD-LTR-OVRD-ID = OZ0HW00.OZ0HW-SOCD-LTR-OVRD-ID;
      OZ0HW02.OZ0HW-SOCD-LTR-RQT-ID = OZ0HW00.OZ0HW-SOCD-LTR-RQT-ID;
      OZ0HW02.OZ0HW-OVERRIDE-DI = OZ0HM001.OZ0HM-OVERRIDE-DI;
      OZ0HW02.OZ0HW-SALES-AGENCY = OZ0HM001.OZ0HM-SM-SAGCY-ID;
      OZ0HW02.CAUSERID = COMMAREA.CAUSERID;
      OZ0HW02.OZ0HW-RMT-PRT-FLG = "N";

      TA6REC.TARJCL[TA6INDEX] = OZ0HW02.TARJCL; /* Parameters*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = OZ0HTDT.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = OZ0HTDT.TARTYPE[TA6INDEX]; /* Type*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (OZ0HTDT.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online msg switch*/

  XPTA0P(); /* Print Request Subroutine*/

   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = "12600";

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    set OZ0HW02 empty;

    OZ0HW00.OZ0HW-SWD = "1";
    OZ0HW00.OZ0HW-SWF = "Y";
    OZ0HW00.OZ0HW-SWR = "N";
    OZ0HW00.OZ0HW-WRITE-FLG = " ";
    OZ0HW00.OZ0HW-UPD-FLG = " ";
    OZ0HW00.OZ0HW-WC-FLG = " ";

    converseLib.validationFailed(49);

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  converseLib.validationFailed(10); /* Indicate system error*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16220


// Submit prod JCL FF7201
Function OZ0H-16230()

   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  TA6REC.TA6INDEX = 1; /* Initialize index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (OZ0HTDF.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      OZ0HW02.OZ0HW-SOCD-LTR-OVRD-ID = OZ0HW00.OZ0HW-SOCD-LTR-OVRD-ID;
      OZ0HW02.OZ0HW-SOCD-LTR-RQT-ID = OZ0HW00.OZ0HW-SOCD-LTR-RQT-ID;
      OZ0HW02.OZ0HW-OVERRIDE-DI = OZ0HM001.OZ0HM-OVERRIDE-DI;
      OZ0HW02.OZ0HW-SALES-AGENCY = OZ0HM001.OZ0HM-SM-SAGCY-ID;
      OZ0HW02.CAUSERID = COMMAREA.CAUSERID;
      OZ0HW02.OZ0HW-RMT-PRT-FLG = "N";

      TA6REC.TARJCL[TA6INDEX] = OZ0HW02.TARJCL; /* Parameters*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = OZ0HTDF.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = OZ0HTDF.TARTYPE[TA6INDEX]; /* Type*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (OZ0HTDF.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online msg switch*/

  XPTA0P(); /* Print Request Subroutine*/

   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = "12600";

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    set OZ0HW01 empty;

    OZ0HW00.OZ0HW-SWD = "1";
    OZ0HW00.OZ0HW-SWF = "Y";
    OZ0HW00.OZ0HW-SWR = "N";
    OZ0HW00.OZ0HW-WRITE-FLG = " ";
    OZ0HW00.OZ0HW-UPD-FLG = " ";
    OZ0HW00.OZ0HW-WC-FLG = " ";

    converseLib.validationFailed(49);

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  converseLib.validationFailed(10); /* Indicate system error*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16230


// Submit prod JCL FF7201
Function OZ0H-16300()
   /* ------------------------------------------------------------*/
   /* Call sub-routine to find which environment*/
   /* the program is executing in, development*/
   /* or production.*/
   /* ------------------------------------------------------------*/
  set TA3REC empty;
  TA3REC.TA3OPTN = "ASSIGN ";
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA3REC.TA3RTNCD == 0)          /* Good return code*/

    if (TA3REC.TA3RGNID == "03") /* if on production system*/
      OZ0H-16310(); /* format production jcl*/
    else
      if (TA3REC.TA3RGNID == "04") /* if on production system*/
        OZ0H-16320(); /* format development jcl dsnt*/
      else
        OZ0H-16330(); /* format development jcl dsnf*/
      end
    end

  else
    converseLib.validationFailed(10);
    exit stack;
  end
end // end OZ0H-16300


// Check The user access/imoz1035
Function OZ0H-16305()
  /* --------------------------------------------------------------------*/
  /* This new Proc required to add for validating the userid against the*/
  /* table DIMDS.VDIST001.*/
  /* TT#8141 SBHARA 09/29/00*/
  /* --------------------------------------------------------------------*/
  set VDIST001 empty;

  OZ0HW-OZ-JOB-NAME = "OZ1031";
  OZ0HW-OZ-STEP-NAME = "S0050";
  OZ0HW-OZ-USER-ID = COMMAREA.CAUSERID;
  VDIST001.XXX-RPT-FIL-ID = OZ0HW00.OZ0HW-OZ-REPORT-KEY;
  OZ0H-IO7010-V();
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)     
    return;
  else
    if (SQLCA.VAGen_SQLCODE == +100)
      converseLib.validationFailed(84); /* Sorry!!! You do not have access*/
  /* to print the letter Pl. contact your supervisor*/
      return;
    else
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end
  end
end // end OZ0H-16305


// Submit prod JCL FF7201
Function OZ0H-16310()

   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  TA6REC.TA6INDEX = 1; /* Initialize index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (OZ0HT2.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      OZ0HW02.OZ0HW-SOCD-LTR-OVRD-ID = OZ0HW00.OZ0HW-SOCD-LTR-OVRD-ID;
      OZ0HW02.OZ0HW-SOCD-LTR-RQT-ID = OZ0HW00.OZ0HW-SOCD-LTR-RQT-ID;
      OZ0HW02.OZ0HW-OVERRIDE-DI = OZ0HM001.OZ0HM-OVERRIDE-DI;
      OZ0HW02.OZ0HW-SALES-AGENCY = OZ0HM001.OZ0HM-SM-SAGCY-ID;
      OZ0HW02.CAUSERID = COMMAREA.CAUSERID;
      OZ0HW02.OZ0HW-RMT-PRT-FLG = "Y";

      TA6REC.TARJCL[TA6INDEX] = OZ0HW02.TARJCL; /* Parameters*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = OZ0HT2.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = OZ0HT2.TARTYPE[TA6INDEX]; /* Type*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (OZ0HT2.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online msg switch*/

  XPTA0P(); /* Print Request Subroutine*/

   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = "12600";

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    set OZ0HW02 empty;

    OZ0HW00.OZ0HW-SWD = "1";
    OZ0HW00.OZ0HW-SWF = "Y";
    OZ0HW00.OZ0HW-SWR = "N";
    OZ0HW00.OZ0HW-WRITE-FLG = " ";
    OZ0HW00.OZ0HW-UPD-FLG = " ";
    OZ0HW00.OZ0HW-WC-FLG = " ";

    converseLib.validationFailed(49);

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  converseLib.validationFailed(10); /* Indicate system error*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16310


// Submit prod JCL FF7201
Function OZ0H-16320()

   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  TA6REC.TA6INDEX = 1; /* Initialize index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (OZ0HT2T.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      OZ0HW02.OZ0HW-SOCD-LTR-OVRD-ID = OZ0HW00.OZ0HW-SOCD-LTR-OVRD-ID;
      OZ0HW02.OZ0HW-SOCD-LTR-RQT-ID = OZ0HW00.OZ0HW-SOCD-LTR-RQT-ID;
      OZ0HW02.OZ0HW-OVERRIDE-DI = OZ0HM001.OZ0HM-OVERRIDE-DI;
      OZ0HW02.OZ0HW-SALES-AGENCY = OZ0HM001.OZ0HM-SM-SAGCY-ID;
      OZ0HW02.CAUSERID = COMMAREA.CAUSERID;
      OZ0HW02.OZ0HW-RMT-PRT-FLG = "Y";

      TA6REC.TARJCL[TA6INDEX] = OZ0HW02.TARJCL; /* Parameters*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = OZ0HT2T.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = OZ0HT2T.TARTYPE[TA6INDEX]; /* Type*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (OZ0HT2T.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online msg switch*/

  XPTA0P(); /* Print Request Subroutine*/

   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = "12600";

  if (sysVar.errorCode == "00000000") /* Call successful*/
  /* AND TA6REC.TA6RTNCD EQ '0';    /* and normal return*/
  /*  */
  /* SET OZ0HW02 EMPTY;*/

  /* MOVE '1' TO OZ0HW00.OZ0HW-SWD;*/
  /* MOVE 'Y' TO OZ0HW00.OZ0HW-SWF;*/
  /* MOVE 'N' TO OZ0HW00.OZ0HW-SWR;*/
  /* MOVE ' ' TO OZ0HW00.OZ0HW-WRITE-FLG;*/
  /* MOVE ' ' TO OZ0HW00.OZ0HW-UPD-FLG;*/
  /* MOVE ' ' TO OZ0HW00.OZ0HW-WC-FLG;*/

  /* MOVE 49 TO EZEMNO;*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  converseLib.validationFailed(10); /* Indicate system error*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16320


// Submit prod JCL FF7201
Function OZ0H-16330()

   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  TA6REC.TA6INDEX = 1; /* Initialize index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (OZ0HT2F.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      OZ0HW02.OZ0HW-SOCD-LTR-OVRD-ID = OZ0HW00.OZ0HW-SOCD-LTR-OVRD-ID;
      OZ0HW02.OZ0HW-SOCD-LTR-RQT-ID = OZ0HW00.OZ0HW-SOCD-LTR-RQT-ID;
      OZ0HW02.OZ0HW-OVERRIDE-DI = OZ0HM001.OZ0HM-OVERRIDE-DI;
      OZ0HW02.OZ0HW-SALES-AGENCY = OZ0HM001.OZ0HM-SM-SAGCY-ID;
      OZ0HW02.CAUSERID = COMMAREA.CAUSERID;
      OZ0HW02.OZ0HW-RMT-PRT-FLG = "Y";

      TA6REC.TARJCL[TA6INDEX] = OZ0HW02.TARJCL; /* Parameters*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = OZ0HT2F.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = OZ0HT2F.TARTYPE[TA6INDEX]; /* Type*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (OZ0HT2F.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online msg switch*/

  XPTA0P(); /* Print Request Subroutine*/

   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = "12600";

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    set OZ0HW01 empty;

    OZ0HW00.OZ0HW-SWD = "1";
    OZ0HW00.OZ0HW-SWF = "Y";
    OZ0HW00.OZ0HW-SWR = "N";
    OZ0HW00.OZ0HW-WRITE-FLG = " ";
    OZ0HW00.OZ0HW-UPD-FLG = " ";
    OZ0HW00.OZ0HW-WC-FLG = " ";

    converseLib.validationFailed(49);

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  converseLib.validationFailed(10); /* Indicate system error*/

  exit stack; /* Exit to display map*/


end // end OZ0H-16330


// TO CALL THE IOMOD IO7010
Function OZ0H-IO7010-V()
  /* --------------------------------------------------------------------*/
  /* This new Proc required to add for validating the userid against the*/
  /* table DIMDS.VDIST001.*/
  /* TT#8141 SBHARA 09/29/00*/
  /* --------------------------------------------------------------------*/
  /* ---------------------------------------------------------------------*/
  /* SELECT ROW*/
  /* ---------------------------------------------------------------------*/
  /*  */
  try
    call "IO7010" ("V ", SQLCA, VDIST001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row;*/
  /* ---------------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ----------------------------------------------------------------------*/
  if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
   || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/
    return;
  end
end // end OZ0H-IO7010-V


//*** RECORD=OZ0HW00 ****
// ----------------------------
// Application working storage.
// TT8141 SBHARA 09/25/00  ADDED A THREE VARIABLES TO THE
//                         record
//                         10        OZ0HW-OZ-REPORT-KEY
//                            15       OZ0HW-OZ-JOB-NAME
//                            15       OZ0HW-OZ-STEP-NAME
//                            15       OZ0HW-OZ-USER-ID
// ***********************
Record OZ0HW00 type basicRecord
  10 OZ0HW-IXM OZ0HW-IXM ; 
  10 OZ0HW-IX1 OZ0HW-IX1 ; 
  10 OZ0HW-IX2 OZ0HW-IX2 ; 
  10 OZ0HW-IDX OZ0HW-IDX ; 
  10 OZ0HW-CNT OZ0HW-CNT ; 
  10 OZ0HW-SV-CNT OZ0HW-SV-CNT ; 
  10 OZ0HW-ORD-FL OZ0HW-ORD-FL ; 
  10 OZ0HW-ORD-MATCH OZ0HW-ORD-MATCH ; 
  10 OZ0HW-SWC OZ0HW-SWC ; 
  10 OZ0HW-SWD OZ0HW-SWD ; 
  10 OZ0HW-SWF OZ0HW-SWF ; 
  10 OZ0HW-SWR OZ0HW-SWR ; 
  10 OZ0HW-SWU OZ0HW-SWU ; 
  10 OZ0HW-SFN OZ0HW-SFN ; 
  10 OZ0HW-FND OZ0HW-FND ; 
  10 OZ0HW-WRITE-FLG OZ0HW-WRITE-FLG ; 
  10 OZ0HW-WC-FLG OZ0HW-WC-FLG ; 
  10 OZ0HW-ITEM-FLG OZ0HW-ITEM-FLG ; 
  10 OZ0HW-UPD-FLG OZ0HW-UPD-FLG ; 
  10 OZ0HW-ENT-FLG OZ0HW-ENT-FLG ; 
  10 OZ0HW-SV-REL-CNT OZ0HW-SV-REL-CNT ; 
  10 OZ0HW-WS-MESSAGE OZ0HW-WS-MESSAGE ; 
    15 OZ0HW-WS-REL-CNT OZ0HW-WS-REL-CNT ; 
      20 OZ0HW-WS-REL-CNT-BLD OZ0HW-WS-REL-CNT-BLD [7] ; 
    15 * char(1) ; 
    15 OZ0HW-WS-MSG OZ0HW-WS-MSG ; 
  10 OZ0HW-LOW-VALUES OZ0HW-LOW-VALUES ; 
  10 OZ0HW-SAVE-PAGE OZ0HW-SAVE-PAGE ; 
  10 OZ0HW-SAVE-STORE OZ0HW-SAVE-STORE ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 OZ0HW-CUST-BREAK OZ0HW-CUST-BREAK ; 
    15 OZ0HW-CUST-BRK OZ0HW-CUST-BRK [25] ; 
  10 OZ0HW-CTL-FLD OZ0HW-CTL-FLD ; 
    15 OZ0HW-FNC OZ0HW-FNC ; 
    15 OZ0HW-SAV OZ0HW-SAV ; 
    15 OZ0HW-SAV-PAGE OZ0HW-SAV-PAGE ; 
  10 OZ0HW-TIME-BRK OZ0HW-TIME-BRK ; 
    15 OZ0HW-TB-HH OZ0HW-TB-HH ; 
    15 OZ0HW-TB-MM OZ0HW-TB-MM ; 
  10 OZ0HW-TIME-MK OZ0HW-TIME-MK ; 
    15 OZ0HW-TM-HH OZ0HW-TM-HH ; 
    15 OZ0HW-TM-CL OZ0HW-TM-CL ; 
    15 OZ0HW-TM-MM OZ0HW-TM-MM ; 
  10 OZ0HW-DATE-BRK OZ0HW-DATE-BRK ; 
    15 OZ0HW-DB-CC OZ0HW-DB-CC ; 
    15 OZ0HW-DB-YY OZ0HW-DB-YY ; 
    15 OZ0HW-DB-MM OZ0HW-DB-MM ; 
    15 OZ0HW-DB-DD OZ0HW-DB-DD ; 
  10 OZ0HW-DATE-MK OZ0HW-DATE-MK ; 
    15 OZ0HW-DM-MM OZ0HW-DM-MM ; 
    15 OZ0HW-DM-DASH1 OZ0HW-DM-DASH1 ; 
    15 OZ0HW-DM-DD OZ0HW-DM-DD ; 
    15 OZ0HW-DM-DASH2 OZ0HW-DM-DASH2 ; 
    15 OZ0HW-DM-YY OZ0HW-DM-YY ; 
  10 OZ0HW-NEED-DATE OZ0HW-NEED-DATE ; 
    15 OZ0HW-ND-MM OZ0HW-ND-MM ; 
    15 OZ0HW-ND-SLASH OZ0HW-ND-SLASH ; 
    15 OZ0HW-ND-DD OZ0HW-ND-DD ; 
  10 OZ0HW-SV-CHG-FLD OZ0HW-SV-CHG-FLD ; 
  10 OZ0HW-SV-XOMCD OZ0HW-SV-XOMCD ; 
  10 OZ0HW-SV-COMMENT OZ0HW-SV-COMMENT ; 
  10 OZ0HW-SV-DATE OZ0HW-SV-DATE ; 
  10 OZ0HW-NUM-DATE OZ0HW-NUM-DATE ; 
  10 OZ0HW-PO-SO-BLD OZ0HW-PO-SO-BLD ; 
    15 OZ0HW-PO-SO-CHAR OZ0HW-PO-SO-CHAR [25] ; 
  10 OZ0HW-SV-CUSTOMER OZ0HW-SV-CUSTOMER ; 
  10 OZ0HW-SV-CUST-ORD OZ0HW-SV-CUST-ORD ; 
  10 OZ0HW-SV-CUST-PO OZ0HW-SV-CUST-PO ; 
  10 OZ0HW-SV-DEPT OZ0HW-SV-DEPT ; 
  10 OZ0HW-CUST-STR-DPT OZ0HW-CUST-STR-DPT ; 
    15 OZ0HW-SV-CUST OZ0HW-SV-CUST ; 
      20 OZ0HW-SV-CUST-CHAR OZ0HW-SV-CUST-CHAR [7] ; 
    15 OZ0HW-DOT1 OZ0HW-DOT1 ; 
    15 OZ0HW-SV-STR OZ0HW-SV-STR ; 
    15 OZ0HW-DOT2 OZ0HW-DOT2 ; 
    15 OZ0HW-SV-DPT OZ0HW-SV-DPT ; 
  10 OZ0HW-SV-STOR-ID OZ0HW-SV-STOR-ID ; 
  10 OZ0HW-SV-XNX-DEPT OZ0HW-SV-XNX-DEPT ; 
  10 OZ0HW-CUST-BIN OZ0HW-CUST-BIN ; 
  10 OZ0HW-STORE-BIN OZ0HW-STORE-BIN ; 
  10 OZ0HW-DEPT-BIN OZ0HW-DEPT-BIN ; 
  10 OZ0HW-SV-STOR-ID-CHAR OZ0HW-SV-STOR-ID-CHAR ; 
    15 OZ0HW-SV-STOR-ID-NUM OZ0HW-SV-STOR-ID-NUM ; 
  10 OZ0HW-SV-XNX-DEPT-CHAR OZ0HW-SV-XNX-DEPT-CHAR ; 
    15 OZ0HW-SV-XNX-DEPT-NUM OZ0HW-SV-XNX-DEPT-NUM ; 
  10 OZ0HW-SV-STORE-CHAR OZ0HW-SV-STORE-CHAR ; 
    15 OZ0HW-SV-STORE-NUM OZ0HW-SV-STORE-NUM ; 
  10 OZ0HW-SV-DEPT-CHAR OZ0HW-SV-DEPT-CHAR ; 
    15 OZ0HW-SV-DEPT-NUM OZ0HW-SV-DEPT-NUM ; 
  10 OZ0HW-SV-CU-CO-ID OZ0HW-SV-CU-CO-ID ; 
  10 OZ0HW-SV-NEED-DT-FROM OZ0HW-SV-NEED-DT-FROM ; 
  10 OZ0HW-SV-NEED-DT-TO OZ0HW-SV-NEED-DT-TO ; 
  10 OZ0HW-SV-NEED-DT OZ0HW-SV-NEED-DT ; 
  10 OZ0HW-SV-TOT-REQ-QTY OZ0HW-SV-TOT-REQ-QTY ; 
  10 OZ0HW-SV-TOT-ORIG-VAL OZ0HW-SV-TOT-ORIG-VAL ; 
  10 OZ0HW-SV-TOT-CURR-VAL OZ0HW-SV-TOT-CURR-VAL ; 
  10 OZ0HW-SV-TOT-AVAIL-1 OZ0HW-SV-TOT-AVAIL-1 ; 
  10 OZ0HW-SV-TOT-AVAIL-2 OZ0HW-SV-TOT-AVAIL-2 ; 
  10 OZ0HW-SV-TOT-AVAIL-3 OZ0HW-SV-TOT-AVAIL-3 ; 
  10 OZ0HW-SV-TOT-AVAIL-4 OZ0HW-SV-TOT-AVAIL-4 ; 
  10 OZ0HW-HOLD-VALUE OZ0HW-HOLD-VALUE ; 
  10 OZ0HW-SV-NUM OZ0HW-SV-NUM ; 
  10 OZ0HW-SV-DEC OZ0HW-SV-DEC ; 
    15 OZ0HW-SV-DEC-INT OZ0HW-SV-DEC-INT ; 
    15 OZ0HW-SV-DECIMAL OZ0HW-SV-DECIMAL ; 
  10 OZ0HW-VALUE-FIELD OZ0HW-VALUE-FIELD ; 
    15 OZ0HW-VALUE-BRK OZ0HW-VALUE-BRK [10] ; 
  10 OZ0HW-VALUE-BUILD OZ0HW-VALUE-BUILD ; 
    15 OZ0HW-VB-INT OZ0HW-VB-INT ; 
    15 OZ0HW-VB-DOT OZ0HW-VB-DOT ; 
    15 OZ0HW-VB-DEC OZ0HW-VB-DEC ; 
  10 OZ0HW-HDR-STR OZ0HW-HDR-STR ; 
  10 OZ0HW-HDR-DPT OZ0HW-HDR-DPT ; 
  10 OZ0HW-EDIT-FLAG OZ0HW-EDIT-FLAG ; 
  10 OZ0HW-PF14-EDIT-FLAG OZ0HW-PF14-EDIT-FLAG ; 
  10 OZ0HW-CURR-CU-CO-ID OZ0HW-CURR-CU-CO-ID ; 
  10 OZ0HW-CURR-STOR-ID OZ0HW-CURR-STOR-ID ; 
  10 OZ0HW-CURR-XNX-DEPT OZ0HW-CURR-XNX-DEPT ; 
  10 OZ0HW-CU-CO-NM-HDR OZ0HW-CU-CO-NM-HDR ; 
  10 OZ0HW-OVERRIDE-DI OZ0HW-OVERRIDE-DI ; 
  10 OZ0HW-BYPASS-ELIGB OZ0HW-BYPASS-ELIGB ; 
  10 OZ0HW-SOCD-LTR-OVRD-ID OZ0HW-SOCD-LTR-OVRD-ID ; 
  10 OZ0HW-SOCD-LTR-RQT-ID OZ0HW-SOCD-LTR-RQT-ID ; 
  10 OZ0HW-SOCD-CURR-CUST-PO-FROM OZ0HW-SOCD-CURR-CUST-PO-FROM ; 
  10 OZ0HW-SOCD-CURR-CUST-PO-TO OZ0HW-SOCD-CURR-CUST-PO-TO ; 
  10 OZ0HW-OP-CUST-ORD-ID OZ0HW-OP-CUST-ORD-ID ; 
    15 * char(8) ; // Edit Flag
    15 OZ0HW-ORD-PART-CHAR OZ0HW-ORD-PART-CHAR ; 
  10 OZ0HW-SOCD-CURR-NEED-DT-FROM OZ0HW-SOCD-CURR-NEED-DT-FROM ; 
  10 OZ0HW-SOCD-CURR-NEED-DT-TO OZ0HW-SOCD-CURR-NEED-DT-TO ; 
  10 OZ0HW-CURR-GPC-CD OZ0HW-CURR-GPC-CD ; 
  10 OZ0HW-GPC-DESC OZ0HW-GPC-DESC ; 
  10 OZ0HW-XSO-SLS-OFC-ID OZ0HW-XSO-SLS-OFC-ID ; 
  10 OZ0HW-XSO-SLS-OFC-ID-DESC OZ0HW-XSO-SLS-OFC-ID-DESC ; 
  10 OZ0HW-SP-SPGM-ID OZ0HW-SP-SPGM-ID ; 
  10 OZ0HW-SP-SPGM-ID-DESC OZ0HW-SP-SPGM-ID-DESC ; 
  10 OZ0HW-SM-SAGCY-ID OZ0HW-SM-SAGCY-ID ; 
  10 OZ0HW-SM-SAGCY-ID-DESC OZ0HW-SM-SAGCY-ID-DESC ; 
  10 OZ0HW-SM-SREP-ID OZ0HW-SM-SREP-ID ; 
  10 OZ0HW-SM-SREP-ID-DESC OZ0HW-SM-SREP-ID-DESC ; 
  10 OZ0HW-SM-SREP-FIRST-NM OZ0HW-SM-SREP-FIRST-NM ; 
  10 OZ0HW-SM-SREP-LAST-NM OZ0HW-SM-SREP-LAST-NM ; 
  10 * char(1) ; 
  10 OZ0HW-CUST-STR-DPT2 OZ0HW-CUST-STR-DPT2 ; 
    15 OZ0HW-CUSTOMER OZ0HW-CUSTOMER ; 
    15 OZ0HW-DOTA char(1) ; 
    15 OZ0HW-STORE OZ0HW-STORE ; 
    15 OZ0HW-DOTB char(1) ; 
    15 OZ0HW-DEPT OZ0HW-DEPT ; 
  10 * char(1) ; 
  10 OZ0HW-SEL-GROUP OZ0HW-SEL-GROUP ; 
    15 OZ0HW-SEL-CUST-STR-DPT OZ0HW-SEL-CUST-STR-DPT ; 
      20 OZ0HW-SEL-CUST OZ0HW-SEL-CUST ; 
      20 * char(1) ; 
      20 OZ0HW-SEL-STR OZ0HW-SEL-STR ; 
      20 * char(1) ; 
      20 OZ0HW-SEL-DPT OZ0HW-SEL-DPT ; 
    15 OZ0HW-SEL-CUST-NM-HDR OZ0HW-SEL-CUST-NM-HDR ; 
    15 OZ0HW-SEL-OVERRIDE-DI OZ0HW-SEL-OVERRIDE-DI ; 
    15 OZ0HW-SEL-ORD-NBR OZ0HW-SEL-ORD-NBR ; 
    15 OZ0HW-SEL-LTR-TYP-CD OZ0HW-SEL-LTR-TYP-CD ; 
    15 OZ0HW-SEL-GPC OZ0HW-SEL-GPC ; 
    15 OZ0HW-SEL-GPC-DESC OZ0HW-SEL-GPC-DESC ; 
    15 OZ0HW-SEL-CUST-PO OZ0HW-SEL-CUST-PO ; 
    15 OZ0HW-SEL-SALES-OFF OZ0HW-SEL-SALES-OFF ; 
    15 OZ0HW-SEL-SALES-OFF-DESC OZ0HW-SEL-SALES-OFF-DESC ; 
    15 OZ0HW-SEL-SALES-AGENCY OZ0HW-SEL-SALES-AGENCY ; 
    15 OZ0HW-SEL-SALES-AGENCY-DESC OZ0HW-SEL-SALES-AGENCY-DESC ; 
    15 OZ0HW-SEL-SALES-REP OZ0HW-SEL-SALES-REP ; 
    15 OZ0HW-SEL-SREP-FIRST-NM OZ0HW-SEL-SREP-FIRST-NM ; 
    15 OZ0HW-SEL-SREP-LAST-NM OZ0HW-SEL-SREP-LAST-NM ; 
    15 OZ0HW-SEL-TOT-ORD-QTY OZ0HW-SEL-TOT-ORD-QTY ; 
    15 OZ0HW-SEL-TOT-ORD-VAL OZ0HW-SEL-TOT-ORD-VAL ; 
    15 OZ0HW-SEL-1ST-ORD-ID OZ0HW-SEL-1ST-ORD-ID ; 
    15 OZ0HW-SEL-XPTCD OZ0HW-SEL-XPTCD ; 
    15 OZ0HW-SEL-CURR-DSBDT OZ0HW-SEL-CURR-DSBDT ; 
    15 OZ0HW-SEL-CURR-DSADT OZ0HW-SEL-CURR-DSADT ; 
    15 OZ0HW-SEL-ORIG-DSBDT OZ0HW-SEL-ORIG-DSBDT ; 
    15 OZ0HW-SEL-ORIG-DSADT OZ0HW-SEL-ORIG-DSADT ; 
    15 OZ0HW-SEL-PO-MONEY-MTH OZ0HW-SEL-PO-MONEY-MTH ; 
    15 OZ0HW-SEL-OP-CUST-PO OZ0HW-SEL-OP-CUST-PO ; 
    15 OZ0HW-SEL-SP1ID OZ0HW-SEL-SP1ID ; 
    15 OZ0HW-SEL-SP1NM OZ0HW-SEL-SP1NM ; 
  10 * char(1) ; 
  10 OZ0HW-M2-GROUP OZ0HW-M2-GROUP ; 
    15 OZ0HW-M2-CUST-STR-DPT OZ0HW-M2-CUST-STR-DPT ; 
    15 OZ0HW-M2-CU-CO-NM-HDR OZ0HW-M2-CU-CO-NM-HDR ; 
    15 OZ0HW-M2-OVERRIDE-DI OZ0HW-M2-OVERRIDE-DI ; 
    15 OZ0HW-M2-OP-CUST-ORD-ID OZ0HW-M2-OP-CUST-ORD-ID ; 
    15 OZ0HW-M2-CURR-GPC-CD OZ0HW-M2-CURR-GPC-CD ; 
    15 OZ0HW-M2-GPC-DESC OZ0HW-M2-GPC-DESC ; 
    15 OZ0HW-M2-HEADER-CHGS OZ0HW-M2-HEADER-CHGS ; 
    15 OZ0HW-M2-SOCD-CURR-CUST-PO OZ0HW-M2-SOCD-CURR-CUST-PO ; 
    15 OZ0HW-M2-XSO-SLS-OFC-ID OZ0HW-M2-XSO-SLS-OFC-ID ; 
    15 OZ0HW-M2-XSO-SLS-OFC-ID-DESC OZ0HW-M2-XSO-SLS-OFC-ID-DESC ; 
    15 OZ0HW-M2-SM-SAGCY-ID OZ0HW-M2-SM-SAGCY-ID ; 
    15 OZ0HW-M2-SM-SAGCY-ID-DESC OZ0HW-M2-SM-SAGCY-ID-DESC ; 
    15 OZ0HW-M2-SM-SREP-ID OZ0HW-M2-SM-SREP-ID ; 
    15 OZ0HW-M2-SM-SREP-FIRST-NM OZ0HW-M2-SM-SREP-FIRST-NM ; 
    15 OZ0HW-M2-SM-SREP-LAST-NM OZ0HW-M2-SM-SREP-LAST-NM ; 
    15 OZ0HW-M2-TOT-ORD-QTY OZ0HW-M2-TOT-ORD-QTY ; 
    15 OZ0HW-M2-TOT-ORD-VALUE OZ0HW-M2-TOT-ORD-VALUE ; 
  10 OZ0HW-OZ-REPORT-KEY char(17) ; // REPORT FILE KEY
    15 OZ0HW-OZ-JOB-NAME char(6) ; // OZ1031
    15 OZ0HW-OZ-STEP-NAME char(5) ; // S0050
    15 OZ0HW-OZ-USER-ID char(6) ; // FROM COMM AREA
end // end OZ0HW00


//*** RECORD=OZ0HW01 ****
// /*
// /*      application working storage for map1
// /*
// ***********************
Record OZ0HW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(488) ; // Temporary storage page length
    10 OZ0HW-GROUP OZ0HW-GROUP ; 
      15 OZ0HW-CUST OZ0HW-CUST ; 
      15 OZ0HW-STR OZ0HW-STR ; 
      15 OZ0HW-DPT OZ0HW-DPT ; 
      15 OZ0HW-SOCD-CURR-CUST-PO-FROM OZ0HW-SOCD-CURR-CUST-PO-FROM ; 
      15 OZ0HW-SOCD-CURR-CUST-PO-TO OZ0HW-SOCD-CURR-CUST-PO-TO ; 
      15 OZ0HW-OP-CUST-ORD-ID OZ0HW-OP-CUST-ORD-ID ; 
      15 OZ0HW-SOCD-CURR-NEED-DT-FROM OZ0HW-SOCD-CURR-NEED-DT-FROM ; 
      15 OZ0HW-SOCD-CURR-NEED-DT-TO OZ0HW-SOCD-CURR-NEED-DT-TO ; 
      15 OZ0HW-CURR-GPC-CD OZ0HW-CURR-GPC-CD ; 
      15 OZ0HW-XSO-SLS-OFC-ID OZ0HW-XSO-SLS-OFC-ID ; 
      15 OZ0HW-SM-SAGCY-ID OZ0HW-SM-SAGCY-ID ; 
      15 OZ0HW-SM-SREP-ID OZ0HW-SM-SREP-ID ; 
      15 OZ0HW-SOCD-LTR-TYP-CD OZ0HW-SOCD-LTR-TYP-CD ; 
    10 OZ0HW-COMMENT OZ0HW-COMMENT [5] ; 
end // end OZ0HW01


//*** RECORD=OZ0HW02 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record OZ0HW02 type basicRecord
  10 TARJCL TARJCL ; 
    15 OZ0HW-SOCD-LTR-OVRD-ID OZ0HW-SOCD-LTR-OVRD-ID ; 
    15 OZ0HW-SOCD-LTR-RQT-ID OZ0HW-SOCD-LTR-RQT-ID ; 
    15 OZ0HW-OVERRIDE-DI OZ0HW-OVERRIDE-DI ; 
    15 OZ0HW-SALES-AGENCY OZ0HW-SALES-AGENCY ; 
    15 CAUSERID CAUSERID ; 
    15 OZ0HW-RMT-PRT-FLG OZ0HW-RMT-PRT-FLG ; 
    15 * char(48) ; 
end // end OZ0HW02


// Edit Flag
DataItem OZ0HW-BYPASS-ELIGB char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0HW-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0HW-COMMENT char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Pass record control field
DataItem OZ0HW-CTL-FLD char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-CU-CO-NM-HDR char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-CURR-CU-CO-ID char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-CURR-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-CURR-STOR-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-CURR-XNX-DEPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0HW-CUST num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-CUST-BIN int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-CUST-BREAK char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-CUST-BRK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0HW-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-CUST-STR-DPT2 char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-CUSTOMER num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-DATE-BRK num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-DATE-MK char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-DB-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-DB-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-DB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-DB-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-DEPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-DEPT-BIN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-DM-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-DM-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-DM-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-DM-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-DM-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-DOT1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-DOT2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0HW-DPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-EDIT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0HW-ENT-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Map function switch
DataItem OZ0HW-FNC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0HW-FND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0HW-GPC-DESC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0HW-GROUP char(98)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-HDR-DPT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-HDR-STR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-HOLD-VALUE num(13,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Index for map fields
DataItem OZ0HW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0HW-ITEM-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0HW-IX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0HW-IX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0HW-IXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0HW-LOW-VALUES char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-CU-CO-NM-HDR char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-CURR-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-GPC-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-GROUP char(160)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-HEADER-CHGS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-OP-CUST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-M2-OVERRIDE-DI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-SM-SAGCY-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-SM-SAGCY-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-SM-SREP-FIRST-NM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-SM-SREP-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-SM-SREP-LAST-NM char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-SOCD-CURR-CUST-PO char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-TOT-ORD-QTY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-M2-TOT-ORD-VALUE num(13)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-M2-XSO-SLS-OFC-ID char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-M2-XSO-SLS-OFC-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-ND-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-ND-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-ND-SLASH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-NEED-DATE char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Binary work year
DataItem OZ0HW-NUM-DATE int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-OP-CUST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0HW-ORD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0HW-ORD-MATCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-OVERRIDE-DI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-PF14-EDIT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-PO-SO-BLD char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-PO-SO-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-RMT-PRT-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SALES-AGENCY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Save index for WS
DataItem OZ0HW-SAV num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save page for cursor placement
DataItem OZ0HW-SAV-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Page save field
DataItem OZ0HW-SAVE-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Page save field
DataItem OZ0HW-SAVE-STORE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SEL-1ST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SEL-CURR-DSADT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SEL-CURR-DSBDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SEL-CUST num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SEL-CUST-NM-HDR char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-CUST-PO char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-DPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SEL-GPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-GPC-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-GROUP char(251)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-LTR-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SEL-OP-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-ORD-NBR num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SEL-ORIG-DSADT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SEL-ORIG-DSBDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SEL-OVERRIDE-DI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SEL-PO-MONEY-MTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-SALES-AGENCY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-SALES-AGENCY-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-SALES-OFF char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-SALES-OFF-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-SALES-REP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SEL-SP1ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SEL-SP1NM char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-SREP-FIRST-NM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-SREP-LAST-NM char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SEL-STR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SEL-TOT-ORD-QTY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SEL-TOT-ORD-VAL num(13)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SEL-XPTCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0HW-SFN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0HW-SM-SAGCY-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0HW-SM-SAGCY-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0HW-SM-SREP-FIRST-NM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0HW-SM-SREP-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0HW-SM-SREP-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0HW-SM-SREP-LAST-NM char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SOCD-CURR-CUST-PO-FROM char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SOCD-CURR-CUST-PO-TO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SOCD-CURR-NEED-DT-FROM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SOCD-CURR-NEED-DT-TO num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SOCD-LTR-OVRD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SOCD-LTR-RQT-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


//  Group Level
DataItem OZ0HW-SOCD-LTR-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0HW-SP-SPGM-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0HW-SP-SPGM-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-STORE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-STORE-BIN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


//  Group Level
DataItem OZ0HW-STR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-CHG-FLD char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0HW-SV-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SV-COMMENT char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-CUST char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SV-CUST-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-CUST-ORD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-CUSTOMER num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Format Date
DataItem OZ0HW-SV-DATE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-DEC num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-DEC-INT num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-DECIMAL num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-DEPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-DEPT-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-DEPT-NUM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-DPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SV-NEED-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-NEED-DT-FROM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-NEED-DT-TO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-NUM num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-REL-CNT num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-STOR-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-STOR-ID-CHAR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-STOR-ID-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-STORE-CHAR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-STORE-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-STR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-SV-TOT-AVAIL-1 num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-TOT-AVAIL-2 num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-TOT-AVAIL-3 num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-TOT-AVAIL-4 num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-TOT-CURR-VAL num(12,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-TOT-ORIG-VAL num(12,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-TOT-REQ-QTY num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-XNX-DEPT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-XNX-DEPT-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0HW-SV-XNX-DEPT-NUM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-SV-XOMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0HW-SWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Map to be displayed switch
DataItem OZ0HW-SWD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format the map switch
DataItem OZ0HW-SWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Request for data switch
DataItem OZ0HW-SWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Storage page update switch
DataItem OZ0HW-SWU char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-TB-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-TB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-TIME-BRK num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0HW-TIME-MK char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-TM-CL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-TM-HH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-TM-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0HW-UPD-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-VALUE-BRK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-VALUE-BUILD char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-VALUE-FIELD char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-VB-DEC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-VB-DOT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-VB-INT char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0HW-WC-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0HW-WRITE-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-WS-MESSAGE char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format Date
DataItem OZ0HW-WS-MSG char(70)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format Date
DataItem OZ0HW-WS-REL-CNT char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0HW-WS-REL-CNT-BLD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0HW-XSO-SLS-OFC-ID char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0HW-XSO-SLS-OFC-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


