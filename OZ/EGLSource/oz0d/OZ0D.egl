package oz0d;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPOZ-00001;
import corpcom4.XSOZ-S0001;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import ku.common.KUCREC;
import ku.common.KULREC;
import ku.common.KUMREC;
import ku.common.KUNREC;
import oz.common.OZWREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VOCACD01;
import vv.common.VOCBAD01;
import vv.common.VOCBUY01;
import vv.common.VOCLDC01;
import vv.common.VOZCTL01;
import xx.common.*;
import xx05.*;
//*** PROGRAM=OZ0D ****
// this application will display the OC&D Change Reason Text
// and the change reason text eligibility flag.   The user
// may update one line at a time by changing the eligibility
// flag or the reason text and pressing enter.
// The user may page forward (pf8) and page backward (pf7)
// through the selected list.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// nEW      06/12/97  dsmit0  New application.
// *********************
Program OZ0D type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OZ00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  KULREC KULREC; // record
  KUMREC KUMREC; // record
  KUNREC KUNREC; // record
  OZ0DW00 OZ0DW00; // record
  OZ0DW01 OZ0DW01; // record
  OZWREC OZWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VOCACD01 VOCACD01; // record
  VOCBAD01 VOCBAD01; // record
  VOCBUY01 VOCBUY01; // record
  VOCLDC01 VOCLDC01; // record
  VOZCTL01 VOZCTL01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSETBL {deleteAfterUse = yes}; // table
  use OZ0DM.OZ0DM001,  // forms
      OZ0DM.OZ0DM002
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPOZ-00001: XPOZ-00001();
    /* ------------------------------------------------------------*/
    /* Initialize working storage and display storage areas.*/
    /* ------------------------------------------------------------*/
    ;
    set OZ0DM001 initial; /* M001 input/output*/
    set OZ0DW00 empty; /* Working storage*/
    set OZ0DW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    ;
    OZ0DW00.OZ0DW-SWD = "1"; /* Map to be displayed switch*/
    OZ0DW00.OZ0DW-SWF = "Y"; /* Format the map switch*/
    OZ0DW00.OZ0DW-SWR = "Y"; /* Request for data switch*/
    ;
    /* ------------------------------------------------------------*/
    /* If data was passed in the COMMAREA, use as the initial key.*/
    /* ------------------------------------------------------------*/
  
    if (COMMAREA.CAFROMAP != "OZ0E")
      COMMAREA.CAMSGNO = 06;
      COMMAREA.CATOAP = COMMAREA.CAFROMAP;
      OZ0DW00.OZ0DW-BAD-FLG = "Y";
      OZ0DW00.OZ0DW-SWD = " "; /* Map to be displayed switch*/
    end
  
    if (COMMAREA.CAITEM > " ") /* Data was passed*/
      ;
      COMMAREA.CAITEM = " "; /* Clear passed data*/
      ;
    else
      OZ0DW00.OZ0DW-SWR = "Y"; /* Request for data switch*/
      OZ0DW00.OZ0DW-HDR-CUST-STR-DPT = OZWREC.CUST-STR-DPT;
      OZ0DW00.OZ0DW-KUCCOID = OZWREC.KUCCOID;
      OZ0DW00.OZ0DW-HDR-CUST-NAME = OZWREC.KUCCONM;
      OZ0DW00.OZ0DW-XSOCD = OZWREC.XSOCD;
      OZ0DW00.OZ0DW-XSOCD-DESC = OZWREC.XSOSNM;
      OZ0DW00.OZ0DW-XGPCD = OZWREC.XGPCD;
      OZ0DW00.OZ0DW-GPC-DESC = OZWREC.XGPDESC;
      ;
    end
    ;
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/
    ;
    goto OZ0D-00000; /* Converse the main process*/
    ;
    ;
    OZ0D-00000: OZ0D-00000();
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/
    ;
    goto OZ0D-00000; /* Converse the main process*/
    ;
    ;
  end // end main
end // end OZ0D

// Main process to display a map
Function OZ0D-00000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) If specified, display the first map.*/
  /* 2) Otherwise, if specified, display the second map, depending*/
  /* on function = add or change*/
  /* 3) Otherwise, indicate error and exit to Application Menu.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0DW00.OZ0DW-SWD == "1") /* Map 1 was requested*/
    ;
    OZ0D-10000(); /* Display map 1*/
    ;
  else
    ;
    if (OZ0DW00.OZ0DW-BAD-FLG == "Y")
      XSOZ-S0001(); /* Exit to another application*/
    end
      /* ------------------------------------------------------------*/
      /* Write the error to the Error Diagnosis Reporting Facility.*/
      /* ------------------------------------------------------------*/
    ;
    OZWREC.XXXPRCNM = "00000"; /* Module identification*/
    OZWREC.XXXMSGNO = 10; /* Unexpected error occurred*/
    ;
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";
    TA1REC.TA1MAPNO = OZ0DW00.OZ0DW-SWD; /* Map number*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
    ;
      /* ------------------------------------------------------------*/
      /* Exit to display the application system menu.*/
      /* ------------------------------------------------------------*/
    ;
    COMMAREA.CATOAP = "OZ0A"; /* TO application*/
    ;
    XSOZ-S0001(); /* Exit to another application*/
    ;
      /* ------------------------------------------------------------*/
      /* Abnormally terminate the transaction if the exit failed.*/
      /* ------------------------------------------------------------*/
    ;
    TA1REC.TA1FUNC = "ABND"; /* Termination function*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
    ;
  end
  ;
  ;
  ;
end // end OZ0D-00000

// List the rows in the table
Function OZ0D-10000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Obtain the data to display.*/
  /* 2) Format the map output area and display the map.*/
  /* 3) Check the attention identifier used to respond.*/
  /* 4) Reset highlighted fields to normal intensity.*/
  /* 5) Verify the data that was entered.*/
  /* 6) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0D-11000(); /* Obtain the data to display*/
  ;
  OZ0D-12000(); /* Format and display the map*/
  ;
  OZ0D-13000(); /* Check attention identifier*/
  ;
  OZ0D-14000(); /* caitm check*/
  ;
  OZ0D-15000(); /* scroll*/
  ;
end // end OZ0D-10000

// Obtain the data to display
Function OZ0D-11000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0DW00.OZ0DW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0DW00.XXXTSLEN = 1001; /* temp storage page length*/
  ;
  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0DW00.XXXTSPAG == 0) /* no pages established*/
    OZ0DW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0D-11100(); /* Purge any temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* Select and open the cursor for the set to be formatted.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0DM001.OZ0DM-HDR-LAST-NAME > " " || 
  OZ0DM001.OZ0DM-HDR-FIRST-NAME > " ")
    OZ0D-11200(); /* check for wildcards*/
  end

  OZ0D-11300(); /* Select set and open cursor*/
  ;
  /* ------------------------------------------------------------*/
  /* Fetch and format the data into pages until end of cursor.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0DW00.OZ0DW-IXM = 1; /* Display line index*/
  OZ0DW00.OZ0DW-CNT = 1; /* Display line index*/

  OZ0DW00.OZ0DW-SWC = "N"; /* End of cursor switch*/
  ;
  while (OZ0DW00.OZ0DW-SWC == "N") /* Until end of cursor*/
    ;
    OZ0D-11400(); /* Fetch next row in the cursor*/
    ;
    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/
    ;
    if (OZ0DW00.OZ0DW-SWC == "N") /* Not end of cursor*/
      OZ0D-11500(); /* Save data in display storage*/
    end

    if (OZ0DW00.OZ0DW-SWC == "Y")
      if (OZ0DW00.OZ0DW-CNT == 1 /* no rec fnd - go to m002*/
       || OZ0DW00.OZ0DW-CNT == 2)
        if (OZ0DW00.OZ0DW-CNT == 2) /* 1 rec fnd - take it to m002*/
          OZ0DW00.OZ0DW-IXM = 1;
          OZ0DM001.OZ0DMSEL[OZ0DW-IXM] = "C";
        else
          OZ0DM001.OZ0DMSEL[OZ0DW-IXM] = "A";
        end
        set OZ0DM002 empty;
        OZ0DM001.OZ0DM-HDR-CUST-STR-DPT = OZ0DW00.OZ0DW-HDR-CUST-STR-DPT;
        OZ0DM002.OZ0DM-HDR-CUST-STR-DPT = OZ0DW00.OZ0DW-HDR-CUST-STR-DPT;
        OZ0DM001.OZ0DM-HDR-CUST-DESC = OZ0DW00.OZ0DW-HDR-CUST-NAME;
        OZ0DM002.OZ0DM-HDR-CUST-DESC = OZ0DW00.OZ0DW-HDR-CUST-NAME;
        OZ0DM001.OZ0DM-GPC = OZ0DW00.OZ0DW-XGPCD;
        OZ0DM002.OZ0DM-GPC = OZ0DW00.OZ0DW-XGPCD;
        OZ0DM001.OZ0DM-GPC-DESC = OZ0DW00.OZ0DW-GPC-DESC;
        OZ0DM002.OZ0DM-GPC-DESC = OZ0DW00.OZ0DW-GPC-DESC;
        OZ0DM001.OZ0DM-XSOCD = OZ0DW00.OZ0DW-XSOCD;
        OZ0DM002.OZ0DM-XSOCD = OZ0DW00.OZ0DW-XSOCD;
        OZ0DM001.OZ0DM-XSOCD-DESC = OZ0DW00.OZ0DW-XSOCD-DESC;
        OZ0DM002.OZ0DM-XSOCD-DESC = OZ0DW00.OZ0DW-XSOCD-DESC;

        OZ0D-20000();
      end
    end
    ;
    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/
    ;
    if (OZ0DW00.OZ0DW-IXM > 13) /* Page is full*/
      ;
      OZ0D-11600(); /* Add page to temporary storage*/
      ;
      OZ0DW00.OZ0DW-IXM = 1; /* Display line index*/
      ;
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Add any partially formatted last page to the queue.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0DW00.OZ0DW-IXM > 1) /* Page was formatted*/
    OZ0D-11600(); /* Add page to temporary storage*/
  end
  ;
  /* ------------------------------------------------------------*/
  /* Close the cursor for the selected set.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0D-11700(); /* Close the selected set cursor*/
  ;
  /* ------------------------------------------------------------*/
  /* If no pages were formatted, indicate no data to display.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0DW00.TA5TSQIX == 0) /* No pages formatted*/
    ;
    OZWREC.XXXPRCNM = "11000"; /* Module identification*/
    OZWREC.XXXMSGNO = 16; /* No data was found to display*/
    set OZ0DM001.OZ0DMSEL[1] cursor; /* cursor*/
    OZ0DM001.OZ0DMSEL[1] = " "; /* reset select field*/
    set OZ0DM001.OZ0DMSEL[1] skip;
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0DW00.OZ0DW-SWR = "N"; /* Request for data switch*/
  ;
  ;
end // end OZ0D-11000

// Purge any temporary storage
Function OZ0D-11100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/
  ;
  set OZ0DW01 empty; /* M001 display storage*/
  ;
  OZ0DW00.OZ0DW-SWU = "N"; /* Storage update switch*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0DW00.TA5TSQIX = 0; /* Highest page number*/
  ;
  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (OZ0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  OZWREC.XXXPRCNM = "11100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-11100

// Select set and open cursor
Function OZ0D-11200()
  /* build first name wildcard*/

  if (OZ0DM001.OZ0DM-HDR-FIRST-NAME > " ")
    OZ0DW00.OZ0DW-1ST-NAME-BREAK = OZ0DM001.OZ0DM-HDR-FIRST-NAME;
    OZ0DW00.OZ0DW-1ST-NAME-WC-FLG = " ";
    OZ0DW00.OZ0DW-IDX = 1;

    while (OZ0DW00.OZ0DW-IDX < 16)
      if (OZ0DW00.OZ0DW-1ST-NAME-BRK[OZ0DW-IDX] == "*")
        OZ0DW00.OZ0DW-IDX = 15;
        OZ0DW00.OZ0DW-1ST-NAME-WC-FLG = "Y";
      end
      OZ0DW00.OZ0DW-IDX = OZ0DW00.OZ0DW-IDX + 1;
    end

    if (OZ0DW00.OZ0DW-1ST-NAME-WC-FLG == "Y")
      OZ0DW00.OZ0DW-IDX = 1;

      while (OZ0DW00.OZ0DW-IDX < 16)
        if (OZ0DW00.OZ0DW-1ST-NAME-BRK[OZ0DW-IDX] == " ")
          OZ0DW00.OZ0DW-1ST-NAME-BRK[OZ0DW-IDX] = "*";
        end
        OZ0DW00.OZ0DW-IDX = OZ0DW00.OZ0DW-IDX + 1;
      end

    end
  end


  /* build last name wildcard*/

  if (OZ0DM001.OZ0DM-HDR-LAST-NAME > " ")
    OZ0DW00.OZ0DW-LST-NAME-BREAK = OZ0DM001.OZ0DM-HDR-LAST-NAME;
    OZ0DW00.OZ0DW-LST-NAME-WC-FLG = " ";
    OZ0DW00.OZ0DW-IDX = 1;

    while (OZ0DW00.OZ0DW-IDX < 26)
      if (OZ0DW00.OZ0DW-LST-NAME-BRK[OZ0DW-IDX] == "*")
        OZ0DW00.OZ0DW-IDX = 25;
        OZ0DW00.OZ0DW-LST-NAME-WC-FLG = "Y";
      end
      OZ0DW00.OZ0DW-IDX = OZ0DW00.OZ0DW-IDX + 1;
    end

    if (OZ0DW00.OZ0DW-LST-NAME-WC-FLG == "Y")
      OZ0DW00.OZ0DW-IDX = 1;

      while (OZ0DW00.OZ0DW-IDX < 26)
        if (OZ0DW00.OZ0DW-LST-NAME-BRK[OZ0DW-IDX] == " ")
          OZ0DW00.OZ0DW-LST-NAME-BRK[OZ0DW-IDX] = "*";
        end
        OZ0DW00.OZ0DW-IDX = OZ0DW00.OZ0DW-IDX + 1;
      end

    end
  end
end // end OZ0D-11200

// Select set and open cursor
Function OZ0D-11300()
  set VOCLDC01 empty;
  set VOCBUY01 empty;
  set SQLCA empty;

  VOCLDC01.XGPCD = OZWREC.XGPCD;
  VOCLDC01.XSOCD = OZWREC.XSOCD;
  VOCLDC01.KUCCOID = OZWREC.KUCCOID;
  VOCLDC01.KUMSTRID = -1;
  VOCLDC01.XNXCD = -1;

  if (OZ0DW00.OZ0DW-1ST-NAME-WC-FLG == "Y")
    VOCBUY01.XXXFSTNM = OZ0DW00.OZ0DW-1ST-NAME-BREAK;
  else
    VOCBUY01.XXXFSTNM = OZ0DM001.OZ0DM-HDR-FIRST-NAME;
  end

  if (OZ0DW00.OZ0DW-LST-NAME-WC-FLG == "Y")
    VOCBUY01.XXXLSTNM = OZ0DW00.OZ0DW-LST-NAME-BREAK;
  else
    VOCBUY01.XXXLSTNM = OZ0DM001.OZ0DM-HDR-LAST-NAME;
  end

  if (OZ0DW00.OZ0DW-1ST-NAME-WC-FLG == "Y" && 
  OZ0DW00.OZ0DW-LST-NAME-WC-FLG == "Y")
    try
      call "OZ2160" ("S2", SQLCA, VOCLDC01, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
    end
  else
    if (OZ0DW00.OZ0DW-1ST-NAME-WC-FLG == "Y" && 
    OZ0DW00.OZ0DW-LST-NAME-WC-FLG == " ")
      try
        call "OZ2160" ("S3", SQLCA, VOCLDC01, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
      end
    else
      if (OZ0DW00.OZ0DW-1ST-NAME-WC-FLG == " " && 
      OZ0DW00.OZ0DW-LST-NAME-WC-FLG == "Y")
        try
          call "OZ2160" ("S4", SQLCA, VOCLDC01, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
        end
      else
        try
          call "OZ2160" ("S1", SQLCA, VOCLDC01, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
        end
      end
    end
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "11300"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01.VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-11300

// Fetch next row in the cursor
Function OZ0D-11400()
                                   /* Fetch next row*/
  if (OZ0DW00.OZ0DW-1ST-NAME-WC-FLG == "Y" && 
  OZ0DW00.OZ0DW-LST-NAME-WC-FLG == "Y")
    try
      call "OZ2160" ("N2", SQLCA, VOCLDC01, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
    end
  else
    if (OZ0DW00.OZ0DW-1ST-NAME-WC-FLG == "Y" && 
    OZ0DW00.OZ0DW-LST-NAME-WC-FLG == " ")
      try
        call "OZ2160" ("N3", SQLCA, VOCLDC01, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
      end
    else
      if (OZ0DW00.OZ0DW-1ST-NAME-WC-FLG == " " && 
      OZ0DW00.OZ0DW-LST-NAME-WC-FLG == "Y")
        try
          call "OZ2160" ("N4", SQLCA, VOCLDC01, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
        end
      else
        try
          call "OZ2160" ("N1", SQLCA, VOCLDC01, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
        end
      end
    end
  end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      ;
      OZ0DW00.OZ0DW-SWC = "Y"; /* Indicate end of cursor*/
      ;
      return; /* Return to previous process*/
      ;
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "11400"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01.VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-11400

// Save data in display storage
Function OZ0D-11500()
  /* ------------------------------------------------------------*/
  /* Save the data from the table row in display storage.*/
  /* ------------------------------------------------------------*/

  OZ0DW01.OZ0DW-CUST[OZ0DW-IXM] = VOCLDC01.KUCCOID;
  OZ0DW01.OZ0DW-STR[OZ0DW-IXM] = VOCLDC01.KUMSTRID;
  OZ0DW01.OZ0DW-DPT[OZ0DW-IXM] = VOCLDC01.XNXCD;
  OZ0DW01.OZ0DW-BUYER-ID[OZ0DW-IXM] = VOCBUY01.SOCD-CUST-BUYER-ID;
  OZ0DW01.OZ0DW-FIRST-NAME[OZ0DW-IXM] = VOCBUY01.XXXFSTNM;
  OZ0DW01.OZ0DW-LAST-NAME[OZ0DW-IXM] = VOCBUY01.XXXLSTNM;
  OZ0DW01.OZ0DW-ADDR-TYP-CD[OZ0DW-IXM] = VOCBUY01.SOCD-ADDR-TYP-CD;
  OZ0DW01.OZ0DW-BUYER-STR[OZ0DW-IXM] = VOCBUY01.KUMSTRID;

  set VOCACD01 empty;
  VOCACD01.SOCD-ADDR-TYP-CD = VOCBUY01.SOCD-ADDR-TYP-CD;
  OZ0D-11510();
  if (SQLCA.VAGen_SQLCODE == 0)
    OZ0DW01.OZ0DW-ADDR-TYP[OZ0DW-IXM] = VOCACD01.SOCD-ADDR-TYP-DESC;
  else
    OZ0DW01.OZ0DW-ADDR-TYP[OZ0DW-IXM] = "NO DESC FND";
  end

  OZ0DW00.OZ0DW-IXM = OZ0DW00.OZ0DW-IXM + 1; /* Increment index*/
  OZ0DW00.OZ0DW-CNT = OZ0DW00.OZ0DW-CNT + 1; /* Increment index*/
end // end OZ0D-11500

// Select vocacd01 record
Function OZ0D-11510()

  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VOCACD01" ("S ", SQLCA, VOCACD01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 ||  /* Normal return code*/
    SQLCA.VAGen_SQLCODE == +100)    
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "16100"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCACD01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCACD01.VOCACD01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-11510

// Add page to temporary storage
Function OZ0D-11600()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0DW01.XXXTSLEN = OZ0DW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (OZ0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set OZ0DW01 empty; /* M001 display storage*/
    ;
    OZ0DW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  OZWREC.XXXPRCNM = "11600"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-11600

// Close selected set cursor
Function OZ0D-11700()

  if (OZ0DW00.OZ0DW-1ST-NAME-WC-FLG == "Y" && 
  OZ0DW00.OZ0DW-LST-NAME-WC-FLG == "Y")
    try
      call "OZ2160" ("C2", SQLCA, VOCLDC01, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
    end
  else
    if (OZ0DW00.OZ0DW-1ST-NAME-WC-FLG == "Y" && 
    OZ0DW00.OZ0DW-LST-NAME-WC-FLG == " ")
      try
        call "OZ2160" ("C3", SQLCA, VOCLDC01, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
      end
    else
      if (OZ0DW00.OZ0DW-1ST-NAME-WC-FLG == " " && 
      OZ0DW00.OZ0DW-LST-NAME-WC-FLG == "Y")
        try
          call "OZ2160" ("C4", SQLCA, VOCLDC01, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
        end
      else
        try
          call "OZ2160" ("C1", SQLCA, VOCLDC01, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
        end
      end
    end
  end


  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "11700"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-11700

// Format and converse the map
Function OZ0D-12000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0DW00.OZ0DW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/
    ;
    if (OZ0DW00.OZ0DW-SWF == "Y") /* Map must be formatted*/
      OZ0DW00.OZ0DW-HDR-FIRST-NAME = OZ0DM001.OZ0DM-HDR-FIRST-NAME;
      OZ0DW00.OZ0DW-HDR-LAST-NAME = OZ0DM001.OZ0DM-HDR-LAST-NAME;
      OZ0D-12100(); /* Format the data on the map*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0DM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  OZ0DM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0DM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (OZWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0DM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    OZ0DM001.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/
    ;
    set OZ0DM001 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse OZ0DM001 ;
  ;
  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/
  ;
  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  OZ0DW00.OZ0DW-SFN = " "; /* reset function switch*/
   /* reset saved page*/
  OZ0DW00.OZ0DW-SAVE-PAGE = 0;
  COMMAREA.CATOAP = OZ0DM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0DM001.CAITEM; /* Application data*/
end // end OZ0D-12000

// Format the display data
Function OZ0D-12100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/
  ;
  set OZ0DM001 initial; /* M001 input/output area*/
  ;
  OZ0DW00.OZ0DW-SWF = "N"; /* Format the map switch*/
  ;
  XX0XS01(); /* get system date and time*/
  ;
  /* ------------------------------------------------------------*/
  ;
  if (OZ0DW00.OZ0DW-SAVE-PAGE != 0) /* if page saved off*/
    ;
    OZ0DW00.XXXTSPAG = OZ0DW-SAVE-PAGE; /* use saved page*/
    ;
    OZ0D-12110(); /* Obtain temporary storage page*/
    ;
    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/
    ;
    set OZ0DM001.XXXLITPG skip; /* "PAGE" literal*/
    OZ0DM001.XXXTSPAG = OZ0DW00.XXXTSPAG; /* Current page*/
    set OZ0DM001.XXXLITOF skip; /* "OF" literal*/
    OZ0DM001.TA5TSQIX = OZ0DW00.TA5TSQIX; /* Highest page*/
    ;
  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/
    ;
  else
    if (OZ0DW00.TA5TSQIX > 0) /* Pages were formatted*/
      ;
      if (OZ0DW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
        ;
        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/
        ;
        if (OZ0DW00.OZ0DW-SWU == "Y") /* Current page was changed*/
          ;
          OZ0D-12120(); /* Update temporary storage page*/
          ;
          OZ0DW00.OZ0DW-SWU = "N"; /* Storage update switch*/
          ;
        end
        ;
        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/
        ;
        if (OZ0DW00.XXXTSPAG > OZ0DW00.TA5TSQIX) /* Desired greater highest*/
          OZ0DW00.XXXTSPAG = OZ0DW00.TA5TSQIX; /* Default to highest*/
        end
        ;
        OZ0D-12110(); /* Obtain temporary storage page*/
        ;
      end
      ;
      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/
      ;
      set OZ0DM001.XXXLITPG skip; /* "PAGE" literal*/
      OZ0DM001.XXXTSPAG = OZ0DW00.XXXTSPAG; /* Current page*/
      set OZ0DM001.XXXLITOF skip; /* "OF" literal*/
      OZ0DM001.TA5TSQIX = OZ0DW00.TA5TSQIX; /* Highest page*/
      ;
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Format the data in the map from the display storage.*/
  /* ------------------------------------------------------------*/
  OZ0DW00.OZ0DW-HDR-CUST-STR-DPT = OZWREC.CUST-STR-DPT;

  if (OZ0DW00.OZ0DW-HDR-STR == "0000")
    OZ0DW00.OZ0DW-HDR-STR = "****";
  end
  if (OZ0DW00.OZ0DW-HDR-DPT == "00")
    OZ0DW00.OZ0DW-HDR-DPT = "****";
  end


  OZ0DM001.OZ0DM-HDR-CUST-STR-DPT = OZ0DW00.OZ0DW-HDR-CUST-STR-DPT;

  OZ0DW00.OZ0DW-IXM = 1; /* Initialize map index*/
  while (OZ0DW00.OZ0DW-IXM <= 13 && 
  OZ0DW01.OZ0DW-CUST[OZ0DW-IXM] > 0)

    OZ0DM001.OZ0DMSEL[OZ0DW-IXM] = OZ0DW01.OZ0DW-SEL[OZ0DW-IXM];
    OZ0DM001.OZ0DM-FIRST-NAME[OZ0DW-IXM] = OZ0DW01.OZ0DW-FIRST-NAME[OZ0DW-IXM];
    OZ0DM001.OZ0DM-LAST-NAME[OZ0DW-IXM] = OZ0DW01.OZ0DW-LAST-NAME[OZ0DW-IXM];

    OZ0DW00.OZ0DW-SV-CUST = OZ0DW01.OZ0DW-CUST[OZ0DW-IXM];
    OZ0DW00.OZ0DW-CUST-BLD = OZ0DW00.OZ0DW-SV-CUST;

    OZ0DW00.OZ0DW-IX1 = 1;
    while (OZ0DW00.OZ0DW-IX1 < 8 && 
    OZ0DW00.OZ0DW-CUST-BLD-1[OZ0DW-IX1] == "0")
      OZ0DW00.OZ0DW-CUST-BLD-1[OZ0DW-IX1] = " ";
      OZ0DW00.OZ0DW-IX1 = OZ0DW00.OZ0DW-IX1 + 1;
    end

    OZ0DW00.OZ0DW-DTL-CUST = OZ0DW00.OZ0DW-CUST-BLD;

    if (OZ0DW01.OZ0DW-STR[OZ0DW-IXM] == 0)
      OZ0DW00.OZ0DW-DTL-STR = "****";
    else
      OZ0DW00.OZ0DW-DTL-STR = OZ0DW01.OZ0DW-STR[OZ0DW-IXM];
    end

    if (OZ0DW01.OZ0DW-DPT[OZ0DW-IXM] == 0)
      OZ0DW00.OZ0DW-DTL-DPT = "**";
    else
      OZ0DW00.OZ0DW-DTL-DPT = OZ0DW01.OZ0DW-DPT[OZ0DW-IXM];
    end

    OZ0DW00.OZ0DW-DOT1 = ".";
    OZ0DW00.OZ0DW-DOT2 = ".";

    OZ0DM001.OZ0DM-CUST-STR-DPT[OZ0DW-IXM] = OZ0DW00.OZ0DW-DTL-CUST-STR-DPT;

    if (OZ0DM001.OZ0DM-CUST-STR-DPT[OZ0DW-IXM] == 
    OZ0DM001.OZ0DM-HDR-CUST-STR-DPT)
      OZ0DM001.OZ0DMSEL[OZ0DW-IXM] = "*";
    end

    OZ0DM001.OZ0DM-ADDR-TYP[OZ0DW-IXM] = OZ0DW01.OZ0DW-ADDR-TYP[OZ0DW-IXM];

    OZ0DW00.OZ0DW-IXM = OZ0DW00.OZ0DW-IXM + 1;
                                   /* Increment map index*/
  end

  OZ0DM001.OZ0DM-GPC = OZ0DW00.OZ0DW-XGPCD;
  OZ0DM001.OZ0DM-GPC-DESC = OZ0DW00.OZ0DW-GPC-DESC;
  OZ0DM001.OZ0DM-XSOCD = OZ0DW00.OZ0DW-XSOCD;
  OZ0DM001.OZ0DM-XSOCD-DESC = OZ0DW00.OZ0DW-XSOCD-DESC;

  OZ0DW00.OZ0DW-IXM = 1;
  while (OZ0DW00.OZ0DW-IXM < 14)
    if (OZ0DM001.OZ0DM-CUST-STR-DPT[OZ0DW-IXM] == "  ")
      set OZ0DM001.OZ0DMSEL[OZ0DW-IXM] noHighLight, skip;
    end
    OZ0DW00.OZ0DW-IXM = OZ0DW00.OZ0DW-IXM + 1;
  end

  OZ0DM001.OZ0DM-HDR-FIRST-NAME = OZ0DW00.OZ0DW-HDR-FIRST-NAME;
  OZ0DM001.OZ0DM-HDR-LAST-NAME = OZ0DW00.OZ0DW-HDR-LAST-NAME;
  ;
end // end OZ0D-12100

// Read temporary storage page
Function OZ0D-12110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0DW01.XXXTSLEN = OZ0DW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = OZ0DW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (OZ0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  OZWREC.XXXPRCNM = "12110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-12110

// Update temporary storage page
Function OZ0D-12120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5FNCCD = "U"; /* Function code*/
  ;
  try
    call "TA0050" (OZ0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  OZWREC.XXXPRCNM = "12120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-12120

// Check attention identifier
Function OZ0D-13000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    if (OZ0DW00.OZ0DW-SWR == "Y") /* Request for data*/
      set OZ0DW01 empty; /* M001 display storage*/
    end
    ;
    OZ0DW00.OZ0DW-SWF = "Y"; /* Format the map switch*/
    OZ0DW00.OZ0DW-SWR = "N"; /* Request for data switch*/
    ;
    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0DM001.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      OZ0D-11100(); /* Purge temporary storage*/
      ;
      XSOZ-S0001(); /* Exit to another application*/
      ;
      set OZ0DM001.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3) /* or PF3 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      if ("*" in OZ0DM001.OZ0DMSEL)
        OZ0DW00.OZ0DW-IXM = sysVar.arrayIndex;
        OZWREC.SOCD-CUST-BUYER-ID = OZ0DW01.OZ0DW-BUYER-ID[OZ0DW-IXM];
      else
        if ("S" in OZ0DM001.OZ0DMSEL)
          OZ0DW00.OZ0DW-IXM = sysVar.arrayIndex;
          OZWREC.XXXPRCNM = "13000"; /* Module identification*/
          converseLib.validationFailed(70);
          set OZ0DM001.OZ0DMSEL[OZ0DW-IXM] cursor;
          exit stack;
        end
      end
      COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    end

    OZ0D-11100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

  if (converseVar.eventKey is pf13) /* PF13 was pressed*/
    set OZ0DM002 empty;
    OZ0DM002.OZ0DM-HDR-CUST-STR-DPT = OZ0DM001.OZ0DM-HDR-CUST-STR-DPT;
    OZ0DM002.OZ0DM-HDR-CUST-DESC = OZ0DM001.OZ0DM-HDR-CUST-DESC;
    OZ0DM002.OZ0DM-GPC = OZ0DM001.OZ0DM-GPC;
    OZ0DM002.OZ0DM-GPC-DESC = OZ0DM001.OZ0DM-GPC-DESC;
    OZ0DM002.OZ0DM-XSOCD = OZ0DM001.OZ0DM-XSOCD;
    OZ0DM002.OZ0DM-XSOCD-DESC = OZ0DM001.OZ0DM-XSOCD-DESC;
    OZ0DW00.OZ0DW-SWR = "Y"; /* Request for data*/
    if ("A" in OZ0DM001.OZ0DMSEL || 
    "C" in OZ0DM001.OZ0DMSEL)
      OZ0DW00.OZ0DW-IXM = sysVar.arrayIndex;
    else
      OZ0DW00.OZ0DW-IXM = 1;
    end
    OZ0D-20000();
  end

  if (converseVar.eventKey is pf20) /* PF20 was pressed*/
    if ("S" in OZ0DM001.OZ0DMSEL)
      OZ0DW00.OZ0DW-IXM = sysVar.arrayIndex;
      OZWREC.SOCD-CUST-BUYER-ID = OZ0DW01.OZ0DW-BUYER-ID[OZ0DW-IXM];
      OZ0D-11100(); /* Purge temporary storage*/
      COMMAREA.CATOAP = COMMAREA.CAFROMAP;
      XSOZ-S0001(); /* Exit to another application*/
      exit stack; /* Exit to display map*/
    else
      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(44);
      exit stack;
    end
  end
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf3   
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf13  /* and PF13 was not pressed*/
  )                                 
    OZWREC.XXXPRCNM = "13000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
  if (converseVar.eventKey is enter)

    OZ0DW00.OZ0DW-SWR = "Y"; /* Request for data switch*/
    OZ0DW00.OZ0DW-SWF = "Y";

    if (OZ0DM001 not modified)
      OZ0DW00.XXXTSPAG = 1;
      exit stack;
    end

    if (OZ0DM001.OZ0DM-HDR-FIRST-NAME == OZ0DW00.OZ0DW-HDR-FIRST-NAME && 
    OZ0DM001.OZ0DM-HDR-LAST-NAME == OZ0DW00.OZ0DW-HDR-LAST-NAME)
     /* continue*/
    else
      exit stack;
    end

    if ("A" in OZ0DM001.OZ0DMSEL || 
    "C" in OZ0DM001.OZ0DMSEL)
      OZ0DW00.OZ0DW-IXM = sysVar.arrayIndex;
      OZ0D-20000();
    else

      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(70);
      OZ0DW00.OZ0DW-SWR = "N"; /* Request for data switch*/
      OZ0DW00.OZ0DW-SWF = "N";
      exit stack;
    end

  end
  ;
end // end OZ0D-13000

// Reset highlighted fields
Function OZ0D-14000()
  ;
  set OZ0DM001.CATOAP initialAttributes; /* TO application*/
  set OZ0DM001.CAITEM initialAttributes; /* Application data*/
  ;
end // end OZ0D-14000

// Verify data that was entered
Function OZ0D-15000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0DM001.CAITEM > " ") /* Application data was entered*/
    ;
    OZWREC.XXXPRCNM = "15000"; /* Module identification*/
    set OZ0DM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    ;
  end
  ;
  ;
  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/
    ;
    OZ0D-15100(); /* Verify scroll request*/
    ;
  end


  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end

  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    OZ0DW00.XXXTSPAG = OZ0DW00.XXXTSPAG - 1; /* Decrement page number*/
    OZ0DW00.OZ0DW-SWF = "Y";

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    OZ0DW00.XXXTSPAG = OZ0DW00.XXXTSPAG + 1; /* Increment page number*/
    OZ0DW00.OZ0DW-SWF = "Y";

    return; /* Return to previous process*/

  end


  ;
end // end OZ0D-15000

// Verify scroll request
Function OZ0D-15100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OZ0DW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OZ0DW00.XXXTSPAG >= OZ0DW00.TA5TSQIX) /* and no more pages*/
    ;
    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Indicate an error for any data that was modified.*/
  /* ------------------------------------------------------------*/
  ;
end // end OZ0D-15100

// List the rows in the table
Function OZ0D-20000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Obtain the data to display.*/
  /* 2) Format the map output area and display the map.*/
  /* 3) Check the attention identifier used to respond.*/
  /* 4) Reset highlighted fields to normal intensity.*/
  /* 5) Verify the data that was entered.*/
  /* 6) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0D-21000(); /* Obtain the data to display*/
  ;
  OZ0D-22000(); /* Format and display the map*/
  ;
  OZ0D-23000(); /* Check attention identifier*/
  ;
  OZ0D-24000(); /* edits*/
  ;
  OZ0D-25000(); /* updates*/
  ;
end // end OZ0D-20000

// Obtain the data to display
Function OZ0D-21000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/

  if (OZ0DW00.OZ0DW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/
   /* OR EZEAID IS PF13;             /* need a blank screen*/

    return; /* Return to previous process*/

  end


  OZ0D-21100(); /* Select set and open cursor*/


  OZ0DW00.OZ0DW-SWR = "N"; /* Request for data switch*/
end // end OZ0D-21000

// Select set and open cursor
Function OZ0D-21100()
  /* oz0dw-ixm is m001 index*/

  if (OZ0DM001.OZ0DM-CUST-STR-DPT[OZ0DW-IXM] == " "
   || converseVar.eventKey is pf13)
    OZ0DM002.OZ0DM-HDR-CUST-STR-DPT = OZWREC.CUST-STR-DPT;
    OZ0DW00.OZ0DW-HDR-CUST-STR-DPT = OZWREC.CUST-STR-DPT;
    set KUMREC empty;

  /* MOVE OZWREC.OZW-STOR TO OZ0DW00.OZ0DW-SAVE-STORE;*/
  /* IF OZ0DW00.OZ0DW-SAVE-STORE IS NUMERIC AND*/
  /* OZ0DW00.OZ0DW-SAVE-STORE > 0;*/
  /* MOVE OZWREC.OZW-STOR TO KUMREC.KUMSTRID;*/
  /* ELSE;*/
  /* MOVE 0000 TO KUMREC.KUMSTRID;*/
  /* END;*/

  else
    OZ0DM002.OZ0DM-HDR-CUST-STR-DPT = OZ0DM001.OZ0DM-CUST-STR-DPT[OZ0DW-IXM];
    OZ0DW00.OZ0DW-HDR-CUST-STR-DPT = OZ0DM001.OZ0DM-CUST-STR-DPT[OZ0DW-IXM];
  end

  OZ0DM002.OZ0DM-GPC = OZ0DM001.OZ0DM-GPC;
  OZ0DM002.OZ0DM-GPC-DESC = OZ0DM001.OZ0DM-GPC-DESC;
  OZ0DM002.OZ0DM-XSOCD = OZ0DM001.OZ0DM-XSOCD;
  OZ0DM002.OZ0DM-XSOCD-DESC = OZ0DM001.OZ0DM-XSOCD-DESC;

  if (converseVar.eventKey not pf13)
    OZ0DW00.OZ0DW-PREV-EZEAID = "    ";
    OZ0DM002.OZ0DM-HDR-FIRST-NAME = OZ0DW01.OZ0DW-FIRST-NAME[OZ0DW-IXM];
    OZ0DM002.OZ0DM-HDR-LAST-NAME = OZ0DW01.OZ0DW-LAST-NAME[OZ0DW-IXM];

  /* IF OZ0DM001.OZ0DM-CUST-STR-DPT(OZ0DW-IXM) ^= ' ';*/
    set KUMREC empty;
    KUMREC.KUMSTRID = OZ0DW01.OZ0DW-BUYER-STR[OZ0DW-IXM];
  /* END;*/

  else

    OZ0DW00.OZ0DW-PREV-EZEAID = "PF13";
    OZ0DM002.OZ0DM-HDR-FIRST-NAME = " ";
    OZ0DM002.OZ0DM-HDR-LAST-NAME = " ";

    set KUMREC empty;
    OZ0DW00.OZ0DW-SAVE-STORE = OZ0DW00.OZ0DW-HDR-STR;
    if (OZ0DW00.OZ0DW-SAVE-STORE is numeric && 
    OZ0DW00.OZ0DW-SAVE-STORE > 0)
      OZ0DW00.OZ0DW-NUM-STORE = OZ0DW00.OZ0DW-SAVE-STORE-NUM;
      KUMREC.KUMSTRID = OZ0DW00.OZ0DW-NUM-STORE;
    else
      KUMREC.KUMSTRID = 0000;
    end
  end

  OZ0D-21110(); /* read vstore01 table*/

  OZ0D-21120(); /* read vcmpny01 table*/

  OZ0DW00.OZ0DW-HDR-CUST-NAME = KUCREC.KUCCONM;

  OZ0DW00.OZ0DW-IX2 = 1; /* m002 index*/
  while (OZ0DW00.OZ0DW-IX2 < 6)

    set KULREC empty;

    if (OZ0DW00.OZ0DW-IX2 == 1)
      KULREC.KULAAID = KUCREC.KUCCOAID;
      set VOCACD01 empty;
      VOCACD01.SOCD-ADDR-TYP-CD = "CO";
    else
      if (OZ0DW00.OZ0DW-IX2 == 2)
        KULREC.KULAAID = KUCREC.KUCCCAID;
        set VOCACD01 empty;
        VOCACD01.SOCD-ADDR-TYP-CD = "CR";
      else
        if (OZ0DW00.OZ0DW-IX2 == 3)
          KULREC.KULAAID = KUCREC.KUCBLAID;
          set VOCACD01 empty;
          VOCACD01.SOCD-ADDR-TYP-CD = "BG";
        else
          if (OZ0DW00.OZ0DW-IX2 == 4)
            set VOCACD01 empty;
            KULREC.KULAAID = KUMREC.KUMSTAID;
            VOCACD01.SOCD-ADDR-TYP-CD = "ST";
          else
            if (OZ0DW00.OZ0DW-IX2 == 5)
              set VOCACD01 empty;
              KULREC.KULAAID = KUMREC.KUMSHAID;
              VOCACD01.SOCD-ADDR-TYP-CD = "SG";
            end
          end
        end
      end
    end

    KULREC.KUCCOID = KUCREC.KUCCOID;

    OZ0D-21130(); /* read vaddr001 table*/

    OZ0DM002.OZ0DM-ST-ADDR[OZ0DW-IX2] = KULREC.XXX-ADDR3;
    OZ0DM002.OZ0DM-CITY[OZ0DW-IX2] = KULREC.XXXCITY;

    OZ0D-11510(); /* get addr type desc*/
    OZ0DM002.OZ0DM-ADDR-TYP[OZ0DW-IX2] = VOCACD01.SOCD-ADDR-TYP-DESC;

    if (converseVar.eventKey not pf13)
      if (OZ0DW01.OZ0DW-ADDR-TYP-CD[OZ0DW-IXM] == VOCACD01.SOCD-ADDR-TYP-CD
       && OZ0DW01.OZ0DW-ADDR-TYP-CD[OZ0DW-IXM] > " ")
        OZ0DM002.OZ0DMSEL[OZ0DW-IX2] = "*";
      end
    end

    OZ0DW00.OZ0DW-IX2 = OZ0DW00.OZ0DW-IX2 + 1;

  end

   /* IF OZ0DW01.OZ0DW-ADDR-TYP-CD(OZ0DW-IXM) = 'BA';*/

  if (converseVar.eventKey not pf13)
    set VOCBAD01 empty;

    VOCBAD01.SOCD-CUST-BUYER-ID = OZ0DW01.OZ0DW-BUYER-ID[OZ0DW-IXM];

    OZ0D-21140(); /* read vocbad01 table*/

    if (SQLCA.VAGen_SQLCODE == 0)
      OZ0DW00.OZ0DW-FAX-NBR = VOCBAD01.XXX-FAX-NBR;
      OZ0DM002.OZ0DM-AREA-CODE = OZ0DW00.OZ0DW-AREA-CODE;
      OZ0DM002.OZ0DM-PHONE-PREFIX = OZ0DW00.OZ0DW-PHONE-PREFIX;
      OZ0DM002.OZ0DM-PHONE = OZ0DW00.OZ0DW-PHONE;
      OZ0DM002.OZ0DM-EMAIL-ADDR = VOCBAD01.XXX-EMAIL-ADDR;
      OZ0DW00.OZ0DW-OCBAD-CHGCT = VOCBAD01.ZZZCHGCT;
      if (OZ0DW01.OZ0DW-ADDR-TYP-CD[OZ0DW-IXM] == "BA")
        OZ0DM002.OZ0DM-BUYER-ADDR1 = VOCBAD01.XXX-ADDR1;
        OZ0DM002.OZ0DM-BUYER-ADDR2 = VOCBAD01.XXX-ADDR2;
        OZ0DM002.OZ0DM-BUYER-CITY = VOCBAD01.XXX-CITY;
        OZ0DM002.OZ0DM-STATE = VOCBAD01.XST-ST-CD;
        OZ0DM002.OZ0DM-ZIP = VOCBAD01.XXX-ZIP;
      end
    end
  end
  ;
end // end OZ0D-21100

// Select vstore01 record
Function OZ0D-21110()

  KUMREC.KUCCOID = OZWREC.KUCCOID;
  /* VE OZ0DW01.OZ0DW-BUYER-STR TO KUMREC.KUMSTRID;*/

  try
    call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
        return; /* Return to previous process*/
      end
    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "21110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUMREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUMREC.KUMGRP; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-21110

// Select vcmpny01 record
Function OZ0D-21120()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  ;
  set KUCREC empty; /* Clear row storage area*/
  ;
  /* VE OZ0DW01.OZ0DW-CUST(OZ0DW-IXM) TO KUCREC.KUCCOID;*/
  KUCREC.KUCCOID = OZWREC.KUCCOID;
  ;
  ;
  try
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "21120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUCREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-21120

// Select vaddr001 record
Function OZ0D-21130()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO0170" ("S ", SQLCA, KULREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0 ||   
  SQLCA.VAGen_SQLCODE == +100))     
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "21130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KULREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KULREC.KULGRP; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-21130

// Select vocbad01 record
Function OZ0D-21140()

  try
    call "VOCBAD01" ("S ", SQLCA, VOCBAD01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0      
   || SQLCA.VAGen_SQLCODE == +100)) 
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "21140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCBAD01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCBAD01.VOCBAD01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-21140

// Format and converse the map
Function OZ0D-22000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0DW00.OZ0DW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/
    ;
    if (OZ0DW00.OZ0DW-SWF == "Y") /* Map must be formatted*/
      OZ0DW00.OZ0DW-M2-FIRST-NAME = OZ0DM002.OZ0DM-HDR-FIRST-NAME;
      OZ0DW00.OZ0DW-M2-LAST-NAME = OZ0DM002.OZ0DM-HDR-LAST-NAME;
  /* PERFORM OZ0D-22100;          /* Format the data on the map*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0DM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  OZ0DM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0DM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (OZWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0DM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    OZ0DM002.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/
    ;
    set OZ0DM002 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse OZ0DM002 ;
  ;
  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/
  ;
  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  OZ0DW00.OZ0DW-SFN = " "; /* reset function switch*/
   /* reset saved page*/
  OZ0DW00.OZ0DW-SAVE-PAGE = 0;
  COMMAREA.CATOAP = OZ0DM002.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0DM002.CAITEM; /* Application data*/
end // end OZ0D-22000

// Check attention identifier
Function OZ0D-23000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    if (OZ0DW00.OZ0DW-SWR == "Y") /* Request for data*/
      set OZ0DW01 empty; /* M001 display storage*/
    end
    ;
    OZ0DW00.OZ0DW-SWF = "Y"; /* Format the map switch*/
    OZ0DW00.OZ0DW-SWR = "N"; /* Request for data switch*/
    ;
    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0DM002.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      OZ0D-11100(); /* Purge temporary storage*/
      ;
      XSOZ-S0001(); /* Exit to another application*/
      ;
      set OZ0DM002.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end

   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3) /* or PF3 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      set OZ0DM002 empty;
      OZ0DW00.OZ0DW-SWF = "Y";
      exit stack;
    end

    OZ0D-11100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

  if (converseVar.eventKey is pf13) /* PF13 was pressed*/

    OZ0DM002.OZ0DM-HDR-FIRST-NAME = " ";
    OZ0DM002.OZ0DM-HDR-LAST-NAME = " ";
    OZ0DM002.OZ0DMSEL[1] = " ";
    OZ0DM002.OZ0DMSEL[2] = " ";
    OZ0DM002.OZ0DMSEL[3] = " ";
    OZ0DM002.OZ0DMSEL[4] = " ";
    OZ0DM002.OZ0DMSEL[5] = " ";
    OZ0DM002.OZ0DM-BUYER-ADDR1 = " ";
    OZ0DM002.OZ0DM-BUYER-ADDR2 = " ";
    OZ0DM002.OZ0DM-BUYER-CITY = " ";
    OZ0DM002.OZ0DM-STATE = " ";
    OZ0DM002.OZ0DM-ZIP = " ";

    OZ0DW00.OZ0DW-PREV-EZEAID = "PF13";
    OZ0DW00.OZ0DW-SWR = "Y";

    OZ0D-20000();
  end
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf3   
   && converseVar.eventKey not pf13  /* and PF13 was not pressed*/
   && converseVar.eventKey not pf20) /* and PF20 was not pressed*/

    OZWREC.XXXPRCNM = "13000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end

  if (converseVar.eventKey is enter || 
   /* EZEAID IS PF13 OR*/
  converseVar.eventKey is pf20)

    OZ0DW00.OZ0DW-SWR = "Y"; /* Request for data switch*/
    OZ0DW00.OZ0DW-SWF = "Y";

    if (OZ0DM002 not modified)
      OZ0DW00.OZ0DW-SWR = "N"; /* Request for data switch*/
      OZ0DW00.OZ0DW-SWF = "N";
      OZ0D-20000();
    end

  end
  ;
end // end OZ0D-23000

// Obtain the data to display
Function OZ0D-24000()
  if (("S" in OZ0DM002.OZ0DMSEL || 
  "*" in OZ0DM002.OZ0DMSEL) && 
  (OZ0DM002.OZ0DM-BUYER-ADDR1 > " "
   || OZ0DM002.OZ0DM-BUYER-ADDR2 > " "))
    converseLib.validationFailed(63); /* only 1 address allowed*/
    OZWREC.XXXPRCNM = "24000";
    OZ0DW00.OZ0DW-SWR = "N";
    OZ0D-20000();
  end

  set VOCBUY01 empty;
  OZ0D-24100(); /* read vocbuy01*/

  if (("S" in OZ0DM002.OZ0DMSEL || 
  "*" in OZ0DM002.OZ0DMSEL))
    OZ0DW00.OZ0DW-IX2 = sysVar.arrayIndex;

    if (OZ0DM002.OZ0DM-ADDR-TYP[OZ0DW-IX2] > " ")
      if (OZ0DW00.OZ0DW-IX2 == 1)
        VOCBUY01.SOCD-ADDR-TYP-CD = "CO";
      else
        if (OZ0DW00.OZ0DW-IX2 == 2)
          VOCBUY01.SOCD-ADDR-TYP-CD = "CR";
        else
          if (OZ0DW00.OZ0DW-IX2 == 3)
            VOCBUY01.SOCD-ADDR-TYP-CD = "BG";
          else
            if (OZ0DW00.OZ0DW-IX2 == 4)
              VOCBUY01.SOCD-ADDR-TYP-CD = "ST";
            else
              if (OZ0DW00.OZ0DW-IX2 == 5)
                VOCBUY01.SOCD-ADDR-TYP-CD = "SG";
              end
            end
          end
        end
      end
    end
  else /* not a selected addr - must be buyer*/
    if (OZ0DM002.OZ0DM-BUYER-ADDR1 > " "
     || OZ0DM002.OZ0DM-BUYER-ADDR2 > " ")
      VOCBUY01.SOCD-ADDR-TYP-CD = "BA";
    else
      converseLib.validationFailed(63); /* gotta use an addr w/ data*/
      OZWREC.XXXPRCNM = "24000";
      OZ0DW00.OZ0DW-SWR = "N";
      OZ0D-20000();
    end
  end
  if (OZ0DM002.OZ0DM-AREA-CODE > " ")
    if (OZ0DM002.OZ0DM-AREA-CODE not numeric)
      converseLib.validationFailed(64); /* not numeric*/
      OZWREC.XXXPRCNM = "24000";
      OZ0DW00.OZ0DW-SWR = "N";
      set OZ0DM002.OZ0DM-AREA-CODE cursor, bold;
      OZ0D-20000();
    end
    if (OZ0DM002.OZ0DM-PHONE-PREFIX not numeric)
      converseLib.validationFailed(64);
      OZWREC.XXXPRCNM = "24000";
      OZ0DW00.OZ0DW-SWR = "N";
      set OZ0DM002.OZ0DM-PHONE-PREFIX cursor, bold;
      OZ0D-20000();
    end
    if (OZ0DM002.OZ0DM-PHONE not numeric)
      converseLib.validationFailed(64);
      OZWREC.XXXPRCNM = "24000";
      OZ0DW00.OZ0DW-SWR = "N";
      set OZ0DM002.OZ0DM-PHONE cursor, bold;
      OZ0D-20000();
    end
  end
end // end OZ0D-24000

// Select vocbuy01 record
Function OZ0D-24100()

  VOCBUY01.SOCD-CUST-BUYER-ID = OZ0DW01.OZ0DW-BUYER-ID[OZ0DW-IXM];


  try
    call "VOCBUY01" ("S ", SQLCA, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 ||  /* Normal return code*/
    SQLCA.VAGen_SQLCODE == +100)    
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "16100"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCBUY01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCBUY01.VOCBUY01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-24100

// Obtain the data to display
Function OZ0D-25000()
  VOCBUY01.XXXFSTNM = OZ0DM002.OZ0DM-HDR-FIRST-NAME;
  VOCBUY01.XXXLSTNM = OZ0DM002.OZ0DM-HDR-LAST-NAME;
  VOCBUY01.KUCCOID = OZWREC.KUCCOID;

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCBUY01.ZZZSDT = TA2REC.TA2GRGGN;
    VOCBUY01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "15200"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0DW00.OZ0DW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0DW00.OZ0DW-TM-HH = OZ0DW00.OZ0DW-TB-HH;
  OZ0DW00.OZ0DW-TM-MM = OZ0DW00.OZ0DW-TB-MM;
  VOCBUY01.ZZZSDTM = OZ0DW00.OZ0DW-TIME-MK;
  VOCBUY01.ZZZCHGTM = OZ0DW00.OZ0DW-TIME-MK;

  if (OZ0DM001.OZ0DMSEL[OZ0DW-IXM] == "A"
   || OZ0DW00.OZ0DW-PREV-EZEAID == "PF13")
    VOCBUY01.KUMSTRID = KUMREC.KUMSTRID;
    OZ0D-25100(); /* get next buyer id number*/
    VOCBUY01.SOCD-CUST-BUYER-ID = VOZCTL01.SOCD-NXT-CUST-BUY;

    VOCBUY01.ZZZCHGDT = 0;
    VOCBUY01.ZZZCHGTM = 0;

    OZ0D-25200(); /* add vocbuy01*/

  else
    if (OZ0DM001.OZ0DMSEL[OZ0DW-IXM] == "C")
      OZ0D-25300(); /* udpate existing vocbuy01*/
    end
  end

  if (VOCBUY01.SOCD-ADDR-TYP-CD == "BA")
    VOCBAD01.SOCD-CUST-BUYER-ID = VOCBUY01.SOCD-CUST-BUYER-ID;
    VOCBAD01.XXX-ADDR1 = OZ0DM002.OZ0DM-BUYER-ADDR1;
    VOCBAD01.XXX-ADDR2 = OZ0DM002.OZ0DM-BUYER-ADDR2;
    VOCBAD01.XXX-CITY = OZ0DM002.OZ0DM-BUYER-CITY;
    VOCBAD01.XST-ST-CD = OZ0DM002.OZ0DM-STATE;
    VOCBAD01.XXX-ZIP = OZ0DM002.OZ0DM-ZIP;
    VOCBAD01.XXX-EMAIL-ADDR = OZ0DM002.OZ0DM-EMAIL-ADDR;
    OZ0DW00.OZ0DW-AREA-CODE = OZ0DM002.OZ0DM-AREA-CODE;
    OZ0DW00.OZ0DW-PHONE-PREFIX = OZ0DM002.OZ0DM-PHONE-PREFIX;
    OZ0DW00.OZ0DW-PHONE = OZ0DM002.OZ0DM-PHONE;
    OZ0DW00.OZ0DW-DASH1 = "-";
    OZ0DW00.OZ0DW-DASH2 = "-";
    VOCBAD01.XXX-FAX-NBR = OZ0DW00.OZ0DW-FAX-NBR;
    VOCBAD01.ZZZSDTM = OZ0DW00.OZ0DW-TIME-MK;
    VOCBAD01.ZZZSDT = TA2REC.TA2GRGGN;
    VOCBAD01.ZZZCHGDT = 0;
    VOCBAD01.ZZZCHGTM = 0;

    OZ0D-25400(); /* add vocbad01*/
    if (SQLCA.VAGen_SQLCODE == -803) /* dup row*/
      VOCBAD01.ZZZCHGDT = TA2REC.TA2GRGGN;
      VOCBAD01.ZZZCHGTM = OZ0DW00.OZ0DW-TIME-MK;
      VOCBAD01.ZZZCHGCT = OZ0DW00.OZ0DW-OCBAD-CHGCT;
      OZ0D-25500(); /* upd vocbad01*/
    end

  end


  OZWREC.SOCD-CUST-BUYER-ID = VOCBUY01.SOCD-CUST-BUYER-ID;
  OZ0D-11100(); /* Purge temporary storage*/
  COMMAREA.CATOAP = COMMAREA.CAFROMAP;
  XSOZ-S0001(); /* Exit to another application*/
  exit stack; /* Exit to display map*/
end // end OZ0D-25000

// read vozctl01
Function OZ0D-25100()
  set VOZCTL01 empty;
  ;
  try
    call "VOZCTL01" ("U1", SQLCA, VOZCTL01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "24110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOZCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOZCTL01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-25100

// Add vocbuy01 row
Function OZ0D-25200()

  try
    call "VOCBUY01" ("A ", SQLCA, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "25200"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "ADD TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCBUY01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCBUY01.VOCBUY01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-25200

// Update vocbuy01 row
Function OZ0D-25300()

  try
    call "VOCBUY01" ("U ", SQLCA, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "25300"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCBUY01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCBUY01.VOCBUY01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-25300

// Add vocbad01 row
Function OZ0D-25400()

  try
    call "VOCBAD01" ("A ", SQLCA, VOCBAD01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == -803)
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "25200"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "ADD TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCBAD01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCBAD01.VOCBAD01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-25400

// Update vocbad01 row
Function OZ0D-25500()

  try
    call "VOCBAD01" ("U ", SQLCA, VOCBAD01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "25300"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCBAD01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCBAD01.VOCBAD01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0D-25500

//*** RECORD=OZ0DW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record OZ0DW00 type basicRecord
  10 OZ0DW-IXM OZ0DW-IXM ; 
  10 OZ0DW-IDX OZ0DW-IDX ; 
  10 OZ0DW-IX1 OZ0DW-IX1 ; 
  10 OZ0DW-IX2 OZ0DW-IX2 ; 
  10 OZ0DW-IXX OZ0DW-IXX ; 
  10 OZ0DW-CNT OZ0DW-CNT ; 
  10 OZ0DW-SWC OZ0DW-SWC ; 
  10 OZ0DW-SWD OZ0DW-SWD ; 
  10 OZ0DW-SWF OZ0DW-SWF ; 
  10 OZ0DW-SWR OZ0DW-SWR ; 
  10 OZ0DW-SWU OZ0DW-SWU ; 
  10 OZ0DW-SFN OZ0DW-SFN ; 
  10 OZ0DW-BAD-FLG OZ0DW-BAD-FLG ; 
  10 OZ0DW-WS-CUST OZ0DW-WS-CUST ; 
    15 OZ0DW-WS-CUST-NUM OZ0DW-WS-CUST-NUM ; 
  10 OZ0DW-SV-CUST OZ0DW-SV-CUST ; 
  10 OZ0DW-CUST-BLD OZ0DW-CUST-BLD ; 
    15 OZ0DW-CUST-BLD-1 OZ0DW-CUST-BLD-1 [7] ; 
  10 * char(1) ; 
  10 OZ0DW-DATE-BRK OZ0DW-DATE-BRK ; 
    15 OZ0DW-DB-CC OZ0DW-DB-CC ; 
    15 OZ0DW-DB-YY OZ0DW-DB-YY ; 
    15 OZ0DW-DB-MM OZ0DW-DB-MM ; 
    15 OZ0DW-DB-DD OZ0DW-DB-DD ; 
  10 * char(1) ; 
  10 OZ0DW-DATE-MK OZ0DW-DATE-MK ; 
    15 OZ0DW-DM-MM OZ0DW-DM-MM ; 
    15 OZ0DW-DM-DASH1 OZ0DW-DM-DASH1 ; 
    15 OZ0DW-DM-DD OZ0DW-DM-DD ; 
    15 OZ0DW-DM-DASH2 OZ0DW-DM-DASH2 ; 
    15 OZ0DW-DM-YY OZ0DW-DM-YY ; 
  10 * char(1) ; 
  10 OZ0DW-TIME-BRK OZ0DW-TIME-BRK ; 
    15 OZ0DW-TB-HH OZ0DW-TB-HH ; 
    15 * char(1) ; 
    15 OZ0DW-TB-MM OZ0DW-TB-MM ; 
    15 * char(1) ; 
    15 OZ0DW-TB-SS OZ0DW-TB-SS ; 
  10 OZ0DW-TIME-MK OZ0DW-TIME-MK ; 
    15 OZ0DW-TM-HH OZ0DW-TM-HH ; 
    15 OZ0DW-TM-MM OZ0DW-TM-MM ; 
  10 OZ0DW-FAX-NBR OZ0DW-FAX-NBR ; 
    15 OZ0DW-AREA-CODE OZ0DW-AREA-CODE ; 
    15 OZ0DW-DASH1 char(1) ; 
    15 OZ0DW-PHONE-PREFIX OZ0DW-PHONE-PREFIX ; 
    15 OZ0DW-DASH2 char(1) ; 
    15 OZ0DW-PHONE OZ0DW-PHONE ; 
  10 OZ0DW-EDIT-FLAG OZ0DW-EDIT-FLAG ; 
  10 OZ0DW-UPDATE-SW OZ0DW-UPDATE-SW ; 
  10 OZ0DW-SAVE-PAGE OZ0DW-SAVE-PAGE ; 
  10 OZ0DW-1ST-NAME-WC-FLG OZ0DW-1ST-NAME-WC-FLG ; 
  10 OZ0DW-LST-NAME-WC-FLG OZ0DW-LST-NAME-WC-FLG ; 
  10 OZ0DW-1ST-NAME-BREAK OZ0DW-1ST-NAME-BREAK ; 
    15 OZ0DW-1ST-NAME-BRK OZ0DW-1ST-NAME-BRK [15] ; 
  10 OZ0DW-LST-NAME-BREAK OZ0DW-LST-NAME-BREAK ; 
    15 OZ0DW-LST-NAME-BRK OZ0DW-LST-NAME-BRK [25] ; 
  10 OZ0DW-OCBAD-CHGCT OZ0DW-OCBAD-CHGCT ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 OZ0DW-CTL-FLD OZ0DW-CTL-FLD ; 
    15 OZ0DW-FNC OZ0DW-FNC ; 
    15 OZ0DW-SAV OZ0DW-SAV ; 
    15 OZ0DW-SAV-PAGE OZ0DW-SAV-PAGE ; 
  10 OZ0DW-SAVE-STORE OZ0DW-SAVE-STORE ; 
    15 OZ0DW-SAVE-STORE-NUM OZ0DW-SAVE-STORE-NUM ; 
  10 OZ0DW-NUM-STORE OZ0DW-NUM-STORE ; 
  10 * char(1) ; 
  10 OZ0DW-PREV-EZEAID OZ0DW-PREV-EZEAID ; 
  10 OZ0DW-XSOCD OZ0DW-XSOCD ; 
  10 OZ0DW-XSOCD-DESC OZ0DW-XSOCD-DESC ; 
  10 OZ0DW-XGPCD OZ0DW-XGPCD ; 
  10 OZ0DW-GPC-DESC OZ0DW-GPC-DESC ; 
  10 OZ0DW-KUCCOID OZ0DW-KUCCOID ; 
  10 * char(1) ; 
  10 OZ0DW-HDR-FIRST-NAME OZ0DW-HDR-FIRST-NAME ; 
  10 OZ0DW-HDR-LAST-NAME OZ0DW-HDR-LAST-NAME ; 
  10 OZ0DW-M2-FIRST-NAME OZ0DW-M2-FIRST-NAME ; 
  10 OZ0DW-M2-LAST-NAME OZ0DW-M2-LAST-NAME ; 
  10 OZ0DW-HDR-CUST-NAME OZ0DW-HDR-CUST-NAME ; 
  10 * char(1) ; 
  10 OZ0DW-HDR-CUST-STR-DPT OZ0DW-HDR-CUST-STR-DPT ; 
    15 OZ0DW-HDR-CUST OZ0DW-HDR-CUST ; 
    15 * char(1) ; 
    15 OZ0DW-HDR-STR OZ0DW-HDR-STR ; 
    15 * char(1) ; 
    15 OZ0DW-HDR-DPT OZ0DW-HDR-DPT ; 
  10 * char(1) ; 
  10 OZ0DW-DTL-CUST-STR-DPT OZ0DW-DTL-CUST-STR-DPT ; 
    15 OZ0DW-DTL-CUST OZ0DW-DTL-CUST ; 
    15 OZ0DW-DOT1 char(1) ; 
    15 OZ0DW-DTL-STR OZ0DW-DTL-STR ; 
    15 OZ0DW-DOT2 char(1) ; 
    15 OZ0DW-DTL-DPT OZ0DW-DTL-DPT ; 
end // end OZ0DW00

//*** RECORD=OZ0DW01 ****
// /*
// /*      application working storage for map1
// /*
// ***********************
Record OZ0DW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(1001) ; // Temporary storage page length
    10 OZ0DW-SEL OZ0DW-SEL [13] ; 
    10 OZ0DW-GROUP OZ0DW-GROUP [13] ; 
      15 OZ0DW-FIRST-NAME OZ0DW-FIRST-NAME ; 
      15 OZ0DW-LAST-NAME OZ0DW-LAST-NAME ; 
      15 OZ0DW-CUST OZ0DW-CUST ; 
      15 OZ0DW-STR OZ0DW-STR ; 
      15 OZ0DW-DPT OZ0DW-DPT ; 
      15 OZ0DW-ADDR-TYP-CD OZ0DW-ADDR-TYP-CD ; 
      15 OZ0DW-ADDR-TYP OZ0DW-ADDR-TYP ; 
      15 OZ0DW-BUYER-ID OZ0DW-BUYER-ID ; 
      15 OZ0DW-BUYER-STR OZ0DW-BUYER-STR ; 
end // end OZ0DW01

DataItem OZ0DW-1ST-NAME-BREAK char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-1ST-NAME-BRK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0DW-1ST-NAME-WC-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OZ0DW-ADDR-TYP char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OZ0DW-ADDR-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-AREA-CODE char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function switch
DataItem OZ0DW-BAD-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-BUYER-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-BUYER-STR num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Index for map fields
DataItem OZ0DW-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Pass record control field
DataItem OZ0DW-CTL-FLD char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-CUST num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-CUST-BLD char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-CUST-BLD-1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-DATE-BRK num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-DATE-MK char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-DB-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-DB-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-DB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-DB-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-DM-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-DM-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-DM-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-DM-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-DM-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OZ0DW-DPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-DTL-CUST char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-DTL-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-DTL-DPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-DTL-STR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0DW-EDIT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-FAX-NBR char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-FIRST-NAME char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map function switch
DataItem OZ0DW-FNC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-GPC-DESC char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//  Group Level
DataItem OZ0DW-GROUP char(76)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-HDR-CUST char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-HDR-CUST-NAME char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-HDR-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-HDR-DPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-HDR-FIRST-NAME char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-HDR-LAST-NAME char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-HDR-STR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0DW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0DW-IX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0DW-IX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0DW-IXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0DW-IXX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// CU_CO_ID
DataItem OZ0DW-KUCCOID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

DataItem OZ0DW-LAST-NAME char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-LST-NAME-BREAK char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-LST-NAME-BRK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0DW-LST-NAME-WC-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-M2-FIRST-NAME char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-M2-LAST-NAME char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Save page for cursor placement
DataItem OZ0DW-NUM-STORE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-OCBAD-CHGCT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-PHONE char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-PHONE-PREFIX char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-PREV-EZEAID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Save index for WS
DataItem OZ0DW-SAV num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Save page for cursor placement
DataItem OZ0DW-SAV-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Page save field
DataItem OZ0DW-SAVE-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Save page for cursor placement
DataItem OZ0DW-SAVE-STORE char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Save page for cursor placement
DataItem OZ0DW-SAVE-STORE-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// LINE SELECTION INDICATOR
DataItem OZ0DW-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function switch
DataItem OZ0DW-SFN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OZ0DW-STR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-SV-CUST num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Cursor end of file switch
DataItem OZ0DW-SWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be displayed switch
DataItem OZ0DW-SWD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem OZ0DW-SWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem OZ0DW-SWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Storage page update switch
DataItem OZ0DW-SWU char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-TB-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-TB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-TB-SS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-TIME-BRK char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-TIME-MK num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-TM-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-TM-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Update switch
DataItem OZ0DW-UPDATE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-WS-CUST char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-WS-CUST-NUM num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0DW-XGPCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSO_SLS_OFC_ID
DataItem OZ0DW-XSOCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0DW-XSOCD-DESC char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

