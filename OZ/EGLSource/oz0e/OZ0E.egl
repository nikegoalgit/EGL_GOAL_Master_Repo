package oz0e;
import corpcom2.XP0PW00;
import corpcom2.XP0PW01;
import corpcom2.XP0QW00;
import corpcom2.XP0RW00;
import corpcom2.XP0RW01;
import corpcom2.XP0SW00;
import corpcom2.XP0SW01;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XP0S001;
import corpcom3.XPOZ-00001;
import corpcom3.XPTA0P;
import corpcom3.XPXGP01;
import corpcom3.XPXSO01;
import corpcom3.XPXX001;
import corpcom4.XSOZ-S0001;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import ku.common.KUCREC;
import ku.common.KULREC;
import ku.common.KUMREC;
import ku.common.KUNREC;
import oz.common.OZWREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TA6REC;
import ta.common.TAEREC;
import ta.common.TARJCL;
import vv.common.VOCACD01;
import vv.common.VOCBAD01;
import vv.common.VOCBUY01;
import vv.common.VOCLCD01;
import vv.common.VOCLDC01;
import xx.common.*;
import xx02.*;
import xx02.CAUSERID;
import xx02.XGPTBL;
import xx04.*;
import xx05.*;
import xx05.XSOTBL;
//*** PROGRAM=OZ0E ****
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      09/24/97  JOLDIN  New application.
// 
// ocd      01/26/98  dsmit0  fixed pf24 problem.
// *********************
Program OZ0E type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OZ00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  KULREC KULREC; // record
  KUMREC KUMREC; // record
  KUNREC KUNREC; // record
  OZ0EW00 OZ0EW00; // record
  OZ0EW01 OZ0EW01; // record
  OZ0EW02 OZ0EW02; // record
  OZ0EW03 OZ0EW03; // record
  OZWREC OZWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  VOCACD01 VOCACD01; // record
  VOCBAD01 VOCBAD01; // record
  VOCBUY01 VOCBUY01; // record
  VOCLCD01 VOCLCD01; // record
  VOCLDC01 VOCLDC01; // record
  XP0PW00 XP0PW00; // record
  XP0PW01 XP0PW01; // record
  XP0QW00 XP0QW00; // record
  XP0RW00 XP0RW00; // record
  XP0RW01 XP0RW01; // record
  XP0SW00 XP0SW00; // record
  XP0SW01 XP0SW01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XOMTBL {deleteAfterUse = yes}; // table
  use XSOTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use OZ0ET {deleteAfterUse = yes}; // table
  use OZ0ETDT {deleteAfterUse = yes}; // table
  use OZ0ETDF {deleteAfterUse = yes}; // table
  use OZ0EM.OZ0EM001,  // forms
      OZ0EM.OZ0EM002,
      OZ0EM.XP0SM001,
      OZ0EM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPOZ-00001: XPOZ-00001();
    /* ------------------------------------------------------------*/
    /* Initialize working storage and display storage areas.*/
    /* ------------------------------------------------------------*/
    ;
    set OZ0EM001 initial; /* M001 input/output*/
    set OZ0EM002 initial; /* M002 input/output*/
    set OZ0EW00 empty; /* Working storage*/
    set OZ0EW01 empty; /* M001 display storage*/
    set OZ0EW03 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set TA6REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    ;
    if (OZWREC.OZW-SV-APPL == " ")
      OZWREC.OZW-SV-APPL = COMMAREA.CAFROMAP;
    end
    ;
    OZ0EW00.OZ0EW-SWD = "1"; /* Map to be displayed switch*/
    OZ0EW00.OZ0EW-SWF = "Y"; /* Format the map switch*/
    ;
  
    if (OZWREC.OZW-APPIDX == 0)
      OZWREC.OZW-APPIDX = 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0A";
    end
  
    ;
    OZ0EW00.OZ0EW-IXM = 1;
    while (OZ0EW00.OZ0EW-IXM < 13)
      set OZ0EM001.OZ0EMSEL[OZ0EW-IXM] skip, noHighLight;
      OZ0EW00.OZ0EW-IXM = OZ0EW00.OZ0EW-IXM + 1;
    end
  
    /* ------------------------------------------------------------*/
    /* If coming back from OZ0A, set flags and switches.*/
    /* ------------------------------------------------------------*/
  
    if (COMMAREA.CAFROMAP == "OZ0A")
      OZ0EW00.OZ0EW-SWF = "N";
      OZ0EW00.OZ0EW-SWR = "N";
      ;
    else
  
      if (COMMAREA.CAFROMAP == "OZ0D")
        if (OZWREC.WC-FLG == "A")
          OZ0EW00.OZ0EW-SWD = 2;
          OZ0EW00.OZ0EW-SFN = "A";
        else
          OZ0EW00.OZ0EW-SWD = 2;
          OZ0EW00.OZ0EW-SFN = "S";
        end
      end
  
      if (COMMAREA.CAFROMAP == "OZ0D")
        OZ0EM001.OZ0EM-CU-CO-ID = OZWREC.OZW-SV-CUST;
        OZ0EM001.OZ0EM-CU-STOR-ID = OZWREC.OZW-SV-STR;
        OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF = OZWREC.OZW-SV-DPT;
        OZ0EM001.OZ0EM-GPC-CD = OZWREC.OZW-SV-XGPCD;
        OZ0EM001.OZ0EM-XSO-SLS-OFC-ID = OZWREC.OZW-SV-XSOCD;
        OZ0EW00.OZ0EW-BUYER-ID = OZWREC.SOCD-CUST-BUYER-ID;
      else
        OZ0EW00.OZ0EW-OZ-CUST-STR-DPT = OZWREC.CUST-STR-DPT;
        OZ0EW00.OZ0EW-SV-CUST = OZWREC.OZW-CUST;
        OZ0EW00.OZ0EW-IX1 = 1;
        while (OZ0EW-IX1 < 8
         && OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] == "0")
          OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] = " ";
          OZ0EW-IX1 = OZ0EW-IX1 + 1;
        end
        OZ0EM001.OZ0EM-CU-CO-ID = OZ0EW00.OZ0EW-SV-CUST;
        ;
        if (OZ0EM001.OZ0EM-CU-CO-ID == "       ")
          OZ0EM001.OZ0EM-CU-STOR-ID = "    ";
          OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF = "  ";
        else
          OZ0EM001.OZ0EM-CU-STOR-ID = OZ0EW00.OZ0EW-OZ-STR;
          OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF = OZ0EW00.OZ0EW-OZ-DPT;
        end
        OZ0EM001.OZ0EM-GPC-CD = OZWREC.XGPCD;
        OZ0EM001.OZ0EM-XSO-SLS-OFC-ID = OZWREC.XSOCD;
        OZ0EW00.OZ0EW-BUYER-ID = OZWREC.SOCD-CUST-BUYER-ID;
      end
      OZ0EW00.OZ0EW-SWR = "Y"; /* rebuild the screen*/
    end
  
    ;
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/
    ;
    goto OZ0E-00000; /* Converse the main process*/
    ;
    ;
    OZ0E-00000: OZ0E-00000();
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/
    ;
    goto OZ0E-00000; /* Converse the main process*/
    ;
    ;
  end // end main
end // end OZ0E

// Main process to display a map
Function OZ0E-00000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) If specified, display the first map.*/
  /* 2) Otherwise, if specified, display the second map, depending*/
  /* on function = add or change*/
  /* 3) Otherwise, indicate error and exit to Application Menu.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/
  ;

  if (OZ0EW00.OZ0EW-SWD == "1") /* Map 1 was requested*/
    OZ0E-10000(); /* Display map 1*/
  else
    if (OZ0EW00.OZ0EW-SWD == "2" /* Map 2 was requested*/
     && OZ0EW00.OZ0EW-SFN == "A") /* and function = ADD*/
      OZ0E-20000(); /* Display map 2*/
    else
      if (OZ0EW00.OZ0EW-SWD == "2" /* Map 2 was requested*/
       && OZ0EW00.OZ0EW-SFN == "S") /* and function = CHANGE*/
        OZ0E-30000(); /* Display map 2*/
      else
      /* ------------------------------------------------------------*/
      /* Write the error to the Error Diagnosis Reporting Facility.*/
      /* ------------------------------------------------------------*/
        ;
        OZWREC.XXXPRCNM = "00000"; /* Module identification*/
        OZWREC.XXXMSGNO = 10; /* Unexpected error occurred*/
        ;
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        TA1REC.TA1TYPE = "APPL"; /* Type of error*/
        TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";
        TA1REC.TA1MAPNO = OZ0EW00.OZ0EW-SWD; /* Map number*/
        TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
                                   /* Program application*/
        TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
        ;
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
        ;
       /* ------------------------------------------------------------*/
       /* EXIT TO DISPLAY THE APPLICATION SYSTEM MENU.*/
       /* ------------------------------------------------------------*/
        ;
        COMMAREA.CATOAP = "OZ0A"; /* TO application*/
        ;
        XSOZ-S0001(); /* Exit to another application*/
        ;
      /* ------------------------------------------------------------*/
      /* Abnormally terminate the transaction if the exit failed.*/
      /* ------------------------------------------------------------*/
        ;
        TA1REC.TA1FUNC = "ABND"; /* Termination function*/
        ;
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
        ;
      end
    end
    ;
    ;
  end
  ;
end // end OZ0E-00000

// List the rows in the table
Function OZ0E-10000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Obtain the data to display.*/
  /* 2) Format the map output area and display the map.*/
  /* 3) Check the attention identifier used to respond.*/
  /* 4) Reset highlighted fields to normal intensity.*/
  /* 5) Verify the data that was entered.*/
  /* 6) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0E-11000(); /* Obtain the data to display*/
  ;
  OZ0E-12000(); /* Format and display the map*/
  ;
  OZ0E-13000(); /* Check attention identifier*/
  ;
  OZ0E-14000(); /* Reset fields to normal intensity*/
  ;
  OZ0E-15000(); /* Verify the entered data*/
  ;
  OZ0E-16000(); /* Process valid input request*/
  ;
  ;
end // end OZ0E-10000

// Obtain the data to display
Function OZ0E-11000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0EW00.OZ0EW-SWR != "Y"               /* Data was not requested*/
   || (converseVar.validationMsgNum != 0 &&  /* or an error was found*/
  converseVar.validationMsgNum != 1 &&       /* valid update*/
  converseVar.validationMsgNum != 77))       /* valid update*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0EW00.XXXTSLEN = 0390; /* temp storage page length*/
  ;
  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0EW00.XXXTSPAG == 0) /* no pages established*/
    OZ0EW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  ;
  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0E-11100(); /* Purge any temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* Perform screen header edits.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0E-11200(); /* Screen header edits*/
  ;
  if (converseVar.validationMsgNum == 0 ||  /* no errors found*/
  converseVar.validationMsgNum == 1 ||      
  converseVar.validationMsgNum == 77)      
    ;
  /* ------------------------------------------------------------*/
  /* Select and open the cursor for the set to be formatted.*/
  /* ------------------------------------------------------------*/
    ;
    OZ0E-11300(); /* Select set and open cursor*/
    ;
  /* ------------------------------------------------------------*/
  /* Fetch and format the data into pages until end of cursor.*/
  /* ------------------------------------------------------------*/
    ;
    OZ0EW00.OZ0EW-IXM = 1; /* Display line index*/
    OZ0EW00.OZ0EW-SWC = "N"; /* End of cursor switch*/
    ;
    while (OZ0EW00.OZ0EW-SWC == "N") /* Until end of cursor*/
      ;
      OZ0E-11400(); /* Fetch next row in the cursor*/
      ;
    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/
      ;
      if (OZ0EW00.OZ0EW-SWC == "N") /* Not end of cursor*/
        OZ0E-11500(); /* Save data in display storage*/
      end
      ;
    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/
      ;
      if (OZ0EW00.OZ0EW-IXM > 12) /* Page is full*/
        ;
        OZ0E-11600(); /* Add page to temporary storage*/
        ;
        OZ0EW00.OZ0EW-IXM = 1; /* Display line index*/
        ;
      end
      ;
    end
    ;
  /* ------------------------------------------------------------*/
  /* Add any partially formatted last page to the queue.*/
  /* ------------------------------------------------------------*/
    ;
    if (OZ0EW00.OZ0EW-IXM > 1) /* Page was formatted*/
      OZ0E-11600(); /* Add page to temporary storage*/
    end
    ;
  /* ------------------------------------------------------------*/
  /* Close the cursor for the selected set.*/
  /* ------------------------------------------------------------*/
    ;
    OZ0E-11700(); /* Close the selected set cursor*/
    ;
  /* ------------------------------------------------------------*/
  /* If no pages were formatted, indicate no data to display.*/
  /* ------------------------------------------------------------*/
    ;
    if (OZ0EW00.TA5TSQIX == 0)
  /* IF OZ0EW00.OZ0EW-IXM = 1;      /* No pages formatted*/
      ;
      OZWREC.XXXPRCNM = "11000"; /* Module identification*/
      OZWREC.XXXMSGNO = 16; /* No data was found to display*/
      set OZ0EM001.OZ0EM-GPC-CD cursor; /* cursor*/
      OZ0EM001.OZ0EMSEL[1] = " "; /* reset select field*/
      set OZ0EM001.OZ0EMSEL[1] skip;
      ;
      return; /* Return to previous process*/
      ;
    end
    ;
  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/
    ;
    OZ0EW00.OZ0EW-SWR = "N"; /* Request for data switch*/
    ;
  end
end // end OZ0E-11000

// Purge any temporary storage
Function OZ0E-11100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/
  ;
  set OZ0EW01 empty; /* M001 display storage*/
  ;
  OZ0EW00.OZ0EW-SWU = "N"; /* Storage update switch*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0EW00.TA5TSQIX = 0; /* Highest page number*/
  ;
  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (OZ0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  OZWREC.XXXPRCNM = "11100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-11100

// screen header edits
Function OZ0E-11200()
  /* -------------------------------------------------------------*/
  /* if pf 13 - ADD entered don't check any input because*/
  /* we are just going to display a blank add screen*/
  /* -------------------------------------------------------------*/
  if (converseVar.eventKey is pf13) /* pf 13 entered*/
    return;
  end
  ;
  /* -------------------------------------------------------------*/
  /* check for required fields*/
  /* -------------------------------------------------------------*/
  if (OZ0EM001.OZ0EM-GPC-CD == " " /* if any are blank*/
   || OZ0EM001.OZ0EM-CU-CO-ID == " "
   || OZ0EM001.OZ0EM-XSO-SLS-OFC-ID == " ")
    OZWREC.XXXPRCNM = "11200"; /* Module identification*/
    set OZ0EM001.OZ0EM-GPC-CD cursor, bold;
    set OZ0EM001.OZ0EM-CU-CO-ID bold;
    set OZ0EM001.OZ0EM-XSO-SLS-OFC-ID bold; /* highlight fields*/
    converseLib.validationFailed(60); /* enter all highlighted fields*/
    OZ0EW00.OZ0EW-SWR = "N";
    return;
  end
  ;
  /* -------------------------------------------------------------*/
  /* check valid gpc code*/
  /* -------------------------------------------------------------*/
  if (OZ0EM001.OZ0EM-GPC-CD == " ") /* code is blank - flag edit*/
    OZ0EW00.OZ0EW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZWREC.XXXPRCNM = "11200"; /* Module identification*/
    set OZ0EM001.OZ0EM-GPC-CD cursor, bold; /* Highlight*/
    set OZ0EM001.OZ0EM-GPC-DESC skip, invisible; /* darken desc*/
    converseLib.validationFailed(22); /* GPC code invalid*/
    return;
    ;
  else
    if (OZ0EM001.OZ0EM-GPC-CD in XGPTBL.XGPCD) /* code in table*/
      ;
   /* get description*/
      if (OZ0EM001.OZ0EM-GPC-CD in XGPTBL.XGPCD)
        OZ0EM001.OZ0EM-GPC-DESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      end
      set OZ0EM001.OZ0EM-GPC-DESC skip;
      ;
    else
      OZ0EW00.OZ0EW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0EW00.OZ0EW-SWR = "N";
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0EM001.OZ0EM-GPC-CD cursor, bold; /* Highlight*/
      set OZ0EM001.OZ0EM-GPC-DESC skip, invisible; /* darken desc*/
      converseLib.validationFailed(22); /* GPC code invalid*/
      return;
      ;
    end
    ;
  end
  ;

  /* -------------------------------------------------------------*/
  /* if cust.str.dpt all entered verify against dcust.vcust001*/
  /* else use cust number against dcust.vcmpny01*/
  /* in either case read vcmpny01 to get company name*/
  /* -------------------------------------------------------------*/
  if (OZ0EM001.OZ0EM-CU-CO-ID == 0) /* code is blank - flag edit*/
    OZ0EW00.OZ0EW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZWREC.XXXPRCNM = "11200"; /* Module identification*/
    set OZ0EM001.OZ0EM-CU-CO-ID cursor, bold; /* Highlight*/
    converseLib.validationFailed(51); /* customer invalid*/
    return;
  end
  if (OZ0EM001.OZ0EM-CU-CO-ID > "0000000")
    OZ0EW00.OZ0EW-SV-CUST-NUM = OZ0EM001.OZ0EM-CU-CO-ID;
    if (OZ0EM001.OZ0EM-CU-STOR-ID != " " && 
    OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF != " " && 
    OZ0EM001.OZ0EM-CU-STOR-ID != "****" && 
    OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF != "**")
      OZ0EW00.OZ0EW-SV-STR-NUM = OZ0EM001.OZ0EM-CU-STOR-ID;
      OZ0EW00.OZ0EW-SV-DPT-NUM = OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF;
      ;
      OZ0E-11210(); /* validate against dcust.vcust001*/

      OZ0E-11220(); /* retrv cmpny name from dcust.vcmpny01*/
      if (converseVar.validationMsgNum > 0)
        if (converseVar.validationMsgNum != 1) /* successfull update*/
          return;
        end
      end
      OZ0EM001.OZ0EM-CU-CO-NM-HDR = KUCREC.KUCCONM;

    else
      OZ0E-11220(); /* validate against dcust.vcmpny01*/
      if (converseVar.validationMsgNum > 0)
        if (converseVar.validationMsgNum != 1) /* successfull update*/
          return;
        end
      end
      OZ0EM001.OZ0EM-CU-CO-NM-HDR = KUCREC.KUCCONM;
    end
  end
  /* -------------------------------------------------------------*/
  /* if store and/or dept are blank replace with*/
  /* replace with  '***'*/
  /* -------------------------------------------------------------*/
  ;
  if (OZ0EM001.OZ0EM-CU-STOR-ID == 0 || 
  OZ0EM001.OZ0EM-CU-STOR-ID == " " || 
  OZ0EM001.OZ0EM-CU-STOR-ID == "0000")
    OZ0EM001.OZ0EM-CU-STOR-ID = "****";
  end
  ;
  if (OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF == 0 || 
  OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF == " " || 
  OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF == "00")
    OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF = "** ";
  end
  ;

  /* -------------------------------------------------------------*/
  /* if sales office id entered verify against xsotbl*/
  /* retrieve the sales office description*/
  /* -------------------------------------------------------------*/
  if (OZ0EM001.OZ0EM-XSO-SLS-OFC-ID == " ") /* sls ofc is blank - flag edit*/
    OZ0EW00.OZ0EW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZWREC.XXXPRCNM = "11200"; /* Module identification*/
    set OZ0EM001.OZ0EM-XSO-SLS-OFC-ID cursor, bold; /* Highlight*/
    converseLib.validationFailed(24); /* GPC code invalid*/
    return;
  end
  if (OZ0EM001.OZ0EM-XSO-SLS-OFC-ID > " ")
    if (OZ0EM001.OZ0EM-XSO-SLS-OFC-ID in XSOTBL.XSOCD) /* code in table*/
      ;
   /* get description*/
      if (OZ0EM001.OZ0EM-XSO-SLS-OFC-ID in XSOTBL.XSOCD)
        OZ0EM001.OZ0EM-XSO-SLS-OFC-ID-DESC = XSOTBL.XSOSNM[sysVar.arrayIndex];
      end
    else
      OZ0EW00.OZ0EW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0EW00.OZ0EW-SWR = "N"; /**/
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0EM001.OZ0EM-XSO-SLS-OFC-ID cursor, bold; /* Highlight*/
      set OZ0EM001.OZ0EM-XSO-SLS-OFC-ID-DESC skip, invisible; /* darken desc*/
      converseLib.validationFailed(24); /* sales office code invalid*/
      return;
      ;
    end
  end
  ;
end // end OZ0E-11200

// Select set and open cursor
Function OZ0E-11210()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  ;
  set KUNREC empty; /* Clear row storage area*/
  ;
  KUNREC.KUCCOID = OZ0EW00.OZ0EW-SV-CUST-NUM;
  KUNREC.XGPCD = OZ0EM001.OZ0EM-GPC-CD;
  KUNREC.KUMSTRID = OZ0EW00.OZ0EW-SV-STR-NUM;
  KUNREC.XNXCD = OZ0EW00.OZ0EW-SV-DPT-NUM;
  ;
  ;
  try
    call "IO0280" ("S ", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100)
      return; /* Return to previous process*/
  /* ELSE;*/
  /* IF SQLCA.SQLCODE EQ 100;     /* data not found*/
  /* MOVE 52 TO EZEMNO;*/
  /* SET OZ0EM001.OZ0EM-CU-CO-ID CURSOR,BRIGHT;*/
  /* MOVE 'Y' TO OZ0EW00.OZ0EW-EDIT-FLAG;*/
  /* MOVE 'N' TO OZ0EW00.OZ0EW-SWR;*/
  /* EZERTN;*/
  /* END;*/
    end
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "11300"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUNREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUNREC.KUNGRP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-11210

// Select set and open cursor
Function OZ0E-11220()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  ;
  set KUCREC empty; /* Clear row storage area*/
  ;
  KUCREC.KUCCOID = OZ0EW00.OZ0EW-SV-CUST-NUM;
  ;
  ;
  try
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      ;
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* Data not found*/
        converseLib.validationFailed(52);
        set OZ0EM001.OZ0EM-CU-CO-ID cursor, bold;
        OZ0EW00.OZ0EW-EDIT-FLAG = "Y";
        OZ0EW00.OZ0EW-SWR = "N";
        return;
      end
    end
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "11300"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUCREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-11220

// Select set and open cursor
Function OZ0E-11300()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  ;
  set VOCLDC01 empty; /* Clear row storage area*/
  ;
  /* Use values entered on map to select the data*/
  ;
  OZ0EW00.OZ0EW-SV-CUST = OZ0EM001.OZ0EM-CU-CO-ID;
  OZ0EW00.OZ0EW-SV-STR = OZ0EM001.OZ0EM-CU-STOR-ID;
  OZ0EW00.OZ0EW-SV-DPT = OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF;
  ;
  OZ0EW00.OZ0EW-SV-CUST-NUM = OZ0EW00.OZ0EW-SV-CUST;
  ;
  if (OZ0EM001.OZ0EM-CU-STOR-ID == "****" || 
  OZ0EM001.OZ0EM-CU-STOR-ID == "0000" || 
  OZ0EM001.OZ0EM-CU-STOR-ID == " ")
    OZ0EW00.OZ0EW-SV-STR-NUM = -1;
  else
    OZ0EW00.OZ0EW-SV-STR-NUM = OZ0EW00.OZ0EW-SV-STR;
  end
  ;
  if (OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF == "**" || 
  OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF == "00 " || 
  OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF == " ")
    OZ0EW00.OZ0EW-SV-DPT-NUM = -1;
  else
    OZ0EW00.OZ0EW-SV-DPT-NUM = OZ0EW00.OZ0EW-SV-DPT;
  end
  ;
  VOCLDC01.XGPCD = OZ0EM001.OZ0EM-GPC-CD;
  VOCLDC01.KUCCOID = OZ0EW00.OZ0EW-SV-CUST-NUM;
  VOCLDC01.KUMSTRID = OZ0EW00.OZ0EW-SV-STR-NUM;
  VOCLDC01.XNXCD = OZ0EW00.OZ0EW-SV-DPT-NUM;
  VOCLDC01.XSOCD = OZ0EM001.OZ0EM-XSO-SLS-OFC-ID;
  ;
  ;
  try
    call "VOCLDC01" ("S1", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* Select tbl set*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "11300"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01.VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-11300

// Fetch next row in the cursor
Function OZ0E-11400()
  /* ------------------------------------------------------------*/
  /* Fetch the next row to display from the table.*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VOCLDC01" ("N1", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/
  ;
  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      ;
      OZ0EW00.OZ0EW-SWC = "Y"; /* Indicate end of cursor*/
      ;
      return; /* Return to previous process*/
      ;
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "11400"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01.VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-11400

// Save data in display storage
Function OZ0E-11500()
  /* ------------------------------------------------------------*/
  /* check for room on the page*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0EW00.OZ0EW-IXM > 12) /* index GT 13*/
    OZ0E-11600(); /* Save Page*/
    OZ0EW00.OZ0EW-IXM = 1; /* reset index*/
  end
  ;
  /* ------------------------------------------------------------*/
  /* Save the data from the table row in display storage.*/
  /* Also, if returning from the add screen and a new instruction was*/
  /* added, find the temp storage page that instruction is on and save it.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0EW01.OZ0EW-CUST[OZ0EW-IXM] = VOCLDC01.KUCCOID;
  OZ0EW01.OZ0EW-STR[OZ0EW-IXM] = VOCLDC01.KUMSTRID;
  OZ0EW01.OZ0EW-DPT[OZ0EW-IXM] = VOCLDC01.XNXCD;
  ;
  if (VOCLDC01.SOCD-SREP-REQ-CD == "NR")
    OZ0EW01.OZ0EW-SREP-CONF[OZ0EW-IXM] = "N";
    OZ0EW01.OZ0EW-SREP-DISC[OZ0EW-IXM] = "N";
  else
    if (VOCLDC01.SOCD-SREP-REQ-CD == "CO")
      OZ0EW01.OZ0EW-SREP-CONF[OZ0EW-IXM] = "Y";
      OZ0EW01.OZ0EW-SREP-DISC[OZ0EW-IXM] = "N";
    else
      if (VOCLDC01.SOCD-SREP-REQ-CD == "DO")
        OZ0EW01.OZ0EW-SREP-CONF[OZ0EW-IXM] = "N";
        OZ0EW01.OZ0EW-SREP-DISC[OZ0EW-IXM] = "Y";
      else
        if (VOCLDC01.SOCD-SREP-REQ-CD == "CD")
          OZ0EW01.OZ0EW-SREP-CONF[OZ0EW-IXM] = "Y";
          OZ0EW01.OZ0EW-SREP-DISC[OZ0EW-IXM] = "Y";
        end
      end
    end
  end
  ;
  ;
  if (VOCLDC01.SOCD-CUST-REQ-CD == "NR")
    OZ0EW01.OZ0EW-CUST-CONF[OZ0EW-IXM] = "N";
    OZ0EW01.OZ0EW-CUST-DISC[OZ0EW-IXM] = "N";
  else
    if (VOCLDC01.SOCD-CUST-REQ-CD == "CO")
      OZ0EW01.OZ0EW-CUST-CONF[OZ0EW-IXM] = "Y";
      OZ0EW01.OZ0EW-CUST-DISC[OZ0EW-IXM] = "N";
    else
      if (VOCLDC01.SOCD-CUST-REQ-CD == "DO")
        OZ0EW01.OZ0EW-CUST-CONF[OZ0EW-IXM] = "N";
        OZ0EW01.OZ0EW-CUST-DISC[OZ0EW-IXM] = "Y";
      else
        if (VOCLDC01.SOCD-CUST-REQ-CD == "CD")
          OZ0EW01.OZ0EW-CUST-CONF[OZ0EW-IXM] = "Y";
          OZ0EW01.OZ0EW-CUST-DISC[OZ0EW-IXM] = "Y";
        end
      end
    end
  end
  ;
  ;
  OZ0EW01.OZ0EW-SOCD-LTR-TYP-CD[OZ0EW-IXM] = VOCLDC01.SOCD-LTR-TYP-CD;
  ;
  OZ0EW01.OZ0EW-SOCD-LTR-DIST-CD[OZ0EW-IXM] = VOCLDC01.SOCD-LTR-DIST-CD;
  ;
  OZ0EW01.OZ0EW-SOCD-LTR-RVW-FL[OZ0EW-IXM] = VOCLDC01.SOCD-LTR-RVW-FL;
  ;
  OZ0EW01.OZ0EW-SOCD-BUYER-ID[OZ0EW-IXM] = VOCLDC01.SOCD-BUYER-ID;
  ;
  OZ0EW01.OZ0EW-HDR-CUST = OZ0EM001.OZ0EM-CU-CO-ID;
  OZ0EW01.OZ0EW-HDR-STR = OZ0EM001.OZ0EM-CU-STOR-ID;
  OZ0EW01.OZ0EW-HDR-DPT = OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF;
  OZ0EW01.OZ0EW-HDR-GPC-CD = OZ0EM001.OZ0EM-GPC-CD;
  OZ0EW01.OZ0EW-HDR-SLS-OFC = OZ0EM001.OZ0EM-XSO-SLS-OFC-ID;
  ;
  OZ0EW00.OZ0EW-IXM = OZ0EW00.OZ0EW-IXM + 1; /* Increment line index*/
  ;
  ;
end // end OZ0E-11500

// Add page to temporary storage
Function OZ0E-11600()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0EW01.XXXTSLEN = OZ0EW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (OZ0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set OZ0EW01 empty; /* M001 display storage*/
    ;
    OZ0EW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  OZWREC.XXXPRCNM = "11600"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-11600

// Close selected set cursor
Function OZ0E-11700()
  /* ------------------------------------------------------------*/
  /* Close the selected set of table rows.*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VOCLDC01" ("C1", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "11700"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "VOCLDC01"; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-11700

// Format and converse the map
Function OZ0E-12000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0EW00.OZ0EW-SWR == "Y"          /* Obtain data failed*/
   || converseVar.validationMsgNum == 0 /* or no error found*/
   || converseVar.validationMsgNum == 1 
   || converseVar.validationMsgNum == 77)
    ;
    if (OZ0EW00.OZ0EW-SWF == "Y") /* Map must be formatted*/
  /* Save header info in working storage*/
      OZ0EW00.OZ0EW-GPC-CD = OZ0EM001.OZ0EM-GPC-CD; /* save gpc*/
      OZ0EW00.OZ0EW-GPC-DESC = OZ0EM001.OZ0EM-GPC-DESC; /* gpc desc*/
      OZ0EW00.OZ0EW-CU-CO-ID = OZ0EM001.OZ0EM-CU-CO-ID; /* save cust*/
      OZ0EW00.OZ0EW-CU-STOR-ID = OZ0EM001.OZ0EM-CU-STOR-ID; /* store*/
      OZ0EW00.OZ0EW-XNX-DEPT-ID-XREF = OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF; /* save dept header*/
      OZ0EW00.OZ0EW-CU-CO-NM-HDR = OZ0EM001.OZ0EM-CU-CO-NM-HDR; /* cust name*/
      OZ0EW00.OZ0EW-XSO-SLS-OFC-ID = OZ0EM001.OZ0EM-XSO-SLS-OFC-ID;
      OZ0EW00.OZ0EW-XSO-SLS-OFC-ID-DESC = OZ0EM001.OZ0EM-XSO-SLS-OFC-ID-DESC;

      OZ0E-12100(); /* Format the data on the map*/
    end
    ;
  end
  ;
  if (OZWREC.OZW-UPD-FLG == " " && 
  converseVar.validationMsgNum == 1)
    converseLib.validationFailed(0);
  end
  ;
  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0EM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  OZ0EM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0EM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (OZWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0EM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    OZ0EM001.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/
    ;
    set OZ0EM001 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse OZ0EM001 ;
  ;
  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/
  ;
  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  OZ0EW00.OZ0EW-SFN = " "; /* reset function switch*/
  OZ0EW00.OZ0EW-SAVE-PAGE = 0; /* reset saved page*/
  OZWREC.OZW-UPD-FLG = " ";
  ;
  COMMAREA.CATOAP = OZ0EM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0EM001.CAITEM; /* Application data*/
end // end OZ0E-12000

// Format the display data
Function OZ0E-12100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/
  ;
  set OZ0EM001 initial; /* M001 input/output area*/
  ;
  OZ0EW00.OZ0EW-IXM = 1; /* Initialize map index*/
  OZ0EW00.OZ0EW-SWF = "N"; /* Format the map switch*/
  ;
  while (OZ0EW00.OZ0EW-IXM < 13)
    ;
    set OZ0EM001.OZ0EMSEL[OZ0EW-IXM] skip, noHighLight;
    ;
    OZ0EW00.OZ0EW-IXM = OZ0EW00.OZ0EW-IXM + 1;
  end
  /* ------------------------------------------------------------*/
  /* If a instruction was added, get the page from temp storage that the*/
  /* instruction is on and display it.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0EW00.OZ0EW-SAVE-PAGE != 0) /* if page saved off*/
    ;
    OZ0EW00.XXXTSPAG = OZ0EW-SAVE-PAGE; /* use saved page*/
    ;
    OZ0E-12110(); /* Obtain temporary storage page*/
    ;
    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/
    ;
    set OZ0EM001.XXXLITPG skip; /* "PAGE" literal*/
    OZ0EM001.XXXTSPAG = OZ0EW00.XXXTSPAG; /* Current page*/
    set OZ0EM001.XXXLITOF skip; /* "OF" literal*/
    OZ0EM001.TA5TSQIX = OZ0EW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
    OZ0EW00.OZ0EW-IXM = 1; /* Initialize map index*/
    while (OZ0EW00.OZ0EW-IXM < 13 /* Until screen is full or*/
     && OZ0EW01.OZ0EW-CUST[OZ0EW-IXM] > 0)
      ;
      set OZ0EM001.OZ0EMSEL[OZ0EW-IXM] normal;
      ;
      /* build the cust-str-dpt string*/
      OZ0EW00.OZ0EW-SV-CUST = OZ0EW01.OZ0EW-CUST[OZ0EW-IXM];

      OZ0EW00.OZ0EW-IX1 = 1;
      while (OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] == "0"
       && OZ0EW-IX1 < 8)
        OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] = " ";
        OZ0EW-IX1 = OZ0EW-IX1 + 1;
      end

      OZ0EW00.OZ0EW-SV-STR = OZ0EW01.OZ0EW-STR[OZ0EW-IXM];
      if (OZ0EW00.OZ0EW-SV-STR == "0000")
        OZ0EW00.OZ0EW-SV-STR = "****";
      end
      OZ0EW00.OZ0EW-SV-DPT = OZ0EW01.OZ0EW-DPT[OZ0EW-IXM];
      if (OZ0EW00.OZ0EW-SV-DPT == "00")
        OZ0EW00.OZ0EW-SV-DPT = "**";
      end
      OZ0EW00.OZ0EW-DOT1 = ".";
      OZ0EW00.OZ0EW-DOT2 = ".";
      OZ0EM001.OZ0EM-CUST-STR-DPT[OZ0EW-IXM] = OZ0EW00.OZ0EW-CUST-STR-DPT;
      ;
      OZ0EW00.OZ0EW-SREP-DISC = OZ0EW01.OZ0EW-SREP-DISC[OZ0EW-IXM];
      OZ0EW00.OZ0EW-SREP-CONF = OZ0EW01.OZ0EW-SREP-CONF[OZ0EW-IXM];
      OZ0EW00.OZ0EW-SLASH1 = "/";
      OZ0EM001.OZ0EM-SREP-CONF-DISC[OZ0EW-IXM] = OZ0EW00.OZ0EW-SREP-CONF-DISC;
      ;
      OZ0EW00.OZ0EW-CUST-DISC = OZ0EW01.OZ0EW-CUST-DISC[OZ0EW-IXM];
      OZ0EW00.OZ0EW-CUST-CONF = OZ0EW01.OZ0EW-CUST-CONF[OZ0EW-IXM];
      OZ0EW00.OZ0EW-SLASH2 = "/";
      OZ0EM001.OZ0EM-CUST-CONF-DISC[OZ0EW-IXM] = OZ0EW00.OZ0EW-CUST-CONF-DISC;
      ;
      OZ0EM001.OZ0EM-SOCD-LTR-TYP-CD[OZ0EW-IXM] = OZ0EW01.OZ0EW-SOCD-LTR-TYP-CD[OZ0EW-IXM];
      ;
      OZ0EM001.OZ0EM-SOCD-LTR-DIST-CD[OZ0EW-IXM] = OZ0EW01.OZ0EW-SOCD-LTR-DIST-CD[OZ0EW-IXM];
      ;
      VOCLCD01.SOCD-LTR-DIST-CD = OZ0EW01.OZ0EW-SOCD-LTR-DIST-CD[OZ0EW-IXM];
      OZ0E-12125();
      OZ0EM001.OZ0EM-SOCD-LTR-DIST-DESC[OZ0EW-IXM] = VOCLCD01.SOCD-LTR-DIST-DESC;
      ;
      OZ0EW00.OZ0EW-IXM = OZ0EW00.OZ0EW-IXM + 1;
                                   /* Increment map index*/
      ;
    end
    ;
    set OZ0EM001.OZ0EMSEL[1] cursor;
  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/
    ;
  else
    if (OZ0EW00.TA5TSQIX > 0) /* Pages were formatted*/
      ;
      if (OZ0EW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
        ;
        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/
        ;
        if (OZ0EW00.OZ0EW-SWU == "Y") /* Current page was changed*/
          ;
          OZ0E-12120(); /* Update temporary storage page*/
          ;
          OZ0EW00.OZ0EW-SWU = "N"; /* Storage update switch*/
          ;
        end
        ;
        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/
        ;
        if (OZ0EW00.XXXTSPAG > OZ0EW00.TA5TSQIX) /* Desired greater highest*/
          OZ0EW00.XXXTSPAG = OZ0EW00.TA5TSQIX; /* Default to highest*/
        end
        ;
        OZ0E-12110(); /* Obtain temporary storage page*/
        ;
      end
      ;
      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/
      ;
      set OZ0EM001.XXXLITPG skip; /* "PAGE" literal*/
      OZ0EM001.XXXTSPAG = OZ0EW00.XXXTSPAG; /* Current page*/
      set OZ0EM001.XXXLITOF skip; /* "OF" literal*/
      OZ0EM001.TA5TSQIX = OZ0EW00.TA5TSQIX; /* Highest page*/
      ;
  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
      OZ0EW00.OZ0EW-IXM = 1; /* Initialize map index*/
      while (OZ0EW00.OZ0EW-IXM < 13 /* Until screen is full or*/
       && OZ0EW01.OZ0EW-CUST[OZ0EW-IXM] > 0)
        ;
        set OZ0EM001.OZ0EMSEL[OZ0EW-IXM] normal;
        ;
        /* build the cust-str-dpt string*/
        OZ0EW00.OZ0EW-SV-CUST = OZ0EW01.OZ0EW-CUST[OZ0EW-IXM];
        ;
        OZ0EW00.OZ0EW-IX1 = 1;
        while (OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] == "0"
         && OZ0EW-IX1 < 8)
          OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] = " ";
          OZ0EW-IX1 = OZ0EW-IX1 + 1;
        end
        ;
        OZ0EW00.OZ0EW-SV-STR = OZ0EW01.OZ0EW-STR[OZ0EW-IXM];
        if (OZ0EW00.OZ0EW-SV-STR == "0000")
          OZ0EW00.OZ0EW-SV-STR = "****";
        end
        OZ0EW00.OZ0EW-SV-DPT = OZ0EW01.OZ0EW-DPT[OZ0EW-IXM];
        if (OZ0EW00.OZ0EW-SV-DPT == "00")
          OZ0EW00.OZ0EW-SV-DPT = "**";
        end
        OZ0EW00.OZ0EW-DOT1 = ".";
        OZ0EW00.OZ0EW-DOT2 = ".";
        OZ0EM001.OZ0EM-CUST-STR-DPT[OZ0EW-IXM] = OZ0EW00.OZ0EW-CUST-STR-DPT;
        ;
        OZ0EW00.OZ0EW-SREP-DISC = OZ0EW01.OZ0EW-SREP-DISC[OZ0EW-IXM];
        OZ0EW00.OZ0EW-SREP-CONF = OZ0EW01.OZ0EW-SREP-CONF[OZ0EW-IXM];
        OZ0EW00.OZ0EW-SLASH1 = "/";
        OZ0EM001.OZ0EM-SREP-CONF-DISC[OZ0EW-IXM] = OZ0EW00.OZ0EW-SREP-CONF-DISC;
        ;
        OZ0EW00.OZ0EW-CUST-DISC = OZ0EW01.OZ0EW-CUST-DISC[OZ0EW-IXM];
        OZ0EW00.OZ0EW-CUST-CONF = OZ0EW01.OZ0EW-CUST-CONF[OZ0EW-IXM];
        OZ0EW00.OZ0EW-SLASH2 = "/";
        OZ0EM001.OZ0EM-CUST-CONF-DISC[OZ0EW-IXM] = OZ0EW00.OZ0EW-CUST-CONF-DISC;
        ;
        OZ0EM001.OZ0EM-SOCD-LTR-TYP-CD[OZ0EW-IXM] = OZ0EW01.OZ0EW-SOCD-LTR-TYP-CD[OZ0EW-IXM];
        ;
        OZ0EM001.OZ0EM-SOCD-LTR-DIST-CD[OZ0EW-IXM] = OZ0EW01.OZ0EW-SOCD-LTR-DIST-CD[OZ0EW-IXM];
        ;
        ;
        VOCLCD01.SOCD-LTR-DIST-CD = OZ0EW01.OZ0EW-SOCD-LTR-DIST-CD[OZ0EW-IXM];
        OZ0E-12125();
        OZ0EM001.OZ0EM-SOCD-LTR-DIST-DESC[OZ0EW-IXM] = VOCLCD01.SOCD-LTR-DIST-DESC;
        ;
        OZ0EW00.OZ0EW-IXM = OZ0EW00.OZ0EW-IXM + 1;
                                   /* Increment map index*/
        ;
      end
      ;
      set OZ0EM001.OZ0EMSEL[1] cursor;
      ;
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/
  OZ0EM001.OZ0EM-CU-CO-ID = OZ0EW00.OZ0EW-CU-CO-ID;
  OZ0EM001.OZ0EM-CU-STOR-ID = OZ0EW00.OZ0EW-CU-STOR-ID;
  OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF = OZ0EW00.OZ0EW-XNX-DEPT-ID-XREF;
  if (OZ0EW00.OZ0EW-CU-CO-ID > 0000000)
    OZ0EM001.OZ0EM-CU-CO-NM-HDR = OZ0EW00.OZ0EW-CU-CO-NM-HDR;
  else
    OZ0EM001.OZ0EM-CU-CO-NM-HDR = "  ";
  end


  OZ0EM001.OZ0EM-GPC-CD = OZ0EW00.OZ0EW-GPC-CD;
  OZ0EM001.OZ0EM-GPC-DESC = OZ0EW00.OZ0EW-GPC-DESC;
  OZ0EM001.OZ0EM-XSO-SLS-OFC-ID = OZ0EW00.OZ0EW-XSO-SLS-OFC-ID;
  if (OZ0EM001.OZ0EM-XSO-SLS-OFC-ID == "00")
    OZ0EM001.OZ0EM-XSO-SLS-OFC-ID = "  ";
  end
  OZ0EM001.OZ0EM-XSO-SLS-OFC-ID-DESC = OZ0EW00.OZ0EW-XSO-SLS-OFC-ID-DESC;
  /*  */
  OZ0EW00.OZ0EW-IXM = 1; /* Initialize line index*/
  ;
  while (OZ0EW00.OZ0EW-IXM < 13) /* * Until end of lines*/
    ;
    if (OZ0EM001.OZ0EM-CUST-STR-DPT[OZ0EW-IXM] > " ")
      set OZ0EM001.OZ0EMSEL[OZ0EW-IXM] defaultColor, underline;
    end
    ;
    OZ0EW00.OZ0EW-IXM = OZ0EW00.OZ0EW-IXM + 1; /* Increment line index*/
    ;
  end
  /*  */
end // end OZ0E-12100

// Read temporary storage page
Function OZ0E-12110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0EW01.XXXTSLEN = 0390; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  if (OZ0EW00.XXXTSPAG == 0)
    OZ0EW00.XXXTSPAG = 1;
  end
  TA5REC.TA5TSQIX = OZ0EW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (OZ0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  OZWREC.XXXPRCNM = "12100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-12110

// Update temporary storage page
Function OZ0E-12120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5FNCCD = "U"; /* Function code*/
  ;
  try
    call "TA0050" (OZ0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  OZWREC.XXXPRCNM = "12120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-12120

// select voclcd01 record
Function OZ0E-12125()

  ;
  try
    call "VOCLCD01" ("S ", SQLCA, VOCLCD01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "12125"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLCD01.VOCLCD01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-12125

// Check attention identifier
Function OZ0E-13000()
  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0EM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0E")
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
        OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0E";
      end

      OZ0E-11100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0EM001.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   
   && converseVar.eventKey not pf3   
   && converseVar.eventKey not pf4   
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf13  /* and PF13 was not pressed*/
   && converseVar.eventKey not pf24) /* and PF24 was not pressed*/
    ;
    OZWREC.XXXPRCNM = "13000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/

  else

    if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0E")
      OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0E";
    end

  end
   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "OZ0EM001"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      if (OZWREC.OZW-APPIDX > 1)
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX - 1;

        if (OZWREC.OZW-APPL[OZW-APPIDX] > "    ")
          COMMAREA.CATOAP = OZWREC.OZW-APPL[OZW-APPIDX];
        else
          COMMAREA.CATOAP = "OZ0A";
        end

      else
        COMMAREA.CATOAP = COMMAREA.CAFROMAP;
      end

  /* MOVE OZWREC.OZW-SV-APPL TO COMMAREA.CATOAP;/* TO application*/
    end
    ;
    OZ0E-11100(); /* Purge temporary storage*/
    ;
    XSOZ-S0001(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If search key changed, get new data*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0EW00.OZ0EW-GPC-CD != OZ0EM001.OZ0EM-GPC-CD
   || OZ0EW00.OZ0EW-CU-CO-ID != OZ0EM001.OZ0EM-CU-CO-ID
   || OZ0EW00.OZ0EW-CU-STOR-ID != OZ0EM001.OZ0EM-CU-STOR-ID
   || OZ0EW00.OZ0EW-XNX-DEPT-ID-XREF != OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF)
    OZ0EW00.OZ0EW-SWR = "Y"; /* Request for data switch*/
    return; /* return to previous process*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Flag edit if pf13 pressed without add/change authority*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf13) /* pf13 pressed*/

    if (OZ0EM001.OZ0EM-GPC-CD == "  "
     || OZ0EM001.OZ0EM-CU-CO-ID == "       "
     || OZ0EM001.OZ0EM-XSO-SLS-OFC-ID == " ")
      set OZ0EM001.OZ0EM-GPC-CD bold, cursor;
      set OZ0EM001.OZ0EM-CU-CO-ID bold;
      set OZ0EM001.OZ0EM-XSO-SLS-OFC-ID bold;
      OZ0EW00.OZ0EW-SWR = "N"; /* Request for data switch*/
      OZ0EW00.OZ0EW-SWF = "N"; /* Request for data switch*/
      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(60); /* PA/PF key pressed is not valid*/
      exit stack; /* Exit to display map*/
    end
    ;
    if (COMMAREA.CAADDFL == "N") /* and no add authority*/
      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(6); /* PA/PF key pressed is not valid*/
      exit stack; /* Exit to display map*/
    end
    ;
    if (OZ0EW00.OZ0EW-GPC-CD == "02" /* gpc = 02*/
     && COMMAREA.CAALVL[2] == "N")   /* but no authority to add*/
      ;
      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(74); /* not authorized*/
      exit stack; /* Exit to display map*/
    end
    ;
    if (OZ0EW00.OZ0EW-GPC-CD == "03" /* gpc = 03*/
     && COMMAREA.CAALVL[3] == "N")   /* but no authority to add*/
      ;
      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(74); /* not authorized*/
      exit stack; /* Exit to display map*/
    end
    ;
  end


  ;
end // end OZ0E-13000

// Reset highlighted fields
Function OZ0E-14000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/
  ;
  set OZ0EM001.OZ0EM-GPC-CD normal; /* Reset gpc*/
  set OZ0EM001.OZ0EM-CU-CO-ID normal; /* Reset customer*/
  set OZ0EM001.OZ0EM-CU-STOR-ID normal; /* Reset store*/
  set OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF normal; /* /Reset dept*/
  set OZ0EM001.OZ0EM-XSO-SLS-OFC-ID normal; /* /Reset sls ofc*/
  ;
  OZ0EW00.OZ0EW-IXM = 1; /* Initialize line index*/
  ;
  while (OZ0EW00.OZ0EW-IXM <= 12 /* * Until end of lines*/
   && OZ0EM001.OZ0EM-CUST-STR-DPT[OZ0EW-IXM] > " ") /* or end of display*/
    ;
    set OZ0EM001.OZ0EMSEL[OZ0EW-IXM] normal; /* Reset select flag*/
    ;
    OZ0EW00.OZ0EW-IXM = OZ0EW00.OZ0EW-IXM + 1; /* Increment line index*/
    ;
  end
  ;
  set OZ0EM001.CATOAP initialAttributes; /* TO application*/
  set OZ0EM001.CAITEM initialAttributes; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
  ;
              /* CHECK FOR USER ? CODE INQUIRY*/
  ;
     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/
  ;
     /* 2) Set map page after all windows displayed*/
  ;
   /* ------------------------------------------------------------*/
  ;
  if (OZ0EM001.OZ0EM-GPC-CD == "?" /* if any ? entered*/
   || OZ0EM001.OZ0EM-XSO-SLS-OFC-ID == "?")
    ;
    if (OZ0EM001.OZ0EM-GPC-CD == "?") /* if ? entered in gpc*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC       "; /* heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc window*/
      end
      ;
       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code and description to the map.                     **/
       /* **********************************************************/
      ;
      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        OZ0EM001.OZ0EM-GPC-CD = XGPTBL.XGPCD[XX0XWPIX];
        OZ0EM001.OZ0EM-GPC-DESC = XGPTBL.XGPDESC[XX0XWPIX];
        set OZ0EM001.OZ0EM-GPC-CD cursor; /* put cursor on gpc cd*/
      else
        OZ0EM001.OZ0EM-GPC-CD = " "; /* clear fields*/
        set OZ0EM001.OZ0EM-GPC-CD cursor; /* put cursor on gpc cd*/
        OZ0EM001.OZ0EM-GPC-DESC = " "; /* clear description*/
      end
      ;
    end
    ;
    if (OZ0EM001.OZ0EM-XSO-SLS-OFC-ID == "?") /* if ? in sales office field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                 SALES OFFICE"; /* heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXSO01(); /* perform xsocd  window*/
      end
      ;
       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the sls office **/
       /* *  code and description to the map                      **/
       /* **********************************************************/
      ;
      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        OZ0EM001.OZ0EM-XSO-SLS-OFC-ID = XSOTBL.XSOCD[XX0XWPIX];
        OZ0EM001.OZ0EM-XSO-SLS-OFC-ID-DESC = XSOTBL.XSOSNM[XX0XWPIX];
        set OZ0EM001.OZ0EM-XSO-SLS-OFC-ID cursor; /* put cursor on sls ofc*/
      else
        OZ0EM001.OZ0EM-XSO-SLS-OFC-ID = " "; /* clear fields*/
        set OZ0EM001.OZ0EM-XSO-SLS-OFC-ID cursor; /* put cursor on sesn cd*/
        OZ0EM001.OZ0EM-XSO-SLS-OFC-ID-DESC = " "; /* clear description*/
      end
    end
    ;
    converseLib.clearScreen();
     /* restore the original map*/
    ;
    OZ0EW00.OZ0EW-SWR = "N"; /* no to request for data*/
    OZ0EW00.OZ0EW-SWF = "N"; /* no to format map*/
    ;
    exit stack; /* go display map*/
    ;
  end
  ;
  ;
end // end OZ0E-14000

// Verify data that was entered
Function OZ0E-15000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0EM001.CAITEM > " ") /* Application data was entered*/
    ;
    OZWREC.XXXPRCNM = "15000"; /* Module identification*/
    set OZ0EM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    ;
  end
  ;
  ;
  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/
    ;
    OZ0E-15100(); /* Verify scroll request*/
    ;
  else
    ;
    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the line.*/
    /* ------------------------------------------------------------*/
    ;
    if (converseVar.eventKey is enter /* Enter was pressed*/
     || converseVar.eventKey is pf24) /* PF24 was pressed*/
      ;
      OZ0E-15200(); /* Verify data in the line*/
      ;
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
  ;
  ;
end // end OZ0E-15000

// Verify scroll request
Function OZ0E-15100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OZ0EW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OZ0EW00.XXXTSPAG >= OZ0EW00.TA5TSQIX) /* and no more pages*/
    ;
    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Indicate an error for any data that was modified.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0EW00.OZ0EW-IXM = 1; /* Initialize line index*/
  ;
  while (OZ0EW00.OZ0EW-IXM < 13) /* Until end of lines*/
    ;
    if (OZ0EM001.OZ0EMSEL[OZ0EW-IXM] != OZ0EW01.OZ0EW-SEL[OZ0EW-IXM])
      ;
      OZWREC.XXXPRCNM = "15100"; /* Module identification*/
      set OZ0EM001.OZ0EMSEL[OZ0EW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(14); /* Field may not change*/
      ;
    end
    ;
    OZ0EW00.OZ0EW-IXM = OZ0EW00.OZ0EW-IXM + 1; /* Decrement line number*/
    ;
  end
  ;
  ;
  ;
end // end OZ0E-15100

// Verify data in the line
Function OZ0E-15200()
  /* ------------------------------------------------------------*/
  /* If selection was entered and is not an "S", indicate that*/
  /* only "S" may be entered to select a line.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0EW00.OZ0EW-IXM = 1; /* initialize index*/
  ;
  while (OZ0EW00.OZ0EW-IXM < 13) /* until end of lines*/
    ;
    if (OZ0EM001.OZ0EMSEL[OZ0EW-IXM] != OZ0EW01.OZ0EW-SEL[OZ0EW-IXM] && 
    OZ0EM001.OZ0EMSEL[OZ0EW-IXM] != "S" &&  /* and is not a "s"*/
    OZ0EM001.OZ0EMSEL[OZ0EW-IXM] != "A" &&  /* and is not a "A"*/
    OZ0EM001.OZ0EMSEL[OZ0EW-IXM] != "D")    /* and is not a "d"*/
      ;
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0EM001.OZ0EMSEL[OZ0EW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(75); /* Only "C", "D", "A" may be entered*/
      ;
    else
      ;
      if (OZ0EM001.OZ0EMSEL[OZ0EW-IXM] == "S" /* if 's' but*/
       && converseVar.eventKey not enter)     /* no enter*/
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0EM001.OZ0EMSEL[OZ0EW-IXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(75);
      else
        if (OZ0EM001.OZ0EMSEL[OZ0EW-IXM] == "A" /* if 'A' but*/
         && converseVar.eventKey not enter)     /* no enter*/
          OZWREC.XXXPRCNM = "15200"; /* Module identification*/
          set OZ0EM001.OZ0EMSEL[OZ0EW-IXM] cursor, bold; /* Highlight*/
          converseLib.validationFailed(75);
        else
          if (OZ0EM001.OZ0EMSEL[OZ0EW-IXM] == "D" /* if 'D' but*/
           && converseVar.eventKey not pf24)      /* no pf24*/
            OZWREC.XXXPRCNM = "15200"; /* Module identification*/
            set OZ0EM001.OZ0EMSEL[OZ0EW-IXM] cursor, bold; /* Highlight*/
            converseLib.validationFailed(66);
          end
        end
      end
      ;
    end
    ;
    OZ0EW00.OZ0EW-IXM = OZ0EW00.OZ0EW-IXM + 1; /* decrement line number*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* check for required fields*/
  /* ------------------------------------------------------------*/
  if (OZ0EM001.OZ0EM-GPC-CD == " " || 
  OZ0EM001.OZ0EM-CU-CO-ID == " " || 
  OZ0EM001.OZ0EM-XSO-SLS-OFC-ID == " ")
    OZ0EW00.OZ0EW-EDIT-FLAG = "Y";
    OZWREC.XXXPRCNM = "15200";
    converseLib.validationFailed(60);
    set OZ0EM001.OZ0EM-GPC-CD bold;
    set OZ0EM001.OZ0EM-CU-CO-ID bold;
    set OZ0EM001.OZ0EM-XSO-SLS-OFC-ID bold;
    if (OZ0EM001.OZ0EM-GPC-CD == " ")
      set OZ0EM001.OZ0EM-GPC-CD cursor, bold;
    else
      if (OZ0EM001.OZ0EM-CU-CO-ID == " ")
        set OZ0EM001.OZ0EM-CU-CO-ID cursor, bold;
      else
        if (OZ0EM001.OZ0EM-XSO-SLS-OFC-ID == " ")
          set OZ0EM001.OZ0EM-XSO-SLS-OFC-ID cursor, bold;
        end
      end
    end
  else
    ;
  /* ------------------------------------------------------------*/
  /* GPC code must be in GPC code table*/
  /* ------------------------------------------------------------*/
    ;
    if (OZ0EM001.OZ0EM-GPC-CD == " ") /* code is blank - flag edit*/
      OZ0EW00.OZ0EW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0EM001.OZ0EM-GPC-CD cursor, bold; /* Highlight*/
      set OZ0EM001.OZ0EM-GPC-DESC skip, invisible; /* darken desc*/
      converseLib.validationFailed(22); /* GPC code invalid*/
      ;
    else
      if (OZ0EM001.OZ0EM-GPC-CD in XGPTBL.XGPCD) /* code in table*/
        ;
   /* get description*/
        if (OZ0EM001.OZ0EM-GPC-CD in XGPTBL.XGPCD)
          OZ0EM001.OZ0EM-GPC-DESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
        end
        set OZ0EM001.OZ0EM-GPC-DESC skip;
        ;
      else
        OZ0EW00.OZ0EW-EDIT-FLAG = "Y"; /* yes to edit flag*/
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0EM001.OZ0EM-GPC-CD cursor, bold; /* Highlight*/
        set OZ0EM001.OZ0EM-GPC-DESC skip, invisible; /* darken desc*/
        converseLib.validationFailed(22); /* GPC code invalid*/
        ;
      end
      ;
    end
    ;
    if (OZ0EW00.OZ0EW-EDIT-FLAG == "Y") /* edit flag is on - clear dtls*/
      ;
      OZ0EW00.OZ0EW-IXM = 1; /* initialize index*/
      ;
      while (OZ0EW00.OZ0EW-IXM < 13) /* until end of lines*/
        ;
        OZ0EM001.OZ0EMSEL[OZ0EW-IXM] = " ";
        set OZ0EM001.OZ0EMSEL[OZ0EW-IXM] skip, invisible;
        OZ0EM001.OZ0EM-CUST-STR-DPT[OZ0EW-IXM] = " ";
        OZ0EM001.OZ0EM-CUST-CONF-DISC[OZ0EW-IXM] = " ";
        OZ0EM001.OZ0EM-SREP-CONF-DISC[OZ0EW-IXM] = " ";
        OZ0EM001.OZ0EM-SOCD-LTR-TYP-CD[OZ0EW-IXM] = " ";
        OZ0EM001.OZ0EM-SOCD-LTR-DIST-CD[OZ0EW-IXM] = " ";
        OZ0EM001.OZ0EM-SOCD-LTR-DIST-DESC[OZ0EW-IXM] = " ";
        ;
        OZ0EW00.OZ0EW-IXM = OZ0EW00.OZ0EW-IXM + 1; /* increment line number*/
        ;
      end
      ;
      OZ0EW00.OZ0EW-EDIT-FLAG = "N"; /* reset flag*/
      ;
    end
  end
  ;
end // end OZ0E-15200

// Process valid input request
Function OZ0E-16000()
  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display*/
  /* ------------------------------------------------------------*/
  ;
  OZ0EW00.OZ0EW-SWF = "Y"; /* format the map switch*/
  ;
   /* -----------------------------------------------------------*/
   /* if pf13 save heading fields move 2 to map to display*/
   /* -----------------------------------------------------------*/
  /* ------------------------------------------------------------*/
  /* If search key changed, get new data*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0EW00.OZ0EW-GPC-CD != OZ0EM001.OZ0EM-GPC-CD
   || OZ0EW00.OZ0EW-CU-CO-ID != OZ0EM001.OZ0EM-CU-CO-ID
   || OZ0EW00.OZ0EW-CU-STOR-ID != OZ0EM001.OZ0EM-CU-STOR-ID
   || OZ0EW00.OZ0EW-XNX-DEPT-ID-XREF != OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF
   || OZ0EW00.OZ0EW-XSO-SLS-OFC-ID != OZ0EM001.OZ0EM-XSO-SLS-OFC-ID)
    OZ0EW00.OZ0EW-SWR = "Y"; /* request for data switch*/
    OZ0EW00.XXXTSPAG = 0; /* zero out temp storage*/
  /* move map input to working storage*/
    OZ0EW00.OZ0EW-GPC-CD = OZ0EM001.OZ0EM-GPC-CD;
    OZ0EW00.OZ0EW-CU-CO-ID = OZ0EM001.OZ0EM-CU-CO-ID;
    OZ0EW00.OZ0EW-CU-STOR-ID = OZ0EM001.OZ0EM-CU-STOR-ID;
    OZ0EW00.OZ0EW-XSO-SLS-OFC-ID = OZ0EM001.OZ0EM-XSO-SLS-OFC-ID;
    OZ0EW00.OZ0EW-XNX-DEPT-ID-XREF = OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF;
    if (converseVar.eventKey not pf13)
      return;
    end
  end
  ;
  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Scroll back requested*/
    ;
    OZ0EW00.XXXTSPAG = OZ0EW00.XXXTSPAG - 1; /* Decrement page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8) /* Scroll forward requested*/
    ;
    OZ0EW00.XXXTSPAG = OZ0EW00.XXXTSPAG + 1; /* Increment page number*/
    ;
    return; /* Return to previous process*/
    ;
  end

  ;
  /* -----------------------------------------------------------*/
  /* PF24 action*/
  /* -----------------------------------------------------------*/
  if (converseVar.eventKey is pf24) /* PF24 pressed*/

    if ("D" in OZ0EM001.OZ0EMSEL)
      OZ0EW-IXM = sysVar.arrayIndex;
      OZ0EW-IXX = sysVar.arrayIndex;

      if (OZ0EW00.OZ0EW-FIRST-DEL-REQ == "N") /* not first request of delete*/
        OZ0E-16100(); /* delete the row*/
        OZ0EW00.OZ0EW-SWF = "Y";
        OZ0EW00.OZ0EW-SWR = "Y";
        OZ0EW00.OZ0EW-FIRST-DEL-REQ = "Y";
        converseLib.validationFailed(77);
        exit stack;
      else
        set OZ0EM001.OZ0EMSEL[OZ0EW-IXM] cursor;
        OZWREC.XXXPRCNM = "16000";
        converseLib.validationFailed(62);
        OZ0EW00.OZ0EW-FIRST-DEL-REQ = "N";
        exit stack;
      end
    else
      OZWREC.XXXPRCNM = "16000";
      converseLib.validationFailed(66); /* enter 'd' to select*/
      exit stack;
    end
  end

  /* ------------------------------------------------------------*/
  /* Save the select fields and clear the map input/output area.*/
  /* ------------------------------------------------------------*/

  OZ0EW00.OZ0EW-UPDATE-SW = "N"; /* turn off updated switch*/

  if (converseVar.eventKey is enter)

    OZ0EW00.OZ0EW-SWF = "Y"; /* Format the map switch*/

    OZ0EW00.OZ0EW-IXM = 1; /* Initialize line index*/
    OZ0EW00.OZ0EW-SWU = "N"; /* reset switch*/
    ;
    while (OZ0EW00.OZ0EW-IXM <= 12 /* Until end of lines*/
     && OZ0EW00.OZ0EW-SWU != "Y") /* or 'S' is found*/
      ;
      if (OZ0EM001.OZ0EMSEL[OZ0EW-IXM] != OZ0EW01.OZ0EW-SEL[OZ0EW-IXM])
        ;
        OZ0EW00.OZ0EW-SWU = "Y"; /* indicate 's' was found*/
        if (OZ0EM001.OZ0EMSEL[OZ0EW-IXM] == "S")
          OZ0EW00.OZ0EW-SFN = "S"; /* 'change' function*/
          OZWREC.WC-FLG = "S"; /* save map flag to ozwrec*/
        else
          if (OZ0EM001.OZ0EMSEL[OZ0EW-IXM] == "A")
            OZ0EW00.OZ0EW-SFN = "A"; /* 'change' function*/
            OZWREC.WC-FLG = "A"; /* save map flag to ozwrec*/
          end
        end
        OZ0EW00.OZ0EW-SWF = "Y"; /* yes format map*/
        OZ0EW00.OZ0EW-SWD = "2"; /* Map to be displayed switch*/
        OZ0EW00.OZ0EW-IXX = OZ0EW00.OZ0EW-IXM;
   /* selected data to w/s*/
        OZ0EW02.OZ0EW-GROUP-DATA = OZ0EW01.OZ0EW-GROUP[OZ0EW-IXM];
        ;
      end
      ;
      OZ0EW00.OZ0EW-IXM = OZ0EW00.OZ0EW-IXM + 1; /* Increment line index*/
      ;
    end
  end

  ;
  if (converseVar.eventKey is pf13) /* pf13*/
    OZ0EW00.OZ0EW-SFN = "A"; /* 'add' function*/
    OZ0EW00.OZ0EW-SWD = "2"; /* Map to be displayed switch*/
    OZ0EW00.OZ0EW-SWF = "Y"; /* yes format map*/
    OZWREC.WC-FLG = "A"; /* save map flag to ozwrec*/
    OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD = "US";
    OZ0EW02.OZ0EW-GPC-CD = OZ0EM001.OZ0EM-GPC-CD; /* gpc to w/s*/
    OZ0EW02.OZ0EW-GPC-DESC = OZ0EM001.OZ0EM-GPC-DESC; /* desc to w/s*/
    OZ0EW02.OZ0EW-CUST = OZ0EM001.OZ0EM-CU-CO-ID;
    if (OZ0EM001.OZ0EM-CU-STOR-ID > 0)
      OZ0EW02.OZ0EW-STR = OZ0EM001.OZ0EM-CU-STOR-ID;
    end
    if (OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF > 0)
      OZ0EW02.OZ0EW-DPT = OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF;
    end
    OZ0EW02.OZ0EW-XSO-SLS-OFC-ID = OZ0EM001.OZ0EM-XSO-SLS-OFC-ID;
    return;
    ;
  end
  ;
end // end OZ0E-16000

// delete old row
Function OZ0E-16100()
  set VOCLDC01 empty;
  OZ0EW00.OZ0EW-SEL-CUST-STR-DPT-CHA = OZ0EM001.OZ0EM-CUST-STR-DPT[OZ0EW-IXX];
  ;
  OZ0EW-SEL-CUST = OZ0EW00.OZ0EW-SEL-CUST-CHA;
  VOCLDC01.KUCCOID = OZ0EW00.OZ0EW-SEL-CUST;
  ;
  if (OZ0EW00.OZ0EW-SEL-STR-CHA == "****")
    OZ0EW00.OZ0EW-SEL-STR = 0;
  else
    OZ0EW00.OZ0EW-SEL-STR = OZ0EW00.OZ0EW-SEL-STR-CHA;
  end
  VOCLDC01.KUMSTRID = OZ0EW00.OZ0EW-SEL-STR;
  ;
  if (OZ0EW00.OZ0EW-SEL-DPT-CHA == "**")
    OZ0EW00.OZ0EW-SEL-DPT = 0;
  else
    OZ0EW00.OZ0EW-SEL-DPT = OZ0EW00.OZ0EW-SEL-DPT-CHA;
  end
  VOCLDC01.XNXCD = OZ0EW00.OZ0EW-SEL-DPT;
  ;
  VOCLDC01.XGPCD = OZ0EM001.OZ0EM-GPC-CD;
  VOCLDC01.XSOCD = OZ0EM001.OZ0EM-XSO-SLS-OFC-ID;

  OZ0E-16120(); /* delete VOCLDC01 record*/
  ;
end // end OZ0E-16100

// add new vocldo01 row
Function OZ0E-16120()
  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VOCLDC01" ("D ", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "16120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-16120

// Process to add a new row
Function OZ0E-20000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Format the map output area and display the map.*/
  /* 2) Check the attention identifier used to respond.*/
  /* 3) Reset highlighted fields to normal intensity.*/
  /* 4) Verify the data that was entered.*/
  /* 5) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0E-22000(); /* Format and display the map*/
  ;
  OZ0E-23000(); /* Check attention identifier*/
  ;
  OZ0E-24000(); /* Reset fields to normal intensity*/
  ;
  OZ0E-25000(); /* Verify the entered data*/
  ;
  OZ0E-26000(); /* Process valid input request*/
  ;
  ;
end // end OZ0E-20000

// Select set and open cursor
Function OZ0E-21300()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  ;
  set VOCLDC01 empty; /* Clear row storage area*/
  ;
  /* Use values entered on map to select the data*/
  ;
  ;
  VOCLDC01.XGPCD = OZ0EM002.OZ0EM-GPC-CD;
  VOCLDC01.KUCCOID = OZ0EW00.OZ0EW-SV-CUST-NUM;
  VOCLDC01.KUMSTRID = OZ0EW00.OZ0EW-SV-STR-NUM;
  VOCLDC01.XNXCD = OZ0EW00.OZ0EW-SV-DPT-NUM;
  VOCLDC01.XSOCD = OZ0EM002.OZ0EM-XSO-SLS-OFC-ID;
  ;
  ;
  try
    call "VOCLDC01" ("S1", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* Select tbl set*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "21300"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01.VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-21300

// Fetch next row in the cursor
Function OZ0E-21400()
  /* ------------------------------------------------------------*/
  /* Fetch the next row to display from the table.*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VOCLDC01" ("N1", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/
  ;
  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      ;
      OZ0EW00.OZ0EW-SWC = "Y"; /* Indicate end of cursor*/
      ;
      return; /* Return to previous process*/
      ;
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "21400"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01.VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-21400

// Format and converse the map
Function OZ0E-22000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0EW00.OZ0EW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/
    ;
    if (OZ0EW00.OZ0EW-SWF == "Y") /* Map must be formatted*/
      OZ0E-22100(); /* Format the data on the map*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0EM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  ;
  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (OZWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0EM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    OZ0EM002.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/
    ;
    set OZ0EM002 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse OZ0EM002 ;
  ;
  /* ------------------------------------------------------------*/
  /* Clear the message fields*/
  /* ------------------------------------------------------------*/
  ;
  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  OZ0EW00.OZ0EW-UPDATE-SW = "N"; /* reset update-sw*/
  ;
  ;
end // end OZ0E-22000

// Format the display data
Function OZ0E-22100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/
  OZ0EW00.OZ0EW-DIST-TYPE = OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD;

  set OZ0EM002 initial; /* M002 input/output area*/
  ;
  set VOCBUY01 empty;
  set VOCBAD01 empty;
  set VOCACD01 empty;
  ;
  OZ0EW00.OZ0EW-SWF = "N"; /* Format the map switch*/
  ;
  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CAFROMAP == "OZ0D") /* not coming from main menu;*/
    OZ0E-22150(); /* load map from ozwrec*/
  else
    ;
    OZ0EM002.OZ0EM-CU-CO-NM-HDR = OZ0EW00.OZ0EW-CU-CO-NM-HDR;
    OZ0EM002.OZ0EM-GPC-CD = OZ0EW00.OZ0EW-GPC-CD;
    OZ0EM002.OZ0EM-GPC-DESC = OZ0EW00.OZ0EW-GPC-DESC;
    OZ0EM002.OZ0EM-XSO-SLS-OFC-ID = OZ0EW00.OZ0EW-XSO-SLS-OFC-ID;
    OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC = OZ0EW00.OZ0EW-XSO-SLS-OFC-ID-DESC;

    OZ0EM002.OZ0EM-CUST-CONF = OZ0EW02.OZ0EW-CUST-CONF;
    OZ0EM002.OZ0EM-CUST-DISC = OZ0EW02.OZ0EW-CUST-DISC;
    OZ0EM002.OZ0EM-SREP-CONF = OZ0EW02.OZ0EW-SREP-CONF;
    OZ0EM002.OZ0EM-SREP-DISC = OZ0EW02.OZ0EW-SREP-DISC;
    OZ0EM002.OZ0EM-GROUP-BY = OZ0EW02.OZ0EW-SOCD-LTR-TYP-CD;
    if (OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD != " ")
      VOCLCD01.SOCD-LTR-DIST-CD = OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD;
      OZ0E-12125();
      OZ0EM002.OZ0EM-SOCD-LTR-DIST-DESC = VOCLCD01.SOCD-LTR-DIST-DESC;
    end

    if (converseVar.eventKey is enter)

      OZ0EW00.OZ0EW-SV-CUST = OZ0EW02.OZ0EW-CUST;
      OZ0EW00.OZ0EW-IX1 = 1;
      while (OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] == "0"
       && OZ0EW-IX1 < 8)
        OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] = " ";
        OZ0EW-IX1 = OZ0EW-IX1 + 1;
      end
      OZ0EM002.OZ0EM-CU-CO-ID = OZ0EW00.OZ0EW-SV-CUST;

      if (OZ0EW02.OZ0EW-STR == 0)
        OZ0EM002.OZ0EM-CU-STOR-ID = "****";
      else
        OZ0EM002.OZ0EM-CU-STOR-ID = OZ0EW02.OZ0EW-STR;
      end
      if (OZ0EW02.OZ0EW-DPT == 0)
        OZ0EM002.OZ0EM-DEPT-ID-XREF = "**";
      else
        OZ0EM002.OZ0EM-DEPT-ID-XREF = OZ0EW02.OZ0EW-DPT;
      end

      OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD = OZ0EW02.OZ0EW-SOCD-LTR-DIST-CD;
      OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL = OZ0EW02.OZ0EW-SOCD-LTR-RVW-FL;

      OZ0EW00.OZ0EW-BUYER-ID = OZ0EW02.OZ0EW-SOCD-BUYER-ID;
      VOCBUY01.SOCD-CUST-BUYER-ID = OZ0EW02.OZ0EW-SOCD-BUYER-ID;
      OZ0E-32125(); /* read customer buyer*/
      OZ0EM002.OZ0EM-XXX-FRST-NM = VOCBUY01.XXXFSTNM;
      OZ0EM002.OZ0EM-XXX-LAST-NM = VOCBUY01.XXXLSTNM;
      ;
      if (VOCBUY01.SOCD-ADDR-TYP-CD == "BA")
        VOCBAD01.SOCD-CUST-BUYER-ID = OZ0EW02.OZ0EW-SOCD-BUYER-ID;
        OZ0E-32150(); /* read  customer buyer address*/
        OZ0EM002.OZ0EM-XXX-ADDR1 = VOCBAD01.XXX-ADDR1;
        OZ0EM002.OZ0EM-XXX-ADDR2 = VOCBAD01.XXX-ADDR2;
        OZ0EM002.OZ0EM-XXX-CITY = VOCBAD01.XXX-CITY;
        OZ0EM002.OZ0EM-XST-ST-CD = VOCBAD01.XST-ST-CD;
        OZ0EM002.OZ0EM-XXX-ZIP = VOCBAD01.XXX-ZIP;
      else
        if (VOCBUY01.SOCD-ADDR-TYP-CD == "CO" ||  /* company*/
        VOCBUY01.SOCD-ADDR-TYP-CD == "CR" ||      /* correspondence*/
        VOCBUY01.SOCD-ADDR-TYP-CD == "BG")        /* bill group*/
          KUCREC.KUCCOID = VOCBUY01.KUCCOID;
          OZ0E-32120(); /* read company*/
          KULREC.KUCCOID = KUCREC.KUCCOID;
          if (VOCBUY01.SOCD-ADDR-TYP-CD == "CO")
            KULREC.KULAAID = KUCREC.KUCCOAID;
          else
            if (VOCBUY01.SOCD-ADDR-TYP-CD == "CR")
              KULREC.KULAAID = KUCREC.KUCCCAID;
            else
              if (VOCBUY01.SOCD-ADDR-TYP-CD == "BG")
                KULREC.KULAAID = KUCREC.KUCBLAID;
              end
            end
          end
          OZ0E-32130(); /* read customer address*/
          OZ0E-32160(); /* format address from customer address*/
        else

          if (VOCBUY01.SOCD-ADDR-TYP-CD == "ST" ||  /* store*/
          VOCBUY01.SOCD-ADDR-TYP-CD == "SG")        /* ship group*/
            KUMREC.KUCCOID = VOCBUY01.KUCCOID;
            KUMREC.KUMSTRID = VOCBUY01.KUMSTRID;
            OZ0E-32140(); /* read store*/
            if (VOCBUY01.SOCD-ADDR-TYP-CD == "ST")
              KULAAID = KUMREC.KUMSTAID;
            else
              KULAAID = KUMREC.KUMSHAID;
            end
            KULREC.KUCCOID = KUMREC.KUCCOID;
            OZ0E-32130(); /* read customer address*/
            OZ0E-32160(); /* format address from customer address*/
          end
        end
      end

      VOCACD01.SOCD-ADDR-TYP-CD = VOCBUY01.SOCD-ADDR-TYP-CD;
      OZ0E-32175(); /* read address type code*/

      OZ0EM002.OZ0EM-SOCD-ADDR-TYPE-DESC = VOCACD01.SOCD-ADDR-TYP-DESC;
    else

      OZ0EM002.OZ0EM-CU-CO-ID = OZ0EM001.OZ0EM-CU-CO-ID;
      if (OZ0EM002.OZ0EM-CU-CO-ID == "0000000")
        OZ0EM002.OZ0EM-CU-CO-ID = " ";
      end

      OZ0EW00.OZ0EW-SV-CUST = OZ0EM002.OZ0EM-CU-CO-ID;
      OZ0EW00.OZ0EW-IX1 = 1;
      while (OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] == "0"
       && OZ0EW-IX1 < 8)
        OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] = " ";
        OZ0EW-IX1 = OZ0EW-IX1 + 1;
      end
      OZ0EM002.OZ0EM-CU-CO-ID = OZ0EW00.OZ0EW-SV-CUST;
      OZ0EM002.OZ0EM-CU-STOR-ID = OZ0EM001.OZ0EM-CU-STOR-ID;
      OZ0EM002.OZ0EM-DEPT-ID-XREF = OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF;

      OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD = OZ0EW00.OZ0EW-DIST-TYPE;
      OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL = "N";
    end
    ;

  end
end // end OZ0E-22100

// Format map from ozwrec
Function OZ0E-22150()
  /* ------------------------------------------------------------*/
  /* Format the header on the map from the ozwrec.*/
  /* ------------------------------------------------------------*/
  ;
  set VOCBUY01 empty;
  set VOCBAD01 empty;
  set VOCACD01 empty;
  set KUMREC empty;
  set KUCREC empty;
  set KULREC empty;
  ;
  OZ0EM002.OZ0EM-GPC-CD = OZWREC.XGPCD;
  OZ0EM002.OZ0EM-GPC-DESC = OZWREC.XGPDESC;
  ;
  OZ0EW00.OZ0EW-SV-CUST-NUM = OZWREC.KUCCOID;
  OZ0EM002.OZ0EM-CU-CO-ID = OZ0EW00.OZ0EW-SV-CUST-NUM;
  OZ0EW00.OZ0EW-SV-CUST = OZ0EM002.OZ0EM-CU-CO-ID;
  OZ0EW00.OZ0EW-IX1 = 1;
  while (OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] == "0")
    OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] = " ";
    OZ0EW00.OZ0EW-IX1 = OZ0EW00.OZ0EW-IX1 + 1;
  end
  OZ0EM002.OZ0EM-CU-CO-ID = OZ0EW00.OZ0EW-SV-CUST;
  ;
  if (OZ0EM002.OZ0EM-CU-CO-ID == "0000000")
    OZ0EM002.OZ0EM-CU-CO-ID = " ";
  end
  ;
  OZ0EW00.OZ0EW-CUST-STR-DPT = OZWREC.CUST-STR-DPT;
  ;
  OZ0EM002.OZ0EM-CU-STOR-ID = OZ0EW00.OZ0EW-SV-STR;
  OZ0EM002.OZ0EM-DEPT-ID-XREF = OZ0EW00.OZ0EW-SV-DPT;
  if (OZ0EM002.OZ0EM-CU-STOR-ID == "0"
   || OZ0EM002.OZ0EM-CU-STOR-ID == "0000"
   || OZ0EM002.OZ0EM-CU-STOR-ID == " ")
    OZ0EM002.OZ0EM-CU-STOR-ID = "****";
  end
  ;
  if (OZ0EW00.OZ0EW-SV-STR == "****")
    OZ0EW00.OZ0EW-SV-STR-NUM = 0;
  else
    OZ0EW00.OZ0EW-SV-STR-NUM = OZ0EW00.OZ0EW-SV-STR;
  end
  ;
  if (OZ0EM002.OZ0EM-DEPT-ID-XREF == "00"
   || OZ0EM002.OZ0EM-DEPT-ID-XREF == "0"
   || OZ0EM002.OZ0EM-DEPT-ID-XREF == " ")
    OZ0EM002.OZ0EM-DEPT-ID-XREF = "**";
  end
  ;
  if (OZ0EW00.OZ0EW-SV-DPT == "**")
    OZ0EW00.OZ0EW-SV-DPT-NUM = 0;
  else
    OZ0EW00.OZ0EW-SV-DPT-NUM = OZ0EW00.OZ0EW-SV-DPT;
  end
  ;
  OZ0EM002.OZ0EM-CU-CO-NM-HDR = OZWREC.KUCCONM;
  OZ0EM002.OZ0EM-XSO-SLS-OFC-ID = OZWREC.XSOCD;
  OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC = OZWREC.XSOSNM;
  /*  */
  /* read vocldc01 for other fields*/
  OZ0E-21300();
  OZ0E-21400();
  ;
  if (VOCLDC01.SOCD-SREP-REQ-CD == "NR")
    OZ0EM002.OZ0EM-SREP-CONF = "N";
    OZ0EM002.OZ0EM-SREP-DISC = "N";
  else
    if (VOCLDC01.SOCD-SREP-REQ-CD == "CO")
      OZ0EM002.OZ0EM-SREP-CONF = "Y";
      OZ0EM002.OZ0EM-SREP-DISC = "N";
    else
      if (VOCLDC01.SOCD-SREP-REQ-CD == "DO")
        OZ0EM002.OZ0EM-SREP-CONF = "N";
        OZ0EM002.OZ0EM-SREP-DISC = "Y";
      else
        if (VOCLDC01.SOCD-SREP-REQ-CD == "CD")
          OZ0EM002.OZ0EM-SREP-CONF = "Y";
          OZ0EM002.OZ0EM-SREP-DISC = "Y";
        end
      end
    end
  end
  ;
  if (VOCLDC01.SOCD-CUST-REQ-CD == "NR")
    OZ0EM002.OZ0EM-CUST-CONF = "N";
    OZ0EM002.OZ0EM-CUST-DISC = "N";
  else
    if (VOCLDC01.SOCD-CUST-REQ-CD == "CO")
      OZ0EM002.OZ0EM-CUST-CONF = "Y";
      OZ0EM002.OZ0EM-CUST-DISC = "N";
    else
      if (VOCLDC01.SOCD-CUST-REQ-CD == "DO")
        OZ0EM002.OZ0EM-CUST-CONF = "N";
        OZ0EM002.OZ0EM-CUST-DISC = "Y";
      else
        if (VOCLDC01.SOCD-CUST-REQ-CD == "CD")
          OZ0EM002.OZ0EM-CUST-CONF = "Y";
          OZ0EM002.OZ0EM-CUST-DISC = "Y";
        end
      end
    end
  end
  ;
  OZ0EM002.OZ0EM-GROUP-BY = VOCLDC01.SOCD-LTR-TYP-CD;
  OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD = VOCLDC01.SOCD-LTR-DIST-CD;
  if (OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD != " ")
    VOCLCD01.SOCD-LTR-DIST-CD = OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD;
    OZ0E-12125(); /* read distribution code*/
    OZ0EM002.OZ0EM-SOCD-LTR-DIST-DESC = VOCLCD01.SOCD-LTR-DIST-DESC;
  end
  ;
  OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL = VOCLDC01.SOCD-LTR-RVW-FL;
  if (OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL == " ")
    OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL = "N";
  end
  ;
  /* ---------------------------------------------------------*/
  /* format the buyer address*/
  /* ---------------------------------------------------------*/
  VOCBUY01.SOCD-CUST-BUYER-ID = OZ0EW00.OZ0EW-BUYER-ID;
  OZ0E-32125(); /* read vocbuy01*/
  OZ0EM002.OZ0EM-XXX-FRST-NM = VOCBUY01.XXXFSTNM;
  OZ0EM002.OZ0EM-XXX-LAST-NM = VOCBUY01.XXXLSTNM;
  ;
  if (VOCBUY01.SOCD-ADDR-TYP-CD == "BA") /* use buyer address*/
    VOCBAD01.SOCD-CUST-BUYER-ID = OZ0EW00.OZ0EW-BUYER-ID;
    OZ0E-32150(); /* read vocbad01*/
    OZ0EM002.OZ0EM-XXX-ADDR1 = VOCBAD01.XXX-ADDR1;
    OZ0EM002.OZ0EM-XXX-ADDR2 = VOCBAD01.XXX-ADDR2;
    OZ0EM002.OZ0EM-XXX-CITY = VOCBAD01.XXX-CITY;
    OZ0EM002.OZ0EM-XST-ST-CD = VOCBAD01.XST-ST-CD;
    OZ0EM002.OZ0EM-XXX-ZIP = VOCBAD01.XXX-ZIP;
  else
    if (VOCBUY01.SOCD-ADDR-TYP-CD == "CO" ||  /* company*/
    VOCBUY01.SOCD-ADDR-TYP-CD == "CR" ||      /* correspondence*/
    VOCBUY01.SOCD-ADDR-TYP-CD == "BG")        /* bill group*/
      KUCREC.KUCCOID = VOCBUY01.KUCCOID;
      OZ0E-32120(); /* read company*/
      KULREC.KUCCOID = KUCREC.KUCCOID;
      if (VOCBUY01.SOCD-ADDR-TYP-CD == "CO")
        KULREC.KULAAID = KUCREC.KUCCOAID;
      else
        if (VOCBUY01.SOCD-ADDR-TYP-CD == "CR")
          KULREC.KULAAID = KUCREC.KUCCCAID;
        else
          if (VOCBUY01.SOCD-ADDR-TYP-CD == "BG")
            KULREC.KULAAID = KUCREC.KUCBLAID;
          end
        end
      end
      OZ0E-32130(); /* read customer address*/
      OZ0E-32160(); /* format address from customer address*/
    else
      if (VOCBUY01.SOCD-ADDR-TYP-CD == "ST" ||  /* store*/
      VOCBUY01.SOCD-ADDR-TYP-CD == "SG")        /* shipgroup*/
        KUMREC.KUCCOID = VOCBUY01.KUCCOID;
        KUMREC.KUMSTRID = VOCBUY01.KUMSTRID;
        OZ0E-32140(); /* /read store*/
        KULREC.KUCCOID = KUMREC.KUCCOID;
        if (VOCBUY01.SOCD-ADDR-TYP-CD == "ST")
          KULREC.KULAAID = KUMREC.KUMSTAID;
        else
          KULREC.KULAAID = KUMREC.KUMSHAID;
        end
        OZ0E-32130(); /* read customer address*/
        OZ0E-32160(); /* format address from customer address*/
      end
    end
  end
  ;
  VOCACD01.SOCD-ADDR-TYP-CD = VOCBUY01.SOCD-ADDR-TYP-CD;
  OZ0E-32175(); /* read address type code*/
  OZ0EM002.OZ0EM-SOCD-ADDR-TYPE-DESC = VOCACD01.SOCD-ADDR-TYP-DESC;
  ;
  /* place cursor on the first blank field*/
  ;
  if (OZ0EM002.OZ0EM-GPC-CD == " ")
    set OZ0EM002.OZ0EM-GPC-CD cursor;
  else
    if (OZ0EM002.OZ0EM-CU-CO-ID == " ")
      set OZ0EM002.OZ0EM-CU-CO-ID cursor;
    else
      if (OZ0EM002.OZ0EM-CU-STOR-ID == " ")
        set OZ0EM002.OZ0EM-CU-STOR-ID cursor;
      else
        if (OZ0EM002.OZ0EM-DEPT-ID-XREF == " ")
          set OZ0EM002.OZ0EM-DEPT-ID-XREF cursor;
        else
          if (OZ0EM002.OZ0EM-XSO-SLS-OFC-ID == " ")
            set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID cursor;
          else
            set OZ0EM002.OZ0EM-CUST-CONF cursor;
          end
        end
      end
    end
  end

  OZWREC.XXXPRCNM = "22150";
  converseLib.validationFailed(71);
  ;
end // end OZ0E-22150

// Check attention identifier
Function OZ0E-23000()
  /* ------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* If a request for data is pending, reset that request.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    if (OZ0EW00.OZ0EW-SWR == "Y") /* Request for data*/
      set OZ0EW02 empty; /* M002 display storage*/
    end
    ;
    OZ0EW00.OZ0EW-SWF = "Y"; /* Format the map switch*/
    OZ0EW00.OZ0EW-SWR = "N"; /* Request for data switch*/
    ;
    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  /* ------------------------------------------------------------*/
  /* If HELP, exit to the previous level or exit to the Master*/
  /* Menu was requested, exit to another application.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "OZ0EM002"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      OZ0EW00.OZ0EW-SWD = "1"; /* Map to be displayed switch*/
      OZ0EW00.OZ0EW-SWF = "Y"; /* Format the map switch*/

      if (COMMAREA.CAFROMAP == "OZ0D" ||  /* went to the buyer screen*/
      OZ0EW00.OZ0EW-BUYER-ID == 0)        /* didn't get a buyer*/
        OZ0E-26300(); /* delete rec on screen*/

        if (SQLCA.VAGen_SQLCODE == +100)
          OZWREC.XXXPRCNM = "23000"; /* Module identification*/
          converseLib.validationFailed(72); /* PF key pressed is not valid*/
          OZ0EW00.OZ0EW-SWR = "N"; /* Format the map switch*/
        end

      end

      COMMAREA.CAFROMAP = "OZ0E";
  /* MOVE OZWREC.OZW-SV-APPL TO COMMAREA.CAFROMAP;*/

      set OZ0EW02 empty;
      exit stack; /* Exit to display map*/

    end

    if (converseVar.eventKey is pf5) /* PF5 was pressed*/

      OZ0E-25200(); /* screen edits*/
      OZ0E-26100(); /* add record on scrn to access upon rtn*/
      COMMAREA.CATOAP = "OZ0D"; /* tran for buyer screen*/
      OZ0E-23200(); /* Build ozwrec to pass*/
      XSOZ-S0001(); /* Exit to another application*/
      OZ0EW00.OZ0EW-SWD = "2"; /* Map to be displayed switch*/

      exit stack; /* Exit to display map*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid attention identifier was used to*/
  /* invoke the transaction.  Display an error message to the*/
  /* user if the PF key used is not supported.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   
   && converseVar.eventKey not pf3   
   && converseVar.eventKey not pf5   
   && converseVar.eventKey not pf24) /* and PF24 was not pressed*/

    OZWREC.XXXPRCNM = "23000"; /* Module identification*/
    converseLib.validationFailed(4); /* PF key pressed is not valid*/

    exit stack; /* Exit to display map*/

  end

  ;
end // end OZ0E-23000

// BUILD OZWREC
Function OZ0E-23200()
  OZ0EW00.OZ0EW-SEL-CUST = OZ0EM002.OZ0EM-CU-CO-ID;
  OZ0EW00.OZ0EW-SV-CUST = OZ0EW00.OZ0EW-SEL-CUST;
  if (OZ0EM002.OZ0EM-DEPT-ID-XREF == 0)
    OZ0EW00.OZ0EW-SV-DPT = "**";
  else
    OZ0EW00.OZ0EW-SV-DPT = OZ0EM002.OZ0EM-DEPT-ID-XREF;
  end
  if (OZ0EM002.OZ0EM-CU-STOR-ID == 0)
    OZ0EW00.OZ0EW-SV-STR = "****";
  else
    OZ0EW00.OZ0EW-SV-STR = OZ0EM002.OZ0EM-CU-STOR-ID;
  end
  OZWREC.CUST-STR-DPT = OZ0EW00.OZ0EW-CUST-STR-DPT;
  ;
  OZ0EW00.OZ0EW-SV-CUST-NUM = OZ0EM002.OZ0EM-CU-CO-ID;
  OZWREC.KUCCOID = OZ0EW00.OZ0EW-SV-CUST-NUM;
  OZWREC.KUCCONM = OZ0EM002.OZ0EM-CU-CO-NM-HDR;
  OZWREC.XGPCD = OZ0EM002.OZ0EM-GPC-CD;
  OZWREC.XGPDESC = OZ0EM002.OZ0EM-GPC-DESC;
  OZWREC.XSOCD = OZ0EM002.OZ0EM-XSO-SLS-OFC-ID;
  OZWREC.XSOSNM = OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC;
  ;
  OZWREC.OZW-SV-CUST = OZ0EM001.OZ0EM-CU-CO-ID; /* save map1 hdr field*/
  OZWREC.OZW-SV-STR = OZ0EM001.OZ0EM-CU-STOR-ID;
  OZWREC.OZW-SV-DPT = OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF;
  OZWREC.OZW-SV-XSOCD = OZ0EM001.OZ0EM-XSO-SLS-OFC-ID;
  OZWREC.OZW-SV-XGPCD = OZ0EM001.OZ0EM-GPC-CD;
  OZWREC.SOCD-CUST-BUYER-ID = OZ0EW02.OZ0EW-SOCD-BUYER-ID;
end // end OZ0E-23200

// Reset highlighted fields
Function OZ0E-24000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/
  ;
  set OZ0EM002.OZ0EM-GPC-CD initialAttributes; /* gpc code*/
  set OZ0EM002.OZ0EM-CU-CO-ID initialAttributes; /**/
  set OZ0EM002.OZ0EM-CU-STOR-ID initialAttributes; /**/
  set OZ0EM002.OZ0EM-DEPT-ID-XREF initialAttributes; /**/
  set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID initialAttributes; /**/
  set OZ0EM002.OZ0EM-CUST-CONF initialAttributes; /**/
  set OZ0EM002.OZ0EM-CUST-DISC initialAttributes; /**/
  set OZ0EM002.OZ0EM-GROUP-BY initialAttributes; /**/
  set OZ0EM002.OZ0EM-SREP-CONF initialAttributes; /**/
  set OZ0EM002.OZ0EM-SREP-DISC initialAttributes; /**/
  set OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD initialAttributes; /**/
   /* ------------------------------------------------------------*/
  ;
              /* CHECK FOR USER ? CODE INQUIRY*/
  ;
     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/
  ;
     /* 2) Set map page after all windows displayed*/
  ;
   /* ------------------------------------------------------------*/
  ;
  if (OZ0EM002.OZ0EM-GPC-CD == "?" /* if any ? entered*/
   || OZ0EM002.OZ0EM-XSO-SLS-OFC-ID == "?"
   || OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD == "?")
    ;
    if (OZ0EM002.OZ0EM-GPC-CD == "?") /* if ? entered in gpc*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC       "; /* heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc window*/
      end
      ;
       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code and description to the map.                     **/
       /* **********************************************************/
      ;
      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        OZ0EM002.OZ0EM-GPC-CD = XGPTBL.XGPCD[XX0XWPIX];
        OZ0EM002.OZ0EM-GPC-DESC = XGPTBL.XGPDESC[XX0XWPIX];
      else
        OZ0EM002.OZ0EM-GPC-CD = " "; /* clear fields*/
        set OZ0EM002.OZ0EM-GPC-CD cursor; /* put cursor on gpc cd*/
        OZ0EM002.OZ0EM-GPC-DESC = " "; /* clear description*/
      end
    end
    ;
    if (OZ0EM002.OZ0EM-XSO-SLS-OFC-ID == "?") /* if ? in sls office*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                 SALES OFFICE"; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXSO01(); /* perform sales office window*/
      end
      ;
       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the sls ofc    **/
       /* *  code and description to the map.                     **/
       /* **********************************************************/
      ;
      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        OZ0EM002.OZ0EM-XSO-SLS-OFC-ID = XSOTBL.XSOCD[XX0XWPIX];
        OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC = XSOTBL.XSOSNM[XX0XWPIX];
        set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID cursor; /* put cursor on sls ofc*/
      else
        OZ0EM002.OZ0EM-XSO-SLS-OFC-ID = " ";
        set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID cursor;
        OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC = " ";
      end
    end

    if (OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD == "?")

      XP0S001(); /* perform pop-up window initialize*/

      if (XP0SW00.XP0SWPIX > 0) /* if user selected a code*/
        OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD = XP0SM001.XP0SM-SOCD-LTR-DIST-CD[XP0SWPIX];
        OZ0EM002.OZ0EM-SOCD-LTR-DIST-DESC = XP0SM001.XP0SM-SOCD-LTR-DIST-DESC[XP0SWPIX];
        set OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD cursor;
      else
        OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD = " ";
        set OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD cursor;
        OZ0EM002.OZ0EM-SOCD-LTR-DIST-DESC = " ";
      end

    end

    converseLib.clearScreen();
     /* restore the original map*/

    OZ0EW00.OZ0EW-SWR = "N"; /* no to request for data*/
    OZ0EW00.OZ0EW-SWF = "N"; /* no to format map*/

    exit stack; /* go display map*/

  end
  ;
end // end OZ0E-24000

// Verify data that was entered
Function OZ0E-25000()
  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* Otherwise, verify the data.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  else /**/
    OZ0E-25200(); /* verify entered data*/
  end
  ;
end // end OZ0E-25000

// Verify any changed data
Function OZ0E-25200()
  /* ------------------------------------------------------------*/
  /* edit fields*/
  /* ------------------------------------------------------------*/
  if (OZ0EM002.OZ0EM-GPC-CD == " " || 
  OZ0EM002.OZ0EM-CU-CO-ID == " " || 
  OZ0EM002.OZ0EM-XSO-SLS-OFC-ID == " ")
    OZWREC.XXXPRCNM = "25200";
    converseLib.validationFailed(60);
    set OZ0EM002.OZ0EM-GPC-CD bold;
    set OZ0EM002.OZ0EM-CU-CO-ID bold;
    set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID bold;
    if (OZ0EM002.OZ0EM-GPC-CD == " ")
      set OZ0EM002.OZ0EM-GPC-CD cursor, bold;
    else
      if (OZ0EM002.OZ0EM-CU-CO-ID == " ")
        set OZ0EM002.OZ0EM-CU-CO-ID cursor, bold;
      else
        if (OZ0EM002.OZ0EM-XSO-SLS-OFC-ID == " ")
          set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID cursor, bold;
        end
      end
    end
    exit stack;
  end
  ;
  ;
  /* -------------------------------------------------------------*/
  /* check valid gpc code*/
  /* -------------------------------------------------------------*/
  ;
  if (OZ0EM002.OZ0EM-GPC-CD in XGPTBL.XGPCD) /* code in table*/
    ;
   /* get description*/
    if (OZ0EM002.OZ0EM-GPC-CD in XGPTBL.XGPCD)
      OZ0EM002.OZ0EM-GPC-DESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    end
    set OZ0EM002.OZ0EM-GPC-DESC skip;
    ;
  else
    OZ0EW00.OZ0EW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZ0EW00.OZ0EW-SWR = "N";
    OZWREC.XXXPRCNM = "25200"; /* Module identification*/
    set OZ0EM002.OZ0EM-GPC-CD cursor, bold; /* Highlight*/
    set OZ0EM002.OZ0EM-GPC-DESC skip, invisible; /* darken desc*/
    converseLib.validationFailed(22); /* GPC code invalid*/
    exit stack;
    ;
  end
  ;
  ;

  /* -------------------------------------------------------------*/
  /* if cust.str.dpt all entered verify against dcust.vcust001*/
  /* else use cust number against dcust.vcmpny01*/
  /* in either case read vcmpny01 to get company name*/
  /* -------------------------------------------------------------*/
  if (OZ0EM002.OZ0EM-CU-CO-ID > 0)
    OZ0EW00.OZ0EW-SV-CUST-NUM = OZ0EM002.OZ0EM-CU-CO-ID;
    if (OZ0EM002.OZ0EM-CU-STOR-ID > " " && 
    OZ0EM002.OZ0EM-DEPT-ID-XREF > " " && 
    OZ0EM002.OZ0EM-CU-STOR-ID != "****" && 
    OZ0EM002.OZ0EM-DEPT-ID-XREF != "**")
      OZ0EW00.OZ0EW-SV-STR-NUM = OZ0EM002.OZ0EM-CU-STOR-ID;
      OZ0EW00.OZ0EW-SV-DPT-NUM = OZ0EM002.OZ0EM-DEPT-ID-XREF;
      ;
      OZ0E-25210(); /* validate against dcust.vcust001*/
      if (converseVar.validationMsgNum > 0)
        exit stack;
      end
      OZ0E-25220(); /* retrv cmpny name from dcust.vcmpny01*/
      if (converseVar.validationMsgNum > 0)
        exit stack;
      end
      OZ0EM002.OZ0EM-CU-CO-NM-HDR = KUCREC.KUCCONM;

    else
      OZ0E-25220(); /* validate against dcust.vcmpny01*/
      if (converseVar.validationMsgNum > 0)
        exit stack;
      end
      OZ0EM002.OZ0EM-CU-CO-NM-HDR = KUCREC.KUCCONM;
    end
  end
  /* -------------------------------------------------------------*/
  /* if store and/or dept are blank replace with*/
  /* replace with  '***'*/
  /* -------------------------------------------------------------*/
  ;
  if (OZ0EM002.OZ0EM-CU-STOR-ID == 0 || 
  OZ0EM002.OZ0EM-CU-STOR-ID == " " || 
  OZ0EM002.OZ0EM-CU-STOR-ID == "0000")
    OZ0EM002.OZ0EM-CU-STOR-ID = "****";
  end
  ;
  if (OZ0EM002.OZ0EM-DEPT-ID-XREF == 0 || 
  OZ0EM002.OZ0EM-DEPT-ID-XREF == " " || 
  OZ0EM002.OZ0EM-DEPT-ID-XREF == "00")
    OZ0EM002.OZ0EM-DEPT-ID-XREF = "** ";
  end
  ;

  /* -------------------------------------------------------------*/
  /* if sales office id entered verify against xsotbl*/
  /* retrieve the sales office description*/
  /* -------------------------------------------------------------*/
  if (OZ0EM002.OZ0EM-XSO-SLS-OFC-ID > " ")
    if (OZ0EM002.OZ0EM-XSO-SLS-OFC-ID in XSOTBL.XSOCD) /* code in table*/
      ;
   /* get description*/
      if (OZ0EM002.OZ0EM-XSO-SLS-OFC-ID in XSOTBL.XSOCD)
        OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC = XSOTBL.XSOSNM[sysVar.arrayIndex];
      end
    else
      OZ0EW00.OZ0EW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0EW00.OZ0EW-SWR = "N"; /**/
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID cursor, bold; /* Highlight*/
      set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC skip, invisible; /* darken desc*/
      converseLib.validationFailed(24); /* sales office code invalid*/
      exit stack;
      ;
    end
  end
  ;
  if (OZ0EM002.OZ0EM-CUST-CONF == "Y" || 
  OZ0EM002.OZ0EM-CUST-CONF == "N")
      /* continue*/
  else
    set OZ0EM002.OZ0EM-CUST-CONF cursor, bold;
    OZWREC.XXXPRCNM = "25000"; /* Module identification*/
    converseLib.validationFailed(18);
    exit stack;
  end

  if (OZ0EM002.OZ0EM-CUST-DISC == "Y" || 
  OZ0EM002.OZ0EM-CUST-DISC == "N")
      /* continue*/
  else
    set OZ0EM002.OZ0EM-CUST-DISC cursor, bold;
    OZWREC.XXXPRCNM = "25000"; /* Module identification*/
    converseLib.validationFailed(18);
    exit stack;
  end

  if (OZ0EM002.OZ0EM-SREP-CONF == "Y" || 
  OZ0EM002.OZ0EM-SREP-CONF == "N")
      /* continue*/
  else
    set OZ0EM002.OZ0EM-SREP-CONF cursor, bold;
    OZWREC.XXXPRCNM = "25000"; /* Module identification*/
    converseLib.validationFailed(18);
    exit stack;
  end

  if (OZ0EM002.OZ0EM-SREP-DISC == "Y" || 
  OZ0EM002.OZ0EM-SREP-DISC == "N")
      /* continue*/
  else
    set OZ0EM002.OZ0EM-SREP-DISC cursor, bold;
    OZWREC.XXXPRCNM = "25000"; /* Module identification*/
    converseLib.validationFailed(18);
    exit stack;
  end

  if (OZ0EM002.OZ0EM-GROUP-BY == "PO" || 
  OZ0EM002.OZ0EM-GROUP-BY == "SO")
      /* continue*/
  else
    set OZ0EM002.OZ0EM-GROUP-BY cursor, bold;
    OZWREC.XXXPRCNM = "25000"; /* Module identification*/
    converseLib.validationFailed(37);
    exit stack;
  end

  set VOCLCD01 empty;
  VOCLCD01.SOCD-LTR-DIST-CD = OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD;

  if (OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD > " ")
    OZ0E-12125(); /* read for ltr dist cd desc*/
    if (SQLCA.VAGen_SQLCODE == +100)
      set OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD cursor, bold;
      OZWREC.XXXPRCNM = "25000"; /* Module identification*/
      converseLib.validationFailed(38);
      exit stack;
    end
  else
    set OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD cursor, bold;
    OZWREC.XXXPRCNM = "25000"; /* Module identification*/
    converseLib.validationFailed(38);
    exit stack;
  end
  ;
  if (OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL == "Y" || 
  OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL == "N")
      /* continue*/
  else
    set OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL cursor, bold;
    OZWREC.XXXPRCNM = "25000"; /* Module identification*/
    converseLib.validationFailed(18);
    exit stack;
  end
  ;
  if (converseVar.eventKey is pf5)
    /* continue*/
  else
  /* IF COMMAREA.CAFROMAP NE 'OZ0D' and/* didn't go to buyer screen*/
    if (OZ0EW00.OZ0EW-BUYER-ID == 0)
      converseLib.validationFailed(67); /* buyer required*/
      OZWREC.XXXPRCNM = "25200";
      exit stack;
    end
  end
  ;
  ;
  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end OZ0E-25200

// Select set and open cursor
Function OZ0E-25210()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  ;
  set KUNREC empty; /* Clear row storage area*/
  ;
  OZ0EW02.OZ0EW-CUST = OZ0EM002.OZ0EM-CU-CO-ID;
  KUNREC.KUCCOID = OZ0EW02.OZ0EW-CUST;
  ;
  KUNREC.XGPCD = OZ0EM002.OZ0EM-GPC-CD;
  ;
  OZ0EW02.OZ0EW-STR = OZ0EM002.OZ0EM-CU-STOR-ID;
  KUNREC.KUMSTRID = OZ0EW02.OZ0EW-STR;
  ;
  OZ0EW02.OZ0EW-DPT = OZ0EM002.OZ0EM-DEPT-ID-XREF;
  KUNREC.XNXCD = OZ0EW02.OZ0EW-DPT;
  ;
  ;
  try
    call "IO0280" ("S ", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* data not found*/
        converseLib.validationFailed(52);
        set OZ0EM002.OZ0EM-CU-CO-ID cursor, bold;
        return;
      end
    end
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "25210"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUNREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUNREC.KUNGRP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-25210

// Select set and open cursor
Function OZ0E-25220()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  ;
  set KUCREC empty; /* Clear row storage area*/
  ;
  OZ0EW02.OZ0EW-CUST = OZ0EM002.OZ0EM-CU-CO-ID;
  KUCREC.KUCCOID = OZ0EW02.OZ0EW-CUST;
  ;
  try
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      ;
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* Data not found*/
        converseLib.validationFailed(52);
        set OZ0EM002.OZ0EM-CU-CO-ID cursor, bold;
        return;
      end
    end
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "11300"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUCREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-25220

// Process valid input request
Function OZ0E-26000()
  /* ---------------------------------------------------------------*/
  /* PF 24 action*/
  /* ---------------------------------------------------------------*/
  if (converseVar.eventKey is pf24) /* pf 24 entered*/
    if (OZ0EW00.OZ0EW-FIRST-DEL-REQ == "N") /* not first request*/
      OZ0E-26300(); /* delete row*/
      OZ0EW00.OZ0EW-SWF = "Y";
      OZ0EW00.OZ0EW-SWR = "Y";
      OZ0EW00.OZ0EW-FIRST-DEL-REQ = "Y";
      exit stack;
    else
      OZWREC.XXXPRCNM = "26000";
      converseLib.validationFailed(62); /* confirm request*/
      OZ0EW00.OZ0EW-FIRST-DEL-REQ = "N";
      set OZ0EW02 empty;
      exit stack;
    end
  end
  ;
  OZ0EW00.OZ0EW-SWF = "Y"; /* Format the map switch*/

  /* ----------------------------------------------------------*/
  /* add the record*/
  /* ----------------------------------------------------------*/
  OZ0E-26100(); /* build vocldc01 rec to add*/

  converseLib.validationFailed(1); /* successful update*/
  OZ0EW00.OZ0EW-SWD = "1"; /* display map 1*/
  OZ0EW00.OZ0EW-SWR = "Y";
  COMMAREA.CAFROMAP = "OZ0E";
  /* MOVE OZWREC.OZW-SV-APPL TO COMMAREA.CAFROMAP;*/
  set OZ0EW02 empty;
  OZ0EW00.OZ0EW-BUYER-ID = 0;
  OZ0E-26400(); /* sub di clean up jcl*/
  exit stack;

  ;
end // end OZ0E-26000

// build vocldo01 record
Function OZ0E-26100()
  set VOCLDC01 empty;

  OZ0EW00.OZ0EW-SEL-CUST = OZ0EM002.OZ0EM-CU-CO-ID;
  if (OZ0EM002.OZ0EM-CU-STOR-ID == "****")
    OZ0EW00.OZ0EW-SEL-STR = 0000;
  else
    OZ0EW00.OZ0EW-SEL-STR = OZ0EM002.OZ0EM-CU-STOR-ID;
  end
  if (OZ0EM002.OZ0EM-DEPT-ID-XREF == "**")
    OZ0EW00.OZ0EW-SEL-DPT = 00;
  else
    OZ0EW00.OZ0EW-SEL-DPT = OZ0EM002.OZ0EM-DEPT-ID-XREF;
  end
  ;
  VOCLDC01.KUCCOID = OZ0EW00.OZ0EW-SEL-CUST;
  VOCLDC01.KUMSTRID = OZ0EW00.OZ0EW-SEL-STR;
  VOCLDC01.XNXCD = OZ0EW00.OZ0EW-SEL-DPT;
  VOCLDC01.XGPCD = OZ0EM002.OZ0EM-GPC-CD;
  VOCLDC01.XSOCD = OZ0EM002.OZ0EM-XSO-SLS-OFC-ID;
  VOCLDC01.SOCD-LTR-TYP-CD = OZ0EM002.OZ0EM-GROUP-BY;
  VOCLDC01.SOCD-LTR-DIST-CD = OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD;

  VOCLDC01.SOCD-LTR-RVW-FL = OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL;
  VOCLDC01.SOCD-BUYER-ID = OZ0EW02.OZ0EW-SOCD-BUYER-ID;
  /* VE OZ0EW00.OZ0EW-BUYER-ID TO VOCLDC01.SOCD-BUYER-ID;*/
  ;
  if (OZ0EM002.OZ0EM-CUST-CONF == "N" && 
  OZ0EM002.OZ0EM-CUST-DISC == "N")
    VOCLDC01.SOCD-CUST-REQ-CD = "NR";
  else
    if (OZ0EM002.OZ0EM-CUST-CONF == "Y" && 
    OZ0EM002.OZ0EM-CUST-DISC == "N")
      VOCLDC01.SOCD-CUST-REQ-CD = "CO";
    else
      if (OZ0EM002.OZ0EM-CUST-CONF == "N" && 
      OZ0EM002.OZ0EM-CUST-DISC == "Y")
        VOCLDC01.SOCD-CUST-REQ-CD = "DO";
      else
        if (OZ0EM002.OZ0EM-CUST-CONF == "Y" && 
        OZ0EM002.OZ0EM-CUST-DISC == "Y")
          VOCLDC01.SOCD-CUST-REQ-CD = "CD";
        end
      end
    end
  end

  if (OZ0EM002.OZ0EM-SREP-CONF == "N" && 
  OZ0EM002.OZ0EM-SREP-DISC == "N")
    VOCLDC01.SOCD-SREP-REQ-CD = "NR";
  else
    if (OZ0EM002.OZ0EM-SREP-CONF == "Y" && 
    OZ0EM002.OZ0EM-SREP-DISC == "N")
      VOCLDC01.SOCD-SREP-REQ-CD = "CO";
    else
      if (OZ0EM002.OZ0EM-SREP-CONF == "N" && 
      OZ0EM002.OZ0EM-SREP-DISC == "Y")
        VOCLDC01.SOCD-SREP-REQ-CD = "DO";
      else
        if (OZ0EM002.OZ0EM-SREP-CONF == "Y" && 
        OZ0EM002.OZ0EM-SREP-DISC == "Y")
          VOCLDC01.SOCD-SREP-REQ-CD = "CD";
        end
      end
    end
  end

  OZ0E-26120(); /* add VOCLDC01 record*/
  if (SQLCA.VAGen_SQLCODE == 0)
    OZ0EW-UPDATE-SW = "Y";
    OZWREC.OZW-UPD-FLG = "Y";
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == -803) /* dup record*/
      if (OZWREC.WC-FLG != "S" && 
      COMMAREA.CAFROMAP != "OZ0D") /* we added the rec going to oz0d*/
        converseLib.validationFailed(69); /* di already exists*/
        OZWREC.XXXPRCNM = "26100";
        exit stack;
      else
        OZ0E-26130(); /* update curr VOCLDC01 record*/
        OZ0EW-UPDATE-SW = "Y";
        OZWREC.OZW-UPD-FLG = "Y";
      end
    end
  end
end // end OZ0E-26100

// add new vocldo01 row
Function OZ0E-26120()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDC01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "26120"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0EW00.OZ0EW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0EW00.OZ0EW-TM-HH = OZ0EW00.OZ0EW-TB-HH;
  OZ0EW00.OZ0EW-TM-MM = OZ0EW00.OZ0EW-TB-MM;
  VOCLDC01.ZZZCHGTM = OZ0EW00.OZ0EW-TIME-MK;
  VOCLDC01.ZZZSDTM = OZ0EW00.OZ0EW-TIME-MK;
  ;
  VOCLDC01.ZZZSDT = TA2REC.TA2GRGGN;
  VOCLDC01.SOCD-DIST-EFF-DT = TA2REC.TA2GRGGN;
  VOCLDC01.ZZZCHGCT = 0;
  ;
  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VOCLDC01" ("A ", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == -803) /* dup record*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "26120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-26120

// build vocldo01 record
Function OZ0E-26130()
  OZ0E-26135(); /* read VOCLDC01*/

  VOCLDC01.SOCD-LTR-TYP-CD = OZ0EM002.OZ0EM-GROUP-BY;
  VOCLDC01.SOCD-LTR-DIST-CD = OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD;
  if (COMMAREA.CAFROMAP == "OZ0D")
    VOCLDC01.SOCD-BUYER-ID = OZ0EW00.OZ0EW-BUYER-ID;
  end

  if (OZ0EM002.OZ0EM-CUST-CONF == "N" && 
  OZ0EM002.OZ0EM-CUST-DISC == "N")
    VOCLDC01.SOCD-CUST-REQ-CD = "NR";
  else
    if (OZ0EM002.OZ0EM-CUST-CONF == "Y" && 
    OZ0EM002.OZ0EM-CUST-DISC == "N")
      VOCLDC01.SOCD-CUST-REQ-CD = "CO";
    else
      if (OZ0EM002.OZ0EM-CUST-CONF == "N" && 
      OZ0EM002.OZ0EM-CUST-DISC == "Y")
        VOCLDC01.SOCD-CUST-REQ-CD = "DO";
      else
        if (OZ0EM002.OZ0EM-CUST-CONF == "Y" && 
        OZ0EM002.OZ0EM-CUST-DISC == "Y")
          VOCLDC01.SOCD-CUST-REQ-CD = "CD";
        end
      end
    end
  end

  if (OZ0EM002.OZ0EM-SREP-CONF == "N" && 
  OZ0EM002.OZ0EM-SREP-DISC == "N")
    VOCLDC01.SOCD-SREP-REQ-CD = "NR";
  else
    if (OZ0EM002.OZ0EM-SREP-CONF == "Y" && 
    OZ0EM002.OZ0EM-SREP-DISC == "N")
      VOCLDC01.SOCD-SREP-REQ-CD = "CO";
    else
      if (OZ0EM002.OZ0EM-SREP-CONF == "N" && 
      OZ0EM002.OZ0EM-SREP-DISC == "Y")
        VOCLDC01.SOCD-SREP-REQ-CD = "DO";
      else
        if (OZ0EM002.OZ0EM-SREP-CONF == "Y" && 
        OZ0EM002.OZ0EM-SREP-DISC == "Y")
          VOCLDC01.SOCD-SREP-REQ-CD = "CD";
        end
      end
    end
  end

  VOCLDC01.SOCD-LTR-RVW-FL = OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL;

  OZ0E-26137(); /* update vocldc01*/
end // end OZ0E-26130

// read vocldo01 row
Function OZ0E-26135()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  ;
  try
    call "VOCLDC01" ("S ", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "26135"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-26135

// upd  vocldo01 row
Function OZ0E-26137()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDC01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "26137"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0EW00.OZ0EW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0EW00.OZ0EW-TM-HH = OZ0EW00.OZ0EW-TB-HH;
  OZ0EW00.OZ0EW-TM-MM = OZ0EW00.OZ0EW-TB-MM;
  VOCLDC01.ZZZCHGTM = OZ0EW00.OZ0EW-TIME-MK;

  ;
  try
    call "VOCLDC01" ("U ", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "26137"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-26137

// delete old row
Function OZ0E-26300()
  set VOCLDC01 empty;

  OZ0EW00.OZ0EW-WS-CUSTOMER-NUM = OZ0EM002.OZ0EM-CU-CO-ID;

  if (OZ0EM002.OZ0EM-CU-STOR-ID == "****"
   || OZ0EM002.OZ0EM-CU-STOR-ID == "    ")
    OZ0EW00.OZ0EW-WS-STORE-NUM = 0000;
  else
    OZ0EW00.OZ0EW-WS-STORE-NUM = OZ0EM002.OZ0EM-CU-STOR-ID;
  end

  if (OZ0EM002.OZ0EM-DEPT-ID-XREF == "**"
   || OZ0EM002.OZ0EM-DEPT-ID-XREF == "  ")
    OZ0EW00.OZ0EW-WS-DEPT-NUM = 00;
  else
    OZ0EW00.OZ0EW-WS-DEPT-NUM = OZ0EM002.OZ0EM-DEPT-ID-XREF;
  end

  OZ0EW00.OZ0EW-SV-CUST-NUM = OZ0EW00.OZ0EW-WS-CUSTOMER-NUM;
  OZ0EW00.OZ0EW-SV-CU-CO-ID = OZ0EW00.OZ0EW-SV-CUST-NUM;
  VOCLDC01.KUCCOID = OZ0EW00.OZ0EW-SV-CU-CO-ID;

  OZ0EW00.OZ0EW-SV-STR-NUM = OZ0EW00.OZ0EW-WS-STORE-NUM;
  OZ0EW00.OZ0EW-SV-STOR-ID = OZ0EW00.OZ0EW-SV-STR-NUM;
  VOCLDC01.KUMSTRID = OZ0EW00.OZ0EW-SV-STOR-ID;

  OZ0EW00.OZ0EW-SV-DPT-NUM = OZ0EW00.OZ0EW-WS-DEPT-NUM;
  OZ0EW00.OZ0EW-SV-XNX-DEPT = OZ0EW00.OZ0EW-SV-DPT-NUM;
  VOCLDC01.XNXCD = OZ0EW00.OZ0EW-SV-XNX-DEPT;

  VOCLDC01.XGPCD = OZ0EM002.OZ0EM-GPC-CD;
  VOCLDC01.XSOCD = OZ0EM002.OZ0EM-XSO-SLS-OFC-ID;

  OZ0E-26310(); /* delete VOCLDC01 record*/
  ;
end // end OZ0E-26300

// add new vocldo01 row
Function OZ0E-26310()
  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VOCLDC01" ("D ", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 ||  /* Normal return code*/
    SQLCA.VAGen_SQLCODE == +100)    
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "26310"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-26310

// Submit prod JCL FF7201
Function OZ0E-26400()
   /* ------------------------------------------------------------*/
   /* Call sub-routine to find which environment*/
   /* the program is executing in, development*/
   /* or production.*/
   /* ------------------------------------------------------------*/
  set TA3REC empty;
  TA3REC.TA3OPTN = "ASSIGN ";
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA3REC.TA3RTNCD == 0)          /* Good return code*/

    if (TA3REC.TA3RGNID == "03") /* if on production system*/
      OZ0E-26410(); /* format production jcl*/
    else
      if (TA3REC.TA3RGNID == "04")
        OZ0E-26420(); /* format development jcl - dsnt*/
      else
        OZ0E-26430(); /* format development jcl - dsnf*/
      end
    end

  else
    converseLib.validationFailed(10);
    exit stack;
  end
end // end OZ0E-26400

// Submit prod JCL FF7201
Function OZ0E-26410()
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (OZ0ET.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      OZ0EW03.OZ0EW-CUST-ID = VOCLDC01.KUCCOID;
      OZ0EW03.OZ0EW-GPC-CD = VOCLDC01.XGPCD;
      OZ0EW03.OZ0EW-XSO-CD = VOCLDC01.XSOCD;
      OZ0EW03.CAUSERID = COMMAREA.CAUSERID; /* User id*/
      ;
      TA6REC.TARJCL[TA6INDEX] = OZ0EW03.TARJCL; /* Parameters*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = OZ0ET.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = OZ0ET.TARTYPE[TA6INDEX]; /* Type*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (OZ0ET.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online msg switch*/
  ;
  XPTA0P(); /* Print Request Subroutine*/
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  /*  */
end // end OZ0E-26410

// Submit prod JCL FF7201
Function OZ0E-26420()
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (OZ0ETDT.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      OZ0EW03.OZ0EW-CUST-ID = VOCLDC01.KUCCOID;
      OZ0EW03.OZ0EW-GPC-CD = VOCLDC01.XGPCD;
      OZ0EW03.OZ0EW-XSO-CD = VOCLDC01.XSOCD;
      OZ0EW03.CAUSERID = COMMAREA.CAUSERID; /* User id*/
      ;
      TA6REC.TARJCL[TA6INDEX] = OZ0EW03.TARJCL; /* Parameters*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = OZ0ETDT.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = OZ0ETDT.TARTYPE[TA6INDEX]; /* Type*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (OZ0ETDT.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online msg switch*/
  ;
  XPTA0P(); /* Print Request Subroutine*/
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  /*  */
end // end OZ0E-26420

// Submit prod JCL FF7201
Function OZ0E-26430()
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (OZ0ETDF.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      OZ0EW03.OZ0EW-CUST-ID = VOCLDC01.KUCCOID;
      OZ0EW03.OZ0EW-GPC-CD = VOCLDC01.XGPCD;
      OZ0EW03.OZ0EW-XSO-CD = VOCLDC01.XSOCD;
      OZ0EW03.CAUSERID = COMMAREA.CAUSERID; /* User id*/
      ;
      TA6REC.TARJCL[TA6INDEX] = OZ0EW03.TARJCL; /* Parameters*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = OZ0ETDF.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = OZ0ETDF.TARTYPE[TA6INDEX]; /* Type*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (OZ0ETDF.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online msg switch*/
  ;
  XPTA0P(); /* Print Request Subroutine*/
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  /*  */
end // end OZ0E-26430

// Process to update a row
Function OZ0E-30000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Format the map output area and display the map.*/
  /* 2) Check the attention identifier used to respond.*/
  /* 3) Reset highlighted fields to normal intensity.*/
  /* 4) Verify the data that was entered.*/
  /* 5) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0E-32000(); /* Format and display the map*/
  ;
  OZ0E-33000(); /* Check attention identifier*/
  ;
  OZ0E-34000(); /* Reset fields to normal intensity*/
  ;
  OZ0E-35000(); /* Verify the entered data*/
  ;
  OZ0E-36000(); /* Process valid input request*/
  ;
  ;
end // end OZ0E-30000

// Format and converse the map
Function OZ0E-32000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0EW00.OZ0EW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/
    ;
    if (OZ0EW00.OZ0EW-SWF == "Y") /* Map must be formatted*/
      OZ0E-32100(); /* Format the data on the map*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0EM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (OZWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0EM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    OZ0EM002.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/
    ;
    set OZ0EM002 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse OZ0EM002 ;
  ;
  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/
  ;
  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
end // end OZ0E-32000

// Format the display data
Function OZ0E-32100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/
  ;
  set OZ0EM002 initial; /* M002 input/output area*/
  ;
  set VOCBUY01 empty;
  set VOCBAD01 empty;
  set VOCACD01 empty;
  set KUCREC empty;
  set KUMREC empty;
  set KULREC empty;
  ;
  OZ0EW00.OZ0EW-SWF = "N"; /* Format the map switch*/
  ;
  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/
  if (COMMAREA.CAFROMAP == "OZ0D")
    OZ0E-32110(); /* build map from ozwrec;*/
  else
    OZ0EM002.OZ0EM-CU-CO-ID = OZ0EW02.OZ0EW-CUST;
    OZ0EW00.OZ0EW-SV-CUST = OZ0EM002.OZ0EM-CU-CO-ID;
    OZ0EW00.OZ0EW-IX1 = 1;
    while (OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] == "0")
      OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] = " ";
      OZ0EW00.OZ0EW-IX1 = OZ0EW00.OZ0EW-IX1 + 1;
    end
    OZ0EM002.OZ0EM-CU-CO-ID = OZ0EW00.OZ0EW-SV-CUST;
    ;
    if (OZ0EW02.OZ0EW-STR == "0000" || 
    OZ0EW02.OZ0EW-STR == "0" || 
    OZ0EW02.OZ0EW-STR == " ")
      OZ0EM002.OZ0EM-CU-STOR-ID = "****";
    else
      OZ0EM002.OZ0EM-CU-STOR-ID = OZ0EW02.OZ0EW-STR;
    end
    ;
    if (OZ0EW02.OZ0EW-DPT == "00" || 
    OZ0EW02.OZ0EW-DPT == "0" || 
    OZ0EW02.OZ0EW-DPT == " ")
      OZ0EM002.OZ0EM-DEPT-ID-XREF = "**";
    else
      OZ0EM002.OZ0EM-DEPT-ID-XREF = OZ0EW02.OZ0EW-DPT;
    end
    ;
    OZ0EM002.OZ0EM-CU-CO-NM-HDR = OZ0EW00.OZ0EW-CU-CO-NM-HDR;
    OZ0EM002.OZ0EM-GPC-CD = OZ0EW00.OZ0EW-GPC-CD;
    OZ0EM002.OZ0EM-GPC-DESC = OZ0EW00.OZ0EW-GPC-DESC;
    OZ0EM002.OZ0EM-XSO-SLS-OFC-ID = OZ0EW00.OZ0EW-XSO-SLS-OFC-ID;
    OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC = OZ0EW00.OZ0EW-XSO-SLS-OFC-ID-DESC;
    OZ0EM002.OZ0EM-CUST-CONF = OZ0EW02.OZ0EW-CUST-CONF;
    OZ0EM002.OZ0EM-CUST-DISC = OZ0EW02.OZ0EW-CUST-DISC;
    OZ0EM002.OZ0EM-SREP-CONF = OZ0EW02.OZ0EW-SREP-CONF;
    OZ0EM002.OZ0EM-SREP-DISC = OZ0EW02.OZ0EW-SREP-DISC;
    OZ0EM002.OZ0EM-GROUP-BY = OZ0EW02.OZ0EW-SOCD-LTR-TYP-CD;
    OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD = OZ0EW02.OZ0EW-SOCD-LTR-DIST-CD;
    if (OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD != " ")
      VOCLCD01.SOCD-LTR-DIST-CD = OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD;
      OZ0E-12125();
      OZ0EM002.OZ0EM-SOCD-LTR-DIST-DESC = VOCLCD01.SOCD-LTR-DIST-DESC;
    end
    OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL = OZ0EW02.OZ0EW-SOCD-LTR-RVW-FL;
    if (OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL == " ")
      OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL = "N";
    end
    ;
    VOCBUY01.SOCD-CUST-BUYER-ID = OZ0EW02.OZ0EW-SOCD-BUYER-ID;
    OZ0E-32125(); /* read customer buyer*/
    OZ0EM002.OZ0EM-XXX-FRST-NM = VOCBUY01.XXXFSTNM;
    OZ0EM002.OZ0EM-XXX-LAST-NM = VOCBUY01.XXXLSTNM;
    ;
    if (VOCBUY01.SOCD-ADDR-TYP-CD == "BA")
      VOCBAD01.SOCD-CUST-BUYER-ID = OZ0EW02.OZ0EW-SOCD-BUYER-ID;
      OZ0E-32150(); /* read  customer buyer address*/
      OZ0EM002.OZ0EM-XXX-ADDR1 = VOCBAD01.XXX-ADDR1;
      OZ0EM002.OZ0EM-XXX-ADDR2 = VOCBAD01.XXX-ADDR2;
      OZ0EM002.OZ0EM-XXX-CITY = VOCBAD01.XXX-CITY;
      OZ0EM002.OZ0EM-XST-ST-CD = VOCBAD01.XST-ST-CD;
      OZ0EM002.OZ0EM-XXX-ZIP = VOCBAD01.XXX-ZIP;
    else
      if (VOCBUY01.SOCD-ADDR-TYP-CD == "CO" ||  /* company*/
      VOCBUY01.SOCD-ADDR-TYP-CD == "CR" ||      /* correspondence*/
      VOCBUY01.SOCD-ADDR-TYP-CD == "BG")        /* bill group*/
        KUCREC.KUCCOID = VOCBUY01.KUCCOID;
        OZ0E-32120(); /* read company*/
        KULREC.KUCCOID = KUCREC.KUCCOID;
        if (VOCBUY01.SOCD-ADDR-TYP-CD == "CO")
          KULREC.KULAAID = KUCREC.KUCCOAID;
        else
          if (VOCBUY01.SOCD-ADDR-TYP-CD == "CR")
            KULREC.KULAAID = KUCREC.KUCCCAID;
          else
            if (VOCBUY01.SOCD-ADDR-TYP-CD == "BG")
              KULREC.KULAAID = KUCREC.KUCBLAID;
            end
          end
        end
        OZ0E-32130(); /* read customer address*/
        OZ0E-32160(); /* format address from customer address*/
      else
        if (VOCBUY01.SOCD-ADDR-TYP-CD == "ST" ||  /* store*/
        VOCBUY01.SOCD-ADDR-TYP-CD == "SG")        /* ship group*/
          KUMREC.KUCCOID = VOCBUY01.KUCCOID;
          KUMREC.KUMSTRID = VOCBUY01.KUMSTRID;
          OZ0E-32140(); /* read store*/
          if (VOCBUY01.SOCD-ADDR-TYP-CD == "ST")
            KULAAID = KUMREC.KUMSTAID;
          else
            KULAAID = KUMREC.KUMSHAID;
          end
          KULREC.KUCCOID = KUMREC.KUCCOID;
          OZ0E-32130(); /* read customer address*/
          OZ0E-32160(); /* format address from customer address*/
        end
      end
    end
    ;
    VOCACD01.SOCD-ADDR-TYP-CD = VOCBUY01.SOCD-ADDR-TYP-CD;
    OZ0E-32175(); /* read address type code*/
    OZ0EM002.OZ0EM-SOCD-ADDR-TYPE-DESC = VOCACD01.SOCD-ADDR-TYP-DESC;
  end
  /* ---------------------------------------------------------------*/
  /* Set the heading fiels protect (can change detail only)*/
  /* ---------------------------------------------------------------*/
  ;
  if (COMMAREA.CAFROMAP == "OZ0D" || 
  OZ0EM001.OZ0EMSEL[OZ0EW-IXX] == "S")
    set OZ0EM002.OZ0EM-GPC-CD protect;
    set OZ0EM002.OZ0EM-CU-CO-ID protect;
    set OZ0EM002.OZ0EM-CU-STOR-ID protect;
    set OZ0EM002.OZ0EM-DEPT-ID-XREF protect;
    set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID protect;
    set OZ0EM002.OZ0EM-CUST-CONF cursor;
    ;
    OZWREC.WC-FLG = "S"; /* save change map to ozwrec*/
  else
    OZWREC.WC-FLG = "B"; /* save adding from change map to ozwre*/
  end
  ;
end // end OZ0E-32100

// Format map from ozwrec
Function OZ0E-32110()
  /* ------------------------------------------------------------*/
  /* Format the header on the map from the ozwrec.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0EM002.OZ0EM-GPC-CD = OZWREC.XGPCD;
  OZ0EM002.OZ0EM-GPC-DESC = OZWREC.XGPDESC;
  ;
  OZ0EW00.OZ0EW-SV-CUST-NUM = OZWREC.KUCCOID;
  OZ0EM002.OZ0EM-CU-CO-ID = OZ0EW00.OZ0EW-SV-CUST-NUM;
  ;
  OZ0EW00.OZ0EW-SV-CUST = OZ0EM002.OZ0EM-CU-CO-ID;
  OZ0EW00.OZ0EW-IX1 = 1;
  while (OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] == "0")
    OZ0EW00.OZ0EW-SV-CUST-CHAR[OZ0EW-IX1] = " ";
    OZ0EW00.OZ0EW-IX1 = OZ0EW-IX1 + 1;
  end
  OZ0EM002.OZ0EM-CU-CO-ID = OZ0EW00.OZ0EW-SV-CUST;
  ;
  OZ0EW00.OZ0EW-CUST-STR-DPT = OZWREC.CUST-STR-DPT;
  OZ0EM002.OZ0EM-CU-STOR-ID = OZ0EW00.OZ0EW-SV-STR;
  if (OZ0EM002.OZ0EM-CU-STOR-ID == "0"
   || OZ0EM002.OZ0EM-CU-STOR-ID == "0000"
   || OZ0EM002.OZ0EM-CU-STOR-ID == " ")
    OZ0EM002.OZ0EM-CU-STOR-ID = "****";
  end
  ;
  if (OZ0EW00.OZ0EW-SV-STR == "****")
    OZ0EW00.OZ0EW-SV-STR-NUM = 0;
  else
    OZ0EW00.OZ0EW-SV-STR-NUM = OZ0EW00.OZ0EW-SV-STR;
  end
  ;
  OZ0EM002.OZ0EM-DEPT-ID-XREF = OZ0EW00.OZ0EW-SV-DPT;
  if (OZ0EM002.OZ0EM-DEPT-ID-XREF == "0"
   || OZ0EM002.OZ0EM-DEPT-ID-XREF == "00"
   || OZ0EM002.OZ0EM-DEPT-ID-XREF == " ")
    OZ0EM002.OZ0EM-DEPT-ID-XREF = "**";
  end

  if (OZ0EW00.OZ0EW-SV-DPT == "**")
    OZ0EW00.OZ0EW-SV-DPT-NUM = 0;
  else
    OZ0EW00.OZ0EW-SV-DPT-NUM = OZ0EW00.OZ0EW-SV-DPT;
  end
  OZ0EM002.OZ0EM-CU-CO-NM-HDR = OZWREC.KUCCONM;
  OZ0EM002.OZ0EM-XSO-SLS-OFC-ID = OZWREC.XSOCD;
  OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC = OZWREC.XSOSNM;
  /*  */
  /* read vocldc01 for other fields*/
  OZ0E-21300();
  OZ0E-21400();
  ;
  if (VOCLDC01.SOCD-SREP-REQ-CD == "NR")
    OZ0EM002.OZ0EM-SREP-CONF = "N";
    OZ0EM002.OZ0EM-SREP-DISC = "N";
  else
    if (VOCLDC01.SOCD-SREP-REQ-CD == "CO")
      OZ0EM002.OZ0EM-SREP-CONF = "Y";
      OZ0EM002.OZ0EM-SREP-DISC = "N";
    else
      if (VOCLDC01.SOCD-SREP-REQ-CD == "DO")
        OZ0EM002.OZ0EM-SREP-CONF = "N";
        OZ0EM002.OZ0EM-SREP-DISC = "Y";
      else
        if (VOCLDC01.SOCD-SREP-REQ-CD == "CD")
          OZ0EM002.OZ0EM-SREP-CONF = "Y";
          OZ0EM002.OZ0EM-SREP-DISC = "Y";
        end
      end
    end
  end
  ;
  if (VOCLDC01.SOCD-CUST-REQ-CD == "NR")
    OZ0EM002.OZ0EM-CUST-CONF = "N";
    OZ0EM002.OZ0EM-CUST-DISC = "N";
  else
    if (VOCLDC01.SOCD-CUST-REQ-CD == "CO")
      OZ0EM002.OZ0EM-CUST-CONF = "Y";
      OZ0EM002.OZ0EM-CUST-DISC = "N";
    else
      if (VOCLDC01.SOCD-CUST-REQ-CD == "DO")
        OZ0EM002.OZ0EM-CUST-CONF = "N";
        OZ0EM002.OZ0EM-CUST-DISC = "Y";
      else
        if (VOCLDC01.SOCD-CUST-REQ-CD == "CD")
          OZ0EM002.OZ0EM-CUST-CONF = "Y";
          OZ0EM002.OZ0EM-CUST-DISC = "Y";
        end
      end
    end
  end
  ;
  OZ0EM002.OZ0EM-GROUP-BY = VOCLDC01.SOCD-LTR-TYP-CD;
  OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD = VOCLDC01.SOCD-LTR-DIST-CD;
  VOCLCD01.SOCD-LTR-DIST-CD = OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD;
  OZ0E-12125();
  OZ0EM002.OZ0EM-SOCD-LTR-DIST-DESC = VOCLCD01.SOCD-LTR-DIST-DESC;
  OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL = VOCLDC01.SOCD-LTR-RVW-FL;
  ;
  if (OZ0EW00.OZ0EW-BUYER-ID > 0)
    OZ0EW02.OZ0EW-SOCD-BUYER-ID = OZ0EW00.OZ0EW-BUYER-ID;
  end
  ;
  VOCBUY01.SOCD-CUST-BUYER-ID = OZ0EW02.OZ0EW-SOCD-BUYER-ID;
  OZ0E-32125(); /* read customer buyer*/
  OZ0EM002.OZ0EM-XXX-FRST-NM = VOCBUY01.XXXFSTNM;
  OZ0EM002.OZ0EM-XXX-LAST-NM = VOCBUY01.XXXLSTNM;
  ;
  if (VOCBUY01.SOCD-ADDR-TYP-CD == "BA")
    VOCBAD01.SOCD-CUST-BUYER-ID = OZ0EW02.OZ0EW-SOCD-BUYER-ID;
    OZ0E-32150(); /* read  customer buyer address*/
    OZ0EM002.OZ0EM-XXX-ADDR1 = VOCBAD01.XXX-ADDR1;
    OZ0EM002.OZ0EM-XXX-ADDR2 = VOCBAD01.XXX-ADDR2;
    OZ0EM002.OZ0EM-XXX-CITY = VOCBAD01.XXX-CITY;
    OZ0EM002.OZ0EM-XST-ST-CD = VOCBAD01.XST-ST-CD;
    OZ0EM002.OZ0EM-XXX-ZIP = VOCBAD01.XXX-ZIP;
  else
    if (VOCBUY01.SOCD-ADDR-TYP-CD == "CO" ||  /* company*/
    VOCBUY01.SOCD-ADDR-TYP-CD == "CR" ||      /* correspondence*/
    VOCBUY01.SOCD-ADDR-TYP-CD == "BG")        /* bill group*/
      KUCREC.KUCCOID = VOCBUY01.KUCCOID;
      OZ0E-32120(); /* read company*/
      KULREC.KUCCOID = KUCREC.KUCCOID;
      if (VOCBUY01.SOCD-ADDR-TYP-CD == "CO")
        KULREC.KULAAID = KUCREC.KUCCOAID;
      else
        if (VOCBUY01.SOCD-ADDR-TYP-CD == "CR")
          KULREC.KULAAID = KUCREC.KUCCCAID;
        else
          if (VOCBUY01.SOCD-ADDR-TYP-CD == "BG")
            KULREC.KULAAID = KUCREC.KUCBLAID;
          end
        end
      end
      OZ0E-32130(); /* read customer address*/
      OZ0E-32160(); /* format address from customer address*/
    else
      if (VOCBUY01.SOCD-ADDR-TYP-CD == "ST" ||  /* store*/
      VOCBUY01.SOCD-ADDR-TYP-CD == "SG")        /* ship group*/
        KUMREC.KUCCOID = VOCBUY01.KUCCOID;
        KUMREC.KUMSTRID = VOCBUY01.KUMSTRID;
        OZ0E-32140(); /* read store*/
        if (VOCBUY01.SOCD-ADDR-TYP-CD == "ST")
          KULAAID = KUMREC.KUMSTAID;
        else
          KULAAID = KUMREC.KUMSHAID;
        end
        KULREC.KUCCOID = KUMREC.KUCCOID;
        OZ0E-32130(); /* read customer address*/
        OZ0E-32160(); /* format address from customer address*/
      end
    end
  end
  ;
  VOCACD01.SOCD-ADDR-TYP-CD = VOCBUY01.SOCD-ADDR-TYP-CD;
  OZ0E-32175(); /* read address type code*/
  OZ0EM002.OZ0EM-SOCD-ADDR-TYPE-DESC = VOCACD01.SOCD-ADDR-TYP-DESC;

  ;
  if (OZ0EM002.OZ0EM-GPC-CD == " ")
    set OZ0EM002.OZ0EM-GPC-CD cursor;
  else
    if (OZ0EM002.OZ0EM-CU-CO-ID == " ")
      set OZ0EM002.OZ0EM-CU-CO-ID cursor;
    else
      if (OZ0EM002.OZ0EM-CU-STOR-ID == " ")
        set OZ0EM002.OZ0EM-CU-STOR-ID cursor;
      else
        if (OZ0EM002.OZ0EM-DEPT-ID-XREF == " ")
          set OZ0EM002.OZ0EM-DEPT-ID-XREF cursor;
        else
          if (OZ0EM002.OZ0EM-XSO-SLS-OFC-ID == " ")
            set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID cursor;
          else
            set OZ0EM002.OZ0EM-CUST-CONF cursor;
          end
        end
      end
    end
  end

  /* MOVE 71 TO EZEMNO;*/
  /* MOVE '32110' TO OZWREC.XXXPRCNM;*/
end // end OZ0E-32110

// Select vcmpny01 record
Function OZ0E-32120()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to previous process*/
  else
    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == +100)   /* no record found*/
      ;
      return; /* Return to previous process*/
    end
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "32120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUCREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-32120

// select voclcd01 record
Function OZ0E-32125()

  ;
  try
    call "VOCBUY01" ("S ", SQLCA, VOCBUY01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "32125"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCBUY01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCBUY01.VOCBUY01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-32125

// Select vaddr001 record
Function OZ0E-32130()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO0170" ("S ", SQLCA, KULREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0 ||   
  SQLCA.VAGen_SQLCODE == +100))     
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "32130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KULREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KULREC.KULGRP; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-32130

// Select vstore01 record
Function OZ0E-32140()

  try
    call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
        return; /* Return to previous process*/
      end
    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "32140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUMREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUMREC.KUMGRP; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-32140

// select voclcd01 record
Function OZ0E-32150()

  ;
  try
    call "VOCBAD01" ("S ", SQLCA, VOCBAD01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "32150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCBAD01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCBAD01.VOCBAD01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-32150

// Format map2 addr from cust add
Function OZ0E-32160()
  /* ---------------------------------------------------------*/
  /* format the buyer addressfrom customer address*/
  /* ---------------------------------------------------------*/
  OZ0EM002.OZ0EM-XXX-ADDR1 = KULREC.XXX-ADDR3;
  OZ0EM002.OZ0EM-XXX-ADDR2 = KULREC.XXX-ADDR4;
  OZ0EM002.OZ0EM-XXX-CITY = KULREC.XXXCITY;
  OZ0EM002.OZ0EM-XST-ST-CD = KULREC.XSTCD;
  OZ0EM002.OZ0EM-XXX-ZIP = KULREC.XXXZIP;
end // end OZ0E-32160

// select voclcd01 record
Function OZ0E-32175()

  ;
  try
    call "VOCACD01" ("S ", SQLCA, VOCACD01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "32175"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCACD01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCACD01.VOCACD01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-32175

// Check attention identifier
Function OZ0E-33000()
  ;
  /* ------------------------------------------------------------*/
  /* If HELP, exit to the previous level or exit to the Master*/
  /* Menu was requested, exit to another application.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "OZ0EM002"; /* Application find code*/
    end

    if (converseVar.eventKey is pf5)
      if (OZ0EM002.OZ0EM-GPC-CD == " "
       || OZ0EM002.OZ0EM-CU-CO-ID == " "
       || OZ0EM002.OZ0EM-XSO-SLS-OFC-ID == " ")
        converseLib.validationFailed(60);
        set OZ0EM002.OZ0EM-CU-CO-ID cursor, bold;
        set OZ0EM002.OZ0EM-GPC-CD bold;
        set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID bold;
        exit stack;
      end
      OZ0E-35300(); /* screen header edits*/
      OZ0E-26100(); /* add rec on scrn to access upon rtn*/
      OZ0E-33200(); /* build ozwrec*/
      COMMAREA.CATOAP = "OZ0D";
      XSOZ-S0001();
      exit stack;
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      OZ0EW00.OZ0EW-SWD = "1"; /* Map to be displayed switch*/
      OZ0EW00.OZ0EW-SWF = "Y"; /* Format the map switch*/

      if (OZ0EW00.OZ0EW-UPDATE-SW == "Y") /* anything updated*/
        OZ0EW00.OZ0EW-SWR = "Y"; /* request new data on map1*/
      end

      COMMAREA.CAFROMAP = "OZ0E";
      set OZ0EW02 empty;

      exit stack; /* Exit to display map*/

    end


    OZ0E-11100(); /* Purge any temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    OZ0EW00.OZ0EW-SWD = "1"; /* Map to be displayed switch*/

    exit stack; /* Exit to display map*/

  end
  /* ------------------------------------------------------------*/
  /* Determine whether a valid attention identifier was used to*/
  /* invoke the transaction.  Display an error message to the*/
  /* user if the PF key used is not supported.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter &&  /* ENTER was not pressed*/
  converseVar.eventKey not pf24)         /* PF24  was not pressed*/
    ;
    OZWREC.XXXPRCNM = "33000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    ;
    exit stack; /* Exit to display map*/
    ;
  end

  if (converseVar.eventKey is enter && 
  COMMAREA.CAFROMAP == "OZ0D")
  /* continue*/
  else
    if (converseVar.eventKey is enter && 
    OZ0EM002 not modified)
      OZ0EW00.OZ0EW-SWF = "Y"; /* Format the map switch*/
      OZ0EW00.OZ0EW-SWD = "1";
      exit stack;
    end
  end

  ;
end // end OZ0E-33000

// BUILD OZWREC
Function OZ0E-33200()
  OZ0EW00.OZ0EW-SV-CUST = OZ0EM002.OZ0EM-CU-CO-ID;
  if (OZ0EM002.OZ0EM-CU-STOR-ID == 0)
    OZ0EW00.OZ0EW-SV-STR = "****";
  else
    OZ0EW00.OZ0EW-SV-STR = OZ0EM002.OZ0EM-CU-STOR-ID;
  end
  if (OZ0EM002.OZ0EM-DEPT-ID-XREF == 0)
    OZ0EW00.OZ0EW-SV-DPT = "**";
  else
    OZ0EW00.OZ0EW-SV-DPT = OZ0EM002.OZ0EM-DEPT-ID-XREF;
  end
  OZWREC.CUST-STR-DPT = OZ0EW00.OZ0EW-CUST-STR-DPT;
  ;
  OZ0EW00.OZ0EW-SV-CUST-NUM = OZ0EM002.OZ0EM-CU-CO-ID;
  OZWREC.KUCCOID = OZ0EW00.OZ0EW-SV-CUST-NUM;
  OZWREC.KUCCONM = OZ0EM002.OZ0EM-CU-CO-NM-HDR;
  OZWREC.XGPCD = OZ0EM002.OZ0EM-GPC-CD;
  OZWREC.XGPDESC = OZ0EM002.OZ0EM-GPC-DESC;
  OZWREC.XSOCD = OZ0EM002.OZ0EM-XSO-SLS-OFC-ID;
  OZWREC.XSOSNM = OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC;
  ;
  OZWREC.OZW-SV-CUST = OZ0EM001.OZ0EM-CU-CO-ID; /* save map1 fields*/
  OZWREC.OZW-SV-STR = OZ0EM001.OZ0EM-CU-STOR-ID;
  OZWREC.OZW-SV-DPT = OZ0EM001.OZ0EM-XNX-DEPT-ID-XREF;
  OZWREC.OZW-SV-XGPCD = OZ0EM001.OZ0EM-GPC-CD;
  OZWREC.OZW-SV-XSOCD = OZ0EM001.OZ0EM-XSO-SLS-OFC-ID;
  OZWREC.SOCD-CUST-BUYER-ID = OZ0EW02.OZ0EW-SOCD-BUYER-ID;
end // end OZ0E-33200

// Reset highlighted fields
Function OZ0E-34000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/
  set OZ0EM002.OZ0EM-GPC-CD initialAttributes;
  set OZ0EM002.OZ0EM-CU-CO-ID initialAttributes;
  set OZ0EM002.OZ0EM-CU-STOR-ID initialAttributes;
  set OZ0EM002.OZ0EM-DEPT-ID-XREF initialAttributes;
  set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID initialAttributes;
  set OZ0EM002.OZ0EM-CUST-CONF initialAttributes;
  set OZ0EM002.OZ0EM-CUST-DISC initialAttributes;
  set OZ0EM002.OZ0EM-SREP-CONF initialAttributes;
  set OZ0EM002.OZ0EM-SREP-DISC initialAttributes;
  set OZ0EM002.OZ0EM-GROUP-BY initialAttributes;
  set OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD initialAttributes;

  if (OZ0EM002.OZ0EM-GPC-CD == "?"
   || OZ0EM002.OZ0EM-XSO-SLS-OFC-ID == "?"
   || OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD == "?")

    if (OZ0EM002.OZ0EM-GPC-CD == "?")
      XPXX001();
      XX0XW02.XX0XWHDR = "                   GPC      ";

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform  gpc window*/
      end
      if (XX0XW02.XX0XWPIX > 0)
        OZ0EM002.OZ0EM-GPC-CD = XGPTBL.XGPCD[XX0XWPIX];
        OZ0EM002.OZ0EM-GPC-DESC = XGPTBL.XGPDESC[XX0XWPIX];
        set OZ0EM002.OZ0EM-GPC-CD cursor;
      else
        OZ0EM002.OZ0EM-GPC-CD = " ";
        set OZ0EM002.OZ0EM-GPC-CD cursor;
        OZ0EM002.OZ0EM-GPC-DESC = " ";
      end
    end

    if (OZ0EM002.OZ0EM-XSO-SLS-OFC-ID == "?")
      XPXX001();
      XX0XW02.XX0XWHDR = "                SALES OFFICE";

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXSO01(); /* perform  gpc window*/
      end
      if (XX0XW02.XX0XWPIX > 0)
        OZ0EM002.OZ0EM-XSO-SLS-OFC-ID = XSOTBL.XSOCD[XX0XWPIX];
        OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC = XSOTBL.XSOSNM[XX0XWPIX];
        set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID cursor;
      else
        OZ0EM002.OZ0EM-XSO-SLS-OFC-ID = " ";
        set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID cursor;
        OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC = " ";
      end
    end

    if (OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD == "?")

      XP0S001(); /* perform pop-up window initialize*/

      if (XP0SW00.XP0SWPIX > 0) /* if user selected a code*/
        OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD = XP0SM001.XP0SM-SOCD-LTR-DIST-CD[XP0SWPIX];
        OZ0EM002.OZ0EM-SOCD-LTR-DIST-DESC = XP0SM001.XP0SM-SOCD-LTR-DIST-DESC[XP0SWPIX];
        set OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD cursor;
      else
        OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD = " ";
        set OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD cursor;
        OZ0EM002.OZ0EM-SOCD-LTR-DIST-DESC = " ";
      end

    end

    converseLib.clearScreen();
    
    OZ0EW00.OZ0EW-SWR = "N";
    OZ0EW00.OZ0EW-SWF = "N";

    exit stack;

  end

  /* ------------------------------------------------------------*/
  /* check for changes*/
  /* ------------------------------------------------------------*/

  if (OZ0EM002.OZ0EM-CUST-CONF is modified)
    if (OZ0EM002.OZ0EM-CUST-CONF == "Y" || 
    OZ0EM002.OZ0EM-CUST-CONF == "N")
      /* continue*/
    else
      set OZ0EM002.OZ0EM-CUST-CONF cursor, bold;
      OZWREC.XXXPRCNM = "34000"; /* Module identification*/
      converseLib.validationFailed(18);
      exit stack;
    end
  end

  if (OZ0EM002.OZ0EM-CUST-DISC is modified)
    if (OZ0EM002.OZ0EM-CUST-DISC == "Y" || 
    OZ0EM002.OZ0EM-CUST-DISC == "N")
      /* continue*/
    else
      set OZ0EM002.OZ0EM-CUST-DISC cursor, bold;
      OZWREC.XXXPRCNM = "34000"; /* Module identification*/
      converseLib.validationFailed(18);
      exit stack;
    end
  end

  if (OZ0EM002.OZ0EM-SREP-CONF is modified)
    if (OZ0EM002.OZ0EM-SREP-CONF == "Y" || 
    OZ0EM002.OZ0EM-SREP-CONF == "N")
      /* continue*/
    else
      set OZ0EM002.OZ0EM-SREP-CONF cursor, bold;
      OZWREC.XXXPRCNM = "34000"; /* Module identification*/
      converseLib.validationFailed(18);
      exit stack;
    end
  end

  if (OZ0EM002.OZ0EM-SREP-DISC is modified)
    if (OZ0EM002.OZ0EM-SREP-DISC == "Y" || 
    OZ0EM002.OZ0EM-SREP-DISC == "N")
      /* continue*/
    else
      set OZ0EM002.OZ0EM-SREP-DISC cursor, bold;
      OZWREC.XXXPRCNM = "34000"; /* Module identification*/
      converseLib.validationFailed(18);
      exit stack;
    end
  end

  if (OZ0EM002.OZ0EM-GROUP-BY == "PO" || 
  OZ0EM002.OZ0EM-GROUP-BY == "SO")
      /* continue*/
  else
    set OZ0EM002.OZ0EM-GROUP-BY cursor, bold;
    OZWREC.XXXPRCNM = "34000"; /* Module identification*/
    converseLib.validationFailed(37);
    exit stack;
  end

  set VOCLCD01 empty;
  VOCLCD01.SOCD-LTR-DIST-CD = OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD;

  if (OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD is modified)
    if (OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD > " ")
      OZ0E-12125(); /* read for ltr dist cd desc*/
      if (SQLCA.VAGen_SQLCODE == +100)
        set OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD cursor, bold;
        OZWREC.XXXPRCNM = "34000"; /* Module identification*/
        converseLib.validationFailed(38);
        exit stack;
      end
    else
      set OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD cursor, bold;
      OZWREC.XXXPRCNM = "34000"; /* Module identification*/
      converseLib.validationFailed(38);
      exit stack;
    end
  end


  ;
  ;
end // end OZ0E-34000

// Verify data that was entered
Function OZ0E-35000()
  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* Otherwise, verify the data.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  else /**/
    OZ0E-35200(); /* verify entered data*/
  end
  ;
end // end OZ0E-35000

// Verify any changed data
Function OZ0E-35200()
  /* ------------------------------------------------------------*/
  /* edit header fields*/
  /* ------------------------------------------------------------*/
  OZ0E-35300();
  /* ------------------------------------------------------*/
  /* validate gpc code*/
  /* ------------------------------------------------------*/

  ;
  if (OZ0EM002.OZ0EM-GPC-CD in XGPTBL.XGPCD) /* code in table*/
    ;
   /* get description*/
    if (OZ0EM002.OZ0EM-GPC-CD in XGPTBL.XGPCD)
      OZ0EM002.OZ0EM-GPC-DESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    end
    set OZ0EM002.OZ0EM-GPC-DESC skip;
    ;
  else
    OZ0EW00.OZ0EW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZ0EW00.OZ0EW-SWR = "N";
    OZWREC.XXXPRCNM = "35200"; /* Module identification*/
    set OZ0EM002.OZ0EM-GPC-CD cursor, bold; /* Highlight*/
    set OZ0EM002.OZ0EM-GPC-DESC skip, invisible; /* darken desc*/
    converseLib.validationFailed(22); /* GPC code invalid*/
    exit stack;
    ;
  end
  ;
  ;

  /* -------------------------------------------------------------*/
  /* if cust.str.dpt all entered verify against dcust.vcust001*/
  /* else use cust number against dcust.vcmpny01*/
  /* in either case read vcmpny01 to get company name*/
  /* -------------------------------------------------------------*/
  if (OZ0EM002.OZ0EM-CU-CO-ID > 0)
    OZ0EW00.OZ0EW-SV-CUST-NUM = OZ0EM002.OZ0EM-CU-CO-ID;
    if (OZ0EM002.OZ0EM-CU-STOR-ID > " " && 
    OZ0EM002.OZ0EM-DEPT-ID-XREF > " " && 
    OZ0EM002.OZ0EM-CU-STOR-ID != "****" && 
    OZ0EM002.OZ0EM-DEPT-ID-XREF != "**")
      OZ0EW00.OZ0EW-SV-STR-NUM = OZ0EM002.OZ0EM-CU-STOR-ID;
      OZ0EW00.OZ0EW-SV-DPT-NUM = OZ0EM002.OZ0EM-DEPT-ID-XREF;
      ;
      OZ0E-25210(); /* validate against dcust.vcust001*/
      if (converseVar.validationMsgNum > 0)
        exit stack;
      end
      OZ0E-25220(); /* retrv cmpny name from dcust.vcmpny01*/
      if (converseVar.validationMsgNum > 0)
        exit stack;
      end
      OZ0EM002.OZ0EM-CU-CO-NM-HDR = KUCREC.KUCCONM;

    else
      OZ0E-25220(); /* validate against dcust.vcmpny01*/
      if (converseVar.validationMsgNum > 0)
        exit stack;
      end
      OZ0EM002.OZ0EM-CU-CO-NM-HDR = KUCREC.KUCCONM;
    end
  end
  /* -------------------------------------------------------------*/
  /* if store and/or dept are blank replace with*/
  /* replace with  '***'*/
  /* -------------------------------------------------------------*/
  ;
  if (OZ0EM002.OZ0EM-CU-STOR-ID == 0 || 
  OZ0EM002.OZ0EM-CU-STOR-ID == " " || 
  OZ0EM002.OZ0EM-CU-STOR-ID == "0000")
    OZ0EM002.OZ0EM-CU-STOR-ID = "****";
  end
  ;
  if (OZ0EM002.OZ0EM-DEPT-ID-XREF == 0 || 
  OZ0EM002.OZ0EM-DEPT-ID-XREF == " " || 
  OZ0EM002.OZ0EM-DEPT-ID-XREF == "00")
    OZ0EM002.OZ0EM-DEPT-ID-XREF = "** ";
  end
  ;

  /* -------------------------------------------------------------*/
  /* if sales office id entered verify against xsotbl*/
  /* retrieve the sales office description*/
  /* -------------------------------------------------------------*/
  if (OZ0EM002.OZ0EM-XSO-SLS-OFC-ID > " ")
    if (OZ0EM002.OZ0EM-XSO-SLS-OFC-ID in XSOTBL.XSOCD) /* code in table*/
      ;
   /* get description*/
      if (OZ0EM002.OZ0EM-XSO-SLS-OFC-ID in XSOTBL.XSOCD)
        OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC = XSOTBL.XSOSNM[sysVar.arrayIndex];
      end
    else
      OZ0EW00.OZ0EW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0EW00.OZ0EW-SWR = "N"; /**/
      OZWREC.XXXPRCNM = "35200"; /* Module identification*/
      set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID cursor, bold; /* Highlight*/
      set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID-DESC skip, invisible; /* darken desc*/
      converseLib.validationFailed(24); /* sales office code invalid*/
      exit stack;
      ;
    end
  end
  ;
  if (OZ0EM002.OZ0EM-CUST-CONF == "Y" || 
  OZ0EM002.OZ0EM-CUST-CONF == "N")
      /* continue*/
  else
    set OZ0EM002.OZ0EM-CUST-CONF cursor, bold;
    OZWREC.XXXPRCNM = "35200"; /* Module identification*/
    converseLib.validationFailed(18);
    exit stack;
  end

  if (OZ0EM002.OZ0EM-CUST-DISC == "Y" || 
  OZ0EM002.OZ0EM-CUST-DISC == "N")
      /* continue*/
  else
    set OZ0EM002.OZ0EM-CUST-DISC cursor, bold;
    OZWREC.XXXPRCNM = "35200"; /* Module identification*/
    converseLib.validationFailed(18);
    exit stack;
  end

  if (OZ0EM002.OZ0EM-SREP-CONF == "Y" || 
  OZ0EM002.OZ0EM-SREP-CONF == "N")
      /* continue*/
  else
    set OZ0EM002.OZ0EM-SREP-CONF cursor, bold;
    OZWREC.XXXPRCNM = "35200"; /* Module identification*/
    converseLib.validationFailed(18);
    exit stack;
  end

  if (OZ0EM002.OZ0EM-SREP-DISC == "Y" || 
  OZ0EM002.OZ0EM-SREP-DISC == "N")
      /* continue*/
  else
    set OZ0EM002.OZ0EM-SREP-DISC cursor, bold;
    OZWREC.XXXPRCNM = "35200"; /* Module identification*/
    converseLib.validationFailed(18);
    exit stack;
  end

  if (OZ0EM002.OZ0EM-GROUP-BY == "PO" || 
  OZ0EM002.OZ0EM-GROUP-BY == "SO")
      /* continue*/
  else
    set OZ0EM002.OZ0EM-GROUP-BY cursor, bold;
    OZWREC.XXXPRCNM = "35200"; /* Module identification*/
    converseLib.validationFailed(37);
    exit stack;
  end
  ;
  if (OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL == "Y" || 
  OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL == "N")
      /* continue*/
  else
    set OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL cursor, bold;
    OZWREC.XXXPRCNM = "35200"; /* Module identification*/
    converseLib.validationFailed(18);
    exit stack;
  end


  set VOCLCD01 empty;
  VOCLCD01.SOCD-LTR-DIST-CD = OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD;

  if (OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD > " ")
    OZ0E-12125(); /* read for ltr dist cd desc*/
    if (SQLCA.VAGen_SQLCODE == +100)
      set OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD cursor, bold;
      OZWREC.XXXPRCNM = "35200"; /* Module identification*/
      converseLib.validationFailed(38);
      exit stack;
    end
  else
    set OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD cursor, bold;
    OZWREC.XXXPRCNM = "35200"; /* Module identification*/
    converseLib.validationFailed(38);
    exit stack;
  end
  ;
  if (COMMAREA.CAFROMAP == "OZ0D")
    if (OZ0EW00.OZ0EW-BUYER-ID == 0)
      converseLib.validationFailed(66);
      exit stack;
    end
  else
    if (OZ0EW02.OZ0EW-SOCD-BUYER-ID == 0)
      converseLib.validationFailed(67);
      exit stack;
    end
  end
  ;
  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end OZ0E-35200

// Edit Header fields
Function OZ0E-35300()
  /* ------------------------------------------------------------*/
  /* edit fields*/
  /* ------------------------------------------------------------*/
  if (OZ0EM002.OZ0EM-GPC-CD == " " || 
  OZ0EM002.OZ0EM-CU-CO-ID == " " || 
  OZ0EM002.OZ0EM-XSO-SLS-OFC-ID == " ")
    OZWREC.XXXPRCNM = "35200";
    converseLib.validationFailed(60);
    set OZ0EM002.OZ0EM-GPC-CD bold;
    set OZ0EM002.OZ0EM-CU-CO-ID bold;
    set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID bold;
    if (OZ0EM002.OZ0EM-GPC-CD == " ")
      set OZ0EM002.OZ0EM-GPC-CD cursor, bold;
    else
      if (OZ0EM002.OZ0EM-CU-CO-ID == " ")
        set OZ0EM002.OZ0EM-CU-CO-ID cursor, bold;
      else
        if (OZ0EM002.OZ0EM-XSO-SLS-OFC-ID == " ")
          set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID cursor, bold;
        end
      end
    end
    exit stack;
  end
  ;
  if (COMMAREA.CAFROMAP != "OZ0D")
    OZ0EW00.OZ0EW-SV-CUST-NUM = OZ0EM002.OZ0EM-CU-CO-ID;
    if (OZ0EM002.OZ0EM-CU-STOR-ID == "****")
      OZ0EW00.OZ0EW-SV-STR-NUM = 0;
    else
      OZ0EW00.OZ0EW-SV-STR-NUM = OZ0EM002.OZ0EM-CU-STOR-ID;
    end
    if (OZ0EM002.OZ0EM-DEPT-ID-XREF == "**")
      OZ0EW00.OZ0EW-SV-DPT-NUM = 0;
    else
      OZ0EW00.OZ0EW-SV-DPT-NUM = OZ0EM002.OZ0EM-DEPT-ID-XREF;
    end
    ;
    if (OZWREC.WC-FLG != "S")
      if (OZ0EM001.OZ0EM-GPC-CD == OZ0EM002.OZ0EM-GPC-CD && 
      OZ0EW01.OZ0EW-CUST[OZ0EW-IXX] == OZ0EW00.OZ0EW-SV-CUST-NUM && 
      OZ0EW01.OZ0EW-STR[OZ0EW-IXX] == OZ0EW00.OZ0EW-SV-STR-NUM && 
      OZ0EW01.OZ0EW-DPT[OZ0EW-IXX] == OZ0EW00.OZ0EW-SV-DPT-NUM && 
      OZ0EM001.OZ0EM-XSO-SLS-OFC-ID == OZ0EM002.OZ0EM-XSO-SLS-OFC-ID)
        converseLib.validationFailed(68);
        set OZ0EM002.OZ0EM-GPC-CD cursor, bold;
        set OZ0EM002.OZ0EM-CU-CO-ID bold;
        set OZ0EM002.OZ0EM-CU-STOR-ID bold;
        set OZ0EM002.OZ0EM-DEPT-ID-XREF bold;
        set OZ0EM002.OZ0EM-XSO-SLS-OFC-ID bold;
      end
    end
  end
  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end OZ0E-35300

// Process valid input request
Function OZ0E-36000()
  /* ------------------------------------------------------*/
  /* PF 24 action*/
  /* ------------------------------------------------------*/
  if (converseVar.eventKey is pf24) /* pf 24 pressed*/
    if (OZ0EW00.OZ0EW-FIRST-DEL-REQ == "N") /* not first request of dele*/
      OZ0E-36300(); /* delete row*/
      OZ0EW00.OZ0EW-SWF = "Y";
      OZ0EW00.OZ0EW-SWR = "Y";
      OZ0EW00.OZ0EW-FIRST-DEL-REQ = "Y";
      converseLib.validationFailed(77); /* successful delete*/
      OZWREC.XXXPRCNM = "36000";
      OZ0EW00.OZ0EW-SWD = 1; /* display map1*/
  /* SET OZ0EW02 EMPTY;*/
      exit stack;
    else
      OZWREC.XXXPRCNM = "36000";
      converseLib.validationFailed(62); /* confirm delete request*/
      OZ0EW-FIRST-DEL-REQ = "N";
  /* SET OZ0EW02 EMPTY;*/
      exit stack;
    end
  end
  /* ------------------------------------------------------------*/
  /* If any changes have been made update or add the row*/
  /* ------------------------------------------------------------*/
  OZ0EW00.OZ0EW-SWF = "Y"; /* Format the map switch*/
   /* convert ws fields to char for comparison*/
  OZ0EW01.OZ0EW-WS-CUST = OZ0EM002.OZ0EM-CU-CO-ID;
  OZ0EW01.OZ0EW-WS-STR = OZ0EM002.OZ0EM-CU-STOR-ID;
  OZ0EW01.OZ0EW-WS-DPT = OZ0EM002.OZ0EM-DEPT-ID-XREF;
  OZ0E-36100(); /* build vocldc01 rec to add*/

  OZWREC.XXXPRCNM = "36000";
  converseLib.validationFailed(1);
  OZ0EW00.OZ0EW-SWR = "Y";
  COMMAREA.CAFROMAP = "OZ0E";
  OZ0EW00.OZ0EW-SWD = 1; /* display map 1*/
  set OZ0EW02 empty;
  OZ0EW00.OZ0EW-BUYER-ID = 0;
  OZ0E-36400(); /* sub di clean up jcl*/
  exit stack;

  ;
end // end OZ0E-36000

// build vocldo01 record
Function OZ0E-36100()
  set VOCLDC01 empty;

  OZ0EW00.OZ0EW-SEL-CUST = OZ0EM002.OZ0EM-CU-CO-ID;
  if (OZ0EM002.OZ0EM-CU-STOR-ID == "****")
    OZ0EW00.OZ0EW-SEL-STR = 0;
  else
    OZ0EW00.OZ0EW-SEL-STR = OZ0EM002.OZ0EM-CU-STOR-ID;
  end
  if (OZ0EM002.OZ0EM-DEPT-ID-XREF == "**")
    OZ0EW00.OZ0EW-SEL-DPT = 0;
  else
    OZ0EW00.OZ0EW-SEL-DPT = OZ0EM002.OZ0EM-DEPT-ID-XREF;
  end
  ;
  VOCLDC01.KUCCOID = OZ0EW00.OZ0EW-SEL-CUST;
  VOCLDC01.KUMSTRID = OZ0EW00.OZ0EW-SEL-STR;
  VOCLDC01.XNXCD = OZ0EW00.OZ0EW-SEL-DPT;
  VOCLDC01.XGPCD = OZ0EM002.OZ0EM-GPC-CD;
  VOCLDC01.XSOCD = OZ0EM002.OZ0EM-XSO-SLS-OFC-ID;
  VOCLDC01.SOCD-LTR-TYP-CD = OZ0EM002.OZ0EM-GROUP-BY;
  VOCLDC01.SOCD-LTR-DIST-CD = OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD;
  VOCLDC01.SOCD-LTR-RVW-FL = OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL;
  if (COMMAREA.CAFROMAP == "OZ0D")
    VOCLDC01.SOCD-BUYER-ID = OZ0EW00.OZ0EW-BUYER-ID;
  else
    VOCLDC01.SOCD-BUYER-ID = OZ0EW02.OZ0EW-SOCD-BUYER-ID;
  end
  ;
  if (OZ0EM002.OZ0EM-CUST-CONF == "N" && 
  OZ0EM002.OZ0EM-CUST-DISC == "N")
    VOCLDC01.SOCD-CUST-REQ-CD = "NR";
  else
    if (OZ0EM002.OZ0EM-CUST-CONF == "Y" && 
    OZ0EM002.OZ0EM-CUST-DISC == "N")
      VOCLDC01.SOCD-CUST-REQ-CD = "CO";
    else
      if (OZ0EM002.OZ0EM-CUST-CONF == "N" && 
      OZ0EM002.OZ0EM-CUST-DISC == "Y")
        VOCLDC01.SOCD-CUST-REQ-CD = "DO";
      else
        if (OZ0EM002.OZ0EM-CUST-CONF == "Y" && 
        OZ0EM002.OZ0EM-CUST-DISC == "Y")
          VOCLDC01.SOCD-CUST-REQ-CD = "CD";
        end
      end
    end
  end

  if (OZ0EM002.OZ0EM-SREP-CONF == "N" && 
  OZ0EM002.OZ0EM-SREP-DISC == "N")
    VOCLDC01.SOCD-SREP-REQ-CD = "NR";
  else
    if (OZ0EM002.OZ0EM-SREP-CONF == "Y" && 
    OZ0EM002.OZ0EM-SREP-DISC == "N")
      VOCLDC01.SOCD-SREP-REQ-CD = "CO";
    else
      if (OZ0EM002.OZ0EM-SREP-CONF == "N" && 
      OZ0EM002.OZ0EM-SREP-DISC == "Y")
        VOCLDC01.SOCD-SREP-REQ-CD = "DO";
      else
        if (OZ0EM002.OZ0EM-SREP-CONF == "Y" && 
        OZ0EM002.OZ0EM-SREP-DISC == "Y")
          VOCLDC01.SOCD-SREP-REQ-CD = "CD";
        end
      end
    end
  end

  OZ0E-36120(); /* add VOCLDC01 record*/
  if (SQLCA.VAGen_SQLCODE == 0)
    OZ0EW00.OZ0EW-UPDATE-SW = "Y";
    OZWREC.OZW-UPD-FLG = "Y";
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == -803) /* dup record*/
      if (OZWREC.WC-FLG != "S")
        if (COMMAREA.CAFROMAP != "OZ0D") /* added the rec going to oz0d*/
          converseLib.validationFailed(69); /* di already exists*/
          OZWREC.XXXPRCNM = "36100";
          exit stack;
        end
      else
        OZ0E-36130(); /* update curr VOCLDC01 record*/
        OZ0EW00.OZ0EW-UPDATE-SW = "Y";
        OZWREC.OZW-UPD-FLG = "Y";
      end
    end
  end
end // end OZ0E-36100

// add new vocldo01 row
Function OZ0E-36120()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDC01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "36120"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0EW00.OZ0EW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0EW00.OZ0EW-TM-HH = OZ0EW00.OZ0EW-TB-HH;
  OZ0EW00.OZ0EW-TM-MM = OZ0EW00.OZ0EW-TB-MM;
  VOCLDC01.ZZZCHGTM = OZ0EW00.OZ0EW-TIME-MK;
  VOCLDC01.ZZZSDTM = OZ0EW00.OZ0EW-TIME-MK;
  ;
  VOCLDC01.ZZZSDT = TA2REC.TA2GRGGN;
  VOCLDC01.SOCD-DIST-EFF-DT = TA2REC.TA2GRGGN;
  VOCLDC01.ZZZCHGCT = 0;
  ;
  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VOCLDC01" ("A ", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == -803) /* dup record*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "36120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-36120

// build vocldo01 record
Function OZ0E-36130()
  OZ0E-36135(); /* read VOCLDC01*/

  VOCLDC01.SOCD-LTR-TYP-CD = OZ0EM002.OZ0EM-GROUP-BY;
  VOCLDC01.SOCD-LTR-DIST-CD = OZ0EM002.OZ0EM-SOCD-LTR-DIST-CD;
  if (COMMAREA.CAFROMAP == "OZ0D")
    VOCLDC01.SOCD-BUYER-ID = OZ0EW00.OZ0EW-BUYER-ID;
  else
    VOCLDC01.SOCD-BUYER-ID = OZ0EW02.OZ0EW-SOCD-BUYER-ID;
  end
  ;
  if (OZ0EM002.OZ0EM-CUST-CONF == "N" && 
  OZ0EM002.OZ0EM-CUST-DISC == "N")
    VOCLDC01.SOCD-CUST-REQ-CD = "NR";
  else
    if (OZ0EM002.OZ0EM-CUST-CONF == "Y" && 
    OZ0EM002.OZ0EM-CUST-DISC == "N")
      VOCLDC01.SOCD-CUST-REQ-CD = "CO";
    else
      if (OZ0EM002.OZ0EM-CUST-CONF == "N" && 
      OZ0EM002.OZ0EM-CUST-DISC == "Y")
        VOCLDC01.SOCD-CUST-REQ-CD = "DO";
      else
        if (OZ0EM002.OZ0EM-CUST-CONF == "Y" && 
        OZ0EM002.OZ0EM-CUST-DISC == "Y")
          VOCLDC01.SOCD-CUST-REQ-CD = "CD";
        end
      end
    end
  end

  if (OZ0EM002.OZ0EM-SREP-CONF == "N" && 
  OZ0EM002.OZ0EM-SREP-DISC == "N")
    VOCLDC01.SOCD-SREP-REQ-CD = "NR";
  else
    if (OZ0EM002.OZ0EM-SREP-CONF == "Y" && 
    OZ0EM002.OZ0EM-SREP-DISC == "N")
      VOCLDC01.SOCD-SREP-REQ-CD = "CO";
    else
      if (OZ0EM002.OZ0EM-SREP-CONF == "N" && 
      OZ0EM002.OZ0EM-SREP-DISC == "Y")
        VOCLDC01.SOCD-SREP-REQ-CD = "DO";
      else
        if (OZ0EM002.OZ0EM-SREP-CONF == "Y" && 
        OZ0EM002.OZ0EM-SREP-DISC == "Y")
          VOCLDC01.SOCD-SREP-REQ-CD = "CD";
        end
      end
    end
  end
  ;
  VOCLDC01.SOCD-LTR-RVW-FL = OZ0EM002.OZ0EM-SOCD-LTR-RVW-FL;

  OZ0E-36137(); /* update vocldc01*/
end // end OZ0E-36130

// read vocldo01 row
Function OZ0E-36135()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  ;
  try
    call "VOCLDC01" ("S ", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "36135"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-36135

// upd  vocldo01 row
Function OZ0E-36137()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCLDC01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "36137"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0EW00.OZ0EW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0EW00.OZ0EW-TM-HH = OZ0EW00.OZ0EW-TB-HH;
  OZ0EW00.OZ0EW-TM-MM = OZ0EW00.OZ0EW-TB-MM;
  VOCLDC01.ZZZCHGTM = OZ0EW00.OZ0EW-TIME-MK;

  ;
  try
    call "VOCLDC01" ("U ", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "16120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-36137

// delete old row
Function OZ0E-36300()
  set VOCLDC01 empty;

  OZ0EW00.OZ0EW-WS-CUSTOMER-NUM = OZ0EM002.OZ0EM-CU-CO-ID;
  if (OZ0EM002.OZ0EM-CU-STOR-ID == "****"
   || OZ0EM002.OZ0EM-CU-STOR-ID == "    ")
    OZ0EW00.OZ0EW-WS-STORE-NUM = 0000;
  else
    OZ0EW00.OZ0EW-WS-STORE-NUM = OZ0EM002.OZ0EM-CU-STOR-ID;
  end
  if (OZ0EM002.OZ0EM-DEPT-ID-XREF == "**"
   || OZ0EM002.OZ0EM-DEPT-ID-XREF == "  ")
    OZ0EW00.OZ0EW-WS-DEPT-NUM = 0;
  else
    OZ0EW00.OZ0EW-WS-DEPT-NUM = OZ0EM002.OZ0EM-DEPT-ID-XREF;
  end

  OZ0EW00.OZ0EW-SV-CUST-NUM = OZ0EW00.OZ0EW-WS-CUSTOMER-NUM;
  OZ0EW00.OZ0EW-SV-CU-CO-ID = OZ0EW00.OZ0EW-SV-CUST-NUM;
  VOCLDC01.KUCCOID = OZ0EW00.OZ0EW-SV-CU-CO-ID;

  OZ0EW00.OZ0EW-SV-STR-NUM = OZ0EW00.OZ0EW-WS-STORE-NUM;
  OZ0EW00.OZ0EW-SV-STOR-ID = OZ0EW00.OZ0EW-SV-STR-NUM;
  VOCLDC01.KUMSTRID = OZ0EW00.OZ0EW-SV-STOR-ID;

  OZ0EW00.OZ0EW-SV-DPT-NUM = OZ0EW00.OZ0EW-WS-DEPT-NUM;
  OZ0EW00.OZ0EW-SV-XNX-DEPT = OZ0EW00.OZ0EW-SV-DPT-NUM;
  VOCLDC01.XNXCD = OZ0EW00.OZ0EW-SV-XNX-DEPT;

  VOCLDC01.XGPCD = OZ0EM002.OZ0EM-GPC-CD;
  VOCLDC01.XSOCD = OZ0EM002.OZ0EM-XSO-SLS-OFC-ID;

  OZ0E-36310(); /* delete VOCLDC01 record*/
  ;
end // end OZ0E-36300

// add new vocldo01 row
Function OZ0E-36310()
  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VOCLDC01" ("D ", SQLCA, VOCLDC01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OZWREC.XXXPRCNM = "36310"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLDC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLDC01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0E-36310

// Submit prod JCL FF7201
Function OZ0E-36400()
   /* ------------------------------------------------------------*/
   /* Call sub-routine to find which environment*/
   /* the program is executing in, development*/
   /* or production.*/
   /* ------------------------------------------------------------*/
  set TA3REC empty;
  TA3REC.TA3OPTN = "ASSIGN ";
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA3REC.TA3RTNCD == 0)          /* Good return code*/

    if (TA3REC.TA3RGNID == "03") /* if on production system*/
      OZ0E-36410(); /* format production jcl*/
    else
      if (TA3REC.TA3RGNID == "04")
        OZ0E-36420(); /* format development jcl - dsnt*/
      else
        OZ0E-36430(); /* format development jcl - dsnf*/
      end
    end

  else
    converseLib.validationFailed(10);
    exit stack;
  end
end // end OZ0E-36400

// Submit prod JCL FF7201
Function OZ0E-36410()
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (OZ0ET.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      OZ0EW03.OZ0EW-CUST-ID = VOCLDC01.KUCCOID;
      OZ0EW03.OZ0EW-GPC-CD = VOCLDC01.XGPCD;
      OZ0EW03.OZ0EW-XSO-CD = VOCLDC01.XSOCD;
      OZ0EW03.CAUSERID = COMMAREA.CAUSERID; /* User id*/
      ;
      TA6REC.TARJCL[TA6INDEX] = OZ0EW03.TARJCL; /* Parameters*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = OZ0ET.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = OZ0ET.TARTYPE[TA6INDEX]; /* Type*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (OZ0ET.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online msg switch*/
  ;
  XPTA0P(); /* Print Request Subroutine*/
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  /*  */
  /* MOVE '12600' TO OZWREC.XXXPRCNM;*/
  /*  */
  /* IF EZERT8 EQ '00000000'          /* Call successful*/
  /* AND TA6REC.TA6RTNCD EQ '0';    /* and normal return*/
  /*  */
  /* SET OZ0EW00 EMPTY;*/
  /* SET OZ0EW01 EMPTY;*/
  /* SET OZ0EW03 EMPTY;*/
  /* SET OZWREC EMPTY;*/
  /*  */
  /* MOVE '1' TO OZ0EW00.OZ0EW-SWD;*/
  /* MOVE 'Y' TO OZ0EW00.OZ0EW-SWF;*/
  /* MOVE 'N' TO OZ0EW00.OZ0EW-SWR;*/
  /* MOVE ' ' TO OZ0EW00.OZ0EW-WRITE-FLG;*/
  /* MOVE ' ' TO OZ0EW00.OZ0EW-UPD-FLG;*/
  /* MOVE ' ' TO OZ0EW00.OZ0EW-WC-FLG;*/
  /*  */
  /* MOVE 49 TO EZEMNO;*/
  /*  */
  /* EZERTN;                        /* Return to previous process*/
  /*  */
  /* D;*/
  /*  */
  /* * ------------------------------------------------------------*/
  /* /* Otherwise, indicate that a system error has occurred.*/
  /* * ------------------------------------------------------------*/
  /*  */
  /* VE 10 TO EZEMNO;               /* Indicate system error*/
  /*  */
  /* EFLO;                          /* Exit to display map*/
  /*  */
  /*  */
end // end OZ0E-36410

// Submit prod JCL FF7201
Function OZ0E-36420()
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (OZ0ETDT.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      OZ0EW03.OZ0EW-CUST-ID = VOCLDC01.KUCCOID;
      OZ0EW03.OZ0EW-GPC-CD = VOCLDC01.XGPCD;
      OZ0EW03.OZ0EW-XSO-CD = VOCLDC01.XSOCD;
      OZ0EW03.CAUSERID = COMMAREA.CAUSERID; /* User id*/
      ;
      TA6REC.TARJCL[TA6INDEX] = OZ0EW03.TARJCL; /* Parameters*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = OZ0ETDT.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = OZ0ETDT.TARTYPE[TA6INDEX]; /* Type*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (OZ0ETDT.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online msg switch*/
  ;
  XPTA0P(); /* Print Request Subroutine*/
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  /*  */
  /* MOVE '12600' TO OZWREC.XXXPRCNM;*/
  /*  */
  /* IF EZERT8 EQ '00000000'          /* Call successful*/
  /* AND TA6REC.TA6RTNCD EQ '0';    /* and normal return*/
  /*  */
  /* SET OZ0EW00 EMPTY;*/
  /* SET OZ0EW01 EMPTY;*/
  /* SET OZ0EW03 EMPTY;*/
  /* SET OZWREC EMPTY;*/
  /*  */
  /* MOVE '1' TO OZ0EW00.OZ0EW-SWD;*/
  /* MOVE 'Y' TO OZ0EW00.OZ0EW-SWF;*/
  /* MOVE 'N' TO OZ0EW00.OZ0EW-SWR;*/
  /* MOVE ' ' TO OZ0EW00.OZ0EW-WRITE-FLG;*/
  /* MOVE ' ' TO OZ0EW00.OZ0EW-UPD-FLG;*/
  /* MOVE ' ' TO OZ0EW00.OZ0EW-WC-FLG;*/
  /*  */
  /* MOVE 49 TO EZEMNO;*/
  /*  */
  /* EZERTN;                        /* Return to previous process*/
  /*  */
  /* D;*/
  /*  */
  /* * ------------------------------------------------------------*/
  /* /* Otherwise, indicate that a system error has occurred.*/
  /* * ------------------------------------------------------------*/
  /*  */
  /* VE 10 TO EZEMNO;               /* Indicate system error*/
  /*  */
  /* EFLO;                          /* Exit to display map*/
  /*  */
  /*  */
end // end OZ0E-36420

// Submit prod JCL FF7201
Function OZ0E-36430()
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (OZ0ETDF.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      OZ0EW03.OZ0EW-CUST-ID = VOCLDC01.KUCCOID;
      OZ0EW03.OZ0EW-GPC-CD = VOCLDC01.XGPCD;
      OZ0EW03.OZ0EW-XSO-CD = VOCLDC01.XSOCD;
      OZ0EW03.CAUSERID = COMMAREA.CAUSERID; /* User id*/
      ;
      TA6REC.TARJCL[TA6INDEX] = OZ0EW03.TARJCL; /* Parameters*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = OZ0ETDF.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = OZ0ETDF.TARTYPE[TA6INDEX]; /* Type*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (OZ0ETDF.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online msg switch*/
  ;
  XPTA0P(); /* Print Request Subroutine*/
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  /*  */
  /* MOVE '12600' TO OZWREC.XXXPRCNM;*/
  /*  */
  /* IF EZERT8 EQ '00000000'          /* Call successful*/
  /* AND TA6REC.TA6RTNCD EQ '0';    /* and normal return*/
  /*  */
  /* SET OZ0EW00 EMPTY;*/
  /* SET OZ0EW01 EMPTY;*/
  /* SET OZ0EW03 EMPTY;*/
  /* SET OZWREC EMPTY;*/
  /*  */
  /* MOVE '1' TO OZ0EW00.OZ0EW-SWD;*/
  /* MOVE 'Y' TO OZ0EW00.OZ0EW-SWF;*/
  /* MOVE 'N' TO OZ0EW00.OZ0EW-SWR;*/
  /* MOVE ' ' TO OZ0EW00.OZ0EW-WRITE-FLG;*/
  /* MOVE ' ' TO OZ0EW00.OZ0EW-UPD-FLG;*/
  /* MOVE ' ' TO OZ0EW00.OZ0EW-WC-FLG;*/
  /*  */
  /* MOVE 49 TO EZEMNO;*/
  /*  */
  /* EZERTN;                        /* Return to previous process*/
  /*  */
  /* D;*/
  /*  */
  /* * ------------------------------------------------------------*/
  /* /* Otherwise, indicate that a system error has occurred.*/
  /* * ------------------------------------------------------------*/
  /*  */
  /* VE 10 TO EZEMNO;               /* Indicate system error*/
  /*  */
  /* EFLO;                          /* Exit to display map*/
  /*  */
  /*  */
end // end OZ0E-36430

//*** RECORD=OZ0EW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record OZ0EW00 type basicRecord
  10 OZ0EW-IXM OZ0EW-IXM ; 
  10 OZ0EW-IXX OZ0EW-IXX ; 
  10 OZ0EW-IX1 OZ0EW-IX1 ; 
  10 OZ0EW-IX2 OZ0EW-IX2 ; 
  10 OZ0EW-IDX OZ0EW-IDX ; 
  10 OZ0EW-CNT OZ0EW-CNT ; 
  10 OZ0EW-SV-CNT OZ0EW-SV-CNT ; 
  10 OZ0EW-SWC OZ0EW-SWC ; 
  10 OZ0EW-SWD OZ0EW-SWD ; 
  10 OZ0EW-SWF OZ0EW-SWF ; 
  10 OZ0EW-SWR OZ0EW-SWR ; 
  10 OZ0EW-SWU OZ0EW-SWU ; 
  10 OZ0EW-SFN OZ0EW-SFN ; 
  10 OZ0EW-FND OZ0EW-FND ; 
  10 OZ0EW-ITEM-FLG OZ0EW-ITEM-FLG ; 
  10 OZ0EW-UPDATE-SW OZ0EW-UPDATE-SW ; 
  10 OZ0EW-LOW-VALUES OZ0EW-LOW-VALUES ; 
  10 OZ0EW-SAVE-PAGE OZ0EW-SAVE-PAGE ; 
  10 OZ0EW-SAVE-STORE OZ0EW-SAVE-STORE ; 
  10 OZ0EW-FIRST-DEL-REQ OZ0EW-FIRST-DEL-REQ ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 OZ0EW-CTL-FLD OZ0EW-CTL-FLD ; 
    15 OZ0EW-FNC OZ0EW-FNC ; 
    15 OZ0EW-SAV OZ0EW-SAV ; 
    15 OZ0EW-SAV-PAGE OZ0EW-SAV-PAGE ; 
  10 OZ0EW-TIME-BRK OZ0EW-TIME-BRK ; 
    15 OZ0EW-TB-HH OZ0EW-TB-HH ; 
    15 * char(1) ; 
    15 OZ0EW-TB-MM OZ0EW-TB-MM ; 
    15 * char(1) ; 
    15 OZ0EW-TB-SS OZ0EW-TB-SS ; 
  10 OZ0EW-TIME-MK OZ0EW-TIME-MK ; 
    15 OZ0EW-TM-HH OZ0EW-TM-HH ; 
    15 OZ0EW-TM-MM OZ0EW-TM-MM ; 
  10 OZ0EW-LAST-CUST-STR-DPT OZ0EW-LAST-CUST-STR-DPT ; 
    15 OZ0EW-LAST-CUST OZ0EW-LAST-CUST ; 
      20 OZ0EW-LAST-CUST-CHAR OZ0EW-LAST-CUST-CHAR [7] ; 
    15 OZ0EW-DOTA OZ0EW-DOTA ; 
    15 OZ0EW-LAST-STR OZ0EW-LAST-STR ; 
    15 OZ0EW-DOTB OZ0EW-DOTB ; 
    15 OZ0EW-LAST-DPT OZ0EW-LAST-DPT ; 
  10 OZ0EW-OZ-CUST-STR-DPT OZ0EW-OZ-CUST-STR-DPT ; 
    15 OZ0EW-OZ-CUST OZ0EW-OZ-CUST ; 
    15 * char(1) ; 
    15 OZ0EW-OZ-STR OZ0EW-OZ-STR ; 
    15 * char(1) ; 
    15 OZ0EW-OZ-DPT OZ0EW-OZ-DPT ; 
  10 OZ0EW-CUST-STR-DPT OZ0EW-CUST-STR-DPT ; 
    15 OZ0EW-SV-CUST OZ0EW-SV-CUST ; 
      20 OZ0EW-SV-CUST-CHAR OZ0EW-SV-CUST-CHAR [7] ; 
    15 OZ0EW-DOT1 OZ0EW-DOT1 ; 
    15 OZ0EW-SV-STR OZ0EW-SV-STR ; 
    15 OZ0EW-DOT2 OZ0EW-DOT2 ; 
    15 OZ0EW-SV-DPT OZ0EW-SV-DPT ; 
  10 OZ0EW-SV-CUST-NUM OZ0EW-SV-CUST-NUM ; 
  10 OZ0EW-SV-STR-NUM OZ0EW-SV-STR-NUM ; 
  10 OZ0EW-SV-DPT-NUM OZ0EW-SV-DPT-NUM ; 
  10 OZ0EW-SREP-CONF-DISC OZ0EW-SREP-CONF-DISC ; 
    15 OZ0EW-SREP-CONF OZ0EW-SREP-CONF ; 
    15 OZ0EW-SLASH1 OZ0EW-SLASH1 ; 
    15 OZ0EW-SREP-DISC OZ0EW-SREP-DISC ; 
  10 OZ0EW-CUST-CONF-DISC OZ0EW-CUST-CONF-DISC ; 
    15 OZ0EW-CUST-CONF OZ0EW-CUST-CONF ; 
    15 OZ0EW-SLASH2 OZ0EW-SLASH2 ; 
    15 OZ0EW-CUST-DISC OZ0EW-CUST-DISC ; 
  10 OZ0EW-SV-STOR-ID OZ0EW-SV-STOR-ID ; 
  10 OZ0EW-SV-XNX-DEPT OZ0EW-SV-XNX-DEPT ; 
  10 OZ0EW-SV-STOR-ID-NUM OZ0EW-SV-STOR-ID-NUM ; 
  10 OZ0EW-SV-XNX-DEPT-NUM OZ0EW-SV-XNX-DEPT-NUM ; 
  10 OZ0EW-SV-CU-CO-ID OZ0EW-SV-CU-CO-ID ; 
  10 OZ0EW-EDIT-FLAG OZ0EW-EDIT-FLAG ; 
  10 OZ0EW-DIST-TYPE OZ0EW-DIST-TYPE ; 
  10 OZ0EW-CU-CO-ID OZ0EW-CU-CO-ID ; 
  10 OZ0EW-CU-STOR-ID OZ0EW-CU-STOR-ID ; 
  10 OZ0EW-XNX-DEPT-ID-XREF OZ0EW-XNX-DEPT-ID-XREF ; 
  10 OZ0EW-CU-CO-NM-HDR OZ0EW-CU-CO-NM-HDR ; 
  10 OZ0EW-SOCD-LTR-TYP-CD OZ0EW-SOCD-LTR-TYP-CD ; 
  10 OZ0EW-SOCD-LTR-DIST-CD OZ0EW-SOCD-LTR-DIST-CD ; 
  10 OZ0EW-DIST-TYPE-DESC OZ0EW-DIST-TYPE-DESC ; 
  10 OZ0EW-BUYER-ID OZ0EW-BUYER-ID ; 
  10 * char(1) ; // Edit Flag
  10 OZ0EW-GPC-CD OZ0EW-GPC-CD ; 
  10 OZ0EW-GPC-DESC OZ0EW-GPC-DESC ; 
  10 OZ0EW-XSO-SLS-OFC-ID OZ0EW-XSO-SLS-OFC-ID ; 
  10 OZ0EW-XSO-SLS-OFC-ID-DESC OZ0EW-XSO-SLS-OFC-ID-DESC ; 
  10 * char(1) ; 
  10 * char(1) ; 
  10 OZ0EW-SEL-GROUP OZ0EW-SEL-GROUP ; 
    15 OZ0EW-SEL-CUST-STR-DPT OZ0EW-SEL-CUST-STR-DPT ; 
      20 OZ0EW-SEL-CUST-CHAR OZ0EW-SEL-CUST-CHAR ; 
        25 OZ0EW-SEL-CUST OZ0EW-SEL-CUST ; 
      20 * char(1) ; 
      20 OZ0EW-SEL-STR-CHAR OZ0EW-SEL-STR-CHAR ; 
        25 OZ0EW-SEL-STR OZ0EW-SEL-STR ; 
      20 * char(1) ; 
      20 OZ0EW-SEL-DPT-CHAR OZ0EW-SEL-DPT-CHAR ; 
        25 OZ0EW-SEL-DPT OZ0EW-SEL-DPT ; 
    15 OZ0EW-SEL-CUST-NM-HDR OZ0EW-SEL-CUST-NM-HDR ; 
    15 OZ0EW-SEL-LTR-TYP-CD OZ0EW-SEL-LTR-TYP-CD ; 
    15 OZ0EW-SEL-GPC OZ0EW-SEL-GPC ; 
    15 OZ0EW-SEL-GPC-DESC OZ0EW-SEL-GPC-DESC ; 
    15 OZ0EW-SEL-SALES-OFF OZ0EW-SEL-SALES-OFF ; 
    15 OZ0EW-SEL-SALES-OFF-DESC OZ0EW-SEL-SALES-OFF-DESC ; 
  10 * char(17) ; 
    15 OZ0EW-SEL-CUST-STR-DPT-CHA OZ0EW-SEL-CUST-STR-DPT-CHA ; 
      20 OZ0EW-SEL-CUST-CHA OZ0EW-SEL-CUST-CHA ; 
      20 DOT3 char(1) ; 
      20 OZ0EW-SEL-STR-CHA OZ0EW-SEL-STR-CHA ; 
      20 DOT4 char(1) ; 
      20 OZ0EW-SEL-DPT-CHA OZ0EW-SEL-DPT-CHA ; 
    15 * char(2) ; 
  10 OZ0EW-WS-CUSTOMER OZ0EW-WS-CUSTOMER ; 
    15 OZ0EW-WS-CUSTOMER-NUM OZ0EW-WS-CUSTOMER-NUM ; 
  10 OZ0EW-WS-STORE OZ0EW-WS-STORE ; 
    15 OZ0EW-WS-STORE-NUM OZ0EW-WS-STORE-NUM ; 
  10 OZ0EW-WS-DEPT OZ0EW-WS-DEPT ; 
    15 OZ0EW-WS-DEPT-NUM OZ0EW-WS-DEPT-NUM ; 
end // end OZ0EW00

//*** RECORD=OZ0EW01 ****
// /*
// /*      application working storage for map1
// /*
// ***********************
Record OZ0EW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(390) ; // Temporary storage page length
    10 OZ0EW-HDR-GPC-CD OZ0EW-HDR-GPC-CD ; 
    10 OZ0EW-HDR-CUST OZ0EW-HDR-CUST ; 
    10 OZ0EW-HDR-STR OZ0EW-HDR-STR ; 
    10 OZ0EW-HDR-DPT OZ0EW-HDR-DPT ; 
    10 OZ0EW-HDR-SLS-OFC OZ0EW-HDR-SLS-OFC ; 
    10 OZ0EW-SEL OZ0EW-SEL [12] ; 
    10 OZ0EW-GROUP OZ0EW-GROUP [12] ; 
      15 OZ0EW-CUST OZ0EW-CUST ; 
      15 OZ0EW-STR OZ0EW-STR ; 
      15 OZ0EW-DPT OZ0EW-DPT ; 
      15 OZ0EW-SREP-CONF OZ0EW-SREP-CONF ; 
      15 OZ0EW-SREP-DISC OZ0EW-SREP-DISC ; 
      15 OZ0EW-CUST-CONF OZ0EW-CUST-CONF ; 
      15 OZ0EW-CUST-DISC OZ0EW-CUST-DISC ; 
      15 OZ0EW-SOCD-LTR-DIST-CD OZ0EW-SOCD-LTR-DIST-CD ; 
      15 OZ0EW-SOCD-LTR-TYP-CD OZ0EW-SOCD-LTR-TYP-CD ; 
      15 OZ0EW-SOCD-LTR-RVW-FL OZ0EW-SOCD-LTR-RVW-FL ; 
      15 OZ0EW-SOCD-BUYER-ID OZ0EW-SOCD-BUYER-ID ; 
    10 OZ0EW-WS-CUST OZ0EW-WS-CUST ; 
    10 OZ0EW-WS-STR OZ0EW-WS-STR ; 
    10 OZ0EW-WS-DPT OZ0EW-WS-DPT ; 
end // end OZ0EW01

//*** RECORD=OZ0EW02 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record OZ0EW02 type basicRecord
  5 OZ0EW-GROUP-DATA OZ0EW-GROUP-DATA ; 
    10 OZ0EW-CUST OZ0EW-CUST ; 
    10 OZ0EW-STR OZ0EW-STR ; 
    10 OZ0EW-DPT OZ0EW-DPT ; 
    10 OZ0EW-SREP-CONF OZ0EW-SREP-CONF ; 
    10 OZ0EW-SREP-DISC OZ0EW-SREP-DISC ; 
    10 OZ0EW-CUST-CONF OZ0EW-CUST-CONF ; 
    10 OZ0EW-CUST-DISC OZ0EW-CUST-DISC ; 
    10 OZ0EW-SOCD-LTR-DIST-CD OZ0EW-SOCD-LTR-DIST-CD ; 
    10 OZ0EW-SOCD-LTR-TYP-CD OZ0EW-SOCD-LTR-TYP-CD ; 
    10 OZ0EW-SOCD-LTR-RVW-FL OZ0EW-SOCD-LTR-RVW-FL ; 
    10 OZ0EW-SOCD-BUYER-ID OZ0EW-SOCD-BUYER-ID ; 
    10 OZ0EW-GPC-CD OZ0EW-GPC-CD ; 
    10 OZ0EW-GPC-DESC OZ0EW-GPC-DESC ; 
    10 OZ0EW-XSO-SLS-OFC-ID OZ0EW-XSO-SLS-OFC-ID ; 
    10 OZ0EW-XS0-SLS-OFC-ID-DESC OZ0EW-XS0-SLS-OFC-ID-DESC ; 
end // end OZ0EW02

//*** RECORD=OZ0EW03 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record OZ0EW03 type basicRecord
  10 TARJCL TARJCL ; 
    15 OZ0EW-CUST-ID OZ0EW-CUST-ID ; 
    15 OZ0EW-GPC-CD OZ0EW-GPC-CD ; 
    15 OZ0EW-XSO-CD OZ0EW-XSO-CD ; 
    15 CAUSERID CAUSERID ; 
    15 * char(59) ; 
end // end OZ0EW03

DataItem OZ0EW-BUYER-ID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Index for map fields
DataItem OZ0EW-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Pass record control field
DataItem OZ0EW-CTL-FLD char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-CU-CO-ID char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-CU-CO-NM-HDR char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-CU-STOR-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//  Group Level
DataItem OZ0EW-CUST num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0EW-CUST-CONF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-CUST-CONF-DISC char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-CUST-DISC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-CUST-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//  Group Level
DataItem OZ0EW-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-DIST-TYPE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-DIST-TYPE-DESC char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-DOT1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-DOT2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-DOTA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-DOTB char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//  Group Level
DataItem OZ0EW-DPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-EDIT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem OZ0EW-FIRST-DEL-REQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map function switch
DataItem OZ0EW-FNC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function switch
DataItem OZ0EW-FND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE DESCRIPTION - HEADER
DataItem OZ0EW-GPC-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//  Group Level
DataItem OZ0EW-GROUP char(29)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//  Group Level
DataItem OZ0EW-GROUP-DATA char(75)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-HDR-CUST char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-HDR-DPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-HDR-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-HDR-SLS-OFC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-HDR-STR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0EW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// function switch
DataItem OZ0EW-ITEM-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0EW-IX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0EW-IX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0EW-IXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0EW-IXX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-LAST-CUST char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-LAST-CUST-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//  Group Level
DataItem OZ0EW-LAST-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-LAST-DPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-LAST-STR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function switch
DataItem OZ0EW-LOW-VALUES char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-OZ-CUST char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//  Group Level
DataItem OZ0EW-OZ-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-OZ-DPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-OZ-STR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Save index for WS
DataItem OZ0EW-SAV num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Save page for cursor placement
DataItem OZ0EW-SAV-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Page save field
DataItem OZ0EW-SAVE-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Page save field
DataItem OZ0EW-SAVE-STORE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// LINE SELECTION INDICATOR
DataItem OZ0EW-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-CUST num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0EW-SEL-CUST-CHA char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-CUST-CHAR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-CUST-NM-HDR char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-CUST-STR-DPT-CHA char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-DPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0EW-SEL-DPT-CHA char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-DPT-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-GPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-GPC-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-GROUP char(70)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-LTR-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-SALES-OFF char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-SALES-OFF-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-STR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0EW-SEL-STR-CHA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SEL-STR-CHAR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function switch
DataItem OZ0EW-SFN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SLASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SLASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SOCD-BUYER-ID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//  Group Level
DataItem OZ0EW-SOCD-LTR-DIST-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SOCD-LTR-RVW-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//  Group Level
DataItem OZ0EW-SOCD-LTR-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SREP-CONF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SREP-CONF-DISC char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SREP-DISC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//  Group Level
DataItem OZ0EW-STR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Index for map fields
DataItem OZ0EW-SV-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-SV-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-SV-CUST char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SV-CUST-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SV-CUST-NUM num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-SV-DPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SV-DPT-NUM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-SV-STOR-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-SV-STOR-ID-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-SV-STR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-SV-STR-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-SV-XNX-DEPT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-SV-XNX-DEPT-NUM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Cursor end of file switch
DataItem OZ0EW-SWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be displayed switch
DataItem OZ0EW-SWD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem OZ0EW-SWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem OZ0EW-SWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Storage page update switch
DataItem OZ0EW-SWU char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-TB-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0EW-TB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0EW-TB-SS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0EW-TIME-BRK char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-TIME-MK num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0EW-TM-HH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-TM-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0EW-UPDATE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//  Group Level
DataItem OZ0EW-WS-CUST char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-WS-CUSTOMER char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-WS-CUSTOMER-NUM num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0EW-WS-DEPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-WS-DEPT-NUM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//  Group Level
DataItem OZ0EW-WS-DPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-WS-STORE char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-WS-STORE-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//  Group Level
DataItem OZ0EW-WS-STR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-XNX-DEPT-ID-XREF char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0EW-XS0-SLS-OFC-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0EW-XSO-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE DESCRIPTION - HEADER
DataItem OZ0EW-XSO-SLS-OFC-ID char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE DESCRIPTION - HEADER
DataItem OZ0EW-XSO-SLS-OFC-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

