package oz0j;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPOZ-00001;
import corpcom4.XSOZ-S0001;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpcom7.ZZZSDTM;
import oz.common.*;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import xx.common.*;
import xx.common.XOBCD;
import xx.common.ZZZSDT;
import xx02.*;
import xx04.*;
import xx04.XOBTBL;
import xx05.*;
//*** PROGRAM=OZ0J ****
// This application will display the OC&D Change Reason Text
// and the change reason text eligibility flag.   The user
// may update one line at a time by changing the eligibility
// flag or the reason text and pressing enter.
// The user may page forward (pf8) and page backward (pf7)
// through the selected list.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      06/12/97  dsmit0  New application.
// *********************
Program OZ0J type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OZ00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  OZ0JW00 OZ0JW00; // record
  OZ0JW01 OZ0JW01; // record
  OZWREC OZWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VOCEBO01 VOCEBO01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use XOBTBL {deleteAfterUse = yes}; // table
  use OZ0JM.OZ0JM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPOZ-00001: XPOZ-00001();
    /* ------------------------------------------------------------*/
    /* Initialize working storage and display storage areas.*/
    /* ------------------------------------------------------------*/
    ;
    set OZ0JM001 initial; /* M001 input/output*/
    set OZ0JW00 empty; /* Working storage*/
    set OZ0JW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    ;
    OZ0JW00.OZ0JW-SWD = "1"; /* Map to be displayed switch*/
    OZ0JW00.OZ0JW-SWF = "Y"; /* Format the map switch*/
    OZ0JW00.OZ0JW-SWR = "Y"; /* Request for data switch*/
  
    if (OZWREC.OZW-APPIDX == 0)
      OZWREC.OZW-APPIDX = 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0A";
    end
  
    /* ------------------------------------------------------------*/
    /* If data was passed in the COMMAREA, use as the initial key.*/
    /* ------------------------------------------------------------*/
    ;
    if (COMMAREA.CAITEM > " ") /* Data was passed*/
      ;
      COMMAREA.CAITEM = " "; /* Clear passed data*/
      ;
      OZ0JW00.OZ0JW-SWR = "Y"; /* Request for data switch*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/
    ;
    goto OZ0J-00000; /* Converse the main process*/
    ;
    ;
    OZ0J-00000: OZ0J-00000();
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/
    ;
    goto OZ0J-00000; /* Converse the main process*/
    ;
    ;
  end // end main
end // end OZ0J

// Main process to display a map
Function OZ0J-00000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) If specified, display the first map.*/
  /* 2) Otherwise, if specified, display the second map, depending*/
  /* on function = add or change*/
  /* 3) Otherwise, indicate error and exit to Application Menu.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0JW00.OZ0JW-SWD == "1") /* Map 1 was requested*/
    ;
    OZ0J-10000(); /* Display map 1*/
    ;
  else
    ;
      /* ------------------------------------------------------------*/
      /* Write the error to the Error Diagnosis Reporting Facility.*/
      /* ------------------------------------------------------------*/
    ;
    OZWREC.XXXPRCNM = "00000"; /* Module identification*/
    OZWREC.XXXMSGNO = 10; /* Unexpected error occurred*/
    ;
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";
    TA1REC.TA1MAPNO = OZ0JW00.OZ0JW-SWD; /* Map number*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
    ;
      /* ------------------------------------------------------------*/
      /* Exit to display the application system menu.*/
      /* ------------------------------------------------------------*/
    ;
    COMMAREA.CATOAP = "OZ0A"; /* TO application*/
    ;
    XSOZ-S0001(); /* Exit to another application*/
    ;
      /* ------------------------------------------------------------*/
      /* Abnormally terminate the transaction if the exit failed.*/
      /* ------------------------------------------------------------*/
    ;
    TA1REC.TA1FUNC = "ABND"; /* Termination function*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
    ;
  end
  ;
  ;
  ;
end // end OZ0J-00000

// List the rows in the table
Function OZ0J-10000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Obtain the data to display.*/
  /* 2) Format the map output area and display the map.*/
  /* 3) Check the attention identifier used to respond.*/
  /* 4) Reset highlighted fields to normal intensity.*/
  /* 5) Verify the data that was entered.*/
  /* 6) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0J-11000(); /* Obtain the data to display*/
  ;
  OZ0J-12000(); /* Format and display the map*/
  ;
  OZ0J-13000(); /* Check attention identifier*/
  ;
  OZ0J-14000(); /* Reset fields to normal intensity*/
  ;
  OZ0J-15000(); /* Verify the entered data*/
  ;
  OZ0J-16000(); /* Process valid input request*/
  ;
  ;
end // end OZ0J-10000

// Obtain the data to display
Function OZ0J-11000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0JW00.OZ0JW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0JW00.XXXTSLEN = 525; /* temp storage page length*/
  ;
  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0JW00.XXXTSPAG == 0) /* no pages established*/
    OZ0JW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0J-11100(); /* Purge any temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* Select and open the cursor for the set to be formatted.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0J-11300(); /* Select set and open cursor*/
  ;
  /* ------------------------------------------------------------*/
  /* Fetch and format the data into pages until end of cursor.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0JW00.OZ0JW-IXM = 1; /* Display line index*/
  OZ0JW00.OZ0JW-SWC = "N"; /* End of cursor switch*/
  ;
  while (OZ0JW00.OZ0JW-SWC == "N") /* Until end of cursor*/
    ;
    OZ0J-11400(); /* Fetch next row in the cursor*/
    ;
    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/
    ;
    if (OZ0JW00.OZ0JW-SWC == "N") /* Not end of cursor*/
      OZ0J-11500(); /* Save data in display storage*/
    end
    ;
    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/
    ;
    if (OZ0JW00.OZ0JW-IXM > 15) /* Page is full*/
      ;
      OZ0J-11600(); /* Add page to temporary storage*/
      ;
      OZ0JW00.OZ0JW-IXM = 1; /* Display line index*/
      ;
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Add any partially formatted last page to the queue.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0JW00.OZ0JW-IXM > 1) /* Page was formatted*/
    OZ0J-11600(); /* Add page to temporary storage*/
  end
  ;
  /* ------------------------------------------------------------*/
  /* Close the cursor for the selected set.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0J-11700(); /* Close the selected set cursor*/
  ;
  /* ------------------------------------------------------------*/
  /* If no pages were formatted, indicate no data to display.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0JW00.TA5TSQIX == 0) /* No pages formatted*/
    ;
    OZWREC.XXXPRCNM = "11000"; /* Module identification*/
    OZWREC.XXXMSGNO = 16; /* No data was found to display*/
    set OZ0JM001.OZ0JMSEL[1] cursor; /* cursor*/
    OZ0JM001.OZ0JMSEL[1] = " "; /* reset select field*/
    set OZ0JM001.OZ0JMSEL[1] skip;
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0JW00.OZ0JW-SWR = "N"; /* Request for data switch*/
  ;
  ;
end // end OZ0J-11000

// Purge any temporary storage
Function OZ0J-11100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/
  ;
  set OZ0JW01 empty; /* M001 display storage*/
  ;
  OZ0JW00.OZ0JW-SWU = "N"; /* Storage update switch*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0JW00.TA5TSQIX = 0; /* Highest page number*/
  ;
  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (OZ0JW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  OZWREC.XXXPRCNM = "11100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0J-11100

// Select set and open cursor
Function OZ0J-11300()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/
  ;
  set VOCEBO01 empty; /* Clear row storage area*/
  ;
  try
    call "VOCEBO01" ("S1", SQLCA, VOCEBO01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "11300"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCEBO01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCEBO01.VOCEBO01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0J-11300

// Fetch next row in the cursor
Function OZ0J-11400()
  /* ------------------------------------------------------------*/
  /* Fetch the next row to display from the table.*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VOCEBO01" ("N1", SQLCA, VOCEBO01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/
  ;
  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0)

      if (VOCEBO01.XOBCD == 99) /* end of table*/
        OZ0JW00.OZ0JW-SWC = "Y"; /* Indicate end of cursor*/
      end

      return;

    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      ;
      OZ0JW00.OZ0JW-SWC = "Y"; /* Indicate end of cursor*/
      ;
      return; /* Return to previous process*/
      ;
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "11400"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCEBO01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCEBO01.VOCEBO01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0J-11400

// Save data in display storage
Function OZ0J-11500()
  /* ------------------------------------------------------------*/
  /* Save the data from the table row in display storage.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0JW01.OZ0JW-XOBCD[OZ0JW-IXM] = VOCEBO01.XOBCD;
  OZ0JW01.OZ0JW-ZZZSDT[OZ0JW-IXM] = VOCEBO01.ZZZSDT;
  OZ0JW01.OZ0JW-ZZZSDTM[OZ0JW-IXM] = VOCEBO01.ZZZSDTM;

  if (VOCEBO01.XOBCD in XOBTBL.XOBCD)
    OZ0JW01.OZ0JW-XOB-ABBR[OZ0JW-IXM] = XOBTBL.XOBABRV[sysVar.arrayIndex];
    OZ0JW01.OZ0JW-XOB-DESC[OZ0JW-IXM] = XOBTBL.XOBDESC[sysVar.arrayIndex];
  end
  ;
  OZ0JW00.OZ0JW-IXM = OZ0JW00.OZ0JW-IXM + 1; /* Increment index*/
end // end OZ0J-11500

// Add page to temporary storage
Function OZ0J-11600()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0JW01.XXXTSLEN = OZ0JW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (OZ0JW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set OZ0JW01 empty; /* M001 display storage*/
    ;
    OZ0JW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  OZWREC.XXXPRCNM = "11600"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0J-11600

// Close selected set cursor
Function OZ0J-11700()
  /* ------------------------------------------------------------*/
  /* Close the selected set of table rows.*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VOCEBO01" ("C1", SQLCA, VOCEBO01) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "11700"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCEBO01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0J-11700

// Format and converse the map
Function OZ0J-12000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0JW00.OZ0JW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/
    ;
    if (OZ0JW00.OZ0JW-SWF == "Y") /* Map must be formatted*/
      OZ0J-12100(); /* Format the data on the map*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0JM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  OZ0JM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0JM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (OZWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0JM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    OZ0JM001.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/
    ;
    set OZ0JM001 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse OZ0JM001 ;
  ;
  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/
  ;
  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  OZ0JW00.OZ0JW-SFN = " "; /* reset function switch*/
   /* reset saved page*/
  OZ0JW00.OZ0JW-SAVE-PAGE = 0;
  COMMAREA.CATOAP = OZ0JM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0JM001.CAITEM; /* Application data*/
end // end OZ0J-12000

// Format the display data
Function OZ0J-12100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/
  ;
  set OZ0JM001 initial; /* M001 input/output area*/
  ;
  OZ0JW00.OZ0JW-SWF = "N"; /* Format the map switch*/
  ;
  XX0XS01(); /* get system date and time*/
  ;
  /* ------------------------------------------------------------*/
  ;
  if (OZ0JW00.OZ0JW-SAVE-PAGE != 0) /* if page saved off*/
    ;
    OZ0JW00.XXXTSPAG = OZ0JW-SAVE-PAGE; /* use saved page*/
    ;
    OZ0J-12110(); /* Obtain temporary storage page*/
    ;
    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/
    ;
    set OZ0JM001.XXXLITPG skip; /* "PAGE" literal*/
    OZ0JM001.XXXTSPAG = OZ0JW00.XXXTSPAG; /* Current page*/
    set OZ0JM001.XXXLITOF skip; /* "OF" literal*/
    OZ0JM001.TA5TSQIX = OZ0JW00.TA5TSQIX; /* Highest page*/
    ;
  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/
    ;
  else
    if (OZ0JW00.TA5TSQIX > 0) /* Pages were formatted*/
      ;
      if (OZ0JW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
        ;
        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/
        ;
        if (OZ0JW00.OZ0JW-SWU == "Y") /* Current page was changed*/
          ;
          OZ0J-12120(); /* Update temporary storage page*/
          ;
          OZ0JW00.OZ0JW-SWU = "N"; /* Storage update switch*/
          ;
        end
        ;
        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/
        ;
        if (OZ0JW00.XXXTSPAG > OZ0JW00.TA5TSQIX) /* Desired greater highest*/
          OZ0JW00.XXXTSPAG = OZ0JW00.TA5TSQIX; /* Default to highest*/
        end
        ;
        OZ0J-12110(); /* Obtain temporary storage page*/
        ;
      end
      ;
      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/
      ;
      set OZ0JM001.XXXLITPG skip; /* "PAGE" literal*/
      OZ0JM001.XXXTSPAG = OZ0JW00.XXXTSPAG; /* Current page*/
      set OZ0JM001.XXXLITOF skip; /* "OF" literal*/
      OZ0JM001.TA5TSQIX = OZ0JW00.TA5TSQIX; /* Highest page*/
      ;
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Format the data in the map from the display storage.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0JW00.OZ0JW-IXM = 1; /* Initialize map index*/
  while (OZ0JW00.OZ0JW-IXM <= 15
   && OZ0JW01.OZ0JW-XOBCD[OZ0JW-IXM] > " ")
    ;
    OZ0JM001.OZ0JMSEL[OZ0JW-IXM] = OZ0JW01.OZ0JW-SEL[OZ0JW-IXM];
    OZ0JM001.OZ0JM-XOBCD[OZ0JW-IXM] = OZ0JW01.OZ0JW-XOBCD[OZ0JW-IXM];
    OZ0JM001.OZ0JM-XOB-DESC[OZ0JW-IXM] = OZ0JW01.OZ0JW-XOB-DESC[OZ0JW-IXM];
    OZ0JM001.OZ0JM-XOB-ABBR[OZ0JW-IXM] = OZ0JW01.OZ0JW-XOB-ABBR[OZ0JW-IXM];

    OZ0JW00.OZ0JW-DATE-BRK = OZ0JW01.OZ0JW-ZZZSDT[OZ0JW-IXM];

    OZ0JW00.OZ0JW-DM-YY = OZ0JW00.OZ0JW-DB-YY;
    OZ0JW00.OZ0JW-DM-MM = OZ0JW00.OZ0JW-DB-MM;
    OZ0JW00.OZ0JW-DM-DD = OZ0JW00.OZ0JW-DB-DD;
    OZ0JW00.OZ0JW-DM-DASH1 = "-";
    OZ0JW00.OZ0JW-DM-DASH2 = "-";

    OZ0JM001.OZ0JM-SETUP-DATE[OZ0JW-IXM] = OZ0JW00.OZ0JW-DATE-MK;

    if (OZ0JM001.OZ0JM-XOBCD[OZ0JW-IXM] > "  ")
      set OZ0JM001.OZ0JMSEL[OZ0JW-IXM] underline, defaultColor;
      set OZ0JM001.OZ0JM-XOBCD[OZ0JW-IXM] underline, defaultColor;
    end

    OZ0JW00.OZ0JW-IXM = OZ0JW00.OZ0JW-IXM + 1;

  end

  /*  */
  if (COMMAREA.CACHGFL == "N")

    OZ0JW00.OZ0JW-IXM = 1;
    while (OZ0JW00.OZ0JW-IXM < 16)
      set OZ0JM001.OZ0JMSEL[OZ0JW-IXM] noHighLight, skip;
      set OZ0JM001.OZ0JM-XOBCD[OZ0JW-IXM] noHighLight, skip;
      OZ0JW00.OZ0JW-IXM = OZ0JW00.OZ0JW-IXM + 1;
    end

    set OZ0JM001.CATOAP cursor;

  end
  ;
end // end OZ0J-12100

// Read temporary storage page
Function OZ0J-12110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0JW01.XXXTSLEN = OZ0JW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = OZ0JW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (OZ0JW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  OZWREC.XXXPRCNM = "12110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0J-12110

// Update temporary storage page
Function OZ0J-12120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5FNCCD = "U"; /* Function code*/
  ;
  try
    call "TA0050" (OZ0JW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  OZWREC.XXXPRCNM = "12120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0J-12120

// Check attention identifier
Function OZ0J-13000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0JW00.OZ0JW-SWR == "Y") /* Request for data*/
      set OZ0JW01 empty; /* M001 display storage*/
    end

    OZ0JW00.OZ0JW-SWF = "Y"; /* Format the map switch*/
    OZ0JW00.OZ0JW-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/
  if (OZ0JM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0J")
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
        OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0J";
      end

      OZ0J-11100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0JM001.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid attention identifier was used to*/
  /* invoke the transaction.  Display an error message to the*/
  /* user if the PF key used is not supported.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   
   && converseVar.eventKey not pf3   
   && converseVar.eventKey not pf4   
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf13) /* and PF13 was not pressed*/

    OZWREC.XXXPRCNM = "13000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  else

    if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0J")
      OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0J";
    end

  end

  /* ------------------------------------------------------------*/
  /* If HELP, exit to the previous level or exit to the Master*/
  /* Menu was requested, exit to another application.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      if (OZWREC.OZW-APPIDX > 1)
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX - 1;

        if (OZWREC.OZW-APPL[OZW-APPIDX] > "    ")
          COMMAREA.CATOAP = OZWREC.OZW-APPL[OZW-APPIDX];
        else
          COMMAREA.CATOAP = "OZ0A";
        end

      else
        COMMAREA.CATOAP = COMMAREA.CAFROMAP;
      end

    end

    OZ0J-11100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    exit stack;

  end

  /* ------------------------------------------------------------*/
  /* pf13 - add*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf13) /* PF13 was pressed*/
    if (COMMAREA.CACHGFL == "N")
      converseLib.validationFailed(74); /* no authority*/
      OZ0JW00.OZ0JW-SWR = "N";
      exit stack;
    else
      if ("A" in OZ0JM001.OZ0JMSEL)
        OZ0JW00.OZ0JW-SWR = "Y"; /* Request for data switch*/
        OZ0JW00.OZ0JW-SWF = "Y";
      else
        OZ0JM001.OZ0JMSEL[1] = "A";
        set OZ0JM001.OZ0JMSEL[1] cursor, underline;
        OZ0JM001.OZ0JM-XOBCD[1] = "  ";
        set OZ0JM001.OZ0JM-XOBCD[1] underline;
        OZ0JM001.OZ0JM-XOB-DESC[1] = " ";
        OZ0JM001.OZ0JM-XOB-ABBR[1] = " ";
        OZ0JM001.OZ0JM-SETUP-DATE[1] = " ";
        OZ0JM001.VAGen_EZEMSG = " ";
        converseLib.validationFailed(0); /* PA/PF key pressed is not valid*/
        OZ0JW00.OZ0JW-SWR = "N"; /* Request for data switch*/
        exit stack; /* Exit to display map*/
      end
    end
  end

  /* ------------------------------------------------------------*/
  /* enter*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter)
    OZ0JW00.OZ0JW-SWR = "Y"; /* Request for data switch*/
    OZ0JW00.OZ0JW-SWF = "Y";
  end
  ;
end // end OZ0J-13000

// Reset highlighted fields
Function OZ0J-14000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/

  OZ0JW00.OZ0JW-IXM = 1; /* Initialize line index*/

  while (OZ0JW00.OZ0JW-IXM <= 15 /* * Until end of lines*/
   && COMMAREA.CACHGFL == "Y")

    set OZ0JM001.OZ0JMSEL[OZ0JW-IXM] normal; /* Reset select flag*/
    set OZ0JM001.OZ0JM-XOBCD[OZ0JW-IXM] normal;
    set OZ0JM001.OZ0JM-XOB-DESC[OZ0JW-IXM] normal;
    set OZ0JM001.OZ0JM-XOB-ABBR[OZ0JW-IXM] normal;
    set OZ0JM001.OZ0JM-SETUP-DATE[OZ0JW-IXM] normal;

    OZ0JW00.OZ0JW-IXM = OZ0JW00.OZ0JW-IXM + 1; /* Increment line index*/

  end

  set OZ0JM001.CATOAP initialAttributes; /* TO application*/
  set OZ0JM001.CAITEM initialAttributes; /* Application data*/
  ;
end // end OZ0J-14000

// Verify data that was entered
Function OZ0J-15000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/
  ;
  if (OZ0JM001.CAITEM > " ") /* Application data was entered*/
    ;
    OZWREC.XXXPRCNM = "15000"; /* Module identification*/
    set OZ0JM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    ;
  end
  ;
  ;
  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/
    ;
    OZ0J-15100(); /* Verify scroll request*/
    ;
  else
    ;
    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the line.*/
    /* ------------------------------------------------------------*/
    ;
    if (converseVar.eventKey is enter &&  /* Enter was pressed*/
    OZ0JM001 is modified)                 /* and data was changed*/

      OZ0J-15200(); /* Verify data in the line*/

    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end OZ0J-15000

// Verify scroll request
Function OZ0J-15100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OZ0JW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OZ0JW00.XXXTSPAG >= OZ0JW00.TA5TSQIX) /* and no more pages*/
    ;
    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Indicate an error for any data that was modified.*/
  /* ------------------------------------------------------------*/
  ;
  OZ0JW00.OZ0JW-IXM = 1; /* Initialize line index*/
  ;
  while (OZ0JW00.OZ0JW-IXM < 16) /* Until end of lines*/
    ;
    if (OZ0JM001.OZ0JMSEL[OZ0JW-IXM] != OZ0JW01.OZ0JW-SEL[OZ0JW-IXM])
      ;
      OZWREC.XXXPRCNM = "15100"; /* Module identification*/
      set OZ0JM001.OZ0JMSEL[OZ0JW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(14); /* Field may not change*/
      ;
    end
    ;
    OZ0JW00.OZ0JW-IXM = OZ0JW00.OZ0JW-IXM + 1; /* increment line number*/
    ;
  end
  ;
  ;
end // end OZ0J-15100

// Verify data in the line
Function OZ0J-15200()
  /* ------------------------------------------------------------*/
  /* edit map*/
  /* ------------------------------------------------------------*/
  OZ0JW00.OZ0JW-IXM = 1; /* initialize index*/

  while (OZ0JW00.OZ0JW-IXM < 16) /* until end of lines*/

    if (OZ0JM001.OZ0JMSEL[OZ0JW-IXM] != " ")

      if (OZ0JM001.OZ0JMSEL[OZ0JW-IXM] == "A"
       || OZ0JM001.OZ0JMSEL[OZ0JW-IXM] == "D")
           /* continue*/
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0JM001.OZ0JMSEL[OZ0JW-IXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(57); /* Only 'd' or 'a'*/
        OZ0JW00.OZ0JW-SWF = "N";
        return;
      end

      if (OZ0JM001.OZ0JMSEL[OZ0JW-IXM] == "A")
        if (OZ0JM001.OZ0JM-XOBCD > "  ")
          if (OZ0JM001.OZ0JM-XOBCD in XOBTBL.XOBCD)
             /* continue*/
          else
            OZWREC.XXXPRCNM = "15200"; /* Module identification*/
            set OZ0JM001.OZ0JM-XOBCD cursor, bold;
            OZ0JW00.OZ0JW-SWF = "N";
            converseLib.validationFailed(56); /* xob cd invalid*/
            return;
          end
        else
          OZWREC.XXXPRCNM = "15200"; /* Module identification*/
          set OZ0JM001.OZ0JM-XOBCD cursor, bold;
          OZ0JW00.OZ0JW-SWF = "N";
          converseLib.validationFailed(56); /* xob cd invalid*/
          return;
        end
      end

    end

    OZ0JW00.OZ0JW-IXM = OZ0JW00.OZ0JW-IXM + 1; /* increment line number*/

  end
end // end OZ0J-15200

// Process valid input request
Function OZ0J-16000()
  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Scroll back requested*/
    ;
    OZ0JW00.XXXTSPAG = OZ0JW00.XXXTSPAG - 1; /* Decrement page number*/
    OZ0JW00.OZ0JW-SWF = "Y";
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8) /* Scroll forward requested*/
    ;
    OZ0JW00.XXXTSPAG = OZ0JW00.XXXTSPAG + 1; /* Increment page number*/
    OZ0JW00.OZ0JW-SWF = "Y";
    ;
    return; /* Return to previous process*/
    ;
  end

  ;
  if (converseVar.eventKey not enter
   && converseVar.eventKey not pf7
   && converseVar.eventKey not pf8
   && converseVar.eventKey not pa2
   && converseVar.eventKey not pf1
   && converseVar.eventKey not pf4
  )
    OZWREC.XXXPRCNM = "16000"; /* module id*/
    converseLib.validationFailed(4); /* pa/pf key pressed is not valid*/
    exit stack; /* exit to display map*/
    ;
  end

  /* ------------------------------------------------------------*/
  /* enter pressed*/
  /* ------------------------------------------------------------*/
  OZ0JW00.OZ0JW-UPDATE-SW = "N";

  if (converseVar.eventKey is enter)
    OZ0JW00.OZ0JW-IXM = 1;

    while (OZ0JW-IXM < 16)

      if (OZ0JM001.OZ0JMSEL[OZ0JW-IXM] is modified || 
      OZ0JM001.OZ0JM-XOBCD[OZ0JW-IXM] is modified)

        if (OZ0JM001.OZ0JMSEL[OZ0JW-IXM] == "D")

    /* ------------------------------------------------------------*/
    /* delete the row*/
    /* ------------------------------------------------------------*/

          OZ0J-16100(); /* delete the row*/

        else

    /* ------------------------------------------------------------*/
    /* straight add from the screen*/
    /* ------------------------------------------------------------*/
          if (OZ0JM001.OZ0JMSEL[OZ0JW-IXM] == "A")
            ;
            set VOCEBO01 empty; /* Clear row storage area*/
            ;
            VOCEBO01.XOBCD = OZ0JM001.OZ0JM-XOBCD[OZ0JW-IXM];

            set TA2REC empty;
            TA2REC.TA2DTOPT = "GREGGREG";
            TA2REC.TA2GRTYP = "E";
            TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

            call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

            if (TA2REC.TA2RTNCD == 0)
              VOCEBO01.ZZZSDT = TA2REC.TA2GRGGN;
            else
              OZWREC.XXXPRCNM = "15200"; /* Module identification*/
              converseLib.validationFailed(10); /* unexpected error*/
            end

            OZ0JW00.OZ0JW-TIME-BRK = VGVar.currentFormattedTime;
            OZ0JW00.OZ0JW-TM-HH = OZ0JW00.OZ0JW-TB-HH;
            OZ0JW00.OZ0JW-TM-MM = OZ0JW00.OZ0JW-TB-MM;
            VOCEBO01.ZZZSDTM = OZ0JW00.OZ0JW-TIME-MK;

            OZ0J-16200(); /* add new row*/
            if (OZ0JW00.OZ0JW-UPDATE-SW == "N") /* ;error*/
              return;
            end
          end

        end

      end

      OZ0JW-IXM = OZ0JW-IXM + 1;

    /* ------------------------------------------------------------*/
    /* Indicate that the table update was successfully completed.*/
    /* ------------------------------------------------------------*/
      if (OZ0JW00.OZ0JW-UPDATE-SW == "Y") /* ;*/
        OZWREC.XXXPRCNM = "16000"; /* show message*/
        OZWREC.XXXMSGNO = 1; /* Table update was completed*/
      end

    end /* end of while loop*/

  /* ------------------------------------------------------------*/
  /* Commit all changes made to protected resources.*/
  /* ------------------------------------------------------------*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.commit(); /* Commit all changes*/

  end
end // end OZ0J-16000

// delete old row
Function OZ0J-16100()
  set VOCEBO01 empty;

  VOCEBO01.XOBCD = OZ0JM001.OZ0JM-XOBCD[OZ0JW-IXM];


  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VOCEBO01" ("D ", SQLCA, VOCEBO01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      OZ0JW00.OZ0JW-UPDATE-SW = "Y"; /* update switch*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "16100"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCEBO01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCEBO01.XOBCD; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0J-16100

// add new row
Function OZ0J-16200()
  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCEBO01" ("A ", SQLCA, VOCEBO01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      OZ0JW00.OZ0JW-UPDATE-SW = "Y"; /* update switch*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == -803) /* duplicate add attempt*/
        OZWREC.XXXPRCNM = "16200"; /* Module identification*/
        set OZ0JM001.OZ0JM-XOBCD[OZ0JW-IXM] cursor, bold;
        converseLib.validationFailed(34); /* date invalid*/
        OZ0JW00.OZ0JW-UPDATE-SW = "N"; /* update switch*/
        OZ0JW00.OZ0JW-SWF = "N";
        return; /* Return to previous process*/
      end
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;
  ;
  OZWREC.XXXPRCNM = "16200"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCEBO01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCEBO01.XOBCD; /* Table key*/
  ;
  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OZ0J-16200

//*** RECORD=OZ0JW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record OZ0JW00 type basicRecord
  10 OZ0JW-IXM OZ0JW-IXM ; 
  10 OZ0JW-IX1 OZ0JW-IX1 ; 
  10 OZ0JW-IX2 OZ0JW-IX2 ; 
  10 OZ0JW-IXX OZ0JW-IXX ; 
  10 OZ0JW-SWC OZ0JW-SWC ; 
  10 OZ0JW-SWD OZ0JW-SWD ; 
  10 OZ0JW-SWF OZ0JW-SWF ; 
  10 OZ0JW-SWR OZ0JW-SWR ; 
  10 OZ0JW-SWU OZ0JW-SWU ; 
  10 OZ0JW-SFN OZ0JW-SFN ; 
  10 * char(1) ; 
  10 OZ0JW-DATE-BRK OZ0JW-DATE-BRK ; 
    15 OZ0JW-DB-CC OZ0JW-DB-CC ; 
    15 OZ0JW-DB-YY OZ0JW-DB-YY ; 
    15 OZ0JW-DB-MM OZ0JW-DB-MM ; 
    15 OZ0JW-DB-DD OZ0JW-DB-DD ; 
  10 * char(1) ; 
  10 OZ0JW-DATE-MK OZ0JW-DATE-MK ; 
    15 OZ0JW-DM-MM OZ0JW-DM-MM ; 
    15 OZ0JW-DM-DASH1 OZ0JW-DM-DASH1 ; 
    15 OZ0JW-DM-DD OZ0JW-DM-DD ; 
    15 OZ0JW-DM-DASH2 OZ0JW-DM-DASH2 ; 
    15 OZ0JW-DM-YY OZ0JW-DM-YY ; 
  10 * char(1) ; 
  10 OZ0JW-TIME-BRK OZ0JW-TIME-BRK ; 
    15 OZ0JW-TB-HH OZ0JW-TB-HH ; 
    15 * char(1) ; 
    15 OZ0JW-TB-MM OZ0JW-TB-MM ; 
    15 * char(1) ; 
    15 OZ0JW-TB-SS OZ0JW-TB-SS ; 
  10 OZ0JW-TIME-MK OZ0JW-TIME-MK ; 
    15 OZ0JW-TM-HH OZ0JW-TM-HH ; 
    15 OZ0JW-TM-MM OZ0JW-TM-MM ; 
  10 OZ0JW-EDIT-FLAG OZ0JW-EDIT-FLAG ; 
  10 OZ0JW-UPDATE-SW OZ0JW-UPDATE-SW ; 
  10 OZ0JW-SAVE-PAGE OZ0JW-SAVE-PAGE ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 OZ0JW-CTL-FLD OZ0JW-CTL-FLD ; 
    15 OZ0JW-FNC OZ0JW-FNC ; 
    15 OZ0JW-SAV OZ0JW-SAV ; 
    15 OZ0JW-SAV-PAGE OZ0JW-SAV-PAGE ; 
end // end OZ0JW00

//*** RECORD=OZ0JW01 ****
// /*
// /*      application working storage for map1
// /*
// ***********************
Record OZ0JW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(525) ; // Temporary storage page length
    10 OZ0JW-SEL OZ0JW-SEL [15] ; 
    10 OZ0JW-GROUP OZ0JW-GROUP [15] ; 
      15 OZ0JW-XOBCD OZ0JW-XOBCD ; 
      15 OZ0JW-XOB-DESC OZ0JW-XOB-DESC ; 
      15 OZ0JW-XOB-ABBR OZ0JW-XOB-ABBR ; 
      15 OZ0JW-ZZZSDT OZ0JW-ZZZSDT ; 
      15 OZ0JW-ZZZSDTM OZ0JW-ZZZSDTM ; 
end // end OZ0JW01

//*** RECORD=VOCEBO01 ****
// record layout for dordcd.vocebo01
// socd eligibility - base order type
// created 10/09/97  dsmit0
// ************************
Record VOCEBO01 type basicRecord
  5 VOCEBO01-GROUP VOCEBO01-GROUP ; 
    10 VOCEBO01-KEY VOCEBO01-KEY ; 
      15 XOBCD XOBCD ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZSDTM ZZZSDTM ; 
end // end VOCEBO01

// Pass record control field
DataItem OZ0JW-CTL-FLD char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0JW-DATE-BRK num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0JW-DATE-MK char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0JW-DB-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0JW-DB-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0JW-DB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0JW-DB-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0JW-DM-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0JW-DM-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0JW-DM-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0JW-DM-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0JW-DM-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OZ0JW-EDIT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map function switch
DataItem OZ0JW-FNC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//  Group Level
DataItem OZ0JW-GROUP char(34)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0JW-IX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0JW-IX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0JW-IXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OZ0JW-IXX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Save index for WS
DataItem OZ0JW-SAV num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Save page for cursor placement
DataItem OZ0JW-SAV-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Page save field
DataItem OZ0JW-SAVE-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// LINE SELECTION INDICATOR
DataItem OZ0JW-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function switch
DataItem OZ0JW-SFN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Cursor end of file switch
DataItem OZ0JW-SWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be displayed switch
DataItem OZ0JW-SWD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem OZ0JW-SWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem OZ0JW-SWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Storage page update switch
DataItem OZ0JW-SWU char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0JW-TB-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0JW-TB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0JW-TB-SS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0JW-TIME-BRK char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OZ0JW-TIME-MK num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0JW-TM-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OZ0JW-TM-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Update switch
DataItem OZ0JW-UPDATE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OZ0JW-XOB-ABBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OZ0JW-XOB-DESC char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OZ0JW-XOBCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// BINDING RULING COMMENT -DETAIL
DataItem OZ0JW-ZZZSDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// BINDING RULING COMMENT -DETAIL
DataItem OZ0JW-ZZZSDTM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem VOCEBO01-GROUP char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem VOCEBO01-KEY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

