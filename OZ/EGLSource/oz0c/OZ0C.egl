package oz0c;

import corpcom2.XP0PW00;
import corpcom2.XP0PW01;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XP0P001;
import corpcom3.XPOZ-00001;
import corpcom3.XPXGP01;
import corpcom3.XPXX001;
import corpcom4.XSOZ-S0001;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpcom7.ZZZSDTM;
import corpx1.XGPCD;
import corpx1.XGPTBL;
import corpx1.XOMTBL;
import corpx1.XSETBL;
import corpx2.XXX-STAT;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import oc.common.OCD-REL-DT;
import oz.common.OZWREC;
import sp.common.SOCD-CUST-NEED-BDT;
import sp.common.SOCD-CUST-NEED-XDT;
import sp.common.SP1ID;
import sp.common.SP1REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;

//*** PROGRAM=OZ0C ****
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      06/04/97  dsmit0  New application.
// *********************
Program OZ0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OZ00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  OZ0CW00 OZ0CW00; // record
  OZ0CW01 OZ0CW01; // record
  OZ0CW02 OZ0CW02; // record
  OZWREC OZWREC; // record
  SP1REC SP1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VOCRSP01 VOCRSP01; // record
  XP0PW00 XP0PW00; // record
  XP0PW01 XP0PW01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use XOMTBL {deleteAfterUse = yes}; // table
  use OZ0CM.OZ0CM001, // form
  OZ0CM.XX0XM001,
  OZ0CM.XP0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPOZ-00001: XPOZ-00001();
    /* ------------------------------------------------------------*/
    /* Initialize working storage and display storage areas.*/
    /* ------------------------------------------------------------*/

    set OZ0CM001 initial; /* M001 input/output*/
    set OZ0CW00 empty; /* Working storage*/
    set OZ0CW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    set XP0PW01 empty; /* Date/time subroutine parameters*/

    OZ0CW00.OZ0CW-SWD = "1"; /* Map to be displayed switch*/
    OZ0CW00.OZ0CW-SWF = "Y"; /* Format the map switch*/
    OZ0CW00.OZ0CW-SWR = "N"; /* Request for data switch*/
  
    if (OZWREC.OZW-APPIDX == 0)
      OZWREC.OZW-APPIDX = 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0A";
    end
  
    /* ------------------------------------------------------------*/
    /* If data was passed in the COMMAREA, use as the initial key.*/
    /* ------------------------------------------------------------*/

    if (COMMAREA.CAITEM > " ") /* Data was passed*/

      COMMAREA.CAITEM = " "; /* Clear passed data*/

      OZ0CW00.OZ0CW-SWR = "Y"; /* Request for data switch*/

    end

    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OZ0C-00000; /* Converse the main process*/


    OZ0C-00000: OZ0C-00000();
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OZ0C-00000; /* Converse the main process*/


  end // end main
end // end OZ0C


// Main process to display a map
Function OZ0C-00000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) If specified, display the first map.*/
  /* 2) Otherwise, if specified, display the second map, depending*/
  /* on function = add or change*/
  /* 3) Otherwise, indicate error and exit to Application Menu.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  if (OZ0CW00.OZ0CW-SWD == "1") /* Map 1 was requested*/

    OZ0C-10000(); /* Display map 1*/

  else

      /* ------------------------------------------------------------*/
      /* Write the error to the Error Diagnosis Reporting Facility.*/
      /* ------------------------------------------------------------*/

    OZWREC.XXXPRCNM = "00000"; /* Module identification*/
    OZWREC.XXXMSGNO = 10; /* Unexpected error occurred*/

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";
    TA1REC.TA1MAPNO = OZ0CW00.OZ0CW-SWD; /* Map number*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/

    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      /* ------------------------------------------------------------*/
      /* Exit to display the application system menu.*/
      /* ------------------------------------------------------------*/

    COMMAREA.CATOAP = "OZ0A"; /* TO application*/

    XSOZ-S0001(); /* Exit to another application*/

      /* ------------------------------------------------------------*/
      /* Abnormally terminate the transaction if the exit failed.*/
      /* ------------------------------------------------------------*/

    TA1REC.TA1FUNC = "ABND"; /* Termination function*/

    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end



end // end OZ0C-00000


// List the rows in the table
Function OZ0C-10000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Obtain the data to display.*/
  /* 2) Format the map output area and display the map.*/
  /* 3) Check the attention identifier used to respond.*/
  /* 4) Reset highlighted fields to normal intensity.*/
  /* 5) Verify the data that was entered.*/
  /* 6) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0C-11000(); /* Obtain the data to display*/

  OZ0C-12000(); /* Format and display the map*/

  OZ0C-13000(); /* Check attention identifier*/

  OZ0C-14000(); /* Reset fields to normal intensity*/

  OZ0C-15000(); /* Verify the entered data*/

  OZ0C-16000(); /* Process valid input request*/


end // end OZ0C-10000


// Obtain the data to display
Function OZ0C-11000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/

  if (OZ0CW00.OZ0CW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/

  OZ0CW00.XXXTSLEN = 795; /* temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0CW00.XXXTSPAG == 0) /* no pages established*/
    OZ0CW00.XXXTSPAG = 1; /* Page number to display*/
  end

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/

  OZ0C-11100(); /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Select and open the cursor for the set to be formatted.*/
  /* ------------------------------------------------------------*/

  OZ0C-11300(); /* Select set and open cursor*/

  /* ------------------------------------------------------------*/
  /* Fetch and format the data into pages until end of cursor.*/
  /* ------------------------------------------------------------*/

  OZ0CW00.OZ0CW-IXM = 1; /* Display line index*/
  OZ0CW00.OZ0CW-SWC = "N"; /* End of cursor switch*/

  while (OZ0CW00.OZ0CW-SWC == "N") /* Until end of cursor*/

    OZ0C-11400(); /* Fetch next row in the cursor*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (OZ0CW00.OZ0CW-SWC == "N") /* Not end of cursor*/
      OZ0C-11500(); /* Save data in display storage*/
    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (OZ0CW00.OZ0CW-IXM > 13) /* Page is full*/

      OZ0C-11600(); /* Add page to temporary storage*/

      OZ0CW00.OZ0CW-IXM = 1; /* Display line index*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Add any partially formatted last page to the queue.*/
  /* ------------------------------------------------------------*/

  if (OZ0CW00.OZ0CW-IXM > 1) /* Page was formatted*/
    OZ0C-11600(); /* Add page to temporary storage*/
  end

  /* ------------------------------------------------------------*/
  /* Close the cursor for the selected set.*/
  /* ------------------------------------------------------------*/

  OZ0C-11700(); /* Close the selected set cursor*/

  /* ------------------------------------------------------------*/
  /* If no pages were formatted, indicate no data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0CW00.TA5TSQIX == 0) /* No pages formatted*/

    OZWREC.XXXPRCNM = "11000"; /* Module identification*/
    OZWREC.XXXMSGNO = 16; /* No data was found to display*/
    set OZ0CM001.OZ0CM-XGP-GPC-CD cursor; /* cursor*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/

  OZ0CW00.OZ0CW-SWR = "N"; /* Request for data switch*/


end // end OZ0C-11000


// Purge any temporary storage
Function OZ0C-11100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/

  set OZ0CW01 empty; /* M001 display storage*/

  OZ0CW00.OZ0CW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0CW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0CW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "11100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0C-11100


// Select set and open cursor
Function OZ0C-11300()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set VOCRSP01 empty; /* Clear row storage area*/

  VOCRSP01.XGPCD = OZ0CM001.OZ0CM-XGP-GPC-CD;
  VOCRSP01.SP1ID = OZ0CM001.OZ0CM-SP1ID;

  try
    call "VOCRSP01" ("S1", SQLCA, VOCRSP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCRSP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCRSP01.SP1ID; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0C-11300


// Fetch next row in the cursor
Function OZ0C-11400()
  /* ------------------------------------------------------------*/
  /* Fetch the next row to display from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCRSP01" ("N1", SQLCA, VOCRSP01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      OZ0CW00.OZ0CW-SWC = "Y"; /* Indicate end of cursor*/

      return; /* Return to previous process*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11400"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCRSP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCRSP01.SP1ID; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0C-11400


// Save data in display storage
Function OZ0C-11500()
  /* ------------------------------------------------------------*/
  /* Save the data from the table row in display storage.*/
  /* ------------------------------------------------------------*/

  OZ0CW01.OZ0CW-SOCD-CUST-NEED-BDT[OZ0CW-IXM] = VOCRSP01.SOCD-CUST-NEED-BDT;
  OZ0CW01.OZ0CW-SOCD-CUST-NEED-XDT[OZ0CW-IXM] = VOCRSP01.SOCD-CUST-NEED-XDT;
  OZ0CW01.OZ0CW-OCD-REL-DT[OZ0CW-IXM] = VOCRSP01.OCD-REL-DT;
  OZ0CW01.OZ0CW-XXX-STAT[OZ0CW-IXM] = VOCRSP01.XXX-STAT;

  if (VOCRSP01.XXX-STAT == "I")
    OZ0CW01.OZ0CW-XXX-STAT-DESC[OZ0CW-IXM] = "INACTIVE";
  else
    OZ0CW01.OZ0CW-XXX-STAT-DESC[OZ0CW-IXM] = "ACTIVE";
    OZ0CW01.OZ0CW-XXX-STAT[OZ0CW-IXM] = "A";
  end

  OZ0CW01.OZ0CW-ZZZSDT[OZ0CW-IXM] = VOCRSP01.ZZZSDT;
  OZ0CW01.OZ0CW-ZZZSDTM[OZ0CW-IXM] = VOCRSP01.ZZZSDTM;
  OZ0CW01.OZ0CW-ZZZCHGDT[OZ0CW-IXM] = VOCRSP01.ZZZCHGDT;
  OZ0CW01.OZ0CW-ZZZCHGTM[OZ0CW-IXM] = VOCRSP01.ZZZCHGTM;
  OZ0CW01.OZ0CW-ZZZCHGCT[OZ0CW-IXM] = VOCRSP01.ZZZCHGCT;

  OZ0CW00.OZ0CW-IXM = OZ0CW00.OZ0CW-IXM + 1; /* Increment index*/
end // end OZ0C-11500


// Add page to temporary storage
Function OZ0C-11600()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OZ0CW01.XXXTSLEN = OZ0CW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OZ0CW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OZ0CW01 empty; /* M001 display storage*/

    OZ0CW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "11600"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0C-11600


// Close selected set cursor
Function OZ0C-11700()
  /* ------------------------------------------------------------*/
  /* Close the selected set of table rows.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCRSP01" ("C1", SQLCA, VOCRSP01) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11700"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCRSP01"; /* Table view name*/

  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0C-11700


// Format and converse the map
Function OZ0C-12000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0CW00.OZ0CW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OZ0CW00.OZ0CW-SWF == "Y") /* Map must be formatted*/
      OZ0C-12100(); /* Format the data on the map*/
    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZ0CM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OZ0CM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0CM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OZWREC.XXXMSGNO != 0) /* Message to display*/

      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0CM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OZ0CM001.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/

    set OZ0CM001 alarm; /* Indicate sound alarm*/

  end

  converse OZ0CM001 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  OZ0CW00.OZ0CW-SFN = " "; /* reset function switch*/
   /* reset saved page*/
  OZ0CW00.OZ0CW-SAVE-PAGE = 0;
  COMMAREA.CATOAP = OZ0CM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0CM001.CAITEM; /* Application data*/
end // end OZ0C-12000


// Format the display data
Function OZ0C-12100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/
  OZ0CW00.OZ0CW-SV-GPC = OZ0CM001.OZ0CM-XGP-GPC-CD;
  OZ0CW00.OZ0CW-SV-GPCDESC = OZ0CM001.OZ0CM-XGP-GPC-CD-DESC;
  OZ0CW00.OZ0CW-SV-SP1ID = OZ0CM001.OZ0CM-SP1ID;
  OZ0CW00.OZ0CW-SV-SP1NM = OZ0CM001.OZ0CM-SP1NM;

  set OZ0CM001 initial; /* M001 input/output area*/

  OZ0CW00.OZ0CW-SWF = "N"; /* Format the map switch*/

  /* ------------------------------------------------------------*/

  if (OZ0CW00.OZ0CW-SAVE-PAGE != 0) /* if page saved off*/

    OZ0CW00.XXXTSPAG = OZ0CW-SAVE-PAGE; /* use saved page*/

    OZ0C-12110(); /* Obtain temporary storage page*/

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set OZ0CM001.XXXLITPG skip; /* "PAGE" literal*/
    OZ0CM001.XXXTSPAG = OZ0CW00.XXXTSPAG; /* Current page*/
    set OZ0CM001.XXXLITOF skip; /* "OF" literal*/
    OZ0CM001.TA5TSQIX = OZ0CW00.TA5TSQIX; /* Highest page*/

  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/

  else
    if (OZ0CW00.TA5TSQIX > 0) /* Pages were formatted*/

      if (OZ0CW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/

        if (OZ0CW00.OZ0CW-SWU == "Y") /* Current page was changed*/

          OZ0C-12120(); /* Update temporary storage page*/

          OZ0CW00.OZ0CW-SWU = "N"; /* Storage update switch*/

        end

        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/

        if (OZ0CW00.XXXTSPAG > OZ0CW00.TA5TSQIX) /* Desired greater highest*/
          OZ0CW00.XXXTSPAG = OZ0CW00.TA5TSQIX; /* Default to highest*/
        end

        OZ0C-12110(); /* Obtain temporary storage page*/

      end

      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/

      set OZ0CM001.XXXLITPG skip; /* "PAGE" literal*/
      OZ0CM001.XXXTSPAG = OZ0CW00.XXXTSPAG; /* Current page*/
      set OZ0CM001.XXXLITOF skip; /* "OF" literal*/
      OZ0CM001.TA5TSQIX = OZ0CW00.TA5TSQIX; /* Highest page*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the data in the map from the display storage.*/
  /* ------------------------------------------------------------*/
  OZ0CM001.OZ0CM-XGP-GPC-CD = OZ0CW00.OZ0CW-SV-GPC;
  OZ0CM001.OZ0CM-XGP-GPC-CD-DESC = OZ0CW00.OZ0CW-SV-GPCDESC;
  OZ0CM001.OZ0CM-SP1ID = OZ0CW00.OZ0CW-SV-SP1ID;
  OZ0CM001.OZ0CM-SP1NM = OZ0CW00.OZ0CW-SV-SP1NM;

  OZ0CW00.OZ0CW-IXM = 1; /* Initialize map index*/

  while (OZ0CW00.OZ0CW-IXM <= 13 /* Until screen is full or*/
  )
    OZ0CM001.OZ0CMSEL[OZ0CW-IXM] = OZ0CW01.OZ0CW-SEL[OZ0CW-IXM];
    OZ0CW00.OZ0CW-B4DT-NUM = OZ0CW01.OZ0CW-SOCD-CUST-NEED-BDT[OZ0CW-IXM];

    if (OZ0CW00.OZ0CW-B4DT-CHAR == "000000")
      OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM] = "      ";
    else
      OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM] = OZ0CW00.OZ0CW-B4DT-CHAR;
    end

    OZ0CW00.OZ0CW-AFTDT-NUM = OZ0CW01.OZ0CW-SOCD-CUST-NEED-XDT[OZ0CW-IXM];
    if (OZ0CW00.OZ0CW-AFTDT-CHAR == "000000")
      OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM] = "      ";
    else
      OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM] = OZ0CW00.OZ0CW-AFTDT-CHAR;
    end

    OZ0CW00.OZ0CW-ORDDT-NUM = OZ0CW01.OZ0CW-OCD-REL-DT[OZ0CW-IXM];
    if (OZ0CW00.OZ0CW-ORDDT-CHAR == "000000")
      OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM] = "      ";
    else
      OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM] = OZ0CW00.OZ0CW-ORDDT-CHAR;
    end

    OZ0CM001.OZ0CM-XXX-STAT[OZ0CW-IXM] = OZ0CW01.OZ0CW-XXX-STAT[OZ0CW-IXM];
    OZ0CM001.OZ0CM-XXX-STAT-DESC[OZ0CW-IXM] = OZ0CW01.OZ0CW-XXX-STAT-DESC[OZ0CW-IXM];

  /*  */
    if (OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM] == "  "
     || COMMAREA.CACHGFL == "N")
      set OZ0CM001.OZ0CMSEL[OZ0CW-IXM] noHighLight, skip;
      set OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM] noHighLight, skip;
      set OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM] noHighLight, skip;
      set OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM] noHighLight, skip;
      set OZ0CM001.OZ0CM-XXX-STAT[OZ0CW-IXM] noHighLight, skip;
    end

    OZ0CW00.OZ0CW-IXM = OZ0CW00.OZ0CW-IXM + 1;
                                   /* Increment map index*/

  end

  if (OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[1] == "  "
   || COMMAREA.CACHGFL == "N")
    set OZ0CM001.OZ0CM-XGP-GPC-CD cursor;
  else
    set OZ0CM001.OZ0CMSEL[1] cursor;
  end

end // end OZ0C-12100


// Read temporary storage page
Function OZ0C-12110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OZ0CW01.XXXTSLEN = OZ0CW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = OZ0CW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OZ0CW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "12100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0C-12110


// Update temporary storage page
Function OZ0C-12120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (OZ0CW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "12120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0C-12120


// Check attention identifier
Function OZ0C-13000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0CW00.OZ0CW-SWR == "Y") /* Request for data*/
      set OZ0CW01 empty; /* M001 display storage*/
    end

    OZ0CW00.OZ0CW-SWF = "Y"; /* Format the map switch*/
    OZ0CW00.OZ0CW-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/
  if (OZ0CM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0C")
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
        OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0C";
      end

      OZ0C-11100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0CM001.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid attention identifier was used to*/
  /* invoke the transaction.  Display an error message to the*/
  /* user if the PF key used is not supported.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   /* and PF1 was not pressed*/
   && converseVar.eventKey not pf3   /* and PF3 was not pressed*/
   && converseVar.eventKey not pf4   /* and PF4 was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf13) /* and PF13 was not pressed*/

    OZWREC.XXXPRCNM = "13000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  else

    if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0C")
      OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0C";
    end

  end

  /* ------------------------------------------------------------*/
  /* If HELP, exit to the previous level or exit to the Master*/
  /* Menu was requested, exit to another application.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      if (OZWREC.OZW-APPIDX > 1)
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX - 1;

        if (OZWREC.OZW-APPL[OZW-APPIDX] > "    ")
          COMMAREA.CATOAP = OZWREC.OZW-APPL[OZW-APPIDX];
        else
          COMMAREA.CATOAP = "OZ0A";
        end

      else
        COMMAREA.CATOAP = COMMAREA.CAFROMAP;
      end

    end

    OZ0C-11100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* pf13 - add*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf13) /* PF13 was pressed*/
    if (COMMAREA.CACHGFL == "N")
      converseLib.validationFailed(74); /* no authority*/
      OZ0CW00.OZ0CW-SWR = "N";
      exit stack;
    else
      if ("A" in OZ0CM001.OZ0CMSEL)
        OZ0CW00.OZ0CW-SWR = "Y"; /* Request for data switch*/
        OZ0CW00.OZ0CW-SWF = "Y";
      else
        OZ0CM001.OZ0CMSEL[1] = "A";
        set OZ0CM001.OZ0CMSEL[1] cursor, initialAttributes;
        OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[1] = "      ";
        set OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[1] initialAttributes;
        OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[1] = "      ";
        set OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[1] initialAttributes;
        OZ0CM001.OZ0CM-OCD-REL-DT[1] = "      ";
        set OZ0CM001.OZ0CM-OCD-REL-DT[1] initialAttributes;
        OZ0CM001.OZ0CM-XXX-STAT[1] = " ";
        set OZ0CM001.OZ0CM-XXX-STAT[1] initialAttributes;
        OZ0CM001.OZ0CM-XXX-STAT-DESC[1] = " ";
        OZ0CM001.VAGen_EZEMSG = " ";
        converseLib.validationFailed(0); /* PA/PF key pressed is not valid*/
        OZ0CW00.OZ0CW-SWR = "N"; /* Request for data switch*/
        exit stack; /* Exit to display map*/
      end
    end
  end

  /* ------------------------------------------------------------*/
  /* enter*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter)
    OZ0CW00.OZ0CW-SWR = "Y"; /* Request for data switch*/
    OZ0CW00.OZ0CW-SWF = "Y";
  end

end // end OZ0C-13000


// Reset highlighted fields
Function OZ0C-14000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/

  OZ0CW00.OZ0CW-IXM = 1; /* Initialize line index*/

  while (OZ0CW00.OZ0CW-IXM <= 13 /* * Until end of lines*/
   && COMMAREA.CACHGFL == "Y") /* authority to add/change*/

    set OZ0CM001.OZ0CMSEL[OZ0CW-IXM] normal; /* Reset select flag*/
    set OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM] normal;
    set OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM] normal;
    set OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM] normal;
    set OZ0CM001.OZ0CM-XXX-STAT[OZ0CW-IXM] normal;
    set OZ0CM001.OZ0CM-XXX-STAT-DESC[OZ0CW-IXM] normal;

    OZ0CW00.OZ0CW-IXM = OZ0CW00.OZ0CW-IXM + 1; /* Increment line index*/

  end

  set OZ0CM001.CATOAP initialAttributes; /* TO application*/
  set OZ0CM001.CAITEM initialAttributes; /* Application data*/

   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (OZ0CM001.OZ0CM-XGP-GPC-CD == "?" /* if any ? entered*/
  )                                   
    XPXX001(); /* perform pop-up window initialize*/
    XX0XW02.XX0XWHDR = "                   GPC       "; /* heading*/

    while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
      XPXGP01(); /* perform gpc window*/
    end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code and description to the map.                     **/
       /* **********************************************************/

    if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
      OZ0CM001.OZ0CM-XGP-GPC-CD = XGPTBL.XGPCD[XX0XWPIX];
      OZ0CM001.OZ0CM-XGP-GPC-CD-DESC = XGPTBL.XGPDESC[XX0XWPIX];
      set OZ0CM001.OZ0CM-SP1ID cursor;
    else
      OZ0CM001.OZ0CM-XGP-GPC-CD = " "; /* clear fields*/
      set OZ0CM001.OZ0CM-XGP-GPC-CD cursor; /* put cursor on gpc cd*/
      OZ0CM001.OZ0CM-XGP-GPC-CD-DESC = " "; /* clear description*/
    end



    converseLib.clearScreen();
     /* restore the original map*/

    OZ0CW00.OZ0CW-SWR = "N"; /* no to request for data*/
    OZ0CW00.OZ0CW-SWF = "N"; /* no to format map*/

    exit stack; /* go display map*/

  end


  if (OZ0CM001.OZ0CM-SP1ID == "?" /* if any ? entered*/
  )                              
    XP0P001(); /* perform pop-up window initialize*/

  /* WHILE XP0PW00.XP0PWEND EQ 'N'; /* until user hits enter*/
  /* PERFORM XPXGP01;             /* perform gpc window*/
  /* end;*/

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code and description to the map.                     **/
       /* **********************************************************/

    if (XP0PW00.XP0PWPIX > 0) /* if user selected a code*/
      OZ0CM001.OZ0CM-SP1ID = XP0PM001.XP0PM-SP1ID[XP0PWPIX];
      OZ0CM001.OZ0CM-SP1NM = XP0PM001.XP0PM-SP1NM[XP0PWPIX];
      set OZ0CM001.OZ0CM-SP1ID cursor;
    else
      OZ0CM001.OZ0CM-SP1ID = " "; /* clear fields*/
      set OZ0CM001.OZ0CM-SP1ID cursor; /* put cursor on gpc cd*/
      OZ0CM001.OZ0CM-SP1NM = " "; /* clear description*/
    end



    converseLib.clearScreen();
     /* restore the original map*/

    OZ0CW00.OZ0CW-SWR = "N"; /* no to request for data*/
    OZ0CW00.OZ0CW-SWF = "N"; /* no to format map*/

    exit stack; /* go display map*/

  end


end // end OZ0C-14000


// Verify data that was entered
Function OZ0C-15000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (OZ0CM001.CAITEM > " ") /* Application data was entered*/

    OZWREC.XXXPRCNM = "15000"; /* Module identification*/
    set OZ0CM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end


  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    OZ0C-15100(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the line.*/
    /* ------------------------------------------------------------*/

    if (converseVar.eventKey is enter /* Enter was pressed*/
    )                                
      OZ0C-15200(); /* Verify data in the line*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end


end // end OZ0C-15000


// Verify scroll request
Function OZ0C-15100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OZ0CW00.XXXTSPAG < 2)       /* and no previous pages*/

    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OZ0CW00.XXXTSPAG >= OZ0CW00.TA5TSQIX) /* and no more pages*/

    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate an error for any data that was modified.*/
  /* ------------------------------------------------------------*/

  OZ0CW00.OZ0CW-IXM = 1; /* Initialize line index*/

  while (OZ0CW00.OZ0CW-IXM < 14) /* Until end of lines*/

    if (OZ0CM001.OZ0CMSEL[OZ0CW-IXM] != OZ0CW01.OZ0CW-SEL[OZ0CW-IXM])

      OZWREC.XXXPRCNM = "15100"; /* Module identification*/
      set OZ0CM001.OZ0CMSEL[OZ0CW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(14); /* Field may not change*/

    end

    OZ0CW00.OZ0CW-IXM = OZ0CW00.OZ0CW-IXM + 1; /* increment line number*/

  end


end // end OZ0C-15100


// Verify data in the line
Function OZ0C-15200()
  /* ------------------------------------------------------------*/
  /* edit map*/
  /* ------------------------------------------------------------*/
  if (OZ0CM001.OZ0CM-XGP-GPC-CD > "  ")
    if (OZ0CM001.OZ0CM-XGP-GPC-CD in XGPTBL.XGPCD)
      OZ0CM001.OZ0CM-XGP-GPC-CD-DESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    end
  else
    OZWREC.XXXPRCNM = "15200"; /* Module identification*/
    set OZ0CM001.OZ0CM-XGP-GPC-CD cursor, bold;
    OZ0CW00.OZ0CW-SWF = "N";
    converseLib.validationFailed(22); /* xgp cd invalid*/
    return;
  end

  if (OZ0CM001.OZ0CM-SP1ID > "  ")
    set SP1REC empty;
    SP1REC.SP1ID = OZ0CM001.OZ0CM-SP1ID;
    OZ0C-15210();
    if (SQLCA.VAGen_SQLCODE == 0)
      OZ0CM001.OZ0CM-SP1NM = SP1REC.SP1NM;
    else
      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0CM001.OZ0CM-SP1ID cursor, bold;
      OZ0CW00.OZ0CW-SWF = "N";
      converseLib.validationFailed(36); /* sales pgm id invalid*/
      return;
    end
  else
    OZWREC.XXXPRCNM = "15200"; /* Module identification*/
    set OZ0CM001.OZ0CM-SP1ID cursor, bold;
    OZ0CW00.OZ0CW-SWF = "N";
    converseLib.validationFailed(36); /* xgp cd invalid*/
    return;
  end

  OZ0CW00.OZ0CW-IXM = 1; /* initialize index*/

  while (OZ0CW00.OZ0CW-IXM < 14) /* until end of lines*/

    if (OZ0CM001.OZ0CMSEL[OZ0CW-IXM] != " "
    )
      if (OZ0CM001.OZ0CMSEL[OZ0CW-IXM] == "C"
       || OZ0CM001.OZ0CMSEL[OZ0CW-IXM] == "A"
      ) /* continue*/
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0CM001.OZ0CMSEL[OZ0CW-IXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(21); /* Only ' ' or 'c' or 'a'*/
        OZ0CW00.OZ0CW-SWF = "N";
        return;

      end

  /* -------------------------------------------------------------*/
  /* IF OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT(OZ0CW-IXM) IS MODIFIED;*/

      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "E";
      TA2REC.TA2GRGE = OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM];

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

      if (TA2REC.TA2RTNCD == 0)
        OZ0CW00.OZ0CW-CMP-B4-DT = TA2REC.TA2GRGGN;
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM] cursor, bold;
        converseLib.validationFailed(30); /* date invalid must be yymmdd*/
        OZ0CW00.OZ0CW-SWF = "N";
        return;
      end

  /* END;*/

  /* -------------------------------------------------------------*/
  /* IF OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT(OZ0CW-IXM) IS MODIFIED;*/

      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "E";
      TA2REC.TA2GRGE = OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM];

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

      if (TA2REC.TA2RTNCD == 0)
        OZ0CW00.OZ0CW-CMP-AFT-DT = TA2REC.TA2GRGGN;
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM] cursor, bold;
        converseLib.validationFailed(30); /* date invalid must be yymmdd*/
        OZ0CW00.OZ0CW-SWF = "N";
        return;
      end

  /* END;*/

  /* -------------------------------------------------------------*/
  /* IF OZ0CM001.OZ0CM-OCD-REL-DT(OZ0CW-IXM) IS MODIFIED;*/

      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "E";
      TA2REC.TA2GRGE = OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM];

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

      if (TA2REC.TA2RTNCD == 0)
        OZ0CW00.OZ0CW-CMP-OCD-REL-DT = TA2REC.TA2GRGGN;
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM] cursor, bold;
        converseLib.validationFailed(30); /* date invalid must be yymmdd*/
        OZ0CW00.OZ0CW-SWF = "N";
        return;
      end

      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "E";
      TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

      if (TA2REC.TA2RTNCD == 0)
        if (OZ0CW00.OZ0CW-CMP-OCD-REL-DT >= TA2REC.TA2GRGGN)
          /* continue*/
        else
          OZWREC.XXXPRCNM = "15200"; /* Module identification*/
          converseLib.validationFailed(35); /* status invalid*/
          OZ0CW00.OZ0CW-SWF = "N";
          set OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM] cursor, bold;
          return;
        end
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        converseLib.validationFailed(10); /* unexpected error*/
      end

  /* END;*/

  /* -------------------------------------------------------------*/
      if (OZ0CW00.OZ0CW-CMP-B4-DT > OZ0CW00.OZ0CW-CMP-AFT-DT)
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM] cursor, bold;
        set OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM] bold;
        converseLib.validationFailed(32); /* status invalid*/
        OZ0CW00.OZ0CW-SWF = "N";
        return;
      end
  /* -------------------------------------------------------------*/
      if (OZ0CW00.OZ0CW-CMP-OCD-REL-DT > OZ0CW00.OZ0CW-CMP-AFT-DT)
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM] cursor, bold;
        set OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM] bold;
        converseLib.validationFailed(33); /* status invalid*/
        OZ0CW00.OZ0CW-SWF = "N";
        return;
      end
  /* -------------------------------------------------------------*/
      if (OZ0CM001.OZ0CM-XXX-STAT[OZ0CW-IXM] is modified)
        if (OZ0CM001.OZ0CM-XXX-STAT[OZ0CW-IXM] == "A" || 
        OZ0CM001.OZ0CM-XXX-STAT[OZ0CW-IXM] == "I")
          /* continue*/
        else
          OZWREC.XXXPRCNM = "15200"; /* Module identification*/
          set OZ0CM001.OZ0CM-XXX-STAT[OZ0CW-IXM] cursor, bold;
          converseLib.validationFailed(17); /* status invalid*/
          OZ0CW00.OZ0CW-SWF = "N";
          return;
        end
      end

  /* -------------------------------------------------------------*/

    end

    if (OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM] not modified
     && OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM] not modified
     && OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM] not modified
     && OZ0CM001.OZ0CM-XXX-STAT[OZ0CW-IXM] not modified)
        /* continue*/
    else
      if (OZ0CM001.OZ0CMSEL[OZ0CW-IXM] == "C"
       || OZ0CM001.OZ0CMSEL[OZ0CW-IXM] == "A")
          /* continue*/
      else
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0CM001.OZ0CMSEL[OZ0CW-IXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(14); /* select invalid*/
        OZ0CW00.OZ0CW-SWF = "N";
        return;
      end
    end

  /* -------------------------------------------------------------*/

    OZ0CW00.OZ0CW-IXM = OZ0CW00.OZ0CW-IXM + 1; /* increment line number*/

  end
end // end OZ0C-15200


// Verify data in the line
Function OZ0C-15210()
   /* ------------------------------------------------------------*/
   /* declare cursor for syclr01 rec*/
   /* ------------------------------------------------------------*/


  try
    call "IO0070" ("S ", SQLCA, SP1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100)
      return; /* Return to previous process*/
    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(75); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(76); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/


  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW";
  TA1REC.TA1PGMAP = "OZ0C"; /* Program application*/
  TA1REC.TA1PGMNO = "IO0070"; /* Program number*/
  TA1REC.TA1DBASE = "DSPGM   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSPGM001"; /* Table view name*/
  TA1REC.TA1TBLKE = SP1REC.SP1KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  return; /* Exit to display map*/


end // end OZ0C-15210


// Process valid input request
Function OZ0C-16000()
  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    OZ0CW00.XXXTSPAG = OZ0CW00.XXXTSPAG - 1; /* Decrement page number*/
    OZ0CW00.OZ0CW-SWF = "Y";

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    OZ0CW00.XXXTSPAG = OZ0CW00.XXXTSPAG + 1; /* Increment page number*/
    OZ0CW00.OZ0CW-SWF = "Y";

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey not enter
   && converseVar.eventKey not pf7
   && converseVar.eventKey not pf8
   && converseVar.eventKey not pa2
   && converseVar.eventKey not pf1
   && converseVar.eventKey not pf4
  )
    OZWREC.XXXPRCNM = "16000"; /* module id*/
    converseLib.validationFailed(4); /* pa/pf key pressed is not valid*/
    exit stack; /* exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* enter pressed*/
  /* ------------------------------------------------------------*/
  OZ0CW00.OZ0CW-UPDATE-SW = "N";

  if (converseVar.eventKey is enter)
    OZ0CW00.OZ0CW-IXM = 1;
    while (OZ0CW-IXM < 14)

      if (OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM] not modified
       && OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM] not modified
       && OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM] not modified
       && OZ0CM001.OZ0CM-XXX-STAT[OZ0CW-IXM] not modified)
          /* continue*/
      else

        if (OZ0CM001.OZ0CMSEL[OZ0CW-IXM] == "C")

    /* ------------------------------------------------------------*/
    /* Select the row for update*/
    /* ------------------------------------------------------------*/

          OZ0C-16100(); /* select row*/

    /* ------------------------------------------------------------*/
    /* If record was changed since initial display, flag error*/
    /* ------------------------------------------------------------*/

          if (OZ0CW01.OZ0CW-ZZZCHGCT[OZ0CW-IXM] != VOCRSP01.ZZZCHGCT)
                                   /* count*/
                                   /* changed*/

            OZWREC.XXXPRCNM = "16000"; /* module id*/
            converseLib.validationFailed(12); /* row was updated by another*/
                                   /* application*/
            OZ0CW00.OZ0CW-SWR = "Y"; /* request for data*/
            OZ0CW00.OZ0CW-SWF = "Y"; /* format a new map*/
            exit stack; /* exit to display map*/

          end

   /* ------------------------------------------------------------*/
   /* format the dates to update the table*/
   /* ------------------------------------------------------------*/
          set TA2REC empty;
          TA2REC.TA2DTOPT = "GREGGREG";
          TA2REC.TA2GRTYP = "E";
          TA2REC.TA2GRGE = OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM];

          call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

          if (TA2REC.TA2RTNCD == 0)
            OZ0CW00.OZ0CW-SV-OCD-REL-DT = TA2REC.TA2GRGG;
          else
            OZWREC.XXXPRCNM = "15200"; /* Module identification*/
            set OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM] cursor, bold;
            converseLib.validationFailed(30); /* date invalid*/
          end

          set TA2REC empty;
          TA2REC.TA2DTOPT = "GREGGREG";
          TA2REC.TA2GRTYP = "E";
          TA2REC.TA2GRGE = OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM];

          call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

          if (TA2REC.TA2RTNCD == 0)
            OZ0CW00.OZ0CW-SV-B4-DT = TA2REC.TA2GRGG;
          else
            OZWREC.XXXPRCNM = "15200"; /* Module identification*/
            set OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM] cursor, bold;
            converseLib.validationFailed(30); /* date invalid*/
          end

          set TA2REC empty;
          TA2REC.TA2DTOPT = "GREGGREG";
          TA2REC.TA2GRTYP = "E";
          TA2REC.TA2GRGE = OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM];

          call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

          if (TA2REC.TA2RTNCD == 0)
            OZ0CW00.OZ0CW-SV-AFT-DT = TA2REC.TA2GRGG;
          else
            OZWREC.XXXPRCNM = "15200"; /* Module identification*/
            set OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM] cursor, bold;
            converseLib.validationFailed(30); /* date invalid*/
          end

    /* ------------------------------------------------------------*/
    /* check to make sure the b4 date hasn't changed - it's part of*/
    /* the key , if so, must add new row and delete the old one.*/
    /* ------------------------------------------------------------*/
          if (OZ0CW01.OZ0CW-SOCD-CUST-NEED-BDT[OZ0CW-IXM] == 
          OZ0CW00.OZ0CW-SV-B4-DT)

            OZ0C-16200(); /* update table row*/

          else

            OZ0C-16300(); /* add new row*/

            if (SQLCA.VAGen_SQLCODE == 0)
              OZ0C-16400(); /* delete old row*/
            end

          end

        else

    /* ------------------------------------------------------------*/
    /* straight add from the screen*/
    /* ------------------------------------------------------------*/
          if (OZ0CM001.OZ0CMSEL[OZ0CW-IXM] == "A")

            set VOCRSP01 empty; /* Clear row storage area*/

            VOCRSP01.XGPCD = OZ0CM001.OZ0CM-XGP-GPC-CD;
            VOCRSP01.SP1ID = OZ0CM001.OZ0CM-SP1ID;

            set TA2REC empty;
            TA2REC.TA2DTOPT = "GREGGREG";
            TA2REC.TA2GRTYP = "E";
            TA2REC.TA2GRGE = OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM];

            call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

            if (TA2REC.TA2RTNCD == 0)
              OZ0CW00.OZ0CW-SV-B4-DT = TA2REC.TA2GRGG;
            else
              OZWREC.XXXPRCNM = "15200"; /* Module identification*/
              set OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM] cursor, bold;
              converseLib.validationFailed(30); /* date invalid*/
            end

            set TA2REC empty;
            TA2REC.TA2DTOPT = "GREGGREG";
            TA2REC.TA2GRTYP = "E";
            TA2REC.TA2GRGE = OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM];

            call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

            if (TA2REC.TA2RTNCD == 0)
              OZ0CW00.OZ0CW-SV-OCD-REL-DT = TA2REC.TA2GRGG;
            else
              OZWREC.XXXPRCNM = "15200"; /* Module identification*/
              set OZ0CM001.OZ0CM-OCD-REL-DT[OZ0CW-IXM] cursor, bold;
              converseLib.validationFailed(30); /* date invalid*/
            end


            set TA2REC empty;
            TA2REC.TA2DTOPT = "GREGGREG";
            TA2REC.TA2GRTYP = "E";
            TA2REC.TA2GRGE = OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM];

            call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

            if (TA2REC.TA2RTNCD == 0)
              OZ0CW00.OZ0CW-SV-AFT-DT = TA2REC.TA2GRGG;
            else
              OZWREC.XXXPRCNM = "15200"; /* Module identification*/
              set OZ0CM001.OZ0CM-SOCD-CUST-NEED-XDT[OZ0CW-IXM] cursor, bold;
              converseLib.validationFailed(30); /* date invalid*/
            end

            OZ0C-16300(); /* add new row*/
            if (OZ0CW00.OZ0CW-UPDATE-SW == "N") /* ;error*/
              return;
            end /* end of sel check for add*/
          end /* end of sel check for add*/

        end /* end of sel check for change*/

      end /* end of check for changed data*/

      OZ0CW-IXM = OZ0CW-IXM + 1;

    /* ------------------------------------------------------------*/
    /* Indicate that the table update was successfully completed.*/
    /* ------------------------------------------------------------*/
      if (OZ0CW00.OZ0CW-UPDATE-SW == "Y") /* ;*/
        OZWREC.XXXPRCNM = "16000"; /* show message*/
        OZWREC.XXXMSGNO = 1; /* Table update was completed*/
      end

    end /* end of while loop*/

  /* ------------------------------------------------------------*/
  /* Commit all changes made to protected resources.*/
  /* ------------------------------------------------------------*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.commit(); /* Commit all changes*/


  end
end // end OZ0C-16000


// Select row before update
Function OZ0C-16100()
  /* ------------------------------------------------------------*/
  /* Select the requested row from the table.*/
  /* ------------------------------------------------------------*/

  set VOCRSP01 empty; /* Clear row storage area*/

  VOCRSP01.XGPCD = OZ0CM001.OZ0CM-XGP-GPC-CD;
  VOCRSP01.SP1ID = OZ0CM001.OZ0CM-SP1ID;
  VOCRSP01.SOCD-CUST-NEED-BDT = OZ0CW01.OZ0CW-SOCD-CUST-NEED-BDT[OZ0CW-IXM];

  try
    call "VOCRSP01" ("S ", SQLCA, VOCRSP01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16100"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT ROW BEFORE UPDATE     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCRSP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCRSP01.SP1ID; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0C-16100


// Update the changed table row
Function OZ0C-16200()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  VOCRSP01.SOCD-CUST-NEED-BDT = OZ0CW00.OZ0CW-SV-B4-DT;
  VOCRSP01.SOCD-CUST-NEED-XDT = OZ0CW00.OZ0CW-SV-AFT-DT;
  VOCRSP01.OCD-REL-DT = OZ0CW00.OZ0CW-SV-OCD-REL-DT;
  VOCRSP01.XXX-STAT = OZ0CM001.OZ0CM-XXX-STAT[OZ0CW-IXM];
  VOCRSP01.ZZZSDT = OZ0CW01.OZ0CW-ZZZSDT[OZ0CW-IXM];
  VOCRSP01.ZZZSDTM = OZ0CW01.OZ0CW-ZZZSDTM[OZ0CW-IXM];
  VOCRSP01.ZZZCHGCT = OZ0CW01.OZ0CW-ZZZCHGCT[OZ0CW-IXM];

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCRSP01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "15200"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0CW00.OZ0CW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0CW00.OZ0CW-TM-HH = OZ0CW00.OZ0CW-TB-HH;
  OZ0CW00.OZ0CW-TM-MM = OZ0CW00.OZ0CW-TB-MM;
  VOCRSP01.ZZZCHGTM = OZ0CW00.OZ0CW-TIME-MK;

  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCRSP01" ("U ", SQLCA, VOCRSP01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      OZ0CW00.OZ0CW-UPDATE-SW = "Y"; /* update switch*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16200"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCRSP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCRSP01.SP1ID; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0C-16200


// add new row
Function OZ0C-16300()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  VOCRSP01.SOCD-CUST-NEED-BDT = OZ0CW00.OZ0CW-SV-B4-DT;
  VOCRSP01.SOCD-CUST-NEED-XDT = OZ0CW00.OZ0CW-SV-AFT-DT;
  VOCRSP01.OCD-REL-DT = OZ0CW00.OZ0CW-SV-OCD-REL-DT;
  VOCRSP01.XXX-STAT = OZ0CM001.OZ0CM-XXX-STAT[OZ0CW-IXM];

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCRSP01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "16300"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0CW00.OZ0CW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0CW00.OZ0CW-TM-HH = OZ0CW00.OZ0CW-TB-HH;
  OZ0CW00.OZ0CW-TM-MM = OZ0CW00.OZ0CW-TB-MM;
  VOCRSP01.ZZZCHGTM = OZ0CW00.OZ0CW-TIME-MK;

  if (OZ0CM001.OZ0CMSEL[OZ0CW-IXM] == "C")
    VOCRSP01.ZZZSDT = OZ0CW01.OZ0CW-ZZZSDT[OZ0CW-IXM];
    VOCRSP01.ZZZSDTM = OZ0CW01.OZ0CW-ZZZSDTM[OZ0CW-IXM];
    VOCRSP01.ZZZCHGCT = OZ0CW01.OZ0CW-ZZZCHGCT[OZ0CW-IXM];
  else
    VOCRSP01.ZZZSDTM = OZ0CW00.OZ0CW-TIME-MK;
    VOCRSP01.ZZZSDT = TA2REC.TA2GRGGN;
    VOCRSP01.ZZZCHGCT = 0;
  end

  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCRSP01" ("A ", SQLCA, VOCRSP01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      OZ0CW00.OZ0CW-UPDATE-SW = "Y"; /* update switch*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == -803) /* duplicate add attempt*/
        OZWREC.XXXPRCNM = "16300"; /* Module identification*/
        set OZ0CM001.OZ0CM-SOCD-CUST-NEED-BDT[OZ0CW-IXM] cursor, bold;
        converseLib.validationFailed(34); /* date invalid*/
        OZ0CW00.OZ0CW-UPDATE-SW = "N"; /* update switch*/
        OZ0CW00.OZ0CW-SWF = "N";
        return; /* Return to previous process*/
      end
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16200"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCRSP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCRSP01.SP1ID; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0C-16300


// delete old row
Function OZ0C-16400()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/

  VOCRSP01.SOCD-CUST-NEED-BDT = OZ0CW01.OZ0CW-SOCD-CUST-NEED-BDT[OZ0CW-IXM];
  VOCRSP01.SOCD-CUST-NEED-XDT = OZ0CW00.OZ0CW-SV-AFT-DT;
  VOCRSP01.OCD-REL-DT = OZ0CW00.OZ0CW-SV-OCD-REL-DT;
  VOCRSP01.XXX-STAT = OZ0CM001.OZ0CM-XXX-STAT[OZ0CW-IXM];
  VOCRSP01.ZZZSDT = OZ0CW01.OZ0CW-ZZZSDT[OZ0CW-IXM];
  VOCRSP01.ZZZSDTM = OZ0CW01.OZ0CW-ZZZSDTM[OZ0CW-IXM];
  VOCRSP01.ZZZCHGCT = OZ0CW01.OZ0CW-ZZZCHGCT[OZ0CW-IXM];

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VOCRSP01.ZZZCHGDT = TA2REC.TA2GRGGN;
  else
    OZWREC.XXXPRCNM = "15300"; /* Module identification*/
    converseLib.validationFailed(10); /* unexpected error*/
  end

  OZ0CW00.OZ0CW-TIME-BRK = VGVar.currentFormattedTime;
  OZ0CW00.OZ0CW-TM-HH = OZ0CW00.OZ0CW-TB-HH;
  OZ0CW00.OZ0CW-TM-MM = OZ0CW00.OZ0CW-TB-MM;
  VOCRSP01.ZZZCHGTM = OZ0CW00.OZ0CW-TIME-MK;

  /* ------------------------------------------------------------*/
  /* Update the new row in the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VOCRSP01" ("D ", SQLCA, VOCRSP01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      OZ0CW00.OZ0CW-UPDATE-SW = "Y"; /* update switch*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16200"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCRSP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCRSP01.SP1ID; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0C-16400


//*** RECORD=OZ0CW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record OZ0CW00 type basicRecord
  10 OZ0CW-IXM OZ0CW-IXM ; 
  10 OZ0CW-IX1 OZ0CW-IX1 ; 
  10 OZ0CW-IX2 OZ0CW-IX2 ; 
  10 OZ0CW-IXX OZ0CW-IXX ; 
  10 OZ0CW-SWC OZ0CW-SWC ; 
  10 OZ0CW-SWD OZ0CW-SWD ; 
  10 OZ0CW-SWF OZ0CW-SWF ; 
  10 OZ0CW-SWR OZ0CW-SWR ; 
  10 OZ0CW-SWU OZ0CW-SWU ; 
  10 OZ0CW-SFN OZ0CW-SFN ; 
  10 OZ0CW-TIME-BRK OZ0CW-TIME-BRK ; 
    15 OZ0CW-TB-HH OZ0CW-TB-HH ; 
    15 * char(1) ; 
    15 OZ0CW-TB-MM OZ0CW-TB-MM ; 
    15 * char(1) ; 
    15 OZ0CW-TB-SS OZ0CW-TB-SS ; 
  10 OZ0CW-TIME-MK OZ0CW-TIME-MK ; 
    15 OZ0CW-TM-HH OZ0CW-TM-HH ; 
    15 OZ0CW-TM-MM OZ0CW-TM-MM ; 
  10 OZ0CW-B4DT-CHAR OZ0CW-B4DT-CHAR ; 
    15 OZ0CW-B4DT-NUM OZ0CW-B4DT-NUM ; 
  10 OZ0CW-AFTDT-CHAR OZ0CW-AFTDT-CHAR ; 
    15 OZ0CW-AFTDT-NUM OZ0CW-AFTDT-NUM ; 
  10 OZ0CW-ORDDT-CHAR OZ0CW-ORDDT-CHAR ; 
    15 OZ0CW-ORDDT-NUM OZ0CW-ORDDT-NUM ; 
  10 OZ0CW-EDIT-FLAG OZ0CW-EDIT-FLAG ; 
  10 OZ0CW-GPC-CD OZ0CW-GPC-CD ; 
  10 OZ0CW-GPC-DESC OZ0CW-GPC-DESC ; 
  10 OZ0CW-SESN-YR OZ0CW-SESN-YR ; 
  10 OZ0CW-YEAR-DESC-CHAR OZ0CW-YEAR-DESC-CHAR ; 
  10 OZ0CW-YEAR-DESC OZ0CW-YEAR-DESC ; 
    15 OZ0CW-YEAR-DESC-CC OZ0CW-YEAR-DESC-CC ; 
    15 OZ0CW-YEAR-DESC-YY OZ0CW-YEAR-DESC-YY ; 
  10 OZ0CW-SESN-CD OZ0CW-SESN-CD ; 
  10 OZ0CW-SESN-DESC OZ0CW-SESN-DESC ; 
  10 OZ0CW-STAT OZ0CW-STAT ; 
  10 OZ0CW-STAT-DESC OZ0CW-STAT-DESC ; 
  10 OZ0CW-UPDATE-SW OZ0CW-UPDATE-SW ; 
  10 OZ0CW-LAST-RULE-KEY OZ0CW-LAST-RULE-KEY ; 
    15 OZ0CW-LAST-RULE-DT OZ0CW-LAST-RULE-DT ; 
    15 OZ0CW-LAST-RULE-NBR OZ0CW-LAST-RULE-NBR ; 
  10 OZ0CW-SAVE-PAGE OZ0CW-SAVE-PAGE ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 OZ0CW-SV-OCD-REL-DT OZ0CW-SV-OCD-REL-DT ; 
  10 OZ0CW-SV-B4-DT OZ0CW-SV-B4-DT ; 
  10 OZ0CW-SV-AFT-DT OZ0CW-SV-AFT-DT ; 
  10 OZ0CW-CMP-OCD-REL-DT OZ0CW-CMP-OCD-REL-DT ; 
  10 OZ0CW-CMP-B4-DT OZ0CW-CMP-B4-DT ; 
  10 OZ0CW-CMP-AFT-DT OZ0CW-CMP-AFT-DT ; 
  10 OZ0CW-BIN-YEAR OZ0CW-BIN-YEAR ; 
    15 OZ0CW-BIN-YEAR-CC OZ0CW-BIN-YEAR-CC ; 
    15 OZ0CW-BIN-YEAR-YY OZ0CW-BIN-YEAR-YY ; 
  10 OZ0CW-FULLDATE OZ0CW-FULLDATE ; 
    15 OZ0CW-FULLCC OZ0CW-FULLCC ; 
    15 OZ0CW-FULLYY OZ0CW-FULLYY ; 
    15 OZ0CW-FULLMM OZ0CW-FULLMM ; 
    15 OZ0CW-FULLDD OZ0CW-FULLDD ; 
  10 OZ0CW-FORMDATE OZ0CW-FORMDATE ; 
    15 OZ0CW-FORMMM OZ0CW-FORMMM ; 
    15 OZ0CW-FORMDD OZ0CW-FORMDD ; 
    15 OZ0CW-FORMYY OZ0CW-FORMYY ; 
  10 OZ0CW-HOLD-DATE1 OZ0CW-HOLD-DATE1 ; 
  10 OZ0CW-HOLD-DATE2 OZ0CW-HOLD-DATE2 ; 
  10 OZ0CW-HOLD-YEAR OZ0CW-HOLD-YEAR ; 
  10 OZ0CW-HOLD-YEAR-CHAR OZ0CW-HOLD-YEAR-CHAR ; 
  10 OZ0CW-HOLD-YEAR-CHAR2 OZ0CW-HOLD-YEAR-CHAR2 ; 
  10 OZ0CW-HOLD-YEAR-CHAR3 OZ0CW-HOLD-YEAR-CHAR3 ; 
  10 OZ0CW-CTL-FLD OZ0CW-CTL-FLD ; 
    15 OZ0CW-FNC OZ0CW-FNC ; 
    15 OZ0CW-SAV OZ0CW-SAV ; 
    15 OZ0CW-SAV-PAGE OZ0CW-SAV-PAGE ; 
  10 OZ0CW-SV-GPC OZ0CW-SV-GPC ; 
  10 OZ0CW-SV-GPCDESC OZ0CW-SV-GPCDESC ; 
  10 OZ0CW-SV-SP1ID OZ0CW-SV-SP1ID ; 
  10 OZ0CW-SV-SP1NM OZ0CW-SV-SP1NM ; 
end // end OZ0CW00


//*** RECORD=OZ0CW01 ****
// /*
// /*      application working storage for map1
// /*
// ***********************
Record OZ0CW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(689) ; // Temporary storage page length
    10 OZ0CW-SEL OZ0CW-SEL [13] ; 
    10 OZ0CW-GROUP OZ0CW-GROUP [13] ; 
      15 OZ0CW-SOCD-CUST-NEED-BDT OZ0CW-SOCD-CUST-NEED-BDT ; 
      15 OZ0CW-SOCD-CUST-NEED-XDT OZ0CW-SOCD-CUST-NEED-XDT ; 
      15 OZ0CW-OCD-REL-DT OZ0CW-OCD-REL-DT ; 
      15 OZ0CW-XXX-STAT OZ0CW-XXX-STAT ; 
      15 OZ0CW-XXX-STAT-DESC OZ0CW-XXX-STAT-DESC ; 
      15 OZ0CW-ZZZSDT OZ0CW-ZZZSDT ; 
      15 OZ0CW-ZZZSDTM OZ0CW-ZZZSDTM ; 
      15 OZ0CW-ZZZCHGDT OZ0CW-ZZZCHGDT ; 
      15 OZ0CW-ZZZCHGTM OZ0CW-ZZZCHGTM ; 
      15 OZ0CW-ZZZCHGCT OZ0CW-ZZZCHGCT ; 
end // end OZ0CW01


//*** RECORD=OZ0CW02 ****
// /*
// /*      application working storage for map 2
// /*
// ***********************
Record OZ0CW02 type basicRecord
  10 OZ0CW02-GROUP-DATA OZ0CW02-GROUP-DATA ; 
    15 OZ0CW-GPC-CD OZ0CW-GPC-CD ; 
    15 OZ0CW-RULE-NBR OZ0CW-RULE-NBR ; 
    15 OZ0CW-RULE-XREF-CD OZ0CW-RULE-XREF-CD ; 
    15 OZ0CW-RULE-DT OZ0CW-RULE-DT ; 
    15 OZ0CW-RULE-RCPT-DT OZ0CW-RULE-RCPT-DT ; 
    15 OZ0CW-SESN-CD OZ0CW-SESN-CD [3] ; 
    15 OZ0CW-SESN-YEAR OZ0CW-SESN-YEAR [3] ; 
    15 OZ0CW-RULE-COMNT OZ0CW-RULE-COMNT ; 
    15 OZ0CW-STAT OZ0CW-STAT ; 
    15 OZ0CW-XXXUSRID OZ0CW-XXXUSRID ; 
    15 OZ0CW-ZZZSDT OZ0CW-ZZZSDT ; 
    15 OZ0CW-ZZZCHGDT OZ0CW-ZZZCHGDT ; 
    15 OZ0CW-ZZZCHGTM OZ0CW-ZZZCHGTM ; 
    15 OZ0CW-ZZZCHGCT OZ0CW-ZZZCHGCT ; 
  10 OZ0CW-GPC-DESC OZ0CW-GPC-DESC ; 
end // end OZ0CW02


//*** RECORD=VOCRSP01 ****
// record layout for dordcd.vocrsp01
// socd release criteria - sales program
// created 06/10/97   dsmit0
// ************************
Record VOCRSP01 type basicRecord
  5 VOCRSP01-GROUP VOCRSP01-GROUP ; 
    10 VOCRSP01-KEY VOCRSP01-KEY ; 
      15 SP1ID SP1ID ; 
      15 XGPCD XGPCD ; 
      15 SOCD-CUST-NEED-BDT SOCD-CUST-NEED-BDT ; 
    10 SOCD-CUST-NEED-XDT SOCD-CUST-NEED-XDT ; 
    10 OCD-REL-DT OCD-REL-DT ; 
    10 XXX-STAT XXX-STAT ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZSDTM ZZZSDTM ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end VOCRSP01


DataItem OZ0CW-AFTDT-CHAR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0CW-AFTDT-NUM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0CW-B4DT-CHAR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0CW-B4DT-NUM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Binary work year
DataItem OZ0CW-BIN-YEAR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Binary work year cc
DataItem OZ0CW-BIN-YEAR-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Binary work year yy
DataItem OZ0CW-BIN-YEAR-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date
DataItem OZ0CW-CMP-AFT-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date
DataItem OZ0CW-CMP-B4-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date
DataItem OZ0CW-CMP-OCD-REL-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Pass record control field
DataItem OZ0CW-CTL-FLD char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0CW-EDIT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Map function switch
DataItem OZ0CW-FNC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format Date
DataItem OZ0CW-FORMDATE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format Date dd
DataItem OZ0CW-FORMDD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format Date mm
DataItem OZ0CW-FORMMM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format Date yy
DataItem OZ0CW-FORMYY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date cc
DataItem OZ0CW-FULLCC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date
DataItem OZ0CW-FULLDATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date dd
DataItem OZ0CW-FULLDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date mm
DataItem OZ0CW-FULLMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date yy
DataItem OZ0CW-FULLYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE
DataItem OZ0CW-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0CW-GPC-DESC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0CW-GROUP char(52)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Holding Date 1
DataItem OZ0CW-HOLD-DATE1 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Holding Date 2
DataItem OZ0CW-HOLD-DATE2 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Holding Year numeric
DataItem OZ0CW-HOLD-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Holding Year character
DataItem OZ0CW-HOLD-YEAR-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Holding Year character
DataItem OZ0CW-HOLD-YEAR-CHAR2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Holding Year character
DataItem OZ0CW-HOLD-YEAR-CHAR3 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0CW-IX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0CW-IX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0CW-IXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0CW-IXX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Update switch
DataItem OZ0CW-LAST-RULE-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Update switch
DataItem OZ0CW-LAST-RULE-KEY char(19)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Last ruling nbr processed
DataItem OZ0CW-LAST-RULE-NBR char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE - DETAIL
DataItem OZ0CW-OCD-REL-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0CW-ORDDT-CHAR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0CW-ORDDT-NUM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// BINDING RULING COMMENT
DataItem OZ0CW-RULE-COMNT char(45)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING DATE
DataItem OZ0CW-RULE-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// BINDING RULING NUMBER
DataItem OZ0CW-RULE-NBR char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING RECEIPT DATE
DataItem OZ0CW-RULE-RCPT-DT int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING CROSS REFERENCE
DataItem OZ0CW-RULE-XREF-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Save index for WS
DataItem OZ0CW-SAV num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save page for cursor placement
DataItem OZ0CW-SAV-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Page save field
DataItem OZ0CW-SAVE-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0CW-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// SEASON CODE
DataItem OZ0CW-SESN-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// SEASON CODE DESCRIPTION - HDR
DataItem OZ0CW-SESN-DESC char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// SEASON YEAR
DataItem OZ0CW-SESN-YEAR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// SEASON YEAR
DataItem OZ0CW-SESN-YR char(2)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0CW-SFN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE - DETAIL
DataItem OZ0CW-SOCD-CUST-NEED-BDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// GPC CODE - DETAIL
DataItem OZ0CW-SOCD-CUST-NEED-XDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// STATUS CODE
DataItem OZ0CW-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// STATUS CODE DESCRIPTION - HDR
DataItem OZ0CW-STAT-DESC char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date
DataItem OZ0CW-SV-AFT-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date
DataItem OZ0CW-SV-B4-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0CW-SV-GPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0CW-SV-GPCDESC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Work Full Date
DataItem OZ0CW-SV-OCD-REL-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0CW-SV-SP1ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0CW-SV-SP1NM char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0CW-SWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Map to be displayed switch
DataItem OZ0CW-SWD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format the map switch
DataItem OZ0CW-SWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Request for data switch
DataItem OZ0CW-SWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Storage page update switch
DataItem OZ0CW-SWU char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0CW-TB-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0CW-TB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0CW-TB-SS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0CW-TIME-BRK char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0CW-TIME-MK num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0CW-TM-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0CW-TM-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Update switch
DataItem OZ0CW-UPDATE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE - DETAIL
DataItem OZ0CW-XXX-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE - DETAIL
DataItem OZ0CW-XXX-STAT-DESC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING COMMENT -DETAIL
DataItem OZ0CW-XXXUSRID char(8)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end


// SEASON YEARdescription
DataItem OZ0CW-YEAR-DESC num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// SEASON YEAR description cc
DataItem OZ0CW-YEAR-DESC-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// SEASON YEAR description char
DataItem OZ0CW-YEAR-DESC-CHAR char(4)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end


// SEASON YEAR description yy
DataItem OZ0CW-YEAR-DESC-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING COMMENT -DETAIL
DataItem OZ0CW-ZZZCHGCT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING COMMENT -DETAIL
DataItem OZ0CW-ZZZCHGDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING COMMENT -DETAIL
DataItem OZ0CW-ZZZCHGTM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING COMMENT -DETAIL
DataItem OZ0CW-ZZZSDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// BINDING RULING COMMENT -DETAIL
DataItem OZ0CW-ZZZSDTM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0CW02-GROUP-DATA char(102)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCRSP01-GROUP char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCRSP01-KEY char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


