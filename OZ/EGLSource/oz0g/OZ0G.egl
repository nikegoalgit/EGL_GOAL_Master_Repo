package oz0g;

import corpcom2.XP0PW00;
import corpcom2.XP0PW01;
import corpcom2.XP0RW00;
import corpcom2.XP0RW01;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPOZ-00001;
import corpcom3.XPXGP01;
import corpcom3.XPXSO01;
import corpcom3.XPXX001;
import corpcom4.XSOZ-S0001;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpcom7.ZZZSDTM;
import corpcom7.ZZZSTM;
import corpx1.XGPTBL;
import corpx1.XOMTBL;
import corpx1.XOTTBL;
import corpx1.XPTTBL;
import corpx1.XSETBL;
import corpx1.XSOTBL;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import ku.common.KU5REC;
import ku.common.KUCREC;
import ku.common.KUNREC;
import ob.common.OB3REC;
import ob.common.OBSFREC;
import op.common.OP-SZ-GRP-SEQ;
import op.common.OP1CUOID;
import op.common.OP1NORID;
import op.common.OP1PARTN;
import op.common.OP1REC;
import op.common.OP2LNINB;
import op.common.OP2REC;
import op.common.OP3REC;
import op.common.OPAGREC;
import op.common.OPJREC;
import oz.common.OZAREC;
import oz.common.OZBREC;
import oz.common.OZCREC;
import oz.common.OZDREC;
import oz.common.OZWREC;
import sm.common.SM1REC;
import sm.common.SM4REC;
import sm.common.SM5REC;
import sp.common.SOCD-APPL-SRC-CD;
import sp.common.SOCD-LTR-XCEP-CD;
import sp.common.SP1REC;
import sy.common.SY1REC;
import sy.common.SY2REC;
import sy.common.SY4REC;
import sy.common.SYCREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VOCHDR01;
import vv.common.VOCITM01;
import vv.common.VOCLEA01;
import vv.common.VOCLEM01;
import vv.common.VSOCRC01;
import vv.common.VSOHCR01;
import vv.common.VSOSCR01;
import ww.common.WOZ2110;
import ww.common.WOZSZRNP;
import ww.common.WOZSZRNR;
import ww.common.WOZSZRUN;

//*** PROGRAM=OZ0G ****
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      06/04/97  dsmit0  New application.
//          03/31/98  dhuffm  fix approval of manual review
//                            letters.
//          05/19/98  sgopal  Changed the justify definiton of
//                            dept and store id from left to
//                            right in OZ0GM001.
// BL1768   08/26/98  hbaska  added logic for handling sqlcode
//                            100 in OZ0G-13327 process.
// *********************
Program OZ0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OZ00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KU5REC KU5REC; // record
  KUCREC KUCREC; // record
  KUNREC KUNREC; // record
  OB3REC OB3REC; // record
  OBSFREC OBSFREC; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  OP3REC OP3REC; // record
  OPAGREC OPAGREC; // record
  OPJREC OPJREC; // record
  OZ0GW00 OZ0GW00; // record
  OZ0GW01 OZ0GW01; // record
  OZ0GW02 OZ0GW02; // record
  OZ0GW03 OZ0GW03; // record
  OZ0GW03A OZ0GW03A; // record
  OZAREC OZAREC; // record
  OZBREC OZBREC; // record
  OZCREC OZCREC; // record
  OZDREC OZDREC; // record
  OZWREC OZWREC; // record
  SM1REC SM1REC; // record
  SM4REC SM4REC; // record
  SM5REC SM5REC; // record
  SP1REC SP1REC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY4REC SY4REC; // record
  SYCREC SYCREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VOCHDE01 VOCHDE01; // record
  VOCHDR01 VOCHDR01; // record
  VOCITM01 VOCITM01; // record
  VOCLEA01 VOCLEA01; // record
  VOCLEC01 VOCLEC01; // record
  VOCLEM01 VOCLEM01; // record
  VOCOEC01 VOCOEC01; // record
  VOCSIE01 VOCSIE01; // record
  VSOCRC01 VSOCRC01; // record
  VSOHCR01 VSOHCR01; // record
  VSOSCR01 VSOSCR01; // record
  WOZ2110 WOZ2110; // record
  WOZ2130 WOZ2130; // record
  WOZ2150 WOZ2150; // record
  WOZSZRNP WOZSZRNP; // record
  WOZSZRNR WOZSZRNR; // record
  WOZSZRUN WOZSZRUN; // record
  XP0PW00 XP0PW00; // record
  XP0PW01 XP0PW01; // record
  XP0RW00 XP0RW00; // record
  XP0RW01 XP0RW01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use XOTTBL {deleteAfterUse = yes}; // table
  use XOMTBL {deleteAfterUse = yes}; // table
  use XSOTBL {deleteAfterUse = yes}; // table
  use XPTTBL {deleteAfterUse = yes}; // table
  use OZ0GM.OZ0GM001,  // forms
      OZ0GM.OZ0GM002, 
      OZ0GM.OZ0GM003,
      OZ0GM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPOZ-00001: XPOZ-00001();
    /* ------------------------------------------------------------*/
    /* Initialize working storage and display storage areas.*/
    /* ------------------------------------------------------------*/

    set OZ0GM001 initial; /* M001 input/output*/
    set OZ0GW00 empty; /* Working storage*/
    set OZ0GW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    OZ0GW00.OZ0GW-SWD = "1"; /* Map to be displayed switch*/
    OZ0GW00.OZ0GW-SWF = "Y"; /* Format the map switch*/
    OZ0GW00.OZ0GW-SWR = "N"; /* Request for data switch*/
  
    if (OZWREC.OZW-APPIDX == 0)
      OZWREC.OZW-APPIDX = 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0A";
    end
  
    /* ------------------------------------------------------------*/
    /* If data was passed in the COMMAREA, use as the initial key.*/
    /* ------------------------------------------------------------*/

    if (COMMAREA.CAFROMAP == "OZ0A") /* not coming from menu*/
      OZ0GW00.OZ0GW-SWF = "N"; /* Format the map switch*/
      OZ0GW00.OZ0GW-SWR = "N"; /* Request for data switch*/
    else
      if (COMMAREA.CAUSERA > " ") /* Data was passed*/

        OZWREC.CAUSERA = COMMAREA.CAUSERA;
  
        if (OZWREC.XGPCD == "  " && 
        OZWREC.XSOCD == "  ")
          OZ0GW00.OZ0GW-SWR = "N"; /* Request for data switch*/
          OZ0GW00.OZ0GW-SWF = "N"; /* Request for data switch*/
        else
  
          if (OZWREC.OZW-SV-APPL == " ")
            OZWREC.OZW-SV-APPL = COMMAREA.CAFROMAP;
          end
  
          if (OZWREC.OZW-HDR-CSD > " ")
            OZWREC.CUST-STR-DPT = OZWREC.OZW-HDR-CSD;
          end
  
          OZ0GM001.OZ0GM-CURR-CU-CO-ID = OZWREC.OZW-CUST;
  
          if (OZ0GM001.OZ0GM-CURR-CU-CO-ID == "0000000")
            OZ0GM001.OZ0GM-CURR-STOR-ID = "    ";
            OZ0GM001.OZ0GM-CURR-XNX-DEPT = "  ";
          else
            OZ0GM001.OZ0GM-CURR-STOR-ID = OZWREC.OZW-STOR;
            OZ0GM001.OZ0GM-CURR-XNX-DEPT = OZWREC.OZW-DEPT;
          end
  
          OZ0GM001.OZ0GM-CU-CO-NM-HDR = OZWREC.KUCCONM;
          OZ0GM001.OZ0GM-CURR-GPC-CD = OZWREC.XGPCD;
          OZ0GM001.OZ0GM-SLS-OFF = OZWREC.XSOCD;
          OZ0GM001.OZ0GM-SM-SREP-ID = OZWREC.SM4REPID;
          OZ0GM001.OZ0GM-SM-SAGCY-ID = OZWREC.SM1AGYID;
          OZ0GW00.OZ0GW-SOCD-LTR-OVRD-ID = OZWREC.SOCD-LTR-OVRD-ID;
          OZ0GW00.OZ0GW-BYPASS-ELIGB = OZWREC.BYPASS-ELIGB;
  
          OZ0GW00.OZ0GW-SWR = "Y"; /* Request for data switch*/
  
        end
      end
    end

    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OZ0G-00000; /* Converse the main process*/


    OZ0G-00000: OZ0G-00000();
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OZ0G-00000; /* Converse the main process*/


  end // end main
end // end OZ0G


// Main process to display a map
Function OZ0G-00000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) If specified, display the first map.*/
  /* 2) Otherwise, if specified, display the second map, depending*/
  /* on function = add or change*/
  /* 3) Otherwise, indicate error and exit to Application Menu.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  if (OZ0GW00.OZ0GW-SWD == "1") /* Map 1 was requested*/

    OZ0G-10000(); /* Display map 1*/

  else

      /* ------------------------------------------------------------*/
      /* Write the error to the Error Diagnosis Reporting Facility.*/
      /* ------------------------------------------------------------*/

    OZWREC.XXXPRCNM = "00000"; /* Module identification*/
    OZWREC.XXXMSGNO = 10; /* Unexpected error occurred*/

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";
    TA1REC.TA1MAPNO = OZ0GW00.OZ0GW-SWD; /* Map number*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/

    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      /* ------------------------------------------------------------*/
      /* Exit to display the application system menu.*/
      /* ------------------------------------------------------------*/

    COMMAREA.CATOAP = "KS0A"; /* TO application*/

    XSOZ-S0001(); /* Exit to another application*/

      /* ------------------------------------------------------------*/
      /* Abnormally terminate the transaction if the exit failed.*/
      /* ------------------------------------------------------------*/

    TA1REC.TA1FUNC = "ABND"; /* Termination function*/

    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end



end // end OZ0G-00000


// List the rows in the table
Function OZ0G-10000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Obtain the data to display.*/
  /* 2) Format the map output area and display the map.*/
  /* 3) Check the attention identifier used to respond.*/
  /* 4) Reset highlighted fields to normal intensity.*/
  /* 5) Verify the data that was entered.*/
  /* 6) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0G-11000(); /* Obtain the data to display*/

  OZ0G-12000(); /* Format and display the map*/

  OZ0G-13000(); /* Check attention identifier*/

  OZ0G-14000(); /* Reset fields to normal intensity*/

  OZ0G-15000(); /* Verify the entered data*/

  OZ0G-16000(); /* Process valid input request*/


end // end OZ0G-10000


// Obtain the data to display
Function OZ0G-11000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  if (OZ0GW00.OZ0GW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/
  OZ0GW00.XXXTSLEN = 1200; /* temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/
  if (OZ0GW00.XXXTSPAG == 0) /* no pages established*/
    OZ0GW00.XXXTSPAG = 1; /* Page number to display*/
  end

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/
  OZ0G-11100(); /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Perform screen header edits*/
  /* ------------------------------------------------------------*/
  OZ0G-11200(); /* screen header edits*/

  if (OZ0GW00.OZ0GW-EDIT-FLAG == "Y") /* didn't pass edits*/
    exit stack;
  end
  /* temp ezertn*/
  /* ERTN;*/

  /* ------------------------------------------------------------*/
  /* get the data*/
  /* ------------------------------------------------------------*/
  OZ0G-11300();
end // end OZ0G-11000


// Purge any temporary storage
Function OZ0G-11100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/

  set OZ0GW01 empty; /* M001 display storage*/

  OZ0GW00.OZ0GW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0GW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "OZ0G"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0GW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "11100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-11100


// screen header edits
Function OZ0G-11200()
  /* -------------------------------------------------------------*/
  /* check valid gpc code*/
  /* -------------------------------------------------------------*/
  if (OZ0GM001.OZ0GM-CURR-GPC-CD == " ") /* code is blank - flag edit*/
    OZ0GW00.OZ0GW-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OZ0GW00.OZ0GW-SWR = "N";
    OZWREC.XXXPRCNM = "11200"; /* Module identification*/
    set OZ0GM001.OZ0GM-CURR-GPC-CD cursor, bold; /* Highlight*/
    set OZ0GM001.OZ0GM-GPC-DESC skip, invisible; /* darken desc*/
    converseLib.validationFailed(22); /* GPC code invalid*/
    return;

  else
    if (OZ0GM001.OZ0GM-CURR-GPC-CD in XGPTBL.XGPCD) /* code in table*/

   /* get description*/
      if (OZ0GM001.OZ0GM-CURR-GPC-CD in XGPTBL.XGPCD)
        OZ0GM001.OZ0GM-GPC-DESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      end
      set OZ0GM001.OZ0GM-GPC-DESC skip;

    else
      OZ0GW00.OZ0GW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0GW00.OZ0GW-SWR = "N";
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0GM001.OZ0GM-CURR-GPC-CD cursor, bold; /* Highlight*/
      set OZ0GM001.OZ0GM-GPC-DESC skip, invisible; /* darken desc*/
      OZ0GM001.OZ0GM-GPC-DESC = " ";
      converseLib.validationFailed(22); /* GPC code invalid*/
      return;

    end

  end

  /* -------------------------------------------------------------*/
  /* check if minimum allowed fields entered*/
  /* -------------------------------------------------------------*/
  if (OZ0GM001.OZ0GM-CURR-GPC-CD > " ") /* gpc code entered*/

    if (OZ0GM001.OZ0GM-SLS-OFF > " ")

      if (OZ0GM001.OZ0GM-SLS-OFF in XSOTBL.XSOCD) /* code in table*/

   /* get description*/
        if (OZ0GM001.OZ0GM-SLS-OFF in XSOTBL.XSOCD)
          OZ0GM001.OZ0GM-SLS-OFF-DESC = XSOTBL.XSOSNM[sysVar.arrayIndex];
        end
      else

        OZ0GW00.OZ0GW-EDIT-FLAG = "Y"; /* yes to edit flag*/
        OZ0GW00.OZ0GW-SWR = "N";
        OZWREC.XXXPRCNM = "11200"; /* Module identification*/
        set OZ0GM001.OZ0GM-SLS-OFF cursor, bold; /* highlight*/
        OZ0GM001.OZ0GM-SLS-OFF-DESC = " ";
        converseLib.validationFailed(24);
        return;
      end

    else
      OZ0GW00.OZ0GW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0GW00.OZ0GW-SWR = "N";
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0GM001.OZ0GM-SLS-OFF cursor, bold; /* highlight*/
      OZ0GM001.OZ0GM-SLS-OFF-DESC = " ";
      converseLib.validationFailed(23);
      return;

    end

  end

  /* -------------------------------------------------------------*/
  /* if cust.str.dpt all entered verify against dcust.vcust001*/
  /* else use cust number against dcust.vcmpny01*/
  /* in either case read vcmpny01 to get company name*/
  /* -------------------------------------------------------------*/
  if (OZ0GM001.OZ0GM-CURR-CU-CO-ID > 0)
    OZ0GW00.OZ0GW-SV-CU-CO-ID = OZ0GM001.OZ0GM-CURR-CU-CO-ID;
    if (OZ0GM001.OZ0GM-CURR-STOR-ID > " " && 
    OZ0GM001.OZ0GM-CURR-XNX-DEPT > " ")
      OZ0GW00.OZ0GW-SV-STOR-ID-CHAR = OZ0GM001.OZ0GM-CURR-STOR-ID;
      OZ0GW00.OZ0GW-SV-XNX-DEPT-CHAR = OZ0GM001.OZ0GM-CURR-XNX-DEPT;
      OZ0GW00.OZ0GW-HDR-STR = OZ0GW00.OZ0GW-SV-STOR-ID-NUM;
      OZ0GW00.OZ0GW-HDR-DPT = OZ0GW00.OZ0GW-SV-XNX-DEPT-NUM;
      OZ0GW00.OZ0GW-SV-STOR-ID = OZ0GW00.OZ0GW-HDR-STR;
      OZ0GW00.OZ0GW-SV-XNX-DEPT = OZ0GW00.OZ0GW-HDR-DPT;

      OZ0G-11210(); /* validate against dcust.vcust001*/
      OZ0G-11220(); /* retrv cmpny name from dcust.vcmpny01*/

      if (SQLCA.VAGen_SQLCODE == 0)
        OZ0GM001.OZ0GM-CU-CO-NM-HDR = KUCREC.KUCCONM;
      else
        OZ0GW00.OZ0GW-EDIT-FLAG = "Y"; /* yes to edit flag*/
        OZ0GW00.OZ0GW-SWR = "N";
        OZWREC.XXXPRCNM = "11200"; /* Module identification*/
        set OZ0GM001.OZ0GM-CURR-CU-CO-ID bold, cursor; /* highlight*/
        OZ0GM001.OZ0GM-CU-CO-NM-HDR = " ";
        converseLib.validationFailed(51);
        return;
      end

    else
      OZ0G-11220(); /* validate against dcust.vcmpny01*/

      if (SQLCA.VAGen_SQLCODE == 0)
        OZ0GM001.OZ0GM-CU-CO-NM-HDR = KUCREC.KUCCONM;
      else
        OZ0GW00.OZ0GW-EDIT-FLAG = "Y"; /* yes to edit flag*/
        OZ0GW00.OZ0GW-SWR = "N";
        OZWREC.XXXPRCNM = "11200"; /* Module identification*/
        set OZ0GM001.OZ0GM-CURR-CU-CO-ID bold; /* highlight*/
        OZ0GM001.OZ0GM-CU-CO-NM-HDR = " ";
        converseLib.validationFailed(51);
        return;
      end

    end
  end
  /*  */
  if (OZ0GM001.OZ0GM-ELAPSED-DAYS > 0)
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "E";
    TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;
    OZ0GW00.OZ0GW-SUB-DAYS = OZ0GM001.OZ0GM-ELAPSED-DAYS * -1;
    TA2REC.TA2DYAOD = OZ0GW00.OZ0GW-SUB-DAYS;

    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

    if (TA2REC.TA2RTNCD == 0)
      OZ0GW00.OZ0GW-CUT-OFF = TA2REC.TA2GRGGN;
    else
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      converseLib.validationFailed(10); /* unexpected error*/
    end

  end

  /* -------------------------------------------------------------*/
  /* if sales agency id entered verify against dslsmn.vSagcy01*/
  /* retrieve the sales agency name*/
  /* -------------------------------------------------------------*/
  if (OZ0GM001.OZ0GM-SM-SAGCY-ID > " ")
    OZ0G-11240(); /* validate against dslsmn.vsagcy01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OZ0GM001.OZ0GM-SM-SAGCY-ID-DESC = SM1REC.SM1AGYNM;
    else
      OZ0GW00.OZ0GW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0GW00.OZ0GW-SWR = "N";
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      set OZ0GM001.OZ0GM-SM-SAGCY-ID cursor, bold; /* highlight*/
      OZ0GM001.OZ0GM-SM-SAGCY-ID-DESC = " ";
      converseLib.validationFailed(43);
      return;
    end
  else
    OZ0GM001.OZ0GM-SM-SAGCY-ID-DESC = " ";
  end

  /* -------------------------------------------------------------*/
  /* if sales rep id entered verify against dslsmn.vreps001*/
  /* retrieve the sm-srep-cont-tdt if this is 0 or GT today's date*/
  /* display the sales rep's first and last name*/
  /* else display error*/
  /* -------------------------------------------------------------*/
  if (OZ0GM001.OZ0GM-SM-SREP-ID > 0)
    OZ0G-11260(); /* get reps first and last names*/
    if (SQLCA.VAGen_SQLCODE == 0)
      if (SM4REC.SM4TDT == 0)
        OZ0GM001.OZ0GM-SM-SREP-LAST-NM = SM4REC.XXXLSTNM;
        OZ0GM001.OZ0GM-SM-SREP-FIRST-NM = SM4REC.XXXFSTNM;
      else
        OZ0GW00.OZ0GW-NUM-DATE = SM4REC.SM4TDT;

        set TA2REC empty;
        TA2REC.TA2DTOPT = "GREGGREG";
        TA2REC.TA2GRTYP = "E";
        TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

        call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

        if (TA2REC.TA2RTNCD == 0)
          OZ0GW00.OZ0GW-SV-DATE = TA2GRGGN;
        else
          OZWREC.XXXPRCNM = "11200"; /* Module identification*/
          converseLib.validationFailed(27); /* date invalid*/
          OZ0GW00.OZ0GW-SWR = "N"; /**/
          OZ0GW00.OZ0GW-EDIT-FLAG = "Y"; /* yes to edit flag*/
        end

        if (OZ0GW00.OZ0GW-NUM-DATE > OZ0GW00.OZ0GW-SV-DATE)
          OZ0GM001.OZ0GM-SM-SREP-LAST-NM = SM4REC.XXXLSTNM;
          OZ0GM001.OZ0GM-SM-SREP-FIRST-NM = SM4REC.XXXFSTNM;
        else
          OZWREC.XXXPRCNM = "11200"; /* Module identification*/
          set OZ0GM001.OZ0GM-SM-SREP-ID cursor, bold;
          converseLib.validationFailed(27); /* sales rep invalid*/
          OZ0GW00.OZ0GW-EDIT-FLAG = "Y"; /* yes to edit flag*/
          OZ0GW00.OZ0GW-SWR = "N"; /**/
          return;
        end
      end
    else
      OZWREC.XXXPRCNM = "11200"; /* Module identification*/
      OZ0GM001.OZ0GM-SM-SREP-LAST-NM = " ";
      OZ0GM001.OZ0GM-SM-SREP-FIRST-NM = " ";
      set OZ0GM001.OZ0GM-SM-SREP-ID cursor, bold;
      set OZ0GM001.OZ0GM-SM-SREP-LAST-NM invisible;
      set OZ0GM001.OZ0GM-SM-SREP-FIRST-NM invisible;
      converseLib.validationFailed(27); /* sales rep invalid*/
      OZ0GW00.OZ0GW-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OZ0GW00.OZ0GW-SWR = "N"; /**/
      return;
    end
  else
    OZ0GM001.OZ0GM-SM-SREP-LAST-NM = " ";
    OZ0GM001.OZ0GM-SM-SREP-FIRST-NM = " ";
  end

  /* -------------------------------------------------------------*/
end // end OZ0G-11200


// Select set and open cursor
Function OZ0G-11210()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set KUNREC empty; /* Clear row storage area*/

  KUNREC.KUCCOID = OZ0GM001.OZ0GM-CURR-CU-CO-ID;
  KUNREC.XGPCD = OZ0GM001.OZ0GM-CURR-GPC-CD;
  KUNREC.KUMSTRID = OZ0GW00.OZ0GW-SV-STOR-ID;
  KUNREC.XNXCD = OZ0GW00.OZ0GW-SV-XNX-DEPT;


  try
    call "IO0280" ("S ", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0      /* and normal return code*/
   || SQLCA.VAGen_SQLCODE == +100))  /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUNREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUNREC.KUNGRP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-11210


// Select set and open cursor
Function OZ0G-11220()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set KUCREC empty; /* Clear row storage area*/

  KUCREC.KUCCOID = OZ0GW00.OZ0GW-SV-CU-CO-ID;


  try
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0 ||   
  SQLCA.VAGen_SQLCODE == +100))     

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUCREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-11220


// Select set and open cursor
Function OZ0G-11240()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set SM1REC empty; /* Clear row storage area*/

  SM1REC.SM1AGYID = OZ0GM001.OZ0GM-SM-SAGCY-ID;


  try
    call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0 ||   
  SQLCA.VAGen_SQLCODE == +100))     

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DSLSMN "; /* Data base name*/
  TA1REC.TA1TBLVU = "SM1REC"; /* Table view name*/
  TA1REC.TA1TBLKE = SM1REC.SM1AGYID; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-11240


// Select set and open cursor
Function OZ0G-11260()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set SM4REC empty; /* Clear row storage area*/

  SM4REC.SM4REPID = OZ0GM001.OZ0GM-SM-SREP-ID;


  try
    call "IO0020" ("S ", SQLCA, SM4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0      /* and normal return code*/
   || SQLCA.VAGen_SQLCODE == 100))  

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DSLSMN  "; /* Data base name*/
  TA1REC.TA1TBLVU = "SM4REC"; /* Table view name*/
  TA1REC.TA1TBLKE = SM4REC.VREPS001-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-11260


// Obtain the data to display
Function OZ0G-11300()
  /* -------------------------------------------------------------*/
  /* build woz2130 record to pass to iomod*/
  /* -------------------------------------------------------------*/
  OZ0G-11305(); /* build woz2130 pass record*/

  /* -------------------------------------------------------------*/
  /* open the cursor*/
  /* -------------------------------------------------------------*/
  OZ0G-11310();

  /* -------------------------------------------------------------*/
  /* Fetch and format the data into pages until end of cursor.*/
  /* -------------------------------------------------------------*/
  OZ0GW00.OZ0GW-IXM = 1; /* Display line index*/
  OZ0GW00.OZ0GW-SWC = "N"; /* End of cursor switch*/

  while (OZ0GW00.OZ0GW-SWC == "N") /* Until end of cursor*/

    OZ0G-11320(); /* Fetch next row in the cursor*/

    if (OZ0GW00.OZ0GW-SWC == "N") /* Not end of cursor*/
      OZ0G-11330(); /* Save data in display storage*/
    end

    if (OZ0GW00.OZ0GW-IXM > 11) /* Page is full*/

      OZ0G-11340(); /* Add page to temporary storage*/

      OZ0GW00.OZ0GW-IXM = 1; /* Display line index*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Add any partially formatted last page to the queue.*/
  /* ------------------------------------------------------------*/
  if (OZ0GW00.OZ0GW-IXM > 1) /* Page was formatted*/
    OZ0G-11340(); /* Add page to temporary storage*/
  end

  /* ------------------------------------------------------------*/
  /* close the cursor*/
  /* ------------------------------------------------------------*/
  OZ0G-11350(); /* Close the selected set cursor*/


  if (OZ0GW00.TA5TSQIX == 0) /* No pages formatted*/

    OZWREC.XXXPRCNM = "11300"; /* Module identification*/
    if (OZ0GW00.OZ0GW-UPD-FLG == "Y")
      OZWREC.XXXMSGNO = 45; /* No data was found to display*/
      OZ0GW00.OZ0GW-UPD-FLG = " ";
    else
      OZWREC.XXXMSGNO = 16; /* No data was found to display*/
    end
    set OZ0GM001.OZ0GM-CURR-CU-CO-ID cursor; /* cursor*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/

  OZ0GW00.OZ0GW-SWR = "N"; /* Request for data switch*/
end // end OZ0G-11300


// Select set and open cursor
Function OZ0G-11305()
  set WOZ2130 empty;

  WOZ2130.WOZ2130-IO-GPC = OZ0GM001.OZ0GM-CURR-GPC-CD;
  WOZ2130.WOZ2130-IO-SALES-OFF = OZ0GM001.OZ0GM-SLS-OFF;

  if (OZ0GM001.OZ0GM-ELAPSED-DAYS > 0)
    WOZ2130.WOZ2130-IO-CUTOFF-DATE = OZ0GW00.OZ0GW-CUT-OFF;
  else
    WOZ2130.WOZ2130-IO-CUTOFF-DATE = -1;
  end

  if (OZ0GM001.OZ0GM-CURR-CU-CO-ID > 0)
    WOZ2130.WOZ2130-SOCD-CURR-CU-CO-ID = OZ0GM001.OZ0GM-CURR-CU-CO-ID;
  else
    WOZ2130.WOZ2130-SOCD-CURR-CU-CO-ID = -1;
  end

  if (OZ0GM001.OZ0GM-CURR-STOR-ID > " ")
    OZ0GW00.OZ0GW-SV-STOR-ID-CHAR = OZ0GM001.OZ0GM-CURR-STOR-ID;
    WOZ2130.WOZ2130-SOCD-CURR-STOR-ID = OZ0GW00.OZ0GW-SV-STOR-ID-NUM;
  else
    WOZ2130.WOZ2130-SOCD-CURR-STOR-ID = -1;
  end

  if (OZ0GM001.OZ0GM-CURR-XNX-DEPT > " ")
    OZ0GW00.OZ0GW-SV-XNX-DEPT-CHAR = OZ0GM001.OZ0GM-CURR-XNX-DEPT;
    WOZ2130.WOZ2130-SOCD-CURR-XNX-DEPT = OZ0GW00.OZ0GW-SV-XNX-DEPT-NUM;
  else
    WOZ2130.WOZ2130-SOCD-CURR-XNX-DEPT = -1;
  end

  WOZ2130.WOZ2130-IO-TASK = "S1";
end // end OZ0G-11305


// Select set and open cursor
Function OZ0G-11310()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "OZ2130" (WOZ2130, SQLCA) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "OZ2130  "; /* Table view name*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-11310


// Fetch next row in the cursor
Function OZ0G-11320()
  /* ------------------------------------------------------------*/
  /* Fetch the next row to display from the table.*/
  /* ------------------------------------------------------------*/
  WOZ2130.WOZ2130-IO-TASK = "N1";

  try
    call "OZ2130" (WOZ2130, SQLCA) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      OZ0GW00.OZ0GW-SWC = "Y"; /* Indicate end of cursor*/

      return; /* Return to previous process*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11320"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "OZ2130  "; /* Table view name*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-11320


// Save data in display storage
Function OZ0G-11330()
  /* SET KU5REC EMPTY;*/

  /* MOVE WOZ2130.WOZ2130-SOCD-CURR-CU-CO-ID TO KU5REC.KUCCOID;*/
  /* MOVE WOZ2130.WOZ2130-SOCD-CURR-STOR-ID TO KU5REC.KUMSTRID;*/
  /* MOVE WOZ2130.WOZ2130-SOCD-CURR-XNX-DEPT TO KU5REC.XNXCD;*/
  /* MOVE WOZ2130.WOZ2130-IO-GPC TO KU5REC.XGPCD;*/

  /* PERFORM OZ0G-11336;*/

  set OP1REC empty;

  OP1REC.OP1PARTN = WOZ2130.WOZ2130-OP-ORD-PART-CHAR;
  OP1REC.OP1CUOID = WOZ2130.WOZ2130-OP-CUST-ORD-ID;
  OP1REC.OP1NORID = WOZ2130.WOZ2130-OP-NIKE-ORD-ID;

  OZ0G-11337(); /* read dorder hdr for sales rep*/

  if ((OZ0GM001.OZ0GM-SM-SREP-ID > 0 && 
  OZ0GM001.OZ0GM-SM-SREP-ID != OZ0GW00.OZ0GW-SEL-SALES-REP)
   || 
  (OZ0GM001.OZ0GM-SM-SAGCY-ID > " " && 
  OZ0GM001.OZ0GM-SM-SAGCY-ID != OZ0GW00.OZ0GW-SEL-SALES-AGENCY))
   /* CONTINUE*/

  else

  /* MOVE ku5REC.SM4REPID TO OZ0GW01.OZ0GW-REP-ID(OZ0GW-IXM);*/
    OZ0GW01.OZ0GW-REP-ID[OZ0GW-IXM] = OP1REC.SM4REPID;

    OZ0GW01.OZ0GW-CUST[OZ0GW-IXM] = WOZ2130.WOZ2130-SOCD-CURR-CU-CO-ID;
    OZ0GW01.OZ0GW-STR[OZ0GW-IXM] = WOZ2130.WOZ2130-SOCD-CURR-STOR-ID;
    OZ0GW01.OZ0GW-DPT[OZ0GW-IXM] = WOZ2130.WOZ2130-SOCD-CURR-XNX-DEPT;
    OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM] = WOZ2130.WOZ2130-OP-ORD-PART-CHAR;
    OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM] = WOZ2130.WOZ2130-OP-CUST-ORD-ID;
    OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM] = WOZ2130.WOZ2130-OP-NIKE-ORD-ID;
    OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM] = WOZ2130.WOZ2130-SOCD-APPL-SRC-CD;
    OZ0GW01.OZ0GW-OP-LINE-ITEM-NBR[OZ0GW-IXM] = WOZ2130.WOZ2130-OP-LINE-ITEM-NBR;
    OZ0GW01.OZ0GW-OP-SZ-GRP-SEQ[OZ0GW-IXM] = WOZ2130.WOZ2130-OP-SZ-GRP-SEQ;
    OZ0GW01.OZ0GW-TYPE[OZ0GW-IXM] = WOZ2130.WOZ2130-SOCD-LTR-XCEP-CD;
    OZ0GW01.OZ0GW-SOCD-DIST-SEQ-NBR[OZ0GW-IXM] = WOZ2130.WOZ2130-SOCD-DIST-SEQ-NBR;
    OZ0GW01.OZ0GW-SOCD-LTR-SEQ-NBR[OZ0GW-IXM] = WOZ2130.WOZ2130-SOCD-LTR-SEQ-NBR;
    OZ0GW01.OZ0GW-SOCD-LTR-OVRD-ID[OZ0GW-IXM] = WOZ2130.WOZ2130-SOCD-LTR-OVRD-ID;
    OZ0GW01.OZ0GW-TBL-SRC[OZ0GW-IXM] = WOZ2130.WOZ2130-TBL-SRC;

    OZ0GW01.OZ0GW-SOCD-LTR-TYP-CD[OZ0GW-IXM] = WOZ2130.WOZ2130-SOCD-LTR-TYPE-CD;

    if (WOZ2130.WOZ2130-SOCD-LTR-TYPE-CD == "SO")
      OZ0GW00.OZ0GW-SV-CUST-ORD = WOZ2130.WOZ2130-OP-CUST-ORD-ID;
      OZ0GW01.OZ0GW-PO-SO[OZ0GW-IXM] = OZ0GW00.OZ0GW-SV-CUST-ORD;
    else
      OZ0GW01.OZ0GW-PO-SO[OZ0GW-IXM] = WOZ2130.WOZ2130-SOCD-CURR-CUST-PO;
    end

    OZ0G-11332(); /* read voclec01 for except cd desc*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OZ0GW01.OZ0GW-TYPE-DESC[OZ0GW-IXM] = VOCLEC01.SOCD-LTR-XCEP-DESC;
    else
      if (SQLCA.VAGen_SQLCODE == +100)
        OZ0G-11334(); /* try vocoec01 for except cd desc*/
        if (SQLCA.VAGen_SQLCODE == 0)
          OZ0GW01.OZ0GW-TYPE-DESC[OZ0GW-IXM] = VOCOEC01.SOCD-ORD-XCEP-DESC;
        else
          if (SQLCA.VAGen_SQLCODE == +100)
            OZ0GW01.OZ0GW-TYPE-DESC[OZ0GW-IXM] = "NO DESC";
          end
        end
      end
    end

    OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1; /* up w01 index*/

  end

end // end OZ0G-11330


// read voclec01
Function OZ0G-11332()
  set VOCLEC01 empty;
  VOCLEC01.SOCD-LTR-XCEP-CD = OZ0GW01.OZ0GW-TYPE[OZ0GW-IXM];

  try
    call "VOCLEC01" ("S ", SQLCA, VOCLEC01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11332"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLEC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLEC01.VOCLEC01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-11332


// read vocoec01
Function OZ0G-11334()
  set VOCOEC01 empty;
  VOCOEC01.SOCD-ORD-XCEP-CD = OZ0GW01.OZ0GW-TYPE[OZ0GW-IXM];

  try
    call "VOCOEC01" ("S ", SQLCA, VOCOEC01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11334"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCOEC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCOEC01.VOCOEC01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-11334


// Save data in display storage
Function OZ0G-11337()

  call "IO0430" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes}; /* get best choice rep*/

  if (SQLCA.VAGen_SQLCODE == 0)
    OZ0GW00.OZ0GW-SEL-SALES-REP = OP1REC.SM4REPID;
    OZ0GW00.OZ0GW-SEL-SALES-AGENCY = OP1REC.SM1AGYID;
  else
    OZ0GW00.OZ0GW-SEL-SALES-REP = 0;
    OZ0GW00.OZ0GW-SEL-SALES-AGENCY = "    ";
    return;
  end

end // end OZ0G-11337


// Add page to temporary storage
Function OZ0G-11340()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OZ0GW01.XXXTSLEN = OZ0GW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ0G"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OZ0GW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OZ0GW01 empty; /* M001 display storage*/

    OZ0GW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "11340"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-11340


// Close selected set cursor
Function OZ0G-11350()
  /* ------------------------------------------------------------*/
  /* Close the selected set of table rows.*/
  /* ------------------------------------------------------------*/
  WOZ2130.WOZ2130-IO-TASK = "C1";

  try
    call "OZ2130" (WOZ2130, SQLCA) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11350"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCHDR01"; /* Table view name*/

  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-11350


// Format and converse the map
Function OZ0G-12000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0GW00.OZ0GW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OZ0GW00.OZ0GW-SWF == "Y") /* Map must be formatted*/
  /* Save header info in working storage*/
      OZ0GW00.OZ0GW-CURR-CU-CO-ID = OZ0GM001.OZ0GM-CURR-CU-CO-ID;
      OZ0GW00.OZ0GW-CURR-STOR-ID = OZ0GM001.OZ0GM-CURR-STOR-ID;
      OZ0GW00.OZ0GW-CURR-XNX-DEPT = OZ0GM001.OZ0GM-CURR-XNX-DEPT;
      OZ0GW00.OZ0GW-CU-CO-NM-HDR = OZ0GM001.OZ0GM-CU-CO-NM-HDR;
      OZ0GW00.OZ0GW-CURR-GPC-CD = OZ0GM001.OZ0GM-CURR-GPC-CD;
      OZ0GW00.OZ0GW-GPC-DESC = OZ0GM001.OZ0GM-GPC-DESC;
      OZ0GW00.OZ0GW-ELAPSED-DAYS = OZ0GM001.OZ0GM-ELAPSED-DAYS;
      OZ0GW00.OZ0GW-SLS-OFF = OZ0GM001.OZ0GM-SLS-OFF;
      OZ0GW00.OZ0GW-SLS-OFF-DESC = OZ0GM001.OZ0GM-SLS-OFF-DESC;
      OZ0GW00.OZ0GW-SM-SAGCY-ID = OZ0GM001.OZ0GM-SM-SAGCY-ID;
      OZ0GW00.OZ0GW-SM-SAGCY-ID-DESC = OZ0GM001.OZ0GM-SM-SAGCY-ID-DESC;
      OZ0GW00.OZ0GW-SM-SREP-ID = OZ0GM001.OZ0GM-SM-SREP-ID;
      OZ0GW00.OZ0GW-SM-SREP-FIRST-NM = OZ0GM001.OZ0GM-SM-SREP-FIRST-NM;
      OZ0GW00.OZ0GW-SM-SREP-LAST-NM = OZ0GM001.OZ0GM-SM-SREP-LAST-NM;

      OZ0G-12100(); /* Format the data on the map*/
    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZ0GM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OZ0GM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0GM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* Set attributes for add and change depending on authority*/
  /* ------------------------------------------------------------*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OZWREC.XXXMSGNO != 0) /* Message to display*/

      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0GM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OZ0GM001.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/

    set OZ0GM001 alarm; /* Indicate sound alarm*/

  end

  converse OZ0GM001 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  OZ0GW00.OZ0GW-SFN = " "; /* reset function switch*/
   /* reset saved page*/
  OZ0GW00.OZ0GW-SAVE-PAGE = 0;
  COMMAREA.CATOAP = OZ0GM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0GM001.CAITEM; /* Application data*/
end // end OZ0G-12000


// Format the display data
Function OZ0G-12100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set OZ0GM001 initial; /* M001 input/output area*/
  converseLib.clearScreen();
   /* M001 input/output area*/

  OZ0GW00.OZ0GW-SWF = "N"; /* Format the map switch*/

  /* ------------------------------------------------------------*/
  /* If a ruling was added, get the page from temp storage that the*/
  /* ruling's on and display it.*/
  /* ------------------------------------------------------------*/

  if (OZ0GW00.OZ0GW-SAVE-PAGE != 0) /* if page saved off*/

    OZ0GW00.XXXTSPAG = OZ0GW-SAVE-PAGE; /* use saved page*/

    OZ0G-12110(); /* Obtain temporary storage page*/

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set OZ0GM001.XXXLITPG skip; /* "PAGE" literal*/
    OZ0GM001.XXXTSPAG = OZ0GW00.XXXTSPAG; /* Current page*/
    set OZ0GM001.XXXLITOF skip; /* "OF" literal*/
    OZ0GM001.TA5TSQIX = OZ0GW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
    OZ0GW00.OZ0GW-IXM = 1; /* Initialize map index*/
    while (OZ0GW00.OZ0GW-IXM < 13 /* Until screen is full or*/
     && OZ0GW01.OZ0GW-CUST[OZ0GW-IXM] > 0)

      set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] normal;

      /* build the cust-str-dpt string*/

      OZ0GW00.OZ0GW-SV-CUST = OZ0GW01.OZ0GW-CUST[OZ0GW-IXM];

      OZ0GW00.OZ0GW-IX1 = 1;
      while (OZ0GW00.OZ0GW-SV-CUST-CHAR[OZ0GW-IX1] == "0"
       && OZ0GW-IX1 < 8)
        OZ0GW00.OZ0GW-SV-CUST-CHAR[OZ0GW-IX1] = " ";
        OZ0GW-IX1 = OZ0GW-IX1 + 1;
      end

      OZ0GW00.OZ0GW-SV-STR = OZ0GW01.OZ0GW-STR[OZ0GW-IXM];
      OZ0GW00.OZ0GW-SV-DPT = OZ0GW01.OZ0GW-DPT[OZ0GW-IXM];
      OZ0GW00.OZ0GW-DOT1 = ".";
      OZ0GW00.OZ0GW-DOT2 = ".";
      OZ0GM001.OZ0GM-CUST-STR-DPT[OZ0GW-IXM] = OZ0GW00.OZ0GW-CUST-STR-DPT;

  /* --------------------------------------------------------------*/
  /* remove leading zeros from the po/so fld*/
  /* --------------------------------------------------------------*/
      if (OZ0GW01.OZ0GW-SOCD-LTR-TYP-CD[OZ0GW-IXM] == "SO")
        OZ0GW00.OZ0GW-PO-SO-BLD = OZ0GW01.OZ0GW-PO-SO[OZ0GW-IXM];

        OZ0GW00.OZ0GW-IX1 = 1;
        while (OZ0GW00.OZ0GW-PO-SO-CHAR[OZ0GW-IX1] == "0"
         && OZ0GW-IX1 < 26)
          OZ0GW00.OZ0GW-PO-SO-CHAR[OZ0GW-IX1] = " ";
          OZ0GW-IX1 = OZ0GW-IX1 + 1;
        end

        OZ0GM001.OZ0GM-PO-SO[OZ0GW-IXM] = OZ0GW00.OZ0GW-PO-SO-BLD;
      else
        OZ0GM001.OZ0GM-PO-SO[OZ0GW-IXM] = OZ0GW01.OZ0GW-PO-SO[OZ0GW-IXM];
      end

      OZ0GM001.OZ0GM-SOCD-LTR-TYP-CD[OZ0GW-IXM] = OZ0GW01.OZ0GW-SOCD-LTR-TYP-CD[OZ0GW-IXM];
      OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] = OZ0GW01.OZ0GW-TYPE[OZ0GW-IXM];
      OZ0GM001.OZ0GM-EX-DESC[OZ0GW-IXM] = OZ0GW01.OZ0GW-TYPE-DESC[OZ0GW-IXM];
      OZ0GM001.OZ0GM-REP-ID[OZ0GW-IXM] = OZ0GW01.OZ0GW-REP-ID[OZ0GW-IXM];

      OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1;
                                   /* Increment map index*/

    end

    set OZ0GM001.OZ0GMSEL[1] cursor;
  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/

  else
    if (OZ0GW00.TA5TSQIX > 0) /* Pages were formatted*/

      if (OZ0GW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/

        if (OZ0GW00.OZ0GW-SWU == "Y") /* Current page was changed*/

          OZ0G-12120(); /* Update temporary storage page*/

          OZ0GW00.OZ0GW-SWU = "N"; /* Storage update switch*/

        end

        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/

        if (OZ0GW00.XXXTSPAG > OZ0GW00.TA5TSQIX) /* Desired greater highest*/
          OZ0GW00.XXXTSPAG = OZ0GW00.TA5TSQIX; /* Default to highest*/
        end

        OZ0G-12110(); /* Obtain temporary storage page*/

      end

      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/

      set OZ0GM001.XXXLITPG skip; /* "PAGE" literal*/
      OZ0GM001.XXXTSPAG = OZ0GW00.XXXTSPAG; /* Current page*/
      set OZ0GM001.XXXLITOF skip; /* "OF" literal*/
      OZ0GM001.TA5TSQIX = OZ0GW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
      OZ0GW00.OZ0GW-IXM = 1; /* Initialize map index*/
      while (OZ0GW00.OZ0GW-IXM < 13 /* Until screen is full or*/
       && OZ0GW01.OZ0GW-CUST[OZ0GW-IXM] > 0)

        set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] normal;

        /* build the cust-str-dpt string*/
        OZ0GW00.OZ0GW-SV-CUST = OZ0GW01.OZ0GW-CUST[OZ0GW-IXM];

        OZ0GW00.OZ0GW-IX1 = 1;
        while (OZ0GW00.OZ0GW-SV-CUST-CHAR[OZ0GW-IX1] == "0"
         && OZ0GW-IX1 < 8)
          OZ0GW00.OZ0GW-SV-CUST-CHAR[OZ0GW-IX1] = " ";
          OZ0GW-IX1 = OZ0GW-IX1 + 1;
        end

        OZ0GW00.OZ0GW-SV-STR = OZ0GW01.OZ0GW-STR[OZ0GW-IXM];
        OZ0GW00.OZ0GW-SV-DPT = OZ0GW01.OZ0GW-DPT[OZ0GW-IXM];
        OZ0GW00.OZ0GW-DOT1 = ".";
        OZ0GW00.OZ0GW-DOT2 = ".";
        OZ0GM001.OZ0GM-CUST-STR-DPT[OZ0GW-IXM] = OZ0GW00.OZ0GW-CUST-STR-DPT;

  /* --------------------------------------------------------------*/
  /* remove leading zeros from the po/so fld*/
  /* --------------------------------------------------------------*/
        if (OZ0GW01.OZ0GW-SOCD-LTR-TYP-CD[OZ0GW-IXM] == "SO")
          OZ0GW00.OZ0GW-PO-SO-BLD = OZ0GW01.OZ0GW-PO-SO[OZ0GW-IXM];

          OZ0GW00.OZ0GW-IX1 = 1;
          while (OZ0GW00.OZ0GW-PO-SO-CHAR[OZ0GW-IX1] == "0"
           && OZ0GW-IX1 < 26)
            OZ0GW00.OZ0GW-PO-SO-CHAR[OZ0GW-IX1] = " ";
            OZ0GW-IX1 = OZ0GW-IX1 + 1;
          end

          OZ0GM001.OZ0GM-PO-SO[OZ0GW-IXM] = OZ0GW00.OZ0GW-PO-SO-BLD;
        else
          OZ0GM001.OZ0GM-PO-SO[OZ0GW-IXM] = OZ0GW01.OZ0GW-PO-SO[OZ0GW-IXM];
        end

        OZ0GM001.OZ0GM-SOCD-LTR-TYP-CD[OZ0GW-IXM] = OZ0GW01.OZ0GW-SOCD-LTR-TYP-CD[OZ0GW-IXM];
        OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] = OZ0GW01.OZ0GW-TYPE[OZ0GW-IXM];
        OZ0GM001.OZ0GM-EX-DESC[OZ0GW-IXM] = OZ0GW01.OZ0GW-TYPE-DESC[OZ0GW-IXM];
        OZ0GM001.OZ0GM-REP-ID[OZ0GW-IXM] = OZ0GW01.OZ0GW-REP-ID[OZ0GW-IXM];

        OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1;
                                   /* Increment map index*/

      end

      set OZ0GM001.OZ0GMSEL[1] cursor;

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/
  OZ0GM001.OZ0GM-CURR-CU-CO-ID = OZ0GW00.OZ0GW-CURR-CU-CO-ID;
  OZ0GM001.OZ0GM-CURR-STOR-ID = OZ0GW00.OZ0GW-CURR-STOR-ID;
  OZ0GM001.OZ0GM-CURR-XNX-DEPT = OZ0GW00.OZ0GW-CURR-XNX-DEPT;
  if (OZ0GW00.OZ0GW-CURR-CU-CO-ID > 0000000)
    OZ0GM001.OZ0GM-CU-CO-NM-HDR = OZ0GW00.OZ0GW-CU-CO-NM-HDR;
  else
    OZ0GM001.OZ0GM-CU-CO-NM-HDR = "  ";
  end

  OZ0GM001.OZ0GM-CURR-GPC-CD = OZ0GW00.OZ0GW-CURR-GPC-CD;
  OZ0GM001.OZ0GM-GPC-DESC = OZ0GW00.OZ0GW-GPC-DESC;
  OZ0GM001.OZ0GM-SLS-OFF = OZ0GW00.OZ0GW-SLS-OFF;
  if (OZ0GM001.OZ0GM-SLS-OFF == "00")
    OZ0GM001.OZ0GM-SLS-OFF = "  ";
  end
  OZ0GM001.OZ0GM-SLS-OFF-DESC = OZ0GW00.OZ0GW-SLS-OFF-DESC;
  OZ0GM001.OZ0GM-SM-SAGCY-ID = OZ0GW00.OZ0GW-SM-SAGCY-ID;
  OZ0GM001.OZ0GM-SM-SAGCY-ID-DESC = OZ0GW00.OZ0GW-SM-SAGCY-ID-DESC;
  OZ0GM001.OZ0GM-SM-SREP-ID = OZ0GW00.OZ0GW-SM-SREP-ID;
  OZ0GM001.OZ0GM-SM-SREP-FIRST-NM = OZ0GW00.OZ0GW-SM-SREP-FIRST-NM;
  OZ0GM001.OZ0GM-SM-SREP-LAST-NM = OZ0GW00.OZ0GW-SM-SREP-LAST-NM;

  /*  */
  OZ0GW00.OZ0GW-IXM = 1; /* Initialize line index*/

  while (OZ0GW00.OZ0GW-IXM < 13) /* * Until end of lines*/

    if (OZ0GM001.OZ0GM-CUST-STR-DPT[OZ0GW-IXM] > " ")
      set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] defaultColor, underline;
  /* SET OZ0GM001.OZ0GMSEL(OZ0GW-IXM) AUTOSKIP,NOHILITE;*/
    end

    OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1; /* Increment line index*/

  end
  /*  */
end // end OZ0G-12100


// Read temporary storage page
Function OZ0G-12110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OZ0GW01.XXXTSLEN = 1200; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ0G"; /* Application identification*/
  TA5REC.TA5TSQIX = OZ0GW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OZ0GW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "12100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-12110


// Update temporary storage page
Function OZ0G-12120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (OZ0GW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "12120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-12120


// Check attention identifier
Function OZ0G-13000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0GW00.OZ0GW-SWR == "Y") /* Request for data*/
      set OZ0GW01 empty; /* M001 display storage*/
    end

    OZ0GW00.OZ0GW-SWF = "Y"; /* Format the map switch*/
    OZ0GW00.OZ0GW-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/

  if (OZ0GM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0G")
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
        OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0G";
      end

      OZ0G-11100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0GM001.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   
   && converseVar.eventKey not pf3   
   && converseVar.eventKey not pf4   
   && converseVar.eventKey not pf7   
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf14  /* and PF14 was not pressed*/
   && converseVar.eventKey not pf18  /* and PF18 was not pressed*/
   && converseVar.eventKey not pf24) /* and PF24 was not pressed*/

    OZWREC.XXXPRCNM = "13000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  else

    if (OZWREC.OZW-APPL[OZW-APPIDX] != "OZ0G")
      OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX + 1;
      OZWREC.OZW-APPL[OZW-APPIDX] = "OZ0G";
    end

  end
   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      if (OZWREC.OZW-APPIDX > 1)
        OZWREC.OZW-APPIDX = OZWREC.OZW-APPIDX - 1;

        if (OZWREC.OZW-APPL[OZW-APPIDX] > "    ")
          COMMAREA.CATOAP = OZWREC.OZW-APPL[OZW-APPIDX];
        else
          COMMAREA.CATOAP = "OZ0A";
        end

      else
        COMMAREA.CATOAP = COMMAREA.CAFROMAP;
      end


    end

    OZ0G-11100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* pf14 action*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf14) /* pf14 pressed*/

    if (OZ0GM001.OZ0GM-CURR-CU-CO-ID == 0
     && OZ0GM001.OZ0GM-SLS-OFF == 0)
      OZWREC.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(28); /* need cust and sales office*/
      set OZ0GM001.OZ0GM-CURR-CU-CO-ID cursor, bold;
      set OZ0GM001.OZ0GM-SLS-OFF bold;
      exit stack; /* Exit to display map*/
    end

    if ("S" in OZ0GM001.OZ0GMSEL) /* line was selected*/
      OZ0GW-IXM = sysVar.arrayIndex;
      if (OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "01" || 
      OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "03")
        OZ0G-13200(); /* build ozwrec to pass*/
        OZ0G-11100(); /* Purge temporary storage*/
        COMMAREA.CATOAP = "OZ0I"; /* TO application*/
        XSOZ-S0001(); /* Exit to another application*/
        exit stack; /* Exit to display map*/
      else /* no line selected*/
        set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] cursor, bold;
        OZWREC.XXXPRCNM = "13000"; /* Module identification*/
        converseLib.validationFailed(44);
        exit stack; /* Exit to display map*/
      end
    else /* no line selected*/

      if (OZ0GM001 not modified)
        OZWREC.XXXPRCNM = "13000"; /* Module identification*/
        converseLib.validationFailed(44);
        exit stack; /* Exit to display map*/
      else

        OZ0GW00.OZ0GW-IX2 = 1;
        while (OZ0GW00.OZ0GW-IX2 < 13)
          if (OZ0GM001.OZ0GMSEL[OZ0GW-IX2] != " ")
            OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IX2;
            OZ0GW00.OZ0GW-IX2 = 13;
          end
          OZ0GW00.OZ0GW-IX2 = OZ0GW00.OZ0GW-IX2 + 1;
        end

        set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] cursor, bold;
        OZWREC.XXXPRCNM = "13000"; /* Module identification*/
        converseLib.validationFailed(44);
        exit stack; /* Exit to display map*/
      end
    end

  end

  /* ------------------------------------------------------------*/
  /* pf18 action*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf18) /* pf18 pressed*/

    if ("S" in OZ0GM001.OZ0GMSEL) /* line was selected*/
      OZ0GW-IXM = sysVar.arrayIndex;
      OZ0G-13200(); /* build ozwrec to pass*/
      OZ0G-11100(); /* Purge temporary storage*/
      COMMAREA.CATOAP = "OZ0F"; /* TO application*/
      XSOZ-S0001(); /* Exit to another application*/
      exit stack; /* Exit to display map*/
    else /* no line selected*/

      if (OZ0GM001 not modified)
        OZWREC.XXXPRCNM = "13000"; /* Module identification*/
        converseLib.validationFailed(44);
        exit stack; /* Exit to display map*/
      else

        OZ0GW00.OZ0GW-IX2 = 1;
        while (OZ0GW00.OZ0GW-IX2 < 13)
          if (OZ0GM001.OZ0GMSEL[OZ0GW-IX2] != " ")
            OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IX2;
            OZ0GW00.OZ0GW-IX2 = 13;
          end
          OZ0GW00.OZ0GW-IX2 = OZ0GW00.OZ0GW-IX2 + 1;
        end

        set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] cursor, bold;
        OZWREC.XXXPRCNM = "13000"; /* Module identification*/
        converseLib.validationFailed(44); /* pf14 pressed but nothing*/
        exit stack; /* Exit to display map*/
      end
    end

  end

  /* ------------------------------------------------------------*/
  /* pf24 action*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf24) /* pf24 pressed*/

    if ("S" in OZ0GM001.OZ0GMSEL) /* line was selected*/
      OZ0G-13300(); /* reset table status to 'xl'*/
      OZ0GW00.OZ0GW-SWF = "Y";
      OZ0GW00.OZ0GW-SWR = "Y";
      exit stack; /* Exit to display map*/
    else /* no line selected*/

      if (OZ0GM001 not modified)
        OZWREC.XXXPRCNM = "13000"; /* Module identification*/
        converseLib.validationFailed(44);
        exit stack; /* Exit to display map*/
      else

        OZ0GW00.OZ0GW-IX2 = 1;
        while (OZ0GW00.OZ0GW-IX2 < 13)
          if (OZ0GM001.OZ0GMSEL[OZ0GW-IX2] != " ")
            OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IX2;
            OZ0GW00.OZ0GW-IX2 = 13;
          end
          OZ0GW00.OZ0GW-IX2 = OZ0GW00.OZ0GW-IX2 + 1;
        end

        set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] cursor, bold;
        OZWREC.XXXPRCNM = "13000"; /* Module identification*/
        converseLib.validationFailed(44);
        exit stack; /* Exit to display map*/
      end
    end

  end

  /* ------------------------------------------------------------*/
  /* enter action*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter)

    if ("R" in OZ0GM001.OZ0GMSEL)

      OZ0GW-IXM = sysVar.arrayIndex;
      OZ0GW00.OZ0GW-SWR = "Y";
      OZ0GW00.OZ0GW-SWF = "Y";

      if (OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "01" || 
      OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "03")
        OZ0G-13200();
        COMMAREA.CATOAP = "OZ0E";
        XSOZ-S0001();
        exit stack;
      end

      if (OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "04")
        OZ0G-13100();
        if (OZ0GW00.OZ0GW-SWC == "Y")
          set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] cursor, bold;
          OZWREC.XXXPRCNM = "13000";
          converseLib.validationFailed(55); /* no header info found*/
          OZ0GW00.OZ0GW-SWR = "N";
          OZ0GW00.OZ0GW-SWF = "N";
          exit stack;
        else
          OZ0G-20000();
          exit stack;
        end
      end

      if (OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "06")
        OZ0G-13400();
        if (OZ0GW00.OZ0GW-SWC == "Y")
          set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] cursor, bold;
          OZWREC.XXXPRCNM = "13000";
          converseLib.validationFailed(54); /* no item info found*/
          OZ0GW00.OZ0GW-SWR = "N";
          OZ0GW00.OZ0GW-SWF = "N";
          exit stack;
        else
          OZ0G-30000();
          exit stack;
        end
      end

      if (OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "05")
        OZ0G-13200();
        COMMAREA.CATOAP = "OZ0I";
        XSOZ-S0001();
        exit stack;
      end

      if (OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "02" || 
      OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "07")
        set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] cursor, bold;
        OZWREC.XXXPRCNM = "13000";
        converseLib.validationFailed(40); /* no transfer for these*/
        OZ0GW00.OZ0GW-SWR = "N";
        OZ0GW00.OZ0GW-SWF = "N";
        exit stack;
      end

      if (OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "08" || 
      OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "09")
        OZ0G-13300(); /* reset table status to 'RE'*/
        OZ0GW00.OZ0GW-SWF = "Y";
        OZ0GW00.OZ0GW-SWR = "Y";
        OZ0GW00.OZ0GW-UPD-FLG = "Y";
  /* MOVE 45 TO EZEMNO;*/
        exit stack; /* Exit to display map*/
      end

    else /* no line selected*/

      if ("S" in OZ0GM001.OZ0GMSEL)
        OZ0GW-IXM = sysVar.arrayIndex;

        if (OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "02" || 
        OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "07" || 
        OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "08" || 
        OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] == "09")
          set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] cursor, bold;
          OZWREC.XXXPRCNM = "13000";
          converseLib.validationFailed(41); /* no transfer for these*/
          OZ0GW00.OZ0GW-SWR = "N";
          OZ0GW00.OZ0GW-SWF = "N";
          exit stack;
        else

          OZ0GW00.OZ0GW-IX2 = 1;
          while (OZ0GW00.OZ0GW-IX2 < 13)
            if (OZ0GM001.OZ0GMSEL[OZ0GW-IX2] != " ")
              OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IX2;
              OZ0GW00.OZ0GW-IX2 = 13;
            end
            OZ0GW00.OZ0GW-IX2 = OZ0GW00.OZ0GW-IX2 + 1;
          end

          set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] cursor, bold;
          OZWREC.XXXPRCNM = "13000"; /* Module identification*/
          converseLib.validationFailed(53);
          OZ0GW00.OZ0GW-SWR = "N";
          OZ0GW00.OZ0GW-SWF = "N";
          exit stack; /* Exit to display map*/
        end

      else
                                   /* no line was selected*/
        OZ0GW00.OZ0GW-SWR = "Y";
        OZ0GW00.OZ0GW-SWF = "Y";
        OZ0GW00.XXXTSPAG = 1; /* reset page number*/

      end
    end

  end
end // end OZ0G-13000


// Check attention identifier
Function OZ0G-13100()
  /* --------------------------------------------------------------------*/
  /* This section uses the appl src code to determine which select to*/
  /* use in the iomod oz2080.  If the appl src code is 'op' then 's ' is*/
  /* used, however if it is 'ob' then 'sa' is used to access the airspeed*/
  /* hdr table.   the airspeed record WILL BE contained in the op1rec.*/
  /* the oP1rec will be used throughout the program.  oB1rec is NOT used.*/
  /* this is to minimize code in the program..  always check the appl*/
  /* src code to know what kind of order you are dealing with.*/
  /* --------------------------------------------------------------------*/

  OZ0GW00.OZ0GW-SV-IXM = OZ0GW00.OZ0GW-IXM;
  OZ0GW00.OZ0GW-SWC = " ";
  set VOCHDR01 empty;
  set OP1REC empty;
  set OZAREC empty;
  set SQLCA empty;

  VOCHDR01.SOCD-CURR-CU-CO-ID = OZ0GW01.OZ0GW-CUST[OZ0GW-IXM];
  VOCHDR01.SOCD-CURR-STOR-ID = OZ0GW01.OZ0GW-STR[OZ0GW-IXM];
  VOCHDR01.SOCD-CURR-XNX-DEPT = OZ0GW01.OZ0GW-DPT[OZ0GW-IXM];
  VOCHDR01.OP1PARTN = OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM];
  VOCHDR01.OP1CUOID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  VOCHDR01.OP1NORID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  VOCHDR01.SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];

  OP1REC.XSOCD = OZ0GM001.OZ0GM-SLS-OFF;
  VOCHDR01.SOCD-CURR-GPC-CD = OZ0GM001.OZ0GM-CURR-GPC-CD;

  if (OZ0GM001.OZ0GM-SOCD-LTR-TYP-CD[OZ0GW-IXM] == "PO")
    OZAREC.SOCD-CURR-CUST-PO-FROM = OZ0GM001.OZ0GM-PO-SO[OZ0GW-IXM];
  else
    OZAREC.SOCD-CURR-CUST-PO-FROM = "  ";
  end

  if (OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM] == "OP")
    OZAREC.IO-TASK = "S ";
  else
    OZAREC.IO-TASK = "SA";
  end

  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      OZ0GW00.OZ0GW-SWC = "Y"; /* Indicate end of cursor*/

      return; /* Return to previous process*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11320"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCHDR01.VOCHDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-13100


// Check attention identifier
Function OZ0G-13200()
  OZWREC.OZW-HDR-CUST = OZ0GM001.OZ0GM-CURR-CU-CO-ID;
  OZWREC.OZW-HDR-STR = OZ0GM001.OZ0GM-CURR-STOR-ID;
  OZWREC.OZW-HDR-DPT = OZ0GM001.OZ0GM-CURR-XNX-DEPT;

  OZWREC.CUST-STR-DPT = OZ0GM001.OZ0GM-CUST-STR-DPT[OZ0GW-IXM];
  OZWREC.OZW-SV-CUST-STR-DPT = OZ0GM001.OZ0GM-CUST-STR-DPT[OZ0GW-IXM];

  OZWREC.SOCD-LTR-TYP-CD = OZ0GM001.OZ0GM-SOCD-LTR-TYP-CD[OZ0GW-IXM];
  if (OZ0GM001.OZ0GM-SOCD-LTR-TYP-CD[OZ0GW-IXM] == "PO")
    OZWREC.SOCD-CURR-CUST-PO = OZ0GM001.OZ0GM-PO-SO[OZ0GW-IXM];
    OZWREC.OZW-SV-OP1CUOID = 0;
  else
    OZWREC.OZW-SV-OP1CUOID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
    OZWREC.SOCD-CURR-CUST-PO = " ";
  end

  OZWREC.XGPCD = OZ0GM001.OZ0GM-CURR-GPC-CD;
  OZWREC.XGPDESC = OZ0GM001.OZ0GM-GPC-DESC;
  OZWREC.OP1PARTN = OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM];
  OZWREC.OP1CUOID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  OZWREC.OP1NORID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  OZWREC.XSOCD = OZ0GM001.OZ0GM-SLS-OFF;
  OZWREC.XSOSNM = OZ0GM001.OZ0GM-SLS-OFF-DESC;
  OZWREC.SM1AGYID = OZ0GM001.OZ0GM-SM-SAGCY-ID;
  /* MOVE OZ0GM001.OZ0GM-SM-SREP-ID TO OZWREC.SM4REPID;*/
  OZWREC.XXXFSTNM = OZ0GM001.OZ0GM-SM-SREP-FIRST-NM;
  OZWREC.XXXLSTNM = OZ0GM001.OZ0GM-SM-SREP-LAST-NM;
  OZWREC.EXCEPT-CD = OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM];
  OZWREC.TBL-SRC = OZ0GW01.OZ0GW-TBL-SRC[OZ0GW-IXM];
  OZWREC.SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];
  OZWREC.SOCD-LTR-OVRD-ID = OZ0GW01.OZ0GW-SOCD-LTR-OVRD-ID[OZ0GW-IXM];
  OZWREC.SOCD-LTR-SEQ-NBR = OZ0GW01.OZ0GW-SOCD-LTR-SEQ-NBR[OZ0GW-IXM];
  OZWREC.SOCD-DIST-SEQ-NBR = OZ0GW01.OZ0GW-SOCD-DIST-SEQ-NBR[OZ0GW-IXM];
end // end OZ0G-13200


// Check attention identifier
Function OZ0G-13300()
  set WOZ2130 empty;
  set SQLCA empty;

  OZ0GW-IXM = sysVar.arrayIndex;
  WOZ2130.WOZ2130-SOCD-CURR-CU-CO-ID = OZ0GW01.OZ0GW-CUST[OZ0GW-IXM];
  WOZ2130.WOZ2130-SOCD-CURR-STOR-ID = OZ0GW01.OZ0GW-STR[OZ0GW-IXM];
  WOZ2130.WOZ2130-SOCD-CURR-XNX-DEPT = OZ0GW01.OZ0GW-DPT[OZ0GW-IXM];

  WOZ2130.WOZ2130-SOCD-LTR-TYPE-CD = OZ0GW01.OZ0GW-SOCD-LTR-TYP-CD[OZ0GW-IXM];

  WOZ2130.WOZ2130-OP-ORD-PART-CHAR = OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM];
  WOZ2130.WOZ2130-OP-CUST-ORD-ID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  WOZ2130.WOZ2130-OP-NIKE-ORD-ID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  WOZ2130.WOZ2130-SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];
  WOZ2130.WOZ2130-SOCD-DIST-SEQ-NBR = OZ0GW01.OZ0GW-SOCD-DIST-SEQ-NBR[OZ0GW-IXM];
  WOZ2130.WOZ2130-SOCD-LTR-OVRD-ID = OZ0GW01.OZ0GW-SOCD-LTR-OVRD-ID[OZ0GW-IXM];
  WOZ2130.WOZ2130-SOCD-LTR-SEQ-NBR = OZ0GW01.OZ0GW-SOCD-LTR-SEQ-NBR[OZ0GW-IXM];

  WOZ2130.WOZ2130-IO-GPC = OZ0GM001.OZ0GM-CURR-GPC-CD;
  WOZ2130.WOZ2130-IO-SALES-OFF = OZ0GM001.OZ0GM-SLS-OFF;

  if (converseVar.eventKey is enter)

    WOZ2130.WOZ2130-STAT-UPDATE = "AP";

    if (OZ0GW01.OZ0GW-TYPE[OZ0GW-IXM] == "08")
      OZ0G-21370(); /* del vochde01 except rec*/
    else
      if (OZ0GW01.OZ0GW-TBL-SRC[OZ0GW-IXM] == "LTR")
        OZ0G-13311(); /* del voclea01 except rec*/
      else
        OZ0G-13310(); /* del voclem01 except rec*/
      end
    end

  else

    WOZ2130.WOZ2130-STAT-UPDATE = "XL";

    if (OZ0GW01.OZ0GW-TBL-SRC[OZ0GW-IXM] == "LTR")
      OZ0G-13327(); /* del all voclea01 except rec*/
    else
      OZ0G-13325(); /* del all voclem01 except rec*/
    end
  end

  OZ0GW00.OZ0GW-MORE-FND = " ";

  if (WOZ2130.WOZ2130-STAT-UPDATE == "XL")
    OZ0GW00.OZ0GW-MORE-FND = "N";
  else
    if (OZ0GW01.OZ0GW-TBL-SRC[OZ0GW-IXM] == "LTR")
      OZ0G-13315(); /* count remaining lea's*/
      if (VOCLEA01.ZZZSTM >= 1)
        OZ0GW00.OZ0GW-MORE-FND = "Y";
      end
    else
      OZ0G-13320(); /* count remaining lem's*/
      if (VOCLEM01.ZZZSTM >= 1)
        OZ0GW00.OZ0GW-MORE-FND = "Y";
      end
      OZ0G-13323(); /* count remaining hde's*/
      if (VOCHDE01.ZZZSTM >= 1)
        OZ0GW00.OZ0GW-MORE-FND = "Y";
      end
    end
  end

  if (OZ0GW00.OZ0GW-MORE-FND == "Y")
    return;

  else

    if (OZ0GW01.OZ0GW-TBL-SRC[OZ0GW-IXM] == "LTR")
      WOZ2130.WOZ2130-IO-TASK = "U1";
    else
      WOZ2130.WOZ2130-IO-TASK = "U2";
    end

    try
      call "OZ2130" (WOZ2130, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

    if (sysVar.errorCode == "00000000") /* Call successful*/

      if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
        return; /* Return to previous process*/
      end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

      if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

        OZ0GW00.OZ0GW-SWC = "Y"; /* Indicate end of cursor*/

        return; /* Return to previous process*/

      end

    end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

    TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
    move SQLCA to ERRSQLCA withV60Compat;

    OZWREC.XXXPRCNM = "13300"; /* Module identification*/

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

      converseLib.validationFailed(11); /* Data in use by another*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(10); /* Unexpected error occurred*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before display*/

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
    TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
    TA1REC.TA1TBLVU = "OZ2130  "; /* Table view name*/

    call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    exit stack; /* Exit to display map*/

  end
end // end OZ0G-13300


// delete vochde01 record
Function OZ0G-13310()
  set VOCLEM01 empty;
  set SQLCA empty;

  VOCLEM01.SOCD-LTR-OVRD-ID = OZ0GW01.OZ0GW-SOCD-LTR-OVRD-ID[OZ0GW-IXM];
  VOCLEM01.OP1PARTN = OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM];
  VOCLEM01.OP1CUOID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  VOCLEM01.OP1NORID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  VOCLEM01.SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];
  VOCLEM01.SOCD-LTR-XCEP-CD = OZ0GW01.OZ0GW-TYPE[OZ0GW-IXM];

  try
    call "VOCLEM01" ("D ", SQLCA, VOCLEM01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      OZ0GW00.OZ0GW-SWC = "Y"; /* Indicate end of cursor*/

      return; /* Return to previous process*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21370"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLEM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLEM01.VOCLEM01-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-13310


// delete vochde01 record
Function OZ0G-13311()
  set VOCLEA01 empty;
  set SQLCA empty;

  VOCLEA01.SOCD-CURR-CU-CO-ID = OZ0GW01.OZ0GW-CUST[OZ0GW-IXM];
  VOCLEA01.SOCD-CURR-STOR-ID = OZ0GW01.OZ0GW-STR[OZ0GW-IXM];
  VOCLEA01.SOCD-CURR-XNX-DEPT = OZ0GW01.OZ0GW-DPT[OZ0GW-IXM];
  VOCLEA01.SOCD-CURR-GPC-CD = OZ0GM001.OZ0GM-CURR-GPC-CD;
  VOCLEA01.XSOCD = OZ0GM001.OZ0GM-SLS-OFF;
  VOCLEA01.SOCD-DIST-SEQ-NBR = OZ0GW01.OZ0GW-SOCD-DIST-SEQ-NBR[OZ0GW-IXM];
  VOCLEA01.SOCD-LTR-SEQ-NBR = OZ0GW01.OZ0GW-SOCD-LTR-SEQ-NBR[OZ0GW-IXM];
  VOCLEA01.SOCD-LTR-TYP-CD = OZ0GW01.OZ0GW-SOCD-LTR-TYP-CD[OZ0GW-IXM];

  VOCLEA01.OP1PARTN = OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM];
  VOCLEA01.OP1CUOID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  VOCLEA01.OP1NORID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  VOCLEA01.SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];
  VOCLEA01.SOCD-LTR-XCEP-CD = OZ0GW01.OZ0GW-TYPE[OZ0GW-IXM];

  try
    call "VOCLEA01" ("D ", SQLCA, VOCLEA01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

   /* IF SQLCA.SQLCODE EQ 100;       /* End of selected set*/

     /* MOVE 'Y' TO OZ0GW00.OZ0GW-SWC;/* Indicate end of cursor*/

     /* EZERTN;                      /* Return to previous process*/

   /* END;*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "13311"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLEA01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLEA01.VOCLEA01-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-13311


// upd  vocldo01 row
Function OZ0G-13315()
  set VOCLEA01 empty;

  VOCLEA01.SOCD-CURR-CU-CO-ID = OZ0GW01.OZ0GW-CUST[OZ0GW-IXM];
  VOCLEA01.SOCD-CURR-STOR-ID = OZ0GW01.OZ0GW-STR[OZ0GW-IXM];
  VOCLEA01.SOCD-CURR-XNX-DEPT = OZ0GW01.OZ0GW-DPT[OZ0GW-IXM];

  VOCLEA01.SOCD-LTR-TYP-CD = OZ0GW01.OZ0GW-SOCD-LTR-TYP-CD[OZ0GW-IXM];

  VOCLEA01.OP1PARTN = OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM];
  VOCLEA01.OP1CUOID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  VOCLEA01.OP1NORID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  VOCLEA01.SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];
  VOCLEA01.SOCD-DIST-SEQ-NBR = OZ0GW01.OZ0GW-SOCD-DIST-SEQ-NBR[OZ0GW-IXM];
  VOCLEA01.SOCD-LTR-SEQ-NBR = OZ0GW01.OZ0GW-SOCD-LTR-SEQ-NBR[OZ0GW-IXM];

  VOCLEA01.SOCD-CURR-GPC-CD = OZ0GM001.OZ0GM-CURR-GPC-CD;
  VOCLEA01.XSOCD = OZ0GM001.OZ0GM-SLS-OFF;


  try
    call "VOCLEA01" ("SC", SQLCA, VOCLEA01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "13315"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLEA01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLEA01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-13315


// upd  vocldo01 row
Function OZ0G-13320()
  set VOCLEM01 empty;

  VOCLEM01.SOCD-LTR-OVRD-ID = OZ0GW01.OZ0GW-SOCD-LTR-OVRD-ID[OZ0GW-IXM];
  VOCLEM01.OP1PARTN = OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM];
  VOCLEM01.OP1CUOID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  VOCLEM01.OP1NORID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  VOCLEM01.SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];

  try
    call "VOCLEM01" ("SC", SQLCA, VOCLEM01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "13320"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLEM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLEM01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-13320


// upd  vocldo01 row
Function OZ0G-13323()
  set VOCHDE01 empty;

  VOCHDE01.OP1CUOID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  VOCHDE01.OP1NORID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  VOCHDE01.SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];

  try
    call "VOCHDE01" ("SC", SQLCA, VOCHDE01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* no rec fnd*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "13323"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "COUNT TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCHDE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCHDE01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-13323


// delete vochde01 record
Function OZ0G-13325()
  set VOCLEM01 empty;
  set SQLCA empty;

  VOCLEM01.SOCD-LTR-OVRD-ID = OZ0GW01.OZ0GW-SOCD-LTR-OVRD-ID[OZ0GW-IXM];
  VOCLEM01.OP1PARTN = OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM];
  VOCLEM01.OP1CUOID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  VOCLEM01.OP1NORID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  VOCLEM01.SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];

  try
    call "VOCLEM01" ("DA", SQLCA, VOCLEM01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      OZ0GW00.OZ0GW-SWC = "Y"; /* Indicate end of cursor*/

      return; /* Return to previous process*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21370"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLEM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLEM01.VOCLEM01-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-13325


// del  voclea01/vochde01 row
Function OZ0G-13327()
  set VOCLEA01 empty;

  VOCLEA01.SOCD-CURR-CU-CO-ID = OZ0GW01.OZ0GW-CUST[OZ0GW-IXM];
  VOCLEA01.SOCD-CURR-STOR-ID = OZ0GW01.OZ0GW-STR[OZ0GW-IXM];
  VOCLEA01.SOCD-CURR-XNX-DEPT = OZ0GW01.OZ0GW-DPT[OZ0GW-IXM];

  VOCLEA01.SOCD-LTR-TYP-CD = OZ0GW01.OZ0GW-SOCD-LTR-TYP-CD[OZ0GW-IXM];

  VOCLEA01.OP1PARTN = OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM];
  VOCLEA01.OP1CUOID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  VOCLEA01.OP1NORID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  VOCLEA01.SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];
  VOCLEA01.SOCD-DIST-SEQ-NBR = OZ0GW01.OZ0GW-SOCD-DIST-SEQ-NBR[OZ0GW-IXM];
  VOCLEA01.SOCD-LTR-SEQ-NBR = OZ0GW01.OZ0GW-SOCD-LTR-SEQ-NBR[OZ0GW-IXM];

  VOCLEA01.SOCD-CURR-GPC-CD = OZ0GM001.OZ0GM-CURR-GPC-CD;
  VOCLEA01.XSOCD = OZ0GM001.OZ0GM-SLS-OFF;


  try
    call "VOCLEA01" ("DA", SQLCA, VOCLEA01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/
      OZ0G-21370(); /* del vochde01 except rec*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "13315"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLEA01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLEA01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-13327


// Check attention identifier
Function OZ0G-13400()
  OZ0GW00.OZ0GW-SEL-CUST = OZ0GW01.OZ0GW-CUST[OZ0GW-IXM];
  OZ0GW00.OZ0GW-SEL-STR = OZ0GW01.OZ0GW-STR[OZ0GW-IXM];
  OZ0GW00.OZ0GW-SEL-DPT = OZ0GW01.OZ0GW-DPT[OZ0GW-IXM];

  OZ0GW00.OZ0GW-SV-IXM = OZ0GW00.OZ0GW-IXM;
  OZ0GW00.OZ0GW-SWC = " ";
  set VOCITM01 empty;
  set SQLCA empty;

  VOCITM01.OP1PARTN = OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM];
  VOCITM01.OP1CUOID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  VOCITM01.OP1NORID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  VOCITM01.SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];
  VOCITM01.OP2LNINB = OZ0GW01.OZ0GW-OP-LINE-ITEM-NBR[OZ0GW-IXM];


  try
    call "VOCITM01" ("S ", SQLCA, VOCITM01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      OZ0GW00.OZ0GW-SWC = "Y"; /* Indicate end of cursor*/

      return; /* Return to previous process*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "11320"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCITM01.VOCITM01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-13400


// Reset highlighted fields
Function OZ0G-14000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/

  set OZ0GM001.OZ0GM-CURR-CU-CO-ID normal;
  set OZ0GM001.OZ0GM-CURR-STOR-ID normal;
  set OZ0GM001.OZ0GM-CURR-XNX-DEPT normal;
  set OZ0GM001.OZ0GM-CURR-GPC-CD normal;
  set OZ0GM001.OZ0GM-SLS-OFF normal;
  set OZ0GM001.OZ0GM-SM-SAGCY-ID normal;
  set OZ0GM001.OZ0GM-SM-SREP-ID normal;
  set OZ0GM001.OZ0GM-ELAPSED-DAYS normal;

  OZ0GW00.OZ0GW-IXM = 1; /* Initialize line index*/

  while (OZ0GW00.OZ0GW-IXM < 12) /* * Until end of lines*/

    set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] normal; /* Reset select flag*/

    OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1; /* Increment line index*/

  end

  set OZ0GM001.CATOAP initialAttributes; /* TO application*/
  set OZ0GM001.CAITEM initialAttributes; /* Application data*/

   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (OZ0GM001.OZ0GM-CURR-GPC-CD == "?" /* if any ? entered*/
   || OZ0GM001.OZ0GM-SLS-OFF == "?")   

    if (OZ0GM001.OZ0GM-CURR-GPC-CD == "?") /* if ? entered in gpc*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC       "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code and description to the map.                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        OZ0GM001.OZ0GM-CURR-GPC-CD = XGPTBL.XGPCD[XX0XWPIX];
        OZ0GM001.OZ0GM-GPC-DESC = XGPTBL.XGPDESC[XX0XWPIX];
        set OZ0GM001.OZ0GMSEL[1] cursor; /* put cursor on 1st select*/
      else
        OZ0GM001.OZ0GM-CURR-GPC-CD = " "; /* clear fields*/
        set OZ0GM001.OZ0GM-CURR-GPC-CD cursor; /* put cursor on gpc cd*/
        OZ0GM001.OZ0GM-GPC-DESC = " "; /* clear description*/
      end
      converseLib.clearScreen();
      
      OZ0GW00.OZ0GW-SWR = "N"; /* no to request for data*/
  /* MOVE 'Y' TO OZ0GW00.OZ0GW-SWF;/* yes to format map*/
      set XX0XM001 initial;

      exit stack; /* go display map*/
    end

    if (OZ0GM001.OZ0GM-SLS-OFF == "?")
      /* *******************************************************************/
      /* popup xsocd sales office code*/
      /* *******************************************************************/

      XPXX001(); /* initialize*/

      set OZ0GM001.OZ0GM-SLS-OFF cursor;
      XX0XW02.XX0XWHDR = "              SALES OFFICE";

      while (XX0XW02.XX0XWEND == "N") /* not end of process*/
        XPXSO01(); /* popup xsocd window*/
      end

      if (XX0XW02.XX0XWPIX > 0) /* selection was made*/
        OZ0GM001.OZ0GM-SLS-OFF = XSOTBL.XSOCD[XX0XWPIX];
        OZ0GM001.OZ0GM-SLS-OFF-DESC = XSOTBL.XSOSNM[XX0XWPIX];
      else
        OZ0GM001.OZ0GM-SLS-OFF = " ";
        set OZ0GM001.OZ0GM-SLS-OFF cursor;
        OZ0GM001.OZ0GM-SLS-OFF-DESC = " ";
      end

      converseLib.clearScreen();
      
      OZ0GW00.OZ0GW-SWR = "N"; /* no to request for data*/
  /* MOVE 'Y' TO OZ0GW00.OZ0GW-SWF;/* yo to format map*/
      set XX0XM001 initial;
      exit stack; /* go display map*/

    end
  end


end // end OZ0G-14000


// Verify data that was entered
Function OZ0G-15000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (OZ0GM001.CAITEM > " ") /* Application data was entered*/

    OZWREC.XXXPRCNM = "15000"; /* Module identification*/
    set OZ0GM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    OZ0G-15100(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the line.*/
    /* ------------------------------------------------------------*/

    if (converseVar.eventKey is enter /* Enter was pressed*/
     || converseVar.eventKey is pf16  /* PF16 was pressed*/
     || converseVar.eventKey is pf19) /* PF19 was pressed*/

      OZ0G-15200(); /* Verify data in the line*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end


end // end OZ0G-15000


// Verify scroll request
Function OZ0G-15100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OZ0GW00.XXXTSPAG < 2)       /* and no previous pages*/

    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OZ0GW00.XXXTSPAG >= OZ0GW00.TA5TSQIX) /* and no more pages*/

    OZWREC.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate an error for any data that was modified.*/
  /* ------------------------------------------------------------*/

  OZ0GW00.OZ0GW-IXM = 1; /* Initialize line index*/

  while (OZ0GW00.OZ0GW-IXM < 12) /* Until end of lines*/

    if (OZ0GM001.OZ0GMSEL[OZ0GW-IXM] != OZ0GW01.OZ0GW-SEL[OZ0GW-IXM])

      OZWREC.XXXPRCNM = "15100"; /* Module identification*/
      set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(14); /* Field may not change*/

    end

    OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1; /* Decrement line number*/

  end


end // end OZ0G-15100


// Verify data in the line
Function OZ0G-15200()
  /* ------------------------------------------------------------*/
  /* If selection was entered and is not an "S", indicate that*/
  /* only "S" may be entered to select a line.*/
  /* ------------------------------------------------------------*/

  OZ0GW00.OZ0GW-IXM = 1; /* initialize index*/

  while (OZ0GW00.OZ0GW-IXM < 12) /* until end of lines*/

    if (OZ0GM001.OZ0GMSEL[OZ0GW-IXM] != OZ0GW01.OZ0GW-SEL[OZ0GW-IXM]
     && OZ0GM001.OZ0GMSEL[OZ0GW-IXM] != "S") /* and is not a "S"*/

      OZWREC.XXXPRCNM = "15200"; /* Module identification*/
      set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(13); /* Only "S" may be entered*/

    else

      if (OZ0GM001.OZ0GMSEL[OZ0GW-IXM] == "S" /* if 'S' but*/
       && converseVar.eventKey not pf14       /* no pf14*/
       && converseVar.eventKey not pf16       /* no pf16*/
       && converseVar.eventKey not pf17)      /* no pf19*/
        OZWREC.XXXPRCNM = "15200"; /* Module identification*/
        set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(4);
      end

    end

    OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1; /* decrement line number*/

  end


  if (OZ0GW00.OZ0GW-EDIT-FLAG == "Y") /* edit flag is on - clear dtls*/

    OZ0GW00.OZ0GW-IXM = 1; /* initialize index*/

    while (OZ0GW00.OZ0GW-IXM < 12) /* until end of lines*/

      OZ0GM001.OZ0GMSEL[OZ0GW-IXM] = " ";
      set OZ0GM001.OZ0GMSEL[OZ0GW-IXM] skip, invisible;
      OZ0GM001.OZ0GM-CUST-STR-DPT[OZ0GW-IXM] = " ";
      OZ0GM001.OZ0GM-SOCD-LTR-TYP-CD[OZ0GW-IXM] = " ";
      OZ0GM001.OZ0GM-PO-SO[OZ0GW-IXM] = " ";
      OZ0GM001.OZ0GM-EX-TYPE[OZ0GW-IXM] = " ";
      OZ0GM001.OZ0GM-EX-DESC[OZ0GW-IXM] = " ";
      OZ0GM001.OZ0GM-REP-ID[OZ0GW-IXM] = " ";

      OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1; /* increment line number*/

    end

    OZ0GW00.OZ0GW-EDIT-FLAG = "N"; /* reset flag*/

  end

end // end OZ0G-15200


// Process valid input request
Function OZ0G-16000()
  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display*/
  /* ------------------------------------------------------------*/

  OZ0GW00.OZ0GW-SWF = "Y"; /* format the map switch*/



  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    OZ0GW00.XXXTSPAG = OZ0GW00.XXXTSPAG - 1; /* Decrement page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    OZ0GW00.XXXTSPAG = OZ0GW00.XXXTSPAG + 1; /* Increment page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter) /* enter pressed*/

    OZ0GW00.OZ0GW-SWF = "Y"; /* Format the map switch*/
  end

  /* ------------------------------------------------------------*/
  /* Save the select fields and clear the map input/output area.*/
  /* ------------------------------------------------------------*/

  /* VE 'N' TO oz0gW00.oz0gW-UPDATE-SW;/* turn off updated switch*/


  if (converseVar.eventKey is pf14) /* pf14*/

    OZ0GW00.OZ0GW-IXM = 1; /* Initialize line index*/
    OZ0GW00.OZ0GW-SWU = "N"; /* reset switch*/

    while (OZ0GW00.OZ0GW-IXM <= 12 /* Until end of lines*/
     && OZ0GW00.OZ0GW-SWU != "Y") /* or 'S' is found*/

      if (OZ0GM001.OZ0GMSEL[OZ0GW-IXM] != OZ0GW01.OZ0GW-SEL[OZ0GW-IXM])

        OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1; /* Increment line index*/

      end
    end
  end

  if (converseVar.eventKey is pf19) /* PF19 pressed*/
    if ("S" in OZ0GM001.OZ0GMSEL /* If line was selected*/
     && OZ0GW00.OZ0GW-SWR != "Y") /* data not requested*/
      OZ0GW00.OZ0GW-IX1 = sysVar.arrayIndex;
    end
    if (converseVar.validationMsgNum == 0) /* If no errors*/
      XSOZ-S0001(); /* Exit to another application*/
    else
      OZ0GW00.OZ0GW-SWF = "N";
      exit stack; /* Exit to display map*/
    end
  end

end // end OZ0G-16000


// Process to add a new row
Function OZ0G-20000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Format the map output area and display the map.*/
  /* 2) Check the attention identifier used to respond.*/
  /* 3) Reset highlighted fields to normal intensity.*/
  /* 4) Verify the data that was entered.*/
  /* 5) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0G-21000(); /* Obtain data to display*/

  OZ0G-22000(); /* Format and display the map*/

  OZ0G-23000(); /* Check attention identifier*/

  OZ0G-24000(); /* Reset fields to normal intensity*/

  /* RFORM OZ0G-25000;              /* Verify the entered data*/

  OZ0G-26000(); /* Process valid input request*/


end // end OZ0G-20000


// Obtain the data to display
Function OZ0G-21000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  if (OZ0GW00.OZ0GW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/
  OZ0GW00.XXXTSLEN = 0392; /* temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/
  if (OZ0GW00.XXXTSPAG == 0) /* no pages established*/
    OZ0GW00.XXXTSPAG = 1; /* Page number to display*/
  end

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/
  OZ0G-21100(); /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Perform screen header edits*/
  /* ------------------------------------------------------------*/
  OZ0G-21200(); /* build screen header*/

  /* ------------------------------------------------------------*/
  /* get the data*/
  /* ------------------------------------------------------------*/
  OZ0G-21300();
end // end OZ0G-21000


// Purge any temporary storage
Function OZ0G-21100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/

  set OZ0GW02 empty; /* M001 display storage*/

  OZ0GW00.OZ0GW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0GW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "OZ2G"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0GW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "21100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M002"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-21100


// screen header edits
Function OZ0G-21200()
  OZ0GW00.OZ0GW-SEL-CUST = VOCHDR01.SOCD-CURR-CU-CO-ID;
  OZ0GW00.OZ0GW-SEL-STR = VOCHDR01.SOCD-CURR-STOR-ID;
  OZ0GW00.OZ0GW-SEL-DPT = VOCHDR01.SOCD-CURR-XNX-DEPT;
  OZ0GM002.OZ0GM-CUST-STR-DPT = OZ0GW00.OZ0GW-SEL-CUST-STR-DPT;

  OZ0G-21220(); /* retrv cmpny name from dcust.vcmpny01*/
  OZ0GM002.OZ0GM-CU-CO-NM-HDR = KUCREC.KUCCONM;


  OZ0GM002.OZ0GM-OP-CUST-ORD-ID = VOCHDR01.OP1CUOID;
  OZ0GM002.OZ0GM-CURR-GPC-CD = OZ0GM001.OZ0GM-CURR-GPC-CD;

  OZ0GM002.OZ0GM-GPC-DESC = OZ0GM001.OZ0GM-GPC-DESC;
  OZ0GM002.OZ0GM-SOCD-CURR-CUST-PO = VOCHDR01.SOCD-CURR-CUST-PO;
  OZ0GM002.OZ0GM-XSO-SLS-OFC-ID = OZ0GM001.OZ0GM-SLS-OFF;
  OZ0GM002.OZ0GM-XSO-SLS-OFC-ID-DESC = OZ0GM001.OZ0GM-SLS-OFF-DESC;

  OZ0GM002.OZ0GM-SM-SAGCY-ID = OP1REC.SM1AGYID;
  OZ0G-21240(); /* validate against dslsmn.vsagcy01*/
  OZ0GM002.OZ0GM-SM-SAGCY-ID-DESC = SM1REC.SM1AGYNM;

  OZ0GM002.OZ0GM-SM-SREP-ID = OP1REC.SM4REPID;
  OZ0G-21260(); /* get reps first and last names*/
  if (SQLCA.VAGen_SQLCODE == 0)
    OZ0GM002.OZ0GM-SM-SREP-LAST-NM = SM4REC.XXXLSTNM;
    OZ0GM002.OZ0GM-SM-SREP-FIRST-NM = SM4REC.XXXFSTNM;
  end

  OZ0GM002.OZ0GM-PO-MONEY-MTH = OP1REC.OP1WIPIN;
  OZ0GM002.OZ0GM-TOT-ORD-VALUE = OP1REC.OP1OVALU;
  OZ0GM002.OZ0GM-TOT-ORD-QTY = OP1REC.OP1OTUNT;
  OZ0GM002.OZ0GM-CURR-DNSB = OP1REC.OP1DSBDT;
  OZ0GM002.OZ0GM-CURR-DNSA = OP1REC.OP1DSADT;

  OZ0GM002.OZ0GM-ORIG-DNSB = VOCHDR01.OP1DSBDT;
  OZ0GM002.OZ0GM-ORIG-DNSA = VOCHDR01.OP1DSADT;
  OZ0GM002.OZ0GM-OP-CUST-PO = VOCHDR01.OP1CUPO;

  if (OP1REC.XPTCD in XPTTBL.XPTCD) /* code in table*/
    if (OP1REC.XPTCD in XPTTBL.XPTCD)
      OZ0GM002.OZ0GM-PYMNT-TERMS = XPTTBL.XPTDESC[sysVar.arrayIndex];
    end
  end

  /* -------------------------------------------------------------*/
end // end OZ0G-21200


// Select set and open cursor
Function OZ0G-21220()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set KUCREC empty; /* Clear row storage area*/

  KUCREC.KUCCOID = OZ0GW00.OZ0GW-SEL-CUST;


  try
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21220"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUCREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-21220


// Select set and open cursor
Function OZ0G-21240()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set SM1REC empty; /* Clear row storage area*/

  SM1REC.SM1AGYID = OZ0GM002.OZ0GM-SM-SAGCY-ID;


  try
    call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21240"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DSLSMN "; /* Data base name*/
  TA1REC.TA1TBLVU = "SM1REC"; /* Table view name*/
  TA1REC.TA1TBLKE = SM1REC.SM1AGYID; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-21240


// Select set and open cursor
Function OZ0G-21260()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set SM4REC empty; /* Clear row storage area*/

  SM4REC.SM4REPID = OZ0GM002.OZ0GM-SM-SREP-ID;


  try
    call "IO0020" ("S ", SQLCA, SM4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && (SQLCA.VAGen_SQLCODE == 0      /* and normal return code*/
   || SQLCA.VAGen_SQLCODE == 100))  

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21260"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DSLSMN  "; /* Data base name*/
  TA1REC.TA1TBLVU = "SM4REC"; /* Table view name*/
  TA1REC.TA1TBLKE = SM4REC.VREPS001-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-21260


// Obtain the data to display
Function OZ0G-21300()
  OZ0GW00.OZ0GW-SWC = " ";
  OZ0GW00.OZ0GW-DATA-FLG = " ";
  OZ0GW00.OZ0GW-CUSTPO-FND = " ";
  OZ0GW00.OZ0GW-CUSTDT-FND = " ";
  OZ0GW00.OZ0GW-XPTCD-FND = " ";
  OZ0GW00.OZ0GW-DSBDT-FND = " ";
  OZ0GW00.OZ0GW-DSADT-FND = " ";

  OZ0GW-IXM = 1;

  set VSOHCR01 empty;
  VSOHCR01.OP1PARTN = VOCHDR01.OP1PARTN;
  VSOHCR01.OP1CUOID = VOCHDR01.OP1CUOID;
  VSOHCR01.OP1NORID = VOCHDR01.OP1NORID;
  VSOHCR01.SOCD-APPL-SRC-CD = VOCHDR01.SOCD-APPL-SRC-CD;

  OZ0G-21310(); /* open chg hdr cursor*/

  while (OZ0GW00.OZ0GW-SWC == " ")

    OZ0G-21320(); /* fetch chg hdr record*/

    if (OZ0GW00.OZ0GW-SWC == " ")

      if (VSOHCR01.OP1CUPO > " ")
        OZ0GW00.OZ0GW-CUSTPO-FND = "Y";
      end

      if (VSOHCR01.OP1CUNDT > 0)
        OZ0GW00.OZ0GW-CUSTDT-FND = "Y";
      end

      if (VSOHCR01.XPTCD > " ")
        OZ0GW00.OZ0GW-XPTCD-FND = "Y";
      end

      if (VSOHCR01.OP1DSBDT > 0)
        OZ0GW00.OZ0GW-DSBDT-FND = "Y";
      end

      if (VSOHCR01.OP1DSADT > 0)
        OZ0GW00.OZ0GW-DSADT-FND = "Y";
      end

    end
  end


  if (VOCHDR01.OP1CUPO != OP1REC.OP1CUPO && 
  OZ0GW00.OZ0GW-CUSTPO-FND == " ")

    OZ0GW02.OZ0GW-CHG-FLD[OZ0GW-IXM] = "CUST P.O.";
    OZ0GW02.OZ0GW-CHG-VALUE[OZ0GW-IXM] = OP1REC.OP1CUPO;
    OZ0GW02.OZ0GW-DATE[OZ0GW-IXM] = OP1REC.ZZZCHGDT;
    OZ0GW02.OZ0GW-TIME[OZ0GW-IXM] = OP1REC.ZZZCHGTM;
    OZ0GW00.OZ0GW-DATA-FLG = "Y";

    OZ0GW-IXM = OZ0GW-IXM + 1;

  end


  if (VOCHDR01.OP-ORIG-NEED-DT != OP1REC.OP1CUNDT && 
  OZ0GW00.OZ0GW-CUSTDT-FND == " ")

    OZ0GW02.OZ0GW-CHG-FLD[OZ0GW-IXM] = "NEED DATE";
    OZ0GW00.OZ0GW-DATE-BRK = OP1REC.OP1CUNDT;
    OZ0GW00.OZ0GW-DM-YY = OZ0GW00.OZ0GW-DB-YY;
    OZ0GW00.OZ0GW-DM-MM = OZ0GW00.OZ0GW-DB-MM;
    OZ0GW00.OZ0GW-DM-DD = OZ0GW00.OZ0GW-DB-DD;
    OZ0GW00.OZ0GW-DM-DASH1 = "-";
    OZ0GW00.OZ0GW-DM-DASH2 = "-";
    OZ0GW02.OZ0GW-CHG-VALUE[OZ0GW-IXM] = OZ0GW00.OZ0GW-DATE-MK;
    OZ0GW02.OZ0GW-DATE[OZ0GW-IXM] = OP1REC.ZZZCHGDT;
    OZ0GW02.OZ0GW-TIME[OZ0GW-IXM] = OP1REC.ZZZCHGTM;
    OZ0GW00.OZ0GW-DATA-FLG = "Y";

    OZ0GW-IXM = OZ0GW-IXM + 1;

  end


  if (VOCHDR01.XPTCD != OP1REC.XPTCD && 
  OZ0GW00.OZ0GW-XPTCD-FND == " ")

    OZ0GW02.OZ0GW-CHG-FLD[OZ0GW-IXM] = "PYMT TERM";
    OZ0GW02.OZ0GW-CHG-VALUE[OZ0GW-IXM] = OP1REC.XPTCD;
    OZ0GW02.OZ0GW-DATE[OZ0GW-IXM] = OP1REC.ZZZCHGDT;
    OZ0GW02.OZ0GW-TIME[OZ0GW-IXM] = OP1REC.ZZZCHGTM;
    OZ0GW00.OZ0GW-DATA-FLG = "Y";

    OZ0GW-IXM = OZ0GW-IXM + 1;

  end


  if (VOCHDR01.OP1DSBDT != OP1REC.OP1DSBDT && 
  OZ0GW00.OZ0GW-DSBDT-FND == " ")

    OZ0GW02.OZ0GW-CHG-FLD[OZ0GW-IXM] = "DNSB DATE";
    OZ0GW00.OZ0GW-DATE-BRK = OP1REC.OP1DSBDT;
    OZ0GW00.OZ0GW-DM-YY = OZ0GW00.OZ0GW-DB-YY;
    OZ0GW00.OZ0GW-DM-MM = OZ0GW00.OZ0GW-DB-MM;
    OZ0GW00.OZ0GW-DM-DD = OZ0GW00.OZ0GW-DB-DD;
    OZ0GW00.OZ0GW-DM-DASH1 = "-";
    OZ0GW00.OZ0GW-DM-DASH2 = "-";
    OZ0GW02.OZ0GW-CHG-VALUE[OZ0GW-IXM] = OZ0GW00.OZ0GW-DATE-MK;
    OZ0GW02.OZ0GW-DATE[OZ0GW-IXM] = OP1REC.ZZZCHGDT;
    OZ0GW02.OZ0GW-TIME[OZ0GW-IXM] = OP1REC.ZZZCHGTM;
    OZ0GW00.OZ0GW-DATA-FLG = "Y";

    OZ0GW-IXM = OZ0GW-IXM + 1;

  end

  if (OZ0GW00.OZ0GW-IXM == 4) /* Page is full*/
    OZ0G-21340(); /* Add page to temporary storage*/
    OZ0GW00.OZ0GW-IXM = 1; /* Display line index*/
  end


  if (VOCHDR01.OP1DSADT != OP1REC.OP1DSADT && 
  OZ0GW00.OZ0GW-DSADT-FND == " ")

    OZ0GW02.OZ0GW-CHG-FLD[OZ0GW-IXM] = "DNSA DATE";
    OZ0GW00.OZ0GW-DATE-BRK = OP1REC.OP1DSADT;
    OZ0GW00.OZ0GW-DM-YY = OZ0GW00.OZ0GW-DB-YY;
    OZ0GW00.OZ0GW-DM-MM = OZ0GW00.OZ0GW-DB-MM;
    OZ0GW00.OZ0GW-DM-DD = OZ0GW00.OZ0GW-DB-DD;
    OZ0GW00.OZ0GW-DM-DASH1 = "-";
    OZ0GW00.OZ0GW-DM-DASH2 = "-";
    OZ0GW02.OZ0GW-CHG-VALUE[OZ0GW-IXM] = OZ0GW00.OZ0GW-DATE-MK;
    OZ0GW02.OZ0GW-DATE[OZ0GW-IXM] = OP1REC.ZZZCHGDT;
    OZ0GW02.OZ0GW-TIME[OZ0GW-IXM] = OP1REC.ZZZCHGTM;
    OZ0GW00.OZ0GW-DATA-FLG = "Y";

    OZ0GW-IXM = OZ0GW-IXM + 1;

  end


  if (OZ0GW00.OZ0GW-IXM > 1) /* Page is full*/
    OZ0G-21340(); /* Add page to temporary storage*/
    OZ0GW00.OZ0GW-IXM = 1; /* Display line index*/
  end

  OZ0G-21350(); /* close vsohcr01 cursor*/

  OZ0GW00.OZ0GW-SWR = "N"; /* Request for data switch*/

  if (OZ0GW00.OZ0GW-DATA-FLG == " ")
    OZ0G-21360(); /* update 'ex' record*/
    OZ0G-21370(); /* del ord hdr except tbl rec*/
    OZ0GW00.OZ0GW-SWR = "Y"; /* Request for data switch*/
    converseLib.validationFailed(45);
    VGVar.handleSysLibraryErrors = 0;
    sysLib.commit();
    exit stack; /* go back to screen 1*/
  end

end // end OZ0G-21300


// Select set and open cursor
Function OZ0G-21310()

  try
    call "VSOHCR01" ("S3", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31310"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF VSOHCR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOHCR01.VSOHCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-21310


// Select set and open cursor
Function OZ0G-21320()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VSOHCR01" ("N3", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
        OZ0GW00.OZ0GW-SWC = "Y";
        return; /* Return to previous process*/
      end
    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31320"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH VSOHCR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOHCR01.VSOHCR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-21320


// Add page to temporary storage
Function OZ0G-21340()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OZ0GW02.XXXTSLEN = OZ0GW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ2G"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OZ0GW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OZ0GW02 empty; /* M002 display storage*/

    OZ0GW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "21340"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M002"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-21340


// Close selected set cursor
Function OZ0G-21350()
  /* ------------------------------------------------------------*/
  /* Close the selected set of table rows.*/
  /* ------------------------------------------------------------*/

  try
    call "VSOHCR01" ("C3", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31350"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/

  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-21350


// Check attention identifier
Function OZ0G-21360()
  set WOZ2130 empty;
  set SQLCA empty;

  OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-SV-IXM;
  WOZ2130.WOZ2130-SOCD-CURR-CU-CO-ID = OZ0GW01.OZ0GW-CUST[OZ0GW-IXM];
  WOZ2130.WOZ2130-SOCD-CURR-STOR-ID = OZ0GW01.OZ0GW-STR[OZ0GW-IXM];
  WOZ2130.WOZ2130-SOCD-CURR-XNX-DEPT = OZ0GW01.OZ0GW-DPT[OZ0GW-IXM];

  WOZ2130.WOZ2130-SOCD-LTR-TYPE-CD = OZ0GW01.OZ0GW-SOCD-LTR-TYP-CD[OZ0GW-IXM];

  WOZ2130.WOZ2130-OP-ORD-PART-CHAR = OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM];
  WOZ2130.WOZ2130-OP-CUST-ORD-ID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  WOZ2130.WOZ2130-OP-NIKE-ORD-ID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  WOZ2130.WOZ2130-SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];
  WOZ2130.WOZ2130-SOCD-DIST-SEQ-NBR = OZ0GW01.OZ0GW-SOCD-DIST-SEQ-NBR[OZ0GW-IXM];
  WOZ2130.WOZ2130-SOCD-LTR-OVRD-ID = OZ0GW01.OZ0GW-SOCD-LTR-OVRD-ID[OZ0GW-IXM];
  WOZ2130.WOZ2130-SOCD-LTR-SEQ-NBR = OZ0GW01.OZ0GW-SOCD-LTR-SEQ-NBR[OZ0GW-IXM];

  WOZ2130.WOZ2130-IO-GPC = OZ0GM001.OZ0GM-CURR-GPC-CD;
  WOZ2130.WOZ2130-IO-SALES-OFF = OZ0GM001.OZ0GM-SLS-OFF;

  WOZ2130.WOZ2130-STAT-UPDATE = "RE";

  if (OZ0GW01.OZ0GW-TBL-SRC[OZ0GW-IXM] == "LTR")
    WOZ2130.WOZ2130-IO-TASK = "U1";
  else
    WOZ2130.WOZ2130-IO-TASK = "U2";
  end

  try
    call "OZ2130" (WOZ2130, SQLCA) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      OZ0GW00.OZ0GW-SWC = "Y"; /* Indicate end of cursor*/

      return; /* Return to previous process*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21360"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "OZ2130  "; /* Table view name*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-21360


// delete vochde01 record
Function OZ0G-21370()
  set VOCHDE01 empty;
  set SQLCA empty;

  VOCHDE01.OP1PARTN = OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM];
  VOCHDE01.OP1CUOID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  VOCHDE01.OP1NORID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  VOCHDE01.SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];
  VOCHDE01.SOCD-ORD-XCEP-CD = OZ0GW01.OZ0GW-TYPE[OZ0GW-IXM];

  try
    call "VOCHDE01" ("D ", SQLCA, VOCHDE01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      OZ0GW00.OZ0GW-SWC = "Y"; /* Indicate end of cursor*/

      return; /* Return to previous process*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "21370"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCLEM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCLEM01.VOCLEM01-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-21370


// Format and converse the map
Function OZ0G-22000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0GW00.OZ0GW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OZ0GW00.OZ0GW-SWF == "Y") /* Map must be formatted*/
                                   /* save header info*/
      OZ0GW00.OZ0GW-M2-CUST-STR-DPT = OZ0GM002.OZ0GM-CUST-STR-DPT;
      OZ0GW00.OZ0GW-M2-CU-CO-NM-HDR = OZ0GM002.OZ0GM-CU-CO-NM-HDR;
      OZ0GW00.OZ0GW-M2-OVERRIDE-DI = OZ0GM002.OZ0GM-OVERRIDE-DI;
      OZ0GW00.OZ0GW-M2-OP-CUST-ORD-ID = OZ0GM002.OZ0GM-OP-CUST-ORD-ID;
      OZ0GW00.OZ0GW-M2-CURR-GPC-CD = OZ0GM002.OZ0GM-CURR-GPC-CD;
      OZ0GW00.OZ0GW-M2-GPC-DESC = OZ0GM002.OZ0GM-GPC-DESC;
      OZ0GW00.OZ0GW-M2-SOCD-CURR-CUST-PO = OZ0GM002.OZ0GM-SOCD-CURR-CUST-PO;
      OZ0GW00.OZ0GW-M2-SLS-OFF-ID = OZ0GM002.OZ0GM-XSO-SLS-OFC-ID;
      OZ0GW00.OZ0GW-M2-SLS-OFF-ID-DESC = OZ0GM002.OZ0GM-XSO-SLS-OFC-ID-DESC;
      OZ0GW00.OZ0GW-M2-SM-SAGCY-ID = OZ0GM002.OZ0GM-SM-SAGCY-ID;
      OZ0GW00.OZ0GW-M2-SM-SAGCY-ID-DESC = OZ0GM002.OZ0GM-SM-SAGCY-ID-DESC;
      OZ0GW00.OZ0GW-M2-SM-SREP-ID = OZ0GM002.OZ0GM-SM-SREP-ID;
      OZ0GW00.OZ0GW-M2-SM-SREP-FIRST-NM = OZ0GM002.OZ0GM-SM-SREP-FIRST-NM;
      OZ0GW00.OZ0GW-M2-SM-SREP-LAST-NM = OZ0GM002.OZ0GM-SM-SREP-LAST-NM;
      OZ0GW00.OZ0GW-M2-TOT-ORD-QTY = OZ0GM002.OZ0GM-TOT-ORD-QTY;
      OZ0GW00.OZ0GW-M2-TOT-ORD-VALUE = OZ0GM002.OZ0GM-TOT-ORD-VALUE;
      OZ0GW00.OZ0GW-M2-OP-CUST-PO = OZ0GM002.OZ0GM-OP-CUST-PO;
      OZ0GW00.OZ0GW-M2-PO-MONEY-MTH = OZ0GM002.OZ0GM-PO-MONEY-MTH;
      OZ0GW00.OZ0GW-M2-ORIG-DNSB = OZ0GM002.OZ0GM-ORIG-DNSB;
      OZ0GW00.OZ0GW-M2-ORIG-DNSA = OZ0GM002.OZ0GM-ORIG-DNSA;
      OZ0GW00.OZ0GW-M2-CURR-DNSB = OZ0GM002.OZ0GM-CURR-DNSB;
      OZ0GW00.OZ0GW-M2-CURR-DNSA = OZ0GM002.OZ0GM-CURR-DNSA;
      OZ0GW00.OZ0GW-M2-PYMNT-TERMS = OZ0GM002.OZ0GM-PYMNT-TERMS;

      OZ0G-22100(); /* Format the data on the map*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZ0GM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OZ0GM002.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0GM002.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OZWREC.XXXMSGNO != 0) /* Message to display*/

      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0GM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OZ0GM002.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/

    set OZ0GM002 alarm; /* Indicate sound alarm*/

  end

  converse OZ0GM002 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = OZ0GM002.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0GM002.CAITEM; /* Application data*/

end // end OZ0G-22000


// Format the display data
Function OZ0G-22100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set OZ0GM002 initial; /* m002 input/output area*/

  OZ0GW00.OZ0GW-SWF = "N"; /* Format the map switch*/

  /* ------------------------------------------------------------*/
  /* If a ruling was added, get the page from temp storage that the*/
  /* ruling's on and display it.*/
  /* ------------------------------------------------------------*/

  if (OZ0GW00.OZ0GW-SAVE-PAGE != 0) /* if page saved off*/

    OZ0GW00.XXXTSPAG = OZ0GW-SAVE-PAGE; /* use saved page*/

    OZ0G-22110(); /* Obtain temporary storage page*/

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set OZ0GM002.XXXLITPG skip; /* "PAGE" literal*/
    OZ0GM002.XXXTSPAG = OZ0GW00.XXXTSPAG; /* Current page*/
    set OZ0GM002.XXXLITOF skip; /* "OF" literal*/
    OZ0GM002.TA5TSQIX = OZ0GW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
    OZ0GW00.OZ0GW-IXM = 1; /* Initialize map index*/
    while (OZ0GW00.OZ0GW-IXM < 5 /* Until screen is full*/
     && OZ0GW02.OZ0GW-CHG-FLD[OZ0GW-IXM] > " ")

      OZ0GM002.OZ0GM-CHG-CD[OZ0GW-IXM] = OZ0GW02.OZ0GW-CHG-CD[OZ0GW-IXM];
      OZ0GM002.OZ0GM-CHG-FLD[OZ0GW-IXM] = OZ0GW02.OZ0GW-CHG-FLD[OZ0GW-IXM];
      OZ0GM002.OZ0GM-CHG-VALUE[OZ0GW-IXM] = OZ0GW02.OZ0GW-CHG-VALUE[OZ0GW-IXM];
      OZ0GM002.OZ0GM-USERID[OZ0GW-IXM] = OZ0GW02.OZ0GW-USERID[OZ0GW-IXM];

      OZ0GW00.OZ0GW-DATE-BRK = OZ0GW02.OZ0GW-DATE[OZ0GW-IXM];
      OZ0GW00.OZ0GW-DM-YY = OZ0GW00.OZ0GW-DB-YY;
      OZ0GW00.OZ0GW-DM-MM = OZ0GW00.OZ0GW-DB-MM;
      OZ0GW00.OZ0GW-DM-DD = OZ0GW00.OZ0GW-DB-DD;
      OZ0GW00.OZ0GW-DM-DASH1 = "-";
      OZ0GW00.OZ0GW-DM-DASH2 = "-";
      OZ0GM002.OZ0GM-DATE[OZ0GW-IXM] = OZ0GW00.OZ0GW-DATE-MK;

      OZ0GW00.OZ0GW-TIME-BRK = OZ0GW02.OZ0GW-TIME[OZ0GW-IXM];
      OZ0GW00.OZ0GW-TM-HH = OZ0GW00.OZ0GW-TB-HH;
      OZ0GW00.OZ0GW-TM-MM = OZ0GW00.OZ0GW-TB-MM;
      OZ0GW00.OZ0GW-TM-CL = ":";
      OZ0GM002.OZ0GM-TIME[OZ0GW-IXM] = OZ0GW00.OZ0GW-TIME-MK;

      OZ0GM002.OZ0GM-COMMENT[OZ0GW-IXM] = OZ0GW02.OZ0GW-COMMENT[OZ0GW-IXM];

      OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1;
                                   /* Increment map index*/

    end

    set OZ0GM002.OZ0GM-CHG-CD[1] cursor;
  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/

  else
    if (OZ0GW00.TA5TSQIX > 0) /* Pages were formatted*/

      if (OZ0GW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/

        if (OZ0GW00.OZ0GW-SWU == "Y") /* Current page was changed*/

          OZ0G-22120(); /* Update temporary storage page*/

          OZ0GW00.OZ0GW-SWU = "N"; /* Storage update switch*/

        end

        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/

        if (OZ0GW00.XXXTSPAG > OZ0GW00.TA5TSQIX) /* Desired greater highest*/
          OZ0GW00.XXXTSPAG = OZ0GW00.TA5TSQIX; /* Default to highest*/
        end

        OZ0G-22110(); /* Obtain temporary storage page*/

      end

      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/

      set OZ0GM002.XXXLITPG skip; /* "PAGE" literal*/
      OZ0GM002.XXXTSPAG = OZ0GW00.XXXTSPAG; /* Current page*/
      set OZ0GM002.XXXLITOF skip; /* "OF" literal*/
      OZ0GM002.TA5TSQIX = OZ0GW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
      OZ0GW00.OZ0GW-IXM = 1; /* Initialize map index*/
      while (OZ0GW00.OZ0GW-IXM < 5 /* Until screen is full*/
       && OZ0GW02.OZ0GW-CHG-FLD[OZ0GW-IXM] > " ")

        OZ0GM002.OZ0GM-CHG-CD[OZ0GW-IXM] = OZ0GW02.OZ0GW-CHG-CD[OZ0GW-IXM];
        OZ0GM002.OZ0GM-CHG-FLD[OZ0GW-IXM] = OZ0GW02.OZ0GW-CHG-FLD[OZ0GW-IXM];
        OZ0GM002.OZ0GM-CHG-VALUE[OZ0GW-IXM] = OZ0GW02.OZ0GW-CHG-VALUE[OZ0GW-IXM];
        OZ0GM002.OZ0GM-USERID[OZ0GW-IXM] = OZ0GW02.OZ0GW-USERID[OZ0GW-IXM];

        OZ0GW00.OZ0GW-DATE-BRK = OZ0GW02.OZ0GW-DATE[OZ0GW-IXM];
        OZ0GW00.OZ0GW-DM-YY = OZ0GW00.OZ0GW-DB-YY;
        OZ0GW00.OZ0GW-DM-MM = OZ0GW00.OZ0GW-DB-MM;
        OZ0GW00.OZ0GW-DM-DD = OZ0GW00.OZ0GW-DB-DD;
        OZ0GW00.OZ0GW-DM-DASH1 = "-";
        OZ0GW00.OZ0GW-DM-DASH2 = "-";
        OZ0GM002.OZ0GM-DATE[OZ0GW-IXM] = OZ0GW00.OZ0GW-DATE-MK;

        OZ0GW00.OZ0GW-TIME-BRK = OZ0GW02.OZ0GW-TIME[OZ0GW-IXM];
        OZ0GW00.OZ0GW-TM-HH = OZ0GW00.OZ0GW-TB-HH;
        OZ0GW00.OZ0GW-TM-MM = OZ0GW00.OZ0GW-TB-MM;
        OZ0GW00.OZ0GW-TM-CL = ":";
        OZ0GM002.OZ0GM-TIME[OZ0GW-IXM] = OZ0GW00.OZ0GW-TIME-MK;

        OZ0GM002.OZ0GM-COMMENT[OZ0GW-IXM] = OZ0GW02.OZ0GW-COMMENT[OZ0GW-IXM];

        OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1;
                                   /* Increment map index*/

      end
    end

  end

  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/
  OZ0GM002.OZ0GM-CUST-STR-DPT = OZ0GW00.OZ0GW-M2-CUST-STR-DPT;
  OZ0GM002.OZ0GM-CU-CO-NM-HDR = OZ0GW00.OZ0GW-M2-CU-CO-NM-HDR;
  OZ0GM002.OZ0GM-OVERRIDE-DI = OZ0GW00.OZ0GW-M2-OVERRIDE-DI;
  OZ0GM002.OZ0GM-OP-CUST-ORD-ID = OZ0GW00.OZ0GW-M2-OP-CUST-ORD-ID;
  OZ0GM002.OZ0GM-CURR-GPC-CD = OZ0GW00.OZ0GW-M2-CURR-GPC-CD;
  OZ0GM002.OZ0GM-GPC-DESC = OZ0GW00.OZ0GW-M2-GPC-DESC;
  OZ0GM002.OZ0GM-SOCD-CURR-CUST-PO = OZ0GW00.OZ0GW-M2-SOCD-CURR-CUST-PO;
  OZ0GM002.OZ0GM-XSO-SLS-OFC-ID = OZ0GW00.OZ0GW-M2-SLS-OFF-ID;
  OZ0GM002.OZ0GM-XSO-SLS-OFC-ID-DESC = OZ0GW00.OZ0GW-M2-SLS-OFF-ID-DESC;
  OZ0GM002.OZ0GM-SM-SAGCY-ID = OZ0GW00.OZ0GW-M2-SM-SAGCY-ID;
  OZ0GM002.OZ0GM-SM-SAGCY-ID-DESC = OZ0GW00.OZ0GW-M2-SM-SAGCY-ID-DESC;
  OZ0GM002.OZ0GM-SM-SREP-ID = OZ0GW00.OZ0GW-M2-SM-SREP-ID;
  OZ0GM002.OZ0GM-SM-SREP-FIRST-NM = OZ0GW00.OZ0GW-M2-SM-SREP-FIRST-NM;
  OZ0GM002.OZ0GM-SM-SREP-LAST-NM = OZ0GW00.OZ0GW-M2-SM-SREP-LAST-NM;
  OZ0GM002.OZ0GM-TOT-ORD-QTY = OZ0GW00.OZ0GW-M2-TOT-ORD-QTY;
  OZ0GM002.OZ0GM-TOT-ORD-VALUE = OZ0GW00.OZ0GW-M2-TOT-ORD-VALUE;
  OZ0GM002.OZ0GM-OP-CUST-PO = OZ0GW00.OZ0GW-M2-OP-CUST-PO;
  OZ0GM002.OZ0GM-PO-MONEY-MTH = OZ0GW00.OZ0GW-M2-PO-MONEY-MTH;
  OZ0GM002.OZ0GM-ORIG-DNSB = OZ0GW00.OZ0GW-M2-ORIG-DNSB;
  OZ0GM002.OZ0GM-ORIG-DNSA = OZ0GW00.OZ0GW-M2-ORIG-DNSA;
  OZ0GM002.OZ0GM-CURR-DNSB = OZ0GW00.OZ0GW-M2-CURR-DNSB;
  OZ0GM002.OZ0GM-CURR-DNSA = OZ0GW00.OZ0GW-M2-CURR-DNSA;
  OZ0GM002.OZ0GM-PYMNT-TERMS = OZ0GW00.OZ0GW-M2-PYMNT-TERMS;

  /*  */

  OZ0GW00.OZ0GW-IXM = 1; /* Initialize line index*/

  while (OZ0GW00.OZ0GW-IXM < 5) /* * Until end of lines*/

    if (OZ0GM002.OZ0GM-CHG-FLD[OZ0GW-IXM] == " ")
      set OZ0GM002.OZ0GM-CHG-CD[OZ0GW-IXM] skip, noHighLight;
      set OZ0GM002.OZ0GM-CHG-FLD[OZ0GW-IXM] noHighLight;
      set OZ0GM002.OZ0GM-CHG-VALUE[OZ0GW-IXM] noHighLight;
      set OZ0GM002.OZ0GM-USERID[OZ0GW-IXM] skip, noHighLight;
      set OZ0GM002.OZ0GM-DATE[OZ0GW-IXM] noHighLight;
      set OZ0GM002.OZ0GM-TIME[OZ0GW-IXM] noHighLight;
      set OZ0GM002.OZ0GM-COMMENT[OZ0GW-IXM] skip, noHighLight;
    end

    OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1; /* Increment line index*/

  end
  /*  */
end // end OZ0G-22100


// Read temporary storage page
Function OZ0G-22110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OZ0GW02.XXXTSLEN = OZ0GW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ2G"; /* Application identification*/
  TA5REC.TA5TSQIX = OZ0GW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OZ0GW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "22110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M002"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-22110


// Update temporary storage page
Function OZ0G-22120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (OZ0GW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "22120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M002"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-22120


// Check attention identifier
Function OZ0G-23000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0GW00.OZ0GW-SWR == "Y") /* Request for data*/
      set OZ0GW02 empty; /* m002 display storage*/
    end

    OZ0GW00.OZ0GW-SWF = "Y"; /* Format the map switch*/
    OZ0GW00.OZ0GW-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/
  if (OZ0GM002.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      OZ0G-21100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0GM002.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "23000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If HELP, exit to the previous level or exit to the Master*/
  /* Menu was requested, exit to another application.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3) /* or PF3 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      OZ0GW00.OZ0GW-SWR = "Y";
      OZ0GW00.OZ0GW-SWF = "Y";
      exit stack;
    end


    OZ0G-21100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid attention identifier was used to*/
  /* invoke the transaction.  Display an error message to the*/
  /* user if the PF key used is not supported.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf3   /* and PF3 was not pressed*/
   /* AND EZEAID NOT PF4             /* and*/
   /* PF4 was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf20)

    OZWREC.XXXPRCNM = "23000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    OZ0G-20000(); /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* PF20*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf20)

    OZ0GW00.OZ0GW-SWR = "Y";
    OZ0GW00.OZ0GW-SWF = "Y";

  end

  /* ------------------------------------------------------------*/
  /* enter*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter)
    OZ0GW00.OZ0GW-SWR = "Y";
    OZ0G-20000();
  end
end // end OZ0G-23000


// Reset highlighted fields
Function OZ0G-24000()
  OZ0GW-IXM = 1;

  while (OZ0GW-IXM < 5 && 
  OZ0GM002.OZ0GM-CHG-FLD[OZ0GW-IXM] > " ")

    if (OZ0GM002.OZ0GM-CHG-CD[OZ0GW-IXM] is modified && 
    OZ0GM002.OZ0GM-CHG-CD[OZ0GW-IXM] > "  ")
      OZ0G-24100(); /* chk that input chg rsn is valid*/

      if (SQLCA.VAGen_SQLCODE == 0)
  /* CONTINUE;*/

      else
        set OZ0GM002.OZ0GM-CHG-CD[OZ0GW-IXM] cursor, bold;
        OZWREC.XXXPRCNM = "14000"; /* Module identification*/
        converseLib.validationFailed(42);
        OZ0G-20000();
      end
    end

    OZ0GW-IXM = OZ0GW-IXM + 1;
  end


end // end OZ0G-24000


// Select set and open cursor
Function OZ0G-24100()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set VSOCRC01 empty; /* Clear row storage area*/

  VSOCRC01.XOMCD = OZ0GM002.OZ0GM-CHG-CD[OZ0GW-IXM];

  try
    call "VSOCRC01" ("S ", SQLCA, VSOCRC01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 ||  /* and normal return code*/
    SQLCA.VAGen_SQLCODE == +100)     /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "14100"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOCRC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOCRC01.VSOCRC01-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-24100


// Process valid input request
Function OZ0G-26000()
  OZ0GW00.OZ0GW-SWF = "Y"; /* Format the map switch*/

  OZ0GW-IXM = 1;

  while (OZ0GW-IXM < 5 && 
  OZ0GM002.OZ0GM-CHG-FLD[OZ0GW-IXM] > " ")

    if (OZ0GM002.OZ0GM-CHG-CD[OZ0GW-IXM] > " ")
      OZ0G-26100(); /* build vsohcr01 rec to add*/

    end
    OZ0GW-IXM = OZ0GW-IXM + 1;
  end

  OZ0G-20000();

end // end OZ0G-26000


// build vocldo01 record
Function OZ0G-26100()
  set VSOHCR01 empty;

  VSOHCR01.OP1PARTN = VOCHDR01.OP1PARTN;
  VSOHCR01.OP1CUOID = VOCHDR01.OP1CUOID;
  VSOHCR01.OP1NORID = VOCHDR01.OP1NORID;
  VSOHCR01.SOCD-APPL-SRC-CD = VOCHDR01.SOCD-APPL-SRC-CD;
  VSOHCR01.XOMCD = OZ0GM002.OZ0GM-CHG-CD[OZ0GW-IXM];
  VSOHCR01.SOCD-HDR-RSN-SEQ = 1;
  VSOHCR01.SOCD-GLBL-MNTN-FL = "N";
  VSOHCR01.SOCD-HDR-RSN-TXT = OZ0GM002.OZ0GM-COMMENT[OZ0GW-IXM];

  if (OZ0GM002.OZ0GM-CHG-FLD[OZ0GW-IXM] == "CUST P.O.")
    VSOHCR01.OP1CUPO = OP1REC.OP1CUPO;
  else
    if (OZ0GM002.OZ0GM-CHG-FLD[OZ0GW-IXM] == "NEED DATE")
      VSOHCR01.OP1CUNDT = OP1REC.OP1CUNDT;
    else
      if (OZ0GM002.OZ0GM-CHG-FLD[OZ0GW-IXM] == "PYMT TERM")
        VSOHCR01.XPTCD = OP1REC.XPTCD;
      else
        if (OZ0GM002.OZ0GM-CHG-FLD[OZ0GW-IXM] == "DNSB DATE")
          VSOHCR01.OP1DSBDT = OP1REC.OP1DSBDT;
        else
          if (OZ0GM002.OZ0GM-CHG-FLD[OZ0GW-IXM] == "DNSA DATE")
            VSOHCR01.OP1DSADT = OP1REC.OP1DSADT;
          end
        end
      end
    end
  end

  VSOHCR01.XXX-USER-ID = OZ0GM002.OZ0GM-USERID[OZ0GW-IXM];

  XX0XS01();
  VSOHCR01.ZZZSDT = XX0XW01.XX0XWDAT;
  VSOHCR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VSOHCR01.ZZZSTM = XX0XW01.XX0XWTIM;
  VSOHCR01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VSOHCR01.ZZZCHGCT = 0;

  OZ0GW-SWC = " ";

  while (OZ0GW-SWC == " ")
    OZ0G-26110(); /* add record*/

    if (SQLCA.VAGen_SQLCODE == 0)
      OZ0GW-SWC = "Y";
    else
      if (SQLCA.VAGen_SQLCODE == -803)
        VSOHCR01.SOCD-HDR-RSN-SEQ = VSOHCR01.SOCD-HDR-RSN-SEQ + 1;
      end
    end
  end

  converseLib.validationFailed(46);

end // end OZ0G-26100


// add vsohcr01
Function OZ0G-26110()

  try
    call "VSOHCR01" ("A ", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 ||  /* and normal return code*/
    SQLCA.VAGen_SQLCODE == -803)     /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "16110"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "ADD TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOHCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOHCR01.VSOHCR01-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-26110


// Process to add a new row
Function OZ0G-30000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Format the map output area and display the map.*/
  /* 2) Check the attention identifier used to respond.*/
  /* 3) Reset highlighted fields to normal intensity.*/
  /* 4) Verify the data that was entered.*/
  /* 5) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OZ0G-31000(); /* Obtain data to display*/

  OZ0G-32000(); /* Format and display the map*/

  OZ0G-33000(); /* Check attention identifier*/

  OZ0G-34000(); /* Reset fields to normal intensity*/

  OZ0G-35000(); /* Verify the entered data*/

  OZ0G-36000(); /* Process valid input request*/


end // end OZ0G-30000


// Obtain the data to display
Function OZ0G-31000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/
  if (OZ0GW00.OZ0GW-SWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/
  /* VE 0708 TO oz0gW00.XXXTSLEN;   /*temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/
  if (OZ0GW00.XXXTSPAG == 0) /* no pages established*/
    OZ0GW00.XXXTSPAG = 1; /* Page number to display*/
  end

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/
  OZ0G-31100(); /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Perform screen header edits*/
  /* ------------------------------------------------------------*/
  OZ0G-31200(); /* build screen header*/

  /* ------------------------------------------------------------*/
  /* get the data*/
  /* ------------------------------------------------------------*/
  OZ0G-31300();
end // end OZ0G-31000


// Purge any temporary storage
Function OZ0G-31100()
  OZ0G-31105(); /* purge w05a record*/

  OZ0G-31110(); /* purge w05 record*/

end // end OZ0G-31100


// Purge any temporary storage
Function OZ0G-31105()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/
  OZ0GW00.XXXTSLEN = 2560;

  set OZ0GW03A empty; /* M005 size display*/

  OZ0GW00.OZ0GW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0GW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "OZ3G"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0GW03A, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "31105"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M003"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-31105


// Purge any temporary storage
Function OZ0G-31110()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/
  OZ0GW00.XXXTSLEN = 0448;

  set OZ0GW03 empty; /* M005 size display*/

  OZ0GW00.OZ0GW-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OZ0GW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "OZ4G"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OZ0GW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "31110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M003"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-31110


// screen header edits
Function OZ0G-31200()
  OZ0GM003.OZ0GM-CUST-STR-DPT = OZ0GW00.OZ0GW-SEL-CUST-STR-DPT;

  OZ0G-21220(); /* retrv cmpny name from dcust.vcmpny01*/
  OZ0GM003.OZ0GM-CU-CO-NM-HDR = KUCREC.KUCCONM;
  OZ0GW00.OZ0GW-SEL-CUST-NM-HDR = KUCREC.KUCCONM;

  OZ0GW00.OZ0GW-M3-STYLE = VOCITM01.SY1STNBR;
  OZ0GW00.OZ0GW-M3-COLOR = VOCITM01.SY2CLRID;
  OZ0GW00.OZ0GW-M3-DIM = VOCITM01.XDMCD;
  OZ0GM003.OZ0GM-STYLE-CLR-DIM = OZ0GW00.OZ0GW-M3-STYLE-CLR-DIM;

  OZ0G-31210(); /* read vstyle for description*/
  OZ0GW00.OZ0GW-M3-SY-STY-COLOR-ABRV = SY1REC.SY1SSTNM;

  OZ0G-31220(); /* read vcolor for description*/
  OZ0GW00.OZ0GW-M3-COLOR-NAME = SY2REC.SY2CLRAB;

  OZ0GM003.OZ0GM-SY-STY-COLOR-ABRV = OZ0GW00.OZ0GW-M3-SY-STY-COLOR-ABRV;

  OZ0GM003.OZ0GM-COLOR-NAME = OZ0GW00.OZ0GW-M3-COLOR-NAME;

  OZ0GW00.OZ0GW-UPD-FLG = "N";
  /* -------------------------------------------------------------*/
end // end OZ0G-31200


// call io0120 vstyle01
Function OZ0G-31210()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set SY1REC empty; /* Clear row storage area*/

  SY1REC.SY1STNBR = VOCITM01.SY1STNBR;
  SY1REC.XGPCD = VOCITM01.XGPCD;

  try
    call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31210"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911    /* and resource not available*/
  )                                 
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2  "; /* Type of error*/
  TA1REC.TA1LOC = "READ W/ IO0120 SY1REC";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSTYLE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY1REC.SY1KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-31210


// call io0130 vcolor01
Function OZ0G-31220()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set SY2REC empty; /* Clear row storage area*/

  SY2REC.SY1STNBR = VOCITM01.SY1STNBR;
  SY2REC.SY2CLRID = VOCITM01.SY2CLRID;
  SY2REC.XDMCD = VOCITM01.XDMCD;
  SY2REC.XGPCD = VOCITM01.XGPCD;

  try
    call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31220"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911    /* and resource not available*/
  )                                 
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2  "; /* Type of error*/
  TA1REC.TA1LOC = "READ W/ IO0130 SY2REC";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-31220


// Obtain the data to display
Function OZ0G-31300()
  OZ0G-31305(); /* build ord id work table*/

  OZ0GW-CNT = 1; /* line item index*/

  while (OZ0GW00.OZ0GW-CNT < 5
   && OZ0GW00.OZ0GW-M3-OP-CUST-NEED-DT[OZ0GW-CNT] > 0)

    OZ0G-31310(); /* get sycrec*/
    OZ0G-31315(); /* get size description w/ sycrec*/

    if (OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM] == "OP")
      OZ0G-31320(); /* get size array info from dorder*/
    else
      OZ0G-31322(); /* get size array info from airspeed*/
    end

    OZ0G-31325(); /* get size array info from dordcd*/

    OZ0G-31327(); /* get size array info from sz chg rsn*/

    OZ0GW00.OZ0GW-IXM = 1; /* Display line index*/
    OZ0GW00.OZ0GW-IX1 = 1; /* chg fld index*/
    OZ0GW00.OZ0GW-SV-CNT = 1; /* size array index*/

    while (OZ0GW00.OZ0GW-SV-CNT < 41) /* Until end of array*/

      OZ0G-31330(); /* spin thru sz array*/

      OZ0GW00.OZ0GW-SV-CNT = OZ0GW00.OZ0GW-SV-CNT + 1;

    end

    OZ0GW00.OZ0GW-CNT = OZ0GW00.OZ0GW-CNT + 1;

  end


  if (OZ0GW00.OZ0GW-IXM > 1) /* Page was formatted*/
    OZ0G-31340(); /* Add page to temporary storage*/
    OZ0G-31350(); /* build map pages*/
  end


  if (OZ0GW00.TA5TSQIX == 0) /* No pages formatted*/
    OZWREC.XXXPRCNM = "31300"; /* Module identification*/
    OZWREC.XXXMSGNO = 16; /* No data was found to display*/
    return; /* Return to previous process*/
  end

  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/
  OZ0GW00.OZ0GW-SWR = "N"; /* Request for data switch*/

  /* ------------------------------------------------------------*/
  /* check that all exceptions are resovled*/
  /* ------------------------------------------------------------*/
  if (OZ0GW00.OZ0GW-SR-REC-FLG[1] == " " || 
  OZ0GW00.OZ0GW-SR-REC-FLG[1] == "N")
    if (OZ0GW00.OZ0GW-UPD-FLG == "Y") /* updates performed*/
      OZ0G-21360(); /* update 'ex' record*/
      OZ0G-31370(); /* del ord siz except tbl rec*/
      converseLib.validationFailed(45);
      VGVar.handleSysLibraryErrors = 0;
      sysLib.commit();
    else
      converseLib.validationFailed(47);
    end
    OZ0GW00.OZ0GW-SWF = "Y"; /* Request for data switch*/
    OZ0GW00.OZ0GW-SWR = "Y"; /* Request for data switch*/
    exit stack; /* go back to screen 1*/
  end

end // end OZ0G-31300


// build m5 ord id work table
Function OZ0G-31305()
  set OZAREC empty;
  set OP1REC empty;
  set OP2REC empty;
  set VOCHDR01 empty;

  VOCHDR01.OP1PARTN = VOCITM01.OP1PARTN;
  VOCHDR01.OP1CUOID = VOCITM01.OP1CUOID;
  VOCHDR01.SOCD-CURR-GPC-CD = VOCITM01.XGPCD;
  VOCHDR01.SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];
  OP2REC.SY1STNBR = VOCITM01.SY1STNBR;
  OP2REC.SY2CLRID = VOCITM01.SY2CLRID;
  OP2REC.XDMCD = VOCITM01.XDMCD;

  if (OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM] == "OP")
    OZAREC.IO-TASK = "S3";
  else
    OZAREC.IO-TASK = "S4";
  end

  OZ0G-31306();

  OZ0GW00.OZ0GW-CNT = 1;
  OZ0GW00.OZ0GW-SWC = "N";

  while (OZ0GW00.OZ0GW-SWC == "N")

    OZ0G-31307();

    if (OZ0GW00.OZ0GW-SWC == "N")
      OZ0G-31308(); /* roll up need dates*/
    end

  end

  OZ0G-31309(); /* close cursor*/
end // end OZ0G-31305


// Select set and open cursor
Function OZ0G-31306()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/


  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01, OP2REC) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31306"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCHDR01.VOCHDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-31306


// Select set and open cursor
Function OZ0G-31307()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  if (OZAREC.IO-TASK == "S3")
    OZAREC.IO-TASK = "N3";
  else
    if (OZAREC.IO-TASK == "S4")
      OZAREC.IO-TASK = "N4";
    end
  end

  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01, OP2REC) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
        OZ0GW00.OZ0GW-SWC = "Y";

        return; /* Return to previous process*/

      end
    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31307"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCHDR01.VOCHDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-31307


// roll up need dates
Function OZ0G-31308()
  if (OZ0GW00.OZ0GW-CNT == 1)
    OZ0GW00.OZ0GW-M3-OP-ORIG-NEED-DT = VOCHDR01.OP-ORIG-NEED-DT;
  end

  if (OP1REC.OP1CUNDT == OZ0GW00.OZ0GW-SV-NEED-DT)
  /* continue*/
  else
    OZ0GW00.OZ0GW-M3-OP-CUST-NEED-DT[OZ0GW-CNT] = OP1REC.OP1CUNDT;
    OZ0GW00.OZ0GW-M3-OP-NIKE-ORD-ID[OZ0GW-CNT] = VOCHDR01.OP1NORID;
    OZ0GW00.OZ0GW-M3-LINE-ITEM-NBR[OZ0GW-CNT] = OP2REC.OP2LNINB;
    OZ0GW00.OZ0GW-CNT = OZ0GW00.OZ0GW-CNT + 1;
    OZ0GW00.OZ0GW-SV-NEED-DT = OP1REC.OP1CUNDT;
    OZ0GW00.OZ0GW-M3-CURR-VALUE = OZ0GW00.OZ0GW-M3-CURR-VALUE +     OP2REC.OP2LNIVL;
  end

  if (OZ0GW00.OZ0GW-CNT > 4)
    OZ0GW00.OZ0GW-SWC = "Y";
  end

end // end OZ0G-31308


// Select set and open cursor
Function OZ0G-31309()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  if (OZAREC.IO-TASK == "N3")
    OZAREC.IO-TASK = "C3";
  else
    OZAREC.IO-TASK = "C4";
  end

  try
    call "OZ2080" (OZAREC, SQLCA, OP1REC, VOCHDR01, OP2REC) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31309"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUSTM  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCHDR01.VOCHDR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-31309


// Obtain the data to display
Function OZ0G-31310()


  set SYCREC empty;

  SYCREC.SY1STNBR = VOCITM01.SY1STNBR;
  SYCREC.SY2CLRID = VOCITM01.SY2CLRID;
  SYCREC.XDMCD = VOCITM01.XDMCD;
  SYCREC.XGPCD = VOCITM01.XGPCD;

  call "IO0560" ("S ", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes};

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or no record found*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "51310"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR02"; /* Table view name*/
  TA1REC.TA1TBLKE = SYCREC.SYCKEY;

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/



end // end OZ0G-31310


// Obtain the data to display
Function OZ0G-31315()


  set SY4REC empty;

  SY4REC.SY4SZSCL = SYCREC.SY4SZSCL;

  call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* no record found*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31315"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSCALE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY4REC.SY4SZSCL;

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/



end // end OZ0G-31315


// Obtain the data to display
Function OZ0G-31320()


  set SY4REC empty;

  SY4REC.SY4SZSCL = SYCREC.SY4SZSCL;

  call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* no record found*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31315"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSCALE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY4REC.SY4SZSCL;

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/



end // end OZ0G-31320


// Obtain the data to display
Function OZ0G-31322()
       /* **************************************************/
       /* *    SELECT ITEM /SIZE RECORD                   **/
       /* **************************************************/
  set OP3REC empty;
  set OB3REC empty;
  set OBSFREC empty;
  set SQLCA empty;

  OB3REC.OP1PARTN = VOCITM01.OP1PARTN;
  OB3REC.OP1CUOID = VOCITM01.OP1CUOID;
  OB3REC.OP1NORID = OZ0GW00.OZ0GW-M3-OP-NIKE-ORD-ID[OZ0GW-CNT];
  OB3REC.OP2LNINB = OZ0GW00.OZ0GW-M3-LINE-ITEM-NBR[OZ0GW-CNT]; /* line item*/


  OBSFREC.OBSF-TASK = "S ";
  OBSFREC.OBSF-CALLER-LOC-1 = "S       ";
  OBSFREC.OBSF-CALLER-LOC-2 = "OB1690  ";
  OBSFREC.OBSF-CALLER-LOC-3 = "31322   ";
  OBSFREC.OBSF-CALLING-APPL = "OZ0G";
  OBSFREC.OB3GROUP = OB3REC.OB3GROUP;
  OBSFREC.OBSF-RETURN-CD = 99;

  call "OB1690" (OBSFREC) {isNoRefresh = yes, isExternal = yes};

  OB3REC.OB3GROUP = OBSFREC.OB3GROUP;
  OP3REC.OP1PARTN = OB3REC.OP1PARTN;
  OP3REC.OP1CUOID = OB3REC.OP1CUOID;
  OP3REC.OP1NORID = OB3REC.OP1NORID;
  OP3REC.OP2LNINB = OB3REC.OP2LNINB;
  OP3REC.ZZZCHGDT = OB3REC.ZZZCHGDT;
  OP3REC.ZZZCHGTM = OB3REC.ZZZCHGTM;

  OZ0GW00.OZ0GW-WKIDX = 1;
  while (OZ0GW00.OZ0GW-WKIDX < 41)
    OP3REC.OP3SZAFL[OZ0GW-WKIDX] = OB3REC.OP3SZAFL[OZ0GW-WKIDX];
    OP3REC.SY5PRCUN[OZ0GW-WKIDX] = OB3REC.SY5PRCUN[OZ0GW-WKIDX];
    OP3REC.OP3ONOQT[OZ0GW-WKIDX] = OB3REC.OP3ONOQT[OZ0GW-WKIDX];

    OZ0GW00.OZ0GW-WKIDX = OZ0GW00.OZ0GW-WKIDX + 1;
  end

  if (OBSFREC.OBSF-RETURN-CD == 0 /* good return*/
   || OBSFREC.OBSF-RETURN-CD == 1 /* or no sizes*/
   || OBSFREC.OBSF-RETURN-CD == 11) /* or no sizes*/
    return; /* select product info*/
  else

    TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
    move SQLCA to ERRSQLCA withV60Compat;

    OZWREC.XXXPRCNM = "31322"; /* Module identification*/

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

      converseLib.validationFailed(11); /* Data in use by another*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(10); /* Unexpected error occurred*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before display*/

    end


    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBITEM01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "OB1690  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0GS09 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = OBSFREC.OBSF-RETURN-CD; /* return code*/
    TA1REC.TA1TBLKE = OBSFREC.OBSF-DIAG-KEY; /* table key*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROW";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/

    call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    OZ0G-30000(); /* Exit to display map*/

  end



end // end OZ0G-31322


// Obtain the data to display
Function OZ0G-31325()

  set WOZ2110 empty;
  set WOZSZRUN empty;
  set WOZSZRNR empty;
  set WOZSZRNP empty;
  set SQLCA empty;

  WOZSZRUN.SZRUN-OP-ORD-PART-CHAR = OP3REC.OP1PARTN;
  WOZSZRUN.SZRUN-OP-CUST-ORD-ID = OP3REC.OP1CUOID;
  WOZSZRUN.SZRUN-OP-NIKE-ORD-ID = OP3REC.OP1NORID;
  WOZSZRUN.SZRUN-OP-LINE-ITEM-NBR = OP3REC.OP2LNINB;
  WOZSZRUN.SZRUN-SOCD-APPL-SRC-CD = VOCITM01.SOCD-APPL-SRC-CD;
  WOZSZRNP.SZRUN-TASK = "S ";

  WOZ2110.SZRUN-RECORD = WOZSZRUN.SZRUN-RECORD;
  WOZ2110.SZRUN-RETURN-INFO = WOZSZRNR.SZRUN-RETURN-INFO;
  WOZ2110.SZRUN-PASS-INFO = WOZSZRNP.SZRUN-PASS-INFO;

  call "OZ2110" (WOZ2110) {isNoRefresh = yes, isExternal = yes};

  WOZSZRUN.SZRUN-RECORD = WOZ2110.SZRUN-RECORD;
  WOZSZRNR.SZRUN-RETURN-INFO = WOZ2110.SZRUN-RETURN-INFO;
  WOZSZRNP.SZRUN-PASS-INFO = WOZ2110.SZRUN-PASS-INFO;
  SQLCA.SQLCAREC = WOZ2110.SZRUN-SQLCA;

  if (WOZSZRNR.SZRUN-RETURN-CODE == 0 /* good return code*/
   || WOZSZRNR.SZRUN-RETURN-CODE == 1) /* no record found*/
    return;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "OZ0G    ";
    TA1REC.TA1LOCAT[1] = "SELECT  ";
    TA1REC.TA1LOCAT[2] = WOZSZRNR.SZRUN-RETURN-CODE;
    TA1REC.TA1LOCAT[3] = "-31325  ";
    TA1REC.TA1LOCAT[4] = "OZ2110  ";
    TA1REC.TA1MAP = "OZ0GM003";
    TA1REC.TA1DBASE = "DORDCD  ";
    TA1REC.TA1TBLVU = "VOCSIZ01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    exit stack;
  end


end // end OZ0G-31325


// Obtain the data to display
Function OZ0G-31327()
  set WOZ2150 empty;
  set SQLCA empty;

  WOZ2150.OZRUN-OP-ORD-PART-CHAR = OP3REC.OP1PARTN;
  WOZ2150.OZRUN-OP-CUST-ORD-ID = OP3REC.OP1CUOID;
  WOZ2150.OZRUN-OP-NIKE-ORD-ID = OP3REC.OP1NORID;
  WOZ2150.OZRUN-OP-LINE-ITEM-NBR = OP3REC.OP2LNINB;
  WOZ2150.OZRUN-SOCD-APPL-SRC-CD = VOCITM01.SOCD-APPL-SRC-CD;
  WOZ2150.OZRUN-TASK = "S ";


  call "OZ2150" (WOZ2150) {isNoRefresh = yes, isExternal = yes};

  SQLCA.SQLCAREC = WOZ2150.OZRUN-SQLCA;

  if (WOZ2150.OZRUN-RETURN-CODE == 0 /* good return code*/
   || WOZ2150.OZRUN-RETURN-CODE == 1 /* no record found*/
   || WOZ2150.OZRUN-RETURN-CODE == 11) /* no record found*/
    return;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "OZ0G    ";
    TA1REC.TA1LOCAT[1] = "SELECT  ";
    TA1REC.TA1LOCAT[2] = WOZ2150.OZRUN-RETURN-CODE;
    TA1REC.TA1LOCAT[3] = "-31327  ";
    TA1REC.TA1LOCAT[4] = "OZ2150  ";
    TA1REC.TA1MAP = "OZ0GM003";
    TA1REC.TA1DBASE = "DORDCD  ";
    TA1REC.TA1TBLVU = "VSOSCR01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    exit stack;
  end

end // end OZ0G-31327


// Save data in display storage
Function OZ0G-31330()

  if (WOZSZRUN.SZRUN-OP-ORIG-ORD-QTY[OZ0GW-SV-CNT] > 0
   && OP3REC.OP3SZAFL[OZ0GW-SV-CNT] == "Y") /* if size is active*/

    OZ0GW03A.OZ0GW-SIZE[OZ0GW-IXM] = SY4REC.SY4IDDSC[OZ0GW-SV-CNT];

    OZ0GW03A.OZ0GW-REQ-QTY[OZ0GW-IXM] = WOZSZRUN.SZRUN-OP-ORIG-ORD-QTY[OZ0GW-SV-CNT];

    OZ0GW03A.OZ0GW-ORIG-PRICE[OZ0GW-IXM] = WOZSZRUN.SZRUN-SY-PRC-PER-UNIT[OZ0GW-SV-CNT];

    OZ0GW03A.OZ0GW-GRP-SEQ[OZ0GW-IXM] = WOZSZRUN.SZRUN-GRP-SEQ[OZ0GW-SV-CNT];

    OZ0GW03A.OZ0GW-QTY-SEQ[OZ0GW-IXM] = WOZSZRUN.SZRUN-QTY-SEQ[OZ0GW-SV-CNT];

    OZ0GW03A.OZ0GW-CURR-PRICE[OZ0GW-IXM] = OP3REC.SY5PRCUN[OZ0GW-SV-CNT];

    if (OZ0GW00.OZ0GW-CNT == 1)
      OZ0GW03A.OZ0GW-AVAIL-QTY-1[OZ0GW-IXM] = OP3REC.OP3ONOQT[OZ0GW-SV-CNT];
      OZ0GW00.OZ0GW-SV-TOT-AVAIL-1 = OZ0GW00.OZ0GW-SV-TOT-AVAIL-1 +       OP3REC.OP3ONOQT[OZ0GW-SV-CNT]; /* avail total*/
    end

    if (OZ0GW00.OZ0GW-CNT == 2)
      OZ0GW03A.OZ0GW-AVAIL-QTY-2[OZ0GW-IXM] = OP3REC.OP3ONOQT[OZ0GW-SV-CNT];
      OZ0GW00.OZ0GW-SV-TOT-AVAIL-2 = OZ0GW00.OZ0GW-SV-TOT-AVAIL-2 +       OP3REC.OP3ONOQT[OZ0GW-SV-CNT]; /* avail total*/
    end

    if (OZ0GW00.OZ0GW-CNT == 3)
      OZ0GW03A.OZ0GW-AVAIL-QTY-3[OZ0GW-IXM] = OP3REC.OP3ONOQT[OZ0GW-SV-CNT];
      OZ0GW00.OZ0GW-SV-TOT-AVAIL-3 = OZ0GW00.OZ0GW-SV-TOT-AVAIL-3 +       OP3REC.OP3ONOQT[OZ0GW-SV-CNT]; /* avail total*/
    end

    if (OZ0GW00.OZ0GW-CNT == 4)
      OZ0GW03A.OZ0GW-AVAIL-QTY-4[OZ0GW-IXM] = OP3REC.OP3ONOQT[OZ0GW-SV-CNT];
      OZ0GW00.OZ0GW-SV-TOT-AVAIL-4 = OZ0GW00.OZ0GW-SV-TOT-AVAIL-4 +       OP3REC.OP3ONOQT[OZ0GW-SV-CNT]; /* avail total*/
    end

  /* -------------------------------------------------------------*/
  /* determine discrepancies*/
  /* -------------------------------------------------------------*/
    if (WOZSZRUN.SZRUN-OP-ORIG-ORD-QTY[OZ0GW-SV-CNT] == 
    OP3REC.OP3ONOQT[OZ0GW-SV-CNT] && 
    WOZSZRUN.SZRUN-SY-PRC-PER-UNIT[OZ0GW-SV-CNT] == 
    OP3REC.SY5PRCUN[OZ0GW-SV-CNT])
  /* continue*/
    else
      if (WOZ2150.OZRUN-OP-ON-ORD-QTY[OZ0GW-SV-CNT] > 0 || 
      WOZ2150.OZRUN-SY-PRC-PER-UNIT[OZ0GW-SV-CNT] > 0)
  /* continue*/
      else
        if (WOZSZRUN.SZRUN-OP-ORIG-ORD-QTY[OZ0GW-SV-CNT] != 
        OP3REC.OP3ONOQT[OZ0GW-SV-CNT] && 
        WOZ2150.OZRUN-OP-ON-ORD-QTY[OZ0GW-SV-CNT] == 0)

          OZ0GW00.OZ0GW-SR-SZ-ID[OZ0GW-IX1] = OZ0GW-SV-CNT;
          OZ0GW00.OZ0GW-SR-REC-FLG[OZ0GW-IX1] = "Y";
          OZ0GW00.OZ0GW-SR-LINE[OZ0GW-IX1] = OP3REC.OP2LNINB;
          OZ0GW00.OZ0GW-SR-GRP-SEQ[OZ0GW-IX1] = WOZSZRUN.SZRUN-GRP-SEQ[OZ0GW-SV-CNT];
          OZ0GW00.OZ0GW-SR-QTY-SEQ[OZ0GW-IX1] = WOZSZRUN.SZRUN-QTY-SEQ[OZ0GW-SV-CNT];
          OZ0GW00.OZ0GW-SR-CHG-FLD[OZ0GW-SV-CNT] = "ITEM QTY";
          OZ0GW00.OZ0GW-SR-CHG-VALUE-NUM[OZ0GW-IX1] = OP3REC.OP3ONOQT[OZ0GW-SV-CNT];
          OZ0GW00.OZ0GW-SR-DATE[OZ0GW-IX1] = OP3REC.ZZZCHGDT;
          OZ0GW00.OZ0GW-SR-TIME[OZ0GW-IX1] = OP3REC.ZZZCHGTM;
          OZ0GW00.OZ0GW-IX1 = OZ0GW00.OZ0GW-IX1 + 1;
        end

        if (WOZSZRUN.SZRUN-SY-PRC-PER-UNIT[OZ0GW-SV-CNT] != 
        OP3REC.SY5PRCUN[OZ0GW-SV-CNT] && 
        WOZ2150.OZRUN-SY-PRC-PER-UNIT[OZ0GW-SV-CNT] == 0)

          OZ0GW00.OZ0GW-SR-SZ-ID[OZ0GW-IX1] = OZ0GW-SV-CNT;
          OZ0GW00.OZ0GW-SR-REC-FLG[OZ0GW-IX1] = "Y";
          OZ0GW00.OZ0GW-SR-LINE[OZ0GW-IX1] = OP3REC.OP2LNINB;
          OZ0GW00.OZ0GW-SR-GRP-SEQ[OZ0GW-IX1] = WOZSZRUN.SZRUN-GRP-SEQ[OZ0GW-SV-CNT];
          OZ0GW00.OZ0GW-SR-QTY-SEQ[OZ0GW-IX1] = WOZSZRUN.SZRUN-QTY-SEQ[OZ0GW-SV-CNT];
          OZ0GW00.OZ0GW-SR-CHG-FLD[OZ0GW-IX1] = "ITEM PRICE";

          OZ0GW00.OZ0GW-SR-CHG-VALUE-NUM[OZ0GW-IX1] = OP3REC.SY5PRCUN[OZ0GW-SV-CNT];

          OZ0GW00.OZ0GW-SV-DEC = OP3REC.SY5PRCUN[OZ0GW-SV-CNT];
          OZ0GW00.OZ0GW-VALUE-FIELD = OZ0GW00.OZ0GW-SV-DEC-INT;

          OZ0GW00.OZ0GW-WKIDX = 1;
          while (OZ0GW00.OZ0GW-WKIDX < 11
           && OZ0GW00.OZ0GW-VALUE-BRK[OZ0GW-WKIDX] == 0)
            OZ0GW00.OZ0GW-VALUE-BRK[OZ0GW-WKIDX] = " ";
            OZ0GW00.OZ0GW-WKIDX = OZ0GW00.OZ0GW-WKIDX + 1;
          end

          OZ0GW00.OZ0GW-VB-INT = OZ0GW00.OZ0GW-VALUE-FIELD;
          OZ0GW00.OZ0GW-VB-DOT = ".";
          OZ0GW00.OZ0GW-VB-DEC = OZ0GW00.OZ0GW-SV-DECIMAL;

          OZ0GW00.OZ0GW-SR-CHG-VALUE[OZ0GW-IX1] = OZ0GW00.OZ0GW-VALUE-BUILD;

          OZ0GW00.OZ0GW-SR-DATE[OZ0GW-IX1] = OP3REC.ZZZCHGDT;
          OZ0GW00.OZ0GW-SR-TIME[OZ0GW-IX1] = OP3REC.ZZZCHGTM;
          OZ0GW00.OZ0GW-IX1 = OZ0GW00.OZ0GW-IX1 + 1;

        end
      end
    end


    OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1;

  end

end // end OZ0G-31330


// Add page to temporary storage
Function OZ0G-31340()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OZ0GW03A.XXXTSLEN = 2560; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ3G"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OZ0GW03A, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OZ0GW03A empty; /* M001 display storage*/

    OZ0GW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "31340"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M003"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  OZ0G-30000(); /* Exit to display map*/


end // end OZ0G-31340


// Close selected set cursor
Function OZ0G-31350()
  OZ0G-31351(); /* get w03a temp storage*/

  OZ0GW00.OZ0GW-IXM = 1;
  OZ0GW00.OZ0GW-SV-CNT = 1;

  while (OZ0GW03A.OZ0GW-SIZE[OZ0GW-SV-CNT] > " ")

    OZ0GW03.OZ0GW-SIZE[OZ0GW-IXM] = OZ0GW03A.OZ0GW-SIZE[OZ0GW-SV-CNT];
    OZ0GW03.OZ0GW-REQ-QTY[OZ0GW-IXM] = OZ0GW03A.OZ0GW-REQ-QTY[OZ0GW-SV-CNT];

    OZ0GW03.OZ0GW-AVAIL-QTY-1[OZ0GW-IXM] = OZ0GW03A.OZ0GW-AVAIL-QTY-1[OZ0GW-SV-CNT];

    OZ0GW03.OZ0GW-AVAIL-QTY-2[OZ0GW-IXM] = OZ0GW03A.OZ0GW-AVAIL-QTY-2[OZ0GW-SV-CNT];

    OZ0GW03.OZ0GW-AVAIL-QTY-3[OZ0GW-IXM] = OZ0GW03A.OZ0GW-AVAIL-QTY-3[OZ0GW-SV-CNT];

    OZ0GW03.OZ0GW-AVAIL-QTY-4[OZ0GW-IXM] = OZ0GW03A.OZ0GW-AVAIL-QTY-4[OZ0GW-SV-CNT];

    OZ0GW03.OZ0GW-ORIG-PRICE[OZ0GW-IXM] = OZ0GW03A.OZ0GW-ORIG-PRICE[OZ0GW-SV-CNT];

    OZ0GW03.OZ0GW-CURR-PRICE[OZ0GW-IXM] = OZ0GW03A.OZ0GW-CURR-PRICE[OZ0GW-SV-CNT];

    OZ0GW00.OZ0GW-SV-CNT = OZ0GW00.OZ0GW-SV-CNT + 1;
    OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1;

    if (OZ0GW00.OZ0GW-IXM > 7)
      OZ0G-31352(); /* write map page*/
      OZ0GW00.OZ0GW-IXM = 1;
    end

  end

  if (OZ0GW00.OZ0GW-IXM > 1)
    OZ0G-31352(); /* write map page*/
  end

end // end OZ0G-31350


// Read temporary storage page
Function OZ0G-31351()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OZ0GW03A.XXXTSLEN = 2560; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ3G"; /* Application identification*/
  TA5REC.TA5TSQIX = 1; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OZ0GW03A, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "51351"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M005"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-31351


// Add page to temporary storage
Function OZ0G-31352()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OZ0GW03.XXXTSLEN = 0448; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ4G"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OZ0GW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OZ0GW03 empty; /* M001 display storage*/

    OZ0GW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "51352"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M005"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-31352


// delete vochde01 record
Function OZ0G-31370()
  set VOCSIE01 empty;
  set SQLCA empty;

  VOCSIE01.OP1PARTN = OZ0GW01.OZ0GW-OP-ORD-PART-CHAR[OZ0GW-IXM];
  VOCSIE01.OP1CUOID = OZ0GW01.OZ0GW-OP-CUST-ORD-ID[OZ0GW-IXM];
  VOCSIE01.OP1NORID = OZ0GW01.OZ0GW-OP-NIKE-ORD-ID[OZ0GW-IXM];
  VOCSIE01.SOCD-APPL-SRC-CD = OZ0GW01.OZ0GW-SOCD-APPL-SRC-CD[OZ0GW-IXM];
  VOCSIE01.OP2LNINB = OZ0GW01.OZ0GW-OP-LINE-ITEM-NBR[OZ0GW-IXM];
  VOCSIE01.OP-SZ-GRP-SEQ = OZ0GW01.OZ0GW-OP-SZ-GRP-SEQ[OZ0GW-IXM];
  VOCSIE01.SOCD-ORD-XCEP-CD = OZ0GW01.OZ0GW-TYPE[OZ0GW-IXM];

  try
    call "VOCSIE01" ("D ", SQLCA, VOCSIE01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      OZ0GW00.OZ0GW-SWC = "Y"; /* Indicate end of cursor*/

      return; /* Return to previous process*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31370"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCSIE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOCSIE01.VOCSIE01-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-31370


// Format and converse the map
Function OZ0G-32000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OZWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OZ0GW00.OZ0GW-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OZ0GW00.OZ0GW-SWF == "Y") /* Map must be formatted*/
                                   /* save header info*/
      OZ0GW00.OZ0GW-M2-CUST-STR-DPT = OZ0GM003.OZ0GM-CUST-STR-DPT;
      OZ0GW00.OZ0GW-M2-CU-CO-NM-HDR = OZ0GM003.OZ0GM-CU-CO-NM-HDR;
      OZ0GW00.OZ0GW-M3-STYLE-CLR-DIM = OZ0GM003.OZ0GM-STYLE-CLR-DIM;
      OZ0GW00.OZ0GW-M3-SY-STY-COLOR-ABRV = OZ0GM003.OZ0GM-SY-STY-COLOR-ABRV;
      OZ0GW00.OZ0GW-M3-COLOR-NAME = OZ0GM003.OZ0GM-COLOR-NAME;

      OZ0G-32100(); /* Format the data on the map*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZ0GM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OZ0GM003.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OZ0GM003.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OZWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OZWREC.XXXMSGNO != 0) /* Message to display*/

      if (OZWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OZWREC.XXXMSGNO);
      end /* Message number*/
    else
      OZ0GM003.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OZ0GM003.XXXPRCNM = OZWREC.XXXPRCNM; /* Module identification*/

    set OZ0GM003 alarm; /* Indicate sound alarm*/

  end

  converse OZ0GM003 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OZWREC.XXXPRCNM = " "; /* Module identification*/
  OZWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = OZ0GM003.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OZ0GM003.CAITEM; /* Application data*/

end // end OZ0G-32000


// Format the display data
Function OZ0G-32100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set OZ0GM003 initial;

  OZ0GW00.OZ0GW-SWF = "N"; /* Format the map switch*/

  /* ------------------------------------------------------------*/
  /* If a ruling was added, get the page from temp storage that the*/
  /* ruling's on and display it.*/
  /* ------------------------------------------------------------*/

  if (OZ0GW00.OZ0GW-SAVE-PAGE != 0) /* if page saved off*/

    OZ0GW00.XXXTSPAG = OZ0GW00.OZ0GW-SAVE-PAGE; /* use saved page*/

    OZ0G-32110(); /* Obtain temporary storage page*/

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set OZ0GM003.XXXLITPG skip; /* "PAGE" literal*/
    OZ0GM003.XXXTSPAG = OZ0GW00.XXXTSPAG; /* Current page*/
    set OZ0GM003.XXXLITOF skip; /* "OF" literal*/
    OZ0GM003.TA5TSQIX = OZ0GW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
    OZ0GW00.OZ0GW-IXM = 1; /* Initialize map index*/
    while (OZ0GW00.OZ0GW-IXM < 8) /* Until screen is full*/

      OZ0GM003.OZ0GM-SIZE[OZ0GW-IXM] = OZ0GW03.OZ0GW-SIZE[OZ0GW-IXM];

      OZ0GM003.OZ0GM-REQ-QTY[OZ0GW-IXM] = OZ0GW03.OZ0GW-REQ-QTY[OZ0GW-IXM];

      OZ0GM003.OZ0GM-AVAIL-QTY-1[OZ0GW-IXM] = OZ0GW03.OZ0GW-AVAIL-QTY-1[OZ0GW-IXM];

      OZ0GM003.OZ0GM-AVAIL-QTY-2[OZ0GW-IXM] = OZ0GW03.OZ0GW-AVAIL-QTY-2[OZ0GW-IXM];

      OZ0GM003.OZ0GM-AVAIL-QTY-3[OZ0GW-IXM] = OZ0GW03.OZ0GW-AVAIL-QTY-3[OZ0GW-IXM];

      OZ0GM003.OZ0GM-AVAIL-QTY-4[OZ0GW-IXM] = OZ0GW03.OZ0GW-AVAIL-QTY-4[OZ0GW-IXM];

      OZ0GM003.OZ0GM-ORIG-PRICE[OZ0GW-IXM] = OZ0GW03.OZ0GW-ORIG-PRICE[OZ0GW-IXM];

      OZ0GM003.OZ0GM-CURR-PRICE[OZ0GW-IXM] = OZ0GW03.OZ0GW-CURR-PRICE[OZ0GW-IXM];

      OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1;
                                   /* Increment map index*/

    end

    OZ0GW00.OZ0GW-IX1 = 1;

    while (OZ0GW00.OZ0GW-IX1 < 3 && 
    OZ0GW00.OZ0GW-SR-REC-FLG[OZ0GW-IX1] == "Y")

      OZ0GM003.OZ0GM-CHG-FLD[OZ0GW-IX1] = OZ0GW00.OZ0GW-SR-CHG-FLD[OZ0GW-IX1];
      OZ0GM003.OZ0GM-CHG-VALUE[OZ0GW-IX1] = OZ0GW00.OZ0GW-SR-CHG-VALUE[OZ0GW-IX1];

      OZ0GW00.OZ0GW-DATE-BRK = OZ0GW00.OZ0GW-SR-DATE[OZ0GW-IX1];
      OZ0GW00.OZ0GW-DM-YY = OZ0GW00.OZ0GW-DB-YY;
      OZ0GW00.OZ0GW-DM-MM = OZ0GW00.OZ0GW-DB-MM;
      OZ0GW00.OZ0GW-DM-DD = OZ0GW00.OZ0GW-DB-DD;
      OZ0GW00.OZ0GW-DM-DASH1 = "-";
      OZ0GW00.OZ0GW-DM-DASH2 = "-";
      OZ0GM003.OZ0GM-DATE[OZ0GW-IX1] = OZ0GW00.OZ0GW-DATE-MK;

      OZ0GW00.OZ0GW-TIME-BRK = OZ0GW00.OZ0GW-SR-TIME[OZ0GW-IX1];
      OZ0GW00.OZ0GW-TM-HH = OZ0GW00.OZ0GW-TB-HH;
      OZ0GW00.OZ0GW-TM-MM = OZ0GW00.OZ0GW-TB-MM;
      OZ0GW00.OZ0GW-TM-CL = ":";
      OZ0GM003.OZ0GM-TIME[OZ0GW-IX1] = OZ0GW00.OZ0GW-TIME-MK;

      OZ0GW00.OZ0GW-IX1 = OZ0GW00.OZ0GW-IX1 + 1;


    end

  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/

  else
    if (OZ0GW00.TA5TSQIX > 0) /* Pages were formatted*/

      if (OZ0GW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/

        if (OZ0GW00.OZ0GW-SWU == "Y") /* Current page was changed*/

          OZ0G-32120(); /* Update temporary storage page*/

          OZ0GW00.OZ0GW-SWU = "N"; /* Storage update switch*/

        end

        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/

        if (OZ0GW00.XXXTSPAG > OZ0GW00.TA5TSQIX) /* Desired greater highest*/
          OZ0GW00.XXXTSPAG = OZ0GW00.TA5TSQIX; /* Default to highest*/
        end

        OZ0G-32110(); /* Obtain temporary storage page*/

      end

      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/

      set OZ0GM003.XXXLITPG skip; /* "PAGE" literal*/
      OZ0GM003.XXXTSPAG = OZ0GW00.XXXTSPAG; /* Current page*/
      set OZ0GM003.XXXLITOF skip; /* "OF" literal*/
      OZ0GM003.TA5TSQIX = OZ0GW00.TA5TSQIX; /* Highest page*/

  /* --------------------------------------------------------------*/
  /* build the detail part of the map*/
  /* --------------------------------------------------------------*/
      OZ0GW00.OZ0GW-IXM = 1; /* Initialize map index*/
      while (OZ0GW00.OZ0GW-IXM < 8) /* Until screen is full*/

        OZ0GM003.OZ0GM-SIZE[OZ0GW-IXM] = OZ0GW03.OZ0GW-SIZE[OZ0GW-IXM];

        OZ0GM003.OZ0GM-REQ-QTY[OZ0GW-IXM] = OZ0GW03.OZ0GW-REQ-QTY[OZ0GW-IXM];

        OZ0GM003.OZ0GM-AVAIL-QTY-1[OZ0GW-IXM] = OZ0GW03.OZ0GW-AVAIL-QTY-1[OZ0GW-IXM];

        OZ0GM003.OZ0GM-AVAIL-QTY-2[OZ0GW-IXM] = OZ0GW03.OZ0GW-AVAIL-QTY-2[OZ0GW-IXM];

        OZ0GM003.OZ0GM-AVAIL-QTY-3[OZ0GW-IXM] = OZ0GW03.OZ0GW-AVAIL-QTY-3[OZ0GW-IXM];

        OZ0GM003.OZ0GM-AVAIL-QTY-4[OZ0GW-IXM] = OZ0GW03.OZ0GW-AVAIL-QTY-4[OZ0GW-IXM];

        OZ0GM003.OZ0GM-ORIG-PRICE[OZ0GW-IXM] = OZ0GW03.OZ0GW-ORIG-PRICE[OZ0GW-IXM];

        OZ0GM003.OZ0GM-CURR-PRICE[OZ0GW-IXM] = OZ0GW03.OZ0GW-CURR-PRICE[OZ0GW-IXM];

        OZ0GW00.OZ0GW-IXM = OZ0GW00.OZ0GW-IXM + 1;
                                   /* Increment map index*/

      end


      OZ0GW00.OZ0GW-IX1 = 1;

      while (OZ0GW00.OZ0GW-IX1 < 3 && 
      OZ0GW00.OZ0GW-SR-REC-FLG[OZ0GW-IX1] == "Y")

        OZ0GM003.OZ0GM-CHG-FLD[OZ0GW-IX1] = OZ0GW00.OZ0GW-SR-CHG-FLD[OZ0GW-IX1];
        OZ0GM003.OZ0GM-CHG-VALUE[OZ0GW-IX1] = OZ0GW00.OZ0GW-SR-CHG-VALUE[OZ0GW-IX1];

        OZ0GW00.OZ0GW-DATE-BRK = OZ0GW00.OZ0GW-SR-DATE[OZ0GW-IX1];
        OZ0GW00.OZ0GW-DM-YY = OZ0GW00.OZ0GW-DB-YY;
        OZ0GW00.OZ0GW-DM-MM = OZ0GW00.OZ0GW-DB-MM;
        OZ0GW00.OZ0GW-DM-DD = OZ0GW00.OZ0GW-DB-DD;
        OZ0GW00.OZ0GW-DM-DASH1 = "-";
        OZ0GW00.OZ0GW-DM-DASH2 = "-";
        OZ0GM003.OZ0GM-DATE[OZ0GW-IX1] = OZ0GW00.OZ0GW-DATE-MK;

        OZ0GW00.OZ0GW-TIME-BRK = OZ0GW00.OZ0GW-SR-TIME[OZ0GW-IX1];
        OZ0GW00.OZ0GW-TM-HH = OZ0GW00.OZ0GW-TB-HH;
        OZ0GW00.OZ0GW-TM-MM = OZ0GW00.OZ0GW-TB-MM;
        OZ0GW00.OZ0GW-TM-CL = ":";
        OZ0GM003.OZ0GM-TIME[OZ0GW-IX1] = OZ0GW00.OZ0GW-TIME-MK;

        OZ0GW00.OZ0GW-IX1 = OZ0GW00.OZ0GW-IX1 + 1;


      end

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the header on the map from the display storage.*/
  /* ------------------------------------------------------------*/

  OZ0GM003.OZ0GM-CUST-STR-DPT = OZ0GW00.OZ0GW-M2-CUST-STR-DPT;
  OZ0GM003.OZ0GM-CU-CO-NM-HDR = OZ0GW00.OZ0GW-M2-CU-CO-NM-HDR;

  OZ0GM003.OZ0GM-STYLE-CLR-DIM = OZ0GW00.OZ0GW-M3-STYLE-CLR-DIM;
  OZ0GM003.OZ0GM-SY-STY-COLOR-ABRV = OZ0GW00.OZ0GW-M3-SY-STY-COLOR-ABRV;
  OZ0GM003.OZ0GM-COLOR-NAME = OZ0GW00.OZ0GW-M3-COLOR-NAME;

  /* VE OZ0GW00.OZ0GW-SV-TOT-REQ-QTY TO OZ0GM003.OZ0GM-TOT-REQ-QTY;*/
  /* VE OZ0GW00.OZ0GW-SV-TOT-ORIG-VAL TO OZ0GM003.OZ0GM-ORIG-VALUE;*/
  /* VE OZ0GW00.OZ0GW-SV-TOT-CURR-VAL TO OZ0GM003.OZ0GM-CURR-VALUE;*/

  OZ0GW00.OZ0GW-ND-MM = OZ0GW00.OZ0GW-M3-OOND-MM;
  OZ0GW00.OZ0GW-ND-SLASH = "/";
  OZ0GW00.OZ0GW-ND-DD = OZ0GW00.OZ0GW-M3-OOND-DD;
  OZ0GM003.OZ0GM-OP-ORIG-NEED-DT = OZ0GW00.OZ0GW-NEED-DATE;

  if (OZ0GW00.OZ0GW-SV-TOT-AVAIL-1 > 0)
  /* MOVE OZ0GW00.OZ0GW-SV-TOT-AVAIL-1 TO OZ0GM003.OZ0GM-AVAIL-TOT-QTY-1;*/
    OZ0GM003.OZ0GM-AVAIL-HDR[1] = "AVAIL";

    OZ0GW00.OZ0GW-ND-MM = OZ0GW00.OZ0GW-M3-OCND-MM[1];
    OZ0GW00.OZ0GW-ND-SLASH = "/";
    OZ0GW00.OZ0GW-ND-DD = OZ0GW00.OZ0GW-M3-OCND-DD[1];
    OZ0GM003.OZ0GM-OP-CUST-NEED-DT[1] = OZ0GW00.OZ0GW-NEED-DATE;

  end

  if (OZ0GW00.OZ0GW-SV-TOT-AVAIL-2 > 0)
  /* MOVE OZ0GW00.OZ0GW-SV-TOT-AVAIL-2 TO OZ0GM003.OZ0GM-AVAIL-TOT-QTY-2;*/
    OZ0GM003.OZ0GM-AVAIL-HDR[2] = "AVAIL";
  /* MOVE OZ0GW00.OZ0GW-m3-OP-CUST-NEED-DT(2)*/
  /* TO OZ0Gm003.OZ0GM-OP-CUST-NEED-DT(2);*/
    OZ0GW00.OZ0GW-ND-MM = OZ0GW00.OZ0GW-M3-OCND-MM[2];
    OZ0GW00.OZ0GW-ND-SLASH = "/";
    OZ0GW00.OZ0GW-ND-DD = OZ0GW00.OZ0GW-M3-OCND-DD[2];
    OZ0GM003.OZ0GM-OP-CUST-NEED-DT[2] = OZ0GW00.OZ0GW-NEED-DATE;
  end

  if (OZ0GW00.OZ0GW-SV-TOT-AVAIL-3 > 0)
  /* MOVE OZ0GW00.OZ0GW-SV-TOT-AVAIL-3 TO OZ0GM003.OZ0GM-AVAIL-TOT-QTY-3;*/
    OZ0GM003.OZ0GM-AVAIL-HDR[3] = "AVAIL";
    OZ0GW00.OZ0GW-ND-MM = OZ0GW00.OZ0GW-M3-OCND-MM[3];
    OZ0GW00.OZ0GW-ND-SLASH = "/";
    OZ0GW00.OZ0GW-ND-DD = OZ0GW00.OZ0GW-M3-OCND-DD[3];
    OZ0GM003.OZ0GM-OP-CUST-NEED-DT[3] = OZ0GW00.OZ0GW-NEED-DATE;
  end

  if (OZ0GW00.OZ0GW-SV-TOT-AVAIL-4 > 0)
  /* MOVE OZ0GW00.OZ0GW-SV-TOT-AVAIL-4 TO OZ0GM003.OZ0GM-AVAIL-TOT-QTY-4;*/
    OZ0GM003.OZ0GM-AVAIL-HDR[4] = "AVAIL";
    OZ0GW00.OZ0GW-ND-MM = OZ0GW00.OZ0GW-M3-OCND-MM[4];
    OZ0GW00.OZ0GW-ND-SLASH = "/";
    OZ0GW00.OZ0GW-ND-DD = OZ0GW00.OZ0GW-M3-OCND-DD[4];
    OZ0GM003.OZ0GM-OP-CUST-NEED-DT[4] = OZ0GW00.OZ0GW-NEED-DATE;
  end


  /*  */
end // end OZ0G-32100


// Read temporary storage page
Function OZ0G-32110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OZ0GW03.XXXTSLEN = 0448; /* Temporary storage length*/

  TA5REC.TA5APPID = "OZ4G"; /* Application identification*/
  TA5REC.TA5TSQIX = OZ0GW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OZ0GW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "32110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M003"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-32110


// Update temporary storage page
Function OZ0G-32120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (OZ0GW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OZWREC.XXXPRCNM = "32120"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M003"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-32120


// Check attention identifier
Function OZ0G-33000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OZ0GW00.OZ0GW-SWR == "Y") /* Request for data*/
      set OZ0GW03 empty; /* m003 display storage*/
    end

    OZ0GW00.OZ0GW-SWF = "Y"; /* Format the map switch*/
    OZ0GW00.OZ0GW-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/

  if (OZ0GM003.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      OZ0G-31100(); /* Purge temporary storage*/

      XSOZ-S0001(); /* Exit to another application*/

      set OZ0GM003.CATOAP cursor, bold; /* Highlight*/

    else

      OZWREC.XXXPRCNM = "53000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    OZ0G-30000(); /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      OZ0GW00.OZ0GW-SWR = "Y";
      OZ0GW00.OZ0GW-SWF = "Y";
      OZ0GW00.XXXTSPAG = 1; /* reset ts page counter*/
      exit stack;
    end

    if (converseVar.eventKey is pf4) /* PF3 was pressed*/
      COMMAREA.CATOAP = "OZ0A"; /* TO application*/
    end

    OZ0G-31100(); /* Purge temporary storage*/

    XSOZ-S0001(); /* Exit to another application*/

    OZ0G-30000(); /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   /* and PF1 was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf20  /* and PF20 was not pressed*/
  )                                 
    OZWREC.XXXPRCNM = "33000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    OZ0G-30000(); /* Exit to display map*/

  end
   /* ------------------------------------------------------------*/
   /*  */
   /* ------------------------------------------------------------*/


  if (converseVar.eventKey is pf20) /* pf20 pressed*/

    OZ0GW00.OZ0GW-SWR = "Y"; /* to pull up data on m006*/
    OZ0GW00.OZ0GW-SWF = "Y"; /* to pull up data on m006*/

  end


  if (converseVar.eventKey is enter)
    OZ0G-30000();

  end
end // end OZ0G-33000


// Reset highlighted fields
Function OZ0G-34000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/


  set OZ0GM003.CATOAP initialAttributes; /* TO application*/
  set OZ0GM003.CAITEM initialAttributes; /* Application data*/


end // end OZ0G-34000


// Verify data that was entered
Function OZ0G-35000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (OZ0GM003.CAITEM > " ") /* Application data was entered*/

    OZWREC.XXXPRCNM = "25000"; /* Module identification*/
    set OZ0GM003.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    OZ0G-35100(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the line.*/
    /* ------------------------------------------------------------*/

    if (converseVar.eventKey is enter) /* Enter was pressed*/
      return;

    end

  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    OZ0G-30000(); /* Exit to display map*/
  end


end // end OZ0G-35000


// Verify scroll request
Function OZ0G-35100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OZ0GW00.XXXTSPAG < 2)       /* and no previous pages*/

    OZWREC.XXXPRCNM = "35100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OZ0GW00.XXXTSPAG >= OZ0GW00.TA5TSQIX) /* and no more pages*/

    OZWREC.XXXPRCNM = "35100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end


  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display*/
  /* ------------------------------------------------------------*/

  OZ0GW00.OZ0GW-SWF = "Y"; /* format the map switch*/



  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    OZ0GW00.XXXTSPAG = OZ0GW00.XXXTSPAG - 1; /* Decrement page number*/

    OZ0G-30000(); /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    OZ0GW00.XXXTSPAG = OZ0GW00.XXXTSPAG + 1; /* Increment page number*/

    OZ0G-30000(); /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter) /* enter pressed*/

    OZ0GW00.OZ0GW-SWF = "Y"; /* Format the map switch*/
    OZ0G-30000(); /* Return to previous process*/
  end

end // end OZ0G-35100


// Process valid input request
Function OZ0G-36000()
  if (converseVar.eventKey is pf20)

    OZ0G-36100(); /* validate reason cd's input*/

    OZ0GW00.OZ0GW-SWF = "Y"; /* Format the map switch*/

    OZ0GW-IX1 = 1;

    while (OZ0GW-IX1 < 3 && 
    OZ0GM003.OZ0GM-CHG-FLD[OZ0GW-IX1] > " ")

      if (OZ0GM003.OZ0GM-CHG-CD[OZ0GW-IX1] > " ")
        OZ0G-36300(); /* build vsohcr01 rec to add*/

      end
      OZ0GW-IX1 = OZ0GW-IX1 + 1;
    end


    OZ0G-30000();

  end
end // end OZ0G-36000


// Reset highlighted fields
Function OZ0G-36100()
  OZ0GW-IX1 = 1;

  while (OZ0GW-IX1 < 3 && 
  OZ0GM003.OZ0GM-CHG-FLD[OZ0GW-IX1] > " ")

    if (OZ0GM003.OZ0GM-CHG-CD[OZ0GW-IX1] is modified && 
    OZ0GM003.OZ0GM-CHG-CD[OZ0GW-IX1] > "  ")
      OZ0G-36200(); /* chk that input chg rsn is valid*/

      if (SQLCA.VAGen_SQLCODE == 0)
  /* CONTINUE;*/

      else
        set OZ0GM003.OZ0GM-CHG-CD[OZ0GW-IX1] cursor, bold;
        OZWREC.XXXPRCNM = "36100"; /* Module identification*/
        converseLib.validationFailed(42);
        OZ0G-30000();
      end
    end

    OZ0GW-IX1 = OZ0GW-IX1 + 1;
  end


end // end OZ0G-36100


// Select set and open cursor
Function OZ0G-36200()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set VSOCRC01 empty; /* Clear row storage area*/

  VSOCRC01.XOMCD = OZ0GM003.OZ0GM-CHG-CD[OZ0GW-IX1];

  try
    call "VSOCRC01" ("S ", SQLCA, VSOCRC01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 ||  /* and normal return code*/
    SQLCA.VAGen_SQLCODE == +100)     /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "36200"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOCRC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOCRC01.VSOCRC01-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-36200


// build vocldo01 record
Function OZ0G-36300()
  set VSOSCR01 empty;

  VSOSCR01.OP-ORD-PART-CHAR = OP3REC.OP1PARTN;
  VSOSCR01.OP-CUST-ORD-ID = OP3REC.OP1CUOID;
  VSOSCR01.OP-NIKE-ORD-ID = OP3REC.OP1NORID;
  VSOSCR01.SOCD-APPL-SRC-CD = VOCITM01.SOCD-APPL-SRC-CD;
  VSOSCR01.OP-LINE-ITEM-NBR = OZ0GW00.OZ0GW-SR-LINE[OZ0GW-IX1];
  VSOSCR01.OP-SZ-GRP-SEQ = OZ0GW00.OZ0GW-SR-GRP-SEQ[OZ0GW-IX1];
  VSOSCR01.XOM-ORD-MNTN-CD = OZ0GM003.OZ0GM-CHG-CD[OZ0GW-IX1];
  VSOSCR01.SOCD-SZ-RSN-SEQ = 1;
  VSOSCR01.SOCD-GLBL-MNTN-FL = "N";
  OZ0GW00.OZ0GW-SR-REC-FLG[OZ0GW-IX1] = "N";
  VSOSCR01.SOCD-SZ-RSN-TXT = OZ0GM003.OZ0GM-COMMENT[OZ0GW-IX1];

  if (OZ0GM003.OZ0GM-CHG-FLD[OZ0GW-IX1] == "ITEM PRICE")
    if (OZ0GW00.OZ0GW-SR-QTY-SEQ[OZ0GW-IX1] == 1)
      VSOSCR01.SY-PRC-PER-UNIT1 = OZ0GW00.OZ0GW-SR-CHG-VALUE-NUM[OZ0GW-IX1];
      VSOSCR01.SY-SZ-ID1 = OZ0GW00.OZ0GW-SR-SZ-ID[OZ0GW-IX1];
    else
      if (OZ0GW00.OZ0GW-SR-QTY-SEQ[OZ0GW-IX1] == 2)
        VSOSCR01.SY-PRC-PER-UNIT2 = OZ0GW00.OZ0GW-SR-CHG-VALUE-NUM[OZ0GW-IX1];
        VSOSCR01.SY-SZ-ID2 = OZ0GW00.OZ0GW-SR-SZ-ID[OZ0GW-IX1];
      else
        if (OZ0GW00.OZ0GW-SR-QTY-SEQ[OZ0GW-IX1] == 3)
          VSOSCR01.SY-PRC-PER-UNIT3 = OZ0GW00.OZ0GW-SR-CHG-VALUE-NUM[OZ0GW-IX1];
          VSOSCR01.SY-SZ-ID3 = OZ0GW00.OZ0GW-SR-SZ-ID[OZ0GW-IX1];

        else
          if (OZ0GW00.OZ0GW-SR-QTY-SEQ[OZ0GW-IX1] == 4)
            VSOSCR01.SY-PRC-PER-UNIT4 = OZ0GW00.OZ0GW-SR-CHG-VALUE-NUM[OZ0GW-IX1];
            VSOSCR01.SY-SZ-ID4 = OZ0GW00.OZ0GW-SR-SZ-ID[OZ0GW-IX1];
          else
            if (OZ0GW00.OZ0GW-SR-QTY-SEQ[OZ0GW-IX1] == 5)
              VSOSCR01.SY-PRC-PER-UNIT5 = OZ0GW00.OZ0GW-SR-CHG-VALUE-NUM[OZ0GW-IX1];
              VSOSCR01.SY-SZ-ID5 = OZ0GW00.OZ0GW-SR-SZ-ID[OZ0GW-IX1];

            end
          end
        end
      end
    end
  else
    if (OZ0GW00.OZ0GW-SR-QTY-SEQ[OZ0GW-IX1] == 1)
      VSOSCR01.OP-ON-ORD-QTY1 = OZ0GW00.OZ0GW-SR-CHG-VALUE-NUM[OZ0GW-IX1];
      VSOSCR01.SY-SZ-ID1 = OZ0GW00.OZ0GW-SR-SZ-ID[OZ0GW-IX1];
    else
      if (OZ0GW00.OZ0GW-SR-QTY-SEQ[OZ0GW-IX1] == 2)
        VSOSCR01.OP-ON-ORD-QTY2 = OZ0GW00.OZ0GW-SR-CHG-VALUE-NUM[OZ0GW-IX1];
        VSOSCR01.SY-SZ-ID2 = OZ0GW00.OZ0GW-SR-SZ-ID[OZ0GW-IX1];
      else
        if (OZ0GW00.OZ0GW-SR-QTY-SEQ[OZ0GW-IX1] == 3)
          VSOSCR01.OP-ON-ORD-QTY3 = OZ0GW00.OZ0GW-SR-CHG-VALUE-NUM[OZ0GW-IX1];
          VSOSCR01.SY-SZ-ID3 = OZ0GW00.OZ0GW-SR-SZ-ID[OZ0GW-IX1];
        else
          if (OZ0GW00.OZ0GW-SR-QTY-SEQ[OZ0GW-IX1] == 4)
            VSOSCR01.OP-ON-ORD-QTY4 = OZ0GW00.OZ0GW-SR-CHG-VALUE-NUM[OZ0GW-IX1];
            VSOSCR01.SY-SZ-ID4 = OZ0GW00.OZ0GW-SR-SZ-ID[OZ0GW-IX1];
          else
            if (OZ0GW00.OZ0GW-SR-QTY-SEQ[OZ0GW-IX1] == 5)
              VSOSCR01.OP-ON-ORD-QTY5 = OZ0GW00.OZ0GW-SR-CHG-VALUE-NUM[OZ0GW-IX1];
              VSOSCR01.SY-SZ-ID5 = OZ0GW00.OZ0GW-SR-SZ-ID[OZ0GW-IX1];
            end
          end
        end
      end
    end
  end

  VSOSCR01.XXX-USER-ID = OZ0GM003.OZ0GM-USERID[OZ0GW-IX1];

  XX0XS01();
  VSOSCR01.ZZZSDT = XX0XW01.XX0XWDAT;
  VSOSCR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VSOSCR01.ZZZSDTM = XX0XW01.XX0XWTIM;
  VSOSCR01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VSOSCR01.ZZZCHGCT = 0;

  OZ0GW-SWC = " ";

  while (OZ0GW-SWC == " ")
    OZ0G-36310(); /* add record*/

    if (SQLCA.VAGen_SQLCODE == 0)
      OZ0GW-SWC = "Y";
    else
      if (SQLCA.VAGen_SQLCODE == -803)
        VSOSCR01.SOCD-SZ-RSN-SEQ = VSOSCR01.SOCD-SZ-RSN-SEQ + 1;
      end
    end
  end

  OZ0GW00.OZ0GW-UPD-FLG = "Y";

end // end OZ0G-36300


// add vsohcr01
Function OZ0G-36310()

  try
    call "VSOSCR01" ("A ", SQLCA, VSOSCR01) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 ||  /* and normal return code*/
    SQLCA.VAGen_SQLCODE == -803)     /* and normal return code*/

      return; /* Return to previous process*/

    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  OZWREC.XXXPRCNM = "31310"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "ADD TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OZWREC.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOSCR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOSCR01.VSOSCR01-GROUP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OZ0G-36310


//*** RECORD=OZ0GW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record OZ0GW00 type basicRecord
  10 OZ0GW-IXM OZ0GW-IXM ; 
  10 OZ0GW-SV-IXM OZ0GW-SV-IXM ; 
  10 OZ0GW-IX1 OZ0GW-IX1 ; 
  10 OZ0GW-IX2 OZ0GW-IX2 ; 
  10 OZ0GW-IDX OZ0GW-IDX ; 
  10 OZ0GW-WKIDX OZ0GW-WKIDX ; 
  10 OZ0GW-CNT OZ0GW-CNT ; 
  10 OZ0GW-SV-CNT OZ0GW-SV-CNT ; 
  10 OZ0GW-ORD-FL OZ0GW-ORD-FL ; 
  10 OZ0GW-ORD-MATCH OZ0GW-ORD-MATCH ; 
  10 OZ0GW-SWC OZ0GW-SWC ; 
  10 OZ0GW-SWD OZ0GW-SWD ; 
  10 OZ0GW-SWF OZ0GW-SWF ; 
  10 OZ0GW-SWR OZ0GW-SWR ; 
  10 OZ0GW-SWU OZ0GW-SWU ; 
  10 OZ0GW-SFN OZ0GW-SFN ; 
  10 OZ0GW-FND OZ0GW-FND ; 
  10 OZ0GW-DATA-FLG OZ0GW-DATA-FLG ; 
  10 OZ0GW-UPD-FLG OZ0GW-UPD-FLG ; 
  10 OZ0GW-CUSTPO-FND OZ0GW-CUSTPO-FND ; 
  10 OZ0GW-MORE-FND OZ0GW-MORE-FND ; 
  10 OZ0GW-CUSTDT-FND OZ0GW-CUSTDT-FND ; 
  10 OZ0GW-XPTCD-FND OZ0GW-XPTCD-FND ; 
  10 OZ0GW-DSBDT-FND OZ0GW-DSBDT-FND ; 
  10 OZ0GW-DSADT-FND OZ0GW-DSADT-FND ; 
  10 OZ0GW-WRITE-FLG OZ0GW-WRITE-FLG ; 
  10 OZ0GW-ITEM-FLG OZ0GW-ITEM-FLG ; 
  10 OZ0GW-LOW-VALUES OZ0GW-LOW-VALUES ; 
  10 OZ0GW-SAVE-PAGE OZ0GW-SAVE-PAGE ; 
  10 OZ0GW-SAVE-STORE OZ0GW-SAVE-STORE ; 
  10 OZ0GW-SV-SRC OZ0GW-SV-SRC ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 OZ0GW-CTL-FLD OZ0GW-CTL-FLD ; 
    15 OZ0GW-FNC OZ0GW-FNC ; 
    15 OZ0GW-SAV OZ0GW-SAV ; 
    15 OZ0GW-SAV-PAGE OZ0GW-SAV-PAGE ; 
  10 OZ0GW-TIME-BRK OZ0GW-TIME-BRK ; 
    15 OZ0GW-TB-HH OZ0GW-TB-HH ; 
    15 OZ0GW-TB-MM OZ0GW-TB-MM ; 
  10 OZ0GW-TIME-MK OZ0GW-TIME-MK ; 
    15 OZ0GW-TM-HH OZ0GW-TM-HH ; 
    15 OZ0GW-TM-CL OZ0GW-TM-CL ; 
    15 OZ0GW-TM-MM OZ0GW-TM-MM ; 
  10 OZ0GW-DATE-BRK OZ0GW-DATE-BRK ; 
    15 OZ0GW-DB-CC OZ0GW-DB-CC ; 
    15 OZ0GW-DB-YY OZ0GW-DB-YY ; 
    15 OZ0GW-DB-MM OZ0GW-DB-MM ; 
    15 OZ0GW-DB-DD OZ0GW-DB-DD ; 
  10 OZ0GW-DATE-MK OZ0GW-DATE-MK ; 
    15 OZ0GW-DM-MM OZ0GW-DM-MM ; 
    15 OZ0GW-DM-DASH1 OZ0GW-DM-DASH1 ; 
    15 OZ0GW-DM-DD OZ0GW-DM-DD ; 
    15 OZ0GW-DM-DASH2 OZ0GW-DM-DASH2 ; 
    15 OZ0GW-DM-YY OZ0GW-DM-YY ; 
  10 OZ0GW-NEED-DATE OZ0GW-NEED-DATE ; 
    15 OZ0GW-ND-MM OZ0GW-ND-MM ; 
    15 OZ0GW-ND-SLASH OZ0GW-ND-SLASH ; 
    15 OZ0GW-ND-DD OZ0GW-ND-DD ; 
  10 OZ0GW-SV-CHG-FLD OZ0GW-SV-CHG-FLD ; 
  10 OZ0GW-SV-XOMCD OZ0GW-SV-XOMCD ; 
  10 OZ0GW-SV-COMMENT OZ0GW-SV-COMMENT ; 
  10 OZ0GW-SV-DATE OZ0GW-SV-DATE ; 
  10 OZ0GW-NUM-DATE OZ0GW-NUM-DATE ; 
  10 OZ0GW-CUT-OFF OZ0GW-CUT-OFF ; 
  10 OZ0GW-SUB-DAYS OZ0GW-SUB-DAYS ; 
  10 OZ0GW-ELAPSED-DAYS OZ0GW-ELAPSED-DAYS ; 
  10 OZ0GW-PO-SO-BLD OZ0GW-PO-SO-BLD ; 
    15 OZ0GW-PO-SO-CHAR OZ0GW-PO-SO-CHAR [25] ; 
  10 OZ0GW-SV-CUSTOMER OZ0GW-SV-CUSTOMER ; 
  10 OZ0GW-SV-CUST-ORD OZ0GW-SV-CUST-ORD ; 
  10 OZ0GW-SV-CUST-PO OZ0GW-SV-CUST-PO ; 
  10 OZ0GW-SV-DEPT OZ0GW-SV-DEPT ; 
  10 OZ0GW-CUST-STR-DPT OZ0GW-CUST-STR-DPT ; 
    15 OZ0GW-SV-CUST OZ0GW-SV-CUST ; 
      20 OZ0GW-SV-CUST-CHAR OZ0GW-SV-CUST-CHAR [7] ; 
    15 OZ0GW-DOT1 OZ0GW-DOT1 ; 
    15 OZ0GW-SV-STR OZ0GW-SV-STR ; 
    15 OZ0GW-DOT2 OZ0GW-DOT2 ; 
    15 OZ0GW-SV-DPT OZ0GW-SV-DPT ; 
  10 OZ0GW-SV-STOR-ID OZ0GW-SV-STOR-ID ; 
  10 OZ0GW-SV-XNX-DEPT OZ0GW-SV-XNX-DEPT ; 
  10 OZ0GW-HDR-STR OZ0GW-HDR-STR ; 
  10 OZ0GW-HDR-DPT OZ0GW-HDR-DPT ; 
  10 OZ0GW-SV-STOR-ID-CHAR OZ0GW-SV-STOR-ID-CHAR ; 
    15 OZ0GW-SV-STOR-ID-NUM OZ0GW-SV-STOR-ID-NUM ; 
  10 OZ0GW-SV-XNX-DEPT-CHAR OZ0GW-SV-XNX-DEPT-CHAR ; 
    15 OZ0GW-SV-XNX-DEPT-NUM OZ0GW-SV-XNX-DEPT-NUM ; 
  10 OZ0GW-SV-CU-CO-ID OZ0GW-SV-CU-CO-ID ; 
  10 OZ0GW-SV-NEED-DT-FROM OZ0GW-SV-NEED-DT-FROM ; 
  10 OZ0GW-SV-NEED-DT-TO OZ0GW-SV-NEED-DT-TO ; 
  10 OZ0GW-SV-NEED-DT OZ0GW-SV-NEED-DT ; 
  10 OZ0GW-SV-TOT-REQ-QTY OZ0GW-SV-TOT-REQ-QTY ; 
  10 OZ0GW-SV-TOT-ORIG-VAL OZ0GW-SV-TOT-ORIG-VAL ; 
  10 OZ0GW-SV-TOT-CURR-VAL OZ0GW-SV-TOT-CURR-VAL ; 
  10 OZ0GW-SV-TOT-AVAIL-1 OZ0GW-SV-TOT-AVAIL-1 ; 
  10 OZ0GW-SV-TOT-AVAIL-2 OZ0GW-SV-TOT-AVAIL-2 ; 
  10 OZ0GW-SV-TOT-AVAIL-3 OZ0GW-SV-TOT-AVAIL-3 ; 
  10 OZ0GW-SV-TOT-AVAIL-4 OZ0GW-SV-TOT-AVAIL-4 ; 
  10 OZ0GW-HOLD-VALUE OZ0GW-HOLD-VALUE ; 
  10 OZ0GW-SV-NUM OZ0GW-SV-NUM ; 
  10 OZ0GW-SV-DEC OZ0GW-SV-DEC ; 
    15 OZ0GW-SV-DEC-INT OZ0GW-SV-DEC-INT ; 
    15 OZ0GW-SV-DECIMAL OZ0GW-SV-DECIMAL ; 
  10 OZ0GW-VALUE-FIELD OZ0GW-VALUE-FIELD ; 
    15 OZ0GW-VALUE-BRK OZ0GW-VALUE-BRK [10] ; 
  10 OZ0GW-VALUE-BUILD OZ0GW-VALUE-BUILD ; 
    15 OZ0GW-VB-INT OZ0GW-VB-INT ; 
    15 OZ0GW-VB-DOT OZ0GW-VB-DOT ; 
    15 OZ0GW-VB-DEC OZ0GW-VB-DEC ; 
  10 OZ0GW-EDIT-FLAG OZ0GW-EDIT-FLAG ; 
  10 OZ0GW-CURR-CU-CO-ID OZ0GW-CURR-CU-CO-ID ; 
  10 OZ0GW-CURR-STOR-ID OZ0GW-CURR-STOR-ID ; 
  10 OZ0GW-CURR-XNX-DEPT OZ0GW-CURR-XNX-DEPT ; 
  10 OZ0GW-CU-CO-NM-HDR OZ0GW-CU-CO-NM-HDR ; 
  10 OZ0GW-OVERRIDE-DI OZ0GW-OVERRIDE-DI ; 
  10 OZ0GW-BYPASS-ELIGB OZ0GW-BYPASS-ELIGB ; 
  10 OZ0GW-SOCD-LTR-OVRD-ID OZ0GW-SOCD-LTR-OVRD-ID ; 
  10 OZ0GW-SOCD-CURR-CUST-PO-FROM OZ0GW-SOCD-CURR-CUST-PO-FROM ; 
  10 OZ0GW-SOCD-CURR-CUST-PO-TO OZ0GW-SOCD-CURR-CUST-PO-TO ; 
  10 OZ0GW-OP-CUST-ORD-ID OZ0GW-OP-CUST-ORD-ID ; 
    15 * char(8) ; // Edit Flag
    15 OZ0GW-ORD-PART-CHAR OZ0GW-ORD-PART-CHAR ; 
  10 OZ0GW-SOCD-CURR-NEED-DT-FROM OZ0GW-SOCD-CURR-NEED-DT-FROM ; 
  10 OZ0GW-SOCD-CURR-NEED-DT-TO OZ0GW-SOCD-CURR-NEED-DT-TO ; 
  10 OZ0GW-CURR-GPC-CD OZ0GW-CURR-GPC-CD ; 
  10 OZ0GW-GPC-DESC OZ0GW-GPC-DESC ; 
  10 OZ0GW-SLS-OFF OZ0GW-SLS-OFF ; 
  10 OZ0GW-SLS-OFF-DESC OZ0GW-SLS-OFF-DESC ; 
  10 OZ0GW-SP-SPGM-ID OZ0GW-SP-SPGM-ID ; 
  10 OZ0GW-SP-SPGM-ID-DESC OZ0GW-SP-SPGM-ID-DESC ; 
  10 OZ0GW-SM-SAGCY-ID OZ0GW-SM-SAGCY-ID ; 
  10 OZ0GW-SM-SAGCY-ID-DESC OZ0GW-SM-SAGCY-ID-DESC ; 
  10 OZ0GW-SM-SREP-ID OZ0GW-SM-SREP-ID ; 
  10 OZ0GW-SM-SREP-ID-DESC OZ0GW-SM-SREP-ID-DESC ; 
  10 OZ0GW-SM-SREP-FIRST-NM OZ0GW-SM-SREP-FIRST-NM ; 
  10 OZ0GW-SM-SREP-LAST-NM OZ0GW-SM-SREP-LAST-NM ; 
  10 * char(1) ; 
  10 OZ0GW-SEL-GROUP OZ0GW-SEL-GROUP ; 
    15 OZ0GW-SEL-CUST-STR-DPT OZ0GW-SEL-CUST-STR-DPT ; 
      20 OZ0GW-SEL-CUST OZ0GW-SEL-CUST ; 
      20 * char(1) ; 
      20 OZ0GW-SEL-STR OZ0GW-SEL-STR ; 
      20 * char(1) ; 
      20 OZ0GW-SEL-DPT OZ0GW-SEL-DPT ; 
    15 OZ0GW-SEL-CUST-NM-HDR OZ0GW-SEL-CUST-NM-HDR ; 
    15 OZ0GW-SEL-OVERRIDE-DI OZ0GW-SEL-OVERRIDE-DI ; 
    15 OZ0GW-SEL-ORD-NBR OZ0GW-SEL-ORD-NBR ; 
    15 OZ0GW-SEL-LTR-TYP-CD OZ0GW-SEL-LTR-TYP-CD ; 
    15 OZ0GW-SEL-GPC OZ0GW-SEL-GPC ; 
    15 OZ0GW-SEL-GPC-DESC OZ0GW-SEL-GPC-DESC ; 
    15 OZ0GW-SEL-CUST-PO OZ0GW-SEL-CUST-PO ; 
    15 OZ0GW-SEL-SALES-OFF OZ0GW-SEL-SALES-OFF ; 
    15 OZ0GW-SEL-SALES-OFF-DESC OZ0GW-SEL-SALES-OFF-DESC ; 
    15 OZ0GW-SEL-SALES-AGENCY OZ0GW-SEL-SALES-AGENCY ; 
    15 OZ0GW-SEL-SALES-AGENCY-DESC OZ0GW-SEL-SALES-AGENCY-DESC ; 
    15 OZ0GW-SEL-SALES-REP OZ0GW-SEL-SALES-REP ; 
    15 OZ0GW-SEL-SREP-FIRST-NM OZ0GW-SEL-SREP-FIRST-NM ; 
    15 OZ0GW-SEL-SREP-LAST-NM OZ0GW-SEL-SREP-LAST-NM ; 
    15 OZ0GW-SEL-TOT-ORD-QTY OZ0GW-SEL-TOT-ORD-QTY ; 
    15 OZ0GW-SEL-TOT-ORD-VAL OZ0GW-SEL-TOT-ORD-VAL ; 
    15 OZ0GW-SEL-1ST-ORD-ID OZ0GW-SEL-1ST-ORD-ID ; 
    15 OZ0GW-SEL-XPTCD OZ0GW-SEL-XPTCD ; 
    15 OZ0GW-SEL-CURR-DSBDT OZ0GW-SEL-CURR-DSBDT ; 
    15 OZ0GW-SEL-CURR-DSADT OZ0GW-SEL-CURR-DSADT ; 
    15 OZ0GW-SEL-ORIG-DSBDT OZ0GW-SEL-ORIG-DSBDT ; 
    15 OZ0GW-SEL-ORIG-DSADT OZ0GW-SEL-ORIG-DSADT ; 
    15 OZ0GW-SEL-PO-MONEY-MTH OZ0GW-SEL-PO-MONEY-MTH ; 
    15 OZ0GW-SEL-OP-CUST-PO OZ0GW-SEL-OP-CUST-PO ; 
    15 OZ0GW-SEL-SP1ID OZ0GW-SEL-SP1ID ; 
    15 OZ0GW-SEL-SP1NM OZ0GW-SEL-SP1NM ; 
  10 * char(1) ; 
  10 OZ0GW-M2-GROUP OZ0GW-M2-GROUP ; 
    15 OZ0GW-M2-CUST-STR-DPT OZ0GW-M2-CUST-STR-DPT ; 
    15 OZ0GW-M2-CU-CO-NM-HDR OZ0GW-M2-CU-CO-NM-HDR ; 
    15 OZ0GW-M2-OVERRIDE-DI OZ0GW-M2-OVERRIDE-DI ; 
    15 OZ0GW-M2-OP-CUST-ORD-ID OZ0GW-M2-OP-CUST-ORD-ID ; 
    15 OZ0GW-M2-CURR-GPC-CD OZ0GW-M2-CURR-GPC-CD ; 
    15 OZ0GW-M2-GPC-DESC OZ0GW-M2-GPC-DESC ; 
    15 OZ0GW-M2-SOCD-CURR-CUST-PO OZ0GW-M2-SOCD-CURR-CUST-PO ; 
    15 OZ0GW-M2-SLS-OFF-ID OZ0GW-M2-SLS-OFF-ID ; 
    15 OZ0GW-M2-SLS-OFF-ID-DESC OZ0GW-M2-SLS-OFF-ID-DESC ; 
    15 OZ0GW-M2-SM-SAGCY-ID OZ0GW-M2-SM-SAGCY-ID ; 
    15 OZ0GW-M2-SM-SAGCY-ID-DESC OZ0GW-M2-SM-SAGCY-ID-DESC ; 
    15 OZ0GW-M2-SM-SREP-ID OZ0GW-M2-SM-SREP-ID ; 
    15 OZ0GW-M2-SM-SREP-FIRST-NM OZ0GW-M2-SM-SREP-FIRST-NM ; 
    15 OZ0GW-M2-SM-SREP-LAST-NM OZ0GW-M2-SM-SREP-LAST-NM ; 
    15 OZ0GW-M2-TOT-ORD-QTY OZ0GW-M2-TOT-ORD-QTY ; 
    15 OZ0GW-M2-TOT-ORD-VALUE OZ0GW-M2-TOT-ORD-VALUE ; 
    15 OZ0GW-M2-PYMNT-TERMS OZ0GW-M2-PYMNT-TERMS ; 
    15 OZ0GW-M2-CURR-DNSB OZ0GW-M2-CURR-DNSB ; 
    15 OZ0GW-M2-CURR-DNSA OZ0GW-M2-CURR-DNSA ; 
    15 OZ0GW-M2-ORIG-DNSB OZ0GW-M2-ORIG-DNSB ; 
    15 OZ0GW-M2-ORIG-DNSA OZ0GW-M2-ORIG-DNSA ; 
    15 OZ0GW-M2-PO-MONEY-MTH OZ0GW-M2-PO-MONEY-MTH ; 
    15 OZ0GW-M2-OP-CUST-PO OZ0GW-M2-OP-CUST-PO ; 
    15 OZ0GW-M2-SP1ID OZ0GW-M2-SP1ID ; 
    15 OZ0GW-M2-SP1NM OZ0GW-M2-SP1NM ; 
  10 OZ0GW-M3-WS-TABLE OZ0GW-M3-WS-TABLE [500] ; 
    15 OZ0GW-M3-WS-XOMCD OZ0GW-M3-WS-XOMCD ; 
    15 OZ0GW-M3-WS-COMMENT OZ0GW-M3-WS-COMMENT ; 
  10 OZ0GW-M3-STYLE-CLR-DIM OZ0GW-M3-STYLE-CLR-DIM ; 
    15 OZ0GW-M3-STYLE OZ0GW-M3-STYLE ; 
    15 * char(3) ; 
    15 OZ0GW-M3-COLOR OZ0GW-M3-COLOR ; 
    15 * char(3) ; 
    15 OZ0GW-M3-DIM OZ0GW-M3-DIM ; 
  10 OZ0GW-M3-SY-STY-COLOR-ABRV OZ0GW-M3-SY-STY-COLOR-ABRV ; 
  10 OZ0GW-M3-COLOR-NAME OZ0GW-M3-COLOR-NAME ; 
  10 OZ0GW-M3-OP-ORD-PART-CHAR OZ0GW-M3-OP-ORD-PART-CHAR ; 
  10 OZ0GW-M3-OP-CUST-ORD-ID OZ0GW-M3-OP-CUST-ORD-ID ; 
  10 OZ0GW-M3-OP-ORIG-NEED-DT OZ0GW-M3-OP-ORIG-NEED-DT ; 
    20 OZ0GW-M3-OOND-CC OZ0GW-M3-OOND-CC ; 
    20 OZ0GW-M3-OOND-MM OZ0GW-M3-OOND-MM ; 
    20 OZ0GW-M3-OOND-DD OZ0GW-M3-OOND-DD ; 
  10 OZ0GW-M3-TABLE OZ0GW-M3-TABLE [4] ; 
    15 OZ0GW-M3-OP-NIKE-ORD-ID OZ0GW-M3-OP-NIKE-ORD-ID ; 
    15 OZ0GW-M3-LINE-ITEM-NBR OZ0GW-M3-LINE-ITEM-NBR ; 
    15 OZ0GW-M3-OP-CUST-NEED-DT OZ0GW-M3-OP-CUST-NEED-DT ; 
      20 OZ0GW-M3-OCND-CC OZ0GW-M3-OCND-CC ; 
      20 OZ0GW-M3-OCND-MM OZ0GW-M3-OCND-MM ; 
      20 OZ0GW-M3-OCND-DD OZ0GW-M3-OCND-DD ; 
  10 OZ0GW-M3-CURR-VALUE OZ0GW-M3-CURR-VALUE ; 
  10 OZ0GW-SZRUN-TBL OZ0GW-SZRUN-TBL [40] ; 
    15 OZ0GW-SR-LINE OZ0GW-SR-LINE ; 
    15 OZ0GW-SR-SZ-ID OZ0GW-SR-SZ-ID ; 
    15 OZ0GW-SR-GRP-SEQ OZ0GW-SR-GRP-SEQ ; 
    15 OZ0GW-SR-QTY-SEQ OZ0GW-SR-QTY-SEQ ; 
    15 OZ0GW-SR-REC-FLG OZ0GW-SR-REC-FLG ; 
    15 OZ0GW-SR-CHG-FLD OZ0GW-SR-CHG-FLD ; 
    15 OZ0GW-SR-CHG-VALUE OZ0GW-SR-CHG-VALUE ; 
    15 OZ0GW-SR-CHG-VALUE-NUM OZ0GW-SR-CHG-VALUE-NUM ; 
    15 OZ0GW-SR-DATE OZ0GW-SR-DATE ; 
    15 OZ0GW-SR-TIME OZ0GW-SR-TIME ; 
end // end OZ0GW00


//*** RECORD=OZ0GW01 ****
// /*
// /*      application working storage for map1
// /*
// ***********************
Record OZ0GW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(1200) ; // Temporary storage page length
    10 OZ0GW-SEL OZ0GW-SEL [12] ; 
    10 OZ0GW-GROUP OZ0GW-GROUP [12] ; 
      15 OZ0GW-CUST OZ0GW-CUST ; 
      15 OZ0GW-STR OZ0GW-STR ; 
      15 OZ0GW-DPT OZ0GW-DPT ; 
      15 OZ0GW-SOCD-LTR-TYP-CD OZ0GW-SOCD-LTR-TYP-CD ; 
      15 OZ0GW-PO-SO OZ0GW-PO-SO ; 
      15 OZ0GW-TYPE OZ0GW-TYPE ; 
      15 OZ0GW-TYPE-DESC OZ0GW-TYPE-DESC ; 
      15 OZ0GW-REP-ID OZ0GW-REP-ID ; 
      15 OZ0GW-OP-ORD-PART-CHAR OZ0GW-OP-ORD-PART-CHAR ; 
      15 OZ0GW-OP-CUST-ORD-ID OZ0GW-OP-CUST-ORD-ID ; 
      15 OZ0GW-OP-NIKE-ORD-ID OZ0GW-OP-NIKE-ORD-ID ; 
      15 OZ0GW-SOCD-APPL-SRC-CD OZ0GW-SOCD-APPL-SRC-CD ; 
      15 OZ0GW-OP-LINE-ITEM-NBR OZ0GW-OP-LINE-ITEM-NBR ; 
      15 OZ0GW-OP-SZ-GRP-SEQ OZ0GW-OP-SZ-GRP-SEQ ; 
      15 OZ0GW-SOCD-DIST-SEQ-NBR OZ0GW-SOCD-DIST-SEQ-NBR ; 
      15 OZ0GW-SOCD-LTR-SEQ-NBR OZ0GW-SOCD-LTR-SEQ-NBR ; 
      15 OZ0GW-SOCD-LTR-OVRD-ID OZ0GW-SOCD-LTR-OVRD-ID ; 
      15 OZ0GW-TBL-SRC OZ0GW-TBL-SRC ; 
end // end OZ0GW01


//*** RECORD=OZ0GW02 ****
// /*
// /*      application working storage for map1
// /*
// ***********************
Record OZ0GW02 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(392) ; // Temporary storage page length
    10 OZ0GW-GRP OZ0GW-GRP [4] ; 
      15 OZ0GW-CHG-CD OZ0GW-CHG-CD ; 
      15 OZ0GW-CHG-FLD OZ0GW-CHG-FLD ; 
      15 OZ0GW-CHG-VALUE OZ0GW-CHG-VALUE ; 
        20 OZ0GW-CHG-VALUE-NUM OZ0GW-CHG-VALUE-NUM ; 
        20 * char(2) ; 
      15 OZ0GW-USERID OZ0GW-USERID ; 
      15 OZ0GW-DATE OZ0GW-DATE ; 
      15 OZ0GW-TIME OZ0GW-TIME ; 
      15 OZ0GW-COMMENT OZ0GW-COMMENT ; 
end // end OZ0GW02


//*** RECORD=OZ0GW03 ****
// /*
// /*      application working storage for map3
// /*
// ***********************
Record OZ0GW03 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(448) ; // Temporary storage page length
    10 OZ0GW-SIZE-DTL OZ0GW-SIZE-DTL [7] ; 
      15 OZ0GW-SIZE OZ0GW-SIZE ; 
      15 OZ0GW-REQ-QTY OZ0GW-REQ-QTY ; 
      15 OZ0GW-AVAIL-QTY-1 OZ0GW-AVAIL-QTY-1 ; 
      15 OZ0GW-AVAIL-QTY-2 OZ0GW-AVAIL-QTY-2 ; 
      15 OZ0GW-AVAIL-QTY-3 OZ0GW-AVAIL-QTY-3 ; 
      15 OZ0GW-AVAIL-QTY-4 OZ0GW-AVAIL-QTY-4 ; 
      15 OZ0GW-ORIG-PRICE OZ0GW-ORIG-PRICE ; 
      15 OZ0GW-CURR-PRICE OZ0GW-CURR-PRICE ; 
      15 * char(2) ; 
end // end OZ0GW03


//*** RECORD=OZ0GW03A ****
// /*
// /*      application working storage for map3
// /*
// ************************
Record OZ0GW03A type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(2560) ; // Temporary storage page length
    10 OZ0GW-SIZE-DTL-A OZ0GW-SIZE-DTL-A [40] ; 
      15 OZ0GW-SIZE OZ0GW-SIZE ; 
      15 OZ0GW-REQ-QTY OZ0GW-REQ-QTY ; 
      15 OZ0GW-AVAIL-QTY-1 OZ0GW-AVAIL-QTY-1 ; 
      15 OZ0GW-AVAIL-QTY-2 OZ0GW-AVAIL-QTY-2 ; 
      15 OZ0GW-AVAIL-QTY-3 OZ0GW-AVAIL-QTY-3 ; 
      15 OZ0GW-AVAIL-QTY-4 OZ0GW-AVAIL-QTY-4 ; 
      15 OZ0GW-ORIG-PRICE OZ0GW-ORIG-PRICE ; 
      15 OZ0GW-CURR-PRICE OZ0GW-CURR-PRICE ; 
      15 OZ0GW-GRP-SEQ OZ0GW-GRP-SEQ ; 
      15 OZ0GW-QTY-SEQ OZ0GW-QTY-SEQ ; 
end // end OZ0GW03A


//*** RECORD=VOCHDE01 ****
// dordcd.vochde01 csp record layout
// ************************
Record VOCHDE01 type basicRecord
  5 VOCHDE01-GROUP VOCHDE01-GROUP ; 
    10 VOCHDE01-KEY VOCHDE01-KEY ; 
      15 OP1PARTN OP1PARTN ; 
      15 OP1CUOID OP1CUOID ; 
      15 OP1NORID OP1NORID ; 
      15 SOCD-APPL-SRC-CD SOCD-APPL-SRC-CD ; 
      15 SOCD-ORD-XCEP-CD SOCD-ORD-XCEP-CD ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZSTM ZZZSTM ; 
end // end VOCHDE01


//*** RECORD=VOCLEC01 ****
// socd customer buyer table record layout
// dordcd.vocbuy01
// ************************
Record VOCLEC01 type basicRecord
  5 VOCLEC01-GROUP VOCLEC01-GROUP ; 
    10 VOCLEC01-KEY VOCLEC01-KEY ; 
      15 SOCD-LTR-XCEP-CD SOCD-LTR-XCEP-CD ; 
    10 SOCD-LTR-XCEP-DESC SOCD-LTR-XCEP-DESC ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZSDTM ZZZSDTM ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end VOCLEC01


//*** RECORD=VOCOEC01 ****
// dordcd.vocoec01 csp record layout
// 
// ************************
Record VOCOEC01 type basicRecord
  5 VOCOEC01-GROUP VOCOEC01-GROUP ; 
    10 VOCOEC01-KEY VOCOEC01-KEY ; 
      15 SOCD-ORD-XCEP-CD SOCD-ORD-XCEP-CD ; 
    10 SOCD-ORD-XCEP-DESC SOCD-ORD-XCEP-DESC ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZSDTM ZZZSDTM ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end VOCOEC01


//*** RECORD=VOCSIE01 ****
// dordcd.vocsie01 csp record layout
// ************************
Record VOCSIE01 type basicRecord
  5 VOCSIE01-GROUP VOCSIE01-GROUP ; 
    10 VOCSIE01-KEY VOCSIE01-KEY ; 
      15 OP1PARTN OP1PARTN ; 
      15 OP1CUOID OP1CUOID ; 
      15 OP1NORID OP1NORID ; 
      15 SOCD-APPL-SRC-CD SOCD-APPL-SRC-CD ; 
      15 OP2LNINB OP2LNINB ; 
      15 OP-SZ-GRP-SEQ OP-SZ-GRP-SEQ ; 
      15 SOCD-ORD-XCEP-CD SOCD-ORD-XCEP-CD ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZSTM ZZZSTM ; 
end // end VOCSIE01


//*** RECORD=WOZ2130 ****
// corresponding csp record for panvalet member wozszrun.
// the copybook for oz2110.  also used in conjuction w/
// wozszrnp and wozszrnr.
// ***********************
Record WOZ2130 type basicRecord
  3 WOZ2130-RECORD WOZ2130-RECORD ; 
    10 WOZ2130-IO-INFO WOZ2130-IO-INFO ; 
      15 WOZ2130-IO-TASK WOZ2130-IO-TASK ; 
      15 WOZ2130-IO-GPC WOZ2130-IO-GPC ; 
      15 WOZ2130-IO-SALES-OFF WOZ2130-IO-SALES-OFF ; 
      15 WOZ2130-IO-CUTOFF-DATE WOZ2130-IO-CUTOFF-DATE ; 
    10 WOZ2130-GENERAL-INFO WOZ2130-GENERAL-INFO ; 
      15 WOZ2130-SOCD-CURR-CU-CO-ID WOZ2130-SOCD-CURR-CU-CO-ID ; 
      15 WOZ2130-SOCD-CURR-STOR-ID WOZ2130-SOCD-CURR-STOR-ID ; 
      15 WOZ2130-SOCD-CURR-XNX-DEPT WOZ2130-SOCD-CURR-XNX-DEPT ; 
      15 WOZ2130-SOCD-LTR-TYPE-CD WOZ2130-SOCD-LTR-TYPE-CD ; 
      15 WOZ2130-OP-ORD-PART-CHAR WOZ2130-OP-ORD-PART-CHAR ; 
      15 WOZ2130-OP-CUST-ORD-ID WOZ2130-OP-CUST-ORD-ID ; 
      15 WOZ2130-OP-NIKE-ORD-ID WOZ2130-OP-NIKE-ORD-ID ; 
      15 WOZ2130-SOCD-APPL-SRC-CD WOZ2130-SOCD-APPL-SRC-CD ; 
      15 WOZ2130-OP-LINE-ITEM-NBR WOZ2130-OP-LINE-ITEM-NBR ; 
      15 WOZ2130-OP-SZ-GRP-SEQ WOZ2130-OP-SZ-GRP-SEQ ; 
      15 WOZ2130-SOCD-LTR-XCEP-CD WOZ2130-SOCD-LTR-XCEP-CD ; 
      15 WOZ2130-SOCD-CURR-CUST-PO WOZ2130-SOCD-CURR-CUST-PO ; 
      15 WOZ2130-SOCD-LTR-SEQ-NBR WOZ2130-SOCD-LTR-SEQ-NBR ; 
      15 WOZ2130-SOCD-DIST-SEQ-NBR WOZ2130-SOCD-DIST-SEQ-NBR ; 
      15 WOZ2130-SOCD-LTR-OVRD-ID WOZ2130-SOCD-LTR-OVRD-ID ; 
      15 WOZ2130-TBL-SRC WOZ2130-TBL-SRC ; 
      15 WOZ2130-STAT-UPDATE WOZ2130-STAT-UPDATE ; 
end // end WOZ2130


//*** RECORD=WOZ2150 ****
// corresponding csp record for panvalet member wozszrun.
// the copybook for oz2110.  also used in conjuction w/
// wozszrnp and wozszrnr.
// ***********************
Record WOZ2150 type basicRecord
  3 WOZ2150-RECORD WOZ2150-RECORD ; 
    5 OZRUN-PASS-INFO OZRUN-PASS-INFO ; 
      10 OZRUN-TASK OZRUN-TASK ; 
      10 OZRUN-CALLER-PROFILE OZRUN-CALLER-PROFILE ; 
        15 OZRUN-CALLER-LOCATION OZRUN-CALLER-LOCATION ; 
          20 OZRUN-CALLER-LOC-1 OZRUN-CALLER-LOC-1 ; 
          20 OZRUN-CALLER-LOC-2 OZRUN-CALLER-LOC-2 ; 
          20 OZRUN-CALLER-LOC-3 OZRUN-CALLER-LOC-3 ; 
          20 * char(8) ; 
        15 OZRUN-CALLER-MAP OZRUN-CALLER-MAP ; 
    5 * char(1) ; 
    5 OZRUN-RECORD OZRUN-RECORD ; 
      10 OZRUN-LINE-ITEM-INFO OZRUN-LINE-ITEM-INFO ; 
        15 OZRUN-KEY-INFO OZRUN-KEY-INFO ; 
          20 OZRUN-OP-ORD-PART-CHAR OZRUN-OP-ORD-PART-CHAR ; 
          20 OZRUN-OP-CUST-ORD-ID OZRUN-OP-CUST-ORD-ID ; 
          20 OZRUN-OP-NIKE-ORD-ID OZRUN-OP-NIKE-ORD-ID ; 
          20 OZRUN-SOCD-APPL-SRC-CD OZRUN-SOCD-APPL-SRC-CD ; 
          20 OZRUN-OP-LINE-ITEM-NBR OZRUN-OP-LINE-ITEM-NBR ; 
      10 OZRUN-GENERAL-INFO OZRUN-GENERAL-INFO ; 
        20 OZRUN-XGP-GPC-CD OZRUN-XGP-GPC-CD ; 
        20 OZRUN-SY-STY-NBR OZRUN-SY-STY-NBR ; 
        20 OZRUN-SY-COLR-CD-ID OZRUN-SY-COLR-CD-ID ; 
        20 OZRUN-XDM-DIM-CD OZRUN-XDM-DIM-CD ; 
        20 OZRUN-ITM-DELT-FL OZRUN-ITM-DELT-FL ; 
      10 OZRUN-ZZ-INFO OZRUN-ZZ-INFO ; 
        20 OZRUN-ZZ-SDT OZRUN-ZZ-SDT ; 
        20 OZRUN-ZZ-SETUP-HHMM OZRUN-ZZ-SETUP-HHMM ; 
        20 OZRUN-ZZ-CHNG-DT OZRUN-ZZ-CHNG-DT ; 
        20 OZRUN-ZZ-CHNG-HHMM OZRUN-ZZ-CHNG-HHMM ; 
        20 OZRUN-ZZ-CHNG-CNT OZRUN-ZZ-CHNG-CNT ; 
      10 OZRUN-SIZE-INFO OZRUN-SIZE-INFO ; 
        15 OZRUN-SIZE-ARRAY OZRUN-SIZE-ARRAY [40] ; 
          20 OZRUN-SY-PRC-PER-UNIT OZRUN-SY-PRC-PER-UNIT ; 
          20 OZRUN-OP-ON-ORD-QTY OZRUN-OP-ON-ORD-QTY ; 
          20 OZRUN-GRP-SEQ OZRUN-GRP-SEQ ; 
          20 OZRUN-QTY-SEQ OZRUN-QTY-SEQ ; 
          20 OZRUN-SZ-ID OZRUN-SZ-ID ; 
    5 * char(1) ; 
    5 OZRUN-RETURN-INFO OZRUN-RETURN-INFO ; 
      10 OZRUN-RETURN-CODE OZRUN-RETURN-CODE ; 
    5 * char(1) ; 
    5 OZRUN-SQLCA OZRUN-SQLCA ; 
    5 * char(1716) ; 
end // end WOZ2150


DataItem OZ0GW-AVAIL-QTY-1 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-AVAIL-QTY-2 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-AVAIL-QTY-3 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-AVAIL-QTY-4 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-BYPASS-ELIGB char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-CHG-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-CHG-FLD char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-CHG-VALUE char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-CHG-VALUE-NUM num(18)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Index for map fields
DataItem OZ0GW-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-COMMENT char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Pass record control field
DataItem OZ0GW-CTL-FLD char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-CU-CO-NM-HDR char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-CURR-CU-CO-ID char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-CURR-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0GW-CURR-PRICE num(8,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-CURR-STOR-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-CURR-XNX-DEPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-CUST num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-CUSTDT-FND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-CUSTPO-FND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Binary work year
DataItem OZ0GW-CUT-OFF int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0GW-DATA-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-DATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-DATE-BRK num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-DATE-MK char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-DB-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-DB-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-DB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-DB-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-DM-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-DM-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-DM-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-DM-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-DM-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-DOT1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-DOT2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-DPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-DSADT-FND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-DSBDT-FND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-EDIT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-ELAPSED-DAYS num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Map function switch
DataItem OZ0GW-FNC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0GW-FND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0GW-GPC-DESC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-GROUP char(99)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-GRP char(98)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-GRP-SEQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-HDR-DPT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-HDR-STR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-HOLD-VALUE num(13,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Index for map fields
DataItem OZ0GW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0GW-ITEM-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0GW-IX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0GW-IX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0GW-IXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0GW-LOW-VALUES char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-CU-CO-NM-HDR char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-CURR-DNSA num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M2-CURR-DNSB num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M2-CURR-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-GPC-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-GROUP char(263)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-OP-CUST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M2-OP-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-ORIG-DNSA num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M2-ORIG-DNSB num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M2-OVERRIDE-DI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-PO-MONEY-MTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-PYMNT-TERMS char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-SLS-OFF-ID char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-SLS-OFF-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-SM-SAGCY-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-SM-SAGCY-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-SM-SREP-FIRST-NM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-SM-SREP-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-SM-SREP-LAST-NM char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-SOCD-CURR-CUST-PO char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-SP1ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-SP1NM char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M2-TOT-ORD-QTY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M2-TOT-ORD-VALUE num(13)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M3-COLOR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M3-COLOR-NAME char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M3-CURR-VALUE num(13,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M3-DIM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M3-LINE-ITEM-NBR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M3-OCND-CC num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M3-OCND-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M3-OCND-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M3-OOND-CC num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M3-OOND-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M3-OOND-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M3-OP-CUST-NEED-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M3-OP-CUST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M3-OP-NIKE-ORD-ID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M3-OP-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M3-OP-ORIG-NEED-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-M3-STYLE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M3-STYLE-CLR-DIM char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M3-SY-STY-COLOR-ABRV char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M3-TABLE char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M3-WS-COMMENT char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M3-WS-TABLE char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-M3-WS-XOMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-MORE-FND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-ND-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-ND-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-ND-SLASH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-NEED-DATE char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Binary work year
DataItem OZ0GW-NUM-DATE int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-OP-CUST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-OP-LINE-ITEM-NBR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-OP-NIKE-ORD-ID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-OP-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-OP-SZ-GRP-SEQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0GW-ORD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0GW-ORD-MATCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0GW-ORIG-PRICE num(8,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-OVERRIDE-DI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-PO-SO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-PO-SO-BLD char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-PO-SO-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-QTY-SEQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-REP-ID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-REQ-QTY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Save index for WS
DataItem OZ0GW-SAV num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save page for cursor placement
DataItem OZ0GW-SAV-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Page save field
DataItem OZ0GW-SAVE-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Page save field
DataItem OZ0GW-SAVE-STORE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// LINE SELECTION INDICATOR
DataItem OZ0GW-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SEL-1ST-ORD-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SEL-CURR-DSADT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SEL-CURR-DSBDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SEL-CUST num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SEL-CUST-NM-HDR char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-CUST-PO char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-CUST-STR-DPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-DPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SEL-GPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-GPC-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-GROUP char(251)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-LTR-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SEL-OP-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-ORD-NBR num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SEL-ORIG-DSADT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SEL-ORIG-DSBDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SEL-OVERRIDE-DI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SEL-PO-MONEY-MTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-SALES-AGENCY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-SALES-AGENCY-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-SALES-OFF char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-SALES-OFF-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-SALES-REP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SEL-SP1ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SEL-SP1NM char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-SREP-FIRST-NM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-SREP-LAST-NM char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SEL-STR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SEL-TOT-ORD-QTY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SEL-TOT-ORD-VAL num(13)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SEL-XPTCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0GW-SFN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SIZE char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SIZE-DTL char(64)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SIZE-DTL-A char(64)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0GW-SLS-OFF char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0GW-SLS-OFF-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0GW-SM-SAGCY-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0GW-SM-SAGCY-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0GW-SM-SREP-FIRST-NM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0GW-SM-SREP-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0GW-SM-SREP-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0GW-SM-SREP-LAST-NM char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SOCD-APPL-SRC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SOCD-CURR-CUST-PO-FROM char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SOCD-CURR-CUST-PO-TO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SOCD-CURR-NEED-DT-FROM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SOCD-CURR-NEED-DT-TO num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SOCD-DIST-SEQ-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SOCD-LTR-OVRD-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SOCD-LTR-SEQ-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-SOCD-LTR-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0GW-SP-SPGM-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// GPC CODE DESCRIPTION - HEADER
DataItem OZ0GW-SP-SPGM-ID-DESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SR-CHG-FLD char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SR-CHG-VALUE char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SR-CHG-VALUE-NUM num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SR-DATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SR-GRP-SEQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SR-LINE smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SR-QTY-SEQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SR-REC-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SR-SZ-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SR-TIME num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-STR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SUB-DAYS num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-CHG-FLD char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0GW-SV-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SV-COMMENT char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-CUST char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SV-CUST-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-CUST-ORD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-CUSTOMER num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Format Date
DataItem OZ0GW-SV-DATE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-DEC num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-DEC-INT num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-DECIMAL num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-DEPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-DPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0GW-SV-IXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SV-NEED-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-NEED-DT-FROM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-NEED-DT-TO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-NUM num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Page save field
DataItem OZ0GW-SV-SRC char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-STOR-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-STOR-ID-CHAR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-STOR-ID-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-STR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SV-TOT-AVAIL-1 num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-TOT-AVAIL-2 num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-TOT-AVAIL-3 num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-TOT-AVAIL-4 num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-TOT-CURR-VAL num(12,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-TOT-ORIG-VAL num(12,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-TOT-REQ-QTY num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-XNX-DEPT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-XNX-DEPT-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-SV-XNX-DEPT-NUM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-SV-XOMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Cursor end of file switch
DataItem OZ0GW-SWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Map to be displayed switch
DataItem OZ0GW-SWD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Format the map switch
DataItem OZ0GW-SWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Request for data switch
DataItem OZ0GW-SWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Storage page update switch
DataItem OZ0GW-SWU char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-SZRUN-TBL char(64)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-TB-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-TB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Edit Flag
DataItem OZ0GW-TBL-SRC char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-TIME num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-TIME-BRK num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZ0GW-TIME-MK char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-TM-CL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-TM-HH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-TM-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-TYPE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-TYPE-DESC char(21)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0GW-UPD-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


//  Group Level
DataItem OZ0GW-USERID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-VALUE-BRK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-VALUE-BUILD char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-VALUE-FIELD char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-VB-DEC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-VB-DOT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-VB-INT char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for map fields
DataItem OZ0GW-WKIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// function switch
DataItem OZ0GW-WRITE-FLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZ0GW-XPTCD-FND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-CALLER-LOC-1 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-CALLER-LOC-2 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-CALLER-LOC-3 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-CALLER-LOCATION char(32)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-CALLER-MAP char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-CALLER-PROFILE char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-GENERAL-INFO char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-GRP-SEQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-ITM-DELT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-KEY-INFO char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-LINE-ITEM-INFO char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-OP-CUST-ORD-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZRUN-OP-LINE-ITEM-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZRUN-OP-NIKE-ORD-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZRUN-OP-ON-ORD-QTY decimal(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZRUN-OP-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-PASS-INFO char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-QTY-SEQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-RECORD char(599)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-RETURN-CODE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZRUN-RETURN-INFO char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-SIZE-ARRAY char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-SIZE-INFO char(560)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-SOCD-APPL-SRC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-SQLCA char(136)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-SY-COLR-CD-ID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-SY-PRC-PER-UNIT decimal(10,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZRUN-SY-STY-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-SZ-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZRUN-TASK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-XDM-DIM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-XGP-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-ZZ-CHNG-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZRUN-ZZ-CHNG-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZRUN-ZZ-CHNG-HHMM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZRUN-ZZ-INFO char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem OZRUN-ZZ-SDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem OZRUN-ZZ-SETUP-HHMM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// xxx-addr1
DataItem SOCD-LTR-XCEP-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem SOCD-ORD-XCEP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// xxx-addr1
DataItem SOCD-ORD-XCEP-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCHDE01-GROUP char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCHDE01-KEY char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCLEC01-GROUP char(46)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCLEC01-KEY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCOEC01-GROUP char(46)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCOEC01-KEY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCSIE01-GROUP char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem VOCSIE01-KEY char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-GENERAL-INFO char(62)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-IO-CUTOFF-DATE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem WOZ2130-IO-GPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-IO-INFO char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-IO-SALES-OFF char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-IO-TASK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-OP-CUST-ORD-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem WOZ2130-OP-LINE-ITEM-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem WOZ2130-OP-NIKE-ORD-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem WOZ2130-OP-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-OP-SZ-GRP-SEQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-RECORD char(72)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-SOCD-APPL-SRC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-SOCD-CURR-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem WOZ2130-SOCD-CURR-CUST-PO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-SOCD-CURR-STOR-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem WOZ2130-SOCD-CURR-XNX-DEPT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem WOZ2130-SOCD-DIST-SEQ-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem WOZ2130-SOCD-LTR-OVRD-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem WOZ2130-SOCD-LTR-SEQ-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem WOZ2130-SOCD-LTR-TYPE-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-SOCD-LTR-XCEP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-STAT-UPDATE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2130-TBL-SRC char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem WOZ2150-RECORD char(2500)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


