package af0q;

import af.common.AF4REC;
import af.common.AFWREC;
import corpcom2.XP1REC;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPAF001;
import corpcom3.XPAF010;
import corpcom3.XPAF020;
import corpcom3.XPTA0P;
import corpcom3.XSAFS01;
import corpcom3.XSAFSSE;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXUSER;
import corpx1.XGATBL;
import corpx1.XPCTBL;
import corpx1.XSETBL;
import corpx1.XSUTBL;
import corpx2.XSECD;
import corpx2.XSNYR;
import corpy2.YSNTBL;
import pg.common.PG1FCTCD;
import pg.common.PG1REC;
import pg.common.PG2REC;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TA6REC;
import ta.common.TAEREC;
import ta.common.TARJCL;
import ta.common.TARTYPE;
import vv.common.VAFCTL02;

//import af.common.*;
//import corpcom2.*;
//import corpcom2.*;
//import corpcom3.*;
//import corpcom5.*;
//import corpcom6.*;
//import corpcom7.*;
//import corpx1.*;
//import corpx2.*;
//import corpy2.*;
//import pg.common.*;
//import ta.common.*;
//import vv.common.*;

//*** PROGRAM=AF0Q ****
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 09/03/93   tdodso   4.1 conversion.
// 02-15-95   kj       xsn-ysn
// *********************
Program AF0Q type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AF0QW01 AF0QW01; // record
  AF0QW02 AF0QW02; // record
  AF0QW03 AF0QW03; // record
  AF4REC AF4REC; // record
  AFWREC AFWREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  VAFCTL02 VAFCTL02; //record
  XP1REC XP1REC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use AF0QT02; // table
  use XGATBL {deleteAfterUse = yes}; // table
  use XSUTBL {deleteAfterUse = yes}; // table
  use XPCTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use AF0QM.AF0QM001, // form
  AF0QM.TA0PM001,
  AF0QM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAF001: XPAF001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/
    ;
    set AFWREC empty; /* Initialize working storage*/
    set AF4REC empty; /* Initialize working storage*/
    set AF0QW01 empty; /* Initialize working storage*/
    set AF0QW02 empty; /* Initialize working storage*/
    set AF0QW03 empty; /* Initialize working storage*/
    set SQLCA empty; /* Initialize working storage*/
    set ERRSQLCA empty; /* Initialize working storage*/
    set PG1REC empty; /* Initialize working storage*/
    set PG2REC empty; /* Initialize working storage*/
    set TA1REC empty; /* Initialize working storage*/
    set TA5REC empty; /* Initialize working storage*/
    set TAEREC empty; /* Initialize working storage*/
    set XX0XW01 empty; /* Initialize working storage*/
    set XX0XW02 empty; /* Initialize working storage*/
    set AF0QM001 initial; /* Initialize map output area*/
    AFWREC.AFWAPPL = "AF0Q"; /* Initialize appl ID for this appl*/
    AFWREC.AFWPRCSN = "    "; /* Initialize process number to zero*/
    ;
    AFWREC.AFWMAP = "1"; /* Indicate map to be displayed*/
    AFWREC.AFWSWR = "Y"; /* Indicate request for data*/
    ;
    goto AF0Q001; /* Converse Special Initialization*/
    ;
    ;
    AF0Q001: AF0Q001();
     /* *************************************************************/
     /* Flow to converse*/
     /* *************************************************************/
    ;
    goto AF0Q002;
    ;
    ;
    AF0Q002: AF0Q002();
     /* *************************************************************/
      /* Flow to converse*/
     /* *************************************************************/
    ;
    goto AF0Q002;
    ;
    ;
  end // end main
end // end AF0Q

// Special initialization
Function AF0Q001()
   /* ------------------------------------------------------------*/
             /* af0q Special Initialization*/
   /* ------------------------------------------------------------*/
  ;
  AFWREC.AFWPRCSN = "M001"; /* Indicate map # 1*/
  XP1REC.XP1MNO = 0; /* Initialize xp1rec message no.*/
  ;
  ;
end // end AF0Q001

// Choose which map to display
Function AF0Q002()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display maps.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the only map.*/
      /* Otherwise, indicate error and exit to Master Menu.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  AFWREC.XXXMAPNM = AFWREC.AFWERLOC; /* Move map name to afwrec*/
  AFWREC.AFWPRCSN = "    "; /* Re-Initialize process name*/
  ;
  AF0Q100(); /* Display map 1*/
  ;
  AF0QW03.XSECD = AF0QM001.XSECD; /* move orignl sesn-cd to wrkng-st*/
  AF0QW03.AF0QWSNY = AF0QM001.XSNYR; /* move orignl sesn-yr to wrk-st*/
  AF0QW03.XXXUSER = AF0QM001.XXXUSER; /* move orignl user-id to wk-st*/
  ;
end // end AF0Q002

// Driver process for 100 map
Function AF0Q100()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  AF0Q120(); /* Format and display the map*/
  ;
  AF0Q130(); /* Check attention identifier*/
  ;
  AF0Q140(); /* Reset fields to normal intensity*/
  ;
  AF0Q150(); /* Verify the entered data*/
  ;
  AF0Q160(); /* Process valid input request*/
  ;
  ;
end // end AF0Q100

// Format and display the map
Function AF0Q120()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  if (XP1REC.XP1MNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(XP1REC.XP1MNO);
  end
  ;
  if (converseVar.validationMsgNum != 0 /* Error message to display*/
   && converseVar.validationMsgNum != 64)
    set AF0QM001 alarm; /* Indicate sound alarm*/
  else
    ;
    converseLib.clearScreen();
     /* Clear map output area*/
    AFWREC.AFWPRCSN = "    "; /* Clear process indicator*/
    AF0QM001.XXXPRCNM = AFWREC.AFWERLOC;
                                   /* move process ind to screen*/
    AF0QM001.XXXCURDT = VGVar.currentShortGregorianDate; /* move today's date to map*/
    AF0Q123(); /* move xp1rec to screen*/
    ;
  end
  ;
  AFWREC.AFWNMO = 0; /* reset info message no.*/
  ;
  converse AF0QM001 ;
  ;
  ;
end // end AF0Q120

// move xp1rec cds & desc to map
Function AF0Q123()
   /* ------------------------------------------------------------*/
   /* move xp1rec codes and descriptions to the map.*/
   /* ------------------------------------------------------------*/
  ;
  AF0QM001.XXXUSER = XP1REC.XXXUSER;
  AF0QM001.XSECD = XP1REC.XSECD;
  AF0QM001.XSNYR = XP1REC.XSNYR;
  AF0QM001.AF0QMSCD = AF0QW01.AF0QWPSC;
  AF0QM001.AF0QMSNY = AF0QW01.AF0QWPYR;
  ;
  ;
  ;
end // end AF0Q123

// Check attention identifier
Function AF0Q130()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set AF0QM001 initial; /* Clear the map fields*/
    set XP1REC empty;
    XP1REC.XXXUSER = COMMAREA.CAUSERID;
    XPAF010();
    XPAF020();
    XP1REC.XP1MNO = 64;
    AF0QW03.AF0QWSJC = "Y";
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  if (AF0QM001.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      COMMAREA.CATOAP = AF0QM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = AF0QM001.CAITEM; /* Application data*/
      ;
      XSAFS01(); /* Exit to another application*/
      ;
    else
      ;
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      ;
    end
    ;
    set AF0QM001.CATOAP cursor, modified, bold; /* Highlight*/
    ;
    AFWREC.AFWPRCSN = "130 "; /* Process number*/
    AF0QM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    XSAFS01(); /* Exit to another application*/
    ;
    AFWREC.AFWPRCSN = "130 "; /* Process number*/
    AF0QM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    AFWREC.AFWPRCSN = "130 "; /* Process number*/
    AF0QM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ;
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      ;
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      ;
    end
    ;
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  ;
end // end AF0Q130

// Reset highlighted fields
Function AF0Q140()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set AF0QM001.XXXUSER initialAttributes;
  set AF0QM001.XSECD initialAttributes;
  set AF0QM001.XSNYR initialAttributes;
  set AF0QM001.AF0QMSCD initialAttributes;
  set AF0QM001.AF0QMSNY initialAttributes;
  set AF0QM001.VAGen_EZEMSG initialAttributes;
  ;
  ;
  set AF0QM001.CATOAP initialAttributes; /* Commarea TO application*/
  set AF0QM001.CAITEM initialAttributes; /* Commarea application data*/
  ;
end // end AF0Q140

// Verify the entered data
Function AF0Q150()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Verify any changed data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/
  ;
  AFWREC.AFWPRCSN = "    "; /* Clear Process number*/
  AF0QM001.XXXPRCNM = AFWREC.AFWERLOC; /* Clear Process name*/
  ;
  if (AF0QM001.CAITEM > " ") /* Application data was entered*/
    ;
    set AF0QM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    AFWREC.AFWPRCSN = "150 "; /* Process number*/
    AF0QM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/
    ;
  end
  ;
  XP1REC.XP1MNO = 0;
  AF0Q153(); /* Verify any changed data*/
  ;
  if (XP1REC.XP1MNO == 0) /* No errors were found*/
    XP1REC.XP1MNO = 64; /* submit JCL message*/
  end
  ;
  if (XP1REC.XP1MNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(XP1REC.XP1MNO);
  end
  ;
end // end AF0Q150

// Verify any changed data
Function AF0Q153()
   /* ------------------------------------------------------------*/
   /* Return to the previous process if no data was changed.*/
   /* Verify the data that was changed.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  XP1REC.XP1ERRFL = " "; /* clear error flag*/
  AF0QS25(); /* verify season code/year combo*/
  ;
  if (XP1REC.XP1ERRFL == "1" /* season year not valid*/
   || XP1REC.XP1ERRFL == "3") /* both season year not valid*/
    set AF0QM001.XSECD cursor, bold; /* highlight error*/
    set AF0QM001.XSNYR bold; /* highlight error*/
    set AF0QM001.VAGen_EZEMSG bold; /* highlight err mess*/
    AFWREC.AFWPRCSN = "153 "; /* process number*/
    if (XP1MNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(XP1MNO);
    end /* move err msg number*/
  end
  ;
  if (XP1REC.XP1ERRFL == "2" /* past season year not valid*/
   || XP1REC.XP1ERRFL == "3") /* both season year not valid*/
    set AF0QM001.AF0QMSCD cursor, bold; /* highlight error*/
    set AF0QM001.AF0QMSNY bold; /* highlight error*/
    set AF0QM001.VAGen_EZEMSG bold; /* highlight err mess*/
    AFWREC.AFWPRCSN = "153 "; /* process number*/
    if (XP1MNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(XP1MNO);
    end /* move err msg number*/
  end
  ;
  XP1REC.XP1ERRFL = " "; /* clear error flag*/
  AF0QS30(); /* verify season year*/
  ;
  if (XP1REC.XP1ERRFL == "1" /* season year not valid*/
   || XP1REC.XP1ERRFL == "3") /* both season year not valid*/
    set AF0QM001.XSNYR cursor, bold; /* highlight error*/
    set AF0QM001.VAGen_EZEMSG bold; /* highlight err mess*/
    AFWREC.AFWPRCSN = "153 "; /* process number*/
    if (XP1MNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(XP1MNO);
    end /* move err msg number*/
  end
  ;
  if (XP1REC.XP1ERRFL == "2" /* season year not valid*/
   || XP1REC.XP1ERRFL == "3") /* both season year not valid*/
    set AF0QM001.AF0QMSNY cursor, bold; /* highlight error*/
    set AF0QM001.VAGen_EZEMSG bold; /* highlight err mess*/
    AFWREC.AFWPRCSN = "153 "; /* process number*/
    if (XP1MNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(XP1MNO);
    end /* move err msg number*/
  end
  ;
  XP1REC.XP1ERRFL = " "; /* clear error flag*/
  AF0QS35(); /* verify season code*/
  ;
  if (XP1REC.XP1ERRFL != " ") /* season code not valid*/
    set AF0QM001.XSECD cursor, bold; /* highlight error*/
    set AF0QM001.VAGen_EZEMSG bold; /* highlight err mess*/
    AFWREC.AFWPRCSN = "153 "; /* process number*/
    if (XP1MNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(XP1MNO);
    end /* move err msg number*/
  end
  ;
  ;
  XP1REC.XP1ERRFL = " "; /* clear error flag*/
  AF0QS37(); /* verify season code*/
  ;
  if (XP1REC.XP1ERRFL != " ") /* season code not valid*/
    set AF0QM001.AF0QMSCD cursor, bold; /* highlight error*/
    set AF0QM001.VAGen_EZEMSG bold; /* highlight err mess*/
    AFWREC.AFWPRCSN = "153 "; /* process number*/
    if (XP1MNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(XP1MNO);
    end /* move err msg number*/
  end
  ;
  XP1REC.XP1ERRFL = " "; /* clear error flag*/
  AF0QS40(); /* verify forecaster code*/
  ;
  if (XP1REC.XP1ERRFL != " ") /* frcstr code not valid*/
    set AF0QM001.XXXUSER cursor, bold; /* highlight error*/
    set AF0QM001.VAGen_EZEMSG bold; /* highlight err mess*/
    AFWREC.AFWPRCSN = "153 "; /* process number*/
    if (XP1MNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(XP1MNO);
    end /* move err msg number*/
  end
  ;
  return; /* return to prev process*/
  ;
  ;
end // end AF0Q153

// Process valid input request
Function AF0Q160()
   /* ------------------------------------------------------------*/
   /* Check for validation errors*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 64
   && AF0QW03.AF0QWSJC == "Y")
    AF0QW03.AF0QWSJC = " ";
    exit stack; /* Redisplay map with message*/
  end
  ;
  if (converseVar.validationMsgNum != 64)
    exit stack; /* Redisplay map with message*/
  end
  ;
  if (converseVar.validationMsgNum == 64
   && AF0QW03.AF0QWSJC != "Y") /* Not ready to submit jcl*/
    AF0QW03.AF0QWSJC = "Y"; /* Set submit-flag for confirmation*/
    exit stack; /* Redisplay map with message*/
  end
  ;
  if (AF0QW03.AF0QWSJC == "Y") /* Submit-flag set*/
    AF0QW03.AF0QWSJC = " "; /* Clear submit-flag*/
  end
  ;
  AF0Q163(); /* Determine region*/
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  AF0QW01.AF0QWIXT = 1; /* Initialize JCL table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/
  ;
  if (TA3REC.TA3RGNID == "03") /* If PRODUCTION region*/
    AF0QW01.AF0QWIXT = 1; /* Set index to point at PROD JCL*/
  else
    if ("/*EOF" in AF0QT02.TARJCL) /* Find end of PROD JCL*/
      AF0QW01.AF0QWIXT = sysVar.arrayIndex;
      AF0QW01.AF0QWIXT = AF0QW01.AF0QWIXT + 1; /* Point index at TEST JCL*/
    else
      AF0QW01.AF0QWIXT = 1;
    end
  end
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (AF0QW01.AF0QWIXT > 0) /* Until end of table*/
    ;
    if (AF0QT02.TARTYPE[AF0QWIXT] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format parameters for the long short for submission*/
      /* ------------------------------------------------------------*/
      ;
      set AF0QW02 empty; /* Reset parameters work area*/
      ;
      AF0QW02.AF0QWOBI = "O"; /* Indicate online*/
      ;
      AF0QW02.XSECD = XP1REC.XSECD; /* Season cd*/
      AF0QW02.AF0QMSCD = AF0QW01.AF0QWPSC; /* Season cd*/
      ;
      AF0QW01.AF0QWXSS = XP1REC.XSECD; /* move sesn cd to wk area*/
      AF0QW01.AF0QWXYR = XP1REC.XSNYR; /* move sesn yr to wk area*/
      ;
      AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
      while (AFWREC.AFWIDX5 != 9999
       && AFWREC.AFWIDX5 != 0) /* end of search condition*/
        if (YSNTBL.XSNABRV[AFWIDX5] == AF0QW01.AF0QWXSA
         && YSNTBL.XGPCD[AFWIDX5] == "03"
         && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
          ;
          AF0QW02.XSNYR = YSNTBL.XSNYR[AFWIDX5]; /* Move xsnyr*/
          AFWREC.AFWIDX5 = 0; /* END OF TABLE*/
        else
          if (YSNTBL.XGPCD[AFWIDX5] != "99")
            AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
          else
            AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
          end
        end
      end
      ;
      ;
      AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
      while (AFWREC.AFWIDX5 != 9999
       && AFWREC.AFWIDX5 != 0) /* end of search condition*/
        if (YSNTBL.XSNABRV[AFWIDX5] == AF0QW01.AF0QWXSX
         && YSNTBL.XGPCD[AFWIDX5] == "03"
         && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
          ;
          AF0QW02.AF0QMSNY = YSNTBL.XSNYR[AFWIDX5];
          AFWREC.AFWIDX5 = 0; /* END OF TABLE*/
        else
          if (YSNTBL.XGPCD[AFWIDX5] != "99")
            AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
          else
            AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
          end
        end
      end
      ;
      if (XP1REC.PG1FCTCD <= "  ") /* If no values*/
        AF0QW02.PG1FCTCD = "**"; /* Forecaster code*/
      else
        AF0QW02.PG1FCTCD = XP1REC.PG1FCTCD; /* Forecaster code*/
      end
      ;
      ;
      AF0QT02.TARJCL[AF0QWIXT] = AF0QW02.TARJCL;
      ;
    end
    ;
    ;
    /* ------------------------------------------------------------*/
     /* Format the Job Control Language statement from the table.*/
    /* ------------------------------------------------------------*/
    ;
    TA6REC.TARJCL[TA6INDEX] = AF0QT02.TARJCL[AF0QWIXT]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = AF0QT02.TARTYPE[AF0QWIXT]; /* Type*/
    ;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
    ;
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (AF0QT02.TARJCL[AF0QWIXT] == "/*EOF") /* End of table*/
      AF0QW01.AF0QWIXT = 0; /* Indicate end of table*/
    else
      AF0QW01.AF0QWIXT = AF0QW01.AF0QWIXT + 1; /* Increment table index*/
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  converseLib.validationFailed(0);
  AF0Q161(); /* Submit the JCL*/
  ;
   /* ------------------------------------------------------------*/
   /* Clear map to avoid inadvertant double submition of the job*/
   /* ------------------------------------------------------------*/
  ;
  set AF0QM001 initial;
  XP1REC.XP1MNO = 70;
  set AF0QM001.CATOAP cursor;
end // end AF0Q160

// Submit Job/Select Printer
Function AF0Q161()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6RTNCD = " "; /* Clear subroutine return code*/
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* No message*/
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Submit the JCL*/
  end
  ;
   /* ------------------------*/
   /* Fix process location*/
   /* ------------------------*/
  ;
  AFWREC.AFWPRCSN = "161 "; /* Process number*/
  AF0QM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    XP1REC.XP1MNO = 22; /* Indicate job was submitted*/
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    XP1REC.XP1MNO = 69; /* Indicate user cancelled*/
  else
    XP1REC.XP1MNO = 10; /* Indicate system error*/
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end AF0Q161

// Determine Region
Function AF0Q163()
   /* ------------------------------------------------------------*/
    /* FIND WHICH ENVIRONMENT CURRENT PROGRAM IS RUNNING IN*/
   /* ------------------------------------------------------------*/
  ;
  set TA3REC empty;
  ;
  TA3REC.TA3OPTN = "ASSIGN ";
  ;
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000")
    /* NEXT SENTENCE*/
  else
    TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
    TAEREC.TAEDESC2 = TA3REC.TA3GROUP; /* Subroutine parameters*/
    ;
    AFWREC.AFWPRCSN = "163"; /* Module identification*/
    converseLib.validationFailed(10); /* Indicate system error*/
    ;
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "CSP ERROR -BAD CALL";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = AFWREC.AFWPRCSN; /* Program number*/
    TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
    TA1REC.TA1MAPNO = "M001"; /* Map number*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
    ;
    exit stack; /* Exit to display map*/
    ;
    ;
  end
  ;
  if (TA3REC.TA3RTNCD == 0)
    return;
  else
    TAEREC.TAEDESC1 = TA3REC.TA3RTNCD; /* CSP return code*/
    TAEREC.TAEDESC2 = TA3REC.TA3GROUP; /* Subroutine parameters*/
    ;
    AFWREC.AFWPRCSN = "163"; /* Module identification*/
    converseLib.validationFailed(10); /* Indicate system error*/
    ;
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "GET REGION";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = AFWREC.AFWPRCSN; /* Program number*/
    TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
    TA1REC.TA1MAPNO = "M001"; /* Map number*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
    ;
    exit stack; /* Exit to display map*/
    ;
    ;
  end
  ;
  ;
  ;
end // end AF0Q163

// Edit season cd/yr
Function AF0QS25()
  AF0QW01.AF0QWXSS = AF0QM001.XSECD; /* move sesn cd to wk area*/
  AF0QW01.AF0QWXYR = AF0QM001.XSNYR; /* move sesn yr to wk area*/
  ;
  AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
  while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
    if (YSNTBL.XSNABRV[AFWIDX5]
     == AF0QW01.AF0QWXSA
     && YSNTBL.XGPCD[AFWIDX5] == "03"
     && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
      ;
      AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
    else
      if (YSNTBL.XGPCD[AFWIDX5] != "99")
        AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
      else
        AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
            /* (season cd/yr combination invalid)*/
        XP1REC.XP1ERRFL = "1";
        AFWREC.AFWPRCSN = "S25 "; /* Process number*/
        AF0QM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/
        XP1REC.XP1MNO = 67; /* indicate error message*/
        XP1REC.XSECD = "  ";
        XP1REC.XSNYR = 0;
      end
    end
  end
  ;
  AF0QW01.AF0QWPSC = AF0QM001.AF0QMSCD; /* move sesn cd to wk area*/
  AF0QW01.AF0QWPYR = AF0QM001.AF0QMSNY; /* move sesn yr to wk area*/
  ;
  ;
  AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
  while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
    if (YSNTBL.XSNABRV[AFWIDX5]
     == AF0QW01.AF0QWXSX
     && YSNTBL.XGPCD[AFWIDX5] == "03"
     && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
      ;
      return;
    else
      if (YSNTBL.XGPCD[AFWIDX5] != "99")
        AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
      else
        AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        AFWREC.AFWPRCSN = "S25 "; /* Process number*/
        AF0QM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/
        XP1REC.XP1MNO = 67; /* indicate error message*/
        AF0QW01.AF0QWPSC = "  ";
        AF0QW01.AF0QWPYR = 0;
      end
    end
  end
  ;
            /* (season cd/yr combination invalid)*/
  if (XP1REC.XP1ERRFL == "1")
    XP1REC.XP1ERRFL = "3";
  else
    XP1REC.XP1ERRFL = "2";
  end
  ;
end // end AF0QS25

// Edit season year
Function AF0QS30()
  XP1REC.XSNYR = AF0QM001.XSNYR; /* save to working storage*/
  ;
  AF0QW01.AF0QWPSY = 0; /* initialize xsnyr wk area*/
  AF0QW01.AF0QWPSY = AF0QM001.AF0QMSNY; /* SAVE TO WORKING STORAGE*/
  AF0QW01.AF0QWPSY = AF0QW01.AF0QWPSY + 1900; /* move century*/
  ;
            /* (validate season year stand-alone)*/
  ;
  AF0QW01.AF0QWXSY = XP1REC.XSNYR; /* move to wk area*/
  AF0QW01.AF0QWXSY = AF0QW01.AF0QWXSY + 1900; /* move century*/
  ;
  AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
  while (AFWREC.AFWIDX5 != 9999
   && AFWREC.AFWIDX5 != 0) /* end of search condition*/
    if (YSNTBL.XSNYR[AFWIDX5]
     == AF0QW01.AF0QWXSY
     && YSNTBL.XGPCD[AFWIDX5] == "03"
     && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
      ;
      AFWREC.AFWIDX5 = 0; /* END OF TABLE*/
    else
      if (YSNTBL.XGPCD[AFWIDX5] != "99")
        AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
      else
                     /* (field in error)*/
        AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        XP1REC.XP1ERRFL = "1";
        AFWREC.AFWPRCSN = "S30 "; /* Process number*/
        AF0QM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/
        XP1REC.XP1MNO = 26; /* indicate error message*/
        XP1REC.XSNYR = 0; /* save to working storage*/
        ;
      end
    end
  end
  ;
  ;
  AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
  while (AFWREC.AFWIDX5 != 9999
   && AFWREC.AFWIDX5 != 0) /* end of search condition*/
    if (YSNTBL.XSNYR[AFWIDX5]
     == AF0QW01.AF0QWPSY
     && YSNTBL.XGPCD[AFWIDX5] == "03"
     && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
      ;
      AFWREC.AFWIDX5 = 0; /* END OF TABLE*/
    else
      if (YSNTBL.XGPCD[AFWIDX5] != "99")
        AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
      else
        AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        if (XP1REC.XP1ERRFL == "1")
          XP1REC.XP1ERRFL = "3";
        else
          XP1REC.XP1ERRFL = "2";
        end
        AFWREC.AFWPRCSN = "S30 "; /* Process number*/
        AF0QM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/
        XP1REC.XP1MNO = 26; /* indicate error message*/
        XP1REC.XSNYR = 0; /* save to working storage*/
      end
    end
  end
  ;
end // end AF0QS30

// season code edit in selection
Function AF0QS35()
   /* ============================================================*/
   /* =====                                                  =====*/
   /* ===== season code edit in selection criteria           =====*/
   /* =====                                                  =====*/
   /* ============================================================*/
  ;
  XP1REC.XSECD = AF0QM001.XSECD;
  XSAFSSE();
  if (XP1REC.XP1ERRFL == "1")
    AFWREC.AFWPRCSN = "S35 ";
    AF0QM001.XXXPRCNM = AFWREC.AFWERLOC;
    XP1REC.XP1MNO = 16;
  else
    if (XP1REC.XSECD in XSETBL.XSECD)
      AF0QM001.XSECD = XP1REC.XSECD;
    else
      XP1REC.XP1ERRFL = "1";
      AFWREC.AFWPRCSN = "S35 ";
      AF0QM001.XXXPRCNM = AFWREC.AFWERLOC;
      XP1REC.XP1MNO = 16;
      XP1REC.XSECD = "  ";
    end
    if (XP1REC.XXXSTAT == "I")
      XP1REC.XP1ERRFL = "1";
      AFWREC.AFWPRCSN = "S35 ";
      AF0QM001.XXXPRCNM = AFWREC.AFWERLOC;
      XP1REC.XP1MNO = 21;
    end
  end
  ;
  ;
   /* ====================== END OF PROCESS ======================*/
  ;
  ;
  ;
end // end AF0QS35

// season code edit in selection
Function AF0QS37()
   /* ============================================================*/
   /* =====                                                  =====*/
   /* ===== season code edit in selection criteria           =====*/
   /* =====                                                  =====*/
   /* ============================================================*/
  ;
  XP1REC.XSECD = AF0QM001.AF0QMSCD;
  XSAFSSE();
  if (XP1REC.XP1ERRFL == "1")
    AFWREC.AFWPRCSN = "S35 ";
    AF0QM001.XXXPRCNM = AFWREC.AFWERLOC;
    XP1REC.XP1MNO = 16;
  else
    if (XP1REC.XSECD in XSETBL.XSECD)
      AF0QM001.AF0QMSCD = XP1REC.XSECD;
    else
      XP1REC.XP1ERRFL = "1";
      AFWREC.AFWPRCSN = "S35 ";
      AF0QM001.XXXPRCNM = AFWREC.AFWERLOC;
      XP1REC.XP1MNO = 16;
      AF0QM001.AF0QMSCD = "  ";
    end
    if (XP1REC.XXXSTAT == "I")
      XP1REC.XP1ERRFL = "1";
      AFWREC.AFWPRCSN = "S35 ";
      AF0QM001.XXXPRCNM = AFWREC.AFWERLOC;
      XP1REC.XP1MNO = 21;
    end
  end
  ;
  XP1REC.XSECD = AF0QM001.XSECD;
  ;
   /* ====================== END OF PROCESS ======================*/
  ;
  ;
  ;
end // end AF0QS37

// Verify forecaster name
Function AF0QS40()
  ;
  if (AF0QM001.XXXUSER != " ")
    ;
    XP1REC.XP1ERRFL = " "; /* Reset error flag*/
    XP1REC.XXXUSER = AF0QM001.XXXUSER;
    XPAF010(); /* Obtain Forecaster Code*/
    ;
    if (XP1REC.XP1ERRFL != " ") /* Forecaster Code not found*/
      ;
      ;
    else
      if (PG1REC.PG1FCTCD == " ")
        XP1REC.XP1ERRFL = "1";
        AFWREC.AFWPRCSN = "S40 "; /* Process number*/
        AF0QM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/
        XP1REC.PG1FCTCD = " "; /* Reset save area*/
        XP1REC.XP1MNO = 66; /* indicate error message*/
        return; /* Return to calling process*/
      end
    end
  else
    XP1REC.XP1ERRFL = "1";
    AFWREC.AFWPRCSN = "S40 "; /* Process number*/
    AF0QM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/
    XP1REC.XP1MNO = 65; /* indicate error message*/
    return; /* Return to calling process*/
  end
  ;
  ;
end // end AF0QS40

//*** RECORD=AF0QW01 ****
// ********************************
// Application Working Storage (1).
// ********************************
// ***********************
Record AF0QW01 type basicRecord
  10 TARJCL TARJCL ; 
  10 TARTYPE TARTYPE ; 
  10 AF0QWSWS AF0QWSWS ; 
  10 AF0QWUID AF0QWUID ; 
  10 AF0QWXSA AF0QWXSA ; 
    15 AF0QWXSS AF0QWXSS ; 
    15 AF0QWXYR AF0QWXYR ; 
  10 AF0QWXSX AF0QWXSX ; 
    15 AF0QWPSC AF0QWPSC ; 
    15 AF0QWPYR AF0QWPYR ; 
  10 AF0QWIXT AF0QWIXT ; 
  10 AF0QWXSY AF0QWXSY ; 
  10 AF0QWPSY AF0QWPSY ; 
end // end AF0QW01

//*** RECORD=AF0QW02 ****
//    ***** Calculate Long and Short *****
// JCL variable storage for AF0M
// ***********************
Record AF0QW02 type basicRecord
  10 TARJCL TARJCL ; 
    15 AF0QWOBI AF0QWOBI ; 
    15 PG1FCTCD PG1FCTCD ; 
    15 XSECD XSECD ; 
    15 XSNYR XSNYR ; 
    15 AF0QMSCD AF0QMSCD ; 
    15 AF0QMSNY AF0QMSNY ; 
    15 * char(69) ; 
end // end AF0QW02

//*** RECORD=AF0QW03 ****
// ------------------------------------------------------------
//     *** Parameter 1 for job AF1231- Sysunit= CARDIN ***
// ------------------------------------------------------------
// ***********************
Record AF0QW03 type basicRecord
  10 XSECD XSECD ; 
  10 AF0QWSNY AF0QWSNY ; 
  10 XXXUSER XXXUSER ; 
  10 AF0QWSJC AF0QWSJC ; 
end // end AF0QW03

// xse-sesn-cd
DataItem AF0QMSCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// season year range
DataItem AF0QMSNY smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// JCL table index
DataItem AF0QWIXT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// online or batch indicator
DataItem AF0QWOBI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSN wk season cd
DataItem AF0QWPSC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xsnyr work area
DataItem AF0QWPSY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XSN wk season yr
DataItem AF0QWPYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Submit JCL (y/n) switch
DataItem AF0QWSJC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map season year range
DataItem AF0QWSNY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Job submitted switch
DataItem AF0QWSWS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Userid source indicator
DataItem AF0QWUID char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSN wk abrv
DataItem AF0QWXSA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSN wk season cd
DataItem AF0QWXSS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSN wk abrv
DataItem AF0QWXSX char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xsnyr work area
DataItem AF0QWXSY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XSN wk season yr
DataItem AF0QWXYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

