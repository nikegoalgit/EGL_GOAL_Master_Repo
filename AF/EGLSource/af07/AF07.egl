package af07;

import af.common.*;
import corpcom2.XP1REC;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPAF001;
import corpcom3.XPTA0P;
import corpcom3.XSAFS01;
import corpcom3.XSAFSGA;
import corpcom3.XSAFSPC;
import corpcom3.XSAFSPL;
import corpcom3.XSAFSSE;
import corpcom4.XSPG201;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XGACD;
import corpx1.XGATBL;
import corpx1.XPCTBL;
import corpx1.XPLTBL;
import corpx1.XPRTBL;
import corpx1.XSETBL;
import corpx2.XPCCD;
import corpx2.XPLCD;
import corpx2.XSECD;
import corpy2.YSNTBL;
import pg.common.PG1FCTCD;
import pg.common.PG1REC;
import pg.common.PG2REC;
import sy.common.SY1STNBR;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TA6REC;
import ta.common.TAEREC;
//*** PROGRAM=AF07 ****
// This application allows the user to submit JCL (AF1711) that
// will run the job to create a partial forecast performance
// snapshot.
// 
// Upon initial entry, the user's own name is given as default
// forecaster.  they may enter further selection criteria such
// as gender age, categoy, or even just a certain style.
// 
// The user may exit to any allowed application via FAST PATH
// or PF key at any time.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 09/06/91            New application.
// 02-17-95   kj       XSN-YSN
// *********************
Program AF07 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AF07W01 AF07W01; // record
  AF07W02 AF07W02; // record
  AFLREC AFLREC; // record
  AFNREC AFNREC; // record
  AFWREC AFWREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  XP1REC XP1REC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use AF07T01; // table
  use XPRTBL {deleteAfterUse = yes}; // table
  use XGATBL {deleteAfterUse = yes}; // table
  use XPLTBL {deleteAfterUse = yes}; // table
  use XPCTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use AF07M.AF07M001, // form
  AF07M.XX0XM001,
  AF07M.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAF001: XPAF001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the apparel forecast performance process.*/
     /* ------------------------------------------------------------*/

    set AFWREC empty; /* Initialize working storage*/
    set AFNREC empty; /* Initialize working storage*/
    set AFLREC empty; /* Initialize working storage*/
    set AF07W01 empty; /* Initialize working storage*/
    set AF07W02 empty; /* Initialize working storage*/
    set SQLCA empty; /* Initialize working storage*/
    set ERRSQLCA empty; /* Initialize working storage*/
    set PG1REC empty; /* Initialize working storage*/
    set PG2REC empty; /* Initialize working storage*/
    set TA1REC empty; /* Initialize working storage*/
    set TA5REC empty; /* Initialize working storage*/
    set TAEREC empty; /* Initialize working storage*/
    set XX0XW01 empty; /* Initialize working storage*/
    set XX0XW02 empty; /* Initialize working storage*/
    set AF07M001 initial; /* Initialize map output area*/
    AFWREC.AFWAPPL = "AF07"; /* Initialize appl ID for this appl*/
    AFWREC.AFWPRCSN = "0000"; /* Initialize process number to zero*/

    AFWREC.AFWMAP = "1"; /* Indicate map to be displayed*/
    AFWREC.AFWSWR = "Y"; /* Indicate request for data*/
    AF07W01.AF07WSUB = "N"; /* indicate to submit job*/

                    /* *//* assign constants*/
    XP1REC.XGPCD = "03";
    XP1REC.XDVCD = "01";
    XP1REC.XDVDESC = "NIKE DOMESTIC";


                    /* process passed items*/
    if (COMMAREA.CAFRMSYS == "AF")
      AF07M001.XXXUSER = XP1REC.XXXUSER;
      AF07M001.XSECD = XP1REC.XSECD;
      AF07M001.XSNYR = XP1REC.XSNYR;
    end

    set AF07M001.XSECD cursor; /* set cursor*/

    goto AF07100; /* Converse Special Initialization*/


    AF07100: AF07100();
     /* *************************************************************/
     /* Flow to converse apparel forecast performance             **/
     /* *************************************************************/

    goto AF07100;


  end // end main
end // end AF07

// Driver process for 100 map
Function AF07100()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  AF07120(); /* Format and display the map*/

  AF07130(); /* Check attention identifier*/

  AF07140(); /* Reset fields to normal intensity*/

  AF07150(); /* Verify the entered data*/

  AF07160(); /* Process valid input request*/


end // end AF07100

// Format and display the map
Function AF07120()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (AFWREC.AFWFIRST != " ")
    if (AF07W01.AF07WPND != "Y")
      if (converseVar.validationMsgNum == 0)
        AF07123();
      else
        AFWREC.AFWNMO = converseVar.validationMsgNum;
      end
    end
  end

  AF07M001.XXXCURDT = VGVar.currentShortGregorianDate; /* move today's date to map*/
  AF07M001.CATOAP = COMMAREA.CATOAP;
  AF07M001.CAITEM = COMMAREA.CAITEM;

  if (AFWREC.AFWNMO != 0)
    if (AFWREC.AFWNMO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(AFWREC.AFWNMO);
    end
  end

  if (converseVar.validationMsgNum != 0)
    AF07M001.XXXPRCNM = AFWREC.AFWERLOC;
    set AF07M001 alarm;
  end

  converse AF07M001 ;

   /* clear message work area and save fast path information*/
  AFWREC.AFWNMO = 0; /* info message number*/
  COMMAREA.CATOAP = AF07M001.CATOAP; /* to application*/
  COMMAREA.CAITEM = AF07M001.CAITEM; /* application data*/

end // end AF07120

// move xp1rec cds & desc to map
Function AF07123()
   /* ------------------------------------------------------------*/
   /* format map data*/
   /* ------------------------------------------------------------*/

   /* ----------------------*/
   /* clear map fields*/
   /* ----------------------*/
  set AF07M001 initial; /* m001 input/output area*/

   /* ----------------------*/
   /* SET MAP FIELDS*/
   /* ----------------------*/
  if (COMMAREA.CAFRMSYS == "AF")
    AF07M001.XXXUSER = XP1REC.XXXUSER;
    AF07M001.XSECD = XP1REC.XSECD;
    AF07M001.XSNYR = XP1REC.XSNYR;
  else
    AF07M001.XXXUSER = AF07W01.AF07WFCT;
  end

  AF07M001.AFNEVNCD = AF07W01.AFNEVNCD;

  AF07M001.XGACD[1] = AF07W01.XGACD[1];
  AF07M001.XGACD[2] = AF07W01.XGACD[2];
  AF07M001.XGACD[3] = AF07W01.XGACD[3];

  AF07M001.XPLCD[1] = AF07W01.XPLCD[1];
  AF07M001.XPLCD[2] = AF07W01.XPLCD[2];
  AF07M001.XPLCD[3] = AF07W01.XPLCD[3];

  AF07M001.XPCCD[1] = AF07W01.XPCCD[1];
  AF07M001.XPCCD[2] = AF07W01.XPCCD[2];
  AF07M001.XPCCD[3] = AF07W01.XPCCD[3];

  AF07M001.SY1STNBR[1] = AF07W01.SY1STNBR[1];
  AF07M001.SY1STNBR[2] = AF07W01.SY1STNBR[2];
  AF07M001.SY1STNBR[3] = AF07W01.SY1STNBR[3];
  AF07M001.SY1STNBR[4] = AF07W01.SY1STNBR[4];
  AF07M001.SY1STNBR[5] = AF07W01.SY1STNBR[5];
  AF07M001.SY1STNBR[6] = AF07W01.SY1STNBR[6];

    /* set cursor position*/

  set AF07M001.XSECD cursor; /* cursor at xsecd field*/

end // end AF07123

// Check attention identifier
Function AF07130()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set AF07M001 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (AF07M001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      XSAFS01(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end
    set AF07M001.CATOAP cursor, modified, bold; /* Highlight*/
    AFWREC.AFWPRCSN = "130 "; /* Process number*/
    exit stack; /* Exit to redisplay map*/
  end

  if (AF07M001.CAITEM > " ") /* application data was entered*/
    set AF07M001.CAITEM cursor, modified, bold; /* highlight data*/
    converseLib.validationFailed(7); /* enter only with fast path*/
    AFWREC.AFWPRCSN = "130 "; /* process number*/
    exit stack; /* redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf9 /* or PF9 was pressed*/
   || converseVar.eventKey is pf10) /* or PF10 was pressed*/
    if (converseVar.eventKey is pf1) /* pf1 is pressed*/
      COMMAREA.CAITEM = "AF07M001"; /* appl find code*/
    end
    if (converseVar.eventKey is pf3) /* pf3 is pressed*/
      COMMAREA.CATOAP = "AF04"; /* fluctuations menu*/
    end
    if (converseVar.eventKey is pf9) /* pf9 is pressed*/
      COMMAREA.CATOAP = "AF08"; /* fluctuations menu*/
    end
    if (converseVar.eventKey is pf10) /* pf10 is pressed*/
      COMMAREA.CATOAP = "AF06"; /* snap inq. menu*/
    end
    XSAFS01(); /* Exit to another application*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    AFWREC.AFWPRCSN = "130 "; /* Process number*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end

  if (AFWREC.AFWFIRST == " ") /* first time throught*/
    if (converseVar.eventKey not enter)
      AFWREC.AFWPRCSN = "130 "; /* process number*/
      converseLib.validationFailed(4); /* indicate invalid attention key*/
      exit stack; /* exit to redisplay map*/
    end
  end

end // end AF07130

// Reset highlighted fields
Function AF07140()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set AF07M001.XXXUSER initialAttributes;
  set AF07M001.XSECD initialAttributes;
  set AF07M001.XSNYR initialAttributes;
  set AF07M001.AFNEVNCD initialAttributes;
  set AF07M001.XGACD[1] initialAttributes;
  set AF07M001.XGACD[2] initialAttributes;
  set AF07M001.XGACD[3] initialAttributes;
  set AF07M001.XPLCD[1] initialAttributes;
  set AF07M001.XPLCD[2] initialAttributes;
  set AF07M001.XPLCD[3] initialAttributes;
  set AF07M001.XPCCD[1] initialAttributes;
  set AF07M001.XPCCD[2] initialAttributes;
  set AF07M001.XPCCD[3] initialAttributes;
  set AF07M001.SY1STNBR[1] initialAttributes;
  set AF07M001.SY1STNBR[2] initialAttributes;
  set AF07M001.SY1STNBR[3] initialAttributes;
  set AF07M001.SY1STNBR[4] initialAttributes;
  set AF07M001.SY1STNBR[5] initialAttributes;
  set AF07M001.SY1STNBR[6] initialAttributes;
  set AF07M001.VAGen_EZEMSG initialAttributes;

  set AF07M001.CATOAP initialAttributes; /* Commarea TO application*/
  set AF07M001.CAITEM initialAttributes; /* Commarea application data*/

   /* *==========================================*/
   /* if no pop-up windows requested, return*/
   /* *==========================================*/

  if (AF07M001.XSECD == "?"    /* season cd*/
   || AF07M001.XGACD[1] == "?" /* gender/age*/
   || AF07M001.XGACD[2] == "?" /* gender/age*/
   || AF07M001.XGACD[3] == "?" /* gender/age*/
   || AF07M001.XPLCD[1] == "?" /* product line*/
   || AF07M001.XPLCD[2] == "?" /* product line*/
   || AF07M001.XPLCD[3] == "?" /* product line*/
   || AF07M001.XPCCD[1] == "?" /* category cd*/
   || AF07M001.XPCCD[2] == "?" /* category cd*/
   || AF07M001.XPCCD[3] == "?") /* category cd*/
    if (converseVar.eventKey not enter) /* enter key not pressed*/
      AFWREC.AFWPRCSN = "140 "; /* process number*/
      converseLib.validationFailed(4); /* indicate key not valid*/
      exit stack; /* exit to display map*/
    end
  else
    AF07W01.AF07WPND = " "; /* deactivate pop-up window ind*/
    return;
  end

   /* *==========================================*/
  /* pop-up window for xsecd  season code*/
   /* *==========================================*/

  if (AF07M001.XSECD == "?") /* pop-up window requested*/
    XP1REC.XSECD = AF07M001.XSECD; /* set xp1rec field*/
    XP1REC.XGPCD = "03"; /* display apparel only*/
    XSAFSSE();
    AF07M001.XSECD = XP1REC.XSECD; /* move selection to map fld*/
    XP1REC.XSECD = " "; /* space out wk area*/
  end

   /* *==========================================*/
  /* pop-up window for xgacd  gender/age code*/
   /* *==========================================*/

  if (AF07M001.XGACD[1] == "?") /* pop-up window requested*/
    XP1REC.XGACD = AF07M001.XGACD[1]; /* set xp1rec field*/
    XP1REC.XGPCD = "03"; /* display apparel one*/
    XSAFSGA();
    AF07M001.XGACD[1] = XP1REC.XGACD; /* move selection to map fld*/
    XP1REC.XGACD = " "; /* space out wk area*/
  end

  if (AF07M001.XGACD[2] == "?") /* pop-up window requested*/
    XP1REC.XGACD = AF07M001.XGACD[2]; /* set xp1rec field*/
    XP1REC.XGPCD = "03"; /* display apparel one*/
    XSAFSGA();
    AF07M001.XGACD[2] = XP1REC.XGACD; /* move selection to map fld*/
    XP1REC.XGACD = " "; /* space out wk area*/
  end

  if (AF07M001.XGACD[3] == "?") /* pop-up window requested*/
    XP1REC.XGACD = AF07M001.XGACD[3]; /* set xp1rec field*/
    XP1REC.XGPCD = "03"; /* display apparel one*/
    XSAFSGA();
    AF07M001.XGACD[3] = XP1REC.XGACD; /* move selection to map fld*/
    XP1REC.XGACD = " "; /* space out wk area*/
  end

   /* *==========================================*/
  /* pop-up window for xplcd  product line cd*/
   /* *==========================================*/

  if (AF07M001.XPLCD[1] == "?") /* pop-up window requested*/
    XP1REC.XPLCD = AF07M001.XPLCD[1]; /* set xp1rec field*/
    XP1REC.XGPCD = "03"; /* display apparel one*/
    XSAFSPL();
    AF07M001.XPLCD[1] = XP1REC.XPLCD; /* move selection to map fld*/
    XP1REC.XPLCD = " "; /* space out wk area*/
  end

  if (AF07M001.XPLCD[2] == "?") /* pop-up window requested*/
    XP1REC.XPLCD = AF07M001.XPLCD[2]; /* set xp1rec field*/
    XP1REC.XGPCD = "03"; /* display apparel one*/
    XSAFSPL();
    AF07M001.XPLCD[2] = XP1REC.XPLCD; /* move selection to map fld*/
    XP1REC.XPLCD = " "; /* space out wk area*/
  end

  if (AF07M001.XPLCD[3] == "?") /* pop-up window requested*/
    XP1REC.XPLCD = AF07M001.XPLCD[3]; /* set xp1rec field*/
    XP1REC.XGPCD = "03"; /* display apparel one*/
    XSAFSPL();
    AF07M001.XPLCD[3] = XP1REC.XPLCD; /* move selection to map fld*/
    XP1REC.XPLCD = " "; /* space out wk area*/
  end

   /* *==========================================*/
  /* pop-up window for xpccd  category code*/
   /* *==========================================*/

  if (AF07M001.XPCCD[1] == "?") /* pop-up window requested*/
    XP1REC.XPCCD = AF07M001.XPCCD[1]; /* set xp1rec field*/
    XP1REC.XGPCD = "03"; /* display apparel one*/
    XSAFSPC();
    AF07M001.XPCCD[1] = XP1REC.XPCCD; /* move selection to map fld*/
    XP1REC.XPCCD = " "; /* space out wk area*/
  end

  if (AF07M001.XPCCD[2] == "?") /* pop-up window requested*/
    XP1REC.XPCCD = AF07M001.XPCCD[2]; /* set xp1rec field*/
    XP1REC.XGPCD = "03"; /* display apparel one*/
    XSAFSPC();
    AF07M001.XPCCD[2] = XP1REC.XPCCD; /* move selection to map fld*/
    XP1REC.XPCCD = " "; /* space out wk area*/
  end

  if (AF07M001.XPCCD[3] == "?") /* pop-up window requested*/
    XP1REC.XPCCD = AF07M001.XPCCD[3]; /* set xp1rec field*/
    XP1REC.XGPCD = "03"; /* display apparel one*/
    XSAFSPC();
    AF07M001.XPCCD[3] = XP1REC.XPCCD; /* move selection to map fld*/
    XP1REC.XPCCD = " "; /* space out wk area*/
  end

   /* *==========================================*/
  /* reset map, redisplay changes*/
   /* *==========================================*/
  converseLib.clearScreen();
   /* reset screen before display*/
  AF07W01.AF07WPND = "Y"; /* activate pop-up window ind*/
  exit stack; /* exit to redisplay map*/

end // end AF07140

// Verify the entered data
Function AF07150()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Verify any changed data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  AF07153(); /* verify map input data;*/

  if (converseVar.validationMsgNum != 0) /* errors found*/
    exit stack; /* exit to redisplay map*/
  else
  end


end // end AF07150

// Verify any changed data
Function AF07153()
   /* ------------------------------------------------------------*/
   /* edit selection criteria*/
   /* ------------------------------------------------------------*/

  AFWREC.AFWFIRST = "N"; /* first pass switch to 'off'*/
  XP1REC.XP1MNO = 0; /* initialize msg hold area*/
  AF07W01.AF07WOTH = "N"; /* OTHER ENTERED*/
  AF07W01.AF07WSTY = "N"; /* STYLE ENTERED*/


  AF07W01.AF07WIDX = 6;
  while (AF07W01.AF07WIDX > 0) /* UNTIL END OF STYLES*/
    AF07S05(); /* PROCESS STYLE*/
    AF07W01.AF07WIDX = AF07W01.AF07WIDX - 1; /* INCREMENT LINE INDEX*/
  end

  AF07W01.AF07WIDX = 3;
  while (AF07W01.AF07WIDX > 0) /* UNTIL END OF PR CAT*/
    AF07S10(); /* product category*/
    AF07W01.AF07WIDX = AF07W01.AF07WIDX - 1; /* INCREMENT LINE INDEX*/
  end

  AF07W01.AF07WIDX = 3;
  while (AF07W01.AF07WIDX > 0) /* UNTIL END OF PR LIN*/
    AF07S15(); /* product line*/
    AF07W01.AF07WIDX = AF07W01.AF07WIDX - 1; /* INCREMENT LINE INDEX*/
  end

  AF07W01.AF07WIDX = 3;
  while (AF07W01.AF07WIDX > 0) /* UNTIL END OF GENDER-AGE*/
    AF07S20(); /* gender-age*/
    AF07W01.AF07WIDX = AF07W01.AF07WIDX - 1; /* INCREMENT LINE INDEX*/
  end

  AF07S24(); /* EDIT BLANK EVENT CODE*/
  AF07S25(); /* EVENT CODE*/
  AF07S30(); /* season year*/
  AF07S35(); /* season code*/
  AF07S40(); /* forecaster*/

  if (XP1REC.XP1MNO == 0)
    AF07S26(); /* EDIT EVENT CODE/SNAPSHOT*/
  end

  if (XP1REC.XP1MNO == 0)
    AF07S45(); /* EDIT STYLE/OTHER INFO.*/
  end

  if (XP1REC.XP1MNO != 0) /* style/size error present*/
    if (XP1REC.XP1MNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(XP1REC.XP1MNO);
    end /* set message for display*/
  end

  if (XP1REC.XP1MNO == 0) /* if no errors were found*/
    if (AF07W01.AF07WSUB == "N") /* if job submit flag = no*/
      AF07W01.AF07WSUB = "Y"; /* change job submit flag*/
      converseLib.validationFailed(64); /* confirm data message*/
    end
  end

  if (converseVar.validationMsgNum != 0) /* erros were found*/
    exit stack;
  end
end // end AF07153

// Process valid input request
Function AF07160()
   /* ------------------------------------------------------------*/
   /* Check for validation errors*/
   /* ------------------------------------------------------------*/

  AF07W01.AF07WSUB = "N"; /* set submit flag to no*/

  AF07161(); /* determine region*/

  set TA6REC empty; /* subroutine work area*/

  TA6REC.TA6INDEX = 1; /* initialize parameters index*/

  if (TA3REC.TA3RGNID == "03") /* if production region*/
    AFWREC.AFWIDX1 = 1; /* set index to point at prod jcl*/
  else
    if ("/*EOF" in AF07T01.TARJCL) /* find end of prod jcl*/
      AFWREC.AFWIDX1 = sysVar.arrayIndex;
      AFWREC.AFWIDX1 = AFWREC.AFWIDX1 + 1;
    else
      AFWREC.AFWIDX1 = 1;
    end
  end

   /* --------------------------------------------------------*/
   /* format jcl and parameters into the subroutine work area.*/
   /* --------------------------------------------------------*/

  while (AFWREC.AFWIDX1 > 0) /* unitl end of table*/
    if (AF07T01.TARTYPE[AFWIDX1] == "P") /* parameters statement*/
      set AF07W02 empty; /* reset parameters statement*/
      AF07W02.PG1FCTCD = XP1REC.PG1FCTCD;
      AF07W02.XSECD = XP1REC.XSECD;
      AF07W02.AF07WXSN = AF07W01.AF07WXSY;
      AF07W02.AF07WSNP = "P";
      AF07W02.AFNEVNCD = AF07W01.AFNEVNCD;
      AF07W02.XGACD[1] = AF07W01.XGACD[1];
      AF07W02.XGACD[2] = AF07W01.XGACD[2];
      AF07W02.XGACD[3] = AF07W01.XGACD[3];
      AF07W02.XPLCD[1] = AF07W01.XPLCD[1];
      AF07W02.XPLCD[2] = AF07W01.XPLCD[2];
      AF07W02.XPLCD[3] = AF07W01.XPLCD[3];
      AF07W02.XPCCD[1] = AF07W01.XPCCD[1];
      AF07W02.XPCCD[2] = AF07W01.XPCCD[2];
      AF07W02.XPCCD[3] = AF07W01.XPCCD[3];
      AF07W02.SY1STNBR[1] = AF07W01.SY1STNBR[1];
      AF07W02.SY1STNBR[2] = AF07W01.SY1STNBR[2];
      AF07W02.SY1STNBR[3] = AF07W01.SY1STNBR[3];
      AF07W02.SY1STNBR[4] = AF07W01.SY1STNBR[4];
      AF07W02.SY1STNBR[5] = AF07W01.SY1STNBR[5];
      AF07W02.SY1STNBR[6] = AF07W01.SY1STNBR[6];

      AF07T01.TARJCL[AFWIDX1] = AF07W02.AF07WJCL;
    end

   /* --------------------------------------------------------*/
   /* format the job control language statement from the table*/
   /* --------------------------------------------------------*/

    TA6REC.TARJCL[TA6INDEX] = AF07T01.TARJCL[AFWIDX1]; /* jcl*/
    TA6REC.TARTYPE[TA6INDEX] = AF07T01.TARTYPE[AFWIDX1]; /* type*/

    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms index*/

   /* --------------------------------------------------------*/
   /* if not end of table, increment the table index*/
   /* --------------------------------------------------------*/

    if (AF07T01.TARJCL[AFWIDX1] == "/*EOF") /* end of table*/
      AFWREC.AFWIDX1 = 0; /* indicate end of table*/
    else
      AFWREC.AFWIDX1 = AFWREC.AFWIDX1 + 1; /* increment table index*/
    end
  end


  AF07S75(); /* submit jcl/jobstream for batch run*/
  set AF07M001 initial; /* clear map*/

  set AF07M001.XSECD cursor; /* cursor at xsecd field*/

end // end AF07160

// determine region
Function AF07161()
   /* ------------------------------------------------------------*/
    /* FIND WHICH ENVIRONMENT CURRENT PROGRAM IS RUNNING IN*/
   /* ------------------------------------------------------------*/

  set TA3REC empty;

  TA3REC.TA3OPTN = "ASSIGN ";

  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000")
    /* NEXT SENTENCE*/
  else
    TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
    TAEREC.TAEDESC2 = TA3REC.TA3GROUP; /* Subroutine parameters*/

    AFWREC.AFWPRCSN = "161"; /* Module identification*/
    converseLib.validationFailed(10); /* Indicate system error*/

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "CSP ERROR -BAD CALL";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = AFWREC.AFWPRCSN; /* Program number*/
    TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
    TA1REC.TA1MAPNO = "M001"; /* Map number*/

    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

    exit stack; /* Exit to display map*/


  end

  if (TA3REC.TA3RTNCD == 0)
    return;
  else
    TAEREC.TAEDESC1 = TA3REC.TA3RTNCD; /* CSP return code*/
    TAEREC.TAEDESC2 = TA3REC.TA3GROUP; /* Subroutine parameters*/

    AFWREC.AFWPRCSN = "161"; /* Module identification*/
    converseLib.validationFailed(10); /* Indicate system error*/

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "GET REGION";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = AFWREC.AFWPRCSN; /* Program number*/
    TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
    TA1REC.TA1MAPNO = "M001"; /* Map number*/

    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

    exit stack; /* Exit to display map*/


  end



end // end AF07161

// style edit in selection
Function AF07S05()
   /* ============================================================*/
   /* ===== edit style in selection criteria                 =====*/
   /* =====                                                  =====*/
   /* ============================================================*/

   /* ***************************************************************/
   /* /  check map input for spaces*/
   /* ***************************************************************/
  if (AF07M001.SY1STNBR[AF07WIDX] != AF07W01.SY1STNBR[AF07WIDX])
    AF07W01.AF07WSUB = "N";
  end

  if (AF07M001.SY1STNBR[AF07WIDX] == " ")
    AF07W01.SY1STNBR[AF07WIDX] = " "; /* move to wk storage*/
    return;
  end

  AF07W01.SY1STNBR[AF07WIDX] = AF07M001.SY1STNBR[AF07WIDX];

   /* ***************************************************************/
   /* /  get style row from dprodg.vsyclr01*/
   /* ***************************************************************/

  set PG2REC empty; /* reset record wk area*/
  PG2REC.XGPCD = "03"; /* gpc code*/
  PG2REC.SY1STNBR = AF07M001.SY1STNBR[AF07WIDX]; /* style no. as key*/
  TA1REC.TA1PGMNM = "AF08V22"; /* process name*/
  XSPG201(); /* obtain dprodg.vsyclr01 row*/

   /* ***************************************************************/
   /* /  check retrieval status*/
   /* ***************************************************************/
  if (SQLCA.VAGen_SQLCODE == 0) /* style row found*/
    AF07W01.AF07WSTY = "Y"; /* STYLE ENTERED*/
  else
    set AF07M001.SY1STNBR[AF07WIDX] cursor, bold; /* highlight field*/
    XP1REC.XP1MNO = 33; /* indicate not found*/
    AFWREC.AFWPRCSN = "S05 "; /* process number*/
    AF07W01.SY1STNBR[AF07WIDX] = " "; /* move wk storage*/
    return;
  end

   /* ====================== END OF PROCESS ======================*/



end // end AF07S05

// product category edit in selec
Function AF07S10()
   /* ============================================================*/
   /* ===== product category edit in selection criteria      =====*/
   /* =====                                                  =====*/
   /* ============================================================*/

  if (AF07M001.XPCCD[AF07WIDX] != AF07W01.XPCCD[AF07WIDX])
    AF07W01.AF07WSUB = "N";
  end

  AF07W01.XPCCD[AF07WIDX] = AF07M001.XPCCD[AF07WIDX];

  if (AF07M001.XPCCD[AF07WIDX] == " ") /* xpccd eq spaces*/
    AF07W01.XPCCD[AF07WIDX] = " "; /* space out code*/
    return;
  end

  if (AF07M001.XPCCD[AF07WIDX] in XPCTBL.XPCCD)
    if (XPCTBL.XXXSTAT[sysVar.arrayIndex] == "A" /* active status*/
     && XPCTBL.XGPCD[sysVar.arrayIndex] == "03") /* apparel cd*/
      AF07W01.AF07WOTH = "Y"; /* PRODUCT CATEGORY ENTERED*/
      return;
    end
  end

  AFWREC.AFWPRCSN = "S10 "; /* process number*/
  set AF07M001.XPCCD[AF07WIDX] cursor, bold; /* highlight field*/
  XP1REC.XP1MNO = 35; /* indicate error message*/
  AF07W01.XPCCD[AF07WIDX] = " "; /* space out code*/

   /* ====================== END OF PROCESS ======================*/

end // end AF07S10

// product line edit in selection
Function AF07S15()
   /* ============================================================*/
   /* =====   product line  edit in selection criteria       =====*/
   /* =====                                                  =====*/
   /* ============================================================*/

  if (AF07M001.XPLCD[AF07WIDX] != AF07W01.XPLCD[AF07WIDX])
    AF07W01.AF07WSUB = "N";
  end

  AF07W01.XPLCD[AF07WIDX] = AF07M001.XPLCD[AF07WIDX];

  if (AF07M001.XPLCD[AF07WIDX] == " ") /* xplcd eq spaces*/
    AF07W01.XPLCD[AF07WIDX] = "  ";
    return;
  end

  if (AF07M001.XPLCD[AF07WIDX] in XPLTBL.XPLCD)
    if (XPLTBL.XXXSTAT[sysVar.arrayIndex] == "A" /* active status*/
     && XPLTBL.XGPCD[sysVar.arrayIndex] == "03") /* apparel cd*/
      AF07W01.AF07WOTH = "Y"; /* PRODUCT LINE ENTERED*/
      return; /* exit to calling process*/
    end
  end

  AFWREC.AFWPRCSN = "S15 "; /* process number*/
  set AF07M001.XPLCD[AF07WIDX] cursor, bold; /* highlight field*/
  XP1REC.XP1MNO = 81; /* indicate error message*/

   /* ====================== END OF PROCESS ======================*/

end // end AF07S15

// gender/age edit in selection
Function AF07S20()
   /* ============================================================*/
   /* ===== gender/age edit in selection criteria            =====*/
   /* =====                                                  =====*/
   /* ============================================================*/

  if (AF07M001.XGACD[AF07WIDX] != AF07W01.XGACD[AF07WIDX])
    AF07W01.AF07WSUB = "N";
  end

  AF07W01.XGACD[AF07WIDX] = AF07M001.XGACD[AF07WIDX];

  if (AF07M001.XGACD[AF07WIDX] == " ") /* xgacd eq spaces*/
    AF07W01.XGACD[AF07WIDX] = " "; /* space out code*/
    return;
  end

  if (AF07M001.XGACD[AF07WIDX] in XGATBL.XGACD)
    if (XGATBL.XXXSTAT[sysVar.arrayIndex] == "A" /* active status*/
     && XGATBL.XGPCD[sysVar.arrayIndex] == "03") /* apparel cd*/
      AF07W01.AF07WOTH = "Y"; /* GENDER/AGE ENTERED*/
      return; /* exit to calling process*/
    end
  end

  AFWREC.AFWPRCSN = "S20 "; /* process name*/
  set AF07M001.XGACD[AF07WIDX] cursor, bold; /* highlight field*/
  XP1REC.XP1MNO = 36; /* indicate error message*/
  AF07W01.XGACD[AF07WIDX] = " "; /* space out code*/

end // end AF07S20

// edit event codes
Function AF07S24()
  /* ===========================================*/
  /* edit event codes*/
  /* ===========================================*/

  if (AF07M001.AFNEVNCD != AF07W01.AFNEVNCD)
    AF07W01.AF07WSUB = "N";
  end

  if (AF07M001.AFNEVNCD == " ")
    AFWREC.AFWPRCSN = "S24 "; /* process number*/
    set AF07M001.AFNEVNCD cursor, bold; /* highlight field*/
    XP1REC.XP1MNO = 111; /* indicate error message*/
  end

end // end AF07S24

// edit event code
Function AF07S25()

  if (AF07M001.AFNEVNCD != AF07W01.AFNEVNCD)
    AF07W01.AF07WSUB = "N";
  end

  set AFNREC empty;

  AFNREC.AFNEVNCD = AF07M001.AFNEVNCD;

  try
    call "IO5990" ("S ", SQLCA, AFNREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* no sql errors*/
      AF07W01.AFNEVNCD = AF07M001.AFNEVNCD;
      return;
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* not on database*/
        XP1REC.XP1MNO = 107;
        AFWREC.AFWPRCSN = "S25 "; /* process number*/
        set AF07M001.AFNEVNCD cursor, bold;
        return;
      end
    end
  end

  if (sysVar.errorCode == "00000000"
   && SQLCA.VAGen_SQLCODE == -911) /* resource not available*/
    XP1REC.XP1MNO = 11;
    AFWREC.AFWPRCSN = "S25 "; /* process number*/
    TA1REC.TA1FUNC = "POST"; /* termination function*/
  else
    XP1REC.XP1MNO = 10;
    AFWREC.AFWPRCSN = "S25 "; /* process number*/
    TA1REC.TA1FUNC = "RETN"; /* termination function*/
    converseLib.clearScreen();
     /* clear screen before redisplay*/
  end

  XP1REC.XP1MNO = 101; /* INDICATE ERROR*/
  TA1REC.TA1TYPE = "DB2 "; /* type of error*/
  AFWREC.AFWPRCSN = "S25 "; /* process number*/
  TA1REC.TA1PGMNM = AFWREC.AFWERLOC; /* error location*/
  TA1REC.TA1LOC = "EDIT EVENT CODES FOR EXISTANCE";
  TA1REC.TA1MAP = AFWREC.XXXMAPNM; /* map name*/
  TA1REC.TA1DBASE = "DACAST "; /* data base name*/
  TA1REC.TA1TBLVU = "VEVENT01"; /* table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* error diagnosis routine*/

  exit stack; /* exit to diaplay map*/

end // end AF07S25

// edit event code
Function AF07S26()

  set AFLREC empty;

  AFLREC.AFNEVNCD = AF07M001.AFNEVNCD;
  AFLREC.XSECD = AF07M001.XSECD;
  AFLREC.XSNYR = AF07W01.AF07WXSY;
  AFLREC.AFLSPSIN = "A";

  try
    call "IO5980" ("SE", SQLCA, AFLREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* no sql errors*/
      AF07W01.AFNEVNCD = AF07M001.AFNEVNCD;
      return;
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* not on database*/
        XP1REC.XP1MNO = 112;
        AFWREC.AFWPRCSN = "S26 "; /* process number*/
        set AF07M001.AFNEVNCD cursor, bold;
        return;
      end
    end
  end

  if (sysVar.errorCode == "00000000"
   && SQLCA.VAGen_SQLCODE == -911) /* resource not available*/
    XP1REC.XP1MNO = 11;
    AFWREC.AFWPRCSN = "S26 "; /* process number*/
    TA1REC.TA1FUNC = "POST"; /* termination function*/
  else
    XP1REC.XP1MNO = 10;
    AFWREC.AFWPRCSN = "S26 "; /* process number*/
    TA1REC.TA1FUNC = "RETN"; /* termination function*/
    converseLib.clearScreen();
     /* clear screen before redisplay*/
  end

  XP1REC.XP1MNO = 112; /* INDICATE ERROR*/
  TA1REC.TA1TYPE = "DB2 "; /* type of error*/
  AFWREC.AFWPRCSN = "S26 "; /* process number*/
  TA1REC.TA1PGMNM = AFWREC.AFWERLOC; /* error location*/
  TA1REC.TA1LOC = "EDIT SNAPSHOT EXISTANCE";
  TA1REC.TA1MAP = AFWREC.XXXMAPNM; /* map name*/
  TA1REC.TA1DBASE = "DACAST "; /* data base name*/
  TA1REC.TA1TBLVU = "VSNPIN01"; /* table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* error diagnosis routine*/

  exit stack; /* exit to diaplay map*/

end // end AF07S26

// Edit season cd/yr
Function AF07S30()
  /* ==========================================*/
  /* edit season year*/
  /* ==========================================*/

  if (AF07M001.XSNYR != XP1REC.XSNYR)
    AF07W01.AF07WSUB = "N";
  end

  AF07W01.AF07WXSY = 0; /* initialize xsnyr wk area*/
  AF07W01.AF07WXSY = AF07M001.XSNYR; /* move to wk area*/
  AF07W01.AF07WXSY = AF07W01.AF07WXSY + 1900; /* move century*/

  AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
  while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
    if (YSNTBL.XSNYR[AFWIDX5] == AF07W01.AF07WXSY
     && YSNTBL.XGPCD[AFWIDX5] == "03"
     && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")

      XP1REC.XSNYR = AF07M001.XSNYR; /* save to working storage*/
      return;
    else
      if (YSNTBL.XGPCD[AFWIDX5] != "99")
        AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
      else
        AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
      end
    end
  end
                     /* (field in error)*/
  AFWREC.AFWPRCSN = "S30 "; /* Process number*/
  set AF07M001.XSNYR cursor, bold; /* highlight field*/
  XP1REC.XP1MNO = 26; /* indicate error message*/
  XP1REC.XSNYR = 0;
end // end AF07S30

// season code edit in selection
Function AF07S35()
   /* ============================================================*/
   /* =====                                                  =====*/
   /* ===== season code edit in selection criteria           =====*/
   /* =====                                                  =====*/
   /* ============================================================*/

  if (AF07M001.XSECD != XP1REC.XSECD)
    AF07W01.AF07WSUB = "N";
  end

  if (AF07M001.XSECD in XSETBL.XSECD)
    XP1REC.XSECD = AF07M001.XSECD; /* save to working storage*/
  else
    AFWREC.AFWPRCSN = "S35 "; /* process number*/
    XP1REC.XP1MNO = 16; /* indicate error message*/
    set AF07M001.XSECD cursor, bold; /* highlight field*/
    XP1REC.XSECD = " "; /* save to working storage*/
    return; /* return to calling process*/
  end

  AF07W01.AF07WXSS = XP1REC.XSECD; /* to xsecd wk area*/
  AF07W01.AF07WXYR = XP1REC.XSNYR; /* format wk area*/

  AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
  while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
    if (YSNTBL.XSNABRV[AFWIDX5] == AF07W01.AF07WXSA
     && YSNTBL.XGPCD[AFWIDX5] == "03"
     && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")

      return;
    else
      if (YSNTBL.XGPCD[AFWIDX5] != "99")
        AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
      else
        AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        AFWREC.AFWPRCSN = "S35 "; /* process number*/
        XP1REC.XP1MNO = 26; /* indicate error message*/
        set AF07M001.XSNYR cursor, bold; /* highlight field*/
        XP1REC.XSNYR = 0; /* zero out save area*/
        return;
      end
    end
  end
end // end AF07S35

// Verify forecaster name
Function AF07S40()

  if (AF07M001.XXXUSER != AF07W01.AF07WFCT)
    AF07W01.AF07WSUB = "N";
  end

  if (AF07M001.XXXUSER <= "00000000") /* forecaster cd = spaces*/
    AF07W01.AF07WFCT = AF07M001.XXXUSER; /* spaces out save area*/
    XP1REC.PG1FCTCD = AF07M001.XXXUSER; /* space out forecaster cd*/
    return; /* return to calling process*/
  end

  AF07W01.AF07WFCT = AF07M001.XXXUSER; /* move to wk map storage*/

   /* ===============================================*/
   /* clear the row storage area and format the key.*/
   /* ===============================================*/
  set PG1REC empty; /* clear row storage area*/
  PG1REC.XGPCD = "03"; /* apparel gpc code*/
  PG1REC.PG1SC4CD = "  "; /* scheduler cd*/
  PG1REC.PG1FCTCD = "**"; /* forecaster cd*/
  PG1REC.XXXUSER = AF07M001.XXXUSER; /* forecaster id*/

   /* ===============================================*/
   /* call iomod to retrieve row from dprodg.vsuser01*/
   /* ===============================================*/

  try
    call "IO1200" ("SA", SQLCA, PG1REC) {isNoRefresh = yes, isExternal = yes};
  end /* select row*/

   /* ===============================================*/
   /* check call results*/
   /* ===============================================*/

  if (sysVar.errorCode != "00000000") /* call not successful*/
    converseLib.validationFailed(10); /* indicate 'bad call' error*/
    XP1REC.XP1MNO = 10; /* indicate 'bad call' error*/
    TA1REC.TA1FUNC = "RETN"; /* show user error screen*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* if row not found*/
      set AF07M001.XXXUSER cursor, bold; /* highlight field*/
      AFWREC.AFWPRCSN = "S40 "; /* process number*/
      XP1REC.XP1MNO = 37; /* indicate error msg*/
      AF07W01.AF07WFCT = " "; /* space out save area*/
      XP1REC.PG1FCTCD = " "; /* space out save area*/
      return; /* return to calling process*/
    else
      if (SQLCA.VAGen_SQLCODE == -911) /* if resource not available*/
        AFWREC.AFWPRCSN = "S40 "; /* process number*/
        converseLib.validationFailed(11); /* indicate 'data base busy' error*/
        XP1REC.XP1MNO = 11; /* indicate 'data base busy' error*/
        TA1REC.TA1FUNC = "POST"; /* post error to error-file*/
      else
        if (SQLCA.VAGen_SQLCODE != 0) /* if unknown db2 error occured*/
          AFWREC.AFWPRCSN = "S40 "; /* process number*/
          converseLib.validationFailed(10); /* indicate 'unknown error' error*/
          XP1REC.XP1MNO = 10; /* indicate 'unknown error' error*/
          TA1REC.TA1FUNC = "RETN"; /* show user error screen*/
        else
          AF07W01.AF07WFCT = AF07M001.XXXUSER; /* move to wk storage*/
          XP1REC.PG1FCTCD = PG1REC.PG1FCTCD; /* move to xp1rec*/
          XP1REC.XXXUSER = AF07M001.XXXUSER; /* MOVE TO XP1REC*/
          return;
        end
      end
    end
  end

   /* ===================================================*/
   /* this section of code is only reached if an error*/
   /* which needs to be 'reported' has occured above.*/
   /* ===================================================*/

  TA1REC.TA1TYPE = "DB2 "; /* db2 error*/
  TA1REC.TA1PGMNM = "AF07V33"; /* process name*/
  TA1REC.TA1LOC = "SELECT XXXUSER FROM MAP";
  TA1REC.TA1MAP = AFWREC.XXXMAPNM; /* map name*/
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* progam application*/
  TA1REC.TA1DBASE = "DPRODG  "; /* data base name*/
  TA1REC.TA1TBLVU = "VSUSER01"; /* table view name*/
  TA1REC.TA1TBLKE = AF07M001.XXXUSER; /* move signon to error-diag*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis routine*/

  return; /* return to previous process*/

end // end AF07S40

// EDIT STYLE/OTHER
Function AF07S45()

  if (AF07W01.AF07WOTH == "Y"
   && AF07W01.AF07WSTY == "Y")
    AFWREC.AFWPRCSN = "S45";
    XP1REC.XP1MNO = 113;
    set AF07M001.XGACD[1] cursor, bold;
  else
    if (AF07W01.AF07WOTH == "N"
     && AF07W01.AF07WSTY == "N")
      AFWREC.AFWPRCSN = "S45";
      XP1REC.XP1MNO = 114;
      set AF07M001.XGACD[1] cursor, bold;
    end
  end


end // end AF07S45

// Submit JCL via XPTA0P
Function AF07S75()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* Send a message to the user when done*/

  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end


   /* ------------------------*/
   /* Fix process location*/
   /* ------------------------*/

  AFWREC.AFWPRCSN = "S75 "; /* Process number*/
  AF07M001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    converseLib.validationFailed(70); /* Indicate job was submitted*/
    set AF07M001.XSECD cursor; /* Set cursor to XSECD field*/
    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    converseLib.validationFailed(71); /* Indicate user cancelled*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
  end

  exit stack; /* Exit to display map*/


end // end AF07S75

//*** RECORD=AF07W01 ****
// ********************************
// Application Working Storage (1).
// ********************************
// ***********************
Record AF07W01 type basicRecord
  10 AF07WSJC AF07WSJC ; 
  10 AF07WXSA AF07WXSA ; 
    15 AF07WXSS AF07WXSS ; 
    15 AF07WXYR AF07WXYR ; 
  10 AF07WIDX AF07WIDX ; 
  10 AF07WXSY AF07WXSY ; 
  10 AF07WFCT AF07WFCT ; 
  10 AF07WPND AF07WPND ; 
  10 AF07WSUB AF07WSUB ; 
  10 XGACD XGACD [3] ; 
  10 XPCCD XPCCD [3] ; 
  10 XPLCD XPLCD [3] ; 
  10 SY1STNBR SY1STNBR [6] ; 
  10 AFNEVNCD AFNEVNCD ; 
  10 AF07WOTH AF07WOTH ; 
  10 AF07WSTY AF07WSTY ; 
end // end AF07W01

//*** RECORD=AF07W02 ****
// JCL variable storage for AF08 for apparel forecast performan
// ***********************
Record AF07W02 type basicRecord
  10 AF07WJCL AF07WJCL ; 
    15 AF07WSNP AF07WSNP ; 
    15 PG1FCTCD PG1FCTCD ; 
    15 XSECD XSECD ; 
    15 AF07WXSN AF07WXSN ; 
    15 AFNEVNCD AFNEVNCD ; 
    15 XGACD XGACD [3] ; 
    15 XPLCD XPLCD [3] ; 
    15 XPCCD XPCCD [3] ; 
    15 SY1STNBR SY1STNBR [6] ; 
    15 * char(15) ; 
end // end AF07W02

// AF1082_BLA_CUR_WKND
DataItem AF07WFCT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// JCL table index
DataItem AF07WIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Job Control Language statement
DataItem AF07WJCL char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AF07WOTH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// parm swutch
DataItem AF07WPND char(1)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// Submit JCL (y/n) switch
DataItem AF07WSJC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xse-sesn-cd
DataItem AF07WSNP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AF07WSTY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AF07WSUB char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSN wk abrv
DataItem AF07WXSA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSN_SESN_YR_RNG
DataItem AF07WXSN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XSN wk season cd
DataItem AF07WXSS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xsnyr work area
DataItem AF07WXSY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XSN wk season yr
DataItem AF07WXYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

