package af0a;

import af.common.*;
import corpcom2.XP1REC;
import corpcom3.XPAF001;
import corpcom3.XSAFS01;
import corpcom5.COMMAREA;
//*** PROGRAM=AF0A ****
// This application is a prototype for the Apparel Forecast/Buy
// system.  It will display multiple rows from a DB2 table for
// the user to view and/or modify.
// 
// Upon initial entry, the table is read and columns from the
// selected rows are formatted and saved in temporary storage,
// one display page per queue record.
// 
// The records are retrieved from temporary storage one at a
// time, for display to the user.  The user may page forward
// and backward, to view the rows that were selected.
// 
// The user may exit to any allowed application via FAST PATH
// or PF key at any time.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 06/28/88   userid   New application.
// 06/28/93   lrein    Added in stock processing
// 09/17/93   TDODSO   Added Long/Short Summary to menu
// 12-15-97   ORICHA   Y2K MODIFICATIONS:  regen to pick new
//                     version of xp1rec.
// *********************
Program AF0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AFWREC AFWREC; // record
  COMMAREA COMMAREA ; // record
  XP1REC XP1REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use AF0AT {deleteAfterUse = yes}; // table
  use AF0AM.AF0AM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAF001: XPAF001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    set AFWREC empty; /* Initialize working storage*/
    set AF0AM001 initial; /* Initialize map output area*/
    AFWREC.AFWAPPL = "AF0A"; /* Initialize appl ID for this appl*/
    AFWREC.AFWPRCSN = "0000"; /* Initialize process number to zero*/

    if (COMMAREA.CAFRMSYS == "AF") /* If coming from within AF system*/
       /* continue on*/
    else
      XP1REC.XXXUSER = COMMAREA.CAUSERID;
    end

    AFWREC.AFWMAP = "1"; /* Indicate map to be displayed*/

    goto AF0A001; /* Converse Transportation Prototype*/


    AF0A001: AF0A001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    goto AF0A001; /* Converse Transportation Prototype*/


  end // end main
end // end AF0A

// Choose which map to display
Function AF0A001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display maps.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the first map.*/
      /* Otherwise, if specified, display the second map.*/
      /* Otherwise, indicate error and exit to Master Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/


  AF0A100(); /* Display map 1*/



end // end AF0A001

// Driver process for 100 map
Function AF0A100()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  AF0A110(); /* Format and display the map*/

  AF0A120(); /* Check attention identifier*/

  AF0A130(); /* Reset fields to normal intensity*/

  AF0A140(); /* Verify the entered data*/


end // end AF0A100

// Format and display the map
Function AF0A110()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AF0AM001 alarm; /* Indicate sound alarm*/
    AF0AM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/
  end

  if (converseVar.validationMsgNum == 0 /* No error message to display*/
   || AFWREC.AFWFIRST == " ")           /* or first time through*/

    if (AFWREC.AFWFIRST == " ") /* First time through*/
      if (COMMAREA.CAITEM > " ") /* Application data exists*/
        AF0AM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
        COMMAREA.CAITEM = " "; /* Clear application data*/
      end
    else
      set AF0AM001 initial; /* Clear map output area*/
    end

    if (converseVar.validationMsgNum == 0) /* No error message to display*/
      if (AFWREC.AFWNMO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(AFWREC.AFWNMO);
      end /* Information message number*/
    end

    AFWREC.AFWFIRST = "N"; /* turn 'first time through' OFF*/
    AF0AM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  end

  AFWREC.AFWNMO = 0; /* Reset information message number*/

  converse AF0AM001 ;


end // end AF0A110

// Check attention identifier
Function AF0A120()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    exit stack; /* Exit to redisplay map*/

  end

  if (AF0AM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      COMMAREA.CATOAP = AF0AM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = AF0AM001.CAITEM; /* Application data*/

      XSAFS01(); /* Exit to another application*/

    else

      converseLib.validationFailed(5); /* Indicate PF key not valid*/

    end

    set AF0AM001.CATOAP cursor, modified, bold; /* Highlight*/

    AFWREC.AFWPRCSN = "130 "; /* Process number*/
    AF0AM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    XSAFS01(); /* Exit to another application*/

    AFWREC.AFWPRCSN = "130 "; /* Process number*/
    AF0AM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    AFWREC.AFWPRCSN = "130 "; /* Process number*/
    AF0AM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end


end // end AF0A120

// Reset highlighted fields
Function AF0A130()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set AF0AM001.XXXPRCNM initialAttributes; /* Process name*/
  set AF0AM001.AF0AMSEL initialAttributes; /* Selection field*/
  set AF0AM001.CATOAP initialAttributes; /* Commarea TO application*/
  set AF0AM001.CAITEM initialAttributes; /* Commarea application data*/


end // end AF0A130

// Verify the entered data
Function AF0A140()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Determine whether a valid request to scroll was entered.*/
   /* If not a scroll request, verify any changed data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (AF0AM001.CAITEM > " ") /* Application data was entered*/

    set AF0AM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    AFWREC.AFWPRCSN = "140 "; /* Process number*/
    AF0AM001.XXXPRCNM = AFWREC.AFWERLOC; /* Process name*/

  end

  AF0A141(); /* Verify selection criteria*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to redisplay map*/
  end


end // end AF0A140

// Edit selection criteria
Function AF0A141()
   /* ============================================================*/
   /* ===== E D I T    S E L E C T I O N    C R I T E R I A  =====*/
   /* =====                                                  =====*/
   /* ===== Compare selection criteria on screen to data on  =====*/
   /* ===== working storatge record, if any has changed,     =====*/
   /* ===== validate all selection criteria fields and turn  =====*/
   /* ===== on switch which allows later processing to purge =====*/
   /* ===== temporary storage and re-load it with newly      =====*/
   /* ===== selected data.                                   =====*/
   /* ============================================================*/


  if (AF0AM001.AF0AMSEL in AF0AT.AF0AMELT)
    COMMAREA.CATOAP = AF0AT.AF0AMPRM[sysVar.arrayIndex];
    XSAFS01();
    AF0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    AFWREC.AFWPRCSN = "141 "; /* Process number*/
  else
    set AF0AM001.AF0AMSEL cursor, bold;
    converseLib.validationFailed(9);
    AFWREC.AFWPRCSN = "141 "; /* Process number*/
       /* invalid selection*/
  end


   /* ====================== END OF PROCESS ======================*/



end // end AF0A141

