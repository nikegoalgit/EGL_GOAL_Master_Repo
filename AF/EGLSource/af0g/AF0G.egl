package af0g;

import af.common.*;
import corpcom2.XP1REC;
import corpcom2.XX0XW01;
import corpcom3.XPAF001;
import corpcom3.XSAFS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XSETBL;
import corpx2.XSE-SESN-CD;
import corpx2.XSN-SESN-YR-RNG;
import corpx2.XSNABRV;
import corpy2.YSNTBL;
import corpz3.ZZZCHGCT;
import pg.common.PG2REC;
import sy.common.SY-COLR-CD-ID;
import sy.common.SY-STY-NBR;
import sy.common.SY1SSTNM;
import sy.common.SY2CLRAB;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VAVPCT01;
//*** PROGRAM=AF0G ****
// 11/16/93    wdrake    Delete VAVPCT01 rows with zero avail %
// 02-08-95    kj        xsn-ysn
// 10-28-96    klee      added yr to hding & modified pf footng
// 12-23-97    oricha    y2k modifications:  af0g-1100, 1300,
//                       1400, 2200, 5400, 6110, 6111, 6112,
//                       6113, af0gm001, s-0001, w00 added work
//                       fields, w01 length adjust. due to
//                       af-mo expansion.
// 02-27-98    oricha    y2k fix:  redo temp storage length to
//                       accommodate af-mo length change.
//                       xpaf001 flow.
// 05-29-99    craymo    AF0G-5000 - modified logic to disallow
//                       any data entry beyond SU 2000.
// *********************
Program AF0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AF0GW00 AF0GW00; // record
  AF0GW01 AF0GW01; // record
  AF0GW02 AF0GW02; // record
  AF2REC AF2REC; // record
  AF5REC AF5REC; // record
  AFWREC AFWREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VAVPCT01 VAVPCT01; // record
  XP1REC XP1REC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use AF0GT01 {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use AF0GM.AF0GM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAF001: XPAF001();
    set AF0GM001 initial;
    set AF0GW00 empty;
    set AF0GW01 empty;
    set AFWREC empty;
    set TAEREC empty;
    set ERRSQLCA empty;
    set SQLCA empty;
    set XX0XW01 empty;
    set PG2REC empty;
    set TA5REC empty;

    move " " to AF0GM001.XOW-OWN-GRP-CD[1] for all; /* to determine max map lines*/
    AF0GW00.AF0GW-MAX-SCREEN-LINES = sysVar.arrayIndex;
     /* ----------- y2k out begin --------*/
     /* AFWREC.AFWTSL =*/
                                    /* EZETST * 65 + 4;               /* nbr*/
                                     /* screen lines * length of line + 4*/
     /* ----------- y2k out end ----------*/
     /* ----------- y2k in  begin ---2-27-98*/
    AFWREC.AFWTSL = 834; /* ----------- y2k in end -----------*/

    if (COMMAREA.CAFRMSYS == "AF") /* from within system*/

      if (XP1REC.XSECD != " ") /* data in commarea*/
        AF0GM001.XSE-SESN-CD = XP1REC.XSECD;
        AF0GM001.AF0GM-SESN-YR-RNG = XP1REC.XSNYR;
        AF0GM001.SY-STY-NBR = XP1REC.SY1STNBR;
        AF0GM001.SY-COLR-CD-ID = XP1REC.SY2CLRID;
        AF0GM001.AF0GM-CURR-SESN-CD = XP1REC.XSECD;
        AF0GM001.AF0GM-CURR-SESN-YR = XP1REC.XSNYR;
        AF0GM001.AF0GM-CURR-STY-NBR = XP1REC.SY1STNBR;
        AF0GM001.AF0GM-CURR-COLR-CD = XP1REC.SY2CLRID;
        AFWREC.AFWSWR = "Y"; /* request data*/
        AF0GW00.AF0GW-FORMAT-MAP-SW = "Y"; /* format map*/
      end
    else
      AFWREC.AFWSWR = "N"; /* dont request data*/
      AF0GW00.AF0GW-FORMAT-MAP-SW = "N"; /* dont format map*/
    end

    AF0GW00.AF0GW-UPDATE-SW = "U";
    goto AF0G001; /* converse main process*/
    AF0G001: AF0G001();
    goto AF0G001;
  end // end main
end // end AF0G

// obtain data to display
Function AF0G-1000()
  if (AFWREC.AFWSWR != "Y" /* data not requested*/
   || converseVar.validationMsgNum != 0) /* an error*/
    return; /* dont mess around with getting data*/
  end

  if (AF0GW00.AF0GW-KEY-CHANGED-SW == "Y") /* new start criteria*/
    AF0GW00.AF0GW-UPDATE-SW = "U";
    AFWREC.AFWTSP = 1; /* start display at page 1;*/
    AF0GM001.AF0GM-CURR-STY-NBR = AF0GM001.SY-STY-NBR;
    AF0GM001.AF0GM-CURR-COLR-CD = AF0GM001.SY-COLR-CD-ID;
    AF0GM001.AF0GM-CURR-SESN-CD = AF0GM001.XSE-SESN-CD;
    AF0GM001.AF0GM-CURR-SESN-YR = AF0GM001.AF0GM-SESN-YR-RNG;
  end

  AF0G-1100(); /* open cursor dacast.vavpct01*/
  set AF0GW01 empty; /* initialise screen work area*/
                                  /* SET AF0GW02 EMPTY;               /**/
                                   /* initialise screen heading work area*/
  AF0G-1200(); /* purge temp storage queue*/

  if (converseVar.eventKey is pf15) /* next style*/

    while (SQLCA.VAGen_SQLCODE != 100 /* not end of table*/
     && AF0GM001.AF0GM-CURR-STY-NBR == VAVPCT01.SY-STY-NBR) /* this style*/
      AF0GS-0001(); /* fetch row*/
    end

    AFWREC.AFWTSP = 1; /* start display at page 1;*/
  else /* enter -- either next color, or an*/
                                   /* update*/

    if (AF0GW00.AF0GW-UPDATE-SW == "U") /* an update*/
      AF0GS-0001(); /* fetch row*/
    else /* next color*/

      while (SQLCA.VAGen_SQLCODE != 100 /* not end of table*/
       && AF0GM001.AF0GM-CURR-COLR-CD == VAVPCT01.SY-COLR-CD-ID)
        AF0GS-0001(); /* fetch row*/
      end

      if (AF0GM001.AF0GM-CURR-STY-NBR != VAVPCT01.SY-STY-NBR)
        AF0G-1400(); /* close cursor*/
        AF0GM001.AF0GM-CURR-COLR-CD = " "; /* reset color*/
        AF0G-1100(); /* select set*/

        while (SQLCA.VAGen_SQLCODE != 100 /* not end of table*/
         && AF0GM001.AF0GM-CURR-STY-NBR == VAVPCT01.SY-STY-NBR)
                                   /* this style*/
          AF0GS-0001(); /* fetch row*/
        end

      end

      AFWREC.AFWTSP = 1; /* start display at page 1;*/
    end

  end

  AFWREC.AFWIDX1 = 0; /* number of lines(xow codes)*/
  AF0GW02.SY-STY-NBR = AF0GM001.SY-STY-NBR;
  AF0GW02.SY-COLR-CD-ID = AF0GM001.SY-COLR-CD-ID;
  AF0GW02.XSE-SESN-CD = AF0GM001.XSE-SESN-CD;
  AF0GW02.XSN-SESN-YR-RNG = AF0GM001.AF0GM-SESN-YR-RNG;
  AF0GW02.AF0GM-CURR-STY-NBR = VAVPCT01.SY-STY-NBR;
  AF0GW02.AF0GM-CURR-COLR-CD = VAVPCT01.SY-COLR-CD-ID;
  AF0GW02.AF0GM-CURR-SESN-CD = VAVPCT01.XSE-SESN-CD;
  AF0GW02.AF0GM-CURR-SESN-YR = VAVPCT01.XSN-SESN-YR-RNG;
  AF0GW00.AF0GW-WK-SEASON = AF0GM001.AF0GM-CURR-SESN-CD;
  AF0GW00.AF0GW-WK-SESN-YR = AF0GM001.AF0GM-CURR-SESN-YR;


  AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
  while (AFWREC.AFWIDX5 != 9999
   && AFWREC.AFWIDX5 != 0) /* end of search condition*/
    if (YSNTBL.XSNABRV[AFWIDX5] == AF0GW00.XSNABRV
     && YSNTBL.XGPCD[AFWIDX5] == "03"
     && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
      AF0GW00.AF0GW-SESN-BEG-DT = YSNTBL.XSN-SESN-BDT[AFWIDX5];
      AF0GW00.AF0GW-SESN-END-DT = YSNTBL.XSN-SESN-XDT[AFWIDX5];
      AFWREC.AFWIDX5 = 0; /* END OF search*/
    else
      if (YSNTBL.XGPCD[AFWIDX5] != "99")
        AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
      else
        AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
      end
    end
  end

  while (SQLCA.VAGen_SQLCODE != 100 /* for each row*/
   && AF0GW02.AF0GM-CURR-STY-NBR == VAVPCT01.SY-STY-NBR
   && AF0GW02.AF0GM-CURR-COLR-CD == VAVPCT01.SY-COLR-CD-ID)
    AF0G-1300(); /* save data in working-storage*/
    AF0GS-0001(); /* fetch next row*/
  end

  AF0G-1400(); /* close cursor*/

  if (AF0GW00.AF0GW-SAVED-DATA-SW == "Y") /* partial page formatted*/
    AF0G-1500(); /* add page to tsq*/
  end

  AFWREC.AFWSWR = "N"; /* data all obtained*/

  if (TA5REC.TA5TSQIX < 1)
    converseLib.validationFailed(15); /* no data on file*/
    AF0GM001.XXXPRCNM = "AF0G1000"; /* process number*/
  end



end // end AF0G-1000

// select set DACAST.VAVPCT01
Function AF0G-1100()
  set VAVPCT01 empty;
  VAVPCT01.XSE-SESN-CD = AF0GM001.XSE-SESN-CD;
  VAVPCT01.XSN-SESN-YR-RNG = AF0GM001.AF0GM-SESN-YR-RNG;

   /* ------------ y2k out begin ----------*/
   /* VAVPCT01.XSN-SESN-YR-RNG =*/
    /* 1900 + AF0GM001.AF0GM-SESN-YR-RNG;*/

   /* IF VAVPCT01.XSN-SESN-YR-RNG < 1985;*/
    /* VAVPCT01.XSN-SESN-YR-RNG =*/
      /* 1000 + VAVPCT01.XSN-SESN-YR-RNG;*/
   /* END;*/
   /* ------------ y2k out end ------------*/
   /* ------------ y2k out begin ----------*/
  if (AF0GM001.AF0GM-SESN-YR-RNG > 65)
    VAVPCT01.XSN-SESN-YR-RNG = VAVPCT01.XSN-SESN-YR-RNG + 1900;
  else
    VAVPCT01.XSN-SESN-YR-RNG = VAVPCT01.XSN-SESN-YR-RNG + 2000;
  end
   /* ------------ y2k out end ------------*/

  if (AF0GW00.AF0GW-UPDATE-SW == "U")
    VAVPCT01.SY-STY-NBR = AF0GM001.AF0GM-CURR-STY-NBR;
    VAVPCT01.SY-COLR-CD-ID = AF0GM001.AF0GM-CURR-COLR-CD;
  else

    if (converseVar.eventKey is pf15) /* next style*/
      VAVPCT01.SY-STY-NBR = AF0GM001.AF0GM-CURR-STY-NBR;
      VAVPCT01.SY-COLR-CD-ID = " ";
      AFWREC.AFWTSP = 1; /* tsq page*/
    else /* next color*/
      VAVPCT01.SY-STY-NBR = AF0GM001.AF0GM-CURR-STY-NBR;
      VAVPCT01.SY-COLR-CD-ID = AF0GM001.AF0GM-CURR-COLR-CD;
      AFWREC.AFWTSP = 1; /* tsq page*/
    end

  end


   /* ===================================**/
   /* Select Set from daCAST.VAVPCT01 **/
   /* ===================================**/

   /* ------------- y2k out begin --------------*/
   /* CALL IO6530 'S1',SQLCA,VAVPCT01*/
    /* (NOMAPS,NONCSP,REPLY;/* Select table*/
   /* set*/
   /* ------------- y2k out end ----------------*/
   /* ------------- y2k in  begin --------------*/
  try
    call "VAVPCT02" ("S1", SQLCA, VAVPCT01) {isNoRefresh = yes, isExternal = yes};
  end
   /* ------------- y2k in end -----------------*/

   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AF0GM001.XXXPRCNM = "AF0G1100"; /* Process number*/
  TA1REC.TA1PGMNM = "AF0G1100"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET ";
  TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAFPCT02"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AFWREC.AFWSWR = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/



end // end AF0G-1100

// purge temp storage
Function AF0G-1200()
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "AF0G"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  call "TA0050" (AF0GW01, TA5REC) {isNoRefresh = yes}; /* Temporary storage*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    AF0GM001.XXXPRCNM = "AF0G1200"; /* Process number*/
    TA1REC.TA1PGMNM = "AF0G1200"; /* Error location*/
    TA1REC.TA1LOC = "PURGE TEMPORARY STORAGE";
    TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/
  end

  AF0GW00.TA5TSQIX = 0; /* Reset highest page number*/
  TA5REC.TA5TSQIX = 0; /* Reset highest page number*/
end // end AF0G-1200

// save detail data
Function AF0G-1300()
  if (AFWREC.AFWIDX1 == 0)
    AFWREC.AFWIDX1 = 1;
  else

    if (VAVPCT01.XOW-OWN-GRP-CD != AF0GW01.XOW-OWN-GRP-CD[AFWIDX1])
      AFWREC.AFWIDX1 = AFWREC.AFWIDX1 + 1; /* another screen row*/
    end

  end

  AF0GW01.XOW-OWN-GRP-CD[AFWIDX1] = VAVPCT01.XOW-OWN-GRP-CD;

   /* -------------- y2k out begin ----------------*/
   /* MOVE VAVPCT01.AF-MO TO AF0GW00.AF0GW-AF-MO;*/
   /* IF VAVPCT01.AF-MO LT AF0GW00.AF0GW-SESN-BEG-YYMM;*/
    /* MOVE VAVPCT01.AF-MO TO AF0GW00.AF0GW-SESN-BEG-YYMM;*/
   /* END;*/
   /* -------------- y2k out end ------------------*/
   /* -------------- y2k in  begin ----------------*/
  AF0GW00.AF0GW-AF-MO = VAVPCT01.AF-MO;
  if (VAVPCT01.AF-MO < AF0GW00.AF0GW-SESN-BEG-CYM)
    AF0GW00.AF0GW-SESN-BEG-CYM = VAVPCT01.AF-MO;
  end
   /* -------------- y2k in end -------------------*/

  AFWREC.AFWIDX4 = AF0GW00.AF0GW-AF-MO-MO -   AF0GW00.AF0GW-SESN-BEG-MO + 1;

   /* -------------- y2k out begin ----------------*/
   /* IF AF0GW00.AF0GW-AF-MO-YR > AF0GW00.AF0GW-SESN-BEG-YR;*/
    /* AFWREC.AFWIDX4 = AFWREC.AFWIDX4 + 12;*/
   /* END;*/
   /* -------------- y2k out end ------------------*/
   /* -------------- y2k in begin -----------------*/
  AF0GW-SBEG-CC = AF0GW00.AF0GW-SESN-BEG-CC;
  AF0GW-SBEG-YY = AF0GW00.AF0GW-SESN-BEG-YR;
  if (AF0GW00.AF0GW-AF-MO-CCYY > AF0GW00.AF0GW-SBEG-CCYY)
    AFWREC.AFWIDX4 = AFWREC.AFWIDX4 + 12;
  end
   /* -------------- y2k in end -------------------*/

  if (AFWREC.AFWIDX4 > 9)
    XP1REC.XP1MNO = 138;
    return;
  end

  AFWREC.AFWIDX4 = AFWREC.AFWIDX4 + 9 * AFWREC.AFWIDX1 - 9; /* 9(idx1 - 1)*/
  AF0GW01.AF-MO-AVAL-PCT[AFWIDX4] = VAVPCT01.AF-MO-AVAL-PCT;
  AF0GW01.AF-MO[AFWIDX4] = VAVPCT01.AF-MO;
  AF0GW01.ZZZCHGCT[AFWIDX4] = VAVPCT01.ZZ-CHNG-CNT;
  AF0GW00.AF0GW-SAVED-DATA-SW = "Y";

  if (AFWREC.AFWIDX1 == AF0GW00.AF0GW-MAX-SCREEN-LINES)
    AF0G-1500(); /* add page to tsq;*/
  end
end // end AF0G-1300

// close cursor DACAST.VAVPCT01
Function AF0G-1400()
   /* ===================================**/
   /* close cursor for dacast.vavpct02 **/
   /* ===================================**/

   /* --------------- y2k out begin -------------*/
   /* CALL IO6530 'C1',SQLCA,VAVPCT01 (NOMAPS,NONCSP,REPLY;*/
   /* --------------- y2k out end ---------------*/
   /* --------------- y2k in  begin -------------*/
  try
    call "VAVPCT02" ("C1", SQLCA, VAVPCT01) {isNoRefresh = yes, isExternal = yes};
  end
   /* --------------- y2k in end ----------------*/

   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AF0GM001.XXXPRCNM = "AF0G1400"; /* Process number*/
  TA1REC.TA1PGMNM = "AF0G1400"; /* Error location*/
  TA1REC.TA1LOC = "CLOSE CURSOR";
  TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAVPCT02"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AFWREC.AFWSWR = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/



end // end AF0G-1400

// add page to temp storage
Function AF0G-1500()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/

  AF0GW00.AF0GW-SAVED-DATA-SW = "N"; /* reset*/
  AF0GW01.AF0GW-TSQ-LENGTH = AFWREC.AFWTSL; /* Temp storage length*/
  TA5REC.TA5APPID = "AF0G"; /* Application id*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  call "TA0050" (AF0GW01, TA5REC) {isNoRefresh = yes}; /* Temporary storage*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    AF0GM001.XXXPRCNM = "AF0G1500"; /* Process number*/
    TA1REC.TA1PGMNM = "AF0G1500"; /* Error location*/
    TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
    TA1REC.TA1MAP = "AF0GM001"; /* MAP NAME*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

    converseLib.validationFailed(10); /* Indicate system error*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    return; /* Return to previous process*/
  end

  AFWREC.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
  AFWREC.AFWIDX1 = 0; /* Reset display line number*/
  /* MOVE 1 TO AFWREC.AFWIDX1;       /* Reset display line number*/
  set AF0GW01 empty; /* Clear temporary storage record*/



end // end AF0G-1500

// format and converse the map
Function AF0G-2000()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  AF0GM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AF0GM001 alarm; /* Indicate sound alarm*/

    if (AF0GW00.AF0GW-KEY-CHANGED-SW == "Y") /* select critera in error*/
      AFWREC.AFWIXM = 1; /* first row*/

      while (AFWREC.AFWIXM <= AF0GW00.AF0GW-MAX-SCREEN-LINES)
        AFWREC.AFWIDX4 = AFWREC.AFWIXM - 1; /* start index*/
        AFWREC.AFWIDX4 = 9 * AFWREC.AFWIDX4 + 1; /* start index*/
        AFWREC.AFWIDX5 = 9 + AFWREC.AFWIDX4; /* end index*/
        AF0GM001.XOW-OWN-GRP-CD[AFWIXM] = " ";

        while (AFWREC.AFWIDX4 < AFWREC.AFWIDX5) /* for each this row*/
          AF0GM001.AF-MO-AVAL-PCT[AFWIDX4] = 0;
          AFWREC.AFWIDX4 = AFWREC.AFWIDX4 + 1; /* next bucket*/
        end

        AFWREC.AFWIXM = AFWREC.AFWIXM + 1; /* next line*/
      end

    end

  end

  if (AF0GW00.AF0GW-FORMAT-MAP-SW == "N" /* dont format map*/
   || converseVar.validationMsgNum != 0) /* Error message to display*/
    if (XP1REC.XP1MNO == 2 /* test for error msg*/
     || XP1REC.XP1MNO == 3)
      if (XP1REC.XP1MNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(XP1REC.XP1MNO);
      end /* information message number*/
      XP1REC.XP1MNO = 0; /* reset information message number*/
    end
  else
    if (XP1REC.XP1MNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(XP1REC.XP1MNO);
    end /* Information message number*/
    XP1REC.XP1MNO = 0; /* Reset information message number*/
    set AF0GM001 initial;
    AF0GM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    AF0G-2100(); /* Format the data on the page*/
    AF0GW00.AF0GW-FORMAT-MAP-SW = "N"; /* map is formatted*/
  end

  AFWREC.AFWIXM = 1; /* first screen line*/

  while (AFWREC.AFWIXM <= AF0GW00.AF0GW-MAX-SCREEN-LINES)

    if (AF0GM001.XOW-OWN-GRP-CD[AFWIXM] == " ") /* no entry this line*/
      AFWREC.AFWIDX4 = AFWREC.AFWIXM - 1; /* start index*/
      AFWREC.AFWIDX4 = 9 * AFWREC.AFWIDX4 + 1; /* start index*/
      AFWREC.AFWIDX5 = 9 + AFWREC.AFWIDX4; /* end index*/
      set AF0GM001.XOW-OWN-GRP-CD[AFWIXM] skip, invisible;

      while (AFWREC.AFWIDX4 < AFWREC.AFWIDX5) /* for each this row*/
        set AF0GM001.AF-MO-AVAL-PCT[AFWIDX4] skip, invisible;
        AFWREC.AFWIDX4 = AFWREC.AFWIDX4 + 1; /* next bucket*/
      end

    end

    AFWREC.AFWIXM = AFWREC.AFWIXM + 1; /* next line*/
  end

  AF0G-2200(); /* darken unused columns*/
  converse AF0GM001 ;
end // end AF0G-2000

// format map from working storag
Function AF0G-2100()
   /* ************************************************************/
   /* set up map heading                                       **/
   /* ************************************************************/

  AF0GM001.XSE-SESN-CD = AF0GW02.XSE-SESN-CD;
  AF0GM001.AF0GM-SESN-YR-RNG = AF0GW02.XSN-SESN-YR-RNG;
  AF0GM001.SY-STY-NBR = AF0GW02.SY-STY-NBR;
  AF0GM001.SY-COLR-CD-ID = AF0GW02.SY-COLR-CD-ID;
  AF0GM001.SY1SSTNM = AF0GW02.SY1SSTNM;
  AF0GM001.SY2CLRAB = AF0GW02.SY2CLRAB;
  AF0GM001.AF0GM-CURR-SESN-CD = AF0GW02.AF0GM-CURR-SESN-CD;
  AF0GM001.AF0GM-CURR-SESN-YR = AF0GW02.AF0GM-CURR-SESN-YR;
  AF0GM001.AF0GM-CURR-STY-NBR = AF0GW02.AF0GM-CURR-STY-NBR;
  AF0GM001.AF0GM-CURR-COLR-CD = AF0GW02.AF0GM-CURR-COLR-CD;
  AF0GM001.AF0GM-CURR-STY-NM = " "; /* space out short name*/

  if (AFWREC.AFWTSP < AFWREC.TA5TSQIX) /* less than last page*/
    AF0GM-PF8 = "8:FWRD"; /* display pf8 key in footing*/
    set AF0GM001.AF0GM-PF8 normal; /* set display attribute*/
  else
    AF0GM-PF8 = " "; /* do not display pf8 footing*/
    set AF0GM001.AF0GM-PF8 invisible; /* set display attribute*/
  end

  if (AFWREC.AFWTSP > 1) /* more than one page*/
    AF0GM-PF7 = "7:BACK"; /* display pf7 key in footing*/
    set AF0GM001.AF0GM-PF7 normal; /* set display attribute*/
  else
    AF0GM-PF7 = " "; /* do not display pf7 footing*/
    set AF0GM001.AF0GM-PF7 invisible; /* set display attribute*/
  end

  AF0GS-0002(); /* select set syclr*/
  AF0GS-0003(); /* fetch one row*/
  AF0GS-0004(); /* close cursor syclr*/
  AF0GS-0005(); /* get color abbrev*/

   /* ************************************************************/
   /* set up detail info (including month titles)              **/
   /* ************************************************************/

  AF0G-2110(); /* build month titles*/
  AF0G-2120(); /* retrieve temp storage page;*/
  AFWREC.AFWIXM = 1; /* first screen line*/

  while (AFWREC.AFWIXM <= AF0GW00.AF0GW-MAX-SCREEN-LINES
   && AF0GW01.XOW-OWN-GRP-CD[AFWIXM] != " ") /* and an entry that line*/
    AF0GM001.XOW-OWN-GRP-CD[AFWIXM] = AF0GW01.XOW-OWN-GRP-CD[AFWIXM];
    AFWREC.AFWIDX4 = AFWREC.AFWIXM - 1;
    AFWREC.AFWIDX4 = 9 * AFWREC.AFWIDX4 + 1; /* start index*/
    AFWREC.AFWIDX5 = AFWREC.AFWIDX4 + 9; /* end index*/

    while (AFWREC.AFWIDX4 < AFWREC.AFWIDX5) /* for each screen column*/
      AF0GM001.AF-MO-AVAL-PCT[AFWIDX4] = AF0GW01.AF-MO-AVAL-PCT[AFWIDX4];
      AFWREC.AFWIDX4 = AFWREC.AFWIDX4 + 1; /* next column*/
    end

    AFWREC.AFWIXM = AFWREC.AFWIXM + 1; /* next screen line*/
  end

end // end AF0G-2100

// format month abbreviations
Function AF0G-2110()
  if (AF0GW00.AF0GW-SESN-BEG-MO in AF0GT01.AF0GT-MONTH)
    AFWREC.AFWIDX4 = sysVar.arrayIndex; /* begin index*/
    AFWREC.AFWIDX5 = AFWREC.AFWIDX4 + 9; /* end index*/
    AFWREC.AFWIDX3 = 1;

    AF0GW00.AF0GW-ID-YEAR = AF0GW00.AF0GW-SESN-BEG-YR;
    while (AFWREC.AFWIDX4 < AFWREC.AFWIDX5)
      AF0GW00.AF0GW-ID-MONTH = AF0GT01.AF0GT-MONTH-DESC[AFWIDX4];

      if (AFWREC.AFWIDX4 == 13)
        AF0GW00.AF0GW-ID-YEAR = AF0GW00.AF0GW-ID-YEAR + 1;
      end
      AF0GM001.AF0GM-MO-DESC[AFWIDX3] = AF0GW00.AF0GW-INTER-DATE;
      AFWREC.AFWIDX4 = AFWREC.AFWIDX4 + 1;
      AFWREC.AFWIDX3 = AFWREC.AFWIDX3 + 1;
    end

  end

end // end AF0G-2110

// get page from temp storage
Function AF0G-2120()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/

  set AF0GW01 empty; /* initialise tsq work area*/
  AF0GW01.AF0GW-TSQ-LENGTH = AFWREC.AFWTSL; /* Temp storage length*/
  TA5REC.TA5APPID = "AF0G"; /* Application identification*/
  TA5REC.TA5TSQIX = AFWREC.AFWTSP; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  call "TA0050" (AF0GW01, TA5REC) {isNoRefresh = yes}; /* Temporary storage subroutine*/

  if (TA5REC.TA5RTNCD == 0 /* no errors*/
   || TA5REC.TA5RTNCD == 1 /* both of these will*/
   || TA5REC.TA5RTNCD == 7 /* indicate no more pages*/
   || TA5REC.TA5RTNCD == 4) /* queue not there, no pages*/
   /* next sentence;*/
  else
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    AF0GM001.XXXPRCNM = "AF0G2120"; /* Process number*/
    TA1REC.TA1PGMNM = "AF0G2120"; /* Error location*/
    TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
    TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

    converseLib.validationFailed(5); /* Indicate no data to display*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    exit stack; /* Exit to redisplay map*/
  end

end // end AF0G-2120

// darken unused columns
Function AF0G-2200()
  AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
  while (AFWREC.AFWIDX5 != 9999
   && AFWREC.AFWIDX5 != 0) /* end of search condition*/
    if (YSNTBL.XSNABRV[AFWIDX5] == AF0GW00.XSNABRV
     && YSNTBL.XGPCD[AFWIDX5] == "03"
     && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01"
     && YSNTBL.XXXSTAT == "A")
      AF0GW00.AF0GW-SESN-BEG-DT = YSNTBL.XSN-SESN-BDT[AFWIDX5];
      AF0GW00.AF0GW-SESN-END-DT = YSNTBL.XSN-SESN-XDT[AFWIDX5];
      AFWREC.AFWIDX5 = 0; /* END OF search*/
    else
      if (YSNTBL.XGPCD[AFWIDX5] != "99")
        AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
      else
        AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
      end
    end
  end

   /* --------------- y2k out begin ---------------*/
   /* IF AF0GW01.AF-MO(1) LT AF0GW00.AF0GW-SESN-BEG-YYMM*/
    /* AND AF0GW01.AF-MO(1) NE 0;*/
    /* MOVE AF0GW01.AF-MO(1) TO AF0GW00.AF0GW-SESN-BEG-YYMM;*/
   /* END;*/
   /* --------------- y2k out end -----------------*/
   /* --------------- y2k in  begin ---------------*/
  if (AF0GW01.AF-MO[1] < AF0GW00.AF0GW-SESN-BEG-CYM
   && AF0GW01.AF-MO[1] != 0)
    AF0GW00.AF0GW-SESN-BEG-CYM = AF0GW01.AF-MO[1];
  end
   /* --------------- y2k in end ------------------*/

  AF0GW00.AF0GW-YEAR = AF0GW00.AF0GW-SESN-END-MO -   AF0GW00.AF0GW-SESN-BEG-MO + 1;

   /* --------------- y2k out begin ---------------*/
   /* IF AF0GW00.AF0GW-SESN-END-YR > AF0GW00.AF0GW-SESN-BEG-YR;*/
    /* AF0GW00.AF0GW-YEAR = AF0GW00.AF0GW-YEAR + 12;*/
   /* END;*/
   /* --------------- y2k out end -----------------*/
   /* --------------- y2k in  begin ---------------*/
  if (AF0GW00.AF0GW-SESN-END-CYM > AF0GW00.AF0GW-SESN-BEG-CYM)
    AF0GW00.AF0GW-YEAR = AF0GW00.AF0GW-YEAR + 12;
  end
   /* --------------- y2k in end ------------------*/

  AFWREC.AFWIXM = 1; /* first screen line*/

  while (AFWREC.AFWIXM <= AF0GW00.AF0GW-MAX-SCREEN-LINES)
    AFWREC.AFWIDX4 = AFWREC.AFWIXM - 1; /* start index*/
    AFWREC.AFWIDX4 = 9 * AFWREC.AFWIDX4 + AF0GW00.AF0GW-YEAR + 1;
                                   /* start ix*/
    AFWREC.AFWIDX5 = 9 * AFWREC.AFWIXM + 1; /* end index*/

    while (AFWREC.AFWIDX4 < AFWREC.AFWIDX5) /* for each this row*/

      if (AFWREC.AFWIXM == 1) /* first line*/
        set AF0GM001.AF0GM-MO-DESC[AFWIDX4] skip, invisible; /* month titles*/
      end

      set AF0GM001.AF-MO-AVAL-PCT[AFWIDX4] skip, invisible;
      AFWREC.AFWIDX4 = AFWREC.AFWIDX4 + 1; /* next bucket*/
    end

    AFWREC.AFWIXM = AFWREC.AFWIXM + 1; /* next line*/
  end

end // end AF0G-2200

// validate attention identifier
Function AF0G-3000()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (AF0GM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = AF0GM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = AF0GM001.CAITEM; /* Application data*/
      AF0G-1200(); /* purge temp storage queue*/
      XSAFS01(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    set AF0GM001.CATOAP cursor, modified, bold; /* Highlight in case*/
    AF0GM001.XXXPRCNM = "AF0G3000"; /* of returning from*/
    exit stack; /* transfer with error*/
  end

  if (AF0GM001.CAITEM > " ") /* Application data was entered*/
    set AF0GM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with fast path*/
    AF0GM001.XXXPRCNM = "AF0G3000"; /* of returning from*/
    exit stack; /* Redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "AF0GM001"; /* Appl find code*/
    end

    AF0G-1200(); /* purge temp storage queue*/
    XSAFS01(); /* Exit to another application*/
    exit stack; /* Exit to redisplay map*/
  end


  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pa2   /* reset*/
   && converseVar.eventKey not pf7   /* scroll up*/
   && converseVar.eventKey not pf8   /* scroll down*/
   && converseVar.eventKey not pf15) /* next style*/
    AF0GM001.XXXPRCNM = "AF0G3000"; /* Process number*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf15 /* next style*/
   || converseVar.eventKey is pf7  /* scroll up*/
   || converseVar.eventKey is pf8  /* scroll down*/
   || converseVar.eventKey is enter)
    return; /* return to calling process*/
  end

end // end AF0G-3000

// reset highlighted fields
Function AF0G-4000()
  set AF0GM001.XSE-SESN-CD initialAttributes;
  set AF0GM001.AF0GM-SESN-YR-RNG initialAttributes;
  set AF0GM001.SY-STY-NBR initialAttributes;
  set AF0GM001.SY-COLR-CD-ID initialAttributes;

  AFWREC.AFWIXM = 1; /* first screen line*/

  while (AFWREC.AFWIXM <= AF0GW00.AF0GW-MAX-SCREEN-LINES
   && AF0GM001.XOW-OWN-GRP-CD[AFWIXM] != " ") /* and an entry that line*/
    AFWREC.AFWIDX4 = AFWREC.AFWIXM - 1;
    AFWREC.AFWIDX4 = 9 * AFWREC.AFWIDX4 + 1; /* start index*/
    AFWREC.AFWIDX5 = AFWREC.AFWIDX4 + 9; /* end index*/

    while (AFWREC.AFWIDX4 < AFWREC.AFWIDX5) /* for each screen column*/
      set AF0GM001.AF-MO-AVAL-PCT[AFWIDX4] initialAttributes;
      AFWREC.AFWIDX4 = AFWREC.AFWIDX4 + 1; /* next column*/
    end

    AFWREC.AFWIXM = AFWREC.AFWIXM + 1; /* next screen line*/
  end

end // end AF0G-4000

// vaildate entered data
Function AF0G-5000()
  if (converseVar.eventKey is pf7) /* scroll up*/

    if (AFWREC.AFWTSP == 1) /* already on first page*/
      XP1REC.XP1MNO = 2; /* error no more backward*/
      /* MOVE 2 TO EZEMNO;            /* error no more backward*/
      exit stack; /* return to display the map*/
    else /* no error*/
      return; /* return to calling process*/
    end

  end
  if (converseVar.eventKey is pf8) /* scroll down*/

    if (AFWREC.AFWTSP == AFWREC.TA5TSQIX) /* already on last page*/
      XP1REC.XP1MNO = 3; /* error no more forward*/
      /* MOVE 3 TO EZEMNO;            /* error no more forward*/
      AF0GM001.XXXPRCNM = "AF0G5000"; /* process number*/
      exit stack; /* return to display the map*/
    else /* no error*/
      return; /* return to calling process*/
    end

  end

  if (AFWREC.AFWTSP < AFWREC.TA5TSQIX) /* less than last page*/
    AF0GM-PF8 = "8:FWRD"; /* display pf8 key in footing*/
  end

  if (AFWREC.AFWTSP > 1) /* more than one page*/
    AF0GM-PF8 = "7:BACK"; /* display pf7 key in footing*/
  end

  AF0GW00.AF0GW-DATA-CHANGED-SW = "N"; /* data hasnt changed*/
  AF0GW00.AF0GW-KEY-CHANGED-SW = "N"; /* start criteria not chged*/

  if (AF0GM001.XSE-SESN-CD != AF0GW02.XSE-SESN-CD
   || AF0GM001.AF0GM-SESN-YR-RNG != AF0GW02.XSN-SESN-YR-RNG
   || AF0GM001.SY-STY-NBR != AF0GW02.SY-STY-NBR
   || AF0GM001.SY-COLR-CD-ID != AF0GW02.SY-COLR-CD-ID)
    AF0GW00.AF0GW-KEY-CHANGED-SW = "Y"; /* start criteria chged*/
  end

  AFWREC.AFWIXM = 1; /* first line*/

  while (AFWREC.AFWIXM <= AF0GW00.AF0GW-MAX-SCREEN-LINES
   && AF0GW00.AF0GW-DATA-CHANGED-SW == "N") /* data hasnt changed*/
    AF0G-5100(); /* verify if data changed*/
    AFWREC.AFWIXM = AFWREC.AFWIXM + 1; /* next screen line*/
  end
  if (AF0GW00.AF0GW-DATA-CHANGED-SW == "N" /* no changed screen data*/
   && AF0GW00.AF0GW-KEY-CHANGED-SW == "N") /* no changed select criteria*/
    AF0GW00.AF0GW-UPDATE-SW = "N"; /* next color*/
    return; /* return to calling process*/
  end

  AFWREC.AFWIXM = AF0GW00.AF0GW-MAX-SCREEN-LINES; /* last screen row*/


  if (AF0GW00.AF0GW-KEY-CHANGED-SW == "Y")
    AF0GW00.AF0GW-YEAR = AF0GM001.AF0GM-SESN-YR-RNG;
    if (AF0GM001.AF0GM-SESN-YR-RNG > 60)
      AF0GW00.AF0GW-YEAR = AF0GW00.AF0GW-YEAR + 1900; /* move century*/
    else
      AF0GW00.AF0GW-YEAR = AF0GW00.AF0GW-YEAR + 2000; /* move century*/
    end

  /* **********************************************************/
  /* do not allow user to enter anything past SU 2000    **/
  /* **********************************************************/

    if (AF0GW00.AF0GW-YEAR == 2000)
      if (AF0GM001.XSE-SESN-CD == "FA"
       || AF0GM001.XSE-SESN-CD == "HO")
        /* field in error*/
        AFWREC.AFWPRCSN = "AF0G5000"; /* process number*/
        set AF0GM001.AF0GM-SESN-YR-RNG cursor, bold; /* highlight field*/
        set AF0GM001.XSE-SESN-CD cursor, bold; /* highlight field*/
        converseLib.validationFailed(138); /* indicate error message*/
        XP1REC.XSNYR = 0; /* reset working storage*/
      else
        if (AF0GW00.AF0GW-YEAR > 2000)
          /* field in error*/
          AFWREC.AFWPRCSN = "AF0G5000"; /* process number*/
          set AF0GM001.AF0GM-SESN-YR-RNG cursor, bold; /* highlight field*/
          set AF0GM001.XSE-SESN-CD cursor, bold; /* highlight field*/
          converseLib.validationFailed(138); /* indicate error message*/
          XP1REC.XSNYR = 0; /* reset working storage*/
        end
      end
      if (converseVar.validationMsgNum != 0) /* an error*/
        AF0GW00.AF0GW-FORMAT-MAP-SW = "N"; /* dont format map*/
        AFWREC.AFWSWR = "N"; /* request data*/
        exit stack; /* return to display map*/
      end
    end
    AF0G-5200(); /* validate style number*/

    if (converseVar.validationMsgNum == 0) /* valid style*/

      if (AF0GM001.SY-COLR-CD-ID != " ") /* a color entered*/
        AF0G-5200(); /* validate color code*/
      else
        AF0GW02.SY2CLRAB = " ";
      end

    end

    AF0G-5400(); /* validate season*/
  end

  if (converseVar.validationMsgNum != 0) /* an error*/
    AF0GW00.AF0GW-FORMAT-MAP-SW = "N"; /* dont format map*/
    AFWREC.AFWSWR = "N"; /* request data*/
    exit stack; /* return to display map*/
  end
end // end AF0G-5000

// check if data changed
Function AF0G-5100()
  AFWREC.AFWIDX4 = AFWREC.AFWIXM - 1;
  AFWREC.AFWIDX4 = 9 * AFWREC.AFWIDX4 + 1; /* start index*/
  AFWREC.AFWIDX5 = AFWREC.AFWIDX4 + 9; /* end index*/

  while (AFWREC.AFWIDX4 < AFWREC.AFWIDX5) /* for each screen column*/

    if (AF0GW01.AF-MO-AVAL-PCT[AFWIDX4] != 
    AF0GM001.AF-MO-AVAL-PCT[AFWIDX4])
      AF0GW00.AF0GW-DATA-CHANGED-SW = "Y";
    end

    AFWREC.AFWIDX4 = AFWREC.AFWIDX4 + 1; /* next column*/
  end

end // end AF0G-5100

// validate style nbr
Function AF0G-5200()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

   /* *==============================**/
   /* *  Check Map Input for Spaces  **/
   /* *==============================**/

  if (AF0GM001.SY-STY-NBR == " ") /* Style = spaces*/
    AF0GW02.SY-STY-NBR = " "; /* space out ws*/
    AF0GW02.SY1SSTNM = " "; /* space out desc*/
    return; /* Exit to calling process*/
  end

  AF0GW00.AF0GW-YEAR = AF0GM001.AF0GM-SESN-YR-RNG; /* move to wk area*/

  if (AF0GW00.AF0GW-YEAR < 85)
    AF0GW00.AF0GW-YEAR = 2000 + AF0GW00.AF0GW-YEAR; /* move century*/
  else
    AF0GW00.AF0GW-YEAR = 1900 + AF0GW00.AF0GW-YEAR; /* move century*/
  end

  AF0GW02.SY-STY-NBR = AF0GM001.SY-STY-NBR; /* save to wk map storage*/
  AF0GW00.AF0GW-VALID-STYLE-SW = "N"; /* not valid style*/
  AF0G-5230(); /* Validate style*/

  if (AF0GW00.AF0GW-VALID-STYLE-SW == "Y") /* valid style found*/
    AF0G-5210(); /* open vsyclr cursor*/
    AF0G-5220(); /* fetch vsyclr row*/
    AF0GS-0004(); /* close cursor vsyclr*/
    AF0GM001.SY1SSTNM = PG2REC.SY1SSTNM; /* move style desc*/
    AF0GW02.SY1SSTNM = PG2REC.SY1SSTNM; /* move style desc*/
  else

    if (AF0GW00.AF0GW-VALID-STYLE-SW == "N") /* valid style not found*/
      converseLib.validationFailed(33); /* error invalid style nbr*/
      AF0GM001.XXXPRCNM = "AF0G5200"; /* Process number*/
      set AF0GM001.SY-STY-NBR cursor, bold; /* highlight*/
    end

  end

end // end AF0G-5200

// select set DPRODG.VSYCLR01
Function AF0G-5210()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/

  set PG2REC empty; /* Reset rec work area*/
  PG2REC.XGPCD = "03"; /* GPC cd*/
  PG2REC.SY1STNBR = AF0GM001.SY-STY-NBR; /* Style no.*/

   /* *===================================**/
   /* *  Select Set from DPRODG.VSYCLR01  **/
   /* *===================================**/

  try
    call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AF0GM001.XXXPRCNM = "AF0G5210"; /* Process number*/
  TA1REC.TA1PGMNM = "AF0G5210"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET              ";
  TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AF0G-5210

// fetch row DPRODG.VSYCLR01
Function AF0G-5220()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call and validate.*/
   /* For validation purposes only one (1) valid row retrieved*/
     /* will be enough to satisfy the existence check.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/
      return; /* Return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      return; /* Exit to calling rtn*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AF0GM001.XXXPRCNM = "AF0G5220"; /* Process number*/
  TA1REC.TA1PGMNM = "AF0G5220"; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = "AF0GM001"; /* MAP NAME*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AF0G-5220

// select unique DACAST.VAFSTY01
Function AF0G-5230()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/

  set AF2REC empty; /* Reset rec work area*/
  AF2REC.XDMCD = "00";
  AF2REC.XOWCD = "00";
  AF2REC.XDVCD = "01";
  AF2REC.SY1STNBR = AF0GM001.SY-STY-NBR; /* Style no.*/
  AF2REC.XSECD = AF0GM001.XSE-SESN-CD;
  AF2REC.XSNYR = AF0GW00.AF0GW-YEAR;

   /* *===================================**/
   /* *  Select Set from DACAST.VAFSTY01  **/
   /* *===================================**/

  try
    call "IO3510" ("S ", SQLCA, AF2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      AF0GW00.AF0GW-VALID-STYLE-SW = "Y"; /* valid style*/
      return; /* Return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to calling process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AF0GM001.XXXPRCNM = "AF0G5210"; /* Process number*/
  TA1REC.TA1PGMNM = "AF0G5210"; /* Error location*/
  TA1REC.TA1LOC = "SELECT UNIQUE           ";
  TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAFSTY01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AF0G-5230

// validate season
Function AF0G-5400()
  AF0GW00.AF0GW-YEAR = AF0GM001.AF0GM-SESN-YR-RNG; /* move to wk area*/

   /* -------------- y2k out begin -------------------*/
   /* AF0GW00.AF0GW-YEAR = AF0GW00.AF0GW-YEAR + 1900;/* move century*/
   /* ;*/
   /* IF AF0GW00.AF0GW-YEAR < 1985;*/
    /* AF0GW00.AF0GW-YEAR = 1000 + AF0GW00.AF0GW-YEAR;*/
   /* END;*/
   /* -------------- y2k out end ---------------------*/
   /* -------------- y2k in  begin -------------------*/
  if (AF0GM001.AF0GM-SESN-YR-RNG > 60)
    AF0GW00.AF0GW-YEAR = AF0GW00.AF0GW-YEAR + 1900; /* move century*/
  else
    AF0GW00.AF0GW-YEAR = AF0GW00.AF0GW-YEAR + 2000; /* move century*/
  end
   /* -------------- y2k in end ----------------------*/

  AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
  while (AFWREC.AFWIDX5 != 9999
   && AFWREC.AFWIDX5 != 0) /* end of search condition*/
    if (YSNTBL.XSNYR[AFWIDX5] == AF0GW00.AF0GW-YEAR
     && YSNTBL.XGPCD[AFWIDX5] == "03"
     && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01"
     && YSNTBL.XXXSTAT == "A")
      XP1REC.XSNYR = AF0GM001.AF0GM-SESN-YR-RNG; /* save to ws*/
      AFWREC.AFWIDX5 = 0; /* END OF TABLE*/
    else
      if (YSNTBL.XGPCD[AFWIDX5] != "99")
        AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
      else
        AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        AF0GM001.XXXPRCNM = "AF0G5400"; /* Process number*/
        set AF0GM001.AF0GM-SESN-YR-RNG cursor, bold; /* highlight field*/
        converseLib.validationFailed(26); /* indicate error message*/
        XP1REC.XSNYR = 0; /* Reset working storage*/
      end
    end
  end

  if (converseVar.validationMsgNum != 26)

    if (AF0GM001.XSE-SESN-CD in XSETBL.XSECD)
      XP1REC.XSECD = AF0GM001.XSE-SESN-CD; /* save to working storage*/
    else
      AF0GM001.XXXPRCNM = "AF0G5400"; /* Process number*/
      set AF0GM001.XSE-SESN-CD cursor, bold; /* highlight field*/
      converseLib.validationFailed(16); /* indicate error message*/
      XP1REC.XSECD = " "; /* save to working storage*/
      return; /* return to calling process*/
    end


    AF0GW00.AF0GW-WK-SEASON = XP1REC.XSECD; /* To XSECD wk area*/
    AF0GW00.AF0GW-WK-SESN-YR = XP1REC.XSNYR; /* Format wk area*/

    AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
    while (AFWREC.AFWIDX5 != 9999)
      if (YSNTBL.XSNABRV[AFWIDX5] == AF0GW00.XSNABRV
       && YSNTBL.XGPCD[AFWIDX5] == "03"
       && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01"
       && YSNTBL.XXXSTAT == "A")
        return;
      else
        if (YSNTBL.XGPCD[AFWIDX5] != "99")
          AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
        else
          AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
          AF0GM001.XXXPRCNM = "AF0G5400"; /* Process number*/
          set AF0GM001.AF0GM-SESN-YR-RNG cursor, bold; /* highlight field*/
          converseLib.validationFailed(26); /* indicate error message*/
          XP1REC.XSNYR = 0; /* Reset working storage*/
        end
      end
    end

  end

end // end AF0G-5400

// process valid request
Function AF0G-6000()
  if (converseVar.eventKey is pf7) /* scroll up*/
    AF0GW00.AF0GW-FORMAT-MAP-SW = "Y"; /* format map*/
    AFWREC.AFWSWR = "N"; /* dont request data*/
    AFWREC.AFWTSP = AFWREC.AFWTSP - 1; /* make prev page current*/
    return; /* return to calling process*/
  else
    if (converseVar.eventKey is pf8) /* scroll down*/
      AF0GW00.AF0GW-FORMAT-MAP-SW = "Y"; /* format map*/
      AFWREC.AFWSWR = "N"; /* dont request data*/
      AFWREC.AFWTSP = AFWREC.AFWTSP + 1; /* make next page current*/
      return; /* return to calling process*/
    end

  end

  if (converseVar.eventKey is pf15) /* next style*/
    AF0GW00.AF0GW-UPDATE-SW = "N"; /* not an update*/
    AF0GW00.AF0GW-FORMAT-MAP-SW = "Y"; /* format map*/
    AFWREC.AFWSWR = "Y"; /* request data*/
    return; /* return to calling process*/
  else /* enter was used*/

    if (AF0GW00.AF0GW-DATA-CHANGED-SW == "N" /* these two mean*/
     && AF0GW00.AF0GW-KEY-CHANGED-SW == "N") /* next color*/
      AF0GW00.AF0GW-UPDATE-SW = "N"; /* not an update*/
      AF0GW00.AF0GW-FORMAT-MAP-SW = "Y"; /* format map*/
      AFWREC.AFWSWR = "Y"; /* request data*/
      return; /* return to calling process*/
    else

      if (AF0GW00.AF0GW-KEY-CHANGED-SW == "Y") /* new selection criteria*/
        AF0GW00.AF0GW-UPDATE-SW = "Y"; /* as though an update*/
        AF0GW00.AF0GW-FORMAT-MAP-SW = "Y"; /* format map*/
        AFWREC.AFWSWR = "Y"; /* request data*/
        return; /* return to calling process*/

      end

    end

  end

   /* we have gotten rid of the misc garbagio -- now comes the update pass*/

  XX0XS01(); /* get date and time*/
  AFWREC.AFWIXM = 1; /* first screen line*/

  while (AFWREC.AFWIXM <= AF0GW00.AF0GW-MAX-SCREEN-LINES
   /* each screen line*/
   && AF0GM001.XOW-OWN-GRP-CD[AFWIXM] != " ") /* with data on it*/
    AF0G-6100(); /* update process*/
    AFWREC.AFWIXM = AFWREC.AFWIXM + 1; /* next row*/
  end

  AF0GW00.AF0GW-UPDATE-SW = "U"; /* an update*/
  XP1REC.XP1MNO = 13; /* info msg update ok*/
end // end AF0G-6000

// update process
Function AF0G-6100()
  AFWREC.AFWIDX4 = AFWREC.AFWIXM - 1;
  AFWREC.AFWIDX4 = 9 * AFWREC.AFWIDX4 + 1; /* start index*/
  AFWREC.AFWIDX5 = AFWREC.AFWIDX4 + 9; /* end index*/

  while (AFWREC.AFWIDX4 < AFWREC.AFWIDX5) /* for each screen column*/
    AF0G-6110(); /* determine update type*/
    AFWREC.AFWIDX4 = AFWREC.AFWIDX4 + 1; /* next column*/
  end
end // end AF0G-6100

// determine update type
Function AF0G-6110()

  set VAVPCT01 empty;
  VAVPCT01.XOW-OWN-GRP-CD = AF0GW01.XOW-OWN-GRP-CD[AFWIXM];
  VAVPCT01.SY-STY-NBR = AF0GW02.AF0GM-CURR-STY-NBR;
  VAVPCT01.SY-COLR-CD-ID = AF0GW02.AF0GM-CURR-COLR-CD;
  VAVPCT01.XSE-SESN-CD = AF0GW02.AF0GM-CURR-SESN-CD;
  VAVPCT01.XSN-SESN-YR-RNG = AF0GW02.AF0GM-CURR-SESN-YR;
  if (VAVPCT01.XSN-SESN-YR-RNG < 85)
    VAVPCT01.XSN-SESN-YR-RNG = 2000 + VAVPCT01.XSN-SESN-YR-RNG;
  else
    VAVPCT01.XSN-SESN-YR-RNG = 1900 + VAVPCT01.XSN-SESN-YR-RNG;
  end

  VAVPCT01.AF-MO = AFWREC.AFWIDX4 % 9; /* '//' gives remainder in result*/

  if (VAVPCT01.AF-MO == 0) /* even mult of 9*/
    VAVPCT01.AF-MO = 9;
  end

  VAVPCT01.AF-MO = VAVPCT01.AF-MO + AF0GW00.AF0GW-SESN-BEG-MO - 1;

  if (VAVPCT01.AF-MO > 12)
    VAVPCT01.AF-MO = VAVPCT01.AF-MO - 12 + 100;
  end /* the 100 will add 1 to the yr*/
                                   /* eventually*/

  VAVPCT01.AF-MO = 100 * AF0GW00.AF0GW-SESN-BEG-YR + VAVPCT01.AF-MO; /* yr*/

  if (VAVPCT01.AF-MO > 10000) /* century overflow*/
    VAVPCT01.AF-MO = VAVPCT01.AF-MO - 10000;
  end

   /* ---------------- y2k in  begin ------------------*/
  AF0GW00.AF0GW-AF-WK-MO = VAVPCT01.AF-MO;
  if (AF0GW00.AF0GW-AF-WK-YY > 65)
    AF0GW00.AF0GW-AF-WK-CC = 19;
  else
    AF0GW00.AF0GW-AF-WK-CC = 20;
  end
  VAVPCT01.AF-MO = AF0GW00.AF0GW-AF-WK-MO;
   /* ---------------- y2k in end ---------------------*/
   /* ===================================**/
   /* fetch unique row from dacast.vavpct02 **/
   /* ===================================**/

   /* ---------------- y2k out begin ------------------*/
   /* CALL IO6530 'S ',SQLCA,VAVPCT01 (NOMAPS,NONCSP,REPLY;*/
   /* ---------------- y2k out end --------------------*/
   /* ---------------- y2k in  begin ------------------*/
  try
    call "VAVPCT02" ("S ", SQLCA, VAVPCT01) {isNoRefresh = yes, isExternal = yes};
  end
   /* ---------------- y2k in end ---------------------*/

   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/

      if (AF0GM001.AF-MO-AVAL-PCT[AFWIDX4] == 0)
        AF0G-6113(); /* delete row*/
      else
        if (VAVPCT01.AF-MO-AVAL-PCT != AF0GM001.AF-MO-AVAL-PCT[AFWIDX4])
          AF0G-6111(); /* update row*/
        end
      end

      return; /* Return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/

      if (AF0GM001.AF-MO-AVAL-PCT[AFWIDX4] != 0)
        AF0G-6112(); /* add row*/
      end

      return; /* Return to calling process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* roll back any changes*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AF0GM001.XXXPRCNM = "AF0G6110"; /* Process number*/
  TA1REC.TA1PGMNM = "AF0G6110"; /* Error location*/
  TA1REC.TA1LOC = "SEL UNIQUE ";
  TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAVPCT02"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AFWREC.AFWSWR = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/



end // end AF0G-6110

// update row
Function AF0G-6111()

  VAVPCT01.AF-MO-AVAL-PCT = AF0GM001.AF-MO-AVAL-PCT[AFWIDX4];
  VAVPCT01.ZZ-CHNG-CNT = AF0GW01.ZZZCHGCT[AFWIDX4];
  VAVPCT01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
  VAVPCT01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;

   /* ===================================**/
   /* Update row in   DACAST.VAVPCT02  **/
   /* ===================================**/

   /* ------------- y2k out begin ----------------*/
   /* CALL IO6530 'U ',SQLCA,VAVPCT01 (NOMAPS,NONCSP,REPLY;*/
   /* ------------- y2k out end ------------------*/
   /* ------------- y2k in  begin ----------------*/
  try
    call "VAVPCT02" ("U ", SQLCA, VAVPCT01) {isNoRefresh = yes, isExternal = yes};
  end
   /* ------------- y2k in end -------------------*/

   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      AFWREC.AFWSWR = "Y"; /* request data*/
      AF0GW00.AF0GW-FORMAT-MAP-SW = "Y"; /* format map*/
      return; /* Return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* roll back any updates*/
      AF0GM001.XXXPRCNM = "AF0G6111"; /* process number*/
      converseLib.validationFailed(12); /* data already updated or something*/
      exit stack; /* return to display the map*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* backout any changes*/
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AF0GM001.XXXPRCNM = "AF0G6111"; /* Process number*/
  TA1REC.TA1PGMNM = "AF0G6111"; /* Error location*/
  TA1REC.TA1LOC = "UPDATE ROW IN AVPCT";
  TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAVPCT02"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/



end // end AF0G-6111

// add row
Function AF0G-6112()

  VAVPCT01.AF-MO-AVAL-PCT = AF0GM001.AF-MO-AVAL-PCT[AFWIDX4];
  VAVPCT01.XDV-DIV-CD = "01";
  VAVPCT01.XDM-DIM-CD = "00";
  VAVPCT01.ZZ-CHNG-CNT = 0;
  VAVPCT01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
  VAVPCT01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;

   /* ===================================**/
   /* Insert row into DACAST.VAVPCT02  **/
   /* ===================================**/

   /* -------------- y2k out begin ----------------*/
   /* CALL IO6530 'A ',SQLCA,VAVPCT01 (NOMAPS,NONCSP,REPLY;*/
   /* -------------- y2k out end -------------------*/
   /* -------------- y2k in  begin ----------------*/
  try
    call "VAVPCT02" ("A ", SQLCA, VAVPCT01) {isNoRefresh = yes, isExternal = yes};
  end
   /* -------------- y2k in end -------------------*/

   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    AFWREC.AFWSWR = "Y"; /* request data*/
    AF0GW00.AF0GW-FORMAT-MAP-SW = "Y"; /* format map*/
    return; /* Return to calling process*/
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* backout any changes*/
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AF0GM001.XXXPRCNM = "AF0G6112"; /* Process number*/
  TA1REC.TA1PGMNM = "AF0G6112"; /* Error location*/
  TA1REC.TA1LOC = "INSERT ROW TO AVPCT";
  TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAVPCT02"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/



end // end AF0G-6112

// delete row
Function AF0G-6113()

   /* ===================================**/
   /* Delete row into DACAST.VAVPCT02  **/
   /* ===================================**/

   /* ----------- y2k out begin --------------*/
   /* CALL IO6530 'D ',SQLCA,VAVPCT01 (NOMAPS,NONCSP,REPLY;*/
   /* ----------- y2k out end ----------------*/
   /* ----------- y2k in  begin --------------*/
  try
    call "VAVPCT02" ("D ", SQLCA, VAVPCT01) {isNoRefresh = yes, isExternal = yes};
  end
   /* ----------- y2k in end -----------------*/

   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    AFWREC.AFWSWR = "Y"; /* request data*/
    AF0GW00.AF0GW-FORMAT-MAP-SW = "Y"; /* format map*/
    return; /* Return to calling process*/
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* backout any changes*/
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AF0GM001.XXXPRCNM = "AF0G6113"; /* Process number*/
  TA1REC.TA1PGMNM = "AF0G6113"; /* Error location*/
  TA1REC.TA1LOC = "INSERT ROW TO AVPCT";
  TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAVPCT02"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/


end // end AF0G-6113

// main process
Function AF0G001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  AF0G-1000(); /* Obtain the data to display*/

  AF0G-2000(); /* Format and display the map*/

  AF0G-3000(); /* Check attention identifier*/

  AF0G-4000(); /* Reset fields to normal intensity*/

  AF0G-5000(); /* Verify the entered data*/

  AF0G-6000(); /* Process valid input request*/




end // end AF0G001

// fetch DACAST.VAVPCT01 row
Function AF0GS-0001()
   /* ===================================**/
   /* fetch row  from dacast.vavpct02 **/
   /* ===================================**/

   /* -------------- y2k out begin ---------------*/
   /* CALL IO6530 'N1',SQLCA,VAVPCT01 (NOMAPS,NONCSP,REPLY;*/
   /* -------------- y2k out end -----------------*/
   /* -------------- y2k in  begin ---------------*/
  try
    call "VAVPCT02" ("N1", SQLCA, VAVPCT01) {isNoRefresh = yes, isExternal = yes};
  end
   /* -------------- y2k in end ------------------*/

   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* no more rows*/
      return; /* Return to calling process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AF0GM001.XXXPRCNM = "AF0GS0010"; /* Process number*/
  TA1REC.TA1PGMNM = "AF0GS0010"; /* Error location*/
  TA1REC.TA1LOC = "FETCH ROW  ";
  TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAVPCT02"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AFWREC.AFWSWR = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/



end // end AF0GS-0001

// select set DPRODG.VSYCLR01
Function AF0GS-0002()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/

  set PG2REC empty; /* Reset rec work area*/
  PG2REC.XGPCD = "03"; /* GPC cd*/
  PG2REC.SY1STNBR = AF0GM001.AF0GM-CURR-STY-NBR; /* Style no.*/

   /* *===================================**/
   /* *  Select Set from DPRODG.VSYCLR01  **/
   /* *===================================**/

  try
    call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AF0GM001.XXXPRCNM = "AF0GS0020"; /* Process number*/
  TA1REC.TA1PGMNM = "AF0GS0020"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET              ";
  TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AF0GS-0002

// fetch DPRODG.VSYCLR01 row
Function AF0GS-0003()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call and validate.*/
   /* For validation purposes only one (1) valid row retrieved*/
     /* will be enough to satisfy the existence check.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/
      AF0GM001.AF0GM-CURR-STY-NM = PG2REC.SY1SSTNM; /* move style desc*/
      return; /* Return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      AF0GM001.AF0GM-CURR-STY-NM = "UNKNOWN"; /* move style desc*/
      return; /* Exit to calling rtn*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AF0GM001.XXXPRCNM = "AF0GS0030"; /* Process number*/
  TA1REC.TA1PGMNM = "AF0GS0030"; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = "AF0GM001"; /* MAP NAME*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/

end // end AF0GS-0003

// close cursor DPRODG.VSYCLR01
Function AF0GS-0004()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("CS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to calling process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  AF0GM001.XXXPRCNM = "AF0GS0040"; /* Process number*/
  TA1REC.TA1PGMNM = "AF0GS0040"; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  converseLib.validationFailed(10); /* Indicate system error*/
  converseLib.clearScreen();
   /* Clear screen before redisplay*/
end // end AF0GS-0004

// get color code abbrev
Function AF0GS-0005()
   /* ------------------------------------------------------------*/
   /* Obtain Style and Color descriptions from DPRODG.VSYCLR01.*/
   /* ------------------------------------------------------------*/

   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/

  set PG2REC empty; /* initialize db record*/
  PG2REC.XGPCD = "03"; /* gpc cd*/
  PG2REC.SY1STNBR = AF0GM001.AF0GM-CURR-STY-NBR; /* style*/
  PG2REC.SY2CLRID = AF0GM001.AF0GM-CURR-COLR-CD; /* color*/
  PG2REC.XDMCD = "00"; /* dimension cd*/


   /* *=============================**/
   /* *  Access DPRODG.VSYCLR01 DB  * Obtain style,color desc*/
   /* *=============================**/

  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      AF0GM001.AF0GM-CURR-COLR-ABRV = PG2REC.SY2CLRAB;
      return; /* Return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      AF0GM001.AF0GM-CURR-COLR-ABRV = "UNKNOWN";
      return; /* Return to calling process*/
    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "AF0GS0050"; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = "AF0GM001"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AF0GM001.XXXPRCNM = "AF0GS0050"; /* Process name*/
  exit stack; /* Exit to redisplay map*/



end // end AF0GS-0005

//*** RECORD=AF0GW00 ****
// misc working storage for AF0G
// ***********************
Record AF0GW00 type basicRecord
  10 AF0GW-MAX-SCREEN-LINES AF0GW-MAX-SCREEN-LINES ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 AF0GW-FORMAT-MAP-SW AF0GW-FORMAT-MAP-SW ; 
  10 AF0GW-UPDATE-SW AF0GW-UPDATE-SW ; 
  10 AF0GW-DATA-CHANGED-SW AF0GW-DATA-CHANGED-SW ; 
  10 AF0GW-KEY-CHANGED-SW AF0GW-KEY-CHANGED-SW ; 
  10 AF0GW-SAVED-DATA-SW AF0GW-SAVED-DATA-SW ; 
  10 AF0GW-VALID-STYLE-SW AF0GW-VALID-STYLE-SW ; 
  10 XSNABRV XSNABRV ; 
    15 AF0GW-WK-SEASON AF0GW-WK-SEASON ; 
    15 AF0GW-WK-SESN-YR AF0GW-WK-SESN-YR ; 
  10 AF0GW-SESN-END-DT AF0GW-SESN-END-DT ; 
    15 AF0GW-SESN-END-CYM AF0GW-SESN-END-CYM ; 
      20 AF0GW-SESN-END-CC num(2) ; 
      20 AF0GW-SESN-END-YYMM AF0GW-SESN-END-YYMM ; 
        25 AF0GW-SESN-END-YR AF0GW-SESN-END-YR ; 
        25 AF0GW-SESN-END-MO AF0GW-SESN-END-MO ; 
    15 * char(2) ; 
  10 AF0GW-SEND-CCYY AF0GW-SEND-CCYY ; 
    15 AF0GW-SEND-CC AF0GW-SEND-CC ; 
    15 AF0GW-SEND-YY AF0GW-SEND-YY ; 
  10 AF0GW-SESN-BEG-DT AF0GW-SESN-BEG-DT ; 
    15 AF0GW-SESN-BEG-CYM AF0GW-SESN-BEG-CYM ; 
      20 AF0GW-SESN-BEG-CC num(2) ; 
      20 AF0GW-SESN-BEG-YYMM AF0GW-SESN-BEG-YYMM ; 
        25 AF0GW-SESN-BEG-YR AF0GW-SESN-BEG-YR ; 
        25 AF0GW-SESN-BEG-MO AF0GW-SESN-BEG-MO ; 
    15 * char(2) ; 
  10 AF0GW-SBEG-CCYY AF0GW-SBEG-CCYY ; 
    15 AF0GW-SBEG-CC AF0GW-SBEG-CC ; 
    15 AF0GW-SBEG-YY AF0GW-SBEG-YY ; 
  10 AF0GW-AF-MO AF0GW-AF-MO ; 
    15 AF0GW-AF-MO-CCYY AF0GW-AF-MO-CCYY ; 
      20 AF0GW-AF-MO-CC AF0GW-AF-MO-CC ; 
      20 AF0GW-AF-MO-YR AF0GW-AF-MO-YR ; 
    15 AF0GW-AF-MO-MO AF0GW-AF-MO-MO ; 
  10 AF0GW-YEAR AF0GW-YEAR ; 
  10 AF0GW-INTER-DATE AF0GW-INTER-DATE ; 
    15 AF0GW-ID-MONTH AF0GW-ID-MONTH ; 
    15 AF0GW-ID-YEAR AF0GW-ID-YEAR ; 
  10 AF0GW-AF-WK-MO AF0GW-AF-WK-MO ; 
    15 AF0GW-AF-WK-CC AF0GW-AF-WK-CC ; 
    15 AF0GW-AF-WK-YY AF0GW-AF-WK-YY ; 
    15 AF0GW-AF-WK-MM AF0GW-AF-WK-MM ; 
end // end AF0GW00

//*** RECORD=AF0GW01 ****
// This record is display working storage for AF0G
// 
// ***********************
Record AF0GW01 type basicRecord
  5 * char(834) ; 
    10 AF0GW-TSQ-LENGTH AF0GW-TSQ-LENGTH ; 
    10 XOW-OWN-GRP-CD char(2) [10] ; // XOW_OWN_GRP_CD
    10 AF-MO-AVAL-PCT AF-MO-AVAL-PCT [90] ; 
    10 AF-MO AF-MO [90] ; 
    10 ZZZCHGCT ZZZCHGCT [90] ; 
end // end AF0GW01

Record AF0GW02 type basicRecord
  10 XSE-SESN-CD XSE-SESN-CD ; 
  10 XSN-SESN-YR-RNG XSN-SESN-YR-RNG ; 
  10 SY-STY-NBR SY-STY-NBR ; 
  10 SY1SSTNM SY1SSTNM ; 
  10 SY-COLR-CD-ID SY-COLR-CD-ID ; 
  10 SY2CLRAB SY2CLRAB ; 
  10 AF0GM-CURR-SESN-CD AF0GM-CURR-SESN-CD ; 
  10 AF0GM-CURR-SESN-YR AF0GM-CURR-SESN-YR ; 
  10 AF0GM-CURR-STY-NBR AF0GM-CURR-STY-NBR ; 
  10 AF0GM-CURR-STY-NM AF0GM-CURR-STY-NM ; 
  10 AF0GM-CURR-COLR-CD AF0GM-CURR-COLR-CD ; 
  10 AF0GM-CURR-COLR-ABRV AF0GM-CURR-COLR-ABRV ; 
end // end AF0GW02

// sy-color-abrv
DataItem AF0GM-CURR-COLR-ABRV char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// color code currently processin
DataItem AF0GM-CURR-COLR-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Season currently processing
DataItem AF0GM-CURR-SESN-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sesn yr currently processing
DataItem AF0GM-CURR-SESN-YR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// sty nbr currently processing
DataItem AF0GM-CURR-STY-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sy-short-sty-nm
DataItem AF0GM-CURR-STY-NM char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// af-mo
DataItem AF0GW-AF-MO num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem AF0GW-AF-MO-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-AF-MO-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-AF-MO-MO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-AF-MO-YR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-AF-WK-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-AF-WK-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-AF-WK-MO num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-AF-WK-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-DATA-CHANGED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AF0GW-FORMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// intermediate month
DataItem AF0GW-ID-MONTH char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// intermediate year
DataItem AF0GW-ID-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// intermediate date
DataItem AF0GW-INTER-DATE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AF0GW-KEY-CHANGED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AF0GW-MAX-SCREEN-LINES smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SAVED-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AF0GW-SBEG-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SBEG-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SBEG-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SEND-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SEND-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SEND-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SESN-BEG-CYM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SESN-BEG-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SESN-BEG-MO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SESN-BEG-YR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SESN-BEG-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SESN-END-CYM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SESN-END-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SESN-END-MO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SESN-END-YR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-SESN-END-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temp storage length
DataItem AF0GW-TSQ-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AF0GW-UPDATE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AF0GW-VALID-STYLE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xse-sesn-cd
DataItem AF0GW-WK-SEASON char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSN_SESN_YR_RNG
DataItem AF0GW-WK-SESN-YR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem AF0GW-YEAR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

