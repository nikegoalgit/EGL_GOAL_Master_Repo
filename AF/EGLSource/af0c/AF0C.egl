package af0c;

import af.common.*;
import corpcom2.XP1REC;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPAF001;
import corpcom3.XSAFS01;
import corpcom3.XSAFSSE;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpx1.XSETBL;
import corpx2.XSN-SESN-BDT;
import corpy2.YSNTBL;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VAFCTL02;
//*** PROGRAM=AF0C ****
// This application is a prototype for the Apparel Forecast/Buy
// system.  It will display multiple rows from a DB2 table for
// the user to view and/or modify.
// 
// Upon initial entry, the table is read and columns from the
// selected rows are formatted and saved in temporary storage,
// one display page per queue record.
// 
// The records are retrieved from temporary storage one at a
// time, for display to the user.  The user may page forward
// and backward, to view the rows that were selected.
// 
// The user may exit to any allowed application via FAST PATH
// or PF key at any time.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 06/28/88   userid   New application.
// 09/03/93   Tdodso   Changes for 4.1 conversion
// 02/08/94   kj       redesign to remove hardcoding/xsn->ysn
// 12-12-97   oricha   y2k modifications:  AF0C110, 570, 610,
//                     620, W02: add AF0CWTCY.
// *********************
Program AF0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AF0CW01 AF0CW01; // record
  AF0CW02 AF0CW02; // record
  AFWREC AFWREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VAFCTL02 VAFCTL02; // record
  XP1REC XP1REC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSETBL {deleteAfterUse = yes}; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use AF0CM.AF0CM001, // form
  AF0CM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAF001: XPAF001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    set AFWREC empty; /* Initialize working storage*/
    set AF0CW01 empty; /* Initialize working storage*/
    set AF0CW02 empty; /* Initialize working storage*/
    set VAFCTL02 empty; /* Initialize Database Record*/
    set SQLCA empty; /* Initialize working storage*/
    set ERRSQLCA empty; /* Initialize working storage*/
    set TA1REC empty; /* Initialize working storage*/
    set TA5REC empty; /* Initialize working storage*/
    set XX0XW01 empty; /* Initialize working storage*/
    set XX0XW02 empty; /* Initialize working storage*/
    set AF0CM001 initial; /* Initialize map output area*/
    AFWREC.AFWAPPL = "AF0C"; /* Initialize appl ID for this appl*/
    AFWREC.AFWPRCSN = "000 "; /* Initialize process number to zero*/

    AF0CW01.XXXTSLEN = 42; /* Initialize process number to zero*/

    AFWREC.AFWMAP = "1"; /* Indicate map to be displayed*/
    AFWREC.AFWSWR = "Y"; /* Indicate request for data*/

    AFWREC.XXXMAPNM = "M001"; /* Move map name to afwrec*/

     /* ------------------------------------------------------------*/

    goto AF0C001; /* Converse apparel forecast prototype*/

     /* ------------------------------------------------------------*/



    AF0C001: AF0C001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    goto AF0C001; /* Converse Transportation Prototype*/


  end // end main
end // end AF0C

// Mainline
Function AF0C001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  AF0C100(); /* Obtain the data to display*/

  AF0C200(); /* Format and display the map*/

  AF0C300(); /* Check attention identifier*/

  AF0C400(); /* Reset fields to normal intensity*/

  AF0C500(); /* Verify the entered data*/

  AF0C600(); /* Process valid input request*/


end // end AF0C001

// Obtain the data to display
Function AF0C100()
   /* ------------------------------------------------------------*/
   /* If data was not requested, return to the previous process.*/
   /* Purge any existing queue in temporary storage.*/

   /* Since only ONE row exists, SELECT it.*/

   /* Format the data in the page.*/

   /* Add the page to the storage queue.*/

   /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/


  if (AFWREC.AFWSWR != "Y") /* Data was not requested*/
    return; /* Return to previous process*/
  end

  AF0CS01(); /* Purge any temporary storage*/

  XX0XS01(); /* Get current Date and Time*/

  set AF0CW01 empty; /* Clear temporary storage record*/

  AF0C110(); /* Select Row*/

  AF0C120(); /* Populate AF0CW01*/

  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    AFWREC.AFWSWC = "N"; /* Initialize end of file switch*/
    AF0C130(); /* Add page to temporary storage*/
  end

  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    AFWREC.AFWTSP = 1; /* Initialize page number*/
    AFWREC.AFWSWR = "N"; /* Request for data completed*/
  end


end // end AF0C100

// Select Row
Function AF0C110()

   /* ------------------------------------------------------------*/
   /* Select table row.*/

   /* ABEND IF ROW NOT FOUND.*/

   /* ------------------------------------------------------------*/

   /* ------------ y2k out begin -------------*/
   /* CALL VAFCTL02 'S ',SQLCA,VAFCTL02 (NOMAPS;   /* Select table set*/
   /* ------------ y2k out end  --------------*/
   /* ------------ y2k in begin --------------*/
  call "VAFCTL03" ("S ", SQLCA, VAFCTL02) {isNoRefresh = yes}; /* Select table set*/
   /* ------------ y2k in end ----------------*/

  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  end

  converseLib.clearScreen();
   /* Clear screen before redisplay*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AFWREC.AFWPRCSN = "110 "; /* Process number*/
  TA1REC.TA1PGMNM = AFWREC.AFWPRCSN; /* Error location*/
  TA1REC.TA1LOC = "SELECT TABLE ROW";
  TA1REC.TA1MAP = AFWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAFCTL03"; /* Table view name*/
  TA1REC.TA1TBLKE = "ONE RECORD ONLY"; /* Table key*/

  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  end

  if (SQLCA.VAGen_SQLCODE < +0)
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  end

  if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  end

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  return; /* Return to previous process*/



end // end AF0C110

// Format AF0CW01
Function AF0C120()
   /* ------------------------------------------------------------*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/
   /* move VAFCTL02 fields to TS RECORD (AF0CW01).*/
   /* ------------------------------------------------------------*/
   /* Previous Season*/
   /* ------------------------------------------------------------*/

  AF0CW01.AF0CWPSS = VAFCTL02.AF4PSNCD;

  AF0CW02.AF0CWWCY = VAFCTL02.AF4PSNYR;
  AF0CW01.AF0CWPYY = AF0CW02.AF0CWWYY;

  AF0CW01.AF4PSNYR = VAFCTL02.AF4PSNYR;

   /* ------------------------------------------------------------*/
   /* Current Season*/
   /* ------------------------------------------------------------*/

  AF0CW01.AF0CWCSS = VAFCTL02.AF4CSNCD;

  AF0CW02.AF0CWWCY = VAFCTL02.AF4CSNYR;
  AF0CW01.AF0CWCYY = AF0CW02.AF0CWWYY;

  AF0CW01.AF4CSNYR = VAFCTL02.AF4CSNYR;

   /* ------------------------------------------------------------*/
   /* Next Season*/
   /* ------------------------------------------------------------*/

  AF0CW01.AF0CWNSS = VAFCTL02.AF4NSNCD;

  AF0CW02.AF0CWWCY = VAFCTL02.AF4NSNYR;
  AF0CW01.AF0CWNYY = AF0CW02.AF0CWWYY;

  AF0CW01.AF4NSNYR = VAFCTL02.AF4NSNYR;

   /* ------------------------------------------------------------*/
   /* Future Season*/
   /* ------------------------------------------------------------*/

  AF0CW01.AF0CWFSS = VAFCTL02.AF4FSNCD;

  AF0CW02.AF0CWWCY = VAFCTL02.AF4FSNYR;
  AF0CW01.AF0CWFYY = AF0CW02.AF0CWWYY;

  AF0CW01.AF4FSNYR = VAFCTL02.AF4FSNYR;

   /* ------------------------------------------------------------*/
   /* Extended Season*/
   /* ------------------------------------------------------------*/

  AF0CW01.AF0C-EXT-SESN-CD = VAFCTL02.AF-EXT-SESN-CD;

  AF0CW02.AF0CWWCY = VAFCTL02.AF-EXT-SESN-YR;
  AF0CW01.AF0C-EXT-SESN-YY = AF0CW02.AF0CWWYY;

   /* MOVE VAFCTL02.AF-EXT-SESN-YR TO AF0CW01.AF0C-EXT-SESN-YR;*/

   /* ------------------------------------------------------------*/



end // end AF0C120

// Add page to temporary storage
Function AF0C130()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/

  AF0CW01.XXXTSLEN = 32;

  TA5REC.TA5APPID = AFWREC.AFWAPPL; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  call "TA0050" (AF0CW01, TA5REC) {isNoRefresh = yes}; /* Temporary storage*/
                                    /* ;subroutine*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    AFWREC.AFWPRCSN = "130 "; /* Process number*/
    TA1REC.TA1PGMNM = AFWREC.AFWPRCSN; /* Error location*/
    TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
    TA1REC.TA1MAP = AFWREC.XXXMAPNM; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end

  AFWREC.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/

   /* ------------------------------------------------------------*/


end // end AF0C130

// Format and display the map
Function AF0C200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  AF0CM001.XXXPRCNM = AFWREC.AFWERLOC;

  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AF0CM001 alarm; /* Indicate sound alarm*/
    AF0CM001.XXXPRCNM = AFWREC.AFWERLOC;
  end

  if (converseVar.validationMsgNum == 0) /* No error message to display*/
    if (COMMAREA.CACLVL[3] == "Y")
      set AF0CM001.AF0CMPSY cursor;
    else
      set AF0CM001.CATOAP cursor; /* move curs to option field*/
    end
  end

  if (converseVar.validationMsgNum == 0) /* No error message to display*/
    AF0CM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    AF0C210(); /* Format the data on the page*/
    if (AFWREC.AFWNMO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(AFWREC.AFWNMO);
    end /* Information message number*/
  end

  converse AF0CM001 ;

  AFWREC.AFWNMO = 0; /* Reset information message number*/


end // end AF0C200

// move AF4REC Date Fields to map
Function AF0C210()
   /* ------------------------------------------------------------*/
   /* move VAFCTL02 date fields to map.*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Previous Season*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWWCY = VAFCTL02.AF4PSNYR;
  AF0CW02.AF0CWDYY = AF0CW02.AF0CWWYY;

  AF0CW02.AF0CWDSS = VAFCTL02.AF4PSNCD;

  AF0CM001.AF0CMPSY = AF0CW02.AF0CWDSY;

   /* ------------------------------------------------------------*/
   /* Current Season*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWWCY = VAFCTL02.AF4CSNYR;
  AF0CW02.AF0CWDYY = AF0CW02.AF0CWWYY;

  AF0CW02.AF0CWDSS = VAFCTL02.AF4CSNCD;

  AF0CM001.AF0CMCSY = AF0CW02.AF0CWDSY;

   /* ------------------------------------------------------------*/
   /* Next Season*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWWCY = VAFCTL02.AF4NSNYR;
  AF0CW02.AF0CWDYY = AF0CW02.AF0CWWYY;

  AF0CW02.AF0CWDSS = VAFCTL02.AF4NSNCD;

  AF0CM001.AF0CMNSY = AF0CW02.AF0CWDSY;

   /* ------------------------------------------------------------*/
   /* Future Season*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWWCY = VAFCTL02.AF4FSNYR;
  AF0CW02.AF0CWDYY = AF0CW02.AF0CWWYY;

  AF0CW02.AF0CWDSS = VAFCTL02.AF4FSNCD;

  AF0CM001.AF0CMFSY = AF0CW02.AF0CWDSY;

   /* ------------------------------------------------------------*/
   /* Extended Season*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWWCY = VAFCTL02.AF-EXT-SESN-YR;
  AF0CW02.AF0CWDYY = AF0CW02.AF0CWWYY;

  AF0CW02.AF0CWDSS = VAFCTL02.AF-EXT-SESN-CD;

  AF0CM001.AF0C-EXT-SESN-YR = AF0CW02.AF0CWDSY;

  if (COMMAREA.CACLVL[3] == "Y")
    set AF0CM001.AF0CMPSY normal;
    set AF0CM001.AF0CMCSY normal;
    set AF0CM001.AF0CMNSY normal;
    set AF0CM001.AF0CMFSY normal;
    set AF0CM001.AF0C-EXT-SESN-YR normal;
  else
    set AF0CM001.AF0CMPSY initialAttributes;
    set AF0CM001.AF0CMCSY initialAttributes;
    set AF0CM001.AF0CMNSY initialAttributes;
    set AF0CM001.AF0CMFSY initialAttributes;
    set AF0CM001.AF0C-EXT-SESN-YR initialAttributes;
  end

  set AF0CM001.CATOAP initialAttributes; /* Commarea TO application*/
  set AF0CM001.CAITEM initialAttributes; /* Commarea application data*/

   /* ------------------------------------------------------------*/



end // end AF0C210

// Check attention identifier
Function AF0C300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set AF0CM001 initial; /* Clear the map fields*/
    set AF0CW01 empty; /* Clear the work fields*/

    exit stack; /* Exit to redisplay map*/

  end

  if (AF0CM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      AF0CS01(); /* Purge any temporary storage*/

      COMMAREA.CATOAP = AF0CM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = AF0CM001.CAITEM; /* Application data*/

      XSAFS01(); /* Exit to another application*/

    else

      converseLib.validationFailed(5); /* Indicate PF key not valid*/

    end

    set AF0CM001.CATOAP cursor, modified, bold; /* Highlight*/

    AFWREC.AFWPRCSN = "300 "; /* Process number*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    AF0CS01(); /* Purge any temporary storage*/

    XSAFS01(); /* Exit to another application*/

    AFWREC.AFWPRCSN = "300 "; /* Process number*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   /* ------------------------------------------------------------*/
                                     
   /* NEW SCREEN DOES NOT ALLOW PAGING. (1/91)*/
                                     
   /* AND EZEAID NOT PF7            ; and PF7 was not pressed*/
   /* AND EZEAID NOT PF8            ; and PF8 was not pressed*/
                                     
   /* ------------------------------------------------------------*/
   && converseVar.eventKey not pf14) /* and PF14 was not pressed*/

    AFWREC.AFWPRCSN = "300 "; /* Process number*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end


end // end AF0C300

// Reset highlighted fields
Function AF0C400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  AFWREC.AFWIXM = 1; /* Initialize line index*/

  while (AFWREC.AFWIXM <= 15) /* Until end of lines*/

    /* IF AFXXM001.TSXXXXXX(AFXXWIXM) GT ' '; Line was formatted*/
      /* SET AFXXM001.TSXXMSEL(AFXXWIXM) NORMAL; Reset select flag*/
    /* END ;*/

    AFWREC.AFWIXM = AFWREC.AFWIXM + 1; /* Increment line index*/

  end

   /* ------------------------------------------------------------*/

  if (COMMAREA.CACLVL[3] == "Y")
    set AF0CM001.AF0CMPSY normal;
    set AF0CM001.AF0CMCSY normal;
    set AF0CM001.AF0CMNSY normal;
    set AF0CM001.AF0CMFSY normal;
    set AF0CM001.AF0C-EXT-SESN-YR normal;
  else
    set AF0CM001.AF0CMPSY initialAttributes;
    set AF0CM001.AF0CMCSY initialAttributes;
    set AF0CM001.AF0CMNSY initialAttributes;
    set AF0CM001.AF0CMFSY initialAttributes;
    set AF0CM001.AF0C-EXT-SESN-YR initialAttributes;
  end

   /* ------------------------------------------------------------*/

  set AF0CM001.CATOAP initialAttributes; /* Commarea TO application*/
  set AF0CM001.CAITEM initialAttributes; /* Commarea application data*/


end // end AF0C400

// Verify the entered data
Function AF0C500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Determine whether a valid request to scroll was entered.*/
   /* If not a scroll request, verify any changed data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (AF0CM001.CAITEM > " ") /* Application data was entered*/

    set AF0CM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    AFWREC.AFWPRCSN = "500 "; /* Process number*/

  end

  if (COMMAREA.CACLVL[3] == "Y")
    /* NEXT SENTENCE*/
  else
    return;
  end

  if (AF0CW02.AF0CWCDT == 0)
    AF0C510();
  end


  if (AF0CW01.AF0CWFSY == AF0CM001.AF0CMFSY
   && AF0CW01.AF0CWNSY == AF0CM001.AF0CMNSY
   && AF0CW01.AF0CWCSY == AF0CM001.AF0CMCSY
   && AF0CW01.AF0CWPSY == AF0CM001.AF0CMPSY
   && AF0CW01.AF0C-EXT-SESN-YR == AF0CM001.AF0C-EXT-SESN-YR)
    /* NEXT SENTENCE*/
  else
    AF0C518(); /* VALIDATE FUTURE SEASON/YEAR*/
    AF0C530(); /* VALIDATE NEXT SEASON/YEAR*/
    AF0C550(); /* VALIDATE CURRENT SEASON/YEAR*/
    AF0C570(); /* VALIDATE PREVIOUS SEASON/YEAR*/
    AF0C575(); /* VALIDATE EXTENDED SEASON/YEAR*/

    if (converseVar.validationMsgNum != 0) /* Errors were found*/
      exit stack; /* Exit to redisplay map*/
    end

    AF0C590(); /* VALIDATE SEASON/YEAR COMBOS*/

  end


  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to redisplay map*/
  end


end // end AF0C500

// Get Current Date
Function AF0C510()
   /* ============================================================*/
   /* ===== GET CURRENT DATE                                 =====*/
   /* =====                                                  =====*/
   /* ============================================================*/

  set TA2REC empty;

  TA2REC.TA2DTOPT = "GETDATE ";
  TA2REC.TA2GRTYP = "G";

  AF0CS02();

  if (TA2REC.TA2RTNCD == 0) /* and normal return code*/
    AF0CW02.AF0CWCDT = TA2REC.TA2GRGGN;
    return;
  else
    TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
    TAEREC.TAEDESC2 = TA2REC.TA2GROUP; /* Subroutine parameters*/

    AFWREC.AFWPRCSN = "510"; /* Module identification*/
    converseLib.validationFailed(10); /* Indicate system error*/

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "GET CURRENT DATE";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = AFWREC.AFWPRCSN; /* Program number*/
    TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
    TA1REC.TA1MAPNO = "M001"; /* Map number*/

    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

    exit stack; /* Exit to display map*/

  end

   /* ====================== END OF PROCESS ======================*/



end // end AF0C510

// Edit Future Season/Year
Function AF0C518()
   /* ============================================================*/
   /* ===== VALIDATE FUTURE SEASON/YEAR                      =====*/
   /* =====                                                  =====*/
   /* ===== Season/Year must be in SSYY format               =====*/
   /* =====                                                  =====*/
   /* ===== Next Year must be equal or greater that this     =====*/
   /* ===== Year                                             =====*/
   /* =====                                                  =====*/
   /* ===== Season must be a valid apparel season.           =====*/
   /* =====                                                  =====*/
   /* ============================================================*/


  AF0CW02.AF0CWDSY = AF0CM001.AF0CMFSY;
  AF0CW02.AF0CWFYY = 0;

   /* ------------------------------------------------------------*/
    /* AF0CW02.AF0CWYY  -  CURRENT YEAR + 1*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWWYY = AF0CW02.AF0CWTYY + 1;

  if (AF0CW02.AF0CW-YY-CHAR is numeric /* Check for numerics*/
   && (AF0CW02.AF0CWDYY == AF0CW02.AF0CWTYY
   || AF0CW02.AF0CWDYY == AF0CW02.AF0CWWYY))
    AF0CW02.AF0CWFYY = AF0CW02.AF0CWDYY;
  else
    converseLib.validationFailed(26);
    AFWREC.AFWPRCSN = "530 ";
    set AF0CM001.AF0CMFSY cursor, bold;
    return;
  end

   /* ------------------------------------------------------------*/
   /* -     Validate Future Season                               -*/
   /* ------------------------------------------------------------*/

  if (AF0CW02.AF0CWDSS in XSETBL.XSECD)

    AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
    while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
      if (YSNTBL.XSNABRV[AFWIDX5] == AF0CW02.AF0CWDSY
       && YSNTBL.XGPCD[AFWIDX5] == "03"
       && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
        AF0CW02.AF0CWFSS = AF0CW02.AF0CWDSS;
        AF0CW02.XSN-SESN-BDT[4] = YSNTBL.XSN-SESN-BDT[AFWIDX5];
        return;
      else
        if (YSNTBL.XGPCD[AFWIDX5] != "99")
          AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
        else
          AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        end
      end
    end


  end

  AF0CW02.AF0CWMSG[2] = converseVar.validationMsgNum;

  XP1REC.XSECD = "?";

  XSAFSSE();

  converseLib.clearScreen();

  AF0CW02.AF0CWFSS = XP1REC.XSECD;

  AF0CM001.AF0CMFSY = AF0CW02.AF0CWFSY;

  if (XP1REC.XSECD in XSETBL.XSECD)

    AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
    while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
      if (YSNTBL.XSNABRV[AFWIDX5] == AF0CW02.AF0CWDSY
       && YSNTBL.XGPCD[AFWIDX5] == "03"
       && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
        if (AF0CW02.AF0CWMSG[2] == 9999)
          converseLib.validationFailed();
        else
          converseLib.validationFailed(AF0CW02.AF0CWMSG[2]);
        end
        return;
      else
        if (YSNTBL.XGPCD[AFWIDX5] != "99")
          AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
        else
          AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        end
      end
    end


  end

  converseLib.validationFailed(26);
  AFWREC.AFWPRCSN = "530 ";
  set AF0CM001.AF0CMFSY cursor, bold;

   /* ====================== END OF PROCESS ======================*/
end // end AF0C518

// Validate Next Season/Year
Function AF0C530()
   /* ============================================================*/
   /* ===== VALIDATE NEXT SEASON/YEAR                        =====*/
   /* =====                                                  =====*/
   /* ===== Season/Year must be in SSYY format               =====*/
   /* =====                                                  =====*/
   /* ===== Next Year must be equal or greater that this     =====*/
   /* ===== Year                                             =====*/
   /* =====                                                  =====*/
   /* ===== Season must be a valid apparel season.           =====*/
   /* =====                                                  =====*/
   /* ============================================================*/

  AF0CW02.AF0CWDSY = AF0CM001.AF0CMNSY;
  AF0CW02.AF0CWNYY = 0;

   /* ------------------------------------------------------------*/
    /* AF0CW02.AF0CWYY  -  CURRENT YEAR + 1*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWWYY = AF0CW02.AF0CWTYY + 1;

  if (AF0CW02.AF0CW-YY-CHAR is numeric
   && (AF0CW02.AF0CWDYY == AF0CW02.AF0CWTYY
   || AF0CW02.AF0CWDYY == AF0CW02.AF0CWWYY))
    AF0CW02.AF0CWNYY = AF0CW02.AF0CWDYY;
  else
    converseLib.validationFailed(26);
    AFWREC.AFWPRCSN = "530 ";
    set AF0CM001.AF0CMNSY cursor, bold;
    return;
  end

   /* ------------------------------------------------------------*/
   /* -     Validate Next Season                                 -*/
   /* ------------------------------------------------------------*/

  if (AF0CW02.AF0CWDSS in XSETBL.XSECD)

    AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
    while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
      if (YSNTBL.XSNABRV[AFWIDX5] == AF0CW02.AF0CWDSY
       && YSNTBL.XGPCD[AFWIDX5] == "03"
       && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
        AF0CW02.AF0CWNSS = AF0CW02.AF0CWDSS;
        AF0CW02.XSN-SESN-BDT[3] = YSNTBL.XSN-SESN-BDT[AFWIDX5];
        return;
      else
        if (YSNTBL.XGPCD[AFWIDX5] != "99")
          AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
        else
          AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        end
      end
    end

  end

  AF0CW02.AF0CWMSG[2] = converseVar.validationMsgNum;

  XP1REC.XSECD = "?";

  XSAFSSE();

  converseLib.clearScreen();

  AF0CW02.AF0CWNSS = XP1REC.XSECD;

  AF0CM001.AF0CMNSY = AF0CW02.AF0CWNSY;

  if (XP1REC.XSECD in XSETBL.XSECD)


    AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
    while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
      if (YSNTBL.XSNABRV[AFWIDX5] == AF0CW02.AF0CWDSY
       && YSNTBL.XGPCD[AFWIDX5] == "03"
       && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
        if (AF0CW02.AF0CWMSG[2] == 9999)
          converseLib.validationFailed();
        else
          converseLib.validationFailed(AF0CW02.AF0CWMSG[2]);
        end
        return;
      else
        if (YSNTBL.XGPCD[AFWIDX5] != "99")
          AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
        else
          AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        end
      end
    end

  end

  converseLib.validationFailed(26);
  AFWREC.AFWPRCSN = "530 ";
  set AF0CM001.AF0CMNSY cursor, bold;

   /* ====================== END OF PROCESS ======================*/



end // end AF0C530

// Validate Current Season/Year
Function AF0C550()
   /* ============================================================*/
   /* ===== VALIDATE CURRENT SEASON/YEAR                     =====*/
   /* =====                                                  =====*/
   /* ===== Season/Year must be in SSYY format               =====*/
   /* =====                                                  =====*/
   /* ===== Current Year must be equal or greater that this  =====*/
   /* ===== Year                                             =====*/
   /* =====                                                  =====*/
   /* ===== Season must be a valid apparel season.           =====*/
   /* =====                                                  =====*/
   /* ============================================================*/


  AF0CW02.AF0CWDSY = AF0CM001.AF0CMCSY;
  AF0CW02.AF0CWCYY = 0;

   /* ------------------------------------------------------------*/
    /* AF0CW02.AF0CWWYY  -  CURRENT YEAR + 1*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWWYY = AF0CW02.AF0CWTYY + 1;

  if (AF0CW02.AF0CW-YY-CHAR is numeric
   && (AF0CW02.AF0CWDYY == AF0CW02.AF0CWTYY
   || AF0CW02.AF0CWDYY == AF0CW02.AF0CWWYY))
    AF0CW02.AF0CWCYY = AF0CW02.AF0CWDYY;
  else
    AFWREC.AFWPRCSN = "550 ";
    converseLib.validationFailed(26);
    set AF0CM001.AF0CMCSY cursor, bold;
    return;
  end

   /* ------------------------------------------------------------*/
   /* -     Validate Current Season                              -*/
   /* ------------------------------------------------------------*/

  if (AF0CW02.AF0CWDSS in XSETBL.XSECD)

    AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
    while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
      if (YSNTBL.XSNABRV[AFWIDX5] == AF0CW02.AF0CWDSY
       && YSNTBL.XGPCD[AFWIDX5] == "03"
       && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
        AF0CW02.AF0CWCSS = AF0CW02.AF0CWDSS;
        AF0CW02.XSN-SESN-BDT[2] = YSNTBL.XSN-SESN-BDT[AFWIDX5];
        return;
      else
        if (YSNTBL.XGPCD[AFWIDX5] != "99")
          AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
        else
          AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        end
      end
    end

  end

  AF0CW02.AF0CWMSG[2] = converseVar.validationMsgNum;

  XP1REC.XSECD = "?";

  XSAFSSE();

  converseLib.clearScreen();

  AF0CW02.AF0CWCSS = XP1REC.XSECD;

  AF0CM001.AF0CMCSY = AF0CW02.AF0CWCSY;

  if (XP1REC.XSECD in XSETBL.XSECD)

    if (AF0CW02.AF0CWCSY in YSNTBL.XSNABRV)

      AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
      while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
        if (YSNTBL.XSNABRV[AFWIDX5] == AF0CW02.AF0CWDSY
         && YSNTBL.XGPCD[AFWIDX5] == "03"
         && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
          AF0CW02.AF0CWCSS = AF0CW02.AF0CWDSS;
          if (AF0CW02.AF0CWMSG[2] == 9999)
            converseLib.validationFailed();
          else
            converseLib.validationFailed(AF0CW02.AF0CWMSG[2]);
          end
          return;
        else
          if (YSNTBL.XGPCD[AFWIDX5] != "99")
            AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
          else
            AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
          end
        end
      end

    end

  end

  converseLib.validationFailed(26);
  AFWREC.AFWPRCSN = "530 ";
  set AF0CM001.AF0CMCSY cursor, bold;

   /* ====================== END OF PROCESS ======================*/
end // end AF0C550

// Validate Previous Season/Year
Function AF0C570()
   /* ============================================================*/
   /* ===== VALIDATE PREVIOUS SEASON/YEAR                    =====*/
   /* =====                                                  =====*/
   /* ===== Season/Year must be in SSYY format               =====*/
   /* =====                                                  =====*/
   /* ===== Previous Year must be equal last Year or         =====*/
   /* ===== this Year                                        =====*/
   /* =====                                                  =====*/
   /* ===== Season must be a valid apparel season.           =====*/
   /* =====                                                  =====*/
   /* ============================================================*/

  AF0CW02.AF0CWDSY = AF0CM001.AF0CMPSY;
  AF0CW02.AF0CWPYY = 0;

   /* ------------------------------------------------------------*/
    /* AF0CW02.AF0CWWYY  -  CURRENT YEAR - 1*/
   /* ------------------------------------------------------------*/

   /* --------------- y2k out begin -------------*/
   /* AF0CW02.AF0CWWYY = AF0CW02.AF0CWTYY - 1;*/
   /* --------------- y2k out end ---------------*/
   /* --------------- y2k in  begin -------------*/
  AF0CW02.AF0CWWYY = AF0CW02.AF0CWTCY - 1;
   /* --------------- y2k in end ----------------*/

  if (AF0CW02.AF0CW-YY-CHAR is numeric
   && (AF0CW02.AF0CWDYY == AF0CW02.AF0CWTYY
   || AF0CW02.AF0CWDYY == AF0CW02.AF0CWWYY))
    AF0CW02.AF0CWPYY = AF0CW02.AF0CWDYY;
  else
    AFWREC.AFWPRCSN = "570 ";
    converseLib.validationFailed(26);
    set AF0CM001.AF0CMPSY cursor, bold;
    return;
  end

   /* ------------------------------------------------------------*/
   /* -     Validate Next Season                                 -*/
   /* ------------------------------------------------------------*/

  if (AF0CW02.AF0CWDSS in XSETBL.XSECD)

    AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
    while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
      if (YSNTBL.XSNABRV[AFWIDX5] == AF0CW02.AF0CWDSY
       && YSNTBL.XGPCD[AFWIDX5] == "03"
       && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
        AF0CW02.AF0CWPSS = AF0CW02.AF0CWDSS;
        AF0CW02.XSN-SESN-BDT[1] = YSNTBL.XSN-SESN-BDT[AFWIDX5];
        return;
      else
        if (YSNTBL.XGPCD[AFWIDX5] != "99")
          AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
        else
          AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        end
      end
    end

  end

  AF0CW02.AF0CWMSG[2] = converseVar.validationMsgNum;

  XP1REC.XSECD = "?";

  XSAFSSE();

  converseLib.clearScreen();

  AF0CW02.AF0CWPSS = XP1REC.XSECD;

  AF0CM001.AF0CMPSY = AF0CW02.AF0CWPSY;

  if (XP1REC.XSECD in XSETBL.XSECD)

    AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
    while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
      if (YSNTBL.XSNABRV[AFWIDX5] == AF0CW02.AF0CWDSY
       && YSNTBL.XGPCD[AFWIDX5] == "03"
       && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
        if (AF0CW02.AF0CWMSG[2] == 9999)
          converseLib.validationFailed();
        else
          converseLib.validationFailed(AF0CW02.AF0CWMSG[2]);
        end
        return;
      else
        if (YSNTBL.XGPCD[AFWIDX5] != "99")
          AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
        else
          AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        end
      end
    end

  end

  converseLib.validationFailed(26);
  AFWREC.AFWPRCSN = "530 ";
  set AF0CM001.AF0CMPSY cursor, bold;

   /* ====================== END OF PROCESS ======================*/
end // end AF0C570

// Validate Extended Season/Year
Function AF0C575()
   /* ============================================================*/
   /* ===== VALIDATE EXTENDED SEASON/YEAR                    =====*/
   /* =====                                                  =====*/
   /* ===== Season/Year must be in SSYY format               =====*/
   /* =====                                                  =====*/
   /* ===== Next Year must be equal or greater that this     =====*/
   /* ===== Year                                             =====*/
   /* =====                                                  =====*/
   /* ===== Season must be a valid apparel season.           =====*/
   /* =====                                                  =====*/
   /* ============================================================*/


  AF0CW02.AF0CWDSY = AF0CM001.AF0C-EXT-SESN-YR;
  AF0CW02.AF0C-EXT-SESN-YY = 0;

   /* ------------------------------------------------------------*/
    /* AF0CW02.AF0CWYY  -  CURRENT YEAR + 1*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWWYY = AF0CW02.AF0CWTYY + 1;

  if (AF0CW02.AF0CW-YY-CHAR is numeric /* Check for numerics*/
   && (AF0CW02.AF0CWDYY == AF0CW02.AF0CWTYY
   || AF0CW02.AF0CWDYY == AF0CW02.AF0CWWYY))
    AF0CW02.AF0C-EXT-SESN-YY = AF0CW02.AF0CWDYY;
  else
    converseLib.validationFailed(26);
    AFWREC.AFWPRCSN = "530 ";
    set AF0CM001.AF0C-EXT-SESN-YR cursor, bold;
    return;
  end

   /* ------------------------------------------------------------*/
   /* -     Validate Extended Season                             -*/
   /* ------------------------------------------------------------*/

  if (AF0CW02.AF0CWDSS in XSETBL.XSECD)

    AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
    while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
      if (YSNTBL.XSNABRV[AFWIDX5] == AF0CW02.AF0CWDSY
       && YSNTBL.XGPCD[AFWIDX5] == "03"
       && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
        AF0CW02.AF0C-EXT-SESN-CD = AF0CW02.AF0CWDSS;
        AF0CW02.XSN-SESN-BDT[5] = YSNTBL.XSN-SESN-BDT[AFWIDX5];
        return;
      else
        if (YSNTBL.XGPCD[AFWIDX5] != "99")
          AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
        else
          AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        end
      end
    end


  end

  AF0CW02.AF0CWMSG[2] = converseVar.validationMsgNum;

  XP1REC.XSECD = "?";

  XSAFSSE();

  converseLib.clearScreen();

  AF0CW02.AF0CWFSS = XP1REC.XSECD;

  AF0CM001.AF0C-EXT-SESN-YR = AF0CW02.AF0C-EXT-SESN-YR;

  if (XP1REC.XSECD in XSETBL.XSECD)

    AFWREC.AFWIDX5 = 1; /* SET SEARCH INDEX TO 1*/
    while (AFWREC.AFWIDX5 != 9999) /* end of search condition*/
      if (YSNTBL.XSNABRV[AFWIDX5] == AF0CW02.AF0CWDSY
       && YSNTBL.XGPCD[AFWIDX5] == "03"
       && YSNTBL.XDR-PROD-REG-CD[AFWIDX5] == "01")
        if (AF0CW02.AF0CWMSG[2] == 9999)
          converseLib.validationFailed();
        else
          converseLib.validationFailed(AF0CW02.AF0CWMSG[2]);
        end
        return;
      else
        if (YSNTBL.XGPCD[AFWIDX5] != "99")
          AFWREC.AFWIDX5 = AFWREC.AFWIDX5 + 1;
        else
          AFWREC.AFWIDX5 = 9999; /* END OF TABLE*/
        end
      end
    end


  end

  converseLib.validationFailed(26);
  AFWREC.AFWPRCSN = "530 ";
  set AF0CM001.AF0C-EXT-SESN-YR cursor, bold;

   /* ====================== END OF PROCESS ======================*/
end // end AF0C575

// Validate Season/Year Combos
Function AF0C590()
   /* ============================================================*/
   /* ===== VALIDATE SEASON/YEAR COMBOS                      =====*/
   /* ============================================================*/

  AF0CW02.AF0CWPSY = AF0CM001.AF0CMPSY;
  AF0CW02.AF0CWCSY = AF0CM001.AF0CMCSY;
  AF0CW02.AF0CWNSY = AF0CM001.AF0CMNSY;
  AF0CW02.AF0CWFSY = AF0CM001.AF0CMFSY;
  AF0CW02.AF0C-EXT-SESN-YR = AF0CM001.AF0C-EXT-SESN-YR;

   /* ------------------------------------------------------------*/
   /* TEST IS IN PREVIOUS, CURRENT, NEXT, AND FUTURE SEQUENCE*/
   /* ------------------------------------------------------------*/

  if (AF0CW02.XSN-SESN-BDT[5] > AF0CW02.XSN-SESN-BDT[4]
   && AF0CW02.XSN-SESN-BDT[4] > AF0CW02.XSN-SESN-BDT[3]
   && AF0CW02.XSN-SESN-BDT[3] > AF0CW02.XSN-SESN-BDT[2]
   && AF0CW02.XSN-SESN-BDT[2] > AF0CW02.XSN-SESN-BDT[1])
    return;
  end


  AFWREC.AFWPRCSN = "590 ";
  converseLib.validationFailed(78);

  set AF0CM001.AF0CMFSY bold;
  set AF0CM001.AF0CMNSY bold;
  set AF0CM001.AF0CMCSY bold;
  set AF0CM001.AF0C-EXT-SESN-YR bold;
  set AF0CM001.AF0CMPSY cursor, bold;

   /* ====================== END OF PROCESS ======================*/



end // end AF0C590

// Process valid input request
Function AF0C600()
   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CACLVL[3] == "Y")
    /* NEXT SENTENCE*/
  else
    return;
  end

  set AF0CM001.CATOAP initialAttributes; /* Commarea TO application*/
  set AF0CM001.CAITEM initialAttributes; /* Commarea application data*/

   /* ------------------------------------------------------------*/



   /* ?????*/

  if (AF0CW01.AF0CWPSY == AF0CM001.AF0CMPSY
   && AF0CW01.AF0CWCSY == AF0CM001.AF0CMCSY
   && AF0CW01.AF0CWNSY == AF0CM001.AF0CMNSY
   && AF0CW01.AF0CWFSY == AF0CM001.AF0CMFSY
   && AF0CW01.AF0C-EXT-SESN-YR == AF0CM001.AF0C-EXT-SESN-YR)
    return;
  end

  if (converseVar.validationMsgNum == 0)
    /* NEXT SENTENCE*/
  else
    exit stack;
  end

  AFWREC.XXXMSGNO = 0; /* Clear message out*/
  AFWREC.AFWSWR = "Y"; /* Set Request for Data switch*/

  AF0C610(); /* Select AFCTL*/

  if (SQLCA.VAGen_SQLCODE == +0) /* row found*/
    AF0C620(); /* Update AFCTL*/
    AFWREC.AFWNMO = 1; /* Clear message out*/
    AFWREC.AFWPRCSN = "600 ";
  end

   /* ------------------------------------------------------------*/



end // end AF0C600

// Select VAFCLT01
Function AF0C610()

   /* ------------------------------------------------------------*/
   /* Clear copybook.*/
   /* ------------------------------------------------------------*/

  set VAFCTL02 empty; /* Clear copybook*/

   /* ------------------------------------------------------------*/
   /* Select AFCTL.*/
   /* ------------------------------------------------------------*/
   /* --------------- y2k out begin --------------*/
   /* CALL VAFCTL02 'S ',SQLCA,VAFCTL02 (NOMAPS,NONCSP,REPLY; /* Select row*/
   /* --------------- y2k out end ----------------*/
   /* --------------- y2k in  begin --------------*/
  try
    call "VAFCTL03" ("S ", SQLCA, VAFCTL02) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
   /* --------------- y2k in end -----------------*/

   /* ------------------------------------------------------------*/
   /* If successful or not found, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == +0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  AFWREC.AFWPRCSN = "630"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(10); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = AFWREC.AFWPRCSN; /* Program number*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAFCTL03"; /* Table view name*/
  TA1REC.TA1TBLKE = "ONE RECORD ONLY"; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end AF0C610

// Update VAFCTL01
Function AF0C620()

   /* ------------------------------------------------------------*/
   /* PREVIOUS SEASON*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWDSY = AF0CM001.AF0CMPSY;
  VAFCTL02.AF4PSNCD = AF0CW02.AF0CWDSS;

  if (AF0CW02.AF0CWDYY < 80)
    AF0CW02.AF0CWWCY = AF0CW02.AF0CWDYY + 2000;
  else
    AF0CW02.AF0CWWCY = AF0CW02.AF0CWDYY + 1900;
  end

  VAFCTL02.AF4PSNYR = AF0CW02.AF0CWWCY;

   /* ------------------------------------------------------------*/
   /* CURRENT SEASON*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWDSY = AF0CM001.AF0CMCSY;
  VAFCTL02.AF4CSNCD = AF0CW02.AF0CWDSS;

  if (AF0CW02.AF0CWDYY < 80)
    AF0CW02.AF0CWWCY = AF0CW02.AF0CWDYY + 2000;
  else
    AF0CW02.AF0CWWCY = AF0CW02.AF0CWDYY + 1900;
  end

  VAFCTL02.AF4CSNYR = AF0CW02.AF0CWWCY;

   /* ------------------------------------------------------------*/
   /* NEXT SEASON*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWDSY = AF0CM001.AF0CMNSY;
  VAFCTL02.AF4NSNCD = AF0CW02.AF0CWDSS;

  if (AF0CW02.AF0CWDYY < 80)
    AF0CW02.AF0CWWCY = AF0CW02.AF0CWDYY + 2000;
  else
    AF0CW02.AF0CWWCY = AF0CW02.AF0CWDYY + 1900;
  end

  VAFCTL02.AF4NSNYR = AF0CW02.AF0CWWCY;

   /* ------------------------------------------------------------*/
   /* FUTURE SEASON*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWDSY = AF0CM001.AF0CMFSY;
  VAFCTL02.AF4FSNCD = AF0CW02.AF0CWDSS;

  if (AF0CW02.AF0CWDYY < 80)
    AF0CW02.AF0CWWCY = AF0CW02.AF0CWDYY + 2000;
  else
    AF0CW02.AF0CWWCY = AF0CW02.AF0CWDYY + 1900;
  end

  VAFCTL02.AF4FSNYR = AF0CW02.AF0CWWCY;

   /* ------------------------------------------------------------*/
   /* EXTENDED SEASON*/
   /* ------------------------------------------------------------*/

  AF0CW02.AF0CWDSY = AF0CM001.AF0C-EXT-SESN-YR;
  VAFCTL02.AF-EXT-SESN-CD = AF0CW02.AF0CWDSS;

  if (AF0CW02.AF0CWDYY < 80)
    AF0CW02.AF0CWWCY = AF0CW02.AF0CWDYY + 2000;
  else
    AF0CW02.AF0CWWCY = AF0CW02.AF0CWDYY + 1900;
  end

  VAFCTL02.AF-EXT-SESN-YR = AF0CW02.AF0CWWCY;

   /* ------------------------------------------------------------*/
   /* AUDIT INFO*/
   /* ------------------------------------------------------------*/

  VAFCTL02.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VAFCTL02.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

   /* ------------------------------------------------------------*/
   /* Update DACAST.VAFCTL02.*/
   /* ------------------------------------------------------------*/

   /* --------------- y2k out begin ---------------*/
   /* CALL VAFCTL02 'U ',SQLCA,VAFCTL02 (NOMAPS,NONCSP,REPLY;/* Update row*/
   /* --------------- y2k out end -----------------*/
   /* --------------- y2k in  begin ---------------*/
  try
    call "VAFCTL03" ("U ", SQLCA, VAFCTL02) {isNoRefresh = yes, isExternal = yes};
  end /* Update row*/
   /* --------------- y2k in end ------------------*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  AFWREC.AFWPRCSN = "620"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(10); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = AFWREC.AFWPRCSN; /* Program number*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAFCTL03"; /* Table view name*/
  TA1REC.TA1TBLKE = "ONE RECORD ONLY"; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end AF0C620

// Purge Temporary Storage
Function AF0CS01()
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = AFWREC.AFWAPPL; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  call "TA0050" (AF0CW02, TA5REC) {isNoRefresh = yes}; /* Temporary storage*/
                                         /* ; subroutine*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    AFWREC.AFWPRCSN = "S01 "; /* Process number*/
    TA1REC.TA1PGMNM = AFWREC.AFWPRCSN; /* Error location*/
    TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
    TA1REC.TA1MAP = AFWREC.XXXMAPNM; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  end

  AFWREC.AFWTSP = 0; /* Reset current page number*/
  AFWREC.TA5TSQIX = 0; /* Reset highest page number*/


end // end AF0CS01

// Call TA0040
Function AF0CS02()
   /* ============================================================*/
   /* ===== Call Date Validation Program                     =====*/
   /* =====                                                  =====*/
   /* ============================================================*/

  try
    call "TA0040" (TA2REC) {isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/

   /* Otherwise, indicate that a system error has occurred.*/

   /* ------------------------------------------------------------*/


  if (sysVar.errorCode == "00000000") /* Call successful*/
    return;
  end

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA2REC.TA2GROUP; /* Subroutine parameters*/

  AFWREC.AFWPRCSN = "S02"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "GET CARRYOVER DATE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = AFWREC.AFWPRCSN; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


   /* ====================== END OF PROCESS ======================*/



end // end AF0CS02

//*** RECORD=AF0CW01 ****
// Temporary storage record for AF0CREC
// ***********************
Record AF0CW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(10) ; 
    10 AF0CWPSY AF0CWPSY ; 
      15 AF0CWPSS AF0CWPSS ; 
      15 AF0CWPYY AF0CWPYY ; 
    10 AF4PSNYR AF4PSNYR ; 
    10 AF4PCODT AF4PCODT ; 
  5 * char(10) ; 
    10 AF0CWCSY AF0CWCSY ; 
      15 AF0CWCSS AF0CWCSS ; 
      15 AF0CWCYY AF0CWCYY ; 
    10 AF4CSNYR AF4CSNYR ; 
    10 AF4CCODT AF4CCODT ; 
  5 * char(10) ; 
    10 AF0CWNSY AF0CWNSY ; 
      15 AF0CWNSS AF0CWNSS ; 
      15 AF0CWNYY AF0CWNYY ; 
    10 AF4NSNYR AF4NSNYR ; 
    10 AF4NCODT AF4NCODT ; 
  5 * char(10) ; 
    10 AF0CWFSY AF0CWFSY ; 
      15 AF0CWFSS AF0CWFSS ; 
      15 AF0CWFYY AF0CWFYY ; 
    10 AF4FSNYR AF4FSNYR ; 
    10 AF4FCODT AF4FCODT ; 
  5 * char(6) ; 
    10 AF0C-EXT-SESN-YR AF0C-EXT-SESN-YR ; 
      15 AF0C-EXT-SESN-CD AF0C-EXT-SESN-CD ; 
      15 AF0C-EXT-SESN-YY AF0C-EXT-SESN-YY ; 
    10 AF0C-EXT-SESN-CCYY AF0C-EXT-SESN-CCYY ; 
end // end AF0CW01

//*** RECORD=AF0CW02 ****
// Temporary storage record for TSXX - Transportation Prototype
// ***********************
Record AF0CW02 type basicRecord
  5 * char(4) ; 
    10 AF0CWMSG AF0CWMSG [2] ; 
  5 * char(8) ; 
    10 AF0CWWCY AF0CWWCY ; 
      15 AF0CWWCC AF0CWWCC ; 
      15 AF0CWWYY AF0CWWYY ; 
    10 AF0CWDSY AF0CWDSY ; 
      15 AF0CWDSS AF0CWDSS ; 
      15 AF0CWDYY AF0CWDYY ; 
        20 AF0CW-YY-CHAR AF0CW-YY-CHAR ; 
  5 * char(8) ; 
    10 AF0CWCDT AF0CWCDT ; 
      15 AF0CWTCY AF0CWTCY ; 
        20 AF0CWTCC AF0CWTCC ; 
        20 AF0CWTYY AF0CWTYY ; 
      15 AF0CWTMM AF0CWTMM ; 
      15 AF0CWTDD AF0CWTDD ; 
  5 * char(8) ; 
    10 AF0CWPSY AF0CWPSY ; 
      15 AF0CWPSS AF0CWPSS ; 
      15 AF0CWPYY AF0CWPYY ; 
    10 AF4PCODT AF4PCODT ; 
  5 * char(8) ; 
    10 AF0CWCSY AF0CWCSY ; 
      15 AF0CWCSS AF0CWCSS ; 
      15 AF0CWCYY AF0CWCYY ; 
    10 AF4CCODT AF4CCODT ; 
  5 * char(8) ; 
    10 AF0CWNSY AF0CWNSY ; 
      15 AF0CWNSS AF0CWNSS ; 
      15 AF0CWNYY AF0CWNYY ; 
    10 AF4NCODT AF4NCODT ; 
  5 * char(8) ; 
    10 AF0CWFSY AF0CWFSY ; 
      15 AF0CWFSS AF0CWFSS ; 
      15 AF0CWFYY AF0CWFYY ; 
    10 AF4FCODT AF4FCODT ; 
  5 * char(4) ; 
    10 AF0C-EXT-SESN-YR AF0C-EXT-SESN-YR ; 
      15 AF0C-EXT-SESN-CD AF0C-EXT-SESN-CD ; 
      15 AF0C-EXT-SESN-YY AF0C-EXT-SESN-YY ; 
  5 * char(1) ; 
  5 XSN-SESN-BDT XSN-SESN-BDT [5] ; 
end // end AF0CW02

// AF_EXT_SESN_CCYY
DataItem AF0C-EXT-SESN-CCYY smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// AF_EXT_SESN_CD
DataItem AF0C-EXT-SESN-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// AF_EXT_SESN_YR
DataItem AF0C-EXT-SESN-YR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Extended Season Year (YY)
DataItem AF0C-EXT-SESN-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Display Season Year Char (YY)
DataItem AF0CW-YY-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current Date(CCYYMMDD)
DataItem AF0CWCDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current Season Code (SS)
DataItem AF0CWCSS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current Season/Year
DataItem AF0CWCSY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current Season Year (YY)
DataItem AF0CWCYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Display Season Code (SS)
DataItem AF0CWDSS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Display Season/Year
DataItem AF0CWDSY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Display Season Year (YY)
DataItem AF0CWDYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Future Season Code (SS)
DataItem AF0CWFSS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Future Season/Year
DataItem AF0CWFSY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Future Season Year (YY)
DataItem AF0CWFYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Hold Area for EZEMNO
DataItem AF0CWMSG smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Next Season Code (SS)
DataItem AF0CWNSS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Next Season/Year
DataItem AF0CWNSY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Next Season Year (YY)
DataItem AF0CWNYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Previous Season Code (SS)
DataItem AF0CWPSS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Previous Season/Year
DataItem AF0CWPSY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Previous Season Year (YY)
DataItem AF0CWPYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current Date (CC)
DataItem AF0CWTCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current Date (CCYY)
DataItem AF0CWTCY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current Date (DD)
DataItem AF0CWTDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current Date (MM)
DataItem AF0CWTMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current Date (YY)
DataItem AF0CWTYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Season Year Century (CC)
DataItem AF0CWWCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Season Year CCYY
DataItem AF0CWWCY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Season Year Year (YY)
DataItem AF0CWWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

