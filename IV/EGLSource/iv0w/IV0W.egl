package iv0w;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSIVS02;
import corpcom4.XSIVSFH;
import corpcom4.XSIVSFP;
import corpcom4.XSIVXF;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.CU-CO-ID;
import corpcom5.CU-CO-NM;
import corpcom5.CU-HNDL-CHG-NET-FL;
import corpcom5.CU-PROD-ID;
import corpcom5.CU-STOR-ID;
import corpcom5.CU-STOR-SELF-ID;
import corpcom5.ERRSQLCA;
import corpcom5.GL-GEN-LEDGER-CD;
import corpcom5.GLACD;
import corpcom6.SQLCA;
import corpcom7.XXX-USER-ID;
import corpcom7.ZZ-SETUP-HHMM;
import corpx1.XDM-DIM-CD;
import corpx1.XDS-DIR-SHIP-CD;
import corpx1.XGPCD;
import corpx1.XIC-IVC-CRCTRSN-CD;
import corpx1.XICTBL;
import corpx1.XPTTBL;
import corpx1.XSOTBL;
import corpx2.XNX-DEPT-ID-XREF;
import corpx2.XNXCD;
import corpx2.XOBCD;
import corpx2.XPT-PTERM-CD;
import corpx2.XPT-PTERM-PCT;
import corpx2.XSOCD;
import corpx2.XUM-UOM-CD;
import corpz3.ZZ-CHNG-CNT;
import corpz3.ZZ-CHNG-DT;
import corpz3.ZZ-CHNG-HHMM;
import corpz3.ZZ-SDT;
import iv.common.IV-CRCT-SEQ-NBR;
import iv.common.IV-CRCT-STAT-IND;
import iv.common.IV-HNDL-CHG;
import iv.common.IV-IVC-AMT;
import iv.common.IV-IVC-ID;
import iv.common.IV-IVC-PART-CHAR;
import iv.common.IV-LN-SHIPPED-QTY;
import iv.common.IV-LVL-PAY-IND;
import iv.common.IV-NET-LN-MRCH-AMT;
import iv.common.IV-NET-MRCH-AMT;
import iv.common.IV-NET-UNIT-PRC;
import iv.common.IV-PTERM-DEFRD-DT;
import iv.common.IV-PTERM-DSCT-AMT;
import iv.common.IV-SHIPTO-ADDR1;
import iv.common.IV-SHIPTO-ADDR2;
import iv.common.IV-SHIPTO-ADDR3;
import iv.common.IV-SHIPTO-CITY;
import iv.common.IV-SHIPTO-NM;
import iv.common.IV-SHIPTO-ST-CD;
import iv.common.IV-SHIPTO-ZIP;
import iv.common.IV0IVCDT;
import iv.common.IV0IVCID;
import iv.common.IV0JCPB;
import iv.common.IV0KEY;
import iv.common.IV0PARTN;
import iv.common.IV0POIDX;
import iv.common.IV0REC;
import iv.common.IV5BILA1;
import iv.common.IV5BILA2;
import iv.common.IV5BILA3;
import iv.common.IV5BILCT;
import iv.common.IV5BILCY;
import iv.common.IV5BILNM;
import iv.common.IV5BILST;
import iv.common.IV5BILZP;
import iv.common.IV5KEY;
import iv.common.IV5SHPA1;
import iv.common.IV5SHPA2;
import iv.common.IV5SHPA3;
import iv.common.IV5SHPCT;
import iv.common.IV5SHPCY;
import iv.common.IV5SHPNM;
import iv.common.IV5SHPST;
import iv.common.IV5SHPZP;
import iv.common.IV6FBTYP;
import iv.common.IV6GLAMT;
import iv.common.IV6GLNFL;
import iv.common.IV6GLOFL;
import iv.common.IV6GLPCT;
import iv.common.IV6GLSEQ;
import iv.common.IV6KEY;
import iv.common.IVFREC;
import iv.common.IVGREC;
import iv.common.IVXREC;
import iv.common.IVYREC;
import ku.common.KUCCOID;
import ku.common.KUCGRPID;
import ku.common.KUCREC;
import ku.common.KULREC;
import ku.common.KUMREC;
import ku.common.KUMSTRID;
import op.common.OP-CUST-PO;
import op.common.OP-LINE-ITEM-NBR;
import op.common.OP1CUOID;
import op.common.OP1NORID;
import op.common.OP1PARTN;
import op.common.OP2LNINB;
import pf.common.PFJXREF;
import pk.common.PK-NBR-OF-CARTONS;
import sm.common.SM1AGYID;
import sm.common.SM4REPID;
import sp.common.SP-SPGM-ID;
import sr.common.SR-TOT-NBR-CARTONS;
import sy.common.SY-COLR-CD-ID;
import sy.common.SY-STY-NBR;
import sy.common.SY-SZ-ID;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import tf.common.TF-CARR-CD;
import tf.common.TF-CARR-NM;
import tf.common.TF-PRO-NBR;
import tf.common.TF1REC;
import vv.common.VCORHD01;
import vv.common.VCORSQ01;
import vv.common.VCUCPX01;
import vv.common.VIVHDR05;
import vv.common.VIVITM02;
import vv.common.VIVSIZ02;
import ww.common.WCU1710;
//*** PROGRAM=IV0W ****
// ************************************************************
// *   IV0W WILL ALLOW CREDIT USERS TO ENTER CORRECTIONS TO   *
// *   INVOICES ONLINE. CORRECTIONS ARE STORED ON SPECIAL     *
// *   CORRECTION VERSIONS OF THE INVOICE DB2 TABLES. A BATCH *
// *   PROCESS WILL RUN AT NIGHT TO PRODUCE A SPECIAL MASTER  *
// *   FILE COPY OF THE CORRECTED INVOICES. THE SPECIAL MASTER*
// *   FILE WILL BE INPUT TO SPECIAL RUNS OF THE EDI PROCESS, *
// *   AND THE INVOICE PRINT PROCESS WHERE INVOICES WILL BE   *
// *   PRINTED AND A MICROGRAPHICS FILE GENERATED.            *
// *   THE PROFITABILITY SYSTEM WILL ALSO TAKE DATA FROM THE  *
// *   SPECIAL MASTER FILE TO BACK OUT THE OLD INVOICE DATA   *
// *   AND ADD THE CORRECTED INVOICE DATA.                    *
// *                                                          *
// *----------------------------------------------------------*
// *    M A I N T E N A N C E     H I S T O R Y    L O G      *
// *----------------------------------------------------------*
// *   DATE    PGMR    DESCRIPTION                            *
// *----------------------------------------------------------*
// * 01-16-95  GDECKE  INSTALL NEW APPLICATION                *
// * 05-03-95  GDECKE  FORCE INSERT TO VCORHD01 WHEN VCORSQ01 *
// * 07-19-95  GDECKE  move zz-chng dt and hhmm to vivhdr05,  *
// *                   and vivitm02 for add and update, add   *
// *                   new data items to vivhdr05, vivhdx02,  *
// *                   vivadr02, vivglx02, vivitm02, vivsiz02.*
// * 08-06-97  CHELLM  replaced table vcusku01 with vcucpx01  *
// * 11-03-97  NJANA   CREATE SOFT EDIT FOR SKU NBR           *
// * 02-03-98  oricha  y2k modifications:  iv0w-ws-rec,       *
// *                   iv0w050:  adjust year calc using       *
// *                   century/year.
// ************************************************************
// *********************
Program IV0W type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "IV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  IV0REC IV0REC; // record
  IV0W-CRCT-REC IV0W-CRCT-REC; // record
  IV0W-IOMOD-REC IV0W-IOMOD-REC; // record
  IV0W-ITEM-REC IV0W-ITEM-REC; // record
  IV0W-ORIG-REC IV0W-ORIG-REC; // record
  IV0W-PREV-REC IV0W-PREV-REC; // record
  IV0W-UPDT-REC IV0W-UPDT-REC; // record
  IV0W-WS-REC IV0W-WS-REC; // record
  IVFREC IVFREC; // record
  IVGREC IVGREC; // record
  IVXREC IVXREC; // record
  IVYREC IVYREC; // record
  KUCREC KUCREC; // record
  KULREC KULREC; // record
  KUMREC KUMREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TF1REC TF1REC; // record
  VCORGL01 VCORGL01; // record
  VCORHD01 VCORHD01; // record
  VCORIT01 VCORIT01; // record
  VCORSQ01 VCORSQ01; // record
  VCORSZ01 VCORSZ01; // record
  VCORTX01 VCORTX01; // record
  VCUCPX01 VCUCPX01; // record
  VIVADR02 VIVADR02; // record
  VIVGLX02 VIVGLX02; // record
  VIVHDR05 VIVHDR05; // record
  VIVHDX02 VIVHDX02; // record
  VIVITM02 VIVITM02; // record
  VIVSIZ02 VIVSIZ02; // record
  WCU1710 WCU1710; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XICTBL {deleteAfterUse = yes}; // table
  use IV02TBL {deleteAfterUse = yes}; // table
  use XSOTBL {deleteAfterUse = yes}; // table
  use XPTTBL {deleteAfterUse = yes}; // table
  use IV0WM.IV0WM001,  // forms
      IV0WM.IV0WM005
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    IV0W000: IV0W000();
    IV0W001: IV0W001();
    IV0W050: IV0W050();
    IV0W100: IV0W100();
    IV0W110: IV0W110();
    IV0W120: IV0W120();
    IV0W200: IV0W200();
    IV0W210: IV0W210();
    IV0W220: IV0W220();
  end // end main
end // end IV0W

// main flow
Function IV0W000()
   /* ************************************************************/
   /* *   this is the "main logic" for the application.         **/
   /* *                                                         **/
   /* *   perform initialization, set application revision nbrs,**/
   /* *   then do main perform until done with application      **/
   /* *                                                         **/
   /* ************************************************************/
   /* *     M A I N T E N A N C E     H I S T O R Y    L O G    **/
   /* *---------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                           **/
   /* *---------------------------------------------------------**/
   /* * 01-17-95  GDECKE  CREATE APPLICATION                    **/
   /* ************************************************************/
  ;
  COMMAREA.CACURRAP = "IV0W";
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W000";
  ;
  IV0W001(); /* initilize the application*/
  ;
  IV0W-WS-REC.IV0WW-END-OF-APPL-FL = "N"; /* set end-of-appl fl='no'*/
  ;
  IV0W002(); /* get ivxrec and do program setup*/
  ;
  while (IV0W-WS-REC.IV0WW-END-OF-APPL-FL == "N") /* while not end-of-APPL*/
    IV0W050(); /* process the application screen(s)*/
  end
  ;
  COMMAREA.CATOAP = "IV0W";
  IV0WS03();
end // end IV0W000

// init claims menu processing
Function IV0W001()
   /* ****************************************************/
    /* when finished with this process, the following will*/
    /* have been read for later use:*/
      /* IVAREC, IV0REC, IV3REC, IV4REC, IV6REC, VCORSQ01,*/
      /* VCORHD01, VCORGL01, VCORIT01, VCORSZ01*/
   /* *************************************************************/
   /* M A I N T E N A N C E    H I S T O R Y             **/
   /* ------------------------------------------------------------**/
   /* DATE    PGMR    DESCRIPTION                              **/
   /* ------------------------------------------------------------**/
   /* 01-17-95  GDECKE  NEW APPLICATION                          **/
   /* *************************************************************/
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W001";
  ;
    /* initialize local records (all but tables, commarea, ivxrec)*/
  set IVYREC empty;
  set IVXREC empty;
  set IV0W-WS-REC empty;
  IV0WS-CLEAR-TABLES();
  set IV0W-IOMOD-REC empty;
  set TA1REC empty;
  set TA2REC empty;
  set TA5REC empty;
  set TAEREC empty;
  set TF1REC empty;
  set ERRSQLCA empty;
  set SQLCA empty;
  ;
  set IV0WM001 initial;
  set IV0WM005 initial;
  ;
  converseVar.commitOnConverse = 1; /* force db2 to commit on each screen*/
                                   /* converse*/
  VGVar.handleHardIOErrors = 1; /* return control to appl if hard db2*/
                                   /* error*/
  ;
    /* TEMP001;*/
  ;
  XSENTRY(); /* appl entry security*/
  XSSEGTR(); /* set segmented transaction id*/
  ;
  IV0WS-IV-PGM-INIT(); /* invoice entry check*/
  ;
   /* set inquiry only flag*/
  ;
   /* MOVE 'N' TO IV0WW01.IV0WWINQ;*/
   /* IF CLWREC.CLWACTIV EQ 'I';*/
    /* MOVE 'Y' TO IV0WW01.IV0WWINQ;*/
   /* END;*/
   /* IF CLAREC.YCSCD1 IN YCSTBL.YCSCD*/
    /* AND YCSTBL.YCSAINPF(EZETST) EQ 'N';*/
    /* MOVE 'Y' TO IV0WW01.IV0WWINQ;*/
   /* END;*/
   /* IF COMMAREA.CAALVL(1) EQ 'Y'*/
    /* OR COMMAREA.CAALVL(3) EQ 'Y'*/
    /* OR COMMAREA.CACLVL(1) EQ 'Y'*/
    /* OR COMMAREA.CACLVL(3) EQ 'Y';*/
    /* ; /* next sentence*/
   /* ELSE;*/
    /* MOVE 'Y' TO IV0WW01.IV0WWINQ;*/
   /* END;*/
   /* IF CLAREC.CLAWSENF EQ 'Y'         /* if claim is worksheet-entered*/
    /* OR CLWREC.CLWMNOPT EQ 7*/
    /* OR CLWREC.CLWMNOPT EQ 8*/
    /* OR CLWREC.CLWMNOPT EQ 9;*/
    /* MOVE 'Y' TO IV0WW01.IV0WWINQ;*/
   /* END;*/
  ;
  ;
  ;
  ;
  IV0W-WS-REC.IV0WW-SCREEN-NAME[1] = "IV0WM001"; /* init screens*/
  IV0W-WS-REC.IV0WW-SCREEN-NAME[2] = "IV0WM005";
  IV0W-WS-REC.IV0WW-CURR-SCREEN-NAME = "IV0WM001"; /* START /W HEADER*/
  ;
  ;
     /* *******************/
     /* set map id's, date*/
     /* *******************/
  ;
  IV0WM001.XXXERRID = "IV0W100"; /* map process name*/
  IV0WM005.XXXERRID = "IV0W200";
  ;
  IV0W-WS-REC.IV0WW-MAX-ITEM-LINES = 300; /* max lines in ITEM table*/
  IV0W-WS-REC.IV0WW-CURR-ITEM-PTR = 1; /* CURR ITEM TABLE PTR*/
  IV0W-WS-REC.IV0WW-CURR-SCRN-PTR = 1; /* CURR MAP POINTER*/
  ;
  IV0WM001.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  IV0WM005.XXXCURDT = VGVar.currentShortGregorianDate;
  ;
  ;
end // end IV0W001

// GET COMMAREA, IVXREC, INITLZE
Function IV0W002()
   /* ************************************************************/
   /* *   IV0W002 - GET COMMAREA, GET IVXREC, INITIALIZE BASED  **/
   /* *   ON COMMAREA, IVXREC DATA.                             **/
   /* *                                                         **/
   /* *                                                         **/
   /* ************************************************************/
   /* *     M A I N T E N A N C E     H I S T O R Y    L O G    **/
   /* *---------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                           **/
   /* *---------------------------------------------------------**/
   /* * 02-25-95  GDECKE  NEW APPLICATION                       **/
   /* ************************************************************/
  ;
   /* CURR process name*/
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W002";
  ;
  IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y"; /* set build screen fl='yes'*/
  IV0W-WS-REC.IV0WW-UPDT-MODE-FL = "N";
  IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "N";
  IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
  IV0W-WS-REC.IV0WW-UPDT-DB-FLAG = "N";
  IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
  IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
  IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "N";
  IV0W-WS-REC.IV0WW-NEW-IVC-FLAG = "Y";
  IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG = "N";
  IV0W-WS-REC.IV0WW-MSG-111-SHOWN-FL = "N";
  IV0W-WS-REC.IV0WW-SHOW-STYLE-COLOR = "N";
  IV0W-WS-REC.IV0WW-SHOW-STYLE-ONLY = "N";

  IV0W-WS-REC.IV0WW-END-OF-SCRN-FL = "N"; /* set end-of-screen fl='no'*/
  IV0W-WS-REC.IV0WW-ERROR-FLAG = "N"; /* clear error flag*/
  ;
  if (COMMAREA.CAUSERID in IV02TBL.XXX-USER-ID)
    IV0W-WS-REC.IV0WW-SCTY-LEVEL-IND = IV02TBL.IV0WW-SCTY-LEVEL-IND[sysVar.arrayIndex];
  else
    IV0W-WS-REC.IV0WW-SCTY-LEVEL-IND = "0";
  end
  IV0W-WS-REC.XXX-USER-ID = COMMAREA.CAUSERID;
  ;
   /* the following is not needed for now, unless we need to define*/
   /* &iv group users who will not be allowed access to iv0w*/
   /* IF IV0W-WS-REC.IV0WW-SCTY-LEVEL-IND = '5';*/
    /* MOVE 'Y' TO IV0W-WS-REC.IV0WW-ERROR-FLAG;*/
    /* MOVE 15 TO EZEMNO;*/
   /* END;*/
  ;
    /* set update/inquiry flags depending on user or user groups*/
    /* commarea access level flags.*/
  ;
  IV0W-WS-REC.IV0WW-ALLOW-INQ-FL = COMMAREA.CAILVL[1];
  ;
  if (IV0W-WS-REC.IV0WW-ALLOW-INQ-FL == "N")
    IVXREC.IVXMSSNB = 15;
    converseLib.validationFailed(15);
    IVXREC.IVXINIT = "IV0";
    COMMAREA.CAUSERA = IVXREC.IVXGROUP;
    COMMAREA.CATOAP = "IV0A";
    XSEXIT(); /* try regular transfer to iv0a*/
    XSPF4(); /* if it didnt work use pf4 exit*/
    TA1REC.TA1MAP = IV0W-WS-REC.IV0WW-CURR-SCREEN-NAME;
    TA1REC.TA1LOCAT[2] = IV0W-WS-REC.IV0WW-CURR-SCREEN-NAME;
    TA1REC.TA1TBLKE = "USER HAS NO MENU SECURITY ACCESS TO IV0W";
    XSIVS02(); /* if pf4 exit failed force the program*/
                                   /* to abend*/
  end
  ;
  IV0W-WS-REC.IV0WW-DATA-ENTRY-UPDT-FL = COMMAREA.CAALVL[1];
  IV0W-WS-REC.IV0WW-CR-MGR-UPDT-FL = COMMAREA.CAALVL[2];
  IV0W-WS-REC.IV0WW-NIKE-BANK-UPDT-FL = COMMAREA.CAALVL[3];
  IV0W-WS-REC.IV0WW-DE-CM-NB-UPDT-FL = COMMAREA.CAALVL[4];
  ;
    /* USE IVC-ID, CO-ID, STOR-ID FROM IVXREC IF IT IS AVAILABLE.*/
  ;
  if (IVXREC.IV0IVCID > 0)
    IV0W-WS-REC.IV-IVC-ID = IVXREC.IV0IVCID;
    IV0WM001.IV-IVC-ID = IVXREC.IV0IVCID;
  else
    IV0W-WS-REC.IV-IVC-ID = 0;
    IV0WM001.IV-IVC-ID = 0;
  end
  ;
  if (IVXREC.IVXKUCCO > 0)
    IV0W-WS-REC.CU-CO-ID = IVXREC.IVXKUCCO;
    IV0WM001.CU-CO-ID = IVXREC.IVXKUCCO;
  else
    IV0W-WS-REC.CU-CO-ID = 0;
    IV0WM001.CU-CO-ID = 0;
  end
  ;
  if (IVXREC.IV0IVCID > 0)
    IV0W-WS-REC.CU-STOR-ID = IVXREC.IVXKUMST;
    IV0WM001.CU-STOR-ID = IVXREC.IVXKUMST;
  else
    IV0W-WS-REC.CU-STOR-ID = 0;
    IV0WM001.CU-STOR-ID = 0;
  end
  ;
  ;
  if (IVXREC.IV0IVCID > 0)
     /* GET MAX CORRECTION SEQ NUMBER (IF ONE EXISTS) - DEFAULT TO 0*/
    IV0WS-GET-MAX-SEQ();
    IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
    IV0WM001.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
    IV0WM001.IV-MAX-CRCT-SEQ = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
  else
    IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ = 0;
    IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ = 0;
    IV0WM001.IV-CRCT-SEQ-NBR = 0;
    IV0WM001.IV-MAX-CRCT-SEQ = 0;
  end
  ;
  if (IVXREC.IV0IVCID > 0
   && IVXREC.IVXKUCCO == 0)
     /* GET INVOICE HEADER, MOVE COMPANY AND STORE TO WS-REC AND MAP1*/
    IV0WS-GET-IVC-HDX();
    IV0WM001.CU-CO-ID = IV0W-CRCT-REC.CU-CO-ID;
    IV0WM001.CU-STOR-ID = IV0W-CRCT-REC.CU-STOR-ID;
    IV0WM001.XNX-DEPT-ID-XREF = IV0W-CRCT-REC.XNX-DEPT-ID-XREF;
  end
  ;
  ;
end // end IV0W002

// decide which map to show
Function IV0W050()
   /* ************************************************************/
   /* *   control process the application screen(s)             **/
   /* *                                                         **/
   /* *  note that this process is being performed in a         **/
   /* *  "while loop" until the end-of-application flag is set  **/
   /* *  to 'y'.                                                **/
   /* *                                                         **/
   /* ************************************************************/
   /* *     M A I N T E N A N C E     H I S T O R Y    L O G    **/
   /* *---------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                           **/
   /* *---------------------------------------------------------**/
   /* * 01-17-95  GDECKE  NEW APPLICATION                       **/
   /* ************************************************************/
  ;
   /* CURR process name*/
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W050";
  ;
  sysVar.arrayIndex = 0;
  IV0W-WS-REC.IV0WW-SCRN-PTR = 0;
  ;
     /* get and save change date and time*/
  ;
  set TA2REC empty;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  IV0W-WS-REC.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
  IV0W-WS-REC.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
  ;
    /* get date one year before todays date. show error message if*/
    /* invoice business month more than 1 year before todays date.*/
    /* test occurs in IV0W120.*/
  ;
  IV0W-WS-REC.IV0WW-FMT1-DT = TA2REC.TA2GRGGN;
  IV0W-WS-REC.IV0WW-FMT3-DT-CC = IV0W-WS-REC.IV0WW-FMT1-DT-CC;
  IV0W-WS-REC.IV0WW-FMT3-DT-YY = IV0W-WS-REC.IV0WW-FMT1-DT-YY;
  IV0W-WS-REC.IV0WW-FMT3-DT-MM = IV0W-WS-REC.IV0WW-FMT1-DT-MM;
   /* -------- y2k out begin ---------*/
   /* IV0W-WS-REC.IV0WW-FMT3-DT-YY = IV0W-WS-REC.IV0WW-FMT3-DT-YY - 1;*/
   /* -------- y2k out end -----------*/
   /* -------- y2k in  begin ---------*/
  IV0W-WS-REC.IV0WW-FMT3-DT-CCYY = IV0W-WS-REC.IV0WW-FMT3-DT-CCYY - 1;
   /* -------- y2k in end ------------*/
  ;
  ;
  if (IV0W-WS-REC.IV0WW-CURR-SCREEN-NAME in IV0W-WS-REC.IV0WW-SCREEN-NAME)
    IV0W-WS-REC.IV0WW-SCRN-PTR = sysVar.arrayIndex; /* in the screen-array, set*/
  end /* the screen-index*/
  ;
  TA1REC.TA1MAP = IV0W-WS-REC.IV0WW-CURR-SCREEN-NAME; /* prep 4 abend*/
  ;
  if (IV0WW-BUILD-ARRAY-FL == "N") /* set with pf10/11*/
     /* next sentence*/
  else
    IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y"; /* set build scrn fl='yes'*/
  end
  ;
  ;
  IV0W-WS-REC.IV0WW-END-OF-SCRN-FL = "N";
  IV0W-WS-REC.IV0WW-SHOW-STYLE-COLOR = "N";
  IV0W-WS-REC.IV0WW-SHOW-STYLE-ONLY = "N";
  ;
  if (IV0W-WS-REC.IV0WW-SCRN-PTR == 1) /* if screen IV0Wm001*/
    while (IV0W-WS-REC.IV0WW-END-OF-SCRN-FL == "N") /* show until user is done*/
      IV0W100(); /* CORRECTIONS HEADER,GL,ADDR*/
    end
  else
    if (IV0W-WS-REC.IV0WW-SCRN-PTR == 2) /* if screen IV0Wm005*/
      while (IV0W-WS-REC.IV0WW-END-OF-SCRN-FL == "N") /* SHOW TILL UEER DONE*/
        IV0W200(); /* IVC CORRECTIONS STYLE & SIZES*/
      end
    else
      TA1REC.TA1MAP = IV0W-WS-REC.IV0WW-CURR-SCREEN-NAME;
      TA1REC.TA1TBLKE = "INVOICE UNKNOWN SCREEN NAME";
      TA1REC.TA1LOCAT[2] = IV0W-WS-REC.IV0WW-CURR-SCREEN-NAME;
      XSIVS02(); /* abend*/
       /* END ;*/
    end
  end
  ;
  ;
   /* at this point;*/
       /* if the end-of-application flag (IV0WW-END-OF-APPL-FL ) = 'n'*/
         /* the perform will return to the top of IV0W050...*/
       /* else*/
         /* the perform will auto return to IV0W000.*/
  ;
end // end IV0W050

// map 1 corrections header
Function IV0W100()
   /* ************************************************************/
   /* *    process screen IV0Wm001 Product Summary              **/
   /* *                                                         **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from IV0W050 until the end-of-screen   **/
   /* *     flag (iv0wW-end-of-scrn-fll) is set to 'y'.         **/
   /* * 10-04-90 CHELLM Added initialition of cursor position   **/
   /* *                 if new screen built.                    **/
   /* *                                                         **/
   /* ************************************************************/
   /* *     M A I N T E N A N C E    H I S T O R Y    L O G     **/
   /* *---------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                           **/
   /* *---------------------------------------------------------**/
   /* * 01-17-95  GDECKE  NEW APPLICATION                       **/
   /* ************************************************************/
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W100";
  ;
    /* gather corrections and regular invoice data to build working*/
    /* storage and map records if build screen requested and there*/
    /* are no errors.*/
  ;
  if (IV0W-WS-REC.IV0WW-BUILD-SCRN-FL == "Y")
    if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "N"
     || converseVar.validationMsgNum == 105)
      IV0WS-BUILD-MAP1();
      IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "N";
    end
  end
  ;
   /* ADD LOGIC TO PROTECT ENTERABLE FIELDS IF NOT IN UPDATE MODE*/
   /* OR REQUESTED SEQ NUMBER IS NOT CURRENT SEQ NBR.*/
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "N"
     || converseVar.validationMsgNum == 105
     || converseVar.validationMsgNum == 123)
      IV0W113();
      /* IV0WS-UPDT-M1-ATTR;*/
    else
      set IV0WM001.IV-CRCT-SEQ-NBR skip, modified, invisible;
      set IV0WM001.IV-MAX-CRCT-SEQ skip, modified, invisible;
      set IV0WM001.XXX-USER-ID skip, modified, invisible;
    end
  else
    IV0WS-INQ-M1-ATTR();
  end
  ;
   /* ***********************************************************/
  converse IV0WM001 ;
   /* ***********************************************************/
  ;
  VAGen_EZEMSG = " ";
  IV0W-WS-REC.IV0WW-ERROR-FLAG = "N";
  IV0W-WS-REC.IV0WW-UPDT-DB-FLAG = "N";
  ;
  if (converseVar.eventKey is pf17)
    IV0W-WS-REC.IV0WW-MSG-111-SHOWN-FL = "N";
  else
    if (converseVar.eventKey is enter
     && IV0WM001.IV-IVC-ID > 0
     && IV0WM001.IV-IVC-ID != IV0W-WS-REC.IV0WW-PREV-ENTR-IVC-ID)
      IV0W-WS-REC.IV0WW-MSG-111-SHOWN-FL = "N";
    end
  end
  ;
  IV0W-WS-REC.IV0WW-PREV-ENTR-IVC-ID = IV0WM001.IV-IVC-ID;
  ;
   /* IVC-ID = 0 IS NOT VALID - LOOP TO TOP OF IV0W100, SHOW ERROR MSG*/
  ;
  if (IV0WM001.IV-IVC-ID == 0)
    IV0W-WS-REC.IV0WW-NEW-IVC-FLAG = "Y";
    IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG = "N";
    ;
    /* if invoice id is zero allow PF3 AND PF4 TO BE PERFORMED*/
    ;
    if (converseVar.eventKey is pf3)
      IV0WS03();
    end
    ;
    if (converseVar.eventKey is pf4)
      IV0WS04();
    end
    ;
     /* IF PF2 PRESSED WHILE INVOICE ID WAS ZERO THEN TOGGLE VALUE OF*/
     /* UPDATE MODE SWITCH*/
    ;
    if (converseVar.eventKey is pf2)
      if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
        IV0W-WS-REC.IV0WW-UPDT-MODE-FL = "N";
        IV0WM001.IV0WM-UPDT-MODE-DESC = "INQUIRY";
        IV0WM005.IV0WM-UPDT-MODE-DESC = "INQUIRY";
        converseLib.validationFailed(0);
        IV0W-WS-REC.IV0WW-ERROR-FLAG = "N";
      else
        IV0W-WS-REC.IV0WW-UPDT-MODE-FL = "Y";
        IV0WM001.IV0WM-UPDT-MODE-DESC = "UPDATE ";
        IV0WM005.IV0WM-UPDT-MODE-DESC = "UPDATE ";
      end
    end
    ;
    IV0W111(); /* perform fastpath exit if option/item*/
                                   /* entered*/
    if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
      return;
    end
    ;
    set IV0WM001.IV-IVC-ID cursor, modified, red;
    converseLib.validationFailed(82);
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    return;
  else
    ;
    /* IF USER CHANGED IVC-ID or seq NUMBER LOOP BACK TO TOP OF IV0W100*/
    /* force program to select most current correction sequence number.*/
    ;
    if (IV0WM001.IV-IVC-ID != IV0W-CRCT-REC.IV-IVC-ID)
      IV0WS-LOST-IP-TEST();
      if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
        return;
      end
      IV0WM001.IV-CRCT-SEQ-NBR = 99;
      IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
      IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
      IV0W-WS-REC.IV0WW-NEW-IVC-FLAG = "Y";
      IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG = "N";
      return;
    else
      /* IF USER CHANGED SEQ NUMBER LOOP BACK TO TOP OF IV0W100*/
      ;
      if (IV0WM001.IV-IVC-ID == IV0W-CRCT-REC.IV-IVC-ID
       && IV0WM001.IV-CRCT-SEQ-NBR != IV0W-CRCT-REC.IV-CRCT-SEQ-NBR)
        IV0WS-LOST-IP-TEST();
        if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
          return;
        end
        IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
        IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
        IV0W-WS-REC.IV0WW-NEW-IVC-FLAG = "N";
        IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG = "Y";
        return;
      end
    end
  end
  ;
  IV0W112(); /* set fields defined*/
  ;
  ;
  IV0W110(); /* edit pfkeys*/
   /* may transfer out of application*/
  ;
  ;
  if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "N")
    IV0W113(); /* set ATTR ACCORDING TO UPDATE MODE &*/
                                   /* VALUES CHANGED*/
  end
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y"
   && IV0W-WS-REC.IV0WW-ERROR-FLAG == "N"
   && IV0W-WS-REC.IV0WW-DO-EDITS-FLAG == "Y")
    IV0W120(); /* edit entries*/
  end
  ;
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "N")
      if (IV0W-WS-REC.IV0WW-UPDT-DB-FLAG == "Y")
        IV0WS-CRCT-UPDATE(); /* process entries*/
      else
        if (converseVar.eventKey is enter)
          converseLib.validationFailed(108);
          IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
        end
      end
    else
      IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
      IV0W-WS-REC.IV0WW-UPDT-DB-FLAG = "N";
      IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
      IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "N";
      IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "N";
    end
  end
  ;
  ;
   /* at this point;*/
     /* if the end-of-screen flag (iv0WW-end-of-scrn-fl) is 'n'*/
        /* we go back to top of process iv0w100.*/
     /* if the end-of-screen flag (iv0WW-end-of-scrn-fl) is 'y'*/
        /* we return to iv0w050.*/
  ;
  ;
end // end IV0W100

// edit pfkeys
Function IV0W110()
   /* **************************************/
   /* edit pf keys*/
   /* **************************************/
   /* **********************************************************************/
   /* *     M A I N T E N A N C E    H I S T O R Y    L O G               **/
   /* *-------------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                     **/
   /* *-------------------------------------------------------------------**/
   /* * 01-17-95  GDECKE  NEW APPLICATION                                 **/
   /* **********************************************************************/
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W110";
  ;
  IV0W111(); /* execute fastpath exit if option/item*/
  if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
    return;
  end
  ;
   /* CHECK FOR ANY MODIFIED FIELDS;*/
  IV0WS-TST-MODIFIED();
  ;
   /* do not update database unless flag gets reset to 'Y' by PF12*/
     /* -- see pf12 logic below*/
  IV0W-WS-REC.IV0WW-UPDT-DB-FLAG = "N";
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf1
   || converseVar.eventKey is pf2
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf10
   || converseVar.eventKey is pf11
   || converseVar.eventKey is pf12
   || converseVar.eventKey is pf13
   || converseVar.eventKey is pf17)
    /* NEXT SENTENCE*/
  else
    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa2
     || converseVar.eventKey is pa3)
      converseLib.clearScreen();
      
      converseLib.validationFailed(104); /* INVALID PF KEYS*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      return;
    else
      converseLib.validationFailed(3); /* show invalid pf key message*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      return;
    end
  end
  ;
    /* SHOW DATA LOST MESSAGE IF TRANSFERRING OUT OF UPDATE MODE*/
  ;
  if (converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf1
   || converseVar.eventKey is pf13
  )
    IV0WS-LOST-IP-TEST(); /* show msg #111 - lost input data*/
    if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
      return;
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf1)
    XSPF1();
    converseLib.validationFailed(18);
    IVYREC.IVYERR = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf3)
    IV0W-WS-REC.IV0WW-END-OF-SCRN-FL = "Y";
    IV0W-WS-REC.IV0WW-END-OF-APPL-FL = "Y";
    IV0WS03();
    return;
  end
  ;
  if (converseVar.eventKey is pf4)
    IV0W-WS-REC.IV0WW-END-OF-SCRN-FL = "Y";
    IV0W-WS-REC.IV0WW-END-OF-APPL-FL = "Y";
    IV0WS04();
    return;
  end
  ;
  if (converseVar.eventKey is pf13)
    IV0W-WS-REC.IV0WW-END-OF-SCRN-FL = "Y";
    IV0W-WS-REC.IV0WW-END-OF-APPL-FL = "Y";
    IV0WS13();
    return;
  end
  ;
   /* if user entered a new invoice id or sequence number then IV0W will*/
   /* show the data for the entered parameter and treat whatever key*/
   /* was entered like an 'ENTER' key.*/
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf10
   || converseVar.eventKey is pf11
   || converseVar.eventKey is pf12
   || converseVar.eventKey is pf17)
    if (IV0WM001.IV-IVC-ID is modified
     && IV0WM001.IV-IVC-ID != IV0W-CRCT-REC.IV-IVC-ID)
      IV0WS-LOST-IP-TEST(); /* show msg #111 - lost input data*/
      if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
        return;
      end
      converseLib.validationFailed(105);
      IV0WM005.IV-IVC-ID = IV0WM001.IV-IVC-ID;
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
      IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
      IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
      IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
      IV0W-WS-REC.IV0WW-NEW-IVC-FLAG = "Y";
      IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG = "N";
      return;
    else
      if (IV0WM001.IV-CRCT-SEQ-NBR is modified
       && IV0WM001.IV-CRCT-SEQ-NBR != IV0W-CRCT-REC.IV-CRCT-SEQ-NBR)
        converseLib.validationFailed(105);
        IV0WM005.IV-CRCT-SEQ-NBR = IV0WM001.IV-CRCT-SEQ-NBR;
        IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
        IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
        IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
        IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
        IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
        IV0W-WS-REC.IV0WW-NEW-IVC-FLAG = "N";
        IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG = "Y";
        return;
      end
    end
  end
  ;
  if (converseVar.eventKey is pf2)
    /* IF IV0W-WS-REC.IV0WW-SCTY-LEVEL-IND = '3'*/
     /* OR IV0W-WS-REC.IV0WW-SCTY-LEVEL-IND = '4'*/
     /* OR IV0W-WS-REC.IV0WW-SCTY-LEVEL-IND = '0';*/
    if (IV0W-WS-REC.IV0WW-DATA-ENTRY-UPDT-FL == "N"
     && IV0W-WS-REC.IV0WW-CR-MGR-UPDT-FL == "N"
     && IV0W-WS-REC.IV0WW-NIKE-BANK-UPDT-FL == "N"
     && IV0W-WS-REC.IV0WW-DE-CM-NB-UPDT-FL == "N")
      IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
      IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
      IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "Y";
      IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
      IV0W-WS-REC.IV0WW-UPDT-MODE-FL = "N";
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      converseLib.validationFailed(103); /* user id does not have update*/
                                   /* authority*/
      return;
    else
      /* IF IV0W-WS-REC.IV0WW-SCTY-LEVEL-IND = '1'*/
       /* OR IV0W-WS-REC.IV0WW-SCTY-LEVEL-IND = '2';*/
      if (IV0W-WS-REC.IV0WW-DATA-ENTRY-UPDT-FL == "Y"
       || IV0W-WS-REC.IV0WW-CR-MGR-UPDT-FL == "Y"
       || IV0W-WS-REC.IV0WW-NIKE-BANK-UPDT-FL == "Y"
       || IV0W-WS-REC.IV0WW-DE-CM-NB-UPDT-FL == "Y")
        if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "N")
          IV0W-WS-REC.IV0WW-UPDT-MODE-FL = "Y";
          IV0WM001.IV0WM-UPDT-MODE-DESC = "UPDATE ";
          IV0WM005.IV0WM-UPDT-MODE-DESC = "UPDATE ";
          IV0W-WS-REC.IV0WW-MSG-111-SHOWN-FL = "N";
          ;
          if (IV0WM001.IV-CRCT-SEQ-NBR != IV0WM001.IV-MAX-CRCT-SEQ)
            converseLib.validationFailed(115); /* SHOW MSG - SWITCHING TO MAX SEQ#*/
          end
          ;
          IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
          IV0WM001.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
          IV0WM005.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
          IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
          IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
          IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
          IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
          return;
        else
          ;
          IV0WS-LOST-IP-TEST(); /* show msg #111 - lost input data*/
          if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
            return;
          end
          ;
          IV0W-WS-REC.IV0WW-UPDT-MODE-FL = "N";
          IV0WM001.IV0WM-UPDT-MODE-DESC = "INQUIRY";
          IV0WM005.IV0WM-UPDT-MODE-DESC = "INQUIRY";
          converseLib.validationFailed(0);
          IV0W-WS-REC.IV0WW-ERROR-FLAG = "N";
          IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
          IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
          IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "Y";
          IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
          return;
        end
        ;
      end
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf10) /* show data for next correction seq#*/
    if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      converseLib.validationFailed(116); /* NO PF10 WHILE IN UPDATE MODE*/
      return;
    else
      if (IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ == IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ)
        IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
        converseLib.validationFailed(102); /* already at last correction*/
        return;
      else
        IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ + 1;
        IV0WM001.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ;
        IV0WM005.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ;
        IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
        IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
        IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "Y";
        IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
        return;
      end
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf11) /* show data for previous correction seq*/
                                   /* #*/
    if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      converseLib.validationFailed(117); /* NO PF11 WHILE IN UPDATE MODE*/
      return;
    else
      if (IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ == 0)
        IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
        converseLib.validationFailed(102); /* already at last correction*/
        return;
      else
        IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ - 1;
        IV0WM001.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ;
        IV0WM005.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ;
        IV0W-WS-REC.IV0WW-UPDT-MODE-FL = "N";
        ;
        IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
        IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
        IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "Y";
        IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
        return;
      end
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf12) /* entry confirmed - do updates*/
    if (IV0W-WS-REC.IV0WW-DATA-ENTR-FL == "N") /* no data was changed*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      converseLib.validationFailed(100);
      return;
    else
      if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "N") /* not in update mode*/
        IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
        converseLib.validationFailed(101);
        return;
      else /* okay to do edits and updates*/
        IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "Y";
        IV0W-WS-REC.IV0WW-UPDT-DB-FLAG = "Y";
        IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "Y";
        IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
        IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
        return;
      end
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf17) /* switch to line item screen - IV0WM005*/
    IV0W-WS-REC.IV0WW-CURR-SCREEN-NAME = "IV0WM005";
    IV0W-WS-REC.IV0WW-END-OF-SCRN-FL = "Y";
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    converseLib.validationFailed(123);
    if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y") /* not in update mode*/
      IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "Y";
      IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "Y";
      return;
    else
      IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
      IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
      return;
    end
  end
  ;
  ;
  if (converseVar.eventKey is enter) /* process data entered on iv0wm001*/
    if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y") /* not in update mode*/
      IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "Y";
      IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "Y";
      return;
    else
      IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
      IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
      return;
    end
  end
  ;
  IV0W-WS-REC.IV0WW-END-OF-SCRN-FL = "Y";
  IV0W-WS-REC.IV0WW-END-OF-APPL-FL = "Y";
  COMMAREA.CATOAP = " ";
  converseLib.validationFailed(3); /* INVALID FUNCTION KEY*/
  IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
  return;
  ;
end // end IV0W110

// do fastpath exit from map1
Function IV0W111()
   /* **********************************************************************/
   /* iv0w111 - do fastpath exit from map1                               **/
   /* **********************************************************************/
   /* **********************************************************************/
   /* *     M A I N T E N A N C E    H I S T O R Y    L O G               **/
   /* *-------------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                     **/
   /* *-------------------------------------------------------------------**/
   /* * 01-17-95  GDECKE  NEW APPLICATION                                 **/
   /* **********************************************************************/
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W111";
  ;
  ;
  if (IV0WM001.CATOAP != " " /* if any fastpath data entered*/
   || IV0WM001.CAITEM != " ")
    ;
    IV0WS-LOST-IP-TEST();
    if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
      return;
    end
    ;
    COMMAREA.CATOAP = IV0WM001.CATOAP;
    COMMAREA.CAITEM = IV0WM001.CAITEM;
    ;
    if (IV0WM001.CATOAP >= "IV  "
     && IV0WM001.CATOAP <= "IV99"
     && COMMAREA.CAITEM == " ")
      COMMAREA.CAITEM = IV0WM001.IV-IVC-ID;
    end
    ;
    COMMAREA.CAUSERA = " ";
    ;
    XSIVXF(); /* ATTEMPT TO PASS*/
    if (converseVar.validationMsgNum == 0)
      XSEXIT();
      /* NO ROOM TO SHOW XSEXIT RETURN MESSAGE*/
      /* MOVE COMMAREA.CAMSG TO IV0WM001.XXXMSG;/* PASS WAS NOT SUCCESSFUL*/
      set IV0WM001.CATOAP cursor, bold; /* SHOW MESSAGE*/
      set IV0WM001 alarm;
      converseLib.validationFailed(18);
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      return;
    else
      set IV0WM001.CAITEM cursor, bold;
      converseLib.validationFailed(77);
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      return;
    end
  end
  ;
end // end IV0W111

// set fields defined
Function IV0W112()
   /* IV0W112 - SET FIELDS DEFINED*/
   /* **********************************************************************/
   /* *      M A I N T E N A N C E      H I S T O R Y     L O G           **/
   /* *-------------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                     **/
   /* *-------------------------------------------------------------------**/
   /* * 02-12-95  GDECKE  NEW APPLICATION                                 **/
   /* **********************************************************************/
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W112";
  ;
  set IV0WM001.IV-IVC-ID initialAttributes;
  set IV0WM001.IV-CRCT-SEQ-NBR initialAttributes;
  set IV0WM001.IV-MAX-CRCT-SEQ initialAttributes;
  set IV0WM001.XXX-USER-ID initialAttributes;
  set IV0WM001.XIC-IVC-CRCTRSN-CD initialAttributes;
  set IV0WM001.IV0WM-OP-CUST-PO initialAttributes;
  set IV0WM001.IV0WM-TF-CARR-CD initialAttributes;
  set IV0WM001.IV0WM-TF-CARR-NM initialAttributes;
  set IV0WM001.IV0WM-TF-PRO-NBR initialAttributes;
  set IV0WM001.IV0WM-CU-STOR-SELF-ID initialAttributes;
  set IV0WM001.IV0WM-PK-NBR-OF-CARTONS initialAttributes;
  set IV0WM001.IV0WM-SR-TOT-NBR-CARTONS initialAttributes;
  set IV0WM001.IV0WM-CMT-TEXT1 initialAttributes;
  set IV0WM001.IV0WM-CMT-TEXT2 initialAttributes;
  set IV0WM001.IV0WM-CMT-TEXT3 initialAttributes;
  ;
  ;
end // end IV0W112

// SET ATTR: USE UPDT MODE, CHGS
Function IV0W113()
   /* IV0W113 - SET FIELD ATTRIBUTES USING UPDATE/INQUIRY MODE FLAG AND*/
   /* WHETHER THE FIELDS HAVE BEEN CHANGED.*/
   /* **********************************************************************/
   /* *      M A I N T E N A N C E      H I S T O R Y     L O G           **/
   /* *-------------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                     **/
   /* *-------------------------------------------------------------------**/
   /* * 03-07-95  GDECKE  NEW APPLICATION                                 **/
   /* **********************************************************************/
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W113";
  ;
  ;
   /* if update mode and alteable fields have been changed to new values*/
   /* then set the attribute to bright.*/
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    if (IV0WM001.XIC-IVC-CRCTRSN-CD != IV0W-CRCT-REC.XIC-IVC-CRCTRSN-CD)
      set IV0WM001.XIC-IVC-CRCTRSN-CD modified, bold;
    else
      set IV0WM001.XIC-IVC-CRCTRSN-CD initialAttributes;
    end
  else
    set IV0WM001.XIC-IVC-CRCTRSN-CD skip;
  end
  ;
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    if (IV0WM001.IV0WM-OP-CUST-PO != IV0W-CRCT-REC.OP-CUST-PO)
      set IV0WM001.IV0WM-OP-CUST-PO modified, bold;
    else
      set IV0WM001.IV0WM-OP-CUST-PO initialAttributes;
    end
  else
    set IV0WM001.IV0WM-OP-CUST-PO skip;
  end
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    if (IV0WM001.IV0WM-TF-CARR-CD != IV0W-CRCT-REC.TF-CARR-CD)
      set IV0WM001.IV0WM-TF-CARR-CD modified, bold;
    else
      set IV0WM001.IV0WM-TF-CARR-CD initialAttributes;
    end
  else
    set IV0WM001.IV0WM-TF-CARR-CD skip;
  end
  ;
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    if (IV0WM001.IV0WM-TF-CARR-NM != IV0W-CRCT-REC.TF-CARR-NM)
      set IV0WM001.IV0WM-TF-CARR-NM modified, bold;
    else
      set IV0WM001.IV0WM-TF-CARR-NM initialAttributes;
    end
  else
    set IV0WM001.IV0WM-TF-CARR-NM skip;
  end
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    if (IV0WM001.IV0WM-TF-PRO-NBR != IV0W-CRCT-REC.TF-PRO-NBR)
      set IV0WM001.IV0WM-TF-PRO-NBR modified, bold;
    else
      set IV0WM001.IV0WM-TF-PRO-NBR initialAttributes;
    end
  else
    set IV0WM001.IV0WM-TF-PRO-NBR skip;
  end
  ;
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    if (IV0WM001.IV0WM-CU-STOR-SELF-ID != IV0W-CRCT-REC.CU-STOR-SELF-ID)
      set IV0WM001.IV0WM-CU-STOR-SELF-ID modified, bold;
    else
      set IV0WM001.IV0WM-CU-STOR-SELF-ID initialAttributes;
    end
  else
    set IV0WM001.IV0WM-CU-STOR-SELF-ID skip;
  end
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    if (IV0WM001.IV0WM-PK-NBR-OF-CARTONS != 
    IV0W-CRCT-REC.PK-NBR-OF-CARTONS)
      set IV0WM001.IV0WM-PK-NBR-OF-CARTONS modified, bold;
    else
      set IV0WM001.IV0WM-PK-NBR-OF-CARTONS initialAttributes;
    end
  else
    set IV0WM001.IV0WM-PK-NBR-OF-CARTONS skip;
  end
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    if (IV0WM001.IV0WM-SR-TOT-NBR-CARTONS != 
    IV0W-CRCT-REC.SR-TOT-NBR-CARTONS)
      set IV0WM001.IV0WM-SR-TOT-NBR-CARTONS modified, bold;
    else
      set IV0WM001.IV0WM-SR-TOT-NBR-CARTONS initialAttributes;
    end
  else
    set IV0WM001.IV0WM-SR-TOT-NBR-CARTONS skip;
  end
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    set IV0WM001.IV-CRCT-SEQ-NBR skip, modified, invisible;
    set IV0WM001.IV-MAX-CRCT-SEQ skip, modified, invisible;
    set IV0WM001.XXX-USER-ID skip, modified, invisible;
  else
    set IV0WM001.IV-CRCT-SEQ-NBR skip;
    set IV0WM001.IV-MAX-CRCT-SEQ skip;
    set IV0WM001.XXX-USER-ID initialAttributes;
  end
  ;
end // end IV0W113

// set map1 data changed flag
Function IV0W114()
   /* IV0W114 - SET map1 data changed flag*/
   /* **********************************************************************/
   /* *      M A I N T E N A N C E      H I S T O R Y     L O G           **/
   /* *-------------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                     **/
   /* *-------------------------------------------------------------------**/
   /* * 03-10-95  GDECKE  NEW APPLICATION                                 **/
   /* **********************************************************************/
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W114";
  ;
  ;
   /* if data not the same on map 1 and and iv0w-crct-rec turn on map1*/
   /* data changed flag.*/
  ;
  IV0W-WS-REC.IV0WW-MAP1-DATA-CHG-FL = "N";
  ;
  if (IV0WM001.IV-IVC-ID == 0)
    return;
  end
  ;
  if (IV0WM001.XIC-IVC-CRCTRSN-CD != "   "
   && IV0WM001.XIC-IVC-CRCTRSN-CD != IV0W-CRCT-REC.XIC-IVC-CRCTRSN-CD)
    IV0W-WS-REC.IV0WW-MAP1-DATA-CHG-FL = "Y";
  end
  ;
  if (IV0WM001.IV0WM-OP-CUST-PO != IV0W-CRCT-REC.OP-CUST-PO)
    IV0W-WS-REC.IV0WW-MAP1-DATA-CHG-FL = "Y";
  end
  ;
  if (IV0WM001.IV0WM-TF-CARR-CD != IV0W-CRCT-REC.TF-CARR-CD)
    IV0W-WS-REC.IV0WW-MAP1-DATA-CHG-FL = "Y";
  end
  ;
  if (IV0WM001.IV0WM-TF-CARR-NM != IV0W-CRCT-REC.TF-CARR-NM)
    IV0W-WS-REC.IV0WW-MAP1-DATA-CHG-FL = "Y";
  end
  ;
  if (IV0WM001.IV0WM-TF-PRO-NBR != IV0W-CRCT-REC.TF-PRO-NBR)
    IV0W-WS-REC.IV0WW-MAP1-DATA-CHG-FL = "Y";
  end
  ;
  if (IV0WM001.IV0WM-CU-STOR-SELF-ID != IV0W-CRCT-REC.CU-STOR-SELF-ID)
    IV0W-WS-REC.IV0WW-MAP1-DATA-CHG-FL = "Y";
  end
  ;
  if (IV0WM001.IV0WM-PK-NBR-OF-CARTONS != 
  IV0W-CRCT-REC.PK-NBR-OF-CARTONS)
    IV0W-WS-REC.IV0WW-MAP1-DATA-CHG-FL = "Y";
  end
  ;
  if (IV0WM001.IV0WM-SR-TOT-NBR-CARTONS != 
  IV0W-CRCT-REC.SR-TOT-NBR-CARTONS)
    IV0W-WS-REC.IV0WW-MAP1-DATA-CHG-FL = "Y";
  end
  ;
end // end IV0W114

// edit entries
Function IV0W120()
   /* *************************************************************/
   /* *                                                          **/
   /* *                   EDIT ENTRIES                           **/
   /* *                                                          **/
   /* *    1) if data changed on screen.                         **/
   /* *       - If no errors, check for a selection code of AA   **/
   /* *           or SA                                          **/
   /* *       - If still no errors, check detail lines from the  **/
   /* *           bottom up.                                     **/
   /* *    2) Edit the header invoice number entered.            **/
   /* *                                                          **/
   /* *                                                          **/
   /* *************************************************************/
   /* *      M A I N T E N A N C E    H I S T O R Y              **/
   /* *************************************************************/
   /* * 01-17-95  GDECKE   NEW APPLICATION                       **/
   /* *************************************************************/
  ;
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W120";
  ;
   /* this test will prevent further editing or updating of this*/
   /* message due to not wishing to allow changes to be made while*/
   /* viewing a correction sequence other than then most current.*/
  ;
  if (IV0WM001.IV-CRCT-SEQ-NBR != IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ)
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    converseLib.validationFailed(125);
    set IV0WM001.IV-IVC-ID cursor, modified, red;
    set IV0WM001.IV-CRCT-SEQ-NBR skip, red;
    return;
  end
  ;
   /* this test will prevent UPDATING OF INVOICES OVER ONE YEAR OLD.*/
  ;
  if (VIVHDR05.IVABUSMO <= IV0W-WS-REC.IV0WW-FMT3-DT)
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    converseLib.validationFailed(124);
    set IV0WM001.IV-IVC-ID cursor, modified, red;
    return;
  end
  ;
  ;
   /* CHECK AT LEAST ONE NON-BLANK COMMENT FOR THE CORRECTION UPDATE*/
  ;
  if (IV0WM001.IV0WM-CMT-TEXT1 == " "
   && IV0WM001.IV0WM-CMT-TEXT2 == " "
   && IV0WM001.IV0WM-CMT-TEXT3 == " ")
    converseLib.validationFailed(107);
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    set IV0WM001.IV0WM-CMT-TEXT1 cursor, modified, red;
  end
  ;
  ;
      /* CHECK FOR VALID PAYMENT TERMS CODE*/
  ;
  if (IV0WM001.IV0WM-XPT-PTERM-CD in XPTTBL.XPTCD)
                                  /* NEXT SENTENCE*/
  else
    converseLib.validationFailed(121);
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    set IV0WM001.IV0WM-XPT-PTERM-CD cursor, modified, red;
  end
  ;
  ;
   /* CHECK FOR VALID NUMBER OF CARTONS;*/
  ;
  if (IV0WM001.IV0WM-PK-NBR-OF-CARTONS > 
  IV0WM001.IV0WM-SR-TOT-NBR-CARTONS)
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    converseLib.validationFailed(74);
    set IV0WM001.IV0WM-PK-NBR-OF-CARTONS cursor, modified, red;
    set IV0WM001.IV0WM-SR-TOT-NBR-CARTONS modified, red;
  end
  ;
  ;
   /* CHECK FOR VALID CARRIER CODE*/
  ;
  IV0WS-EDIT-CARRIER();
    /* GET-CARRIER SETS ERROR FLAG IF VALUE NOT FOUND*/
  ;
      /* CHECK FOR VALID CORRECTION REASON CODE*/
  ;
  if (IV0WM001.XIC-IVC-CRCTRSN-CD in XICTBL.XIC-IVC-CRCTRSN-CD)
                                  /* NEXT SENTENCE*/
  else
    converseLib.validationFailed(80);
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    set IV0WM001.XIC-IVC-CRCTRSN-CD cursor, modified, red;
  end
  ;
end // end IV0W120

// map 1 corrections header
Function IV0W200()
   /* ************************************************************/
   /* *    process screen IV0WM005 Product DETAIL               **/
   /* *                                                         **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from IV0W050 until the end-of-screen   **/
   /* *     flag (iv0wW-end-of-scrn-fll) is set to 'y'.         **/
   /* *                                                         **/
   /* ************************************************************/
   /* *     M A I N T E N A N C E    H I S T O R Y    L O G     **/
   /* *---------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                           **/
   /* *---------------------------------------------------------**/
   /* * 01-17-95  GDECKE  NEW APPLICATION                       **/
   /* ************************************************************/
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W200";
  ;
    /* gather corrections and regular invoice data to build working*/
    /* storage and map records if build screen requested and there*/
    /* are no errors.*/
  ;
  if (IV0W-WS-REC.IV0WW-BUILD-SCRN-FL == "Y")
    if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "N"
     || converseVar.validationMsgNum == 105)
      IV0WS-BUILD-MAP1();
      IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "N";
    end
  end
  ;
   /* ADD LOGIC TO PROTECT ENTERABLE FIELDS IF NOT IN UPDATE MODE*/
   /* OR REQUESTED SEQ NUMBER IS NOT CURRENT SEQ NBR.*/
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    IV0WS-UPDT-M5-ATTR();
  else
    IV0WS-INQ-M5-ATTR();
  end
  ;
   /* ***********************************************************/
  converse IV0WM005 ;
   /* ***********************************************************/
  ;
  VAGen_EZEMSG = " ";
  IV0W-WS-REC.IV0WW-ERROR-FLAG = "N";
  IV0W-WS-REC.IV0WW-UPDT-DB-FLAG = "N";
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf3)
    IV0W-WS-REC.IV0WW-MSG-111-SHOWN-FL = "N";
  end
  ;
  IV0W212(); /* set fields defined*/
  ;
  ;
  IV0W210(); /* edit pfkeys*/
   /* may transfer out of application*/
  ;
  ;
  if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "N")
    IV0W213(); /* reset attributes depending on updt*/
  end /* mode and fields changed*/
  ;
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y"
   && IV0W-WS-REC.IV0WW-ERROR-FLAG == "N"
   && IV0W-WS-REC.IV0WW-DO-EDITS-FLAG == "Y")
    IV0W220(); /* edit entries*/
  end
  ;
  ;
  if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "N"
   && IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    if (converseVar.eventKey is enter
     || converseVar.eventKey is pf7
     || converseVar.eventKey is pf8
     || converseVar.eventKey is pf9)
      IV0WS-CRCT-M5-UPDT(); /* process entries*/
    end
  end
  ;
  if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "N")
    if (converseVar.eventKey is pf7
     || converseVar.eventKey is pf8
     || converseVar.eventKey is pf9
     || converseVar.eventKey is enter)
      IV0WS-M5-PAGING(); /* process entries*/
    end
  end
  ;
  ;
   /* at this point;*/
     /* if the end-of-screen flag (iv0WW-end-of-scrn-fl) is 'n'*/
        /* we go back to top of process IV0W200.*/
     /* if the end-of-screen flag (iv0WW-end-of-scrn-fl) is 'y'*/
        /* we return to IV0W050.*/
  ;
  ;
end // end IV0W200

// edit pfkeys
Function IV0W210()
   /* **************************************/
   /* edit pf keys*/
   /* **************************************/
   /* **********************************************************************/
   /* *     M A I N T E N A N C E    H I S T O R Y    L O G               **/
   /* *-------------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                     **/
   /* *-------------------------------------------------------------------**/
   /* * 01-17-95  GDECKE  NEW APPLICATION                                 **/
   /* **********************************************************************/
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W210";
  ;
  IV0W211(); /* execute fastpath exit if requested*/
  if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
    return;
  end
  ;
   /* CHECK FOR ANY MODIFIED FIELDS;*/
  IV0WS-TST-M5-MODFY();
  ;
   /* do not update database unless flag gets reset to 'Y' by PF12*/
     /* -- see pf12 logic below*/
  IV0W-WS-REC.IV0WW-UPDT-DB-FLAG = "N";
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf10
   || converseVar.eventKey is pf11
  ) /* NEXT SENTENCE*/
  else
    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa2
     || converseVar.eventKey is pa3)
      converseLib.clearScreen();
      
      converseLib.validationFailed(104); /* pa1/2 cause loss of keyed data-rekey*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      return;
    else
      converseLib.validationFailed(3); /* show invalid pf key message*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      return;
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf3)
    IV0W-WS-REC.IV0WW-CURR-SCREEN-NAME = "IV0WM001";
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    converseLib.validationFailed(123);
    IV0W-WS-REC.IV0WW-END-OF-SCRN-FL = "Y";
    IV0W-WS-REC.IV0WW-SHOW-STYLE-COLOR = "N";
    IV0W-WS-REC.IV0WW-SHOW-STYLE-ONLY = "N";
    if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y") /* not in update mode*/
      IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "Y";
      IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "Y";
      return;
    else
      IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
      IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
      return;
    end
  end
  ;
  ;
   /* if user entered a new invoice id or sequence number then IV0W will*/
   /* show the data for the entered parameter and treat whatever key*/
   /* was entered like an 'ENTER' key.*/
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf10
   || converseVar.eventKey is pf11)
    if (IV0WM005.IV-IVC-ID is modified
     && IV0WM005.IV-IVC-ID != IV0W-CRCT-REC.IV-IVC-ID)
      converseLib.validationFailed(105);
      IV0WM001.IV-IVC-ID = IV0WM005.IV-IVC-ID;
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
      IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
      IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
      IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
      IV0W-WS-REC.IV0WW-NEW-IVC-FLAG = "Y";
      IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG = "N";
      return;
    else
      if (IV0WM005.IV-CRCT-SEQ-NBR is modified
       && IV0WM005.IV-CRCT-SEQ-NBR != IV0W-CRCT-REC.IV-CRCT-SEQ-NBR)
        converseLib.validationFailed(105);
        IV0WM001.IV-CRCT-SEQ-NBR = IV0WM005.IV-CRCT-SEQ-NBR;
        IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
        IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
        IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
        IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
        IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
        IV0W-WS-REC.IV0WW-NEW-IVC-FLAG = "N";
        IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG = "Y";
        return;
      end
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf10) /* show data for next correction seq#*/
    if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      converseLib.validationFailed(116); /* PF10 NOT ALLOWED IN UPDATE MODE*/
      return;
    else
      if (IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ == IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ)
        IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
        converseLib.validationFailed(102); /* already at last correction*/
        return;
      else
        IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ + 1;
        IV0WM005.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ;
        IV0WM001.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ;
        IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
        IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
        IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
        IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
        return;
      end
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf11) /* show data for previous correction seq*/
                                   /* #*/
    if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      converseLib.validationFailed(117); /* PF11 NOT ALLOWED IN UPDATE MODE*/
      return;
    else
      if (IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ == 0)
        IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
        converseLib.validationFailed(102); /* already at last correction*/
        return;
      else
        IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ - 1;
        IV0WM005.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ;
        IV0WM001.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ;
        IV0W-WS-REC.IV0WW-UPDT-MODE-FL = "N";
        ;
        IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
        IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
        IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
        IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
        return;
      end
    end
  end
  ;
  ;
  if (converseVar.eventKey is enter /* process data entered on iv0wm005*/
   || converseVar.eventKey is pf7   
   || converseVar.eventKey is pf8   
   || converseVar.eventKey is pf9) 
    if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y") /* not in update mode*/
      IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "Y";
      IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "Y";
      return;
    else
      IV0W-WS-REC.IV0WW-DO-EDITS-FLAG = "N";
      IV0W-WS-REC.IV0WW-UPDT-WS-FLAG = "N";
      return;
    end
  end
  ;
  IV0W-WS-REC.IV0WW-END-OF-SCRN-FL = "Y";
  IV0W-WS-REC.IV0WW-END-OF-APPL-FL = "Y";
  COMMAREA.CATOAP = " ";
  converseLib.validationFailed(3); /* INVALID FUNCTION KEY*/
  IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
  return;
  ;
end // end IV0W210

// do fastpath exit if requested
Function IV0W211()
   /* **********************************************************************/
   /* iv0w211 - do fastpath exit if requested                            **/
   /* **********************************************************************/
   /* **********************************************************************/
   /* *     M A I N T E N A N C E    H I S T O R Y    L O G               **/
   /* *-------------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                     **/
   /* *-------------------------------------------------------------------**/
   /* * 01-17-95  GDECKE  NEW APPLICATION                                 **/
   /* **********************************************************************/
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W211";
  ;
  ;
  if (IV0WM005.CATOAP != " " /* if any fastpath data entered*/
   || IV0WM005.CAITEM != " ")
    ;
    IV0WS-LOST-IP-TEST();
    if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
      return;
    end
    ;
    COMMAREA.CATOAP = IV0WM005.CATOAP;
    COMMAREA.CAITEM = IV0WM005.CAITEM;
    XSIVXF(); /* ATTEMPT TO PASS*/
    if (converseVar.validationMsgNum == 0)
      XSEXIT();
      /* NO ROOM TO SHOW XSEXIT RETURN MESSAGE*/
      /* MOVE COMMAREA.CAMSG TO IV0WM005.XXXMSG;/* PASS WAS NOT SUCCESSFUL*/
      set IV0WM005.CATOAP cursor, bold; /* SHOW MESSAGE*/
      set IV0WM005 alarm;
      converseLib.validationFailed(18);
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      return;
    else
      set IV0WM005.CAITEM cursor, bold;
      converseLib.validationFailed(77);
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      return;
    end
  end
  ;
end // end IV0W211

// set fields defined
Function IV0W212()
   /* IV0W212 - SET FIELDS DEFINED*/
   /* **********************************************************************/
   /* *      M A I N T E N A N C E      H I S T O R Y     L O G           **/
   /* *-------------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                     **/
   /* *-------------------------------------------------------------------**/
   /* * 02-12-95  GDECKE  NEW APPLICATION                                 **/
   /* **********************************************************************/
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W212";
  ;
  IV0W-WS-REC.IV0WW-MAP5-DATA-ENTR-FL = "N";
  ;
  set IV0WM005.IV0WM-SEL-SY-STY-NBR initialAttributes;
  set IV0WM005.IV0WM-SEL-SY-COLR-CD-ID initialAttributes;
  set IV0WM005.IV0WM-SEL-XDM-DIM-CD initialAttributes;
  ;
  IV0W-WS-REC.IV0WW-INDEX2 = 1;
  IV0W-WS-REC.IV0WW-INDEX3 = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR;
   /* set attributes while still in iv0w-crct-rec*/
  while (IV0W-WS-REC.IV0WW-INDEX2 <= 15
   && IV0W-WS-REC.IV0WW-INDEX3 <= 300)
    if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y"
     && IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] != "      "
     && IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] != 
    IV0W-CRCT-REC.CU-PROD-ID[IV0WW-INDEX3])
      IV0W-WS-REC.IV0WW-MAP5-DATA-ENTR-FL = "Y";
      set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] modified, bold;
    else
      set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] initialAttributes;
    end
    ;
    IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
    IV0W-WS-REC.IV0WW-INDEX3 = IV0W-WS-REC.IV0WW-INDEX3 + 1;
  end
  ;
   /* set attributes where screen line corr to area past end of crct-rec*/
  while (IV0W-WS-REC.IV0WW-INDEX2 <= 15
  )
    set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] skip, invisible;
    ;
    IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
  end
  ;
end // end IV0W212

// SET ATTR: USE UPDT MODE, CHGS
Function IV0W213()
   /* IV0W213 - SET FIELD ATTRIBUTES USING UPDATE/INQUIRY MODE FLAG AND*/
   /* WHETHER THE FIELDS HAVE BEEN CHANGED.*/
   /* **********************************************************************/
   /* *      M A I N T E N A N C E      H I S T O R Y     L O G           **/
   /* *-------------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                     **/
   /* *-------------------------------------------------------------------**/
   /* * 03-07-95  GDECKE  NEW APPLICATION                                 **/
   /* **********************************************************************/
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W213";
  ;
  ;
   /* if update mode and alteable fields have been changed to new values*/
   /* then set the attribute to bright.*/
  ;
   /* IF IV0W-WS-REC.IV0WW-UPDT-MODE-FL = 'Y';*/
    /* IF IV0WM001.XIC-IVC-CRCTRSN-CD NE IV0W-CRCT-REC.XIC-IVC-CRCTRSN-CD;*/
      /* SET IV0WM001.XIC-IVC-CRCTRSN-CD MODIFIED,BRIGHT;*/
    /* ELSE;*/
      /* SET IV0WM001.XIC-IVC-CRCTRSN-CD DEFINED;*/
    /* END;*/
   /* ELSE;*/
    /* SET IV0WM001.XIC-IVC-CRCTRSN-CD AUTOSKIP;*/
   /* END;*/
  ;
  ;
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    set IV0WM005.IV-CRCT-SEQ-NBR skip, modified, invisible;
    set IV0WM005.IV-MAX-CRCT-SEQ skip, modified, invisible;
  else
    set IV0WM005.IV-CRCT-SEQ-NBR skip;
    set IV0WM005.IV-MAX-CRCT-SEQ skip;
  end
  ;
end // end IV0W213

// edit entries
Function IV0W220()
   /* *************************************************************/
   /* *                                                          **/
   /* *                   EDIT ENTRIES                           **/
   /* *                                                          **/
   /* *    1) if data changed on screen.                         **/
   /* *       - If no errors, check for a selection code of AA   **/
   /* *           or SA                                          **/
   /* *       - If still no errors, check detail lines from the  **/
   /* *           bottom up.                                     **/
   /* *    2) Edit the header invoice number entered.            **/
   /* *                                                          **/
   /* *                                                          **/
   /* *************************************************************/
   /* *      M A I N T E N A N C E    H I S T O R Y              **/
   /* *************************************************************/
   /* * 02-21-95  GDECKE   NEW APPLICATION                       **/
   /* *************************************************************/
  ;
  ;
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0W220";
  ;
   /* this test will prevent further editing or updating of this*/
   /* message due to not wishing to allow changes to be made while*/
   /* viewing a correction sequence other than then most current.*/
  ;
  if (IV0WM005.IV-CRCT-SEQ-NBR != IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ)
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    return;
  end
  ;
   /* IF THERE IS DATA ON THE LINE AND THE SKU VALUE HAS CHANGED THEN*/
   /* TRY TO FIND THE COMPANY, DEPARTMENT AND CU-PROD-ID. IF NOT FOUND*/
   /* SHOW ERROR NUMBER 112.*/
  ;
  IV0W-WS-REC.IV0WW-INDEX2 = 15;
  IV0WW-INDEX3 = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR;
  IV0WW-INDEX3 = IV0WW-INDEX3 + 14;
  ;
  while (IV0W-WS-REC.IV0WW-INDEX2 > 0)
    ;
    if (IV0WW-INDEX3 <= 300
     && IV0WM005.IV0WM-SY-STY-NBR[IV0WW-INDEX2] != "      "
     && IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] != 
    IV0W-CRCT-REC.CU-PROD-ID[IV0WW-INDEX3])
      IV0WS-EDIT-CUCPX();
    end
    ;
    IV0WW-INDEX2 = IV0WW-INDEX2 - 1;
    IV0WW-INDEX3 = IV0WW-INDEX3 - 1;
    ;
    if (IV0WW-INDEX3 < 1)
      IV0WW-INDEX2 = 0;
    end
    ;
  end
  ;
  ;
   /* IF in update mode and user pressed enter, and at least one cu-prod-id*/
   /* was changed then show message #113 - transfer to map5 to do update.*/
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y"
   && converseVar.eventKey is enter
   && IV0W-WS-REC.IV0WW-ERROR-FLAG == "N")
    IV0WS-MAP5-CHANGED();
    if (IV0W-WS-REC.IV0WW-MAP5-DATA-CHG-FL == "Y"
     || IV0W-WS-REC.IV0WW-MAP5-DATA-ENTR-FL == "Y")
      converseLib.validationFailed(113);
    end
  end
  ;
   /* if select color or dimension was entered but no select style*/
   /* show message requiring select style id.*/
  ;
  if (IV0WM005.IV0WM-SEL-SY-COLR-CD-ID == "    "
   && IV0WM005.IV0WM-SEL-SY-STY-NBR == "      ")
    IV0WM005.IV0WM-SEL-XDM-DIM-CD = "  ";
  end
  ;
  if (IV0WM005.IV0WM-SEL-SY-COLR-CD-ID != "    "
   || IV0WM005.IV0WM-SEL-XDM-DIM-CD != "  ")
    if (IV0WM005.IV0WM-SEL-SY-STY-NBR == "      ")
      converseLib.validationFailed(122);
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      set IV0WM005.IV0WM-SEL-SY-STY-NBR cursor, modified, red;
      return;
    end
  end
  ;
   /* ADD PHASE 2 EDITS HERE*/
  ;
end // end IV0W220

// MOVE GL DATA TO MAP 1 FIELDS
Function IV0WS-BLD-MAP-GLS()
   /* MOVE GL DATA TO MAP 1 FIELDS*/
   /* *********************************************************************/
   /* *     M A I N T E N A N C E     H I S T O R Y     L O G            **/
   /* *------------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                    **/
   /* *------------------------------------------------------------------**/
   /* * 01-06-95  GDECKE  NEW APPLICATION                                **/
   /* *********************************************************************/
   /*  */
  ;
     /* IV0WM-TDSCT-AMT*/
     /* IV0WM-TDSCT-FACE-PCT*/
     /* IV0WM-TDSCT-NET-FL*/
     /* IV0WM-TDSCT-BANK-PCT*/
  ;
    /* MOVE TRADE DISCOUNT OFF THE FACE TO MAP*/
  ;
  if (IV0W-CRCT-REC.IV-GL-AMT[1] != 0)
    IV0WM001.IV0WM-TDSCT-AMT = IV0W-CRCT-REC.IV-GL-AMT[1];
    if (IV0W-CRCT-REC.IV-GL-AMT[1] != IV0W-ORIG-REC.IV-GL-AMT[1])
      set IV0WM001.IV0WM-TDSCT-AMT bold;
    end
    IV0WM001.IV0WM-TDSCT-FACE-PCT = IV0W-CRCT-REC.IV-GL-PCT[1];
    if (IV0W-CRCT-REC.IV-GL-PCT[1] != IV0W-ORIG-REC.IV-GL-PCT[1])
      set IV0WM001.IV0WM-TDSCT-FACE-PCT bold;
    end
    IV0WM001.IV0WM-TDSCT-NET-FL = IV0W-CRCT-REC.IV-GL-NET-FL[1];
    if (IV0W-CRCT-REC.IV-GL-NET-FL[1] != IV0W-ORIG-REC.IV-GL-NET-FL[1])
      set IV0WM001.IV0WM-TDSCT-NET-FL bold;
    end
    IV0WM001.IV0WM-TDSCT-BANK-PCT = 0;
  end
  ;
    /* MOVE TRADE DISCOUNT BANKED TO MAP*/
  ;
  if (IV0W-CRCT-REC.IV-GL-AMT[2] != 0)
    IV0WM001.IV0WM-TDSCT-AMT = IV0W-CRCT-REC.IV-GL-AMT[2];
    if (IV0W-CRCT-REC.IV-GL-AMT[2] != IV0W-ORIG-REC.IV-GL-AMT[2])
      set IV0WM001.IV0WM-TDSCT-AMT bold;
    end
    IV0WM001.IV0WM-TDSCT-FACE-PCT = 0;
    IV0WM001.IV0WM-TDSCT-NET-FL = IV0W-CRCT-REC.IV-GL-NET-FL[2];
    if (IV0W-CRCT-REC.IV-GL-NET-FL[2] != IV0W-ORIG-REC.IV-GL-NET-FL[2])
      set IV0WM001.IV0WM-TDSCT-NET-FL bold;
    end
    IV0WM001.IV0WM-TDSCT-BANK-PCT = IV0W-CRCT-REC.IV-GL-PCT[2];
    if (IV0W-CRCT-REC.IV-GL-PCT[2] != IV0W-ORIG-REC.IV-GL-PCT[2])
      set IV0WM001.IV0WM-TDSCT-BANK-PCT bold;
    end
  end
  ;
     /* IV0WM-DEFECT-NET-FL*/
     /* IV0WM-DEFECT-FACE-PCT*/
     /* IV0WM-DEFECT-NET-FL*/
     /* IV0WM-DEFECT-BANK-PCT*/
  ;
    /* MOVE DEFECT ALLOWANCE OFF THE FACE TO MAP*/
  ;
  if (IV0W-CRCT-REC.IV-GL-AMT[3] != 0)
    IV0WM001.IV0WM-DEFECT-AMT = IV0W-CRCT-REC.IV-GL-AMT[3];
    if (IV0W-CRCT-REC.IV-GL-AMT[3] != IV0W-ORIG-REC.IV-GL-AMT[3])
      set IV0WM001.IV0WM-DEFECT-AMT bold;
    end
    IV0WM001.IV0WM-DEFECT-FACE-PCT = IV0W-CRCT-REC.IV-GL-PCT[3];
    if (IV0W-CRCT-REC.IV-GL-PCT[3] != IV0W-ORIG-REC.IV-GL-PCT[3])
      set IV0WM001.IV0WM-DEFECT-FACE-PCT bold;
    end
    IV0WM001.IV0WM-DEFECT-NET-FL = IV0W-CRCT-REC.IV-GL-NET-FL[3];
    if (IV0W-CRCT-REC.IV-GL-NET-FL[3] != IV0W-ORIG-REC.IV-GL-NET-FL[3])
      set IV0WM001.IV0WM-DEFECT-NET-FL bold;
    end
    IV0WM001.IV0WM-DEFECT-BANK-PCT = 0;
  end
  ;
    /* MOVE DEFECT ALLOWANCE BANKED TO MAP*/
  ;
  if (IV0W-CRCT-REC.IV-GL-AMT[4] != 0)
    IV0WM001.IV0WM-DEFECT-AMT = IV0W-CRCT-REC.IV-GL-AMT[4];
    if (IV0W-CRCT-REC.IV-GL-AMT[4] != IV0W-ORIG-REC.IV-GL-AMT[4])
      set IV0WM001.IV0WM-DEFECT-AMT bold;
    end
    IV0WM001.IV0WM-DEFECT-FACE-PCT = 0;
    IV0WM001.IV0WM-DEFECT-NET-FL = IV0W-CRCT-REC.IV-GL-NET-FL[4];
    if (IV0W-CRCT-REC.IV-GL-NET-FL[4] != IV0W-ORIG-REC.IV-GL-NET-FL[4])
      set IV0WM001.IV0WM-DEFECT-NET-FL bold;
    end
    IV0WM001.IV0WM-DEFECT-BANK-PCT = IV0W-CRCT-REC.IV-GL-PCT[4];
    if (IV0W-CRCT-REC.IV-GL-PCT[4] != IV0W-ORIG-REC.IV-GL-PCT[4])
      set IV0WM001.IV0WM-DEFECT-BANK-PCT bold;
    end
  end
  ;
     /* IV0WM-DIR-SHIP-AMT*/
     /* IV0WM-DIR-SHIP-FACE-PCT*/
     /* IV0WM-DIR-SHIP-NET-FL*/
  ;
    /* MOVE DIRECT SHIP GL TO MAP*/
  ;
  IV0WM001.IV0WM-DIR-SHP-AMT = IV0W-CRCT-REC.IV-GL-AMT[5];
  if (IV0W-CRCT-REC.IV-GL-AMT[5] != IV0W-ORIG-REC.IV-GL-AMT[5])
    set IV0WM001.IV0WM-DIR-SHP-AMT bold;
  end
  IV0WM001.IV0WM-DIR-SHP-FACE-PCT = IV0W-CRCT-REC.IV-GL-PCT[5];
  if (IV0W-CRCT-REC.IV-GL-PCT[5] != IV0W-ORIG-REC.IV-GL-PCT[5])
    set IV0WM001.IV0WM-DIR-SHP-FACE-PCT bold;
  end
  IV0WM001.IV0WM-DIR-SHP-NET-FL = IV0W-CRCT-REC.IV-GL-NET-FL[5];
  if (IV0W-CRCT-REC.IV-GL-NET-FL[5] != IV0W-ORIG-REC.IV-GL-NET-FL[5])
    set IV0WM001.IV0WM-DIR-SHP-NET-FL bold;
  end
  ;
     /* IV0WM-SPEC-NET-AMT*/
     /* IV0WM-SPEC-NET-FACE-PCT*/
     /* IV0WM-SPEC-NET-NET-FL*/
  ;
    /* MOVE SPECIAL NET GL TO MAP*/
  ;
  IV0WM001.IV0WM-SPEC-NET-AMT = IV0W-CRCT-REC.IV-GL-AMT[7];
  if (IV0W-CRCT-REC.IV-GL-AMT[7] != IV0W-ORIG-REC.IV-GL-AMT[7])
    set IV0WM001.IV0WM-SPEC-NET-AMT bold;
  end
  IV0WM001.IV0WM-SPEC-NET-FACE-PCT = IV0W-CRCT-REC.IV-GL-PCT[7];
  if (IV0W-CRCT-REC.IV-GL-PCT[7] != IV0W-ORIG-REC.IV-GL-PCT[7])
    set IV0WM001.IV0WM-SPEC-NET-FACE-PCT bold;
  end
  IV0WM001.IV0WM-SPEC-NET-FL = IV0W-CRCT-REC.IV-GL-NET-FL[7];
  if (IV0W-CRCT-REC.IV-GL-NET-FL[7] != IV0W-ORIG-REC.IV-GL-NET-FL[7])
    set IV0WM001.IV0WM-SPEC-NET-FL bold;
  end
  ;
     /* IV0WM-CASH-BANK-PCT*/
  ;
    /* MOVE CASH BANK PCT GL TO MAP*/
  ;
  IV0WM001.IV0WM-CASH-BANK-PCT = IV0W-CRCT-REC.IV-GL-PCT[6];
  if (IV0W-CRCT-REC.IV-GL-PCT[6] != IV0W-ORIG-REC.IV-GL-PCT[6])
    set IV0WM001.IV0WM-CASH-BANK-PCT bold;
  end
  ;
     /* IV0WM-SHIP-CHG-AMT*/
    /* MOVE SHIP CHARGE AMOUNT TO MAP*/
  ;
  IV0WM001.IV0WM-SHIP-CHG-AMT = IV0W-CRCT-REC.IV-GL-AMT[8];
  if (IV0W-CRCT-REC.IV-GL-AMT[8] != IV0W-ORIG-REC.IV-GL-AMT[8])
    set IV0WM001.IV0WM-SHIP-CHG-AMT bold;
  end
  ;
     /* IV0WM-COOP-PCT*/
  ;
    /* MOVE COOP PCT GL TO MAP*/
  ;
  IV0WM001.IV0WM-COOP-PCT = IV0W-CRCT-REC.IV-GL-PCT[9];
  if (IV0W-CRCT-REC.IV-GL-PCT[9] != IV0W-ORIG-REC.IV-GL-PCT[9])
    set IV0WM001.IV0WM-COOP-PCT bold;
  end
  ;
     /* IV0WM-SML-ORD-CHG*/
  ;
    /* MOVE SMALL ORDER CHARGE AMOUNT TO MAP*/
  ;
  IV0WM001.IV0WM-SML-ORD-CHG = IV0W-CRCT-REC.IV-GL-AMT[11];
  if (IV0W-CRCT-REC.IV-GL-AMT[11] != IV0W-ORIG-REC.IV-GL-AMT[11])
    set IV0WM001.IV0WM-SML-ORD-CHG bold;
  end
  ;
     /* IV0WM-FRT-ALW-AMT*/
  ;
    /* MOVE FREIGHT ALLOWANCE AMOUNT TO MAP*/
  ;
  IV0WM001.IV0WM-FRT-ALW-AMT = IV0W-CRCT-REC.IV-GL-AMT[10];
  if (IV0W-CRCT-REC.IV-GL-AMT[10] != IV0W-ORIG-REC.IV-GL-AMT[10])
    set IV0WM001.IV0WM-FRT-ALW-AMT bold;
  end
  ;
  ;
end // end IV0WS-BLD-MAP-GLS

// GATHER DATA & BUILD HEADER MAP
Function IV0WS-BUILD-MAP1()
   /* GATHER INVOICE CORRECTION DATA AND BUILD HEADER MAP (IV0WM001)*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-BUILD-MAP1";
  ;
    /* clear out db2 table areas and data save areas for new ivc or seq#.*/
  ;
  IV0WS-CLEAR-TABLES();
  ;
    /* CLEAR ERROR FLAG BEFORE STARTING*/
  IV0W-WS-REC.IV0WW-ERROR-FLAG = "N";
  ;
    /* SHOW BLANK MAP IF NO INVOICE NUMBER*/
  ;
  if (IV0WM001.IV-IVC-ID == 0)
    set IV0WM001 initial;
    set IV0WM005 initial;
    IV0WM001.XXXCURDT = VGVar.currentShortGregorianDate;
    IV0WM005.XXXCURDT = VGVar.currentShortGregorianDate;
    IV0WM001.XXXERRID = "IV0W100 ";
    IV0WM005.XXXERRID = "IV0W200 ";
    IV0W-WS-REC.IV0WW-NEW-IVC-FLAG = "Y";
    IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG = "N";
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    ;
    if (IV0W-WS-REC.IV0WW-SHOW-MSG-82-FLAG == "Y")
      converseLib.validationFailed(82);
      set IV0WM001.IV-IVC-ID cursor, modified, red;
    else
      IV0W-WS-REC.IV0WW-SHOW-MSG-82-FLAG = "Y";
      set IV0WM001.IV-IVC-ID initialAttributes;
    end
    ;
    if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
      IV0WM001.IV0WM-UPDT-MODE-DESC = "UPDATE";
      IV0WM005.IV0WM-UPDT-MODE-DESC = "UPDATE";
    else
      IV0WM001.IV0WM-UPDT-MODE-DESC = "INQUIRY";
      IV0WM005.IV0WM-UPDT-MODE-DESC = "INQUIRY";
    end
    ;
    return;
  end
  ;
    /* after this point, show message #82 (ivc required) as needed*/
  IV0W-WS-REC.IV0WW-SHOW-MSG-82-FLAG = "Y";
  set IV0WM001.IV-IVC-ID initialAttributes;
  ;
    /* clear out the product sku edit/override table. This table keeps*/
    /* track of which sku's have been edited or overriden.*/
  ;
  IV0W-WS-REC.IV0WW-INDEX2 = 1;
  while (IV0W-WS-REC.IV0WW-INDEX2 <= 300)
    IV0W-WS-REC.IV0WW-SKU-OVRD-FL[IV0WW-INDEX2] = " ";
    IV0W-WS-REC.IV0WW-SAVE-OVRD-CU-PROD-ID[IV0WW-INDEX2] = " ";
    IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
  end
  ;
    /* RESET MESSAGE 119 SHOWN FLAG AND STYLE*/
  ;
  IV0W-WS-REC.IV0WW-MSG-119-SHOWN-FL = "N";
  IV0W-WS-REC.IV0WW-MSG-119-PREV-STY = " ";
  ;
  ;
   /* GET HIGHEST SEQUENCE NUMBER FROM VCORSQ01 FOR THE INVOICE*/
   /* IF CORSQ FOUND SAVE THE SEQUENCE NUMBER, OTHERWISE SET SAVED*/
   /* SEQUENCE NUMBER TO ZERO.*/
  ;
  IV0WS-GET-MAX-SEQ();
  ;
  IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ = IV0WM001.IV-CRCT-SEQ-NBR;
  ;
    /* RESTRICT ACCEPTABLE VALUES FOR REQUESTED SEQUENCE NUMBER*/
  ;
  if (IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ < 0)
    IV0WW-REQ-CRCT-SEQ = 0;
    IV0WM001.IV-CRCT-SEQ-NBR = 0;
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    converseLib.validationFailed(83);
    return;
  end
  ;
   /* DEFAULT SEQ NUMBR TO 0 IF INVOICE HAS NO CORRECTIONS*/
  ;
  if (IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ == 0)
    IV0WW-REQ-CRCT-SEQ = 0;
    IV0WM001.IV-CRCT-SEQ-NBR = 0;
  end
  ;
   /* DEFAULT SEQ NUMBR TO MAX IF NEW INVOICE REQUESTED*/
  ;
  if (IV0W-WS-REC.IV0WW-NEW-IVC-FLAG == "Y")
    IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
    IV0WM001.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
    IV0W-WS-REC.IV0WW-NEW-IVC-FLAG = "N";
    IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG = "N";
  else
    if (IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG == "Y")
      IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ = IV0WM001.IV-CRCT-SEQ-NBR;
      IV0W-WS-REC.IV0WW-NEW-IVC-FLAG = "N";
      IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG = "N";
    end
  end
  ;
   /* DEFAULT SEQ NUMBR TO MAX IF UPDATE MODE AND SEQ NOT ALREADY = MAX*/
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y"
   && IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ != IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ)
    IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
    IV0WM001.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
    IV0W-WS-REC.IV0WW-NEW-IVC-FLAG = "N";
    IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG = "N";
    converseLib.validationFailed(115);
  end
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "N"
   && IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ > IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ)
    if (IV0WM001.IV-CRCT-SEQ-NBR == 99) /* force use of most current crct*/
      IV0WW-REQ-CRCT-SEQ = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
      IV0WM001.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
    else
      IV0WW-REQ-CRCT-SEQ = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
      IV0WM001.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      converseLib.validationFailed(83);
      return;
    end
  end
  ;
     /* INITIALIZE IVC-ID AND SEQ# ON IV0W-CRCT-REC*/
  ;
  IV0W-CRCT-REC.IV-IVC-ID = IV0WM001.IV-IVC-ID;
  IV0W-CRCT-REC.IV-CRCT-SEQ-NBR = IV0WM001.IV-CRCT-SEQ-NBR;
    /* GET INVOICE DATA FROM REGULAR INVOICE TABLES*/
  ;
    /* fetch data from dinvc.vivhdr05 - move to iv0w-crct-rec*/
  IV0WS-GET-IVC-HDR();
  if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
    return;
  end
  ;
    /* fetch data from dinvc.vivhdx02 - move to iv0w-crct-rec*/
  IV0WS-GET-IVC-HDX();
  if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
    return;
  end
  ;
    /* fetch data from dinvc.vivadr02 - move to iv0w-crct-rec*/
  IV0WS-GET-IVC-ADR();
  if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
    return;
  end
  ;
    /* fetch data from dinvc.vivglx02 - move to iv0w-crct-rec*/
  IV0WS-GET-IVC-GL();
  ;
    /* fetch data from dinvc.vivglx02 - move to iv0w-crct-rec*/
  IV0WS-GET-IVC-ITM();
  ;
    /* GET CUSTOMER COMPANY NAME*/
  ;
  IV0WS-GET-CMPNY-NM();
  if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "Y")
    return;
  end
  IV0W-ORIG-REC.CU-CO-NM = IV0W-CRCT-REC.CU-CO-NM;
  ;
    /* GET CUSTOMER STORE SELF ID*/
  ;
  IV0WS-GET-SELF-ID();
  IV0W-ORIG-REC.CU-STOR-SELF-ID = IV0W-CRCT-REC.CU-STOR-SELF-ID;
  ;
    /* GET name of carrier using carrier code*/
  ;
  IV0WS-GET-CARRIER();
  ;
  ;
    /* MOVE CORRECTION TABLE DATA TO ORIGINAL TABLE DATA*/
  ;
  IV0WS-CRCT-TO-ORIG();
  ;
    /* STOP HERE IF NO PREVIOUS CORRECTION WAS DONE*/
  ;
  if (IV0W-WS-REC.IV0WW-PREV-CRCT-FLAG == "N")
    ;
    /* MOVE CORRECTION DATA FROM IV0W-CRCT-REC TO HEADER MAP*/
    IV0WS-CRCT-TO-UPDT();
    IV0WS-LOAD-HDR-MAP();
    IV0WS-LOAD-ITM-MAP();
    return;
  end
  ;
    /* GET TEXT DATA FOR THE INVOICE & SEQ# REQUESTED*/
  ;
  IV0WS-GET-REQ-TEXT();
  ;
    /* GET VCORSQ01 FOR THE INVOICE & SEQ# REQUESTED*/
  ;
  set SQLCA empty;
  set VCORSQ01 empty;
  VCORSQ01.IV-IVC-ID = IV0WM001.IV-IVC-ID;
  VCORSQ01.IV-CRCT-SEQ-NBR = IV0WM001.IV-CRCT-SEQ-NBR;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S "; /* GET CORSQ FOR REQ*/
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORSQ();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    VCORSQ01.IV-CRCT-SEQ-NBR = 0;
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
     /* MOVE VCORSQ01 DATA TO IV0W-CRCT-REC*/
    IV0W-CRCT-REC.IV-IVC-PART-CHAR = VCORSQ01.IV-IVC-PART-CHAR;
    IV0W-CRCT-REC.IV-IVC-ID = VCORSQ01.IV-IVC-ID;
    IV0W-CRCT-REC.IV-CRCT-SEQ-NBR = VCORSQ01.IV-CRCT-SEQ-NBR;
    IV0W-CRCT-REC.IV-CRCT-STAT-IND = VCORSQ01.IV-CRCT-STAT-IND;
    IV0W-CRCT-REC.XIC-IVC-CRCTRSN-CD = VCORSQ01.XIC-IVC-CRCTRSN-CD;
    IV0W-CRCT-REC.XXX-USER-ID = VCORSQ01.XXX-USER-ID;
    IV0W-CRCT-REC.ZZ-CHNG-DT = VCORSQ01.ZZ-CHNG-DT;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      /* MOVE DEFAULTS TO VCORSQ01 TABLE*/
      IV0W-WS-REC.IV0WW-IVC-ID-CHAR = IV0WM001.IV-IVC-ID;
      IV0W-CRCT-REC.IV-IVC-PART-CHAR = IV0W-WS-REC.IV0WW-IVC-PART-CHAR;
      IV0W-CRCT-REC.IV-IVC-ID = IV0WM001.IV-IVC-ID;
      IV0W-CRCT-REC.IV-CRCT-SEQ-NBR = 0;
      IV0W-CRCT-REC.IV-CRCT-STAT-IND = "X";
      IV0W-CRCT-REC.XIC-IVC-CRCTRSN-CD = " ";
      IV0W-CRCT-REC.XXX-USER-ID = " ";
    else
      return;
    end
  end
  ;
    /* GET CORRECTION HEADER DATA FOR IVC AND SEQ# REQUESTED*/
  ;
  IV0WS-GET-REQ-HDR();
  ;
    /* GET CORRECTION GL DATA FOR IVC AND SEQ# REQUESTED*/
  ;
  IV0WS-GET-REQ-GL();
  ;
    /* GET CORRECTION ITEM DATA FOR IVC AND SEQ# REQUESTED.*/
  ;
  IV0WS-GET-REQ-ITM();
  ;
    /* MOVE CORRECTION LINE ITEM DATA TO UPDATE SAVE AREA*/
  ;
  IV0WS-CRCT-TO-UPDT();
  ;
    /* MOVE CORRECTION DATA FROM IV0W-CRCT-REC TO HEADER MAP*/
  ;
  IV0WS-LOAD-HDR-MAP();
  ;
    /* MOVE CORRECTION DATA FROM IV0W-CRCT-REC TO DETAIL MAP*/
  ;
  IV0WS-LOAD-ITM-MAP();
  ;
  ;
end // end IV0WS-BUILD-MAP1

// CALL IOMOD - DCUST.VCMPNY01
Function IV0WS-CALL-CMPNY()
   /* CALL IO MODULE IO0240   TO ACCESS VIEW DCUST.VCMPNY01*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-CMPNY";
  ;
  call "IO0240" (IV0W-IOMOD-REC, SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(96); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM001";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-CMPNY";
  TA1REC.TA1LOCAT[4] = "VCMPNY01";
  TA1REC.TA1DBASE = "DCUST"; /* database*/
  TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = IV0WM001.IV-IVC-ID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-CMPNY

// CALL IOMOD - IVC CRCT GL'S
Function IV0WS-CALL-CORGL()
   /* CALL IO MODULE VCORGL01 TO ACCESS VIEW DINVC.VCORGL01*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-CORGL";
  ;
  call "VCORGL01" (IV0W-IOMOD-REC, SQLCA, VCORGL01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(86); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM001";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-CORGL";
  TA1REC.TA1LOCAT[4] = "VCORGL01";
  TA1REC.TA1DBASE = "DINVC"; /* database*/
  TA1REC.TA1TBLVU = "VCORGL01"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = VCORGL01.IV-IVC-ID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-CORGL

// CALL IOMOD - IVC CRCT HEADER
Function IV0WS-CALL-CORHD()
   /* CALL IO MODULE VCORHD01 TO ACCESS VIEW DINVC.VCORHD01*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-CORHD";
  ;
  call "VCORHD01" (IV0W-IOMOD-REC, SQLCA, VCORHD01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(85); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM001";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-CORHD";
  TA1REC.TA1LOCAT[4] = "VCORHD01";
  TA1REC.TA1DBASE = "DINVC"; /* database*/
  TA1REC.TA1TBLVU = "VCORHD01"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = VCORHD01.IV-IVC-ID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-CORHD

// CALL IOMOD - IVC CRCT ITEMS
Function IV0WS-CALL-CORIT()
   /* CALL IO MODULE VCORIT01 TO ACCESS VIEW DINVC.VCORIT01*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-CORIT";
  ;
  call "VCORIT01" (IV0W-IOMOD-REC, SQLCA, VCORIT01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(87); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM001";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-CORIT";
  TA1REC.TA1LOCAT[4] = "VCORIT01";
  TA1REC.TA1DBASE = "DINVC"; /* database*/
  TA1REC.TA1TBLVU = "VCORIT01"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = VCORIT01.IV-IVC-ID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-CORIT

// CALL IOMOD - IVC CRCT SEQUENCE
Function IV0WS-CALL-CORSQ()
   /* CALL IO MODULE VCORSQ01 TO ACCESS VIEW DINVC.VCORSQ01*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-CORSQ";
  ;
  call "VCORSQ01" (IV0W-IOMOD-REC, SQLCA, VCORSQ01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(99); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM001";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-CORSQ";
  TA1REC.TA1LOCAT[4] = "VCORSQ01";
  TA1REC.TA1DBASE = "DINVC"; /* database*/
  TA1REC.TA1TBLVU = "VCORSQ01"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = VCORSQ01.IV-IVC-ID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-CORSQ

// CALL IOMOD - IVC CRCT TEXT
Function IV0WS-CALL-CORTX()
   /* CALL IO MODULE VCORTX01 TO ACCESS VIEW DINVC.VCORTX01*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-CORTX";
  ;
  call "VCORTX01" (IV0W-IOMOD-REC, SQLCA, VCORTX01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(89); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM001";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-CORTX";
  TA1REC.TA1LOCAT[4] = "VCORTX01";
  TA1REC.TA1DBASE = "DINVC"; /* database*/
  TA1REC.TA1TBLVU = "VCORTX01"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = VCORTX01.IV-IVC-ID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-CORTX

// CALL IOMOD - DCUST.VCUSKU01
Function IV0WS-CALL-CUCPX()
   /* CALL IO MODULE IO5790   TO ACCESS VIEW DCUST.VCUSKU01*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 03-05-95  GDECKE  NEW APPLICATION                              **/
   /* * 08-06-97  CHELLM  REPLACED VCUSKU01 WITH VCUCPX01.             **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-CUCPX";
  ;
  call "CU1710" (WCU1710) {isNoRefresh = yes, isExternal = yes};
  ;
  if (WCU1710-RETURN-CODE == 0) /* customer product id found*/
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (WCU1710-RETURN-CODE == 1) /* customer product id not found*/
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (WCU1710-RETURN-CODE == 3) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(96); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM005";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-CUCPX";
  TA1REC.TA1LOCAT[4] = "VCUCPX01";
  TA1REC.TA1DBASE = "DCUST"; /* database*/
  TA1REC.TA1TBLVU = "VCUCPX01"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = IV0WM005.IV-IVC-ID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-CUCPX

// CALL IOMOD - IVC ADDRESS
Function IV0WS-CALL-IVADR()
   /* CALL IO MODULE VIVADR02 TO ACCESS VIEW DINVC.VIVADR02*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-IVADR";
  ;
  call "VIVADR02" (IV0W-IOMOD-REC, SQLCA, VIVADR02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(92); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM001";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-IVADR";
  TA1REC.TA1LOCAT[4] = "VIVADR01";
  TA1REC.TA1DBASE = "DINVC"; /* database*/
  TA1REC.TA1TBLVU = "VIVADR02"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = VIVADR02.IV0IVCID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-IVADR

// CALL IOMOD - IVC GL TABLE
Function IV0WS-CALL-IVGLX()
   /* CALL IO MODULE VIVGLX02 TO ACCESS VIEW DINVC.VIVGLX02*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-IVGLX";
  ;
  call "VIVGLX02" (IV0W-IOMOD-REC, SQLCA, VIVGLX02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(93); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM001";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-IVGLX";
  TA1REC.TA1LOCAT[4] = "VIVGLX01";
  TA1REC.TA1DBASE = "DINVC"; /* database*/
  TA1REC.TA1TBLVU = "VIVGLX02"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = VIVGLX02.IV0IVCID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-IVGLX

// CALL IOMOD - INVOICE HEADER
Function IV0WS-CALL-IVHDR()
   /* CALL IO MODULE VIVHDR05 TO ACCESS VIEW DINVC.VIVHDR05*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-IVHDR";
  ;
  call "VIVHDR05" (IV0W-IOMOD-REC, SQLCA, VIVHDR05) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(90); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM001";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-IVHDR";
  TA1REC.TA1LOCAT[4] = "VIVHDR05";
  TA1REC.TA1DBASE = "DINVC"; /* database*/
  TA1REC.TA1TBLVU = "VIVHDR05"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = VIVHDR05.IV0IVCID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-IVHDR

// CALL IOMOD - INVOICE HEADER XR
Function IV0WS-CALL-IVHDX()
   /* CALL IO MODULE VIVHDX02 TO ACCESS VIEW DINVC.VIVHDX02*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-IVHDX";
  ;
  call "VIVHDX02" (IV0W-IOMOD-REC, SQLCA, VIVHDX02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(91); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM001";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-IVHDX";
  TA1REC.TA1LOCAT[4] = "VIVHDX01";
  TA1REC.TA1DBASE = "DINVC"; /* database*/
  TA1REC.TA1TBLVU = "VIVHDX02"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = VIVHDX02.IV0IVCID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-IVHDX

// CALL IOMOD - IVC ITEM LINES
Function IV0WS-CALL-IVITM()
   /* CALL IO MODULE VIVITM02 TO ACCESS VIEW DINVC.VIVITM02*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-IVITM";
  ;
  call "VIVITM02" (IV0W-IOMOD-REC, SQLCA, VIVITM02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(94); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM001";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-IVITM";
  TA1REC.TA1LOCAT[4] = "VIVITM02";
  TA1REC.TA1DBASE = "DINVC"; /* database*/
  TA1REC.TA1TBLVU = "VIVITM01"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = VIVITM02.IV0IVCID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-IVITM

// CALL IOMOD - DCUST.VSTORE01
Function IV0WS-CALL-STORE()
   /* CALL IO MODULE IO0340   TO ACCESS VIEW DCUST.VSTORE01*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-STORE";
  ;
  call "IO0340" (IV0W-IOMOD-REC, SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(97); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM001";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-STORE";
  TA1REC.TA1LOCAT[4] = "VSTORE01";
  TA1REC.TA1DBASE = "DCUST"; /* database*/
  TA1REC.TA1TBLVU = "VSTORE01"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = IV0WM001.IV-IVC-ID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-STORE

// CALL IOMOD - DPICK.VCARR001
Function IV0WS-CALL-VCARR()
   /* CALL IO MODULE IO0860   TO ACCESS VIEW DPICK.VCARR001*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CALL-VCARR";
  ;
  call "IO0860" (IV0W-IOMOD-REC, SQLCA, TF1REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N";
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = IV0W-WS-REC.IV0WW-DEADLOCK-CT + 1;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 2)
      converseLib.validationFailed(98); /* database busy*/
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0W    ";
  TA1REC.TA1MAP = "IV0WM001";
  TA1REC.TA1LOCAT[3] = "IV0WS-CALL-CARR0";
  TA1REC.TA1LOCAT[4] = "VCARR001";
  TA1REC.TA1DBASE = "DPICK"; /* database*/
  TA1REC.TA1TBLVU = "VCARR001"; /* table view*/
  IV0W-WS-REC.IV0WW-DISP-IVC-ID = IV0WM001.IV-IVC-ID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0W-WS-REC.IV0WW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0WS-CALL-VCARR

// ADD STATEMENT GROUP DESCRIPTIO
Function IV0WS-CLEAR-TABLES()
   /* iv0ws-clear-tables - clear all tables for new invoice or seq nbr.*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 03-16-95  GDECKE  NEW APPLICATION                              **/
   /* * 08-06-97  CHELLM  REPLACED VCUSKU01 WITH VCUCPX01.             **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CLEAR-TABLES";
  ;
  set IV0W-CRCT-REC empty;
  set IV0W-ORIG-REC empty;
  set IV0W-UPDT-REC empty;
  set IV0W-ITEM-REC empty;
  set IV0W-PREV-REC empty;
  set VIVHDX02 empty;
  set VIVHDR05 empty;
  set VIVADR02 empty;
  set VIVGLX02 empty;
  set VIVITM02 empty;
  set VIVSIZ02 empty;
  set IV0REC empty;
  set IVFREC empty;
  set IVGREC empty;
  set VCORSQ01 empty;
  set VCORHD01 empty;
  set VCORGL01 empty;
  set VCORIT01 empty;
  set VCORSZ01 empty;
  set VCORTX01 empty;
  set KUCREC empty;
  set VCUCPX01 empty;
  set KULREC empty;
  set KUMREC empty;
end // end IV0WS-CLEAR-TABLES

// GATHER DATA & BUILD HEADER MAP
Function IV0WS-CRCT-M5-UPDT()
   /* use entered invoice LINE ITEM PRODUCT data to update or insert*/
   /* invoice correction and regular tables. MAP 5 LINE ITEM DATA*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-08-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CRCT-M5-UPDT";
  ;
    /* save previous data values to update record to minimize the number*/
    /* of fields to be moved from the map. phase 2 will require all map*/
    /* fields to be moved from the map.*/
  ;
   /* THE LINE ITEM DATA WAS MOVED TO IV0W-ITEM-REC AND THAT THE DATA*/
   /* THAT WILL BE SHOWN ON THE MAP AND ALSO UPDATED. IF THE USER DOES*/
   /* A CONFIRM, THE LINE ITEM DATA IS MOVED FROM IV0W-ITEM-REC BACK*/
   /* TO IV0W-UPDT-REC.*/
  ;
  IV0WW-INDEX2 = 1;
  IV0WW-INDEX3 = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR;
  ;
  while (IV0WW-INDEX2 <= 15
   && IV0WM005.IV0WM-SY-STY-NBR[IV0WW-INDEX2] != "      ")
    IV0W-UPDT-REC.CU-PROD-ID[IV0WW-INDEX3] = IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2];
    IV0WW-INDEX2 = IV0WW-INDEX2 + 1;
    IV0WW-INDEX3 = IV0WW-INDEX3 + 1;
    ;
    if (IV0WW-INDEX3 > 300)
      IV0WW-INDEX2 = 16;
    end
    ;
    if (IV0WW-INDEX2 <= 15
     && IV0WM005.IV0WM-SY-STY-NBR[IV0WW-INDEX2] == "      ")
      IV0WW-INDEX2 = 16;
    end
    ;
  end
  ;
end // end IV0WS-CRCT-M5-UPDT

// MOVE CRCT-REC TO ORIG-REC
Function IV0WS-CRCT-TO-ORIG()
   /* IV0WS-CRCT-TO-ORIG - MOVE CORRECTION RECORD TO ORIGINAL RECORD AREA*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-17-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CRCT-TO-ORIG";
  ;
   /* THE ORIGINAL DATA IS SAVED SO THAT IT CAN BE WRITTEN TO A SEQUENCE*/
   /* #=0 LINE ON THE CORRECTION TABLES IF IT IS CHANGED IN IV0W.*/
  ;
  move IV0W-CRCT-REC to IV0W-ORIG-REC withV60Compat;
  ;
    /* ALSO MOVE CORRECTION TO PREVIOUS - TO BE USED WHEN SETTING THE*/
    /* ATTRIBUTE TO BRIGHT TO INDICATE DATA THAT CHANGED ON THE MOST*/
    /* RECENT CORRECTION.*/
  ;
  move IV0W-CRCT-REC to IV0W-PREV-REC withV60Compat;
  ;
end // end IV0WS-CRCT-TO-ORIG

// MOVE CRCT-REC TO UPDT-REC
Function IV0WS-CRCT-TO-UPDT()
   /* IV0WS-CRCT-TO-UPDT - MOVE CORRECTION RECORD TO UPDATE RECORD AREA*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-17-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-CRCT-TO-UPDT";
  ;
  move IV0W-CRCT-REC to IV0W-UPDT-REC withV60Compat;
  ;
end // end IV0WS-CRCT-TO-UPDT

// GATHER DATA & BUILD HEADER MAP
Function IV0WS-CRCT-UPDATE()
   /* use entered invoice header correction data to update or insert*/
   /* invoice correction and regular tables.*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-08-95  GDECKE  NEW APPLICATION                              **/
   /* * 05-03-95  GDECKE  temporary code -force insertion of vcorhd01  **/
   /* *                   any time vcorsq01 is inserted.               **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-UPDT-MAP1";
  ;
    /* save previous data values to update record to minimize the number*/
    /* of fields to be moved from the map. phase 2 will require all map*/
    /* fields to be moved from the map.*/
  ;
  IV0W-CRCT-REC.IV-IVC-ID = IV0WM001.IV-IVC-ID;
  IV0W-WS-REC.IV0WW-IVC-ID-CHAR = IV0WM001.IV-IVC-ID;
  IV0W-CRCT-REC.IV-IVC-PART-CHAR = IV0W-WS-REC.IV0WW-IVC-PART-CHAR;
  ;
  IV0W-ORIG-REC.IV-IVC-ID = IV0WM001.IV-IVC-ID;
  IV0W-WS-REC.IV0WW-IVC-ID-CHAR = IV0WM001.IV-IVC-ID;
  IV0W-ORIG-REC.IV-IVC-PART-CHAR = IV0W-WS-REC.IV0WW-IVC-PART-CHAR;
  IV0W-ORIG-REC.IV-CRCT-SEQ-NBR = 0;
  ;
  IV0WS-UPDT-TO-ITEM(); /* SAVE ITEM DATA*/
  IV0WS-CRCT-TO-UPDT(); /* MOVE CORRECTION DATA TO UPDATE TABLE*/
  IV0WS-ITEM-TO-UPDT(); /* RESTORE SAVED ITEM DATA TO UPDATE*/
                                   /* TABLE*/
  ;
  IV0W-UPDT-REC.XIC-IVC-CRCTRSN-CD = IV0WM001.XIC-IVC-CRCTRSN-CD;
  IV0W-UPDT-REC.IV-CRCT-STAT-IND = "C";
  IV0W-UPDT-REC.XXX-USER-ID = IV0W-WS-REC.XXX-USER-ID;
  ;
   /* INCREMENT CORRECTION SEQUENCE NUMBER BY 1. LATER ON THERE MIGHT BE*/
   /* A NEED TO INSERT INCOMPLETE CORRECTION DATA WHERE CRCT-STAT = 'I'...*/
   /* IN THAT CASE DONT INCREMENT SEQ# AND PROGRAM WILL DO UPDATES INSTEAD*/
   /* OF INSERTS*/
  ;
  IV0W-UPDT-REC.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ + 1;
  ;
  IV0W-UPDT-REC.CU-CO-ID = IV0WM001.CU-CO-ID;
  IV0W-UPDT-REC.CU-STOR-ID = IV0WM001.CU-STOR-ID;
  IV0W-UPDT-REC.XNX-DEPT-ID-XREF = IV0WM001.XNX-DEPT-ID-XREF;
  IV0W-UPDT-REC.CU-CO-NM = IV0WM001.CU-CO-NM;
  IV0W-UPDT-REC.OP-CUST-PO = IV0WM001.IV0WM-OP-CUST-PO;
  IV0W-UPDT-REC.TF-CARR-CD = IV0WM001.IV0WM-TF-CARR-CD;
  IV0W-UPDT-REC.TF-CARR-NM = IV0WM001.IV0WM-TF-CARR-NM;
  IV0W-UPDT-REC.TF-PRO-NBR = IV0WM001.IV0WM-TF-PRO-NBR;
  IV0W-UPDT-REC.CU-STOR-SELF-ID = IV0WM001.IV0WM-CU-STOR-SELF-ID;
  IV0W-UPDT-REC.PK-NBR-OF-CARTONS = IV0WM001.IV0WM-PK-NBR-OF-CARTONS;
  IV0W-UPDT-REC.SR-TOT-NBR-CARTONS = IV0WM001.IV0WM-SR-TOT-NBR-CARTONS;

  if (IV0W-CRCT-REC.OP-CUST-PO == IV0W-UPDT-REC.OP-CUST-PO
   && IV0W-CRCT-REC.TF-CARR-CD == IV0W-UPDT-REC.TF-CARR-CD
   && IV0W-CRCT-REC.TF-CARR-NM == IV0W-UPDT-REC.TF-CARR-NM
   && IV0W-CRCT-REC.TF-PRO-NBR == IV0W-UPDT-REC.TF-PRO-NBR
   && IV0W-CRCT-REC.CU-STOR-SELF-ID == IV0W-UPDT-REC.CU-STOR-SELF-ID
   && IV0W-CRCT-REC.PK-NBR-OF-CARTONS == 
  IV0W-UPDT-REC.PK-NBR-OF-CARTONS
   && IV0W-CRCT-REC.SR-TOT-NBR-CARTONS == 
  IV0W-UPDT-REC.SR-TOT-NBR-CARTONS)
    IV0W-WS-REC.IV0WW-UPDT-CORHD-FLAG = "N";
    IV0W-WS-REC.IV0WW-UPDT-IVHDR-FLAG = "N";
    IV0W-WS-REC.IV0WW-UPDT-IVHDX-FLAG = "N";
    IV0W-WS-REC.IV0WW-UPDT-IVADR-FLAG = "N";
  else
    IV0W-WS-REC.IV0WW-UPDT-CORHD-FLAG = "Y";
    IV0W-WS-REC.IV0WW-UPDT-IVHDR-FLAG = "Y";
    IV0W-WS-REC.IV0WW-UPDT-IVHDX-FLAG = "N";
    IV0W-WS-REC.IV0WW-UPDT-IVADR-FLAG = "N";
  end
  ;
   /* DO SIMILAR TEST FOR TEXT UPDATE FLAG*/
  IV0W-UPDT-REC.IV-TXT[1] = IV0WM001.IV0WM-CMT-TEXT1;
  IV0W-UPDT-REC.IV-TXT[2] = IV0WM001.IV0WM-CMT-TEXT2;
  IV0W-UPDT-REC.IV-TXT[3] = IV0WM001.IV0WM-CMT-TEXT3;
  ;
  if (IV0W-CRCT-REC.IV-TXT[1] == IV0W-UPDT-REC.IV-TXT[1]
   && IV0W-CRCT-REC.IV-TXT[2] == IV0W-UPDT-REC.IV-TXT[2]
   && IV0W-CRCT-REC.IV-TXT[3] == IV0W-UPDT-REC.IV-TXT[3])
    IV0W-WS-REC.IV0WW-UPDT-CORTX-FLAG = "N";
  else
    IV0W-WS-REC.IV0WW-UPDT-CORTX-FLAG = "Y";
  end
  ;
    /* CHANGED ITEM LINE DATA HAS ALREADY BEEN MOVED TO IV0W-CRCT-REC*/
    /* WHILE MAP 5 WAS BEING PROCESSED. AT THIS POINT THE PROGRAM JUST*/
    /* NEEDS TO DETERMINE WHICH LINE ITEMS HAVE BEEN CHANGED AND SET THE*/
    /* IV0WW-UPDT-CORIT-FLAG TO 'Y', AND THEN PERFORM THE UPDATE ROUTINE.*/
  ;
  IV0W-WS-REC.IV0WW-UPDT-IVITM-FLAG = "N";
  IV0W-WS-REC.IV0WW-UPDT-CORIT-FLAG = "N";
  IV0WW-INDEX2 = 1;
  ;
  while (IV0WW-INDEX2 <= 300
   && IV0W-CRCT-REC.SY-STY-NBR[IV0WW-INDEX2] != "      ")
    if (IV0W-CRCT-REC.CU-PROD-ID[IV0WW-INDEX2] != 
    IV0W-UPDT-REC.CU-PROD-ID[IV0WW-INDEX2])
      IV0W-WS-REC.IV0WW-UPDT-IVITM-FLAG = "Y";
      IV0W-WS-REC.IV0WW-UPDT-CORIT-FLAG = "Y";
    end
    IV0WW-INDEX2 = IV0WW-INDEX2 + 1;
  end
  ;
  ;
  ;
   /* FOR PHASE ONE SOME TABLES CANNOT BE CHANGED AND WILL THEREFORE*/
   /* NOT BE UPDATED AT THIS TIME. DEFAULT THEIR UPDATE FLAGS TO 'N'*/
   /* AND COMMENT OUT THE STATEMENTS THAT WOULD PERFORM THEIR UPDATES.*/
  ;
  IV0W-WS-REC.IV0WW-UPDT-CORGL-FLAG = "N";
  IV0W-WS-REC.IV0WW-UPDT-CORSZ-FLAG = "N";
  IV0W-WS-REC.IV0WW-UPDT-IVHDX-FLAG = "N";
  IV0W-WS-REC.IV0WW-UPDT-IVADR-FLAG = "N";
  IV0W-WS-REC.IV0WW-UPDT-IVGLX-FLAG = "N";
  IV0W-WS-REC.IV0WW-UPDT-IVSIZ-FLAG = "N";
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-CORHD-FLAG == "Y"
   || IV0W-WS-REC.IV0WW-UPDT-CORGL-FLAG == "Y"
   || IV0W-WS-REC.IV0WW-UPDT-CORIT-FLAG == "Y"
   || IV0W-WS-REC.IV0WW-UPDT-CORSZ-FLAG == "Y"
   || IV0W-WS-REC.IV0WW-UPDT-CORTX-FLAG == "Y")
    IV0W-WS-REC.IV0WW-UPDT-CORSQ-FLAG = "Y";
    ;
    /* temporary code to force insertion of a vcorhd01 row for all*/
    /* valid corrections, because we cant tell if customer store self-id*/
    /* has been changed or not, because its not stored on the database.*/
    IV0W-WS-REC.IV0WW-UPDT-CORHD-FLAG = "Y";
    ;
  else
    IV0W-WS-REC.IV0WW-UPDT-CORSQ-FLAG = "N";
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    converseLib.validationFailed(109);
    return;
  end
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-CORSQ-FLAG == "Y")
    IV0WS-UPDATE-CORSQ();
  end
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-CORHD-FLAG == "Y")
    IV0WS-UPDATE-CORHD();
    IV0WS-UPDT-CORHD00();
  end
  ;
   /* IF IV0W-WS-REC.IV0WW-UPDT-CORGL-FLAG = 'Y';*/
    /* IV0WS-UPDATE-CORGL;*/
   /* END;*/
  ;
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-CORIT-FLAG == "Y")
    IV0WS-UPDATE-CORIT();
    IV0WS-UPDT-CORIT00();
  end
  ;
   /* IF IV0W-WS-REC.IV0WW-UPDT-CORSZ-FLAG = 'Y';*/
    /* IV0WS-UPDATE-CORSZ;*/
   /* END;*/
  ;
   /* always add the correction text lines even if same as previous seq#*/
  ;
      /* IF IV0W-WS-REC.IV0WW-UPDT-CORTX-FLAG = 'Y';*/
  IV0WS-UPDATE-CORTX();
      /* END;*/
  ;
   /* IF IV0W-WS-REC.IV0WW-UPDT-IVHDX-FLAG = 'Y';*/
    /* IV0WS-UPDATE-IVHDX;*/
   /* END;*/
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-IVHDR-FLAG == "Y")
    IV0WS-UPDATE-IVHDR();
  end
  ;
   /* IF IV0W-WS-REC.IV0WW-UPDT-IVADR-FLAG = 'Y';*/
    /* IV0WS-UPDATE-IVADR;*/
   /* END;*/
  ;
   /* IF IV0W-WS-REC.IV0WW-UPDT-IVGLX-FLAG = 'Y';*/
    /* IV0WS-UPDATE-IVGLX;*/
   /* END;*/
  ;
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-IVITM-FLAG == "Y")
    IV0WS-UPDATE-IVITM();
  end
  ;
   /* IF IV0W-WS-REC.IV0WW-UPDT-IVSIZ-FLAG = 'Y';*/
    /* IV0WS-UPDATE-IVSIZ;*/
   /* END;*/
  ;
    /* COMMIT CHANGES TO TABLES*/
  ;
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
  
  ;
    /* OVERLAY OLD DATA WITH THE NEW DATA*/
  ;
  IV0WS-UPDT-TO-CRCT();
  ;
  IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ = IV0W-UPDT-REC.IV-CRCT-SEQ-NBR;
  IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ = IV0W-UPDT-REC.IV-CRCT-SEQ-NBR;
  IV0WM001.IV-CRCT-SEQ-NBR = IV0W-UPDT-REC.IV-CRCT-SEQ-NBR;
  IV0WM005.IV-CRCT-SEQ-NBR = IV0W-UPDT-REC.IV-CRCT-SEQ-NBR;
  ;
   /* RESET WARNING FLAG REGARDING LOST DATA IF LEAVING UPDATE MODE*/
  IV0W-WS-REC.IV0WW-MSG-111-SHOWN-FL = "N";
  ;
   /* force screen build routine to show a blank map1 screen*/
  IV0WM001.IV-IVC-ID = 0;
  IV0W-CRCT-REC.IV-IVC-ID = 0;
  IV0W-CRCT-REC.IV-CRCT-SEQ-NBR = 0;
  IV0WM001.IV-CRCT-SEQ-NBR = 0;
  IV0WM001.IV-MAX-CRCT-SEQ = 0;
  IV0W-WS-REC.IV0WW-NEW-IVC-FLAG = "Y";
  IV0W-WS-REC.IV0WW-NEW-SEQ-FLAG = "N";
  IV0W-WS-REC.IV0WW-BUILD-SCRN-FL = "Y";
  IV0W-WS-REC.IV0WW-BUILD-ARRAY-FL = "Y";
  IV0W-WS-REC.IV0WW-SHOW-MSG-82-FLAG = "N";
  ;
end // end IV0WS-CRCT-UPDATE

// SET POINTER TO SEL ITEM IN TBL
Function IV0WS-DIRECT-PAGE()
   /* IV0WS-DIRECT-PAGE - SET POINTER TO ITEM IN IV0W-CRCT-REC ITEM AREA*/
   /* IF STYLE/COLOR, OR STYLE MATCH SELECT STYLE/COLOR FROM MAP5.*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 03-02-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-DIRECT-PAGE";
  ;
   /* if select color or dimension is entered but no select style*/
   /* show message requiring select style id.*/
  ;
  if (IV0WM005.IV0WM-SEL-SY-COLR-CD-ID != " "
   || IV0WM005.IV0WM-SEL-XDM-DIM-CD != " ")
    if (IV0WM005.IV0WM-SEL-SY-STY-NBR == " ")
      converseLib.validationFailed(122);
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      IV0W-WS-REC.IV0WW-MSG-119-SHOWN-FL = "N";
      IV0W-WS-REC.IV0WW-MSG-119-PREV-STY = " ";
      return;
    end
  end
  ;
    /* find the style and color in the iv0w-crct record and set*/
    /* location pointers accordingly*/
  ;
  IV0W-WS-REC.IV0WW-INDEX2 = 1;
  IV0W-WS-REC.IV0WW-CSR-EOF-FL = "N";
  IV0W-WS-REC.IV0WW-SHOW-STYLE-COLOR = "N";
  IV0W-WS-REC.IV0WW-SHOW-STYLE-ONLY = "N";
  ;
  while (IV0W-WS-REC.IV0WW-INDEX2 <= 300
   && IV0W-WS-REC.IV0WW-CSR-EOF-FL == "N")
    if (IV0WM005.IV0WM-SEL-SY-STY-NBR == 
    IV0W-CRCT-REC.SY-STY-NBR[IV0WW-INDEX2]
     && IV0WM005.IV0WM-SEL-SY-COLR-CD-ID == 
    IV0W-CRCT-REC.SY-COLR-CD-ID[IV0WW-INDEX2])
      IV0W-WS-REC.IV0WW-SHOW-STYLE-COLOR = "Y";
      IV0W-WS-REC.IV0WW-CSR-EOF-FL = "Y";
    else
      if (IV0W-CRCT-REC.SY-STY-NBR[IV0WW-INDEX2] == "      ")
        IV0W-WS-REC.IV0WW-INDEX2 = 0;
        IV0W-WS-REC.IV0WW-CSR-EOF-FL = "Y";
      else
        IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
      end
    end
  end
  ;
   /* SEARCHED ALL 300 LINES AND FOUND NO MATCH*/
  ;
  if (IV0W-WS-REC.IV0WW-INDEX2 != 0)
    IV0W-WS-REC.IV0WW-CURR-PAGE-PTR = IV0WW-INDEX2;
    IV0W-WS-REC.IV0WW-CURR-ITEM-PTR = IV0WW-INDEX2;
    IV0W-WS-REC.IV0WW-CURR-SCRN-PTR = 1;
    IV0W-WS-REC.IV0WW-MSG-119-SHOWN-FL = "N";
    IV0W-WS-REC.IV0WW-MSG-119-PREV-STY = " ";
    return;
  end
  ;
    /* search for style and color failed --  so...*/
    /* find the style only in the iv0w-crct record and set*/
    /* location pointers accordingly*/
  ;
  IV0W-WS-REC.IV0WW-INDEX2 = 1;
  IV0W-WS-REC.IV0WW-CSR-EOF-FL = "N";
  ;
  while (IV0W-WS-REC.IV0WW-INDEX2 <= 300
   && IV0W-WS-REC.IV0WW-CSR-EOF-FL == "N")
    if (IV0WM005.IV0WM-SEL-SY-STY-NBR == 
    IV0W-CRCT-REC.SY-STY-NBR[IV0WW-INDEX2])
      if (IV0W-WS-REC.IV0WW-MSG-119-SHOWN-FL == "N"
       || IV0W-WS-REC.IV0WW-MSG-119-PREV-STY != 
      IV0WM005.IV0WM-SEL-SY-STY-NBR)
        IV0W-WS-REC.IV0WW-MSG-119-PREV-STY = IV0WM005.IV0WM-SEL-SY-STY-NBR;
        IV0W-WS-REC.IV0WW-MSG-119-SHOWN-FL = "Y";
        converseLib.validationFailed(119);
      end
      IV0W-WS-REC.IV0WW-SHOW-STYLE-ONLY = "Y";
      IV0W-WS-REC.IV0WW-CSR-EOF-FL = "Y";
    else
      if (IV0W-CRCT-REC.SY-STY-NBR[IV0WW-INDEX2] == "      ")
        IV0W-WS-REC.IV0WW-INDEX2 = 0;
        converseLib.validationFailed(120);
        IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
        IV0W-WS-REC.IV0WW-CSR-EOF-FL = "Y";
      else
        IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
      end
    end
  end
  ;
   /* SEARCHED ALL 300 LINES AND FOUND NO MATCH*/
  ;
  if (IV0W-WS-REC.IV0WW-INDEX2 == 0)
    IV0W-WS-REC.IV0WW-CURR-PAGE-PTR = 1;
    IV0W-WS-REC.IV0WW-CURR-ITEM-PTR = 1;
    IV0W-WS-REC.IV0WW-CURR-SCRN-PTR = 1;
  else
    IV0W-WS-REC.IV0WW-CURR-PAGE-PTR = IV0WW-INDEX2;
    IV0W-WS-REC.IV0WW-CURR-ITEM-PTR = IV0WW-INDEX2;
    IV0W-WS-REC.IV0WW-CURR-SCRN-PTR = 1;
  end
  ;
  ;
end // end IV0WS-DIRECT-PAGE

// GET CUSTOMER COMPANY NAME
Function IV0WS-EDIT-CARRIER()
   /* IV0WS-EDIT-CARRIER  - GET CARRIER NAME FROM DPICK.VCARR001*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-EDIT-CARRIER ";
  ;
   /* SELECT THE DPICK.VCARR001 LINE FOR THE CUSTOMER. MOVE THE*/
   /* COMPANY NAME TO WORKING STORAGE RECORD - IV0W-CRCT-REC.*/
  ;
  set SQLCA empty;
  set TF1REC empty;
  ;
  if (IV0WM001.IV0WM-TF-CARR-CD == "    "
   || IV0WM001.IV0WM-TF-CARR-CD == "0000")
    SQLCA.VAGen_SQLCODE = 0;
    return;
  end
  ;
  ;
  TF1REC.TF1CARCD = IV0WM001.IV0WM-TF-CARR-CD;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-VCARR();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    if (IV0WM001.IV0WM-TF-CARR-NM == " ")
      IV0WM001.IV0WM-TF-CARR-NM = TF1REC.TF1CARNM;
    end
    if (IV0WM001.IV0WM-TF-CARR-CD != IV0W-CRCT-REC.TF-CARR-CD
     && IV0WM001.IV0WM-TF-CARR-NM == IV0W-CRCT-REC.TF-CARR-NM)
      IV0WM001.IV0WM-TF-CARR-NM = TF1REC.TF1CARNM;
    end
  else
    if (IV0WM001.IV0WM-TF-CARR-CD != IV0W-CRCT-REC.TF-CARR-CD)
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      converseLib.validationFailed(78);
      set IV0WM001.IV0WM-TF-CARR-CD cursor, modified, red;
    end
  end
end // end IV0WS-EDIT-CARRIER

// EDIT CUSTOMER PRODUCT SKU
Function IV0WS-EDIT-CUCPX()
   /* IV0WS-EDIT-CUCPX   - EDIT CUSTOMER PRODUCT SKU*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 03-05-95  GDECKE  NEW APPLICATION                              **/
   /* * 08-06-97  CHELLM  REPLACED VCUSKU01 WITH VCUCPX01.             **/
   /* * 11-03-98  NJANA   CREATE SOFT EDIT IN IV0W FOR SKU NBR         **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-EDIT-CUCPX  ";
  ;
   /* SELECT THE DCUST.VCUcpx01 LINE FOR THE CUSTOMER AND PRODUCT*/
   /* TO VERIFY THAT THE ENTERED SKU VALUE IS VALID.*/
  ;
   /* compute corresponding occurance in sku override table. The index*/
   /* value will be used to keep track of overrides to the sku value, and*/
                                  /* to skip the edit if the value already*/
                                   /* been edited and proven valid, or*/
   /* an override has been confirmed.*/
  ;
  IV0W-WS-REC.IV0WW-CURR-ITEM-PTR = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR   + IV0W-WS-REC.IV0WW-INDEX2   - 1;
  if (IV0W-WS-REC.IV0WW-CURR-ITEM-PTR > 300)
    return;
  end
  ;
    /* IF NO PRODUCT OR SKU DATA ON THE LINE THEN JUST RETURN*/
  ;
  if (IV0WM005.IV0WM-SY-STY-NBR[IV0WW-INDEX2] == "      "
   || IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] == " ")
    return;
  end
  ;
   /* skip edit if cu-prod-id has been overriden and the value has not*/
   /* changed since the override.*/
  ;
  if (IV0W-WS-REC.IV0WW-SKU-OVRD-FL[IV0WW-CURR-ITEM-PTR] == "C"
   || IV0W-WS-REC.IV0WW-SKU-OVRD-FL[IV0WW-CURR-ITEM-PTR] == "G")
    if (IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] == 
    IV0W-WS-REC.IV0WW-SAVE-OVRD-CU-PROD-ID[IV0WW-CURR-ITEM-PTR])
      set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] initialAttributes;
      return;
    else
      IV0W-WS-REC.IV0WW-SKU-OVRD-FL[IV0WW-CURR-ITEM-PTR] = " ";
      IV0W-WS-REC.IV0WW-SAVE-OVRD-CU-PROD-ID[IV0WW-CURR-ITEM-PTR] = " ";
    end
  else
    if (IV0W-WS-REC.IV0WW-SKU-OVRD-FL[IV0WW-CURR-ITEM-PTR] == "E")
      if (IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] == 
      IV0W-WS-REC.IV0WW-SAVE-OVRD-CU-PROD-ID[IV0WW-CURR-ITEM-PTR])
        IV0W-WS-REC.IV0WW-SKU-OVRD-FL[IV0WW-CURR-ITEM-PTR] = "C";
        set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] initialAttributes;
        return;
      end
    end
  end
  ;
  set SQLCA empty;
  set WCU1710 empty;
  ;
  WCU1710-INQUIRY-OPTION = "2";
  WCU1710-IN-CU-CO-ID = KUCREC.KUCCOID; /* DEFAULT TO USE COMPANY ID*/
  if (KUCREC.KUCSKIND == "P") /* USE PARENT COMPANY IF ONE EXISTS*/
    WCU1710-IN-CU-CO-ID = KUCREC.KUKPCOID;
  else
    if (KUCREC.KUCSKIND == "G") /* GENERIC COMPANY ID DEFAULTS TO 0*/
      WCU1710-IN-CU-CO-ID = 0;
    else
      if (KUCREC.KUCSKIND == "R") /* GROUP COMPANY ID*/
        WCU1710-IN-CU-CO-ID = KUCREC.KUCGRPID;
      end
    end
  end
  ;
  WCU1710-IN-CU-CUST-PROD-ID = IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2];
  WCU1710-XNX-DEPT-ID-XREF = IV0WM001.XNX-DEPT-ID-XREF;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
                                  /* NEED ONE EXAMPLE TO BO GOOD SKU*/
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CUCPX();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
    /* TCS CHANGE BEGINS-11/03/97*/
   /* IF WCU1710-RETURN-CODE EQ 0;*/
      /* NEXT SENTENCE*/
   /* ELSE;*/
   /* MOVE 'Y' TO IV0W-WS-REC.IV0WW-ERROR-FLAG;*/
    /* SET IV0WM005.IV0WM-CU-PROD-ID(IV0WW-INDEX2)*/
   /* CURSOR,MODIFIED,BRIGHT;    MOVE 112 TO EZEMNO;*/
   /* EZERTN;*/
   /* END;*/
    /* TCS CHANGE ENDS  -11/03/97*/
  ;
  if (IV0WM005.IV0WM-SY-STY-NBR[IV0WW-INDEX2] == WCU1710.SY-STY-NBR
   && IV0WM005.IV0WM-SY-COLR-CD-ID[IV0WW-INDEX2]
   == WCU1710.SY-COLR-CD-ID
   && IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2]
   == WCU1710.CU-CUST-PROD-ID
   && VIVHDX02.XGPCD == WCU1710.XGP-GPC-CD)
    IV0W-WS-REC.IV0WW-SKU-OVRD-FL[IV0WW-CURR-ITEM-PTR] = "G";
    IV0W-WS-REC.IV0WW-SAVE-OVRD-CU-PROD-ID[IV0WW-CURR-ITEM-PTR] = IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2];
    IV0W-WS-REC.IV0WW-CSR-EOF-FL = "Y";
    set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] initialAttributes;
  else
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    converseLib.validationFailed(112);
    IV0W-WS-REC.IV0WW-SKU-OVRD-FL[IV0WW-CURR-ITEM-PTR] = "E";
    IV0W-WS-REC.IV0WW-SAVE-OVRD-CU-PROD-ID[IV0WW-CURR-ITEM-PTR] = IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2];
    IV0W-WS-REC.IV0WW-CSR-EOF-FL = "Y";
    set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] cursor, modified, red;
  end
  ;
end // end IV0WS-EDIT-CUCPX

// ADJUST POINTERS TO TOP OF LIST
Function IV0WS-FULL-PAGE()
   /* IV0WS-FULL-PAGE   -- ADJUST POINTERS TO SCROLL TO TOP OF LIST*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-12-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-FULL-PAGE   ";
  ;
   /* if select color or demension is entered but no select style*/
   /* show message requiring select style id.*/
  ;
  if (IV0WM005.IV0WM-SEL-SY-COLR-CD-ID != " "
   || IV0WM005.IV0WM-SEL-XDM-DIM-CD != " ")
    if (IV0WM005.IV0WM-SEL-SY-STY-NBR == " ")
      converseLib.validationFailed(122);
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      return;
    end
  end
   /* SHIFT POINTER VALUES ON W/S TABLE AND MAP TO DO A SCROLL UP*/
   /* ACTION TO TOP PAGE IF USER SWITCHED FROM SELECTED STYLE TO NO*/
   /* STYLE SELECTED.*/
  ;
  if (converseVar.eventKey is enter)
    if (IV0WM005.IV0WM-SEL-SY-STY-NBR == "      "
     || IV0WM005.IV0WM-SEL-SY-STY-NBR == "000000")
      IV0W-WS-REC.IV0WW-SHOW-STYLE-COLOR = "N";
      IV0W-WS-REC.IV0WW-SHOW-STYLE-ONLY = "N";
      IV0W-WS-REC.IV0WW-CURR-PAGE-PTR = 1;
      IV0W-WS-REC.IV0WW-CURR-ITEM-PTR = 1;
      IV0W-WS-REC.IV0WW-CURR-SCRN-PTR = 1;
      IV0W-WS-REC.IV0WW-MSG-119-SHOWN-FL = "N";
      IV0W-WS-REC.IV0WW-MSG-119-PREV-STY = " ";
      IV0WS-PAGE-ITM-MAP();
    end
  end
  ;
end // end IV0WS-FULL-PAGE

// GET CUSTOMER COMPANY NAME
Function IV0WS-GET-CARRIER()
   /* IV0WS-GET-CARRIER  - GET CARRIER NAME FROM DPICK.VCARR001*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-GET-CARRIER ";
  ;
   /* SELECT THE DPICK.VCARR001 LINE FOR THE CUSTOMER. MOVE THE*/
   /* COMPANY NAME TO WORKING STORAGE RECORD - IV0W-CRCT-REC.*/
  ;
  set SQLCA empty;
  set TF1REC empty;
  ;
  if (IV0WM001.IV0WM-TF-CARR-CD == "    "
   || IV0WM001.IV0WM-TF-CARR-CD == "0000")
    SQLCA.VAGen_SQLCODE = 0;
    return;
  end
  ;
  ;
  TF1REC.TF1CARCD = IV0WM001.IV0WM-TF-CARR-CD;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-VCARR();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    if (IV0WM001.IV0WM-TF-CARR-NM == " ")
      IV0W-CRCT-REC.TF-CARR-NM = TF1REC.TF1CARNM;
      IV0WM001.IV0WM-TF-CARR-NM = TF1REC.TF1CARNM;
    end
  else
    if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y"
     && IV0WM001.IV0WM-TF-CARR-CD != IV0W-CRCT-REC.TF-CARR-CD)
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      converseLib.validationFailed(78);
      IV0WM001.IV0WM-TF-CARR-NM = "UNKNOWN";
      set IV0WM001.IV0WM-TF-CARR-CD cursor, modified, red;
      set IV0WM001.IV0WM-TF-CARR-NM red;
    else
      if (IV0WM001.IV0WM-TF-CARR-NM == " ")
        IV0WM001.IV0WM-TF-CARR-NM = "UNKNOWN";
      end
    end
  end
end // end IV0WS-GET-CARRIER

// GET CUSTOMER COMPANY NAME
Function IV0WS-GET-CMPNY-NM()
   /* IV0WS-GET-CMPNY-NM - GET CUSTOMER COMPANY NAME*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-GET-CMPNY-NM";
  ;
   /* SELECT THE DCUST.VCMPNY01 LINE FOR THE CUSTOMER. MOVE THE*/
   /* COMPANY NAME TO WORKING STORAGE RECORD - IV0W-CRCT-REC.*/
  ;
  set SQLCA empty;
  set KUCREC empty;
  ;
  KUCREC.KUCCOID = IV0W-CRCT-REC.CU-CO-ID;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CMPNY();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    IV0W-CRCT-REC.CU-CO-NM = KUCREC.KUCCONM;
    if (IV0W-ORIG-REC.CU-CO-NM == " ")
      IV0W-ORIG-REC.CU-CO-NM = KUCREC.KUCCONM;
    end
    if (IV0W-PREV-REC.CU-CO-NM == " ")
      IV0W-PREV-REC.CU-CO-NM = KUCREC.KUCCONM;
    end
    ;
  else
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    converseLib.validationFailed(79);
    set IV0WM001.CU-CO-ID cursor, modified, red;
  end
end // end IV0WS-GET-CMPNY-NM

// GET REG ADDRESS DATA FOR IVC
Function IV0WS-GET-IVC-ADR()
   /* GET REGULAR HEADER DATA FOR THE INVOICE*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-06-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-GET-IVC-ADR ";
  ;
   /* SELECT THE VIVADR02 LINE FOR THE INVOICE. MOVE SELECTED DATA TO*/
   /* WORKING STORAGE RECORD - IV0W-CRCT-REC.*/
  ;
  set SQLCA empty;
  set VIVADR02 empty;
  ;
  VIVADR02.IV0IVCID = IV0WM001.IV-IVC-ID;
  IV0W-WS-REC.IV0WW-IVC-ID-CHAR = VIVADR02.IV0IVCID;
  VIVADR02.IV0PARTN = IV0W-WS-REC.IV0WW-IVC-PART-CHAR;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-IVADR();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    IV0W-CRCT-REC.IV-SHIPTO-NM = VIVADR02.IV5SHPNM;
    IV0W-CRCT-REC.IV-SHIPTO-ADDR1 = VIVADR02.IV5SHPA1;
    IV0W-CRCT-REC.IV-SHIPTO-ADDR2 = VIVADR02.IV5SHPA2;
    IV0W-CRCT-REC.IV-SHIPTO-ADDR3 = VIVADR02.IV5SHPA3;
    IV0W-CRCT-REC.IV-SHIPTO-CITY = VIVADR02.IV5SHPCT;
    IV0W-CRCT-REC.IV-SHIPTO-ST-CD = VIVADR02.IV5SHPST;
    IV0W-CRCT-REC.IV-SHIPTO-ZIP = VIVADR02.IV5SHPZP;
  end
end // end IV0WS-GET-IVC-ADR

// GET REGULAR IVC GL'S
Function IV0WS-GET-IVC-GL()
   /* FETCH ALL THE GL'S IN THE REGULAR INVOICE TABLE AND MOVE TO*/
   /* WORKING STORAGE TABLE - IV0W-CRCT-REC.*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-31-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-GET-IVC-GL ";
  ;
   /* OPEN A CURSOR ON VIVGLX02 AND FETCH ROWS UNTIL NO MORE FOUND*/
   /* MOVE THE DATA TO IV0W-CRCT-REC.*/
  ;
  set SQLCA empty;
  set VIVGLX02 empty;
  ;
    /* OPEN VIVGLX02 CURSOR*/
  ;
  VIVGLX02.IV0IVCID = IV0WM001.IV-IVC-ID;
  IV0W-WS-REC.IV0WW-IVC-ID-CHAR = VIVGLX02.IV0IVCID;
  VIVGLX02.IV0PARTN = IV0W-WS-REC.IV0WW-IVC-PART-CHAR;
  VIVGLX02.OP2LNINB = -1;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "SS";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-IVGLX();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE != +0)
    return;
  end
  ;
    /* FETCH LINES FROM CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-CSR-EOF-FL = "N";
  ;
  while (IV0W-WS-REC.IV0WW-CSR-EOF-FL == "N")
    /* REPEAT WHILE THERE IS A GL ROW TO PROCESS.*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
    IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "SN";
    while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
      IV0WS-CALL-IVGLX();
    end
    ;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100)
      IV0W-WS-REC.IV0WW-CSR-EOF-FL = "Y";
    else
      if (SQLCA.VAGen_SQLCODE != +0)
        return;
      else
        ;
        IV0WW-INDEX2 = 12; /* DEFAULT IF GL NOT USED BY IV0W*/
        ;
        /* SET INDEX FOR TRADE DISCOUNT GL*/
        if (VIVGLX02.PFJXREF == "XTD")
          if (VIVGLX02.IV6FBTYP == "F")
            if (VIVGLX02.GLACD == "845")
              IV0W-WS-REC.IV0WW-INDEX2 = 7;
            else
              IV0W-WS-REC.IV0WW-INDEX2 = 1;
            end
          else
            IV0W-WS-REC.IV0WW-INDEX2 = 2;
          end
        end
        ;
        /* SET INDEX FOR DEFECT ALLOWANCE GL*/
        if (VIVGLX02.PFJXREF == "XDA")
          if (VIVGLX02.IV6FBTYP == "F")
            IV0W-WS-REC.IV0WW-INDEX2 = 3;
          else
            IV0W-WS-REC.IV0WW-INDEX2 = 4;
          end
        end
        ;
        /* SET INDEX FOR DIRECT SHIP ALLOWANCE*/
        if (VIVGLX02.PFJXREF == "XDS")
          IV0W-WS-REC.IV0WW-INDEX2 = 5;
        end
        ;
        /* SET INDEX FOR CASH BANK GL*/
        if (VIVGLX02.PFJXREF == "XCB")
          IV0W-WS-REC.IV0WW-INDEX2 = 6;
        end
        ;
        /* SET INDEX FOR SHIP CHARGE GL*/
        if (VIVGLX02.PFJXREF == "SHP")
          IV0W-WS-REC.IV0WW-INDEX2 = 8;
        end
        ;
        /* SET INDEX FOR COOP GL*/
        if (VIVGLX02.PFJXREF == "XCP")
          IV0W-WS-REC.IV0WW-INDEX2 = 9;
        end
        ;
        /* SET INDEX FOR FREIGHT ALLOWANCE GL*/
        if (VIVGLX02.PFJXREF == "XFA")
          IV0W-WS-REC.IV0WW-INDEX2 = 10;
        end
        ;
        /* SET INDEX FOR SMALL ORDER CHARGE GL*/
        if (VIVGLX02.PFJXREF == "SML")
          IV0W-WS-REC.IV0WW-INDEX2 = 11;
        end
        ;
        /* MOVE VIVGLX02 DATA TO TABLE OCCURANCE IN IV0WW-IVGLX-AREA.*/
        ;
        if (IV0WW-INDEX2 < 12)
          ;
          IV0W-CRCT-REC.PF-GL-XREF[IV0WW-INDEX2] = VIVGLX02.PFJXREF;
          IV0W-CRCT-REC.IV-FACE-BANK-TYP[IV0WW-INDEX2] = VIVGLX02.IV6FBTYP;
          IV0W-CRCT-REC.IV0WW-OP-LINE-ITEM-NBR-GL[IV0WW-INDEX2] = VIVGLX02.OP2LNINB;
          IV0W-CRCT-REC.IV-IVC-GL-SEQ[IV0WW-INDEX2] = VIVGLX02.IV6GLSEQ;
          IV0W-CRCT-REC.GL-GEN-LEDGER-CD[IV0WW-INDEX2] = VIVGLX02.GLACD;
          IV0W-CRCT-REC.IV-GL-NET-FL[IV0WW-INDEX2] = VIVGLX02.IV6GLNFL;
          IV0W-CRCT-REC.IV-GL-OVRD-FL[IV0WW-INDEX2] = VIVGLX02.IV6GLOFL;
          IV0W-CRCT-REC.IV-GL-PCT[IV0WW-INDEX2] = VIVGLX02.IV6GLPCT;
          IV0W-CRCT-REC.IV-GL-AMT[IV0WW-INDEX2] = VIVGLX02.IV6GLAMT;
        end
      end
    end
  end
  ;
  ;
    /* CLOSE VIVGLX02 CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "CS";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-IVGLX();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
end // end IV0WS-GET-IVC-GL

// GET REG HEADER DATA FOR IVC
Function IV0WS-GET-IVC-HDR()
   /* GET REGULAR HEADER DATA FOR THE INVOICE*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-06-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-GET-IVC-HDR ";
  ;
   /* SELECT THE VIVHDR05 LINE FOR THE INVOICE. MOVE SELECTED DATA TO*/
   /* WORKING STORAGE RECORD - IV0W-CRCT-REC.*/
  ;
  set SQLCA empty;
  set VIVHDR05 empty;
  ;
  VIVHDR05.IV0IVCID = IV0WM001.IV-IVC-ID;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-IVHDR();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    IV0W-CRCT-REC.SP-SPGM-ID = VIVHDR05.SP1ID;
    IV0W-CRCT-REC.OP-CUST-PO = VIVHDR05.OP1CUPO;
    IV0W-CRCT-REC.IV-HNDL-CHG = VIVHDR05.IVAHDCHG;
    IV0W-CRCT-REC.CU-HNDL-CHG-NET-FL = VIVHDR05.KUTDAHCN;
    IV0W-CRCT-REC.IV-NET-MRCH-AMT = VIVHDR05.IVANMAMT;
    IV0W-CRCT-REC.IV-IVC-AMT = VIVHDR05.IVAIVAMT;
    ;
    /* GET STORE SELF ID FROM CUSTOMER STORE TABLE*/
    /* MOVE VIVHDR05.CU-STOR-SELF-ID TO IV0W-CRCT-REC.CU-STOR-SELF-ID;*/
    ;
    IV0W-CRCT-REC.IV-PTERM-DEFRD-DT = VIVHDR05.IVAPTDDT;
    IV0W-CRCT-REC.PK-NBR-OF-CARTONS = VIVHDR05.PK1NBCTN;
    IV0W-CRCT-REC.SR-TOT-NBR-CARTONS = VIVHDR05.SR2TNBCT;
    IV0W-CRCT-REC.TF-PRO-NBR = VIVHDR05.TF2PRONO;
    IV0W-CRCT-REC.XDS-DIR-SHIP-CD = VIVHDR05.XDSCD;
    IV0W-CRCT-REC.TF-CARR-CD = VIVHDR05.TF1CARCD;
    IV0W-CRCT-REC.TF-CARR-NM = VIVHDR05.TF1CARNM;
    IV0W-CRCT-REC.XPT-PTERM-CD = VIVHDR05.XPTCD;
    IV0W-CRCT-REC.XPT-PTERM-PCT = VIVHDR05.IVAXPTPC;
    IV0W-CRCT-REC.IV-PTERM-DSCT-AMT = VIVHDR05.IVAPTAMT;
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +100)
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    set IV0WM001.IV-IVC-ID cursor, modified, red;
    converseLib.validationFailed(43);
  end
end // end IV0WS-GET-IVC-HDR

// GET REG HEADER XREF FOR IVC
Function IV0WS-GET-IVC-HDX()
   /* GET REGULAR HEADER CROSS REFERENCE FOR INVOICE*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-06-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-GET-IVC-HDX ";
  ;
   /* SELECT THE VIVHDX02 LINE FOR THE INVOICE. MOVE SELECTED DATA TO*/
   /* WORKING STORAGE RECORD - IV0W-CRCT-REC.*/
  ;
  set SQLCA empty;
  set VIVHDX02 empty;
  ;
  VIVHDX02.IV0IVCID = IV0WM001.IV-IVC-ID;
  IV0W-WS-REC.IV0WW-IVC-ID-CHAR = VIVHDX02.IV0IVCID;
  VIVHDX02.IV0PARTN = IV0W-WS-REC.IV0WW-IVC-PART-CHAR;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-IVHDX();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    ;
    IV0W-CRCT-REC.CU-CO-ID = VIVHDX02.KUCCOID;
    IV0W-CRCT-REC.CU-STOR-ID = VIVHDX02.KUMSTRID;
    IV0W-CRCT-REC.XNX-DEPT-ID-XREF = VIVHDX02.XNXCD;
    ;
    IV0W-WS-REC.CU-CO-ID = VIVHDX02.KUCCOID;
    IV0W-WS-REC.CU-STOR-ID = VIVHDX02.KUMSTRID;
    IV0W-WS-REC.XNX-DEPT-ID-XREF = VIVHDX02.XNXCD;
    ;
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == +100)
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    converseLib.validationFailed(43);
    set IV0WM001.IV-IVC-ID cursor, modified, red;
  end
  ;
end // end IV0WS-GET-IVC-HDX

// GET REGULAR IVC ITEM LINES
Function IV0WS-GET-IVC-ITM()
   /* FETCH ALL THE ITEMS IN THE REGULAR INVOICE TABLE AND MOVE TO*/
   /* WORKING STORAGE TABLE - IV0W-CRCT-REC.*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-GET-IVC-ITM";
  ;
   /* OPEN A CURSOR ON VIVITM02 AND FETCH ROWS UNTIL NO MORE FOUND*/
   /* MOVE THE DATA TO IV0W-CRCT-REC.*/
  ;
  set SQLCA empty;
  set VIVITM02 empty;
  ;
  ;
    /* OPEN VIVITM02 CURSOR*/
  ;
  VIVITM02.IV0IVCID = IV0WM001.IV-IVC-ID;
  VIVITM02.OP2LNINB = -1;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S1";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-IVITM();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE != +0)
    return;
  end
  ;
    /* FETCH LINES FROM CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-CSR-EOF-FL = "N";
  IV0WW-INDEX2 = 1;
  ;
  while (IV0W-WS-REC.IV0WW-CSR-EOF-FL == "N")
    /* REPEAT WHILE THERE IS A GL ROW TO PROCESS.*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
    IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "N1";
    while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
      IV0WS-CALL-IVITM();
    end
    ;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100)
      IV0W-WS-REC.IV0WW-CSR-EOF-FL = "Y";
    else
      if (SQLCA.VAGen_SQLCODE != +0)
        return;
      else
        ;
        IV0W-CRCT-REC.IV0WW-OP-LINE-ITEM-NBR-IT[IV0WW-INDEX2] = VIVITM02.OP2LNINB;
        ;
        IV0W-CRCT-REC.SY-STY-NBR[IV0WW-INDEX2] = VIVITM02.SY1STNBR;
        ;
        IV0W-CRCT-REC.SY-COLR-CD-ID[IV0WW-INDEX2] = VIVITM02.SY2CLRID;
        ;
        IV0W-CRCT-REC.XDM-DIM-CD[IV0WW-INDEX2] = VIVITM02.XDMCD;
        ;
        IV0W-CRCT-REC.CU-PROD-ID[IV0WW-INDEX2] = VIVITM02.KUIPRDID;
        ;
        IV0W-CRCT-REC.XUM-UOM-CD[IV0WW-INDEX2] = VIVITM02.XUMCD;
        ;
        IV0W-CRCT-REC.OP-PRC-OVRD-FL[IV0WW-INDEX2] = VIVITM02.OP2PRCOF;
        ;
        IV0W-CRCT-REC.OP-PRC-VARY-FL[IV0WW-INDEX2] = VIVITM02.OP2PRCVF;
        ;
        IV0W-CRCT-REC.IV-GRS-LN-UNIT-PRC[IV0WW-INDEX2] = VIVITM02.IV3GLNUP;
        ;
        IV0W-CRCT-REC.IV-NET-LN-UNIT-PRC[IV0WW-INDEX2] = VIVITM02.IV3NLNUP;
        ;
        IV0W-CRCT-REC.IV-GRS-LN-MRCH-AMT[IV0WW-INDEX2] = VIVITM02.IV3GLNMA;
        ;
        IV0W-CRCT-REC.IV-NET-LN-MRCH-AMT[IV0WW-INDEX2] = VIVITM02.IV3NLNMA;
        ;
        IV0W-CRCT-REC.IV-LN-SHIPPED-QTY[IV0WW-INDEX2] = VIVITM02.IV3LNSQ;
        ;
        IV0W-CRCT-REC.IV-NBR-SZ[IV0WW-INDEX2] = VIVITM02.IV3NBRSZ;
        ;
        IV0WW-INDEX2 = IV0WW-INDEX2 + 1;
        if (IV0WW-INDEX2 > 300)
          IV0W-WS-REC.IV0WW-CSR-EOF-FL = "Y";
        end
      end
    end
  end
  ;
  ;
    /* CLOSE VIVITM02 CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "C1";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-IVITM();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
end // end IV0WS-GET-IVC-ITM

// GET HIGHEST CORRECTION SEQ NBR
Function IV0WS-GET-MAX-SEQ()
   /* IV0WS-GET-MAX-SEQ - GET HIGHEST CORRECTION SEQUENCE NUMBER*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-GET-MAX-SEQ";
  ;
   /* GET HIGHEST SEQUENCE NUMBER FROM VCORSQ01 FOR THE INVOICE*/
   /* IF CORSQ FOUND SAVE THE SEQUENCE NUMBER, OTHERWISE SET SAVED*/
   /* SEQUENCE NUMBER TO ZERO.*/
  ;
  set SQLCA empty;
  set VCORSQ01 empty;
  VCORSQ01.IV-IVC-ID = IV0WM001.IV-IVC-ID;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S1"; /* GET MAX SEQ#*/
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORSQ();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    VCORSQ01.IV-CRCT-SEQ-NBR = 0;
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ = VCORSQ01.IV-CRCT-SEQ-NBR;
    IV0W-WS-REC.IV0WW-PREV-CRCT-FLAG = "Y";
  else
    IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ = 0;
    IV0W-WS-REC.IV0WW-PREV-CRCT-FLAG = "N";
  end
  ;
end // end IV0WS-GET-MAX-SEQ

// GET GL'S FOR CRCT SEQ#
Function IV0WS-GET-REQ-GL()
   /* FOR EACH GL CODE GET THE MOST CURRENT GL CORRECTIONS HAVING*/
   /* SEQ# LE REQUESTED SEQ#. MOVE GL DATA TO IV0W-CRCT-REC.*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-31-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-GET-REQ-GL ";
  ;
   /* OPEN A CURSOR ON VCORGL01 AND FETCH ROWS UNTIL NO MORE FOUND OR*/
   /* SEQ# > REQUESTED SEQUENCE NUMBER. MOVE THE DATA TO IV0W-CRCT-REC.*/
  ;
  set SQLCA empty;
  set VCORGL01 empty;
  ;
    /* OPEN VCORGL01 CURSOR*/
  ;
  VCORGL01.IV-IVC-ID = IV0WM001.IV-IVC-ID;
  VCORGL01.IV-CRCT-SEQ-NBR = IV0WM001.IV-CRCT-SEQ-NBR;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S2";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORGL();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    return;
  end
  ;
    /* FETCH LINES FROM CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-CSR-EOF-FL = "N";
  ;
  while (IV0W-WS-REC.IV0WW-CSR-EOF-FL == "N")
    /* REPEAT WHILE CORRECTION SEQUENCE LE REQUESTED SEQ NBR.*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
    IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "N2";
    while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
      IV0WS-CALL-CORGL();
    end
    ;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +0)
      if (VCORGL01.IV-CRCT-SEQ-NBR > IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ)
        IV0WW-CSR-EOF-FL = "Y";
      else
        ;
        IV0W-WS-REC.IV0WW-INDEX2 = 12; /* GL NOT USED BY IV0W*/
        ;
          /* SET INDEX FOR TRADE DISCOUNT GL*/
        if (VCORGL01.GL-GEN-LEDGER-CD == "XTD")
          if (VCORGL01.IV-FACE-BANK-TYP == "F")
            if (VCORGL01.GL-GEN-LEDGER-CD == "845")
              IV0W-WS-REC.IV0WW-INDEX2 = 7;
            else
              IV0W-WS-REC.IV0WW-INDEX2 = 1;
            end
          else
            IV0W-WS-REC.IV0WW-INDEX2 = 2;
          end
        end
        ;
          /* SET INDEX FOR DEFECT ALLOWANCE GL*/
        if (VCORGL01.GL-GEN-LEDGER-CD == "XDA")
          if (VCORGL01.IV-FACE-BANK-TYP == "F")
            IV0W-WS-REC.IV0WW-INDEX2 = 3;
          else
            IV0W-WS-REC.IV0WW-INDEX2 = 4;
          end
        end
        ;
          /* SET INDEX FOR DIRECT SHIP ALLOWANCE*/
        if (VCORGL01.GL-GEN-LEDGER-CD == "XDS")
          IV0W-WS-REC.IV0WW-INDEX2 = 5;
        end
        ;
          /* SET INDEX FOR CASH BANK GL*/
        if (VCORGL01.GL-GEN-LEDGER-CD == "XCB")
          IV0W-WS-REC.IV0WW-INDEX2 = 6;
        end
        ;
          /* SET INDEX FOR SHIP CHARGE GL*/
        if (VCORGL01.GL-GEN-LEDGER-CD == "SHP")
          IV0W-WS-REC.IV0WW-INDEX2 = 8;
        end
        ;
          /* SET INDEX FOR COOP GL*/
        if (VCORGL01.GL-GEN-LEDGER-CD == "XCP")
          IV0W-WS-REC.IV0WW-INDEX2 = 9;
        end
        ;
          /* SET INDEX FOR FREIGHT ALLOWANCE GL*/
        if (VCORGL01.GL-GEN-LEDGER-CD == "XFA")
          IV0W-WS-REC.IV0WW-INDEX2 = 10;
        end
        ;
          /* SET INDEX FOR SMALL ORDER CHARGE GL*/
        if (VCORGL01.GL-GEN-LEDGER-CD == "SML")
          IV0W-WS-REC.IV0WW-INDEX2 = 11;
        end
        ;
          /* MOVE VCORGL01 DATA TO TABLE OCCURANCE IN IV0WW-CORGL-AREA.*/
        ;
        if (IV0WW-INDEX2 < 12)
          IV0W-CRCT-REC.IV-FACE-BANK-TYP[IV0WW-INDEX2] = VCORGL01.IV-FACE-BANK-TYP;
          IV0W-CRCT-REC.IV-GL-NET-FL[IV0WW-INDEX2] = VCORGL01.IV-GL-NET-FL;
          IV0W-CRCT-REC.IV-GL-PCT[IV0WW-INDEX2] = VCORGL01.IV-GL-PCT;
          IV0W-CRCT-REC.IV-GL-AMT[IV0WW-INDEX2] = VCORGL01.IV-GL-AMT;
        end
      end
    else
      if (SQLCA.VAGen_SQLCODE == +100)
        IV0WW-CSR-EOF-FL = "Y";
      else
        return;
      end
    end
  end
  ;
  ;
    /* CLOSE VCORGL01 CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "C2";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORGL();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
end // end IV0WS-GET-REQ-GL

// GET HEADER FOR CRCT SEQ#
Function IV0WS-GET-REQ-HDR()
   /* THE LAST CORRECTION HEADER WITH SEQ# LE REQUESTED SEQ#*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-31-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-GET-REQ-HDR ";
  ;
   /* OPEN A CURSOR ON VCORHD01 AND FETCH ROWS UNTIL NO MORE FOUND OR*/
   /* SEQ# > REQUESTED SEQUENCE NUMBER. MOVE THE DATA TO IV0W-CRCT-REC.*/
  ;
  set SQLCA empty;
  set VCORHD01 empty;
  ;
    /* OPEN VCORHD01 CURSOR*/
  ;
  VCORHD01.IV-IVC-ID = IV0WM001.IV-IVC-ID;
  VCORHD01.IV-CRCT-SEQ-NBR = IV0WM001.IV-CRCT-SEQ-NBR;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S1";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORHD();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    return;
  end
  ;
    /* FETCH LINES FROM CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-CSR-EOF-FL = "N";
  ;
  while (IV0W-WS-REC.IV0WW-CSR-EOF-FL == "N")
    /* REPEAT UNTIL APPROPRIATE HEADER ROW IS FOUND*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
    IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "N1";
    while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
      IV0WS-CALL-CORHD();
    end
    ;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +0)
      if (VCORHD01.IV-CRCT-SEQ-NBR > IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ)
        IV0W-WS-REC.IV0WW-CSR-EOF-FL = "Y";
      else
        IV0W-CRCT-REC.CU-CO-ID = VCORHD01.CU-CO-ID;
        IV0W-CRCT-REC.CU-STOR-ID = VCORHD01.CU-STOR-ID;
        IV0W-CRCT-REC.XNX-DEPT-ID-XREF = VCORHD01.XNX-DEPT-ID-XREF;
        IV0W-CRCT-REC.CU-CO-NM = VCORHD01.CU-CO-NM;
        IV0W-CRCT-REC.SP-SPGM-ID = VCORHD01.SP-SPGM-ID;
        IV0W-CRCT-REC.OP-CUST-PO = VCORHD01.OP-CUST-PO;
        IV0W-CRCT-REC.IV-HNDL-CHG = VCORHD01.IV-HNDL-CHG;
        IV0W-CRCT-REC.CU-HNDL-CHG-NET-FL = VCORHD01.CU-HNDL-CHG-NET-FL;
        IV0W-CRCT-REC.IV-NET-MRCH-AMT = VCORHD01.IV-NET-MRCH-AMT;
        IV0W-CRCT-REC.IV-IVC-AMT = VCORHD01.IV-IVC-AMT;
        IV0W-CRCT-REC.CU-STOR-SELF-ID = VCORHD01.CU-STOR-SELF-ID;
        IV0W-CRCT-REC.IV-PTERM-DEFRD-DT = VCORHD01.IV-PTERM-DEFRD-DT;
        IV0W-CRCT-REC.PK-NBR-OF-CARTONS = VCORHD01.PK-NBR-OF-CARTONS;
        IV0W-CRCT-REC.SR-TOT-NBR-CARTONS = VCORHD01.SR-TOT-NBR-CARTONS;
        IV0W-CRCT-REC.TF-PRO-NBR = VCORHD01.TF-PRO-NBR;
        IV0W-CRCT-REC.XDS-DIR-SHIP-CD = VCORHD01.XDS-DIR-SHIP-CD;
        IV0W-CRCT-REC.TF-CARR-CD = VCORHD01.TF-CARR-CD;
        IV0W-CRCT-REC.TF-CARR-NM = VCORHD01.TF-CARR-NM;
        IV0W-CRCT-REC.XPT-PTERM-CD = VCORHD01.XPT-PTERM-CD;
        IV0W-CRCT-REC.XPT-PTERM-PCT = VCORHD01.XPT-PTERM-PCT;
        IV0W-CRCT-REC.IV-SHIPTO-NM = VCORHD01.IV-SHIPTO-NM;
        IV0W-CRCT-REC.IV-SHIPTO-ADDR1 = VCORHD01.IV-SHIPTO-ADDR1;
        IV0W-CRCT-REC.IV-SHIPTO-ADDR2 = VCORHD01.IV-SHIPTO-ADDR2;
        IV0W-CRCT-REC.IV-SHIPTO-ADDR3 = VCORHD01.IV-SHIPTO-ADDR3;
        IV0W-CRCT-REC.IV-SHIPTO-CITY = VCORHD01.IV-SHIPTO-CITY;
        IV0W-CRCT-REC.IV-SHIPTO-ST-CD = VCORHD01.IV-SHIPTO-ST-CD;
        IV0W-CRCT-REC.IV-SHIPTO-ZIP = VCORHD01.IV-SHIPTO-ZIP;
        ;
        /* SAVE ORIGINAL DATA FROM SEQUENCE 0 LINE*/
        ;
        if (VCORHD01.IV-CRCT-SEQ-NBR == 0)
          IV0W-ORIG-REC.IV0WW-CORHD-AREA = IV0W-CRCT-REC.IV0WW-CORHD-AREA;
        end
        ;
                                  /* SAVE PROVIOUS DATA FROM SEQUENCE*/
                                   /* NUMBERS LESS THAT REQUESTED SEQ#*/
        ;
        if (VCORHD01.IV-CRCT-SEQ-NBR < IV0WM001.IV-CRCT-SEQ-NBR
         || VCORHD01.IV-CRCT-SEQ-NBR == 0)
          IV0W-PREV-REC.IV0WW-CORHD-AREA = IV0W-CRCT-REC.IV0WW-CORHD-AREA;
        end
      end
    else
      if (SQLCA.VAGen_SQLCODE == +100)
        IV0WW-CSR-EOF-FL = "Y";
      else
        return;
      end
    end
  end
  ;
  ;
    /* CLOSE VCORHD01 CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "C1";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORHD();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
end // end IV0WS-GET-REQ-HDR

// GET PRODUCT ITEMS OF CRCT SEQ#
Function IV0WS-GET-REQ-ITM()
   /* FOR EACH PRODUCT LINE GET THE MOST CURRENT CORRECTIONS HAVING*/
   /* SEQ# LE REQUESTED SEQ#. MOVE ITEM DATA TO IV0W-CRCT-REC.*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-GET-REQ-ITM";
  ;
   /* OPEN A CURSOR ON VCORIT01 AND FETCH ROWS UNTIL NO MORE FOUND OR*/
   /* SEQ# > REQUESTED SEQUENCE NUMBER. MOVE THE DATA TO IV0W-CRCT-REC.*/
  ;
  set SQLCA empty;
  set VCORIT01 empty;
  ;
  ;
    /* OPEN VCORIT01 CURSOR*/
  ;
  VCORIT01.IV-IVC-ID = IV0WM001.IV-IVC-ID;
  VCORIT01.IV-CRCT-SEQ-NBR = IV0WM001.IV-CRCT-SEQ-NBR;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S2";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORIT();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    return;
  end
  ;
    /* FETCH LINES FROM CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-CSR-EOF-FL = "N";
  IV0WW-INDEX3 = 1;
  ;
  while (IV0W-WS-REC.IV0WW-CSR-EOF-FL == "N")
    /* REPEAT WHILE CORRECTION SEQUENCE LE REQUESTED SEQ NBR.*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
    IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "N2";
    while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
      IV0WS-CALL-CORIT();
    end
    ;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +0)
      if (VCORIT01.IV-CRCT-SEQ-NBR > IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ)
        IV0WW-CSR-EOF-FL = "Y";
      else
        ;
        /* MOVE VCORIT DATA TO IV0W-CRCT-REC*/
        ;
         /* locate the item iv iv0w-crct-rec line*/
         /* item table. set iv0ww-index2*/
         /* to the location value for the line*/
         /* item being updated. The following*/
         /* moves will update the appropriate*/
         /* line on the crct-rec, orig-rec,*/
         /* and prev-rec.*/
        ;
        IV0WS-SET-ITM-PTR(); /* returns value in iv0ww-index2*/
        ;
        if (IV0W-WS-REC.IV0WW-INDEX2 == 0) /* must have a valid match*/
          converseLib.validationFailed(118);
          IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
          return;
        end
        ;
        IV0W-CRCT-REC.IV0WW-OP-LINE-ITEM-NBR-IT[IV0WW-INDEX2] = VCORIT01.OP-LINE-ITEM-NBR;
        ;
        IV0W-CRCT-REC.SY-STY-NBR[IV0WW-INDEX2] = VCORIT01.SY-STY-NBR;
        ;
        IV0W-CRCT-REC.SY-COLR-CD-ID[IV0WW-INDEX2] = VCORIT01.SY-COLR-CD-ID;
        ;
        IV0W-CRCT-REC.XDM-DIM-CD[IV0WW-INDEX2] = "00";
        ;
        IV0W-CRCT-REC.CU-PROD-ID[IV0WW-INDEX2] = VCORIT01.CU-PROD-ID;
        ;
        IV0W-CRCT-REC.XUM-UOM-CD[IV0WW-INDEX2] = VCORIT01.XUM-UOM-CD;
        ;
        IV0W-CRCT-REC.OP-PRC-OVRD-FL[IV0WW-INDEX2] = VCORIT01.OP-PRC-OVRD-FL;
        ;
        IV0W-CRCT-REC.OP-PRC-VARY-FL[IV0WW-INDEX2] = VCORIT01.OP-PRC-VARY-FL;
        ;
        IV0W-CRCT-REC.IV-GRS-LN-UNIT-PRC[IV0WW-INDEX2] = VCORIT01.IV-GRS-LN-UNIT-PRC;
        ;
        IV0W-CRCT-REC.IV-NET-LN-UNIT-PRC[IV0WW-INDEX2] = VCORIT01.IV-NET-LN-UNIT-PRC;
        ;
        IV0W-CRCT-REC.IV-GRS-LN-MRCH-AMT[IV0WW-INDEX2] = VCORIT01.IV-GRS-LN-MRCH-AMT;
        ;
        IV0W-CRCT-REC.IV-NET-LN-MRCH-AMT[IV0WW-INDEX2] = VCORIT01.IV-NET-LN-MRCH-AMT;
        ;
        IV0W-CRCT-REC.IV-LN-SHIPPED-QTY[IV0WW-INDEX2] = VCORIT01.IV-LN-SHIPPED-QTY;
        ;
        IV0W-CRCT-REC.IV-NBR-SZ[IV0WW-INDEX2] = VCORIT01.IV-NBR-SZ;
        ;
          /* IF CORRECTION SEQUENCE NUMBER = 0 REPEAT THE ABOVE MOVES*/
          /* AND SEND TO THE DATA TO IV0W-ORIG-REC*/
          /* INSTEAD OF IV0W-CRCT-REC.*/
          /* THIS SAVES THE ORIGINAL VERSION OF ALL THE VALUES.*/
        ;
        if (VCORIT01.IV-CRCT-SEQ-NBR == 0)
          IV0W-ORIG-REC.IV0WW-OP-LINE-ITEM-NBR-IT[IV0WW-INDEX2] = VCORIT01.OP-LINE-ITEM-NBR;
          ;
          IV0W-ORIG-REC.SY-STY-NBR[IV0WW-INDEX2] = VCORIT01.SY-STY-NBR;
          ;
          IV0W-ORIG-REC.SY-COLR-CD-ID[IV0WW-INDEX2] = VCORIT01.SY-COLR-CD-ID;
          ;
          IV0W-ORIG-REC.XDM-DIM-CD[IV0WW-INDEX2] = "00";
          ;
          IV0W-ORIG-REC.CU-PROD-ID[IV0WW-INDEX2] = VCORIT01.CU-PROD-ID;
          ;
          IV0W-ORIG-REC.XUM-UOM-CD[IV0WW-INDEX2] = VCORIT01.XUM-UOM-CD;
          ;
          IV0W-ORIG-REC.OP-PRC-OVRD-FL[IV0WW-INDEX2] = VCORIT01.OP-PRC-OVRD-FL;
          ;
          IV0W-ORIG-REC.OP-PRC-VARY-FL[IV0WW-INDEX2] = VCORIT01.OP-PRC-VARY-FL;
          ;
          IV0W-ORIG-REC.IV-GRS-LN-UNIT-PRC[IV0WW-INDEX2] = VCORIT01.IV-GRS-LN-UNIT-PRC;
          ;
          IV0W-ORIG-REC.IV-NET-LN-UNIT-PRC[IV0WW-INDEX2] = VCORIT01.IV-NET-LN-UNIT-PRC;
          ;
          IV0W-ORIG-REC.IV-GRS-LN-MRCH-AMT[IV0WW-INDEX2] = VCORIT01.IV-GRS-LN-MRCH-AMT;
          ;
          IV0W-ORIG-REC.IV-NET-LN-MRCH-AMT[IV0WW-INDEX2] = VCORIT01.IV-NET-LN-MRCH-AMT;
          ;
          IV0W-ORIG-REC.IV-LN-SHIPPED-QTY[IV0WW-INDEX2] = VCORIT01.IV-LN-SHIPPED-QTY;
          ;
          IV0W-ORIG-REC.IV-NBR-SZ[IV0WW-INDEX2] = VCORIT01.IV-NBR-SZ;
          ;
        end
        ;
          /* IF CORRECTION SEQUENCE NUMBER LESS THAN THE CURRENT*/
          /* REQUESTED SEQUENCE NUMBER THEN REPEAT THE ABOVE MOVES*/
          /* AND SEND TO THE DATA TO IV0W-PREV-REC*/
          /* INSTEAD OF IV0W-ORIG-REC.*/
          /* THIS SAVES THE THE PREVIOUS VALUES FOR CHECKING TO SEE*/
          /* IF THE VALUES CHANGED, AND TO SET THE ATTRIBUTE TO BRIGHT*/
          /* IF THE VALUE WAS CHANGED FROM THE PREVIOUS VALUE.*/
        ;
        if (VCORIT01.IV-CRCT-SEQ-NBR < IV0WM001.IV-CRCT-SEQ-NBR
         || VCORIT01.IV-CRCT-SEQ-NBR == 0)
          IV0W-PREV-REC.IV0WW-OP-LINE-ITEM-NBR-IT[IV0WW-INDEX2] = VCORIT01.OP-LINE-ITEM-NBR;
          ;
          IV0W-PREV-REC.SY-STY-NBR[IV0WW-INDEX2] = VCORIT01.SY-STY-NBR;
          ;
          IV0W-PREV-REC.SY-COLR-CD-ID[IV0WW-INDEX2] = VCORIT01.SY-COLR-CD-ID;
          ;
          IV0W-PREV-REC.XDM-DIM-CD[IV0WW-INDEX2] = "00";
          ;
          IV0W-PREV-REC.CU-PROD-ID[IV0WW-INDEX2] = VCORIT01.CU-PROD-ID;
          ;
          IV0W-PREV-REC.XUM-UOM-CD[IV0WW-INDEX2] = VCORIT01.XUM-UOM-CD;
          ;
          IV0W-PREV-REC.OP-PRC-OVRD-FL[IV0WW-INDEX2] = VCORIT01.OP-PRC-OVRD-FL;
          ;
          IV0W-PREV-REC.OP-PRC-VARY-FL[IV0WW-INDEX2] = VCORIT01.OP-PRC-VARY-FL;
          ;
          IV0W-PREV-REC.IV-GRS-LN-UNIT-PRC[IV0WW-INDEX2] = VCORIT01.IV-GRS-LN-UNIT-PRC;
          ;
          IV0W-PREV-REC.IV-NET-LN-UNIT-PRC[IV0WW-INDEX2] = VCORIT01.IV-NET-LN-UNIT-PRC;
          ;
          IV0W-PREV-REC.IV-GRS-LN-MRCH-AMT[IV0WW-INDEX2] = VCORIT01.IV-GRS-LN-MRCH-AMT;
          ;
          IV0W-PREV-REC.IV-NET-LN-MRCH-AMT[IV0WW-INDEX2] = VCORIT01.IV-NET-LN-MRCH-AMT;
          ;
          IV0W-PREV-REC.IV-LN-SHIPPED-QTY[IV0WW-INDEX2] = VCORIT01.IV-LN-SHIPPED-QTY;
          ;
          IV0W-PREV-REC.IV-NBR-SZ[IV0WW-INDEX2] = VCORIT01.IV-NBR-SZ;
          ;
        end
        ;
        IV0WW-INDEX3 = IV0WW-INDEX3 + 1;
        ;
         /* no limit to lines to be read, since*/
         /* program does a match-up with*/
        /* lines already in the table instead of adding new lines.*/
        if (IV0WW-INDEX3 > 300)
          IV0W-WS-REC.IV0WW-CSR-EOF-FL = "Y";
        end
        ;
      end
    else
      if (SQLCA.VAGen_SQLCODE == +100)
        IV0WW-CSR-EOF-FL = "Y";
      else
        return;
      end
    end
  end
  ;
  ;
    /* CLOSE VCORIT01 CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "C2";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORIT();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
end // end IV0WS-GET-REQ-ITM

// GET TEXT LINES FOR CRCT SEQ#
Function IV0WS-GET-REQ-TEXT()
   /* GET 0 TO 3 CORRECTION TEXT LINES FOR THE IVC-ID AND CRCT-SEQ*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-31-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-GET-REQ-TEXT";
  ;
   /* OPEN A CURSOR ON VCORTX01 AND FETCH ROWS UNTIL NO MORE FOUND OR*/
   /* ROW COUNT = 3. LOAD ROWS IN TEXT AREA OF IV0W-CRCT-REC.*/
  ;
  set SQLCA empty;
  set VCORTX01 empty;
  ;
   /* CLEAR TEXT AREA SINCE TEXT IS ASSOCIATED WITH JUST ONE SEQUENCE*/
   /* NUMBER AND CURR SEQ# COMMENTS ARE ABOUT TO BE FETCHED.*/
  ;
  IV0W-CRCT-REC.IV-TXT[1] = " ";
  IV0W-CRCT-REC.IV-TXT[2] = " ";
  IV0W-CRCT-REC.IV-TXT[3] = " ";
  IV0W-CRCT-REC.IV-TXT-SEQ-NBR[1] = 1;
  IV0W-CRCT-REC.IV-TXT-SEQ-NBR[2] = 2;
  IV0W-CRCT-REC.IV-TXT-SEQ-NBR[3] = 3;
  ;
    /* OPEN VCORTX01 CURSOR*/
  ;
  VCORTX01.IV-IVC-ID = IV0WM001.IV-IVC-ID;
  VCORTX01.IV-CRCT-SEQ-NBR = IV0WM001.IV-CRCT-SEQ-NBR;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S1";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORTX();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    return;
  end
  ;
    /* FETCH LINES FROM CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-INDEX2 = 0;
  IV0W-WS-REC.IV0WW-CSR-EOF-FL = "N";
  ;
  while (IV0W-WS-REC.IV0WW-CSR-EOF-FL == "N")
    /* REPEAT UNTIL LAST TEXT ROW FOUND*/
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
    IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "N1";
    while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
      IV0WS-CALL-CORTX();
    end
    ;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +0)
      IV0WW-INDEX2 = IV0WW-INDEX2 + 1;
      IV0W-CRCT-REC.IV-TXT[IV0WW-INDEX2] = VCORTX01.IV-TXT;
      IV0W-CRCT-REC.IV-TXT-SEQ-NBR[IV0WW-INDEX2] = VCORTX01.IV-TXT-SEQ-NBR;
      if (IV0WW-INDEX2 == 3)
        IV0WW-CSR-EOF-FL = "Y";
      end
    else
      if (SQLCA.VAGen_SQLCODE == +100)
        IV0WW-CSR-EOF-FL = "Y";
      else
        return;
      end
    end
  end
  ;
  ;
    /* CLOSE VCORIT01 CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "C1";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORTX();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
end // end IV0WS-GET-REQ-TEXT

// GET CUSTOMER STORE SELF ID
Function IV0WS-GET-SELF-ID()
   /* IV0WS-GET-SELF-ID  - GET CUSTOMER STORE SELF ID*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-GET-SELF-ID ";
  ;
   /* SELECT THE DCUST.VSTORE01 LINE FOR THE CUSTOMER. MOVE THE*/
   /* STORE SELF ID TO WORKING STORAGE RECORD - IV0W-CRCT-REC.*/
  ;
  set SQLCA empty;
  set KUMREC empty;
  ;
  KUMREC.KUCCOID = IV0W-CRCT-REC.CU-CO-ID;
  KUMREC.KUMSTRID = IV0W-CRCT-REC.CU-STOR-ID;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-STORE();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    IV0W-CRCT-REC.CU-STOR-SELF-ID = KUMREC.KUMSLFID;
    ;
    if (IV0W-ORIG-REC.CU-STOR-SELF-ID == " ")
      IV0W-ORIG-REC.CU-STOR-SELF-ID = KUMREC.KUMSLFID;
    end
    ;
    if (IV0W-PREV-REC.CU-STOR-SELF-ID == " ")
      IV0W-PREV-REC.CU-STOR-SELF-ID = KUMREC.KUMSLFID;
    end
    ;
  else
    if (SQLCA.VAGen_SQLCODE == +100)
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      converseLib.validationFailed(81);
      set IV0WM001.CU-CO-ID cursor, modified, red;
      set IV0WM001.CU-STOR-ID modified, red;
    else
      return;
    end
  end
end // end IV0WS-GET-SELF-ID

// set attributes - map 1 data.
Function IV0WS-INQ-M1-ATTR()
   /* IV0WS-INQ-M1-ATTR  - SET ATTRIBUTES FOR MAP 1 DATA - INQUIRY MODE*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-21-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-INQ-M1-ATTR ";
  ;
  if (IV0W-CRCT-REC.CU-CO-ID != IV0W-PREV-REC.CU-CO-ID)
    set IV0WM001.CU-CO-ID skip, bold;
  else
    set IV0WM001.CU-CO-ID skip;
  end
  ;
  if (IV0W-CRCT-REC.CU-STOR-ID != IV0W-PREV-REC.CU-STOR-ID)
    set IV0WM001.CU-STOR-ID skip, bold;
  else
    set IV0WM001.CU-STOR-ID skip;
  end
  ;
  if (IV0W-CRCT-REC.XNX-DEPT-ID-XREF != IV0W-PREV-REC.XNX-DEPT-ID-XREF)
    set IV0WM001.XNX-DEPT-ID-XREF skip, bold;
  else
    set IV0WM001.XNX-DEPT-ID-XREF skip;
  end
  ;
  if (IV0W-CRCT-REC.CU-CO-NM != IV0W-PREV-REC.CU-CO-NM)
    set IV0WM001.CU-CO-NM skip, bold;
  else
    set IV0WM001.CU-CO-NM skip;
  end
  ;
  ;
  if (IV0W-CRCT-REC.OP-CUST-PO != IV0W-PREV-REC.OP-CUST-PO)
    set IV0WM001.IV0WM-OP-CUST-PO skip, bold;
  else
    set IV0WM001.IV0WM-OP-CUST-PO skip;
  end
  ;
  if (IV0W-CRCT-REC.SP-SPGM-ID != IV0W-PREV-REC.SP-SPGM-ID)
    set IV0WM001.IV0WM-SP-SPGM-ID skip, bold;
  else
    set IV0WM001.IV0WM-SP-SPGM-ID skip;
  end
  ;
  if (IV0W-CRCT-REC.TF-CARR-NM != IV0W-PREV-REC.TF-CARR-NM)
    set IV0WM001.IV0WM-TF-CARR-NM skip, bold;
  else
    set IV0WM001.IV0WM-TF-CARR-NM skip;
  end
  ;
  if (IV0W-CRCT-REC.TF-CARR-CD != IV0W-PREV-REC.TF-CARR-CD)
    set IV0WM001.IV0WM-TF-CARR-CD skip, bold;
  else
    set IV0WM001.IV0WM-TF-CARR-CD skip;
  end
  ;
  if (IV0W-CRCT-REC.TF-PRO-NBR != IV0W-PREV-REC.TF-PRO-NBR)
    set IV0WM001.IV0WM-TF-PRO-NBR skip, bold;
  else
    set IV0WM001.IV0WM-TF-PRO-NBR skip;
  end
  ;
  if (IV0W-CRCT-REC.IV-NET-MRCH-AMT != IV0W-PREV-REC.IV-NET-MRCH-AMT)
    set IV0WM001.IV0WM-NET-MRCH-AMT skip, bold;
  else
    set IV0WM001.IV0WM-NET-MRCH-AMT skip;
  end
  ;
  if (IV0W-CRCT-REC.IV-HNDL-CHG != IV0W-PREV-REC.IV-HNDL-CHG)
    set IV0WM001.IV0WM-IV-HNDL-CHG skip, bold;
  else
    set IV0WM001.IV0WM-IV-HNDL-CHG skip;
  end
  ;
  if (IV0W-CRCT-REC.CU-HNDL-CHG-NET-FL != 
  IV0W-PREV-REC.CU-HNDL-CHG-NET-FL)
    set IV0WM001.IV0WM-HNDL-CHG-NET-FL skip, bold;
  else
    set IV0WM001.IV0WM-HNDL-CHG-NET-FL skip;
  end
  ;
  if (IV0W-CRCT-REC.IV-IVC-AMT != IV0W-PREV-REC.IV-IVC-AMT)
    set IV0WM001.IV0WM-IVC-AMT skip, bold;
  else
    set IV0WM001.IV0WM-IVC-AMT skip;
  end
  ;
  if (IV0W-CRCT-REC.CU-STOR-SELF-ID != IV0W-PREV-REC.CU-STOR-SELF-ID)
    set IV0WM001.IV0WM-CU-STOR-SELF-ID skip, bold;
  else
    set IV0WM001.IV0WM-CU-STOR-SELF-ID skip;
  end
  ;
  if (IV0W-CRCT-REC.PK-NBR-OF-CARTONS != IV0W-PREV-REC.PK-NBR-OF-CARTONS)
    set IV0WM001.IV0WM-PK-NBR-OF-CARTONS skip, bold;
  else
    set IV0WM001.IV0WM-PK-NBR-OF-CARTONS skip;
  end
  ;
  if (IV0W-CRCT-REC.SR-TOT-NBR-CARTONS != IV0W-PREV-REC.SR-TOT-NBR-CARTONS)
    set IV0WM001.IV0WM-SR-TOT-NBR-CARTONS skip, bold;
  else
    set IV0WM001.IV0WM-SR-TOT-NBR-CARTONS skip;
  end
  ;
  if (IV0W-CRCT-REC.XPT-PTERM-CD != IV0W-PREV-REC.XPT-PTERM-CD)
    set IV0WM001.IV0WM-XPT-PTERM-CD skip, bold;
  else
    set IV0WM001.IV0WM-XPT-PTERM-CD skip;
  end
  ;
  if (IV0W-CRCT-REC.IV-PTERM-DSCT-AMT != IV0W-PREV-REC.IV-PTERM-DSCT-AMT)
    set IV0WM001.IV0WM-PTERM-DSCT-AMT skip, bold;
  else
    set IV0WM001.IV0WM-PTERM-DSCT-AMT skip;
  end
  ;
  if (IV0W-CRCT-REC.IV-PTERM-DEFRD-DT == 0)
    set IV0WM001.IV0WM-PTERM-DEFRD-DT skip, invisible;
  else
    set IV0WM001.IV0WM-PTERM-DEFRD-DT skip;
  end
  ;
  if (IV0W-CRCT-REC.IV-PTERM-DEFRD-DT != IV0W-PREV-REC.IV-PTERM-DEFRD-DT)
    set IV0WM001.IV0WM-PTERM-DEFRD-DT skip, bold;
  else
    set IV0WM001.IV0WM-PTERM-DEFRD-DT skip;
  end
  ;
  if (IV0W-CRCT-REC.IV-SHIPTO-NM != IV0W-PREV-REC.IV-SHIPTO-NM)
    set IV0WM001.IV0WM-SHIPTO-NM skip, bold;
  else
    set IV0WM001.IV0WM-SHIPTO-NM skip;
  end
  ;
  if (IV0W-CRCT-REC.IV-SHIPTO-ADDR1 != IV0W-PREV-REC.IV-SHIPTO-ADDR1)
    set IV0WM001.IV0WM-SHIPTO-ADDR1 skip, bold;
  else
    set IV0WM001.IV0WM-SHIPTO-ADDR1 skip;
  end
  ;
  if (IV0W-CRCT-REC.IV-SHIPTO-ADDR2 != IV0W-PREV-REC.IV-SHIPTO-ADDR2)
    set IV0WM001.IV0WM-SHIPTO-ADDR2 skip, bold;
  else
    set IV0WM001.IV0WM-SHIPTO-ADDR2 skip;
  end
  ;
  if (IV0W-CRCT-REC.IV-SHIPTO-ADDR3 != IV0W-PREV-REC.IV-SHIPTO-ADDR3)
    set IV0WM001.IV0WM-SHIPTO-ADDR3 skip, bold;
  else
    set IV0WM001.IV0WM-SHIPTO-ADDR3 skip;
  end
  ;
  if (IV0W-CRCT-REC.IV-SHIPTO-CITY != IV0W-PREV-REC.IV-SHIPTO-CITY)
    set IV0WM001.IV0WM-SHIPTO-CITY skip, bold;
  else
    set IV0WM001.IV0WM-SHIPTO-CITY skip;
  end
  ;
  if (IV0W-CRCT-REC.IV-SHIPTO-ST-CD != IV0W-PREV-REC.IV-SHIPTO-ST-CD)
    set IV0WM001.IV0WM-SHIPTO-ST-CD skip, bold;
  else
    set IV0WM001.IV0WM-SHIPTO-ST-CD skip;
  end
  ;
  if (IV0W-CRCT-REC.IV-SHIPTO-ZIP != IV0W-PREV-REC.IV-SHIPTO-ZIP)
    set IV0WM001.IV0WM-SHIPTO-ZIP-CD skip, bold;
  else
    set IV0WM001.IV0WM-SHIPTO-ZIP-CD skip;
  end
  ;
  if (IV0W-CRCT-REC.ZZ-CHNG-DT == 0)
    set IV0WM001.ZZ-CHNG-DT skip, invisible;
  else
    set IV0WM001.ZZ-CHNG-DT initialAttributes;
  end
  ;
  set IV0WM001.XIC-IVC-CRCTRSN-CD skip;
  set IV0WM001.IV0WM-CMT-TEXT1 skip;
  set IV0WM001.IV0WM-CMT-TEXT2 skip;
  set IV0WM001.IV0WM-CMT-TEXT3 skip;
  ;
  if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "N")
    set IV0WM001.IV-IVC-ID cursor, initialAttributes;
  end
  ;
  set IV0WM001.IV-CRCT-SEQ-NBR initialAttributes;
  set IV0WM001.IV-MAX-CRCT-SEQ initialAttributes;
  set IV0WM001.XXX-USER-ID initialAttributes;
  ;
end // end IV0WS-INQ-M1-ATTR

// set attributes - map 1 data.
Function IV0WS-INQ-M5-ATTR()
   /* IV0WS-INQ-M5-ATTR  - SET ATTRIBUTES FOR MAP 5 DATA - INQUIRY MODE*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-21-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-INQ-M5-ATTR ";
  ;
  IV0W-WS-REC.IV0WW-INDEX2 = 1;
  IV0W-WS-REC.IV0WW-INDEX3 = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR;
  ;
  while (IV0W-WS-REC.IV0WW-INDEX2 <= 15
   && IV0W-WS-REC.IV0WW-INDEX3 <= 300)
    ;
    if (IV0W-CRCT-REC.SY-STY-NBR[IV0WW-INDEX3] == "      "
     || IV0WM005.IV0WM-SY-STY-NBR[IV0WW-INDEX2] == " ")
      set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] skip, invisible;
    else
      if (IV0W-CRCT-REC.CU-PROD-ID[IV0WW-INDEX3] != 
      IV0W-PREV-REC.CU-PROD-ID[IV0WW-INDEX3])
        ;
        set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] skip, bold;
      else
        set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] skip;
      end
    end
    ;
    IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
    IV0W-WS-REC.IV0WW-INDEX3 = IV0W-WS-REC.IV0WW-INDEX3 + 1;
    ;
  end
  ;
   /* set attribute to autoskip,dark for map lines not related to lines*/
   /* on the iv0w-crct-rec table*/
  while (IV0W-WS-REC.IV0WW-INDEX2 <= 15
  )
    set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] skip, invisible;
    ;
    IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
    ;
  end
  ;
  if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "N")
    set IV0WM005.IV0WM-SEL-SY-STY-NBR cursor;
  end
  ;
  set IV0WM005.IV-IVC-ID initialAttributes;
  set IV0WM005.IV-CRCT-SEQ-NBR initialAttributes;
  set IV0WM005.IV-MAX-CRCT-SEQ initialAttributes;
  ;
end // end IV0WS-INQ-M5-ATTR

// MOVE ITEM TABLE TO UPDATE TABL
Function IV0WS-ITEM-TO-UPDT()
   /* IV0WS-ITEM-TO-UPDT - MOVE ITEM TABLE DATA TO UPDATE TABLE*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-21-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-ITEM-TO-UPDT";
  ;
  IV0W-UPDT-REC.IV0WW-CORIT-AREA = IV0W-ITEM-REC.IV0WW-CORIT-AREA;
  ;
end // end IV0WS-ITEM-TO-UPDT

// Program Initialization - IV0W
Function IV0WS-IV-PGM-INIT()
     /* IV0WS-IV-PGM-INIT - PROGRAM INITIALIZATION FOR IV0W*/
   /* *********************************************************************/
   /* *      M A I N T E N A N C E     H I S T O R Y     L O G           **/
   /* *------------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                    **/
   /* *------------------------------------------------------------------**/
   /* * 02-16-95  GDECKE  NEW APPLICATION                                **/
   /* *********************************************************************/
     /* ***   this statement group RETRIEVES HEADER INFO    ****/
     /* *** AND CHECKS FOR PROPER ENTRY.                    ****/
  ;
  IV0W-WS-REC.IV0WW-SHOW-MSG-82-FLAG = "Y";
  ;
     /* determine if came in fastpath*/
  ;
  if (COMMAREA.CAITEM != " " /* fastpath entry*/
   || COMMAREA.CAFRMSYS != COMMAREA.CACURSYS) /* from other sys,10-28-87*/
    IVYREC.IVYMTXT = "IV0WS-IV-PGM-INIT"; /* in case of error 1-26-88*/
    ;
    if (COMMAREA.CAITEM == " ")
      COMMAREA.CAITEM = "000000";
    end
    ;
    XSIVSFP(); /* find header index and company*/
    IVYREC.IVYMTXT = " "; /* 1-26-88*/
    if (IVXREC.IVXMSSNB != 0) /* if had error on invoice lookup*/
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      /* MOVE 'IV0A' TO COMMAREA.CATOAP;*/
      /* XSEXIT;                      /* pass to menu screen*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      /* dont show msg #82 in no ivc when entering program*/
      IV0W-WS-REC.IV0WW-SHOW-MSG-82-FLAG = "N";
      /* MOVE 82 EZEMNO;*/
      return;
    end
    COMMAREA.CAITEM = " "; /* reset caitem to space*/
  else /* not fastpath*/
    IVXREC.IVXGROUP = COMMAREA.CAUSERA; /* setup up program storage*/
    if (IVXREC.IVXINIT != "IV0") /* if ivxrec not inited*/
      set IVXREC empty;
      /* MOVE 18 TO IVXREC.IVXMSSNB;  /* must have been fast path w/o item*/
      IVXREC.IVXINIT = "IV0"; /* set so that iv0a will look for*/
                                   /* message*/
      COMMAREA.CAUSERA = IVXREC.IVXGROUP; /* return to iv0a*/
      /* MOVE 'IV0A' TO COMMAREA.CATOAP;*/
      /* XSEXIT;*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      /* dont show msg #82 in no ivc when entering program*/
      IV0W-WS-REC.IV0WW-SHOW-MSG-82-FLAG = "N";
      /* MOVE 82 EZEMNO;*/
      return;
    end
  end
  ;
     /* if came here direct from menu, will still need to*/
     /* retrieve header index and company.  use kuccoid as check*/
  ;
  if (IVXREC.KUCCOID <= 0)
    IVYREC.IVYMTXT = "IV0WS-IV-PGM-INIT"; /* in case of error 1-26-88*/
    XSIVSFH(); /* routine to do lookups*/
    IVYREC.IVYMTXT = " "; /* in case of error 1-26-88*/
     /* below added 1-22-88*/
    if (IVXREC.IVXMSSNB != 0) /* if error on invoice lookup*/
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      /* MOVE 'IV0A' TO COMMAREA.CATOAP;*/
      /* XSEXIT;                      /* pass to menu screen*/
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      /* dont show msg #82 in no ivc when entering program*/
      IV0W-WS-REC.IV0WW-SHOW-MSG-82-FLAG = "N";
      /* MOVE 82 EZEMNO;*/
      return;
    end
     /* above added 1-22-88*/
  end
  ;
  ;
end // end IV0WS-IV-PGM-INIT

// MOVE DATA FROM WS REC TO MAP
Function IV0WS-LOAD-HDR-MAP()
   /* MOVE DATA FROM WORKING STORAGE RECORD TO HEADER MAP - IV0WM001*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-31-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-LOAD-HDR-MAP";
  ;
  IV0WM001.CU-CO-ID = IV0W-CRCT-REC.CU-CO-ID;
  ;
  IV0WM001.CU-STOR-ID = IV0W-CRCT-REC.CU-STOR-ID;
  ;
  IV0WM001.XNX-DEPT-ID-XREF = IV0W-CRCT-REC.XNX-DEPT-ID-XREF;
  ;
  IV0WM001.CU-CO-NM = IV0W-CRCT-REC.CU-CO-NM;
  ;
  IV0WM001.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ;
  IV0WM001.IV-MAX-CRCT-SEQ = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
  ;
  IV0WM001.IV0WM-OP-CUST-PO = IV0W-CRCT-REC.OP-CUST-PO;
  ;
  IV0WM001.IV0WM-SP-SPGM-ID = IV0W-CRCT-REC.SP-SPGM-ID;
  ;
  IV0WM001.IV0WM-TF-CARR-NM = IV0W-CRCT-REC.TF-CARR-NM;
  ;
  IV0WM001.IV0WM-TF-CARR-CD = IV0W-CRCT-REC.TF-CARR-CD;
  ;
  IV0WM001.IV0WM-TF-PRO-NBR = IV0W-CRCT-REC.TF-PRO-NBR;
  ;
  IV0WM001.IV0WM-NET-MRCH-AMT = IV0W-CRCT-REC.IV-NET-MRCH-AMT;
  ;
  IV0WM001.IV0WM-IV-HNDL-CHG = IV0W-CRCT-REC.IV-HNDL-CHG;
  ;
  IV0WM001.IV0WM-HNDL-CHG-NET-FL = IV0W-CRCT-REC.CU-HNDL-CHG-NET-FL;
  ;
  IV0WM001.IV0WM-IVC-AMT = IV0W-CRCT-REC.IV-IVC-AMT;
  ;
  IV0WM001.IV0WM-CU-STOR-SELF-ID = IV0W-CRCT-REC.CU-STOR-SELF-ID;
  ;
  IV0WM001.IV0WM-PK-NBR-OF-CARTONS = IV0W-CRCT-REC.PK-NBR-OF-CARTONS;
  ;
  IV0WM001.IV0WM-SR-TOT-NBR-CARTONS = IV0W-CRCT-REC.SR-TOT-NBR-CARTONS;
  ;
  IV0WM001.IV0WM-XPT-PTERM-CD = IV0W-CRCT-REC.XPT-PTERM-CD;
  if (IV0W-CRCT-REC.XPT-PTERM-CD in XPTTBL.XPTCD)
    IV0WM001.IV0WM-XPT-PTERM-DESC = XPTTBL.XPTDESC[sysVar.arrayIndex];
  else
    IV0WM001.IV0WM-XPT-PTERM-DESC = "UNKNOWN";
  end
  ;
  IV0WM001.IV0WM-PTERM-DSCT-AMT = IV0W-CRCT-REC.IV-PTERM-DSCT-AMT;
  ;
  if (IV0W-CRCT-REC.IV-PTERM-DEFRD-DT == 0)
    set IV0WM001.IV0WM-PTERM-DEFRD-DT skip, invisible;
  else
    IV0W-WS-REC.IV0WW-FMT1-DT = IV0W-CRCT-REC.IV-PTERM-DEFRD-DT;
    IV0W-WS-REC.IV0WW-FMT2-DT-YY = IV0W-WS-REC.IV0WW-FMT1-DT-YY;
    IV0W-WS-REC.IV0WW-FMT2-DT-MM = IV0W-WS-REC.IV0WW-FMT1-DT-MM;
    IV0W-WS-REC.IV0WW-FMT2-DT-DD = IV0W-WS-REC.IV0WW-FMT1-DT-DD;
    IV0WM001.IV0WM-PTERM-DEFRD-DT = IV0W-WS-REC.IV0WW-FMT2-DT;
  end
  ;
  ;
  IV0WM001.IV0WM-SHIPTO-NM = IV0W-CRCT-REC.IV-SHIPTO-NM;
  ;
  IV0WM001.IV0WM-SHIPTO-ADDR1 = IV0W-CRCT-REC.IV-SHIPTO-ADDR1;
  ;
  IV0WM001.IV0WM-SHIPTO-ADDR2 = IV0W-CRCT-REC.IV-SHIPTO-ADDR2;
  ;
  IV0WM001.IV0WM-SHIPTO-ADDR3 = IV0W-CRCT-REC.IV-SHIPTO-ADDR3;
  ;
  IV0WM001.IV0WM-SHIPTO-CITY = IV0W-CRCT-REC.IV-SHIPTO-CITY;
  ;
  IV0WM001.IV0WM-SHIPTO-ST-CD = IV0W-CRCT-REC.IV-SHIPTO-ST-CD;
  ;
  IV0WM001.IV0WM-SHIPTO-ZIP-CD = IV0W-CRCT-REC.IV-SHIPTO-ZIP;
  ;
    /* MOVE GL DATA TO MAP*/
  ;
  IV0WS-BLD-MAP-GLS();
  ;
    /* move text lines to map*/
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    IV0WM001.IV0WM-CMT-TEXT1 = " "; /* dont show these in update mode*/
    IV0WM001.IV0WM-CMT-TEXT2 = " ";
    IV0WM001.IV0WM-CMT-TEXT3 = " ";
    IV0WM001.XIC-IVC-CRCTRSN-CD = " ";
  else
    IV0WM001.IV0WM-CMT-TEXT1 = IV0W-CRCT-REC.IV-TXT[1];
    IV0WM001.IV0WM-CMT-TEXT2 = IV0W-CRCT-REC.IV-TXT[2];
    IV0WM001.IV0WM-CMT-TEXT3 = IV0W-CRCT-REC.IV-TXT[3];
    IV0WM001.XIC-IVC-CRCTRSN-CD = IV0W-CRCT-REC.XIC-IVC-CRCTRSN-CD;
  end
  ;
    /* MOVE MISC FIELDS TO MAP*/
  ;
  IV0WM001.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ;
  ;
  if (IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ == 0)
    IV0WM001.XXX-USER-ID = " ";
  else
    IV0WM001.XXX-USER-ID = IV0W-CRCT-REC.XXX-USER-ID;
  end
  ;
  ;
  if (IV0W-CRCT-REC.ZZ-CHNG-DT == 0)
    set IV0WM001.ZZ-CHNG-DT skip, invisible;
  else
    IV0W-WS-REC.IV0WW-FMT1-DT = IV0W-CRCT-REC.ZZ-CHNG-DT;
    IV0W-WS-REC.IV0WW-FMT2-DT-YY = IV0W-WS-REC.IV0WW-FMT1-DT-YY;
    IV0W-WS-REC.IV0WW-FMT2-DT-MM = IV0W-WS-REC.IV0WW-FMT1-DT-MM;
    IV0W-WS-REC.IV0WW-FMT2-DT-DD = IV0W-WS-REC.IV0WW-FMT1-DT-DD;
    IV0WM001.ZZ-CHNG-DT = IV0W-WS-REC.IV0WW-FMT2-DT;
  end
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    IV0WM001.IV0WM-UPDT-MODE-DESC = "UPDATE ";
    IV0WM005.IV0WM-UPDT-MODE-DESC = "UPDATE ";
  else
    IV0WM001.IV0WM-UPDT-MODE-DESC = "INQUIRY";
    IV0WM005.IV0WM-UPDT-MODE-DESC = "INQUIRY";
  end
  ;
  ;
end // end IV0WS-LOAD-HDR-MAP

// MOVE DATA FROM WS REC TO MAP5
Function IV0WS-LOAD-ITM-MAP()
   /* MOVE DATA FROM WORKING STORAGE RECORD TO ITEM MAP - IV0WM005*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-21-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-LOAD-ITM-MAP";
  ;
  IV0WM005.IV-IVC-ID = IV0W-CRCT-REC.IV-IVC-ID;
  ;
  IV0WM005.CU-CO-ID = IV0W-CRCT-REC.CU-CO-ID;
  ;
  IV0WM005.CU-STOR-ID = IV0W-CRCT-REC.CU-STOR-ID;
  ;
  IV0WM005.XNX-DEPT-ID-XREF = IV0W-CRCT-REC.XNX-DEPT-ID-XREF;
  ;
  IV0WM005.CU-CO-NM = IV0W-CRCT-REC.CU-CO-NM;
  ;
  IV0WM005.IV-CRCT-SEQ-NBR = IV0W-WS-REC.IV0WW-REQ-CRCT-SEQ;
  IV0WM005.IV-MAX-CRCT-SEQ = IV0W-WS-REC.IV0WW-MAX-CRCT-SEQ;
  ;
  IV0WM005.IV0WM-OP-CUST-PO = IV0W-CRCT-REC.OP-CUST-PO;
  ;
  ;
    /* MOVE MISC FIELDS TO MAP*/
  ;
  IV0WM005.IV0WM-SEL-SY-STY-NBR = " ";
  IV0WM005.IV0WM-SEL-SY-COLR-CD-ID = " ";
  IV0WM005.IV0WM-SEL-XDM-DIM-CD = " ";
  ;
  IV0W-WS-REC.IV0WW-CURR-PAGE-PTR = 1;
  IV0W-WS-REC.IV0WW-CURR-ITEM-PTR = 1;
  IV0W-WS-REC.IV0WW-CURR-SCRN-PTR = 1;
  ;
  IV0WS-PAGE-ITM-MAP();
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
    IV0WM005.IV0WM-UPDT-MODE-DESC = "UPDATE ";
    IV0WM005.IV0WM-UPDT-MODE-DESC = "UPDATE ";
  else
    IV0WM005.IV0WM-UPDT-MODE-DESC = "INQUIRY";
    IV0WM005.IV0WM-UPDT-MODE-DESC = "INQUIRY";
  end
  ;
  ;
end // end IV0WS-LOAD-ITM-MAP

// check for change b/4 updt exit
Function IV0WS-LOST-IP-TEST()
   /* iv0ws-lost-ip-test - check for changes entered before leaving*/
   /* update mode or exiting iv0w.*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 03-29-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-LOST-IP-TEST";
  ;
  if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y"
   && IV0W-WS-REC.IV0WW-MSG-111-SHOWN-FL == "N"
   && IV0WM001.IV-IVC-ID != 0)
    IV0W114();
    IV0WS-MAP5-CHANGED();
    if (IV0W-WS-REC.IV0WW-MAP1-DATA-CHG-FL == "Y"
     || IV0W-WS-REC.IV0WW-MAP5-DATA-CHG-FL == "Y")
      IV0W-WS-REC.IV0WW-MSG-111-SHOWN-FL = "Y";
      converseLib.validationFailed(111);
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      return;
    end
  end
end // end IV0WS-LOST-IP-TEST

// PROCESS PF7,8,9 PAGING FUNCTN
Function IV0WS-M5-PAGING()
   /* IV0WS-M5-PAGING - PROCESS PF7, PF8, AND PF9 PAGING FUNCTIONS*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-31-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-M5-PAGING ";
  ;
  if (converseVar.eventKey is pf7)
    IV0WS-PF7-PAGE-UP();
  else
    if (converseVar.eventKey is pf8)
      IV0WS-PF8-PAGE-DN();
    else
      if (converseVar.eventKey is pf9)
        IV0WS-PF9-TOP-PAGE();
      else
        if (IV0WM005.IV0WM-SEL-SY-STY-NBR == "      ")
          IV0WS-FULL-PAGE();
          return;
        else
          IV0WS-DIRECT-PAGE();
        end
      end
    end
  end
  ;
  IV0WS-PAGE-ITM-MAP();
  ;
  ;
end // end IV0WS-M5-PAGING

// test for map5 data changed
Function IV0WS-MAP5-CHANGED()
   /* MOVE DATA FROM WORKING STORAGE RECORD TO ITEM MAP - IV0WM005*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-21-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-MAP5-CHANGED";
  ;
  IV0W-WS-REC.IV0WW-MAP5-DATA-CHG-FL = "N";
  ;
  if (IV0WM001.IV-IVC-ID == 0)
    return;
  end
  ;
  IV0W-WS-REC.IV0WW-INDEX2 = 1;
  IV0WW-CSR-EOF-FL = "N";
  ;
   /* MOVE LINES TO MAP WHILE HAVE NON BLANK DATA AND NOT END OF TABLE*/
  ;
  while (IV0WW-INDEX2 <= 300
   && IV0WW-CSR-EOF-FL == "N")
    ;
    if (IV0W-CRCT-REC.CU-PROD-ID[IV0WW-INDEX2] != 
    IV0W-UPDT-REC.CU-PROD-ID[IV0WW-INDEX2])
      IV0W-WS-REC.IV0WW-MAP5-DATA-CHG-FL = "Y";
    end
    ;
    IV0WW-INDEX2 = IV0WW-INDEX2 + 1;
    ;
    if (IV0WW-INDEX2 > 300
     || IV0W-UPDT-REC.SY-STY-NBR[IV0WW-INDEX2] == "      ")
      IV0WW-CSR-EOF-FL = "Y";
    end
  end
  ;
end // end IV0WS-MAP5-CHANGED

// MOVE PAGE OF LINE DATA TO MAP5
Function IV0WS-PAGE-ITM-MAP()
   /* MOVE DATA FROM WORKING STORAGE RECORD TO ITEM MAP - IV0WM005*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-21-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-PAGE-ITM-MAP";
  ;
  ;
  IV0W-WS-REC.IV0WW-CURR-SCRN-PTR = 1;
  move IV0WW-CURR-PAGE-PTR to IV0WW-CURR-ITEM-PTR withV60Compat;
  IV0WW-CSR-EOF-FL = "N";
  ;
   /* MOVE LINES TO MAP WHILE HAVE NON BLANK DATA AND NOT END OF TABLE*/
  ;
  while (IV0WW-CURR-SCRN-PTR <= 15
   && IV0WW-CSR-EOF-FL == "N"
  )
    IV0WM005.IV0WM-SY-STY-NBR[IV0WW-CURR-SCRN-PTR] = IV0W-UPDT-REC.SY-STY-NBR[IV0WW-CURR-ITEM-PTR];
    ;
    IV0WM005.IV0WM-SY-COLR-CD-ID[IV0WW-CURR-SCRN-PTR] = IV0W-UPDT-REC.SY-COLR-CD-ID[IV0WW-CURR-ITEM-PTR];
    ;
    IV0WM005.IV0WM-XDM-DIM-CD[IV0WW-CURR-SCRN-PTR] = IV0W-UPDT-REC.XDM-DIM-CD[IV0WW-CURR-ITEM-PTR];
    ;
    IV0WM005.IV0WM-CU-PROD-ID[IV0WW-CURR-SCRN-PTR] = IV0W-UPDT-REC.CU-PROD-ID[IV0WW-CURR-ITEM-PTR];
    /* if update mode and cu-prod-id changed then highlight. if not*/
    /* changed set attr to defined. if inquiry, skip the field.*/
    ;
    if (IV0W-WS-REC.IV0WW-UPDT-MODE-FL == "Y")
      if (IV0W-CRCT-REC.CU-PROD-ID[IV0WW-CURR-ITEM-PTR] != 
      IV0W-UPDT-REC.CU-PROD-ID[IV0WW-CURR-ITEM-PTR])
        set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-CURR-SCRN-PTR] modified, bold;
      else
        set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-CURR-SCRN-PTR] initialAttributes;
      end
    else
      set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-CURR-SCRN-PTR] skip;
    end
    ;
    ;
    IV0WM005.IV0WM-SY-SZ-ID-DESC[IV0WW-CURR-SCRN-PTR] = "     ";
    ;
    IV0WM005.IV0WM-XUM-UOM-CD[IV0WW-CURR-SCRN-PTR] = IV0W-UPDT-REC.XUM-UOM-CD[IV0WW-CURR-ITEM-PTR];
    ;
    IV0WM005.IV0WM-LN-SHIP-QTY[IV0WW-CURR-SCRN-PTR] = IV0W-UPDT-REC.IV-LN-SHIPPED-QTY[IV0WW-CURR-ITEM-PTR];
    ;
    IV0WM005.IV0WM-UNIT-PRICE[IV0WW-CURR-SCRN-PTR] = IV0W-UPDT-REC.IV-NET-LN-UNIT-PRC[IV0WW-CURR-ITEM-PTR];
    ;
    IV0WM005.IV0WM-MRCH-AMOUNT[IV0WW-CURR-SCRN-PTR] = IV0W-UPDT-REC.IV-NET-LN-MRCH-AMT[IV0WW-CURR-ITEM-PTR];
    ;
    IV0WW-CURR-SCRN-PTR = IV0WW-CURR-SCRN-PTR + 1;
    IV0WW-CURR-ITEM-PTR = IV0WW-CURR-ITEM-PTR + 1;
    ;
    if (IV0WW-CURR-ITEM-PTR > 300
     || IV0W-UPDT-REC.SY-STY-NBR[IV0WW-CURR-ITEM-PTR] == "      ")
      IV0WW-CSR-EOF-FL = "Y";
    else
      if (IV0W-WS-REC.IV0WW-SHOW-STYLE-COLOR == "Y")
        if (IV0W-UPDT-REC.SY-STY-NBR[IV0WW-CURR-ITEM-PTR] != 
        IV0WM005.IV0WM-SEL-SY-STY-NBR
         || IV0W-UPDT-REC.SY-COLR-CD-ID[IV0WW-CURR-ITEM-PTR] != 
        IV0WM005.IV0WM-SEL-SY-COLR-CD-ID)
          IV0WW-CSR-EOF-FL = "Y";
        end
      else
        if (IV0W-WS-REC.IV0WW-SHOW-STYLE-ONLY == "Y")
          if (IV0W-UPDT-REC.SY-STY-NBR[IV0WW-CURR-ITEM-PTR] != 
          IV0WM005.IV0WM-SEL-SY-STY-NBR)
            IV0WW-CSR-EOF-FL = "Y";
          end
        end
      end
    end
    ;
  end
  ;
   /* BLANK OUT MAP LINES AND SET TO AUTOSKIP IF NO DATA TO SHOW ON*/
   /* THE MAP LINE*/
  ;
  while (IV0WW-CURR-SCRN-PTR < 16
  )
    IV0WM005.IV0WM-SY-STY-NBR[IV0WW-CURR-SCRN-PTR] = " ";
    ;
    IV0WM005.IV0WM-SY-COLR-CD-ID[IV0WW-CURR-SCRN-PTR] = " ";
    ;
    IV0WM005.IV0WM-XDM-DIM-CD[IV0WW-CURR-SCRN-PTR] = " ";
    ;
    IV0WM005.IV0WM-CU-PROD-ID[IV0WW-CURR-SCRN-PTR] = " ";
    set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-CURR-SCRN-PTR] skip, invisible;
    ;
    IV0WM005.IV0WM-SY-SZ-ID-DESC[IV0WW-CURR-SCRN-PTR] = " ";
    ;
    IV0WM005.IV0WM-XUM-UOM-CD[IV0WW-CURR-SCRN-PTR] = " ";
    ;
    IV0WM005.IV0WM-LN-SHIP-QTY[IV0WW-CURR-SCRN-PTR] = 0;
    ;
    IV0WM005.IV0WM-UNIT-PRICE[IV0WW-CURR-SCRN-PTR] = 0;
    ;
    IV0WM005.IV0WM-MRCH-AMOUNT[IV0WW-CURR-SCRN-PTR] = 0;
    ;
    IV0WW-CURR-SCRN-PTR = IV0WW-CURR-SCRN-PTR + 1;
    ;
  end
  ;
  IV0WW-CURR-SCRN-PTR = 1;
  move IV0WW-CURR-PAGE-PTR to IV0WW-CURR-ITEM-PTR withV60Compat;
  ;
end // end IV0WS-PAGE-ITM-MAP


// ADJUST POINTERS TO SCROLL UP
Function IV0WS-PF7-PAGE-UP()
   /* IV0WS-PF7-PAGE-UP -- ADJUST POINTERS TO SCROLL UP*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-12-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-PF7-PAGE-UP ";
  ;
   /* TURN OFF SELECTED STYLE-COLOR FLAG IF STYLE IS NOW BLANK*/
  if (IV0WM005.IV0WM-SEL-SY-STY-NBR == "      ")
    IV0W-WS-REC.IV0WW-SHOW-STYLE-COLOR = "N";
    IV0W-WS-REC.IV0WW-SHOW-STYLE-ONLY = "N";
  end
  ;
   /* SHIFT POINTER VALUES ON W/S TABLE AND MAP TO DO A SCROLL UP*/
   /* ACTION.*/
  ;
  IV0WW-INDEX3 = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR - 15;
  ;
  if (IV0WW-INDEX3 < 1)
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    converseLib.validationFailed(04);
    IV0W-WS-REC.IV0WW-CURR-PAGE-PTR = 1;
    IV0W-WS-REC.IV0WW-CURR-ITEM-PTR = 1;
    IV0W-WS-REC.IV0WW-CURR-SCRN-PTR = 1;
  else
    IV0W-WS-REC.IV0WW-CURR-PAGE-PTR = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR - 15;
    IV0W-WS-REC.IV0WW-CURR-ITEM-PTR = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR;
    IV0W-WS-REC.IV0WW-CURR-SCRN-PTR = 1;
  end
  ;
end // end IV0WS-PF7-PAGE-UP

// ADJUST POINTERS TO SCROLL DOWN
Function IV0WS-PF8-PAGE-DN()
   /* IV0WS-PF8-PAGE-UP -- ADJUST POINTERS TO SCROLL DOWN*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-12-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-PF8-PAGE-DN ";
  ;
  if (IV0WM005.IV0WM-SEL-SY-STY-NBR == "      ")
    IV0W-WS-REC.IV0WW-SHOW-STYLE-COLOR = "N";
    IV0W-WS-REC.IV0WW-SHOW-STYLE-ONLY = "N";
  end
  ;
  ;
   /* SHIFT POINTER VALUES ON W/S TABLE AND MAP TO DO A SCROLL UP*/
   /* ACTION.*/
  ;
  IV0WW-INDEX3 = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR + 15;
  ;
  if (IV0WW-INDEX3 > IV0W-WS-REC.IV0WW-MAX-ITEM-LINES)
    IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
    converseLib.validationFailed(05);
    IV0W-WS-REC.IV0WW-CURR-PAGE-PTR = IV0W-WS-REC.IV0WW-MAX-ITEM-LINES - 14;
    IV0W-WS-REC.IV0WW-CURR-ITEM-PTR = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR;
    IV0W-WS-REC.IV0WW-CURR-SCRN-PTR = 1;
  else
    if (IV0W-UPDT-REC.SY-STY-NBR[IV0WW-INDEX3] == "      ")
      IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
      converseLib.validationFailed(05);
      IV0W-WS-REC.IV0WW-CURR-ITEM-PTR = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR;
      IV0W-WS-REC.IV0WW-CURR-SCRN-PTR = 1;
    else
      IV0W-WS-REC.IV0WW-CURR-PAGE-PTR = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR + 15;
      IV0W-WS-REC.IV0WW-CURR-ITEM-PTR = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR;
      IV0W-WS-REC.IV0WW-CURR-SCRN-PTR = 1;
    end
  end
  ;
end // end IV0WS-PF8-PAGE-DN

// ADJUST POINTERS TO SCROLL UP
Function IV0WS-PF9-TOP-PAGE()
   /* IV0WS-PF9-PAGE-UP -- ADJUST POINTERS TO SCROLL TO TOP OF LIST*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-12-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-PF9-TOP-PAGE";
  ;
   /* turn off selected style-color-flag if sel style is now blank*/
  ;
  if (IV0WM005.IV0WM-SEL-SY-STY-NBR == "      ")
    IV0W-WS-REC.IV0WW-SHOW-STYLE-COLOR = "N";
    IV0W-WS-REC.IV0WW-SHOW-STYLE-ONLY = "N";
  end
  ;
   /* SHIFT POINTER VALUES ON W/S TABLE AND MAP TO DO A SCROLL UP*/
   /* ACTION TO TOP PAGE.*/
  ;
  IV0W-WS-REC.IV0WW-CURR-PAGE-PTR = 1;
  IV0W-WS-REC.IV0WW-CURR-ITEM-PTR = 1;
  IV0W-WS-REC.IV0WW-CURR-SCRN-PTR = 1;
  ;
end // end IV0WS-PF9-TOP-PAGE

// set pointer to item in ws tabl
Function IV0WS-SET-ITM-PTR()
   /* IV0WS-SET-ITM-PTR - SET POINTER TO ITEM IN IV0W-CRCT-REC ITEM AREA*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-28-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-SET-ITM-PTR";
  ;
  IV0W-WS-REC.IV0WW-INDEX2 = 1;
  ;
  while (IV0W-WS-REC.IV0WW-INDEX2 <= 300)
    if (VCORIT01.SY-STY-NBR == IV0W-CRCT-REC.SY-STY-NBR[IV0WW-INDEX2]
     && VCORIT01.SY-COLR-CD-ID == 
    IV0W-CRCT-REC.SY-COLR-CD-ID[IV0WW-INDEX2]
     && VCORIT01.OP-LINE-ITEM-NBR == 
    IV0W-CRCT-REC.IV0WW-OP-LINE-ITEM-NBR-IT[IV0WW-INDEX2])
      return;
    else
      if (IV0W-CRCT-REC.SY-STY-NBR[IV0WW-INDEX2] == "      ")
        IV0W-WS-REC.IV0WW-INDEX2 = 0;
        return;
      else
        IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
      end
    end
  end
  ;
   /* SEARCHED ALL 300 LINES AND FOUND NO MATCH*/
  ;
  IV0W-WS-REC.IV0WW-INDEX2 = 0;
  ;
  ;
end // end IV0WS-SET-ITM-PTR

// CHECK FOR MODIFIED FIELDS MAP5
Function IV0WS-TST-M5-MODFY()
   /* IV0WS-TST-M5-MODFY - CHECK FOR ANY DATA ENTERED ON MAP5*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-31-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-TST-M5-MODFY";
  ;
  IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "N";
  ;
  if (IV0WM005.IV0WM-SEL-SY-STY-NBR is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM005.IV0WM-SEL-SY-STY-NBR modified;
  end
  ;
  if (IV0WM005.IV0WM-SEL-SY-COLR-CD-ID is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM005.IV0WM-SEL-SY-COLR-CD-ID modified;
  end
  ;
  if (IV0WM005.IV0WM-SEL-XDM-DIM-CD is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM005.IV0WM-SEL-XDM-DIM-CD modified;
  end
  ;
  ;
  IV0W-WS-REC.IV0WW-INDEX2 = 1;
  ;
  while (IV0W-WS-REC.IV0WW-INDEX2 < 16)
    ;
    if (IV0WM005.IV0WM-SY-STY-NBR[IV0WW-INDEX2] != "      ")
      if (IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] is modified)
        IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
        set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] modified;
      end
    end
    ;
    IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
    ;
  end
end // end IV0WS-TST-M5-MODFY

// CHECK FOR MODIFIED FIELDS
Function IV0WS-TST-MODIFIED()
   /* IV0WS-TST-MODIFIED - CHECK FOR ANY DATA ENTERED ON MAP1*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-31-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-TST-MODIFIED";
  ;
  IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "N";
  ;
  if (IV0WM001.IV-IVC-ID is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM001.IV-IVC-ID modified;
  end
  ;
  if (IV0WM001.IV-CRCT-SEQ-NBR is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM001.IV-CRCT-SEQ-NBR modified;
  end
  ;
  if (IV0WM001.XIC-IVC-CRCTRSN-CD is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM001.XIC-IVC-CRCTRSN-CD modified;
  end
  ;
  if (IV0WM001.IV0WM-OP-CUST-PO is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM001.IV0WM-OP-CUST-PO modified;
  end
  ;
  if (IV0WM001.IV0WM-TF-CARR-CD is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM001.IV0WM-TF-CARR-CD modified;
  end
  ;
  if (IV0WM001.IV0WM-TF-CARR-NM is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM001.IV0WM-TF-CARR-NM modified;
  end
  ;
  if (IV0WM001.IV0WM-TF-PRO-NBR is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM001.IV0WM-TF-PRO-NBR modified;
  end
  ;
  if (IV0WM001.IV0WM-CU-STOR-SELF-ID is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM001.IV0WM-CU-STOR-SELF-ID modified;
  end
  ;
  if (IV0WM001.IV0WM-PK-NBR-OF-CARTONS is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM001.IV0WM-PK-NBR-OF-CARTONS modified;
  end
  ;
  if (IV0WM001.IV0WM-SR-TOT-NBR-CARTONS is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM001.IV0WM-SR-TOT-NBR-CARTONS modified;
  end
  ;
  if (IV0WM001.IV0WM-CMT-TEXT1 is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM001.IV0WM-CMT-TEXT1 modified;
  end
  ;
  if (IV0WM001.IV0WM-CMT-TEXT2 is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM001.IV0WM-CMT-TEXT2 modified;
  end
  ;
  if (IV0WM001.IV0WM-CMT-TEXT3 is modified)
    IV0W-WS-REC.IV0WW-DATA-ENTR-FL = "Y";
    set IV0WM001.IV0WM-CMT-TEXT3 modified;
  end
  ;
end // end IV0WS-TST-MODIFIED

// UPDATE OR INSERT VCORHD01
Function IV0WS-UPDATE-CORHD()
   /* UPDATE OR INSERT VCORHD01 LINE FOR THE CURRENT IVC-ID, SEQ#.*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-31-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-UPDATE-CORHD";
  ;
   /* TRY SELECTING THE VCORHD01 LINE FOR THE GIVEN IVC-ID AND SEQ#.*/
   /* MOVE THE NEW DATA FROM IV0W-UPDT-REC TO VCORHD01. FILL IN THE*/
   /* ZZ-FAMILY FIELDS. IF THE LINE ALREADY EXISTS UPDATE IT, OTHERWISE*/
   /* INSERT THE LINE.*/
  ;
  set SQLCA empty;
  set VCORHD01 empty;
  ;
    /* OPEN VCORHD01 CURSOR*/
  ;
  VCORHD01.IV-IVC-ID = IV0W-UPDT-REC.IV-IVC-ID;
  VCORHD01.IV-CRCT-SEQ-NBR = IV0W-UPDT-REC.IV-CRCT-SEQ-NBR;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORHD();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
    /* MOVE UPDATED DATA TO THE VCORHD01 LINE.*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "U ";
  else
    IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "A ";
    VCORHD01.IV-IVC-ID = IV0W-UPDT-REC.IV-IVC-ID;
    VCORHD01.IV-CRCT-SEQ-NBR = IV0W-UPDT-REC.IV-CRCT-SEQ-NBR;
    VCORHD01.ZZ-SDT = IV0W-WS-REC.ZZ-CHNG-DT;
    VCORHD01.ZZ-SETUP-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
    VCORTX01.ZZ-CHNG-CNT = 0;
  end
  ;
  VCORHD01.ZZ-CHNG-DT = IV0W-WS-REC.ZZ-CHNG-DT;
  VCORHD01.ZZ-CHNG-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
  ;
  VCORHD01.CU-CO-ID = IV0W-UPDT-REC.CU-CO-ID;
  VCORHD01.CU-STOR-ID = IV0W-UPDT-REC.CU-STOR-ID;
  VCORHD01.XNX-DEPT-ID-XREF = IV0W-UPDT-REC.XNX-DEPT-ID-XREF;
  VCORHD01.CU-CO-NM = IV0W-UPDT-REC.CU-CO-NM;
  VCORHD01.SP-SPGM-ID = IV0W-UPDT-REC.SP-SPGM-ID;
  VCORHD01.OP-CUST-PO = IV0W-UPDT-REC.OP-CUST-PO;
  VCORHD01.IV-HNDL-CHG = IV0W-UPDT-REC.IV-HNDL-CHG;
  VCORHD01.CU-HNDL-CHG-NET-FL = IV0W-UPDT-REC.CU-HNDL-CHG-NET-FL;
  VCORHD01.IV-NET-MRCH-AMT = IV0W-UPDT-REC.IV-NET-MRCH-AMT;
  VCORHD01.IV-IVC-AMT = IV0W-UPDT-REC.IV-IVC-AMT;
  VCORHD01.CU-STOR-SELF-ID = IV0W-UPDT-REC.CU-STOR-SELF-ID;
  VCORHD01.IV-PTERM-DEFRD-DT = IV0W-UPDT-REC.IV-PTERM-DEFRD-DT;
  VCORHD01.PK-NBR-OF-CARTONS = IV0W-UPDT-REC.PK-NBR-OF-CARTONS;
  VCORHD01.SR-TOT-NBR-CARTONS = IV0W-UPDT-REC.SR-TOT-NBR-CARTONS;
  VCORHD01.TF-PRO-NBR = IV0W-UPDT-REC.TF-PRO-NBR;
  VCORHD01.XDS-DIR-SHIP-CD = IV0W-UPDT-REC.XDS-DIR-SHIP-CD;
  VCORHD01.TF-CARR-CD = IV0W-UPDT-REC.TF-CARR-CD;
  VCORHD01.TF-CARR-NM = IV0W-UPDT-REC.TF-CARR-NM;
  VCORHD01.XPT-PTERM-CD = IV0W-UPDT-REC.XPT-PTERM-CD;
  VCORHD01.XPT-PTERM-PCT = IV0W-UPDT-REC.XPT-PTERM-PCT;
  VCORHD01.IV-SHIPTO-NM = IV0W-UPDT-REC.IV-SHIPTO-NM;
  VCORHD01.IV-SHIPTO-ADDR1 = IV0W-UPDT-REC.IV-SHIPTO-ADDR1;
  VCORHD01.IV-SHIPTO-ADDR2 = IV0W-UPDT-REC.IV-SHIPTO-ADDR2;
  VCORHD01.IV-SHIPTO-ADDR3 = IV0W-UPDT-REC.IV-SHIPTO-ADDR3;
  VCORHD01.IV-SHIPTO-CITY = IV0W-UPDT-REC.IV-SHIPTO-CITY;
  VCORHD01.IV-SHIPTO-ST-CD = IV0W-UPDT-REC.IV-SHIPTO-ST-CD;
  VCORHD01.IV-SHIPTO-ZIP = IV0W-UPDT-REC.IV-SHIPTO-ZIP;
  ;
  ;
    /* ADD OR UPDATE THE VCORHD01 LINE*/
  ;
  set SQLCA empty;
  ;
    /* OPEN VCORHD01 CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORHD();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
end // end IV0WS-UPDATE-CORHD

// update item lines for ivc,seq#
Function IV0WS-UPDATE-CORIT()
   /* insert or update item LINES FOR THE IVC-ID AND CRCT-SEQ#*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-UPDATE-CORIT";
  ;
  ;
    /* ADD LOGIC TO SCAN THROUGH ALL ITEM LINES IN WS TABLE AND UPDATE*/
    /* OR INSERT ONLY THOSE THAT HAVE BEEN CHANGED.*/
  ;
  ;
  IV0WW-CSR-EOF-FL = "N";
  IV0W-WS-REC.IV0WW-INDEX2 = 1;
  ;
  while (IV0W-WS-REC.IV0WW-INDEX2 <= 300
   && IV0WW-CSR-EOF-FL == "N")
    ;
     /* DO UPDATE ONLY IF DATA WAS CHANGED*/
    ;
    if (IV0W-CRCT-REC.CU-PROD-ID[IV0WW-INDEX2] != 
    IV0W-UPDT-REC.CU-PROD-ID[IV0WW-INDEX2])
      ;
      set SQLCA empty;
      set VCORIT01 empty;
      ;
      /* OPEN VCORIT01 CURSOR*/
      ;
      VCORIT01.IV-IVC-ID = IV0W-UPDT-REC.IV-IVC-ID;
      VCORIT01.IV-CRCT-SEQ-NBR = IV0W-UPDT-REC.IV-CRCT-SEQ-NBR;
      VCORIT01.OP-LINE-ITEM-NBR = IV0W-UPDT-REC.IV0WW-OP-LINE-ITEM-NBR-IT[IV0WW-INDEX2];
      ;
      IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
      IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
      ;
      while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
        IV0WS-CALL-CORIT();
      end
      ;
      if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
        return;
      end
      ;
      ;
      if (SQLCA.VAGen_SQLCODE == +0)
        IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "U ";
      else
        IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "A ";
        VCORIT01.IV-IVC-ID = IV0W-UPDT-REC.IV-IVC-ID;
        VCORIT01.IV-CRCT-SEQ-NBR = IV0W-UPDT-REC.IV-CRCT-SEQ-NBR;
        ;
        VCORIT01.OP-LINE-ITEM-NBR = IV0W-UPDT-REC.IV0WW-OP-LINE-ITEM-NBR-IT[IV0WW-INDEX2];
        VCORIT01.SY-STY-NBR = IV0W-UPDT-REC.SY-STY-NBR[IV0WW-INDEX2];
        VCORIT01.SY-COLR-CD-ID = IV0W-UPDT-REC.SY-COLR-CD-ID[IV0WW-INDEX2];
        VCORIT01.XUM-UOM-CD = IV0W-UPDT-REC.XUM-UOM-CD[IV0WW-INDEX2];
        VCORIT01.OP-PRC-OVRD-FL = IV0W-UPDT-REC.OP-PRC-OVRD-FL[IV0WW-INDEX2];
        VCORIT01.OP-PRC-VARY-FL = IV0W-UPDT-REC.OP-PRC-VARY-FL[IV0WW-INDEX2];
        VCORIT01.IV-GRS-LN-UNIT-PRC = IV0W-UPDT-REC.IV-GRS-LN-UNIT-PRC[IV0WW-INDEX2];
        VCORIT01.IV-NET-LN-UNIT-PRC = IV0W-UPDT-REC.IV-NET-LN-UNIT-PRC[IV0WW-INDEX2];
        VCORIT01.IV-GRS-LN-MRCH-AMT = IV0W-UPDT-REC.IV-GRS-LN-MRCH-AMT[IV0WW-INDEX2];
        VCORIT01.IV-NET-LN-MRCH-AMT = IV0W-UPDT-REC.IV-NET-LN-MRCH-AMT[IV0WW-INDEX2];
        VCORIT01.IV-LN-SHIPPED-QTY = IV0W-UPDT-REC.IV-LN-SHIPPED-QTY[IV0WW-INDEX2];
        VCORIT01.IV-NBR-SZ = IV0W-UPDT-REC.IV-NBR-SZ[IV0WW-INDEX2];
        ;
        VCORIT01.ZZ-SDT = IV0W-WS-REC.ZZ-CHNG-DT;
        VCORIT01.ZZ-SETUP-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
        VCORIT01.ZZ-CHNG-CNT = 0;
      end
      ;
      VCORIT01.ZZ-CHNG-DT = IV0W-WS-REC.ZZ-CHNG-DT;
      VCORIT01.ZZ-CHNG-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
      ;
      VCORIT01.CU-PROD-ID = IV0W-UPDT-REC.CU-PROD-ID[IV0WW-INDEX2];
      ;
      /* call iomod using add/update function*/
      set SQLCA empty;
      ;
      IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
      ;
      if (IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION != "  ")
        while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
          IV0WS-CALL-CORIT();
        end
        ;
        if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
          return;
        end
      end
      ;
      ;
    end
    /* increment loop control*/
    ;
    IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
    if (IV0W-UPDT-REC.SY-STY-NBR[IV0WW-INDEX2] == "      ")
      IV0WW-CSR-EOF-FL = "Y";
    end
    ;
  end
  ;
end // end IV0WS-UPDATE-CORIT

// UPDATE OR INSERT VCORSQ01
Function IV0WS-UPDATE-CORSQ()
   /* UPDATE OR INSERT VCORSQ01 LINE FOR THE CURRENT IVC-ID, SEQ#.*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-31-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-UPDATE-CORSQ";
  ;
   /* TRY SELECTING THE VCORSQ01 LINE FOR THE GIVEN IVC-ID AND SEQ#.*/
   /* MOVE THE NEW DATA FROM IV0W-UPDT-REC TO VCORSQ01. FILL IN THE*/
   /* ZZ-FAMILY FIELDS. IF THE LINE ALREADY EXISTS UPDATE IT, OTHERWISE*/
   /* INSERT THE LINE.*/
  ;
  set SQLCA empty;
  set VCORSQ01 empty;
  ;
    /* OPEN VCORSQ01 CURSOR*/
  ;
  VCORSQ01.IV-IVC-ID = IV0W-UPDT-REC.IV-IVC-ID;
  VCORSQ01.IV-CRCT-SEQ-NBR = IV0W-UPDT-REC.IV-CRCT-SEQ-NBR;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORSQ();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
    /* MOVE UPDATED DATA TO THE VCORSQ01 LINE.*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "U ";
  else
    IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "A ";
    VCORSQ01.IV-IVC-ID = IV0W-UPDT-REC.IV-IVC-ID;
    VCORSQ01.IV-IVC-PART-CHAR = IV0W-UPDT-REC.IV-IVC-PART-CHAR;
    VCORSQ01.IV-CRCT-SEQ-NBR = IV0W-UPDT-REC.IV-CRCT-SEQ-NBR;
    VCORSQ01.ZZ-SDT = IV0W-WS-REC.ZZ-CHNG-DT;
    VCORSQ01.ZZ-SETUP-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
    VCORSQ01.ZZ-CHNG-CNT = 0;
  end
  ;
  VCORSQ01.IV-CRCT-STAT-IND = IV0W-UPDT-REC.IV-CRCT-STAT-IND;
  VCORSQ01.ZZ-CHNG-DT = IV0W-WS-REC.ZZ-CHNG-DT;
  VCORSQ01.ZZ-CHNG-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
  ;
  VCORSQ01.XIC-IVC-CRCTRSN-CD = IV0W-UPDT-REC.XIC-IVC-CRCTRSN-CD;
  VCORSQ01.XXX-USER-ID = IV0W-UPDT-REC.XXX-USER-ID;
  ;
  ;
    /* ADD OR UPDATE THE VCORSQ01 LINE*/
  ;
  set SQLCA empty;
  ;
    /* ADD OR UPDATE VCORSQ01 CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORSQ();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
end // end IV0WS-UPDATE-CORSQ

// update text lines for ivc,seq#
Function IV0WS-UPDATE-CORTX()
   /* insert or update text LINES FOR THE IVC-ID AND CRCT-SEQ#*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-31-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-UPDATE-CORTX";
  ;
   /* update or replace 0 to 3 rows on the correction text table.*/
  ;
  if (IV0W-UPDT-REC.IV-TXT[2] == " ")
    IV0W-UPDT-REC.IV-TXT[2] = IV0W-UPDT-REC.IV-TXT[3];
    IV0W-UPDT-REC.IV-TXT[3] = " ";
  end
  if (IV0W-UPDT-REC.IV-TXT[1] == " ")
    IV0W-UPDT-REC.IV-TXT[1] = IV0W-UPDT-REC.IV-TXT[2];
    IV0W-UPDT-REC.IV-TXT[2] = " ";
  end
  if (IV0W-UPDT-REC.IV-TXT[1] == " ")
    return;
  end
  ;
  IV0W-WS-REC.IV0WW-INDEX2 = 1;
  ;
  while (IV0W-WS-REC.IV0WW-INDEX2 <= 3)
    set SQLCA empty;
    set VCORTX01 empty;
    ;
    /* OPEN VCORTX01 CURSOR*/
    ;
    VCORTX01.IV-IVC-ID = IV0W-UPDT-REC.IV-IVC-ID;
    VCORTX01.IV-CRCT-SEQ-NBR = IV0W-UPDT-REC.IV-CRCT-SEQ-NBR;
    VCORTX01.IV-TXT-SEQ-NBR = IV0W-WS-REC.IV0WW-INDEX2;
    ;
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
    IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
    ;
    while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
      IV0WS-CALL-CORTX();
    end
    ;
    if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
      return;
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == +0)
      if (IV0W-UPDT-REC.IV-TXT[IV0WW-INDEX2] == " ")
        IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "D ";
      else
        IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "U ";
      end
      ;
    else
      if (IV0W-UPDT-REC.IV-TXT[IV0WW-INDEX2] == " ")
        IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "  ";
      else
        IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "A ";
        VCORTX01.IV-IVC-ID = IV0W-UPDT-REC.IV-IVC-ID;
        VCORTX01.IV-CRCT-SEQ-NBR = IV0W-UPDT-REC.IV-CRCT-SEQ-NBR;
        VCORTX01.IV-TXT-SEQ-NBR = IV0W-WS-REC.IV0WW-INDEX2;
        VCORTX01.ZZ-SDT = IV0W-WS-REC.ZZ-CHNG-DT;
        VCORTX01.ZZ-SETUP-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
        VCORTX01.ZZ-CHNG-CNT = 0;
      end
    end
    ;
    VCORTX01.ZZ-CHNG-DT = IV0W-WS-REC.ZZ-CHNG-DT;
    VCORTX01.ZZ-CHNG-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
    ;
    VCORTX01.IV-TXT = IV0W-UPDT-REC.IV-TXT[IV0WW-INDEX2];
    ;
    /* call iomod using add/update function*/
    set SQLCA empty;
    ;
    IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
    IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
    ;
    if (IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION != "  ")
      while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
        IV0WS-CALL-CORTX();
      end
      ;
      if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
        return;
      end
      ;
    end
    ;
    ;
    /* increment loop control*/
    ;
    IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
    ;
  end
  ;
end // end IV0WS-UPDATE-CORTX

// update reg header data for ivc
Function IV0WS-UPDATE-IVHDR()
   /* UPDATE REGULAR HEADER DATA FOR THE INVOICE*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-06-95  GDECKE  NEW APPLICATION                              **/
   /* * 07-19-95  GDECKE  move zz-chng-dt and hhmm to vivhdr05.        **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-UPDATE-IVHDR";
  ;
   /* MOVE IV0W-CRCT-REC DATA TO VIVHDR05, ADD ZZ-FAMILY VALUES AND*/
   /* UPDATE THE REGULAR INVOICE HEADER LINE.*/
  ;
  set SQLCA empty;
  set VIVHDR05 empty;
  ;
  VIVHDR05.IV0IVCID = IV0W-UPDT-REC.IV-IVC-ID;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-IVHDR();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    VIVHDR05.OP1CUPO = IV0W-UPDT-REC.OP-CUST-PO;
    VIVHDR05.PK1NBCTN = IV0W-UPDT-REC.PK-NBR-OF-CARTONS;
    VIVHDR05.SR2TNBCT = IV0W-UPDT-REC.SR-TOT-NBR-CARTONS;
    VIVHDR05.TF2PRONO = IV0W-UPDT-REC.TF-PRO-NBR;
    VIVHDR05.TF1CARCD = IV0W-UPDT-REC.TF-CARR-CD;
    VIVHDR05.TF1CARNM = IV0W-UPDT-REC.TF-CARR-NM;
  end
  ;
  VIVHDR05.ZZ-CHNG-DT = IV0W-WS-REC.ZZ-CHNG-DT;
  VIVHDR05.ZZ-CHNG-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
  ;
  set SQLCA empty;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "U ";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-IVHDR();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
end // end IV0WS-UPDATE-IVHDR

// UPDATE REGULAR IVC LINE ITEM
Function IV0WS-UPDATE-IVITM()
   /* UPDATE REGULAR LINE ITEM RECORD FOR THE INVOICE*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-20-95  GDECKE  NEW APPLICATION                              **/
   /* * 07-19-95  GDECKE  move chng dt and hhmm to vivitm02            **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-UPDATE-IVITM";
  ;
  ;
   /* MOVE IV0W-CRCT-REC DATA TO VIVITM02, ADD ZZ-FAMILY VALUES AND*/
   /* UPDATE THE REGULAR INVOICE LINE ITEM RECORD.*/
  ;
   /* ADD A LOOP HERE THAT WILL LOCATE THE LINES TO BE UPDATED.*/
   /* PERFORM THE LOOP UNTIL END OF TABLE (300 LINES) OR STYLE ID*/
   /* IS BLANK (NO MORE LINES*/
  ;
  ;
  IV0WW-CSR-EOF-FL = "N";
  IV0WW-INDEX2 = 1;
  ;
  while (IV0WW-INDEX2 <= 300
   && IV0WW-CSR-EOF-FL == "N")
    ;
    if (IV0W-CRCT-REC.CU-PROD-ID[IV0WW-INDEX2] != 
    IV0W-UPDT-REC.CU-PROD-ID[IV0WW-INDEX2])
      ;
      /* DO UPDATE ONLY IF DATA CHANGED*/
      ;
      set SQLCA empty;
      set VIVITM02 empty;
      ;
      VIVITM02.IV0IVCID = IV0W-UPDT-REC.IV-IVC-ID;
      VIVITM02.OP2LNINB = IV0W-UPDT-REC.IV0WW-OP-LINE-ITEM-NBR-IT[IV0WW-INDEX2];
      ;
      /* MAY ALSO NEED PART-CHAR AND LINE ITEM NUMBER*/
      ;
      IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
      IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
      ;
      while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
        IV0WS-CALL-IVITM();
      end
      ;
      if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
        return;
      end
      ;
      if (SQLCA.VAGen_SQLCODE == +0)
        VIVITM02.KUIPRDID = IV0W-UPDT-REC.CU-PROD-ID[IV0WW-INDEX2];
      end
      ;
      VIVITM02.ZZ-CHNG-DT = IV0W-WS-REC.ZZ-CHNG-DT;
      VIVITM02.ZZ-CHNG-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
      ;
      set SQLCA empty;
      ;
      IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
      IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "U ";
      ;
      while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
        IV0WS-CALL-IVITM();
      end
      ;
      if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
        return;
      end
      ;
    end
    ;
    IV0WW-INDEX2 = IV0WW-INDEX2 + 1;
    ;
    if (IV0W-UPDT-REC.SY-STY-NBR == "      ")
      IV0WW-CSR-EOF-FL = "Y";
    end
    ;
  end
  ;
  ;
end // end IV0WS-UPDATE-IVITM

// UPDATE/INSERT VCORHD01 seq#=0
Function IV0WS-UPDT-CORHD00()
   /* UPDATE OR INSERT VCORHD01 LINE FOR THE CURRENT IVC-ID, SEQ# = 0.*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-31-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-UPDT-CORHD00";
  ;
   /* TRY SELECTING THE VCORHD01 LINE FOR THE GIVEN IVC-ID AND SEQ#=0.*/
   /* MOVE THE NEW DATA FROM IV0W-UPDT-REC TO VCORHD01. FILL IN THE*/
   /* ZZ-FAMILY FIELDS. IF THE LINE ALREADY EXISTS UPDATE IT, OTHERWISE*/
   /* INSERT THE LINE.*/
  ;
  set SQLCA empty;
  set VCORHD01 empty;
  ;
    /* OPEN VCORHD01 CURSOR*/
  ;
  VCORHD01.IV-IVC-ID = IV0W-ORIG-REC.IV-IVC-ID;
  VCORHD01.IV-CRCT-SEQ-NBR = IV0W-ORIG-REC.IV-CRCT-SEQ-NBR;
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORHD();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
    /* MOVE UPDATED DATA TO THE VCORHD01 LINE.*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0)
    return;
  else
    IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "A ";
    VCORHD01.IV-IVC-ID = IV0W-ORIG-REC.IV-IVC-ID;
    VCORHD01.IV-CRCT-SEQ-NBR = IV0W-ORIG-REC.IV-CRCT-SEQ-NBR;
    VCORHD01.ZZ-SDT = IV0W-WS-REC.ZZ-CHNG-DT;
    VCORHD01.ZZ-SETUP-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
    VCORTX01.ZZ-CHNG-CNT = 0;
  end
  ;
  VCORHD01.ZZ-CHNG-DT = IV0W-WS-REC.ZZ-CHNG-DT;
  VCORHD01.ZZ-CHNG-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
  ;
  VCORHD01.CU-CO-ID = IV0W-ORIG-REC.CU-CO-ID;
  VCORHD01.CU-STOR-ID = IV0W-ORIG-REC.CU-STOR-ID;
  VCORHD01.XNX-DEPT-ID-XREF = IV0W-ORIG-REC.XNX-DEPT-ID-XREF;
  VCORHD01.CU-CO-NM = IV0W-ORIG-REC.CU-CO-NM;
  VCORHD01.SP-SPGM-ID = IV0W-ORIG-REC.SP-SPGM-ID;
  VCORHD01.OP-CUST-PO = IV0W-ORIG-REC.OP-CUST-PO;
  VCORHD01.IV-HNDL-CHG = IV0W-ORIG-REC.IV-HNDL-CHG;
  VCORHD01.CU-HNDL-CHG-NET-FL = IV0W-ORIG-REC.CU-HNDL-CHG-NET-FL;
  VCORHD01.IV-NET-MRCH-AMT = IV0W-ORIG-REC.IV-NET-MRCH-AMT;
  VCORHD01.IV-IVC-AMT = IV0W-ORIG-REC.IV-IVC-AMT;
  VCORHD01.CU-STOR-SELF-ID = IV0W-ORIG-REC.CU-STOR-SELF-ID;
  VCORHD01.IV-PTERM-DEFRD-DT = IV0W-ORIG-REC.IV-PTERM-DEFRD-DT;
  VCORHD01.PK-NBR-OF-CARTONS = IV0W-ORIG-REC.PK-NBR-OF-CARTONS;
  VCORHD01.SR-TOT-NBR-CARTONS = IV0W-ORIG-REC.SR-TOT-NBR-CARTONS;
  VCORHD01.TF-PRO-NBR = IV0W-ORIG-REC.TF-PRO-NBR;
  VCORHD01.XDS-DIR-SHIP-CD = IV0W-ORIG-REC.XDS-DIR-SHIP-CD;
  VCORHD01.TF-CARR-CD = IV0W-ORIG-REC.TF-CARR-CD;
  VCORHD01.TF-CARR-NM = IV0W-ORIG-REC.TF-CARR-NM;
  VCORHD01.XPT-PTERM-CD = IV0W-ORIG-REC.XPT-PTERM-CD;
  VCORHD01.XPT-PTERM-PCT = IV0W-ORIG-REC.XPT-PTERM-PCT;
  VCORHD01.IV-SHIPTO-NM = IV0W-ORIG-REC.IV-SHIPTO-NM;
  VCORHD01.IV-SHIPTO-ADDR1 = IV0W-ORIG-REC.IV-SHIPTO-ADDR1;
  VCORHD01.IV-SHIPTO-ADDR2 = IV0W-ORIG-REC.IV-SHIPTO-ADDR2;
  VCORHD01.IV-SHIPTO-ADDR3 = IV0W-ORIG-REC.IV-SHIPTO-ADDR3;
  VCORHD01.IV-SHIPTO-CITY = IV0W-ORIG-REC.IV-SHIPTO-CITY;
  VCORHD01.IV-SHIPTO-ST-CD = IV0W-ORIG-REC.IV-SHIPTO-ST-CD;
  VCORHD01.IV-SHIPTO-ZIP = IV0W-ORIG-REC.IV-SHIPTO-ZIP;
  ;
  ;
    /* ADD OR UPDATE THE VCORHD01 LINE*/
  ;
  set SQLCA empty;
  ;
    /* OPEN VCORHD01 CURSOR*/
  ;
  IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
  IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
  ;
  while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
    IV0WS-CALL-CORHD();
  end
  ;
  if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
    return;
  end
  ;
end // end IV0WS-UPDT-CORHD00

// update item lines for ivc,seq0
Function IV0WS-UPDT-CORIT00()
   /* insert or update item LINES FOR THE IVC-ID AND CRCT-SEQ = 0.*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-UPDT-CORIT00";
  ;
  ;
    /* ADD LOGIC TO SCAN THROUGH ALL ITEM LINES IN WS TABLE AND UPDATE*/
    /* OR INSERT ONLY THOSE THAT HAVE BEEN CHANGED.*/
  ;
  ;
  IV0WW-CSR-EOF-FL = "N";
  IV0W-WS-REC.IV0WW-INDEX2 = 1;
  ;
  while (IV0W-WS-REC.IV0WW-INDEX2 <= 300
   && IV0WW-CSR-EOF-FL == "N")
    ;
     /* DO UPDATE ONLY IF DATA WAS CHANGED*/
    ;
    if (IV0W-CRCT-REC.CU-PROD-ID[IV0WW-INDEX2] != 
    IV0W-UPDT-REC.CU-PROD-ID[IV0WW-INDEX2])
      ;
      set SQLCA empty;
      set VCORIT01 empty;
      ;
      /* OPEN VCORIT01 CURSOR*/
      ;
      VCORIT01.IV-IVC-ID = IV0W-ORIG-REC.IV-IVC-ID;
      VCORIT01.IV-CRCT-SEQ-NBR = IV0W-ORIG-REC.IV-CRCT-SEQ-NBR;
      VCORIT01.OP-LINE-ITEM-NBR = IV0W-ORIG-REC.IV0WW-OP-LINE-ITEM-NBR-IT[IV0WW-INDEX2];
      ;
      IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
      IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "S ";
      ;
      while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
        IV0WS-CALL-CORIT();
      end
      ;
      if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
        return;
      end
      ;
      ;
      if (SQLCA.VAGen_SQLCODE == +0)
        IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "  "; /* ALREADY EXISTS*/
      else
        IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION = "A "; /* NEED TO ADD*/
        VCORIT01.IV-IVC-ID = IV0W-ORIG-REC.IV-IVC-ID;
        VCORIT01.IV-CRCT-SEQ-NBR = IV0W-ORIG-REC.IV-CRCT-SEQ-NBR;
        ;
        VCORIT01.OP-LINE-ITEM-NBR = IV0W-ORIG-REC.IV0WW-OP-LINE-ITEM-NBR-IT[IV0WW-INDEX2];
        VCORIT01.SY-STY-NBR = IV0W-ORIG-REC.SY-STY-NBR[IV0WW-INDEX2];
        VCORIT01.SY-COLR-CD-ID = IV0W-ORIG-REC.SY-COLR-CD-ID[IV0WW-INDEX2];
        VCORIT01.XUM-UOM-CD = IV0W-ORIG-REC.XUM-UOM-CD[IV0WW-INDEX2];
        VCORIT01.OP-PRC-OVRD-FL = IV0W-ORIG-REC.OP-PRC-OVRD-FL[IV0WW-INDEX2];
        VCORIT01.OP-PRC-VARY-FL = IV0W-ORIG-REC.OP-PRC-VARY-FL[IV0WW-INDEX2];
        VCORIT01.IV-GRS-LN-UNIT-PRC = IV0W-ORIG-REC.IV-GRS-LN-UNIT-PRC[IV0WW-INDEX2];
        VCORIT01.IV-NET-LN-UNIT-PRC = IV0W-ORIG-REC.IV-NET-LN-UNIT-PRC[IV0WW-INDEX2];
        VCORIT01.IV-GRS-LN-MRCH-AMT = IV0W-ORIG-REC.IV-GRS-LN-MRCH-AMT[IV0WW-INDEX2];
        VCORIT01.IV-NET-LN-MRCH-AMT = IV0W-ORIG-REC.IV-NET-LN-MRCH-AMT[IV0WW-INDEX2];
        VCORIT01.IV-LN-SHIPPED-QTY = IV0W-ORIG-REC.IV-LN-SHIPPED-QTY[IV0WW-INDEX2];
        VCORIT01.IV-NBR-SZ = IV0W-ORIG-REC.IV-NBR-SZ[IV0WW-INDEX2];
        ;
        VCORIT01.ZZ-SDT = IV0W-WS-REC.ZZ-CHNG-DT;
        VCORIT01.ZZ-SETUP-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
        VCORIT01.ZZ-CHNG-CNT = 0;
      end
      ;
      VCORIT01.ZZ-CHNG-DT = IV0W-WS-REC.ZZ-CHNG-DT;
      VCORIT01.ZZ-CHNG-HHMM = IV0W-WS-REC.ZZ-CHNG-HHMM;
      ;
      VCORIT01.CU-PROD-ID = IV0W-ORIG-REC.CU-PROD-ID[IV0WW-INDEX2];
      ;
      /* call iomod using add/update function*/
      set SQLCA empty;
      ;
      IV0W-WS-REC.IV0WW-DEADLOCK-CT = 0;
      IV0W-WS-REC.IV0WW-DEADLOCK-FL = "Y";
      ;
      if (IV0W-IOMOD-REC.IV0WW-IOMOD-FUNCTION != "  ")
        while (IV0W-WS-REC.IV0WW-DEADLOCK-FL == "Y")
          IV0WS-CALL-CORIT();
        end
        ;
        if (IV0W-WS-REC.IV0WW-DEADLOCK-CT > 0)
          return;
        end
      end
      ;
      ;
    end
    /* increment loop control*/
    ;
    IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
    if (IV0W-ORIG-REC.SY-STY-NBR[IV0WW-INDEX2] == "      ")
      IV0WW-CSR-EOF-FL = "Y";
    end
    ;
  end
  ;
end // end IV0WS-UPDT-CORIT00

// set attributes - map 5 data.
Function IV0WS-UPDT-M5-ATTR()
   /* IV0WS-UPDT-M5-ATTR - SET ATTRIBUTES FOR MAP 5 DATA - UPDATE MODE*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-21-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-UPDT-M5-ATTR";
  ;
  IV0W-WS-REC.IV0WW-INDEX2 = 1;
  IV0W-WS-REC.IV0WW-INDEX3 = IV0W-WS-REC.IV0WW-CURR-PAGE-PTR;
  ;
  while (IV0W-WS-REC.IV0WW-INDEX2 <= 15
   && IV0W-WS-REC.IV0WW-INDEX3 <= 300)
    ;
    if (IV0W-CRCT-REC.SY-STY-NBR[IV0WW-INDEX3] == "      "
     || IV0WM005.IV0WM-SY-STY-NBR[IV0WW-INDEX2] == "      ")
      set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] skip, invisible;
    else
      if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "N"
       || converseVar.validationMsgNum == 105
       || converseVar.validationMsgNum == 123)
        if (IV0W-CRCT-REC.CU-PROD-ID[IV0WW-INDEX3] != 
        IV0W-UPDT-REC.CU-PROD-ID[IV0WW-INDEX3])
          set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] modified, bold;
        else
          set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] initialAttributes;
        end
      end
    end
    ;
    IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
    IV0W-WS-REC.IV0WW-INDEX3 = IV0W-WS-REC.IV0WW-INDEX3 + 1;
    ;
  end
  ;
  ;
    /* SET ATTRIBUTE TO AUTOSKIP,DARK FOR MAP LINES NOT RELATED TO LINES*/
    /* ON THE IV0W-CRCT-REC TABLE*/
  while (IV0W-WS-REC.IV0WW-INDEX2 <= 15
  )
    set IV0WM005.IV0WM-CU-PROD-ID[IV0WW-INDEX2] skip, invisible;
    ;
    IV0W-WS-REC.IV0WW-INDEX2 = IV0W-WS-REC.IV0WW-INDEX2 + 1;
    ;
  end
  ;
  set IV0WM005.IV-CRCT-SEQ-NBR skip, modified, invisible;
  set IV0WM005.IV-MAX-CRCT-SEQ skip, modified, invisible;
  ;
  if (IV0W-WS-REC.IV0WW-ERROR-FLAG == "N")
    /* IF IV0WM005.IV0WM-CU-PROD-ID(1) EQ ' ';*/
    set IV0WM005.IV0WM-SEL-SY-STY-NBR cursor;
    /* ELSE;*/
     /* SET IV0WM005.IV0WM-CU-PROD-ID(1) CURSOR;*/
    /* END;*/
  end
  ;
end // end IV0WS-UPDT-M5-ATTR

// MOVE UPDT-REC TO CRCT-REC
Function IV0WS-UPDT-TO-CRCT()
   /* IV0WS-UPDT-TO-CRCT - MOVE CORRECTION RECORD TO CORRECTION REC AREA*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-17-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-UPDT-TO-CRCT";
  ;
  move IV0W-UPDT-REC to IV0W-CRCT-REC withV60Compat;
  ;
end // end IV0WS-UPDT-TO-CRCT

// MOVE UPDT TABLE TO ITEM TABLE
Function IV0WS-UPDT-TO-ITEM()
   /* IV0WS-UPDT-TO-ITEM - MOVE UPDATE TABLE LINE ITEM DATA TO SAVE AREA*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-21-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IV0W-WS-REC.IV0WW-CURR-PROC-NM = "IV0WS-UPDT-TO-ITEM";
  ;
  IV0W-ITEM-REC.IV0WW-CORIT-AREA = IV0W-UPDT-REC.IV0WW-CORIT-AREA;
  ;
end // end IV0WS-UPDT-TO-ITEM

// PF3 Pressed Actions
Function IV0WS03()
   /* IV0WS03*/
   /* PROCESS PF3 ACTION*/
  ;
  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0A";
  XSEXIT(); /* transfer to invoicing main menu*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/
  IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
  ;
  ;
end // end IV0WS03

// PF4 Pressed Actions
Function IV0WS04()
    /* IV0WS04*/
    /* PROCESS PF4 ENTRY*/
  ;
  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "MN0M";
  XSEXIT(); /* transfer to system menu*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/
  IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
  ;
  ;
end // end IV0WS04

// PF13 action-xfer to IV0G-IVHDR
Function IV0WS13()
   /* IV0WS13*/
   /* PROCESS PF13 ACTION - TRANSFER CONTROL TO INVOICE HEADER - IV0G*/
  ;
  COMMAREA.CATOAP = "IV0G";
  COMMAREA.CAITEM = IV0WM001.IV-IVC-ID;
  COMMAREA.CAUSERA = " ";
  ;
  XSEXIT(); /* transfer to invoicing main menu*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/
  IV0W-WS-REC.IV0WW-ERROR-FLAG = "Y";
  ;
  ;
end // end IV0WS13

//*** RECORD=IV0W-CRCT-REC ****
// ************************************************************
// *   SAVE AREA FOR INVOICE CORRECTION 'BEFORE' DATA         *
// *                                                          *
// *   IN THE GL AREA EACH GL CODE OCCURS IN SPECIFIC         *
// *   OCCURANCES OF THE DATA AS FOLLOWS:                     *
// *                                                          *
// *    OCCURANCE    |    GL STORED IN THIS OCCURANCE         *
// *  ------------------------------------------------------  *
// *        1        |  TRADE DISCOUNT OFF THE FACE           *
// *        2        |  TRADE DISCOUNT BANKED                 *
// *        3        |  DEFECT ALLOWANCE OFF THE FACE         *
// *        4        |  DEFECT ALLOWANCE BANKED               *
// *        5        |  DIRECT SHIP                           *
// *        6        |  CASH BANK                             *
// *        7        |  SPECIAL NET                           *
// *        8        |  SHIP CHARGE                           *
// *        9        |  COOP                                  *
// *       10        |  FREIGHT ALLOWANCE                     *
// *       11        |  SMALL ORDER CHARGE                    *
// *                 |                                        *
// ************************************************************
// *    M A I N T E N A N C E    H I S T O R Y    L O G       *
// *----------------------------------------------------------*
// *   DATE    PGMR    DESCRIPTION                            *
// *----------------------------------------------------------*
// * 01-25-95  GDECKE  NEW APPLICATION                        *
// ************************************************************
// *****************************
Record IV0W-CRCT-REC type basicRecord
  5 IV0WW-CRCT-REC-GROUP IV0WW-CRCT-REC-GROUP ; 
    10 IV0WW-CORSQ-AREA IV0WW-CORSQ-AREA ; 
      15 IV-IVC-PART-CHAR IV-IVC-PART-CHAR ; 
      15 IV-IVC-ID IV-IVC-ID ; 
      15 IV-CRCT-SEQ-NBR IV-CRCT-SEQ-NBR ; 
      15 IV-CRCT-STAT-IND IV-CRCT-STAT-IND ; 
      15 XIC-IVC-CRCTRSN-CD XIC-IVC-CRCTRSN-CD ; 
      15 XXX-USER-ID XXX-USER-ID ; 
      15 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 IV0WW-CORHD-AREA IV0WW-CORHD-AREA ; 
      15 CU-CO-ID CU-CO-ID ; 
      15 CU-STOR-ID CU-STOR-ID ; 
      15 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
      15 CU-CO-NM CU-CO-NM ; 
      15 SP-SPGM-ID SP-SPGM-ID ; 
      15 OP-CUST-PO OP-CUST-PO ; 
      15 IV-HNDL-CHG IV-HNDL-CHG ; 
      15 CU-HNDL-CHG-NET-FL CU-HNDL-CHG-NET-FL ; 
      15 IV-NET-MRCH-AMT IV-NET-MRCH-AMT ; 
      15 IV-IVC-AMT IV-IVC-AMT ; 
      15 CU-STOR-SELF-ID CU-STOR-SELF-ID ; 
      15 IV-PTERM-DEFRD-DT IV-PTERM-DEFRD-DT ; 
      15 PK-NBR-OF-CARTONS PK-NBR-OF-CARTONS ; 
      15 SR-TOT-NBR-CARTONS SR-TOT-NBR-CARTONS ; 
      15 TF-PRO-NBR TF-PRO-NBR ; 
      15 XDS-DIR-SHIP-CD XDS-DIR-SHIP-CD ; 
      15 TF-CARR-CD TF-CARR-CD ; 
      15 TF-CARR-NM TF-CARR-NM ; 
      15 XPT-PTERM-CD XPT-PTERM-CD ; 
      15 XPT-PTERM-PCT XPT-PTERM-PCT ; 
      15 IV-PTERM-DSCT-AMT IV-PTERM-DSCT-AMT ; 
      15 IV-SHIPTO-NM IV-SHIPTO-NM ; 
      15 IV-SHIPTO-ADDR1 IV-SHIPTO-ADDR1 ; 
      15 IV-SHIPTO-ADDR2 IV-SHIPTO-ADDR2 ; 
      15 IV-SHIPTO-ADDR3 IV-SHIPTO-ADDR3 ; 
      15 IV-SHIPTO-CITY IV-SHIPTO-CITY ; 
      15 IV-SHIPTO-ST-CD IV-SHIPTO-ST-CD ; 
      15 IV-SHIPTO-ZIP IV-SHIPTO-ZIP ; 
    10 IV0WW-CORGL-AREA IV0WW-CORGL-AREA [11] ; 
      15 PF-GL-XREF PF-GL-XREF ; 
      15 IV-FACE-BANK-TYP IV-FACE-BANK-TYP ; 
      15 IV0WW-OP-LINE-ITEM-NBR-GL IV0WW-OP-LINE-ITEM-NBR-GL ; 
      15 IV-IVC-GL-SEQ IV-IVC-GL-SEQ ; 
      15 GL-GEN-LEDGER-CD GL-GEN-LEDGER-CD ; 
      15 IV-GL-NET-FL IV-GL-NET-FL ; 
      15 IV-GL-OVRD-FL IV-GL-OVRD-FL ; 
      15 IV-GL-PCT IV-GL-PCT ; 
      15 IV-GL-AMT IV-GL-AMT ; 
    10 IV0WW-CORIT-AREA IV0WW-CORIT-AREA ; 
      12 IV0WW-CORIT-OCCURANCE IV0WW-CORIT-OCCURANCE [300] ; 
        15 IV0WW-OP-LINE-ITEM-NBR-IT IV0WW-OP-LINE-ITEM-NBR-IT ; 
        15 SY-STY-NBR SY-STY-NBR ; 
        15 SY-COLR-CD-ID SY-COLR-CD-ID ; 
        15 XDM-DIM-CD XDM-DIM-CD ; 
        15 CU-PROD-ID CU-PROD-ID ; 
        15 XUM-UOM-CD XUM-UOM-CD ; 
        15 OP-PRC-OVRD-FL OP-PRC-OVRD-FL ; 
        15 OP-PRC-VARY-FL OP-PRC-VARY-FL ; 
        15 IV-GRS-LN-UNIT-PRC IV-GRS-LN-UNIT-PRC ; 
        15 IV-NET-LN-UNIT-PRC IV-NET-LN-UNIT-PRC ; 
        15 IV-GRS-LN-MRCH-AMT IV-GRS-LN-MRCH-AMT ; 
        15 IV-NET-LN-MRCH-AMT IV-NET-LN-MRCH-AMT ; 
        15 IV-LN-SHIPPED-QTY IV-LN-SHIPPED-QTY ; 
        15 IV-NBR-SZ IV-NBR-SZ ; 
    10 IV0WW-CORSZ-AREA IV0WW-CORSZ-AREA [300] ; 
      15 IV0WW-OP-LINE-ITEM-NBR-SZ IV0WW-OP-LINE-ITEM-NBR-SZ ; 
      15 SY-SZ-ID SY-SZ-ID ; 
      15 IV0WW-OP-PRC-OVRD-FL IV0WW-OP-PRC-OVRD-FL ; 
      15 IV-GRS-UNIT-PRC IV-GRS-UNIT-PRC ; 
      15 IV-NET-UNIT-PRC IV-NET-UNIT-PRC ; 
      15 SR-QTY-SHP SR-QTY-SHP ; 
    10 IV0WW-CORTX-AREA IV0WW-CORTX-AREA [3] ; 
      15 IV-TXT-SEQ-NBR IV-TXT-SEQ-NBR ; 
      15 IV-TXT IV-TXT ; 
end // end IV0W-CRCT-REC

//*** RECORD=IV0W-IOMOD-REC ****
// ************************************************************
// *   RECORD CONTAINS ONE FIELD - IV0WW-IOMOD-FUNCTION       *
// *                                                          *
// *   THE USE OF THIS RECORD IN THE DATABASE CALLS ALLOWS    *
// *   THE APPLICATION TO BE CODED WITH JUST ONE CALL TO      *
// *   EACH IOMOD. THE ONE CALL WILL HANDLE ANY FUNCTION CODE *
// *   AS LONG AS THE VALUE IS MOVED TO THE FUNCTION FIELD    *
// *   IN THIS RECORD BEFORE THE IOMOD ROUTINE IS USED.       *
// *                                                          *
// ************************************************************
// *    M A I N T E N A N C E    H I S T O R Y    L O G       *
// *----------------------------------------------------------*
// *   DATE    PGMR    DESCRIPTION                            *
// *----------------------------------------------------------*
// * 01-25-95  GDECKE  NEW APPLICATION                        *
// ************************************************************
// ******************************
Record IV0W-IOMOD-REC type basicRecord
  5 IV0WW-IOMOD-FUNCTION IV0WW-IOMOD-FUNCTION ; 
end // end IV0W-IOMOD-REC

//*** RECORD=IV0W-ITEM-REC ****
// ************************************************************
// *   SAVE AREA FOR INVOICE CORRECTION 'BEFORE' DATA         *
// *                                                          *
// *   IN THE GL AREA EACH GL CODE OCCURS IN SPECIFIC         *
// *   OCCURANCES OF THE DATA AS FOLLOWS:                     *
// *                                                          *
// *    OCCURANCE    |    GL STORED IN THIS OCCURANCE         *
// *  ------------------------------------------------------  *
// *        1        |  TRADE DISCOUNT OFF THE FACE           *
// *        2        |  TRADE DISCOUNT BANKED                 *
// *        3        |  DEFECT ALLOWANCE OFF THE FACE         *
// *        4        |  DEFECT ALLOWANCE BANKED               *
// *        5        |  DIRECT SHIP                           *
// *        6        |  CASH BANK                             *
// *        7        |  SPECIAL NET                           *
// *        8        |  SHIP CHARGE                           *
// *        9        |  COOP                                  *
// *       10        |  FREIGHT ALLOWANCE                     *
// *       11        |  SMALL ORDER CHARGE                    *
// *                 |                                        *
// ************************************************************
// *    M A I N T E N A N C E    H I S T O R Y    L O G       *
// *----------------------------------------------------------*
// *   DATE    PGMR    DESCRIPTION                            *
// *----------------------------------------------------------*
// * 01-25-95  GDECKE  NEW APPLICATION                        *
// ************************************************************
// *****************************
Record IV0W-ITEM-REC type basicRecord
  5 IV0WW-ITEM-REC-GROUP IV0WW-ITEM-REC-GROUP ; 
    10 IV0WW-CORIT-AREA IV0WW-CORIT-AREA ; 
      12 IV0WW-CORIT-OCCURANCE IV0WW-CORIT-OCCURANCE [300] ; 
        15 IV0WW-OP-LINE-ITEM-NBR-IT IV0WW-OP-LINE-ITEM-NBR-IT ; 
        15 SY-STY-NBR SY-STY-NBR ; 
        15 SY-COLR-CD-ID SY-COLR-CD-ID ; 
        15 XDM-DIM-CD XDM-DIM-CD ; 
        15 CU-PROD-ID CU-PROD-ID ; 
        15 XUM-UOM-CD XUM-UOM-CD ; 
        15 OP-PRC-OVRD-FL OP-PRC-OVRD-FL ; 
        15 OP-PRC-VARY-FL OP-PRC-VARY-FL ; 
        15 IV-GRS-LN-UNIT-PRC IV-GRS-LN-UNIT-PRC ; 
        15 IV-NET-LN-UNIT-PRC IV-NET-LN-UNIT-PRC ; 
        15 IV-GRS-LN-MRCH-AMT IV-GRS-LN-MRCH-AMT ; 
        15 IV-NET-LN-MRCH-AMT IV-NET-LN-MRCH-AMT ; 
        15 IV-LN-SHIPPED-QTY IV-LN-SHIPPED-QTY ; 
        15 IV-NBR-SZ IV-NBR-SZ ; 
end // end IV0W-ITEM-REC

//*** RECORD=IV0W-ORIG-REC ****
// ************************************************************
// *   SAVE AREA FOR INVOICE CORRECTION 'ORIGINAL' DATA       *
// *                                                          *
// *   IN THE GL AREA EACH GL CODE OCCURS IN SPECIFIC         *
// *   OCCURANCES OF THE DATA AS FOLLOWS:                     *
// *                                                          *
// *    OCCURANCE    |    GL STORED IN THIS OCCURANCE         *
// *  ------------------------------------------------------  *
// *        1        |  TRADE DISCOUNT OFF THE FACE           *
// *        2        |  TRADE DISCOUNT BANKED                 *
// *        3        |  DEFECT ALLOWANCE OFF THE FACE         *
// *        4        |  DEFECT ALLOWANCE BANKED               *
// *        5        |  DIRECT SHIP                           *
// *        6        |  CASH BANK                             *
// *        7        |  SPECIAL NET                           *
// *        8        |  SHIP CHARGE                           *
// *        9        |  COOP                                  *
// *       10        |  FREIGHT ALLOWANCE                     *
// *       11        |  SMALL ORDER CHARGE                    *
// *                 |                                        *
// ************************************************************
// *    M A I N T E N A N C E    H I S T O R Y    L O G       *
// *----------------------------------------------------------*
// *   DATE    PGMR    DESCRIPTION                            *
// *----------------------------------------------------------*
// * 01-25-95  GDECKE  NEW APPLICATION                        *
// ************************************************************
// *****************************
Record IV0W-ORIG-REC type basicRecord
  5 IV0WW-ORIG-REC-GROUP IV0WW-ORIG-REC-GROUP ; 
    10 IV0WW-CORSQ-AREA IV0WW-CORSQ-AREA ; 
      15 IV-IVC-PART-CHAR IV-IVC-PART-CHAR ; 
      15 IV-IVC-ID IV-IVC-ID ; 
      15 IV-CRCT-SEQ-NBR IV-CRCT-SEQ-NBR ; 
      15 IV-CRCT-STAT-IND IV-CRCT-STAT-IND ; 
      15 XIC-IVC-CRCTRSN-CD XIC-IVC-CRCTRSN-CD ; 
      15 XXX-USER-ID XXX-USER-ID ; 
      15 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 IV0WW-CORHD-AREA IV0WW-CORHD-AREA ; 
      15 CU-CO-ID CU-CO-ID ; 
      15 CU-STOR-ID CU-STOR-ID ; 
      15 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
      15 CU-CO-NM CU-CO-NM ; 
      15 SP-SPGM-ID SP-SPGM-ID ; 
      15 OP-CUST-PO OP-CUST-PO ; 
      15 IV-HNDL-CHG IV-HNDL-CHG ; 
      15 CU-HNDL-CHG-NET-FL CU-HNDL-CHG-NET-FL ; 
      15 IV-NET-MRCH-AMT IV-NET-MRCH-AMT ; 
      15 IV-IVC-AMT IV-IVC-AMT ; 
      15 CU-STOR-SELF-ID CU-STOR-SELF-ID ; 
      15 IV-PTERM-DEFRD-DT IV-PTERM-DEFRD-DT ; 
      15 PK-NBR-OF-CARTONS PK-NBR-OF-CARTONS ; 
      15 SR-TOT-NBR-CARTONS SR-TOT-NBR-CARTONS ; 
      15 TF-PRO-NBR TF-PRO-NBR ; 
      15 XDS-DIR-SHIP-CD XDS-DIR-SHIP-CD ; 
      15 TF-CARR-CD TF-CARR-CD ; 
      15 TF-CARR-NM TF-CARR-NM ; 
      15 XPT-PTERM-CD XPT-PTERM-CD ; 
      15 XPT-PTERM-PCT XPT-PTERM-PCT ; 
      15 IV-PTERM-DSCT-AMT IV-PTERM-DSCT-AMT ; 
      15 IV-SHIPTO-NM IV-SHIPTO-NM ; 
      15 IV-SHIPTO-ADDR1 IV-SHIPTO-ADDR1 ; 
      15 IV-SHIPTO-ADDR2 IV-SHIPTO-ADDR2 ; 
      15 IV-SHIPTO-ADDR3 IV-SHIPTO-ADDR3 ; 
      15 IV-SHIPTO-CITY IV-SHIPTO-CITY ; 
      15 IV-SHIPTO-ST-CD IV-SHIPTO-ST-CD ; 
      15 IV-SHIPTO-ZIP IV-SHIPTO-ZIP ; 
    10 IV0WW-CORGL-AREA IV0WW-CORGL-AREA [11] ; 
      15 PF-GL-XREF PF-GL-XREF ; 
      15 IV-FACE-BANK-TYP IV-FACE-BANK-TYP ; 
      15 IV0WW-OP-LINE-ITEM-NBR-GL IV0WW-OP-LINE-ITEM-NBR-GL ; 
      15 IV-IVC-GL-SEQ IV-IVC-GL-SEQ ; 
      15 GL-GEN-LEDGER-CD GL-GEN-LEDGER-CD ; 
      15 IV-GL-NET-FL IV-GL-NET-FL ; 
      15 IV-GL-OVRD-FL IV-GL-OVRD-FL ; 
      15 IV-GL-PCT IV-GL-PCT ; 
      15 IV-GL-AMT IV-GL-AMT ; 
    10 IV0WW-CORIT-AREA IV0WW-CORIT-AREA ; 
      12 IV0WW-CORIT-OCCURANCE IV0WW-CORIT-OCCURANCE [300] ; 
        15 IV0WW-OP-LINE-ITEM-NBR-IT IV0WW-OP-LINE-ITEM-NBR-IT ; 
        15 SY-STY-NBR SY-STY-NBR ; 
        15 SY-COLR-CD-ID SY-COLR-CD-ID ; 
        15 XDM-DIM-CD XDM-DIM-CD ; 
        15 CU-PROD-ID CU-PROD-ID ; 
        15 XUM-UOM-CD XUM-UOM-CD ; 
        15 OP-PRC-OVRD-FL OP-PRC-OVRD-FL ; 
        15 OP-PRC-VARY-FL OP-PRC-VARY-FL ; 
        15 IV-GRS-LN-UNIT-PRC IV-GRS-LN-UNIT-PRC ; 
        15 IV-NET-LN-UNIT-PRC IV-NET-LN-UNIT-PRC ; 
        15 IV-GRS-LN-MRCH-AMT IV-GRS-LN-MRCH-AMT ; 
        15 IV-NET-LN-MRCH-AMT IV-NET-LN-MRCH-AMT ; 
        15 IV-LN-SHIPPED-QTY IV-LN-SHIPPED-QTY ; 
        15 IV-NBR-SZ IV-NBR-SZ ; 
    10 IV0WW-CORSZ-AREA IV0WW-CORSZ-AREA [300] ; 
      15 IV0WW-OP-LINE-ITEM-NBR-SZ IV0WW-OP-LINE-ITEM-NBR-SZ ; 
      15 SY-SZ-ID SY-SZ-ID ; 
      15 IV0WW-OP-PRC-OVRD-FL IV0WW-OP-PRC-OVRD-FL ; 
      15 IV-GRS-UNIT-PRC IV-GRS-UNIT-PRC ; 
      15 IV-NET-UNIT-PRC IV-NET-UNIT-PRC ; 
      15 SR-QTY-SHP SR-QTY-SHP ; 
    10 IV0WW-CORTX-AREA IV0WW-CORTX-AREA [3] ; 
      15 IV-TXT-SEQ-NBR IV-TXT-SEQ-NBR ; 
      15 IV-TXT IV-TXT ; 
end // end IV0W-ORIG-REC

//*** RECORD=IV0W-PREV-REC ****
// ************************************************************
// *   SAVE AREA FOR INVOICE CORRECTION COPY OF DATA FROM THE *
// *   CORRECTION JUST BEFORE THE MOST CURRENT CHANGE SEQ#.   *
// *                                                          *
// *   IN THE GL AREA EACH GL CODE OCCURS IN SPECIFIC         *
// *   OCCURANCES OF THE DATA AS FOLLOWS:                     *
// *                                                          *
// *    OCCURANCE    |    GL STORED IN THIS OCCURANCE         *
// *  ------------------------------------------------------  *
// *        1        |  TRADE DISCOUNT OFF THE FACE           *
// *        2        |  TRADE DISCOUNT BANKED                 *
// *        3        |  DEFECT ALLOWANCE OFF THE FACE         *
// *        4        |  DEFECT ALLOWANCE BANKED               *
// *        5        |  DIRECT SHIP                           *
// *        6        |  CASH BANK                             *
// *        7        |  SPECIAL NET                           *
// *        8        |  SHIP CHARGE                           *
// *        9        |  COOP                                  *
// *       10        |  FREIGHT ALLOWANCE                     *
// *       11        |  SMALL ORDER CHARGE                    *
// *                 |                                        *
// ************************************************************
// *    M A I N T E N A N C E    H I S T O R Y    L O G       *
// *----------------------------------------------------------*
// *   DATE    PGMR    DESCRIPTION                            *
// *----------------------------------------------------------*
// * 02-29-95  GDECKE  NEW APPLICATION                        *
// ************************************************************
// *****************************
Record IV0W-PREV-REC type basicRecord
  5 IV0WW-PREV-REC-GROUP IV0WW-PREV-REC-GROUP ; 
    10 IV0WW-CORSQ-AREA IV0WW-CORSQ-AREA ; 
      15 IV-IVC-PART-CHAR IV-IVC-PART-CHAR ; 
      15 IV-IVC-ID IV-IVC-ID ; 
      15 IV-CRCT-SEQ-NBR IV-CRCT-SEQ-NBR ; 
      15 IV-CRCT-STAT-IND IV-CRCT-STAT-IND ; 
      15 XIC-IVC-CRCTRSN-CD XIC-IVC-CRCTRSN-CD ; 
      15 XXX-USER-ID XXX-USER-ID ; 
      15 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 IV0WW-CORHD-AREA IV0WW-CORHD-AREA ; 
      15 CU-CO-ID CU-CO-ID ; 
      15 CU-STOR-ID CU-STOR-ID ; 
      15 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
      15 CU-CO-NM CU-CO-NM ; 
      15 SP-SPGM-ID SP-SPGM-ID ; 
      15 OP-CUST-PO OP-CUST-PO ; 
      15 IV-HNDL-CHG IV-HNDL-CHG ; 
      15 CU-HNDL-CHG-NET-FL CU-HNDL-CHG-NET-FL ; 
      15 IV-NET-MRCH-AMT IV-NET-MRCH-AMT ; 
      15 IV-IVC-AMT IV-IVC-AMT ; 
      15 CU-STOR-SELF-ID CU-STOR-SELF-ID ; 
      15 IV-PTERM-DEFRD-DT IV-PTERM-DEFRD-DT ; 
      15 PK-NBR-OF-CARTONS PK-NBR-OF-CARTONS ; 
      15 SR-TOT-NBR-CARTONS SR-TOT-NBR-CARTONS ; 
      15 TF-PRO-NBR TF-PRO-NBR ; 
      15 XDS-DIR-SHIP-CD XDS-DIR-SHIP-CD ; 
      15 TF-CARR-CD TF-CARR-CD ; 
      15 TF-CARR-NM TF-CARR-NM ; 
      15 XPT-PTERM-CD XPT-PTERM-CD ; 
      15 XPT-PTERM-PCT XPT-PTERM-PCT ; 
      15 IV-PTERM-DSCT-AMT IV-PTERM-DSCT-AMT ; 
      15 IV-SHIPTO-NM IV-SHIPTO-NM ; 
      15 IV-SHIPTO-ADDR1 IV-SHIPTO-ADDR1 ; 
      15 IV-SHIPTO-ADDR2 IV-SHIPTO-ADDR2 ; 
      15 IV-SHIPTO-ADDR3 IV-SHIPTO-ADDR3 ; 
      15 IV-SHIPTO-CITY IV-SHIPTO-CITY ; 
      15 IV-SHIPTO-ST-CD IV-SHIPTO-ST-CD ; 
      15 IV-SHIPTO-ZIP IV-SHIPTO-ZIP ; 
    10 IV0WW-CORGL-AREA IV0WW-CORGL-AREA [11] ; 
      15 PF-GL-XREF PF-GL-XREF ; 
      15 IV-FACE-BANK-TYP IV-FACE-BANK-TYP ; 
      15 IV0WW-OP-LINE-ITEM-NBR-GL IV0WW-OP-LINE-ITEM-NBR-GL ; 
      15 IV-IVC-GL-SEQ IV-IVC-GL-SEQ ; 
      15 GL-GEN-LEDGER-CD GL-GEN-LEDGER-CD ; 
      15 IV-GL-NET-FL IV-GL-NET-FL ; 
      15 IV-GL-OVRD-FL IV-GL-OVRD-FL ; 
      15 IV-GL-PCT IV-GL-PCT ; 
      15 IV-GL-AMT IV-GL-AMT ; 
    10 IV0WW-CORIT-AREA IV0WW-CORIT-AREA ; 
      12 IV0WW-CORIT-OCCURANCE IV0WW-CORIT-OCCURANCE [300] ; 
        15 IV0WW-OP-LINE-ITEM-NBR-IT IV0WW-OP-LINE-ITEM-NBR-IT ; 
        15 SY-STY-NBR SY-STY-NBR ; 
        15 SY-COLR-CD-ID SY-COLR-CD-ID ; 
        15 XDM-DIM-CD XDM-DIM-CD ; 
        15 CU-PROD-ID CU-PROD-ID ; 
        15 XUM-UOM-CD XUM-UOM-CD ; 
        15 OP-PRC-OVRD-FL OP-PRC-OVRD-FL ; 
        15 OP-PRC-VARY-FL OP-PRC-VARY-FL ; 
        15 IV-GRS-LN-UNIT-PRC IV-GRS-LN-UNIT-PRC ; 
        15 IV-NET-LN-UNIT-PRC IV-NET-LN-UNIT-PRC ; 
        15 IV-GRS-LN-MRCH-AMT IV-GRS-LN-MRCH-AMT ; 
        15 IV-NET-LN-MRCH-AMT IV-NET-LN-MRCH-AMT ; 
        15 IV-LN-SHIPPED-QTY IV-LN-SHIPPED-QTY ; 
        15 IV-NBR-SZ IV-NBR-SZ ; 
    10 IV0WW-CORSZ-AREA IV0WW-CORSZ-AREA [300] ; 
      15 IV0WW-OP-LINE-ITEM-NBR-SZ IV0WW-OP-LINE-ITEM-NBR-SZ ; 
      15 SY-SZ-ID SY-SZ-ID ; 
      15 IV0WW-OP-PRC-OVRD-FL IV0WW-OP-PRC-OVRD-FL ; 
      15 IV-GRS-UNIT-PRC IV-GRS-UNIT-PRC ; 
      15 IV-NET-UNIT-PRC IV-NET-UNIT-PRC ; 
      15 SR-QTY-SHP SR-QTY-SHP ; 
    10 IV0WW-CORTX-AREA IV0WW-CORTX-AREA [3] ; 
      15 IV-TXT-SEQ-NBR IV-TXT-SEQ-NBR ; 
      15 IV-TXT IV-TXT ; 
end // end IV0W-PREV-REC

//*** RECORD=IV0W-UPDT-REC ****
// ************************************************************
// *   SAVE AREA FOR INVOICE CORRECTION 'AFTER' DATA          *
// *                                                          *
// *   IN THE GL AREA EACH GL CODE OCCURS IN SPECIFIC         *
// *   OCCURANCES OF THE DATA AS FOLLOWS:                     *
// *                                                          *
// *    OCCURANCE    |    GL STORED IN THIS OCCURANCE         *
// *  ------------------------------------------------------  *
// *        1        |  TRADE DISCOUNT OFF THE FACE           *
// *        2        |  TRADE DISCOUNT BANKED                 *
// *        3        |  DEFECT ALLOWANCE OFF THE FACE         *
// *        4        |  DEFECT ALLOWANCE BANKED               *
// *        5        |  DIRECT SHIP                           *
// *        6        |  CASH BANK                             *
// *        7        |  SPECIAL NET                           *
// *        8        |  SHIP CHARGE                           *
// *        9        |  COOP                                  *
// *       10        |  FREIGHT ALLOWANCE                     *
// *       11        |  SMALL ORDER CHARGE                    *
// *                 |                                        *
// ************************************************************
// *    M A I N T E N A N C E    H I S T O R Y    L O G       *
// *----------------------------------------------------------*
// *   DATE    PGMR    DESCRIPTION                            *
// *----------------------------------------------------------*
// * 01-25-95  GDECKE  NEW APPLICATION                        *
// ************************************************************
// *****************************
Record IV0W-UPDT-REC type basicRecord
  5 IV0WW-UPDT-REC-GROUP IV0WW-UPDT-REC-GROUP ; 
    10 IV0WW-CORSQ-AREA IV0WW-CORSQ-AREA ; 
      15 IV-IVC-PART-CHAR IV-IVC-PART-CHAR ; 
      15 IV-IVC-ID IV-IVC-ID ; 
      15 IV-CRCT-SEQ-NBR IV-CRCT-SEQ-NBR ; 
      15 IV-CRCT-STAT-IND IV-CRCT-STAT-IND ; 
      15 XIC-IVC-CRCTRSN-CD XIC-IVC-CRCTRSN-CD ; 
      15 XXX-USER-ID XXX-USER-ID ; 
      15 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 IV0WW-CORHD-AREA IV0WW-CORHD-AREA ; 
      15 CU-CO-ID CU-CO-ID ; 
      15 CU-STOR-ID CU-STOR-ID ; 
      15 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
      15 CU-CO-NM CU-CO-NM ; 
      15 SP-SPGM-ID SP-SPGM-ID ; 
      15 OP-CUST-PO OP-CUST-PO ; 
      15 IV-HNDL-CHG IV-HNDL-CHG ; 
      15 CU-HNDL-CHG-NET-FL CU-HNDL-CHG-NET-FL ; 
      15 IV-NET-MRCH-AMT IV-NET-MRCH-AMT ; 
      15 IV-IVC-AMT IV-IVC-AMT ; 
      15 CU-STOR-SELF-ID CU-STOR-SELF-ID ; 
      15 IV-PTERM-DEFRD-DT IV-PTERM-DEFRD-DT ; 
      15 PK-NBR-OF-CARTONS PK-NBR-OF-CARTONS ; 
      15 SR-TOT-NBR-CARTONS SR-TOT-NBR-CARTONS ; 
      15 TF-PRO-NBR TF-PRO-NBR ; 
      15 XDS-DIR-SHIP-CD XDS-DIR-SHIP-CD ; 
      15 TF-CARR-CD TF-CARR-CD ; 
      15 TF-CARR-NM TF-CARR-NM ; 
      15 XPT-PTERM-CD XPT-PTERM-CD ; 
      15 XPT-PTERM-PCT XPT-PTERM-PCT ; 
      15 IV-PTERM-DSCT-AMT IV-PTERM-DSCT-AMT ; 
      15 IV-SHIPTO-NM IV-SHIPTO-NM ; 
      15 IV-SHIPTO-ADDR1 IV-SHIPTO-ADDR1 ; 
      15 IV-SHIPTO-ADDR2 IV-SHIPTO-ADDR2 ; 
      15 IV-SHIPTO-ADDR3 IV-SHIPTO-ADDR3 ; 
      15 IV-SHIPTO-CITY IV-SHIPTO-CITY ; 
      15 IV-SHIPTO-ST-CD IV-SHIPTO-ST-CD ; 
      15 IV-SHIPTO-ZIP IV-SHIPTO-ZIP ; 
    10 IV0WW-CORGL-AREA IV0WW-CORGL-AREA [11] ; 
      15 PF-GL-XREF PF-GL-XREF ; 
      15 IV-FACE-BANK-TYP IV-FACE-BANK-TYP ; 
      15 IV0WW-OP-LINE-ITEM-NBR-GL IV0WW-OP-LINE-ITEM-NBR-GL ; 
      15 IV-IVC-GL-SEQ IV-IVC-GL-SEQ ; 
      15 GL-GEN-LEDGER-CD GL-GEN-LEDGER-CD ; 
      15 IV-GL-NET-FL IV-GL-NET-FL ; 
      15 IV-GL-OVRD-FL IV-GL-OVRD-FL ; 
      15 IV-GL-PCT IV-GL-PCT ; 
      15 IV-GL-AMT IV-GL-AMT ; 
    10 IV0WW-CORIT-AREA IV0WW-CORIT-AREA ; 
      12 IV0WW-CORIT-OCCURANCE IV0WW-CORIT-OCCURANCE [300] ; 
        15 IV0WW-OP-LINE-ITEM-NBR-IT IV0WW-OP-LINE-ITEM-NBR-IT ; 
        15 SY-STY-NBR SY-STY-NBR ; 
        15 SY-COLR-CD-ID SY-COLR-CD-ID ; 
        15 XDM-DIM-CD XDM-DIM-CD ; 
        15 CU-PROD-ID CU-PROD-ID ; 
        15 XUM-UOM-CD XUM-UOM-CD ; 
        15 OP-PRC-OVRD-FL OP-PRC-OVRD-FL ; 
        15 OP-PRC-VARY-FL OP-PRC-VARY-FL ; 
        15 IV-GRS-LN-UNIT-PRC IV-GRS-LN-UNIT-PRC ; 
        15 IV-NET-LN-UNIT-PRC IV-NET-LN-UNIT-PRC ; 
        15 IV-GRS-LN-MRCH-AMT IV-GRS-LN-MRCH-AMT ; 
        15 IV-NET-LN-MRCH-AMT IV-NET-LN-MRCH-AMT ; 
        15 IV-LN-SHIPPED-QTY IV-LN-SHIPPED-QTY ; 
        15 IV-NBR-SZ IV-NBR-SZ ; 
    10 IV0WW-CORSZ-AREA IV0WW-CORSZ-AREA [300] ; 
      15 IV0WW-OP-LINE-ITEM-NBR-SZ IV0WW-OP-LINE-ITEM-NBR-SZ ; 
      15 SY-SZ-ID SY-SZ-ID ; 
      15 IV0WW-OP-PRC-OVRD-FL IV0WW-OP-PRC-OVRD-FL ; 
      15 IV-GRS-UNIT-PRC IV-GRS-UNIT-PRC ; 
      15 IV-NET-UNIT-PRC IV-NET-UNIT-PRC ; 
      15 SR-QTY-SHP SR-QTY-SHP ; 
    10 IV0WW-CORTX-AREA IV0WW-CORTX-AREA [3] ; 
      15 IV-TXT-SEQ-NBR IV-TXT-SEQ-NBR ; 
      15 IV-TXT IV-TXT ; 
end // end IV0W-UPDT-REC

//*** RECORD=IV0W-WS-REC ****
// ************************************************************
// *   SAVE AREA FOR INVOICE CORRECTION 'BEFORE' DATA         *
// *                                                          *
// *   IN THE GL AREA EACH GL CODE OCCURS IN SPECIFIC         *
// *   OCCURANCES OF THE DATA AS FOLLOWS:                     *
// *                                                          *
// *    OCCURANCE    |    GL STORED IN THIS OCCURANCE         *
// *  ------------------------------------------------------  *
// *        1        |  TRADE DISCOUNT OFF THE FACE           *
// *        2        |  TRADE DISCOUNT BANKED                 *
// *        3        |  DEFECT ALLOWANCE OFF THE FACE         *
// *        4        |  DEFECT ALLOWANCE BANKED               *
// *        5        |  DIRECT SHIP                           *
// *        6        |  CASH BANK                             *
// *        7        |  SPECIAL NET                           *
// *        8        |  SHIP CHARGE                           *
// *        9        |  COOP                                  *
// *       10        |  FREIGHT ALLOWANCE                     *
// *       11        |  SMALL ORDER CHARGE                    *
// *                 |                                        *
// *                                                          *
// *   THE iv0ww-sku-override-area corresponds to line items  *
// *   in the iv0w-crct-rec and map5. It is used in the program
// *   to keep track of which sku's have passed the sku edit, *
// *   failed the sku edit or have been ovrrridden. the sku   *
// *   value is saved when it passes through the edit process.*
// *                                                          *
// *    sku-ovrd-fl  |    description                         *
// *  ------------------------------------------------------  *
// *        ' '      |  cu-prod-id has not been edited.       *
// *        'G'      |  cu-prod-id has PASSED SKU EDITS.      *
// *        'E'      |  cu-prod-id has FAILED SKU EDITS.      *
// *        'C'      |  cu-prod-id has FAILED SKU EDITS AND   *
// *                 |    AN OVERRIDE HAS BEEN CONFIRMED.     *
// ************************************************************
// *    M A I N T E N A N C E    H I S T O R Y    L O G       *
// *----------------------------------------------------------*
// *   DATE    PGMR    DESCRIPTION                            *
// *----------------------------------------------------------*
// * 01-25-95  GDECKE  NEW APPLICATION                        *
// ************************************************************
// ***************************
Record IV0W-WS-REC type basicRecord
  5 IV0WW-WS-REC-GROUP IV0WW-WS-REC-GROUP ; 
    10 IV-IVC-ID IV-IVC-ID ; 
    10 IV0WW-PREV-ENTR-IVC-ID IV0WW-PREV-ENTR-IVC-ID ; 
    10 IV0WW-IVC-ID-CHAR IV0WW-IVC-ID-CHAR ; 
      15 IV0WW-IVC-ID-FILL IV0WW-IVC-ID-FILL ; 
      15 IV0WW-IVC-PART-CHAR IV0WW-IVC-PART-CHAR ; 
    10 CU-CO-ID CU-CO-ID ; 
    10 CU-STOR-ID CU-STOR-ID ; 
    10 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
    10 XXX-USER-ID XXX-USER-ID ; 
    10 IV0WW-DEADLOCK-CT IV0WW-DEADLOCK-CT ; 
    10 IV0WW-DEADLOCK-FL IV0WW-DEADLOCK-FL ; 
    10 IV0WW-CURR-PROC-NM IV0WW-CURR-PROC-NM ; 
    10 IV0WW-DISP-IVC-ID IV0WW-DISP-IVC-ID ; 
    10 IV0WW-ERROR-FLAG IV0WW-ERROR-FLAG ; 
    10 IV0WW-MAX-CRCT-SEQ IV0WW-MAX-CRCT-SEQ ; 
    10 IV0WW-PREV-CRCT-FLAG IV0WW-PREV-CRCT-FLAG ; 
    10 IV0WW-REQ-CRCT-SEQ IV0WW-REQ-CRCT-SEQ ; 
    10 IV0WW-LINE-INDEX IV0WW-LINE-INDEX ; 
    10 IV0WW-IVC-ARRAY IV0WW-IVC-ARRAY ; 
    10 IV0WW-INDEX2 IV0WW-INDEX2 ; 
    10 IV0WW-INDEX3 IV0WW-INDEX3 ; 
    10 IV0WW-END-OF-APPL-FL IV0WW-END-OF-APPL-FL ; 
    10 IV0WW-END-OF-SCRN-FL IV0WW-END-OF-SCRN-FL ; 
    10 IV0WW-BUILD-SCRN-FL IV0WW-BUILD-SCRN-FL ; 
    10 IV0WW-BUILD-ARRAY-FL IV0WW-BUILD-ARRAY-FL ; 
    10 IV0WW-CURR-SCREEN-NAME IV0WW-CURR-SCREEN-NAME ; 
    10 * char(1) ; 
    10 IV0WW-SCREEN-INFO-TBL IV0WW-SCREEN-INFO-TBL ; 
      15 IV0WW-SCREEN-NAME IV0WW-SCREEN-NAME [3] ; 
      15 IV0WW-SCREEN-MAX-LINES IV0WW-SCREEN-MAX-LINES [3] ; 
      15 IV0WW-SCREEN-PTR-TO-TBL IV0WW-SCREEN-PTR-TO-TBL [3] ; 
      15 IV0WW-SCREEN-LINE-PTR IV0WW-SCREEN-LINE-PTR [3] ; 
    10 * char(1) ; 
    10 IV0WW-SCRN-PTR IV0WW-SCRN-PTR ; 
    10 IV0WW-EOF-FLAG IV0WW-EOF-FLAG ; 
    10 IV0WW-CSR-EOF-FL IV0WW-CSR-EOF-FL ; 
    10 IV0WW-DO-EDITS-FLAG IV0WW-DO-EDITS-FLAG ; 
    10 IV0WW-NEW-IVC-FLAG IV0WW-NEW-IVC-FLAG ; 
    10 IV0WW-NEW-SEQ-FLAG IV0WW-NEW-SEQ-FLAG ; 
    10 IV0WW-UPDT-CORSQ-FLAG IV0WW-UPDT-CORSQ-FLAG ; 
    10 IV0WW-UPDT-CORHD-FLAG IV0WW-UPDT-CORHD-FLAG ; 
    10 IV0WW-UPDT-CORGL-FLAG IV0WW-UPDT-CORGL-FLAG ; 
    10 IV0WW-UPDT-CORIT-FLAG IV0WW-UPDT-CORIT-FLAG ; 
    10 IV0WW-UPDT-CORSZ-FLAG IV0WW-UPDT-CORSZ-FLAG ; 
    10 IV0WW-UPDT-CORTX-FLAG IV0WW-UPDT-CORTX-FLAG ; 
    10 IV0WW-UPDT-IVHDX-FLAG IV0WW-UPDT-IVHDX-FLAG ; 
    10 IV0WW-UPDT-IVHDR-FLAG IV0WW-UPDT-IVHDR-FLAG ; 
    10 IV0WW-UPDT-IVGLX-FLAG IV0WW-UPDT-IVGLX-FLAG ; 
    10 IV0WW-UPDT-IVITM-FLAG IV0WW-UPDT-IVITM-FLAG ; 
    10 IV0WW-UPDT-IVSIZ-FLAG IV0WW-UPDT-IVSIZ-FLAG ; 
    10 IV0WW-UPDT-IVADR-FLAG IV0WW-UPDT-IVADR-FLAG ; 
    10 IV0WW-MAX-ITEM-LINES IV0WW-MAX-ITEM-LINES ; 
    10 IV0WW-CURR-ITEM-PTR IV0WW-CURR-ITEM-PTR ; 
    10 IV0WW-CURR-SCRN-PTR IV0WW-CURR-SCRN-PTR ; 
    10 IV0WW-CURR-PAGE-PTR IV0WW-CURR-PAGE-PTR ; 
    10 IV0WW-SCTY-LEVEL-IND IV0WW-SCTY-LEVEL-IND ; 
    10 IV0WW-UPDT-DB-FLAG IV0WW-UPDT-DB-FLAG ; 
    10 IV0WW-UPDT-WS-FLAG IV0WW-UPDT-WS-FLAG ; 
    10 IV0WW-UPDT-MODE-FL IV0WW-UPDT-MODE-FL ; 
    10 IV0WW-DATA-ENTR-FL IV0WW-DATA-ENTR-FL ; 
    10 IV0WW-MSG-111-SHOWN-FL IV0WW-MSG-111-SHOWN-FL ; 
    10 IV0WW-MSG-119-SHOWN-FL IV0WW-MSG-119-SHOWN-FL ; 
    10 IV0WW-MSG-119-PREV-STY IV0WW-MSG-119-PREV-STY ; 
    10 IV0WW-SHOW-STYLE-COLOR IV0WW-SHOW-STYLE-COLOR ; 
    10 IV0WW-SHOW-STYLE-ONLY IV0WW-SHOW-STYLE-ONLY ; 
    10 IV0WW-MAP1-DATA-CHG-FL IV0WW-MAP1-DATA-CHG-FL ; 
    10 IV0WW-MAP5-DATA-CHG-FL IV0WW-MAP5-DATA-CHG-FL ; 
    10 IV0WW-MAP5-DATA-ENTR-FL IV0WW-MAP5-DATA-ENTR-FL ; 
    10 IV0WW-SKU-OVERRIDE-AREA IV0WW-SKU-OVERRIDE-AREA [300] ; 
      15 IV0WW-SKU-OVRD-FL IV0WW-SKU-OVRD-FL ; 
      15 IV0WW-SAVE-OVRD-CU-PROD-ID IV0WW-SAVE-OVRD-CU-PROD-ID ; 
    10 IV0WW-ALLOW-INQ-FL IV0WW-ALLOW-INQ-FL ; 
    10 IV0WW-DATA-ENTRY-UPDT-FL IV0WW-DATA-ENTRY-UPDT-FL ; 
    10 IV0WW-CR-MGR-UPDT-FL IV0WW-CR-MGR-UPDT-FL ; 
    10 IV0WW-NIKE-BANK-UPDT-FL IV0WW-NIKE-BANK-UPDT-FL ; 
    10 IV0WW-DE-CM-NB-UPDT-FL IV0WW-DE-CM-NB-UPDT-FL ; 
    10 IV0WW-SHOW-MSG-82-FLAG IV0WW-SHOW-MSG-82-FLAG ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 IV0WW-FMT1-DT IV0WW-FMT1-DT ; 
      15 IV0WW-FMT1-DT-CC IV0WW-FMT1-DT-CC ; 
      15 IV0WW-FMT1-DT-YY IV0WW-FMT1-DT-YY ; 
      15 IV0WW-FMT1-DT-MM IV0WW-FMT1-DT-MM ; 
      15 IV0WW-FMT1-DT-DD IV0WW-FMT1-DT-DD ; 
    10 IV0WW-FMT2-DT IV0WW-FMT2-DT ; 
      15 IV0WW-FMT2-DT-YY IV0WW-FMT2-DT-YY ; 
      15 IV0WW-FMT2-DT-MM IV0WW-FMT2-DT-MM ; 
      15 IV0WW-FMT2-DT-DD IV0WW-FMT2-DT-DD ; 
    10 IV0WW-FMT3-DT IV0WW-FMT3-DT ; 
      15 IV0WW-FMT3-DT-CCYY IV0WW-FMT3-DT-CCYY ; 
        20 IV0WW-FMT3-DT-CC IV0WW-FMT3-DT-CC ; 
        20 IV0WW-FMT3-DT-YY IV0WW-FMT3-DT-YY ; 
      15 IV0WW-FMT3-DT-MM IV0WW-FMT3-DT-MM ; 
    10 IV0WW-REQ-PROD-ID IV0WW-REQ-PROD-ID ; 
      15 SY-STY-NBR SY-STY-NBR ; 
      15 SY-COLR-CD-ID SY-COLR-CD-ID ; 
      15 XDM-DIM-CD XDM-DIM-CD ; 
end // end IV0W-WS-REC

//*** RECORD=VCORGL01 ****
// *******  INVOICE CORRECTION GENERAL LEDGER TABLE  **********
// *                                                          *
// * DB2 TABLE:          DINVC.VCORGL01                       *
// *                                                          *
// * COPYLIB MEMBER:     DCORGL01                             *
// *                                                          *
// * I/0 MOD:            VCORGL01                             *
// *                                                          *
// * KEY TO DB2 TABLE:   IV-IVC-PART-CHAR                     *
// *                     IV-IVC-ID                            *
// *                     IV-CRCT-SEQ-NBR                      *
// *                                                          *
// * DATE CREATED        12-29-94                             *
// *                                                          *
// * MAINTENANCE HISTORY LOG:                                 *
// *   DATE    PGMR    DESCRIPTION                            *
// * --------  ------  ---------------------------------------*
// * 12-29-94  GDECKE  INITIAL RECORD CREATION                *
// *                                                          *
// ************************************************************
// ************************
Record VCORGL01 type basicRecord
  5 VCORGL01-GROUP VCORGL01-GROUP ; 
    10 IV-IVC-ID IV-IVC-ID ; 
    10 IV-CRCT-SEQ-NBR IV-CRCT-SEQ-NBR ; 
    10 PF-GL-XREF PF-GL-XREF ; 
    10 IV-FACE-BANK-TYP IV-FACE-BANK-TYP ; 
    10 OP-LINE-ITEM-NBR OP-LINE-ITEM-NBR ; 
    10 IV-IVC-GL-SEQ IV-IVC-GL-SEQ ; 
    10 GL-GEN-LEDGER-CD GL-GEN-LEDGER-CD ; 
    10 IV-GL-NET-FL IV-GL-NET-FL ; 
    10 IV-GL-OVRD-FL IV-GL-OVRD-FL ; 
    10 IV-GL-PCT IV-GL-PCT ; 
    10 IV-GL-AMT IV-GL-AMT ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-SETUP-HHMM ZZ-SETUP-HHMM ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VCORGL01

//*** RECORD=VCORIT01 ****
// *******  INVOICE CORRECTION PRODUCT ITEM TABLE  ************
// *                                                          *
// * DB2 TABLE:          DINVC.VCORIT01                       *
// *                                                          *
// * COPYLIB MEMBER:     DCORIT01                             *
// *                                                          *
// * I/0 MOD:            VCORIT01                             *
// *                                                          *
// * KEY TO DB2 TABLE:   IV-IVC-PART-CHAR                     *
// *                     IV-IVC-ID                            *
// *                     IV-CRCT-SEQ-NBR                      *
// *                                                          *
// * DATE CREATED        12-29-94                             *
// *                                                          *
// * MAINTENANCE HISTORY LOG:                                 *
// *   DATE    PGMR    DESCRIPTION                            *
// * --------  ------  ---------------------------------------*
// * 12-29-94  GDECKE  INITIAL RECORD CREATION                *
// *                                                          *
// ************************************************************
// ************************
Record VCORIT01 type basicRecord
  5 VCORIT01-GROUP VCORIT01-GROUP ; 
    10 IV-IVC-ID IV-IVC-ID ; 
    10 IV-CRCT-SEQ-NBR IV-CRCT-SEQ-NBR ; 
    10 OP-LINE-ITEM-NBR OP-LINE-ITEM-NBR ; 
    10 SY-STY-NBR SY-STY-NBR ; 
    10 SY-COLR-CD-ID SY-COLR-CD-ID ; 
    10 CU-PROD-ID CU-PROD-ID ; 
    10 XUM-UOM-CD XUM-UOM-CD ; 
    10 OP-PRC-OVRD-FL OP-PRC-OVRD-FL ; 
    10 OP-PRC-VARY-FL OP-PRC-VARY-FL ; 
    10 IV-GRS-LN-UNIT-PRC IV-GRS-LN-UNIT-PRC ; 
    10 IV-NET-LN-UNIT-PRC IV-NET-LN-UNIT-PRC ; 
    10 IV-GRS-LN-MRCH-AMT IV-GRS-LN-MRCH-AMT ; 
    10 IV-NET-LN-MRCH-AMT IV-NET-LN-MRCH-AMT ; 
    10 IV-LN-SHIPPED-QTY IV-LN-SHIPPED-QTY ; 
    10 IV-NBR-SZ IV-NBR-SZ ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-SETUP-HHMM ZZ-SETUP-HHMM ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VCORIT01

//*** RECORD=VCORSZ01 ****
// **********  INVOICE CORRECTION SIZE TABLE  *****************
// *                                                          *
// * DB2 TABLE:          DINVC.VCORSZ01                       *
// *                                                          *
// * COPYLIB MEMBER:     DCORSZ01                             *
// *                                                          *
// * I/0 MOD:            VCORSZ01                             *
// *                                                          *
// * KEY TO DB2 TABLE:   IV-IVC-PART-CHAR                     *
// *                     IV-IVC-ID                            *
// *                     IV-CRCT-SEQ-NBR                      *
// *                                                          *
// * DATE CREATED        12-29-94                             *
// *                                                          *
// * MAINTENANCE HISTORY LOG:                                 *
// *   DATE    PGMR    DESCRIPTION                            *
// * --------  ------  ---------------------------------------*
// * 12-29-94  GDECKE  INITIAL RECORD CREATION                *
// *                                                          *
// ************************************************************
// ************************
Record VCORSZ01 type basicRecord
  5 VCORSZ01-GROUP VCORSZ01-GROUP ; 
    10 IV-IVC-ID IV-IVC-ID ; 
    10 IV-CRCT-SEQ-NBR IV-CRCT-SEQ-NBR ; 
    10 OP-LINE-ITEM-NBR OP-LINE-ITEM-NBR ; 
    10 SY-SZ-ID SY-SZ-ID ; 
    10 OP-PRC-OVRD-FL OP-PRC-OVRD-FL ; 
    10 IV-GRS-UNIT-PRC IV-GRS-UNIT-PRC ; 
    10 IV-NET-UNIT-PRC IV-NET-UNIT-PRC ; 
    10 SR-QTY-SHP SR-QTY-SHP ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-SETUP-HHMM ZZ-SETUP-HHMM ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VCORSZ01

//*** RECORD=VCORTX01 ****
// *****  INVOICE CORRECTION COMMENT TEXT TABLE  **************
// *                                                          *
// * DB2 TABLE:          DINVC.VCORTX01                       *
// *                                                          *
// * COPYLIB MEMBER:     DCORTX01                             *
// *                                                          *
// * I/0 MOD:            VCORTX01                             *
// *                                                          *
// * KEY TO DB2 TABLE:   IV-IVC-PART-CHAR                     *
// *                     IV-IVC-ID                            *
// *                     IV-CRCT-SEQ-NBR                      *
// *                                                          *
// * DATE CREATED        12-29-94                             *
// *                                                          *
// * MAINTENANCE HISTORY LOG:                                 *
// *   DATE    PGMR    DESCRIPTION                            *
// * --------  ------  ---------------------------------------*
// * 12-29-94  GDECKE  INITIAL RECORD CREATION                *
// *                                                          *
// ************************************************************
// ************************
Record VCORTX01 type basicRecord
  5 VCORTX01-GROUP VCORTX01-GROUP ; 
    10 IV-IVC-ID IV-IVC-ID ; 
    10 IV-CRCT-SEQ-NBR IV-CRCT-SEQ-NBR ; 
    10 IV-TXT-SEQ-NBR IV-TXT-SEQ-NBR ; 
    10 IV-TXT IV-TXT ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-SETUP-HHMM ZZ-SETUP-HHMM ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VCORTX01

//*** RECORD=VIVADR02 ****
// ****************** Invoice Address Table  ******************
// 
// DB2 Table:           DINVC.VIVADR01
// 
// DB2 VIEW:            VIVADR02
// 
// Copylib Member:      DIVADR02
// 
// I/O Mod:             VIVADR02
// 
// Key to DB2 Table:    IV0PARTN
//                      IV0IVCID
// 
// Date Created:        01/22/95
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 01-22-95  GDECKE     Initial record creation
// 07-12-95  GDECKE     add zz-family
// 
// ************************
Record VIVADR02 type basicRecord
  5 VIVADR02-GROUP VIVADR02-GROUP ; 
    10 IV5KEY IV5KEY ; 
      15 IV0PARTN IV0PARTN ; 
      15 IV0IVCID IV0IVCID ; 
    10 IV5SHPNM IV5SHPNM ; 
    10 IV5SHPA1 IV5SHPA1 ; 
    10 IV5SHPA2 IV5SHPA2 ; 
    10 IV5SHPA3 IV5SHPA3 ; 
    10 IV5SHPCT IV5SHPCT ; 
    10 IV5SHPST IV5SHPST ; 
    10 IV5SHPZP IV5SHPZP ; 
    10 IV5SHPCY IV5SHPCY ; 
    10 IV5BILNM IV5BILNM ; 
    10 IV5BILA1 IV5BILA1 ; 
    10 IV5BILA2 IV5BILA2 ; 
    10 IV5BILA3 IV5BILA3 ; 
    10 IV5BILCT IV5BILCT ; 
    10 IV5BILST IV5BILST ; 
    10 IV5BILZP IV5BILZP ; 
    10 IV5BILCY IV5BILCY ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VIVADR02

//*** RECORD=VIVGLX02 ****
// ********************  Invoice GL Table  ********************
// 
// DB2 Table:           DINVC.VIVGLX01
// 
// DB2 VIEW:            VIVGLX02
// 
// Copylib Member:      DIVGLX02
// 
// I/O Mod:             VIVGLX02
// 
// Key to DB2 Table:    IV0PARTN
//                      IV0IVCID
//                      PFJXREF      (old XGEXREF
//                      IV6FBTYP     (old XGEFBTYP
//                      OP2LNINB
//                      IV6GLSEQ
// 
// Date Created:        01/22/95
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 12-01-86   PAG       Initial record creation
//  1-19-90  bcourt     rename XGEXREF  to PFJXREF,
//                             XGEFBTYP to IV6FBTYP,
//                             GLCD     to GLACD.
// 01-22-95  GDECKE     COPY FROM IV6REC AND MODIFY FOR NEW
//                      VIEW
// 07-12-95  GDECKE     add zz-family
// ************************
Record VIVGLX02 type basicRecord
  5 VIVGLX02-GROUP VIVGLX02-GROUP ; 
    10 IV6KEY IV6KEY ; 
      15 IV0PARTN IV0PARTN ; 
      15 IV0IVCID IV0IVCID ; 
      15 PFJXREF PFJXREF ; 
      15 IV6FBTYP IV6FBTYP ; 
      15 OP2LNINB OP2LNINB ; 
      15 IV6GLSEQ IV6GLSEQ ; 
    10 GLACD GLACD ; 
    10 IV6GLNFL IV6GLNFL ; 
    10 IV6GLOFL IV6GLOFL ; 
    10 IV6GLPCT IV6GLPCT ; 
    10 IV6GLAMT IV6GLAMT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VIVGLX02

//*** RECORD=VIVHDX02 ****
// ***************  Invoice Header Index Table  ***************
// 
// DB2 Table:           DINVC.VIVHDX01
// 
// DB2 VIEW:            VIVHDX02
// 
// Copylib Member:      DIVHDX02
// 
// I/O Mod:             VIVHDX02
// 
// Key to DB2 Table:    IV0PARTN
//                      IV0IVCID
// 
// Date Created:        01/22/95
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 11-25-86   PAG       Initial record creation
// 05-15-89  fjelli    iv89014 - change xotcd to xobcd
// 11-01-93  lgross    added kucgrpid
// 10-21-93  GDECKE    ADD IV_LVL_PAY_IND
// 01-22-95  GDECKE    COPY FROM IV0REC TO CREATE NEW VIEW:
//                     VIVHDX02
// 07-12-95  GDECKE    ADD ZZ-FAMILY
// ************************
Record VIVHDX02 type basicRecord
  5 VIVHDX02-GROUP VIVHDX02-GROUP ; 
    10 IV0KEY IV0KEY ; 
      15 IV0PARTN IV0PARTN ; 
      15 IV0IVCID IV0IVCID ; 
    10 OP1PARTN OP1PARTN ; 
    10 OP1CUOID OP1CUOID ; 
    10 OP1NORID OP1NORID ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 KUCGRPID KUCGRPID ; 
    10 XGPCD XGPCD ; 
    10 SM1AGYID SM1AGYID ; 
    10 SM4REPID SM4REPID ; 
    10 IV0JCPB IV0JCPB ; 
    10 IV0POIDX IV0POIDX ; 
    10 XOBCD XOBCD ; 
    10 XSOCD XSOCD ; 
    10 IV0IVCDT IV0IVCDT ; 
    10 IV-LVL-PAY-IND IV-LVL-PAY-IND ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VIVHDX02

// FACE/BANK TYPE CODE
DataItem IV-FACE-BANK-TYP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GL AMOUNT
DataItem IV-GL-AMT decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// GL NET FLAG
DataItem IV-GL-NET-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GL OVERRIDE FLAG
DataItem IV-GL-OVRD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GL PERCENT
DataItem IV-GL-PCT decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// GROSS MERCHANDISE AMOUNT
DataItem IV-GRS-LN-MRCH-AMT decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// GROSS UNIT PRICE
DataItem IV-GRS-LN-UNIT-PRC decimal(7,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// GROSS UNIT PRICE
DataItem IV-GRS-UNIT-PRC decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// IVC GL SEQUENCE NUMBER
DataItem IV-IVC-GL-SEQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NUMBER OF SIZES
DataItem IV-NBR-SZ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NET UNIT PRICE
DataItem IV-NET-LN-UNIT-PRC decimal(7,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// invoice comment text
DataItem IV-TXT char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TEXT SEQUENCE NUMBER
DataItem IV-TXT-SEQ-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// menu security - allow inquiry
DataItem IV0WW-ALLOW-INQ-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// build array flag
DataItem IV0WW-BUILD-ARRAY-FL char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// build screen flag
DataItem IV0WW-BUILD-SCRN-FL char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// IVC CRCT GL SAVE AREA
DataItem IV0WW-CORGL-AREA char(20)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// IVC CRCT HEADER SAVE AREA
DataItem IV0WW-CORHD-AREA char(322)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// IVC CRCT ITEM SAVE AREA
DataItem IV0WW-CORIT-AREA char(16800)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// group item for product line
DataItem IV0WW-CORIT-OCCURANCE char(56)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IVC CRCT SEQUENCER SAVE AREA
DataItem IV0WW-CORSQ-AREA char(23)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// IVC CRCT SIZE SAVE AREA
DataItem IV0WW-CORSZ-AREA char(21)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// IVC CRCT TEXT SAVE AREA
DataItem IV0WW-CORTX-AREA char(62)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// menu security - cred mgr updt
DataItem IV0WW-CR-MGR-UPDT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IVC CORRECTION ORIGINAL DATA
DataItem IV0WW-CRCT-REC-GROUP char(23851)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// END OF FILE FOR CURSOR SELECT
DataItem IV0WW-CSR-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CURRENT ITEM POINTER IN TABLE
DataItem IV0WW-CURR-ITEM-PTR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// CURRENT PAGE POINTER ON TABLE
DataItem IV0WW-CURR-PAGE-PTR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CURRENT PROCESS NAME
DataItem IV0WW-CURR-PROC-NM char(24)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// current screen name
DataItem IV0WW-CURR-SCREEN-NAME char(8)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// CURRENT ITEM POINTER ON SCREEN
DataItem IV0WW-CURR-SCRN-PTR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// DATA WAS ENTERED ON MAP FLAG
DataItem IV0WW-DATA-ENTR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// menu security - data entr updt
DataItem IV0WW-DATA-ENTRY-UPDT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// menu security - combined updt
DataItem IV0WW-DE-CM-NB-UPDT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DEADLOCK COUNT
DataItem IV0WW-DEADLOCK-CT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// DEADLOCK FLAG
DataItem IV0WW-DEADLOCK-FL char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// display format for ivc-id
DataItem IV0WW-DISP-IVC-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// do edits flag
DataItem IV0WW-DO-EDITS-FLAG char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// end of application flag
DataItem IV0WW-END-OF-APPL-FL char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// end of screen flag
DataItem IV0WW-END-OF-SCRN-FL char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// end of file flag
DataItem IV0WW-EOF-FLAG char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// ERROR FLAG
DataItem IV0WW-ERROR-FLAG char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// REFORMAT DATE #1 CCYYMMDD
DataItem IV0WW-FMT1-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// REFORMAT DATE #1 CC
DataItem IV0WW-FMT1-DT-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// REFORMAT DATE #1 DD
DataItem IV0WW-FMT1-DT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// REFORMAT DATE #1 MM
DataItem IV0WW-FMT1-DT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// REFORMAT DATE #1 YY
DataItem IV0WW-FMT1-DT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// REFORMAT DATE #2 YYMMDD
DataItem IV0WW-FMT2-DT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// REFORMAT DATE #2 DD
DataItem IV0WW-FMT2-DT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// REFORMAT DATE #2 MM
DataItem IV0WW-FMT2-DT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// REFORMAT DATE #2 YY
DataItem IV0WW-FMT2-DT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// REFORMAT DATE #3 CCYYMM
DataItem IV0WW-FMT3-DT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// REFORMAT DATE #3 CC
DataItem IV0WW-FMT3-DT-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem IV0WW-FMT3-DT-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// REFORMAT DATE #3 MM
DataItem IV0WW-FMT3-DT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// REFORMAT DATE #3 YY
DataItem IV0WW-FMT3-DT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// INDEX #2
DataItem IV0WW-INDEX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// INDEX #3
DataItem IV0WW-INDEX3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// iomod function to perform
DataItem IV0WW-IOMOD-FUNCTION char(2)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// IVC CORRECTION SAVE ITM DATA
DataItem IV0WW-ITEM-REC-GROUP char(16800)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// INVOICE ARRAY
DataItem IV0WW-IVC-ARRAY smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// DISPLAY VERSION OF INVOICE ID
DataItem IV0WW-IVC-ID-CHAR num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FIRST PART OF INVOICE ID
DataItem IV0WW-IVC-ID-FILL char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// LAST DIGIT OF INVOICE ID
DataItem IV0WW-IVC-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// INVOICE LINE INDEX
DataItem IV0WW-LINE-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// DATA CHANGED ON MAP 1: Y/N
DataItem IV0WW-MAP1-DATA-CHG-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DATA CHANGED ON MAP 5: Y/N
DataItem IV0WW-MAP5-DATA-CHG-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// data entered on map 5: y/n
DataItem IV0WW-MAP5-DATA-ENTR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MAX VALUE OF CORSQ SEQ NBR
DataItem IV0WW-MAX-CRCT-SEQ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// MAX ITEM LINES IN WS TABLE
DataItem IV0WW-MAX-ITEM-LINES smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// MESSAGE 111 WARNING SHOWN: Y/N
DataItem IV0WW-MSG-111-SHOWN-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SAVE SELECT STYLE FOR MSG 119
DataItem IV0WW-MSG-119-PREV-STY char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MESSAGE 119 WARNING SHOWN: Y/N
DataItem IV0WW-MSG-119-SHOWN-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FIRST TIME THRU FOR NEW IVD-ID
DataItem IV0WW-NEW-IVC-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FIRST TIME THRU FOR NEW SEQ#
DataItem IV0WW-NEW-SEQ-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// menu security - nike bank updt
DataItem IV0WW-NIKE-BANK-UPDT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// OP LINE ITEM NBR
DataItem IV0WW-OP-LINE-ITEM-NBR-GL smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// OP-LINE-ITEM-NBR
DataItem IV0WW-OP-LINE-ITEM-NBR-IT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// OP-LINE-ITEM-NBR
DataItem IV0WW-OP-LINE-ITEM-NBR-SZ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PRICE OVERRIDE FLAG
DataItem IV0WW-OP-PRC-OVRD-FL char(3)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// IVC CORRECTION ORIGINAL DATA
DataItem IV0WW-ORIG-REC-GROUP char(23851)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// INDICATES IF ANY CRCT EXIST
DataItem IV0WW-PREV-CRCT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ivc id entered on prev convers
DataItem IV0WW-PREV-ENTR-IVC-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// IVC CORRECTION ORIGINAL DATA
DataItem IV0WW-PREV-REC-GROUP char(23851)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// REQUESTED SEQUENCE NBR FRM MAP
DataItem IV0WW-REQ-CRCT-SEQ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// requested nike product id
DataItem IV0WW-REQ-PROD-ID char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sku value that was overridden
DataItem IV0WW-SAVE-OVRD-CU-PROD-ID char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SCREEN INFO TABLE
DataItem IV0WW-SCREEN-INFO-TBL char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pointer to curr line on screen
DataItem IV0WW-SCREEN-LINE-PTR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// MAXIMUM NUMBER OF LINES ON MAP
DataItem IV0WW-SCREEN-MAX-LINES smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SCREEN NAME
DataItem IV0WW-SCREEN-NAME char(8)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// POINTER TO curr line on table
DataItem IV0WW-SCREEN-PTR-TO-TBL smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// pointer in screen name table
DataItem IV0WW-SCRN-PTR num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// show invoice required msg flag
DataItem IV0WW-SHOW-MSG-82-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SHOW SELECTED STYLE/COLOR: Y/N
DataItem IV0WW-SHOW-STYLE-COLOR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SHOW SELECTED STYLE ONLY: Y/N
DataItem IV0WW-SHOW-STYLE-ONLY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// save sku override flag & value
DataItem IV0WW-SKU-OVERRIDE-AREA char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sku edit error override flag
DataItem IV0WW-SKU-OVRD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update crct gl table flag
DataItem IV0WW-UPDT-CORGL-FLAG char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// update crct header flag
DataItem IV0WW-UPDT-CORHD-FLAG char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// update crct item flag
DataItem IV0WW-UPDT-CORIT-FLAG char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// update sequencer table flag
DataItem IV0WW-UPDT-CORSQ-FLAG char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// update crct size flag
DataItem IV0WW-UPDT-CORSZ-FLAG char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// update crct text flag
DataItem IV0WW-UPDT-CORTX-FLAG char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// do update on database flag
DataItem IV0WW-UPDT-DB-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// UPDATE VIVADR02 ADDRESS FLAG
DataItem IV0WW-UPDT-IVADR-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update vivglx02 gl table flag
DataItem IV0WW-UPDT-IVGLX-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update vivhdr05 header flag
DataItem IV0WW-UPDT-IVHDR-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update vivhdx02 hdx xref flag
DataItem IV0WW-UPDT-IVHDX-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update vivitm02 item flag
DataItem IV0WW-UPDT-IVITM-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update vivxiz02 size flag
DataItem IV0WW-UPDT-IVSIZ-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// APPL IS IN UPDATE MODE - Y/N
DataItem IV0WW-UPDT-MODE-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IVC CORRECTION ORIGINAL DATA
DataItem IV0WW-UPDT-REC-GROUP char(23851)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// do update on work storage rec
DataItem IV0WW-UPDT-WS-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IVC CORRECTION ORIGINAL DATA
DataItem IV0WW-WS-REC-GROUP char(5026)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// PRICE OVERRIDE FLAG
DataItem OP-PRC-OVRD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PRICE VARY FLAG
DataItem OP-PRC-VARY-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GL CROSS REFERENCE CODE
DataItem PF-GL-XREF char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SHIPPED QUANTITY
DataItem SR-QTY-SHP int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CORRECTION HEADER GROUP ITEM
DataItem VCORGL01-GROUP char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CORRECTION HEADER GROUP ITEM
DataItem VCORIT01-GROUP char(74)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CORRECTION HEADER GROUP ITEM
DataItem VCORSZ01-GROUP char(39)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CORRECTION HEADER GROUP ITEM
DataItem VCORTX01-GROUP char(82)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem VIVADR02-GROUP char(335)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem VIVGLX02-GROUP char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem VIVHDX02-GROUP char(53)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

