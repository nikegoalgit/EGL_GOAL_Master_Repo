package iv0j;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSIVS02;
import corpcom4.XSIVSEN;
import corpcom4.XSIVSFH;
import corpcom4.XSIVSFP;
import corpcom4.XSIVXF;
import corpcom4.XSPF1;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XSOTBL;
import iv.common.IV0REC;
import iv.common.IV7REC;
import iv.common.IVAREC;
import iv.common.IVCREC;
import iv.common.IVFREC;
import iv.common.IVGREC;
import iv.common.IVXREC;
import iv.common.IVYREC;
import ku.common.KUCREC;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
//*** PROGRAM=IV0J ****
//     Invoicing Inquiry     messages and instructions
// 
// overview: this application displays all special text associ-
//           ated with an invoice.
// 
// date created: 12/10/86
//       author: P. Gilhousen
// 
// maintenance history:
// 
//     date     by whom     overview of changes made
//   -------- ------------  -----------------------------------
//   12/10/86 P.Gilhousen   Program Creation.
//   05/26/92 lgross        allow pf20 to order comment screen
//                          and display sales office abbrevia-
//                          tion. Display department when
//                          displaying message
//                          Changes:  iv0jm001, iv0j005,
//                          iv0js20, iv0jsmi
//   07/08/92 lgross        Allow PF21 to invoice comment
//                          screen.- Changes: IV0JM001, IV0JS21
//                          IV0JS21
// *********************
Program IV0J type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "IV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  IV0REC IV0REC; // record
  IV7REC IV7REC; // record
  IVAREC IVAREC; // record
  IVCREC IVCREC; // record
  IVFREC IVFREC; // record
  IVGREC IVGREC; // record
  IVXREC IVXREC; // record
  IVYREC IVYREC; // record
  KUCREC KUCREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSOTBL {deleteAfterUse = yes}; // table
  use IV0JM.IV0JM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    IV0J001: IV0J001();
    goto IV0J005;
    IV0J005: IV0J005();
    ;
    ;
    if (IVYREC.IVYERR == "Y")
      IVYREC.IVYERR = "N";
    end
    ;
    ;
    goto IV0J005; /* branch to converse*/
    ;
    ;
  end // end main
end // end IV0J

// Program Initialization
Function IV0J001()
  ;
  ;
     /* **********************************************************/
     /* * this process performs the following functions:        **/
     /* *     - checks entry security                           **/
     /* *     - moves the working storage and invoicing work    **/
     /* *       record from the incoming common area            **/
     /* *     - initializes the map and working fields          **/
     /* *       -- reads invoice header index and company       **/
     /* *          record if came in fastpath                   **/
     /* *       -- reads comments and messages                  **/
     /* **********************************************************/
  ;
  ;
  ;
  XSENTRY(); /* system security check*/
  ;
  ;
  IV0JSPI(); /* initialize program*/
  ;
  ;
  IV0JM001.XXXRVNBR = "1"; /* set map revision number*/
  ;
  ;
  IV0JSDB(); /* read in database records*/
  ;
  ;
end // end IV0J001

// Converse Map
Function IV0J005()
  ;
  ;
     /* **********************************************************/
     /* * this process presents the comment screen for review,  **/
     /* * and passes control to the next screen as requested    **/
      /* * 05-20-92 lgross allow pf20 to order comment screen    **/
     /* **********************************************************/
  ;
  ;
   /* *************************************************************/
  converse IV0JM001 ;
   /* *************************************************************/
  ;
     /* pass immediately if user selected fastpath*/
     /* (on error return, don't set ezemno because don't have*/
      /* xxxmsg, so using ezemsg for camsg return)*/
  ;
  if (IV0JM001.CATOAP != " " /* fastpath selected*/
   || IV0JM001.CAITEM != " ") /* 11-12-87*/
    COMMAREA.CATOAP = IV0JM001.CATOAP; /* set up commarea*/
    COMMAREA.CAITEM = IV0JM001.CAITEM;
    XSIVXF(); /* 11-12-87 edit option/item*/
    if (converseVar.validationMsgNum == 0) /* 11-12-87*/
      XSEXIT(); /* attempt to pass*/
      IV0JM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* if get here, pass was*/
      set IV0JM001.CATOAP cursor, bold; /* unsuccessful - inform user*/
      set IV0JM001 alarm;
       /* MOVE 18 TO EZEMNO;*/
    else
      set IV0JM001.CAITEM cursor, bold; /* 11-12-87*/
    end
    IVYREC.IVYERR = "Y";
    exit stack; /* 11-12-87*/
  end
  ;
     /* reset screen from any prevoius errors*/
  ;
  set IV0JM001.CATOAP normal;
  set IV0JM001.CAITEM normal; /* 11-12-87*/
  ;
  ;
  if (converseVar.eventKey is enter)
    IV0JSEN();
  else
    if (converseVar.eventKey is pf1)
      XSPF1();
      converseLib.validationFailed(18);
      IVYREC.IVYERR = "Y";
    else
      if (converseVar.eventKey is pf3)
        IV0JS03();
      else
        if (converseVar.eventKey is pf4)
          IV0JS04();
        else
          if (converseVar.eventKey is pf13)
            IV0JS13();
          else
            if (converseVar.eventKey is pf14)
              IV0JS14();
            else
              if (converseVar.eventKey is pf16)
                IV0JS16();
              else
                if (converseVar.eventKey is pf20) /* order comment screen*/
                  IV0JS20();
                else
                  if (converseVar.eventKey is pf21) /* order comment screen*/
                    IV0JS21();
                  else
                    IVYREC.IVYERR = "Y";
                    converseLib.validationFailed(3);
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  ;
  ;
end // end IV0J005

// PF3 Pressed Actions
Function IV0JS03()
  ;
  ;
  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0A";
  XSEXIT(); /* transfer to main menu*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/
  ;
  ;
end // end IV0JS03

// PF4 Pressed Actions
Function IV0JS04()
  ;
  ;
  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "MN0M";
  XSEXIT(); /* transfer to system main menu*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/
  ;
  ;
end // end IV0JS04

// PF13 Pressed Actions
Function IV0JS13()
  ;
  ;
  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0G";
  XSEXIT(); /* transfer to Header 1*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/
  ;
  ;
end // end IV0JS13

// PF14 Pressed Actions
Function IV0JS14()
  ;
  ;
  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0H";
  XSEXIT(); /* transfer to Addresses*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/
  ;
  ;
end // end IV0JS14

// PF16 Pressed Actions
Function IV0JS16()
  ;
  ;
  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0I";
  XSEXIT(); /* transfer to Addresses*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/
  ;
  ;
end // end IV0JS16

// PF20 Pressed Actions
Function IV0JS20()
  ;
   /* ***  Transfer to order comment screen*/
  ;
  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0C"; /* order comment screen*/
  XSEXIT(); /* transfer to Addresses*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/
  ;
  ;
end // end IV0JS20

// PF21 Pressed Actions
Function IV0JS21()
  ;
   /* ***  Transfer to invoice comment screen*/
  ;
  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0U"; /* invoice comment screen*/
  XSEXIT(); /* transfer to Addresses*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/
  ;
  ;
end // end IV0JS21

// Data Base Reads
Function IV0JSDB()
  ;
     /* blank areas*/
  ;
  set IVAREC empty;
  set SQLCA empty;
  ;
    /* set up key for read*/
  ;
  IVAREC.IV0IVCID = IVXREC.IV0IVCID;
  IVYREC.IVYIVCN = IVXREC.IV0IVCID;
  IVAREC.IV0PARTN = IVYREC.IV0PARTN;
  ;
   /* read invoice header for text flag*/
  ;
  call "IO1040" ("S ", SQLCA, IVAREC) {isNoRefresh = yes};
  ;
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1PGMNM = "IV0J    ";
    TA1REC.TA1MAP = "IV0JM001";
    TA1REC.TA1DBASE = "DINVC   ";
    TA1REC.TA1TBLVU = "VIVHDR01";
    TA1REC.TA1TBLKE = IVAREC.IV0KEY;
    TA1REC.TA1LOCAT[3] = "IV0JSDB"; /* 10-30-87*/
    TA1REC.TA1LOCAT[4] = "IO1040";
    XSIVS02();
  end
  ;
     /* initialize ivxrec fields while have the record*/
  ;
  IVXREC.OP1CUPO = IVAREC.OP1CUPO;
  IVXREC.SP1ID = IVAREC.SP1ID;
  IVXREC.XOCCD = IVAREC.XOCCD;
  ;
  ;
  if (IVAREC.IVATXTI == "Y")
    IV0JSSS(); /* select comment set*/
    IV0JSSN(); /* display comment set*/
  end
  ;
  ;
  IV0JSMS(); /* select messages*/
  IV0JSMN(); /* find appropriate message*/
  ;
  ;
end // end IV0JSDB

// Enter Key Pressed Actions
Function IV0JSEN()
  ;
     /* ***   This statement group passes control to the ****/
     /* *** next screen as determined by the option from ****/
     /* *** the main menu screen.                        ****/
  ;
     /* pass ivxrec to commarea for use by next app*/
  ;
  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  ;
     /* pass to next screen*/
  ;
  if (IVXREC.IVXOPTN == 2
   || IVXREC.IVXOPTN == 6)
    COMMAREA.CATOAP = "IV0G";
    XSEXIT(); /* transfer to Header 1*/
    converseLib.validationFailed(15); /* transfer failed*/
    IVYREC.IVYERR = "Y"; /* mark as error*/
  else
    if (IVXREC.IVXOPTN == 1
     || IVXREC.IVXOPTN == 3)
      COMMAREA.CATOAP = "IV0N";
      XSEXIT(); /* transfer to Product Summary*/
      converseLib.validationFailed(15); /* transfer failed*/
      IVYREC.IVYERR = "Y"; /* mark as error*/
    else
      if (IVXREC.IVXOPTN == 7)
        COMMAREA.CATOAP = "IV0H";
        XSEXIT(); /* transfer to commissions & payment*/
        converseLib.validationFailed(15); /* transfer failed*/
        IVYREC.IVYERR = "Y"; /* mark as error*/
      else
        if (IVXREC.IVXOPTN == 8)
          COMMAREA.CATOAP = "IV0I";
          XSEXIT(); /* transfer to address*/
          converseLib.validationFailed(15); /* transfer failed*/
          IVYREC.IVYERR = "Y"; /* mark as error*/
        else
          if (IVXREC.IVXOPTN == 9
           || IVXREC.IVXOPTN == 4)
            if (IVXREC.IVXTYPFL == "I")
              COMMAREA.CATOAP = "IV0A";
              XSEXIT(); /* transfer to main menu*/
              converseLib.validationFailed(15); /* transfer failed*/
              IVYREC.IVYERR = "Y"; /* mark as error*/
            else
              XSIVSEN(); /* routine to check for more sels, and pass*/
              if (converseVar.validationMsgNum != 0) /* if error return*/
                IVYREC.IVYERR = "Y"; /* mark as error*/
              end
            end
          end
        end
      end
    end
  end
  ;
  ;
end // end IV0JSEN

// Map Initialization
Function IV0JSMI()
  ;
   /* 05-26-92 lgross display sales code abbreviation as well as code*/
  ;
  converseLib.clearScreen();
  set IV0JM001 initial; /* initializes map*/
  ;
  ;
  IV0JM001.XXXCURDT = VGVar.currentShortGregorianDate;
  IV0JM001.IV0IVCID = IVXREC.IV0IVCID; /* move in invoice number*/
  IV0JM001.KUCCOID = IVXREC.KUCCOID; /* move in company*/
  IV0JM001.KUMSTRID = IVXREC.KUMSTRID; /* move in store*/
  IV0JM001.XNXCD = IVXREC.XNXCD; /* move in dept*/
  IV0JM001.KUCCONM = IVXREC.KUCCONM; /* move in customer name*/
  IV0JM001.IV0IVCDT = IVXREC.IV0IVCDT;
  IV0JM001.OP1CUPO = IVXREC.OP1CUPO; /* move in po number*/
  IV0JM001.XSOCD = IVXREC.XSOCD; /* move in sales office code*/
  if (IVXREC.XSOCD in XSOTBL.XSOCD) /* if in sales office table*/
    IV0JM001.XSOABRV = XSOTBL.XSOABRV[sysVar.arrayIndex]; /* move abbreviation*/
  end
  ;
  ;
end // end IV0JSMI

// Select Next Message
Function IV0JSMN()
     /* ****   This statement group will process selected  *****/
     /* ****   message records one at a time to check flags*****/
     /* ****   for correct message                         *****/
  ;
     /* blank areas*/
  ;
  set SQLCA empty;
  set IVCREC empty;
  ;
    /* set up key for ivcrec*/
  ;
  IVCREC.IVCMEFDT = IVXREC.IV0IVCDT;
  IVCREC.IVCMXPDT = IVXREC.IV0IVCDT;
  ;
    /* loop thru messages till find a hit*/
    /* records are returned in descending print flag order*/
    /* use include message (I) if exists, then exclude message*/
    /* (E), then generic message ( ).*/
  ;
  while (SQLCA.VAGen_SQLCODE == 0)
    call "IO1120" ("SN", SQLCA, IVCREC) {isNoRefresh = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      if (IVCREC.IVCMPRFL == "I") /* if an include message*/
        if (IVXREC.XAUCD == IVCREC.XAUCD[1] /* and account class match*/
         || IVXREC.XAUCD == IVCREC.XAUCD[2] 
         || IVXREC.XAUCD == IVCREC.XAUCD[3])
          IV0JSSM(); /* select this message*/
          SQLCA.VAGen_SQLCODE = 1; /* set sqlcode to end loop*/
        end
      else
        if (IVCREC.IVCMPRFL == "E") /* if an exclude message*/
          if (IVXREC.XAUCD != IVCREC.XAUCD[1] /* but no acct class match*/
           && IVXREC.XAUCD != IVCREC.XAUCD[2] 
           && IVXREC.XAUCD != IVCREC.XAUCD[3])
            IV0JSSM(); /* select this message*/
            SQLCA.VAGen_SQLCODE = 1; /* set sqlcode to end loop*/
          end
        else
          if (IVCREC.IVCMPRFL == "Y") /* if a generic message*/
            IV0JSSM(); /* select this message*/
            SQLCA.VAGen_SQLCODE = 1; /* set sqlcode to end loop*/
          end
        end
      end
    else
      if (SQLCA.VAGen_SQLCODE > 100)
        TA1REC.TA1PGMNM = "IV0J    ";
        TA1REC.TA1MAP = "IV0JM001";
        TA1REC.TA1DBASE = "DINVC   ";
        TA1REC.TA1TBLVU = "VMESAG01";
        TA1REC.TA1TBLKE = IVCREC.IVCKEY;
        TA1REC.TA1LOCAT[3] = "IV0JSMN"; /* 10-30-87*/
        TA1REC.TA1LOCAT[4] = "IO1120";
        XSIVS02();
      end
    end
  end
  ;
  ;
  call "IO1120" ("CS", SQLCA, IVCREC) {isNoRefresh = yes};
  ;
  ;
end // end IV0JSMN

// Select Set of Messages
Function IV0JSMS()
  ;
  ;
  set IVCREC empty;
  set SQLCA empty;
  IVCREC.IVCMEFDT = IVXREC.IV0IVCDT;
  IVCREC.IVCMXPDT = IVXREC.IV0IVCDT;
  IVCREC.IVCMPRFL = "*";
  ;
  call "IO1120" ("SS", SQLCA, IVCREC) {isNoRefresh = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1PGMNM = "IV0J    ";
    TA1REC.TA1MAP = "IV0JM001";
    TA1REC.TA1DBASE = "DINVC   ";
    TA1REC.TA1TBLVU = "VMESAG01";
    TA1REC.TA1TBLKE = IVCREC.IVCKEY;
    TA1REC.TA1LOCAT[3] = "IV0JSMS"; /* 10-30-87*/
    TA1REC.TA1LOCAT[4] = "IO1120";
    XSIVS02();
  end
  ;
  ;
  ;
  ;
end // end IV0JSMS

// Program Initialization
Function IV0JSPI()
  ;
     /* ***   This statement group handles initial clearing ****/
     /* *** of working fields for IV0J, and fetch of header ****/
     /* *** index and company records if came in fastpath   ****/
  ;
     /* initialize work record*/
  ;
  set IVYREC empty;
  ;
     /* determine if came in fastpath*/
  ;
  if (COMMAREA.CAITEM != " " /* fastpath entry*/
   || COMMAREA.CAFRMSYS != COMMAREA.CACURSYS) /* from other sys,10-28-87*/
    IVYREC.IVYMTXT = "IV0JSPI"; /* in case of error 1-26-88*/
    XSIVSFP(); /* find header index and company*/
    IVYREC.IVYMTXT = " "; /* 1-26-88*/
    if (IVXREC.IVXMSSNB != 0) /* if had an error on invoice lookup*/
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0A";
      XSEXIT(); /* pass to menu screen*/
    end
    COMMAREA.CAITEM = " "; /* reset caitem to space*/
  else /* not fastpath*/
    IVXREC.IVXGROUP = COMMAREA.CAUSERA; /* setup up program storage*/
    if (IVXREC.IVXINIT != "IV0") /* if not inited*/
      set IVXREC empty;
      IVXREC.IVXMSSNB = 18; /* must have come fastpath w/o item*/
      IVXREC.IVXINIT = "IV0"; /* set so iv0a will look for message*/
      COMMAREA.CAUSERA = IVXREC.IVXGROUP; /* return to iv0a*/
      COMMAREA.CATOAP = "IV0A";
      XSEXIT();
    end
  end
  ;
     /* if came here direct from menu, will still need to*/
     /* retrieve header index and company.  Use kuccoid as check*/
  ;
  if (IVXREC.KUCCOID <= 0)
    IVYREC.IVYMTXT = "IV0JSPI"; /* in case of error 1-26-88*/
    XSIVSFH(); /* routine to do lookups*/
    IVYREC.IVYMTXT = " "; /* 1-26-88*/
     /* below added 1-22-88*/
    if (IVXREC.IVXMSSNB != 0) /* if error on invoice lookup*/
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0A";
      XSEXIT(); /* pass to menu screen*/
    end
     /* above added 1-22-88*/
  end
  ;
  ;
  ;
  IV0JSMI(); /* initialize map*/
  ;
  ;
end // end IV0JSPI

// Setup Comment Fields
Function IV0JSSC()
  ;
     /* ***   This statement group puts the text records on   ****/
     /* *** the screen.  Note that text type D records appear ****/
     /* *** in the Special Instructions section.  They will   ****/
     /* *** be listed before the type I records, becasue the  ****/
     /* *** select set retrieves the records in sorted order. ****/
     /* ***  lgross  05-26-92  move department code to screen ****/
  ;
  if (IV7REC.IV7TXTYP == "L")
    IV0JM001.IV0JLTX[IVYSUB] = IV7REC.IV7TXT;
    IVYREC.IVYSUB = IVYREC.IVYSUB + 1;
  else
    if (IV7REC.IV7TXTYP == "D"
     || IV7REC.IV7TXTYP == "I")
      IV0JM001.IV-TXT[IVYSUB1] = IV7REC.IV7TXT;
      IV0JM001.XND-NIKE-DEPT-ID[IVYSUB1] = IV7REC.XNDCD;
                 /* move department code to screen*/
      if (IV7REC.OP4TXTOF == "Y") /* mark entry if override*/
        IV0JM001.OP4TXTOF[IVYSUB1] = "*"; /* flag is turned on*/
      else
        IV0JM001.OP4TXTOF[IVYSUB1] = " ";
      end
      IVYREC.IVYSUB1 = IVYREC.IVYSUB1 + 1;
    end
  end
  ;
   /* clear iv7rec before next read*/
  ;
  IV7REC.IV7TXT = " ";
  IV7REC.IV7TXTSQ = 0;
  ;
  ;
end // end IV0JSSC

// Setup Message Fields
Function IV0JSSM()
  ;
  ;
  ;
  IV0JM001.IVCMSG[1] = IVCREC.IVCMSG[1];
  IV0JM001.IVCMSG[2] = IVCREC.IVCMSG[2];
  IV0JM001.IVCMSG[3] = IVCREC.IVCMSG[3];
  ;
   /* clear ivcrec*/
  ;
  set IVCREC empty;
  ;
  ;
end // end IV0JSSM

// Select Next Comment
Function IV0JSSN()
  ;
   /* ***     this statement group reads the selected comments,*/
   /* ***     and selects those to appear on the screen*/
  ;
  set IV7REC empty;
  IV7REC.IV7KEY = IVAREC.IV0KEY;
  ;
  set SQLCA empty;
  ;
  IVYREC.IVYSUB = 1; /* special label index*/
  IVYREC.IVYSUB1 = 1; /* special instructions index*/
  while (SQLCA.VAGen_SQLCODE == 0)
    call "IO1070" ("SN", SQLCA, IV7REC) {isNoRefresh = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      IV0JSSC(); /* setup special labels on map*/
    else
      if (SQLCA.VAGen_SQLCODE > 100)
        TA1REC.TA1PGMNM = "IV0J    ";
        TA1REC.TA1MAP = "IV0JM001";
        TA1REC.TA1DBASE = "DINVC   ";
        TA1REC.TA1TBLVU = "VIVTXT01";
        TA1REC.TA1TBLKE = IV7REC.IV7KEY;
        TA1REC.TA1LOCAT[3] = "IV0JSSN"; /* 10-30-87*/
        TA1REC.TA1LOCAT[4] = "IO1070";
        XSIVS02();
      end
    end
  end
  ;
  ;
  call "IO1070" ("CS", SQLCA, IV7REC) {isNoRefresh = yes};
  ;
  ;
end // end IV0JSSN

// Select Set of Comments
Function IV0JSSS()
  ;
  ;
  set IV7REC empty;
  set SQLCA empty;
  IV7REC.IV7KEY = IVAREC.IV0KEY;
  IV7REC.IV7TXTYP = "*";
  ;
  call "IO1070" ("SS", SQLCA, IV7REC) {isNoRefresh = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1PGMNM = "IV0J    ";
    TA1REC.TA1MAP = "IV0JM001";
    TA1REC.TA1DBASE = "DINVC   ";
    TA1REC.TA1TBLVU = "VIVTXT01";
    TA1REC.TA1TBLKE = IV7REC.IV7KEY;
    TA1REC.TA1LOCAT[3] = "IV0JSSS"; /* 10-30-87*/
    TA1REC.TA1LOCAT[4] = "IO1070";
    XSIVS02();
  end
  ;
  ;
  ;
  ;
end // end IV0JSSS

