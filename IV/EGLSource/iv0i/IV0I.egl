package iv0i;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSIVS02;
import corpcom4.XSIVSEN;
import corpcom4.XSIVSFH;
import corpcom4.XSIVSFP;
import corpcom4.XSIVXF;
import corpcom4.XSPF1;
import corpcom5.COMMAREA;
import corpcom5.CU-STOR-SELF-ID;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XSOTBL;
import iv.common.*;
import ku.common.KUCREC;
import ku.common.KUJREC;
import ku.common.KULREC;
import ku.common.KUMREC;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VCORHD01;
//*** PROGRAM=IV0I ****
//     Invoice Inquiry     Addresses
// 
// overview: this application displays the bill-to, ship-to,
//           and store address associated with an invoice.
// 
// Date created: 12/22/86
//       Author: P. Gilhousen
// 
// Maintenance history:
// 
//     Date     By whom     Overview of changes made
//   -------- ------------  -----------------------------------
//   12/22/86 P.Gilhousen   Program Creation.
//   05/26/92 lgross        added sales office abbreviation
//                          and pf20 to order comment screen
//                          changes: iv0im001, iv0i005, iv0ismi
//                          iv0is20
//   07/09/92 lgross        added PF21 to invoice comment
//                          screen - Changes: iv0im001, iv0is21
//                          iv0i005
//  11/09/93 lgross         changed kulrec.xxxaddr1,2,3 to
//                          xxx-addr1,2,3 for database changes
//                          changes: iv0issm
//  03/20/95 GDECKE         GET STORE SELF ID FROM CORRECTIONS
//                          HEADER TABLE IF ONE EXISTS.
//  05/22/95 GDECKE         FIX STORE SELF ID LOGIC - IV0ISSM.
// ************************************************************
// *********************
Program IV0I type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "IV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  IV0I-IOMOD-REC IV0I-IOMOD-REC; // record
  IV0IW01 IV0IW01; // record
  IV0REC IV0REC; // record
  IV5REC IV5REC; // record
  IVAREC IVAREC; // record
  IVFREC IVFREC; // record
  IVGREC IVGREC; // record
  IVXREC IVXREC; // record
  IVYREC IVYREC; // record
  KUCREC KUCREC; // record
  KUJREC KUJREC; // record
  KULREC KULREC; // record
  KUMREC KUMREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VCORHD01 VCORHD01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSOTBL {deleteAfterUse = yes}; // table
  use IV0IM.IV0IM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    IV0I001: IV0I001();
    goto IV0I005;
    IV0I005: IV0I005();


    if (IVYREC.IVYERR == "Y")
      IVYREC.IVYERR = "N";
    end


    goto IV0I005; /* branch to converse*/


  end // end main
end // end IV0I

// Program Initialization
Function IV0I001()


     /* **********************************************************/
     /* * this process performs the following functions:        **/
     /* *     - checks entry security                           **/
     /* *     - moves the working storage and invoicing work    **/
     /* *       record from the incoming common area            **/
     /* *     - initializes the map and working fields          **/
     /* *       -- reads invoice header index and               **/
     /* *          company record if came in fastpath           **/
     /* *       -- reads invoice header and address record      **/
     /* *       -- reads store address records                  **/
     /* *       -- reads dept record                            **/
     /* **********************************************************/



  XSENTRY(); /* system security check*/


  IV0ISPI(); /* initialize program*/


  IV0IM001.XXXRVNBR = "1"; /* set map revision number*/


  IV0ISDB(); /* read in database records*/

   /* ***** The following code added by Grant Gilray 6/1/87 ******/
  IV0IM001.OP1CUPO = IVXREC.OP1CUPO; /* move PO number to map*/
   /* ************************************************************/


end // end IV0I001

// Converse Map
Function IV0I005()


     /* **********************************************************/
     /* * this process presents the address screen for review,  **/
     /* * and passes control to the next screen as requested    **/
     /* * 05-12-92 lgross allow PF20 to order comment screen    **/
     /* **********************************************************/


   /* *************************************************************/
  converse IV0IM001 ;
   /* *************************************************************/

     /* pass immediately if user selected fastpath*/

  if (IV0IM001.CATOAP != " " /* if fastpath entered*/
   || IV0IM001.CAITEM != " ") /* 11-12-87*/
    COMMAREA.CATOAP = IV0IM001.CATOAP; /* set up commarea*/
    COMMAREA.CAITEM = IV0IM001.CAITEM;
    XSIVXF(); /* 11-12-87 edit option/item*/
    if (converseVar.validationMsgNum == 0) /* 11-12-87*/
      XSEXIT(); /* attempt to pass*/
      IV0IM001.XXXMSG = COMMAREA.CAMSG; /* if get here, pass was*/
      set IV0IM001.CATOAP cursor, bold; /* unsuccessful - inform user*/
      set IV0IM001 alarm;
      converseLib.validationFailed(18);
    else
      set IV0IM001.CAITEM cursor, bold; /* 11-12-87*/
    end /* 11-12-87*/
    IVYREC.IVYERR = "Y";
    exit stack;
  end

     /* reset screen from any previous errors*/

  set IV0IM001.CATOAP normal;
  set IV0IM001.CAITEM normal; /* 11-12-87*/


  if (converseVar.eventKey is enter)
    IV0ISEN();
  else
    if (converseVar.eventKey is pf1)
      XSPF1();
      converseLib.validationFailed(18);
      IVYREC.IVYERR = "Y";
    else
      if (converseVar.eventKey is pf3)
        IV0IS03();
      else
        if (converseVar.eventKey is pf4)
          IV0IS04();
        else
          if (converseVar.eventKey is pf13)
            IV0IS13();
          else
            if (converseVar.eventKey is pf14)
              IV0IS14();
            else
              if (converseVar.eventKey is pf15)
                IV0IS15();
              else
                if (converseVar.eventKey is pf20) /* order comment screen*/
                  IV0IS20();
                else
                  if (converseVar.eventKey is pf21) /* invoice comment screen*/
                    IV0IS21();
                  else
                    if (converseVar.eventKey is pf24) /* carton tracking screen*/
                      IV0IS24();
                    else
                      IVYREC.IVYERR = "Y";
                      converseLib.validationFailed(3);
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end


end // end IV0I005

// CALL IOMOD - IVC CRCT HEADER
Function IV0IS-CALL-CORHD()
   /* CALL IO MODULE VCORHD01 TO ACCESS VIEW DINVC.VCORHD01*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 02-20-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IVXREC.IVXLOC = "IV0IS-CALL-CORHD";

  call "VCORHD01" (IV0I-IOMOD-REC, SQLCA, VCORHD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    IV0IW01.IV0IW-DEADLOCK-FL = "N";
    IV0IW01.IV0IW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == 100)
    IV0IW01.IV0IW-DEADLOCK-FL = "N";
    IV0IW01.IV0IW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0IW01.IV0IW-DEADLOCK-CT = IV0IW01.IV0IW-DEADLOCK-CT + 1;
    if (IV0IW01.IV0IW-DEADLOCK-CT > 2)
      converseLib.validationFailed(85); /* database busy*/
      IV0IW01.IV0IW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IVYREC.IVYERR = "Y"; /* error flag*/
    end
    return;
  end

  TA1REC.TA1PGMNM = "IV0I    ";
  TA1REC.TA1MAP = "IV0IM001";
  TA1REC.TA1LOCAT[3] = "IV0IS-CALL-CORHD";
  TA1REC.TA1LOCAT[4] = "VCORHD01";
  TA1REC.TA1DBASE = "DINVC"; /* database*/
  TA1REC.TA1TBLVU = "VCORHD01"; /* table view*/
  IV0IW01.IV0IW-DISP-IVC-ID = VCORHD01.IV-IVC-ID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0IW01.IV0IW-DISP-IVC-ID; /* table key*/

  XSIVS02(); /* error diagnosis routine*/

end // end IV0IS-CALL-CORHD

// GET HEADER FOR CRCT SEQ#
Function IV0IS-GET-REQ-HDR()
   /* get THE LAST CORRECTION HEADER*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-31-95  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  IVXREC.IVXLOC = "IV0IS-GET-REQ-HDR ";

   /* OPEN A CURSOR ON VCORHD01 AND FETCH ROWS UNTIL NO MORE FOUND*/
   /* MOVE THE DATA TO iv0iw01.*/

  set SQLCA empty;
  set VCORHD01 empty;
  IV0IW01.CU-STOR-SELF-ID = "XXXXXXXX";

    /* OPEN VCORHD01 CURSOR*/

  VCORHD01.IV-IVC-ID = IVXREC.IV0IVCID;

  IV0IW01.IV0IW-DEADLOCK-CT = 0;
  IV0IW01.IV0IW-DEADLOCK-FL = "Y";
  IV0I-IOMOD-REC.IV0IW-IOMOD-FUNCTION = "S1";

  while (IV0IW01.IV0IW-DEADLOCK-FL == "Y")
    IV0IS-CALL-CORHD();
  end

  if (IV0IW01.IV0IW-DEADLOCK-CT > 0)
    return;
  end

  if (SQLCA.VAGen_SQLCODE != 0)
    return;
  end

    /* FETCH LINES FROM CURSOR*/

  IV0IW01.IV0IW-CSR-EOF-FL = "N";

  while (IV0IW01.IV0IW-CSR-EOF-FL == "N")
    /* REPEAT UNTIL APPROPRIATE HEADER ROW IS FOUND*/
    IV0IW01.IV0IW-DEADLOCK-CT = 0;
    IV0IW01.IV0IW-DEADLOCK-FL = "Y";
    IV0I-IOMOD-REC.IV0IW-IOMOD-FUNCTION = "N1";
    while (IV0IW01.IV0IW-DEADLOCK-FL == "Y")
      IV0IS-CALL-CORHD();
    end

    if (IV0IW01.IV0IW-DEADLOCK-CT > 0)
      return;
    end

    if (SQLCA.VAGen_SQLCODE == +0)
      IV0IW01.CU-STOR-SELF-ID = VCORHD01.CU-STOR-SELF-ID;
    else
      if (SQLCA.VAGen_SQLCODE == +100)
        IV0IW-CSR-EOF-FL = "Y";
      else
        return;
      end
    end
  end


    /* CLOSE VCORHD01 CURSOR*/

  IV0IW01.IV0IW-DEADLOCK-CT = 0;
  IV0IW01.IV0IW-DEADLOCK-FL = "Y";
  IV0I-IOMOD-REC.IV0IW-IOMOD-FUNCTION = "C1";

  while (IV0IW01.IV0IW-DEADLOCK-FL == "Y")
    IV0IS-CALL-CORHD();
  end

  if (IV0IW01.IV0IW-DEADLOCK-CT > 0)
    return;
  end

end // end IV0IS-GET-REQ-HDR

// PF3 Pressed Actions
Function IV0IS03()


  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0A";
  XSEXIT(); /* transfer to main menu*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/


end // end IV0IS03

// PF4 Pressed Actions
Function IV0IS04()


  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "MN0M";
  XSEXIT(); /* transfer to system menu*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/


end // end IV0IS04

// PF13 Pressed Actions
Function IV0IS13()


  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0G";
  XSEXIT(); /* transfer to Header 1*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/


end // end IV0IS13

// PF14 Pressed Actions
Function IV0IS14()


  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0H";
  XSEXIT(); /* transfer to Comm & Pymt terms*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/


end // end IV0IS14

// PF16 Pressed Actions
Function IV0IS15()


  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0J";
  XSEXIT(); /* transfer to Msgs & Instr*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/


end // end IV0IS15

// PF20 Pressed Actions
Function IV0IS20()
   /* ****************************************************************/
   /* pass to order comment screen application*/
   /* ****************************************************************/

  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0C";
  XSEXIT(); /* transfer to order comments*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/


end // end IV0IS20

// PF21 Pressed Actions
Function IV0IS21()
   /* ****************************************************************/
   /* pass to invoice comment screen application*/
   /* ****************************************************************/

  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0U";
  XSEXIT(); /* transfer to invoice comments*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/


end // end IV0IS21

// PF24 to carton tracking
Function IV0IS24()
   /* ****************************************************************/
   /* pass to carton tracking screen application*/
   /* ****************************************************************/

  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  COMMAREA.CATOAP = "IV0V";
  XSEXIT(); /* transfer to carton tracking*/
  converseLib.validationFailed(15); /* transfer failed*/
  IVYREC.IVYERR = "Y"; /* mark as error*/


end // end IV0IS24

// Display Invoice Addresses
Function IV0ISAM()

     /* move in bill to and ship to addresses*/


     /* move in fields from ivarec*/

  IV0IM001.KUAADRID = IVAREC.KUCBLAID;
  IV0IM001.KUMSHAID = IVAREC.KUMSHAID;

     /* move in fields from iv5rec*/

  IV0IM001.IV5BILNM = IV5REC.IV5BILNM;
  IV0IM001.IV5BILA1 = IV5REC.IV5BILA1;
  IV0IM001.IV5BILA2 = IV5REC.IV5BILA2;
  IV0IM001.IV5BILA3 = IV5REC.IV5BILA3;
  IV0IM001.IV5BILCT = IV5REC.IV5BILCT;
  IV0IM001.IV5BILST = IV5REC.IV5BILST;
  IV0IM001.IV5BILZP = IV5REC.IV5BILZP;
  if (IV5REC.IV5BILCY == "USA ")
    IV0IM001.IV5BILCY = " ";
  else
    IV0IM001.IV5BILCY = IV5REC.IV5BILCY;
  end

  IV0IM001.IV5SHPNM = IV5REC.IV5SHPNM;
  IV0IM001.IV5SHPA1 = IV5REC.IV5SHPA1;
  IV0IM001.IV5SHPA2 = IV5REC.IV5SHPA2;
  IV0IM001.IV5SHPA3 = IV5REC.IV5SHPA3;
  IV0IM001.IV5SHPCT = IV5REC.IV5SHPCT;
  IV0IM001.IV5SHPST = IV5REC.IV5SHPST;
  IV0IM001.IV5SHPZP = IV5REC.IV5SHPZP;
  if (IV5REC.IV5SHPCY == "USA ")
    IV0IM001.IV5SHPCY = " ";
  else
    IV0IM001.IV5SHPCY = IV5REC.IV5SHPCY;
  end


end // end IV0ISAM

// Data Base Reads
Function IV0ISDB()

     /* ***   This statement group handles all the database ****/
     /* *** calls for this screen.  Reads the invoice header****/
     /* *** and invoice address records, then calls for     ****/
     /* *** store address and department name.              ****/

     /* blank records*/

  set IVAREC empty;
  set SQLCA empty;

   /* read invoice header record*/

  IVYREC.IVYIVCN = IVXREC.IV0IVCID; /* move for part char*/
  IVAREC.IV0IVCID = IVXREC.IV0IVCID;
  IVAREC.IV0PARTN = IVYREC.IV0PARTN;

  call "IO1040" ("S ", SQLCA, IVAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1PGMNM = "IV0I    ";
    TA1REC.TA1MAP = "IV0IM001";
    TA1REC.TA1DBASE = "DINVC   ";
    TA1REC.TA1TBLVU = "VIVHDR01";
    TA1REC.TA1TBLKE = IVAREC.IV0KEY;
    TA1REC.TA1LOCAT[3] = "IV0ISDB"; /* 10-30-87*/
    TA1REC.TA1LOCAT[4] = "IO1040";
    XSIVS02();
  end

     /* initialize ivxrec fields while have the record*/

  IVXREC.OP1CUPO = IVAREC.OP1CUPO;
  IVXREC.SP1ID = IVAREC.SP1ID;
  IVXREC.XOCCD = IVAREC.XOCCD;

     /* blank records for invoice address read*/

  set IV5REC empty;
  set SQLCA empty;

   /* read invoice address record*/

  IVYREC.IVYIVCN = IVXREC.IV0IVCID; /* move for part char*/
  IV5REC.IV0IVCID = IVXREC.IV0IVCID;
  IV5REC.IV0PARTN = IVYREC.IV0PARTN;

  call "IO1050" ("S ", SQLCA, IV5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1PGMNM = "IV0I    ";
    TA1REC.TA1MAP = "IV0IM001";
    TA1REC.TA1DBASE = "DINVC   ";
    TA1REC.TA1TBLVU = "VIVADR01";
    TA1REC.TA1TBLKE = IV5REC.IV5KEY;
    TA1REC.TA1LOCAT[3] = "IV0ISDB"; /* 10-30-87*/
    TA1REC.TA1LOCAT[4] = "IO1050";
    XSIVS02();
  end


  IV0ISAM(); /* display addresses*/

  IV0ISSA(); /* find store address*/

  IV0ISDN(); /* find department name*/


end // end IV0ISDB

// Display Dept Name
Function IV0ISDM()

     /* move in fields from department record*/

  IV0IM001.KUJSLFID = KUJREC.KUJSLFID;
  IV0IM001.KUJSLFNM = KUJREC.KUJSLFNM;


end // end IV0ISDM

// Look-up Dept Name
Function IV0ISDN()

     /* ***   this statement does the database read to get ****/
     /* *** the department name, and display on screen     ****/

     /* blank records*/

  set KUJREC empty;
  set SQLCA empty;

   /* read department record*/
    /* don't die on read error, as may not have a department*/

  KUJREC.KUCCOID = IVXREC.KUCCOID;
  KUJREC.XNXCD = IVXREC.XNXCD;

  call "IO0290" ("S ", SQLCA, KUJREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1PGMNM = "IV0I    ";
    TA1REC.TA1MAP = "IV0IM001";
    TA1REC.TA1DBASE = "DCUST   ";
    TA1REC.TA1TBLVU = "VDEPT001";
    TA1REC.TA1TBLKE = KUJREC.KUJGRP;
    TA1REC.TA1LOCAT[3] = "IV0ISDN"; /* 10-30-87*/
    TA1REC.TA1LOCAT[4] = "IO0290";
    XSIVS02();
  end


  IV0ISDM(); /* move fields to screen*/


end // end IV0ISDN

// Enter Key Pressed Actions
Function IV0ISEN()


  COMMAREA.CAUSERA = IVXREC.IVXGROUP;

  if (IVXREC.IVXOPTN == 2
   || IVXREC.IVXOPTN == 6)
    COMMAREA.CATOAP = "IV0G";
    XSEXIT(); /* transfer to Header 1*/
    converseLib.validationFailed(15); /* transfer failed*/
    IVYREC.IVYERR = "Y"; /* mark as error*/
  else
    if (IVXREC.IVXOPTN == 1
     || IVXREC.IVXOPTN == 3)
      COMMAREA.CATOAP = "IV0N";
      XSEXIT(); /* transfer to Product Summary*/
      converseLib.validationFailed(15); /* transfer failed*/
      IVYREC.IVYERR = "Y";
    else
      if (IVXREC.IVXOPTN == 7)
        COMMAREA.CATOAP = "IV0H";
        XSEXIT(); /* transfer to commissions & payment*/
        converseLib.validationFailed(15); /* transfer failed*/
        IVYREC.IVYERR = "Y"; /* mark as error*/
      else
        if (IVXREC.IVXOPTN == 9)
          COMMAREA.CATOAP = "IV0J";
          XSEXIT(); /* transfer to messages & instructions*/
          converseLib.validationFailed(15); /* transfer failed*/
          IVYREC.IVYERR = "Y"; /* mark as error*/
        else
          if (IVXREC.IVXOPTN == 8
           || IVXREC.IVXOPTN == 4)
            if (IVXREC.IVXTYPFL == "I")
              COMMAREA.CATOAP = "IV0A";
              XSEXIT(); /* transfer to main menu*/
              converseLib.validationFailed(15); /* transfer failed*/
              IVYREC.IVYERR = "Y"; /* mark as error*/
            else
              XSIVSEN(); /* routine to check for more sels,and pass*/
              if (converseVar.validationMsgNum != 0) /* if error return*/
                IVYREC.IVYERR = "Y"; /* mark as error*/
              end
            end
          end
        end
      end
    end
  end


end // end IV0ISEN

// Map Initialization
Function IV0ISMI()

   /* ** lgross 05-26-92 display sales office abbreviation*/

  converseLib.clearScreen();
  set IV0IM001 initial; /* initializes map*/


  IV0IM001.XXXCURDT = VGVar.currentShortGregorianDate;
  IV0IM001.IV0IVCID = IVXREC.IV0IVCID; /* move in invoice number*/
  IV0IM001.KUCCOID = IVXREC.KUCCOID; /* move in company*/
  IV0IM001.KUMSTRID = IVXREC.KUMSTRID; /* move in store*/
  IV0IM001.XNXCD = IVXREC.XNXCD; /* move in dept*/
  IV0IM001.KUCCONM = IVXREC.KUCCONM; /* move in customer name*/
  IV0IM001.IV0IVCDT = IVXREC.IV0IVCDT; /* move in invoice date*/

   /* ***** The following commented by Grant Gilray 6/1/87 *******/
   /* MOVE IVXREC.OP1CUPO TO IV0IM001.OP1CUPO;  move in po number*/
   /* ************************************************************/

  IV0IM001.XSOCD = IVXREC.XSOCD; /* move in sales office code*/
  if (IVXREC.XSOCD in XSOTBL.XSOCD) /* if code in sales office table*/
    IV0IM001.XSOABRV = XSOTBL.XSOABRV[sysVar.arrayIndex]; /* move sales office*/
  end /* abbreviation*/




end // end IV0ISMI

// Program Initialization
Function IV0ISPI()

     /* ***   This statement group handles initial clearing ****/
     /* *** of working fields for IV0I, and fetch of header ****/
     /* *** index and company records if came in fastpath   ****/

     /* initialize work record*/

  set IVYREC empty;

     /* determine if came in fastpath*/

  if (COMMAREA.CAITEM != " " /* fastpath entry*/
   || COMMAREA.CAFRMSYS != COMMAREA.CACURSYS) /* from other sys,10-27-87*/
    IVYREC.IVYMTXT = "IV0ISPI"; /* in case of error 1-26-88*/
    XSIVSFP(); /* find header index and company*/
    IVYREC.IVYMTXT = " "; /* 1-26-88*/
    if (IVXREC.IVXMSSNB != 0) /* if had an error on invoice lookup*/
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0A";
      XSEXIT(); /* pass to menu screen*/
    end
    COMMAREA.CAITEM = " "; /* reset caitem to space*/
  else /* not fastpath*/
    IVXREC.IVXGROUP = COMMAREA.CAUSERA; /* setup up program storage*/
    if (IVXREC.IVXINIT != "IV0") /* if not inited*/
      set IVXREC empty;
      IVXREC.IVXMSSNB = 18; /* must have come in fastpath w/o item*/
      IVXREC.IVXINIT = "IV0"; /* set so iv0a will look for message*/
      COMMAREA.CAUSERA = IVXREC.IVXGROUP; /* return to iv0a*/
      COMMAREA.CATOAP = "IV0A";
      XSEXIT();
    end
  end


     /* if came here direct from menu, will still need to*/
     /* retrieve header index and company.  Use kuccoid as check*/

  if (IVXREC.KUCCOID <= 0)
    IVYREC.IVYMTXT = "IV0ISPI"; /* in case of error 1-26-88*/
    XSIVSFH(); /* routine to do lookups*/
    IVYREC.IVYMTXT = " "; /* 1-26-88*/
     /* add below 1-22-88*/
    if (IVXREC.IVXMSSNB != 0) /* if error on invoice lookup*/
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0A";
      XSEXIT(); /* pass to menu screen*/
    end
     /* add above 1-22-88*/
  end


  IV0ISMI(); /* initialize map*/


end // end IV0ISPI

// Look-up Store Address
Function IV0ISSA()

     /* ***  this statement group finds the store address  ****/
     /* ***  to display on the screen                      ****/

    /* blank records*/

  set SQLCA empty;
  set KUMREC empty;

   /* read store record for pointer to address table*/

  KUMREC.KUCCOID = IVXREC.KUCCOID;
  KUMREC.KUMSTRID = IVXREC.KUMSTRID;

  call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1PGMNM = "IV0I    ";
    TA1REC.TA1MAP = "IV0IM001";
    TA1REC.TA1DBASE = "DINVC   ";
    TA1REC.TA1TBLVU = "VSTORE01";
    TA1REC.TA1TBLKE = KUMREC.KUMGRP;
    TA1REC.TA1LOCAT[3] = "IV0ISSA"; /* 10-30-87*/
    TA1REC.TA1LOCAT[4] = "IO0340";
    XSIVS02();
  end

    /* blank records for address read*/

  set SQLCA empty;
  set KULREC empty;

   /* read store's address record*/

  KULREC.KUCCOID = IVXREC.KUCCOID;
  KULREC.KULAAID = KUMREC.KUMSTAID;

  call "IO0170" ("S ", SQLCA, KULREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1PGMNM = "IV0I    ";
    TA1REC.TA1MAP = "IV0IM001";
    TA1REC.TA1DBASE = "DINVC   ";
    TA1REC.TA1TBLVU = "VADDR001";
    TA1REC.TA1TBLKE = KULREC.KULGRP;
    TA1REC.TA1LOCAT[3] = "IV0ISSA"; /* 10-30-87*/
    TA1REC.TA1LOCAT[4] = "IO0170";
    XSIVS02();
  end


  IV0ISSM(); /* display store address*/


end // end IV0ISSA

// Display Store Address
Function IV0ISSM()
   /* IV0ISSM - DISPLAY STORE ADDRESS*/
   /* *******************************************************************/
   /* *    M A I N T E N A N C E     H I S T O R Y    L O G            **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 11-09-93  LGROSS  CHANGED KULREC.XXXADDR1,2,3 TO XXX-ADDR1,2,3 **/
   /* *                   MOVE IN STORE ADDRESS                        **/
   /* * 03-20-95  GDECKE  GET STORE SELF ID FROM CORRECTIONS HEADER    **/
   /* *                   IF ONE EXISTS                                **/
   /* * 05-22-95  GDECKE  FIX STORE SELF ID LOGIC.                     **/
   /* *******************************************************************/


  IV0IS-GET-REQ-HDR();

     /* move in fields from the store record*/

  if (IV0IW01.CU-STOR-SELF-ID == "XXXXXXXX")
    IV0IM001.KUMSLFID = KUMREC.KUMSLFID;
  else
    IV0IM001.KUMSLFID = IV0IW01.CU-STOR-SELF-ID;
  end

  IV0IM001.KUMSTAID = KUMREC.KUMSTAID;
  IV0IM001.KUMSTRNM = KUMREC.KUMSTRNM;

     /* move in fields from address record*/

  IV0IM001.XXXADDR1 = KULREC.XXX-ADDR1;
  IV0IM001.XXXADDR2 = KULREC.XXX-ADDR2;
  IV0IM001.XXXADDR3 = KULREC.XXX-ADDR3;
  IV0IM001.XXXCITY = KULREC.XXXCITY;
  IV0IM001.XSTCD = KULREC.XSTCD;
  IV0IM001.XXXZIP = KULREC.XXXZIP;
  if (KULREC.XCTCD == "USA ")
    IV0IM001.XCTCD = " ";
  else
    IV0IM001.XCTCD = KULREC.XCTCD;
  end


end // end IV0ISSM

//*** RECORD=IV0I-IOMOD-REC ****
// ************************************************************
// *   RECORD CONTAINS ONE FIELD - IV0WW-IOMOD-FUNCTION       *
// *                                                          *
// *   THE USE OF THIS RECORD IN THE DATABASE CALLS ALLOWS    *
// *   THE APPLICATION TO BE CODED WITH JUST ONE CALL TO      *
// *   EACH IOMOD. THE ONE CALL WILL HANDLE ANY FUNCTION CODE *
// *   AS LONG AS THE VALUE IS MOVED TO THE FUNCTION FIELD    *
// *   IN THIS RECORD BEFORE THE IOMOD ROUTINE IS USED.       *
// *                                                          *
// ************************************************************
// *    M A I N T E N A N C E    H I S T O R Y    L O G       *
// *----------------------------------------------------------*
// *   DATE    PGMR    DESCRIPTION                            *
// *----------------------------------------------------------*
// * 01-25-95  GDECKE  NEW APPLICATION                        *
// ************************************************************
// ******************************
Record IV0I-IOMOD-REC type basicRecord
  5 IV0IW-IOMOD-FUNCTION IV0IW-IOMOD-FUNCTION ; 
end // end IV0I-IOMOD-REC

//*** RECORD=IV0IW01 ****
// ************************************************************
// *                                                          *
// *   working storage area for application iv0i              *
// *                                                          *
// ************************************************************
// *    M A I N T E N A N C E    H I S T O R Y    L O G       *
// *----------------------------------------------------------*
// *   DATE    PGMR    DESCRIPTION                            *
// *----------------------------------------------------------*
// * 01-25-95  GDECKE  NEW APPLICATION                        *
// ************************************************************
// ***********************
Record IV0IW01 type basicRecord
  5 IV0IW-WS-REC-GROUP IV0IW-WS-REC-GROUP ; 
    10 IV0IW-DEADLOCK-CT IV0IW-DEADLOCK-CT ; 
    10 IV0IW-DEADLOCK-FL IV0IW-DEADLOCK-FL ; 
    10 IV0IW-DISP-IVC-ID IV0IW-DISP-IVC-ID ; 
    10 IV0IW-CSR-EOF-FL IV0IW-CSR-EOF-FL ; 
    10 CU-STOR-SELF-ID CU-STOR-SELF-ID ; 
end // end IV0IW01

// END OF FILE FOR CURSOR SELECT
DataItem IV0IW-CSR-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DEADLOCK COUNT
DataItem IV0IW-DEADLOCK-CT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// DEADLOCK FLAG
DataItem IV0IW-DEADLOCK-FL char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// display format for ivc-id
DataItem IV0IW-DISP-IVC-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// iomod function to perform
DataItem IV0IW-IOMOD-FUNCTION char(2)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// IVC CORRECTION ORIGINAL DATA
DataItem IV0IW-WS-REC-GROUP char(21)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

