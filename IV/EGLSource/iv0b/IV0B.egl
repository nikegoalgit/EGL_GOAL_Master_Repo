package iv0b;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSIVXF;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXFLDD;
import corpcom7.XXXFLDT;
import corpcom7.XXXFLMM;
import corpcom7.XXXFLYY;
import corpcom7.XXXSEP5;
import corpcom7.XXXSEP6;
import corpcom7.XXXWCC;
import corpcom7.XXXWCYMD;
import corpcom7.XXXWDD;
import corpcom7.XXXWMM;
import corpcom7.XXXWYY;
import iv.common.*;
import pf.common.PFJREC;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
//*** PROGRAM=IV0B ****
// the purpose of this program is to display instore promo/
// point of purchase data.
// this program will be entered from iv0h
// 
// maintenance log
// date   changer reason
// 061190fjelli  installed
// 052692 lgross allow pf20 to order comment screen
//               changes: iv0bm001, iv0b200
// 07/08/92 lgross allow pf21 to invoice comment screen
//               Changes:  IV0BM001, IV0B200
// *********************
Program IV0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "IV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  IV0BW01 IV0BW01; // record
  IV0REC IV0REC; // record
  IV6REC IV6REC; // record
  IVFREC IVFREC; // record
  IVGREC IVGREC; // record
  IVXREC IVXREC; // record
  IVYREC IVYREC; // record
  PFJREC PFJREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use IV0BM.IV0BM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    IV0B000: IV0B000();
    ;
    ;
     /* *************************************************************/
     /* *****               F L O W    S T A G E               ******/
     /* *************************************************************/
    ;
    goto IV0B000;
    ;
     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
    ;
    ;
    ;
    IV0B050: IV0B050();
    goto IV0B050;
    ;
    ;
    ;
  end // end main
end // end IV0B

// application driver
Function IV0B000()
  ;
  ;
   /* ************************************************************/
   /* *   this is the "main logic" for the application.         **/
   /* *                                                         **/
   /* ************************************************************/
  ;
  ;
  IV0B001(); /* initialize the application*/
  ;
  ;
  IV0B050(); /* process application*/
  ;
  ;
  ;
end // end IV0B000

// initialize application
Function IV0B001()
  ;
  ;
   /* ************************************************************/
   /* *      initialize the application working storage         **/
   /* *                                                         **/
   /* ************************************************************/
  ;
  XSENTRY(); /* check entered thru main menu*/
  ;
  VGVar.handleHardIOErrors = 1; /* return control to program if hard db2 error*/
  ;
                       /* ; CLEAR ALL WORKING STORAGE RECORDS*/
  set ERRSQLCA empty;
  set IVXREC empty;
  set IVYREC empty;
  set IV0BW01 empty;
  set IV0REC empty;
  set IV6REC empty;
  set SQLCA empty;
  set TA1REC empty;
  ;
                                   /* R E F O R M A T     D A T E*/
  IV0BW01.XXXWCYMD = VGVar.currentShortGregorianDate;
  IV0BW01.XXXFLMM = IV0BW01.XXXWMM;
  IV0BW01.XXXFLDD = IV0BW01.XXXWDD;
  IV0BW01.XXXFLYY = IV0BW01.XXXWYY;
  IV0BW01.XXXSEP5 = "-";
  IV0BW01.XXXSEP6 = "-";
  ;
                                 /* ;move current date to screen.*/
  IV0BM001.XXXCURDT = IV0BW01.XXXFLDT;
  ;
  if (COMMAREA.CAFROMAP == "IV0H") /* program should be entered from iv0h*/
    IVXREC.IVXGROUP = COMMAREA.CAUSERA; /* move commarea to ivxrec*/
  else
    COMMAREA.CATOAP = "IV0A";
    XSEXIT();
    XSPF4();
    exit program;
  end
  ;
  IV0BW01.IV0BWCT1 = 0; /* initialize map line index*/
  ;
  IV0BW01.IV0BWEAF = "N"; /* set application-done flag to 'no'*/
  ;
  IV0BW01.IV0BWERF = "N"; /* set error flag to 'no'*/
  ;
  ;
end // end IV0B001

// converse map
Function IV0B050()
  ;
  ;
   /* *************************************************************/
   /* *****     F O R M A T     S C R E E N     W I T H      ******/
   /* *****                     D A T A                      ******/
   /* *************************************************************/
   /* this module is performed from iv0b000*/
   /* *************************************************************/
  if (IV0BW01.IV0BWERF == "N") /* if no error*/
    IV0B100(); /* move header data*/
  end
  ;
  if (IV0BW01.IV0BWERF == "N") /* if no error*/
    IV0B110(); /* move gl data*/
  end
  ;
   /* converse iv0bm001*/
  converse IV0BM001 ;
  ;
  IV0B200(); /* edit screen*/
  ;
  ;
  ;
end // end IV0B050

// error routine
Function IV0B099()
  ;
  ;
      /* *********************************************************/
      /* * online abort routine for iv system                   **/
      /* *********************************************************/
  ;
  TA1REC.TA1TYPE = "DB2"; /* abend type*/
  TA1REC.TA1FUNC = "RETN"; /* abend func*/
  set ERRSQLCA empty; /* clear area*/
  move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.rollback();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* synpoint rollback*/
  try
    call "TA0020" (TA1REC, ERRSQLCA);
  end /* abend module*/
  COMMAREA.CAUSERA = " "; /* clear user commarea*/
  XSPF4(); /* master menu*/
  exit program; /* master menu failure*/
  ;
  ;
  ;
end // end IV0B099

// load header data to screen
Function IV0B100()
  ;
  ;
   /* *************************************************************/
   /* *****     F O R M A T     h e a d e r  d a t a         ******/
   /* *************************************************************/
  ;
  IV0BM001.IV0IVCID = IVXREC.IV0IVCID;
  IV0BM001.KUCCOID = IVXREC.KUCCOID;
  IV0BM001.KUMSTRID = IVXREC.KUMSTRID;
  IV0BM001.XNXCD = IVXREC.XNXCD;
  IV0BM001.KUCCONM = IVXREC.KUCCONM;
  IV0BM001.IV0IVCDT = IVXREC.IV0IVCDT;
  ;
  ;
  ;
end // end IV0B100

// GET GL ROWS
Function IV0B110()
  ;
  ;
   /* *************************************************************/
   /* *****           G E T     G L      R O W S             ******/
   /* *************************************************************/
  ;
  ;
  SQLCA.VAGen_SQLCODE = 0;
  IV0BW01.IV0BWCT1 = 0;
  IVYREC.IVYIVCN = IVXREC.IV0IVCID;
  IV6REC.IV0IVCID = IVXREC.IV0IVCID;
  IV6REC.IV0PARTN = IVYREC.IV0PARTN;
  IV6REC.OP2LNINB = -1;
  call "IO1080" ("SS", SQLCA, IV6REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1PGMNM = "IV0B";
    TA1REC.TA1MAP = "IV0BM001";
    TA1REC.TA1DBASE = "DINVC";
    TA1REC.TA1TBLVU = "VIVGLX01";
    TA1REC.TA1TBLKE = IV6REC.IV6KEY;
    TA1REC.TA1LOCAT[3] = "IV0B110 ";
    TA1REC.TA1LOCAT[4] = "IO1080";
    IV0B099();
    /* *****************************************************/
  end
  ;
  IV0BW01.IV0BWGLF = "Y"; /* initialize gl flag*/
  ;
  while (IV0BW01.IV0BWGLF == "Y")
    set IV6REC empty;
    call "IO1080" ("SN", SQLCA, IV6REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE != 0)
      IV0BW01.IV0BWGLF = "N"; /* move 'n' to gl flag*/
      if (SQLCA.VAGen_SQLCODE != 100)
        /* *****************************************************/
        /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
        /* *****************************************************/
        TA1REC.TA1PGMNM = "IV0B";
        TA1REC.TA1MAP = "IV0BM001";
        TA1REC.TA1DBASE = "DINVC";
        TA1REC.TA1TBLVU = "VIVGLX01";
        TA1REC.TA1TBLKE = IV6REC.IV6KEY;
        TA1REC.TA1LOCAT[3] = "IV0B110 ";
        TA1REC.TA1LOCAT[4] = "IO1080";
        IV0B099();
        /* *****************************************************/
      end
    else
      if (IV6REC.PFJXREF == "NBQ") /* ;if nike bank quarter row*/
        IV0B111(); /* move fields to screen*/
      end
    end
  end
  ;
  call "IO1080" ("CS", SQLCA, IV6REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1PGMNM = "IV0B";
    TA1REC.TA1MAP = "IV0BM001";
    TA1REC.TA1DBASE = "DINVC";
    TA1REC.TA1TBLVU = "VIVGLX01";
    TA1REC.TA1TBLKE = IV6REC.IV6KEY;
    TA1REC.TA1LOCAT[3] = "IV0B110 ";
    TA1REC.TA1LOCAT[4] = "IO1080";
    IV0B099();
    /* *****************************************************/
  end
  ;
  ;
  ;
end // end IV0B110

// move gl data to screen
Function IV0B111()
  ;
  ;
   /* *************************************************************/
   /* *****   G E T    &    F O R M A T    G L A   D A T A   ******/
   /* *****               O N     S C R E E N                ******/
   /* *************************************************************/
  ;
  IV0BW01.IV0BWCT1 = IV0BW01.IV0BWCT1 + 1; /* increment array index*/
  ;
  ;
  IV0BM001.GLAMT[IV0BWCT1] = IV6REC.IV6GLAMT; /* move amt to screen*/
  ;
  PFJREC.GLACD = IV6REC.GLACD;
  ;
  call "IO4360" ("S ", SQLCA, PFJREC) {isNoRefresh = yes, isExternal = yes}; /* get gl code info*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0BM001.GLADESC[IV0BWCT1] = PFJREC.GLADESC; /* move desc to screen*/
  else
    IV0BM001.GLADESC[IV0BWCT1] = "UNKNOWN";
  end
  ;
  ;
  ;
end // end IV0B111

// DECIDE WHERE TO GO NOW !
Function IV0B200()
  ;
  ;
   /* *************************************************************/
   /* *****  T R A N S F E R    T O     R E Q U E S T E D    ******/
   /* *****              A P P L I C A T I O N               ******/
   /* *****                                                  ******/
   /* *****  THIS PROCESS WILL TRANSFER CONTROL TO THE AP-   ******/
   /* *****  PROPRIATE APPLICATION.                          ******/
   /* ***** 05-12-92 lgross allow pf20 to order comment screen*****/
   /* *************************************************************/
  ;
  IV0BW01.IV0BWERF = "N"; /* initializer error flag*/
  ;
  if (IV0BM001.CAITEM > " " /* if fastpath item out*/
   && IV0BM001.CATOAP == " ")
                                   /* and fastpath application is blank*/
    converseLib.validationFailed(55); /* invalid security to xfer*/
    IV0BW01.IV0BWERF = "Y"; /* set error flag to yes*/
    return; /* return*/
  end
  ;
  ;
  if (IV0BM001.CATOAP > " ") /* check for fastpath out*/
    COMMAREA.CATOAP = IV0BM001.CATOAP;
    COMMAREA.CAITEM = IV0BM001.CAITEM;
    XSIVXF(); /* edit option/item*/
    if (converseVar.validationMsgNum == 0)
      XSEXIT();
      IV0BW01.IV0BWERF = "Y"; /* set error flag to yes*/
      converseLib.validationFailed(15); /* invalid security to xfer*/
    end
    set IV0BM001.CAITEM cursor, bold;
    return;
  end
  ;
  ;
  if (converseVar.eventKey is enter)
    COMMAREA.CAUSERA = IVXREC.IVXGROUP;
    COMMAREA.CATOAP = "IV0H";
    XSEXIT();
    converseLib.validationFailed(15); /* invalid security to xfer*/
    IV0BW01.IV0BWERF = "Y"; /* set error flag to yes*/
    return;
  else /* else("enter" not pressed)*/
    if (converseVar.eventKey is pf1)
      XSPF1();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      return;
    end
    ;
    if (converseVar.eventKey is pf3)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0A";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      IV0BW01.IV0BWERF = "Y"; /* set error flag to yes*/
      return;
    end
    ;
    if (converseVar.eventKey is pf4)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CATOAP = "MN0M";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      IV0BW01.IV0BWERF = "Y"; /* set error flag to yes*/
      return;
    end
    ;
    if (converseVar.eventKey is pf13)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0G";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      IV0BW01.IV0BWERF = "Y"; /* set error flag to yes*/
      return;
    end
    ;
    if (converseVar.eventKey is pf15)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0J";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      IV0BW01.IV0BWERF = "Y"; /* set error flag to yes*/
      return;
    end
    ;
    if (converseVar.eventKey is pf16)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0I";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      IV0BW01.IV0BWERF = "Y"; /* set error flag to yes*/
      return;
    end
    ;
    if (converseVar.eventKey is pf14)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0H";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      IV0BW01.IV0BWERF = "Y"; /* set error flag to yes*/
      return;
    end
    if (converseVar.eventKey is pf20) /* order comment screen*/
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0C";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      IV0BW01.IV0BWERF = "Y"; /* set error flag to yes*/
      return;
    end
    if (converseVar.eventKey is pf21) /* invoice comment screen*/
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0U";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      IV0BW01.IV0BWERF = "Y"; /* set error flag to yes*/
      return;
    end
    ;
    ;
    /* *************************************************************/
    /* ** at this point we have determined that an invalid "PF"  ***/
    /* ** key was pressed. display error message and go to "flow"***/
    /* ** which will re-converse screen.                         ***/
    /* *************************************************************/
    ;
    converseLib.validationFailed(3);
  end
  ;
  ;
  ;
end // end IV0B200

//*** RECORD=IV0BW01 ****
// work record for iv0b
// 
// maintenance history
// ********************
// 052590 fjelli   record created
// ********************************************************
// ***********************
Record IV0BW01 type basicRecord
  5 IV0BWGRP IV0BWGRP ; 
    10 XXXWCYMD XXXWCYMD ; 
      15 XXXWCC XXXWCC ; 
      15 XXXWYY XXXWYY ; 
      15 XXXWMM XXXWMM ; 
      15 XXXWDD XXXWDD ; 
    10 XXXFLDT XXXFLDT ; 
      15 XXXFLMM XXXFLMM ; 
      15 XXXSEP5 XXXSEP5 ; 
      15 XXXFLDD XXXFLDD ; 
      15 XXXSEP6 XXXSEP6 ; 
      15 XXXFLYY XXXFLYY ; 
    10 IV0BWCT1 IV0BWCT1 ; 
    10 IV0BWEAF IV0BWEAF ; 
    10 IV0BWGLF IV0BWGLF ; 
    10 IV0BWERF IV0BWERF ; 
end // end IV0BW01

// screen array line counter
DataItem IV0BWCT1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// end of application flag
DataItem IV0BWEAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag
DataItem IV0BWERF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// general ledger flag
DataItem IV0BWGLF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// WORKING STORAGE REC
DataItem IV0BWGRP char(22)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

