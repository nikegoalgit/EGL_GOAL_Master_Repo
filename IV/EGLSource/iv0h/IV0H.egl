package iv0h;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSIVSEN;
import corpcom4.XSIVSFH;
import corpcom4.XSIVSFP;
import corpcom4.XSIVSN4;
import corpcom4.XSIVXF;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XGPTBL;
import corpx1.XOBTBL;
import corpx1.XPATBL;
import corpx1.XPTTBL;
import corpx1.XSOTBL;
import iv.common.*;
import ku.common.KUCREC;
import sm.common.SM4REC;
import sm.common.SM5REC;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VIVHDR05;
//*** PROGRAM=IV0H ****
// maintenance log
// date   changer reason
// 040690fjelli  rename sp6mdisc to sp3dpct
// 012191 lgross removed kuarec- fields moved to kucrec
//               removed iv0hs22
//               changed xsivsfh to move kucrec.xlbcd to
//                        ivxrec.xlbcd
//               added xlbcd to ivxrec
// 021591 lgross removed kuarec and database changes
// 041091 lgross database changes- rep and agency will now
//               come from hdx rec rather that op-split
// 051391 lgross added packing id to iv0hm001
// 052692 lgross moved sales office abbreviation to screen
//               and allowed pf20 to order comment screen
//               changed iv0hm001, iv0h050, iv0h020
// 07/09/92 lgross allow PF21 to invoice comment screen
//               Changes: IV0HM001, IV0H050
// 09/15/92 jhecke rep name is no longer found on
//               dslsmn.vragcy01 and must be obtained from
//               dslsmn.vreps001. iv0hs11,iv0h020.
// 10/16/92 lgross database changes to change kuceom
//               to cu-bill-ind. changed iv0h020, iv0hm001
// 08/04/95 GDECKE  GET IV-PTERM-ADJ-NMO FROM VIVHDR05
// *********************
Program IV0H type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "IV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  IV0HW01 IV0HW01; // record
  IV0REC IV0REC; // record
  IV6REC IV6REC; // record
  IVFREC IVFREC; // record
  IVGREC IVGREC; // record
  IVXREC IVXREC; // record
  IVYREC IVYREC; // record
  IVZREC IVZREC; // record
  KUCREC KUCREC; // record
  SM4REC SM4REC; // record
  SM5REC SM5REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VIVHDR05 VIVHDR05; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XOBTBL {deleteAfterUse = yes}; // table
  use XPATBL; // table
  use XPTTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XSOTBL {deleteAfterUse = yes}; // table
  use IV0HM.IV0HM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    IV0H010: IV0H010();
     /* *************************************************************/
     /* *****               F L O W    S T A G E               ******/
     /* *************************************************************/


    goto IV0H020; /* proceed to next process*/


     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0H020: IV0H020();
     /* *************************************************************/
     /* *****               F L O W    S T A G E               ******/
     /* *************************************************************/


    goto IV0H030; /* proceed to next process*/


     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0H030: IV0H030();
     /* *************************************************************/
     /* *****               F L O W    S T A G E               ******/
     /* *************************************************************/


    goto IV0H040; /* proceed to next process*/


     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0H040: IV0H040();
     /* *************************************************************/
     /* *****               F L O W    S T A G E               ******/
     /* *************************************************************/




     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0H050: IV0H050();
     /* *************************************************************/
     /* *****               F L O W    S T A G E               ******/
     /* *************************************************************/


    goto IV0H040; /* if we get to this flow section*/
                                   /* ;  then an error has occured,*/
                                   /* ;  go to iv0g040 and re-*/
                                   /* ;  converse screen.*/


     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
  end // end main
end // end IV0H

// FIRST TIME THRU PROCESS
Function IV0H010()


   /* *************************************************************/
   /* ***** F I R S T    T I M E    T H R U   P R O C E S S  ******/
   /* *****                                                  ******/
   /* ***** this process does all the 'up-front' stuff for   ******/
   /* ***** the iv0h application. it clears all working      ******/
   /* ***** storage, and (if this appl was fast-pathed into) ******/
   /* ***** will perform the iv0xsfp statement group which   ******/
   /* ***** gets the data required to fill the ivxrec.       ******/
   /* *************************************************************/


  XSENTRY(); /* standard CSP entry routine*/

  IV0HS11(); /* clear all working storage recs*/

  IV0HM001.XXXRVNBR = "01"; /* this sets the program revision number*/
                                 /* ;  every time this appl*/
                                 /* ;  is modified, this number*/
                                 /* ;  must be incrimented by 1.*/

  IV0HW01.IV0HWDT = VGVar.currentShortGregorianDate; /* move current date to screen.*/
  IV0HS98(); /* reformat date*/
  IV0HM001.XXXCURDT = IV0HW01.IV0HWFDT;
                                 /* ;move current date to screen.*/

  if (COMMAREA.CAITEM > " " /* fastpath into here*/
   || COMMAREA.CAFRMSYS != COMMAREA.CACURSYS) /* other sys, 10-28-87*/
    IVYREC.IVYMTXT = "IV0H010"; /* in case of error 1-26-88*/
    XSIVSFP(); /* get invc hdr*/
    IVYREC.IVYMTXT = " "; /* 1-26-88*/
    if (IVXREC.IVXMSSNB != 0) /* if invoice header not found*/
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0A";
      XSEXIT(); /* transfer to invoicing menu*/
      exit program; /* if no xfer, die !*/
    end
    COMMAREA.CAITEM = " "; /* 11-12-87*/
  else
    IVXREC.IVXGROUP = COMMAREA.CAUSERA;
    if (IVXREC.IVXINIT != "IV0")
      IVXREC.IVXMSSNB = 18;
      IVXREC.IVXINIT = "IV0";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0A";
      XSEXIT();
      XSPF4();
      exit program;
    end
  end

  if (IVXREC.KUCCOID <= 0) /* if application entered direct*/
                                 /* ;  from menu (not thru iv0g)*/
    IVYREC.IVYMTXT = "IV0H010"; /* in case of error 1-26-88*/
    XSIVSFH(); /* get header index data*/
    IVYREC.IVYMTXT = " "; /* 1-26-88*/
    if (IVXREC.IVXMSSNB != 0) /* if not found*/
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0A";
      XSEXIT(); /* transfer to invoicing menu*/
      exit program; /* if no xfer, die !*/
    end
  end /* end of "if" statement*/


end // end IV0H010

// FORMAT SCREEN WITH DATA
Function IV0H020()

   /* ********************************************************************/
   /* *    M A I N T E N A N C E     H I S T O R Y    L O G             **/
   /* *-----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                   **/
   /* *-----------------------------------------------------------------**/
   /* * 08-04-95  GDECKE  GET IV-PTERM-ADJ-NMO FROM VIVHDR05            **/
   /* ********************************************************************/

   /* *************************************************************/
   /* *****     F O R M A T     S C R E E N     W I T H      ******/
   /* *****                     D A T A                      ******/
   /* ***** 05/26/92 lgross move sales office abbreviation   ******/
   /* *****                 screen                           ******/
   /* *************************************************************/


  IV0HM001.IV0IVCID = IVXREC.IV0IVCID;
  IV0HM001.KUCCOID = IVXREC.KUCCOID;
  IV0HM001.KUMSTRID = IVXREC.KUMSTRID;
  IV0HM001.XNXCD = IVXREC.XNXCD;
  IV0HM001.KUCCONM = IVXREC.KUCCONM;
  IV0HM001.IV0IVCDT = IVXREC.IV0IVCDT;
  IV0HM001.XSOCD = IVXREC.XSOCD;
  if (IVXREC.XSOCD in XSOTBL.XSOCD) /* if in sales cd table*/
    IV0HM001.XSOABRV = XSOTBL.XSOABRV[sysVar.arrayIndex]; /* move abbreviation*/
  end
  IV0HM001.ISPOPFL = "N"; /* initialize instore pop flag*/

  IV0HS21(); /* get invoice header record*/

  IV0HM001.OP1CUPO = VIVHDR05.OP1CUPO;

  IV0HM001.OP1SAGCY = IVXREC.SM1AGYID;
  IV0HM001.OP1SREP = IVXREC.SM4REPID;

   /* ********** get sales reps name ***********/
  SM5REC.SM1AGYID = IVXREC.SM1AGYID;
  SM5REC.SM4REPID = IVXREC.SM4REPID;
  SM4REC.SM4REPID = IVXREC.SM4REPID;
  XSIVSN4(); /* get formatted srep name*/
  IV0HM001.IVZFNAME = IVZREC.IVZFNAME;

  IV0HM001.IVANMAMT = VIVHDR05.IVANMAMT;
  IV0HM001.XPTCD = VIVHDR05.XPTCD;

  if (VIVHDR05.OP1PTOF == "Y")
    IV0HM001.IV0HMPT1 = "*";
  else
    IV0HM001.IV0HMPT1 = " ";
  end

  if (VIVHDR05.XPTCD in XPTTBL.XPTCD)
    IV0HM001.XPTDESC = XPTTBL.XPTDESC[sysVar.arrayIndex];
  else
    IV0HM001.XPTDESC = "***** UNKNOWN *****";
  end

   /* *************************************************************/
   /* ***** only display defered date if ( defered amount    ******/
   /* ***** not = $ 0.00 and the as-of-date not = to the     ******/
   /* ***** defered date and the invoice date is not = to    ******/
   /* ***** the defered date.                                ******/
   /* *************************************************************/
  if (VIVHDR05.IVAPTAMT <= 0
   || VIVHDR05.OP1IVADT == VIVHDR05.IVAPTDDT
   || IVXREC.IV0IVCDT == VIVHDR05.IVAPTDDT)
    /* next sentence*/
  else
    IV0HW01.IV0HWDT = VIVHDR05.IVAPTDDT;
    IV0HS98(); /* reformat date*/
    IV0HM001.IVAPTDDT = IV0HW01.IV0HWFDT;
  end
   /* *************************************************************/

  IV0HM001.IVAPTAMT = VIVHDR05.IVAPTAMT;

  IV0HW01.IV0HWDT = VIVHDR05.OP1IVADT;
  IV0HS98(); /* reformat date*/
  IV0HM001.OP1IVADT = IV0HW01.IV0HWFDT;

  IV0HM001.CU-BILL-IND = VIVHDR05.CU-BILL-IND;

  IV0HM001.IV-PTERM-ADJ-NMO = VIVHDR05.IV-PTERM-ADJ-NMO;

  IV0HM001.XLBCD = IVXREC.XLBCD;

  IV0HM001.IVANBLFL = VIVHDR05.IVANBLFL;
  IV0HM001.IVAIVAMT = VIVHDR05.IVAIVAMT;

  IV0HM001.SP1ID = VIVHDR05.SP1ID;

   /* ********** CODE ADDED 3/26/87 BY GRANT GILRAY ***********/
  if (VIVHDR05.SP6MDISC > 0.000)
    IV0HM001.SP6MDISC = VIVHDR05.SP6MDISC;
    IV0HM001.IV0HMSPF = "Y";
  else
    IV0HM001.IV0HMSPF = " ";
  end

  IV0HM001.OP1TLVLN = VIVHDR05.OP1TLVLN; /* move tier level to map*/

  if (VIVHDR05.OP1TIERF == "Y")
                                   /* if tier flag = 'y'*/
    IV0HM001.OP1TIERF = "*"; /* move '*' to map*/
  else /* else*/
    IV0HM001.OP1TIERF = " "; /* move spaces*/
  end
   /* ********************************************************/

  IV0HM001.XOBCD = IVXREC.XOBCD;
  if (IVXREC.XOBCD in XOBTBL.XOBCD)
    IV0HM001.XOBABRV = XOBTBL.XOBABRV[sysVar.arrayIndex];
  else
    IV0HM001.XOBABRV = "UNKNWN";
  end

   /* get packing code abbreviation and move to screen*/

  if (VIVHDR05.XPACD > "  ")
    IV0HM001.XPACD = VIVHDR05.XPACD; /* move xpa cd to screen*/
    if (VIVHDR05.XPACD in XPATBL.XPACD) /* IF XPA IN XPA TABLE*/
      IV0HM001.XPAABRV = XPATBL.XPAABRV[sysVar.arrayIndex]; /* move to screen*/
    else
      IV0HM001.XPAABRV = "UNKNWN";
    end
  else
    IV0HM001.XPACD = "  ";
    IV0HM001.XPAABRV = "      ";
  end

   /* get gpc abbreviation and move to scrreen*/

  IV0HM001.XGPCD = IVXREC.XGPCD; /* move gpc cd to screen*/
  if (IVXREC.XGPCD in XGPTBL.XGPCD)
                                   /* if gpc in gpc table*/
    IV0HM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex]; /* move abbrv to screen*/
  else
                                   /* else*/
    IV0HM001.XGPABRV = "UNKNWN"; /* move unknown to*/
  end /* screen*/




end // end IV0H020

// GET GL ROWS
Function IV0H030()


   /* *************************************************************/
   /* *****           G E T     G L      R O W S             ******/
   /* *************************************************************/


  SQLCA.VAGen_SQLCODE = 0;
  IV0HW01.IV0HWTHD = 0;
  IVYREC.IVYIVCN = IVXREC.IV0IVCID;
  IV6REC.IV0IVCID = IVXREC.IV0IVCID;
  IV6REC.IV0PARTN = IVYREC.IV0PARTN;
  IV6REC.OP2LNINB = -1;
  call "IO1080" ("SS", SQLCA, IV6REC);
  if (SQLCA.VAGen_SQLCODE != 0)
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1PGMNM = "IV0H"; /* 10-30-87*/
    TA1REC.TA1MAP = "IV0HM001"; /* 10-30-87*/
    TA1REC.TA1DBASE = "DINVC";
    TA1REC.TA1TBLVU = "VIVGLX01";
    TA1REC.TA1TBLKE = IV6REC.IV6KEY;
    TA1REC.TA1LOCAT[3] = "IV0H030 "; /* 10-30-87*/
    TA1REC.TA1LOCAT[4] = "IO1080";
    IV0HS99();
    /* *****************************************************/
  end

  while (SQLCA.VAGen_SQLCODE == 0)
    IV6REC.IV6GROUP = " ";
    call "IO1080" ("SN", SQLCA, IV6REC);
    if (SQLCA.VAGen_SQLCODE != 0)
      if (SQLCA.VAGen_SQLCODE != 100)
        /* *****************************************************/
        /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
        /* *****************************************************/
        TA1REC.TA1PGMNM = "IV0H"; /* 10-30-87*/
        TA1REC.TA1MAP = "IV0HM001"; /* 10-30-87*/
        TA1REC.TA1DBASE = "DINVC";
        TA1REC.TA1TBLVU = "VIVGLX01";
        TA1REC.TA1TBLKE = IV6REC.IV6KEY;
        TA1REC.TA1LOCAT[3] = "IV0H030 "; /* 10-30-87*/
        TA1REC.TA1LOCAT[4] = "IO1080";
        IV0HS99();
        /* *****************************************************/
      end
    else
      IV0HS31(); /* move fields to screen*/
    end
  end

  call "IO1080" ("CS", SQLCA, IV6REC);
  if (SQLCA.VAGen_SQLCODE != 0)
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1PGMNM = "IV0H"; /* 10-30-87*/
    TA1REC.TA1MAP = "IV0HM001"; /* 10-30-87*/
    TA1REC.TA1DBASE = "DINVC";
    TA1REC.TA1TBLVU = "VIVGLX01";
    TA1REC.TA1TBLKE = IV6REC.IV6KEY;
    TA1REC.TA1LOCAT[3] = "IV0H030 "; /* 10-30-87*/
    TA1REC.TA1LOCAT[4] = "IO1080";
    IV0HS99();
    /* *****************************************************/
  end





end // end IV0H030

// CONVERSE SCREEN
Function IV0H040()


   /* *************************************************************/
   /* *****                                                  ******/
   /* *************************************************************/


  converse IV0HM001 ;


   /* *************************************************************/
   /* *****                                                  ******/
   /* *************************************************************/


end // end IV0H040

// DECIDE WHERE TO GO NOW !
Function IV0H050()


   /* *************************************************************/
   /* *****  T R A N S F E R    T O     R E Q U E S T E D    ******/
   /* *****              A P P L I C A T I O N               ******/
   /* *****                                                  ******/
   /* *****  THIS PROCESS WILL TRANSFER CONTROL TO THE AP-   ******/
   /* *****  PROPRIATE APPLICATION.                          ******/
   /* ***** 05-12-92 lgross Allow pf20 to go to order comments*****/
   /* ***** 07/09/92 lgross Allow PF21 to invoice comments    *****/
   /* ***** 08/24/93 lgross Allow PF24 to carton tracking     *****/
   /* *************************************************************/


   /* *************************************************************/
   /* *****     the following code is temporary !!!!!!!      ******/
   /* *************************************************************/
   /* IF EZEAID IS PA1                ;<-----temporary*/
    /* OR EZEAID IS PA2              ;<-----temporary*/
    /* EZECLOS                       ;<-----temporary*/
   /* END                             ;<-----temporary*/
   /* *************************************************************/


  if (IV0HM001.CATOAP > " "
   || IV0HM001.CAITEM != " ") /* 11-12-87*/
    COMMAREA.CATOAP = IV0HM001.CATOAP;
    COMMAREA.CAITEM = IV0HM001.CAITEM;
    XSIVXF(); /* 11-12-87 edit option/item*/
    if (converseVar.validationMsgNum == 0) /* 11-12-87*/
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
    end /* 11-12-87*/
    set IV0HM001.CAITEM cursor, bold; /* 11-12-87*/
    exit stack;
  end

  set IV0HM001.CAITEM initialAttributes; /* 11-12-87*/


  if (converseVar.eventKey is enter)
    if (IVXREC.IVXOPTN == 2
     || IVXREC.IVXOPTN == 6)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0G";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end

    if (IVXREC.IVXOPTN == 4
     || IVXREC.IVXOPTN == 7)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      if (IVXREC.IVXTYPFL == "I")
        COMMAREA.CATOAP = "IV0A";
        XSEXIT();
        converseLib.validationFailed(15); /* invalid security to xfer*/
        exit stack;
      else
        XSIVSEN();
                                   /* check for next selection and transfer*/
        if (converseVar.validationMsgNum != 0) /* tranfer failed*/
          exit stack;
        end
      end
    end

    if (IVXREC.IVXOPTN == 1
     || IVXREC.IVXOPTN == 3)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0N";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end

    if (IVXREC.IVXOPTN == 8)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0I";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end

    if (IVXREC.IVXOPTN == 9)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0J";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end

    /* *************************************************************/
    /* ** we should never get this far(when "enter" pressed).... ***/
    /* ** but if we do,goto flow and re-converse the screen      ***/
    /* *************************************************************/

    exit stack;

  else /* else("enter" not pressed)*/

    if (converseVar.eventKey is pf1)
      XSPF1();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end

    if (converseVar.eventKey is pf3)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0A";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end

    if (converseVar.eventKey is pf4)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CATOAP = "MN0M";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end

    if (converseVar.eventKey is pf13)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0G";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end

    if (converseVar.eventKey is pf15)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0J";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end

    if (converseVar.eventKey is pf16)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0I";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    if (converseVar.eventKey is pf20)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0C"; /* order comment*/
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end

    if (converseVar.eventKey is pf21)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0U"; /* invoice comment*/
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end

    if (converseVar.eventKey is pf24)
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0V"; /* carton tracking screen*/
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end

    if (converseVar.eventKey is pf17)
      if (IV0HM001.ISPOPFL == "Y") /* there must be ispop data*/
        COMMAREA.CAUSERA = IVXREC.IVXGROUP;
        COMMAREA.CATOAP = "IV0B";
        XSEXIT();
        converseLib.validationFailed(15); /* invalid security to xfer*/
        exit stack;
      else
        converseLib.validationFailed(56); /* invalid security to xfer*/
        exit stack;
      end
    end


    /* *************************************************************/
    /* ** at this point we have determined that an invalid "PF"  ***/
    /* ** key was pressed. display error message and go to "flow"***/
    /* ** which will re-converse screen.                         ***/
    /* *************************************************************/

    converseLib.validationFailed(3);
  end


end // end IV0H050

// CLEAR ALL WORKING STORAGE RECS
Function IV0HS11()


   /* *************************************************************/
   /* *****      C L E A R     A L L     W O R K I N G       ******/
   /* *****            S T O R A G E     R E C S             ******/
   /* *************************************************************/


  set ERRSQLCA empty;
  set VIVHDR05 empty;
  set IVXREC empty;
  set IVYREC empty;
  set IVZREC empty;
  set IV0HW01 empty;
  set IV0REC empty;
  set IV6REC empty;
  set KUCREC empty;
  set SM4REC empty;
  set SM5REC empty;
  set SQLCA empty;
  set TA1REC empty;

end // end IV0HS11

// GET INVOICE HEADER ROW
Function IV0HS21()
   /* *******************************************************************/
   /* *     M A I N T E N A N C E    H I S T O R Y    L O G            **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 07-03-95  GDECKE  GET IV-PTERM-ADJ-NMO FROM VIVHDR05           **/
   /* *******************************************************************/


   /* *************************************************************/
   /* ***** G E T    I N V O I C E     H E A D E R     R O W ******/
   /* *************************************************************/


  VIVHDR05.IV0IVCID = IVXREC.IV0IVCID;
  IVYREC.IVYIVCN = IVXREC.IV0IVCID;
  VIVHDR05.IV0PARTN = IVYREC.IV0PARTN;

  call "VIVHDR05" ("S ", SQLCA, VIVHDR05) {isNoRefresh = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1DBASE = "DINVC";
    TA1REC.TA1TBLVU = "VIVHDR01";
    TA1REC.TA1TBLKE = VIVHDR05.IV0KEY;
    TA1REC.TA1LOCAT[3] = "IV0HS21 ";
    TA1REC.TA1LOCAT[4] = "VIVHDR05";
    IV0HS99();
    /* *****************************************************/
  end





end // end IV0HS21

// MOVE DATA TO APPROPRIATE FLDS
Function IV0HS31()
  if (IV6REC.PFJXREF == "XTD") /* trade discount*/
    if (IV6REC.IV6FBTYP == "F") /* face type*/
      if (IV6REC.GLACD == "845") /* gen ledger code for sp-net-min-amt*/
        IV0HM001.SP6MDGL = IV6REC.GLACD;
        IV0HM001.SP6MDFL = IV6REC.IV6GLNFL;
        IV0HM001.SP6MDISC = IV6REC.IV6GLPCT;
        IV0HM001.SP6MDAMT = IV6REC.IV6GLAMT;
      else
        IV0HM001.IV0HMTDG = IV6REC.GLACD;
        IV0HM001.IV0HMTDF = IV6REC.IV6GLNFL;
        IV0HM001.IV0HMTDP = IV6REC.IV6GLPCT;
        if (IV6REC.IV6GLNFL != "Y") /* if net billed, don't display amt*/
          IV0HM001.IV0HMTDA = IV6REC.IV6GLAMT;
        end
        if (IV6REC.IV6GLOFL == "Y")
          IV0HM001.IV0HMTD1 = "*";
        else
          IV0HM001.IV0HMTD1 = " ";
        end
      end
    else
      if (IV0HM001.IV0HMTDG > " ")
        /* next sentence*/
      else
        IV0HM001.IV0HMTDG = IV6REC.GLACD;
      end
      IV0HM001.IV0HMTDB = IV6REC.IV6GLPCT;
      if (IV6REC.IV6GLOFL == "Y")
        IV0HM001.IV0HMTD2 = "*";
      else
        IV0HM001.IV0HMTD2 = " ";
      end
    end
    return;
  end

  if (IV6REC.PFJXREF == "NBQ") /* instore promo/ point of purchase*/
    IV0HM001.ISPOPFL = "Y"; /* set flag*/
  end

  if (IV6REC.PFJXREF == "XAA") /* ad allowance*/
    if (IV6REC.IV6FBTYP == "F") /* face or bank type*/
      IV0HM001.IV0HMAAG = IV6REC.GLACD;
      IV0HM001.IV0HMAAF = IV6REC.IV6GLNFL;
      IV0HM001.IV0HMAAP = IV6REC.IV6GLPCT;
      if (IV6REC.IV6GLNFL != "Y") /* if net billed, don't display amt*/
        IV0HM001.IV0HMAAA = IV6REC.IV6GLAMT;
      end
      if (IV6REC.IV6GLOFL == "Y")
        IV0HM001.IV0HMAA1 = "*";
      else
        IV0HM001.IV0HMAA1 = " ";
      end
    else
      if (IV0HM001.IV0HMAAG > " ")
        /* next sentence*/
      else
        IV0HM001.IV0HMAAG = IV6REC.GLACD;
      end
      IV0HM001.IV0HMAAB = IV6REC.IV6GLPCT;
      if (IV6REC.IV6GLOFL == "Y")
        IV0HM001.IV0HMAA2 = "*";
      else
        IV0HM001.IV0HMAA2 = " ";
      end
    end
    return;
  end

  if (IV6REC.PFJXREF == "XDA") /* defective allowance*/
    if (IV6REC.IV6FBTYP == "F")
      IV0HM001.IV0HMDAG = IV6REC.GLACD;
      IV0HM001.IV0HMDAF = IV6REC.IV6GLNFL;
      IV0HM001.IV0HMDAP = IV6REC.IV6GLPCT;
      if (IV6REC.IV6GLNFL != "Y")
        IV0HM001.IV0HMDAA = IV6REC.IV6GLAMT;
      end
      if (IV6REC.IV6GLOFL == "Y")
        IV0HM001.IV0HMDA1 = "*";
      else
        IV0HM001.IV0HMDA1 = " ";
      end
    else
      if (IV0HM001.IV0HMDAG > " ")
        /* next sentence*/
      else
        IV0HM001.IV0HMDAG = IV6REC.GLACD;
      end
      IV0HM001.IV0HMDAB = IV6REC.IV6GLPCT;
    end
    return;
  end

  if (IV6REC.PFJXREF == "XDS") /* direct ship allowance*/
    IV0HM001.IV0HMDSG = IV6REC.GLACD;
    IV0HM001.IV0HMDSF = IV6REC.IV6GLNFL;
    IV0HM001.IV0HMDSP = IV6REC.IV6GLPCT;
    if (IV6REC.IV6GLNFL != "Y")
      IV0HM001.IV0HMDSA = IV6REC.IV6GLAMT;
    end
    return;
  end

  if (IV6REC.PFJXREF == "XCB") /* cash bank discount*/
    IV0HM001.IV0HMCBG = IV6REC.GLACD;
    IV0HM001.IV0HMCBB = IV6REC.IV6GLPCT;
    return;
  end

  if (IV6REC.PFJXREF == "XCP") /* co-op discount*/
    IV0HM001.IV0HMCPG = IV6REC.GLACD;
    IV0HM001.IV0HMCPB = IV6REC.IV6GLPCT;
    if (IV6REC.IV6GLOFL == "Y")
      IV0HM001.SP6CPOFL = "*";
    else
      IV0HM001.SP6CPOFL = " ";
    end
    return;
  end

  if (IV6REC.PFJXREF == "XFA") /* freight allowance, added 10/87*/
    IV0HM001.IV0HMFAG = IV6REC.GLACD; /* g/l code*/
    IV0HM001.IV0HMFAA = IV6REC.IV6GLAMT; /* amount*/
    return;
  end

  if (IV6REC.PFJXREF == "SML") /* small order charge*/
    IV0HM001.IV0HMSMG = IV6REC.GLACD;
    IV0HM001.IV0HMSMA = IV6REC.IV6GLAMT;
    return;
  end

  if (IV6REC.PFJXREF == "XHD") /* handling charge*/
    IV0HM001.IV0HMHDF = IV6REC.IV6GLNFL;
    if (IV6REC.IV6GLNFL != "Y")
      IV0HW01.IV0HWTHD = IV0HW01.IV0HWTHD + IV6REC.IV6GLAMT;
      IV0HM001.IVAHDCHG = IV0HW01.IV0HWTHD;
    end
    return;
  end

  if (IV6REC.PFJXREF == "SHP") /* shipping charge*/
    IV0HM001.IV0HMSHG = IV6REC.GLACD;
    IV0HM001.IV0HMSHA = IV6REC.IV6GLAMT;
    return;
  end


end // end IV0HS31

// REFORMAT DATE FOR CSP
Function IV0HS98()


   /* *************************************************************/
   /* *****           R E F O R M A T     D A T E            ******/
   /* *************************************************************/


  IV0HW01.IV0HWFMM = IV0HW01.IV0HWMM;
  IV0HW01.IV0HWFDD = IV0HW01.IV0HWDD;
  IV0HW01.IV0HWFYY = IV0HW01.IV0HWYY;





end // end IV0HS98

// ERROR HANDLING ROUTINE
Function IV0HS99()

      /* *********************************************************/
      /* * online abort routine for iv system                   **/
      /* *********************************************************/

  TA1REC.TA1TYPE = "DB2"; /* abend type*/
  TA1REC.TA1FUNC = "RETN"; /* abend func*/
  set ERRSQLCA empty; /* clear area*/
  move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.rollback();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* synpoint rollback*/
  try
    call "TA0020" (TA1REC, ERRSQLCA);
  end /* abend module*/
  COMMAREA.CAUSERA = " "; /* clear user commarea*/
  XSPF4(); /* master menu*/
  exit program; /* master menu failure*/



   /* *************************************************************/
end // end IV0HS99

Record IV0HW01 type basicRecord
  5 IV0HWGRP IV0HWGRP ; 
    10 IV0HWDT IV0HWDT ; 
      15 * num(1) ; 
      15 IV0HWCC IV0HWCC ; 
      15 IV0HWYY IV0HWYY ; 
      15 IV0HWMM IV0HWMM ; 
      15 IV0HWDD IV0HWDD ; 
    10 IV0HWFDT IV0HWFDT ; 
      15 IV0HW00 IV0HW00 ; 
      15 IV0HWFYY IV0HWFYY ; 
      15 IV0HWFMM IV0HWFMM ; 
      15 IV0HWFDD IV0HWFDD ; 
    10 IV0HWTHD IV0HWTHD ; 
end // end IV0HW01

// CONSTANT "00"
DataItem IV0HW00 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CENTURY
DataItem IV0HWCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DAY
DataItem IV0HWDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DBII FORMAT DATE
DataItem IV0HWDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// RE-FORMATTED DAY
DataItem IV0HWFDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// RE-FORMATTED DATE
DataItem IV0HWFDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// RE-FORMATTED MONTH
DataItem IV0HWFMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem IV0HWFYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORKING STORAGE REC
DataItem IV0HWGRP char(22)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MONTH
DataItem IV0HWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// TOTAL HANDLING CHARGES
DataItem IV0HWTHD decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// YEAR
DataItem IV0HWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

