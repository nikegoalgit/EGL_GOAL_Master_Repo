package iv0m;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import iv.common.*;

//*** PROGRAM=IV0M ****
// 09-27-90  jwood  added xssegtr logic per standards....
// 07-21-00  gnathe changed iv0m to execute in pused0-conversat
//                  ional mode from conversational mode
// *********************
Program IV0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "IV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  IV0MW01 IV0MW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use IV0MT {deleteAfterUse = yes}; // table
  use IV0MM.IV0MM020 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    IV0M010: IV0M010();
     /* *************************************************************/
     /* *****          f  l  o  w      s  t  a  g  e           ******/
     /* *************************************************************/


    goto IV0M020;


     /* *************************************************************/
     /* *****   e  n  d       f  l  o  w       s  t  a  g  e   ******/
     /* *************************************************************/
    IV0M020: IV0M020();
     /* *************************************************************/
     /* *****             f l o w     s t a g e                ******/
     /* *************************************************************/

     /* GET KU0M.KU0M005*/



        /* branch to converse*/

    goto IV0M020; /* branch to converse*/



  end // end main
end // end IV0M

// first time thru logic
Function IV0M010()




  XSENTRY();
    /* set segmented transaction id*/
  XSSEGTR();

  set IV0MW01 empty;





end // end IV0M010

// converse menu
Function IV0M020()
  IV0MM020.IV0MMDT = VGVar.currentShortGregorianDate;
  IV0MW01.IV0MWNDX = 01;
  while (IV0MW01.IV0MWNDX <= 26
   && IV0MT.IV0MTOCD[IV0MWNDX] != 99)
    IV0MM020.IV0MTOCD[IV0MWNDX] = IV0MT.IV0MTOCD[IV0MWNDX];
    IV0MM020.IV0MTCDD[IV0MWNDX] = IV0MT.IV0MTCDD[IV0MWNDX];
    IV0MWNDX = IV0MWNDX + 1;
  end
  if (IV0MWNDX <= 14)
    set IV0MM020.IV0MMHD1 skip, invisible;
                                   /* remove second column header*/
    set IV0MM020.IV0MMHD2 skip, invisible;
                                   /* remove second column header*/
  end

  IV0MM020.IV0MMSEL = 1;

  converse IV0MM020 ;



      /* clear message fields*/

  IV0MM020.VAGen_EZEMSG = " "; /* clear err msg*/
  IV0MM020.IV0MMMSG = " "; /* clear err msg*/


      /* check and process valid aid key requests*/

      /* enter - continue processing*/
        /* pa2 - abort*/
        /* pf1 - transfer to help application*/
        /* pf3 - transfer to next level up application*/
        /* pf4 - transfer to master menu application*/

  if (converseVar.eventKey is enter)
     /* ** next sentence ** continue processing ***/
  else
    if (converseVar.eventKey is pa2) /* check for system exit*/
      exit program;
    else
      if (converseVar.eventKey is pf1) /* check for system help*/
        XSPF1(); /* help facility*/
        IV0MM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
        COMMAREA.CATOAP = " "; /* clear app*/
        exit stack;
      else
        if (converseVar.eventKey is pf3) /* check for master menu level*/
          XSPF4();
          IV0MM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
          COMMAREA.CATOAP = " "; /* clear app*/
          exit stack;
        else
          if (converseVar.eventKey is pf4) /* check for master menu*/
            XSPF4(); /* invoke master menu request*/
            IV0MM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
            COMMAREA.CATOAP = " "; /* clear app*/
            exit stack;
          else
            IV0MM020.VAGen_EZEMSG = "INVALID KEY PRESSED - RETRY";
            exit stack;
          end
        end
      end
    end
  end


      /* reset map attributes*/

  set IV0MM020.IV0MMSEL cursor, normal;
  set IV0MM020.IV0MMOPT normal;
  set IV0MM020.IV0MMITM normal;


      /* save next item if entered*/

  if (IV0MM020.IV0MMITM is modified) /* has field been changed?*/
    COMMAREA.CAITEM = IV0MM020.IV0MMITM; /* save reqstd item*/
  end


      /* process selected application*/

  COMMAREA.CAUSERA = " ";
  if (IV0MM020.IV0MMSEL == 0) /* null?*/
      /* ** next sentence ** ignore field ***/
  else
    if (IV0MM020.IV0MMSEL in IV0MT.IV0MTOCD)
      COMMAREA.CATOAP = IV0MT.IV0MTTAP[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0) /* test for not found in table*/
      IV0MM020.VAGen_EZEMSG = "INVALID APPLICATION SELECTED - REENTER";
      set IV0MM020.IV0MMSEL modified, bold; /* field error*/
      exit stack; /* branch to flow*/
    else
      if (IV0MM020.IV0MMSEL == 03)
        COMMAREA.CAUSERA = "Y";
      end
    end
  end


      /* if no application was selected and fast path was not*/
      /* entered, then ask user to select an application*/

  if (IV0MM020.IV0MMSEL <= 0 /* if no selection then tell user*/
   && IV0MM020.IV0MMOPT <= " ")
    IV0MM020.VAGen_EZEMSG = "PLEASE SELECT AN APPLICATION";
    exit stack; /* branch to flow*/
  end


      /* if application selected and fast path entered,*/
      /* then ask user to erase one*/

  if (IV0MM020.IV0MMSEL > 0 /* if both selected then tell user*/
   && IV0MM020.IV0MMOPT > " ")
    set IV0MM020.IV0MMSEL modified, bold; /* field error*/
    set IV0MM020.IV0MMOPT modified, bold; /* field error*/
    IV0MM020.IV0MMMSG = "CANNOT SELECT OPTION AND AN APPLICATION";
    IV0MM020.VAGen_EZEMSG = "PLEASE ERASE ONE";
    COMMAREA.CATOAP = " "; /* clear appl*/
    exit stack; /* branch to flow*/
  end


      /* all edits are good at this point*/

      /* if an applicaton was not selected and the fast*/
      /* path was entered, then use the fast path*/

  if (COMMAREA.CATOAP <= " ") /* if appl not selected*/
    COMMAREA.CATOAP = IV0MM020.IV0MMOPT; /* set application*/
  end

     /* **********************************************************/
     /* 11-12-87 add edit of option/item fastpath pair.*/
     /* test map.option since commarea.option may have appl i.d.*/
     /* from select table, iv0mt.*/
     /* both commarea.option & item already contain the map data.*/

  if (IV0MM020.IV0MMOPT != " " /* if user tries fastpath,*/
   || COMMAREA.CAITEM != " ") 
    IV0MSFP(); /* edit option/item*/
    if (converseVar.validationMsgNum == 0)
      XSEXIT(); /* exit application*/
      IV0MM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
      COMMAREA.CATOAP = " "; /* clear app*/
      if (IV0MM020.IV0MMOPT > " ") /* was appl entered*/
        set IV0MM020.IV0MMOPT cursor, modified, bold; /* yes, set option*/
      else
        set IV0MM020.IV0MMSEL modified, bold; /* set select*/
      end
    end
    exit stack; /* re-show map with error*/
  end
     /* **********************************************************/


      /* all is good; check for transfer*/

  if (converseVar.eventKey is enter)
    if (COMMAREA.CATOAP > " ") /* transfer to appl?*/
      XSEXIT(); /* pass control to exit routine*/
      IV0MM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
      COMMAREA.CATOAP = " "; /* clear app*/
      if (IV0MM020.IV0MMOPT > " ") /* was appl entered*/
        set IV0MM020.IV0MMOPT cursor, modified, bold; /* yes, set option*/
        exit stack;
      else
        set IV0MM020.IV0MMSEL modified, bold; /* set select*/
        exit stack;
      end
    end
  end



end // end IV0M020

// edit fastpath option/item
Function IV0MSFP()
   /* GET XSIVXF*/
   /* *************************************************************/
   /* *****    validate option/item pair      11-12-87       ******/
   /* *************************************************************/

  if (COMMAREA.CATOAP == " ") /* 11-12-87 item requires option*/
    if (COMMAREA.CAITEM != " ")
      set IV0MM020.IV0MMOPT cursor, bold; /* 11-12-87*/
      converseLib.validationFailed(45); /* item data invalid*/
    end
  end


   /* *************************************************************/
   /* *****    Check if transfer outside of "IV" system.     ******/
   /* *****    If so..... no edit.                           ******/
   /* *****    If not.... give approp message.     11-12-87  ******/
   /* *************************************************************/

  if (COMMAREA.CATOSYS != COMMAREA.CACURSYS)
     /* next sentence*/
  else
    if (COMMAREA.CAITEM == " ") /* 11-12-87 no item entered*/
      if (COMMAREA.CATOAP == "IV0D")
        set IV0MM020.IV0MMITM cursor, bold; /* 11-12-87*/
        converseLib.validationFailed(51); /* ord #req'd for xfer within ivc inq*/
      else
        if (COMMAREA.CATOAP == "IV0E") /* 11-12-87*/
          set IV0MM020.IV0MMOPT cursor, bold; /* 11-12-87*/
          converseLib.validationFailed(52); /* 11-12-87 cant go to iv0e*/
        else
          if (COMMAREA.CATOAP == "IV0A" /* 11-12-87 select menu*/
           || COMMAREA.CATOAP == "IV0M" /* 11-12-87 system menu*/
           || COMMAREA.CATOAP == "IV0S") /* 11-12-87 sales rep override*/
            /* next sentence 11-12-87*/
          else
            set IV0MM020.IV0MMITM cursor, bold; /* 11-12-87*/
            converseLib.validationFailed(49); /* ivc #req'd for xfer within ivc inq*/
          end
        end
      end
    end
  end


end // end IV0MSFP

//*** RECORD=IV0MW01 ****
// this is the working storage for the csp application ku0a
// ***********************
Record IV0MW01 type basicRecord
  5 IV0MWNDX IV0MWNDX ; 
  5 IV0MWGRP IV0MWGRP ; 
    7 IV0MWKEY IV0MWKEY ; 
      10 IV0MWCID IV0MWCID ; 
      10 IV0MWSID IV0MWSID ; 
      10 IV0MWDID IV0MWDID ; 
      10 IV0MWGID IV0MWGID ; 
    7 IV0MWERR IV0MWERR ; 
end // end IV0MW01

// company id
DataItem IV0MWCID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// dept id
DataItem IV0MWDID num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem IV0MWERR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end
// gen prod class code
DataItem IV0MWGID char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem IV0MWGRP char(19)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// customer key
DataItem IV0MWKEY char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table index
DataItem IV0MWNDX num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// store id
DataItem IV0MWSID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

