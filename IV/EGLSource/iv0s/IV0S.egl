package iv0s;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSIVSN4;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXADDR1;
import corpcom7.XXXADDR2;
import corpcom7.XXXADDR3;
import corpx1.XCTCD;
import corpx1.XGPCD;
import corpx1.XGPTBL;
import corpx1.XNXTBL;
import corpx1.XOBTBL;
import corpx1.XOCTBL;
import corpx2.XNXCD;
import corpx2.XOBCD;
import corpx2.XOCCD;
import corpx2.XSTCD;
import corpx2.XXXCITY;
import corpx2.XXXZIP;
import corpy2.YSBCD;
import corpy2.YSBTBL;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import iv.common.IV0IVCDT;
import iv.common.IV0IVCID;
import iv.common.IVYREC;
import iv.common.IVZREC;
import ku.common.KUCCOID;
import ku.common.KUCREC;
import ku.common.KUJREC;
import ku.common.KUMREC;
import ku.common.KUMSTRID;
import ku.common.KUNREC;
import ku.common.KUSTEXT1;
import ku.common.KUSTEXT2;
import op.common.OP-ENTR-DT;
import op.common.OP-SREP-OVRD-FL;
import op.common.OP1CUOID;
import op.common.OP1NORID;
import op.common.OP1PARTN;
import op.common.OP1REC;
import sm.common.SM1AGYID;
import sm.common.SM4REC;
import sm.common.SM4REPID;
import sm.common.SM5REC;
import sp.common.SP1ABRV;
import sp.common.SP1ID;
import sp.common.SP1REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
//*** PROGRAM=IV0S ****
// ************************************************************
// *****  S A L E S R E P    O V E R R I D E   ( S R O )  *****
// *****            P R O C E S S   ( I V 0 S )           *****
// ************************************************************
// 
//                  WRITTEN BY: GRANT GILRAY
//                DATE WRITTEN: OCTOBER 1986
// 
// 
// THIS APPLICATION ALLOWS A QUALIFIED USER TO VIEW ALL THE
// INVOICES WHICH WERE PLACED IN THE SUSPENSE FILE BY THE
// NIGHTLY INVOICING JOB BECAUSE THE SALES REP ON THE ORDER DID
// NOT MATCH THE SALES REP ON THE CUSTOMER FILE FOR THE GIVEN
// ORDER. THIS APPLICATION ALSO ALLOWS A QUALIFIED USER TO
// UPDATE THE SUSPENDED INVOICE ( AND THE ORDER AT THE SAME
// TIME ) BEFORE THE NEXT NIGHTLY INVOICING JOB RUNS.
// 
// maintenance log
// date   changer reason
// 040690 fjelli  multiple sales reps
// 092390 jwood   xssegtr and noncsp call option logic added
// 02/15/91 lgross  removed xzstbl and xzwtbl
// 05/13/91 lgross  removed split agency and rep logic
// 08/29/91 lgross  added io0290 to find dept name rather
//                  than using corporate table
// 09/05/91 lgross  changed iv0sm040 to display company number
//                  and customer number rather than sales
//                  program and invoice number
// 09/14/92 jhecke  the rep name is no longer found on
//                  dslsmn.vragcy01.  instead must come from
//                  dslsmn.vreps001. iv0ss661,iv0s050.
// 10/16/92 lgross  Application will now display order entered
//                  date rather than order received date.
//                  Application will also display op-srep-ovrd-
//                  fl  Changes:  iv0sm040, iv0sm060, iv0s050
//                  iv0ss21, iv0ss75, iv0sw04, iv0ss41
// 08/23/93 vcowan  chg iv0sm040 & iv0sm060 to be compatible to
//                  csp4.1 code
// ************************************************************
// *********************
Program IV0S type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "IV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  IV0SW01 IV0SW01; // record
  IV0SW02 IV0SW02; // record
  IV0SW03 IV0SW03; // record
  IV0SW04 IV0SW04; // record
  IV0SW06 IV0SW06; // record
  IV0SW07 IV0SW07; // record
  IV0SW08 IV0SW08; // record
  IV0SW09 IV0SW09; // record
  IV1REC IV1REC; // record
  IV2REC IV2REC; // record
  IVYREC IVYREC; // record
  IVZREC IVZREC; // record
  KUCREC KUCREC; // record
  KUJREC KUJREC; // record
  KUMREC KUMREC; // record
  KUNREC KUNREC; // record
  OP1REC OP1REC; // record
  SM4REC SM4REC; // record
  SM5REC SM5REC; // record
  SP1REC SP1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XNXTBL {deleteAfterUse = yes}; // table
  use XOCTBL {deleteAfterUse = yes}; // table
  use XOBTBL {deleteAfterUse = yes}; // table
  use YSBTBL; // table
  use IV0SM.IV0SM001,  // forms
      IV0SM.IV0SM040, 
      IV0SM.IV0SM060
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    IV0S010: IV0S010();
     /* *************************************************************/
     /* *****              f l o w     s t a g e               ******/
     /* *************************************************************/
    ;
    ;
    goto IV0S011; /* PROCEED TO NEXT PROCESS*/
    ;
    ;
     /* *************************************************************/
     /* *****          e n d    f l o w     s t a g e          ******/
     /* *************************************************************/
    IV0S011: IV0S011();
     /* *************************************************************/
     /* *****              F L O W     S T A G E               ******/
     /* *************************************************************/
    ;
    ;
    goto IV0S012;
    ;
    ;
     /* *************************************************************/
     /* *****         E N D     F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0S012: IV0S012();
     /* *************************************************************/
     /* *****              F L O W     S T A G E               ******/
     /* *************************************************************/
    ;
    ;
    if (converseVar.validationMsgNum == 0)
      if (converseVar.eventKey is enter)
        if (IV0SM001.IV0SMFAG != " ")
          goto IV0S020;
        else
          if (IV0SW06.IV1SAGY2[1] > " ")
            /* next sentence*/
          else
            goto IV0S015;
          end
        end
      end
    end
    goto IV0S012;
    ;
    ;
     /* *************************************************************/
     /* *****         E N D     F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0S015: IV0S015();
     /* *************************************************************/
     /* *****              F L O W     S T A G E               ******/
     /* *************************************************************/
    ;
    ;
    goto IV0S012; /* proceed to next process*/
    ;
    ;
     /* *************************************************************/
     /* *****         E N D     F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0S020: IV0S020();
     /* *************************************************************/
     /* *****              f l o w     s t a g e               ******/
     /* *************************************************************/
    ;
    ;
    goto IV0S030; /* PROCEED TO NEXT PROCESS*/
    ;
    ;
     /* *************************************************************/
     /* *****          e n d    f l o w     s t a g e          ******/
     /* *************************************************************/
    IV0S030: IV0S030();
     /* *************************************************************/
     /* *****              f l o w     s t a g e               ******/
     /* *************************************************************/
    ;
    ;
    goto IV0S040; /* to converse/edit company address*/
    ;
    ;
     /* *************************************************************/
     /* *****          e n d    f l o w     s t a g e          ******/
     /* *************************************************************/
    IV0S040: IV0S040();
     /* *************************************************************/
     /* *****              F L O W     S T A G E               ******/
     /* *************************************************************/
    ;
    ;
    IV0SW01.IV0SWCFN = " "; /* initialize current function ind to '*/
                                     /* '*/
    if (converseVar.eventKey is pa1 /* if pa1 was pressed*/
     || converseVar.eventKey is pa2) /* or pa2 was pressed*/
      goto IV0S080; /* goto end-of-process(no warning)*/
    end /* end of "if" statement*/
    if (converseVar.validationMsgNum == 0) /* if no previous errors*/
      ;
      if (converseVar.eventKey is pf3) /* if pf3 was pressed*/
        if (IV0SW01.IV0SWWP3 == "Y") /* if warning already sent*/
          goto IV0S012;
        else /* else(warn not yet sent)*/
          converseLib.validationFailed(16); /* warning message*/
          IV0SW01.IV0SWWP3 = "Y"; /* set warning-sent-flag*/
        end /* end of "of" statement*/
      else /* else(pf3 not pressed)*/
        IV0SW01.IV0SWWP3 = "N"; /* set warning-sent-flag 'n'*/
      end /* end of "if" statement*/
      ;
      if (converseVar.eventKey is pf12) /* if update requested*/
        goto IV0S070; /* goto update process*/
      else /* else(update not requested)*/
        if (converseVar.eventKey is enter) /* if "enter" pressed*/
          /* *****  check all "selection" codes for "s" or "a" ******/
          IV0SW01.IV0SWNDX = 1; /* initialize index to 1*/
          while (IV0SW01.IV0SWNDX <= 14 /* loop thru screen*/
           && IV0SW01.IV0SWNDX <= IV0SW01.IV0SWLND)
            if (IV0SM040.IV0SMSEL[IV0SWNDX] == "S")
              IV0SW01.IV0SWHDX = IV0SW01.IV0SWNDX; /* save current index nbr*/
              goto IV0S050; /* goto detail process*/
            else /* else(selection not "s")*/
              if (IV0SM040.IV0SMSEL[IV0SWNDX] == "A")
                IV0SW01.IV0SWHDX = IV0SW01.IV0SWNDX; /* save current index nbr*/
                IV0SW01.IV0SWCFN = "A"; /* save current function code*/
                goto IV0S050; /* goto detail process*/
              else /* else(selection not "a")*/
                /* next sentence      ;          okay*/
              end /* end of "if" statement*/
            end /* end of "if" statement*/
            IV0SW01.IV0SWNDX = IV0SW01.IV0SWNDX + 1; /* incement index*/
          end /* end of "while" loop*/
        end /* end of "if" statement*/
      end /* end of "if" statement*/
    end /* end of "if" statement*/
    goto IV0S040; /* goto top of detail process*/
    ;
    ;
     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0S050: IV0S050();
     /* *************************************************************/
     /* *****              F L O W     S T A G E               ******/
     /* *************************************************************/
    ;
    ;
    goto IV0S060; /* to converse/edit company setup*/
    ;
    ;
     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0S060: IV0S060();
     /* *************************************************************/
     /* *****              F L O W     S T A G E               ******/
     /* *************************************************************/
    ;
    ;
    if (converseVar.eventKey is pa1 /* if pa1 is last key pressed*/
     || converseVar.eventKey is pa2) /* or pa2 is last key pressed*/
      goto IV0S080; /* goto end of application(no warning)*/
    else /* else(other than pa1 or pa2)*/
      if (converseVar.validationMsgNum == 0) /* if no previous errors*/
        if (converseVar.eventKey is pf3) /* if pf3 pressed*/
          goto IV0S040; /* goto detail map process*/
        end /* end of "if" statement*/
        if (converseVar.validationMsgNum == 0) /* if no previous error*/
          if (converseVar.eventKey is enter) /* if this screen finished*/
            /* *********************************************************/
            /* ***** loop thru all lines on detail screen looking ******/
            /* ***** for an "s" or an "a"                         ******/
            /* *********************************************************/
            IV0SW01.IV0SWNDX = IV0SW01.IV0SWHDX + 1;
            if (IV0SW01.IV0SWCFN == "A") /* if selection = "a"*/
              ;
              /* ***** if current detail less than last TSQ ******/
              if (IV0SW01.IV0SWCUR < IV0SW01.IV0SWMAX)
                ;
                /* ***** set index to correct detail line #*/
                IV0SW01.IV0SWHDX = IV0SW01.IV0SWNDX;
                goto IV0S050; /* goto detail process*/
              else /* else(all SRO's examined)*/
                goto IV0S040; /* goto summary screen*/
              end /* end of "if" statement*/
            else /* else(selection not - 'a')*/
              ;
              /* ***** loop thru remainder of details looking for "s"*/
              while (IV0SW01.IV0SWNDX <= IV0SW01.IV0SWLND)
                ;
                /* ***** if a selection with "s" found ******/
                if (IV0SM040.IV0SMSEL[IV0SWNDX] == "S")
                  ;
                  /* ***** set index to detail line number ******/
                  IV0SW01.IV0SWHDX = IV0SW01.IV0SWNDX;
                  goto IV0S050; /* goto detail process*/
                else /* else(selection not = 's')*/
                  ;
                  /* ***** increment index by 1 ******/
                  IV0SW01.IV0SWNDX = IV0SW01.IV0SWNDX + 1;
                end /* end of "if" statement*/
              end /* end of "if" statement*/
            end /* end of "if" statement*/
            goto IV0S040; /* goto summary screen process*/
          else /* else(operator not finished)*/
            goto IV0S060; /* return to detail process)*/
          end /* end of "if" statement*/
        else /* else(errors on screen)*/
          goto IV0S060; /* return to detail process*/
        end /* end of "if" statement*/
      else
        goto IV0S060;
      end
    end /* end of "if" statement*/
    ;
    ;
     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0S070: IV0S070();
     /* *************************************************************/
     /* *****               F L O W    S T A G E               ******/
     /* *************************************************************/
    ;
    ;
    if (IV0SW01.IV0SWUPE == "Y") /* if DB has been updated since last*/
      goto IV0S040; /* goto summary screen process*/
    else /* else(DB updated okay)*/
      converseLib.validationFailed(14); /* message "db updated"*/
      IV0SW01.IV0SWLUP = 9999; /* initiate low update line #*/
      IV0SW01.IV0SWHUP = 0; /* initiate high update line #*/
      IV0SW01.IV0SWPFS = 0;
      goto IV0S040; /* proceed to next process*/
    end /* end of "if" statement*/
    ;
    ;
     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0S080: IV0S080();
     /* *************************************************************/
     /* *****               F L O W    S T A G E               ******/
     /* *************************************************************/
    ;
    ;
    goto IV0S030; /* return to first process in appl*/
    ;
    ;
     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
  end // end main
end // end IV0S

// INITIATE WORKING STORAGE RECS
Function IV0S010()
  ;
  ;
   /* *************************************************************/
   /* ****  I N I T I A T E    W O R K I N G    S T O R A G E *****/
   /* ****              R E C O R D S    H E R E              *****/
   /* *************************************************************/
  ;
  ;
  XSENTRY(); /* standard entry sgrp*/
  XSSEGTR(); /* set segmented tran id*/
  ;
   /* ******* initialize all records ******/
  set ERRSQLCA empty;
  set IVYREC empty;
  set IVZREC empty;
  set IV0SW01 empty;
  set IV0SW02 empty;
  set IV0SW03 empty;
  set IV0SW04 empty;
  set IV0SW06 empty;
  set IV0SW07 empty;
  set IV0SW08 empty;
  set IV0SW09 empty;
  set IV1REC empty;
  set IV2REC empty;
  set KUCREC empty;
  set KUMREC empty;
  set KUNREC empty;
  set OP1REC empty;
  set SM4REC empty;
  set SM5REC empty;
  set SP1REC empty;
  set SQLCA empty;
  set TA1REC empty;
  set TA2REC empty;
  ;
   /* ***** initialize maps ******/
  set IV0SM001 empty;
  set IV0SM040 empty;
  set IV0SM060 empty;
  ;
   /* ***** move data passed from calling appl to working storage*/
  IV0SW01.IV0SWFGP = COMMAREA.CAUSERA;
  ;
   /* ***** initialize lowest and highest tsq changed flags*/
  IV0SW01.IV0SWLUP = 9999; /* initialize lowest to 9999*/
  IV0SW01.IV0SWHUP = 0; /* initialize highest to 0*/
  ;
   /* ***** initialize first entry on iv0sm001 to 1 *********/
  IV0SW07.IV0SW6FS = 1;
  ;
  ;
  ;
end // end IV0S010

// INITIATE SELECTION MENU
Function IV0S011()
  ;
  ;
   /* *************************************************************/
   /* *****  I N I T I A L I Z E   S U M M A R Y   M E N U   ******/
   /* *************************************************************/
  ;
  ;
  set IV0SM001 initial; /* clear map*/
  IV0SM001.IV1CHGBY = COMMAREA.CAUSERID;
  IV0SM001.IV0SMDT = VGVar.currentShortGregorianDate; /* move sys date to map*/
  ;
  ;
  ;
  ;
  ;
end // end IV0S011

// DISPLAY AGENCY MENU
Function IV0S012()
   /* *************************************************************/
   /* *****            B E F O R E     S T A G E             ******/
   /* *************************************************************/
  ;
  ;
  if (IV0SW06.IV1SAGY2[1] > " ") /* if program already has tbl*/
    if (IV0SW07.IV0SW6CR != IV0SW07.IV0SW6FS) /* if curr first not equal*/
                                   /* ;  proposed first*/
      IV0SW07.IV0SW6CR = IV0SW07.IV0SW6FS;
      IV0SW07.IV0SW7DX = IV0SW07.IV0SW6FS; /* initialize index to 1st*/
      while (IV0SW06.IV1SAGY2[IV0SW7DX] > " ")
                                    /* ;  while not at end of tbl*/
        IV0SM001.IV0SMVFL[IV0SW7DX] = IV0SW06.IV0SWVFL[IV0SW7DX];
        IV0SM001.IV1SAGY2[IV0SW7DX] = IV0SW06.IV1SAGY2[IV0SW7DX];
        IV0SM001.IV0SMNEX[IV0SW7DX] = IV0SW06.IV0SWNEX[IV0SW7DX];
        IV0SW07.IV0SW7DX = IV0SW07.IV0SW7DX + 1;
      end
    end
  end
   /* *************************************************************/
   /* *************************************************************/
   /* *****        C O N V E R S E     S C R E E N           ******/
   /* *************************************************************/
   /* *************************************************************/
  converse IV0SM001 ;
  ;
  ;
  IV0SSMP();
  ;
  if (converseVar.validationMsgNum == 0)
    if (converseVar.eventKey is pf7)
      if (IV0SW07.IV0SW6FS <= 1)
        converseLib.validationFailed(4);
      else
        if (IV0SW07.IV0SW6FS <= 78)
          IV0SW07.IV0SW6FS = 1;
        else
          IV0SW07.IV0SW6FS = IV0SW07.IV0SW6FS - 78;
        end
      end
    end
    ;
    if (converseVar.eventKey is pf8)
      IV0SW07.IV0SW7DX = IV0SW07.IV0SW6FS + 78;
      if (IV0SW07.IV0SW7DX > IV0SW07.IV0SW6LS)
        converseLib.validationFailed(5);
      else
        IV0SW07.IV0SW6FS = IV0SW07.IV0SW6FS + 78;
      end
    end
  end
  ;
  ;
end // end IV0S012

// GET SRO DATABASE SUMMARY
Function IV0S015()
  ;
  ;
   /* *************************************************************/
   /* *****      G E T    S R O     D A T A B A S E          ******/
   /* *****                S U M M A R Y                     ******/
   /* *****                                                  ******/
   /* ***** IF TEMP STORAGE QUEUE FOR THIS SESSION DOES      ******/
   /* ***** NOT ALREADY EXIST.......                         ******/
   /* ***** CALL SPECIALIZED IO-MODULE, WHICH RETURNS A LIST ******/
   /* ***** OF ALL AGENCYS IN SRO DATABASE AND THE NUMBER    ******/
   /* ***** OF EXCEPTIONS FOR EACH AGENCY.                   ******/
   /* ***** LOAD EACH ENTRY (RETURNED BY SPECIALIZED IO-MOD) ******/
   /* ***** INTO TSQ ( NAME: IV1S)                           ******/
   /* *************************************************************/
  ;
  ;
  if (IV0SW01.IV0SWFLG != " ")
    call "IV1090" ("T2", SQLCA, IV0SW06) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE != 0)
      /* *****************************************************/
      /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
      /* *****************************************************/
      TA1REC.TA1PGMNM = "IV0S"; /* 10-30-87*/
      TA1REC.TA1MAP = " "; /* 10-3-87*/
      TA1REC.TA1DBASE = "DINVC";
      TA1REC.TA1TBLVU = "VSROVR01";
      TA1REC.TA1LOCAT[3] = "IV0S015";
      TA1REC.TA1LOCAT[4] = "IV1090";
      TA1REC.TA1TYPE = "DB2"; /* abend type*/
      TA1REC.TA1FUNC = "RETN"; /* abend func*/
      set ERRSQLCA empty; /* clear area*/
      move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* synpoint rollback*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end
      COMMAREA.CAUSERA = " "; /* clear user commarea*/
      XSPF4(); /* master menu*/
      exit program; /* master menu failure*/
      /* *****************************************************/
    end
  else
    call "IV1090" ("T1", SQLCA, IV0SW06) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE != 0)
      /* *****************************************************/
      /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
      /* *****************************************************/
      TA1REC.TA1PGMNM = "IV0S"; /* 10-30-87*/
      TA1REC.TA1MAP = " "; /* 10-3-87*/
      TA1REC.TA1DBASE = "DINVC";
      TA1REC.TA1TBLVU = "VSROVR01";
      TA1REC.TA1LOCAT[3] = "IV0S015";
      TA1REC.TA1LOCAT[4] = "IV1090";
      TA1REC.TA1TYPE = "DB2"; /* abend type*/
      TA1REC.TA1FUNC = "RETN"; /* abend func*/
      set ERRSQLCA empty; /* clear area*/
      move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* synpoint rollback*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end
      COMMAREA.CAUSERA = " "; /* clear user commarea*/
      XSPF4(); /* master menu*/
      exit program; /* master menu failure*/
      /* *****************************************************/
    end
  end
end // end IV0S015

// READ DB AND LOAD TS QUEUE
Function IV0S020()
  ;
  ;
   /* *************************************************************/
   /* *****  R E A D    D B    A N D    L O A D    T E M P   ******/
   /* *****          S T O R A G E    Q U E U E              ******/
   /* *************************************************************/
  ;
  ;
  IV0SW01.IV0SWPFS = 0;
                                   /* initialize previous fst map entry*/
  IV0SW01.IV0SWMAX = 0; /* initialize max TSQ entry nbr*/
  IV0SW08.IV0SW8FT = IV0SM001.IV0SMFAG;
  IV0SW08.IV0SW8LT = IV0SM001.IV0SMLAG;
  if (IV0SW01.IV0SWFLG != " ")
    call "IV1090" ("S2", SQLCA, IV0SW08, IV2REC) {isNoRefresh = yes, isExternal = yes};
  else
    call "IV1090" ("S1", SQLCA, IV0SW08, IV2REC) {isNoRefresh = yes, isExternal = yes};
  end
                                 /* ;     select set suspense tbl*/
  if (SQLCA.VAGen_SQLCODE != 0) /* if none-zero return code*/
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1PGMNM = "IV0S"; /* 10-30-87*/
    TA1REC.TA1MAP = " "; /* 10-30-87*/
    TA1REC.TA1DBASE = "DINVC";
    TA1REC.TA1TBLVU = "VSROVR01";
    TA1REC.TA1TBLKE = IV2REC.IV2GRP;
    TA1REC.TA1LOCAT[3] = "IV0S020";
    TA1REC.TA1LOCAT[4] = "IV1090";
    IV0SS98();
    /* *****************************************************/
  else /* else(return code was 0)*/
    IV0SW03.IV0SWAPL = "IV0S"; /* assign application id*/
    IV0SW03.IV0SWFUN = "P";
                                   /* move 'purge queue' to function cd*/
    call "TA0050" (IV0SW02, IV0SW03) {isNoRefresh = yes, isExternal = yes};
                                 /* ;       call temp storage pgm*/
                                 /* ;       to delete temp storage*/
    if (IV0SW03.IV0SWRTN != 0) /* if purge not successful*/
      /* *****************************************************/
      /* *****  THIS IS APPL ERROR PROCESSING CODE      ******/
      /* *****************************************************/
      TA1REC.TA1PGMNM = "IV0S"; /* 10-30-87*/
      TA1REC.TA1MAP = " "; /* 10-30-87*/
      TA1REC.TA1DBASE = " ";
      TA1REC.TA1TBLVU = " ";
      IV0SW09.IV0SWER1 = "TA0050 RETURN CODE = ";
      IV0SW09.IV0SWEM2 = "FROM PURGE OF TSQ";
      IV0SW09.IV0SWER2 = IV0SW03.IV0SWRTN;
      TA1REC.TA1LOCAT[3] = "IV0S020";
      TA1REC.TA1LOCAT[4] = "TA0050";
      IV0SSDQ(); /* delete TSQ before exit*/
      TA1REC.TA1TYPE = "APPL"; /* abend type*/
      TA1REC.TA1FUNC = "RETN"; /* abend func*/
      set ERRSQLCA empty; /* clear area*/
      move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* synpoint rollback*/
      try
        call "TA0020" (TA1REC, IV0SW09) {isExternal = yes};
      end
      COMMAREA.CAUSERA = " "; /* clear user commarea*/
      XSPF4(); /* master menu*/
      exit program; /* master menu failure*/
      ;
      /* *****************************************************/
    else /* else(purge successful)*/
      IV0SW04.IV0SW04G = " "; /* initialize rest of record*/
      IV0SW03.IV0SWCNT = 0; /* initialize rec count*/
      ;
      if (IV0SW01.IV0SWFLG != " ")
        call "IV1090" ("N2", SQLCA, IV0SW08, IV2REC) {isNoRefresh = yes, isExternal = yes};
      else
        call "IV1090" ("N1", SQLCA, IV0SW08, IV2REC) {isNoRefresh = yes, isExternal = yes};
      end
                                 /* ;         fetch first record*/
      if (SQLCA.VAGen_SQLCODE == 0 /* if DBII call okay*/
       || SQLCA.VAGen_SQLCODE == 100) /* or 'record not found'*/
        while (SQLCA.VAGen_SQLCODE == 0) /* while DBII rtrn code okay*/
          IV0SW01.IV0SWSSF = "N"; /* initialize subset flag off*/
          /* IF IV2REC.KUNWSID EQ IV2REC.SM1AGYID; if cust matches order*/
            /* AND IV2REC.KUNWSRID EQ IV2REC.SM4REPID;*/
            /* MOVE 'Y' TO IV0SW01.IV0SWSSF;  turn subset flag on*/
          /* END ;*/
          /* IF IV2REC.IV1PRVAC NE ' ';       if not worked on before*/
            /* MOVE 'Y' TO IV0SW01.IV0SWSSF;  turn subset flag on*/
          /* END                     ;       end of "if" statement*/
          /* IF IV0SW01.IV0SWFLG NE ' ';      if limited display request*/
            /* AND IV0SW01.IV0SWSSF EQ 'Y';     and this SRO already ok*/
            /* ;next sentence                   don't add to TSQ*/
          /* ELSE                    ;         else(add SRO to TSQ)*/
          ;
          /* ********** THIS CODE NO LONGER NEDDED GHG 03/06/87 **********/
          /* ********************************************/
          /* ***** get abrv name for sales program ******/
          /* ********************************************/
          /* MOVE IV2REC.SP1ID TO SP1REC.SP1ID;*/
          /* CALL IO0070 'S ',SQLCA,SP1REC (NOMAPS,noncsp*/
          /* IF SQLCA.SQLCODE NE 0;*/
            /* MOVE ' ' TO IV0SW04.SP1ABRV;*/
          /* ELSE ;*/
            /* MOVE SP1REC.SP1ABRV TO IV0SW04.SP1ABRV;*/
          /* END ;*/
          /* ********************************************/
          ;
          IV0SW04.IV0SWPFN = " ";
                                   /* initialize proposed fields*/
          IV0SW04.IV0SWPAG[1] = " "; /* |*/
          IV0SW04.IV0SWPAG[2] = " "; /* |*/
          IV0SW04.IV0SWPAG[3] = " "; /* |*/
          IV0SW04.IV0SWPRP[1] = 0; /* |*/
          IV0SW04.IV0SWPRP[2] = 0; /* |*/
          IV0SW04.IV0SWPRP[3] = 0; /* |*/
          IV0SW04.IV0SWPPC[1] = 0; /* |*/
          IV0SW04.IV0SWPPC[2] = 0; /* |*/
          IV0SW04.IV0SWPPC[3] = 0; /* |*/
          ;
          /* ********************************************/
          /* MOVE IV2REC.IV2GRP TO IV0SW04.IV2GRP; move row to TSQ rec*/
          IV0SS21(); /* format data onto tsq record*/
          IV0SW02.IV0SWDTA = IV0SW04.IV0SW4GP;
                                   /* move TSQ REC TO data*/
          IV0SW03.IV0SWAPL = "IV0S"; /* assign application id*/
          IV0SW02.IV0SWLEN = 121; /* move 119 to data length*/
          IV0SW03.IV0SWFUN = "A"; /* move 'add data' to*/
          IV0SW03.IV0SWRTN = 0; /* initialize return cd*/
                                     /* ;     function code*/
          call "TA0050" (IV0SW02, IV0SW03) {isNoRefresh = yes, isExternal = yes};
                                 /* ;               call TSQ pgm to insrt*/
          if (IV0SW03.IV0SWRTN != 0) /* if rtrn cd = 0*/
            /* GET COPY*/
            /* *****************************************************/
            /* *****  THIS IS APPL ERROR PROCESSING CODE      ******/
            /* *****************************************************/
            ;
            TA1REC.TA1PGMNM = "IV0S"; /* 10-30-87*/
            TA1REC.TA1MAP = " "; /* 10-30-87*/
            TA1REC.TA1DBASE = " ";
            TA1REC.TA1TBLVU = " ";
            IV0SW09.IV0SWER1 = "TA0050 RETURN CODE = ";
            IV0SW09.IV0SWEM2 = "FROM ADD TO TSQ";
            IV0SW09.IV0SWER2 = IV0SW03.IV0SWRTN;
            TA1REC.TA1LOCAT[3] = "IV0S020";
            TA1REC.TA1LOCAT[4] = "TA0050";
            IV0SSDQ(); /* delete TSQ before exit*/
            TA1REC.TA1TYPE = "APPL"; /* abend type*/
            TA1REC.TA1FUNC = "RETN"; /* abend func*/
            set ERRSQLCA empty; /* clear area*/
            move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
            VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
            VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
            sysLib.rollback();
            VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
             /* synpoint rollback*/
            try
              call "TA0020" (TA1REC, IV0SW09) {isExternal = yes};
            end
            COMMAREA.CAUSERA = " "; /* clear user commarea*/
            XSPF4(); /* master menu*/
            exit program; /* master menu failure*/
            ;
            /* *****************************************************/
          end /* end of "if" sataement*/
          /* END ;*/
          IV0SW04.IV0SW04G = " "; /* INITIALIZE GRP OF DATA*/
          ;
          if (IV0SW01.IV0SWFLG != " ")
            call "IV1090" ("N2", SQLCA, IV0SW08, IV2REC) {isNoRefresh = yes, isExternal = yes};
          else
            call "IV1090" ("N1", SQLCA, IV0SW08, IV2REC) {isNoRefresh = yes, isExternal = yes};
          end
                               /* ;                 fetch next record*/
        end /* end of "while" loop*/
        IV0SW01.IV0SWMAX = IV0SW03.IV0SWCNT;
                                 /* ;             save last TSQ nbr*/
      else
                                   /* else(DBII rtrn cd not okay)*/
        /* *****************************************************/
        /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
        /* *****************************************************/
        TA1REC.TA1PGMNM = "IV0S"; /* 10-30-87*/
        TA1REC.TA1MAP = " "; /* 10-30-87*/
        TA1REC.TA1DBASE = "DINVC";
        TA1REC.TA1TBLVU = "VSROVR01";
        TA1REC.TA1TBLKE = IV2REC.IV2GRP;
        TA1REC.TA1LOCAT[3] = "IV0S020 ";
        TA1REC.TA1LOCAT[4] = "IV1090";
        IV0SS98();
        /* *****************************************************/
      end /* end of "if" sataement*/
    end /* end of "if" statement*/
  end /* end of "if" statement*/
  if (IV0SW01.IV0SWFLG != " ")
    call "IV1090" ("C2", SQLCA, IV0SW08, IV2REC) {isNoRefresh = yes, isExternal = yes};
  else
    call "IV1090" ("C1", SQLCA, IV0SW08, IV2REC) {isNoRefresh = yes, isExternal = yes};
  end
                       /* ;                 fetch next record*/
  if (SQLCA.VAGen_SQLCODE != 0) /* if none-zero return code*/
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1PGMNM = "IV0S"; /* 10-30-87*/
    TA1REC.TA1MAP = " "; /* 10-30-87*/
    TA1REC.TA1DBASE = "DINVC";
    TA1REC.TA1TBLVU = "VSROVR01";
    TA1REC.TA1TBLKE = IV2REC.IV2GRP;
    TA1REC.TA1LOCAT[3] = "IV0S020 ";
    TA1REC.TA1LOCAT[4] = "IV1090";
    IV0SS98();
    /* *****************************************************/
  else /* else(return code was 0)*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* release DBII share locks*/
  end /* end of "if" statement*/
  ;
  ;
  ;
  ;
  ;
end // end IV0S020

// INITIATE SRO SUMMARY MAP
Function IV0S030()
  ;
  ;
   /* *************************************************************/
   /* *****  I N I T I A L I Z E    S R O    S U M M A R Y   ******/
   /* *************************************************************/
  ;
  ;
  set IV0SM040 initial; /* clear map*/
  IV0SM040.IV1CHGBY = COMMAREA.CAUSERID;
  IV0SM040.IV0SMDT = VGVar.currentShortGregorianDate; /* move sys date to map*/
  IV0SM040.IV0SMFST = 1; /* initialize first on map to 1*/
  ;
  ;
  ;
  ;
  ;
end // end IV0S030

// CONVERSE SRO SUMMARY MAP
Function IV0S040()
  ;
  ;
   /* *************************************************************/
   /* *****     C O N V E R S E    S R O    S U M M A R Y    ******/
   /* *****                      M A P                       ******/
   /* *****           ( B E F O R E    S T A G E )           ******/
   /* *************************************************************/
   /* 10/16/92 lgross replace op1orcdt with op-entr-dt due to*/
   /* database changes*/
   /* ***************************************************************/
  ;
  ;
  if (IV0SM040.IV0SMFST == IV0SW01.IV0SWPFS) /* if no pageing required*/
    /* next sentence                ;           okay*/
  else /* else(build new page)*/
    if (IV0SM040.IV0SMFST <= 0) /* if invalid first TSQ nbr*/
      IV0SM040.IV0SMFST = 1; /* start at beginning*/
    else /* else(TSQ is valid)*/
      /* next sentence              ;             okay*/
    end /* end of "if" statement*/
    IV0SW01.IV0SWPFS = IV0SM040.IV0SMFST; /* set previous first*/
    IV0SW03.IV0SWCNT = IV0SM040.IV0SMFST; /* set TSQ key to first*/
    IV0SW01.IV0SWFST = IV0SM040.IV0SMFST; /* set WS first on map*/
                                 /* ;           required for map*/
    IV0SW01.IV0SWNDX = 1; /* initialize index to 1*/
    while (IV0SW01.IV0SWNDX <= 14 /* loop untill screen full*/
     && IV0SW03.IV0SWCNT <= IV0SW01.IV0SWMAX) /* or end-of-file*/
      set IV0SM040.IV0SMSEL[IV0SWNDX] initialAttributes;
      set IV0SM040.SM1AGYID[IV0SWNDX] initialAttributes;
      set IV0SM040.SM4REPID[IV0SWNDX] initialAttributes;
      IV0SW03.IV0SWAPL = "IV0S";
      IV0SW02.IV0SWLEN = 121;
      IV0SW03.IV0SWFUN = "R";
      IV0SW03.IV0SWRTN = 0;
      call "TA0050" (IV0SW02, IV0SW03) {isNoRefresh = yes, isExternal = yes};
      if (IV0SW03.IV0SWRTN != 0)
        /* GET COPY*/
        /* *****************************************************/
        /* *****  THIS IS APPL ERROR PROCESSING CODE      ******/
        /* *****************************************************/
        ;
        TA1REC.TA1DBASE = " ";
        TA1REC.TA1TBLVU = " ";
        IV0SW09.IV0SWER1 = "TA0050 RETURN CODE = ";
        IV0SW09.IV0SWEM2 = "FROM READ OF TSQ";
        IV0SW09.IV0SWER2 = IV0SW03.IV0SWRTN;
        TA1REC.TA1LOCAT[3] = "IV0S040";
        TA1REC.TA1LOCAT[4] = "TA0050";
        IV0SSDQ(); /* delete TSQ before exit*/
        TA1REC.TA1TYPE = "APPL"; /* abend type*/
        TA1REC.TA1FUNC = "RETN"; /* abend func*/
        set ERRSQLCA empty; /* clear area*/
        move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
         /* synpoint rollback*/
        try
          call "TA0020" (TA1REC, IV0SW09) {isExternal = yes};
        end
        COMMAREA.CAUSERA = " "; /* clear user commarea*/
        XSPF4(); /* master menu*/
        exit program; /* master menu failure*/
        ;
        /* *****************************************************/
      end
      IV0SW04.IV0SW4GP = IV0SW02.IV0SWDTA; /* move data to record*/
      ;
      IV0SS41(); /* move info to screen*/
      IV0SW01.IV0SWNDX = IV0SW01.IV0SWNDX + 1; /* increment map line cnt*/
      IV0SW03.IV0SWCNT = IV0SW03.IV0SWCNT + 1; /* increment TSQ pointer*/
    end /* end of "while" loop*/
    IV0SW01.IV0SWLST = IV0SW03.IV0SWCNT - 1; /* set last TSQ on map nbr*/
    IV0SW01.IV0SWLND = IV0SW01.IV0SWNDX - 1; /* set last map line used nbr*/
    while (IV0SW01.IV0SWNDX <= 14) /* if screen is incomplete*/
      set IV0SM040.IV0SMSEL[IV0SWNDX] skip, invisible; /* CLEAR IT*/
      IV0SM040.IV0SMSEL[IV0SWNDX] = " ";
      IV0SM040.IV1PRVAC[IV0SWNDX] = " ";
      IV0SM040.IV1SAGY2[IV0SWNDX] = " ";
      IV0SM040.IV1SREP2[IV0SWNDX] = " ";
      set IV0SM040.SM1AGYID[IV0SWNDX] skip, invisible;
      IV0SM040.SM1AGYID[IV0SWNDX] = " ";
      set IV0SM040.SM4REPID[IV0SWNDX] skip, invisible;
      IV0SM040.SM4REPID[IV0SWNDX] = " ";
      IV0SM040.OP1CUOID[IV0SWNDX] = " ";
      IV0SM040.OP-ENTR-DT[IV0SWNDX] = " ";
      IV0SM040.KUCCOID[IV0SWNDX] = " ";
      IV0SW01.IV0SWNDX = IV0SW01.IV0SWNDX + 1; /* increment map line cnt*/
    end /* end of "while" loop*/
    ;
    IV0SM040.IV0SMLST = IV0SW03.IV0SWCNT - 1;
                                   /* set 'last entry number' on map*/
    IV0SMTOT = IV0SW01.IV0SWMAX; /* move total nbr*/
  end /* end of "if" statement*/
  if (converseVar.validationMsgNum == 0) /* if no previous errors*/
    set IV0SM040.IV0SMSEL[1] cursor; /* set cursor to first field*/
  end /* end of "if" statement*/
  if (IV0SW01.IV0SWUPE == "Y") /* if DB was altered since update*/
    converseLib.validationFailed(13); /* error "DB has been updated"*/
    set IV0SM040.SM1AGYID[1] skip, modified, bold;
    set IV0SM040.SM4REPID[1] skip, modified, bold;
  end /* end of "if" statement*/
  IV0SW01.IV0SWUPE = " "; /* re-initialize error flag*/
  ;
  if (IV0SW01.IV0SWEFL == "Y") /* if error last time from xfer*/
    converseLib.validationFailed(18); /* error "invalid security"*/
  end /* end of "if" statement*/
  IV0SW01.IV0SWEFL = " "; /* reset error-flag*/
  ;
  if (IV0SW01.IV0SWMAX == 0) /* if no SRO on table*/
    if (IV0SW01.IV0SWFLG != "Y") /* if not limited selection*/
      converseLib.validationFailed(19); /* message 'no SRO's today'*/
    else /* else(limited selection requested)*/
      converseLib.validationFailed(20); /* message 'all sro's corrected'*/
    end /* end of "if" statement*/
  end /* end of "if" statement*/
  ;
  ;
  ;
  ;
   /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
   /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
   /* +++++       C O N V E R S E    M A P    H E R E        +++++*/
   /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
   /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
  converse IV0SM040 ;
  ;
  ;
   /* *************************************************************/
   /* *****            ( A F T E R    S T A G E )            ******/
   /* *************************************************************/
  ;
  ;
  if (IV0SW01.IV0SWMAX == 0) /* if no SRO on table*/
    IV0SSDQ();
    COMMAREA.CATOAP = "IV0M"; /* set destination invoicing menu*/
    XSEXIT(); /* perform transfer*/
    IV0SSER(); /* error "invalid security"*/
  end /* end of "if" statement*/
  IV0SSPF(); /* check pfkeys*/
  ;
   /* IF EZEAID IS PF3                ;if pf3 was pressed*/
    /* IF IV0SW01.IV0SWWP3 EQ 'Y'    ;  if warning already sent*/
      /* IV0SSDQ;*/
      /* MOVE 'IV0M' TO COMMAREA.CATOAP;  destination inv menu*/
      /* XSEXIT                      ;    perform transfer*/
      /* IV0SSER                     ;    err "invalid security"*/
    /* ELSE                          ;  else(warn not yet sent)*/
      /* MOVE 16 TO EZEMNO           ;    warning message*/
      /* MOVE 'Y' TO IV0SW01.IV0SWWP3;    set warning-sent-flag*/
    /* END                           ;  end of "of" statement*/
   /* ELSE                            ;else(pf3 not pressed)*/
    /* MOVE 'N' TO IV0SW01.IV0SWWP3  ;  set warning-sent-flag 'n'*/
   /* END                             ;end of "if" statement*/
  ;
  if (IV0SM040.IV0SMOPT != " " /* if fast-path requested*/
   && converseVar.eventKey is enter) /* and enter pressed*/
    if (IV0SW01.IV0SWWXF == "Y") /* if warning message sent*/
      IV0SSDQ(); /* delete TSQ*/
      COMMAREA.CATOAP = IV0SM040.IV0SMOPT;
                                 /* ;    move destination to commarea*/
      COMMAREA.CAITEM = IV0SM040.IV0SMITM;
      XSEXIT(); /* perform transfer*/
      IV0SSER(); /* error "invalid security"*/
    else /* else(warning not yet sent*/
      converseLib.validationFailed(17); /* warning message*/
      IV0SW01.IV0SWWXF = "Y";
                                   /* set warning-sent-flag to on*/
    end /* end of "if" statement*/
  else /* else(fast path not requested)*/
    IV0SW01.IV0SWWXF = "N"; /* set warning-sent-flag to off*/
  end /* end of "if" statement*/
  ;
  if (converseVar.validationMsgNum == 0) /* if no previous errors*/
    IV0SS42(); /* edit changes/write to TSQ*/
  end /* end of "if" statement*/
  ;
  if (converseVar.validationMsgNum == 0) /* if no previous errors*/
    if (converseVar.eventKey is pf7) /* if page-back requested*/
      if (IV0SM040.IV0SMFST >= 15) /* if full page-back possible*/
        IV0SM040.IV0SMFST = IV0SM040.IV0SMFST - 14;
                                 /* ;      set 'first TSQ' nbr*/
      else /* else(full page-back not possible)*/
        if (IV0SM040.IV0SMFST == 1) /* if at top of file*/
          converseLib.validationFailed(4); /* error 'no further scrolling'*/
        else /* else( not at top of file)r*/
          IV0SM040.IV0SMFST = 1; /* set 'first TSQ' to 1*/
        end /* end of "if" statement*/
      end /* end of "if" statementd*/
    else /* else(page-back not requested)*/
      if (converseVar.eventKey is pf8) /* if page-forward requested*/
        if (IV0SM040.IV0SMLST == IV0SW01.IV0SWMAX)
                                 /* ;      if already at EOF(TSQ)*/
          converseLib.validationFailed(5); /* error 'no scrolling'*/
        else /* else( EOF not reached)*/
          IV0SM040.IV0SMFST = IV0SM040.IV0SMFST + 14;
                                 /* ;        set 'first TSQ' nbr*/
        end /* end if "if" statement*/
      else /* else(no paging requested)*/
        /* next sentence            ;      handled in flow section*/
      end /* end of "if" statement*/
    end /* end of "if" statement*/
  else
    /* next sentence*/
  end
  ;
  ;
  ;
  ;
  ;
end // end IV0S040

// INITIATE SRO DETAIL MAP
Function IV0S050()
  ;
  ;
   /* *************************************************************/
   /* *****    B U I L D    S R O    D E T A I L    M A P    ******/
   /* *************************************************************/
  ;
   /* ***************************************************************/
   /* lgross 10-16-92 moved op-srep-ovrd-fl from dinvc.vsrovr01 to map*/
   /* ******************************************************************/
  ;
      /* set date in map, initialize work flds*/
  ;
  set IV0SM060 initial; /* clear map fields*/
  IV0SM060.IV0SMREV = "01"; /* set revision number*/
  IV0SM060.IV0SMSIG = COMMAREA.CAUSERID; /* move user id to map*/
  IV0SM060.IV0SMDT = VGVar.currentShortGregorianDate; /* move sys date to map*/
  ;
   /* ***** find out what TSQ number of requested SRO is*/
   /* ***** and call ta0050 to get TSQ record*/
  ;
  IV0SW03.IV0SWCNT = IV0SW01.IV0SWFST + IV0SW01.IV0SWHDX - 1;
  IV0SW01.IV0SWCUR = IV0SW03.IV0SWCNT;
  IV0SW02.IV0SWLEN = 121; /* set record length*/
  IV0SW03.IV0SWAPL = "IV0S"; /* assign application id*/
  IV0SW03.IV0SWFUN = "R"; /* function = Retrieve*/
  IV0SW02.IV0SWDTA = " "; /* initialize data return area*/
  call "TA0050" (IV0SW02, IV0SW03) {isNoRefresh = yes, isExternal = yes};
  if (IV0SW03.IV0SWRTN != 0) /* check return code*/
    /* *****************************************************/
    /* *****  THIS IS APPL ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    ;
    TA1REC.TA1DBASE = " ";
    TA1REC.TA1TBLVU = " ";
    IV0SW09.IV0SWER1 = "TA0050 RETURN CODE = ";
    IV0SW09.IV0SWEM2 = "FROM READ OF TSQ";
    IV0SW09.IV0SWER2 = IV0SW03.IV0SWRTN;
    TA1REC.TA1LOCAT[3] = "IV0S050";
    TA1REC.TA1LOCAT[4] = "TA0050";
    IV0SSDQ(); /* delete TSQ before exit*/
    TA1REC.TA1TYPE = "APPL"; /* abend type*/
    TA1REC.TA1FUNC = "RETN"; /* abend func*/
    set ERRSQLCA empty; /* clear area*/
    move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* synpoint rollback*/
    try
      call "TA0020" (TA1REC, IV0SW09) {isExternal = yes};
    end
    COMMAREA.CAUSERA = " "; /* clear user commarea*/
    XSPF4(); /* master menu*/
    exit program; /* master menu failure*/
    ;
    /* *****************************************************/
  else /* else(return from ta0050 okay)*/
    IV0SW04.IV0SW4GP = IV0SW02.IV0SWDTA;
    ;
    IV1REC.IV0IVCID = IV0SW04.IV0IVCID;
    IV0SS51(); /* get rest of data from sro db*/
    ;
    /* *************************************************************/
    /* ********************* move data to map **********************/
    /* *************************************************************/
    IV0SM060.IV0SMNBR = IV0SW01.IV0SWCUR;
    IV0SM060.IV1SAGY2 = IV0SW04.IV1SAGY2;
    IV0SM060.IV1SREP2 = IV0SW04.IV1SREP2;
    IV0SM060.OP-SREP-OVRD-FL = IV1REC.OP-SREP-OVRD-FL;
       /* move override flag from dinvc.vsrovr01 (iv0ss51) to map*/
    /* ********** get salesrep data ***********/
    set SM5REC empty;
    SM5REC.SM4REPID = IV0SM060.IV1SREP2;
    SM5REC.SM1AGYID = IV0SM060.IV1SAGY2;
    SM4REC.SM4REPID = IV0SM060.IV1SREP2;
    XSIVSN4(); /* get salesman name and format*/
    IV0SM060.IV0SMCRN = IVZREC.IVZFNAME;
    if (SQLCA.VAGen_SQLCODE == 0) /* if return code okay*/
      if (SM5REC.SM5SPCIN == "Y") /* is sales rep a "special"*/
        IV0SM060.IV0SMSPF = "Y"; /* move 'y' to map*/
      else /* else(sales rep in not special)*/
        IV0SM060.IV0SMSPF = " "; /* move blank to special ind*/
      end /* end of "if" statement*/
    else /* else(return code not okay*/
      /* next sentence              ;    okay*/
    end /* end of "if" statement*/
    ;
    set SM5REC empty; /* initialize salesrep DBII rec*/
    ;
    /* *************************************************************/
    /* ***** determin which agency feild on TSQ rec to move   ******/
    /* ***** to map                                           ******/
    /* *************************************************************/
    ;
    if (IV0SW04.IV0SWPAG[1] != " ")
      IV0SM060.OP1SAGCY = IV0SW04.IV0SWPAG[1];
      IV0SM060.OP1SREP = IV0SW04.IV0SWPRP[1];
    else
      if (IV0SW04.IV1SAGCY[1] != " ")
        IV0SM060.OP1SAGCY = IV0SW04.IV1SAGCY[1];
        IV0SM060.OP1SREP = IV0SW04.IV1SREP[1];
      else
        IV0SM060.OP1SAGCY = IV0SW04.SM1AGYID;
        IV0SM060.OP1SREP = IV0SW04.SM4REPID;
      end
    end
    /* *************************************************************/
    ;
    /* *************************************************************/
    /* ***** if agency or rep is not blank(or zero) get sales   ****/
    /* ***** rep name from DBII DB and reformat name for map    ****/
    /* *************************************************************/
    ;
    if (IV0SM060.OP1SAGCY != " "
     || IV0SM060.OP1SREP != 0)
      SM5REC.SM1AGYID = IV0SM060.OP1SAGCY;
      SM5REC.SM4REPID = IV0SM060.OP1SREP;
      SM4REC.SM4REPID = IV0SM060.OP1SREP;
      XSIVSN4(); /* get salesman name and format*/
      IV0SM060.IV0SMRNM = IVZREC.IVZFNAME;
      if (SQLCA.VAGen_SQLCODE == 0)
        if (SM5REC.SM5SPCIN == "Y")
          IV0SM060.SM5SPCIN = "Y";
        else
          IV0SM060.SM5SPCIN = " ";
        end
      else
        set IV0SM060.OP1SAGCY cursor, bold;
        set IV0SM060.OP1SREP bold;
        set IV0SM060.IV0SMRNM bold;
        converseLib.validationFailed(7);
      end
    end
    ;
    /* *************************************************************/
    /* *****               get company name                   ******/
    /* *************************************************************/
    ;
    IV0SM060.KUCCOID = IV1REC.KUCCOID;
    set KUCREC empty;
    KUCREC.KUCCOID = IV1REC.KUCCOID;
    try
      call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
    end
    if (SQLCA.VAGen_SQLCODE != 0)
      /* *****************************************************/
      /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
      /* *****************************************************/
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1TBLKE = KUNREC.KUNGRP;
      TA1REC.TA1LOCAT[3] = "IV0S030";
      TA1REC.TA1LOCAT[4] = "IO0240";
      IV0SS98();
      /* *****************************************************/
    else
      IV0SM060.KUCCONM = KUCREC.KUCCONM;
    end
    /* *****************************************************/
    ;
    IV0SM060.SP1ID = IV1REC.SP1ID;
    ;
    /* *************************************************************/
    /* *****               get store name                     ******/
    /* *************************************************************/
    ;
    IV0SM060.KUMSTRID = IV1REC.KUMSTRID;
    set KUMREC empty;
    KUMREC.KUCCOID = IV1REC.KUCCOID;
    KUMREC.KUMSTRID = IV1REC.KUMSTRID;
    try
      call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes};
    end
    if (SQLCA.VAGen_SQLCODE != 0)
      /* *****************************************************/
      /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
      /* *****************************************************/
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VSTORE01";
      TA1REC.TA1TBLKE = KUMREC.KUMGRP;
      TA1REC.TA1LOCAT[3] = "IV0S030";
      TA1REC.TA1LOCAT[4] = "IO0340";
      IV0SS98();
      /* *****************************************************/
    else
      IV0SM060.KUMSTRNM = KUMREC.KUMSTRNM;
    end
    /* *************************************************************/
    /* *****  get department name if dept code entered        ******/
    /* *************************************************************/
    ;
    if (IV1REC.XNXCD > 0)
      set KUJREC empty;
      set SQLCA empty;
      KUJREC.KUCCOID = IV1REC.KUCCOID;
      KUJREC.XNXCD = IV1REC.XNXCD;
      try
        call "IO0290" ("S ", SQLCA, KUJREC) {isNoRefresh = yes, isExternal = yes};
      end
      if (SQLCA.VAGen_SQLCODE == 0)
        IV0SM060.KUJSLFNM = KUJREC.KUJSLFNM;
      else
         /* *****************************************************/
         /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
         /* *****************************************************/
        TA1REC.TA1DBASE = "DCUST";
        TA1REC.TA1TBLVU = "VDEPT01";
        TA1REC.TA1TBLKE = KUJREC.KUJGRP;
        TA1REC.TA1LOCAT[3] = "IV0S050";
        TA1REC.TA1LOCAT[4] = "IO0290";
        IV0SS98();
      end
    else
      IV0SM060.KUJSLFNM = "NO DEPARTMENT";
    end
    /* *************************************************************/
    /* *****     move codes and abreviated descriptions        *****/
    /* *************************************************************/
    ;
    IV0SM060.XNXCD = IV1REC.XNXCD; /* move dept code*/
    ;
    IV0SM060.XOBCD = IV1REC.XOBCD;
    if (IV1REC.XOBCD in XOBTBL.XOBCD)
      IV0SM060.XOBABRV = XOBTBL.XOBABRV[sysVar.arrayIndex];
    end
    ;
    ;
    IV0SM060.XOCCD = IV1REC.XOCCD;
    if (IV1REC.XOCCD in XOCTBL.XOCCD)
      IV0SM060.XOCABRV = XOCTBL.XOCABRV[sysVar.arrayIndex];
    end
    ;
    IV0SM060.XGPCD = IV1REC.XGPCD;
    if (IV1REC.XGPCD in XGPTBL.XGPCD)
      IV0SM060.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    end
    ;
    IV0SM060.YSBCD = IV1REC.YSBCD; /* move responsibility code*/
    ;
    if (IV1REC.YSBCD in YSBTBL.YSBCD)
                                   /* move responsibility abreviation*/
      IV0SM060.YSBABRV = YSBTBL.YSBABRV[sysVar.arrayIndex];
    else
      IV0SM060.YSBABRV = "UNKNWN";
    end
    /* *****************************************************/
    ;
    /* ********** move rest of data to map ***********/
    IV0SM060.IV0IVCID = IV0SW04.IV0IVCID;
    IV0SM060.XXXADDR1 = IV1REC.XXXADDR1;
    IV0SM060.IV1MRAMT = IV1REC.IV1MRAMT;
    IV0SM060.XXXADDR2 = IV1REC.XXXADDR2;
    IV0SM060.IV0IVCDT = IV1REC.IV0IVCDT;
    IV0SM060.XXXADDR3 = IV1REC.XXXADDR3;
    IV0SM060.OP-ENTR-DT = IV1REC.OP-ENTR-DT;
    IV0SM060.XXXCITY = IV1REC.XXXCITY;
    IV0SM060.XSTCD = IV1REC.XSTCD;
    IV0SM060.OP1CUOID = IV1REC.OP1CUOID;
    IV0SM060.OP1NORID = IV1REC.OP1NORID;
    IV0SM060.XXXZIP = IV1REC.XXXZIP;
    IV0SM060.XCTCD = IV1REC.XCTCD;
    IV0SM060.IV1CHGBY = IV1REC.IV1CHGBY;
    IV0SM060.KUSTEXT1 = IV1REC.KUSTEXT1;
    IV0SM060.KUSTEXT2 = IV1REC.KUSTEXT2;
  end
  ;
  ;
  ;
  ;
end // end IV0S050

// CONVERSE SRO DETAIL MAP
Function IV0S060()
  ;
  ;
   /* *************************************************************/
   /* *****     C O N V E R S E    S R O    D E T A I L      ******/
   /* *****                      M A P                       ******/
   /* *****           ( B E F O R E    S T A G E )           ******/
   /* *************************************************************/
  ;
  ;
  if (converseVar.validationMsgNum == 0) /* if no previous errors*/
    set IV0SM060.OP1SAGCY cursor; /* place cursor at first field*/
  end /* end of "if" statement*/
  ;
  ;
  ;
  ;
  ;
   /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
   /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
   /* +++++       C O N V E R S E    M A P    H E R E        +++++*/
   /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
   /* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
  converse IV0SM060 ;
  ;
  ;
   /* *************************************************************/
   /* *****            ( A F T E R    S T A G E )            ******/
   /* *************************************************************/
  ;
  ;
  IV0SSPF(); /* process pfkeys*/
  ;
  ;
  if (IV0SM060.IV0SMOPT != " " /* if fast-path requested*/
   && converseVar.eventKey is enter) /* and enter pressed*/
    if (IV0SW01.IV0SWWXF == "Y") /* if warning message sent*/
      IV0SSDQ(); /* delete TSQ*/
      COMMAREA.CATOAP = IV0SM060.IV0SMOPT;
                                 /* ;    move destination to commarea*/
      COMMAREA.CAITEM = IV0SM060.IV0SMITM;
      XSEXIT(); /* perform transfer*/
      IV0SSER(); /* error "invalid security"*/
    else /* else(warning not yet sent*/
      converseLib.validationFailed(17); /* warning message*/
      IV0SW01.IV0SWWXF = "Y";
                                   /* set warning-sent-flag to on*/
    end /* end of "if" statement*/
  else /* else(fast path not requested)*/
    IV0SW01.IV0SWWXF = "N"; /* set warning-sent-flag to off*/
  end /* end of "if" statement*/
  ;
  if (converseVar.validationMsgNum == 0) /* if no previous errors*/
    IV0SS61(); /* edit fields on map*/
  end /* end of "if" statement*/
  ;
  if (converseVar.validationMsgNum == 0) /* if no errors found*/
    if (IV0SM060 is modified) /* if any fields changed*/
      IV0SW04.IV0SWPFN = "C"; /* set "changed" flag on TSQ rec*/
      IV0SW04.IV0SWPAG[1] = IV0SM060.OP1SAGCY;
      IV0SW04.IV0SWPRP[1] = IV0SM060.OP1SREP;
    else
      if (IV0SW04.IV0SWPFN == " ")
        IV0SW04.IV0SWPFN = "V"; /* set "changed" flag on TSQ rec*/
      end
    end
    ;
    /* *************************************************************/
    /* ***** update TSQ record with updates from screen       ******/
    /* *************************************************************/
    ;
    /* **** set highest and lowest pointers if needed **************/
    if (IV0SW01.IV0SWCUR < IV0SW01.IV0SWLUP)
      IV0SW01.IV0SWLUP = IV0SW01.IV0SWCUR;
    end
    if (IV0SW01.IV0SWCUR > IV0SW01.IV0SWHUP)
      IV0SW01.IV0SWHUP = IV0SW01.IV0SWCUR;
    end
    /* *************************************************************/
    ;
    ;
    IV0SW02.IV0SWLEN = 121;
    IV0SW02.IV0SWDTA = IV0SW04.IV0SW4GP;
    IV0SW03.IV0SWAPL = "IV0S";
    IV0SW03.IV0SWFUN = "U";
    IV0SW03.IV0SWCNT = IV0SW01.IV0SWCUR;
    call "TA0050" (IV0SW02, IV0SW03) {isNoRefresh = yes, isExternal = yes};
    if (IV0SW03.IV0SWRTN != 0)
      /* GET COPY*/
      /* *****************************************************/
      /* *****  THIS IS APPL ERROR PROCESSING CODE      ******/
      /* *****************************************************/
      ;
      TA1REC.TA1DBASE = " ";
      TA1REC.TA1TBLVU = " ";
      IV0SW09.IV0SWER1 = "TA0050 RETURN CODE = ";
      IV0SW09.IV0SWEM2 = "FROM UPDATE OF TSQ";
      IV0SW09.IV0SWER2 = IV0SW03.IV0SWRTN;
      TA1REC.TA1LOCAT[3] = "IV0S060";
      TA1REC.TA1LOCAT[4] = "TA0050";
      IV0SSDQ(); /* delete TSQ before exit*/
      TA1REC.TA1TYPE = "APPL"; /* abend type*/
      TA1REC.TA1FUNC = "RETN"; /* abend func*/
      set ERRSQLCA empty; /* clear area*/
      move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* synpoint rollback*/
      try
        call "TA0020" (TA1REC, IV0SW09) {isExternal = yes};
      end
      COMMAREA.CAUSERA = " "; /* clear user commarea*/
      XSPF4(); /* master menu*/
      exit program; /* master menu failure*/
      ;
      /* *****************************************************/
    else
      /* ********** change values on summary screen **********/
      if (IV0SW03.IV0SWCNT >= IV0SW01.IV0SWFST
       && IV0SW03.IV0SWCNT <= IV0SW01.IV0SWLST)
        IV0SM040.SM1AGYID[IV0SWHDX] = IV0SM060.OP1SAGCY;
        IV0SM040.SM4REPID[IV0SWHDX] = IV0SM060.OP1SREP;
        IV0SM040.IV0SMSEL[IV0SWHDX] = IV0SW04.IV0SWPFN;
             /* IF IV0SM060.OP1SAGCY(2) EQ ' ';*/
               /* AND IV0SM060.OP1SAGCY(3) EQ ' ';*/
               /* AND IV0SM060.OP1SREP(2) EQ 0;*/
               /* AND IV0SM060.OP1SREP(3) EQ 0;*/
               /* MOVE ' ' TO IV0SM040.IV0SMSCM(IV0SWHDX);*/
             /* ELSE ;*/
               /* MOVE 'Y' TO IV0SM040.IV0SMSCM(IV0SWHDX);*/
             /* END ;*/
        set IV0SM040.SM1AGYID[IV0SWHDX] skip, modified;
        set IV0SM040.SM4REPID[IV0SWHDX] skip, modified;
      end
      /* *****************************************************/
    end
  else
    /* next sentence*/
  end
  ;
  ;
  ;
  ;
  ;
end // end IV0S060

// UPDATE DATABASES
Function IV0S070()
  ;
  ;
   /* *************************************************************/
   /* *****          U P D A T E    D A T A B A S E S        ******/
   /* *************************************************************/
  ;
  ;
  IV0SW01.IV0SWUPE = " "; /* set update error flag on*/
  if (IV0SW01.IV0SWLUP <= IV0SW01.IV0SWHUP) /* if any updates made*/
    IV0SW01.IV0SWNDX = IV0SW01.IV0SWLUP; /* initialize index first update*/
    /* ********** loop thru all TSQ records for updates ***********/
    while (IV0SW01.IV0SWNDX <= IV0SW01.IV0SWHUP) /* loop thru all updates*/
      IV0SS71(); /* update SRO records*/
      if (IV0SW04.IV0SWPFN != " ") /* if changes requested*/
        if (SQLCA.VAGen_SQLCODE != 100) /* if update okay*/
          if (IV0SW01.IV0SWUFL == "Y") /* if order data changed*/
            IV0SS72(); /* update order*/
          end /* END OF "if" STATEMENT*/
          VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
          VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
          sysLib.commit();
          VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
           /* commit DB updates*/
          IV0SS74(); /* update TSQ*/
        else /* else(SRO uodated since last)*/
          IV0SS75(); /* read SRO record*/
          IV0SS74(); /* update TSQ with new info*/
          IV0SW01.IV0SWPFS = 0; /* initialize previous first to 0*/
          IV0SM040.IV0SMFST = IV0SW03.IV0SWCNT;
                                     /* ;    move current error to top*/
          IV0SW01.IV0SWUPE = "Y"; /* set update error flag on*/
          exit stack; /* goto flow section*/
        end /* end of "if" statement*/
      end
      IV0SW01.IV0SWNDX = IV0SW01.IV0SWNDX + 1;
                                   /* ;  increment index by 1*/
    end /* end of "while" loop*/
  end /* end of "if" statement*/
  ;
  ;
  ;
  ;
  ;
end // end IV0S070

// DELETE TS QUEUE
Function IV0S080()
  ;
  ;
   /* *************************************************************/
   /* *****          D E L E T E    T S    Q U E U E         ******/
   /* *************************************************************/
  ;
  ;
  IV0SSDQ(); /* delete TSQ*/
  ;
  if (converseVar.eventKey is pf3 /* if pf3 was last key pressed*/
   || converseVar.eventKey is pa1 /* or last key was pa1*/
   || converseVar.eventKey is pa2) /* or last key was pa2*/
    COMMAREA.CATOAP = "IV0M"; /* destination "invoicing main menu"*/
    XSEXIT(); /* perform transfer*/
    converseLib.validationFailed(15); /* error "invalid security"*/
  end /* end of "if" statement*/
  ;
  ;
  ;
  ;
end // end IV0S080

// FORMAT DATA ONTO TSQ RECORD
Function IV0SS21()
  ;
  ;
   /* *************************************************************/
   /* *****  F O R M A T     D A T A     O N T O     T S Q   ******/
   /* *****                  R E C O R D                     ******/
   /* *************************************************************/
   /* 10/16/92 lgross changed op1rcdt to op-entr-dt for database*/
   /* change*/
  ;
  ;
  IV0SW04.IV1SAGY2 = IV2REC.IV1SAGY2;
  IV0SW04.IV1SREP2 = IV2REC.IV1SREP2;
  IV0SW04.IV0IVCID = IV2REC.IV0IVCID;
  IV0SW04.SM1AGYID = IV2REC.SM1AGYID;
  IV0SW04.SM4REPID = IV2REC.SM4REPID;
  IV0SW04.OP1SAGCY[1] = IV2REC.OP1SAGCY[1];
  IV0SW04.OP1SREP[1] = IV2REC.OP1SREP[1];
  IV0SW04.OP1SSLSP[1] = IV2REC.OP1SSLSP[1];
  IV0SW04.IV1SAGCY[1] = IV2REC.IV1SAGCY[1];
  IV0SW04.IV1SREP[1] = IV2REC.IV1SREP[1];
  IV0SW04.IV1SSLSP[1] = IV2REC.IV1SSLSP[1];
  IV0SW04.IV1PRVAC = IV2REC.IV1PRVAC;
  IV0SW04.OP-ENTR-DT = IV2REC.OP-ENTR-DT;
  IV0SW04.SP1ID = IV2REC.SP1ID;
  IV0SW04.ZZZCHGCT = IV2REC.ZZZCHGCT;
  ;
  ;
  ;
  ;
  ;
end // end IV0SS21

// MOVE DATA TO MAP
Function IV0SS41()
  ;
  ;
   /* *************************************************************/
   /* *****       M O V E    D A T A    T O     M A P        ******/
   /* *************************************************************/
   /* 10-16-92  lgross changed op1rcdt to op-entr-dt*/
  ;
  ;
   /* ********************************************************/
   /* ***** move data from TSQ record to summary screen ******/
   /* ********************************************************/
  IV0SM040.IV0SMSEL[IV0SWNDX] = IV0SW04.IV0SWPFN;
  IV0SM040.IV1PRVAC[IV0SWNDX] = IV0SW04.IV1PRVAC;
  IV0SM040.IV1SAGY2[IV0SWNDX] = IV0SW04.IV1SAGY2;
  IV0SM040.IV1SREP2[IV0SWNDX] = IV0SW04.IV1SREP2;
  ;
   /* ***** choose which agency field to move from ******/
  if (IV0SW04.IV0SWPAG != " ")
    IV0SM040.SM1AGYID[IV0SWNDX] = IV0SW04.IV0SWPAG[1];
  else
    if (IV0SW04.IV1SAGCY[1] != " ")
      IV0SM040.SM1AGYID[IV0SWNDX] = IV0SW04.IV1SAGCY[1];
    else
      IV0SM040.SM1AGYID[IV0SWNDX] = IV0SW04.SM1AGYID;
    end
  end
  ;
   /* ***** choose which rep field to move from ******/
  if (IV0SW04.IV0SWPRP != 0)
    IV0SM040.SM4REPID[IV0SWNDX] = IV0SW04.IV0SWPRP[1];
  else
    if (IV0SW04.IV1SREP[1] != 0)
      IV0SM040.SM4REPID[IV0SWNDX] = IV0SW04.IV1SREP[1];
    else
      IV0SM040.SM4REPID[IV0SWNDX] = IV0SW04.SM4REPID;
    end
  end
  ;
   /* ***** if previous fuction is "change" set field modified ****/
  if (IV0SW04.IV0SWPFN == "C")
    set IV0SM040.SM1AGYID[IV0SWNDX] skip, modified;
    set IV0SM040.SM4REPID[IV0SWNDX] skip, modified;
  end
  ;
   /* **** get company number and order number ****/
  set IV1REC empty;
  IV1REC.IV0IVCID = IV0SW04.IV0IVCID;
  IV0SS44();
  IV0SM040.KUCCOID[IV0SWNDX] = IV1REC.KUCCOID;
  IV0SM040.OP1CUOID[IV0SWNDX] = IV1REC.OP1CUOID;
   /* ************ reformat date *************/
  IV0SW01.IV0SW1DT = IV0SW04.OP-ENTR-DT;
  IV0SW01.IV0SW2MM = IV0SW01.IV0SW1MM;
  IV0SW01.IV0SW2DD = IV0SW01.IV0SW1DD;
  IV0SW01.IV0SW2YY = IV0SW01.IV0SW1YY;
  IV0SM040.OP-ENTR-DT[IV0SWNDX] = IV0SW01.IV0SW2DT;
   /* ****************************************/
  ;
   /* *************************************************************/
   /* ***** if SRO involves a split commission the user is   ******/
   /* ***** only allowed to make changes on the detail scrn  ******/
   /* ***** to keep users from making changes on the summary ******/
   /* ***** screen for these SRO's the fields are made       ******/
   /* ***** 'autoskip' the following code checks to see if   ******/
   /* ***** the SRO has a split commission and if so changes ******/
   /* ***** the appropiate attributes                        ******/
   /* ***** all split logic removed 5-6-91                   ******/
   /* *************************************************************/
  ;
   /* IF IV0SW04.IV0SWPAG NE ' 'if SRO has been prev. changed*/
                               /* ;  in this session*/
   /* OR IV0SW04.IV0SWPRP NE 0      ;  |*/
   /* IF IV0SW04.IV0SWPAG(2) EQ ' ' ;  if SRO is split commission*/
     /* AND IV0SW04.IV0SWPAG(3) EQ ' '     ;  |*/
     /* AND IV0SW04.IV0SWPRP(2) EQ 0       ;    |*/
     /* AND IV0SW04.IV0SWPRP(3) EQ 0       ;    |*/
     /* MOVE ' ' TO IV0SM040.IV0SMSCM(IV0SWNDX);*/
   /* ELSE  ;  else(SRO is split commission)*/
     /* MOVE 'Y' TO IV0SM040.IV0SMSCM(IV0SWNDX);*/
  ;
   /* ***** based on previous action code, change attributes ******/
    /* IF IV0SW04.IV0SWPFN EQ 'C';*/
      /* SET IV0SM040.SM1AGYID(IV0SWNDX) AUTOSKIP,MODIFIED;*/
      /* SET IV0SM040.SM4REPID(IV0SWNDX) AUTOSKIP,MODIFIED;*/
    /* ELSE ;*/
      /* SET IV0SM040.SM1AGYID(IV0SWNDX) AUTOSKIP;*/
      /* SET IV0SM040.SM4REPID(IV0SWNDX) AUTOSKIP;*/
    /* END                         ;    end of "if" statement*/
   /* END                           ;  end of "if" statement*/
   /* ELSE  ;else(SRO has not been changed)*/
    /* IF IV0SW04.IV1SAGCY(1) NE ' ' ;  if SRO has been changed*/
                             /* ;    in a previous session*/
      /* OR IV0SW04.IV1SREP(1) NE 0  ;    |*/
   /* IF IV0SW04.IV1SAGCY(2) EQ ' ';if SRO is not split commission*/
        /* AND IV0SW04.IV1SAGCY(3) EQ ' '   ;  |*/
        /* AND IV0SW04.IV1SREP(2) EQ 0      ;     |*/
        /* AND IV0SW04.IV1SREP(3) EQ 0      ;     |*/
        /* MOVE ' ' TO IV0SM040.IV0SMSCM(IV0SWNDX);*/
      /* ELSE     else(SRO is split commission)*/
        /* MOVE 'Y' TO IV0SM040.IV0SMSCM(IV0SWNDX);*/
        /* IF IV0SW04.IV0SWPFN EQ 'C';*/
          /* SET IV0SM040.SM1AGYID(IV0SWNDX) AUTOSKIP,MODIFIED;*/
          /* SET IV0SM040.SM4REPID(IV0SWNDX) AUTOSKIP,MODIFIED;*/
        /* ELSE                      ;;*/
          /* SET IV0SM040.SM1AGYID(IV0SWNDX) AUTOSKIP;*/
         /* SET IV0SM040.SM4REPID(IV0SWNDX) AUTOSKIP;*/
       /* END ;*/
     /* END                         ;    end of "if" statement*/
   /* ELSE ;  else(SRO has not been changed)*/
   /* IF IV0SW04.OP1SAGCY(2) EQ ' ';if SRO is not split commission*/
        /* AND IV0SW04.OP1SAGCY(3) EQ ' '   ; |*/
        /* AND IV0SW04.OP1SREP(2) EQ 0      ;    |*/
        /* AND IV0SW04.OP1SREP(3) EQ 0      ;    |*/
        /* MOVE ' ' TO IV0SM040.IV0SMSCM(IV0SWNDX);*/
      /* ELSE ;*/
        /* MOVE 'Y' TO IV0SM040.IV0SMSCM(IV0SWNDX);*/
        /* IF IV0SW04.IV0SWPFN EQ 'C';*/
          /* SET IV0SM040.SM1AGYID(IV0SWNDX) AUTOSKIP,MODIFIED;*/
          /* SET IV0SM040.SM4REPID(IV0SWNDX) AUTOSKIP,MODIFIED;*/
        /* ELSE ;*/
          /* SET IV0SM040.SM1AGYID(IV0SWNDX) AUTOSKIP;*/
          /* SET IV0SM040.SM4REPID(IV0SWNDX) AUTOSKIP;*/
       /* END ;*/
     /* END ;*/
   /* END ;*/
   /* END ;*/
  ;
  ;
  ;
  ;
  ;
end // end IV0SS41

// EDIT SUMMARY MAP/WRITE TO TSQ
Function IV0SS42()
  ;
  ;
   /* *************************************************************/
   /* *****      W R I T E   C H A N G E S   T O   T S Q     ******/
   /* *************************************************************/
  ;
  ;
  IV0SS43(); /* edit screen*/
  ;
  if (converseVar.validationMsgNum == 0) /* if no errors*/
    IV0SW01.IV0SWNDX = 1; /* initialize index to 1*/
    IV0SW01.IV0SWLND = IV0SMLST - IV0SW01.IV0SWPFS + 1;
    ;
    /* ***** loop thru entire summary screen ******/
    while (IV0SW01.IV0SWNDX <= IV0SW01.IV0SWLND)
      if (IV0SM040.IV0SMSEL[IV0SWNDX] == "V") /* the TSQ updated*/
        IV0SW03.IV0SWCNT = IV0SW01.IV0SWPFS + IV0SW01.IV0SWNDX - 1;
        ;
        /* ***********************************************/
        /* ***** update this TSQ entry with changes ******/
        /* ***********************************************/
        ;
        /* ***** get TSQ record before update ******/
        IV0SW02.IV0SWLEN = 121;
        IV0SW03.IV0SWAPL = "IV0S";
        IV0SW03.IV0SWFUN = "R";
        IV0SW03.IV0SWRTN = 0;
        call "TA0050" (IV0SW02, IV0SW03) {isNoRefresh = yes, isExternal = yes};
                                   /* ;      get TSQ rec for replace*/
        if (IV0SW03.IV0SWRTN != 0) /* if ta0050 errored*/
          /* GET COPY*/
          /* *****************************************************/
          /* *****  THIS IS APPL ERROR PROCESSING CODE      ******/
          /* *****************************************************/
          ;
          TA1REC.TA1DBASE = " ";
          TA1REC.TA1TBLVU = " ";
          IV0SW09.IV0SWER1 = "TA0050 RETURN CODE = ";
          IV0SW09.IV0SWEM2 = "FROM READ OF TSQ";
          IV0SW09.IV0SWER2 = IV0SW03.IV0SWRTN;
          TA1REC.TA1LOCAT[3] = "IV0SS42";
          TA1REC.TA1LOCAT[4] = "TA0050";
          IV0SSDQ(); /* delete TSQ before exit*/
          TA1REC.TA1TYPE = "APPL"; /* abend type*/
          TA1REC.TA1FUNC = "RETN"; /* abend func*/
          set ERRSQLCA empty; /* clear area*/
          move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
          VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
          VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
          sysLib.rollback();
          VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
           /* synpoint rollback*/
          try
            call "TA0020" (TA1REC, IV0SW09) {isExternal = yes};
          end
          COMMAREA.CAUSERA = " "; /* clear user commarea*/
          XSPF4(); /* master menu*/
          exit program; /* master menu failure*/
          ;
          /* *****************************************************/
        else /* else(return code okay)*/
          ;
          /* ***** make changes to TSQ record ******/
          IV0SW04.IV0SW4GP = IV0SW02.IV0SWDTA;
          IV0SW04.IV0SWPFN = IV0SM040.IV0SMSEL[IV0SWNDX];
          /* MOVE IV0SM040.SM1AGYID(IV0SWNDX) TO IV0SW04.IV0SWPAG(1);*/
          /* MOVE IV0SM040.SM4REPID(IV0SWNDX) TO IV0SW04.IV0SWPRP(1);*/
          IV0SW02.IV0SWDTA = IV0SW04.IV0SW4GP;
          ;
          /* ***** call ta0050 to update TSQ record ******/
          IV0SW02.IV0SWLEN = 121;
          IV0SW03.IV0SWAPL = "IV0S";
          IV0SW03.IV0SWFUN = "U";
          IV0SW03.IV0SWRTN = 0;
          call "TA0050" (IV0SW02, IV0SW03) {isNoRefresh = yes, isExternal = yes};
          if (IV0SW03.IV0SWRTN != 0) /* if return code not okay*/
            /* *****************************************************/
            /* *****  THIS IS APPL ERROR PROCESSING CODE      ******/
            /* *****************************************************/
            ;
            TA1REC.TA1DBASE = " ";
            TA1REC.TA1TBLVU = " ";
            IV0SW09.IV0SWER1 = "TA0050 RETURN CODE = ";
            IV0SW09.IV0SWEM2 = "FROM UPDATE OF TSQ";
            IV0SW09.IV0SWER2 = IV0SW03.IV0SWRTN;
            TA1REC.TA1LOCAT[3] = "IV0SS42";
            TA1REC.TA1LOCAT[4] = "TA0050";
            IV0SSDQ(); /* delete TSQ before exit*/
            TA1REC.TA1TYPE = "APPL"; /* abend type*/
            TA1REC.TA1FUNC = "RETN"; /* abend func*/
            set ERRSQLCA empty; /* clear area*/
            move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
            VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
            VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
            sysLib.rollback();
            VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
             /* synpoint rollback*/
            try
              call "TA0020" (TA1REC, IV0SW09) {isExternal = yes};
            end
            COMMAREA.CAUSERA = " "; /* clear user commarea*/
            XSPF4(); /* master menu*/
            exit program; /* master menu failure*/
            ;
            /* *****************************************************/
          else /* else(return code okay)*/
            ;
                                  /* **** set highest and lowest pointers*/
                                   /* if needed **************/
            if (IV0SW03.IV0SWCNT < IV0SW01.IV0SWLUP)
              IV0SW01.IV0SWLUP = IV0SW03.IV0SWCNT;
            end
            if (IV0SW03.IV0SWCNT > IV0SW01.IV0SWHUP)
              IV0SW01.IV0SWHUP = IV0SW03.IV0SWCNT;
            end
            ;
            /* *************************************************************/
            ;
            /* next sentence        ;          okay*/
          end /* end of "if" statement*/
        end /* end of "if" statement*/
      end /* end of "if" statement*/
      IV0SW01.IV0SWNDX = IV0SW01.IV0SWNDX + 1; /* initialize index to 1*/
    end /* end of "while" loop*/
  end /* end of "if" statement*/
  ;
  ;
  ;
  ;
  ;
end // end IV0SS42

// EDIT SUMMARY MAP
Function IV0SS43()
  ;
  ;
   /* *************************************************************/
   /* *****  e d i t    f i e l d s    o n    s u m m a r y    ****/
   /* *************************************************************/
  ;
  ;
  IV0SWNDX = IV0SW01.IV0SWLND; /* set index to last line # on map*/
  while (IV0SW01.IV0SWNDX >= 1) /* loop thru all lines on map, bottom up*/
    ;
    /* ********** reset any attributes to defined ***********/
    if (IV0SM040.IV0SMSEL[IV0SWNDX] is modified)
      set IV0SM040.IV0SMSEL[IV0SWNDX] initialAttributes;
      set IV0SM040.IV0SMSEL[IV0SWNDX] modified;
    else
      set IV0SM040.IV0SMSEL[IV0SWNDX] initialAttributes;
    end
    set IV0SM040.SM1AGYID[IV0SWNDX] initialAttributes;
    set IV0SM040.SM4REPID[IV0SWNDX] initialAttributes;
    /* IF IV0SM040.IV0SMSCM(IV0SWNDX) EQ 'Y';*/
      /* SET IV0SM040.SM1AGYID(IV0SWNDX) autoskip;*/
      /* SET IV0SM040.SM4REPID(IV0SWNDX) autoskip*/
    /* ELSE ;*/
      /* IF IV0SM040.SM1AGYID(IV0SWNDX) IS MODIFIED;*/
        /* SET IV0SM040.SM1AGYID(IV0SWNDX) DEFINED;*/
        /* SET IV0SM040.SM1AGYID(IV0SWNDX) MODIFIED;*/
      /* ELSE ;*/
        /* SET IV0SM040.SM1AGYID(IV0SWNDX) DEFINED;*/
      /* END ;*/
      /* IF IV0SM040.SM4REPID(IV0SWNDX) IS MODIFIED;*/
        /* SET IV0SM040.SM4REPID(IV0SWNDX) DEFINED;*/
        /* SET IV0SM040.SM4REPID(IV0SWNDX) MODIFIED;*/
      /* ELSE ;*/
        /* SET IV0SM040.SM4REPID(IV0SWNDX) DEFINED;*/
      /* END ;*/
    /* END ;*/
    /* *********************************************************/
    ;
    /* ***** check if detail line was 'C' (changed) and edit *******/
    /* IF IV0SM040.IV0SMSEL(IV0SWNDX) EQ 'C';*/
      /* MOVE IV0SM040.SM1AGYID(IV0SWNDX) TO SM5REC.SM1AGYID;*/
      /* MOVE IV0SM040.SM4REPID(IV0SWNDX) TO SM5REC.SM4REPID;*/
      /* IV0SS52                     ;      edit salesrep/agency*/
      /* IF SQLCA.SQLCODE NE 0       ;      if rep not found*/
        /* MOVE 7 TO EZEMNO          ;        error "rep not found"*/
        /* SET IV0SM040.SM4REPID(IV0SWNDX) MODIFIED,BRIGHT;*/
        /* SET IV0SM040.SM1AGYID(IV0SWNDX) CURSOR,MODIFIED,BRIGHT;*/
      /* ELSE                        ;      else(rep found)*/
        /* ;NEXT SENTNECE*/
      /* END                         ;      end of "if" statement*/
    /* ELSE                          ;    else(select not 'c')*/
      /* ;next sentence              ;      okay(don't edit)*/
    /* END                           ;    end of "if" statement*/
    ;
    /* ***** edit selection code.values are ' ','a','s','v'*/
    if (IV0SM040.IV0SMSEL[IV0SWNDX] != " "
     && IV0SM040.IV0SMSEL[IV0SWNDX] != "A"
     && IV0SM040.IV0SMSEL[IV0SWNDX] != "C"
     && IV0SM040.IV0SMSEL[IV0SWNDX] != "S"
     && IV0SM040.IV0SMSEL[IV0SWNDX] != "V")
      converseLib.validationFailed(2); /* error "invalid action"*/
      set IV0SM040.IV0SMSEL[IV0SWNDX] cursor, modified, bold;
    else
      /* next sentence*/
    end
    IV0SW01.IV0SWNDX = IV0SW01.IV0SWNDX - 1;
  end
  ;
  ;
  ;
  ;
  ;
end // end IV0SS43

// GET DATA FROM SRO DATABASE
Function IV0SS44()
  ;
  ;
   /* *************************************************************/
   /* *****  G E T     D A T A     F R O M     S R O    D B  ******/
   /* *************************************************************/
  ;
  ;
  call "IO0930" ("S ", SQLCA, IV1REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1PGMNM = "IV0S"; /* 10-30-87*/
    TA1REC.TA1MAP = " "; /* 10-30-87*/
    TA1REC.TA1DBASE = "DINVC";
    TA1REC.TA1TBLVU = "VSROVR01";
    TA1REC.TA1TBLKE = IV1REC.IV1GRP; /* 10-30-87*/
    TA1REC.TA1LOCAT[3] = "IV0SS51";
    TA1REC.TA1LOCAT[4] = "IO0930";
    IV0SS98();
  end
  ;
  ;
  ;
  ;
  ;
end // end IV0SS44

// GET DATA FROM SRO DATABASE
Function IV0SS51()
  ;
  ;
   /* *************************************************************/
   /* *****  G E T     D A T A     F R O M     S R O    D B  ******/
   /* *************************************************************/
  ;
  ;
  call "IO0930" ("S ", SQLCA, IV1REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1PGMNM = "IV0S"; /* 10-30-87*/
    TA1REC.TA1MAP = " "; /* 10-30-87*/
    TA1REC.TA1DBASE = "DINVC";
    TA1REC.TA1TBLVU = "VSROVR01";
    TA1REC.TA1TBLKE = IV1REC.IV1GRP; /* 10-30-87*/
    TA1REC.TA1LOCAT[3] = "IV0SS51";
    TA1REC.TA1LOCAT[4] = "IO0930";
    IV0SS98();
  end
  ;
  ;
  ;
  ;
  ;
end // end IV0SS51

// EDIT FIELDS ON DETAIL MAP
Function IV0SS61()
  ;
  ;
   /* *************************************************************/
   /* **** E D I T    F I E L D S    O N     D E T A I L     ******/
   /* *************************************************************/
  ;
  ;
   /* IV0SS62                         ;top justify salesrep data*/
  ;
  ;
  if (IV0SM060.OP1SAGCY is modified)
    set IV0SM060.OP1SAGCY initialAttributes;
    set IV0SM060.OP1SAGCY modified;
  else
    set IV0SM060.OP1SAGCY initialAttributes;
  end
  if (IV0SM060.OP1SREP is modified)
    set IV0SM060.OP1SREP initialAttributes;
    set IV0SM060.OP1SREP modified;
  else
    set IV0SM060.OP1SREP initialAttributes;
  end
  set IV0SM060.IV0SMRNM initialAttributes;
  if (IV0SM060.IV0SMRNM is modified)
    set IV0SM060.IV0SMRNM initialAttributes;
    set IV0SM060.IV0SMRNM modified;
  else
    set IV0SM060.IV0SMRNM initialAttributes;
  end
  ;
   /* ********** make sure percentages are entred ok ***********/
   /* IF IV0SM060.OP1SAGCY(IV0SW6DX) NE ' ';*/
     /* OR IV0SM060.OP1SREP(IV0SW6DX) NE 0;*/
    /* IF IV0SM060.OP1SSLSP(IV0SW6DX) EQ 0;*/
      /* IF IV0SW01.IV0SW6DX EQ 1;*/
        /* IF IV0SM060.OP1SAGCY(2) NE ' ';*/
          /* OR IV0SM060.OP1SREP(2) NE 0;*/
   /* SET IV0SM060.op1sslsp(IV0SW6DX) CURSOR,MODIFIED,BRIGHT;*/
          /* MOVE 11 TO EZEMNO     ;        error "% required"*/
        /* ELSE   ;      first on screen, split comm*/
          /* ;next sentence*/
        /* END ;*/
      /* ELSE                      ;      not first line to edit*/
   /* SET IV0SM060.OP1SSLSP(IV0SW6DX) CURSOR,MODIFIED,BRIGHT;*/
        /* MOVE 11 TO EZEMNO       ;        error "% required"*/
      /* END ;*/
    /* ELSE                        ;   else(percentage entered)*/
      /* IF IV0SW01.IV0SW6DX EQ 1;*/
        /* IF IV0SM060.OP1SAGCY(2) EQ ' ';*/
          /* AND IV0SM060.OP1SREP(2) EQ 0;*/
   /* SET IV0SM060.OP1SSLSP(IV0SW6DX) CURSOR,MODIFIED,BRIGHT;*/
         /* MOVE 12 TO EZEMNO ;  error "% invalid for non-split"*/
       /* ELSE ;*/
         /* ;next sentence*/
       /* END ;*/
     /* ELSE ;*/
       /* ;next sentence*/
     /* END ;*/
   /* END ;*/
   /* ELSE ;*/
    /* IF IV0SM060.OP1SSLSP(IV0SW6DX) NE 0;*/
      /* SET IV0SM060.OP1SSLSP(IV0SW6DX) CURSOR,MODIFIED,BRIGHT;*/
      /* MOVE 12 TO EZEMNO  ;    error "% invalid for non-split"*/
    /* ELSE ;*/
      /* ;next sentence*/
    /* END ;*/
   /* END ;*/
   /* **********************************************************/
  ;
  ;
   /* ********** edit validity of salesrep/agency **************/
  IV0SM060.IV0SMRNM = " ";
  IV0SM060.SM5SPCIN = " ";
  if (IV0SM060.OP1SAGCY != " "
   || IV0SM060.OP1SREP != 0)
    SM5REC.SM1AGYID = IV0SM060.OP1SAGCY;
    SM5REC.SM4REPID = IV0SM060.OP1SREP;
    SM4REC.SM4REPID = IV0SM060.OP1SREP;
    XSIVSN4();
    IV0SM060.IV0SMRNM = IVZREC.IVZFNAME;
    if (SQLCA.VAGen_SQLCODE != 0)
      set IV0SM060.OP1SREP modified, bold;
      set IV0SM060.IV0SMRNM skip, bold;
      set IV0SM060.OP1SAGCY cursor, modified, bold;
      converseLib.validationFailed(7); /* error "sales rep/agency not found"*/
    else
      if (SM5REC.SM5SPCIN == "Y")
        IV0SM060.SM5SPCIN = "Y";
      else
        IV0SM060.SM5SPCIN = " ";
      end
    end
  else
    set IV0SM060.OP1SAGCY cursor, modified, bold;
    set IV0SM060.OP1SREP modified, bold;
    converseLib.validationFailed(10); /* error "sales rep/agency required"*/
  end
   /* **********************************************************/
  ;
  ;
  ;
   /* ********* make sure percentages add up to 100 % **********/
   /* IF EZEMNO EQ 0;*/
   /* IV0SW01.IV0SWPTT=IV0SM060.OP1SSLSP(1)+IV0SM060.OP1SSLSP(2);*/
   /* IV0SW01.IV0SWPTT = IV0SW01.IV0SWPTT + IV0SM060.OP1SSLSP(3);*/
    /* IF IV0SW01.IV0SWPTT NE 100.00;*/
      /* AND IV0SW01.IV0SWPTT NE 0;*/
      /* IF IV0SM060.OP1SAGCY(3) NE ' ';*/
        /* OR IV0SM060.OP1SREP(3) NE 0;*/
        /* SET IV0SM060.OP1SSLSP(3) CURSOR,MODIFIED,BRIGHT;*/
      /* END ;*/
      /* IF IV0SM060.OP1SAGCY(2) NE ' ';*/
        /* OR IV0SM060.OP1SREP(2) NE 0;*/
       /* SET IV0SM060.OP1SSLSP(2) CURSOR,MODIFIED,BRIGHT;*/
     /* END ;*/
     /* IF IV0SM060.OP1SAGCY(1) NE ' ';*/
       /* OR IV0SM060.OP1SREP(1) NE 0;*/
       /* SET IV0SM060.OP1SSLSP(1) CURSOR,MODIFIED,BRIGHT;*/
     /* END ;*/
     /* MOVE 9 TO EZEMNO ;    error "% must add up to 100%"*/
   /* END ;*/
   /* END ;*/
   /* **********************************************************/
  ;
  ;
  ;
  ;
  ;
end // end IV0SS61

// UPDATE SRO RECORDS
Function IV0SS71()
  ;
  ;
   /* *************************************************************/
   /* *****      U P D A T E    S R O    R E C O R D S       ******/
   /* *************************************************************/
  ;
  ;
   /* ********** get TSQ record and update it  ***********/
  IV0SW02.IV0SWLEN = 121;
  IV0SW03.IV0SWAPL = "IV0S";
  IV0SW03.IV0SWFUN = "R";
  IV0SW03.IV0SWCNT = IV0SW01.IV0SWNDX;
  call "TA0050" (IV0SW02, IV0SW03) {isNoRefresh = yes, isExternal = yes};
  if (IV0SW03.IV0SWRTN != 0)
    /* *****************************************************/
    /* *****  THIS IS APPL ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1PGMNM = "IV0S"; /* 10-30-87*/
    TA1REC.TA1MAP = " "; /* 10-30-87*/
    TA1REC.TA1DBASE = " ";
    TA1REC.TA1TBLVU = " ";
    IV0SW09.IV0SWER1 = "TA0050 RETURN CODE = ";
    IV0SW09.IV0SWEM2 = "FROM READ OF TSQ";
    IV0SW09.IV0SWER2 = IV0SW03.IV0SWRTN;
    TA1REC.TA1LOCAT[3] = "IV0SS71";
    TA1REC.TA1LOCAT[4] = "TA0050";
    IV0SSDQ(); /* delete TSQ before exit*/
    TA1REC.TA1TYPE = "APPL"; /* abend type*/
    TA1REC.TA1FUNC = "RETN"; /* abend func*/
    set ERRSQLCA empty; /* clear area*/
    move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* synpoint rollback*/
    try
      call "TA0020" (TA1REC, IV0SW09) {isExternal = yes};
    end
    COMMAREA.CAUSERA = " "; /* clear user commarea*/
    XSPF4(); /* master menu*/
    exit program; /* master menu failure*/
    ;
    /* *****************************************************/
  else
    IV0SW04.IV0SW4GP = IV0SW02.IV0SWDTA;
    if (IV0SW04.IV0SWPFN != " ")
      ;
      IV1REC.IV0IVCID = IV0SW04.IV0IVCID;
      IV0SS51();
      ;
      if (IV0SW04.ZZZCHGCT != IV1REC.ZZZCHGCT)
        SQLCA.VAGen_SQLCODE = 100;
        return;
      end
      ;
      if (IV0SW04.IV0SWPAG[1] == " "
       && IV0SW04.IV0SWPAG[2] == " "
       && IV0SW04.IV0SWPAG[3] == " "
       && IV0SW04.IV0SWPRP[1] == 0
       && IV0SW04.IV0SWPRP[2] == 0
       && IV0SW04.IV0SWPRP[3] == 0
       && IV0SW04.IV0SWPPC[1] == 0
       && IV0SW04.IV0SWPPC[2] == 0
       && IV0SW04.IV0SWPPC[3] == 0)
        IV0SW01.IV0SWUFL = "N";
      else
        if (IV0SW04.IV0SWPFN == "C")
          IV0SW01.IV0SWUFL = "Y";
        else
          IV0SW01.IV0SWUFL = "N";
        end
      end
      if (IV0SW01.IV0SWUFL == "Y")
        IV1REC.IV1SAGCY[1] = IV0SW04.IV0SWPAG[1];
        IV1REC.IV1SREP[1] = IV0SW04.IV0SWPRP[1];
        IV1REC.IV1SSLSP[1] = IV0SW04.IV0SWPPC[1];
      end
      if (IV0SW04.IV0SWPFN == "V"
       && IV1REC.IV1PRVAC == "C")
        /* next sentence*/
      else
        IV1REC.IV1CHGBY = COMMAREA.CAUSERID;
        IV1REC.IV1PRVAC = IV0SW04.IV0SWPFN;
      end
      set TA2REC empty;
      TA2REC.TA2DTOPT = "GETDATE";
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
      IV1REC.ZZZCHGDT = TA2REC.TA2GRGGN;
      IV1REC.ZZZCHGTM = TA2REC.TA2TIMHM;
      call "IO0930" ("U ", SQLCA, IV1REC) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE != 0)
        if (SQLCA.VAGen_SQLCODE != 100)
          /* *****************************************************/
          /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
          /* *****************************************************/
          TA1REC.TA1PGMNM = "IV0S"; /* 10-30-87*/
          TA1REC.TA1MAP = " "; /* 10-30-87*/
          TA1REC.TA1DBASE = "DINVC";
          TA1REC.TA1TBLVU = "VSROVR01";
          TA1REC.TA1TBLKE = IV1REC.IV1GRP;
          TA1REC.TA1LOCAT[3] = "IV0SS71";
          TA1REC.TA1LOCAT[4] = "IO0930";
          IV0SS98();
          /* *****************************************************/
        else /* return code is 100(dup update)*/
          /* next sentence        handled in later processing*/
        end
      else
        /* next sentence*/
      end
    end
  end
  ;
  ;
  ;
  ;
  ;
end // end IV0SS71

// UPDATE ORDER DB
Function IV0SS72()
  ;
   /* 6/13/91 removed updating op1rec.op1sagcy,op1srep, or1sslsp*/
  ;
   /* *************************************************************/
   /* *****          U P D A T E   O R D E R    D B          ******/
   /* *************************************************************/
  ;
  ;
  set OP1REC empty;
  OP1REC.OP1PARTN = IV1REC.OP1PARTN;
  OP1REC.OP1CUOID = IV1REC.OP1CUOID;
  OP1REC.OP1NORID = IV1REC.OP1NORID;
  call "IO0430" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    /* GET ERROR*/
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1DBASE = "DORDER";
    TA1REC.TA1TBLVU = "VORHDR01";
    TA1REC.TA1TBLKE = OP1REC.OP1KEY;
    TA1REC.TA1LOCAT[3] = "IV0SS52";
    TA1REC.TA1LOCAT[4] = "IO0430";
    IV0SS98();
    /* *****************************************************/
  else
    OP1REC.SM1AGYID = IV1REC.IV1SAGCY[1];
    OP1REC.SM4REPID = IV1REC.IV1SREP[1];
    OP1REC.ZZZCHGDT = TA2REC.TA2GRGGN;
    OP1REC.ZZZCHGTM = TA2REC.TA2TIMHM;
    call "IO0430" ("U ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE != 0)
      /* *****************************************************/
      /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
      /* *****************************************************/
      TA1REC.TA1DBASE = "DORDER";
      TA1REC.TA1TBLVU = "VORHDR01";
      TA1REC.TA1TBLKE = OP1REC.OP1KEY;
      TA1REC.TA1LOCAT[3] = "IV0SS52";
      TA1REC.TA1LOCAT[4] = "IO0430";
      IV0SS98();
      /* *****************************************************/
    else
      /* next sentence*/
    end
  end
  ;
  ;
  ;
  ;
  ;
end // end IV0SS72

// UPDATE TSQ
Function IV0SS74()
  ;
  ;
   /* *************************************************************/
   /* *****              U P D A T E    T S Q                ******/
   /* *************************************************************/
  ;
  ;
   /* MOVE IV1REC.IV1GRP TO IV0SW04.IV1GRP;*/
  IV0SW04.IV1SAGCY[1] = IV1REC.IV1SAGCY[1];
  IV0SW04.IV1SAGCY[2] = IV1REC.IV1SAGCY[2];
  IV0SW04.IV1SAGCY[3] = IV1REC.IV1SAGCY[3];
  IV0SW04.IV1SREP[1] = IV1REC.IV1SREP[1];
  IV0SW04.IV1SREP[2] = IV1REC.IV1SREP[2];
  IV0SW04.IV1SREP[3] = IV1REC.IV1SREP[3];
  IV0SW04.IV1SSLSP[1] = IV1REC.IV1SSLSP[1];
  IV0SW04.IV1SSLSP[2] = IV1REC.IV1SSLSP[2];
  IV0SW04.IV1SSLSP[3] = IV1REC.IV1SSLSP[3];
  IV0SW04.IV1PRVAC = IV1REC.IV1PRVAC;
  IV0SW04.ZZZCHGCT = IV1REC.ZZZCHGCT;
  ;
  ;
  IV0SW04.IV0SWPFN = " ";
  IV0SW04.IV0SWPAG[1] = " ";
  IV0SW04.IV0SWPAG[2] = " ";
  IV0SW04.IV0SWPAG[3] = " ";
  IV0SW04.IV0SWPRP[1] = 0;
  IV0SW04.IV0SWPRP[2] = 0;
  IV0SW04.IV0SWPRP[3] = 0;
  IV0SW04.IV0SWPPC[1] = 0;
  IV0SW04.IV0SWPPC[2] = 0;
  IV0SW04.IV0SWPPC[3] = 0;
  IV0SW02.IV0SWDTA = IV0SW04.IV0SW4GP;
  IV0SW03.IV0SWFUN = "U";
  call "TA0050" (IV0SW02, IV0SW03) {isNoRefresh = yes, isExternal = yes};
  if (IV0SW03.IV0SWRTN != 0)
    /* *****************************************************/
    /* *****  THIS IS APPL ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    ;
    TA1REC.TA1DBASE = " ";
    TA1REC.TA1TBLVU = " ";
    IV0SW09.IV0SWER1 = "TA0050 RETURN CODE = ";
    IV0SW09.IV0SWEM2 = "FROM UPDATE OF TSQ";
    IV0SW09.IV0SWER2 = IV0SW03.IV0SWRTN;
    TA1REC.TA1LOCAT[3] = "IV0SS74";
    TA1REC.TA1LOCAT[4] = "TA0050";
    IV0SSDQ(); /* delete TSQ before exit*/
    TA1REC.TA1TYPE = "APPL"; /* abend type*/
    TA1REC.TA1FUNC = "RETN"; /* abend func*/
    set ERRSQLCA empty; /* clear area*/
    move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* synpoint rollback*/
    try
      call "TA0020" (TA1REC, IV0SW09) {isExternal = yes};
    end
    COMMAREA.CAUSERA = " "; /* clear user commarea*/
    XSPF4(); /* master menu*/
    exit program; /* master menu failure*/
    ;
    /* *****************************************************/
  end
  ;
  ;
  ;
end // end IV0SS74

// READ SRO RECORD
Function IV0SS75()
  ;
  ;
   /* *************************************************************/
   /* *****        R E A D    S R O    R E C O R D           ******/
   /* *************************************************************/
   /* 10/16/92  lgross  change op1rcdt to op-entr-dt for database*/
   /* change*/
  ;
  ;
  IV1REC.IV0IVCID = IV0SW04.IV0IVCID;
  call "IO0930" ("S ", SQLCA, IV1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    /* GET ERROR*/
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1DBASE = "DINVC";
    TA1REC.TA1TBLVU = "VSROVR01";
    TA1REC.TA1TBLKE = IV1REC.IV1GRP;
    TA1REC.TA1LOCAT[3] = "IV0SS55";
    TA1REC.TA1LOCAT[4] = "IO0930";
    IV0SS98();
    /* *****************************************************/
  end
  ;
   /* MOVE IV1REC.IV1GRP TO IV0SW04.IV1GRP;*/
  ;
  IV0SW04.IV0IVCID = IV1REC.IV0IVCID;
  IV0SW04.SM1AGYID = IV1REC.SM1AGYID;
  IV0SW04.SM4REPID = IV1REC.SM4REPID;
  IV0SW04.OP1SAGCY[1] = IV1REC.OP1SAGCY[1];
  IV0SW04.OP1SAGCY[2] = IV1REC.OP1SAGCY[2];
  IV0SW04.OP1SAGCY[3] = IV1REC.OP1SAGCY[3];
  IV0SW04.OP1SREP[1] = IV1REC.OP1SREP[1];
  IV0SW04.OP1SREP[2] = IV1REC.OP1SREP[2];
  IV0SW04.OP1SREP[3] = IV1REC.OP1SREP[3];
  IV0SW04.OP1SSLSP[1] = IV1REC.OP1SSLSP[1];
  IV0SW04.OP1SSLSP[2] = IV1REC.OP1SSLSP[2];
  IV0SW04.OP1SSLSP[3] = IV1REC.OP1SSLSP[3];
  IV0SW04.IV1SAGCY[1] = IV1REC.IV1SAGCY[1];
  IV0SW04.IV1SAGCY[2] = IV1REC.IV1SAGCY[2];
  IV0SW04.IV1SAGCY[3] = IV1REC.IV1SAGCY[3];
  IV0SW04.IV1SREP[1] = IV1REC.IV1SREP[1];
  IV0SW04.IV1SREP[2] = IV1REC.IV1SREP[2];
  IV0SW04.IV1SREP[3] = IV1REC.IV1SREP[3];
  IV0SW04.IV1SSLSP[1] = IV1REC.IV1SSLSP[1];
  IV0SW04.IV1SSLSP[2] = IV1REC.IV1SSLSP[2];
  IV0SW04.IV1SSLSP[3] = IV1REC.IV1SSLSP[3];
  IV0SW04.IV1PRVAC = IV1REC.IV1PRVAC;
  IV0SW04.OP-ENTR-DT = IV1REC.OP-ENTR-DT;
  IV0SW04.SP1ID = IV1REC.SP1ID;
  IV0SW04.ZZZCHGCT = IV1REC.ZZZCHGCT;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
end // end IV0SS75

// ABORT ROUTINE
Function IV0SS98()
  ;
  ;
  ;
      /* *********************************************************/
      /* * online abort routine for iv system                   **/
      /* *********************************************************/
  ;
  IV0SSDQ(); /* delete TSQ before exit*/
  TA1REC.TA1TYPE = "DB2"; /* abend type*/
  TA1REC.TA1FUNC = "RETN"; /* abend func*/
  set ERRSQLCA empty; /* clear area*/
  move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.rollback();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* synpoint rollback*/
  try
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
  end
  COMMAREA.CAUSERA = " "; /* clear user commarea*/
  XSPF4(); /* master menu*/
  exit program; /* master menu failure*/
  ;
  ;
  ;
   /* *************************************************************/
end // end IV0SS98

// delete TSQ
Function IV0SSDQ()
  ;
  ;
   /* *************************************************************/
   /* *****          D E L E T E    T S    Q U E U E         ******/
   /* *************************************************************/
  ;
  ;
  IV0SW03.IV0SWAPL = "IV0S"; /* set application name to "iv0s"*/
  IV0SW03.IV0SWFUN = "P"; /* function is "Purge"*/
   /* ***** call IO mod to purge TSQ ******/
  call "TA0050" (IV0SW02, IV0SW03) {isNoRefresh = yes, isExternal = yes};
  ;
   /* ***** note: return code un-important ******/
  ;
  ;
  ;
  ;
end // end IV0SSDQ

// STANDARD PFKEY CHECKING SGRP
Function IV0SSER()
  ;
  ;
   /* *************************************************************/
   /* *****      E R R O R    O N    X F E R    S G R P      ******/
   /* *************************************************************/
  ;
  ;
  ;
  IV0SW01.IV0SWEFL = "Y"; /* set error on transfer flag on*/
  COMMAREA.CAUSERA = IV0SW01.IV0SWFGP;
                                 /* ;move flags to commarea*/
  COMMAREA.CATOAP = "IV0S"; /* restart this application*/
  XSEXIT(); /* transfer to top of this application*/
  ;
  exit program; /* if security is still no-good*/
                                 /* ;give-up...end application*/
  ;
  ;
  ;
  ;
end // end IV0SSER

// CHECK PF-KEYS FOR MENU
Function IV0SSMP()
  ;
  ;
   /* *************************************************************/
   /* ***** S T A N D A R D     P F K E Y    C H E C K I N G ******/
   /* *************************************************************/
  ;
  ;
  ;
  if (converseVar.eventKey is pf1) /* if "help" requested*/
    IV0SSDQ(); /* delete TSQ*/
    XSPF1(); /* transfer to "help*/
    IV0SSER(); /* error "invalid security"*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is pf4) /* if return to main menu*/
    IV0SSDQ(); /* delete TSQ*/
    XSPF4(); /* return to main menu sgrp*/
    IV0SSER(); /* error "invalid security"*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is pf5) /* if transfer to cust maint requested*/
    IV0SSDQ(); /* delete TSQ*/
    COMMAREA.CATOAP = "KM0D"; /* set destination 'cust maint'*/
    XSEXIT(); /* perform transfer*/
    IV0SSER(); /* error "invalid security"*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is pf3) /* if pf3 pressed*/
    IV0SSDQ(); /* delete TSQ*/
    COMMAREA.CATOAP = "IV0M"; /* set destination 'cust maint'*/
    XSEXIT(); /* perform transfer*/
    IV0SSER(); /* error "invalid security"*/
  end /* end of "if" statement*/
  ;
  ;
  if (converseVar.eventKey is pf7) /* if pf7 pressed*/
    return; /* handle in process*/
  end /* end of :if" statement*/
  ;
  if (converseVar.eventKey is pf8) /* if pf8 pressed*/
    return; /* handle in process*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is enter) /* if enter pressed*/
    return; /* handle in process*/
  end /* end of "if" statement*/
  ;
  ;
   /* ***** IF THIS POINT IS REACHED AN INVALID PFKEY WAS PRESSED*/
  ;
  converseLib.validationFailed(3); /* error "invalid pfkey"*/
  ;
  ;
  ;
  ;
  ;
end // end IV0SSMP

// STANDARD PFKEY CHECKING SGRP
Function IV0SSPF()
  ;
  ;
   /* *************************************************************/
   /* ***** S T A N D A R D     P F K E Y    C H E C K I N G ******/
   /* *************************************************************/
  ;
  ;
  ;
  if (converseVar.eventKey is pf1) /* if "help" requested*/
    if (IV0SW01.IV0SWWP1 == "Y") /* if warning already sent*/
      IV0SSDQ(); /* delete TSQ*/
      XSPF1(); /* transfer to "help*/
      IV0SSER(); /* error "invalid security"*/
    else /* else(warning not yet sent*/
      converseLib.validationFailed(16); /* warning message*/
      IV0SW01.IV0SWWP1 = "Y"; /* set warning-sent-flag to yes*/
    end /* end of "if" statement*/
  else /* else(pf1 not pressed)*/
    IV0SW01.IV0SWWP1 = "N"; /* sent warning-sent-flag to no*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is pf4) /* if return to main menu*/
    if (IV0SW01.IV0SWWP4 == "Y") /* if warning already sent*/
      IV0SSDQ(); /* delete TSQ*/
      XSPF4(); /* return to main menu sgrp*/
      IV0SSER(); /* error "invalid security"*/
    else /* else(warning not yet sent*/
      converseLib.validationFailed(16); /* warning message*/
      IV0SW01.IV0SWWP4 = "Y";
                                   /* set warning-sent-flag to on*/
    end /* end of "if" statement*/
  else /* else(pf4 not pressed)*/
    IV0SW01.IV0SWWP4 = "N"; /* set warning-sent-flag off*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is pf5) /* if transfer to cust maint requested*/
    if (IV0SW01.IV0SWWP5 == "Y") /* if warning already sent*/
      IV0SSDQ(); /* delete TSQ*/
      COMMAREA.CATOAP = "KM0D"; /* set destination 'cust maint'*/
      XSEXIT(); /* perform transfer*/
      IV0SSER(); /* error "invalid security"*/
    else /* else(warning not sent yet)*/
      IV0SW01.IV0SWWP5 = "Y"; /* set warning-sent-flag on*/
      converseLib.validationFailed(16); /* warning message*/
    end /* end of "if" statement*/
  else /* else(pf5 not pressed*/
    IV0SW01.IV0SWWP5 = "N"; /* set warning-sent-flag off*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is pf1 /* if pf1 was pressed*/
   || converseVar.eventKey is pf4 /* or pf4 was pressed*/
   || converseVar.eventKey is pf5) /* or pf5 was pressed*/
    return; /* return*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is pf3) /* if pf3 pressed*/
    return; /* handle in process*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is pf6) /* if pf6 pressed*/
    return; /* handle in process*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is pf7) /* if pf7 pressed*/
    return; /* handle in process*/
  end /* end of :if" statement*/
  ;
  if (converseVar.eventKey is pf8) /* if pf8 pressed*/
    return; /* handle in process*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is pf12) /* if pf12 pressed*/
    return; /* handle in process*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is enter) /* if enter pressed*/
    return; /* handle in process*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is pa1) /* if pa1 key pressed*/
    return; /* handle in process*/
  end /* end of "if" statement*/
  ;
  if (converseVar.eventKey is pa2) /* if pa2 key pressed*/
    return; /* handle in process*/
  end /* end of "if" statement*/
  ;
   /* ***** IF THIS POINT IS REACHED AN INVALID PFKEY WAS PRESSED*/
  ;
  converseLib.validationFailed(3); /* error "invalid pfkey"*/
  ;
  ;
  ;
  ;
  ;
end // end IV0SSPF

Record IV0SW01 type basicRecord
  5 IV0SWGRP IV0SWGRP ; 
    10 IV0SWMAX IV0SWMAX ; 
    10 IV0SWFST IV0SWFST ; 
    10 IV0SWCUR IV0SWCUR ; 
    10 IV0SWLST IV0SWLST ; 
    10 IV0SWLND IV0SWLND ; 
    10 IV0SWLUP IV0SWLUP ; 
    10 IV0SWHUP IV0SWHUP ; 
    10 IV0SWHDX IV0SWHDX ; 
    10 IV0SWPFS IV0SWPFS ; 
    10 IV0SWCFN IV0SWCFN ; 
    10 IV0SWUPE IV0SWUPE ; 
    10 IV0SWSSF IV0SWSSF ; 
    10 IV0SWFGP IV0SWFGP ; 
      15 IV0SWFLG IV0SWFLG ; 
      15 IV0SWEFL IV0SWEFL ; 
    10 IV0SWUFL IV0SWUFL ; 
    10 IV0SWWP1 IV0SWWP1 ; 
    10 IV0SWWP2 IV0SWWP2 ; 
    10 IV0SWWP3 IV0SWWP3 ; 
    10 IV0SWWP4 IV0SWWP4 ; 
    10 IV0SWWP5 IV0SWWP5 ; 
    10 IV0SWWXF IV0SWWXF ; 
    10 IV0SWNDX IV0SWNDX ; 
    10 IV0SW2DX IV0SW2DX ; 
    10 IV0SW3DX IV0SW3DX ; 
    10 IV0SW4DX IV0SW4DX ; 
    10 IV0SW5DX IV0SW5DX ; 
    10 IV0SW6DX IV0SW6DX ; 
    10 IV0SW1DT IV0SW1DT ; 
      15 * num(1) ; 
      15 IV0SW1CC IV0SW1CC ; 
      15 IV0SW1YY IV0SW1YY ; 
      15 IV0SW1MM IV0SW1MM ; 
      15 IV0SW1DD IV0SW1DD ; 
    10 IV0SW2DT IV0SW2DT ; 
      15 IV0SW2YY IV0SW2YY ; 
      15 IV0SW2MM IV0SW2MM ; 
      15 IV0SW2DD IV0SW2DD ; 
    10 IV0SWNAM IV0SWNAM ; 
      15 IV0SWCHA IV0SWCHA [25] ; 
    10 IV0SWFNM IV0SWFNM ; 
      15 IV0SWFCH IV0SWFCH [35] ; 
    10 IV0SWRED IV0SWRED ; 
      15 * char(25) ; 
      15 IV0SWLIT IV0SWLIT ; 
    10 IV0SWPTT IV0SWPTT ; 
end // end IV0SW01

//*** RECORD=IV0SW02 ****
// this record is used by the IV0S CSP application. This record
// is the first parameter passed to the ta0050 program, which
// reads and writes to the temporary storage queue.
// ***********************
Record IV0SW02 type basicRecord
  5 IV0SW02G IV0SW02G ; 
    10 IV0SWLEN IV0SWLEN ; 
    10 IV0SWDTA IV0SWDTA ; 
end // end IV0SW02

Record IV0SW03 type basicRecord
  5 IV0SW03G IV0SW03G ; 
    10 IV0SWAPL IV0SWAPL ; 
    10 IV0SWCNT IV0SWCNT ; 
    10 IV0SWFUN IV0SWFUN ; 
    10 IV0SWRTN IV0SWRTN ; 
end // end IV0SW03

//*** RECORD=IV0SW04 ****
// ;/lgross 10/16/92  changed op1rcdt to op-entr-dt
// ***********************
Record IV0SW04 type basicRecord
  3 IV0SW4GP IV0SW4GP ; 
    5 IV0SWPRG IV0SWPRG ; 
      10 IV0SWPFN IV0SWPFN ; 
      10 IV0SWPAG IV0SWPAG [3] ; 
      10 IV0SWPRP IV0SWPRP [3] ; 
      10 IV0SWPPC IV0SWPPC [3] ; 
    5 SP1ABRV SP1ABRV ; 
    5 IV0SW04G IV0SW04G ; 
      10 IV1SAGY2 IV1SAGY2 ; 
      10 IV1SREP2 IV1SREP2 ; 
      10 IV0SW01G IV0SW01G ; 
        15 IV0IVCID IV0IVCID ; 
        15 SM1AGYID SM1AGYID ; 
        15 SM4REPID SM4REPID ; 
        15 OP1SAGCY OP1SAGCY [3] ; 
        15 OP1SREP OP1SREP [3] ; 
        15 OP1SSLSP OP1SSLSP [3] ; 
        15 IV1SAGCY IV1SAGCY [3] ; 
        15 IV1SREP IV1SREP [3] ; 
        15 IV1SSLSP IV1SSLSP [3] ; 
        15 IV1PRVAC IV1PRVAC ; 
        15 OP-ENTR-DT OP-ENTR-DT ; 
        15 SP1ID SP1ID ; 
      10 ZZZCHGCT ZZZCHGCT ; 
  3 * char(276) ; 
end // end IV0SW04

Record IV0SW06 type basicRecord
  5 IV0SW6GP IV0SW6GP ; 
    10 IV0SWTEX IV0SWTEX ; 
    10 IV0SWTAG IV0SWTAG ; 
    10 IV0SW06G IV0SW06G [250] ; 
      15 IV0SWVFL IV0SWVFL ; 
      15 IV1SAGY2 IV1SAGY2 ; 
      15 IV0SWNEX IV0SWNEX ; 
end // end IV0SW06

Record IV0SW07 type basicRecord
  5 IV0SW7GP IV0SW7GP ; 
    10 IV0SW7DX IV0SW7DX ; 
    10 IV0SW6LS IV0SW6LS ; 
    10 IV0SW6FS IV0SW6FS ; 
    10 IV0SW6CR IV0SW6CR ; 
end // end IV0SW07

Record IV0SW08 type basicRecord
  5 IV0SW8GP IV0SW8GP ; 
    10 IV0SW8FT IV0SW8FT ; 
    10 IV0SW8LT IV0SW8LT ; 
    10 * smallint ; 
    10 * char(1) ; 
end // end IV0SW08

Record IV0SW09 type basicRecord
  3 IV0SW9GP IV0SW9GP ; 
    5 IV0SWEM1 IV0SWEM1 ; 
      10 IV0SWER1 IV0SWER1 ; 
      10 IV0SWER2 IV0SWER2 ; 
      10 * char(46) ; 
    5 IV0SWEM2 IV0SWEM2 ; 
end // end IV0SW09

//*** RECORD=IV1REC ****
//                       IV1REC
// THIS IS THE CSP RECORD FOR DINVC.VSROVR01
// 
// Any changes to this record will require a corrsponding
// modification to iv2rec
// 
// ------------------------------------------------------------
// Maintenance History
// Date     Change ID Change# Comments
// 
// 03-20-89 FJELLI  iv89012 Change xotcd to xobcd
// 04-06-90 bcourt  rename CU-WRIT-SAGCY-ID to IV1SAGY2
//                       & CU-WRIT-SREP-ID  to IV1SREP2.
//                  (DB2 name not changed, but CSP obsolete)
// 06-11-90 jwood   add ysbcd
// 12/31/90 CHYDE   Correct data item descriptions.
//  2-15-91 bcourt  rename IV1INVID to IV0IVCID
//                  rename IV1INVDT to IV0IVCDT.
// 10-02-92 lgross  rename op1ordt to or-entr-dt and add
//                  op-srep-ovrd-fl
// **********************
Record IV1REC type basicRecord
  3 IV1GRP IV1GRP ; 
    5 IV0IVCID IV0IVCID ; 
    5 SM1AGYID SM1AGYID ; 
    5 SM4REPID SM4REPID ; 
    5 IV1SAGY2 IV1SAGY2 ; 
    5 IV1SREP2 IV1SREP2 ; 
    5 YSBCD YSBCD ; 
    5 OP-SREP-OVRD-FL OP-SREP-OVRD-FL ; 
    5 OP1SAGCY OP1SAGCY [3] ; 
    5 OP1SREP OP1SREP [3] ; 
    5 OP1SSLSP OP1SSLSP [3] ; 
    5 IV1SAGCY IV1SAGCY [3] ; 
    5 IV1SREP IV1SREP [3] ; 
    5 IV1SSLSP IV1SSLSP [3] ; 
    5 IV1PRVAC IV1PRVAC ; 
    5 IV1MRAMT IV1MRAMT ; 
    5 IV0IVCDT IV0IVCDT ; 
    5 SP1ID SP1ID ; 
    5 KUCCOID KUCCOID ; 
    5 KUMSTRID KUMSTRID ; 
    5 XNXCD XNXCD ; 
    5 XGPCD XGPCD ; 
    5 XOBCD XOBCD ; 
    5 XOCCD XOCCD ; 
    5 IV1CHGBY IV1CHGBY ; 
    5 OP-ENTR-DT OP-ENTR-DT ; 
    5 OP1CUOID OP1CUOID ; 
    5 OP1PARTN OP1PARTN ; 
    5 OP1NORID OP1NORID ; 
    5 KUSTEXT1 KUSTEXT1 ; 
    5 KUSTEXT2 KUSTEXT2 ; 
    5 XXXADDR1 XXXADDR1 ; 
    5 XXXADDR2 XXXADDR2 ; 
    5 XXXADDR3 XXXADDR3 ; 
    5 XXXCITY XXXCITY ; 
    5 XSTCD XSTCD ; 
    5 XXXZIP XXXZIP ; 
    5 XCTCD XCTCD ; 
    5 ZZZSDT ZZZSDT ; 
    5 ZZZCHGDT ZZZCHGDT ; 
    5 ZZZCHGTM ZZZCHGTM ; 
    5 ZZZCHGCT ZZZCHGCT ; 
end // end IV1REC

//*** RECORD=IV2REC ****
// IV2REC This record is a duplicate of IV1REC       <=======
// 
// Any changes to this record will require  corresponding
// modifications to IV1REC
// 
// This record correponds to dinvc.vsrovr01
// 
// Maintenance History
// -------- ------ -------------------------------------------
// 03-24-89 FJELLI IV89012 CHANGE XOTCD TO XOBCD
// 04-06-90 bcourt rename CU-WRIT-SAGCY-ID to IV1sagy2
//                      & CU-WRIT-SREP-ID  to IV1srep2.
//                 (DB2 name not changed, but CSP name obsolete
// 06-11-90 jwood  add ysbcd
//  2-15-91 bcourt rename IV1INVID to IV0IVCID
//                 rename IV1INVDT to IV0IVCDT.
// 10-06-92 lgross rename op1rcdt to op-entr-dt
//                 added op-srep-ovrd-fl
// **********************
Record IV2REC type basicRecord
  5 IV2GRP IV2GRP ; 
    10 IV1GRP IV1GRP ; 
      15 IV0IVCID IV0IVCID ; 
      15 SM1AGYID SM1AGYID ; 
      15 SM4REPID SM4REPID ; 
      15 IV1SAGY2 IV1SAGY2 ; 
      15 IV1SREP2 IV1SREP2 ; 
      15 YSBCD YSBCD ; 
      15 OP-SREP-OVRD-FL OP-SREP-OVRD-FL ; 
      15 OP1SAGCY OP1SAGCY [3] ; 
      15 OP1SREP OP1SREP [3] ; 
      15 OP1SSLSP OP1SSLSP [3] ; 
      15 IV1SAGCY IV1SAGCY [3] ; 
      15 IV1SREP IV1SREP [3] ; 
      15 IV1SSLSP IV1SSLSP [3] ; 
      15 IV1PRVAC IV1PRVAC ; 
      15 IV1MRAMT IV1MRAMT ; 
      15 IV0IVCDT IV0IVCDT ; 
      15 SP1ID SP1ID ; 
      15 KUCCOID KUCCOID ; 
      15 KUMSTRID KUMSTRID ; 
      15 XNXCD XNXCD ; 
      15 XGPCD XGPCD ; 
      15 XOBCD XOBCD ; 
      15 XOCCD XOCCD ; 
      15 IV1CHGBY IV1CHGBY ; 
      15 OP-ENTR-DT OP-ENTR-DT ; 
      15 OP1CUOID OP1CUOID ; 
      15 OP1PARTN OP1PARTN ; 
      15 OP1NORID OP1NORID ; 
      15 KUSTEXT1 KUSTEXT1 ; 
      15 KUSTEXT2 KUSTEXT2 ; 
      15 XXXADDR1 XXXADDR1 ; 
      15 XXXADDR2 XXXADDR2 ; 
      15 XXXADDR3 XXXADDR3 ; 
      15 XXXCITY XXXCITY ; 
      15 XSTCD XSTCD ; 
      15 XXXZIP XXXZIP ; 
      15 XCTCD XCTCD ; 
      15 ZZZSDT ZZZSDT ; 
      15 ZZZCHGDT ZZZCHGDT ; 
      15 ZZZCHGTM ZZZCHGTM ; 
      15 ZZZCHGCT ZZZCHGCT ; 
end // end IV2REC

// iv1record
DataItem IV0SW01G char(73)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level
DataItem IV0SW02G char(399)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level
DataItem IV0SW03G char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// iv2 group
DataItem IV0SW04G char(81)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// each occurance of data
DataItem IV0SW06G char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// century 1
DataItem IV0SW1CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// day 1
DataItem IV0SW1DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group date field 1
DataItem IV0SW1DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// month 1
DataItem IV0SW1MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// year 1
DataItem IV0SW1YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// day 2
DataItem IV0SW2DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group date field 2
DataItem IV0SW2DT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 2nd index
DataItem IV0SW2DX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// month 2
DataItem IV0SW2MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// year 2
DataItem IV0SW2YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 3nd index
DataItem IV0SW3DX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 4nd index
DataItem IV0SW4DX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// TEMP STORAGE RECORD
DataItem IV0SW4GP char(121)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 5nd index
DataItem IV0SW5DX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current first entry on map
DataItem IV0SW6CR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 5nd index
DataItem IV0SW6DX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// first entry on screen nbr
DataItem IV0SW6FS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group level
DataItem IV0SW6GP char(1754)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// last entry in table nbr
DataItem IV0SW6LS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index
DataItem IV0SW7DX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group level
DataItem IV0SW7GP char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first agency
DataItem IV0SW8FT char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level
DataItem IV0SW8GP char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// last agency
DataItem IV0SW8LT char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level
DataItem IV0SW9GP char(136)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// APPLICATION ID
DataItem IV0SWAPL char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current function
DataItem IV0SWCFN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// each character in name
DataItem IV0SWCHA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TSQ RELETIVE RECORD COUNT
DataItem IV0SWCNT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// current TSQ nbr in process
DataItem IV0SWCUR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// data for TSQ program
DataItem IV0SWDTA char(395)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag
DataItem IV0SWEFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error message
DataItem IV0SWEM1 char(68)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error messegae 2
DataItem IV0SWEM2 char(68)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error message literal
DataItem IV0SWER1 char(21)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error number
DataItem IV0SWER2 num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// each character in full name
DataItem IV0SWFCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// flag group
DataItem IV0SWFGP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// passed flag from menu
DataItem IV0SWFLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// full name(last,first,mi)
DataItem IV0SWFNM char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first TSQ number on map
DataItem IV0SWFST smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// TSQ PROGRAM FUNCTION CODE
DataItem IV0SWFUN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group working storage fld
DataItem IV0SWGRP char(157)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index hold field
DataItem IV0SWHDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// highest tsq number updated
DataItem IV0SWHUP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// length of data
DataItem IV0SWLEN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// space for '(optional)' lit
DataItem IV0SWLIT char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// last screen line nbr used
DataItem IV0SWLND smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// last TSQ number on map
DataItem IV0SWLST smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// lowest tsq number updated
DataItem IV0SWLUP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// last TS entry number
DataItem IV0SWMAX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// name field
DataItem IV0SWNAM char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index
DataItem IV0SWNDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// number of exceptions
DataItem IV0SWNEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PROPOSED AGENCY CHANGE
DataItem IV0SWPAG char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PROPOSED FUNCTION CODE
DataItem IV0SWPFN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// previous first TSQ nbr on map
DataItem IV0SWPFS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PROPOSED SPLIT COMMISSION PCT
DataItem IV0SWPPC num(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PROPOSED GROUP
DataItem IV0SWPRG char(34)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PROPOSED REP NUMBER
DataItem IV0SWPRP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// total percentages
DataItem IV0SWPTT num(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// redefines full name field
DataItem IV0SWRED char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TSQ PROGRAM RETURN CODE
DataItem IV0SWRTN num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// sub set flag
DataItem IV0SWSSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TOTAL NUMBER OF AGENCIES
DataItem IV0SWTAG smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// total number of exceptions
DataItem IV0SWTEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// update flag
DataItem IV0SWUFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update error flag
DataItem IV0SWUPE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// already viewed indicator
DataItem IV0SWVFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF1 WARNING FLAG
DataItem IV0SWWP1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF2 WARNING FLAG
DataItem IV0SWWP2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF3 WARNING FLAG
DataItem IV0SWWP3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF4 WARNING FLAG
DataItem IV0SWWP4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF5 WARNING FLAG
DataItem IV0SWWP5 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fast path warning flag
DataItem IV0SWWXF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IV_CHNG_BY
DataItem IV1CHGBY char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// iv1record
DataItem IV1GRP char(324)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IV_IVC_MRCHDS_AMT
DataItem IV1MRAMT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// IV_PRV_ACT_CD
DataItem IV1PRVAC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IV_NEW_SPLT_SAGCY
DataItem IV1SAGCY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm_sagcy_id2
DataItem IV1SAGY2 char(4)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// IV_NEW_SPLT_SREP
DataItem IV1SREP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sm_srep_id2
DataItem IV1SREP2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// IV_NEW_SPLT_PCT
DataItem IV1SSLSP decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// iv2 group
DataItem IV2GRP char(324)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// op-split-sagcy-id
DataItem OP1SAGCY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// op-split-srep-id
DataItem OP1SREP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-split-sls-pct
DataItem OP1SSLSP decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

