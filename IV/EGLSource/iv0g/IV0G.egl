package iv0g;

import corpcom1.CLBREC;
import corpcom3.XPIV002;
import corpcom3.XPIV004;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSIVS02;
import corpcom4.XSIVSCX;
import corpcom4.XSIVSEN;
import corpcom4.XSIVSIT;
import corpcom4.XSIVXF;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XBCTBL;
import corpx1.XDSTBL;
import corpx1.XGPTBL;
import corpx1.XMDTBL;
import corpx1.XOBTBL;
import corpx1.XOCTBL;
import corpx1.XSOTBL;
import corpx1.XWHTBL;
import fy.common.FY1REC;
import iv.common.*;
import ku.common.KUCREC;
import ku.common.KUYREC;
import op.common.OP1CUOID;
import op.common.OP1PARTN;
import sp.common.SP1REC;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VCORSQ01;
import vv.common.VIVCTN02;
import vv.common.VIVHDR04;
import vv.common.VIVHDR05;
//*** PROGRAM=IV0G ****
// 5-13-91  lgross added transportation shipment id to iv06m001
// 08-29-91  Added IV0GW08 to be referenced by CL2320
//           changed IV0GS35 to access CL2320 instead of
//           IO1180 so that we can bypass claims that are
//           cancelled.  This module joins claims header table
//           with claims invoicing cross reference table.
// 12-01-91 Changed application to look at IO1180 rather than
//          CL2320 and not bypass claims that are cancelled.
//          Application will now pf19 to iv0f which will access
//          CL2320 to list all claims and their status'.
// 02-05-92 allow application to have invoice number modified
//          to bring up new invoice.
//          changes: iv0g030 iv0g050 iv0gm001
// 03/13/92lgross Modified iv0gs22 to move cu-prt-xref-fl to
//          ivxrec.  Flag will be used in iv0nsdx.
// 03/30/92lgross Modified iv0gs32 to allow whse 20 and 21 to
//          to be displayed on direct ships instead of looking
//          up factory info.
// 04/21/92 lgross Modified application to display packing list
//           id, and indicate whether a discrepancy letter
//           was sent from the confirmation system.
//           Changes:  iv0gconf,iv0gm001, iv0gs37 and iv0g030
// 05/26/92 lgross Modified application to display sales office
//          abbreviation and pf20 to order comment screen
//          Changes: iv0g030, iv0gm001, iv0g050, iv0gs21
// 07/08/92 lgross Modified application to add pf21 to
//          invoice comment screen- Changes: IV0G050, IV0GM001
// 02/10/93 lgross Modified IV0GS32 to allow whse 25 to be
//          displayed on direct ships instead of looking up
//          factory info.
// 08/24/93 lgross modified map to allow pf24 access to invoice
//          carton tracking report - Changes: IV0G050, IV0GM001
// 10/21/94 GDECKE  ADD LOGIC TO HANDLE SPECIAL MESSAGE FOR
//          GOLF LEVEL PAY SUBS. IV0GS97, IV0G030, IV0REC.
// 10/24/94 GDECKE  MODIFY LOGIC FOR SHOWING LEVEL PAY MESSAGE
// 10/25/94 GDECKE  switch from using vivhdr02 to vivhdr04.
// 01/16/95 GDECKE  show correction/revision number
// 08/02/95 GDECKE  show money month: iv-pterm-adj-nmo
// 05/01/97 GDECKE  extend pack list number to 5 digits
// 12/02/97 AJALIS  Included second pack list number
//                  also second pack list number taken from
//                  vivctn02 table
// 04/14/00 RRAJAG  Regenerated for resolving EK0E ASRA abend.
// 03/14/01 gdecke  expand weight field to handle max value.
// *********************
Program IV0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "IV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  CLBREC CLBREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FY1REC FY1REC; // record
  IV0GW01 IV0GW01; // record
  IV0GW02 IV0GW02; // record
  IV6REC IV6REC; // record
  IV9REC IV9REC; // record
  IVFREC IVFREC; // record
  IVGREC IVGREC; // record
  IVXREC IVXREC; // record
  IVYREC IVYREC; // record
  KUCREC KUCREC; // record
  KUYREC KUYREC; // record
  SP1REC SP1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VCORSQ01 VCORSQ01; // record
  VIVCTN02 VIVCTN02; // record
  VIVHDR04 VIVHDR04; // record
  VIVHDR05 VIVHDR05; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XDSTBL {deleteAfterUse = yes}; // table
  use XMDTBL {deleteAfterUse = yes}; // table
  use XOCTBL {deleteAfterUse = yes}; // table
  use XOBTBL {deleteAfterUse = yes}; // table
  use XSOTBL {deleteAfterUse = yes}; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XBCTBL; // table
  use IV0GM.IV0GM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    IV0G010: IV0G010();
     /* *************************************************************/
     /* *****               F L O W    S T A G E               ******/
     /* *************************************************************/
    ;
    ;
    goto IV0G020; /* proceed to next process*/
    ;
    ;
     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0G020: IV0G020();
     /* *************************************************************/
     /* *****               F L O W    S T A G E               ******/
     /* *************************************************************/
    ;
    ;
    goto IV0G030; /* proceed to next process*/
    ;
    ;
     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0G030: IV0G030();
     /* *************************************************************/
     /* *****               F L O W    S T A G E               ******/
     /* *************************************************************/
    ;
    ;
    goto IV0G040; /* proceed to next process*/
    ;
    ;
     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0G040: IV0G040();
     /* *************************************************************/
     /* *****               F L O W    S T A G E               ******/
     /* *************************************************************/
    ;
    ;
    goto IV0G050; /* proceed to next process*/
    ;
    ;
     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
    IV0G050: IV0G050();
     /* *************************************************************/
     /* *****               F L O W    S T A G E               ******/
     /* *************************************************************/
    ;
    ;
    goto IV0G040; /* if we get to this flow section*/
                                   /* ;  then an error has occured,*/
                                   /* ;  go to iv0g040 and re-*/
                                   /* ;  converse screen.*/
    ;
    ;
     /* *************************************************************/
     /* *****          E N D    F L O W     S T A G E          ******/
     /* *************************************************************/
  end // end main
end // end IV0G

// FIRST TIME THROUGH PROCESS
Function IV0G010()
  ;
  ;
   /* *************************************************************/
   /* **** F I R S T    T I M E     T H R U     P R O C E S S *****/
   /* *************************************************************/
  ;
  ;
  XSENTRY(); /* standard entry routine*/
  ;
  ;
  IV0GS11(); /* initialize all records inappl*/
  ;
  IV0GW01.IV0GWDT = VGVar.currentShortGregorianDate; /* move current date to screen.*/
  IV0GS98(); /* reformat date*/
  IV0GM001.XXXCURDT = IV0GW01.IV0GWFDT;
                                 /* ;move current date to screen.*/
  ;
  IV0GM001.XXXRVNBR = "02"; /* this is the program revision*/
                                 /* ;  number. this number is to*/
                                 /* ;  be incrimented every time*/
                                 /* ;  the code is changed.*/
  ;
   /* *************************************************************/
   /* ** check if entry into this application was via fast-path  **/
   /* ** if so, obtain the invoice id for the inquiry from the   **/
   /* ** commarea.caitem field and intitialize the ivxrec option **/
   /* ** and type flags, otherwise move data in commarea.causera **/
   /* ** to ivxrec.                                              **/
   /* *************************************************************/
  if (COMMAREA.CAITEM > " " /* if appl was fast-pathed into.*/
   || COMMAREA.CAFRMSYS != COMMAREA.CACURSYS) /* from other sys,10-28-87*/
    ;
    IVXREC.IVXOPTN = 1; /* set option to 1*/
    IVXREC.IVXTYPFL = "I"; /* set "type-flag" to Inquiry*/
    IVXREC.IVXINIT = "IV0";
    /* ***** reformat number in commarea.caitem to invoice-id ****/
    ;
    XSIVSIT(); /* verify caitem is numeric*/
    ;
    IV0GW01.IV0GWIVC = COMMAREA.CAITEM;
    IVXREC.IV0IVCID = IV0GW01.IV0GWIVC;
    COMMAREA.CAITEM = " "; /* 11-12-87*/
    /* ************************************************************/
    ;
  else /* else(appl not fast-pathed into)*/
    ;
    IVXREC.IVXGROUP = COMMAREA.CAUSERA;
    if (IVXREC.IVXINIT != "IV0")
      IVXREC.IVXMSSNB = 18;
      IVXREC.IVXINIT = "IV0";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0A";
      XSEXIT();
      XSPF4();
      exit program;
    end
    ;
  end /* end of "if" statement*/
  ;
  ;
end // end IV0G010

// GET DATA FOR IVXREC
Function IV0G020()
  ;
  ;
   /* *************************************************************/
   /* *****     G E T    D A T A    F O R    I V X R E C     ******/
   /* *****                                                  ******/
   /* *****  PERFORM STATEMENT GROUPS, EACH OF WHICH CALLS   ******/
   /* *****  A DBII IO-MODULE WHICH WILL EXTRACT THE DATA    ******/
   /* *****  FROM THE DBII DATABASE.                         ******/
   /* *************************************************************/
  ;
  ;
  IV0GS21(); /* get row from dinvc.vivhdx01*/
                                 /* ;  and dinvc.vivhdr01 (join)*/
  ;
  if (IVXREC.KUCCONM != " ") /* if ivxrec already has co id*/
    /* next sentence                ;  skip*/
  else /* else(ivxrec does not have co name)*/
    IV0GS22(); /* get row from dcust.vcmpny01*/
  end /* end of "if" statement*/
  ;
  ;
  ;
  ;
  ;
end // end IV0G020

// GET & FORMAT DATA ON SCREEN
Function IV0G030()
   /* IV0G030*/
  ;
   /* *************************************************************/
   /* *****   G E T    &    F O R M A T    D A T A    O N    ******/
   /* *****               O N     S C R E E N                ******/
   /* *****                                                  ******/
   /* *****  PERFORM STATEMENT GROUPS WHICH CALL DBII IO-    ******/
   /* *****  MODULES, AND CSP TABLE LOOKUPS TO GET ALL DATA  ******/
   /* *****  REQUIRED FOR HEADER SCREEN, THEN FORMAT AND     ******/
   /* *****  MOVE DATA TO SCREEN.                            ******/
   /* *************************************************************/
   /* *     M A I N T E N A N C E     H I S T O R Y    L O G     **/
   /* *----------------------------------------------------------**/
   /* *        DATE  PGMR  DESCRIPTION                           **/
   /* *----------------------------------------------------------**/
   /* *****  8-30-91 moved op1cogid to screen                ******/
   /* *****  10-11-91removed order written date              ******/
   /* *****  10-14-91 move edi indicator to screen           ******/
   /* *****  02-05-92 set invoice id defined                 ******/
   /* *****   04-15-92 lgross  Added call to iv0gs37 which   ******/
   /* *****                    will check for discrepancy    ******/
   /* *****                    letter. move ts1plnbr to map  ******/
   /* ***** lgross 05/22/92    Move sales office abreviation ******/
   /* *****                    as well as code to the map    ******/
   /* ***** GDECKE 10/04/94    show level pay FYI message    ******/
   /* ***** GDECKE 10/24/94    MODIFY LEVEL PAY MSG LOGIC    ******/
   /* *     GDECKE 10/25/94    CHANGE FROM IVBREC TO VIVHDR01    **/
   /* *     GDECKE 01/30/95    GET MAXIMUM CORRECTION SEQ NBR.   **/
   /* *     GDECKE 08/02/95    show iv-pterm-adj-nmo(money month)**/
   /* *************************************************************/
  ;
  ;
   /* *************************************************************/
   /* ***** M O V E     D A T A     F R O M    I V X R E C   ******/
   /* *****             T O     S C R E E N                  ******/
   /* *************************************************************/
  ;
  ;
  IV0GM001.KUCCOID = IVXREC.KUCCOID;
  IV0GM001.KUMSTRID = IVXREC.KUMSTRID;
  IV0GM001.XNXCD = IVXREC.XNXCD;
  IV0GM001.KUCCONM = IVXREC.KUCCONM;
  ;
  ;
  ;
  ;
  ;
   /* *************************************************************/
   /* ***** M O V E     D A T A     F R O M     I V B R E C  ******/
   /* *****             T O     S C R E E N                  ******/
   /* *************************************************************/
  ;
  ;
  set IV0GM001.IV0IVCID initialAttributes;
  IV0GM001.IV0IVCID = VIVHDR04.IV0IVCID;
  IV0GM001.KUCCOID = VIVHDR04.KUCCOID;
  IV0GM001.OP1CMPNB = VIVHDR04.OP1CMPNB; /* cu_comp_co_id*/
  IV0GM001.OP1COGID = VIVHDR04.OP1COGID; /* cu_cogs_co_id*/
  IV0GM001.KUMSTRID = VIVHDR04.KUMSTRID;
  IV0GM001.XNXCD = VIVHDR04.XNXCD;
  IV0GM001.XDVCD = VIVHDR04.XDVCD;
  IV0GM001.IV-PTERM-ADJ-NMO = VIVHDR05.IV-PTERM-ADJ-NMO;
  ;
    /* show level pay FYI message re: comments on PF21.*/
    /* replace with reference to level pay flag values 'M' and 'P'.*/
  if (VIVHDR04.IV-LVL-PAY-IND == "M"
   || VIVHDR04.IV-LVL-PAY-IND == "P")
    converseLib.validationFailed(68);
  end
  ;
  IV0GW01.IV0GWDT = VIVHDR04.IV0IVCDT;
  IV0GS98(); /* reformat date*/
  IV0GM001.IV0IVCDT = IV0GW01.IV0GWFDT;
  ;
  IV0GM001.OP1CUPO = VIVHDR04.OP1CUPO;
  IV0GM001.XSOCD = VIVHDR04.XSOCD; /* move sales office code*/
  if (VIVHDR04.XSOCD in XSOTBL.XSOCD) /* if in sales office table*/
    IV0GM001.XSOABRV = XSOTBL.XSOABRV[sysVar.arrayIndex]; /* move abreviation*/
  end
  ;
  IV0GW01.IV0GWDT = VIVHDR04.OP1CUNDT;
  IV0GS98(); /* reformat date*/
  IV0GM001.OP1CUNDT = IV0GW01.IV0GWFDT;
  ;
  IV0GW01.IV0GWDT = VIVHDR04.OP1DSBDT;
  IV0GS98(); /* reformat date*/
  IV0GM001.OP1DSBDT = IV0GW01.IV0GWFDT;
  ;
  IV0GM001.XOBCD = VIVHDR04.XOBCD;
  if (VIVHDR04.XOBCD in XOBTBL.XOBCD)
    IV0GM001.XOBABRV = XOBTBL.XOBABRV[sysVar.arrayIndex];
  else
    IV0GM001.XOBABRV = "UNKNWN";
  end
  ;
   /* ***** the following code added by Grant Gilray 6/15/87 ******/
  IV0GS35(); /* determine if Claim exists & set flag*/
  ;
  IV0GS37(); /* check for discrepancy letter*/
   /* load gpc code and abbreviation*/
  ;
  IV0GM001.XGPCD = VIVHDR04.XGPCD;
  if (VIVHDR04.XGPCD in XGPTBL.XGPCD)
    IV0GM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  else
    IV0GM001.XGPABRV = "UNKNWN";
  end
  ;
   /* load brand code and abbreviation*/
  ;
  if (VIVHDR04.XBCCD > "  ")
    IV0GM001.XBCCD = VIVHDR04.XBCCD;
    if (VIVHDR04.XBCCD in XBCTBL.XBCCD)
      IV0GM001.XBCABRV = XBCTBL.XBCABRV[sysVar.arrayIndex];
    else
      IV0GM001.XBCABRV = "UNKNWN";
    end
  end
  ;
  IV0GW01.IV0GWDT = VIVHDR04.IVAOCXDT;
  IV0GS98(); /* reformat date*/
  IV0GM001.IVAOCXDT = IV0GW01.IV0GWFDT;
  ;
  IV0GM001.XOCCD = VIVHDR04.XOCCD;
  if (VIVHDR04.XOCCD in XOCTBL.XOCCD)
    IV0GM001.XOCABRV = XOCTBL.XOCABRV[sysVar.arrayIndex];
  else
    if (VIVHDR04.XOCCD != " ")
      IV0GM001.XOCABRV = "UNKNWN";
    else
      IV0GM001.XOCABRV = " ";
    end
  end
  ;
  IV0GW01.IV0GWDT = VIVHDR04.IVAECXDT;
  IV0GS98(); /* reformat date*/
  IV0GM001.IVAECXDT = IV0GW01.IV0GWFDT;
  ;
  IV0GM001.SP1ID = VIVHDR04.SP1ID;
  ;
  if (VIVHDR04.CU-EDI-IVC-IND > "0") /* if invoice sent edi alone or*/
    IV0GM001.CU-EDI-IND = "Y"; /* edi and paper*/
  else
    IV0GM001.CU-EDI-IND = "N";
  end
  ;
  IV0GM001.OP1ECANM = VIVHDR04.OP1ECANM;
  ;
  IV0GW01.IV0GWDT = VIVHDR04.OP1ECADT;
  IV0GS98(); /* reformat date*/
  IV0GM001.OP1ECADT = IV0GW01.IV0GWFDT;
  ;
  IV0GW01.IV0GWDT = VIVHDR04.OP1ORCDT;
  IV0GS98(); /* reformat date*/
  IV0GM001.OP1ORCDT = IV0GW01.IV0GWFDT;
  ;
  IV0GS-MAX-CRCT-SEQ(); /* get MAX CORRECTION SEQUENCE NUMBER*/
  ;
  IV0GM001.IV-CRCT-SEQ-NBR = VCORSQ01.IV-CRCT-SEQ-NBR;
  ;
  IV0GS32(); /* get factory name*/
  ;
  IV0GM001.TF1CARCD = VIVHDR04.TF1CARCD;
  IV0GM001.OP1ORDBY = VIVHDR04.OP1ORDBY;
  IV0GM001.TF1CARNM = VIVHDR04.TF1CARNM;
  ;
  IV0GW01.IV0GWCON = VIVHDR04.OP1CUOID;
  IV0GW01.IV0GWDOT = ".";
  IV0GW01.IV0GWNON = VIVHDR04.OP1NORID;
  IV0GM001.IV0GMORN = IV0GW01.IV0GWNBR;
  ;
   /* ***** code added by Grant Gilray 7/6/87 ******/
  if (VIVHDR04.OP1TBREP != 0) /* if Rep Id is on VIVHDR04*/
    IV0GS36(); /* Get User Id*/
  else /* else ( Id is not on VIVHDR04 ))*/
    IV0GM001.XXXUSRID = "UNKNOWN"; /* not known*/
  end /* end of "if" statement*/
   /* **********************************************/
  ;
   /* MOVE VIVHDR04.TSIPLNBR TO IV0GM001.TSIPLNBR;/* move packing*/
                                  /* list id  COMMENTED DUE TO ASN*/
  IV0GS24(); /* Get packing list nbrs to display*/
  ;
  IV0GW01.IV0GWDT = VIVHDR04.SR1SHPDT;
  IV0GS98(); /* reformat date*/
  IV0GM001.SR1SHPDT = IV0GW01.IV0GWFDT;
  ;
  IV0GM001.XMDCD = VIVHDR04.XMDCD;
  ;
  if (VIVHDR04.XMDCD in XMDTBL.XMDCD)
    IV0GM001.XMDDESC = XMDTBL.XMDDESC[sysVar.arrayIndex];
  else /* if xdmcd not found as is*/
    /* 11-12-87 drop the extra code to*/
             /* right justify and '0' fill*/
    IV0GM001.XMDDESC = "UNKNOWN";
  end
  ;
  IV0GM001.XDSCD = VIVHDR04.XDSCD;
  ;
  if (VIVHDR04.XDSCD in XDSTBL.XDSCD)
    IV0GM001.XDSABRV = XDSTBL.XDSABRV[sysVar.arrayIndex];
  else
    IV0GM001.XDSABRV = "UNKNWN";
  end
  ;
  IV0GM001.PK1NBCTN = VIVHDR04.PK1NBCTN;
  ;
   /* ***** Code added by Grant Gilray 7/6/87 ******/
  if (VIVHDR04.PK1NBCTN > 0)
    if (VIVHDR04.SR2TNBCT == 0) /* if total nbr cartons 0*/
      IV0GM001.IV0GMOFL = " "; /* blank out "of"*/
    else
      IV0GM001.IV0GMOFL = "OF"; /* blank out "of"*/
    end /* end of "if" statement*/
    ;
    IV0GM001.SR2TNBCT = VIVHDR04.SR2TNBCT;
                                   /* total number of cartons*/
  end /* end of "if" statement*/
   /* **********************************************/
  ;
  IV0GM001.PK1WT = VIVHDR04.PK1WT;
  IV0GM001.TF2PRONO = VIVHDR04.TF2PRONO;
  IV0GM001.IVAIVAMT = VIVHDR04.IVAIVAMT;
  IV0GM001.PK1BLLAD = VIVHDR04.PK1BLLAD;
  ;
  IV0GS33(); /* get shipping charges amt*/
  ;
  if (VIVHDR04.PK1PKSCH == -1) /* if more than 1 picking schedule nbr*/
    IV0GS34(); /* get all picking schedules*/
  else /* else(pick schedule nbr on hdr*/
    /* ***** convert s9(9) comp  to  X(7) ***********/
    IV0GW01.IV0GWCVN = VIVHDR04.PK1PKSCH;
    IV0GS97(); /* remove leading zeros*/
    /* MOVE 1 TO IVYREC.IVYSUB1      ; initialize index to 1*/
    /* WHILE IV0GW01.IV0GWLTR(IVYSUB1) = '0'; loop thru characters*/
      /* MOVE ' ' TO IV0GW01.IV0GWLTR(IVYSUB1); remove lead zeros*/
      /* IVYREC.IVYSUB1 = IVYREC.IVYSUB1 + 1;*/
    /* END ;*/
    IV0GM001.PK1PKSCH[1] = IV0GW01.IV0GWCVA;
    /* **********************************************/
  end
  ;
  if (VIVHDR04.IVASHPIV == -1) /* if iv_schg_ivc_id = -1*/
    IV0GM001.IV0GMSCF = "Y";
  else /* else(iv_schg_ivc_id not = -1)*/
    IV0GM001.IV0GMSCF = "N";
  end
  if (VIVHDR04.IVASHPIV <= 0)
    set IV0GM001.IV0GMSIF skip, invisible;
  else
    set IV0GM001.IV0GMSIF initialAttributes;
    IV0GW01.IV0GWICN = VIVHDR04.IVASHPIV;
    IV0GM001.IVASHPIV = IV0GW01.IV0GWICA;
  end
   /* **********move nike shipment id from VIVHDR04***************/
  if (VIVHDR04.TSFSHPID > 0)
    IV0GW01.IV0GWSHN = VIVHDR04.TSFSHPID;
    IV0GM001.TSFSHPID = IV0GW01.IV0GWSHA;
  else
    IV0GM001.TSFSHPID = "        ";
  end
  ;
   /* *************************************************************/
  ;
  ;
  ;
  ;
  ;
end // end IV0G030

// CONVERSE HEADER SCREEN
Function IV0G040()
  ;
  ;
   /* *************************************************************/
   /* *****            B E F O R E     S T A G E             ******/
   /* *****  C O N V E R S E     H E A D E R    S C R E E N  ******/
   /* *************************************************************/
  ;
  ;
  converse IV0GM001 ;
  ;
  ;
   /* *************************************************************/
   /* *****            A F T E R      S T A G E              ******/
   /* *****  C O N V E R S E     H E A D E R    S C R E E N  ******/
   /* *************************************************************/
  ;
  ;
end // end IV0G040

// TRANSFER TO REQUIRED APPL
Function IV0G050()
  ;
  ;
   /* *************************************************************/
   /* *****  T R A N S F E R    T O     R E Q U E S T E D    ******/
   /* *****              A P P L I C A T I O N               ******/
   /* *****                                                  ******/
   /* *****  THIS PROCESS WILL TRANSFER CONTROL TO THE AP-   ******/
   /* *****  PROPRIATE APPLICATION.                          ******/
   /* *****  02-05-92 lgross allow new invoice id to be      ******/
   /* *****           entered to call up new invoice         ******/
   /* *****  05-12/92 lgross - allow pf20 to get to order    ******/
   /* *****           comment screen                         ******/
   /* *****  07/08/92 lgross - allow pf21 to get to invoice  ******/
   /* *****           comment screen                         ******/
   /* *****  08/24/93 lgross - allow pf24 to get to invoice  ******/
   /* *****           tracking report                        ******/
   /* *****  01/30/95 GDECKE - ALLOW PF6 TO TRANSFER TO INVOICE ***/
   /* *****                    CORRECTION PROCESS - IV0W.    ******/
   /* *************************************************************/
  ;
  ;
   /* *************************************************************/
   /* *****     the following code is temporary !!!!!!!      ******/
   /* *************************************************************/
   /* IF EZEAID IS PA1                ;<-----temporary*/
    /* OR EZEAID IS PA2              ;<-----temporary*/
    /* EZECLOS                       ;<-----temporary*/
   /* END                             ;<-----temporary*/
   /* *************************************************************/
  ;
  if (IV0GM001.CATOAP > " "
   || IV0GM001.CAITEM != " ") /* 11-12-87*/
    COMMAREA.CATOAP = IV0GM001.CATOAP;
    COMMAREA.CAITEM = IV0GM001.CAITEM;
    XSIVXF(); /* 11-12-87 edit option/item*/
    if (converseVar.validationMsgNum == 0) /* 11-12-87*/
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
    end /* 11-12-87*/
    set IV0GM001.CAITEM cursor, bold; /* 11-12-87*/
    exit stack;
  end
  ;
  set IV0GM001.CAITEM initialAttributes; /* 11-12-87 remove bright*/
  ;
  if (converseVar.eventKey is enter)
    if (IV0GM001.IV0GMSIF != " ")
      COMMAREA.CAITEM = IV0GM001.IVASHPIV;
      COMMAREA.CATOAP = "IV0G";
      COMMAREA.CAUSERA = " ";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (IV0GM001.IV0IVCID is modified) /* if invoice id is changed*/
      COMMAREA.CAITEM = IV0GM001.IV0IVCID; /* transfer to iv0g*/
      COMMAREA.CATOAP = "IV0G"; /* with new invoice*/
      COMMAREA.CAUSERA = " ";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (IVXREC.IVXOPTN >= 0
     && IVXREC.IVXOPTN < 5)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0N";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (IVXREC.IVXOPTN == 6)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      if (IVXREC.IVXTYPFL == "I")
        COMMAREA.CATOAP = "IV0A";
        XSEXIT();
        converseLib.validationFailed(15); /* invalid security to xfer*/
        exit stack;
      else
        XSIVSEN(); /* check for selections and transfer*/
        if (converseVar.validationMsgNum != 0) /* transfer failed*/
          exit stack;
        end
      end
    end
    ;
    if (IVXREC.IVXOPTN == 7)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0H";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (IVXREC.IVXOPTN == 8)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0I";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (IVXREC.IVXOPTN == 9)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0J";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    /* *************************************************************/
    /* ** we should never get this far(when "enter" pressed).... ***/
    /* ** but if we do,goto flow and re-converse the screen      ***/
    /* *************************************************************/
    ;
    exit stack;
    ;
  else /* else("enter" not pressed)*/
    ;
    if (IV0GM001.IV0GMSIF != " ")
      converseLib.validationFailed(41); /* error "cannot press PF or PA key"*/
      exit stack;
    end
    ;
    if (converseVar.eventKey is pf1)
      XSPF1();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (converseVar.eventKey is pf3)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAITEM = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0A";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (converseVar.eventKey is pf4)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CATOAP = "MN0M";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (converseVar.eventKey is pf6)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0W";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (converseVar.eventKey is pf14)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0H";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (converseVar.eventKey is pf15)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0J";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (converseVar.eventKey is pf16)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0I";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (converseVar.eventKey is pf17)
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0K";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (converseVar.eventKey is pf20) /* go to order comment screen*/
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0C";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (converseVar.eventKey is pf21) /* go to invoice comment screen*/
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0U";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (converseVar.eventKey is pf24) /* go to carton tracking screen*/
      COMMAREA.CAUSERA = " ";
      COMMAREA.CAUSERA = IVXREC.IVXGROUP;
      COMMAREA.CATOAP = "IV0V";
      XSEXIT();
      converseLib.validationFailed(15); /* invalid security to xfer*/
      exit stack;
    end
    ;
    if (converseVar.eventKey is pf18)
      if (IVXREC.IVXTYPFL != "I")
        XSIVS18(); /* transfer to iv0e*/
      else
        converseLib.validationFailed(3); /* pf18 invalid for a single invoice*/
      end
    end
    if (converseVar.eventKey is pf19) /* check for claims*/
      if (IV0GM001.IV0GMECL == "Y") /* can only do if claims are found*/
        COMMAREA.CAUSERA = "  ";
        COMMAREA.CAUSERA = IVXREC.IVXGROUP;
        COMMAREA.CATOAP = "IV0F";
        XSEXIT();
        converseLib.validationFailed(15);
        exit stack; /* invalid security to xfer*/
      else
        converseLib.validationFailed(60);
      end
      ;
    /* *************************************************************/
    /* ** at this point we have determined that an invalid "PF"  ***/
    /* ** key was pressed. display error message and go to "flow"***/
    /* ** which will re-converse screen.                         ***/
    /* *************************************************************/
    else
      converseLib.validationFailed(3);
      ;
    end
  end
  ;
  ;
end // end IV0G050

// select comments
Function IV0GS-CALL-CORSQ()
   /* CALL IO MODULE Vcorsq01 TO ACCESS VIEW DINVC.Vcorsq01*/
   /* *******************************************************************/
   /* *       M A I N T E N A N C E     H I S T O R Y    L O G         **/
   /* *----------------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                                  **/
   /* *----------------------------------------------------------------**/
   /* * 01-20-94  GDECKE  NEW APPLICATION                              **/
   /* *******************************************************************/
   /*  */
  ;
  call "VCORSQ01" ("S1", SQLCA, VCORSQ01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0GW01.IV0GW-DEADLOCK-FL = "N";
    IV0GW01.IV0GW-DEADLOCK-CT = 0; /* deadlock count*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    IV0GW01.IV0GW-DEADLOCK-FL = "N";
    IV0GW01.IV0GW-DEADLOCK-CT = 0; /* deadlock count*/
    VCORSQ01.IV-CRCT-SEQ-NBR = 0; /* DEFAULT VALUE IF NOT FOUND*/
    return;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
    IV0GW01.IV0GW-DEADLOCK-CT = IV0GW01.IV0GW-DEADLOCK-CT + 1;
    if (IV0GW01.IV0GW-DEADLOCK-CT > 2)
      converseLib.validationFailed(4); /* database busy*/
      IV0GW01.IV0GW-DEADLOCK-FL = "N"; /* deadlock flag*/
      IV0GW01.IV0GW-ERROR-FLAG = "Y"; /* error flag*/
    end
    return;
  end
  ;
  TA1REC.TA1PGMNM = "IV0G    ";
  TA1REC.TA1MAP = "IV0GM001";
  TA1REC.TA1LOCAT[3] = "IV0GS-CALL-CORSQ";
  TA1REC.TA1LOCAT[4] = "VCORSQ01";
  TA1REC.TA1DBASE = "DINVC"; /* database*/
  TA1REC.TA1TBLVU = "VCORSQ01"; /* table view*/
  IV0GW01.IV0GW-DISP-IVC-ID = VCORSQ01.IV-IVC-ID; /* REFORMAT*/
  TA1REC.TA1TBLKE = IV0GW01.IV0GW-DISP-IVC-ID; /* table key*/
  ;
  XSIVS02(); /* error diagnosis routine*/
  ;
end // end IV0GS-CALL-CORSQ

// GET MAX CORRECTION SEQUENCE #
Function IV0GS-MAX-CRCT-SEQ()
     /* iv0gs-max-crct-seq  - get max correction sequence # for display*/
  ;
   /* *************************************************************/
   /* *****  G E T     M A X     C O R R E C T I O N         ******/
   /* *****    S E Q U E N C E    N U M B E R                ******/
   /* ***** CALL DBII IO-MODULE IO2810 TO GET FACTORY NAME   ******/
   /* *************************************************************/
   /* *   M A I N T E N A N C E     H I S T O R Y    L O G       **/
   /* *----------------------------------------------------------**/
   /* *       DATE   PGMR    DESCRIPTION                         **/
   /* *----------------------------------------------------------**/
   /* *     01/30/95  GDECKE  NEW APPLICATION                    **/
   /* *************************************************************/
  ;
  VCORSQ01.IV-IVC-ID = VIVHDR04.IV0IVCID;
  ;
  IV0GW01.IV0GW-DEADLOCK-CT = 0;
  IV0GW01.IV0GW-DEADLOCK-FL = "Y";
  ;
  while (IV0GW01.IV0GW-DEADLOCK-FL == "Y")
    IV0GS-CALL-CORSQ();
  end
  ;
   /* IF DEADLOCK FOUND WHAT MESSAGE OR OTHER ACTION IS REQUIRED?*/
  ;
  if (IV0GW01.IV0GW-DEADLOCK-CT > 0)
    VCORSQ01.IV-CRCT-SEQ-NBR = 0;
    converseLib.validationFailed(69);
    return;
  end
  ;
   /* IF DB2 ERROR FOUND WHAT MESSAGE OR OTHER ACTION IS REQUIRED?*/
   /* WHAT IS THE NAME OF THE ERROR FLAG USED IN INVOICE APPLICATIONS?*/
  ;
  if (IV0GW01.IV0GW-ERROR-FLAG == "Y")
    VCORSQ01.IV-CRCT-SEQ-NBR = 0;
    converseLib.validationFailed(70);
    return;
  end
  ;
  ;
  ;
  ;
end // end IV0GS-MAX-CRCT-SEQ

// INITIALIZE ALL RECORDS IN APPL
Function IV0GS11()
  ;
  ;
   /* *************************************************************/
   /* *****  I N I T I A L I Z E    A L L    R E C O R D S   ******/
   /* *****          I N     A P P L I C A T I O N           ******/
   /* *************************************************************/
  ;
   /* *************************************************************/
   /* *    m a i n t e n a n c e     h i s t o r y     l o g     **/
   /* *----------------------------------------------------------**/
   /* *   date    pgmr    description                            **/
   /* *----------------------------------------------------------**/
   /* * 10-25-94  gdecke  switch from ivbrec to vivhdr04         **/
   /* *************************************************************/
  ;
  set CLBREC empty;
  set ERRSQLCA empty;
  set KUCREC empty;
  set KUYREC empty;
  set VIVHDR04 empty;
  set IVXREC empty;
  set IVYREC empty;
  set IV0GW01 empty;
  set IV6REC empty;
  set IV9REC empty;
  set FY1REC empty;
  set SP1REC empty;
  set SQLCA empty;
  set TA1REC empty;
  ;
  set IV0GM001 empty;
  ;
  ;
  ;
  ;
  ;
end // end IV0GS11

// GET INVOICE HEADER DATA
Function IV0GS21()
  ;
  ;
   /* *************************************************************/
   /* ***** G E T    I N V O I C E    H E A D E R    D A T A ******/
   /* *****                                                  ******/
   /* ***** call db2 io-mod VIVHDR04 which gets one row from   ******/
   /* ***** a join between the dinvc.vivhdx01 and            ******/
   /* ***** dinvc.vivhdr01 tables.                           ******/
   /* ***** 05/22/92 lgross move sales office abreviation    ******/
   /* *****          as well as code*/
   /* ***** 08/02/95 show iv-pterm-adj-nmo (money month)     ******/
   /* *************************************************************/
  ;
   /* *************************************************************/
   /* *    M A I N T E N A N C E    H I S T O R Y    L O G       **/
   /* *----------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                            **/
   /* *----------------------------------------------------------**/
   /* * 10-25-94  GDECKE  CHANGE IVBREC TO VIVHDR04              **/
   /* * 08-02-95  GDECKE  GET VIVHDR05 FOR MONEY MONTH -         **/
   /* *                   IV-PTERM-ADJ-NMO                       **/
   /* *************************************************************/
  ;
   /* ivxrec will contain invoice id for inquiry*/
  ;
  VIVHDR04.IV0IVCID = IVXREC.IV0IVCID;
  IVYREC.IVYIVCN = IVXREC.IV0IVCID;
  VIVHDR04.IV0PARTN = IVYREC.IV0PARTN;
  ;
  call "IO1140" ("S ", SQLCA, VIVHDR04) {isNoRefresh = yes}; /* get invoice header row*/
  ;
  if (SQLCA.VAGen_SQLCODE == 100 /* if header not found*/
   && IVXREC.IVXTYPFL == "I")    /* and 'inquiry' type*/
    IVXREC.IVXMSSNB = 35; /* error msg number*/
    COMMAREA.CATOAP = "IV0A"; /* main invoice menu*/
    COMMAREA.CAUSERA = IVXREC.IVXGROUP; /* move ivxrec to commarea*/
    XSEXIT(); /* transfer control to menu*/
    /* *************************************************************/
    /* ***** if you get to here then transfer to mn0a for lack *****/
    /* ***** of anything better to do.                         *****/
    /* *************************************************************/
    COMMAREA.CATOAP = "MN0M"; /* main invoice menu*/
    XSEXIT(); /* transfer control to menu*/
    /* *************************************************************/
    /* ***** if you get to here then die for lack              *****/
    /* ***** of anything better to do.                         *****/
    /* *************************************************************/
    exit program;
  end /* end of "if" statement*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* if return from VIVHDR04 not ok*/
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1DBASE = "DINVC";
    TA1REC.TA1TBLVU = "VIVHDX01";
    TA1REC.TA1PGMNM = "IV0G"; /* 10-30-87*/
    TA1REC.TA1MAP = "IV0GM001"; /* 10-30-87*/
    /* ***** reformat invc-id (key) for error message ******/
    IV0GW01.IV0GWCUN = VIVHDR04.IV0IVCID;
    TA1REC.TA1TBLKE = IV0GW01.IV0GWCUA;
    /* *****************************************************/
    TA1REC.TA1LOCAT[3] = "IV0GS21 ";
    TA1REC.TA1LOCAT[4] = "VIVHDR04";
    IV0GS99();
    /* *****************************************************/
  end /* end of "if" statement*/
  ;
   /* *************************************************************/
   /* ** at this point the invoice header row has been         ****/
   /* ** successfully retrieved. now the appropriate data      ****/
   /* ** is moved to the ivxrec.                               ****/
   /* *************************************************************/
  ;
  IVXREC.IV0IVCDT = VIVHDR04.IV0IVCDT;
  IVXREC.KUCCOID = VIVHDR04.KUCCOID;
  IVXREC.KUMSTRID = VIVHDR04.KUMSTRID;
  IVXREC.XNXCD = VIVHDR04.XNXCD;
  IVXREC.XOBCD = VIVHDR04.XOBCD;
  IVXREC.XSOCD = VIVHDR04.XSOCD;
  if (IVXREC.XSOCD in XSOTBL.XSOCD) /* if in sales office table*/
    IVXREC.XSOABRV = XSOTBL.XSOABRV[sysVar.arrayIndex]; /* /move abreviation*/
  end
  IVXREC.OP1CUOID = VIVHDR04.OP1CUOID;
  IVXREC.OP1NORID = VIVHDR04.OP1NORID;
  IVXREC.XGPCD = VIVHDR04.XGPCD;
  IVXREC.OP1CUPO = VIVHDR04.OP1CUPO;
  IVXREC.SP1ID = VIVHDR04.SP1ID;
  IVXREC.XOCCD = VIVHDR04.XOCCD;
  IVXREC.SM1AGYID = VIVHDR04.SM1AGYID;
  IVXREC.SM4REPID = VIVHDR04.SM4REPID;
  ;
    /* GET MONEY MONTH FROM HEADER VIEW VIVHDR05*/
  IV0GS23();
  ;
  ;
end // end IV0GS21

// GET CUSTOMER DATA
Function IV0GS22()
   /* *************************************************************/
   /* *****   G E T     C U S T O M E R     D A T A          ******/
   /* *****                                                  ******/
   /* ***** call db2 io-mod IO0240 which retrieves one row   ******/
   /* ***** from the DCUST.VCMPNY01.                         ******/
  ;
   /* 03-27-91 bcourt Hold KUCSKIND for use in IV0NSDC.*/
   /* 08/12/91 lgross move kucgrpid when kucskind = 'r'     ******/
   /* 03/13/92 lgross move cu-prt-xref-fl to ivxrec         ******/
   /* will be used in iv0nsdx to determing  ******/
   /* IF LOOKUP ON PRODUCT XREF IS NECESSARY******/
   /* *************************************************************/
  ;
  ;
  KUCREC.KUCCOID = IVXREC.KUCCOID;
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes}; /* get company row*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* if return from io1140 not ok*/
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCMPNY01";
    IV0GW01.IV0GWCUN = KUCREC.KUCCOID;
    TA1REC.TA1TBLKE = IV0GW01.IV0GWCUA;
    TA1REC.TA1LOCAT[3] = "IV0GS22 ";
    TA1REC.TA1LOCAT[4] = "IO0240";
    IV0GS99();
    /* *****************************************************/
  end /* end of "if" statement*/
  ;
   /* *************************************************************/
   /* ** at this point the customer company row has been       ****/
   /* ** successfully retrieved. now the appropriate data      ****/
   /* ** is moved to the ivxrec.                               ****/
   /* *************************************************************/
  ;
  IVXREC.KUCCONM = KUCREC.KUCCONM;
  IVXREC.KUCSKIND = KUCREC.KUCSKIND; /* 3-27-91 added*/
  IVXREC.XLBCD = KUCREC.XLBCD;
  IVXREC.CU-PRT-XREF-FL = KUCREC.CU-PRT-XREF-FL;
  if (KUCREC.KUCSKIND == "P")
    IVXREC.KUKPCOID = KUCREC.KUKPCOID; /* used in iv0nsdc*/
  end
  if (KUCREC.KUCSKIND == "R")
    IVXREC.KUCGRPID = KUCREC.KUCGRPID; /* used in iv0nsdc*/
  end
  ;
  ;
end // end IV0GS22

// GET INVOICE HEADER-VIVHDR05
Function IV0GS23()
  ;
  ;
   /* *************************************************************/
   /* ***** G E T    I N V O I C E    H E A D E R    D A T A ******/
   /* *****                                                  ******/
   /* ***** call db2 io-mod VIVHDR05 which gets one row from   ******/
   /* ***** a join between the dinvc.vivhdx01 and            ******/
   /* ***** dinvc.vivhdr01 tables.                           ******/
   /* ***** 05/22/92 lgross move sales office abreviation    ******/
   /* *****          as well as code*/
   /* ***** 08/02/95 show iv-pterm-adj-nmo (money month)     ******/
   /* *************************************************************/
  ;
   /* *************************************************************/
   /* *    M A I N T E N A N C E    H I S T O R Y    L O G       **/
   /* *----------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                            **/
   /* *----------------------------------------------------------**/
   /* * 10-25-94  GDECKE  CHANGE IVBREC TO VIVHDR05              **/
   /* * 08-02-95  GDECKE  GET VIVHDR05 FOR MONEY MONTH -         **/
   /* *                   IV-PTERM-ADJ-NMO                       **/
   /* *************************************************************/
  ;
   /* ivxrec will contain invoice id for inquiry*/
  ;
  VIVHDR05.IV0IVCID = IVXREC.IV0IVCID;
  VIVHDR05.IV0PARTN = IVYREC.IV0PARTN;
  ;
  call "VIVHDR05" ("S ", SQLCA, VIVHDR05) {isNoRefresh = yes}; /* get invoice header row*/
  ;
  if (SQLCA.VAGen_SQLCODE == 100 /* if header not found*/
   && IVXREC.IVXTYPFL == "I")    /* and 'inquiry' type*/
    IVXREC.IVXMSSNB = 35; /* error msg number*/
    COMMAREA.CATOAP = "IV0A"; /* main invoice menu*/
    COMMAREA.CAUSERA = IVXREC.IVXGROUP; /* move ivxrec to commarea*/
    XSEXIT(); /* transfer control to menu*/
    /* *************************************************************/
    /* ***** if you get to here then transfer to mn0a for lack *****/
    /* ***** of anything better to do.                         *****/
    /* *************************************************************/
    COMMAREA.CATOAP = "MN0M"; /* main invoice menu*/
    XSEXIT(); /* transfer control to menu*/
    /* *************************************************************/
    /* ***** if you get to here then die for lack              *****/
    /* ***** of anything better to do.                         *****/
    /* *************************************************************/
    exit program;
  end /* end of "if" statement*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* if return from VIVHDR05 not ok*/
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1DBASE = "DINVC";
    TA1REC.TA1TBLVU = "VIVHDR05";
    TA1REC.TA1PGMNM = "IV0G"; /* 10-30-87*/
    TA1REC.TA1MAP = "IV0GM001"; /* 10-30-87*/
    /* ***** reformat invc-id (key) for error message ******/
    IV0GW01.IV0GWCUN = VIVHDR05.IV0IVCID;
    TA1REC.TA1TBLKE = IV0GW01.IV0GWCUA;
    /* *****************************************************/
    TA1REC.TA1LOCAT[3] = "IV0GS23 ";
    TA1REC.TA1LOCAT[4] = "VIVHDR05";
    IV0GS99();
    /* *****************************************************/
  end /* end of "if" statement*/
  ;
end // end IV0GS23

// Get packing list nbrs
Function IV0GS24()
  ;
  ;
   /* *************************************************************/
   /* ***** G E T    P A C K I N G   L I S T   N U M B E R   ******/
   /* *****                                                  ******/
   /* ***** Call DB2 IO-MOD VIVCTN02 which gets packing list ******/
   /* ***** nbrs from DINVC.VIVCTN02 table.                  ******/
   /* ***** Gets two distinct pack list nbrs                 ******/
   /* *************************************************************/
  ;
   /* *************************************************************/
   /* *    M A I N T E N A N C E    H I S T O R Y    L O G       **/
   /* *----------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                            **/
   /* *----------------------------------------------------------**/
   /* * 12/02/97 AJALIS                                          **/
   /* *************************************************************/
  ;
   /* pass invoice id to select*/
  ;
  VIVCTN02.IV-IVC-ID = IVXREC.IV0IVCID;
  VIVCTN02.IV-IVC-PART-CHAR = IVYREC.IV0PARTN;
  ;
  call "VIVCTN02" ("S1", SQLCA, VIVCTN02) {isNoRefresh = yes}; /* Get Invoice Cartn  row*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful*/
   /* ------------------------------------------------------------*/
  ;
   /* IF EZERT8 EQ '00000000'           /* Call successful*/
  if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
    ;
    call "VIVCTN02" ("N1", SQLCA, VIVCTN02) {isNoRefresh = yes}; /* Get first cartn row*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* if a crtn  is found*/
      ;
          /* First packing list*/
      IV0GM001.TSIPLNBR[1] = VIVCTN02.TS-NIKE-PL-NBR;
      ;
      IV0GM001.TSIPLNBR[2] = "     ";
         /* Space to Second pk list nbr*/
      ;
      while (IV0GM001.TSIPLNBR[1] == VIVCTN02.TS-NIKE-PL-NBR
       && SQLCA.VAGen_SQLCODE == 0) /* loop until a different packing list*/
                                  /* nbr than the first one*/
        call "VIVCTN02" ("N1", SQLCA, VIVCTN02) {isNoRefresh = yes}; /* get next row*/
        ;
        if (SQLCA.VAGen_SQLCODE == 0
         && IV0GM001.TSIPLNBR[1] != VIVCTN02.TS-NIKE-PL-NBR)
                  /* If a row  is found and has a diff pklist nbr*/
          IV0GM001.TSIPLNBR[2] = VIVCTN02.TS-NIKE-PL-NBR;
                  /* Second packlist nbr*/
        end /* End if*/
        ;
      end /* End while*/
      ;
      call "VIVCTN02" ("C1", SQLCA, VIVCTN02) {isNoRefresh = yes}; /* CLOSE CURSOR*/
      return; /* Return to previous process*/
    end /* end if*/
    ;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* NOT EVEN ONE ROW FOUND*/
      IV0GM001.TSIPLNBR[1] = "*****"; /* FIRST PACKING LIST*/
      IV0GM001.TSIPLNBR[2] = "*****"; /* FIRST PACKING LIST*/
      call "VIVCTN02" ("C1", SQLCA, VIVCTN02) {isNoRefresh = yes}; /* CLOSE CURSOR*/
      return; /* Return to previous process*/
    else
      ;
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
      TA1REC.TA1DBASE = "DINVC";
      TA1REC.TA1TBLVU = "VIVCTN02";
      TA1REC.TA1PGMNM = "IV0G"; /**/
      TA1REC.TA1MAP = "IV0GM001"; /**/
      IV0GW01.IV0GWCUN = VIVCTN02.IV-IVC-ID;
      TA1REC.TA1TBLKE = IV0GW01.IV0GWCUA;
      TA1REC.TA1LOCAT[3] = "IV0GS24 ";
      TA1REC.TA1LOCAT[4] = "VIVCTN02";
      IV0GS99();
    end /* end of "if SQLCODE 100 statement*/
  end /* end of "if" SQLCODE EQ 0 statement*/
  ;
  ;
end // end IV0GS24

// GET FACTORY NAME FROM FCTY CD
Function IV0GS32()
  ;
  ;
   /* *************************************************************/
   /* *****  G E T     F A C T O R Y     N A M E     F R O M ******/
   /* *****            F A C T O R Y     C O D E             ******/
   /* ***** CALL DBII IO-MODULE io2810 TO GET FACTORY NAME   ******/
   /* *************************************************************/
   /* *   M A I N T E N A N C E     H I S T O R Y    L O G       **/
   /* *----------------------------------------------------------**/
   /* *       DATE   PGMR    DESCRIPTION                         **/
   /* *----------------------------------------------------------**/
   /* ***** 03/30/92 lgross Look up factory name on direct   ******/
   /* *****          ships only when not warehouse 20 or 21  ******/
   /* ***** 10/19/92  lgross don't look up factory name on   ******/
   /* *****           direct ships when warehouse 22         ******/
   /* ***** 02/10/93  lgross don't look up factory name on   ******/
   /* *****           direct ships when warehouse 25         ******/
   /* *     10/25/94  GDECKE  CHANGE IVBREC TO VIVHDR04          **/
   /* *************************************************************/
  ;
  ;
  if (VIVHDR04.XDSCD == "1"  /* if this was a direct ship*/
   && VIVHDR04.XWHCD != "20" /* and not nil or golf warehouse*/
   && VIVHDR04.XWHCD != "21" 
   && VIVHDR04.XWHCD != "22" /* not airspeed salesman samples*/
   && VIVHDR04.XWHCD != "25") /* not crested*/
                                 /* ;  look up factory name*/
    IV0GM001.FY1FCTYC = VIVHDR04.FY1FCTYC; /* move factory code to map*/
    ;
    FY1REC.FY1FCTYC = VIVHDR04.FY1FCTYC; /* move factory code to i/o*/
    ;
    FY1REC.XGPCD = VIVHDR04.XGPCD;
                                   /* move xgp code to io work record*/
    ;
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes};
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      IV0GM001.FY1FCTNM = FY1REC.FY1FCTNM;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        IV0GM001.FY1FCTNM = "UNKNOWN";
      else
        /* *****************************************************/
        /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
        /* *****************************************************/
        TA1REC.TA1MAP = " "; /* 10-30-87*/
        TA1REC.TA1DBASE = "DWPROD";
        TA1REC.TA1TBLVU = "VFCTY001";
        TA1REC.TA1TBLKE = FY1REC.FY1FCTYC;
        TA1REC.TA1LOCAT[3] = "IV0GS32 ";
        TA1REC.TA1LOCAT[4] = "IO2810";
        IV0GS99();
        /* *****************************************************/
      end
    end
  else /* else(not a direct ship- or*/
                                 /* ; this is a golf or nil warehouse)*/
                                 /* ;  look up warehouse name*/
    IV0GM001.FY1FCTYC = VIVHDR04.XWHCD;
    if (VIVHDR04.XWHCD in XWHTBL.XWHCD)
      IV0GM001.FY1FCTNM = XWHABRV[sysVar.arrayIndex];
    else
      IV0GM001.FY1FCTNM = "UNKNOWN";
    end
  end
  ;
  ;
  ;
  ;
  ;
end // end IV0GS32

// GET SHIPPING CHARGES AMOUNT
Function IV0GS33()
  ;
  ;
   /* *************************************************************/
   /* *****   G E T     S H I P P I N G     C H A R G E S    ******/
   /* *****               A M O U N T                        ******/
   /* *****                                                  ******/
   /* ***** CALL DBII IO-MODULE IO1080 TO GET SHIPPING       ******/
   /* ***** CHARGES FROM DINVC.VIVGLX01 ( GL TABLE )         ******/
   /* *************************************************************/
   /* *     M A I N T E N A N C E    H I S T O R Y    L O G      **/
   /* *----------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                            **/
   /* *----------------------------------------------------------**/
   /* * 10-24-94  GDECKE  CHANGE IVBREC TO VIVHDR04              **/
   /* *************************************************************/
  ;
  ;
  IV6REC.IV0PARTN = VIVHDR04.IV0PARTN;
  IV6REC.IV0IVCID = VIVHDR04.IV0IVCID;
  IV6REC.PFJXREF = "SHP"; /* code for shipping chgs*/
  IV6REC.IV6FBTYP = "F"; /* code for 'off-face'*/
  IV6REC.OP2LNINB = 0; /* always zero*/
  IV6REC.IV6GLSEQ = " "; /* always a space*/
  ;
  call "IO1080" ("S ", SQLCA, IV6REC) {isNoRefresh = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IV0GM001.IV6GLAMT = IV6REC.IV6GLAMT;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      IV0GM001.IV6GLAMT = 0;
    else
      /* *****************************************************/
      /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
      /* *****************************************************/
      TA1REC.TA1DBASE = "DINVC";
      TA1REC.TA1TBLVU = "VIVGLX01";
      TA1REC.TA1TBLKE = IV6REC.IV6KEY;
      TA1REC.TA1LOCAT[3] = "IV0GS33 ";
      TA1REC.TA1LOCAT[4] = "IO1080";
      IV0GS99();
      /* *****************************************************/
    end
  end
  ;
  ;
  ;
  ;
  ;
end // end IV0GS33

// GET ALL PICKING SCHEDULES
Function IV0GS34()
  ;
  ;
   /* *************************************************************/
   /* *****       G E T     A L L     P I C K I N G          ******/
   /* *****               S C H E D U L E S                  ******/
   /* *****                                                  ******/
   /* ***** CALL DBII IO-MODULE IO1060 TO GET PICKING        ******/
   /* ***** SCHEDULES FOR THIS INVOICE ( DINVC.VIVPIK01 )    ******/
   /* *************************************************************/
   /* *     M A I N T E N A N C E     H I S T O R Y    L O G     **/
   /* *----------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                            **/
   /* *----------------------------------------------------------**/
   /* * 10-25-94  GDECKE  CHANGE IVBREC TO VIVHDR04              **/
   /* *************************************************************/
  ;
  ;
  IV9REC.IV0PARTN = VIVHDR04.IV0PARTN;
  IV9REC.IV0IVCID = VIVHDR04.IV0IVCID;
  ;
  call "IO1060" ("S ", SQLCA, IV9REC) {isNoRefresh = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    IVYREC.IVYSUB = 1; /* initialize index to 1*/
    while (IVYREC.IVYSUB <= 8 /* loop thru all picking nbrs*/
     && IV9REC.PK1PKSCH[IVYSUB] > 0)
      /* ***** convert pic s9(9) comp to x(7) **************/
      IV0GW01.IV0GWCVN = IV9REC.PK1PKSCH[IVYSUB];
      IV0GS97(); /* remove leading zeroes*/
      /* MOVE 1 TO IVYREC.IVYSUB1    ; initialize index to 1*/
      /* WHILE IV0GW01.IV0GWLTR(IVYSUB1) = '0'; loop thru characters*/
        /* MOVE ' ' TO IV0GW01.IV0GWLTR(IVYSUB1);*/
        /* IVYREC.IVYSUB1 = IVYREC.IVYSUB1 + 1;*/
      /* END ;*/
      IV0GM001.PK1PKSCH[IVYSUB] = IV0GW01.IV0GWCVA;
      /* ***************************************************/
      /* MOVE IV9REC.PK1PKSCH(IVYSUB) TO IV0GM001.PK1PKSCH(IVYSUB);*/
      IVYREC.IVYSUB = IVYREC.IVYSUB + 1;
    end
    if (IV9REC.PK1PKSCH[9] != 0)
      IV0GM001.PK1PKSCH[8] = "MORE   ";
    end
  else
    /* *****************************************************/
    /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
    /* *****************************************************/
    TA1REC.TA1DBASE = "DINVC";
    TA1REC.TA1TBLVU = "VIVPIK01";
    TA1REC.TA1TBLKE = IV9REC.IV9KEY;
    TA1REC.TA1LOCAT[3] = "IV0GS34 ";
    TA1REC.TA1LOCAT[4] = "IO1060";
    IV0GS99();
    /* *****************************************************/
  end
  ;
  ;
  ;
  ;
  ;
end // end IV0GS34

// Determine if Claim Exists
Function IV0GS35()
   /* *************************************************************/
   /* *****      D E T E R M I N E    I F     C L A I M      ******/
   /* *****     E X I S T S    A N D    S E T    F L A G     ******/
   /* *************************************************************/
   /* *     M A I N T E N A N C E    H I S T O R Y    L O G      **/
   /* *----------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                            **/
   /* *----------------------------------------------------------**/
   /* * 10-25-94  GDECKE  CHANGE IVBREC TO VIVHDR04              **/
   /* *************************************************************/
  ;
  set CLBREC empty;
  set SQLCA empty;
  ;
  CLBREC.IV0PARTN = VIVHDR04.IV0PARTN;
  CLBREC.IV0IVCID = VIVHDR04.IV0IVCID;
  ;
  call "IO1180" ("S1", SQLCA, CLBREC) {isNoRefresh = yes}; /* select set for inc id*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if select set went okay*/
    call "IO1180" ("N1", SQLCA, CLBREC) {isNoRefresh = yes}; /* select next for inc id*/
    if (SQLCA.VAGen_SQLCODE == 0) /* if a claim is found*/
      IV0GM001.IV0GMECL = "Y"; /* set claim exists flag on*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* calim is not found*/
        IV0GM001.IV0GMECL = "N"; /* set claim flag exists off*/
      else
        /* normally if the return code was not 0 or 100 the*/
        /* application would abend....however this one flag*/
        /* is rather insignificant, so instead we will simply*/
        /* move a value of '?' to the field.*/
        IV0GM001.IV0GMECL = "?"; /* set claim exists to unknown*/
      end
    end /* end of "if" statement*/
    call "IO1180" ("C1", SQLCA, CLBREC) {isNoRefresh = yes}; /* close set*/
  else
    ;
    /* normally if the return code was not 0 or 100 the*/
    /* application would abend....however this one flag*/
    /* is rather insignificant, so instead we will simply*/
    /* move a value of '?' to the field.*/
    ;
    IV0GM001.IV0GMECL = "?"; /* set claim exists to unknown*/
    ;
  end /* end of "if" statement*/
  ;
  ;
  ;
  ;
  ;
end // end IV0GS35

// Get Taken By Reps Id
Function IV0GS36()
   /* *************************************************************/
   /* ***** G E T     T A K E N     B Y     R E P S     I D  ******/
   /* *****                                                  ******/
   /* ***** Call IO-MOD IO0550 to get user ID for sales Rep  ******/
   /* *************************************************************/
   /* *     M A I N T E N A N C E     H I S T O R Y     L O G    **/
   /* *----------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                            **/
   /* *----------------------------------------------------------**/
   /* * 10-25-94  GDECKE  CHANGE IVBREC TO VIVHDR04              **/
   /* *************************************************************/
  ;
  ;
  set KUYREC empty;
  ;
  KUYREC.KUYSVRID = VIVHDR04.OP1TBREP;
  ;
  call "IO0550" ("S ", SQLCA, KUYREC) {isNoRefresh = yes}; /* get rep id*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if return code okay*/
    IV0GM001.XXXUSRID = KUYREC.XXXUSRID; /* move User id to map*/
  else /* else ( return cd not ok )*/
    if (SQLCA.VAGen_SQLCODE == 100) /* if Not found*/
      IV0GM001.XXXUSRID = "UNKNOWN"; /* use "unknown"*/
    else /* else*/
      /* *****************************************************/
      /* *****  THIS IS DBII ERROR PROCESSING CODE      ******/
      /* *****************************************************/
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VSVREP01";
      IV0GW01.IV0GWECV = KUYREC.KUYSVRID;
      TA1REC.TA1TBLKE = IV0GW01.IV0GWECV;
      TA1REC.TA1LOCAT[3] = "IV0GS36 ";
      TA1REC.TA1LOCAT[4] = "IO0550";
      IV0GS99();
      /* *****************************************************/
    end
  end
  ;
  ;
  ;
  ;
  ;
end // end IV0GS36

// was discrepancy letter sent
Function IV0GS37()
   /* *****************************************************************/
   /* This module will check if a discrepancy letter has been sent  **/
   /* and was it sentto the buyer or the rep.  A join of DORDC.     **/
   /* LETTR01 and DORDC.VDISTB01 will search for letters sent to the**/
   /* buyer.  If a return from IV1490 indicates a letter was        **/
   /* sent to the buyer, no further searches are necessary and the  **/
   /* screen will indicate a 'buyer'.  If this call indicates       **/
   /* no letter was sent to the buyer, a second call is made to     **/
   /* IV1490 which will check DORDC.VLETTR01 for any discrepancy    **/
   /* letter sent.  If one is found, it would have been sent to the **/
   /* rep and therefore an 'rep' will be indicated on the screen.   **/
   /* *****************************************************************/
  set IV0GW02 empty;
  set SQLCA empty;
  IV0GW02.IV0GWTSK = "S1"; /* check for buyers letter*/
  IV0GW02.OP1CUOID = IVXREC.OP1CUOID; /* move order number*/
  IV0GW01.IV0GW-CUST-ORD-ID = IVXREC.OP1CUOID; /* to working storage*/
  IV0GW02.OP1PARTN = IV0GW01.IV0GW-ORD-PART-CHAR; /**/
                                  /* move order-part-char*/
  call "IV1490" (IV0GW02, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* call join of lettr and dist*/
  if (SQLCA.VAGen_SQLCODE == 0 /* if found on letter and dist table*/
   || SQLCA.VAGen_SQLCODE == -811) /* more than one letter found*/
    IV0GM001.IV0GMDISC = "BUYER"; /* move to map*/
  else
    IV0GW02.IV0GWTSK = "S2";
    call "IV1490" (IV0GW02, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* call dordc.vlettr01*/
    if (SQLCA.VAGen_SQLCODE == 0 /* one entry on table*/
     || SQLCA.VAGen_SQLCODE == -811) /* more than one entry on table*/
      IV0GM001.IV0GMDISC = "REP"; /* move to map*/
    else
      IV0GM001.IV0GMDISC = "NO"; /* move to map*/
    end
  end
end // end IV0GS37

// REMOVE PICK SCHED LEAD ZEROES
Function IV0GS97()
   /* ***      iv0gs97*/
   /* *****************************************************;*/
   /* *** REMOVE LEADING ZEROES FROM PICK SCHEDULE NUMBERS ;*/
   /* *****************************************************;*/
  ;
   /* ***********************************************************/
   /* *    M A I N T E N A N C E     H I S T O R Y    L O G    **/
   /* *--------------------------------------------------------**/
   /* *   DATE    PGMR    DESCRIPTION                          **/
   /* *--------------------------------------------------------**/
   /* * 10-04-94  GDECKE  RESTRUCTURE LOGIC TO AVOID ABEND     **/
   /* *                   DUE TO TABLE OVERFLOW                **/
   /* ***********************************************************/
  ;
  ;
  IVYREC.IVYSUB1 = 1; /* initialize index to 1*/
  while (IVYSUB1 < 8)
    if (IV0GW01.IV0GWLTR[IVYSUB1] == "0")
      IV0GW01.IV0GWLTR[IVYSUB1] = " ";
      IVYREC.IVYSUB1 = IVYREC.IVYSUB1 + 1;
    else
      IVYREC.IVYSUB1 = 10;
    end
  end
  ;
  ;
end // end IV0GS97

// REFORMAT DATE
Function IV0GS98()
  ;
  ;
   /* *************************************************************/
   /* *****           R E F O R M A T     D A T E            ******/
   /* *************************************************************/
  ;
  ;
  IV0GW01.IV0GWFMM = IV0GW01.IV0GWMM;
  IV0GW01.IV0GWFDD = IV0GW01.IV0GWDD;
  IV0GW01.IV0GWFYY = IV0GW01.IV0GWYY;
  ;
  ;
  ;
  ;
  ;
end // end IV0GS98

// COMMON ERROR ROUTINE, TA0020
Function IV0GS99()
  ;
      /* *********************************************************/
      /* * online abort routine for iv system                   **/
      /* *********************************************************/
  ;
  TA1REC.TA1TYPE = "DB2"; /* abend type*/
  TA1REC.TA1FUNC = "RETN"; /* abend func*/
  TA1REC.TA1PGMNM = "IV0G"; /* pgm name, 10-30-87*/
  set ERRSQLCA empty; /* clear area*/
  move SQLCA to ERRSQLCA withV60Compat; /* save orig sqlca*/
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.rollback();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* synpoint rollback*/
  try
    call "TA0020" (TA1REC, ERRSQLCA);
  end /* abend module*/
  COMMAREA.CAUSERA = " "; /* clear user commarea*/
  XSPF4(); /* master menu*/
  exit program; /* master menu failure*/
  ;
  ;
  ;
   /* *************************************************************/
end // end IV0GS99

// Enter Key Pressed from Detail
Function XSIVS18()
  ;
     /* ***   this statement group handles the case where  ****/
     /* *** PF18 was pressed on an invoice inquiry screen, ****/
     /* *** and the type indicates that we came from the   ****/
     /* *** Selection List.  This program searches the     ****/
     /* *** invoice array to mark the current invoice as   ****/
     /* *** viewed, then passes control back to IV0E.      ****/
  ;
     /* set index, and save old invoice*/
  ;
  IVYREC.IVYSUB = IVXREC.IVXIASST; /* set to array start point*/
  IVYREC.IVYIVCN = IVXREC.IV0IVCID; /* save invoice #*/
  IVXREC.IV0IVCID = 0; /* then 0 for next*/
  ;
  ;
  IVXREC.IVXLOC = "XIVS18"; /* move module name to work field*/
  XPIV002(); /* read temp storage*/
  ;
  ;
     /* set current invoice sel flag to V*/
  ;
  while (IVYREC.IVYSUB <= IVXREC.IVXIATMX) /* loop thru array*/
    if (IVGREC.IVGIASFL[IVYSUB] == "S")
      if (IVGREC.IVGIAIVC[IVYSUB] == IVYREC.IVYIVCN)
        IVGREC.IVGIASFL[IVYSUB] = "V";
        IVXREC.IVXIAIDX = IVYREC.IVYSUB; /* save index for fun*/
        IVYREC.IVYSUB = IVXREC.IVXIATMX + 1; /* end loop*/
      end
    else
      IVYREC.IVYSUB = IVYREC.IVYSUB + 1; /* continue loop*/
    end
  end
  ;
  ;
  if (IVXREC.IVXWGQIX > 0) /* ;if temp storage record exists*/
    XPIV004(); /* ;  update temp storage*/
  end
  ;
     /* clear ivxrec of values for old invoice, and*/
     /* set up commarea*/
  ;
  XSIVSCX();
  ;
  COMMAREA.CAUSERA = IVXREC.IVXGROUP;
  ;
     /* pass to iv0e*/
  ;
  COMMAREA.CATOAP = "IV0E";
  XSEXIT();
  converseLib.validationFailed(18); /* error if get to this point*/
  ;
  ;
  ;
end // end XSIVS18

//*** RECORD=IV0GW01 ****
// ************************************************************
// *  IV0G - WORKING STORAGE RECORD                           *
// ************************************************************
// *      M A I N T E N A N C E     H I S T O R Y    L O G    *
// *----------------------------------------------------------*
// *   DATE    PGMR    DESCRIPTION                            *
// *----------------------------------------------------------*
// * 04-15-92  LGROSS  ADDED IV0GW-CUST-ORD-ID AND            *
// *                         IV0GW-ORD-PART-CHAR              *
// * 01-30-95  GDECKE  ADDED IV0GW-DEADLOCK-FL,               *
// *                         IV0GW-DEADLOCK-CT,               *
// *                         IV0GW-ERROR-FLAG,                *
// *                         IV0GW-IOMOD-FUNCTION,            *
// *                         IV0GW-DISP-IVC-ID.               *
// ************************************************************
// ***********************
Record IV0GW01 type basicRecord
  5 IV0GWGRP IV0GWGRP ; 
    10 IV0GWDT IV0GWDT ; 
      15 * num(1) ; 
      15 IV0GWCC IV0GWCC ; 
      15 IV0GWYY IV0GWYY ; 
      15 IV0GWMM IV0GWMM ; 
      15 IV0GWDD IV0GWDD ; 
    10 IV0GWFDT IV0GWFDT ; 
      15 IV0GW00 IV0GW00 ; 
      15 IV0GWFYY IV0GWFYY ; 
      15 IV0GWFMM IV0GWFMM ; 
      15 IV0GWFDD IV0GWFDD ; 
    10 IV0GWCVN IV0GWCVN ; 
      15 IV0GWCVA IV0GWCVA ; 
        20 IV0GWLTR IV0GWLTR [7] ; 
    10 IV0GWICN IV0GWICN ; 
      15 IV0GWICA IV0GWICA ; 
    10 IV0GWSHN IV0GWSHN ; 
      11 IV0GWSHA IV0GWSHA ; 
    10 IV0GWITM IV0GWITM ; 
      15 IV0GWIVC IV0GWIVC ; 
      15 * char(12) ; 
    10 IV0GWCUN IV0GWCUN ; 
      15 IV0GWCUA IV0GWCUA ; 
    10 IV0GWNBR IV0GWNBR ; 
      15 IV0GWCON IV0GWCON ; 
      15 IV0GWDOT IV0GWDOT ; 
      15 IV0GWNON IV0GWNON ; 
    10 IV0GWMDC IV0GWMDC ; 
      15 IV0GWMCH IV0GWMCH [2] ; 
    10 IV0GWECV IV0GWECV ; 
    10 IV0GW-CUST-ORD-ID IV0GW-CUST-ORD-ID ; 
      15 * char(7) ; 
      15 IV0GW-ORD-PART-CHAR IV0GW-ORD-PART-CHAR ; 
    10 IV0GW-DEADLOCK-FL IV0GW-DEADLOCK-FL ; 
    10 IV0GW-DEADLOCK-CT IV0GW-DEADLOCK-CT ; 
    10 IV0GW-ERROR-FLAG IV0GW-ERROR-FLAG ; 
    10 IV0GW-DISP-IVC-ID IV0GW-DISP-IVC-ID ; 
end // end IV0GW01

//*** RECORD=IV0GW02 ****
// This record will be used as the pass area to the io module
// iv1490 which accesses a join of dordc.vlettr01 and dordc.
// vdistrb01.
// ***********************
Record IV0GW02 type basicRecord
  10 IV0GW2GP IV0GW2GP ; 
    15 IV0GWTSK IV0GWTSK ; 
    15 OP1CUOID OP1CUOID ; 
    15 OP1PARTN OP1PARTN ; 
end // end IV0GW02

DataItem IV0GW-CUST-ORD-ID num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DEADLOCK COUNT
DataItem IV0GW-DEADLOCK-CT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DEADLOCK FLAG
DataItem IV0GW-DEADLOCK-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end



DataItem IV0GW-DISP-IVC-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// EDIT OR IO ERROR FLAG
DataItem IV0GW-ERROR-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem IV0GWFDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem IV0GW-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CONSTANT "00"
DataItem IV0GW00 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem IV0GW2GP char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CENTURY
DataItem IV0GWCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// customer order number
DataItem IV0GWCON num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CUSTOMER COMPANY ALPHA KEY
DataItem IV0GWCUA char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CUSTOMER COMPANY NUMERIC KEY
DataItem IV0GWCUN num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ALPHA CONVERSION FIELD
DataItem IV0GWCVA char(7)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// NUMERIC CONVERSION FLD
DataItem IV0GWCVN num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DAY
DataItem IV0GWDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// a '.' literal
DataItem IV0GWDOT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DBII FORMAT DATE
DataItem IV0GWDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Error convert field
DataItem IV0GWECV num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// RE-FORMATTED DATE
DataItem IV0GWFDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// RE-FORMATTED MONTH
DataItem IV0GWFMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem IV0GWFYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORKING STORAGE REC
DataItem IV0GWGRP char(107)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// INVOICE ID CONVERSION
DataItem IV0GWICA char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// INVOICE ID CONVERSION
DataItem IV0GWICN num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem IV0GWITM char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// INVOICE ID WITHIN CAITEM
DataItem IV0GWIVC num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// each char alpha cvn fld
DataItem IV0GWLTR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// each character method cd
DataItem IV0GWMCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// order method code
DataItem IV0GWMDC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MONTH
DataItem IV0GWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FORMATTED ORDER NUMBER
DataItem IV0GWNBR char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// nike order number
DataItem IV0GWNON num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// shipment id conversion
DataItem IV0GWSHA char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// shipment id conversion
DataItem IV0GWSHN num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem IV0GWTSK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// YEAR
DataItem IV0GWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

