package om0y;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import fk.common.*;
import fy.common.*;
import ku.common.*;
import ob.common.*;
import om.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import pk.common.*;
import pw.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import ww.common.*;
//*** PROGRAM=OM0Y ****
// ;
// ; OVERVIEW: OM0Y is an inquiry only screen that will display
// ;           all customer cross reference products for the
// ;           selected nike product and order. This screen
// ;           will be used for selecting a specific customer
// ;           cross reference product to view or update.
// ;
// ;***********************************************************
// ;          M A I N T E N A N C E   L O G
// ;***********************************************************
// ;
// ;   DATE     NAME      DESCRIPTION OF CHANGE
// ; --------  ------    --------------------------------------
// ; 07/01/96  DLIDDL    Initial Creation.
// ; 10/08/97  JFLOR1    Modified column headings for user.
// ; 12/01/97  ESHANM    Updating VITEM001 table with the first
// ;                     record in OM0Y screen so that first
// ;                     record of OM0Y will match the record
// ;                     displayed in OM0S. Included new state
// ;                     ment group OM0YS-UPD-VITEM001 and
// ;                     modified OM0ZS10. Search for /*tcs
// ; 08/27/98  udafon    #178 Increased size of OMWREC to 3505
//                       bytes. Re-compiled application.
// *********************
Program OM0Y type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  OM0YW01 OM0YW01; // record
  OMVREC OMVREC; // record
  OMWREC OMWREC; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  SQLCA SQLCA; // record
  SY4REC SY4REC; // record
  SYCREC SYCREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  WCU1710 WCU1710; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OM0YM.OM0YM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OM0Y000: OM0Y000();

       /* flow to om0y010*/

    goto OM0Y010;


    OM0Y010: OM0Y010();
    goto OM0Y010;
  end // end main
end // end OM0Y

// MAIN EXECUTE PROCESS
Function OM0Y000()

  XSENTRY(); /* check csp security*/

  XSOMS01(); /* check order maintenance security*/

  OM0YS01(); /* initialize om0y application*/

  OM0YS07(); /* get database records*/

  OM0YS70(); /* load TS with xref's for current item*/

  OM0YS1R(); /* read TS*/

  OM0YS02(); /* build map*/

end // end OM0Y000

// CONVERSE
Function OM0Y010()

  converseLib.clearScreen();
  
  converseVar.segmentedMode = 1; /* force segmented converse mode*/
  OM0YS12(); /* display size literal*/

  converse OM0YM001 ;

  OM0YW01.OM0YWERR = "N"; /* init error flag*/
  OM0YW01.OM0YWSEL = "N"; /* init select option flag*/
  converseLib.validationFailed(0); /* init error msg*/

  OM0YS15(); /* reset field attributes*/

  OM0YS30(); /* edit map*/

  if (OM0YW01.OM0YWERR == "N") /* no edit errors*/
    OM0YS25(); /* converse update*/
  end

  OM0YSPF(); /* edit pfkeys*/

end // end OM0Y010

// CALCULATE CU-CUSKU-IND
Function OM0YS-GET-CUSKU()

  set SQLCA empty;

  KUCREC.KUCCOID = OP1REC.KUCCOID;

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /**/

  /* check DB2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good return code*/
    OM0YS08(); /* determine customer info*/
  else
    TA1REC.TA1MAP = "OM0YM001"; /* map name*/
    TA1REC.TA1PGMNM = "OM0Y"; /* program name*/
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO0240  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OM0YS-GE"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "T-CUSKU "; /* extra key*/
    OM0YW01.OM0YCUST = " ";
    OM0YW01.OM0YCOID = OP1REC.KUCCOID;
    TA1REC.TA1TBLKE = OM0YW01.OM0YCUST;
    OM0YS1P(); /* purge TS*/
    TA1REC.TA1TYPE = "DB2"; /* abend type*/
    TA1REC.TA1FUNC = "RETN"; /* abend function*/
    set ERRSQLCA empty; /* clear area*/
    move SQLCA to ERRSQLCA withV60Compat; /* save original sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* abend module*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* return to master menu*/
    exit program; /* master menu failure*/
  end

end // end OM0YS-GET-CUSKU

// SELECT ORDER HEADER
Function OM0YS-GET-OP1REC()
  set SQLCA empty;

   /* select order header (DORDER.VORHDR01)*/

  call "IO0430" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* good return*/
     /* next sentence*/
  else /* not good return*/
    TA1REC.TA1MAP = "OM0YM001"; /* map name*/
    TA1REC.TA1PGMNM = "OM0Y"; /* program name*/
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VORHDR01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO0430  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OM0YS-GE"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "T-OP1REC"; /* statement group*/
    OMWREC.OMWORDN = OP1REC.OP1CUOID; /* customer order number*/
    OMWSEP1 = ".";
    OMWREC.OMWSORDN = OP1REC.OP1NORID; /* nike order number*/
    TA1REC.TA1TBLKE = OMWREC.OMWORD;
    OM0YS1P(); /* purge TS*/
    TA1REC.TA1TYPE = "DB2"; /* abend type*/
    TA1REC.TA1FUNC = "RETN"; /* abend function*/
    set ERRSQLCA empty; /* clear area*/
    move SQLCA to ERRSQLCA withV60Compat; /* save original sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* abend module*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* return to master menu*/
    exit program; /* master menu failure*/
  end

end // end OM0YS-GET-OP1REC

// SELECT ORDER ITEM
Function OM0YS-GET-OP2REC()
  set OP2REC empty;

  OP2REC.OP1PARTN = OP1REC.OP1PARTN; /* part char*/
  OP2REC.OP1CUOID = OP1REC.OP1CUOID; /* order nbr*/
  OP2REC.OP1NORID = OP1REC.OP1NORID; /* nike ord id*/
  if (OMWREC.OP2LNINB[OM0YPSUB] > 0)
    OP2REC.OP2LNINB = OMWREC.OP2LNINB[OM0YPSUB]; /* line item nbr*/
  else
    OP2REC.OP2LNINB = OMWREC.OMWLNITX; /* line item nbr*/
  end

  set SQLCA empty;

   /* select order item (DORDER.VITEM001)*/

  call "IO0440" ("S ", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* good return*/
     /* next sentence*/
  else /* not good return*/
    TA1REC.TA1MAP = "OM0YM001"; /* map name*/
    TA1REC.TA1PGMNM = "OM0Y"; /* program name*/
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VITEM001"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO0440  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OM0YS-GE"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "T-OP2REC"; /* statement group*/
    OMWREC.OMWORDN = OP1REC.OP1CUOID; /* customer order number*/
    OMWSEP1 = ".";
    OMWREC.OMWSORDN = OP1REC.OP1NORID; /* nike order number*/
    TA1REC.TA1TBLKE = OMWREC.OMWORD;
    OM0YS1P(); /* purge TS*/
    TA1REC.TA1TYPE = "DB2"; /* abend type*/
    TA1REC.TA1FUNC = "RETN"; /* abend function*/
    set ERRSQLCA empty; /* clear area*/
    move SQLCA to ERRSQLCA withV60Compat; /* save original sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* abend module*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* return to master menu*/
    exit program; /* master menu failure*/
  end

end // end OM0YS-GET-OP2REC

// SELECT ITEM STYLE
Function OM0YS-GET-VCOLOR02()
  set SYCREC empty;
  set SQLCA empty;

  SYCREC.SY1STNBR = OP2REC.SY1STNBR; /* style number*/
  SYCREC.SY2CLRID = OP2REC.SY2CLRID; /* color id*/
  SYCREC.XDMCD = OP2REC.XDMCD; /* dimension*/
  SYCREC.XGPCD = OP2REC.XGPCD; /* gpc*/

   /* select item style (DPROD.VCOLOR02)*/

  call "IO0560" ("S ", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes};

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* good return*/
    OM0YW01.SY1SSTNM = SYCREC.SY1STYNM;
  else /* not good return*/
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      OM0YW01.SY1SSTNM = "INVALID PRODUCT";
      OM0YW01.SY2CLRAB = "     ";
    else /* all other return conditions*/
      TA1REC.TA1MAP = "OM0YM001"; /* map name*/
      TA1REC.TA1PGMNM = "OM0Y"; /* program name*/
      TA1REC.TA1DBASE = "DPROD   "; /* data base name*/
      TA1REC.TA1TBLVU = "VCOLOR02"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO0560  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OM0YS-GE"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "T-VCOLOR"; /* statement group*/
      TA1REC.TA1TBLKE = SYCREC.SYCKEY;
      OM0YS1P(); /* purge TS*/
      TA1REC.TA1TYPE = "DB2"; /* abend type*/
      TA1REC.TA1FUNC = "RETN"; /* abend function*/
      set ERRSQLCA empty; /* clear area*/
      move SQLCA to ERRSQLCA withV60Compat; /* save original sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* abend module*/
      COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
      XSPF4(); /* return to master menu*/
      exit program; /* master menu failure*/
    end
  end

end // end OM0YS-GET-VCOLOR02

// SELECT SIZE SCALE DESCRIPTION
Function OM0YS-GET-VSCALE01()
  set SY4REC empty;
  set SQLCA empty;

  SY4REC.SY4SZSCL = SYCREC.SY4SZSCL; /* size scale*/

   /* read dprod.vscale01*/

  call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0 /* good return*/
   || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
    /* next sentence*/
  else
    TA1REC.TA1MAP = "OM0YM001"; /* map name*/
    TA1REC.TA1PGMNM = "OM0Y"; /* program name*/
    TA1REC.TA1DBASE = "DPROD   "; /* data base name*/
    TA1REC.TA1TBLVU = "VSCALE01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO0040  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OM0YS-GE"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "T-VSCALE"; /* statement group*/
    TA1REC.TA1TBLKE = SY4REC.SY4SZSCL; /* key*/
    OM0YS1P(); /* purge TS*/
    TA1REC.TA1TYPE = "DB2"; /* abend type*/
    TA1REC.TA1FUNC = "RETN"; /* abend function*/
    set ERRSQLCA empty; /* clear area*/
    move SQLCA to ERRSQLCA withV60Compat; /* save original sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* abend module*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* return to master menu*/
    exit program; /* master menu failure*/
  end

end // end OM0YS-GET-VSCALE01

// SELECT ORDER ITEM
Function OM0YS-UPD-VITEM001()
  OP2REC.OP1PARTN = OP1REC.OP1PARTN; /* part char*/
  OP2REC.OP1CUOID = OP1REC.OP1CUOID; /* order nbr*/
  OP2REC.OP1NORID = OP1REC.OP1NORID; /* nike ord id*/
  if (OMWREC.OP2LNINB[OM0YPSUB] > 0)
    OP2REC.OP2LNINB = OMWREC.OP2LNINB[OM0YPSUB]; /* line item nbr*/
  else
    OP2REC.OP2LNINB = OMWREC.OMWLNITX; /* line item nbr*/
  end

  set SQLCA empty;

   /* select order item (DORDER.VITEM001)*/

  call "IO0440" ("U3", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* good return*/
     /* next sentence*/
  else /* not good return*/
    TA1REC.TA1MAP = "OM0YM001"; /* map name*/
    TA1REC.TA1PGMNM = "OM0Y"; /* program name*/
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VITEM001"; /* table view*/
    TA1REC.TA1LOCAT[1] = "U3      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO0440  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OM0YS-UP"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "D-VITEM0"; /* statement group*/
    OMWREC.OMWORDN = OP1REC.OP1CUOID; /* customer order number*/
    OMWSEP1 = ".";
    OMWREC.OMWSORDN = OP1REC.OP1NORID; /* nike order number*/
    TA1REC.TA1TBLKE = OMWREC.OMWORD;
    OM0YS1P(); /* purge TS*/
    TA1REC.TA1TYPE = "DB2"; /* abend type*/
    TA1REC.TA1FUNC = "RETN"; /* abend function*/
    set ERRSQLCA empty; /* clear area*/
    move SQLCA to ERRSQLCA withV60Compat; /* save original sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* abend module*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* return to master menu*/
    exit program; /* master menu failure*/
  end

end // end OM0YS-UPD-VITEM001

// INITIALIZE RECORDS
Function OM0YS01()

   /* SET SEGMENTED TRANSACTION ID*/

  CAEZSAP = sysVar.transactionID;
  CAEZSG12 = "OM";
  CAEZSG4 = "I";
  sysVar.transactionID = CAEZSAP;

    /* SET RECORDS EMPTY*/

  set OMWREC empty;
  set OP1REC empty;
  set OP2REC empty;
  set SYCREC empty;
  set SY4REC empty;
  set WCU1710 empty;
  set OM0YW01 empty;
  set ERRSQLCA empty;
  set SQLCA empty;
  set TAEREC empty;
  set TA1REC empty;
  set TA2REC empty;
  set TA5REC empty;

  set OM0YM001 empty;

  TA1REC.TA1MAP = "OM0YM001";
  COMMAREA.CACURRAP = "OM0Y";

  OMWREC.OMWSGRP = COMMAREA.CA-USER-WORKAREA-4K;
  OP1REC.OP1GROUP = OMWREC.OP1GROUP;

  OM0YW01.OM0YPSUB = 1; /* initialise product subscript*/
end // end OM0YS01

// BUILD MAP
Function OM0YS02()
  OM0YS05(); /* build map headings*/

  OM0YS09(); /* build map detail*/

  OM0YS10(); /* build xref item array*/

  OM0YS15(); /* reset field attributes*/

end // end OM0YS02

// BUILD MAP HEADINGS
Function OM0YS05()
  OM0YM001.OM0YMPRC = "OM0Y010"; /* process name*/
  OM0YM001.OM0YMDATE = VGVar.currentShortGregorianDate; /* current date*/
  OM0YM001.OM0YMCUOID = OMWREC.OMWORD; /* order number*/
  OM0YW01.OM0YCOID = OP1REC.KUCCOID; /* customer*/
  OM0YW01.OM0YSTRID = OP1REC.KUMSTRID; /* store*/
  OM0YW01.OM0YSEP1 = "-";
  OM0YW01.OM0YXNXCD = OP1REC.XNXCD; /* dept*/
  OM0YW01.OM0YSEP2 = "-";
  OM0YM001.OM0YMCUST = OM0YW01.OM0YCUST;
  OM0YM001.OP1CUPO = OP1REC.OP1CUPO;
  OM0YM001.KUMSTRNM = OMWREC.KUMSTRNM; /* customer store name*/
  OM0YM001.OM0YMCPG = OM0YW01.OM0YTSFP; /* current page number*/
  OM0YM001.OM0YMMPG = OM0YW01.OM0YTSFM; /* max page number*/

end // end OM0YS05

// GET DATABASE RECORDS
Function OM0YS07()

  OM0YS-GET-CUSKU(); /* DETERMINE IF SIZE OR PRODUCT LEVEL*/
                                   /* CUSTOMER*/

  OM0YS-GET-OP1REC(); /* GET ORDER HEADER RECORD*/

  OM0YS-GET-OP2REC(); /* GET ORDER ITEM RECORD*/

  OM0YS-GET-VCOLOR02(); /* GET STYLE RECORD*/

  OM0YS-GET-VSCALE01(); /* GET SIZE SCALE RECORD*/

end // end OM0YS07

// DETERMINE CUSTOMER INFO
Function OM0YS08()

  if (KUCREC.CU-CUSKU-SZ-FL == "Y") /* size level customer*/
    OM0YW01.OM0YW-SIZE-LEVEL-CUSTOMER = "Y";
  else /* product level customer*/
    OM0YW01.OM0YW-SIZE-LEVEL-CUSTOMER = "N";
  end

end // end OM0YS08

// BUILD MAP DETAIL
Function OM0YS09()
  OM0YM001.XGPCD = OP2REC.XGPCD;

  OM0YW01.SY1STNBR = OP2REC.SY1STNBR; /* style number*/
  OM0YW01.OM0YWPR1 = "-";
  OM0YW01.SY2CLRID = OP2REC.SY2CLRID; /* color id*/
  OM0YW01.OM0YWPR2 = "-";
  OM0YW01.XDMCD = OP2REC.XDMCD; /* dimension cd*/
  OM0YM001.OM0YMNSTY = OM0YW01.OM0YMPRD; /* formatted style*/

  OM0YM001.SY1STNM = OM0YW01.SY1SSTNM; /* style description*/

end // end OM0YS09

// BUILD XREF ITEM ARRAY
Function OM0YS10()
  OM0YW01.OM0YTSFS = 1;

  while (OM0YW01.OM0YTSFS <= 11)
    OM0YM001.OM0YMSEL[OM0YTSFS] = OMVREC.OMSEL[OM0YTSFS];
    OM0YM001.CU-CUST-PROD-ID[OM0YTSFS] = OMVREC.OM-CU-PROD-ID[OM0YTSFS];
    OM0YM001.CU-PROD-NM[OM0YTSFS] = OMVREC.OM-CU-PROD-NM[OM0YTSFS];
    OM0YM001.CU-PROD-COLR-NM[OM0YTSFS] = OMVREC.OM-CU-PROD-COLR-NM[OM0YTSFS];
    OM0YM001.CU-PROD-SZ-ID[OM0YTSFS] = OMVREC.CU-PROD-SZ-ID[OM0YTSFS];
    OM0YM001.SY4IDDSC[OM0YTSFS] = OMVREC.SY4IDDSC[OM0YTSFS];
    OM0YW01.OM0YTSFS = OM0YW01.OM0YTSFS + 1;
  end
   /* tcs include begin (12/01/97)*/
  OM0YS-GET-OP2REC();
  OP2REC.KUIPRDID = OMVREC.OM-CU-PROD-ID[1];
  OM0YS-UPD-VITEM001();
   /* tcs include end   (12/01/97)*/

end // end OM0YS10

// DISPLAY SIZE LITERAL
Function OM0YS12()

  if (OM0YW01.OM0YW-SIZE-LEVEL-CUSTOMER == "Y") /* size level customer*/
    OM0YM001.OM0YM-SIZE-LIT = "SIZE LEVEL";
  else
    OM0YM001.OM0YM-SIZE-LIT = "PRODUCT LEVEL";
  end

end // end OM0YS12

// RESET FIELD ATTRIBUTES
Function OM0YS15()
  set OM0YM001.OM0YMCPG cursor, initialAttributes;

  OM0YW01.OM0YTSFS = 11;

  while (OM0YW01.OM0YTSFS >= 1)
    if (OM0YM001.SY4IDDSC[OM0YTSFS] == " ")
      OM0YS17(); /* set row autoskip,dark*/
    else
      OM0YS16(); /* set row defined*/
      if (OM0YM001.OM0YMSEL[OM0YTSFS] == "*")
        set OM0YM001.OM0YMSEL[OM0YTSFS] skip; /* set sel autoskip*/
      else
        set OM0YM001.OM0YMSEL[OM0YTSFS] cursor, initialAttributes;
      end
    end
    OM0YW01.OM0YTSFS = OM0YW01.OM0YTSFS - 1;
  end

end // end OM0YS15

// SET FIELDS DEFINED BRIGHT
Function OM0YS16()

  set OM0YM001.OM0YMSEL[OM0YTSFS] initialAttributes; /* select option*/
  set OM0YM001.CU-CUST-PROD-ID[OM0YTSFS] initialAttributes; /* cust product id*/
  set OM0YM001.CU-PROD-NM[OM0YTSFS] initialAttributes; /* cust product name*/
  set OM0YM001.CU-PROD-COLR-NM[OM0YTSFS] initialAttributes; /* cust color name*/
  set OM0YM001.CU-PROD-SZ-ID[OM0YTSFS] initialAttributes; /* cust size name*/
  set OM0YM001.SY4IDDSC[OM0YTSFS] initialAttributes; /* nike size name*/

  if (OMVREC.CU-OVRD-EXISTS-FL[OM0YTSFS] == "Y")
    set OM0YM001.CU-CUST-PROD-ID[OM0YTSFS] bold, skip; /* cust prod id*/
    set OM0YM001.CU-PROD-NM[OM0YTSFS] bold, skip; /* prod name*/
    set OM0YM001.CU-PROD-COLR-NM[OM0YTSFS] bold, skip; /* color*/
    set OM0YM001.CU-PROD-SZ-ID[OM0YTSFS] bold, skip; /* cust size name*/
    set OM0YM001.SY4IDDSC[OM0YTSFS] bold, skip; /* nike size name*/
  end

end // end OM0YS16

// SET FIELDS AUTOSKIP, DARK
Function OM0YS17()
  set OM0YM001.OM0YMSEL[OM0YTSFS] skip, invisible; /* select option*/
  set OM0YM001.CU-CUST-PROD-ID[OM0YTSFS] skip, invisible; /* cust product id*/
  set OM0YM001.CU-PROD-NM[OM0YTSFS] skip, invisible; /* cust prod name*/
  set OM0YM001.CU-PROD-COLR-NM[OM0YTSFS] skip, invisible; /* cust color name*/
  set OM0YM001.CU-PROD-SZ-ID[OM0YTSFS] skip, invisible; /* cust size name*/
  set OM0YM001.SY4IDDSC[OM0YTSFS] skip, invisible; /* nike size name*/

end // end OM0YS17

// PURGE TEMP STORAGE
Function OM0YS1P()
  TA5REC.TA5APPID = "OM0Y"; /* appl identification*/
  TA5REC.TA5FNCCD = "P"; /* function code*/

  call "TA0050" (OMVREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0) /* good return code*/
    OM0YW01.OM0YTSFP = 1;
    OM0YW01.OM0YTSFM = 1;
    OM0YW01.OM0YTSFS = 1;
  else /* not good return code*/
    TA1REC.TA1LOCAT[1] = "OM0YS1P";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    TAEREC.TAEDESC2 = "PROBLEM PURGING TS";
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    converseLib.validationFailed(10); /* database busy*/
    OM0YW01.OM0YWERR = "Y"; /* set error flag on*/
  end

end // end OM0YS1P

// READ TS
Function OM0YS1R()
  set OMVREC empty;

  TA5REC.TA5APPID = "OM0Y"; /* appl identification*/
  TA5REC.TA5FNCCD = "R"; /* function code*/
  TA5REC.TA5TSQIX = OM0YW01.OM0YTSFP; /* current page*/
  OMVREC.OMTSLEN = 874; /* length of record*/

  call "TA0050" (OMVREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0) /* good return code*/
    /* next sentence*/
  else /* not good return code*/
    TA1REC.TA1LOCAT[1] = "OM0YS1R";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    TAEREC.TAEDESC2 = "PROBLEM READING TS";
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    converseLib.validationFailed(10); /* database busy;*/
    OM0YW01.OM0YWERR = "Y"; /* set error flag on*/
  end

end // end OM0YS1R

// update TS
Function OM0YS1U()
  TA5REC.TA5APPID = "OM0Y"; /* appl identification*/
  TA5REC.TA5FNCCD = "U"; /* function code*/
  TA5REC.TA5TSQIX = OM0YW01.OM0YTSFP; /* current page*/
  OMVREC.OMTSLEN = 874; /* length of record*/

  call "TA0050" (OMVREC, TA5REC) {isNoRefresh = yes, isExternal = yes};

  if (TA5REC.TA5RTNCD == 0) /* good return code*/
    /* next sentence*/
  else /* not good return code*/
    TA1REC.TA1LOCAT[1] = "OM0YS1U";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    TAEREC.TAEDESC2 = "PROBLEM UPDATING TS";
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    converseLib.validationFailed(10); /* database busy;*/
    OM0YW01.OM0YWERR = "Y"; /* set error flag on*/
  end

end // end OM0YS1U

// WRITE TEMP STORAGE
Function OM0YS1W()
  TA5REC.TA5APPID = "OM0Y"; /* application identification*/
  TA5REC.TA5FNCCD = "A"; /* function code*/
  OMVREC.OMTSLEN = 874; /* length of record*/

  call "TA0050" (OMVREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0) /* good return code*/
    OM0YW01.OM0YTSFM = TA5REC.TA5TSQIX;
  else /* not good return code*/
    TA1REC.TA1LOCAT[1] = "OM0YS1W";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    TAEREC.TAEDESC1 = "PROBLEM WRITING TS";
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    converseLib.validationFailed(10); /* database busy*/
    OM0YW01.OM0YWERR = "Y"; /* set error flag on*/
  end

end // end OM0YS1W

// CONVERSE UPDATE
Function OM0YS25()
  OM0YS26(); /* move map fields to TS*/

  OM0YS1U(); /* update TS*/

  if (converseVar.eventKey is pf7) /* page backward*/
    OM0YW01.OM0YTSFP = OM0YW01.OM0YTSFP - 1; /* -1 from page*/
    OM0YM001.OM0YMCPG = OM0YW01.OM0YTSFP;
    OM0YS1R(); /* read TS*/
    OM0YS10(); /* build map xref item array*/
    OM0YS15(); /* reset field attributes*/
  end

  if (converseVar.eventKey is pf8) /* page forward*/
    OM0YW01.OM0YTSFP = OM0YW01.OM0YTSFP + 1; /* +1 to page*/
    OM0YM001.OM0YMCPG = OM0YW01.OM0YTSFP;
    OM0YS1R(); /* read TS*/
    OM0YS10(); /* build map xref item array*/
    OM0YS15(); /* reset field attributes*/
  end

  if (converseVar.eventKey is pf11)
    OM0YW01.OM0YPSUB = OM0YW01.OM0YPSUB - 1;
    OM0YS07(); /* get database records*/
    OM0YS70(); /* load TS*/
    OM0YS1R(); /* read TS*/
    OM0YS02(); /* build map*/
  end

  if (converseVar.eventKey is pf12)
    OM0YW01.OM0YPSUB = OM0YW01.OM0YPSUB + 1;
    OM0YS07(); /* get database records*/
    OM0YS70(); /* load TS*/
    OM0YS1R(); /* read TS*/
    OM0YS02(); /* build map*/
  end

  if (converseVar.eventKey is enter
   && OM0YM001.OM0YMCPG != OM0YW01.OM0YTSFP) /* page changed*/
    OM0YW01.OM0YTSFP = OM0YM001.OM0YMCPG; /* format current page #*/
    OM0YS1R(); /* read TS*/
    OM0YS10(); /* build map xref item array*/
    OM0YS15(); /* reset field attributes*/
  end

  if (converseVar.eventKey is enter
   && OM0YW01.OM0YWSEL == "Y" /* have selects*/
   && OM0YM001.OM0YMCPG == OM0YW01.OM0YTSFP) /* no page change*/
    if (OM0YW01.OM0YSCNT == 1) /* only one selection made*/
      COMMAREA.CACURRAP = "OM0Z";
      OMVREC.OMTSPG-FL = "Y"; /* set flag to indicate current page*/
      OM0YS1U(); /* update temp storage*/
      OMWREC.OP1GROUP = OP1REC.OP1GROUP;
      COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
      transfer to transaction "OM0Z" passing COMMAREA; /* transfer to cust xref detail screen*/
    else
      converseLib.validationFailed(193); /* only one line may be selected*/
      OM0YW01.OM0YWERR = "Y"; /* set error flag*/
    end
  end

end // end OM0YS25

// UPDATE TS SELECTIONS
Function OM0YS26()

  OM0YW01.OM0YTSFS = 1; /* init subscript*/

  while (OM0YW01.OM0YTSFS <= 11) /* less than or equal 11*/
    OMVREC.OMSEL[OM0YTSFS] = OM0YM001.OM0YMSEL[OM0YTSFS];
    OM0YW01.OM0YTSFS = OM0YW01.OM0YTSFS + 1; /* increment by +1*/
  end

end // end OM0YS26

// EDIT MAP
Function OM0YS30()
  OM0YW01.OM0YTSFS = 11;
  OM0YW01.OM0YSCNT = 0;

  while (OM0YW01.OM0YTSFS > 0)
    OM0YS35(); /* edit select option*/
    OM0YW01.OM0YTSFS = OM0YW01.OM0YTSFS - 1;
  end

  if (OM0YW01.OM0YWERR == "Y") /* edit error exists*/
    return;
  end

  OM0YS45(); /* edit page number*/

  if (OM0YW01.OM0YWERR == "Y") /* edit error exists*/
    return;
  end

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    OM0YS50(); /* edit pf7 and pf8 keys*/
  end

  if (converseVar.eventKey is pf11
   || converseVar.eventKey is pf12)
    OM0YS55(); /* edit pf11 and PF12 keys*/
  end

end // end OM0YS30

// EDIT SELECT OPTIONS
Function OM0YS35()
  if (OMVREC.OMSEL[OM0YTSFS] == OM0YM001.OM0YMSEL[OM0YTSFS])
    /* next sentence*/
  else
    if (OM0YM001.OM0YMSEL[OM0YTSFS] == "S"
     || OM0YM001.OM0YMSEL[OM0YTSFS] == " ")
       /* next sentence*/
    else
      converseLib.validationFailed(007); /* select option is invalid*/
      OM0YW01.OM0YWERR = "Y"; /* set error flag*/
      set OM0YM001.OM0YMSEL[OM0YTSFS] cursor, bold; /* hilight field*/
    end
  end

  if (OM0YM001.OM0YMSEL[OM0YTSFS] == "S")
    OM0YW01.OM0YWSEL = "Y"; /* set selection flag on*/
    OM0YW01.OM0YSCNT = OM0YW01.OM0YSCNT + 1; /* add 1 to selection count*/
  end

end // end OM0YS35

// EDIT PAGE NUMBER
Function OM0YS45()
  if (OM0YM001.OM0YMCPG > OM0YM001.OM0YMMPG /* page # > max page #*/
   || OM0YM001.OM0YMCPG < 1)                /* or less than 1*/
    converseLib.validationFailed(603); /* page # between 1st and last page #*/
    OM0YW01.OM0YWERR = "Y"; /* set error flag*/
    set OM0YM001.OM0YMCPG cursor, bold;
    OM0YM001.OM0YMCPG = OM0YW01.OM0YTSFP; /* reset page number*/
    return;
  end

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || OM0YM001.OM0YMCPG != OM0YW01.OM0YTSFP) /* page # changed*/
    if (OM0YW01.OM0YWSEL == "Y") /* a selection was made*/
      converseLib.validationFailed(931); /* can't make selections and chg page #*/
      OM0YW01.OM0YWERR = "Y"; /* set error flag*/
      set OM0YM001.OM0YMCPG cursor, bold;
      OM0YM001.OM0YMCPG = OM0YW01.OM0YTSFP; /* reset page number*/
    end
  end

end // end OM0YS45

// EDIT PF7 AND PF8
Function OM0YS50()
  if (converseVar.eventKey is pf7 /* scroll backwards*/
   && OM0YM001.OM0YMCPG == 1)     /* first page*/
    converseLib.validationFailed(192); /* cannot scroll backward*/
    OM0YW01.OM0YWERR = "Y"; /* set error flag*/
  end

  if (converseVar.eventKey is pf8
   && OM0YM001.OM0YMCPG == 
  OM0YW01.OM0YTSFM) /* current page = last page*/
    converseLib.validationFailed(191); /* cannot scroll forward*/
    OM0YW01.OM0YWERR = "Y"; /* set error flag*/
  end

  if (OM0YM001.OM0YMCPG != OM0YW01.OM0YTSFP) /* current page has changed*/
    converseLib.validationFailed(929); /* can't chg page # and pf key together*/
    OM0YW01.OM0YWERR = "Y"; /* set error flag*/
    set OM0YM001.OM0YMCPG cursor, bold;
    OM0YM001.OM0YMCPG = OM0YW01.OM0YTSFP; /* reset page number*/
  end

end // end OM0YS50

// EDIT PF11 AND PF12 KEY
Function OM0YS55()
  if (converseVar.eventKey is pf11 /* previous product*/
   && OM0YW01.OM0YPSUB == 1)       /* first product*/
    converseLib.validationFailed(192); /* cannot scroll backward*/
    OM0YW01.OM0YWERR = "Y"; /* set error flag*/
  end

  if (converseVar.eventKey is pf12 /* next product*/
   && OM0YW01.OM0YPSUB ==          
  OMWREC.OMWLINES)                 /* current product = last product*/
    converseLib.validationFailed(191); /* cannot scroll forward*/
    OM0YW01.OM0YWERR = "Y"; /* set error flag*/
  end

  if (OM0YM001.OM0YMCPG != OM0YW01.OM0YTSFP) /* current page has changed*/
    converseLib.validationFailed(929); /* can't chg page # and pf key together*/
    OM0YW01.OM0YWERR = "Y"; /* set error flag*/
    set OM0YM001.OM0YMCPG cursor, bold;
    OM0YM001.OM0YMCPG = OM0YW01.OM0YTSFP; /* reset page number*/
  end

  if (OM0YW01.OM0YWSEL == "Y") /* a selection was made*/
    converseLib.validationFailed(930); /* cannot make selections and PF key*/
    OM0YW01.OM0YWERR = "Y"; /* set error flag*/
  end

end // end OM0YS55

// LOAD TS
Function OM0YS70()

   /* select all xref items for the selected po line item*/
   /* write a temporary storage record for each map full*/
   /* of xref items, map holds 10 xref items*/

  OM0YS1P(); /* purge TS*/

  OM0YS71(); /* build record to pass to CU1710*/

  OM0YW01.OM0YTSFS = 1; /* map page line subscript*/

  OM0YS80(); /* call CU1710 and process TS*/

  if (WCU1710.WCU1710-IN-GET-XTRA-SIZE-FL == "Y") /* more sizes ?*/
    OM0YS80(); /* call CU1710 and process TS*/
  end

  OM0YW01.OM0YTSFP = 1; /* set to first TS page*/
  OM0YW01.OM0YTSFS = 1; /* set to first TS line*/

end // end OM0YS70

// BUILD CU1710 PASS RECORD
Function OM0YS71()
  set WCU1710 empty;

  WCU1710.WCU1710-INQUIRY-OPTION = 1;
  WCU1710.WCU1710-IN-DORDB-IND = "N";
  WCU1710.WCU1710-IN-CU-CO-ID = OP1REC.KUCCOID;
  WCU1710.WCU1710-XNX-DEPT-ID-XREF = OP1REC.XNXCD;
  WCU1710.WCU1710-CU-PROD-XREF-EDT = OP1REC.OP1CUNDT;
  WCU1710.WCU1710-IN-OP-ORD-PART-CHAR = OP1REC.OP1PARTN;
  WCU1710.WCU1710-IN-OP-CUST-ORD-ID = OP1REC.OP1CUOID;
  WCU1710.WCU1710-IN-OP-NIKE-ORD-ID = OP1REC.OP1NORID;
  WCU1710.WCU1710-IN-OP-LINE-ITEM-NBR = OP2REC.OP2LNINB;
  WCU1710.WCU1710-IN-XGP-GPC-CD = OP2REC.XGPCD;
  WCU1710.WCU1710-IN-SY-STY-NBR = OP2REC.SY1STNBR;
  WCU1710.WCU1710-IN-SY-COLR-CD-ID = OP2REC.SY2CLRID;
  WCU1710.WCU1710-IN-XDM-DIM-CD = OP2REC.XDMCD;
  WCU1710.WCU1710-IN-XQA-QUAL-CD = OP2REC.XQACD;
  WCU1710.WCU1710-IN-SY-SZ-ID = 0;

  WCU1710.WCU1710-RETURN-CODE = 99;

end // end OM0YS71

// CALL CU1710
Function OM0YS72()

   /* get all the xref info for the item*/

  call "CU1710" (WCU1710) {isNoRefresh = yes, isExternal = yes};

   /* check return code*/

  if (WCU1710.WCU1710-RETURN-CODE == 0 /* good return code*/
   || WCU1710.WCU1710-RETURN-CODE == 1 /* no xref recs*/
   || WCU1710.WCU1710-RETURN-CODE == 10) /* mixture of xref recs and others*/
     /* next sentence*/
  else /* not good return code*/
    TA1REC.TA1LOCAT[2] = "CU1710  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OM0YS72 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = WCU1710.WCU1710-RETURN-CODE; /* extra key*/
    TAEREC.TAEDESC1 = "BAD RETURN FROM CU1710 - RETURN CODE = ";
    TAEREC.TAEDESC2 = WCU1710.WCU1710-RETURN-CODE;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1TBLKE = OP1REC.OP1KEY; /* key fields*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    XSPF4();
    exit program;
  end

end // end OM0YS72

// LOAD AND WRITE TS PAGES
Function OM0YS74()
  set OMVREC empty; /* initialise TS record*/

  if (OM0YW01.OM0YTSFS > 11) /* only reset if necessary*/
    OM0YW01.OM0YTSFS = 1; /* TS lines per map page subscript*/
  end

  while (OM0YW01.OM0YTSFS <= 11 /* max # lines per map page*/
   && OM0YW01.OM0YWSUB <= 24) /* max # of sizes returned from CU1710*/
    OM0YS76(); /* build TS page*/
  end

  if (OM0YW01.OM0YTSFS > 1) /* at least one row*/
    OM0YS1W(); /* write TS*/
  end

end // end OM0YS74

// BUILD TS ROW
Function OM0YS76()
  if (WCU1710.SY-SZ-ID[OM0YWSUB] != 0)

    OMVREC.OMSEL[OM0YTSFS] = " ";
    OMVREC.OP2LNINB[OM0YTSFS] = OP2REC.OP2LNINB;
    OMVREC.OM-CU-PROD-ID[OM0YTSFS] = WCU1710.CU-CUST-PROD-ID[OM0YWSUB];
    OMVREC.OM-CU-PROD-NM[OM0YTSFS] = WCU1710.CU-PROD-NM[OM0YWSUB];
    OMVREC.OM-CU-PROD-COLR-NM[OM0YTSFS] = WCU1710.CU-PROD-COLR-NM[OM0YWSUB];
    OMVREC.CU-PROD-SZ-ID[OM0YTSFS] = WCU1710.CU-PROD-SZ-ID[OM0YWSUB];

    OM0YW01.OM0YWSIZ = WCU1710.SY-SZ-ID[OM0YWSUB];
    OMVREC.SY4IDDSC[OM0YTSFS] = SY4REC.SY4IDDSC[OM0YWSIZ];

    OMVREC.SY-SZ-ID[OM0YTSFS] = WCU1710.SY-SZ-ID[OM0YWSUB];
    OMVREC.CU-OVRD-EXISTS-FL[OM0YTSFS] = WCU1710.WCU1710-CU-OVRD-EXISTS-FL[OM0YWSUB];

    OM0YW01.OM0YTSFS = OM0YW01.OM0YTSFS + 1; /* current TS line subscript*/

  end

  OM0YW01.OM0YWSUB = OM0YW01.OM0YWSUB + 1; /* wcu1710 size array subscript*/

end // end OM0YS76

// CALL CU1710 AND PROCESS TS
Function OM0YS80()
  OM0YS72(); /* call CU1710*/

  OM0YW01.OM0YWSUB = 1; /* set size array subscript*/
  while (OM0YW01.OM0YWSUB <= 24) /* check each size*/
    OM0YS74(); /* load and write TS pages*/
  end

end // end OM0YS80

// PROCESS PFKEYS
Function OM0YSPF()
  if (converseVar.eventKey is pf3)
    if (COMMAREA.CAFROMAP == "OM0B"
     || COMMAREA.CAFROMAP == "AE09")
      COMMAREA.CATOAP = "OM0A";
    else
      COMMAREA.CATOAP = "OM0M";
    end
    OMWREC.OP1GROUP = OP1REC.OP1GROUP;
    COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
    COMMAREA.CAFROMAP = "OM0Y";
    sysVar.transferName = COMMAREA.CATOAP;
    transfer to program sysVar.transferName passing COMMAREA;
  end

  if (converseVar.eventKey is pf4)
    OMWREC.OP1GROUP = OP1REC.OP1GROUP;
    COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
    COMMAREA.CAFROMAP = "OM0Y";
    COMMAREA.CATOAP = "MN0M";
    transfer to transaction "MN0M" passing COMMAREA;
  end

  if (converseVar.eventKey is pf9)
    OMWREC.OP1GROUP = OP1REC.OP1GROUP;
    COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
    COMMAREA.CAFROMAP = "OM0Y";
    COMMAREA.CATOAP = "OM0S";
    transfer to transaction "OM0S" passing COMMAREA;
  end

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf11
   || converseVar.eventKey is pf12)
  /* next sentence*/
  else
    converseLib.validationFailed(645); /* invalid pf key*/
    OM0YW01.OM0YWERR = "Y"; /* set 'OM' error flag*/
  end

  if (converseVar.eventKey is enter
   && OM0YW01.OM0YWERR == "N")
    if (COMMAREA.CAFROMAP == "OM0B"
     || COMMAREA.CAFROMAP == "AE09")
      COMMAREA.CATOAP = "OM0A";
    else
      COMMAREA.CATOAP = "OM0S";
    end
    sysVar.transferName = COMMAREA.CATOAP;
    COMMAREA.CAFROMAP = "OM0Y";
    OMWREC.OP1GROUP = OP1REC.OP1GROUP;
    COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
    transfer to program sysVar.transferName passing COMMAREA;
  end

end // end OM0YSPF

//*** RECORD=OM0YW01 ****
// Working storage area for Order Maintenance application OM0Y.
// 
// 06/29/96  DLIDDL  Initial creation.
// ***********************
Record OM0YW01 type basicRecord
  10 OM0YWSEL OM0YWSEL ; 
  10 OM0YWEOF OM0YWEOF ; 
  10 OM0YWSUB OM0YWSUB ; 
  10 OM0YPSUB OM0YPSUB ; 
  10 OM0YWSIZ OM0YWSIZ ; 
  10 OM0YWPDS OM0YWPDS ; 
    15 SY1SSTNM SY1SSTNM ; 
    15 SY2CLRAB SY2CLRAB ; 
  10 OM0YMPRD OM0YMPRD ; 
    15 SY1STNBR SY1STNBR ; 
    15 OM0YWPR1 OM0YWPR1 ; 
    15 SY2CLRID SY2CLRID ; 
    15 OM0YWPR2 OM0YWPR2 ; 
    15 XDMCD XDMCD ; 
  10 OM0YTSF OM0YTSF ; 
    15 OM0YTSFP OM0YTSFP ; 
    15 OM0YTSFS OM0YTSFS ; 
    15 OM0YTSFM OM0YTSFM ; 
  10 OM0YWERR OM0YWERR ; 
  10 OM0YCUST OM0YCUST ; 
    15 OM0YCOID OM0YCOID ; 
    15 OM0YSEP1 OM0YSEP1 ; 
    15 OM0YSTRID OM0YSTRID ; 
    15 OM0YSEP2 OM0YSEP2 ; 
    15 OM0YXNXCD OM0YXNXCD ; 
  10 OM0YSCNT OM0YSCNT ; 
  10 OM0YW-SIZE-LEVEL-CUSTOMER OM0YW-SIZE-LEVEL-CUSTOMER ; 
end // end OM0YW01

DataItem OM0YCOID num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0YCUST char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0YMPRD char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0YPSUB num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0YSCNT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0YSEP1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0YSEP2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0YSTRID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0YTSF char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0YTSFM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0YTSFP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0YTSFS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0YW-SIZE-LEVEL-CUSTOMER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0YWEOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0YWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0YWPDS char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0YWPR1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0YWPR2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0YWSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0YWSIZ num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0YWSUB num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0YXNXCD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

