package om0k;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import ku.common.*;
import ob.common.*;
import om.common.*;
import op.common.*;
import os.common.*;
import pc.common.*;
import pk.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=OM0K ****
// nike order maint - maintain customer order addresses
// 
// overview: this application allows maintainence to the
//           addresses for a given nike sub-order.
// 
//           control is passed depending on the pfkey pressed.
// 
// date created: 07/08/86
//       author: steve noble
// 
// maintenance history:
// 
//     date     by whom     overview of changes made
//   --------  ----------  ------------------------------------
//   07-08-86   s noble    initial creation
//   02/18/87   jvande     shp grp ovrd never worked. didn't
//                         set om0kwuof correctly.
//   09/30/87   tfox       turned on picking calls. hrd cd for
//                         warehouses on new system.
//   11/13/87   jvande     chngd so when go from 1-time to id
//                         the oppkm will clear addr fields.
//   06/01/88   obecke     disallow 1-time ship-to's for
//                         certain acct class codes.  compares
//                         kucrec to xautbl. s03,s05.
//   06/22/88   gwells     s10 - put error display key in
//                               diagnostics.
//   10/22/88   tfox       chg cd in s02 to prevent maint of
//                         rebook bulk orders.
//   11/04/88   jwood      noncsp opt added to calls
//   01/09/89   dwalke     add segmented transaction id to appl
//   05/10/89   jbecke     database changes:  om0km001, om0kw01
//                         om0k020, s03, s11, s20, s59, s63,
//                         s65, s70, s72, s73, s75, s76, s80.
//   06/27/89   schase     added call to credit for one-time
//                         ship-to addresses. impact in: s80.
//   09/05/89   skott      wildcard gpc if not ftwr or apparel
//                         on cust/gpc read.  s13
//   09/13/89   skott      handle sql = 100 for left over
//                         invalid cust/gpc orders. s13
//   04/04/90   cgrice     db changes - renamed op1blkcd to
//                         xbdcd.  s02
//   04/06/90   mgatre     write audit record if ship addr chgs
//                         S80, SAU (new)
//   07/26/90   ischmi     remove xsg table edit - s65
//                         replace edit with xau tbl edit - s71
//   10/04/90   dviert     removed op9rec from record list -
//                         tag logic no longer necessary.
//                         removed xsoms02 from om0k020
//   10/09/90   dviert     rename:  xcgcd to op1cogid;
//                         chgd rec length om0kw01 (om0kwsgr)
//                         from 867 to 856
//   02/05/91   CRAINE     Chg'd to use KUCBLAID instead of
//                         KUABLGRP. Removed KUAREC. Chg'd
//                         map, s01, s65, s72.
//   02/12/91   tfox       regen for db chgs
//   05/22/91   tfox       menu services s06,w01,020,090
//   05/28/91   dharri     #642 - s63, s76
//   05/30/91   dharri     #642 - added dept = 0 edit
//   06/14/91   jloyer     db2 chgs:  chgd om0kw01.om0kwsgr rec
//                         length due to chgs in kucrec.kucgrp.
//   10/09/91   DMEIER     DB2 chngs: Changed opurec.xxxpgmno
//                         to opurec.xxxpgmnb (om0ksau).
//                         Changed om0kw01.om0kwsgr rec length
//                         due to chgns in kucrec.kucgrp.
//   12/02/91   jhecke     695 - Prepack of footwear. s06
//   02/12/92   schase     recompiled for new version of cc1rec
//   03/13/92   dharri     database chg - s11, s65, s80 removed
//                         reference to op1bgrpo
//   06/01/92   sjob       #758- delete op1bgrpo from map and
//                         statement  OM0KS72.
//   06/08/92   bbake2     database changes, increased size of
//                         om0kwsgr in om0kw01 to accomodate
//                         increase in kucgrp.
//   12/16/92   jather     log 868 - transmitted airborne order
//                         cannot be updated or cancelled - s02
//   06/10/93   dcaust     #964 International Airborne.
//                         disallow changes to ship to info if
//                         order class = 'TR' (transmitted
//                         Airborne order).  s03.
//   08/09/93   gcalki     db2 chgs:  chgd om0kw01.om0kwsgr rec
//                         length due to chgs in kucrec.kucgrp.
//                         xxxaddr renamed to xxx-addr kulrec.
//   02/28/94   scantr     db2 chgs: changed xxxaddr to
//                         xxx-addr and added xxx-addr4,5,&6
//                         in om0ks20
//   04/28/94   jather     log 1003. renamed causera to
//                         ca-user-workarea-4k to hold opwrec
//                         which has increased to 3072 bytes.
//   08/07/95   DLIDDL     Modified to incorporate Nike Canada
//                         into the GOAL system.
//   10/06/95   DLIDDL     Don't edit the ship to/bill to state
//                         and zip codes for Canadian Intl
//                         orders - OM0KS72, OM0KS75
//   10/28/97   SATYAM     Added edit in OM0KS86, before
//                         calling iomod IO0460 to check
//                         whether any rows exist with the same
//                         key values, before inserting rows in
//                         dorder.voaddr01. If it exists then
//                         it updates the row instead of
//                         inserting
// 11/25/97     SGOPAL     Added two statement groups om0ks77 &
//                         om0ks78 for generation of relevant
//                         messages for a PSST customer.
//                         1.To indicate that the customer is
//                           PSST.(om0ks77) message - 953
//                         2.To indicate the onetime shipment
//                           address change of a PSST customer
//                           (om0ks78)      message - 954
//  08/27/98    udafon     #178 Increased size of OMWREC to
//                         3505 bytes. Re-compiled application.
//  04/17/98    OVAQUE     *** For whse 51 only ***
//                         Allow changes to specific informa-
//                         tion on an order after it has been
//                         posted to the Mirror Pick Pool db's
//                         The change allowed is Ship-to-addr.
//                         The status of an order in the
//                         Mirror Pool is checked and it has be
//                         equal to "Allocated" before any
//                         changes are allowed.
//  03/17/00   gsunda      Spain Trade Mark Project Changes
//                         1. Avoid defaulting 'USA' when the
//                         ship to country code is spaces.
//                         2. Enable the user to enter ship to
//                         address country code for all
//                         countries including USA
//                         (Current user cannot enter Country
//                          code when it is 'USA')
//                         3. Validate all the products for
//                         non complaint when the ship to
//                         country code is 'Spain'
// 01/18/00   Rshaik       WEP1301 record structure has been
//                         changed Pl. refer WEP1301 prologue.
// *********************
Program OM0K type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  CC1REC CC1REC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  KUJREC KUJREC; // record
  KULREC KULREC; // record
  KUMREC KUMREC; // record
  KUNREC KUNREC; // record
  KUVREC KUVREC; // record
  OM0KW01 OM0KW01; // record
  OM0KW02 OM0KW02; // record
  OM0KW03 OM0KW03 { redefines = OM0KW02 } ; // record
  OMAREC OMAREC; // record
  OMBREC OMBREC; // record
  OMWREC OMWREC; // record
  OP10REC OP10REC; // record
  OP1REC OP1REC; // record
  OP5REC OP5REC; // record
  OPUREC OPUREC; // record
  OSNREC OSNREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VOPPGM01 VOPPGM01; // record
  VSTADR01 VSTADR01; // record
  WEP1301 WEP1301; // record
  XS0MW01 XS0MW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XAUTBL {deleteAfterUse = yes}; // table
  use XCTTBL {deleteAfterUse = yes}; // table
  use XOSTBL {deleteAfterUse = yes}; // table
  use XOTTBL {deleteAfterUse = yes}; // table
  use XPATBL; // table
  use XSTTBL {deleteAfterUse = yes}; // table
  use OM0KM.OM0KM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OM0K001: OM0K001();


        /* branch to get addresses*/

    goto OM0K010; /* branch to get addresses*/



     /* *************************************************************/
    OM0K010: OM0K010();



        /* branch to converse*/

    goto OM0K020; /* branch to converse addresses*/



     /* *************************************************************/
    OM0K020: OM0K020();



        /* if error flag set or pf12 (edit only)*/
        /* or pf2 (request update), then converse the map*/
    if (OMAREC.OMAERR == "Y"
     || converseVar.eventKey is pf12
     || converseVar.eventKey is pf2)
      goto OM0K020; /* branch to converse addresses*/
    end


        /* branch to program end*/

    goto OM0K090; /* branch to flow control*/



     /* *************************************************************/
    OM0K090: OM0K090();

    if (OMAREC.OMAERR == "Y")
      goto OM0K020;
    end



     /* *************************************************************/
  end // end main
end // end OM0K

// program init / control flow
Function OM0K001()


     /* **********************************************************/
     /* * this process inits program work area, map area,       **/
     /* * and checks security.                                  **/
     /* **********************************************************/

  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value

      /* set revision number of application*/
  OM0KM001.OMMRVN = 01; /* address screen*/


      /* check entry security*/
  XSENTRY();

   /* ****************************************************/
   /* *** set segmented trans id                      ****/
   /* ****************************************************/
  COMMAREA.CAEZSAP = sysVar.transactionID;
  COMMAREA.CAEZSG12 = "OM";
  COMMAREA.CAEZSG4 = "K";
  sysVar.transactionID = COMMAREA.CAEZSAP;

   /* *************************************************************/

      /* retrieve user common area and order entry security*/

  OM0KS01(); /* clear ws records*/
  XSOMS01(); /* check order maint security*/

  OP1REC.OP1GROUP = OMWREC.OP1GROUP; /* get ord hdr rec*/

  OM0KW01.OM0KW-OP1SHAID-SV = 0;
  OM0KW01.OM0KW-EP0K-ADDR-FL = "N";
  if (OP1REC.XWHCD == "51")
    if (COMMAREA.CAFROMAP == "EP0K") /* From ship-to addr update screen*/
      if (OP1REC.OP1SHAID > 0) /* Ship-to address was modified*/
        OM0KW01.OM0KW-OP1SHAID-SV = OP1REC.OP1SHAID;
        OM0KW01.OM0KW-EP0K-ADDR-FL = "Y";
      end
    end
  end

  OM0KS10(); /* get current order header rec*/
  OM0KS11(); /* save order header fields*/
  OM0KS04(); /* set up cogs code attributes*/


      /* determine update authority*/

  OMWREC.OMWPF2CH = "N"; /* set pf2 change flag off*/

  OM0KS02(); /* determine update authority*/


      /* init areas*/

  OM0KM001.OMMDT = VGVar.currentShortGregorianDate; /* set date*/
  TA1REC.TA1TYPE = "DB2 "; /* abend type*/
  TA1REC.TA1FUNC = "RETN"; /* abend function (return)*/
  TA1REC.TA1PGMNM = "OM0K    "; /* pgm name*/
  TA1REC.TA1MAP = "OM0KM001"; /* current map name*/
  TA1REC.TA1LOCAT[1] = "OM0K001 "; /* process name*/
  if (OMWREC.OMWOPTN == 10)
    OMWREC.OMWEOF = "Y"; /* set end of flow flag*/
  end
  OM0KM001.OMWORD = OMWREC.OMWORD; /* load order number in map*/
  OMAREC.OMACUCO = OP1REC.KUCCOID; /* format cust co*/
  OMAREC.OMASEP1 = ".";
  OMAREC.OMACUSR = OP1REC.KUMSTRID; /* format store*/
  OMAREC.OMASEP2 = ".";
  OMAREC.OMACUDP = OP1REC.XNXCD; /* format dept*/
  OM0KM001.OMMCUNO = OMAREC.OMACUNO; /* move formatted cust nbr*/



   /* *************************************************************/
end // end OM0K001

// get addrs
Function OM0K010()



     /* **********************************************************/
     /* * this controls the retrieval of an order for review    **/
     /* * of customer address screen.                           **/
     /* **********************************************************/



      /* init areas*/

  TA1REC.TA1LOCAT[1] = "OM0K010 "; /* process name*/


      /* get name and addresses*/

  OM0KS60(); /* get and format store info*/
  OM0KS63(); /* get and format ship to info*/
  OM0KS65(); /* get and format bill to info*/



   /* *************************************************************/
end // end OM0K010

// converse map and edit addrs
Function OM0K020()

      /* *********************************************************/
      /* * this process converses the map, handles aid key      **/
      /* * requests, edits entered fields for cust id review.   **/
      /* *********************************************************/

      /* init areas*/

  TA1REC.TA1LOCAT[1] = "OM0K020 "; /* process name*/


      /* set cursor position if inquiry*/

  if (OMWREC.OMWPF2CH != "Y") /* not update mode*/
    set OM0KM001.OM0KMDUM cursor, protect;
  else
    if (OMAREC.OMAERR == "N") /* no error (cursor not set)*/
      set OM0KM001.OP1SHAID cursor;
    end
  end


      /* force segmented converse execution mode*/

  converseVar.segmentedMode = 1; /* force segmented execution mode*/


   /* CANADA 08/07/95*/

   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* The following code which protects the ship to country*/
   /* is commented out to enable the user to enter ship to country*/

  if (KUCREC.XCTCD == "CANA") /* CANA if Canada protect*/
    /*  */
  /* GSUNDA       03/17/00      Spain Trademark project     Start ***/
  /* SET OM0KM001.OM0KMSCN AUTOSKIP,DARK;   ship to*/
  /* GSUNDA       03/17/00      Spain Trademark project     end   ***/
    /*  */
    set OM0KM001.OM0KMBCN skip, invisible; /* CANA bill to country code*/
  end

   /* TCS INCLUDE  BEGIN  11/25/97*/

  if (converseVar.eventKey is pf2
   && converseVar.validationMsgNum == 352)
  /* next sentence*/
  else
    if (OMAREC.OMAERR != "Y")
      if (OP1REC.OP11TMSF == "Y")
        OM0KS78();
      else
        OM0KS77();
      end
    end
  end

   /* TCS INCLUDE   END  11/25/97*/


  set OM0KM001.OM0KMPF16 skip, invisible;
  if (OP1REC.XWHCD == "51")
    if (OM0KW01.OM0KW-PF16-OK-FL == "Y")
      set OM0KM001.OM0KMPF16 initialAttributes;
    end
  end


   /* *************************************************************/
  converse OM0KM001 ;
   /* *************************************************************/


      /* clear (reset fields)*/


  OMAREC.OMAERR = "N"; /* clear error flag*/
  OM0KW01.OM0KWOBF = "N"; /* clear error flag*/
  OM0KW01.OM0KWOSF = "N"; /* clear error flag*/
  OM0KW01.OM0KWPCH = "N"; /* clear pick chg flag*/

  OM0KS59(); /* if modified set fields modified*/


      /* check and process valid aid key requests*/

      /* enter - continue processing*/
        /* pa2 - show orig screen  (no update)*/
        /* pf2 - allow updating*/
        /* pf3 - om0m menu (no update)*/
        /* pf4 - master menu (no update)*/
        /* pf12- edit only*/
        /* pf13- om0h ord header 1 (update performed)*/
        /* pf14- om0i ord header 2 (update performed)*/
        /* pf15- om0j instructions (update performed)*/
        /* pf16- ep0k memphis addr (update performed) - whse 51 only*/
        /* pf17- om0l allocations  (update performed)*/
        /* pf18- om0c comments     (update performed)*/
        /* pf19- show orig screen  (no update)*/

  if (OM0KW01.OM0KW911 == "Y")
    OM0KW911 = "N";
    exit stack;
  end

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf12
   || converseVar.eventKey is pf13
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf17
   || converseVar.eventKey is pf18)
     /* ** next sentence ** continue processing ***/
  else
    if (converseVar.eventKey is pf16
     && OP1REC.XWHCD == "51") /* Memphis Apparel Whse*/
      if (OM0KW01.OM0KW-PF16-OK-FL == "N")
        converseLib.validationFailed(012); /* invalid screen flow message*/
        OMAREC.OMAERR = "Y"; /* set error flag*/
        exit stack;
      end

      if (OM0KM001.OP1SHAID is modified
       && OM0KM001.OP1SHAID > 0)
        converseLib.validationFailed(054); /* cannot enter addr id and new addr...*/
        OMAREC.OMAERR = "Y"; /* set error flag*/
        exit stack;
      end
    else
      if (converseVar.eventKey is pf2 /* pf2 pressed*/
       && OMWREC.OMWPF2CH != "Y")     /* and chg flag off*/
        /* ** next sentence ** continue processing ***/
      else
        if (converseVar.eventKey is pf19) /* check for start over*/
          transfer to program "OM0K" passing COMMAREA; /* transfer to self for restart*/
        else
          if (converseVar.eventKey is pa2) /* check for start over*/
            COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
            transfer to program "OM0K" passing COMMAREA; /* transfer to self for restart*/
          else
            converseLib.validationFailed(008); /* invalid key pressed message*/
            OMAREC.OMAERR = "Y"; /* set error flag*/
            exit stack;
          end
        end
      end
    end
  end


  if (converseVar.eventKey is pf3) /* check for o/m menu (skip update)*/
    if (OMWREC.OMWPKCHF == "Y") /* pack change flag*/
      OM0KS06(); /* check for prepack*/
      if (OMAREC.OMAERR == "Y")
        return;
      end
      if (OMWREC.OMWPPEXF == "Y") /* prepack exists*/
        COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
        COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
        COMMAREA.CACURRAP = "OS0G";
        COMMAREA.CAMSG = "ORDER MAINTAINED - UPDATE PREPACK";
        transfer to program "OS0G" passing COMMAREA;
      else
        COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
        COMMAREA.CACURRAP = "OM0M";
        transfer to program "OM0M" passing COMMAREA; /* transfer to o/m menu*/
      end
    else
      COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
      COMMAREA.CACURRAP = "OM0M";
      transfer to program "OM0M" passing COMMAREA; /* transfer to o/m menu*/
    end
  end


  if (converseVar.eventKey is pf4) /* check for master menu (skip update)*/
    if (OMWREC.OMWPKCHF == "Y") /* pack change flag*/
      OM0KS06(); /* check for prepack*/
      if (OMAREC.OMAERR == "Y")
        return;
      end
      if (OMWREC.OMWPPEXF == "Y") /* prepack exists*/
        COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
                                   /* save user comm area*/
        COMMAREA.CACURRAP = "OS0G";
        COMMAREA.CAMSG = "ORDER MAINTAINED - UPDATE PREPACK";
        transfer to program "OS0G" passing COMMAREA;
      else
        XSPF4(); /* master menu request*/
        COMMAREA.CATOAP = " "; /* clear to appl*/
        OMAREC.OMAERR = "Y"; /* set error flag*/
        OM0KM001.VAGen_EZEMSG = COMMAREA.CAMSG;
        exit stack;
      end
    else
      XSPF4(); /* master menu request*/
      COMMAREA.CATOAP = " "; /* clear to appl*/
      OMAREC.OMAERR = "Y"; /* set error flag*/
      OM0KM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      exit stack;
    end
  end

      /* if pf2 then check for allow update.*/
      /* if valid, then set screen attributes*/
      /* and reconverse the map.*/

  if (converseVar.eventKey is pf2) /* set allow update?*/
    OM0KS02(); /* validate update request*/
    exit stack;
  end


      /* perform field edits*/

  OM0KS70(); /* perform field edits*/
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* release data base resources*/


      /* if errors found then converse the map*/
      /* if pf12 then assume edit only (converse the map)*/

  if (OMAREC.OMAERR == "Y" /* errors found ?*/
   || converseVar.eventKey is pf12) /* edit only?*/
    exit stack;
  end

      /* update order header record necessary*/

  if (OM0KW01.OM0KWUOF == "Y") /* update order header?*/
    OM0KS80(); /* update order header record*/
  end


      /* update address records if necessary*/

  if (OM0KW01.OM0KWUSF == "Y" /* update one time ship to?*/
   || OM0KW01.OM0KWUBF == "Y") /* update one time bill to?*/
    OM0KS85(); /* update address records*/
  end

  if (OM0KW01.OM0KWPCH == "Y") /* if picking data has changed*/
    if (OP1REC.XOSCD == "AL" /* allocated*/
     || OP1REC.XOSCD == "PA") /* part allocated*/
      OM0KS20(); /* create picking record*/
    end
  end



      /* commit updates*/

  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* commit/release data base resources*/



   /* *************************************************************/
end // end OM0K020

// control program flow
Function OM0K090()


      /* *********************************************************/
      /* * this process controls the program flow at the end    **/
      /* * of the program.                                      **/
      /* *********************************************************/



      /* save op1rec and commarea changes*/

  OMWREC.OP1GROUP = OP1REC.OP1GROUP; /* save op1rec*/
  COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
                                   /* save user comm area*/


      /* check for pf13 - om0h order header 1*/

  if (converseVar.eventKey is pf13)
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
    COMMAREA.CACURRAP = "OM0H";
    transfer to program "OM0H" passing COMMAREA;
  end


      /* check for pf14 - om0i order header 2*/

  if (converseVar.eventKey is pf14)
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
    COMMAREA.CACURRAP = "OM0I";
    transfer to program "OM0I" passing COMMAREA;
  end


      /* check for pf15 - om0j instructions*/

  if (converseVar.eventKey is pf15)
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
    COMMAREA.CACURRAP = "OM0J";
    transfer to program "OM0J" passing COMMAREA;
  end


      /* check for pf16 - ep0k onetime address DCMS memphis*/

  if (converseVar.eventKey is pf16
   && OM0KW01.OM0KW-PF16-OK-FL == "Y")
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
    COMMAREA.CACURRAP = "EP0K";
    transfer to program "EP0K" passing COMMAREA;
  end


      /* check for pf17 - om0l allocations*/

  if (converseVar.eventKey is pf17)
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
    COMMAREA.CACURRAP = "OM0L";
    transfer to program "OM0L" passing COMMAREA;
  end


      /* check for pf18 - om0c comments*/

  if (converseVar.eventKey is pf18)
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
    COMMAREA.CACURRAP = "OM0C";
    transfer to program "OM0C" passing COMMAREA;
  end


      /* check for enter key vs option for transfer*/

  if (OMWREC.OMWEOF == "Y") /* check for end of flow*/
    if (OMWREC.OMWPKCHF == "Y") /* pack change flag*/
      OM0KS06(); /* check for prepack*/
      if (OMAREC.OMAERR == "Y")
        exit stack;
      end
      if (OMWREC.OMWPPEXF == "Y") /* prepack exists*/
        COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
        COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
        COMMAREA.CACURRAP = "OS0G";
        COMMAREA.CAMSG = "ORDER MAINTAINED - UPDATE PREPACK";
        transfer to program "OS0G" passing COMMAREA;
      else
        COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
        COMMAREA.CACURRAP = "OM0M";
        transfer to program "OM0M" passing COMMAREA; /* o/m menu*/
      end
    else
      COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
      COMMAREA.CACURRAP = "OM0M";
      transfer to program "OM0M" passing COMMAREA; /* o/m menu*/
    end
  end


      /* assume not end of flow*/

  if (OMWREC.OMWOPTN == 1)
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
    COMMAREA.CACURRAP = "OM0S";
    transfer to program "OM0S" passing COMMAREA; /* product summary*/
  end


  if (OMWREC.OMWOPTN == 2
   || OMWREC.OMWOPTN == 4) /* product detail*/
    if (OMWREC.OMWCHGFL == "N") /* check for change allowed*/
      COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
      COMMAREA.CACURRAP = "OM0O";
      transfer to program "OM0O" passing COMMAREA;
    else
      COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
      COMMAREA.CACURRAP = "OM0Q";
      transfer to program "OM0Q" passing COMMAREA;
    end
  end


  if (OMWREC.OMWOPTN == 5)
    if (OMWREC.OMWCHGFL == "N") /* check for change allowed*/
      COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
      COMMAREA.CACURRAP = "OM0O";
      transfer to program "OM0O" passing COMMAREA;
    else
      COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
      COMMAREA.CACURRAP = "OM0P";
      transfer to program "OM0P" passing COMMAREA;
    end
  end


  if (OMWREC.OMWOPTN == 6)
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
    COMMAREA.CACURRAP = "OM0A";
    transfer to program "OM0A" passing COMMAREA;
  end


      /* default to o/m menu*/

  COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
  if (OMWREC.OMWPKCHF == "Y") /* pack change flag*/
    OM0KS06(); /* check for prepack*/
    if (OMAREC.OMAERR == "Y")
      exit stack;
    end
    if (OMWREC.OMWPPEXF == "Y") /* prepack exists*/
      COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
      COMMAREA.CACURRAP = "OS0G";
      COMMAREA.CAMSG = "ORDER MAINTAINED - UPDATE PREPACK";
      transfer to program "OS0G" passing COMMAREA;
    else
      COMMAREA.CACURRAP = "OM0M";
      transfer to program "OM0M" passing COMMAREA;
    end
  else
    COMMAREA.CACURRAP = "OM0M";
    transfer to program "OM0M" passing COMMAREA;
  end



   /* *************************************************************/
end // end OM0K090

// Mirror Pool sub-routine
Function OM0KS-CALL-EP1300()
   /* ------------------------------------------------------------------*/
   /* Order Change Subroutine for editing and updating the Mirror*/
   /* Pool Database.  Move the required fields into the passing record*/
   /* based upon modified flags.*/
   /* If return code is 1, no orders exist on the Mirror Pool Database.*/
   /* If return code is 2, 3 or 4, changes cannot be applied.*/
   /* If any others, indicate a system error.*/
   /* ------------------------------------------------------------------*/

  try
    call "EP1300" (WEP1301) {isNoRefresh = yes, isExternal = yes};
  end


end // end OM0KS-CALL-EP1300

// spain compliance check
Function OM0KS-SPAIN-CHECK()



      /* *********************************************************/
      /* * this statement group validates the products on the   **/
      /* * order for Spain Compliance.                          **/
      /* *********************************************************/




      /* check for the country code(spain/canary/spaces)*/
      /* and go ahead to validate the product details.*/
  if (OP10REC.XCT-CTRY-CD == "SPAI"
   || OP10REC.XCT-CTRY-CD == "CNRY"
   || OP10REC.XCT-CTRY-CD == " ")
  /* NEXT SENTENCE*/
  else
    return;
  end

      /* load the pass record*/

  set OP10REC empty;
  OP10REC.OP10-PASSING-APPL = "OM0K"; /* load application name*/
  OP10REC.OP1CUOID = OP1REC.OP1CUOID; /* load order number*/
  OP10REC.OP1NORID = OP1REC.OP1NORID; /* load nike order id*/
  OP10REC.OP10-RETURN-CODE = "99"; /* initialize per nike standards*/
  call "OP6410" (OP10REC) {isNoRefresh = yes, isExternal = yes}; /* call the nikeboth*/

  if (OP10REC.OP10-RETURN-CODE == "00") /* product is spai/cnry compliant*/
    return;
  end

  if (OP10REC.OP10-RETURN-CODE == "02") /* product is spai/cnry non-compliant*/
    converseLib.validationFailed(1005); /* address change not allowed*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    OM0KW01.OM0KWOSF = "Y"; /* set error flag*/
    if (OM0KW01.OM0KW-FROM-SGRP == "75") /* from statement group om0ks75*/
      set OM0KM001.OM0KMSCN cursor, modified, bold;
      OM0KW01.OM0KW-FROM-SGRP = "00";
      return;
    end
    if (OM0KW01.OM0KW-FROM-SGRP == "76") /* from statement group om0ks76*/
      set OM0KM001.OP1SHAID cursor, modified, bold;
      OM0KW01.OM0KW-FROM-SGRP = "00";
      return;
      OM0KW01.OM0KW-FROM-SGRP = "00";
      return;
    end
    if (OM0KW01.OM0KW-FROM-SGRP == "76") /* from statement group om0ks76*/
      set OM0KM001.OP1SHAID cursor, modified, bold;
      OM0KW01.OM0KW-FROM-SGRP = "00";
      return;
    end
  end
   /* any return code other than '00' or '02'*/
   /* load the abend screen fields, abend the application*/
  set TA1REC empty;
  TA1REC.TA1LOC = "OM0KS-SPAIN-CHECK"; /* statement group*/
  TA1REC.TA1MAP = "OM0KM001"; /* /map name*/
  XSOMS-OP6410-ERRTN(); /* abend routine*/
end // end OM0KS-SPAIN-CHECK

Function OM0KS01()



      /* *********************************************************/
      /* * this statement group sets the working storage records**/
      /* * empty during initialization                          **/
      /* *********************************************************/


      /* set ws recs empty*/

  set OMWREC empty;
  set OMAREC empty;
  set OMBREC empty;
  set OM0KW01 empty;
  set SQLCA empty;
  set ERRSQLCA empty;
  set TA1REC empty;
  set TA2REC empty;
  set OP1REC empty;
  set OP5REC empty;
  set KUCREC empty;
  set KULREC empty;
  set KUMREC empty;
  set KUNREC empty;

   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* The following statement is added to intialize Spain project*/
   /* validating record*/
   /* GSUNDA       03/17/00      Spain Trademark project     start ***/

  set OP10REC empty;

   /* GSUNDA       03/17/00      Spain Trademark project     End   ***/


   /* *************************************************************/
end // end OM0KS01

// validate set update request
Function OM0KS02()



      /* *********************************************************/
      /* * this statement validates the request for allowing    **/
      /* * updates.  if valid, then the screen attributes are   **/
      /* * set to allow updating.                               **/
      /* *********************************************************/


      /* do not allow update for a transmitted AIRBORNE order*/

  XS0MW01.XS0MWDIV = OP1REC.XDVCD; /* build a pass record*/
  XS0MW01.XS0MWORT = OP1REC.XOTCD;
  XS0MW01.XS0MWDIR = OP1REC.XDSCD;
  XS0MW01.XS0MWCUS = OP1REC.KUCCOID;
  XS0MW01.XS0MWGPC = OP1REC.XGPCD;
  XS0MW01.XS0MWNDT = OP1REC.OP1CUNDT;

  VOPPGM01.XXX-PGM-NBR = "OP1920";
  call "IO6600" ("S ", SQLCA, VOPPGM01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
   /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER";
    TA1REC.TA1TBLVU = "VOPPGM01";
    TA1REC.TA1TBLKE = "OP1920";
    TA1REC.TA1LOCAT[3] = "OM0KS62";
    TA1REC.TA1LOCAT[4] = "IO6600";
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    COMMAREA.CA-USER-WORKAREA-4K = " ";
    XSPF4();
    exit program;
  end

  XS0MS-CHK-AIRBORNE();


      /* check commarea flags for update authority*/
      /* national allocation manager cannot change orders*/

  OM0KW01.OM0KW-PF16-OK-FL = "N";

  if (OMWREC.OMWCHGFL == "Y" /* o/m change enabled*/
   || converseVar.eventKey is pf2) /* pf2 request change*/
    if (COMMAREA.CACHGFL == "N" /* change enabled?*/
     || COMMAREA.CACLVL[1] == "Y") /* national alloc mgr?*/
      converseLib.validationFailed(352); /* id is not auth to change orders*/
      OMAREC.OMAERR = "Y"; /* set error flag*/
      return; /* no updates allowed*/
    else
      if (XS0MW01.XS0MWABF == "Y") /* airborne transmitted order*/
        converseLib.validationFailed(788); /* no updates allowed*/
        OMWREC.OMWPF2CH = "N";
        OMAREC.OMAERR = "Y";
        set OM0KM001.OM0KMPF2 skip, invisible;
        set OM0KM001.OM0KMPF16 skip, invisible;
        return;
      end
    end
  else
    if (XS0MW01.XS0MWABF == "Y") /* airborne transmitted order*/
      set OM0KM001.OM0KMPF2 skip, invisible; /* darken pf2*/
      set OM0KM001.OM0KMPF16 skip, invisible;
      return; /* updates not allowed*/
    end
    return;
  end

      /* validate order status*/

  if (OP1REC.XOSCD in XOSTBL.XOSCD) /* valid code*/
    if (XOSTBL.XOSALWCH[sysVar.arrayIndex] != "Y") /* change not allowed?*/
      converseLib.validationFailed(368); /* order stat doesnt allow chg to ord*/
      OMAREC.OMAERR = "Y"; /* set error flag*/
      return; /* no updates allowed*/
    end
  end


      /* validate sales office*/

  if (OP1REC.XSOCD != COMMAREA.XSOCD) /* valid code*/
    converseLib.validationFailed(355); /* not auth to chg other sales off ord*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    return; /* no updates allowed*/
  end


   /* added for rebooking 10/88 tjf*/
  if (OP1REC.XBDCD == "R")
    converseLib.validationFailed(392);
    OMAREC.OMAERR = "Y";
    return;
  end

      /* set to allow updates*/

  OM0KM001.OM0KMHDR = "CHANGE"; /* set heading*/
  OMWREC.OMWPF2CH = "Y"; /* changes allowed*/
  OM0KW01.OM0KW-PF16-OK-FL = "Y";
  set OM0KM001.OM0KMPF2 skip, invisible; /* do not show pf2 option*/
  set OM0KM001.OM0KMPF16 skip, invisible; /* do not show pf16 option*/
  OM0KS03(); /* set screen to allow updates*/



   /* *************************************************************/
end // end OM0KS02

// set screen attributes for upd
Function OM0KS03()


  if (OMWREC.OMWPF2CH == "Y") /* changes allowed set?*/
    OM0KS05(); /* call kucrec*/
    if (KUCREC.XAUCD in XAUTBL.XAUCD
     && XAUTBL.XXXSTAT[sysVar.arrayIndex] == "A"
     && XAUTBL.XAUA1SFL[sysVar.arrayIndex] == "N")
      set OM0KM001.OP1SHAID skip;
      set OM0KM001.OM0KMSNM skip;
      set OM0KM001.OM0KMSA1 skip;
      set OM0KM001.OM0KMSA2 skip;
      set OM0KM001.OM0KMSA3 skip;
      set OM0KM001.OM0KMSCT skip;
      set OM0KM001.OM0KMSST skip;
      set OM0KM001.OM0KMSZP skip;
      set OM0KM001.OM0KMSCN skip;
      OM0KW01.OM0KW-PF16-OK-FL = "N";
    else
      set OM0KM001.OP1SHAID cursor, normal;
      set OM0KM001.OM0KMSNM normal;
      set OM0KM001.OM0KMSA1 normal;
      set OM0KM001.OM0KMSA2 normal;
      set OM0KM001.OM0KMSA3 normal;
      set OM0KM001.OM0KMSCT normal;
      set OM0KM001.OM0KMSST normal;
      set OM0KM001.OM0KMSZP normal;
      set OM0KM001.OM0KMSCN normal;
    end
  end


   /* if an international order and order class 'tr' (transmitted*/
   /* airborne order) don't allow changes to ship to info.*/

  if (OP1REC.XDVCD == "02" /* international*/
   && OP1REC.XOCCD == "TR") /* order class*/
    set OM0KM001.OP1SHAID skip; /* ship group address id*/
    set OM0KM001.OM0KMSNM skip; /* ship to name*/
    set OM0KM001.OM0KMSA1 skip; /* ship to addr line 1*/
    set OM0KM001.OM0KMSA2 skip; /* ship to addr line 2*/
    set OM0KM001.OM0KMSA3 skip; /* ship to addr line 3*/
    set OM0KM001.OM0KMSCT skip; /* ship to city*/
    set OM0KM001.OM0KMSST skip; /* ship to state*/
    set OM0KM001.OM0KMSZP skip; /* ship to zip*/
    set OM0KM001.OM0KMSCN skip; /* ship to country*/
    OM0KW01.OM0KW-PF16-OK-FL = "N";
  end


   /* memphis whse51) don't allow changes to ship to address flds*/
   /* ep0k will be used to change 1time addrs*/

  if (OP1REC.XWHCD == "51") /* memphis whse 51*/
    set OM0KM001.OM0KMSNM skip; /* ship to name*/
    set OM0KM001.OM0KMSA1 skip; /* ship to addr line 1*/
    set OM0KM001.OM0KMSA2 skip; /* ship to addr line 2*/
    set OM0KM001.OM0KMSA3 skip; /* ship to addr line 3*/
    set OM0KM001.OM0KMSCT skip; /* ship to city*/
    set OM0KM001.OM0KMSST skip; /* ship to state*/
    set OM0KM001.OM0KMSZP skip; /* ship to zip*/
    set OM0KM001.OM0KMSCN skip; /* ship to country*/
  end


      /* set bill to attributes*/

  if (OMWREC.OMWPF2CH == "Y") /* changes allowed set?*/
    if (OP1REC.XOTCD in XOTTBL.XOTCD /* valid code*/
     && XOTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active code*/
      if (XOTTBL.XOTABILL[sysVar.arrayIndex] == "Y") /* bill to override ok?*/
        set OM0KM001.OM0KMBNM normal;
        set OM0KM001.OM0KMBA1 normal;
        set OM0KM001.OM0KMBA2 normal;
        set OM0KM001.OM0KMBA3 normal;
        set OM0KM001.OM0KMBCT normal;
        set OM0KM001.OM0KMBST normal;
        set OM0KM001.OM0KMBZP normal;
        set OM0KM001.OM0KMBCN normal;
      end
    end
  end


      /* set cogs attribute*/

  set OM0KM001.OM0KMCGL skip, invisible;
  set OM0KM001.OP1COGID skip, invisible;
  if (OP1REC.XOTCD in XOTTBL.XOTCD /* valid code*/
   && XOTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active code*/
    if (XOTTBL.XOTACOGS[sysVar.arrayIndex] == "Y") /* cogs entry ok?*/
      if (OMWREC.OMWPF2CH == "Y") /* changes allowed set?*/
        set OM0KM001.OM0KMCGL skip;
        set OM0KM001.OP1COGID normal; /* allow entry*/
      else
        set OM0KM001.OM0KMCGL skip;
        set OM0KM001.OP1COGID skip; /* allow viewing only*/
      end
    end
  end


   /* *************************************************************/
end // end OM0KS03

// set cogs code screen attrib
Function OM0KS04()



      /* *********************************************************/
      /* * this statement group sets the cogs code field attrbs.**/
      /* *********************************************************/


      /* set cogs attribute to view if order type table says so*/

  set OM0KM001.OM0KMCGL skip, invisible;
  set OM0KM001.OP1COGID skip, invisible;
  if (OP1REC.XOTCD in XOTTBL.XOTCD /* valid code*/
   && XOTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active code*/
    if (XOTTBL.XOTACOGS[sysVar.arrayIndex] == "Y") /* cogs entry ok?*/
      set OM0KM001.OM0KMCGL skip;
      set OM0KM001.OP1COGID skip; /* allow viewing only*/
    end
  end



   /* *************************************************************/
end // end OM0KS04

// call kucrec
Function OM0KS05()


      /* get customer company record*/

  KUCREC.KUCCOID = OP1REC.KUCCOID; /* load key - company*/
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100) /* check for notfnd rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
    TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* key value*/
    TA1REC.TA1LOCAT[3] = "OM0KS05 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0240  "; /* i/o mod name*/
    XSOPS02();
  end


      /* if not found, then customer is invalid*/

  if (SQLCA.VAGen_SQLCODE == 100) /* check for notfnd rc*/
    converseLib.validationFailed(033); /* customer is not valid*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    OM0KW01.OM0KWOSF = "Y"; /* set error flag*/
  end


end // end OM0KS05

// CHECK FOR PREPACK
Function OM0KS06()

   /* THIS STATEMENT GROUP CHECKS THE PREPACK DATABASE*/
   /* TO SEE IF THE ORDER EXISTS*/

  OMWREC.OMWPKCHF = "N"; /* pack change flag*/
  OMWREC.OMWPPEXF = "N"; /* prepack exists flag*/
  sysVar.arrayIndex = 1;

  if (OP1REC.XGPCD == "03" /* APPAREL ORDER*/
   || OP1REC.XGPCD == "02") /* footwear order*/
    if (OP1REC.XPACD in XPATBL.XPACD /* IF VALID PACK CODE*/
     && XPATBL.XXXSTAT[sysVar.arrayIndex] == "A")
      if (XPATBL.XPASPFFL[sysVar.arrayIndex] == "Y") /* CUST WANTS PREPACK*/
           /* NEXT SENTENCE   SEE IF ORDER IS ON DBASE*/
      else
        return;
      end
    else
      return;
    end
  else
    return;
  end

   /* BUILD THE KEY TO SPECIFIED PREPACK TABLE*/

  set OSNREC empty;
  set SQLCA empty;

  OSNREC.XWHCD = OP1REC.XWHCD; /* WAREHOUSE*/
  OSNREC.OP1PARTN = OP1REC.OP1PARTN; /* PART CHAR*/
  OSNREC.OP1CUOID = OP1REC.OP1CUOID; /* ORDER NUM*/
  OSNREC.OP1NORID = OP1REC.OP1NORID; /* NIKE ORD ID*/

  call "IO5650" ("SE", SQLCA, OSNREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == -811) /* multi records found*/
    OMWREC.OMWPPEXF = "Y"; /* prepack exists flag*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OMWREC.OMWPPEXF = "N"; /* prepack exists flag*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        OMWREC.OMWPKCHF = "Y"; /* reseet pack change flag*/
        OMAREC.OMAERR = "Y";
        OM0KW01.OM0KW911 = "Y"; /* set to bypass updates*/
        converseLib.validationFailed(672); /* prepack db busy try again*/
        return;
      else
        OMAREC.OMAERR = "Y";
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "OM0K    ";
        TA1REC.TA1LOCAT[1] = "SE      ";
        TA1REC.TA1LOCAT[2] = "OM0KS06 ";
        TA1REC.TA1LOCAT[3] = "IO5650  ";
        TA1REC.TA1DBASE = "DORDER  ";
        TA1REC.TA1TBLVU = "VCSPRP01";
        OM0KW01.OM0KWDKY = " ";
        OM0KW01.OM0KWDPN = OP1REC.OP1PARTN;
        OM0KW01.OM0KWDCU = OP1REC.OP1CUOID;
        OM0KW01.OM0KWDNK = OP1REC.OP1NORID;
        TA1REC.TA1TBLKE = OM0KW01.OM0KWDKY;
        try
          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        end
        COMMAREA.CAMSGA = "PREPACK DB PROBLEMS";
        COMMAREA.CAMSGB = "ORDER MAY HAVE PREPACK CALL USER ANALYST";
        COMMAREA.CACURRAP = "OM0M";
        transfer to program "OM0M" passing COMMAREA;
      end
    end
  end

end // end OM0KS06

// get order header record
Function OM0KS10()



      /* *********************************************************/
      /* * this statement gets the order header row.            **/
      /* *********************************************************/


      /* get the order header from data base*/

  call "IO0430" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VORHDR01"; /* table view*/
    TA1REC.TA1PGMNM = "OM0K"; /* program name*/
    TA1REC.TA1MAP = "OM0K001"; /* map name*/
    TA1REC.TA1LOCAT[3] = "OM0KS10 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0430  "; /* i/o mod name*/
    OM0KW01.OM0KWDKY = " "; /* set display key empty*/
    OM0KW01.OM0KWDPN = OP1REC.OP1PARTN; /* display part no*/
    OM0KW01.OM0KWDCU = OP1REC.OP1CUOID; /* display cust-ord-id*/
    OM0KW01.OM0KWDNK = OP1REC.OP1NORID; /* display nike-ord-id*/
    TA1REC.TA1TBLKE = OM0KW01.OM0KWDKY; /* key value*/
    XSOPS02();
  end



   /* *************************************************************/
end // end OM0KS10

// store order hdr fields
Function OM0KS11()



      /* *********************************************************/
      /* * store order header fields.                           **/
      /* *********************************************************/


      /* save order header fields*/

  OM0KW01.OP11TMBF = OP1REC.OP11TMBF; /* save one time bill flag*/
  OM0KW01.OP1BLAID = OP1REC.OP1BLAID; /* save bill group id*/
  OM0KW01.OP11TMSF = OP1REC.OP11TMSF; /* save one time ship flag*/
  OM0KW01.OP1SGPAO = OP1REC.OP1SGPAO; /* save ship group override*/
  OM0KW01.OP1SHAID = OP1REC.OP1SHAID; /* save ship group addr id*/
  OM0KW01.OP1COGID = OP1REC.OP1COGID; /* save cogs code*/



   /* *************************************************************/
end // end OM0KS11

// edit/save customer
Function OM0KS13()



      /* *********************************************************/
      /* * this statement group get the first gpc rec for a cust**/
      /* *********************************************************/


      /* issue select set to get first gpc rec for customer*/

  KUNREC.KUCCOID = OP1REC.KUCCOID; /* load key - company*/
  KUNREC.KUMSTRID = OP1REC.KUMSTRID; /* load key - store*/
  KUNREC.XNXCD = OP1REC.XNXCD; /* load key - dept*/

  if (OP1REC.XGPCD == "02" /* footwear*/
   || OP1REC.XGPCD == "03") /* apparel*/
    KUNREC.XGPCD = OP1REC.XGPCD; /* load key - gpc*/
  else /* not 02 or 03*/
    KUNREC.XGPCD = "**"; /* pick any rows*/
  end

  call "IO0280" ("SS", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCUST001"; /* table view*/
    TA1REC.TA1TBLKE = KUNREC.KUNGRP; /* key value*/
    TA1REC.TA1LOCAT[3] = "OM0KS13 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0280  "; /* i/o mod name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* invoke syncpoint rollback*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* invoke master menu*/
    exit program;
  end


      /* get first gpc rec for customer*/

  call "IO0280" ("SN", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/

      /* if not review mode, then not found is an error*/
      /* since a gpc record was found sometime previouly*/
      /* for the customer.*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* check for notfnd rc*/
      converseLib.validationFailed(203); /* customer is not valid*/
    else
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VCUST001"; /* table view*/
      TA1REC.TA1TBLKE = KUNREC.KUNGRP; /* key value*/
      TA1REC.TA1LOCAT[3] = "OM0KS13 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0280  "; /* i/o mod name*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* invoke syncpoint rollback*/
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
      COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
      XSPF4(); /* invoke master menu*/
      exit program;
    end
  end


   /* *************************************************************/
end // end OM0KS13

// create picking chg record
Function OM0KS20()
    /* *****************************************************/
    /* *  create a record to be fed to the picking system **/
    /* *  whenever a chg is made to an order that affects **/
    /* *  picking.***/
    /* *****************************************************/


  OMBREC.KUMSHAID = OP1REC.OP1SHAID;

  if (OP1REC.OP1SHAID > 0) /* if not 1-time*/
     /* next sentence*/
     /* don't move in addr stuff*/
  else
    OMBREC.OP5ALTNM = OP5REC.OP5ALTNM;
    OMBREC.XXX-ADDR1 = OP5REC.XXX-ADDR[1];
    OMBREC.XXX-ADDR2 = OP5REC.XXX-ADDR[2];
    OMBREC.XXX-ADDR3 = OP5REC.XXX-ADDR[3];
    OMBREC.XXX-ADDR4 = OP5REC.XXX-ADDR[4];
    OMBREC.XXX-ADDR5 = OP5REC.XXX-ADDR[5];
    OMBREC.XXX-ADDR6 = OP5REC.XXX-ADDR[6];
    OMBREC.XXXCITY = OP5REC.XXXCITY;
    OMBREC.XSTCD = OP5REC.XSTCD;
    OMBREC.XXXZIP = OP5REC.XXXZIP;
    OMBREC.XCTCD = OP5REC.XCTCD;
  end


  OMBREC.OMBMRTYP = "K";
  OMBREC.XWHCD = OP1REC.XWHCD;
  OMBREC.OP1CUOID = OP1REC.OP1CUOID;
  OMBREC.OP1PARTN = OP1REC.OP1PARTN;
  OMBREC.OP1NORID = OP1REC.OP1NORID;
  OMBREC.ZZZSDT = OP1REC.ZZZCHGDT;
  OMBREC.ZZHHMMSS = TA2REC.TA2TIMEN;

  if (OM0KW01.OM0KW-APPLY-CHG-FL == "Y")
    set WEP1301 empty;
    WEP1301.WEP1301-OPTION-CD = "U";
    WEP1301.WEP1301-CALLING-PGM-ID = "OM0K";
    WEP1301.WEP1301-XXX-USER-ID = COMMAREA.CAUSERID;
    WEP1301.WEP1301-XWH-WHSE-CD = OP1REC.XWHCD;
    WEP1301.WEP1301-PK-ORD-STKTF-ID = OP1REC.OP1CUOID;
    WEP1301.WEP1301-PK-NIKE-ORD-ID = OP1REC.OP1NORID;
    WEP1301.WEP1301-XOS-ORD-STAT-CD = OP1REC.XOSCD;
    WEP1301.WEP1301-CU-SHGRP-ADDR-ID = OMBREC.KUMSHAID;
    WEP1301.WEP1301-OP-SHGRP-OVRD-IND = OP1REC.OP1SGPAO;

    if (OMBREC.KUMSHAID > 0)
            /* NEXT SENTENCE*/
    else
      WEP1301.WEP1301-OP-ALT-NM = OMBREC.OP5ALTNM;
      WEP1301.WEP1301-XXX-ADDR1 = OMBREC.XXX-ADDR1;
      WEP1301.WEP1301-XXX-ADDR2 = OMBREC.XXX-ADDR2;
      WEP1301.WEP1301-XXX-ADDR3 = OMBREC.XXX-ADDR3;
      WEP1301.WEP1301-XXX-CITY = OMBREC.XXXCITY;
      WEP1301.WEP1301-XST-ST-CD = OMBREC.XSTCD;
      WEP1301.WEP1301-XXX-ZIP = OMBREC.XXXZIP;
      WEP1301.WEP1301-XCT-CTRY-CD = OMBREC.XCTCD;
    end

    WEP1301.WEP1301-TODAYS-DATE = OMBREC.ZZZSDT;
    WEP1301.WEP1301-CURRENT-TIME = TA2REC.TA2TIMHM;
    WEP1301.WEP1301-RETURN-CODE = 99;
    TA1REC.TA1TBLKE = WEP1301.WEP1301-PASS-INFO;

    OM0KS-CALL-EP1300();

    if (WEP1301.WEP1301-RETURN-CODE >= 5)
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OM0K";
      TA1REC.TA1MAP = "OM0KM001";
      TA1REC.TA1DBASE = "DPICK";
      TA1REC.TA1TBLVU = "VMPOLH01";
      TA1REC.TA1LOCAT[3] = "OM0KS20";
      TA1REC.TA1LOCAT[2] = "EP1300";
      TA1REC.TA1LOCAT[1] = WEP1301.WEP1301-RETURN-CODE;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
      exit program;
    end

  end

  call "IO1680" ("A ", SQLCA, OMBREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "OM0K    ";
    TA1REC.TA1MAP = "OM0KM001";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VOPKKM01";
    TA1REC.TA1LOCAT[3] = "OM0KS20";
    TA1REC.TA1LOCAT[4] = "IO01680";
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
    exit program;
  end

end // end OM0KS20

// set mdt's for modified fields
Function OM0KS59()

      /* set mdt's in fields for the case of invalid aid key*/
      /* this allows the user to press the correct aid key*/
      /* without having to re-enter the data.*/

  if (OM0KM001.OP1SHAID is modified) /* ship to addr id*/
    set OM0KM001.OP1SHAID modified;
  end

  if (OM0KM001.OM0KMSNM is modified) /* ship to name*/
    set OM0KM001.OM0KMSNM modified;
  end

  if (OM0KM001.OM0KMSA1 is modified) /* ship to addr line 1*/
    set OM0KM001.OM0KMSA1 modified;
  end

  if (OM0KW01.OM0KW-EP0K-ADDR-FL == "Y") /* from EP0K w/new address*/
    set OM0KM001.OM0KMSA1 modified;
  end

  if (OM0KM001.OM0KMSA2 is modified) /* ship to addr line 2*/
    set OM0KM001.OM0KMSA2 modified;
  end

  if (OM0KM001.OM0KMSA3 is modified) /* ship to addr line 3*/
    set OM0KM001.OM0KMSA3 modified;
  end

  if (OM0KM001.OM0KMSCT is modified) /* ship to city*/
    set OM0KM001.OM0KMSCT modified;
  end

  if (OM0KM001.OM0KMSST is modified) /* ship to state*/
    set OM0KM001.OM0KMSST modified;
  end

  if (OM0KM001.OM0KMSZP is modified) /* ship to zip*/
    set OM0KM001.OM0KMSZP modified;
  end

  if (OM0KM001.OM0KMSCN is modified) /* ship to country*/
    set OM0KM001.OM0KMSCN modified;
  end

  if (OM0KM001.OP1BLAID is modified) /* bill group id*/
    set OM0KM001.OP1BLAID modified;
  end

  if (OM0KM001.OM0KMBNM is modified) /* bill to name*/
    set OM0KM001.OM0KMBNM modified;
  end

  if (OM0KM001.OM0KMBA1 is modified) /* bill to addr line 1*/
    set OM0KM001.OM0KMBA1 modified;
  end

  if (OM0KM001.OM0KMBA2 is modified) /* bill to addr line 2*/
    set OM0KM001.OM0KMBA2 modified;
  end

  if (OM0KM001.OM0KMBA3 is modified) /* bill to addr line 3*/
    set OM0KM001.OM0KMBA3 modified;
  end

  if (OM0KM001.OM0KMBCT is modified) /* bill to city*/
    set OM0KM001.OM0KMBCT modified;
  end

  if (OM0KM001.OM0KMBST is modified) /* bill to state*/
    set OM0KM001.OM0KMBST modified;
  end

  if (OM0KM001.OM0KMBZP is modified) /* bill to zip*/
    set OM0KM001.OM0KMBZP modified;
  end

  if (OM0KM001.OM0KMBCN is modified) /* bill to country*/
    set OM0KM001.OM0KMBCN modified;
  end

  if (OM0KM001.OP1COGID is modified) /* cogs code*/
    set OM0KM001.OP1COGID modified;
  end


   /* *************************************************************/
end // end OM0KS59

// get format store name/addr
Function OM0KS60()



      /* *********************************************************/
      /* * this statement group get and formats store name/addr **/
      /* *********************************************************/


      /* get store record for customer*/

  KUMREC.KUCCOID = OP1REC.KUCCOID; /* load key - company*/
  KUMREC.KUMSTRID = OP1REC.KUMSTRID; /* load key - store*/
  call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/
      /* not found is error*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VSTORE01"; /* table view*/
    TA1REC.TA1TBLKE = KUMREC.KUMGRP; /* key value*/
    TA1REC.TA1LOCAT[3] = "OM0KS60 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0340  "; /* i/o mod name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* invoke syncpoint rollback*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* invoke master menu*/
    exit program;
  end


      /* save infomation and show store self id*/

  OM0KM001.KUMSTAID = KUMREC.KUMSTAID; /* save store addr id*/
  OM0KM001.KUMSTRNM = KUMREC.KUMSTRNM; /* save cust store name*/
  OMWREC.KUMSTRNM = KUMREC.KUMSTRNM; /* save cust store name*/
  if (KUMREC.KUMSLFID > " ") /* show store self id if present*/
    OM0KM001.KUMSLFID = KUMREC.KUMSLFID;
    set OM0KM001.OM0KMSIL skip;
  else
    set OM0KM001.OM0KMSIL skip, invisible;
  end


      /* access customer address table for store name/addr*/

  KULREC.KUCCOID = OP1REC.KUCCOID; /* load key - cust co*/
  KULREC.KULAAID = KUMREC.KUMSTAID; /* load key - store addr id*/
  call "IO0170" ("S ", SQLCA, KULREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/
      /* if not found, then error*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VADDR001"; /* table view*/
    TA1REC.TA1TBLKE = KULREC.KULGRP; /* key value*/
    TA1REC.TA1LOCAT[3] = "OM0KS60 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0170  "; /* i/o mod name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* invoke syncpoint rollback*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* invoke master menu*/
    exit program;
  end


      /* format address on screen*/

      /* this code compresses the address lines*/
      /* (remove blank lines)*/

  OMAREC.OMASUB = 1; /* set addr index*/
  if (KULREC.XXX-ADDR1 > " ") /* address line 1*/
    OM0KM001.OM0KMCA[OMASUB] = KULREC.XXX-ADDR1;
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end

  if (KULREC.XXX-ADDR2 > " ") /* address line 2*/
    OM0KM001.OM0KMCA[OMASUB] = KULREC.XXX-ADDR2;
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end

  if (KULREC.XXX-ADDR3 > " ") /* address line 3*/
    OM0KM001.OM0KMCA[OMASUB] = KULREC.XXX-ADDR3;
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end

  OM0KW01.OM0KWCAD = " "; /* clear work area*/
  OM0KW01.OM0KWCCT = KULREC.XXXCITY; /* format city,st,zip*/
  OM0KW01.OM0KWCST = KULREC.XSTCD;
  OM0KW01.OM0KWCZP = KULREC.XXXZIP;
  if (OM0KW01.OM0KWCAD > " ")
    OM0KM001.OM0KMCA[OMASUB] = OM0KW01.OM0KWCAD;
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end

   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* The following code is changed to initialise map variables for*/
   /* all the countries including USA and Canada*/

   /* CANADA 08/07/95*/

   /* GSUNDA       03/17/00      Spain Trademark project     Start ***/

   /* IF KULREC.XCTCD GT ' '           /* country code present?*/
   /* AND KULREC.XCTCD NE 'USA ';    /* and not equal u.s.a.*/
   /* MOVE ' ' TO OM0KW01.OM0KWCCN;  /* clear work area*/
   /* IF KULREC.XCTCD IN XCTTBL.XCTCD;*/
   /* IF KULREC.XCTCD NE 'CANA';   /* CANA country isn't Canada*/
   /* MOVE KULREC.XCTCD TO OM0KW01.XCTCD;*/
   /* END;*/
   /* MOVE XCTTBL.XCTDESC(EZETST) TO OM0KW01.XCTDESC;*/
   /* MOVE OM0KW01.OM0KWCCN TO OM0KM001.OM0KMCA(OMASUB);*/
   /* END;*/
   /* END;*/

  if (KULREC.XCTCD > " ") /* country code present?*/
    OM0KW01.OM0KWCCN = " "; /* clear work area*/
    if (KULREC.XCTCD in XCTTBL.XCTCD /* Check valid country code*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active status*/
      OM0KW01.XCTCD = KULREC.XCTCD; /* Move country code to map var*/
    end
    OM0KW01.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex]; /* Move Country Name*/
    OM0KM001.OM0KMCA[OMASUB] = OM0KW01.OM0KWCCN; /* Move to address*/
  end /* table*/

   /* GSUNDA       03/17/00      Spain Trademark project     end   ***/

   /* *************************************************************/
end // end OM0KS60

// format ship to name/addr
Function OM0KS63()

      /* *********************************************************/
      /* * this statement group formats ship to name/address    **/
      /* *********************************************************/


      /* get customer/gpc record*/

  KUNREC.KUCCOID = OP1REC.KUCCOID; /* load key - company*/
  KUNREC.KUMSTRID = OP1REC.KUMSTRID; /* load key - store*/
  KUNREC.XNXCD = OP1REC.XNXCD; /* load key - dept*/
  KUNREC.XGPCD = OP1REC.XGPCD; /* load key - gpc*/
  call "IO0280" ("S ", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100) /* check for notfnd rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCUST001"; /* table view*/
    TA1REC.TA1TBLKE = KUNREC.KUNGRP; /* key value*/
    TA1REC.TA1LOCAT[3] = "OM0KS63 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0280  "; /* i/o mod name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* invoke syncpoint rollback*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* invoke master menu*/
    exit program;
  end


      /* if not found then get first gpc rec for cust*/

  if (SQLCA.VAGen_SQLCODE == 100) /* check for notfnd rc*/
    OM0KS13();
  end


      /* format dept self id*/

  if (KUNREC.KUJSLFID > " ") /* exists?*/
    OM0KM001.KUJSLFID = KUNREC.KUJSLFID; /* dept self id*/
    set OM0KM001.OM0KMDIL skip;
  else
    set OM0KM001.OM0KMDIL skip, invisible;
  end


      /* See if ship-to address needs to be read and displayed on screen*/
      /* (if it exists, it may be updated)*/
      /* then see if we have ship-to address from EP0K.*/

  if (OM0KW01.OM0KW-EP0K-ADDR-FL == "Y") /* whse 51, from EP0K w/data*/
    if (OP1REC.OP11TMSF == "Y") /* one time ship to required*/
      OM0KS68(); /* get 1 time ship-to addr*/
    end
    OM0KS67(); /* get new ship-to addr*/
    return;
  else
    if (OP1REC.OP11TMSF == "Y") /* one time ship to required*/
      OM0KS68(); /* get 1 time ship-to addr*/
      return;
    end
  end

      /* check for ship to override*/

  if (OP1REC.OP1SGPAO == "Y")
    OM0KM001.OM0KMSAO = "*";
  end


      /* access customer address table for ship to name/addr*/

  KULREC.KUCCOID = OP1REC.KUCCOID; /* load key - cust co*/
  KULREC.KULAAID = OP1REC.OP1SHAID; /* load key - ship to addr id*/
  call "IO0170" ("S ", SQLCA, KULREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/
      /* not found is error*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
      /* next sentence*/
  else
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VOADDR01"; /* table view*/
    TA1REC.TA1TBLKE = KULREC.KULGRP; /* key value*/
    TA1REC.TA1LOCAT[3] = "OM0KS63 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0170  "; /* i/o mod name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* invoke syncpoint rollback*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* invoke master menu*/
    exit program;
  end


      /* format name*/

  OM0KM001.OP1SHAID = OP1REC.OP1SHAID; /* ship to addr id*/
  OM0KM001.OM0KMSNM = OMWREC.KUMSTRNM; /* store name*/


      /* format address on screen*/


  if (OP1REC.XNXCD == 0)
    OM0KM001.OM0KMSA1 = KULREC.XXX-ADDR1; /* addr line 1*/
  else
    KUJREC.KUCCOID = OP1REC.KUCCOID; /* load key - cust co*/
    KUJREC.XNXCD = OP1REC.XNXCD; /* load key - dept code*/
    call "IO0290" ("S ", SQLCA, KUJREC) {isNoRefresh = yes, isExternal = yes}; /* get dept self id*/

    if (SQLCA.VAGen_SQLCODE == 0)
      OM0KW01.OM0KWLIT = "DEPT "; /* move lit to hold area*/
      OM0KW01.KUJSLFID = KUJREC.KUJSLFID; /* dept self id to hold*/
      OM0KM001.OM0KMSA1 = OM0KW01.OM0KWHD1; /* formatted dept to addr 1*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* dept self id not found*/
        OM0KM001.OM0KMSA1 = KULREC.XXX-ADDR1; /* addr line 1*/
      else
        TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
        TA1REC.TA1TBLVU = "VCUST001"; /* table view*/
         /* format the company id and dept code to make readable*/
        OM0KW01.OM0KWFD1 = KUJREC.KUCCOID; /* format cmpny id*/
        OM0KW01.OM0KWFD2 = " "; /* filler*/
        OM0KW01.OM0KWFD3 = KUJREC.XNXCD; /* format dept code*/
        TA1REC.TA1TBLKE = OM0KW01.OM0KWFLD; /* formatted key value*/
        TA1REC.TA1LOCAT[3] = "OM0KS63 "; /* statement group*/
        TA1REC.TA1LOCAT[4] = "IO0290  "; /* i/o mod name*/
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
         /* invoke syncpoint rollback*/
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
        COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
        XSPF4(); /* invoke master menu*/
        exit program;
      end
    end
  end

  OM0KM001.OM0KMSA2 = KULREC.XXX-ADDR2; /* addr line 2*/
  OM0KM001.OM0KMSA3 = KULREC.XXX-ADDR3; /* addr line 3*/
  OM0KM001.OM0KMSCT = KULREC.XXXCITY; /* city*/
  OM0KM001.OM0KMSST = KULREC.XSTCD; /* state*/
  OM0KM001.OM0KMSZP = KULREC.XXXZIP; /* zip*/
  OM0KM001.OM0KMSCN = " "; /* country code*/
  OM0KM001.OM0KMSCD = " "; /* country code desc*/
   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* The following codes are commented to display ship to country code*/
   /* for all countries including USA*/

  if (KULREC.XCTCD > " ") /* country code present?*/

    /* GSUNDA       03/17/00      Spain Trademark project     Start ***/
    /* AND KULREC.XCTCD NE 'USA';        and not equal u.s.a.*/
    /* GSUNDA       03/17/00      Spain Trademark project     end   ***/

    OM0KM001.OM0KMSCN = KULREC.XCTCD; /* country code*/
    if (KULREC.XCTCD in XCTTBL.XCTCD /* Country code check*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active status*/
      OM0KM001.OM0KMSCD = XCTTBL.XCTDESC[sysVar.arrayIndex];
                                   /* country code desc*/
    end
  end


   /* *************************************************************/
end // end OM0KS63

// format bill to name/addr
Function OM0KS65()



      /* *********************************************************/
      /* * this statement group formats bill to name/address.   **/
      /* *********************************************************/


      /* check cogs number*/

  if (OP1REC.XOTCD in XOTTBL.XOTCD /* valid code*/
   && XOTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active code*/
    if (XOTTBL.XOTACOGS[sysVar.arrayIndex] == "Y") /* cogs entry ok?*/
      if (OP1REC.OP1COGID > 0) /* cogs code exist*/
        OM0KM001.OP1COGID = OP1REC.OP1COGID; /* move cogs code*/
      end
    end
  end


      /* check if one time bill to needed*/

  if (OP1REC.OP11TMBF == "Y") /* one time bill to?*/
    OM0KS69(); /* get one time bill to*/
    return; /* get out*/
  end


      /* access company table for bill to addr id*/

  KUCREC.KUCCOID = OP1REC.KUCCOID; /* load key - cust id*/
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/
      /* not found is error*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
    TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* key value*/
    TA1REC.TA1LOCAT[3] = "OM0KS65 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0240  "; /* i/o mod name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* invoke syncpoint rollback*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* invoke master menu*/
    exit program;
  end


      /* access customer address table for bill to name/addr*/

  KULREC.KUCCOID = OP1REC.KUCCOID; /* load key - cust co*/
  KULREC.KULAAID = KUCREC.KUCBLAID; /* load key - bill to addr id*/
  call "IO0170" ("S ", SQLCA, KULREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/
      /* not found is error*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VADDR001"; /* table view*/
    TA1REC.TA1TBLKE = KULREC.KULGRP; /* key value*/
    TA1REC.TA1LOCAT[3] = "OM0KS65 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0170  "; /* i/o mod name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* invoke syncpoint rollback*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* invoke master menu*/
    exit program;
  end


      /* format name*/

  OM0KM001.OP1BLAID = OP1REC.OP1BLAID; /* op addr id*/
  OM0KM001.KUCBLAID = KUCREC.KUCBLAID; /* bill to addr id*/
  OM0KM001.OM0KMBNM = OMWREC.KUMSTRNM; /* store name*/


      /* format address on screen*/

  OM0KM001.OM0KMBA1 = KULREC.XXX-ADDR1; /* addr line 1*/
  OM0KM001.OM0KMBA2 = KULREC.XXX-ADDR2; /* addr line 2*/
  OM0KM001.OM0KMBA3 = KULREC.XXX-ADDR3; /* addr line 2*/
  OM0KM001.OM0KMBCT = KULREC.XXXCITY; /* city*/
  OM0KM001.OM0KMBST = KULREC.XSTCD; /* state*/
  OM0KM001.OM0KMBZP = KULREC.XXXZIP; /* zip*/
  OM0KM001.OM0KMBCN = " "; /* country code*/
  OM0KM001.OM0KMBCD = " "; /* country code desc*/
  if (KULREC.XCTCD > " " /* country code present?*/
   && KULREC.XCTCD != "USA ") /* and not equal u.s.a.*/
    OM0KM001.OM0KMBCN = KULREC.XCTCD; /* country code*/
    if (KULREC.XCTCD in XCTTBL.XCTCD)
      OM0KM001.OM0KMBCD = XCTTBL.XCTDESC[sysVar.arrayIndex];
                                   /* country code desc*/
    end
  end



   /* *************************************************************/
end // end OM0KS65

// format EP0K's shp to name/addr
Function OM0KS67()

      /* *********************************************************/
      /* * this retrieves one ship to name/address from the     **/
      /* * stadr01 table.                                       **/
      /* *********************************************************/

   /* -----------------------------------------------------------*/
   /* get onetime vstadr01 address info for Memphis DCMS*/
   /* -----------------------------------------------------------*/

  set VSTADR01 empty; /* Init DB2 record*/

  VSTADR01.CU-CO-ID = OP1REC.KUCCOID; /* Company*/
  VSTADR01.CU-STOR-ID = OP1REC.KUMSTRID; /* Store*/
  VSTADR01.CU-SHGRP-ADDR-ID = OM0KW01.OM0KW-OP1SHAID-SV; /* Addr ID*/

  try
    call "VSTADR01" ("S ", SQLCA, VSTADR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
     /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1LOC = "SELECT VSTADR01"; /* Description*/
    TA1REC.TA1DBASE = "DPICK   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSTADR01"; /* Table view name*/
    TA1REC.TA1LOCAT[3] = "OM0CS67 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "VSTADR01"; /* i/o mod name*/
    TA1REC.TA1TBLKE = VSTADR01.VSTADR01-KEY; /* key value*/
    XSOPS02(); /* common abnd rtn*/
    return; /* Return to previous process*/
  end


  if (OP1REC.OP11TMSF == "Y")
    OM0KW01.OM0KW1SA = "C"; /* will change 1 time ship addr*/
  else
    OM0KW01.OM0KW1SA = "A"; /* will add new 1 time ship addr*/
  end


      /* format address on screen*/

  OM0KM001.OM0KMSNM = VSTADR01.OP-ALT-NM; /* Name*/
  OM0KM001.OM0KMSA1 = VSTADR01.XXX-ADDR1; /* Addr 1*/
  OM0KM001.OM0KMSA2 = VSTADR01.XXX-ADDR2; /* Addr 2*/
  OM0KM001.OM0KMSA3 = VSTADR01.XXX-ADDR3; /* Addr 3*/
  OM0KM001.OM0KMSCT = VSTADR01.XXX-CITY; /* City*/
  OM0KM001.OM0KMSST = VSTADR01.XST-ST-CD; /* State*/
  OM0KM001.OM0KMSZP = VSTADR01.XXX-ZIP; /* zip*/
  OM0KM001.OM0KMSCN = " "; /* Country*/
  OM0KM001.OM0KMSCD = " "; /* country desc*/

   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* The following code is commented out to enable the user to*/
   /* enter ship to country code on the screen*/
   /*  */
  if (VSTADR01.XCT-CTRY-CD > " " /* country code present?*/
  )                             
   /* GSUNDA       03/17/00      Spain Trademark project     Start ***/
   /* AND VSTADR01.XCT-CTRY-CD NE 'USA';/* and not equal U.S.A*/
   /* GSUNDA       03/17/00      Spain Trademark project     End   ***/

    OM0KM001.OM0KMSCN = VSTADR01.XCT-CTRY-CD; /* Country*/
    if (VSTADR01.XCT-CTRY-CD in XCTTBL.XCTCD)
      OM0KM001.OM0KMSCD = XCTTBL.XCTDESC[sysVar.arrayIndex]; /* country desc*/
    end
  end


   /* *************************************************************/
end // end OM0KS67

// format 1 time shp to name/addr
Function OM0KS68()



      /* *********************************************************/
      /* * this retrieves one ship to name/address from the     **/
      /* * orders address table.                                **/
      /* *********************************************************/


      /* get one time ship to record*/

  OP5REC.OP1PARTN = OP1REC.OP1PARTN; /* load key - partition*/
  OP5REC.OP1CUOID = OP1REC.OP1CUOID; /* load key - cust order*/
  OP5REC.OP1NORID = OP1REC.OP1NORID; /* load key - nike order*/
  OP5REC.OP5BILIN = "N"; /* load key - bill ind*/
  OP5REC.OP5SHPIN = "Y"; /* load key - ship ind*/
  call "IO0460" ("S ", SQLCA, OP5REC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/
      /* not found is error*/
      /* as record was previously added*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "V0ADDR01"; /* table view*/
    TA1REC.TA1TBLKE = OP5REC.OP5KEY; /* key value*/
    TA1REC.TA1LOCAT[3] = "OM0CS68 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0460  "; /* i/o mod name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* invoke syncpoint rollback*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* invoke master menu*/
    exit program;
  end


      /* format address on screen*/

  OM0KW01.OM0KW1SA = "C"; /* set change action*/
  OM0KW01.OM0KWOSR = OP5REC.OP5GROUP; /* save rec*/
  OM0KM001.OM0KMSNM = OP5REC.OP5ALTNM; /* name*/
  OM0KM001.OM0KMSA1 = OP5REC.XXXADDR[1]; /* addr line 1*/
  OM0KM001.OM0KMSA2 = OP5REC.XXXADDR[2]; /* addr line 2*/
  OM0KM001.OM0KMSA3 = OP5REC.XXXADDR[3]; /* addr line 2*/
  OM0KM001.OM0KMSCT = OP5REC.XXXCITY; /* city*/
  OM0KM001.OM0KMSST = OP5REC.XSTCD; /* state*/
  OM0KM001.OM0KMSZP = OP5REC.XXXZIP; /* zip*/

   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* The following codes are commented to display ship to country code*/
   /* for all countries including USA*/

  if (OP5REC.XCTCD > " ") /* country code present?*/

    /* GSUNDA       03/17/00      Spain Trademark project     Start ***/
    /* AND OP5REC.XCTCD NE 'USA ';     /* and not equal u.s.a.*/
    /* GSUNDA       03/17/00      Spain Trademark project     End   ***/

    OM0KM001.OM0KMSCN = OP5REC.XCTCD; /* country*/
    if (OP5REC.XCTCD in XCTTBL.XCTCD /* country code*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active status*/
      OM0KM001.OM0KMSCD = XCTTBL.XCTDESC[sysVar.arrayIndex];
                                   /* country code desc*/
    end
  end



   /* *************************************************************/
end // end OM0KS68

// format 1 time bil to name/addr
Function OM0KS69()



      /* *********************************************************/
      /* * this retrieves one bill to name/address from the     **/
      /* * orders address table.                                **/
      /* *********************************************************/


      /* get one time bill to record*/

  OP5REC.OP1PARTN = OP1REC.OP1PARTN; /* load key - partition*/
  OP5REC.OP1CUOID = OP1REC.OP1CUOID; /* load key - cust order*/
  OP5REC.OP1NORID = OP1REC.OP1NORID; /* load key - nike order*/
  OP5REC.OP5BILIN = "Y"; /* load key - bill ind*/
  OP5REC.OP5SHPIN = "N"; /* load key - ship ind*/
  call "IO0460" ("S ", SQLCA, OP5REC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/
      /* not found is error*/
      /* as it was previously added*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VOADDR01"; /* table view*/
    TA1REC.TA1TBLKE = OP5REC.OP5KEY; /* key value*/
    TA1REC.TA1LOCAT[3] = "OM0CS69 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0460  "; /* i/o mod name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* invoke syncpoint rollback*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* invoke master menu*/
    exit program;
  end


      /* format address on screen*/

  OM0KW01.OM0KW1BA = "C"; /* set change action*/
  OM0KW01.OM0KWOBR = OP5REC.OP5GROUP; /* save rec*/
  OM0KM001.OM0KMBNM = OP5REC.OP5ALTNM; /* name*/
  OM0KM001.OM0KMBA1 = OP5REC.XXXADDR[1]; /* addr line 1*/
  OM0KM001.OM0KMBA2 = OP5REC.XXXADDR[2]; /* addr line 2*/
  OM0KM001.OM0KMBA3 = OP5REC.XXXADDR[3]; /* addr line 2*/
  OM0KM001.OM0KMBCT = OP5REC.XXXCITY; /* city*/
  OM0KM001.OM0KMBST = OP5REC.XSTCD; /* state*/
  OM0KM001.OM0KMBZP = OP5REC.XXXZIP; /* zip*/
  if (OP5REC.XCTCD > " " /* country code present?*/
   && OP5REC.XCTCD != "USA ") /* and not equal u.s.a.*/
    OM0KM001.OM0KMBCN = OP5REC.XCTCD; /* country*/
    if (OP5REC.XCTCD in XCTTBL.XCTCD) /* country code*/
      OM0KM001.OM0KMBCD = XCTTBL.XCTDESC[sysVar.arrayIndex];
                                   /* country code desc*/
    end
  end



   /* *************************************************************/
end // end OM0KS69

// edit control processing
Function OM0KS70()

      /* *********************************************************/
      /* * this statement group controls the field editing      **/
      /* * for the customer addresses.                          **/
      /* *                                                      **/
      /* * the fields are edited in reverse order so that the   **/
      /* * the cursor and error message will be related to the  **/
      /* * top most error.  any errors below the top most most  **/
      /* * error will still be highlighted.                     **/
      /* *********************************************************/


  TA1REC.TA1LOCAT[2] = "OM0KS70 "; /* set statement group*/


      /* edit/save cogs code*/

  if (OM0KM001.OP1COGID is modified)
    OM0KS71(); /* edit cogs code*/
  end


      /* edit/save bill to*/

  if (OM0KM001.OM0KMBNM is modified
   || OM0KM001.OM0KMBA1 is modified
   || OM0KM001.OM0KMBA2 is modified
   || OM0KM001.OM0KMBA3 is modified
   || OM0KM001.OM0KMBCT is modified
   || OM0KM001.OM0KMBST is modified
   || OM0KM001.OM0KMBZP is modified
   || OM0KM001.OM0KMBCN is modified)
    OM0KS72(); /* edit bill to*/
  end


      /* edit/save ship to*/

  if (OM0KM001.OP1SHAID is modified
   || OM0KM001.OM0KMSNM is modified
   || OM0KM001.OM0KMSA1 is modified
   || OM0KM001.OM0KMSA2 is modified
   || OM0KM001.OM0KMSA3 is modified
   || OM0KM001.OM0KMSCT is modified
   || OM0KM001.OM0KMSST is modified
   || OM0KM001.OM0KMSZP is modified
   || OM0KM001.OM0KMSCN is modified
   || OM0KW01.OM0KW-EP0K-ADDR-FL == "Y") /* from EP0K w/new address*/
    OM0KS73(); /* edit ship to*/
    OM0KW01.OM0KWPCH = "Y";
  end



   /* *************************************************************/
end // end OM0KS70

// edit/save cogs code
Function OM0KS71()



      /* *********************************************************/
      /* * this statement group edits the cogs code field.      **/
      /* *********************************************************/


      /* accept null cogs code*/

  if (OM0KM001.OP1COGID == 0) /* null code?*/
    OM0KW01.OM0KWUOF = "Y"; /* set order header update*/
    OM0KW01.OP1COGID = 0; /* clear code*/
    set OM0KM001.OP1COGID normal;
    return;
  end


      /* validate cogs code*/

   /* first save the company record for the further editing*/

  OM0KW01.KUCGRP = KUCREC.KUCGRP;
  OM0KW01.OM0KWCGS = "N"; /* set cogs error flag to no*/

  KUCREC.KUCCOID = OM0KM001.OP1COGID; /* use cogs cd to get company*/

   /* get a specific company record.*/

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};

   /* abend if a db2 error occured.*/

  if (SQLCA.VAGen_SQLCODE == 0)

     /* verify the acct class cd as follows:*/
     /* a) company must be active*/
     /* B) code must exist in xautb*/
     /* c) code must be either '05' (promo misc)*/
                            /* '06' (in house)*/

    sysVar.arrayIndex = 1; /* initialize table index*/
    if (KUCREC.XXXSTAT == "A" /* active code?*/
     && KUCREC.XAUCD in XAUTBL.XAUCD from sysVar.arrayIndex)
      if (XAUTBL.XATCD[sysVar.arrayIndex] == "05"
       || XAUTBL.XATCD[sysVar.arrayIndex] == "06")
        OM0KW01.OM0KWUOF = "Y"; /* set order header update*/
        OM0KW01.OP1COGID = OM0KM001.OP1COGID; /* save code*/
        set OM0KM001.OP1COGID normal;
      else
        OM0KW01.OM0KWCGS = "Y"; /* set invalid cogs flag on*/
      end
    else
      OM0KW01.OM0KWCGS = "Y"; /* set invalid cogs flag on*/
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OM0KW01.OM0KWCGS = "Y"; /* set invalid cogs flag on*/
    else
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
      TA1REC.TA1TBLKE = OM0KM001.OP1COGID; /* key value*/
      TA1REC.TA1LOCAT[2] = "OM0KS71 "; /* statement group*/
      TA1REC.TA1LOCAT[3] = "IO0240  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[4] = "S       "; /* requested action*/
      XSOPS02(); /* abend routine*/
    end
  end
  if (OM0KW01.OM0KWCGS == "Y") /* invalid cogs code*/
    converseLib.validationFailed(058); /* cogs number is not valid*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    set OM0KM001.OP1COGID cursor, modified, bold;
  end

  KUCREC.KUCGRP = OM0KW01.KUCGRP; /* replace the company record*/




   /* *************************************************************/
end // end OM0KS71

// edit/save bill to name/addr
Function OM0KS72()



      /* *********************************************************/
      /* * this statement group edits the bill to name/addr.    **/
      /* *********************************************************/


      /* validate required entries*/


      /* set default country code if null*/

  if (OM0KM001.OM0KMBCN == " " /* null?*/
   || OM0KM001.OM0KMBCN == "USA") /* null?*/
    OM0KM001.OM0KMBCN = "USA";
  end


      /* edit country code*/

  if (OM0KM001.OM0KMBCN in XCTTBL.XCTCD /* valid code*/
   && XCTTBL.XXXSTAT == "A")            /* active status*/
    if (OM0KM001.OM0KMBCN != "USA")
      OM0KM001.OM0KMBCD = XCTTBL.XCTDESC[sysVar.arrayIndex]; /* cntry cd desc*/
    else
      OM0KM001.OM0KMBCD = " "; /* cntry cd desc*/
    end
  else
    converseLib.validationFailed(060); /* country code is not valid*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    OM0KW01.OM0KWOBF = "Y"; /* set error flag*/
    OM0KM001.OM0KMBCD = " "; /* cntry cd desc*/
    set OM0KM001.OM0KMBCN cursor, modified, bold;
  end


      /* if usa, then zip is required*/

  if (OM0KM001.OM0KMBCN == "USA")
    if (OM0KM001.OM0KMBZP <= "00000     " /* zip*/
     || OM0KM001.OM0KMBZP <= "000000    " /* zip*/
     || OM0KM001.OM0KMBZP <= "0000000   " /* zip*/
     || OM0KM001.OM0KMBZP <= "00000000  " /* zip*/
     || OM0KM001.OM0KMBZP <= "000000000 " /* zip*/
     || OM0KM001.OM0KMBZP <= "0000000000") /* zip*/
      converseLib.validationFailed(063); /* bill to address is not valid*/
      OMAREC.OMAERR = "Y"; /* set error flag*/
      OM0KW01.OM0KWOBF = "Y"; /* set error flag*/
      set OM0KM001.OM0KMBZP cursor, modified, bold;
    end
  end


    /* CANA 08/07*/

      /* if Canada then zip is required*/

  if (OM0KM001.OM0KMBCN == "CANA"
   && OP1REC.XDZ-DATA-DIST-CD != "DS") /* CANA don't edit Canadian Intl*/
    /* orders*/
    if (OM0KM001.OM0KMBZP <= "          ") /* CANA*/
      converseLib.validationFailed(063); /* bill to address is not valid*/
      OMAREC.OMAERR = "Y"; /* set error flag*/
      OM0KW01.OM0KWOBF = "Y"; /* set error flag*/
      set OM0KM001.OM0KMBZP cursor, modified, bold;
    end
  end

    /* edit state code if usa*/

   /* F OM0KM001.OM0KMBCN EQ 'USA';*/
   /* IF OM0KM001.OM0KMBST IN XSTTBL.XSTCD/* valid code*/
     /* AND XSTTBL.XXXSTAT EQ 'A';   /* active status*/
     /* ; /* next sentence*/
   /* ELSE;*/
     /* MOVE 059 TO EZEMNO;          /* state code is not valid*/
     /* MOVE 'Y' TO OMAREC.OMAERR;   /* set error flag*/
     /* MOVE 'Y' TO OM0KW01.OM0KWOBF;/* set error flag*/
     /* SET OM0KM001.OM0KMBST CURSOR,MODIFIED,BRIGHT;*/
   /* END;*/
   /* ND;*/

    /* CANA 08/07*/

    /* Hardcoded Canadian provinces should be removed once country code is*/
    /* added to the state table. For now, only Canadian addresses are*/
    /* edited to make sure only a Canadian province has been entered. U.S.*/
   /* addresses are not edited to make sure only a U.S. state is entered*/
    /* - this would require hardcoding the U.S. states.*/

    /* edit state code if usa or canada*/

  if (OM0KM001.OM0KMBCN == "USA"
   || (OM0KM001.OM0KMBCN == "CANA"
   && OP1REC.XDZ-DATA-DIST-CD != "DS")) /* CANA don't edit Canadian Intl*/
    /* orders*/
    if (OM0KM001.OM0KMBST in XSTTBL.XSTCD /* valid code*/
     && XSTTBL.XXXSTAT == "A")            /* active status*/
      if (OM0KM001.OM0KMBCN == "CANA") /* CANA check canadian provinces*/
        if (OM0KM001.OM0KMBST == "SK"
         || OM0KM001.OM0KMBST == "PQ"
         || OM0KM001.OM0KMBST == "PE"
         || OM0KM001.OM0KMBST == "ON"
         || OM0KM001.OM0KMBST == "NT"
         || OM0KM001.OM0KMBST == "NS"
         || OM0KM001.OM0KMBST == "NF"
         || OM0KM001.OM0KMBST == "NB"
         || OM0KM001.OM0KMBST == "MB"
         || OM0KM001.OM0KMBST == "BC"
         || OM0KM001.OM0KMBST == "AB"
         || OM0KM001.OM0KMBST == "YT"
        ) /* next sentence*/
        else
          converseLib.validationFailed(902); /* prov code is not valid*/
          OMAREC.OMAERR = "Y"; /* set error flag*/
          OM0KW01.OM0KWOBF = "Y"; /* set error flag*/
          set OM0KM001.OM0KMBST cursor, modified, bold;
        end
      else
        /* next sentence*/
      end
    else
      if (OM0KM001.OM0KMBCN == "USA") /* CANA for usa address*/
        converseLib.validationFailed(059); /* state code is not valid*/
        OMAREC.OMAERR = "Y"; /* set error flag*/
        OM0KW01.OM0KWOBF = "Y"; /* set error flag*/
        set OM0KM001.OM0KMBST cursor, modified, bold;
      else
        converseLib.validationFailed(902); /* CANA prov code is not valid*/
        OMAREC.OMAERR = "Y"; /* set error flag*/
        OM0KW01.OM0KWOBF = "Y"; /* set error flag*/
        set OM0KM001.OM0KMBST cursor, modified, bold;
      end
    end
  end

      /* city is required*/

  if (OM0KM001.OM0KMBCT == " ")
    converseLib.validationFailed(063); /* bill to address is not valid*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    OM0KW01.OM0KWOBF = "Y"; /* set error flag*/
    set OM0KM001.OM0KMBCT cursor, modified, bold;
  end


      /* at lease one address line is required*/

  if (OM0KM001.OM0KMBA1 == " " /* null?*/
   && OM0KM001.OM0KMBA2 == " " /* null?*/
   && OM0KM001.OM0KMBA3 == " ") /* null?*/
    converseLib.validationFailed(063); /* bill to address is not valid*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    OM0KW01.OM0KWOBF = "Y"; /* set error flag*/
    set OM0KM001.OM0KMBA1 cursor, modified, bold;
    set OM0KM001.OM0KMBA2 modified, bold;
    set OM0KM001.OM0KMBA3 modified, bold;
  end


      /* name is required*/

  if (OM0KM001.OM0KMBNM == " ") /* null?*/
    converseLib.validationFailed(063); /* bill to address is not valid*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    OM0KW01.OM0KWOBF = "Y"; /* set error flag*/
    set OM0KM001.OM0KMBNM cursor, modified, bold;
  end


     /* get out if error*/

  if (OM0KW01.OM0KWOBF == "Y") /* if error, get out*/
    if (OM0KM001.OM0KMBCN == "USA") /* if usa, then*/
      OM0KM001.OM0KMBCN = " "; /* clear country code*/
      OM0KM001.OM0KMBCD = " "; /* clear country code desc*/
      return; /* get out*/
    else
      return; /* get out*/
    end
  end


    /* set flags and format addr record*/

  OP5REC.OP5GROUP = OM0KW01.OM0KWOBR; /* restore record*/
  OM0KW01.OP11TMBF = "Y"; /* one time bill*/
  OM0KW01.OP1BLAID = 0; /* no bill grp id*/
  OM0KM001.OP1BLAID = 0; /* no bill grp id*/
  OM0KM001.KUCBLAID = 0; /* no bill grp addr id*/
  OP5REC.OP5BILIN = "Y"; /* addr bill ind*/
  OP5REC.OP5SHPIN = "N"; /* addr ship ind*/
  OP5REC.KUCCOID = OP1REC.KUCCOID; /* company id*/
  OP5REC.KUMSTRID = OP1REC.KUMSTRID; /* store id*/
  OP5REC.XNXCD = OP1REC.XNXCD; /* department id*/
  OP5REC.XGPCD = OP1REC.XGPCD; /* gpc code*/
  OP5REC.OP5ALTNM = OM0KM001.OM0KMBNM; /* bill to name*/
  OP5REC.XXXADDR[1] = OM0KM001.OM0KMBA1; /* bill to addr 1*/
  OP5REC.XXXADDR[2] = OM0KM001.OM0KMBA2; /* bill to addr 2*/
  OP5REC.XXXADDR[3] = OM0KM001.OM0KMBA3; /* bill to addr 3*/
  OP5REC.XXXCITY = OM0KM001.OM0KMBCT; /* bill to city*/
  OP5REC.XSTCD = OM0KM001.OM0KMBST; /* bill to state*/
  OP5REC.XXXZIP = OM0KM001.OM0KMBZP; /* bill to zip*/
  OP5REC.XCTCD = OM0KM001.OM0KMBCN; /* bill to country*/
  OM0KW01.OM0KWOBR = OP5REC.OP5GROUP; /* save one time bill addr rec*/
  set OM0KM001.OM0KMBNM normal;
  set OM0KM001.OM0KMBA1 normal;
  set OM0KM001.OM0KMBA2 normal;
  set OM0KM001.OM0KMBA3 normal;
  set OM0KM001.OM0KMBCT normal;
  set OM0KM001.OM0KMBST normal;
  set OM0KM001.OM0KMBZP normal;
  set OM0KM001.OM0KMBCN normal;


      /* set action flag - ' ' - 'A'*/
                        /* 'A' - 'A'*/
                        /* 'C' - 'C'*/
                        /* 'D' - 'C'*/

  OM0KW01.OM0KWUBF = "Y"; /* update one time bill*/
  OM0KW01.OM0KWUOF = "Y"; /* update order header*/
  if (OM0KW01.OM0KW1BA == " " /* null*/
   || OM0KW01.OM0KW1BA == "A") /* add*/
    OM0KW01.OM0KW1BA = "A"; /* one time bill action (add)*/
  else
    OM0KW01.OM0KW1BA = "C"; /* one time bill action (chg)*/
  end


    /* clear country code in map if usa*/

  if (OM0KM001.OM0KMBCN == "USA")
    OM0KM001.OM0KMBCN = " "; /* clear country code*/
    OM0KM001.OM0KMBCD = " "; /* clear country code desc*/
  end

end // end OM0KS72

// edit ship to addr txt modified
Function OM0KS73()



      /* *********************************************************/
      /* * this statement group controls the field editing      **/
      /* * for the ship to address and id.                      **/
      /* *********************************************************/


  TA1REC.TA1LOCAT[2] = "OM0KS73 "; /* set statement group*/


      /* edit Order status in the Mirror Pick Pool*/

  OM0KW01.OM0KW-APPLY-CHG-FL = "N";

  if (OP1REC.XWHCD == "51") /* Memphis Apparel Whse*/

    if (OP1REC.XOSCD == "PA" || OP1REC.XOSCD == "AL")
      set WEP1301 empty;
      WEP1301.WEP1301-OPTION-CD = "ED";
      WEP1301.WEP1301-CALLING-PGM-ID = "OM0K";
      WEP1301.WEP1301-XWH-WHSE-CD = OP1REC.XWHCD;
      WEP1301.WEP1301-PK-ORD-STKTF-ID = OP1REC.OP1CUOID;
      WEP1301.WEP1301-PK-NIKE-ORD-ID = OP1REC.OP1NORID;
      WEP1301.WEP1301-XOS-ORD-STAT-CD = OP1REC.XOSCD;
      WEP1301.WEP1301-RETURN-CODE = 99;
      TA1REC.TA1TBLKE = WEP1301.WEP1301-PASS-INFO;

      OM0KS-CALL-EP1300();

      if (WEP1301.WEP1301-RETURN-CODE == 0) /* Status OK*/
        OM0KW01.OM0KW-APPLY-CHG-FL = "Y";
      else
        OM0KW01.OM0KW-APPLY-CHG-FL = "N";
        if (WEP1301.WEP1301-RETURN-CODE == 2
         || WEP1301.WEP1301-RETURN-CODE == 3
         || WEP1301.WEP1301-RETURN-CODE == 4)
          OMAREC.OMAERR = "Y";
          converseLib.validationFailed(968); /* DCMS status won't allow chng*/
          return;
        else
          if (WEP1301.WEP1301-RETURN-CODE >= 5)
            TA1REC.TA1DBASE = "DPICK";
            TA1REC.TA1TBLVU = "VMPOLH01";
            TA1REC.TA1LOCAT[3] = "OM0KS70";
            TA1REC.TA1LOCAT[2] = "EP1300";
            TA1REC.TA1LOCAT[1] = WEP1301.WEP1301-RETURN-CODE;
            XSOPS02();
          end
        end
      end
    end
  end

      /* check if ship addr id and ship addr text modified*/

  if (OM0KM001.OP1SHAID is modified
   && OM0KM001.OP1SHAID > 0)
    OM0KS74(); /* edit for addr text modified*/
    if (OMAREC.OMAERR == "Y")
      return;
    else
      OM0KS76(); /* edit ship to addr id change*/
    end
  else
    OM0KS75(); /* process addr text change*/
  end



   /* *************************************************************/
end // end OM0KS73

// edit ship to addr overrid
Function OM0KS74()



      /* *********************************************************/
      /* * this statement group edits for the condition of      **/
      /* * the ship to addr id modified and addr text modified  **/
      /* *********************************************************/



      /* check if addr id and ep0k returned new addr*/

  if (OM0KW01.OM0KW-EP0K-ADDR-FL == "Y")
    OMAREC.OMAERR = "Y"; /* set error flag*/
    converseLib.validationFailed(054); /* cannot enter addr id and new addr ...*/
    return;
  end


      /* check if addr id and addr text modified*/

  if (OM0KM001.OM0KMSNM is modified)
    if (OM0KM001.OM0KMSNM > " ")
      OMAREC.OMAERR = "Y"; /* set error flag*/
      converseLib.validationFailed(054);
                                   /* cannot enter addr id and new addr ...*/
      return;
    else
      set OM0KM001.OM0KMSNM normal;
    end
  end

  if (OM0KM001.OM0KMSA1 is modified)
    if (OM0KM001.OM0KMSA1 > " ")
      OMAREC.OMAERR = "Y"; /* set error flag*/
      converseLib.validationFailed(054);
                                   /* cannot enter addr id and new addr ...*/
      return;
    else
      set OM0KM001.OM0KMSA1 normal;
    end
  end

  if (OM0KM001.OM0KMSA2 is modified)
    if (OM0KM001.OM0KMSA2 > " ")
      OMAREC.OMAERR = "Y"; /* set error flag*/
      converseLib.validationFailed(054);
                                   /* cannot enter addr id and new addr ...*/
      return;
    else
      set OM0KM001.OM0KMSA2 normal;
    end
  end

  if (OM0KM001.OM0KMSA3 is modified)
    if (OM0KM001.OM0KMSA3 > " ")
      OMAREC.OMAERR = "Y"; /* set error flag*/
      converseLib.validationFailed(054);
                                   /* cannot enter addr id and new addr ...*/
      return;
    else
      set OM0KM001.OM0KMSA3 normal;
    end
  end

  if (OM0KM001.OM0KMSCT is modified)
    if (OM0KM001.OM0KMSCT > " ")
      OMAREC.OMAERR = "Y"; /* set error flag*/
      converseLib.validationFailed(054);
                                   /* cannot enter addr id and new addr ...*/
    else
      set OM0KM001.OM0KMSCT normal;
    end
    return;
  end

  if (OM0KM001.OM0KMSST is modified)
    if (OM0KM001.OM0KMSST > " ")
      OMAREC.OMAERR = "Y"; /* set error flag*/
      converseLib.validationFailed(054);
                                   /* cannot enter addr id and new addr ...*/
      return;
    else
      set OM0KM001.OM0KMSST normal;
    end
  end

  if (OM0KM001.OM0KMSZP is modified)
    if (OM0KM001.OM0KMSZP > " ")
      OMAREC.OMAERR = "Y"; /* set error flag*/
      converseLib.validationFailed(054);
                                   /* cannot enter addr id and new addr ...*/
      return;
    else
      set OM0KM001.OM0KMSZP normal;
    end
  end

  if (OM0KM001.OM0KMSCN is modified)
    if (OM0KM001.OM0KMSCN > " ")
      OMAREC.OMAERR = "Y"; /* set error flag*/
      converseLib.validationFailed(054);
                                   /* cannot enter addr id and new addr ...*/
      return;
    else
      set OM0KM001.OM0KMSCN normal;
    end
  end



   /* *************************************************************/
end // end OM0KS74

// edit/save ship to name/addr
Function OM0KS75()


      /* *********************************************************/
      /* * this statement group edits the ship to name/addr.    **/
      /* *********************************************************/


      /* validate required entries*/


   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* There are 3 type of changes are made in the following codes.*/
   /* 1. The  code is commented out to avoid defaulting 'USA'*/
   /* as a country code when ship to country code is spaces*/

   /* 2. To enable to display country code*/

   /* 3. New statement group is introduced to check non complaint product*/
   /* for all ship to country code equal to  Spai/CNRY*/
   /* 4. The error flag OM0KW01.OM0KWOSF  set to 'Y' for invalid country*/
   /* code*/
   /*  */
   /* GSUNDA       03/17/00      Spain Trademark project     Start ***/

   /* set country default if null*/

   /* IF OM0KM001.OM0KMSCN EQ ' ';     /* null?*/
   /* MOVE 'USA' TO OM0KM001.OM0KMSCN;*/
   /* END;*/

   /* edit country code*/

  if (OM0KM001.OM0KMSCN in XCTTBL.XCTCD /* valid code*/
   && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active status*/

    /* IF OM0KM001.OM0KMSCN NE 'USA';*/
    /* MOVE XCTTBL.XCTDESC(EZETST) TO OM0KM001.OM0KMSCD*/
    /* ELSE;*/
    /* MOVE ' ' TO OM0KM001.OM0KMSCD;*/
    /* END;*/

    OM0KM001.OM0KMSCD = XCTTBL.XCTDESC[sysVar.arrayIndex];
                          /* country code desc*/
    OP10REC.XCT-CTRY-CD = OM0KM001.OM0KMSCN; /* move country code*/
    OM0KW01.OM0KW-FROM-SGRP = "75"; /* move statement grp id*/
    OM0KS-SPAIN-CHECK(); /* call spain check statement grp*/

  else
    converseLib.validationFailed(060); /* country code is not valid*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    /* GSUNDA       03/17/00      Spain Trademark project     Start ***/

    OM0KW01.OM0KWOSF = "Y"; /* set error flag*/

    /* GSUNDA       03/17/00      Spain Trademark project     End   ***/

    OM0KM001.OM0KMSCD = " "; /* country code desc*/
    set OM0KM001.OM0KMSCN cursor, modified, bold;
    return;
  end

   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* The following codes are commented out for spain project.*/
   /* The validation of zip will be taken care in next steps.*/
    /* GSUNDA       03/17/00      Spain Trademark project     Start ***/

    /* if usa, then zip is required*/

   /* IF OM0KM001.OM0KMSCN EQ 'USA';   /* usa?*/
    /* IF OM0KM001.OM0KMSZP LE '00000     '/* zip*/
      /* OR OM0KM001.OM0KMSZP LE '000000    '/* zip*/
      /* OR OM0KM001.OM0KMSZP LE '0000000   '/* zip*/
      /* OR OM0KM001.OM0KMSZP LE '00000000  '/* zip*/
      /* OR OM0KM001.OM0KMSZP LE '000000000 '/* zip*/
      /* OR OM0KM001.OM0KMSZP LE '0000000000';/* zip*/
      /* MOVE 064 TO EZEMNO;          /* ship to address is not valid*/
      /* MOVE 'Y' TO OMAREC.OMAERR;   /* set error flag*/
      /* MOVE 'Y' TO OM0KW01.OM0KWOSF;/* set error flag*/
      /* SET OM0KM001.OM0KMSZP CURSOR,MODIFIED,BRIGHT;*/
    /* END;*/
   /* END;*/
    /* GSUNDA       03/17/00      Spain Trademark project     End   ***/

   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* The following code is introduced to validate Ship to Address*/
   /* Zip code for USA.  The Zip should be a numeric and 5 digit code*/
   /* for USA Shipment.  Spaces in the Zip should not be allowed.*/
   /* GSUNDA       03/17/00      Spain Trademark project     Start ***/

  if (OM0KM001.OM0KMSCN == "USA") /* Shipping within USA*/
    if (OM0KM001.OM0KMSZP == "           ") /* Spaces check*/
      converseLib.validationFailed(1004); /* ship to address is not valid*/
      OMAREC.OMAERR = "Y"; /* set error flag*/
      OM0KW01.OM0KWOSF = "Y"; /* set error flag*/
      set OM0KM001.OM0KMSZP cursor, modified, bold;
      return;
    else
      OM0KW-US-ZIP5 = OM0KM001.OM0KMSZP; /* To array*/
      sysVar.arrayIndex = 5; /* Initialize*/
      while (sysVar.arrayIndex > 0)
        if (OM0KW-US-ZIP[sysVar.arrayIndex] is numeric) /* has to be numeric*/
            /* Continue*/
        else
          converseLib.validationFailed(1004); /* Invalid zip code*/
          OMAREC.OMAERR = "Y"; /* set error flag*/
          OM0KW01.OM0KWOSF = "Y"; /* set error flag*/
          set OM0KM001.OM0KMSZP cursor, modified, bold;
          return;
        end
        sysVar.arrayIndex = sysVar.arrayIndex - 1;
      end
    end
  end

   /* GSUNDA       03/17/00      Spain Trademark project     End   ***/


    /* CANA 08/07*/

      /* if Canada then zip is required*/

   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* 1. The following code avoids editing canada international orders.*/
   /* it is commented out for spain project*/
   /* 2. More meaningful message is inserted when zip code is spaces.*/

  if (OM0KM001.OM0KMSCN == "CANA")

    /* GSUNDA       03/17/00      Spain Trademark project     Start ***/
    /* AND OP1REC.XDZ-DATA-DIST-CD NE 'DS';   CANA don't edit Canadian In*/
    /* GSUNDA       03/17/00      Spain Trademark project     End   ***/

    /* orders*/
    if (OM0KM001.OM0KMSZP <= "          ") /* CANA*/
      /* GSUNDA       03/17/00      Spain Trademark project     Start ***/
      /* MOVE 064  TO EZEMNO;            ship to address is not valid*/
      converseLib.validationFailed(1004); /* Invalid zip code*/
      /* GSUNDA       03/17/00      Spain Trademark project     End   ***/
      OMAREC.OMAERR = "Y"; /* set error flag*/
      OM0KW01.OM0KWOSF = "Y"; /* set error flag*/
      set OM0KM001.OM0KMSZP cursor, modified, bold;
      return;
    end
  end


    /* edit state code for usa*/

   /* IF OM0KM001.OM0KMSCN EQ 'USA';   /* usa?*/
    /* IF OM0KM001.OM0KMSST IN XSTTBL.XSTCD/* valid code*/
      /* AND XSTTBL.XXXSTAT EQ 'A';   /* active status*/
      /* ; /* next sentence*/
    /* ELSE;*/
      /* MOVE 059 TO EZEMNO;          /* state code is not valid*/
      /* MOVE 'Y' TO OMAREC.OMAERR;   /* set error flag*/
      /* MOVE 'Y' TO OM0KW01.OM0KWOSF;/* set error flag*/
      /* SET OM0KM001.OM0KMSST CURSOR,MODIFIED,BRIGHT;*/
    /* END;*/
   /* END;*/


    /* CANA 08/07*/

    /* Hardcoded Canadian provinces should be removed once country code is*/
    /* added to the state table. For now, only Canadian addresses are*/
    /* edited to make sure only a Canadian province has been entered. U.S.*/
   /* addresses are not edited to make sure only a U.S. state is entered*/
    /* - this would require hardcoding the U.S. states.*/


   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* 1. The following code avoids validating canada international orders.*/
   /* it is commented out for spain project*/
   /* edit state code if usa or canada*/

   /* GSUNDA       03/17/00      Spain Trademark project     Start ***/
  if (OM0KM001.OM0KMSCN == "USA"
   || OM0KM001.OM0KMSCN == "CANA")

    /* OR (OM0KM001.OM0KMSCN EQ 'CANA'*/
    /* AND OP1REC.XDZ-DATA-DIST-CD NE 'DS';/* CANA don't edit Cana Intl*/

    /* GSUNDA       03/17/00      Spain Trademark project     End   ***/
    /* orders*/
    if (OM0KM001.OM0KMSST in XSTTBL.XSTCD /* valid code*/
     && XSTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active status*/
      if (OM0KM001.OM0KMSCN == "CANA") /* CANA check canadian provinces*/
        if (OM0KM001.OM0KMSST == "SK"
         || OM0KM001.OM0KMSST == "PQ"
         || OM0KM001.OM0KMSST == "PE"
         || OM0KM001.OM0KMSST == "ON"
         || OM0KM001.OM0KMSST == "NT"
         || OM0KM001.OM0KMSST == "NS"
         || OM0KM001.OM0KMSST == "NF"
         || OM0KM001.OM0KMSST == "NB"
         || OM0KM001.OM0KMSST == "MB"
         || OM0KM001.OM0KMSST == "BC"
         || OM0KM001.OM0KMSST == "AB"
         || OM0KM001.OM0KMSST == "YT"
        ) /* next sentence*/
        else
          converseLib.validationFailed(902); /* prov code is not valid*/
          OMAREC.OMAERR = "Y"; /* set error flag*/
          OM0KW01.OM0KWOSF = "Y"; /* set error flag*/
          set OM0KM001.OM0KMSST cursor, modified, bold;
          return;
        end
      else
        /* next sentence*/
      end
    else
      if (OM0KM001.OM0KMSCN == "USA") /* CANA for usa address*/
        converseLib.validationFailed(059); /* state code is not valid*/
        OMAREC.OMAERR = "Y"; /* set error flag*/
        OM0KW01.OM0KWOSF = "Y"; /* set error flag*/
        set OM0KM001.OM0KMSST cursor, modified, bold;
        return;
      else
        converseLib.validationFailed(902); /* CANA prov code is not valid*/
        OMAREC.OMAERR = "Y"; /* set error flag*/
        OM0KW01.OM0KWOSF = "Y"; /* set error flag*/
        set OM0KM001.OM0KMSST cursor, modified, bold;
        return;
      end
    end
  end


      /* city is required*/

  if (OM0KM001.OM0KMSCT == " ")
    converseLib.validationFailed(064); /* ship to address is not valid*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    OM0KW01.OM0KWOSF = "Y"; /* set error flag*/
    set OM0KM001.OM0KMSCT cursor, modified, bold;
    return;
  end


      /* at lease one address line is required*/

  if (OM0KM001.OM0KMSA1 == " " /* null?*/
   && OM0KM001.OM0KMSA2 == " " /* null?*/
   && OM0KM001.OM0KMSA3 == " ") /* null?*/
    converseLib.validationFailed(064); /* ship to address is not valid*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    OM0KW01.OM0KWOSF = "Y"; /* set error flag*/
    if (OP1REC.XWHCD == "51")
      set OM0KM001.OM0KMSA1 modified, bold, skip;
      set OM0KM001.OM0KMSA2 modified, bold, skip;
      set OM0KM001.OM0KMSA3 modified, bold, skip;
    else
      set OM0KM001.OM0KMSA1 cursor, modified, bold;
      set OM0KM001.OM0KMSA2 modified, bold;
      set OM0KM001.OM0KMSA3 modified, bold;
    end
  end


      /* name is required*/

  if (OM0KM001.OM0KMSNM == " ") /* null?*/
    converseLib.validationFailed(064); /* ship to address is not valid*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    OM0KW01.OM0KWOSF = "Y"; /* set error flag*/
    set OM0KM001.OM0KMSNM cursor, modified, bold;
    return;
  end


   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* The following code  avoids displaying country code when it is*/
   /* 'USA'.  It is commented out for spain project*/

      /* get out if error*/

   /* GSUNDA       03/17/00      Spain Trademark project     Start ***/

   /* IF OM0KW01.OM0KWOSF EQ 'Y';      /* set error flag*/
   /*  */
   /* IF OM0KM001.OM0KMSCN EQ 'USA'; /* if usa, then*/
   /* MOVE ' ' TO OM0KM001.OM0KMSCN;/* clear country code*/
   /* MOVE ' ' TO OM0KM001.OM0KMSCD;/* clear country code desc*/
   /* EZERTN;*/
   /* ELSE;*/
   /* EZERTN;*/
   /* END;*/

  if (OM0KW01.OM0KWOSF == "Y") /* set error flag*/
    return; /* go out*/
  end
   /* GSUNDA       03/17/00      Spain Trademark project     End   ***/


    /* set flags and format addr record*/

  OP5REC.OP5GROUP = OM0KW01.OM0KWOSR; /* restore record*/
  OM0KW01.OP11TMSF = "Y"; /* one time ship to*/
  OM0KW01.OP1SGPAO = "N"; /* no addr id ovrd*/
  OM0KM001.OM0KMSAO = " "; /* no addr id ovrd*/
  OM0KW01.OP1SHAID = 0; /* no ship group id*/
  OM0KM001.OP1SHAID = 0; /* no ship group id*/
  OP5REC.OP5BILIN = "N"; /* addr bill ind*/
  OP5REC.OP5SHPIN = "Y"; /* addr ship ind*/
  OP5REC.KUCCOID = OP1REC.KUCCOID; /* company id*/
  OP5REC.KUMSTRID = OP1REC.KUMSTRID; /* store id*/
  OP5REC.XNXCD = OP1REC.XNXCD; /* department id*/
  OP5REC.XGPCD = OP1REC.XGPCD; /* gpc code*/
  OP5REC.OP5ALTNM = OM0KM001.OM0KMSNM; /* bill to name*/
  OP5REC.XXXADDR[1] = OM0KM001.OM0KMSA1; /* bill to addr 1*/
  OP5REC.XXXADDR[2] = OM0KM001.OM0KMSA2; /* bill to addr 2*/
  OP5REC.XXXADDR[3] = OM0KM001.OM0KMSA3; /* bill to addr 3*/
  OP5REC.XXXCITY = OM0KM001.OM0KMSCT; /* bill to city*/
  OP5REC.XSTCD = OM0KM001.OM0KMSST; /* bill to state*/
  OP5REC.XXXZIP = OM0KM001.OM0KMSZP; /* bill to zip*/
  OP5REC.XCTCD = OM0KM001.OM0KMSCN; /* bill to country*/
  OM0KW01.OM0KWOSR = OP5REC.OP5GROUP; /* save 1 time ship to addr rec*/
  set OM0KM001.OP1SHAID normal;
  if (OP1REC.XWHCD == "51")
    set OM0KM001.OM0KMSNM skip;
    set OM0KM001.OM0KMSA1 skip;
    set OM0KM001.OM0KMSA2 skip;
    set OM0KM001.OM0KMSA3 skip;
    set OM0KM001.OM0KMSCT skip;
    set OM0KM001.OM0KMSST skip;
    set OM0KM001.OM0KMSZP skip;
    set OM0KM001.OM0KMSCN skip;
  else
    set OM0KM001.OM0KMSNM normal;
    set OM0KM001.OM0KMSA1 normal;
    set OM0KM001.OM0KMSA2 normal;
    set OM0KM001.OM0KMSA3 normal;
    set OM0KM001.OM0KMSCT normal;
    set OM0KM001.OM0KMSST normal;
    set OM0KM001.OM0KMSZP normal;
    set OM0KM001.OM0KMSCN normal;
  end


      /* set action flag - ' ' - 'A'*/
                        /* 'A' - 'A'*/
                        /* 'C' - 'C'*/
                        /* 'D' - 'C'*/

  OM0KW01.OM0KWUSF = "Y"; /* update one time ship to*/
  OM0KW01.OM0KWUOF = "Y"; /* update order header*/
  if (OM0KW01.OM0KW1SA == " " /* null*/
   || OM0KW01.OM0KW1SA == "A") /* add*/
    OM0KW01.OM0KW1SA = "A"; /* one time ship action (add)*/
  else
    OM0KW01.OM0KW1SA = "C"; /* one time ship action (chg)*/
  end


   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* The following code is commented out to display all country codes*/
   /* including 'USA'.*/
    /* clear country code if usa*/

   /* GSUNDA       03/17/00      Spain Trademark project     Start ***/
   /* IF OM0KM001.OM0KMSCN EQ 'USA';*/
   /* MOVE ' ' TO OM0KM001.OM0KMSCN; /* country code*/
   /* MOVE ' ' TO OM0KM001.OM0KMSCD; /* country code desc*/
   /* END;*/
   /* GSUNDA       03/17/00      Spain Trademark project     End ***/


end // end OM0KS75

// edit ship to addr id
Function OM0KS76()


      /* *********************************************************/
      /* * this statement group edits the ship to addr id       **/
      /* *********************************************************/


      /* access customer address table for ship to name/addr*/

  KULREC.KUCCOID = OP1REC.KUCCOID; /* load key - cust co*/
  KULREC.KULAAID = OM0KM001.OP1SHAID; /* load key - ship to addr id*/
  call "IO0170" ("S ", SQLCA, KULREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == 100) /* check for notfnd rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VOADDR01"; /* table view*/
    TA1REC.TA1TBLKE = KULREC.KULGRP; /* key value*/
    TA1REC.TA1LOCAT[3] = "OM0KS76 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0170  "; /* i/o mod name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* invoke syncpoint rollback*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* invoke master menu*/
    exit program;
  end


      /* if not found, then tell user*/

  if (SQLCA.VAGen_SQLCODE == 100) /* check for notfnd rc*/
    converseLib.validationFailed(057); /* ship to addr record is missing*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    set OM0KM001.OP1SHAID cursor, modified, bold;
    return;
  end

   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* New statement group is introduced to check non complaint product*/
   /* for all ship to country code equal to 'Spain'/CNRY*/

   /* GSUNDA       03/17/00      Spain Trademark project     Start ***/
  OP10REC.XCT-CTRY-CD = KULREC.XCTCD; /* country code*/
  OM0KW01.OM0KW-FROM-SGRP = "76"; /* called from om0ks76*/

  OM0KS-SPAIN-CHECK();

  if (OMAREC.OMAERR == "Y") /* if error flag set to 'y'*/
    return;
  end
   /* GSUNDA       03/17/00      Spain Trademark project     End   ***/

      /* save ship to addr id and set flags*/

  set OM0KM001.OP1SHAID normal;
  OM0KW01.OP1SHAID = OM0KM001.OP1SHAID; /* save addr id*/
  OM0KW01.OP11TMSF = "N";
  OM0KW01.OP1SGPAO = "Y";
  if (OM0KW01.OM0KW1SA == "A") /* reset action flags*/
    OM0KW01.OM0KWUSF = " "; /* clear update flag*/
    OM0KW01.OM0KW1SA = " "; /* clear action flag*/
    OM0KW01.OM0KWOSR = " "; /* clear record hold*/
  else
    if (OM0KW01.OM0KW1SA == "C"
     || OM0KW01.OM0KW1SA == "D")
      OM0KW01.OM0KWUSF = "Y"; /* set update flag*/
      OM0KW01.OM0KWUOF = "Y"; /* set update order header*/
      OM0KW01.OM0KW1SA = "D"; /* set action flag*/
    else
      if (OM0KW01.OM0KW1SA == " ")
        OM0KW01.OM0KWUOF = "Y"; /* set update order header*/
      end
    end
  end


      /* format name on screen*/

  OM0KM001.OM0KMSAO = "*"; /* addr id ovrd*/
  OM0KM001.OM0KMSNM = OMWREC.KUMSTRNM; /* store name*/

      /* format address on screen*/

  if (OP1REC.XNXCD == 0)
    OM0KM001.OM0KMSA1 = KULREC.XXX-ADDR1; /* addr line 1*/
  else
    KUJREC.KUCCOID = OP1REC.KUCCOID; /* load key - cust co*/
    KUJREC.XNXCD = OP1REC.XNXCD; /* load key - dept code*/
    call "IO0290" ("S ", SQLCA, KUJREC) {isNoRefresh = yes, isExternal = yes}; /* get dept self id*/

    if (SQLCA.VAGen_SQLCODE == 0)
      OM0KW01.OM0KWLIT = "DEPT "; /* move lit to hold area*/
      OM0KW01.KUJSLFID = KUJREC.KUJSLFID; /* dept self id to hold*/
      OM0KM001.OM0KMSA1 = OM0KW01.OM0KWHD1; /* formatted dept to addr 1*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* dept self id not found*/
        OM0KM001.OM0KMSA1 = KULREC.XXX-ADDR1; /* addr line 1*/
      else
        TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
        TA1REC.TA1TBLVU = "VCUST001"; /* table view*/
            /* format the company id and dept code to make readable*/
        OM0KW01.OM0KWFD1 = KUJREC.KUCCOID; /* format cmpny id*/
        OM0KW01.OM0KWFD2 = " "; /* filler*/
        OM0KW01.OM0KWFD3 = KUJREC.XNXCD; /* format dept code*/
        TA1REC.TA1TBLKE = OM0KW01.OM0KWFLD; /* formatted key value*/

        TA1REC.TA1LOCAT[3] = "OM0KS76 "; /* statement group*/
        TA1REC.TA1LOCAT[4] = "IO0290  "; /* i/o mod name*/
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
         /* invoke syncpoint rollback*/
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
        COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
        XSPF4(); /* invoke master menu*/
        exit program;
      end
    end
  end


  OM0KM001.OM0KMSA2 = KULREC.XXX-ADDR2; /* addr line 2*/
  OM0KM001.OM0KMSA3 = KULREC.XXX-ADDR3; /* addr line 3*/
  OM0KM001.OM0KMSCT = KULREC.XXXCITY; /* city*/
  OM0KM001.OM0KMSST = KULREC.XSTCD; /* state*/
  OM0KM001.OM0KMSZP = KULREC.XXXZIP; /* zip*/
  OM0KM001.OM0KMSCN = " "; /* country code*/
  OM0KM001.OM0KMSCD = " "; /* country code desc*/

   /* SPAIN TRADEMARK CHANGES   03/17/2000*/
   /* The following code is commented out to display all the ship to*/
   /* country code including USA*/

  if (KULREC.XCTCD > " ") /* country code present?*/

    /* GSUNDA       03/17/00      Spain Trademark project     Start ***/
    /* AND KULREC.XCTCD NE 'USA';        and not equal u.s.a.*/
    /* GSUNDA       03/17/00      Spain Trademark project     end   ***/

    OM0KM001.OM0KMSCN = KULREC.XCTCD; /* country code*/
    if (KULREC.XCTCD in XCTTBL.XCTCD /* country check*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active status*/
      OM0KM001.OM0KMSCD = XCTTBL.XCTDESC[sysVar.arrayIndex];
                                   /* country code desc*/
    end
  end


   /* *************************************************************/
end // end OM0KS76

// display message for psst cust
Function OM0KS77()
   /* TCS INCLUDE  BEGIN  11/25/97*/

   /* display message on the screen for a psst customer*/


  set SQLCA empty;
  set KUVREC empty;
  KUVREC.KUCCOID = OP1REC.KUCCOID; /* passing value of cu-co-id*/
  KUVREC.KUMSTRID = OP1REC.KUMSTRID; /* passing value of store-id*/
  KUVREC.XWHCD = OP1REC.XWHCD; /* passing value of warehouse-id*/


  call "IO1700" ("S ", SQLCA, KUVREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
    converseLib.validationFailed(953);
  end

   /* TCS INCLUDE   END  11/25/97*/
end // end OM0KS77

// display message for psst cust
Function OM0KS78()
   /* TCS INCLUDE  BEGIN 11/25/97*/

   /* display message when one time ship to address is typedon screen*/
   /* the customer being a psst customer*/

  set SQLCA empty;
  set KUVREC empty;
  KUVREC.KUCCOID = OP1REC.KUCCOID; /* passing value of cu-co-id*/
  KUVREC.KUMSTRID = OP1REC.KUMSTRID; /* passing value of store-id*/
  KUVREC.XWHCD = OP1REC.XWHCD; /* passing value of warehouse-id*/


  call "IO1700" ("S ", SQLCA, KUVREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
    converseLib.validationFailed(954);
  end

   /* TCS INCLUDE  END  11/25/97.*/
end // end OM0KS78

// update order hdr
Function OM0KS80()



      /* *********************************************************/
      /* * this statement updates the order header row.         **/
      /* *********************************************************/


      /* set up zzz date fields*/

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GETDATE ";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};


      /* get most current copy of order header row*/

  OM0KS10(); /* get order header row*/



    /* 6/27/89 - added call to credit (cc1070) for credit*/
              /* checking orders with a one-time ship-to*/
              /* address. stc.*/

  if (OM0KW01.OP11TMSF == "Y" /* one time ship exists now*/
   && OP1REC.OP11TMSF == "N") /* and did not exist before on header*/
    OP1REC.OP11TMSF = OM0KW01.OP11TMSF; /* update one time ship flag*/
    CC1REC.CC1CLRSN = 6; /* frmt one time ship-to credit reason cde*/
    CC1REC.CC1PVALU = 0; /* zero out passed value*/
    CC1REC.CC1PUNTS = 0; /* zero out passed units*/
    CC1REC.CC1AVALU = 0; /* zero out allocated value*/
    CC1REC.CC1AUNTS = 0; /* zero out allocated units*/
    CC1REC.CC1RTNCD = 0; /* zero out credit return code*/
    CC1REC.CC1RTNMS = " "; /* clear credit return message*/
    CC1REC.CC1PGMNM = "OM0K"; /* frmt program name*/

    call "CC1070" (SQLCA, OP1REC, CC1REC) {isNoRefresh = yes, isExternal = yes}; /* call credit*/

  end

      /* save updated order header fields*/

  OP1REC.OP11TMBF = OM0KW01.OP11TMBF; /* update one time bill flag*/
  OP1REC.OP1BLAID = OM0KW01.OP1BLAID; /* update bill group id*/
  OP1REC.OP11TMSF = OM0KW01.OP11TMSF; /* update one time ship flag*/
  OP1REC.OP1SGPAO = OM0KW01.OP1SGPAO; /* update ship group override*/
  OP1REC.OP1SHAID = OM0KW01.OP1SHAID; /* update ship group addr id*/
  OP1REC.OP1COGID = OM0KW01.OP1COGID; /* update cogs code*/
  OP1REC.ZZZCHGTM = TA2REC.TA2TIMHM;
  OP1REC.ZZZCHGDT = TA2REC.TA2GRGGN;

  if (OP1REC.OP1SGPAO == "Y"
   || OP1REC.OP11TMSF == "Y")
    OM0KSAU();
  end



      /* update order header to data base*/

  call "IO0430" ("U ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for update*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VORHDR01"; /* table view*/
    TA1REC.TA1TBLKE = OP1REC.OP1KEY; /* key value*/
    TA1REC.TA1LOCAT[3] = "OM0KS80 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0430  "; /* i/o mod name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* invoke syncpoint rollback*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* invoke master menu*/
    exit program;
  end



   /* *************************************************************/
end // end OM0KS80

// update order addresses
Function OM0KS85()



      /* *********************************************************/
      /* * this statement group controls the updating of the    **/
      /* * order addr records.                                  **/
      /* *********************************************************/



  TA1REC.TA1LOCAT[2] = "OM0KS85 "; /* statement group*/


      /* set up zzz date fields*/

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GETDATE ";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};


      /* if one time ship to, then process address*/

  if (OM0KW01.OM0KWUSF == "Y" /* update one time ship to?*/
   && OM0KW01.OM0KW1SA > " ") /* one time ship to?*/
    OM0KW01.OM0KWAAF = OM0KW01.OM0KW1SA; /* set action code*/
    OP5REC.OP5GROUP = OM0KW01.OM0KWOSR; /* move record*/
    OP5REC.OP1PARTN = OP1REC.OP1PARTN; /* partition number*/
    OP5REC.OP1CUOID = OP1REC.OP1CUOID; /* cust ord id*/
    OP5REC.OP1NORID = OP1REC.OP1NORID; /* nike ord id*/
    OP5REC.OP5SHPIN = "Y";
    OP5REC.OP5BILIN = "N";
    OP5REC.ZZZCHGTM = TA2REC.TA2TIMHM;
    OP5REC.ZZZCHGDT = TA2REC.TA2GRGGN;
    OM0KS86(); /* perform addr update*/
  end


      /* if one time bill to, then process address*/

  if (OM0KW01.OM0KWUBF == "Y" /* update one time bill to?*/
   && OM0KW01.OM0KW1BA > " ") /* one time bill to?*/
    OM0KW01.OM0KWAAF = OM0KW01.OM0KW1BA; /* set action code*/
    OP5REC.OP5GROUP = OM0KW01.OM0KWOBR; /* move record*/
    OP5REC.OP1PARTN = OP1REC.OP1PARTN; /* partition number*/
    OP5REC.OP1CUOID = OP1REC.OP1CUOID; /* cust ord id*/
    OP5REC.OP1NORID = OP1REC.OP1NORID; /* nike ord id*/
    OP5REC.OP5SHPIN = "N";
    OP5REC.OP5BILIN = "Y";
    OP5REC.ZZZCHGTM = TA2REC.TA2TIMHM;
    OP5REC.ZZZCHGDT = TA2REC.TA2GRGGN;
    OM0KS86(); /* perform addr update*/
  end



   /* *************************************************************/
end // end OM0KS85

// update addr records
Function OM0KS86()

      /* *********************************************************/
      /* * perform update function on order addr records        **/
      /* *********************************************************/

      /* update order address records*/

  if (OM0KW01.OM0KWAAF == "A") /* add?*/
    /*  */
    /* Befor inserting the row it is being checked whether any row*/
    /* exists with the same key values in dorder.voaddr01.*/
    /*  */
    call "IO0460" ("SA", SQLCA, OP5REC) {isNoRefresh = yes, isExternal = yes}; /* call iomod sel-alt*/
    /*  */
    /*  */
    /* If no row exists then only the row is added to the dorder.voaddr01*/
    /* table, else it updates the row instead of inserting.*/
    /*  */
    if (SQLCA.VAGen_SQLCODE == 100)
      OP5REC.ZZZCHGCT = 0; /* clear change count on add*/
      call "IO0460" ("A ", SQLCA, OP5REC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for add*/
    else
      if (SQLCA.VAGen_SQLCODE == 0)
        call "IO0460" ("U ", SQLCA, OP5REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod for chg*/
      end
    end
  else
    if (OM0KW01.OM0KWAAF == "C") /* chg?*/
      call "IO0460" ("U ", SQLCA, OP5REC) {isNoRefresh = yes, isExternal = yes}; /* call iomod for chg*/
    else
      if (OM0KW01.OM0KWAAF == "D") /* del?*/
        call "IO0460" ("D ", SQLCA, OP5REC) {isNoRefresh = yes, isExternal = yes}; /* call iomod for del*/
      end
    end
  end


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VOADDR01"; /* table view*/
    TA1REC.TA1TBLKE = OP5REC.OP5KEY; /* key value*/
    TA1REC.TA1LOCAT[3] = "OP0KS86 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0460  "; /* i/o mod name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* invoke syncpoint rollback*/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* call abend formatter*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    XSPF4(); /* invoke master menu*/
    exit program;
  end



   /* *************************************************************/
end // end OM0KS86

// audit record for shp addr chg
Function OM0KSAU()


      /* **************************************/
      /* * write audit record for rep/agency*/
      /* * override.             opurec*/
      /* **************************************/


  set OPUREC empty;
  OPUREC.XXXPGMNB = "OP1261";
  OPUREC.OPUAUDTP = "RX";
  OPUREC.OP1PARTN = OP1REC.OP1PARTN;
  OPUREC.OP1CUOID = OP1REC.OP1CUOID;
  OPUREC.OP1NORID = OP1REC.OP1NORID;
  OPUREC.XDVCD = OP1REC.XSOCD; /* sales office hiding in div*/
  OPUREC.OP1CUNDT = OP1REC.OP1ORCDT;
                                   /* ord rcv ddt hiding in need dt*/
  OPUREC.OPUCRNTR = "Y"; /* ship addr change flag*/
  OM0KW02.OM0KWCSN = OP1REC.KUCCOID; /* reformat company number*/
  if (OM0KW02.OM0KWCSB > 0)
    OPUREC.OPUAUDQT[1] = OM0KW03.OM0KWCSE;
  else
    OPUREC.OPUAUDQT[1] = OM0KW02.OM0KWCSC;
  end
  OPUREC.OPUAUDQT[3] = OP1REC.KUMSTRID; /* store*/
  OPUREC.OPUAUDQT[4] = OP1REC.XNXCD; /* dept*/
  OPUREC.ZZZSDT = TA2REC.TA2GRGGN;
  OPUREC.ZZZSTM = TA2REC.TA2TIMHM;

  call "IO3210" ("A ", SQLCA, OPUREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    set TA1REC empty;
    TA1REC.TA1DBASE = "DORDER";
    TA1REC.TA1TBLVU = "VORAUD01";
    TA1REC.TA1LOCAT[1] = "OM0KSAU";
    TA1REC.TA1LOCAT[2] = "U";
    TA1REC.TA1LOCAT[3] = "IO3210";
    OM0KW01.OM0KWTK2 = OPUREC.OP1CUOID;
    OM0KW01.OM0KWTK3 = OPUREC.OP1NORID;
    OM0KW01.OM0KWTK4 = 0;
    OM0KW01.OM0KWTK5 = OPUREC.OPUAUDTP;
    TA1REC.TA1TBLKE = OM0KW01.OM0KWTK1;
    XSOPS02(); /* common abend*/
  end



end // end OM0KSAU

//*** RECORD=OM0KW01 ****
// om0k program misc working storage.
// ************************************************************
// *    m a i n t e n a n c e    l o g
// *
// *  ref #   date    who    desc
// *-------- ------  ------  ----------------------------------
// *  000    051089  schase  rename of field kuablid to
// *                         op1blaid. per db2 changes.
// *  000    051089  schase  rename of field kumshaid to
// *                         op1shaid. per db2 changes.
// *  000    072790  ischmi  added om0kwcgs field - cogs err fl
// *                         added kucgrp field- save cmpny rec
// *  000    052491  tfox    menu service added om0kw911
// *  000    052891  dharri  added om0kwfld, fd1, fd2, fd3 to
// *                         format key to kujrec for display.
// *                         added om0kwhd1, lit, dpt to format
// *                         dept self id for address line 1.
// *  000    061491  jloyer  db2 chgs: chgd length due to chgs
// *                         in kucrec.kucgrp.
// *  000    100891  dmeier  db2 chgs: chgd length due to chgs
// *                         in kucrec.kucgrp.
// *  000    031392  dharri  db2 chgs: chgd length due to chgs
// *                         in kucrec.kucgrp & del'ed op1bgrpo
// *  000    080993  gcalki  db2 chgs: chgd length due to chgs
// *                         in kucrec.kucgrp.
// *  000    110893  gcalki  db2 chgs: chgd length due to chgs
// *                         in kucrec.kucgrp.
// *         2-28-94 scantr  db2 chgs: kucgrp resize
// *        03-17-00 gsunda  spain changes. length due to
//                           om0ks75
// ***********************
Record OM0KW01 type basicRecord
  5 OM0KWSGR OM0KWSGR ; 
    10 OM0KWAAF OM0KWAAF ; 
    10 OM0KWLDF OM0KWLDF ; 
    10 OM0KW1SA OM0KW1SA ; 
    10 OM0KWOSR OM0KWOSR ; 
    10 OM0KW1BA OM0KW1BA ; 
    10 OM0KWOBR OM0KWOBR ; 
    10 OP11TMBF OP11TMBF ; 
    10 OP11TMSF OP11TMSF ; 
    10 OP1SGPAO OP1SGPAO ; 
    10 OP1SHAID OP1SHAID ; 
    10 OP1BLAID OP1BLAID ; 
    10 OP1COGID OP1COGID ; 
    10 OM0KWFLG OM0KWFLG ; 
      15 OM0KWOBF OM0KWOBF ; 
      15 OM0KWOSF OM0KWOSF ; 
      15 OM0KWUOF OM0KWUOF ; 
      15 OM0KWUSF OM0KWUSF ; 
      15 OM0KWUBF OM0KWUBF ; 
    10 OM0KWCAD OM0KWCAD ; 
      15 OM0KWCCT OM0KWCCT ; 
      15 * char(1) ; 
      15 OM0KWCST OM0KWCST ; 
      15 * char(1) ; 
      15 OM0KWCZP OM0KWCZP ; 
    10 OM0KWCCN OM0KWCCN ; 
      15 XCTCD XCTCD ; 
      15 * char(1) ; 
      15 XCTDESC XCTDESC ; 
    10 OM0KWPCH OM0KWPCH ; 
    10 OM0KWDKY OM0KWDKY ; 
      15 OM0KWDPN OM0KWDPN ; 
      15 OM0KWDCU OM0KWDCU ; 
      15 OM0KWDNK OM0KWDNK ; 
    10 OM0KWTK1 OM0KWTK1 ; 
      15 OM0KWTK2 OM0KWTK2 ; 
      15 OM0KWTK3 OM0KWTK3 ; 
      15 OM0KWTK4 OM0KWTK4 ; 
      15 OM0KWTK5 OM0KWTK5 ; 
      15 OM0KWTK6 OM0KWTK6 ; 
    10 KUCGRP KUCGRP ; 
    10 OM0KWCGS OM0KWCGS ; 
    10 OM0KW911 OM0KW911 ; 
    10 OM0KWFLD OM0KWFLD ; 
      15 OM0KWFD1 OM0KWFD1 ; 
      15 OM0KWFD2 OM0KWFD2 ; 
      15 OM0KWFD3 OM0KWFD3 ; 
    10 OM0KWHD1 OM0KWHD1 ; 
      15 OM0KWLIT OM0KWLIT ; 
      15 KUJSLFID KUJSLFID ; 
    10 OM0KW-APPLY-CHG-FL OM0KW-APPLY-CHG-FL ; 
    10 OM0KW-PF16-OK-FL OM0KW-PF16-OK-FL ; 
    10 OM0KW-EP0K-ADDR-FL OM0KW-EP0K-ADDR-FL ; 
    10 OM0KW-OP1SHAID-SV OM0KW-OP1SHAID-SV ; 
    10 OM0KW-FROM-SGRP char(2) ; // where err-rtn called
    10 OM0KW-US-ZIP5 char(5) ; // first 5 digit of usa zip
      15 OM0KW-US-ZIP char(1) [5] ; // num check arry element
end // end OM0KW01

Record OM0KW02 type basicRecord
  5 OM0KWAGR OM0KWAGR ; 
    10 OM0KWORP OM0KWORP ; 
    10 OM0KWOAG OM0KWOAG ; 
    10 OM0KWNAG OM0KWNAG ; 
    10 * char(2) ; 
    10 OM0KWCSN OM0KWCSN ; 
      15 OM0KWCSB OM0KWCSB ; 
      15 OM0KWCSC OM0KWCSC ; 
end // end OM0KW02

Record OM0KW03 type basicRecord // VAGen Info - redefined OM0KW02
  5 OM0KWRGR OM0KWRGR ; 
    10 OM0KWORP OM0KWORP ; 
    10 OM0KWOAG OM0KWOAG ; 
    10 OM0KWAG1 OM0KWAG1 ; 
    10 OM0KWAG2 OM0KWAG2 ; 
    10 * char(1) ; 
    10 OM0KWSCS OM0KWSCS ; 
      15 OM0KWCSE OM0KWCSE ; 
      15 * num(1) ; 
end // end OM0KW03

// Apply change flag
DataItem OM0KW-APPLY-CHG-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// New addr from EP0K
DataItem OM0KW-EP0K-ADDR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// op-shgrp-addr-id
DataItem OM0KW-OP1SHAID-SV int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF16 is allowed flag
DataItem OM0KW-PF16-OK-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// one tm bil rec action(a,c,d)
DataItem OM0KW1BA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// one tm shp rec action(a,c,d)
DataItem OM0KW1SA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// -911 for prepack flg
DataItem OM0KW911 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// address action flag (a,c,d)
DataItem OM0KWAAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 3/4 of new agency
DataItem OM0KWAG1 char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 1/4 of new agency + space
DataItem OM0KWAG2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// definitions for audit rec
DataItem OM0KWAGR char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cust city, st, zip area
DataItem OM0KWCAD char(39)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cust country cd, desc area
DataItem OM0KWCCN char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cust city
DataItem OM0KWCCT char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// invalid cogs flag
DataItem OM0KWCGS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0KWCSB num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0KWCSC num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0KWCSE num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cu-co-id
DataItem OM0KWCSN num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cust state
DataItem OM0KWCST char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cust zip
DataItem OM0KWCZP char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error display cust-ord-id
DataItem OM0KWDCU num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// error display key - op1key
DataItem OM0KWDKY char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error display nike-ord-id
DataItem OM0KWDNK num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// error display part no.
DataItem OM0KWDPN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// display kuccoid
DataItem OM0KWFD1 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// filler
DataItem OM0KWFD2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// display xnxcd
DataItem OM0KWFD3 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// kujrec display key
DataItem OM0KWFLD char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// edit flags
DataItem OM0KWFLG char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// formatted dept self id
DataItem OM0KWHD1 char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// lead days edit flag (n,y)
DataItem OM0KWLDF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// literal field for 'DEPT '
DataItem OM0KWLIT char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new (override) agency
DataItem OM0KWNAG char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// old agency
DataItem OM0KWOAG char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// one time bill valid flag
DataItem OM0KWOBF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// one time bill to addr rec
DataItem OM0KWOBR char(340)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// old rep
DataItem OM0KWORP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// one time ship valid flag
DataItem OM0KWOSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// one time ship to addr rec
DataItem OM0KWOSR char(340)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pick change flag
DataItem OM0KWPCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// definitons for audit rec
DataItem OM0KWRGR char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// shortened company
DataItem OM0KWSCS num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// om0k ws group
DataItem OM0KWSGR char(1261)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// errdiag key info
DataItem OM0KWTK1 char(23)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// errdiag key info
DataItem OM0KWTK2 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// errdiag key info
DataItem OM0KWTK3 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// errdiag key info
DataItem OM0KWTK4 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// errdiag key info
DataItem OM0KWTK5 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// errdiag key info
DataItem OM0KWTK6 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update ship addr?
DataItem OM0KWUBF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update order header?
DataItem OM0KWUOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update bill addr?
DataItem OM0KWUSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

