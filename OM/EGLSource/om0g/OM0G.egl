package om0g;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import op.common.*;
import ta.common.*;
//*** PROGRAM=OM0G ****
// ************************************************************
// *
// *    This application acts as a help function to display
// *    valid cancellation reason codes.
// *    It is reached, normally, because someone pressed pf1
// *    at a point in order/product maintenance where they
// *    needed to enter the reason an order/product was
// *    cancelled.
// *    It displays all entrys in the csp table xomtbl and
// *    flags those that are valid cancellation reason codes
// *    with an '*'.
// *    It returns control to whatever application name is
// *    in commarea.cafromap.
// *
// ************************************************************
// 
//  maintenance:
// 
//    date     init    comment
//  --------  ------   -------------------------------------
//  02/23/88  gwells   do not display reason codes that have
//                     inactive statuses - om0g000.
//  08/23/88  gwells   in '000' do not display corp reason
//                     codes (xomcancf=c).  move the actual
//                     cancel flag to the map ( not * or ' ').
//                     replace 'also cancel reason' on map with
//                     the descriptions of the cancel flags -
//                     m001.
//  02/21/89  jwood    added set segmented trans id logic
//  02/12/91  tfox     regen for db chgs
//  09/15/97  dhuffm   allow for more XOM codes to be displayed
//  11/20/97  vsanka   added scrolling logic for om0g screen
// *********************
Program OM0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  OM0GWREC OM0GWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XOMTBL {deleteAfterUse = yes}; // table
  use OM0GM.OM0GM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OM0G000: OM0G000();
    goto OM0G000;
  end // end main
end // end OM0G

// display cancel reason codes
Function OM0G000()
  XSENTRY();

   /* ****************************************************/
   /* *** set segmented trans id                      ****/
   /* ****************************************************/
   /* TCS INCLUDE BEGIN  11/20/1997*/

  if (OM0GWREC.OM0GWCNT == 0)

   /* TCS INCLUDE END   11/20/1997*/

    set OM0GWREC empty;

   /* TCS INCLUDE BEGIN  11/20/1997*/

    OM0GWREC.OM0GWTSP = 1;

   /* TCS INCLUDE END   11/20/1997*/

    CAEZSAP = sysVar.transactionID;
    CAEZSG12 = "OM";
    CAEZSG4 = "G";
    sysVar.transactionID = CAEZSAP;
   /* *************************************************************/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value

   /* TCS INCLUDE BEGIN  11/20/1997*/

    OM0GWSB1 = 1;
    OM0GWREC.OM0GWPNR[OM0GWSB1] = 1;
    OM0GWREC.OM0GWRNR[OM0GWSB1] = 1;
    OM0GWREC.XXXINDX1 = 1;
    OM0GWTCT = 1;

   /* TCS INCLUDE END   11/20/1997*/

    sysVar.arrayIndex = 1;
    set OM0GM001.XOMCD cursor, modified, bold;

   /* TCS INCLUDE BEGIN  11/20/1997*/

    if (OM0GWREC.OM0GWTSP == 1)
      while (XOMTBL.XOMCD[sysVar.arrayIndex] != "99"
       && XXXINDX1 <= 54)

   /* TCS INCLUDE END   11/20/1997*/

        if (XOMTBL.XXXSTAT[sysVar.arrayIndex] == "A"
         && XOMTBL.XOMCANCF[sysVar.arrayIndex] != "C") /* do not display corp*/
          OM0GM001.XOMCD[XXXINDX1] = XOMTBL.XOMCD[sysVar.arrayIndex];
          OM0GM001.XOMDESC[XXXINDX1] = XOMTBL.XOMDESC[sysVar.arrayIndex];
          OM0GM001.XOMCANCF[XXXINDX1] = XOMTBL.XOMCANCF[sysVar.arrayIndex];
          OM0GWREC.XXXINDX1 = OM0GWREC.XXXINDX1 + 1;
        end
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end
    end

   /* TCS INCLUDE BEGIN  11/20/1997*/

    OM0GWREC.OM0GWTCT = sysVar.arrayIndex;


  end
  OM0GWREC.OM0GWCNT = OM0GWREC.OM0GWCNT + 1;

   /* TCS INCLUDE END   11/20/1997*/
  converse OM0GM001 ;


  if (converseVar.eventKey is enter)
    if (COMMAREA.CAFRMSYS == COMMAREA.CACURSYS)
      sysVar.transferName = COMMAREA.CAFROMAP;
      COMMAREA.CAFROMAP = "OM0G";
      transfer to program sysVar.transferName passing COMMAREA; /* go back to calling appl*/
    else
      sysVar.transferName = COMMAREA.CAFROMAP;
      COMMAREA.CAFROMAP = "OM0G";
      transfer to program sysVar.transferName passing COMMAREA; /* go back to calling appl*/
    end
  else

   /* TCS INCLUDE BEGIN  11/20/1997*/

    OM0GWREC.OM0GWERR = "N";
    if (converseVar.eventKey is pf7) /* page back*/
      if (OM0GWREC.OM0GWTSP == 1)
        sysVar.arrayIndex = OM0GWREC.OM0GWTCT;
        converseLib.validationFailed(643);
        exit stack;
      else
        set OM0GM001 empty;
        OM0GS20();
      end
    else
      if (converseVar.eventKey is pf8) /* page forward*/
        sysVar.arrayIndex = OM0GWREC.OM0GWTCT;
        if (XOMTBL.XOMCD[sysVar.arrayIndex] == "99")
          converseLib.validationFailed(644);
        else
          set OM0GM001 empty;
          OM0GS30();
        end

   /* TCS INCLUDE END   11/20/1997*/

      else
        converseLib.validationFailed(9);
      end
    end
  end
end // end OM0G000

// page backward
Function OM0GS20()
                  /* STATEMENT GROUP-OM0GS20 */
                  /* *************************/

   /* TCS INCLUDE BEGIN  11/20/1997*/

  if (OM0GWREC.OM0GWTSP > 1)
    OM0GWSB1 = OM0GWREC.OM0GWTSP - 1;
  else
    OM0GWSB1 = 1;
  end
  sysVar.arrayIndex = OM0GWREC.OM0GWRNR[OM0GWSB1];
  OM0GWREC.XXXINDX1 = 1;
  OM0GWREC.OM0GWLPG = "N"; /* reset last-page flag*/
  set OM0GM001.XOMCD cursor, modified, bold;

  while (XOMTBL.XOMCD[sysVar.arrayIndex] != "99"
   && OM0GWREC.XXXINDX1 <= 54)
    if (XOMTBL.XXXSTAT[sysVar.arrayIndex] == "A"
     && XOMTBL.XOMCANCF[sysVar.arrayIndex] != "C") /* do not display corp*/
      OM0GM001.XOMCD[XXXINDX1] = XOMTBL.XOMCD[sysVar.arrayIndex];
      OM0GM001.XOMDESC[XXXINDX1] = XOMTBL.XOMDESC[sysVar.arrayIndex];
      OM0GM001.XOMCANCF[XXXINDX1] = XOMTBL.XOMCANCF[sysVar.arrayIndex];
      OM0GWREC.XXXINDX1 = OM0GWREC.XXXINDX1 + 1;
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end
  OM0GWREC.OM0GWTCT = sysVar.arrayIndex; /* save table rec cou*/
  OM0GWREC.OM0GWTSP = OM0GWREC.OM0GWTSP - 1; /* decrement page*/
  if (OM0GWREC.OM0GWTSP == 1)
    OM0GWREC.OM0GWFPG = "Y"; /* set first-page flag*/
  end
  if (OM0GWREC.OM0GWFPG == "Y" /* if first-page flag*/
   && OM0GWREC.OM0GWTSP < 1)  
    converseLib.validationFailed(643); /* no prev page data errmsg*/
    exit stack;
    OM0GWREC.OM0GWERR = "Y";
  else
    OM0GWREC.OM0GWFPG = "N"; /* reset first-page flag*/

  end

   /* TCS INCLUDE END   11/20/1997*/
   /* ************************************************************/
end // end OM0GS20

// page forward
Function OM0GS30()

            /* STATEMENT GROUP-OM0GS30 */
           /* **************************/
   /* TCS INCLUDE BEGIN  11/20/1997*/

  sysVar.arrayIndex = OM0GWREC.OM0GWTCT + 1;
  OM0GWREC.XXXINDX1 = 1;
  set OM0GM001.XOMCD cursor, modified, bold;
  OM0GWSB1 = OM0GWREC.OM0GWTSP + 1;
  OM0GWREC.OM0GWPNR[OM0GWSB1] = OM0GWSB1;
  OM0GWREC.OM0GWRNR[OM0GWSB1] = sysVar.arrayIndex;
  OM0GWREC.OM0GWFPG = "N"; /* reset first page of data flag*/
  while (XOMTBL.XOMCD[sysVar.arrayIndex] != "99"
   && OM0GWREC.XXXINDX1 <= 54)
    if (XOMTBL.XXXSTAT[sysVar.arrayIndex] == "A"
     && XOMTBL.XOMCANCF[sysVar.arrayIndex] != "C") /* do not display corp*/
      OM0GM001.XOMCD[XXXINDX1] = XOMTBL.XOMCD[sysVar.arrayIndex];
      OM0GM001.XOMDESC[XXXINDX1] = XOMTBL.XOMDESC[sysVar.arrayIndex];
      OM0GM001.XOMCANCF[XXXINDX1] = XOMTBL.XOMCANCF[sysVar.arrayIndex];
      OM0GWREC.XXXINDX1 = OM0GWREC.XXXINDX1 + 1;
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end
  OM0GWREC.OM0GWTSP = OM0GWREC.OM0GWTSP + 1; /* increment page nr*/
  OM0GWREC.OM0GWTCT = sysVar.arrayIndex; /* save table rec count*/

  if (OM0GWREC.OM0GWTSP == 2)
    OM0GWREC.OM0GWLPG = "Y"; /* set last page of data flag*/
  else
    OM0GWREC.OM0GWLPG = "N"; /* reset last page of data flag*/
  end
  if (OM0GWREC.OM0GWLPG == "Y"
   && OM0GWREC.OM0GWTSP == 3)
    converseLib.validationFailed(644); /* display no more data errmsg*/
    exit stack;
  end

   /* TCS INCLUDE END   11/20/1997*/
   /* **************************************************/
end // end OM0GS30

Record OM0GWREC type basicRecord
  10 XXXINDX1 XXXINDX1 ; 
  10 OM0GWTSP OM0GWTSP ; 
  10 OM0GWSB1 OM0GWSB1 ; 
  10 OM0GWERR OM0GWERR ; 
  10 OM0GWCNT OM0GWCNT ; 
  10 OM0GWTCT OM0GWTCT ; 
  10 OM0GWFPG OM0GWFPG ; 
  10 OM0GWLPG OM0GWLPG ; 
  10 OM0GWPNR OM0GWPNR [10] ; 
  10 OM0GWRNR OM0GWRNR [10] ; 
end // end OM0GWREC

// COUNT TO SKIP 1st SCREEN
DataItem OM0GWCNT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// INTERNAL ERROR FLAG
DataItem OM0GWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'S' TO SELECT ORDERS
DataItem OM0GWFPG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'S' TO SELECT ORDERS
DataItem OM0GWLPG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0GWPNR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0GWRNR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SUBSCRIPT1
DataItem OM0GWSB1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// COUNT TO SKIP 1st SCREEN
DataItem OM0GWTCT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// TEMP STORAGE PAGE
DataItem OM0GWTSP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

