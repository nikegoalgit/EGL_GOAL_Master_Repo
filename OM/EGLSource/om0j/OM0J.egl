package om0j;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import ep.common.*;
import fk.common.*;
import fy.common.*;
import in1.common.*;
import ku.common.*;
import ob.common.*;
import om.common.*;
import op.common.*;
import os.common.*;
import pc.common.*;
import pg.common.*;
import pk.common.*;
import pw.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=OM0J ****
// nike order maintenance   order special instructions
// 
// overview: this application displays all special text associ-
//           ated with a sub-order.
// 
// date created: 06/30/86
//       author: david smith
// 
// maintenance history:
// 
//     date     by whom     overview of changes made
//   --------  ----------  ------------------------------------
//   06/30/86   d smith     program creation.
//   05/11/87   ssayew      om0jsdb - corrected problem where
//                          rcord was being overlayed cuasing
//                          an abend when record was changed
//                          in om0h. took out line of code
//                          causing overlay.
// 
//   07/21/87 tfox          added new sgrp (om0jspk) to pass
//                          changes to an order that affect the
//                          picking system to the picking
//                          system.
//   09/30/87 tfox          turned on pick calls. hrd cded for
//                          warehouses on new pick system.
//   11/02/87 tfox          refresh omwrec before dxfr to om0r
//                          in stmt grps s04 and s03.
//   11/16/87 tfox          chg error diag info in om0jsoh so
//                          we can read the key (was bin)
//   02/02/88 craine        chg error diag info in om0jsoh so
//                          we can read the key (still wasn't
//                          working. set om0jw01 to empty in
//                          om0jspi - was causing -100 abends
//                          in om0jsuc
//   02/04/88 craine        chg s04 to use xspf4 instead of
//                          xfer
//   03/31/88 craine        fix cause of soh abend - op1rec not
//                          found.
//   04/04/88 craine        set om0jwchg to 'y' in om0js02
//   10/22/88 tfox          chg cd in s02 to prevent maintenanc
//                          e or rebook bulk orders.
//   11/04/88 jwood         noncsp opt added to calls
//   02/20/89 jwood         set segmented tran id logic added
//   03/30/89 skott         changed to select and display
//                          instructions when -803 issued on
//                          an add.  om0jsur.
//   05/10/89 jbecke        database changes:  om0jw02
//   05/22/89 mbarna        added code to catch bad return
//                          codes of sql for special instr.
//                          made changes to sdb, sen, ssn, sss
//                          scn, sdr, sui, sur, sup, s13, s14,
//                          s16, s17, s18.  added s99 and added
//                          fields for time and deadlock count-
//                          er in w01.
//   04/04/90 cgrice        db changes - om0jw02 and renamed
//                          op1blkcd to xbdcd.  s02
//   10/04/90 dviert        removed op9rec from record list -
//                          tag logic no longer necessary.
//                          deleted call in scn.
//   05/22/91 tfox          menu services sen,s01,s03,s04
//                          check for prepacks
//   06/10/91 schase        June database changes. Move om0jw02
//                          record.
//   12/02/91 jhecke        695 - Prepack of footwear. s01
//   03/13/92 dharri        database chg - om0jw02.
//   05/11/93 sjob          #937-add custom logo customer info.
//                          by dxfr to AE08:j005,jspi,cust-logo
//                          chk-custom,item-csr-op,item-csr-cl,
//                          next-item,prod-lookup,xfr-ae08
//   02/28/94 scantr        db changes: resize om0jw02
//   04/28/94 jather        log 1003. renamed causera to
//                          ca-user-workarea-4k to hold opwrec
//                          which has increased to 3072 bytes.
//   07/12/95 dliddl        Changes to incorparate Nike Canada
//                          in to the GOAL system.
//   07/03/96 mvalbu        Changed to use regional data for US
//                          apparel by calling SY2000. Changed
//                          OM0JS-PROD-LOOKUP, and OM0JS-SEL-
//                          SY2000.
//   04/08/98 eshanm        System date variable EZEDTE is used
//                          to populate ZZ-CHG-DT in VOPPKM01
//                          via IO1680. Changed st group is:
//                          OM0JSPK.
//   06/03/98 jflor1        Modified OM0JS-PROD-LOOKUP to
//                          bypass call to SY2000 if div code
//                          is '02' or '03'.
//   04/09/98 jcarey *** For warehouse 51 only ***
//                  Check status of order on the Mirror Pool
//                  Order Header before accepting a change.
//                  If status is allocated, accept changes to:
//                  Dept, Special Instructions & Special Labels
//                  If status is released, pack-and-held or
//                  shipped no changes allowed.
//   01/18/01 Rshaik        WEP1301 record structure has been
//   TT#9997                chnaged Pl. Refer WEP1301 prologue.
// *********************
Program OM0J type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  EPIREC EPIREC; // record
  ERRSQLCA ERRSQLCA; // record
  OM0JW01 OM0JW01; // record
  OM0JW02 OM0JW02; // record
  OMAREC OMAREC; // record
  OMBREC OMBREC; // record
  OMWREC OMWREC; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  OP3REC OP3REC; // record
  OP4REC OP4REC; // record
  OPABREC OPABREC; // record
  OSNREC OSNREC; // record
  SQLCA SQLCA; // record
  SYCREC SYCREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VMPOLH01 VMPOLH01; // record
  VMPOLT01 VMPOLT01; // record
  WEP1301 WEP1301; // record
  WSY2000 WSY2000; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XBDTBL {deleteAfterUse = yes}; // table
  use XNDTBL {deleteAfterUse = yes}; // table
  use XOSTBL {deleteAfterUse = yes}; // table
  use XPATBL; // table
  use OM0JM.OM0JM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OM0J001: OM0J001();
    goto OM0J005;
    OM0J005: OM0J005();
     /* *************************************************************/


    if (OMAREC.OMAERR == "Y")
      OMAREC.OMAERR = "N";
    else
      set OM0JM001.OM0JMDPT[1] cursor;
    end


    goto OM0J005; /* branch to converse*/


  end // end main
end // end OM0J

// Enter Key Pressed Actions
Function OM0J-CUST-LOGO()
  if (OM0JW01.OM0JWCHG == "Y") /* were changes authorized?*/
    OM0JSED(); /* edit department codes*/
  end

  if (OMAREC.OMAERR == "N") /* any errors detected?*/
    if (OM0JW01.OM0JWCHG == "Y") /* were changes authorized?*/
      OM0JSUP(); /* update data base*/
    end
    if (OMAREC.OMAERR == "N") /* any errors detected?*/
      OM0JS-CHK-CUSTOM(); /* IS THIS custom logo?*/
      if (OMAREC.OMAERR == "N") /* any errors in custom logo logic?*/
        if (OM0JW01.OM0JW-CUSTOM-FL == "Y"
         && OM0JW01.OM0JW-BULK-FL == "N") /* not a bulk*/
          OM0JS-XFR-AE08(); /* transfer to AE08*/
        else
          converseLib.validationFailed(008); /* invalid pf key*/
          OMAREC.OMAERR = "Y"; /* NOT A CUSTOM LOGO ORDER*/
        end
      end
    end
  end



end // end OM0J-CUST-LOGO

// Program Initialization
Function OM0J001()


     /* **********************************************************/
     /* * this process performs the following functions:        **/
     /* *     - checks entry security                           **/
     /* *     - moves the working storage and order processing  **/
     /* *       record from the incoming common area            **/
     /* *     - initializes the map fields                      **/
     /* **********************************************************/

  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value

      /* check entry security*/

  XSENTRY();

   /* ****************************************************/
   /* *** set segmented trans id                      ****/
   /* ****************************************************/

  CAEZSAP = sysVar.transactionID;
  CAEZSG12 = "OM";
  CAEZSG4 = "J";
  sysVar.transactionID = CAEZSAP;

   /* *************************************************************/

      /* retrieve user common area*/


  XSOMS05(); /* check order entry security*/


  OM0JSPI(); /* initialize program*/


  OM0JM001.OPMRVN = 1; /* set map revision number*/


  OM0JSDB(); /* data base call to check text flags*/


end // end OM0J001

// Converse Map and Edit Data
Function OM0J005()


     /* **********************************************************/
     /* * this process performs the following functions:        **/
     /* *     - presents the special instructions screen for    **/
     /* *       data entry or modification                      **/
     /* *     - edits the data entered and identifies any       **/
     /* *       data errors                                     **/
     /* **********************************************************/


   /* *************************************************************/
  converse OM0JM001 ;
   /* *************************************************************/


  if (OM0JW01.OM0JWCHG == "Y") /* changes allowed within application?*/
    OM0JSSM(); /* save modified flags for re-converse*/
  end

  if (converseVar.eventKey is enter)
    OM0JSEN();
  else
    if (converseVar.eventKey is pf2)
      OM0JS02();
    else
      if (converseVar.eventKey is pf3)
        OM0JS03();
      else
        if (converseVar.eventKey is pf4)
          OM0JS04();
        else
          if (converseVar.eventKey is pf13)
            OM0JS13();
          else
            if (converseVar.eventKey is pf14)
              OM0JS14();
            else
              if (converseVar.eventKey is pf16)
                OM0JS16();
              else
                if (converseVar.eventKey is pf17)
                  OM0JS17();
                else
                  if (converseVar.eventKey is pf18)
                    OM0JS18();
                  else
                    if (converseVar.eventKey is pf19)
                      OM0JS19();
                    else
                      if (converseVar.eventKey is pf22)
                        OM0J-CUST-LOGO();
                      else
                        OMAREC.OMAERR = "Y";
                        converseLib.validationFailed(8);
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end


end // end OM0J005

// Call program EP1300
Function OM0JS-CALL-EP1300()
   /* --------------------------------------------------------------*/
   /* Order Change Subroutine for editing and updating the Mirror*/
   /* Pool Database. Move hte required fields into the passing record*/
   /* based upon modified flags.*/
   /* If return code is 1, no orders exist on the Mirror Pool*/
   /* Database. If return is 2,3 or 4, changes cannot be applied.*/
   /* If any other, indicate a system error.*/
   /* ---------------------------------------------------------------*/

  try
    call "EP1300" (WEP1301) {isNoRefresh = yes, isExternal = yes};
  end
end // end OM0JS-CALL-EP1300

// Check for custom logo on order
Function OM0JS-CHK-CUSTOM()

   /* *************************************************************/
   /* Check to see if this is a custom logo order.*/
   /* Custom logo/non-custom logo products can't be mixed*/
   /* on an order, so it's only necessary to check the first*/
   /* active product on the order.*/
   /* *************************************************************/


  OM0JW01.OM0JW-CUSTOM-FL = "N"; /* Init custom logo flag*/
  set OP2REC empty;

  OP2REC.OP1PARTN = OP1REC.OP1PARTN; /* part char*/
  OP2REC.OP1CUOID = OP1REC.OP1CUOID; /* cust ord id*/
  OP2REC.OP1NORID = 0; /* nike ord id*/

  OM0JW01.OM0JW-USE-ITM-FL = "N"; /* Init item OK to use flag*/

  OM0JS-ITEM-CSR-OP(); /* open item cursor*/

  if (OMAREC.OMAERR == "N") /* NO ERRORS FOUND IN OPEN*/
    OM0JS-NEXT-ITEM();
  end

  while (SQLCA.VAGen_SQLCODE == 0
   && OMAREC.OMAERR == "N" /* NO ERRORS FOUND*/
   && OM0JW01.OM0JW-USE-ITM-FL == "N")
    if (OP2REC.OP2LNIST != "IP" /* Not in process*/
     && OP2REC.OP2LNIST != "XL") /* and not cancelled*/
      OM0JW01.OM0JW-USE-ITM-FL = "Y"; /* OK to use this item*/
    else
      OM0JS-NEXT-ITEM(); /* Keep looking for item to use*/
    end
  end

  OM0JS-ITEM-CSR-CL(); /* Close cursor no matter what*/

  if (OM0JW01.OM0JW-USE-ITM-FL == "Y" /* If a usable item was found*/
   && OMAREC.OMAERR == "N")           /* no db2 errors found....*/
    OM0JS-PROD-LOOKUP(); /* Look up product*/
    if (SYCREC.XPRCD == "22" /* Custom logo product*/
     && OMAREC.OMAERR == "N") /* no db2 errors found....*/
      OM0JW01.OM0JW-CUSTOM-FL = "Y";
    end
  end


end // end OM0JS-CHK-CUSTOM

// Close Mirror Pool Header
Function OM0JS-CLS-VMPOLH01()
   /* -----------------------------------------------------------------*/
   /* Close the Mirror Pool header set.*/
   /* -----------------------------------------------------------------*/

  set SQLCA empty;

  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1PGMNM = "OM0JH  ";
  TA1REC.TA1MAP = "OM0JM001";
  TA1REC.TA1DBASE = "DPICK";
  TA1REC.TA1TBLVU = "VMPOLH01";
  TA1REC.TA1TBLKE = VMPOLH01.VMPOLH01-KEY;

  call "VMPOLH01" ("C1", SQLCA, VMPOLH01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1LOCAT[3] = "OM0JS-CLS-VMPOLH01";
    TA1REC.TA1LOCAT[4] = "VMPOLH01";
    XSOPS02();
  end
end // end OM0JS-CLS-VMPOLH01

// Delete Mirror Pool Text
Function OM0JS-DEL-VMPOLT01()
   /* -----------------------------------------------------------*/
   /* Delete a record from the mirror pool text database.*/
   /* -----------------------------------------------------------*/

  set SQLCA empty;

  call "VMPOLT01" ("D ", SQLCA, VMPOLT01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(010);
    OMAREC.OMAERR = "Y";
    TA1REC.TA1PGMNM = "OM0J ";
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1MAP = "OM0JM001";
    TA1REC.TA1DBASE = "DPICK";
    TA1REC.TA1TBLVU = "VMPOLT01";
    TA1REC.TA1TBLKE = VMPOLT01.VMPOLT01-KEY;
    TA1REC.TA1LOCAT[2] = "OM0JS-DEL-VMPOLT01";
    TA1REC.TA1LOCAT[3] = "OM0J";
    TA1REC.TA1LOCAT[4] = "VMPOLT01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      TA1REC.TA1PGMNM = "OM0J ";
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1MAP = "OM0JM001";
      TA1REC.TA1DBASE = "DPICK";
      TA1REC.TA1TBLVU = "VMPOLT01";
      TA1REC.TA1TBLKE = VMPOLT01.VMPOLT01-KEY;
      TA1REC.TA1LOCAT[2] = "OM0JS-DEL-VMPOLT01";
      TA1REC.TA1LOCAT[3] = "OM0J";
      TA1REC.TA1LOCAT[4] = "VMPOLT01";
      XSOPS02();
    end
  end
end // end OM0JS-DEL-VMPOLT01

// Fetch Mirror Pool Header
Function OM0JS-FET-VMPOLH01()
   /* -------------------------------------------------------------*/
   /* Fetch next mirror pool header record.*/
   /* -------------------------------------------------------------*/

  set SQLCA empty;

  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1PGMNM = "OM0J  ";
  TA1REC.TA1MAP = "OM0JM001";
  TA1REC.TA1DBASE = "DPICK";
  TA1REC.TA1TBLVU = "VMPOLH01";
  TA1REC.TA1TBLKE = VMPOLH01.VMPOLH01-KEY;

  call "VMPOLH01" ("N1", SQLCA, VMPOLH01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OM0JW01.OM0JW-VMPOLH01-EOF-FL = "N";
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OM0JW01.OM0JW-VMPOLH01-EOF-FL = "Y";
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(010);
        OMAREC.OMAERR = "Y";
        TA1REC.TA1FUNC = "POST";
        TA1REC.TA1LOCAT[3] = "OM0JS-FETCH-VMPOLH01";
        TA1REC.TA1LOCAT[4] = "VMPOLH01";
        call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
        return;
      else
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1LOCAT[3] = "OM0JS-FET-VMPOLH01";
        TA1REC.TA1LOCAT[4] = "VMPOLH01";
        XSOPS02();
      end
    end
  end
end // end OM0JS-FET-VMPOLH01

// Close item cursor-IO0440
Function OM0JS-ITEM-CSR-CL()

    /* ******************************************************/
    /* close the item cursor.  we are looking for one product*/
    /* from this order to determine if this is a custom logo.*/
    /* ******************************************************/

   /* Call the I/O mod to close the cursor.*/
  call "IO0440" ("CS", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};

   /* continue processing even if the close does not work........*/

  if (SQLCA.VAGen_SQLCODE == 0)
     /* Next sentence - no errors, so do nothing.*/
  else
     /* Error has occurred.  post the error and return to map display*/
    TA1REC.TA1FUNC = "POST"; /* .*/
    TA1REC.TA1PGMNM = "OM0J    ";
    TA1REC.TA1MAP = "OM0JM001";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VITEM001";
    TA1REC.TA1TBLKE = " ";
    TA1REC.TA1LOCAT[1] = "OM0J001 ";
    TA1REC.TA1LOCAT[2] = "ITEM-CSR";
    TA1REC.TA1LOCAT[3] = "IO0440  ";
    TA1REC.TA1LOCAT[4] = "CS      ";
    OM0JW01.OM0JW-FILL-1 = " ";
    OM0JW01.OM0JW-FILL-2 = " ";
    OM0JW01.OM0JW-FILL-3 = " ";
    OM0JW01.OM0JWPTN = OP4REC.OP1PARTN; /* part char*/
    OM0JW01.OM0JWOID = OP4REC.OP1CUOID; /* order number*/
    OM0JW01.OM0JWNID = OP4REC.OP1NORID; /* nike order number*/
    TA1REC.TA1TYPE = "DB2";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
  end

end // end OM0JS-ITEM-CSR-CL

// Open item cursor-IO0440
Function OM0JS-ITEM-CSR-OP()
   /* ************************************************************/
   /* Set up the cursor to get items for this order.*/
   /* ************************************************************/

  set SQLCA empty;

  call "IO0440" ("SS", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};

   /* post any abends*/
  if (SQLCA.VAGen_SQLCODE == 0)
                           /* Next sentence - no errors, so do nothing.*/
  else
     /* Error has occurred.  Set up TA1REC fields.  do no xfr to 'AE08'*/
    OMAREC.OMAERR = "Y"; /* program error flag*/
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "OM0J";
    TA1REC.TA1MAP = "OM0JM001";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VITEM001";
     /* Format the key of the cursor.*/
    OM0JW01.OM0JWCUK = "  "; /* error key area*/
    OM0JW01.OM0JWPTN = OP2REC.OP1PARTN;
    OM0JW01.OM0JWOID = OP2REC.OP1CUOID;
    OM0JW01.OM0JWNID = OP2REC.OP1NORID;
    OM0JW01.SY1STNBR = "0";
    OM0JW01.SY2CLRID = "0";
    TA1REC.TA1TBLKE = OM0JW01.OM0JWCUK; /* KEY*/

    TA1REC.TA1LOCAT[1] = "OM0J001 ";
    TA1REC.TA1LOCAT[2] = "ITEM-CSR";
    TA1REC.TA1LOCAT[3] = "IO0440  ";
    TA1REC.TA1LOCAT[4] = "SS      ";
    try
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
    COMMAREA.CAMSGB = "ORDER MAY HAVE CUST LOGO INST-CALL ANALYST";
    COMMAREA.CACURRAP = "OM0M";
    transfer to program "OM0M" passing COMMAREA;
  end
end // end OM0JS-ITEM-CSR-OP

// Fetch next item-IO0440
Function OM0JS-NEXT-ITEM()
   /* ********** Call the I/O mod to read an item record.*******/

  call "IO0440" ("SN", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
     /* Next sentence - no errors, so do nothing.*/

  else
     /* POST ERROR. Set up TA1REC fields. DO NOT CONTINUE XFR TO AE09*/

    TA1REC.TA1PGMNM = "OM0P    ";
    TA1REC.TA1MAP = "OM0JM001";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VITEM001";
    TA1REC.TA1TBLKE = " ";
    TA1REC.TA1LOCAT[1] = "OM0J001 ";
    TA1REC.TA1LOCAT[2] = "NEXT-ITE";
    TA1REC.TA1LOCAT[3] = "IO0440  ";
    TA1REC.TA1LOCAT[4] = "SN      ";
    OM0JW01.OM0JWPTN = OP2REC.OP1PARTN; /* order part char*/
    OM0JW01.OM0JWOID = OP2REC.OP1CUOID; /* order number*/
    OM0JW01.OM0JWNID = OP2REC.OP1NORID; /* nike suborder number*/
    XSOPS02();
  end
end // end OM0JS-NEXT-ITEM

// Process Mirror Pool Text recds
Function OM0JS-PRO-VMPOLT01()
   /* -------------------------------------------------------------------*/
   /* Process the Mirror Pool text records.*/
   /* -------------------------------------------------------------------*/

  OM0JS-SEL-VMPOLH01();
  OM0JS-FET-VMPOLH01();

  while (OM0JW01.OM0JW-VMPOLH01-EOF-FL == "N")
    OM0JS-UPD-VMPOLT01();
  end

  OM0JS-CLS-VMPOLH01();

end // end OM0JS-PRO-VMPOLT01

// Get product-IO0560
Function OM0JS-PROD-LOOKUP()
       /* *******************************************************/
       /* * obtains a product record to identify custom logo   **/
       /* *******************************************************/

  SYCREC.SY1STNBR = OP2REC.SY1STNBR;
  SYCREC.SY2CLRID = OP2REC.SY2CLRID;
  SYCREC.XDMCD = OP2REC.XDMCD;
  SYCREC.XGPCD = OP2REC.XGPCD;

  call "IO0560" ("S ", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes};

   /* CANADA 07/11/95*/

  if (SQLCA.VAGen_SQLCODE == 0)
    if (OP1REC.XDZ-DATA-DIST-CD == "CA") /* CANA Canadian order ?*/
      set WSY2000 empty;
      WSY2000.XDR-PROD-REG-CD = "05";
      OM0JS-SEL-SY2000(); /* CANA Call SY2000*/
      if (OM0JW01.OM0JW-WSY2000-FND-FLAG == "Y") /* CANA Record found*/
        SYCREC.XPRCD = WSY2000.XPR-PROD-TYP-CD;
                                   /* CANA Overlay product code*/
      else /* CANA*/
        if (WSY2000.WSY2000-RETURN-CODE == 98) /* CANA Database busy*/
          OMAREC.OMAERR = "Y"; /* CANA Set error flag*/
          converseLib.validationFailed(10); /* CANA Database busy message*/
          exit stack; /* CANA Ezeflo to converse*/
        else /* / * CANA*/
          if (WSY2000.WSY2000-RETURN-CODE == 02) /* CANA Style/color not found*/
            OMAREC.OMAERR = "Y"; /* CANA Set error flag*/
            converseLib.validationFailed(911); /* CANA Style/color not found*/
            exit stack; /* CANA Ezeflo to converse*/
          else
            OMAREC.OMAERR = "Y"; /* CANA Set error flag*/
            converseLib.validationFailed(909); /* CANA database error message*/
            exit stack; /* CANA Ezeflo to converse*/
          end
        end
      end
    else
      if (OP1REC.XGPCD == "03")
        if (COMMAREA.XDVCD == "02" /* userid assigned to europe*/
         || COMMAREA.XDVCD == "03") /* userid assigned to asia*/
          /* continue processing*/
        else
          set WSY2000 empty;
          WSY2000.XDR-PROD-REG-CD = "01";
          OM0JS-SEL-SY2000(); /* Call SY2000*/
          if (OM0JW01.OM0JW-WSY2000-FND-FLAG == "Y") /* Record found*/
            SYCREC.XPRCD = WSY2000.XPR-PROD-TYP-CD;
                                     /* Overlay product code*/
          else
            if (WSY2000.WSY2000-RETURN-CODE == 98) /* Database busy*/
              OMAREC.OMAERR = "Y"; /* Set error flag*/
              converseLib.validationFailed(10); /* Database busy message*/
              exit stack; /* Ezeflo to converse*/
            else
              if (WSY2000.WSY2000-RETURN-CODE == 02) /* Style/color not found*/
                OMAREC.OMAERR = "Y"; /* Set error flag*/
                converseLib.validationFailed(911); /* Style/color not found*/
                exit stack; /* Ezeflo to converse*/
              else
                OMAREC.OMAERR = "Y"; /* Set error flag*/
                converseLib.validationFailed(909); /* database error message*/
                exit stack; /* Ezeflo to converse*/
              end
            end
          end
        end
      end
    end
     /* OK  (all products should have a 'hit')*/
  else
   /* error to stop the xfr to ae08*/
    OMAREC.OMAERR = "Y";
    TA1REC.TA1FUNC = "POST"; /* posting...posting*/
    TA1REC.TA1DBASE = "DPROD "; /* database used*/
    TA1REC.TA1TBLVU = "VCOLOR02"; /* view used*/
    TA1REC.TA1LOCAT[3] = "PROD-LOO"; /* statement group used*/
    TA1REC.TA1LOCAT[4] = "IO0560"; /* iomod used*/
    OM0JW01.OM0JW-FILL-1 = " ";
    OM0JW01.OM0JW-FILL-2 = " ";
    OM0JW01.OM0JW-FILL-3 = " ";
    OM0JW01.SY1STNBR = OP2REC.SY1STNBR;
    OM0JW01.SY2CLRID = OP2REC.SY2CLRID;
    TA1REC.TA1TBLKE = OM0JW01.OM0JWCUK; /* record key used*/
    XSOPS02();
  end

end // end OM0JS-PROD-LOOKUP

// select dprod.vsyreg01
Function OM0JS-SEL-SY2000()

   /* CANADA 06/28/95*/

     /* get the product/region record*/

  set SQLCA empty;
  WSY2000.XGP-GPC-CD = SYCREC.XGPCD;
  WSY2000.SY-STY-NBR = SYCREC.SY1STNBR;
  WSY2000.SY-COLR-CD-ID = SYCREC.SY2CLRID;
  WSY2000.XDM-DIM-CD = SYCREC.XDMCD;
  WSY2000.WSY2000-OPTION-CODE = "S ";
  WSY2000.WSY2000-SUB-OPTION-CODE = "O";

  call "SY2000" (WSY2000) {isNoRefresh = yes, isExternal = yes};

  if (WSY2000.WSY2000-RETURN-CODE == 0)
    OM0JW01.OM0JW-WSY2000-FND-FLAG = "Y";
  else
    if (WSY2000.WSY2000-RETURN-CODE == 98) /* data base is busy*/
      OM0JW01.OM0JW-WSY2000-FND-FLAG = "N";
    else
      if (WSY2000.WSY2000-RETURN-CODE == 02) /* Style/color not found*/
        OM0JW01.OM0JW-WSY2000-FND-FLAG = "N";
      else
        TA1REC.TA1TYPE = "APPL";
        TA1REC.TA1FUNC = "POST";
        TA1REC.TA1PGMNM = "OM0J";
        TA1REC.TA1LOC = "OM0JS-SEL-SY2000";
        OM0JW01.OM0JW-WSY2000-GPC-CD = SYCREC.XGPCD;
        OM0JW01.OM0JW-WSY2000-STY-NBR = SYCREC.SY1STNBR;
        OM0JW01.OM0JW-WSY2000-COLR-CD = SYCREC.SY2CLRID;
        OM0JW01.OM0JW-WSY2000-DIM-CD = SYCREC.XDMCD;
        OM0JW01.OM0JW-WSY2000-PROD-REG-CD = WSY2000.XDR-PROD-REG-CD;
        OM0JW01.OM0JW-WSY2000-RETURN-CD = WSY2000.WSY2000-RETURN-CODE;
        TAEREC.TAEDESC1 = OM0JW-WSY2000-POST-1;
        TAEREC.TAEDESC2 = "RETURN FROM CALL TO SY2000 - BAD RETURN CODE";
        TA1REC.TA1DBASE = "DPROD";
        TA1REC.TA1TBLVU = "SYREG02";
        TA1REC.TA1MAP = "OM0JM001";
        try
          call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
        end
        COMMAREA.CA-USER-WORKAREA-4K = " "; /* on error - clear ws*/
      end
    end
  end
end // end OM0JS-SEL-SY2000

// Select mirror pool headers
Function OM0JS-SEL-VMPOLH01()
   /* -----------------------------------------------------------*/
   /* Select the mirror pool headers*/
   /* -----------------------------------------------------------*/

  set VMPOLH01 empty;

  OM0JW01.OM0JW-VMPOLH01-EOF-FL = "N";
  VMPOLH01.XWH-WHSE-CD = OP1REC.XWHCD;
  VMPOLH01.PK-ORD-STKTF-ID = OP1REC.OP1CUOID;
  VMPOLH01.PK-NIKE-ORD-ID = OP1REC.OP1NORID;
  VMPOLH01.PK-NBR-TIMES-ALOC = -1;

  call "VMPOLH01" ("S1", SQLCA, VMPOLH01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
   /* continue*/
  else
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1LOCAT[3] = "OM0JS-SEL-VMPOLH01";
    TA1REC.TA1LOCAT[4] = "VMPOLH01";
    XSOPS02();
  end

end // end OM0JS-SEL-VMPOLH01

// Add/Update Mirror Pool Text
Function OM0JS-UP-VMPOLT01()
   /* -----------------------------------------------------------*/
   /* Update/add a record to the mirror pool text database.*/
   /* -----------------------------------------------------------*/

  set SQLCA empty;

  if (OM0JW01.OM0JWCAL == "U ") /* Orders tagged this as update*/
    if (OM0JW01.OM0JWSPD[OMASUB] != "TRAF" /* Originally not traffic*/
     && OM0JW01.OM0JWSPD[OMASUB] != "DIST") /* or distribution*/
      OM0JW01.OM0JWCAL = "A "; /* This is new to mirror pool*/
    end
  end

  if (OM0JW01.OM0JWCAL == "U")
    call "VMPOLT01" ("U ", SQLCA, VMPOLT01) {isNoRefresh = yes, isExternal = yes};
  end

  if (OM0JW01.OM0JWCAL == "A")
    call "VMPOLT01" ("A ", SQLCA, VMPOLT01) {isNoRefresh = yes, isExternal = yes};
  end

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(489); /* record already exists*/
    OMAREC.OMAERR = "Y";
    OM0JW01.OM0JWDLC = 0;
    OM0JSSS();
  end

  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(010);
    OMAREC.OMAERR = "Y";
    TA1REC.TA1PGMNM = "OM0J ";
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1MAP = "OM0JM001";
    TA1REC.TA1DBASE = "DPICK";
    TA1REC.TA1TBLVU = "VMPOLT01";
    TA1REC.TA1TBLKE = VMPOLT01.VMPOLT01-KEY;
    TA1REC.TA1LOCAT[2] = "OM0JS-UP-VMPOLT01";
    TA1REC.TA1LOCAT[3] = "OM0J";
    TA1REC.TA1LOCAT[4] = "VMPOLT01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      TA1REC.TA1PGMNM = "OM0J ";
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1MAP = "OM0JM001";
      TA1REC.TA1DBASE = "DPICK";
      TA1REC.TA1TBLVU = "VMPOLT01";
      TA1REC.TA1TBLKE = VMPOLT01.VMPOLT01-KEY;
      TA1REC.TA1LOCAT[2] = "OM0JS-UP-VMPOLT01";
      TA1REC.TA1LOCAT[3] = "OM0J";
      TA1REC.TA1LOCAT[4] = "VMPOLT01";
      XSOPS02();
    end
  end
end // end OM0JS-UP-VMPOLT01

// Update Mirror Pool Header
Function OM0JS-UPD-VMPOLH01()
   /* -------------------------------------------------------------*/
   /* Update mirror pool header record.*/
   /* -------------------------------------------------------------*/

  set SQLCA empty;

  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1PGMNM = "OM0J  ";
  TA1REC.TA1MAP = "OM0JM001";
  TA1REC.TA1DBASE = "DPICK";
  TA1REC.TA1TBLVU = "VMPOLH01";
  TA1REC.TA1TBLKE = VMPOLH01.VMPOLH01-KEY;

  call "VMPOLH01" ("U ", SQLCA, VMPOLH01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(010);
      OMAREC.OMAERR = "Y";
      TA1REC.TA1FUNC = "POST";
      TA1REC.TA1LOCAT[3] = "OM0JS-UPD-VMPOLH01";
      TA1REC.TA1LOCAT[4] = "VMPOLH01";
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1LOCAT[3] = "OM0JS-UPD-VMPOLH01";
      TA1REC.TA1LOCAT[4] = "VMPOLH01";
      XSOPS02();
    end
  end
end // end OM0JS-UPD-VMPOLH01

// Update Mirror Pool Text
Function OM0JS-UPD-VMPOLT01()
   /* ------------------------------------------------------------------*/
   /* Perform mirror pool text deletion.*/
   /* ------------------------------------------------------------------*/

  VMPOLT01.XWH-WHSE-CD = VMPOLH01.XWH-WHSE-CD;
  VMPOLT01.PK-ORD-STKTF-ID = VMPOLH01.PK-ORD-STKTF-ID;
  VMPOLT01.PK-ORD-PART-CHAR = VMPOLH01.PK-ORD-PART-CHAR;
  VMPOLT01.PK-NIKE-ORD-ID = VMPOLH01.PK-NIKE-ORD-ID;

  VMPOLT01.PK-NBR-TIMES-ALOC = VMPOLH01.PK-NBR-TIMES-ALOC;
  VMPOLT01.OP-TXT-REC-TYP = "I";
  VMPOLT01.OP-TXT-REC-SEQ = OP4REC.OP4TRSEQ;
  VMPOLT01.ZZ-CHNG-CNT = OM0JW01.OM0JWICT[OMASUB];

  if (OM0JM001.OP4TXT[OMASUB] == " ") /* Text is empty*/
    if ((OM0JM001.OM0JMDPT[OMASUB] == "TRAF" /* Dept is traffic*/
     || OM0JM001.OM0JMDPT[OMASUB] == "DIST") /* or distribution*/
     || ((OM0JW01.OM0JWSPD[OMASUB] == "TRAF" /* Old Dept is traffic*/
     || OM0JW01.OM0JWSPD[OMASUB] == "DIST")  /* or Old distribution*/
     && OM0JM001.OM0JMDPT[OMASUB] == " "))   /* Dept is removed*/
      if (OM0JW01.OM0JWCAL == "U")
        OM0JS-DEL-VMPOLT01(); /* delete text record*/
      end
    end
  else
    if (OM0JM001.OM0JMDPT[OMASUB] == "TRAF" /* Dept is traffic*/
     || OM0JM001.OM0JMDPT[OMASUB] == "DIST") /* or distribution*/
      VMPOLT01.XND-NIKE-DEPT-ID = OP4REC.XNDCD;
      VMPOLT01.OP-TXT = OP4REC.OP4TXT;
      VMPOLT01.OP-TXT-OVRD-FL = "Y";
      VMPOLT01.ZZ-CHNG-DT = OMAREC.OMAWDT;
      VMPOLT01.ZZ-SDT = OMAREC.OMAWDT;
      VMPOLT01.ZZ-CHNG-HHMM = OM0JW01.OM0JWCTM;
      OM0JS-UP-VMPOLT01(); /* update text record*/
    end
  end

   /* If any text records exist or not, update the special instruction*/
   /* flag on the Mirror Pool Header accordingly.*/

  OM0JS-VMPOLT01-SC();

  if (EPIREC.EPI-PK-ORD-CNT == 0)
    VMPOLH01.OP-SPCL-INST-FL = "N";
  else
    VMPOLH01.OP-SPCL-INST-FL = "Y";
  end

  VMPOLH01.ZZ-CHNG-DT = OMAREC.OMAWDT;
  VMPOLH01.ZZ-CHNG-HHMM = OM0JW01.OM0JWCTM;

  OM0JS-UPD-VMPOLH01();

  OM0JS-FET-VMPOLH01();

end // end OM0JS-UPD-VMPOLT01

// Select count Mirror Pool Text
Function OM0JS-VMPOLT01-SC()
   /* -----------------------------------------------------------*/
   /* Select count the mirror pool text records*/
   /* to determine if any exist, in order to update the special*/
   /* instruction flag on Mirror Pool Header.*/
   /* -----------------------------------------------------------*/

  set VMPOLT01 empty;
  set EPIREC empty;

  VMPOLT01.XWH-WHSE-CD = VMPOLH01.XWH-WHSE-CD;
  VMPOLT01.PK-ORD-STKTF-ID = VMPOLH01.PK-ORD-STKTF-ID;
  VMPOLT01.PK-NIKE-ORD-ID = VMPOLH01.PK-NIKE-ORD-ID;
  VMPOLT01.PK-NBR-TIMES-ALOC = VMPOLH01.PK-NBR-TIMES-ALOC;
  VMPOLT01.OP-TXT-REC-TYP = "I";
  VMPOLT01.XND-NIKE-DEPT-ID = "*";

  EPIREC.EPI-IO-TASK = "T1";
  try
    call "VMPOLT01" (EPIREC, SQLCA, VMPOLT01) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call Successful*/

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100) /* No text records found*/

      if (SQLCA.VAGen_SQLCODE == 100) /* No text records found*/
        EPIREC.EPI-PK-ORD-CNT = 0;
      end

      return;
    end

  end

  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1LOCAT[3] = "OM0JS-VMPOLT01-SC";
  TA1REC.TA1LOCAT[4] = "VMPOLT01";
  XSOPS02();

end // end OM0JS-VMPOLT01-SC

// Check for dcms availability
Function OM0JS-WHSE51-CHECK()

  set WEP1301 empty;

  WEP1301.WEP1301-OPTION-CD = "ED";
  WEP1301.WEP1301-CALLING-PGM-ID = "OM0J";
  WEP1301.WEP1301-XWH-WHSE-CD = OP1REC.XWHCD;
  WEP1301.WEP1301-PK-ORD-STKTF-ID = OP1REC.OP1CUOID;
  WEP1301.WEP1301-PK-NIKE-ORD-ID = OP1REC.OP1NORID;
  WEP1301.WEP1301-XOS-ORD-STAT-CD = OP1REC.XOSCD;
  WEP1301.WEP1301-RETURN-CODE = 99;
  TA1REC.TA1TBLKE = WEP1301.WEP1301-PASS-INFO;

  OM0JS-CALL-EP1300();

  if (WEP1301.WEP1301-RETURN-CODE == 0) /* Status okay*/
    OM0JW01.OM0JW-APPLY-CHG-FL = "Y";
    OM0JW01.OM0JW-DCMS-ORD-FL = "Y";
  else
    OM0JW01.OM0JW-APPLY-CHG-FL = "N";
    OM0JW01.OM0JW-DCMS-ORD-FL = "Y";
    if (OM0JW01.OM0JW-LBL-CHG-FL == "Y")
      if (WEP1301.WEP1301-RETURN-CODE == 2
       || WEP1301.WEP1301-RETURN-CODE == 3
       || WEP1301.WEP1301-RETURN-CODE == 4)
        converseLib.validationFailed(968);
        OMAREC.OMAERR = "Y";
        set OM0JM001.OM0JMDPT[1] cursor;
      end
    end

    if (WEP1301.WEP1301-RETURN-CODE == 1)
      OM0JW01.OM0JW-DCMS-ORD-FL = "N";
    else
      if (WEP1301.WEP1301-RETURN-CODE >= 5)
        TA1REC.TA1DBASE = "DPICK";
        TA1REC.TA1TBLVU = "VMPOLH01";
        TA1REC.TA1LOCAT[3] = "OM0JS-WHSE51-CHECK";
        TA1REC.TA1LOCAT[2] = "EP1300";
        TA1REC.TA1LOCAT[1] = WEP1301.WEP1301-RETURN-CODE;
        XSOPS02();
      end
    end
  end
end // end OM0JS-WHSE51-CHECK

// Transfer to cust contact
Function OM0JS-XFR-AE08()
   /* ************************************************************/
   /* Transfer to the custom logo customer contact screen. Use a*/
   /* composite pass record containing OMWREC with the additional*/
   /* fields needed by AE applications appended to the end.*/
   /* ************************************************************/

  set OPABREC empty; /* Init pass record*/
  OMWREC.OP1GROUP = OP1REC.OP1GROUP; /* Save OP1REC*/
  OPABREC.OPAB-SYS-GRP = OMWREC.OMWSGRP; /* hold OMWREC in pass rec*/

   /* The next fields are needed by AE08.*/

  OPABREC.OP-ORD-PART-CHAR = OP1REC.OP1PARTN;
  OPABREC.OP-CUST-ORD-ID = OP1REC.OP1CUOID;
  OPABREC.OPAB-TO-APPL = "OM0S"; /* return from AE08 to OM0M*/
  COMMAREA.CACURRAP = "AE08"; /* going to AE08*/
  COMMAREA.CATOAP = "    "; /* blank since xsexit isn't used.*/
  COMMAREA.CAFROMAP = "OM0J"; /* comming from OM0J*/

   /* Move pass record to commarea and transfer*/

  COMMAREA.CA-USER-WORKAREA-4K = OPABREC.OPAB-COMMON-REC;
  sysVar.transferName = COMMAREA.CACURRAP;
  transfer to transaction sysVar.transferName passing COMMAREA; /* NON-STANDARD TRANSFER....*/


end // end OM0JS-XFR-AE08

// CHECK FOR PREPACK
Function OM0JS01()

   /* THIS STATEMENT GROUP CHECKS THE PREPACK DATABASE*/
   /* TO SEE IF THE ORDER EXISTS*/

  OMWREC.OMWPKCHF = "N"; /* pack change flag*/
  OMWREC.OMWPPEXF = "N"; /* prepack exists flag*/
  sysVar.arrayIndex = 1;

  if (OP1REC.XGPCD == "03" /* APPAREL ORDER*/
   || OP1REC.XGPCD == "02") /* footwear order*/
    if (OP1REC.XPACD in XPATBL.XPACD /* IF VALID PACK CODE*/
     && XPATBL.XXXSTAT[sysVar.arrayIndex] == "A")
      if (XPATBL.XPASPFFL[sysVar.arrayIndex] == "Y") /* CUST WANTS PREPACK*/
           /* NEXT SENTENCE   SEE IF ORDER IS ON DBASE*/
      else
        return;
      end
    else
      return;
    end
  else
    return;
  end

   /* BUILD THE KEY TO SPECIFIED PREPACK TABLE*/

  set OSNREC empty;
  set SQLCA empty;

  OSNREC.XWHCD = OP1REC.XWHCD; /* WAREHOUSE*/
  OSNREC.OP1PARTN = OP1REC.OP1PARTN; /* PART CHAR*/
  OSNREC.OP1CUOID = OP1REC.OP1CUOID; /* ORDER NUM*/
  OSNREC.OP1NORID = OP1REC.OP1NORID; /* NIKE ORD ID*/

  call "IO5650" ("SE", SQLCA, OSNREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == -811) /* multi records found*/
    OMWREC.OMWPPEXF = "Y"; /* prepack exists flag*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OMWREC.OMWPPEXF = "N"; /* prepack exists flag*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        OMWREC.OMWPKCHF = "Y"; /* reseet pack change flag*/
        OMAREC.OMAERR = "Y";
        converseLib.validationFailed(672); /* prepack db busy try again*/
        return;
      else
        OMAREC.OMAERR = "Y";
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "OM0J    ";
        TA1REC.TA1LOCAT[1] = "SE      ";
        TA1REC.TA1LOCAT[2] = "OM0JS01 ";
        TA1REC.TA1LOCAT[3] = "IO5650  ";
        TA1REC.TA1DBASE = "DORDER  ";
        TA1REC.TA1TBLVU = "VCSPRP01";
        OM0JW01.OM0JWCUK = " ";
        OM0JW01.OM0JWPTN = OP1REC.OP1PARTN;
        OM0JW01.OM0JWOID = OP1REC.OP1CUOID;
        OM0JW01.OM0JWNID = OP1REC.OP1NORID;
        TA1REC.TA1TBLKE = OM0JW01.OM0JWCUK;
        try
          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        end
        COMMAREA.CAMSGA = "PREPACK DB PROBLEMS";
        COMMAREA.CAMSGB = "ORDER MAY HAVE PREPACK CALL USER ANALYST";
        COMMAREA.CACURRAP = "OM0M";
        transfer to program "OM0M" passing COMMAREA;
      end
    end
  end

end // end OM0JS01

// PF2 Pressed Actions
Function OM0JS02()


  if (OMWREC.OMWCHGFL == "Y" /* change mode*/
   || OM0JW01.OM0JWCHG == "Y") /* change allowed in application?*/
    OMAREC.OMAERR = "Y";
    converseLib.validationFailed(2);
    return; /* return immediately with error msg*/
  end


  OM0JW01.OM0JWCHG = "Y"; /* tentatively authorize change*/


  if (COMMAREA.CACHGFL == "Y") /* menu change flag*/
    if (COMMAREA.CACLVL[1] == "Y") /* national allocation manager*/
      OM0JW01.OM0JWCHG = "N"; /* deny change authorization*/
      OMAREC.OMAERR = "Y"; /* set error flag*/
      converseLib.validationFailed(352); /* display not auth message*/
      set OM0JM001.OM0JMCSR cursor;
    end
  else /* menu change flag is no*/
    OM0JW01.OM0JWCHG = "N"; /* deny change authorization*/
    OMAREC.OMAERR = "Y"; /* set error flag*/
    converseLib.validationFailed(352); /* display not auth message*/
    set OM0JM001.OM0JMCSR cursor;
  end


  if (OMAREC.OMAERR == "N")
    if (OMWREC.OMWCHGFL == "N") /* inquiry mode*/
      if (OP1REC.XOSCD in XOSTBL.XOSCD)
        if (XOSTBL.XXXSTAT[sysVar.arrayIndex] == "I" /* active table entry?*/
         || XOSTBL.XOSALWCH[sysVar.arrayIndex] == "N") /* active table entry?*/
          OM0JW01.OM0JWCHG = "N"; /* deny change authorization*/
          OMAREC.OMAERR = "Y"; /* set error flag*/
          converseLib.validationFailed(368); /* display not auth message*/
          set OM0JM001.OM0JMCSR cursor;
        end
      else
        OM0JW01.OM0JWCHG = "N"; /* deny change authorization*/
        OMAREC.OMAERR = "Y"; /* set error flag*/
        converseLib.validationFailed(368); /* display not auth message*/
        set OM0JM001.OM0JMCSR cursor;
      end
    end
  end


  if (OMAREC.OMAERR == "N")
    if (OMWREC.OMWCHGFL == "N") /* inquiry mode*/
      if (COMMAREA.CACHGFL == "Y") /* menu change flag*/
        if (COMMAREA.XSOCD != OP1REC.XSOCD) /* sales office mismatch*/
          OM0JW01.OM0JWCHG = "N"; /* deny change authorization*/
          OMAREC.OMAERR = "Y"; /* set error flag*/
          converseLib.validationFailed(355); /* display not auth message*/
          set OM0JM001.OM0JMCSR cursor;
        end
      end
    end
  end

   /* added for rebooking 10/88 tjf*/
  if (OP1REC.XBDCD == "R")
    converseLib.validationFailed(392);
    OM0JW01.OM0JWCHG = "N";
    OMAREC.OMAERR = "Y";
    set OM0JM001.OM0JMCSR cursor;
  end

  if (OM0JW01.OM0JWCHG == "Y") /* tentative OK still in effect?*/
    OMWREC.OMWPF2CH = "Y"; /* set temporary change flag*/
    OM0JSPI();
    OM0JSDB();
    OM0JW01.OM0JWCHG = "Y";
    OM0JM001.OM0JMTTL = " CHANGE"; /* change heading*/
    set OM0JM001.OM0JMCHG protect, invisible;
    OM0JSEK(); /* enable keys for change*/
  end


end // end OM0JS02

// PF3 Pressed Actions
Function OM0JS03()


  OMWREC.OP1GROUP = OP1REC.OP1GROUP;
  COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
  if (OMWREC.OMWPKCHF == "Y") /* pack change flag*/
    OM0JS01(); /* check for prepack*/
    if (OMWREC.OMWPPEXF == "Y") /* prepack exists*/
      COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
      COMMAREA.CAMSG = "ORDER MAINTAINED - UPDATE PREPACK";
      COMMAREA.CAFROMAP = "OM0J";
      COMMAREA.CACURRAP = "OS0G";
      transfer to program "OS0G" passing COMMAREA;
    else
      COMMAREA.CAFROMAP = "OM0J";
      COMMAREA.CACURRAP = "OM0M";
      transfer to program "OM0M" passing COMMAREA;
    end
  else
    COMMAREA.CAFROMAP = "OM0J";
    COMMAREA.CACURRAP = "OM0M";
    transfer to program "OM0M" passing COMMAREA;
  end


end // end OM0JS03

// PF4 Pressed Actions
Function OM0JS04()


  OMWREC.OP1GROUP = OP1REC.OP1GROUP;
  COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
  COMMAREA.CAFROMAP = "OM0J";
  if (OMWREC.OMWPKCHF == "Y") /* pack change flag*/
    OM0JS01(); /* check if prepack exists*/
    if (OMWREC.OMWPPEXF == "Y") /* prepack exists*/
      COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
      COMMAREA.CAMSG = "ORDER MAINTAINED - UPDATE PREPACK";
      COMMAREA.CACURRAP = "OS0G";
      transfer to program "OS0G" passing COMMAREA;
    else
      COMMAREA.CACURRAP = "MN0M";
      XSPF4();
    end
  else
    COMMAREA.CACURRAP = "MN0M";
    XSPF4();
  end


end // end OM0JS04

// PF13 Pressed Actions
Function OM0JS13()


  if (OM0JW01.OM0JWCHG == "Y") /* changes allowed within application?*/
    OM0JSED(); /* edit department codes*/
  end


  if (OMAREC.OMAERR == "N") /* any errors detected?*/
    if (OM0JW01.OM0JWCHG == "Y") /* changes allowed?*/
      OM0JSUP(); /* update data base*/
    end
    if (OMAREC.OMAERR == "N") /* any errors detected?*/
      OMWREC.OP1GROUP = OP1REC.OP1GROUP;
      COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
      COMMAREA.CAFROMAP = "OM0J";
      COMMAREA.CACURRAP = "OM0H";
      transfer to program "OM0H" passing COMMAREA;
    end
  end


end // end OM0JS13

// PF14 Pressed Actions
Function OM0JS14()


  if (OM0JW01.OM0JWCHG == "Y") /* changes allowed within application?*/
    OM0JSED(); /* edit department codes*/
  end


  if (OMAREC.OMAERR == "N") /* any errors detected?*/
    if (OM0JW01.OM0JWCHG == "Y") /* changes allowed within application?*/
      OM0JSUP(); /* update data base*/
    end
    if (OMAREC.OMAERR == "N") /* any errors detected?*/
      OMWREC.OP1GROUP = OP1REC.OP1GROUP;
      COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
      COMMAREA.CAFROMAP = "OM0J";
      COMMAREA.CACURRAP = "OM0I";
      transfer to program "OM0I" passing COMMAREA;
    end
  end


end // end OM0JS14

// PF16 Pressed Actions
Function OM0JS16()


  if (OM0JW01.OM0JWCHG == "Y") /* changes allowed within application?*/
    OM0JSED(); /* edit department codes*/
  end


  if (OMAREC.OMAERR == "N") /* any errors detected?*/
    if (OM0JW01.OM0JWCHG == "Y") /* changes allowed within application?*/
      OM0JSUP(); /* update data base*/
    end
    if (OMAREC.OMAERR == "N") /* any errors detected?*/
      OMWREC.OP1GROUP = OP1REC.OP1GROUP;
      COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
      COMMAREA.CAFROMAP = "OM0J";
      COMMAREA.CACURRAP = "OM0K";
      transfer to program "OM0K" passing COMMAREA;
    end
  end


end // end OM0JS16

// PF17 Pressed Actions
Function OM0JS17()


  if (OM0JW01.OM0JWCHG == "Y") /* changes allowed within application?*/
    OM0JSED(); /* edit department codes*/
  end


  if (OMAREC.OMAERR == "N") /* any errors detected?*/
    if (OM0JW01.OM0JWCHG == "Y") /* changes allowed within application?*/
      OM0JSUP(); /* update data base*/
    end
    if (OMAREC.OMAERR == "N") /* any errors detected?*/
      OMWREC.OP1GROUP = OP1REC.OP1GROUP;
      COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
      COMMAREA.CAFROMAP = "OM0J";
      COMMAREA.CACURRAP = "OM0L";
      transfer to program "OM0L" passing COMMAREA;
    end
  end


end // end OM0JS17

// PF18 Pressed Actions
Function OM0JS18()


  if (OM0JW01.OM0JWCHG == "Y") /* changes allowed within application?*/
    OM0JSED(); /* edit department codes*/
  end


  if (OMAREC.OMAERR == "N") /* any errors detected?*/
    if (OM0JW01.OM0JWCHG == "Y") /* changes allowed within application?*/
      OM0JSUP(); /* update data base*/
    end
    if (OMAREC.OMAERR == "N") /* any errors detected?*/
      OMWREC.OP1GROUP = OP1REC.OP1GROUP;
      COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
      COMMAREA.CAFROMAP = "OM0J";
      COMMAREA.CACURRAP = "OM0C";
      transfer to program "OM0C" passing COMMAREA; /* transfer to Order Maint Comments*/
    end
  end


end // end OM0JS18

// PF19 Pressed Actions
Function OM0JS19()


  OMWREC.OP1GROUP = OM0JW02.OP1GROUP;
  COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
  COMMAREA.CAFROMAP = "OM0J";
  COMMAREA.CACURRAP = "OM0J";
  transfer to program "OM0J" passing COMMAREA;


end // end OM0JS19

// compute delay time
Function OM0JS99()



       /* ******************************************************/
       /* * this statement group computes the delay time      **/
       /* * (1 second) if dead-lock occurred                  **/
       /* ******************************************************/



       /* if dead lock occurred, delay for 1 second and*/
       /* then retry for 5 times before giving up*/

  OM0JW01.OM0JWFTM = VGVar.currentFormattedTime;
  OM0JW01.OM0JWFSS = OM0JW01.OM0JWFSS + 1;
  OM0JW01.OM0JWTM2 = VGVar.currentFormattedTime;
  while (OM0JW01.OM0JWSS2 < OM0JW01.OM0JWFSS
   && OM0JW01.OM0JWMM2 <= OM0JW01.OM0JWFMM)
    OM0JW01.OM0JWTM2 = VGVar.currentFormattedTime;
  end


   /* ***********************************************************8*/
end // end OM0JS99

// Count Text Data Base
Function OM0JSCN()


  set OP4REC empty;
  set SQLCA empty;
  OP4REC.OP4KEY = OP1REC.OP1KEY;
  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1PGMNM = "OM0J    ";
  TA1REC.TA1MAP = "OM0JM001";
  TA1REC.TA1DBASE = "DORDER  ";
  TA1REC.TA1TBLVU = "VTEXT001";
  OM0JW01.OM0JWPTN = OP4REC.OP1PARTN;
  OM0JW01.OM0JWOID = OP4REC.OP1CUOID;
  OM0JW01.OM0JWNID = OP4REC.OP1NORID;
  OM0JW01.OM0JWTYP = " ";
  OM0JW01.OM0JWSQN = 0;
  TA1REC.TA1TBLKE = OM0JW01.OM0JWCUK;

  call "IO0470" ("SS", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1LOCAT[3] = "OM0JSCN1";
    TA1REC.TA1LOCAT[4] = "IO0470";
    XSOPS02();
  end

  set SQLCA empty;

  OMAREC.OMASUB = 0;
  OMAREC.OMASUB1 = 0;
  while (SQLCA.VAGen_SQLCODE != 100)
    call "IO0470" ("SN", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      if (OP4REC.OP4TRTYP == "I")
        OMAREC.OMASUB = OMAREC.OMASUB + 1;
      else
        if (OP4REC.OP4TRTYP == "L")
          OMAREC.OMASUB1 = OMAREC.OMASUB1 + 1;
        end
      end
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(010); /* database busy, try again*/
        OMAREC.OMAERR = "Y"; /* turn on error flag*/
        TA1REC.TA1FUNC = "POST";
        TA1REC.TA1LOCAT[3] = "OM0JSCN2";
        TA1REC.TA1LOCAT[4] = "IO0470";
        call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
        return;
      else
        if (SQLCA.VAGen_SQLCODE != 100)
          TA1REC.TA1FUNC = "RETN";
          TA1REC.TA1LOCAT[3] = "OM0JSCN3";
          TA1REC.TA1LOCAT[4] = "IO0470";
          XSOPS02();
        end
      end
    end
  end

  call "IO0470" ("CS", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};


  set OP1REC empty;
  set SQLCA empty;
  OP1REC.OP1KEY = OM0JW02.OP1KEY;

  call "IO0430" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1PGMNM = "OM0J    ";
    TA1REC.TA1MAP = "OM0JM001";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VORHDR01";
    TA1REC.TA1LOCAT[3] = "OM0JSCN";
    TA1REC.TA1LOCAT[4] = "IO0430";
    XSOPS02();
  end


  OM0JW01.OP1SPINF = OP1REC.OP1SPINF;
  OM0JW01.OP1SPLBF = OP1REC.OP1SPLBF;


  if (OMAREC.OMASUB == 0)
    if (OP1REC.OP1SPINF == "N")
       /* next sentence*/
    else
      OP1REC.OP1SPINF = "N";
    end
  else
    if (OMAREC.OMASUB > 0)
      if (OP1REC.OP1SPINF == "Y")
         /* next sentence*/
      else
        OP1REC.OP1SPINF = "Y";
      end
    end
  end


  if (OMAREC.OMASUB1 == 0)
    if (OP1REC.OP1SPLBF == "N")
       /* next sentence*/
    else
      OP1REC.OP1SPLBF = "N";
    end
  else
    if (OMAREC.OMASUB1 > 0)
      if (OP1REC.OP1SPLBF == "Y")
         /* next sentence*/
      else
        OP1REC.OP1SPLBF = "Y";
      end
    end
  end


  if (OP1REC.OP1SPINF != OM0JW01.OP1SPINF
   || OP1REC.OP1SPLBF != OM0JW01.OP1SPLBF)
    OM0JSOH();
  end


  if (OM0JW01.OM0JWPCH == "Y") /* pick changes*/
    if (OP1REC.XOSCD == "AL"
     || OP1REC.XOSCD == "PA")
      OM0JSPK(); /* write the picking change record*/
    end
  end


  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value




end // end OM0JSCN

// Data Base Flag Check
Function OM0JSDB()


  set OP1REC empty;
  set SQLCA empty;
  OP1REC.OP1KEY = OM0JW02.OP1KEY;

  call "IO0430" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1PGMNM = "OM0J    ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1MAP = "OM0JM001";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VORHDR01";
    OM0JW01.OM0JWPTN = OP4REC.OP1PARTN;
    OM0JW01.OM0JWOID = OP4REC.OP1CUOID;
    OM0JW01.OM0JWNID = OP4REC.OP1NORID;
    OM0JW01.OM0JWTYP = " ";
    OM0JW01.OM0JWSQN = 0;
    TA1REC.TA1TBLKE = OM0JW01.OM0JWCUK;
    TA1REC.TA1LOCAT[3] = "OM0JSDB";
    TA1REC.TA1LOCAT[4] = "IO0430";
    XSOPS02();
  end


  if (OP1REC.OP1SPINF == "Y"
   || OP1REC.OP1SPLBF == "Y")
    OM0JW01.OM0JWDLC = 0; /* set dead lock counter to zero*/
    OM0JSSS(); /* display instruction/label set*/
  end


   /* ************************************************/
end // end OM0JSDB

// Disable Keys for Inquiry Mode
Function OM0JSDK()


  OMAREC.OMASUB = 1;

  while (OMAREC.OMASUB <= 10) /* set all special instructions*/
    set OM0JM001.OM0JMDPT[OMASUB] protect; /* fields protected to switch*/
    set OM0JM001.OP4TXT[OMASUB] protect; /* to inquiry mode*/
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end


  OMAREC.OMASUB = 1;

  while (OMAREC.OMASUB <= 2) /* set all special labels*/
    set OM0JM001.OM0JMSPL[OMASUB] protect; /* protected for inquiry mode*/
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end


  set OM0JM001.OM0JMCSR cursor, protect;


end // end OM0JSDK

// Delete Record From Data Base
Function OM0JSDR()


  set SQLCA empty;


  call "IO0470" ("D ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(010); /* database busy, try again*/
    OMAREC.OMAERR = "Y";
    TA1REC.TA1PGMNM = "OM0J    ";
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1MAP = "OM0JM001";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VTEXT001";
    OM0JW01.OM0JWPTN = OP4REC.OP1PARTN;
    OM0JW01.OM0JWOID = OP4REC.OP1CUOID;
    OM0JW01.OM0JWNID = OP4REC.OP1NORID;
    OM0JW01.OM0JWTYP = OP4REC.OP4TRTYP;
    OM0JW01.OM0JWSQN = OP4REC.OP4TRSEQ;
    TA1REC.TA1TBLKE = OM0JW01.OM0JWCUK;
    TA1REC.TA1LOCAT[2] = "OM0JSDR";
    TA1REC.TA1LOCAT[3] = "OM0J";
    TA1REC.TA1LOCAT[4] = "IO0470";
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      TA1REC.TA1PGMNM = "OM0J    ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1MAP = "OM0JM001";
      TA1REC.TA1DBASE = "DORDER  ";
      TA1REC.TA1TBLVU = "VTEXT001";
      OM0JW01.OM0JWPTN = OP4REC.OP1PARTN;
      OM0JW01.OM0JWOID = OP4REC.OP1CUOID;
      OM0JW01.OM0JWNID = OP4REC.OP1NORID;
      OM0JW01.OM0JWTYP = OP4REC.OP4TRTYP;
      OM0JW01.OM0JWSQN = OP4REC.OP4TRSEQ;
      TA1REC.TA1TBLKE = OM0JW01.OM0JWCUK;
      TA1REC.TA1LOCAT[2] = "OM0JSDR";
      TA1REC.TA1LOCAT[3] = "OM0J";
      TA1REC.TA1LOCAT[4] = "IO0470";
      XSOPS02();
    end
  end



end // end OM0JSDR

// Edit Department Codes
Function OM0JSED()


  OMAREC.OMASUB = 10;
  while (OMAREC.OMASUB >= 1)
    if (OM0JM001.OM0JMDPT[OMASUB] is modified /* field changed by user?*/
     || OM0JM001.OP4TXT[OMASUB] is modified) 
      if (OM0JM001.OM0JMDPT[OMASUB] == " ")
        if (OM0JM001.OP4TXT[OMASUB] == " ")
          set OM0JM001.OM0JMDPT[OMASUB] normal;
        else
          OMAREC.OMAERR = "Y";
          converseLib.validationFailed(80); /* invalid dept msg*/
          set OM0JM001.OM0JMDPT[OMASUB] cursor, modified, bold;
        end
      else
        if (OM0JM001.OM0JMDPT[OMASUB] in XNDTBL.XNDCD /* dept in dept tbl?*/
         && XNDTBL.XXXSTAT[sysVar.arrayIndex] == "A"  /* active table record?*/
         && XNDTBL.XNDINSTF[sysVar.arrayIndex] == "Y") /* instruction flag to on?*/
          set OM0JM001.OM0JMDPT[OMASUB] normal;
          set OM0JM001.OM0JMDPT[OMASUB] modified;
        else
          OMAREC.OMAERR = "Y";
          converseLib.validationFailed(80); /* invalid department message*/
          set OM0JM001.OM0JMDPT[OMASUB] cursor, modified, bold;
        end
      end
    else
      set OM0JM001.OM0JMDPT[OMASUB] normal;
    end
    OMAREC.OMASUB = OMAREC.OMASUB - 1;
  end


end // end OM0JSED

// Check for Memphis Aprl updates
Function OM0JSEE()
   /* ----------------------------------------------------------*/
   /* Check for Memphis Apparel updates. If record qualifies,*/
   /* call ep1300 to see if order is available for label or*/
   /* instruction changes.*/
   /* ----------------------------------------------------------*/

  OM0JW01.OM0JW-APPLY-CHG-FL = "N";
  OM0JW01.OM0JW-DCMS-ORD-FL = "N";

  if (OM0JW01.OM0JWPCH == "Y" /* At least one record modified*/
   && OP1REC.XWHCD == "51"    /* Memphis Apparel*/
   && (OP1REC.XOSCD == "AL"   /* Order allocated or*/
   || OP1REC.XOSCD == "PA"))  /* order partially allocated*/

    OMAREC.OMASUB = 10;
    while (OMAREC.OMASUB >= 1
     && OM0JW01.OM0JW-DCMS-ORD-FL == "N")

      if ((OM0JM001.OM0JMDPT[OMASUB] is modified
       || OM0JM001.OP4TXT[OMASUB] is modified))

        if (OM0JM001.OM0JMDPT[OMASUB] == "TRAF" /* New dept is a traffic*/
         || OM0JM001.OM0JMDPT[OMASUB] == "DIST" /* or distribution dept*/
         || OM0JW01.OM0JWSPD[OMASUB] == "TRAF"  /* Old dept was a traffic*/
         || OM0JW01.OM0JWSPD[OMASUB] == "DIST") /* or distribution dept*/

          OM0JS-WHSE51-CHECK();

        end
      end
      OMAREC.OMASUB = OMAREC.OMASUB - 1;
    end

    OMAREC.OMASUB = 1;
    if (OM0JW01.OM0JW-LBL-CHG-FL == "Y")
      while (OMAREC.OMASUB <= 2
       && OM0JW01.OM0JW-DCMS-ORD-FL == "N")
        if (OM0JM001.OM0JMSPL[OMASUB] is modified)

          OM0JS-WHSE51-CHECK();

        end
        OMAREC.OMASUB = OMAREC.OMASUB + 1;
      end
    end
  end
end // end OM0JSEE

// Enable Keys to Allow Changes
Function OM0JSEK()


  OMAREC.OMASUB = 1;

  while (OMAREC.OMASUB <= 10) /* set all special instructions*/
    set OM0JM001.OM0JMDPT[OMASUB] normal; /* fields unprotected to allow*/
    set OM0JM001.OP4TXT[OMASUB] normal; /* data entry/modification*/
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end


  OMAREC.OMASUB = 1;

  while (OMAREC.OMASUB <= 2) /* set all special labels to*/
    set OM0JM001.OM0JMSPL[OMASUB] normal;
                                   /* unprotect to allow data entry*/
    OMAREC.OMASUB = OMAREC.OMASUB + 1; /* data modification*/
  end


  set OM0JM001.OM0JMDPT[1] cursor;


end // end OM0JSEK

// Enter Key Pressed Actions
Function OM0JSEN()


  if (OM0JW01.OM0JWCHG == "Y") /* were changes authorized?*/
    OM0JSED(); /* edit department codes*/
    OM0JSEE(); /* check for whse 51 changes*/
  end


  if (OMAREC.OMAERR == "N") /* any errors detected?*/
    if (OM0JW01.OM0JWCHG == "Y") /* were changes authorized?*/
      OM0JSUP(); /* update data base*/
    end
    if (OMAREC.OMAERR == "N") /* any errors detected?*/
      OMWREC.OP1GROUP = OP1REC.OP1GROUP;
      COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
      if (OMWREC.OMWEOF == "Y")
        if (OMWREC.OMWPKCHF == "Y")
          OM0JS01(); /* check for prepack*/
          if (OMAREC.OMAERR == "Y")
            return;
          end
          if (OMWREC.OMWPPEXF == "Y") /* prepack exists*/
            COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
            COMMAREA.CAMSG = "ORDER MAINTAINED - UPDATE PREPACK";
            COMMAREA.CAFROMAP = "OM0J";
            COMMAREA.CACURRAP = "OS0G";
            transfer to program "OS0G" passing COMMAREA;
          else
            COMMAREA.CAFROMAP = "OM0J";
            COMMAREA.CACURRAP = "OM0M";
            transfer to program "OM0M" passing COMMAREA; /* transfer to Master Menu*/
          end
        else
          COMMAREA.CAFROMAP = "OM0J";
          COMMAREA.CACURRAP = "OM0M";
          transfer to program "OM0M" passing COMMAREA; /* transfer to Order Maintenance Master Menu*/
        end
      else
        if (OMWREC.OMWOPTN == 1)
          COMMAREA.CAFROMAP = "OM0J";
          COMMAREA.CACURRAP = "OM0S";
          transfer to program "OM0S" passing COMMAREA; /* transfer to Product Summary*/
        else
          if (OMWREC.OMWOPTN == 2
           || OMWREC.OMWOPTN == 4)
            if (OMWREC.OMWCHGFL == "Y")
              COMMAREA.CAFROMAP = "OM0J";
              COMMAREA.CACURRAP = "OM0Q";
              transfer to program "OM0Q" passing COMMAREA; /* transfer to*/
            else
              COMMAREA.CAFROMAP = "OM0J";
              COMMAREA.CACURRAP = "OM0O";
              transfer to program "OM0O" passing COMMAREA; /* transfer to*/
            end
          else
            if (OMWREC.OMWOPTN == 5)
              if (OMWREC.OMWCHGFL == "Y")
                COMMAREA.CAFROMAP = "OM0J";
                COMMAREA.CACURRAP = "OM0P";
                transfer to program "OM0P" passing COMMAREA; /* transfer to*/
              else
                COMMAREA.CAFROMAP = "OM0J";
                COMMAREA.CACURRAP = "OM0O";
                transfer to program "OM0O" passing COMMAREA; /* transfer to*/
              end
            else
              if (OMWREC.OMWOPTN == 6)
                COMMAREA.CAFROMAP = "OM0J";
                COMMAREA.CACURRAP = "OM0A";
                transfer to program "OM0A" passing COMMAREA; /* transfer to*/
              else
                if (OMWREC.OMWPKCHF == "Y") /* pack change flag*/
                  OM0JS01(); /* check for prepack*/
                  if (OMWREC.OMWPPEXF == "Y")
                    COMMAREA.CA-USER-WORKAREA-4K = OMWREC.OMWSGRP;
                    COMMAREA.CAMSG = "ORDER MAINTAINED - UPDATE PREPACK";
                    COMMAREA.CAFROMAP = "OM0J";
                    COMMAREA.CACURRAP = "OS0G";
                    transfer to program "OS0G" passing COMMAREA;
                  else
                    COMMAREA.CAFROMAP = "OM0J";
                    COMMAREA.CACURRAP = "OM0M";
                    transfer to program "OM0M" passing COMMAREA; /* transfer to OM Master Menu*/
                  end
                else
                  COMMAREA.CAFROMAP = "OM0J";
                  COMMAREA.CACURRAP = "OM0M";
                  transfer to program "OM0M" passing COMMAREA; /* transfer to OM Master Menu*/
                end
              end
            end
          end
        end
      end
    end
  end


end // end OM0JSEN

// Map Initialization
Function OM0JSMI()


  converseLib.clearScreen();
  set OM0JM001 initial; /* initializes map*/


  OMWREC.OMWORDN = OP1REC.OP1CUOID; /* this series of instructions*/
  OMWREC.OMWSEP1 = ".";
  OMWREC.OMWSORDN = OP1REC.OP1NORID; /* formats the order number*/


  OMAREC.OMACUCO = OP1REC.KUCCOID; /* this series of instructions*/
  OMAREC.OMASEP1 = ".";
  OMAREC.OMACUSR = OP1REC.KUMSTRID; /* formats the customer number*/
  OMAREC.OMASEP2 = ".";
  OMAREC.OMACUDP = OP1REC.XNXCD;


  OM0JM001.OPMDT = VGVar.currentShortGregorianDate;
  OM0JM001.OM0JMOID = OMWREC.OMWORD; /* move in order number*/
  OM0JM001.OM0JMCID = OMAREC.OMACUNO; /* move in customer number*/
  OM0JM001.KUMSTRNM = OMWREC.KUMSTRNM; /* move in store name*/


  OMAREC.OMASUB = 1;
  OMAREC.OMASUB1 = 1;
  while (OMAREC.OMASUB1 <= 30 /* until all 30 slots have been filled*/
   && XNDTBL.XNDCD[OMASUB] != "99  ") /* until end of table*/
    if (XNDTBL.XNDINSTF[OMASUB] == "Y") /* instruction flag set to on*/
      OM0JM001.XNDCD[OMASUB1] = XNDTBL.XNDCD[OMASUB];
      OMAREC.OMASUB1 = OMAREC.OMASUB1 + 1;
    end
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end


  OMAREC.OMASUB = 3;
  while (OMAREC.OMASUB <= 6)
                                   /* special labels number 3 through 6 are*/
    set OM0JM001.OM0JMLNO[OMASUB] protect, invisible; /* dark during Phase 1.*/
    set OM0JM001.OM0JMSPL[OMASUB] protect, invisible;
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end


  if (OMWREC.OMWCHGFL == "N")
    OM0JM001.OM0JMTTL = "INQUIRY";
    OM0JSDK(); /* disable keys - no changes allowed*/
  else
    OM0JM001.OM0JMTTL = " CHANGE";
    set OM0JM001.OM0JMCHG protect, invisible; /* darken 'pf2: change' on map*/
  end


end // end OM0JSMI

// Update Order Header
Function OM0JSOH()


  set SQLCA empty;

  call "IO0430" ("U ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1PGMNM = "OM0J    ";
    TA1REC.TA1MAP = "OM0JM001";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VORHDR01";
    TA1REC.TA1LOCAT[1] = "U";
    TA1REC.TA1LOCAT[2] = "OM0JS0H ";
    TA1REC.TA1LOCAT[3] = "OM0J";
    TA1REC.TA1LOCAT[4] = "IO0430";
    OM0JW01.OM0JWPTN = OP1REC.OP1PARTN;
    OM0JW01.OM0JWOID = OP1REC.OP1CUOID;
    OM0JW01.OM0JWNID = OP1REC.OP1NORID;
    OM0JW01.OM0JWTYP = " ";
    OM0JW01.OM0JWSQN = 0;
    TA1REC.TA1TBLKE = OM0JW01.OM0JWCUK;
    XSOPS02();
  end


end // end OM0JSOH

// Program Initialization
Function OM0JSPI()


  set OM0JW01 empty;
  set OMBREC empty;
  OM0JW01.OM0JWPCH = "N"; /* init pick change flag*/


  set OM0JW02 empty;
  OP1REC.OP1GROUP = OMWREC.OP1GROUP;
  OM0JW02.OP1GROUP = OMWREC.OP1GROUP;


  OM0JSMI(); /* initialize map*/


  OMAREC.OMAERR = "N";
  OMWREC.OMWPF2CH = "N";
  OM0JW01.OM0JWCFL = "N";
  if (OMWREC.OMWOPTN == 9)
    OMWREC.OMWEOF = "Y";
  end


  OMAREC.OMAWDT = VGVar.currentShortGregorianDate;
  if (OMAREC.OMAWYY > 56)
    OMAREC.OMAWCC = 19; /* set up date for db2 call*/
  else
    OMAREC.OMAWCC = 20;
  end


  OM0JW01.OM0JWFTM = VGVar.currentFormattedTime;
  OM0JW01.OM0JWCHH = OM0JW01.OM0JWFHH; /* set up time for db2 call*/
  OM0JW01.OM0JWCMM = OM0JW01.OM0JWFMM;


  if (OMWREC.OMWCHGFL == "N")
    OM0JW01.OM0JWCHG = "N"; /* changes are not allowed*/
  else
    OM0JW01.OM0JWCHG = "Y"; /* changes are allowed*/
    if (COMMAREA.CACHGFL == "Y" /* menu change flag*/
     && COMMAREA.CACLVL[1] == "Y") /* NATIONAL ALLOCATION MANAGER*/
      OM0JW01.OM0JWCHG = "N"; /* deny change authorization*/
      OM0JM001.OM0JMTTL = "INQUIRY";
      OM0JSDK(); /* disable keys - no changes allowed*/
    end
  end

  OM0JW01.OM0JW-BULK-FL = "N"; /* init bulk order flag*/
  if (OP1REC.XBDCD in XBDTBL.XBDCD)
    if (XBDTBL.XBDBKOFL[sysVar.arrayIndex] == "Y")
      OM0JW01.OM0JW-BULK-FL = "Y"; /* this is a bulk*/
    end
  end

end // end OM0JSPI

// create picking chg record
Function OM0JSPK()
    /* *****************************************************/
    /* *  create a record to be fed to the picking system **/
    /* *  whenever a chg is made to an order that affects **/
    /* *  picking.***/
    /* *****************************************************/



  OM0JW01.OM0JWWTM = VGVar.currentFormattedTime;

  OM0JW01.OM0JWTHH = OM0JW01.OM0JWWHH;
  OM0JW01.OM0JWTMM = OM0JW01.OM0JWWMM;
  OM0JW01.OM0JWTSS = OM0JW01.OM0JWWSS;
  OMBREC.ZZHHMMSS = OM0JW01.OM0JWTIM;

  OMAREC.OMASUB = 1;

  while (OMAREC.OMASUB <= 10)
    OMBREC.XNDCD[OMASUB] = OM0JM001.OM0JMDPT[OMASUB]; /* move dept code*/
    OMBREC.OP4TXT[OMASUB] = OM0JM001.OP4TXT[OMASUB]; /* move instructions*/
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end


   /* tcs include begin (04/08/98) - bl948*/
  OMAREC.OMAWDT = VGVar.currentShortGregorianDate;
  if (OMAREC.OMAWYY > 56)
    OMAREC.OMAWCC = 19;
  else
    OMAREC.OMAWCC = 20;
  end
  OP4REC.ZZZCHGDT = OMAREC.OMAWDT;

   /* tcs include end   (04/08/98) - bl948*/

  OMBREC.OP4TXT[11] = OM0JM001.OM0JMSPL[1];
  OMBREC.OP4TXT[12] = OM0JM001.OM0JMSPL[2];
  OMBREC.XWHCD = OP1REC.XWHCD;
  OMBREC.OP1CUOID = OP1REC.OP1CUOID;
  OMBREC.OP1PARTN = OP1REC.OP1PARTN;
  OMBREC.OP1NORID = OP1REC.OP1NORID;
  OMBREC.ZZZSDT = OP4REC.ZZZCHGDT;
  OMBREC.OMBMRTYP = "J";

  SQLCA.VAGen_SQLCODE = 0;
  call "IO1680" ("A ", SQLCA, OMBREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "OM0J    ";
    TA1REC.TA1MAP = "OM0JM001";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VOPKKM01";
    TA1REC.TA1LOCAT[3] = "OM0KS20";
    TA1REC.TA1LOCAT[4] = "IO01680";
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    transfer to transaction "MN0M" passing COMMAREA;
  end


  if (OM0JW01.OM0JW-APPLY-CHG-FL == "Y")

    /* Update to the Mirror Pool occurs only once*/
    /* for all label changes.*/

    if (OM0JW01.OM0JW-LBL-CHG-FL == "Y")

      set WEP1301 empty;

      WEP1301.WEP1301-OPTION-CD = "U";
      WEP1301.WEP1301-CALLING-PGM-ID = "OM0J";
      WEP1301.WEP1301-XXX-USER-ID = COMMAREA.CAUSERID;
      WEP1301.WEP1301-XWH-WHSE-CD = OP1REC.XWHCD;
      WEP1301.WEP1301-PK-ORD-STKTF-ID = OP1REC.OP1CUOID;
      WEP1301.WEP1301-PK-NIKE-ORD-ID = OP1REC.OP1NORID;
      WEP1301.WEP1301-XOS-ORD-STAT-CD = OP1REC.XOSCD;
      WEP1301.WEP1301-OP-TXT11 = OM0JM001.OM0JMSPL[1];
      WEP1301.WEP1301-OP-TXT12 = OM0JM001.OM0JMSPL[2];
      WEP1301.WEP1301-LBL-CHG-FL = OM0JW01.OM0JW-LBL-CHG-FL;
      WEP1301.WEP1301-TODAYS-DATE = OMAREC.OMAWDT;
      WEP1301.WEP1301-CURRENT-TIME = OM0JW01.OM0JWCTM;
      WEP1301.WEP1301-RETURN-CODE = 99;
      TA1REC.TA1TBLKE = WEP1301.WEP1301-PASS-INFO;

      OM0JS-CALL-EP1300();

      if (WEP1301.WEP1301-RETURN-CODE >= 5)
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "OM0J  ";
        TA1REC.TA1MAP = "OM0JM001";
        TA1REC.TA1DBASE = "DPICK";
        TA1REC.TA1TBLVU = "VMPOLH01";
        TA1REC.TA1LOCAT[3] = "OM0JSUL";
        TA1REC.TA1LOCAT[2] = "EP1300";
        TA1REC.TA1LOCAT[1] = WEP1301.WEP1301-RETURN-CODE;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        transfer to transaction "MN0M" passing COMMAREA;
      end
    end

  end


end // end OM0JSPK

// Setup Instruction Fields
Function OM0JSSI()


  OM0JM001.OP4TXT[OMASUB] = OP4REC.OP4TXT;
  OM0JM001.OM0JMDPT[OMASUB] = OP4REC.XNDCD;
  OM0JW01.OM0JWSPD[OMASUB] = OP4REC.XNDCD;
  OM0JW01.OM0JWSTY[OMASUB] = OP4REC.OP4TRTYP;
  OM0JW01.OM0JWICT[OMASUB] = OP4REC.ZZZCHGCT;
  OM0JW01.OM0JWSPI[OMASUB] = OP4REC.OP4TRSEQ;
  OM0JW01.OM0JWISQ = OP4REC.OP4TRSEQ;
  OM0JM001.OP4TXTOF[OMASUB] = OP4REC.OP4TXTOF;
  OM0JW01.OM0JWILL = OMAREC.OMASUB;
  OP4REC.OP4TXT = " ";
  OP4REC.XNDCD = " ";
  OP4REC.OP4TRSEQ = 0;
  OMAREC.OMASUB = OMAREC.OMASUB + 1;


end // end OM0JSSI

// Setup Special Label Fields
Function OM0JSSL()


  OM0JM001.OM0JMSPL[OMASUB1] = OP4REC.OP4TXT;
  OM0JW01.OM0JWLCT[OMASUB1] = OP4REC.ZZZCHGCT;
  OM0JW01.OM0JWSPL[OMASUB1] = OP4REC.OP4TRSEQ;
  OM0JW01.OM0JWLSQ = OP4REC.OP4TRSEQ;
  OM0JW01.OM0JWLLL = OMAREC.OMASUB1;
  OP4REC.OP4TXT = " ";
  OP4REC.OP4TRSEQ = 0;
  OMAREC.OMASUB1 = OMAREC.OMASUB1 + 1;


end // end OM0JSSL

// Save Modified Flags
Function OM0JSSM()


  OMAREC.OMASUB = 1;
  OM0JW01.OM0JW-LBL-CHG-FL = "N";

  while (OMAREC.OMASUB <= 10)
    if (OM0JM001.OM0JMDPT[OMASUB] is modified)
      set OM0JM001.OM0JMDPT[OMASUB] modified;
      OM0JW01.OM0JWPCH = "Y"; /* turn on pick chg flag*/
    end
    if (OM0JM001.OP4TXT[OMASUB] is modified)
      set OM0JM001.OP4TXT[OMASUB] modified;
      OM0JW01.OM0JWPCH = "Y"; /* turn on pick chg flag*/
    end
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end


  OMAREC.OMASUB = 1;

  while (OMAREC.OMASUB <= 2)
    if (OM0JM001.OM0JMSPL[OMASUB] is modified)
      set OM0JM001.OM0JMSPL[OMASUB] modified;
      OM0JW01.OM0JWPCH = "Y"; /* turn on pick chg flag*/
      OM0JW01.OM0JW-LBL-CHG-FL = "Y";
    end
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end


end // end OM0JSSM

// Select Next Instruction/Label
Function OM0JSSN()


  set OP4REC empty;
  OP4REC.OP4KEY = OP1REC.OP1KEY;
  TA1REC.TA1PGMNM = "OM0J    ";
  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1MAP = "OM0JM001";
  TA1REC.TA1DBASE = "DORDER  ";
  TA1REC.TA1TBLVU = "VTEXT001";
  OM0JW01.OM0JWPTN = OP4REC.OP1PARTN;
  OM0JW01.OM0JWOID = OP4REC.OP1CUOID;
  OM0JW01.OM0JWNID = OP4REC.OP1NORID;
  OM0JW01.OM0JWTYP = " ";
  OM0JW01.OM0JWSQN = 0;
  TA1REC.TA1TBLKE = OM0JW01.OM0JWCUK;

  set SQLCA empty;

  OMAREC.OMASUB = 1;
  OMAREC.OMASUB1 = 1;
  while (SQLCA.VAGen_SQLCODE != 100)
    call "IO0470" ("SN", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      if (OP4REC.OP4TRTYP == "I")
        OM0JSSI();
      else
        if (OP4REC.OP4TRTYP == "L")
          OM0JSSL();
        end
      end
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        if (OM0JW01.OM0JWDLC <= 2)
          TA1REC.TA1FUNC = "POST";
          TA1REC.TA1LOCAT[3] = "OM0J-1";
          TA1REC.TA1LOCAT[4] = "IO0470";
          call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
          OM0JS99(); /* delay for 1 sec*/
          OM0JSSS(); /* try again*/
          return;
        else
          TA1REC.TA1FUNC = "RETN";
          TA1REC.TA1LOCAT[3] = "OM0J-2";
          TA1REC.TA1LOCAT[4] = "IO0470";
          XSOPS02();
        end
      else
        if (SQLCA.VAGen_SQLCODE != 100)
          TA1REC.TA1FUNC = "RETN";
          TA1REC.TA1LOCAT[3] = "OM0J-3";
          TA1REC.TA1LOCAT[4] = "IO0470";
          XSOPS02();
        end
      end
    end
  end


  call "IO0470" ("CS", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};


  OMAREC.OMASUB = 1;
  while (OMAREC.OMASUB <= 10)
    if (OM0JM001.OP4TXTOF[OMASUB] == "Y")
      OM0JM001.OP4TXTOF[OMASUB] = "*";
    else
      OM0JM001.OP4TXTOF[OMASUB] = " ";
    end
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end


end // end OM0JSSN

// Select Set of Instructs/Labels
Function OM0JSSS()


  OM0JW01.OM0JWDLC = OM0JW01.OM0JWDLC + 1; /* increment dead lock counter*/
  set OP4REC empty;
  set SQLCA empty;
  OP4REC.OP4KEY = OP1REC.OP1KEY;

  call "IO0470" ("SS", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1PGMNM = "OM0J    ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1MAP = "OM0JM001";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VTEXT001";
    OM0JW01.OM0JWPTN = OP4REC.OP1PARTN;
    OM0JW01.OM0JWOID = OP4REC.OP1CUOID;
    OM0JW01.OM0JWNID = OP4REC.OP1NORID;
    OM0JW01.OM0JWTYP = " ";
    OM0JW01.OM0JWSQN = 0;
    TA1REC.TA1TBLKE = OM0JW01.OM0JWCUK;
    TA1REC.TA1LOCAT[3] = "OM0J";
    TA1REC.TA1LOCAT[4] = "IO0470";
    XSOPS02();
  end

  OM0JSSN(); /* process cursor*/



end // end OM0JSSS

// Update Special Instruction
Function OM0JSUI()


  set OP4REC empty;
  OP4REC.OP4KEY = OP1REC.OP1KEY;
  OP4REC.OP4TRTYP = "I";
  if (OMAREC.OMASUB <= OM0JW01.OM0JWILL)
    OP4REC.OP4TRSEQ = OM0JW01.OM0JWSPI[OMASUB];
    OP4REC.ZZZCHGCT = OM0JW01.OM0JWICT[OMASUB];
    OM0JW01.OM0JWCAL = "U";
  else
    OM0JW01.OM0JWISQ = OM0JW01.OM0JWISQ + 1;
    OP4REC.OP4TRSEQ = OM0JW01.OM0JWISQ;
    OP4REC.ZZZCHGCT = 0;
    OM0JW01.OM0JWCAL = "A";
  end

  if (OM0JM001.OP4TXT[OMASUB] == " ")
    if (OM0JW01.OM0JWCAL == "U")
      OM0JSDR(); /* delete text record*/
    end
  else
    OP4REC.XNDCD = OM0JM001.OM0JMDPT[OMASUB];
    OP4REC.OP4TXT = OM0JM001.OP4TXT[OMASUB];
    OP4REC.OP4TXTOF = "Y";
    OP4REC.ZZZCHGDT = OMAREC.OMAWDT;
    OP4REC.ZZZCHGTM = OM0JW01.OM0JWCTM;
    OM0JSUR(); /* update text record*/
    if (OMAREC.OMAERR == "N")
      OP1REC.OP1SPINF = "Y";
    end
  end

  if (OM0JW01.OM0JW-DCMS-ORD-FL == "Y" /* Qualifying whse 51 rcd*/
   && OMAREC.OMAERR == "N")           

    if ((OM0JM001.OM0JMDPT[OMASUB] == "TRAF" 
     || OM0JM001.OM0JMDPT[OMASUB] == "DIST") /* Added Dept TRAF/DIST*/
     || ((OM0JW01.OM0JWSPD[OMASUB] == "TRAF" 
     || OM0JW01.OM0JWSPD[OMASUB] == "DIST")  
     && OM0JM001.OM0JMDPT[OMASUB] == " "))   /* Deleted Dept TRAF/DIST*/

      OM0JS-PRO-VMPOLT01(); /* Process record for mirror pool*/

    end
  end

end // end OM0JSUI

// Update Labels on Data Base
Function OM0JSUL()


  set OP4REC empty;
  OP4REC.OP4KEY = OP1REC.OP1KEY;
  OP4REC.OP4TRTYP = "L";
  if (OMAREC.OMASUB1 <= OM0JW01.OM0JWLLL)
    OP4REC.OP4TRSEQ = OM0JW01.OM0JWSPL[OMASUB1];
    OP4REC.ZZZCHGCT = OM0JW01.OM0JWLCT[OMASUB1];
    OM0JW01.OM0JWCAL = "U";
  else
    OM0JW01.OM0JWLSQ = OM0JW01.OM0JWLSQ + 1;
    OP4REC.OP4TRSEQ = OM0JW01.OM0JWLSQ;
    OP4REC.OP4TXTOF = "Y";
    OP4REC.ZZZCHGCT = 0;
    OM0JW01.OM0JWCAL = "A";
  end
  if (OM0JM001.OM0JMSPL[OMASUB1] == " ")
    if (OM0JW01.OM0JWCAL == "U")
      OM0JSDR(); /* delete text record*/
    end
  else
    OP4REC.OP4TXT = OM0JM001.OM0JMSPL[OMASUB1];
    OP4REC.OP4TXTOF = "Y";
    OP4REC.ZZZCHGDT = OMAREC.OMAWDT;
    OP4REC.ZZZCHGTM = OM0JW01.OM0JWCTM;
    OM0JSUR(); /* update text record*/
    OP1REC.OP1SPLBF = "Y";
  end


end // end OM0JSUL
// Update Text Data Base
Function OM0JSUP()



  OMAREC.OMASUB = 1;

  while (OMAREC.OMASUB <= 10)
    if (OM0JM001.OP4TXT[OMASUB] is modified
     || OM0JM001.OM0JMDPT[OMASUB] is modified)
      OM0JSUI();
      if (OMAREC.OMAERR == "N")
        OM0JW01.OM0JWCFL = "Y";
      else
        OMAREC.OMASUB = 10; /* exit while loop if error*/
      end
    end
    if (OM0JM001.OP4TXT[OMASUB] == " ")
      OM0JW01.OM0JWCTI = OM0JW01.OM0JWCTI + 1;
    end
    OMAREC.OMASUB = OMAREC.OMASUB + 1;
  end


  if (OMAREC.OMAERR == "N")
    OMAREC.OMASUB1 = 1;

    while (OMAREC.OMASUB1 <= 2)
      if (OM0JM001.OM0JMSPL[OMASUB1] is modified)
        OM0JSUL();
        if (OMAREC.OMAERR == "N")
          OM0JW01.OM0JWCFL = "Y";
        else
          OMAREC.OMASUB1 = 2; /* exit while loop if error*/
        end
      end
      if (OM0JM001.OM0JMSPL[OMASUB1] == " ")
        OM0JW01.OM0JWCTL = OM0JW01.OM0JWCTL + 1;
      end
      OMAREC.OMASUB1 = OMAREC.OMASUB1 + 1;
    end
  end

  if (OMAREC.OMAERR == "N")
    OM0JSCN();
  end



end // end OM0JSUP

// Add/Update Record on Data Base
Function OM0JSUR()


  set SQLCA empty;

  if (OM0JW01.OM0JWCAL == "U")
    call "IO0470" ("U ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (OM0JW01.OM0JWCAL == "A")
    call "IO0470" ("A ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(489); /* record already exists*/
    OMAREC.OMAERR = "Y";
    OM0JW01.OM0JWDLC = 0; /* set deadlock counter to zero*/
    OM0JSSS(); /* select set of instructions*/
  end


  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(010); /* database busy, try again*/
    OMAREC.OMAERR = "Y";
    TA1REC.TA1PGMNM = "OM0J    ";
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1MAP = "OM0JM001";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VTEXT001";
    OM0JW01.OM0JWPTN = OP4REC.OP1PARTN;
    OM0JW01.OM0JWOID = OP4REC.OP1CUOID;
    OM0JW01.OM0JWNID = OP4REC.OP1NORID;
    OM0JW01.OM0JWTYP = OP4REC.OP4TRTYP;
    OM0JW01.OM0JWSQN = OP4REC.OP4TRSEQ;
    TA1REC.TA1TBLKE = OM0JW01.OM0JWCUK;
    TA1REC.TA1LOCAT[2] = "OM0JSUR";
    TA1REC.TA1LOCAT[3] = "OM0J";
    TA1REC.TA1LOCAT[4] = "IO0470";
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      TA1REC.TA1PGMNM = "OM0J    ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1MAP = "OM0JM001";
      TA1REC.TA1DBASE = "DORDER  ";
      TA1REC.TA1TBLVU = "VTEXT001";
      OM0JW01.OM0JWPTN = OP4REC.OP1PARTN;
      OM0JW01.OM0JWOID = OP4REC.OP1CUOID;
      OM0JW01.OM0JWNID = OP4REC.OP1NORID;
      OM0JW01.OM0JWTYP = OP4REC.OP4TRTYP;
      OM0JW01.OM0JWSQN = OP4REC.OP4TRSEQ;
      TA1REC.TA1TBLKE = OM0JW01.OM0JWCUK;
      TA1REC.TA1LOCAT[2] = "OM0JSUR";
      TA1REC.TA1LOCAT[3] = "OM0J";
      TA1REC.TA1LOCAT[4] = "IO0470";
      XSOPS02();
    end
  end




end // end OM0JSUR

Record OM0JW01 type basicRecord
  10 OM0JWSPI OM0JWSPI [10] ; 
  10 OM0JWSPD OM0JWSPD [10] ; 
  10 OM0JWSTY OM0JWSTY [10] ; 
  10 OM0JWICT OM0JWICT [10] ; 
  10 OM0JWSPL OM0JWSPL [2] ; 
  10 OM0JWLCT OM0JWLCT [2] ; 
  10 OM0JWISQ OM0JWISQ ; 
  10 OM0JWLSQ OM0JWLSQ ; 
  10 OM0JWILL OM0JWILL ; 
  10 OM0JWLLL OM0JWLLL ; 
  10 OM0JWCAL OM0JWCAL ; 
  10 OM0JWCHG OM0JWCHG ; 
  10 OM0JWCFL OM0JWCFL ; 
  10 OM0JWDLC OM0JWDLC ; 
  10 OM0JWFTM OM0JWFTM ; 
    15 OM0JWFHH OM0JWFHH ; 
    15 * char(1) ; 
    15 OM0JWFMM OM0JWFMM ; 
    15 * char(1) ; 
    15 OM0JWFSS OM0JWFSS ; 
  10 OM0JWTM2 OM0JWTM2 ; 
    15 OM0JWHH2 OM0JWHH2 ; 
    15 * char(1) ; 
    15 OM0JWMM2 OM0JWMM2 ; 
    15 * char(1) ; 
    15 OM0JWSS2 OM0JWSS2 ; 
  10 OM0JWCTM OM0JWCTM ; 
    15 OM0JWCHH OM0JWCHH ; 
    15 OM0JWCMM OM0JWCMM ; 
  10 OM0JWCTI OM0JWCTI ; 
  10 OM0JWCTL OM0JWCTL ; 
  10 OM0JWPCH OM0JWPCH ; 
  10 OM0JWWTM OM0JWWTM ; 
    15 OM0JWWHH OM0JWWHH ; 
    15 OM0JWFL1 OM0JWFL1 ; 
    15 OM0JWWMM OM0JWWMM ; 
    15 OM0JWFL2 OM0JWFL2 ; 
    15 OM0JWWSS OM0JWWSS ; 
  10 OM0JWTIM OM0JWTIM ; 
    15 OM0JWTHH OM0JWTHH ; 
    15 OM0JWTMM OM0JWTMM ; 
    15 OM0JWTSS OM0JWTSS ; 
  10 OM0JWCUK OM0JWCUK ; 
    15 OM0JWPTN OM0JWPTN ; 
    15 OM0JW-FILL-1 OM0JW-FILL-1 ; 
    15 OM0JWOID OM0JWOID ; 
    15 OM0JW-FILL-2 OM0JW-FILL-2 ; 
    15 OM0JWNID OM0JWNID ; 
    15 OM0JW-FILL-3 OM0JW-FILL-3 ; 
    15 SY1STNBR SY1STNBR ; 
    15 OM0JW-FILL-4 OM0JW-FILL-4 ; 
    15 SY2CLRID SY2CLRID ; 
    15 OM0JWTYP OM0JWTYP ; 
    15 OM0JWSQN OM0JWSQN ; 
  10 OP1SPINF OP1SPINF ; 
  10 OP1SPLBF OP1SPLBF ; 
  10 OM0JW-CUSTOM-FL OM0JW-CUSTOM-FL ; 
  10 OM0JW-USE-ITM-FL OM0JW-USE-ITM-FL ; 
  10 OM0JW-BULK-FL OM0JW-BULK-FL ; 
  10 OM0JW-WSY2000-FND-FLAG OM0JW-WSY2000-FND-FLAG ; 
  10 OM0JW-APPLY-CHG-FL OM0JW-APPLY-CHG-FL ; 
  10 OM0JW-LBL-CHG-FL OM0JW-LBL-CHG-FL ; 
  10 OM0JW-DCMS-ORD-FL OM0JW-DCMS-ORD-FL ; 
  10 OM0JW-VMPOLH01-EOF-FL OM0JW-VMPOLH01-EOF-FL ; 
  10 * char(3) ; 
  10 OM0JW-WSY2000-POST-1 OM0JW-WSY2000-POST-1 ; 
    15 OM0JW-WSY2000-GPC-CD OM0JW-WSY2000-GPC-CD ; 
    15 OM0JW-WSY2000-STY-NBR OM0JW-WSY2000-STY-NBR ; 
    15 OM0JW-WSY2000-COLR-CD OM0JW-WSY2000-COLR-CD ; 
    15 OM0JW-WSY2000-DIM-CD OM0JW-WSY2000-DIM-CD ; 
    15 OM0JW-WSY2000-PROD-REG-CD OM0JW-WSY2000-PROD-REG-CD ; 
    15 OM0JW-WSY2000-RETURN-CD OM0JW-WSY2000-RETURN-CD ; 
end // end OM0JW01

//*** RECORD=OM0JW02 ****
//  11/12/89  skott   db changes - op1group from 435 to 436
//  04/04/90  cgrice  db changes - op1group from 436 to 438
//  06/07/91  craine  db changes - op1group from 455 to 426
//  10/08/91  dmeier  db changes - op1group from 426 to 427
//  03/11/92  dharri  db changes - op1group from 427 to 421
//  02/28/94  scantr  db changes - op1group resize
// ***********************
Record OM0JW02 type basicRecord
  10 OP1GROUP OP1GROUP ; 
    15 OP1KEY OP1KEY ; 
    15 * char(455) ; 
end // end OM0JW02

// dcms order chg allow flag
DataItem OM0JW-APPLY-CHG-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// bulk order flag
DataItem OM0JW-BULK-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// custom logo order
DataItem OM0JW-CUSTOM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-DCMS-ORD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-FILL-1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-FILL-2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-FILL-3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-FILL-4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-LBL-CHG-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// a good item found
DataItem OM0JW-USE-ITM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-VMPOLH01-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-WSY2000-COLR-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-WSY2000-DIM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-WSY2000-FND-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-WSY2000-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-WSY2000-POST-1 char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-WSY2000-PROD-REG-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-WSY2000-RETURN-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JW-WSY2000-STY-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// db call type (update/add)
DataItem OM0JWCAL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// change performed flag
DataItem OM0JWCFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// change allowed flag
DataItem OM0JWCHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// change hours
DataItem OM0JWCHH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// change minutes
DataItem OM0JWCMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// count of blank instructions
DataItem OM0JWCTI num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// count of blank labels
DataItem OM0JWCTL num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// change time
DataItem OM0JWCTM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cust key for abend diag
DataItem OM0JWCUK char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dead-lock counter
DataItem OM0JWDLC num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format hours
DataItem OM0JWFHH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0JWFL1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JWFL2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format minutes
DataItem OM0JWFMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format seconds
DataItem OM0JWFSS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format time
DataItem OM0JWFTM char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format hours2
DataItem OM0JWHH2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// instructions count
DataItem OM0JWICT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// instr last loaded
DataItem OM0JWILL smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// instruction work sequence
DataItem OM0JWISQ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// labels count
DataItem OM0JWLCT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// label last loaded
DataItem OM0JWLLL smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// label work sequence
DataItem OM0JWLSQ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format minutes2
DataItem OM0JWMM2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nike ord id
DataItem OM0JWNID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cust ord id
DataItem OM0JWOID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// pick change flag
DataItem OM0JWPCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// order part char
DataItem OM0JWPTN num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// special inst dept
DataItem OM0JWSPD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// special inst sequence
DataItem OM0JWSPI smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// special label sequence
DataItem OM0JWSPL smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-txt-rec-seq
DataItem OM0JWSQN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format seconds2
DataItem OM0JWSS2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// special inst type
DataItem OM0JWSTY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JWTHH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0JWTIM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format time2
DataItem OM0JWTM2 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OM0JWTMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OM0JWTSS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-txt-rec-typ
DataItem OM0JWTYP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format hours
DataItem OM0JWWHH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format minutes
DataItem OM0JWWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format seconds
DataItem OM0JWWSS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format time
DataItem OM0JWWTM char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

