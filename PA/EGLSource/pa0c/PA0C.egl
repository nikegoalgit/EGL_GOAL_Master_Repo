package pa0c;
import corpcom2.XX0XW01;
import corpcom2.YSMREC;
import corpcom3.XPPA001;
import corpcom3.XPPA020;
import corpcom3.XPTA0P;
import corpcom4.XSPAS01;
import corpcom4.XSPAS04;
import corpcom4.XSPG202;
import corpcom4.XSPG301;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XX1;
import corpcom7.XX2;
import corpcom7.XX3;
import corpcom7.XX4;
import corpcom7.XX5;
import corpcom7.XX6;
import corpcom7.XX7;
import corpcom7.XX8;
import corpcom7.XX9;
import corpcom7.XXXMODID;
import corpcom7.XXXMSGNO;
import corpcom7.XXXPGUID;
import corpcom7.XXXTSPAG;
import corpx1.XCTCD;
import corpx1.XDMCD;
import corpx1.XWHTBL;
import corpx2.XNXCD;
import corpx2.XWHCD;
import corpy2.YESCD;
import corpy2.YESSDESC;
import corpy2.YETCD;
import corpy2.YSMXDV;
import corpz3.ZZZSDT;
import fb.common.FB9REC;
import fb.common.FBHREC;
import fb.common.FBKREC;
import fb.common.FBMREC;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import ku.common.KUCCOID;
import ku.common.KUMSTRID;
import pa.common.*;
import pa.common.PA-AFRGT-APVL-MGR;
import pa.common.PA-AFRGT-RQT-ID;
import pa.common.PA-APVL-GRP-ID;
import pa.common.PA-BLTO-CUST-PCT;
import pa.common.PA-BLTO-FCTY-PCT;
import pa.common.PA-BLTO-FRWRDR-PCT;
import pa.common.PA-BLTO-NIKE-PCT;
import pa.common.PA-DEPT-RSP-IND;
import pa.common.PA-LIAS-CTCT-NM;
import pa.common.PA-RSN-COMNT1;
import pa.common.PA-RSN-COMNT2;
import pa.common.PA-RSN-COMNT3;
import pa.common.PA-RSP-COMNT1;
import pa.common.PA-RSP-COMNT2;
import pa.common.PA1HLDFL;
import pa.common.PA1OANBR;
import pa.common.PA1REC;
import pa.common.PA1RQQTY;
import pa.common.PA2REC;
import pa.common.PA4REC;
import pa.common.PA9REC;
import pa.common.PACREC;
import pa.common.PACTBL;
import pa.common.PAEREC;
import pa.common.PAWBUYDT;
import pa.common.PAWBUYYM;
import pa.common.PAWEXTRA;
import pa.common.PAWREC;
import pa.common.PAYREC;
import pc.common.PC2CUXID;
import pc.common.PC2REC;
import pc.common.PC3POIDT;
import pc.common.PC3PONBR;
import pc.common.PC6ETSDT;
import pc.common.PC6RTADT;
import pg.common.PG1SC4CD;
import pg.common.PG2REC;
import pg.common.PG3REC;
import sy.common.SY1REC;
import sy.common.SY1SSTNM;
import sy.common.SY1STNBR;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TA6REC;
import ta.common.TAEREC;
import ts.common.TSCLOCCD;
import ts.common.TSEDEST;
import ts.common.TSEREC;
import vv.common.VFRATE01;
import vv.common.VPAAFA01;
import vv.common.VPAAFH01;
import vv.common.VPAAFM01;

//*** PROGRAM=PA0C ****
// NOTE ON TEMP STORAGE:  The maximum record length allowed in
// temp storage is 4K bytes (4,096).  The maximum size of a CSP
// working storage record is 65,535 bytes.  If a working
// storage record exceeds this amount, three methods can be
// used to store the info:
// 
// 1.  Cut the occurs for the working storage record down to
//     fit within the limit.
// 
// 2.  Cut the length of each record down so that the needed
//     number of occurs can be used.
// 
// 3.  Use temp storage to write the information out in blocks.
//     In the case listed above, the temp storage record length
//     limit is 4K.
// 
//     The temp storage in PA0C is used to store a full screen
//     page of data which consists of 11 lines of information.
// 
// Of the three methods listed above, the temp storage solution
// was used (option 3 above).
// 
// The user may exit to another application at any time VIA
// fastpath or PF key.
// 
// ------------------------------------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          02/01/94  MSMIT2  NEW APPLICATION
// PA9999   05/23/94  MSMIT2  1.  GET GENERIC COUNTRY LOCATION
//                                EX: IL INSTEAD OF IL3 FROM
//                                DTRANS.VFREATE01.
//                            2.  PA0C-62201 CHANGE MESSAGE
//                                524 TO 324.
// PA9999   06/02/94  MSMIT2  TA0P MISSING DEFAULT PRINTER IN
//                            TA6REC.XURDEST.  DEFAULT TO
//                            RMT999.
// PA9999   06/10/94  MSMIT2  ALLOW TWO MANAGERS TO APPROVE AT
//                            THE SAME TIME.  MAKE SURE PC111D
//                            IS SUBMITTED.
//                            ALSO, DON'T ALLOW THE AIR FREIGHT
//                            TO BE APPROVED IF THERE ARE NO
//                            O/A ITEMS.
//                            ADD APPROVED DATE/TIME. HOWEVER,
//                            DARKEN UNTIL REQUEST SUBMITTED.
//                            NEEDS FURTHER TESTING.
// PA9999   12/05/94  MSMIT2  SHOW PA400D COMMENT AND INCREASE
//                            SIZE OF O/A FIELD.
// pg-82    12/15/94  PMAINW  Handle twenty product lines
//                            on vfsctl01.
// PA9999   01/24/95  MSMIT2  ALLOW INQUIRY ONLY FOR EUROPEAN
//                            O/AS.
// PA9999   07/25/95  MSMIT2  IF PRODUCT LINE INVALID FOR
//                            SCHEDULER, SKIP FBMREC FLAG RESET
// PA1106   06/25/97  WROBIN  Air Freight Drop Dead Date
// PA1267   08/01/97  WROBIN  Remove AF Drop Dead Date
// Y2KFIX   11/17/97  DKENNY  Y2K MODIFICATIONS MADE TO:
//                            PA0CM001 and PA0CM002.
// PA903    09/23/98  CGANAP  CHANGE TYPE OF OA# IN PARAMETER
//                            RECORD FROM BINARY TO CHARACTER
// PA679              MSEVAL  CHANGE OA SYSTEM FOR 'AF's.
// *********************
Program PA0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FB9REC FB9REC; // record
  FBHREC FBHREC; // record
  FBKREC FBKREC; // record
  FBMREC FBMREC; // record
  FY1REC FY1REC; // record
  PA0CW00 PA0CW00; // record
  PA0CW01 PA0CW01; // record
  PA0CW02 PA0CW02; // record
  PA0CW04 PA0CW04; // record
  PA0CW06 PA0CW06; // record
  PA1REC PA1REC; // record
  PA2REC PA2REC; // record
  PA4REC PA4REC; // record
  PA9REC PA9REC; // record
  PACREC PACREC; // record
  PAEREC PAEREC; // record
  PAWREC PAWREC; // record
  PAYREC PAYREC; // record
  PC2REC PC2REC; // record
  PG2REC PG2REC; // record
  PG3REC PG3REC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  TSEREC TSEREC; // record
  VFRATE01 VFRATE01; // record
  VPAAFA01 VPAAFA01; // record
  VPAAFH01 VPAAFH01; // record
  VPAAFM01 VPAAFM01; // record
  XX0XW01 XX0XW01; // record
  YSMREC YSMREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PACTBL {deleteAfterUse = yes}; // table
  use PA0CT01 {deleteAfterUse = yes}; // table
  use PA0CT11 {deleteAfterUse = yes}; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use PA0CM.PA0CM001,  // forms
      PA0CM.PA0CM002,
      PA0CM.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPA001: XPPA001();
     /* -------------------------------------------------------*/
      /* INITIALIZE WORKING STORAGE AND DISPLAY STORAGE*/
     /* -------------------------------------------------------*/

    set SQLCA empty;
    set PA0CW00 empty; /* working storage*/
    set PA0CW01 empty; /* working storage*/
    set PA0CW02 empty; /* working storage*/
    set PA0CW04 empty; /* TEMP STORAGE*/
    set TAEREC empty; /* error diagnosis information*/
    set TA1REC empty; /* error diagnosis parameters*/
    set TA5REC empty; /* temp storage queue area*/
    set XX0XW01 empty; /* date/time subroutine parameters*/

    set PA0CM001 initial; /* clear map m001*/
    set PA0CM002 initial; /* clear map m002- SIZE DETAIL*/

     /* ------------------------------------------------------------*/
     /* INITIALIZE PA0CW00 FLAGS*/
     /* ------------------------------------------------------------*/

    PA0CW00.PA0CW-REQ-FOR-DATA-FLAG = "N";
    PA0CW00.PA0CW-KEY-CHANGED = "N";
    PA0CW00.PA0CW-SELECT-MODIFIED = "N";
    PA0CW00.PA0CW-CONFIRM-MSG-SHOWN = "N";
    PA0CW00.PA0CW-DISPLAY-MAP2 = "N";
    PA0CW00.PA0CW-READ-ONLY = "N";
    PA0CW00.PA0CW-DB2-ERROR = "N";
    PA0CW00.PA0CW-AF-CHANGED = "N";
    PA0CW00.PA0CW-OA-CHANGED = "N";
    PA0CW00.PA0CW-HEADER-ERROR = "N";
    PA0CW00.PA0CW-PROCESS-BY-FL = "  ";
    PA0CW00.PA0CW-DEPT-RSP-ENTERED = "N";
    PA0CW00.PA0CW-UPDATE-VPAAFH01-FLAG = "N";
    PA0CW00.PA0CW-APPROVE-AF-FLAG = "N";

    PA0CW00.XX6 = 1;

    XPPA020: XPPA020();
    PA0C-001: PA0C-001();
    PA0C-002: PA0C-002();

    goto PA0C-001;

  end // end main
end // end PA0C

// SPECIAL INITIALIZATION
Function PA0C-001()
   /* ------------------------------------------------------------*/
   /* This process will perform any special initialization that*/
   /* is unique to the application.*/
   /* ------------------------------------------------------------*/

  PA0CW00.XXXMODID = PAWREC.XXXMODID;

   /* PAWREC.PAWOANBR cnntains only one oa number*/

  if (PAWREC.PAWOANBR > 0) /* If OA number passed in commarea*/
    if (PAWREC.XXXMSGNO == 0)
      PA0CW00.PA1OANBR = PAWREC.PAWOANBR;
      PA0CW00.PA0CW-REQ-FOR-DATA-FLAG = "Y";
      PA0CW00.PA0CW-KEY-CHANGED = "Y";

    else
      if (PAWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(PAWREC.XXXMSGNO);
      end

    end
  else

    set PA0CW06 empty;
    PA0CW06.PAWEXTRA = PAWREC.PAWEXTRA;

  end

  PAWREC.PAWOANBR = 0;
  PAWREC.PAWEXTRA = " ";

  PA0CW00.PAWBUYDT = PAWREC.PAWBUYDT; /* Current buy date*/

  XX0XS01(); /* Obtain current date*/

end // end PA0C-001

// PROCESS SO/PO SELECTION
Function PA0C-002()
   /* ------------------------------------------------------------*/

   /* 1) obtain data*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  PA0C-100(); /* Obtain the data to display*/

  PA0C-200(); /* Format and display the map*/

  PA0C-300(); /* Check attention identifier*/

  PA0C-400(); /* Reset fields to normal intensity*/

  PA0C-500(); /* Verify the entered data*/

  PA0C-600(); /* Process valid input request*/


end // end PA0C-002

// OBTAIN THE DATA TO DISPLAY
Function PA0C-100()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set(s) to be formatted*/
   /* Fetch and format the data in the working storage*/
   /* At end of rows, close the selected set cursor.*/
   /* If no data found, display error message and return to*/
   /* previous process.*/
   /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/

   /* IF A DB2 ERROR HAS OCCURRED, EXIT AND DISPLAY THE MAP*/

  if (PA0CW00.PA0CW-DB2-ERROR == "Y"
   && converseVar.validationMsgNum != 0)
    return;
  else
    PA0CW00.PA0CW-DB2-ERROR = "N";
  end

   /* IF SIZE DETAIL MAP REQUESTED, SKIP THIS PROCESSING*/

  if (PA0CW00.PA0CW-DISPLAY-MAP2 == "Y")
    return;
  end


   /* PA0C-120 CLEARS OUT TEMP STORAGE AND GETS FRESH DATA.  THIS*/
   /* IS A PROBLEM IF THE USER HAS SELECTED AN ITEM ON THE SCREEN.*/
   /* IN THIS CASE, WE WANT TO EXIT WITHOUT OBTAINING THE NEW DATA.*/

  if (converseVar.validationMsgNum != 223) /* CANT SELECT ITEMS AND CHANGE HEADER*/
    if (PA0CW00.PA0CW-KEY-CHANGED != "Y"
     || converseVar.validationMsgNum != 0)
      return;
    end
  end

   /* THIS FLAG IS USED TO DETERMINE IF PC111D WAS JUST SUBMITTED*/
   /* SO THAT THE HEADER STATUS CAN BE UPDATED ON THE SCREEN.  IF*/
   /* PA1REC IS BEING RETREIVED ANYWAY, THERE IS NO NEED TO HAVE*/
   /* THIS FLAG SET TO 'Y'.*/

  PA0CW00.PA0CW-PC111D-SUBMITTED = "N";

  PA0C-120(); /* FIND INFORMATION TO DISPLAY*/

   /* ------------------ End of Process PA0c-100 -----------------*/

end // end PA0C-100

// OBTAIN DATA TO DISPLAY
Function PA0C-120()

   /* CALL SUBROUTINE TA0230 TO FIND WHICH ENVIRONMENT THE*/
   /* PROGRAM IS RUNNING IN (PRODUCTION OR DEVELOPMENT).*/

  set TA3REC empty;
  TA3REC.TA3OPTN = "ASSIGN";
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && TA3REC.TA3RTNCD == 0)          /* GOOD RETURN CODE*/
   /* NEXT SENTENCE*/
  else
    converseLib.validationFailed(10); /* ERROR ENCOUNTERED*/
    exit stack;
  end

  PA0CS-01-TA0050-P();

   /* ------------------------------------------------------------*/
   /* OBTAIN DATA TO DISPLAY BASED ON THE AIR FREIGHT NUMBER.*/
   /* DISPLAY ONLY THE OPEN O/A.  TO GET TO ALL THE O/AS ASSOCIATED*/
   /* WITH THE AIR FREIGHT, YOU MUST SELECT THAT O/A NUMBERS FROM*/
   /* PA0B.*/
   /* ------------------------------------------------------------*/

  if (PA0CW00.PA-AFRGT-RQT-ID != 0)
    PA0CW00.PA0CW-PROCESS-BY-FL = "AF";

    PA0CS-02-PA1000-S9();

    PA0CS-03-PA1000-N9();

   /* TCS PA679*/
    if (SQLCA.VAGen_SQLCODE == 0
     && (PA1REC.YETCD == "DM" || PA1REC.YETCD == "NM"))
   /* TCS PA679*/
      PA0C-121();
    else
      PAWREC.XXXMODID = "120";
      converseLib.validationFailed(314); /* NO OPEN O/AS FOUND FOR AF, USE PA0B TO SELECT*/
      PA0CW00.PA0CW-HEADER-ERROR = "Y";
      set PA0CM001.PA-AFRGT-RQT-ID cursor, bold;
    end

    PA0CS-04-PA1000-C9();

    PA0C-122();

    return;

  end

  if (PA0CW00.PA1OANBR != 0)
    PA0CW00.PA0CW-PROCESS-BY-FL = "OA";

    set PA1REC empty;
    PA1REC.PA1OANBR = PA0CW00.PA1OANBR;

    PA0CS-19-IO4830-S();

    if (SQLCA.VAGen_SQLCODE == 0)
   /* TCS PA679*/
      if (PA1REC.PA-AFRGT-RQT-ID == 0
       || (PA1REC.PA-AFRGT-RQT-ID != 0
       && (PA1REC.YETCD != "DM"
       && PA1REC.YETCD != "NM")))
   /* TCS PA679*/
        PAWREC.XXXMODID = "120";
        converseLib.validationFailed(318); /* O/A DOES NOT HAVE AN AIR FREIGHT REQUEST*/
        PA0CW00.PA0CW-HEADER-ERROR = "Y";
        PA0CW00.PA-AFRGT-RQT-ID = 0;
      else
        PA0CW00.PA-AFRGT-RQT-ID = PA1REC.PA-AFRGT-RQT-ID;
        PA0C-121();
      end
    else
      PAWREC.XXXMODID = "120";
      converseLib.validationFailed(50); /* O/A NUMBER DOES NOT EXIST*/
      PA0CW00.PA0CW-HEADER-ERROR = "Y";
    end

    PA0C-122(); /* WRITE TOTAL LINE TO TEMP STORAGE*/

    return;

  end

   /* ------------------ End of Process PA0C-120 -----------------*/
end // end PA0C-120

// OBTAIN DATA TO DISPLAY BY AF
Function PA0C-121()
   /* ------------------------------------------------------------*/
   /* 1. GET THE COMMENT MESSAGE*/
   /* 2. GET THE AIR FREIGHT INFO*/
   /* 3. GET THE O/A INFO*/
   /* 4. LOAD INFO TO WORKING STORAGE*/
   /* 5. GET TYPE '9' WORK RECORDS*/
   /* 6. GET THE ORIGIN/DEST COUNTRIES*/
   /* 7. CALCULATE THE ETA DATES*/
   /* 8. CALCULATE THE AF/VL ESTIMATED COST OF SHIPPING*/
   /* ------------------------------------------------------------*/

  PA0CW01.PA0CW-MESSAGE = " ";

  set PA9REC empty;

  PA9REC.PA9COMTY = "H";
  PA9REC.PA1OANBR = PA1REC.PA1OANBR;
  PA9REC.YESCD = PA1REC.YESCD;

   /* SELECT DPRODA.VPACMT01*/

  PA0CS-43-IO4820-S1(); /* OPEN CURSOR*/

  PA0CS-44-IO4820-N1(); /* FETCH*/

  if (SQLCA.VAGen_SQLCODE == 0)
    PA0CW01.PA0CW-MESSAGE = PA9REC.PA9COM[1];
  end

  PA0CS-45-IO4820-C1(); /* CLOSE*/

  PA0CW01.PA0CW-MESSAGE = PA9REC.PA9COM[1];

  PA0CW00.PA1OANBR = PA1REC.PA1OANBR;
  PA0CW01.XXXPGUID = PA1REC.XXXPGUID;
  PA0CW01.ZZZSDT = PA1REC.ZZZSDT;
  PA0CW01.YESCD = PA1REC.YESCD;
  PA0CW01.YETCD = PA1REC.YETCD;
  PA0CW01.SY1STNBR = PA1REC.SY1STNBR;
  PA0CW01.SY2CLRID = PA1REC.SY2CLRID;
  PA0CW01.XDMCD = PA1REC.XDMCD;
  PA0CW00.YSMXDV = PA1REC.YSMXDV;

  set VPAAFH01 empty;
  VPAAFH01.PA-AFRGT-RQT-ID = PA1REC.PA-AFRGT-RQT-ID;

  PA0CS-05-IO7080-S();

   /* IF VPAAFH01.PA-AFRGT-CNCL-FL = 'Y';*/
     /* MOVE 'THIS AIR FREIGHT REQUEST HAS BEEN CANCELLED' TO*/
        /* PA0CW01.PA0CW-MESSAGE;*/
   /* ELSE;*/
     /* MOVE ' ' TO PA0CW01.PA0CW-MESSAGE;*/
   /* END;*/

  PA0CW01.PA0CW-PA-BLTO-TOTAL = 0;
  PA0CW01.PA-BLTO-NIKE-PCT = VPAAFH01.PA-BLTO-NIKE-PCT;
  PA0CW01.PA-BLTO-FCTY-PCT = VPAAFH01.PA-BLTO-FCTY-PCT;
  PA0CW01.PA-BLTO-CUST-PCT = VPAAFH01.PA-BLTO-CUST-PCT;
  PA0CW01.PA-BLTO-FRWRDR-PCT = VPAAFH01.PA-BLTO-FRWRDR-PCT;
  PA0CW01.PA0CW-PA-BLTO-TOTAL = VPAAFH01.PA-BLTO-NIKE-PCT +                               VPAAFH01.PA-BLTO-FCTY-PCT +                               VPAAFH01.PA-BLTO-CUST-PCT +                               VPAAFH01.PA-BLTO-FRWRDR-PCT;

  if (VPAAFH01.PA-DEPT-RSP-IND in PACTBL.PA-DEPT-RSP-IND)
    if (PACTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      PA0CW01.PA-DEPT-RSP-IND = PACTBL.PA-DEPT-RSP-IND;
      PA0CW01.PA0CW-PA-DEPT-RSP-X[sysVar.arrayIndex] = "X";
    end
  end

  PA0CW01.PA-LIAS-CTCT-NM = VPAAFH01.PA-LIAS-CTCT-NM;
  PA0CW01.PA-RSP-COMNT1 = VPAAFH01.PA-RSP-COMNT1;
  PA0CW01.PA-RSP-COMNT2 = VPAAFH01.PA-RSP-COMNT2;
  PA0CW01.PA-RSN-COMNT1 = VPAAFH01.PA-RSN-COMNT1;
  PA0CW01.PA-RSN-COMNT2 = VPAAFH01.PA-RSN-COMNT2;
  PA0CW01.PA-RSN-COMNT3 = VPAAFH01.PA-RSN-COMNT3;

   /* GET THE SHORT STYLE DESCRIPTION*/

  set PG2REC empty;
  PG2REC.XGPCD = "02";
  PG2REC.SY1STNBR = PA1REC.SY1STNBR;
  PG2REC.SY2CLRID = PA1REC.SY2CLRID;
  PG2REC.XDMCD = PA1REC.XDMCD;

  XSPG202();

  if (SQLCA.VAGen_SQLCODE == 0)
    PA0CW01.SY1SSTNM = PG2REC.SY1SSTNM;
  else
    PA0CW01.SY1SSTNM = " ";
  end

  PA0CW01.PA1HLDFL = PA1REC.PA1HLDFL;

   /* GET THE TYPE '9' WORK RECORDS*/

  set PACREC empty;
  PACREC.PA1OANBR = PA1REC.PA1OANBR;
  PACREC.PACSEVAL = "*";
  PACREC.PACORDTY = "9";
  PACREC.ZZZSDT = -1;
  PACREC.ZZZSTM = -1;
  PA0CS-06-IO4950-S2();

  PA0CS-07-IO4950-N2();

  while (SQLCA.VAGen_SQLCODE == 0)
    if (PACREC.YMTCD == "AF")
      set PA0CW02 empty;
      PA0CW01.PC3POIDT = PACREC.PC3POIDT;
      PA0CW01.FY1FCTYC = PACREC.FY1FCTYC;
      PA0CW02.XWHCD = PACREC.XWHCD;
      PA0CW02.PC2CUXID = PACREC.PC2CUXID;
      PA0CW02.PC6ETSDT = PACREC.PC6ETSDT;
      PA0CW02.PC6RTADT = PACREC.PC6RTADT;
      PA0CW02.PA0CW-TOTAL-RECORD = "N";

      PA0C-12100(); /* GET ORIGIN/DEST COUNTRIES*/

      if (PACREC.PC6ETSDT == 0)
        PA0CW02.PA0CW-AF-ETA = 0;
        PA0CW02.PA0CW-VL-ETA = 0;
      else
        PA0C-12101(); /* CALCULATE THE ETA DATES*/
      end

      PA0CW02.PA0CW-TOTAL-NUM-PAIRS = 0;
      sysVar.arrayIndex = 1;
      while (sysVar.arrayIndex <= 40)
        PA0CW02.PA0CW-PACFLADJ[sysVar.arrayIndex] = PACREC.PACFLADJ[sysVar.arrayIndex];
        PA0CW02.PA0CW-TOTAL-NUM-PAIRS = PA0CW02.PA0CW-TOTAL-NUM-PAIRS + PACREC.PACFLADJ[sysVar.arrayIndex];
        PA0CW01.PA0CW-PACFLADJ[sysVar.arrayIndex] = PA0CW01.PA0CW-PACFLADJ[sysVar.arrayIndex] + PACREC.PACFLADJ[sysVar.arrayIndex];
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end

        /* CALCULATE THE AF/VL ESTIMATED COST OF SHIPPING*/

      PA0C-12103();

      PA0C-12104(); /* WRITE TO TEMP STORAGE*/

    end
    PA0CS-07-IO4950-N2();
  end

  PA0CS-08-IO4950-C2();

   /* LOAD APPROVAL MANAGERS;*/

  set VPAAFA01 empty;

  VPAAFA01.PA-AFRGT-RQT-ID = PA0CW00.PA-AFRGT-RQT-ID;

  PA0CS-23-IO7100-S1();

  PA0CS-24-IO7100-N1();

  PA0CW01.PA0CW-APVL-NDX = 0;

  while (SQLCA.VAGen_SQLCODE == 0)

    PA0CW01.PA0CW-APVL-NDX = PA0CW01.PA0CW-APVL-NDX + 1;
    PA0CW01.PA-AFRGT-APVL-MGR[PA0CW-APVL-NDX] = VPAAFA01.PA-AFRGT-APVL-MGR;

    if (VPAAFA01.ZZZSDT > PA0CW00.PA0CW-APPROVED-DATE)
      PA0CW00.PA0CW-APPROVED-DATE = VPAAFA01.ZZZSDT;
      PA0CW00.PA0CW-APPROVED-HHMM = VPAAFA01.ZZZSTM;
    else
      if (VPAAFA01.ZZZSDT < PA0CW00.PA0CW-APPROVED-DATE)
           /* NEXT SENTENCE*/
      else
        PA0CW00.PA0CW-APPROVED-DATE = VPAAFA01.ZZZSDT;
        PA0CW00.PA0CW-APPROVED-HHMM = VPAAFA01.ZZZSTM;
      end
    end

    PA0CS-24-IO7100-N1();
  end

  PA0CS-25-IO7100-C1();

   /* ------------------ End of Process PA0C-121 -----------------*/

end // end PA0C-121

// GET ORIG/DEST COUNTRIES
Function PA0C-12100()

   /* GET THE ORIGIN/DESTINATION COUNTRIES*/

  set FY1REC empty;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = PACREC.FY1FCTYC;
  PA0CS-09-IO2810-S();

  PA0CW01.XCTCD = FY1REC.XCTCD;

  if (PACREC.PC2CUXID != " ")
    set PC2REC empty;
    PC2REC.XGPCD = "02";
    PC2REC.PC2CUXID = PACREC.PC2CUXID;
    PA0CS-10-IO3340-S();
    PA0CW00.TSCLOCCD = PC2REC.TSCLOCCD;
  else
    if (PACREC.XWHCD in XWHTBL.XWHCD)
      if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        PA0CW00.TSCLOCCD = XWHTBL.TSCLOCCD[sysVar.arrayIndex];
      end
    end
  end

  set TSEREC empty;
  TSEREC.TSEORIG = FY1REC.TSCLOCCD;
  TSEREC.TSEDEST = PA0CW00.TSCLOCCD;
  TSEREC.YMTCD = "AF";
  PA0CS-11-IO2360-S();



   /* ------------------ End of Process PA0C-12100 ---------------*/

end // end PA0C-12100

// CALC AF/VL ETA DATES
Function PA0C-12101()

   /* CALCULATE THE AIR FREIGHT/VESSAL ETA DATES*/
   /* ETA DATE = ETS DATE +*/
   /* DCLVFCTY001.FY-MADD +*/
   /* DCLVTTIME01.TS-NBR-TRVL-DY*/

  PA0C-12102();

  if (TA2REC.TA2RTNCD == 0)
    PA0CW02.PA0CW-AF-ETA = TA2REC.TA2GRGGN;
  else
    PA0CW02.PA0CW-AF-ETA = 0;
  end

  set TSEREC empty;
  TSEREC.TSEORIG = FY1REC.TSCLOCCD;
  TSEREC.TSEDEST = PA0CW00.TSCLOCCD;
  TSEREC.YMTCD = "VL";
  PA0CS-11-IO2360-S();

  if (SQLCA.VAGen_SQLCODE == 0)

    PA0C-12102();

    if (TA2REC.TA2RTNCD == 0)
      PA0CW02.PA0CW-VL-ETA = TA2REC.TA2GRGGN;
    else
      PA0CW02.PA0CW-VL-ETA = 0;
    end

  else
    PA0CW02.PA0CW-VL-ETA = 0;
  end

   /* ------------------ End of Process PA0C-12101 ---------------*/

end // end PA0C-12101

// CALL TA0040
Function PA0C-12102()

   /* CALCULATE THE AV/FL ETA DATES.*/

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = PACREC.PC6ETSDT;
  TA2REC.TA2DYAOD = FY1REC.FY1MADD + TSEREC.TSETRNTM;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};


   /* ------------------ End of Process PA0C-12102 ---------------*/

end // end PA0C-12102

// CALC AF/VL ESTIMATED COST SHIP
Function PA0C-12103()

   /* CALCULATE THE AIR FREIGHT AND VESSEL ESTIMATED SHIPPING COSTS.*/

  PA0CW02.PA0CW-AF-TOTAL = 0;
  PA0CW02.PA0CW-VL-TOTAL = 0;

  PA0CW01.PA0CW-GRAND-TOTAL-PAIRS = PA0CW01.PA0CW-GRAND-TOTAL-PAIRS +                                   PA0CW02.PA0CW-TOTAL-NUM-PAIRS;

   /* GET THE AVERAGE WEIGHT PER PAIR - SY-AVE-WT*/

  set SY1REC empty;
  SY1REC.XGPCD = "02";
  SY1REC.SY1STNBR = PA1REC.SY1STNBR;

  PA0CS-12-IO0120-S();

  if (SQLCA.VAGen_SQLCODE == 100)
    PAWREC.XXXMODID = "121";
    converseLib.validationFailed(319);
    return;
  end

   /* IN ORDER TO DETERMINE THE AVERAGE COST PER PAIR FROM THE*/
   /* DTRANS.VFRATE01 TABLE, THE WEIGHT NEEDS TO BE CONVERTED*/
   /* FROM POUNDS TO KILOGRAMS.  HERE IS THE CONVERSION:*/
   /* 2.20459 POUNDS = 1 KILOGRAM.*/
   /* CALCULATION:*/
   /* PA0CW00.PA0CW-PAIR-WT-KG = (SY1REC.SY1AVEWT / 2.20459) **/
   /* PA0CW02.PA0CW-TOTAL-NUM-PAIRS;*/

  PA0CW00.PA0CW-PAIR-WT-KG = 0;
  PA0CW00.PA0CW-PAIR-WT-KG = (SY1REC.SY1AVEWT / 2.20459) *                            PA0CW02.PA0CW-TOTAL-NUM-PAIRS;

  if (PA0CW00.PA0CW-PAIR-WT-KG < 45)
    PA0CW00.XX1 = 1;
  else
    if (PA0CW00.PA0CW-PAIR-WT-KG < 100)
      PA0CW00.XX1 = 2;
    else
      if (PA0CW00.PA0CW-PAIR-WT-KG < 300)
        PA0CW00.XX1 = 3;
      else
        if (PA0CW00.PA0CW-PAIR-WT-KG < 500)
          PA0CW00.XX1 = 4;
        else
          if (PA0CW00.PA0CW-PAIR-WT-KG < 1000)
            PA0CW00.XX1 = 5;
          else
            if (PA0CW00.PA0CW-PAIR-WT-KG < 2000)
              PA0CW00.XX1 = 6;
            else
              PA0CW00.XX1 = 7;
            end
          end
        end
      end
    end
  end

   /* CALCULATE THE AIR FREIGHT TOTAL COST*/

  set VFRATE01 empty;
  VFRATE01.YMTCD = "AF";
  VFRATE01.XGPCD = "02";
  VFRATE01.TS-CARR-GRP-CD = "GNRC";
  VFRATE01.TSEORIG = TSEREC.TSEORIG;
  VFRATE01.TSEDEST = TSEREC.TSEDEST;
  VFRATE01.TSDBEGDT = PA0CW02.PC6RTADT;

  PA0CS-13-IO7000-SB();

   /* IF DTRANS.VFRATE01 RECORD NOT FOUND, TRY THE GENERAL LOCATION.*/
   /* THIS IS THE FIRST TWO CHARACTERS OF THE TSEDEST.*/

  if (SQLCA.VAGen_SQLCODE == 100)

    PA0CW00.TSEDEST = TSEREC.TSEDEST;
    VFRATE01.TSEDEST = PA0CW00.PA0CW-GENERAL-LOCATION;

    PA0CS-13-IO7000-SB(); /* GET DTRANS.VFRATE01*/

  end

  if (SQLCA.VAGen_SQLCODE == 0)
    PA0CW02.PA0CW-AF-DOLLAR-PER-PAIR = VFRATE01.TS-FRGT-CHG-AMT[XX1];
    PA0CW02.PA0CW-AF-TOTAL = PA0CW02.PA0CW-AF-DOLLAR-PER-PAIR *                             PA0CW02.PA0CW-TOTAL-NUM-PAIRS;
    if (PA0CW02.PA0CW-TOTAL-NUM-PAIRS != 0
     && PA0CW02.PA0CW-AF-TOTAL < VFRATE01.TS-FRGT-MIN-CHGAMT)
      PA0CW02.PA0CW-AF-TOTAL = VFRATE01.TS-FRGT-MIN-CHGAMT;
    end
  end

   /* CALCULATE THE VESSEL TOTAL COST*/

  set VFRATE01 empty;
  VFRATE01.YMTCD = "VL";
  VFRATE01.XGPCD = "02";
  VFRATE01.TS-CARR-GRP-CD = "ANER";
  VFRATE01.TSEORIG = TSEREC.TSEORIG;
  VFRATE01.TSEDEST = TSEREC.TSEDEST;
  VFRATE01.TSDBEGDT = PA0CW02.PC6RTADT;

  PA0CS-13-IO7000-SB();

   /* IF DTRANS.VFRATE01 RECORD NOT FOUND, TRY THE GENERAL LOCATION.*/
   /* THIS IS THE FIRST TWO CHARACTERS OF THE TSEDEST.*/

  if (SQLCA.VAGen_SQLCODE == 100)

    PA0CW00.TSEDEST = TSEREC.TSEDEST;
    VFRATE01.TSEDEST = PA0CW00.PA0CW-GENERAL-LOCATION;

    PA0CS-13-IO7000-SB(); /* GET DTRANS.VFRATE01*/

  end

  if (SQLCA.VAGen_SQLCODE == 0)
    PA0CW02.PA0CW-VL-TOTAL = VFRATE01.TS-PAIR-COST-AMT *       PA0CW02.PA0CW-TOTAL-NUM-PAIRS;
    if (PA0CW02.PA0CW-VL-TOTAL < VFRATE01.TS-FRGT-MIN-CHGAMT)
      PA0CW02.PA0CW-VL-TOTAL = VFRATE01.TS-FRGT-MIN-CHGAMT;
    end
  end

   /* ADD TO THE GRAND TOTAL FIGURES*/

  PA0CW01.PA0CW-AF-GRAND-TOTAL = PA0CW01.PA0CW-AF-GRAND-TOTAL +                                PA0CW02.PA0CW-AF-TOTAL;
  PA0CW01.PA0CW-VL-GRAND-TOTAL = PA0CW01.PA0CW-VL-GRAND-TOTAL +                                PA0CW02.PA0CW-VL-TOTAL;


   /* ------------------ End of Process PA0C-12103 ---------------*/

end // end PA0C-12103

// WRITE LINE TO TEMP STORAGE
Function PA0C-12104()

   /* WRITE INFORMATION TO TEMP STORAGE*/

  PA0CW04.PA0CW-TEMP-STORE-GRP[XX6] = PA0CW02.PA0CW-TEMP-GROUP;

  if (PA0CW00.XX6 >= 6)

    PA0C-123(); /* WRITE PAGE TO TEMP STORAGE*/

  else

    PA0CW00.XX6 = PA0CW00.XX6 + 1;

  end



   /* ------------------ End of Process PA0C-12104 ---------------*/

end // end PA0C-12104

// WRITE TOTAL LINE TO TEMP STORE
Function PA0C-122()

   /* WRITE THE GRAND TOTALS TO TEMP STORAGE*/

  set PA0CW02 empty;
  PA0CW02.PA0CW-SELECT = " ";
  PA0CW02.XWHCD = " ";
  PA0CW02.PC2CUXID = " ";
  PA0CW02.PC6ETSDT = 0;
  PA0CW02.PC6RTADT = 0;
  PA0CW02.PA0CW-AF-ETA = 0;
  PA0CW02.PA0CW-VL-ETA = 0;
  PA0CW02.PA0CW-TOTAL-NUM-PAIRS = PA0CW01.PA0CW-GRAND-TOTAL-PAIRS;
  PA0CW02.PA0CW-PACFLADJ-GROUP = PA0CW01.PA0CW-PACFLADJ-GROUP;
  PA0CW02.PA0CW-AF-DOLLAR-PER-PAIR = 0;
  PA0CW02.PA0CW-AF-TOTAL = PA0CW01.PA0CW-AF-GRAND-TOTAL;
  PA0CW02.PA0CW-VL-TOTAL = PA0CW01.PA0CW-VL-GRAND-TOTAL;
  PA0CW02.PA0CW-TOTAL-RECORD = "Y";

  PA0CW04.PA0CW-TEMP-STORE-GRP[XX6] = PA0CW02.PA0CW-TEMP-GROUP;

  PA0C-123();

   /* ------------------ End of Process PA0C-122 -----------------*/

end // end PA0C-122

// WRITE PAGE TO TEMP STORAGE
Function PA0C-123()

   /* WRITE PAGE TO TEMP STORAGE*/

  PA0CW00.PA0CW-MAX-PAGES = PA0CW00.PA0CW-MAX-PAGES + 1;

  PA0CS-16-TA0050-A(); /* ADD PO TO TEMP STORAGE*/

  set PA0CW04 empty;

  PA0CW00.XX6 = 1;


   /* ------------------ End of Process PA0C-123 -----------------*/

end // end PA0C-123

// Format and display the map
Function PA0C-200()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (PA0CW00.PA0CW-DISPLAY-MAP2 == "Y")
    PA0C-205();
    return;
  end

   /* IF PC111D SUBMITTED, GET MOST RECENT PA1REC STATUS*/

  if (PA0CW00.PA0CW-PC111D-SUBMITTED == "Y")
    set PA1REC empty;
    PA1REC.PA1OANBR = PA0CW00.PA1OANBR;
    PA0CS-19-IO4830-S();
    if (VAGen_SQLCODE == 0)
      PA0CW01.YESCD = PA1REC.YESCD;
      PA0CM001.YESCD = PA1REC.YESCD;
    end
  end

  PA0C-20000(); /* SHOW LATEST APPROVAL TIME*/

   /* USERS REQUESTED THAT THE HOLD FLAG BE HIGHLIGHTED IF THE O/A*/
   /* IS ON HOLD.*/

   /* IF PA0CW01.PA1HLDFL EQ 'Y';*/
     /* SET PA0CM001.PA1HLDFL BRIGHT,PROTECT;*/
   /* END;*/

  if (converseVar.validationMsgNum == 0   /* No errors*/
   || converseVar.validationMsgNum == 50  /* THIS O/A NUMBER DOES NOT EXIST*/
   || converseVar.validationMsgNum == 223 /* CAN'T SELECT ITEMS IF HEADER CHANGED*/
   || converseVar.validationMsgNum == 319) /* AVERAGE WEIGHT NOT AVAILABLE*/

    PA0C-210(); /* FORMAT HEADER INFORMATION*/

    if (converseVar.validationMsgNum == 319) /* AVERAGE WEIGHT NOT AVAILABLE*/
      set PA0CM001.SY1STNBR bold;
      set PA0CM001.SY2CLRID bold;
      set PA0CM001.XDMCD bold;
    end

    if (converseVar.validationMsgNum == 223) /* CANT SELECT ITEMS IF HEADER CHANGED*/
      set PA0CM001.PA0CM-SELECT[1] cursor;
    end

    if (PA0CW00.PA0CW-MAX-PAGES > 0)

        /* CHECK TO SEE IF PF7 OR PF8 PRESSED.  THIS IS SO THAT EVEN*/
        /* IF THERE ARE ERRORS, PAGING IS ALLOWED.*/

      if (converseVar.eventKey is pf7
       || converseVar.eventKey is pf8)
        PA0CM001.XXXTSPAG = PA0CW00.PA0CW-CURRENT-TS-PAGE;
      end

      set PA0CW02 empty; /**/
      PA0C-220(); /* FORMAT DATA IN BODY OF MAP*/

    else /* PROTECT SELECTION FIELD*/

      PA0CW00.XX6 = 1;
      while (PA0CW00.XX6 <= 6)
        set PA0CM001.PA0CM-SELECT[XX6] skip, invisible;
        PA0CW00.XX6 = PA0CW00.XX6 + 1;
      end

    end

  else

    PAWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/

    if (PA0CW00.PA0CW-DB2-ERROR == "Y")
      PA0C-210(); /* LOAD HEADER INFORMATION*/
    end

    if (converseVar.validationMsgNum == 314 /* NO OPEN O/AS FOR AIR FREIGHT REQUEST - USE PA0B*/
     || converseVar.validationMsgNum == 318) /* O/A DOES NOT HAVE AN AIR FREIGHT REQUEST*/
      PA0C-210(); /* LOAD HEADER INFORMATION*/
    end

    if (PA0CW00.PA0CW-HEADER-ERROR == "Y")

      set PA0CM001.XXXLITPG skip, invisible;
      set PA0CM001.XXXTSPAG skip, invisible;
      set PA0CM001.XXXLITOF skip, invisible;
      set PA0CM001.TA5TSQIX skip, invisible;

      sysVar.arrayIndex = 1;

      while (sysVar.arrayIndex <= 6)
        PA0C-223(); /* CLEAR OUT BODY OF MAP*/
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end

    else

        /* CHECK TO SEE IF PF7 OR PF8 PRESSED.  THIS IS SO THAT EVEN*/
        /* IF THERE ARE ERRORS, PAGING IS ALLOWED.*/

      if (converseVar.eventKey is pf7
       || converseVar.eventKey is pf8)
        if (converseVar.validationMsgNum != 2 /* NO PREVIOUS PAGES TO DISPLAY*/
         && converseVar.validationMsgNum != 3) /* NO MORE PAGES TO DISPLAY*/
          PA0CM001.XXXTSPAG = PA0CW00.PA0CW-CURRENT-TS-PAGE;
          set PA0CW02 empty; /* SO INFORMATION*/
          PA0C-220(); /* FORMAT DATA IN BODY OF MAP*/
        end
      end

      sysVar.arrayIndex = 1;

      while (sysVar.arrayIndex <= 6)
        if (PA0CM001.PA0CM-TOTAL-NUM-PAIRS[sysVar.arrayIndex] == 0)
          set PA0CM001.PA0CM-SELECT[sysVar.arrayIndex] skip, invisible;
        end
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end

    end

  end

  PA0C-230(); /* PROTECT FIELDS*/

  if (PAWREC.XXXMSGNO != 0)

    PA0CM001.XXXMODID = PAWREC.XXXMODID;
    if (PAWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PAWREC.XXXMSGNO);
    end /* Message number*/
    PAWREC.XXXMSGNO = 0;
    set PA0CM001 alarm; /* Indicate sound alarm*/

  end

   /* IF COMING FROM PA0P, PLACE CURSOR ON THE LIASON*/

  if (COMMAREA.CAFROMAP == "PA0P"
   && PA0CW00.PA-AFRGT-RQT-ID != 0
   && PA0CW00.PA1OANBR != 0
   && converseVar.validationMsgNum == 0)
    if (PA0CM001.PA-LIAS-CTCT-NM == " ")
      set PA0CM001.PA-LIAS-CTCT-NM cursor;
    else
      if (PA0CM001.PA-RSN-COMNT1 == " ")
        set PA0CM001.PA-RSN-COMNT1 cursor;
      end
    end
  end

  if (PA0CM001.PA1OANBR > 199999
   && PA0CM001.PA1OANBR < 300000)
    set PA0CM001.PA-LIAS-CTCT-NM skip;
    set PA0CM001.PA-RSN-COMNT1 skip;
    set PA0CM001.PA-RSN-COMNT2 skip;
    set PA0CM001.PA-RSN-COMNT3 skip;

     /* SET PA0CM001.PA-RSP-COMNT1 AUTOSKIP;*/
     /* SET PA0CM001.PA-RSP-COMNT2 AUTOSKIP;*/
     /* SET PA0CM001.PA-BLTO-NIKE-PCT AUTOSKIP;*/
     /* SET PA0CM001.PA-BLTO-FCTY-PCT AUTOSKIP;*/
     /* SET PA0CM001.PA-BLTO-CUST-PCT AUTOSKIP;*/
     /* SET PA0CM001.PA-BLTO-FRWRDR-PCT AUTOSKIP;*/
     /* SET PA0CM001.PA0CM-PF9-LABEL AUTOSKIP,DARK;*/
     /* MOVE 1 TO EZETST;*/
     /* WHILE EZETST LE 5;*/
       /* SET PA0CM001.PA0CM-PA-DEPT-RSP-X(EZETST) AUTOSKIP;*/
       /* EZETST = EZETST + 1;*/
     /* END;*/
  end

  converse PA0CM001 ;

  PAWREC.XXXMODID = " "; /* Module id*/
  PA0CW00.XXXMSGNO = 0; /* Reset message number*/

  COMMAREA.CATOAP = PA0CM001.CATOAP; /* To application*/
  COMMAREA.CAITEM = PA0CM001.CAITEM; /* Application data*/

   /* ------------------ end of process PA0C-200 -----------------*/

end // end PA0C-200

// SHOW MOST RECENT APPROVAL
Function PA0C-20000()
   /* ------------------------------------------------------------*/
   /* SHOW THE LATEST APPROVAL TIME*/
   /* ------------------------------------------------------------*/

  if (PA0CW00.PA0CW-APPROVED-DATE != 0)

    PA0CM001.PA0CM-APPROVED-DATE = PA0CW00.PA0CW-APPROVED-DATE;
    PA0CW00.PA0CW-APPROVED-HH = PA0CW00.PA0CW-APPROVED-HOUR;
    PA0CW00.PA0CW-APPROVED-COLON = ":";
    PA0CW00.PA0CW-APPROVED-MM = PA0CW00.PA0CW-APPROVED-MIN;

    PA0CM001.PA0CM-APPROVED-TIME = PA0CW00.PA0CW-APPROVED-TIME;

  end

   /* ------------------ End of Process PA0C-20000 ---------------*/

end // end PA0C-20000

// Format and display MAP2
Function PA0C-205()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  converseLib.clearScreen();

  PA0CM002.FB8BUYDT = PAWREC.PAWBUYYM;
  PA0CM002.XXXCURDT = VGVar.currentShortGregorianDate;

  converse PA0CM002 ;

  PAWREC.XXXMODID = " "; /* Module id*/
  PA0CW00.XXXMSGNO = 0; /* Reset message number*/

  COMMAREA.CATOAP = PA0CM002.CATOAP; /* To application*/
  COMMAREA.CAITEM = PA0CM002.CAITEM; /* Application data*/

   /* ------------------ end of process PA0C-205 -----------------*/

end // end PA0C-205

// FORMAT DATA IN HEADER
Function PA0C-210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set PA0CM001 initial; /* M001 input/output area*/

   /* ------------------------------------------------------------*/
   /* Format the data in the header portion of the map*/
   /* ------------------------------------------------------------*/

  PA0CM001.XXXCURDT = VGVar.currentShortGregorianDate; /* current system date*/
  PA0CM001.PAWBUYYM = PAWREC.PAWBUYYM; /* Current buy date yymm*/

  PA0CM001.XXXTSPAG = PA0CW00.PA0CW-CURRENT-TS-PAGE; /* FROM PAGE*/
  PA0CM001.TA5TSQIX = PA0CW00.PA0CW-MAX-PAGES; /* TO PAGE*/

  if (PA0CW00.PA0CW-CURRENT-TS-PAGE == 0
   && PA0CW00.PA0CW-MAX-PAGES == 0)
    set PA0CM001.XXXLITPG skip, invisible;
    set PA0CM001.XXXTSPAG skip, invisible;
    set PA0CM001.XXXLITOF skip, invisible;
    set PA0CM001.TA5TSQIX skip, invisible;
  end

   /* ------------------------------------------------------------*/
   /* Format the data HEADER INFORMATION*/
   /* ------------------------------------------------------------*/
  PA0CM001.PA1OANBR = PA0CW00.PA1OANBR;

  if (converseVar.validationMsgNum == 50) /* O/A NUMBER DOES NOT EXIST*/
    set PA0CM001.PA1OANBR cursor, bold;
    PA0CW00.PA1OANBR = 0;
  end

   /* /TCS PA679*/
  if (converseVar.validationMsgNum == 314) /* OPEN O/A FOR AIR FREIGHT NOT FOUND - USE PA0B*/
    set PA0CM001.PA-AFRGT-RQT-ID cursor, bold;
    PA0CW00.PA-AFRGT-RQT-ID = 0;
  end

  if (converseVar.validationMsgNum == 318) /* THIS O/A DOES NOT HAVE AN AIR FREIGHT REQUEST*/
    set PA0CM001.PA1OANBR cursor, bold;
  end

  PA0CM001.PA-AFRGT-RQT-ID = PA0CW00.PA-AFRGT-RQT-ID;
  PA0CM001.XXXPGUID = PA0CW01.XXXPGUID;

  if (PA0CW01.ZZZSDT == 0)
    PA0CM001.PA0CM-ZZZSDT = " ";
  else
    PA0CW00.PA0CW-CCYYMMDD = PA0CW01.ZZZSDT;
    PA0CW00.PA0CW-MMDDYY-MM = PA0CW00.PA0CW-CCYYMMDD-MM;
    PA0CW00.PA0CW-MMDDYY-DD = PA0CW00.PA0CW-CCYYMMDD-DD;
    PA0CW00.PA0CW-MMDDYY-YY = PA0CW00.PA0CW-CCYYMMDD-YY;
    PA0CM001.PA0CM-ZZZSDT = PA0CW00.PA0CW-MMDDYY;
  end

  PA0CM001.PA0CM-MESSAGE = PA0CW01.PA0CW-MESSAGE;
  PA0CM001.YESCD = PA0CW01.YESCD;
  PA0CM001.YETCD = PA0CW01.YETCD;
  PA0CM001.PA0CM-PC-PO-ID-MO-RNG = PA0CW01.PC3POIDT;
  PA0CM001.SY1STNBR = PA0CW01.SY1STNBR;
  PA0CM001.SY2CLRID = PA0CW01.SY2CLRID;
  PA0CM001.XDMCD = PA0CW01.XDMCD;
  PA0CM001.SY1SSTNM = PA0CW01.SY1SSTNM;
  PA0CM001.FY1FCTYC = PA0CW01.FY1FCTYC;
  PA0CM001.XCTCD = PA0CW01.XCTCD;
  PA0CM001.PA-BLTO-NIKE-PCT = PA0CW01.PA-BLTO-NIKE-PCT;
  PA0CM001.PA-BLTO-FCTY-PCT = PA0CW01.PA-BLTO-FCTY-PCT;
  PA0CM001.PA-BLTO-CUST-PCT = PA0CW01.PA-BLTO-CUST-PCT;
  PA0CM001.PA-BLTO-FRWRDR-PCT = PA0CW01.PA-BLTO-FRWRDR-PCT;
  PA0CM001.PA0CM-PA-BLTO-TOTAL = PA0CW01.PA0CW-PA-BLTO-TOTAL;
  PA0CM001.PA-LIAS-CTCT-NM = PA0CW01.PA-LIAS-CTCT-NM;
  PA0CM001.PA-RSP-COMNT1 = PA0CW01.PA-RSP-COMNT1;
  PA0CM001.PA-RSP-COMNT2 = PA0CW01.PA-RSP-COMNT2;
  PA0CM001.PA-RSN-COMNT1 = PA0CW01.PA-RSN-COMNT1;
  PA0CM001.PA-RSN-COMNT2 = PA0CW01.PA-RSN-COMNT2;
  PA0CM001.PA-RSN-COMNT3 = PA0CW01.PA-RSN-COMNT3;

  PA0CM001.PA1HLDFL = PA0CW01.PA1HLDFL;

   /* USERS REQUESTED THAT THE HOLD FLAG BE HIGHLIGHTED IF THE O/A*/
   /* IS ON HOLD.*/

  if (PA0CW01.PA1HLDFL == "Y")
    set PA0CM001.PA1HLDFL bold, protect;
  end

   /* MOVE THE DEPARTMENT RESPONSIBLE LABELS INTO THE MAP*/

  sysVar.arrayIndex = 1;
  PA0CW00.XX1 = 1;
  while (sysVar.arrayIndex <= 5
   && PACTBL.PA-DEPT-RSP-IND != "Z") /* END OF TABLE*/
    if (PACTBL.XXXSTAT[XX1] == "A")
      PA0CM001.PA0CM-PA-DEPT-RSP-DESC[sysVar.arrayIndex] = PACTBL.PACTBL-DEPT-RSP-DESC[XX1];
      sysVar.arrayIndex = sysVar.arrayIndex + 1;
    end
    PA0CW00.XX1 = PA0CW00.XX1 + 1;
  end

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 5)

    PA0CM001.PA0CM-PA-DEPT-RSP-X[sysVar.arrayIndex] = PA0CW01.PA0CW-PA-DEPT-RSP-X[sysVar.arrayIndex];

    sysVar.arrayIndex = sysVar.arrayIndex + 1;

  end

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 3)
    PA0CM001.PA-AFRGT-APVL-MGR[sysVar.arrayIndex] = PA0CW01.PA-AFRGT-APVL-MGR[sysVar.arrayIndex];
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

   /* ------------------ End of Process PA0C-210 -----------------*/

end // end PA0C-210

// FORMAT DATA IN BODY OF MAP
Function PA0C-220()
   /* ------------------------------------------------------------*/
   /* Format the data in the body of the map*/
   /* ------------------------------------------------------------*/

   /* RETRIEVE RECORDS FROM TEMP STORAGE*/

  if (PA0CW00.PA0CW-DB2-ERROR == "Y")
    return;
  end

  set PA0CW04 empty; /* CLEAR OUT TEMP STORAGE WORK RECORD FIRST*/

  PA0CS-17-TA0050-R(); /* READ 1 PAGE OF TEMP STORAGE*/

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 6)

    PA0CM001.PA0CM-SELECT[sysVar.arrayIndex] = PA0CW04.PA0CW-SELECT[sysVar.arrayIndex];
    PA0CW01.PA0CW-SELECT[sysVar.arrayIndex] = PA0CW04.PA0CW-SELECT[sysVar.arrayIndex];

    PA0CW02.PA0CW-TEMP-GROUP = PA0CW04.PA0CW-TEMP-STORE-GRP[sysVar.arrayIndex];

    if (PA0CW02.PA0CW-TEMP-GROUP != " ")
      PA0CM001.PA0CM-SELECT[sysVar.arrayIndex] = PA0CW02.PA0CW-SELECT;
      PA0CM001.PA0CM-XWH-WHSE-CD[sysVar.arrayIndex] = PA0CW02.XWHCD;
      PA0CM001.PA0CM-PC-PRDCU-ID[sysVar.arrayIndex] = PA0CW02.PC2CUXID;

      if (PA0CW02.PC6ETSDT == 0)
        PA0CM001.PA0CM-PC-EST-HDT[sysVar.arrayIndex] = " ";
      else
        PA0CW00.PA0CW-CCYYMMDD = PA0CW02.PC6ETSDT;
        PA0CW00.PA0CW-MMDDYY-MM = PA0CW00.PA0CW-CCYYMMDD-MM;
        PA0CW00.PA0CW-MMDDYY-DD = PA0CW00.PA0CW-CCYYMMDD-DD;
        PA0CW00.PA0CW-MMDDYY-YY = PA0CW00.PA0CW-CCYYMMDD-YY;
        PA0CM001.PA0CM-PC-EST-HDT[sysVar.arrayIndex] = PA0CW00.PA0CW-MMDDYY;
      end

      if (PA0CW02.PC6RTADT == 0)
        PA0CM001.PA0CM-PC-RQT-ARVDT[sysVar.arrayIndex] = " ";
      else
        PA0CW00.PA0CW-CCYYMMDD = PA0CW02.PC6RTADT;
        PA0CW00.PA0CW-MMDDYY-MM = PA0CW00.PA0CW-CCYYMMDD-MM;
        PA0CW00.PA0CW-MMDDYY-DD = PA0CW00.PA0CW-CCYYMMDD-DD;
        PA0CW00.PA0CW-MMDDYY-YY = PA0CW00.PA0CW-CCYYMMDD-YY;
        PA0CM001.PA0CM-PC-RQT-ARVDT[sysVar.arrayIndex] = PA0CW00.PA0CW-MMDDYY;
      end

      if (PA0CW02.PA0CW-AF-ETA == 0)
        PA0CM001.PA0CM-AF-ETA-CALC[sysVar.arrayIndex] = " ";
      else
        PA0CW00.PA0CW-CCYYMMDD = PA0CW02.PA0CW-AF-ETA;
        PA0CW00.PA0CW-MMDDYY-MM = PA0CW00.PA0CW-CCYYMMDD-MM;
        PA0CW00.PA0CW-MMDDYY-DD = PA0CW00.PA0CW-CCYYMMDD-DD;
        PA0CW00.PA0CW-MMDDYY-YY = PA0CW00.PA0CW-CCYYMMDD-YY;
        PA0CM001.PA0CM-AF-ETA-CALC[sysVar.arrayIndex] = PA0CW00.PA0CW-MMDDYY;
      end

      if (PA0CW02.PA0CW-TOTAL-RECORD == "Y")
        PA0CM001.PA0CM-VL-ETA-CALC[sysVar.arrayIndex] = "TOTALS";
        set PA0CM001.PA0CM-VL-ETA-CALC[sysVar.arrayIndex] skip, bold;
        set PA0CM001.PA0CM-TOTAL-NUM-PAIRS[sysVar.arrayIndex] skip, bold;
        set PA0CM001.PA0CM-AF-DOLLAR-PER-PAIR[sysVar.arrayIndex] skip, invisible;
        set PA0CM001.PA0CM-AF-TOTAL[sysVar.arrayIndex] skip, bold;
        set PA0CM001.PA0CM-VL-TOTAL[sysVar.arrayIndex] skip, bold;
      else
        set PA0CM001.PA0CM-VL-ETA-CALC[sysVar.arrayIndex] initialAttributes;
        set PA0CM001.PA0CM-TOTAL-NUM-PAIRS[sysVar.arrayIndex] initialAttributes;
        set PA0CM001.PA0CM-AF-DOLLAR-PER-PAIR[sysVar.arrayIndex] initialAttributes;
        set PA0CM001.PA0CM-AF-TOTAL[sysVar.arrayIndex] initialAttributes;
        set PA0CM001.PA0CM-VL-TOTAL[sysVar.arrayIndex] initialAttributes;
        if (PA0CW02.PA0CW-VL-ETA == 0)
          PA0CM001.PA0CM-VL-ETA-CALC[sysVar.arrayIndex] = " ";
        else
          PA0CW00.PA0CW-CCYYMMDD = PA0CW02.PA0CW-VL-ETA;
          PA0CW00.PA0CW-MMDDYY-MM = PA0CW00.PA0CW-CCYYMMDD-MM;
          PA0CW00.PA0CW-MMDDYY-DD = PA0CW00.PA0CW-CCYYMMDD-DD;
          PA0CW00.PA0CW-MMDDYY-YY = PA0CW00.PA0CW-CCYYMMDD-YY;
          PA0CM001.PA0CM-VL-ETA-CALC[sysVar.arrayIndex] = PA0CW00.PA0CW-MMDDYY;
        end
      end

      PA0CM001.PA0CM-TOTAL-NUM-PAIRS[sysVar.arrayIndex] = PA0CW02.PA0CW-TOTAL-NUM-PAIRS;
      PA0CM001.PA0CM-AF-DOLLAR-PER-PAIR[sysVar.arrayIndex] = PA0CW02.PA0CW-AF-DOLLAR-PER-PAIR;
      PA0CM001.PA0CM-AF-TOTAL[sysVar.arrayIndex] = PA0CW02.PA0CW-AF-TOTAL;
      PA0CM001.PA0CM-VL-TOTAL[sysVar.arrayIndex] = PA0CW02.PA0CW-VL-TOTAL;
    end

    sysVar.arrayIndex = sysVar.arrayIndex + 1;

  end


   /* ------------------ End of Process PA0C-220 -----------------*/

end // end PA0C-220

// CLEAR OUT BODY OF THE MAP
Function PA0C-223()
   /* **********************************************************************/
   /* CLEAR OUT THE BODY OF THE MAP.*/
   /* **********************************************************************/

  set PA0CM001.PA0CM-SELECT[sysVar.arrayIndex] skip, invisible;

  PA0CM001.PA0CM-SELECT[sysVar.arrayIndex] = " ";
  PA0CM001.PA0CM-PC-PRDCU-ID[sysVar.arrayIndex] = " ";
  PA0CM001.PA0CM-PC-RQT-ARVDT[sysVar.arrayIndex] = " ";
  PA0CM001.PA0CM-PC-EST-HDT[sysVar.arrayIndex] = " ";
  PA0CM001.PA0CM-AF-ETA-CALC[sysVar.arrayIndex] = " ";
  PA0CM001.PA0CM-VL-ETA-CALC[sysVar.arrayIndex] = " ";
  PA0CM001.PA0CM-TOTAL-NUM-PAIRS[sysVar.arrayIndex] = 0;
  PA0CM001.PA0CM-AF-DOLLAR-PER-PAIR[sysVar.arrayIndex] = 0;
  PA0CM001.PA0CM-AF-TOTAL[sysVar.arrayIndex] = 0;
  PA0CM001.PA0CM-VL-TOTAL[sysVar.arrayIndex] = 0;

  set PA0CM001.PA0CM-TOTAL-NUM-PAIRS[sysVar.arrayIndex] skip, invisible;
  set PA0CM001.PA0CM-AF-DOLLAR-PER-PAIR[sysVar.arrayIndex] skip, invisible;
  set PA0CM001.PA0CM-AF-TOTAL[sysVar.arrayIndex] skip, invisible;
  set PA0CM001.PA0CM-VL-TOTAL[sysVar.arrayIndex] skip, invisible;

   /* ------------------ End of Process PA0C-223 -----------------*/

end // end PA0C-223

// PROTECT FIELDS
Function PA0C-230()
   /* * ------------------------------------------------------------*/
   /* PROTECT FIELDS*/
   /* ------------------------------------------------------------*/

   /* IF PA0CM001.YESCD = '75';/* O/A HAS ALREADY UPDATED PO*/
     /* PERFORM PA0C-23002;/* PROTECT LIASON AND AF REASON*/
   /* ELSE;*/
  if (PA0CM001.PA-AFRGT-RQT-ID == 0
   && PA0CM001.PA1OANBR == 0)
    PA0C-23001(); /* PROTECT BILL TO & DEPT. RESP.*/
    PA0C-23002(); /* PROTECT LIASON AND AF REASON*/
  end
   /* END;*/

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 6)
    if (PA0CM001.PA0CM-TOTAL-NUM-PAIRS[sysVar.arrayIndex] == 0)
      set PA0CM001.PA0CM-SELECT[sysVar.arrayIndex] skip, invisible;
    end

    sysVar.arrayIndex = sysVar.arrayIndex + 1;

  end

  if (COMMAREA.CAALVL[1] != "Y")

    PA0C-23001(); /* PROTECT BILL TO & DEPT. RESP.*/

  end


   /* ------------------ End of Process PA0C-230 -----------------*/

end // end PA0C-230

// PROTECT BILL TO & DEPT. RESP.
Function PA0C-23001()
   /* * ------------------------------------------------------------*/
   /* PROTECT FIELDS*/
   /* ------------------------------------------------------------*/

  set PA0CM001.PA-BLTO-NIKE-PCT protect;
  set PA0CM001.PA-BLTO-FCTY-PCT protect;
  set PA0CM001.PA-BLTO-CUST-PCT protect;
  set PA0CM001.PA-BLTO-FRWRDR-PCT protect;
  set PA0CM001.PA-RSP-COMNT1 protect;
  set PA0CM001.PA-RSP-COMNT2 protect;

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 5)
    set PA0CM001.PA0CM-PA-DEPT-RSP-X[sysVar.arrayIndex] protect;
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

   /* ------------------ End of Process PA0C-23001 ---------------*/

end // end PA0C-23001

// PROTECT LIASON AND AF REASON
Function PA0C-23002()
   /* * ------------------------------------------------------------*/
   /* PROTECT FIELDS*/
   /* ------------------------------------------------------------*/

  set PA0CM001.PA-LIAS-CTCT-NM protect;
  set PA0CM001.PA-RSN-COMNT1 protect;
  set PA0CM001.PA-RSN-COMNT2 protect;
  set PA0CM001.PA-RSN-COMNT3 protect;


   /* ------------------ End of Process PA0C-23002 ---------------*/

end // end PA0C-23002

// CHECK ATTENTION IDENTIFIER
Function PA0C-300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (PA0CW00.PA0CW-DISPLAY-MAP2 == "Y")
    PA0C-305();
    return;
  end

   /* DON'T ALLOW PF9 IF NO AIR FREIGHT NUMBER*/

  if (PA0CM001.PA-AFRGT-RQT-ID == 0)
    if (converseVar.eventKey is pf9)
      PAWREC.XXXMODID = "300";
      converseLib.validationFailed(318);
      exit stack;
    end
  end

   /* IF PF9/PF18 CONFIRMATION LINE DISPLAYED AND PF9 OR PF18 WAS NOT*/
   /* HIT, RESET CONFIRMATION SWITCH*/

  if (PA0CW00.PA0CW-CONFIRM-MSG-SHOWN == "Y"
   && converseVar.eventKey not pf9)
    PA0CW00.PA0CW-CONFIRM-MSG-SHOWN = "N";
  end

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    converseLib.clearScreen();
     /* clear map fields*/
    PA0CW00.PA0CW-REQ-FOR-DATA-FLAG = "N"; /* request data*/
    exit stack; /* Exit to redisplay map*/
  end

  if (PA0CM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      PAWREC.PAWOANBR = PA0CW00.PA1OANBR; /* MOVE IN O/A NUMBER*/
      COMMAREA.CATOAP = PA0CM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = PA0CM001.CAITEM; /* Application data*/
      XSPAS01(); /* Exit to another application*/
    else
      PAWREC.XXXMODID = "300";
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    set PA0CM001.CATOAP cursor, modified, bold; /* Highlight*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* pf3 pressed*/
       /* NEXT SENTENCE*/
    else
      if (converseVar.eventKey is pf1) /* pf1 pressed*/
        COMMAREA.CAITEM = "PA0CM001"; /* move in map name for help*/
      else
        COMMAREA.CAITEM = " "; /* clear item field*/
      end
    end

    XSPAS01(); /* Exit to another application*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf12) /* reset screen*/

    XSPAS04(); /* COMMON PFKEY PROCESSING*/

    PA0CW00.PA1OANBR = PAWREC.PAWOANBR;

    if (PA0CW00.PA1OANBR > 0)
      PA0CW00.PA0CW-REQ-FOR-DATA-FLAG = "Y";
    else
      set PA0CM001 initial;
    end

    exit stack;

  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf5   /* AND NOT TRANSFER TO PA0A*/
   && converseVar.eventKey not pf7   /* and not PF7 up*/
   && converseVar.eventKey not pf8   /* and not PF8 down*/
   && converseVar.eventKey not pf9   /* and not PF9 accept*/
   && converseVar.eventKey not pf13  /* and not PF13 PA0P*/
   && converseVar.eventKey not pf14  /* and not PF14 PA0N*/
   && converseVar.eventKey not pf15  /* and not PF15 PA0B*/
   && converseVar.eventKey not pf18  /* and not PF18 PA0Q*/
   && converseVar.eventKey not pf19  /* and not PF19 PA0Z*/
   && converseVar.eventKey not pf20  /* and not PF20 SIZE*/
   && converseVar.eventKey not pf21) /* and not PF21 PA0E*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5) /* TRANSFER TO PA0A*/
    PA0CM001.CATOAP = "PA0A";
    PA0CS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end

  if (converseVar.eventKey is pf9)
    if (PA0CW01.PA1HLDFL == "Y" /* IF O/A ON HOLD*/
     || PA0CW00.PA0CW-READ-ONLY == "Y")
      PAWREC.XXXMODID = "300";
      converseLib.validationFailed(254);
    end
  end

  if (converseVar.eventKey is pf13) /* TRANSFER TO PA0P*/
    PA0CM001.CATOAP = "PA0P";
    PA0CS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end

  if (converseVar.eventKey is pf14) /* TRANSFER TO PA0N*/
    PA0CM001.CATOAP = "PA0N";
    PA0CS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end

  if (converseVar.eventKey is pf15) /* FACTORY FOR STYLE POP-UP*/
    PA0CM001.CATOAP = "PA0B";
    PA0CS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end

  if (converseVar.eventKey is pf18) /* reset screen*/
    PA0CM001.CATOAP = "PA0Q";
    PA0CS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end

  if (converseVar.eventKey is pf19) /* reset screen*/
    PA0CM001.CATOAP = "PA0Z";
    PA0CS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end

  if (converseVar.eventKey is pf20 /* DISPLAY SIZE DETAIL*/
   && converseVar.validationMsgNum == 0)
    PA0CW00.PA0CW-DISPLAY-MAP2 = "Y";
    PA0CW00.XX7 = 0;
  else
    PA0CW00.PA0CW-DISPLAY-MAP2 = "N";
  end

  if (converseVar.eventKey is pf21) /* reset screen*/
    PA0CM001.CATOAP = "PA0E";
    PA0CS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end

   /* ------------------ End of Process PA0C-300 -----------------*/

end // end PA0C-300

// CHECK ATTENTION IDENT MAP2
Function PA0C-305()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2)
    exit stack;
  end

  if (PA0CM002.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      PAWREC.PAWOANBR = PA0CM002.PA1OANBR; /* LOAD O/A NUMBER*/
      COMMAREA.CATOAP = PA0CM002.CATOAP; /* TO application*/
      COMMAREA.CAITEM = PA0CM002.CAITEM; /* Application data*/
      XSPAS01(); /* Exit to another application*/
    else
      PAWREC.XXXMODID = "300";
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    set PA0CM002.CATOAP cursor, modified, bold; /* Highlight*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3) /* or PF3 was pressed*/

    if (converseVar.eventKey is pf3) /* pf3 pressed*/
      PA0CW00.PA0CW-DISPLAY-MAP2 = "N";

      sysVar.arrayIndex = 1;
      while (sysVar.arrayIndex <= 11)
        PA0CW01.PA0CW-SELECT[sysVar.arrayIndex] = " ";
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end

      exit stack;
    else
      COMMAREA.CAITEM = "PA0CM002"; /* move in map name for help*/
    end

    XSPAS01(); /* Exit to another application*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end


   /* ------------------ End of Process PA0C-305 -----------------*/

end // end PA0C-305

// RESET HIGHLIGHTED FIELDS
Function PA0C-400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set PA0CM001.PA0CM-MESSAGE initialAttributes;
  set PA0CM001.PA-AFRGT-RQT-ID initialAttributes; /* AF NUMBER*/
  set PA0CM001.PA1OANBR initialAttributes; /* OA NUMBER*/
  set PA0CM001.PA-BLTO-NIKE-PCT initialAttributes; /* BILL TO NIKE PERCENT*/
  set PA0CM001.PA-BLTO-FCTY-PCT initialAttributes; /* BILL TO FACTORY PERCENT*/
  set PA0CM001.PA-BLTO-CUST-PCT initialAttributes; /* BILL TO CUSTOMER PERCENT*/
  set PA0CM001.PA-BLTO-FRWRDR-PCT initialAttributes; /* BILL TO FORWARDER %*/
  set PA0CM001.PA0CM-PA-BLTO-TOTAL initialAttributes; /* BILL TO TOTAL     %*/
  set PA0CM001.PA-LIAS-CTCT-NM initialAttributes; /* FACTORY CONTACT*/
  set PA0CM001.PA-RSP-COMNT1 initialAttributes; /* DEPT RESPONSIBLE COMMENT*/
  set PA0CM001.PA-RSP-COMNT2 initialAttributes; /* DEPT RESPONSIBLE COMMENT*/
  set PA0CM001.PA-RSN-COMNT1 initialAttributes; /* AIR FREIGHT REASON COMMENT*/
  set PA0CM001.PA-RSN-COMNT2 initialAttributes; /* AIR FREIGHT REASON COMMENT*/
  set PA0CM001.PA-RSN-COMNT3 initialAttributes; /* AIR FREIGHT REASON COMMENT*/
  set PA0CM001.YESCD initialAttributes;

  sysVar.arrayIndex = 1;

  while (sysVar.arrayIndex <= 5)
    set PA0CM001.PA0CM-PA-DEPT-RSP-X[sysVar.arrayIndex] initialAttributes;
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

  sysVar.arrayIndex = 1;

  while (sysVar.arrayIndex <= 6)
    set PA0CM001.PA0CM-SELECT[sysVar.arrayIndex] initialAttributes;
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 3)
    set PA0CM001.PA-AFRGT-APVL-MGR[sysVar.arrayIndex] initialAttributes;
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

  set PA0CM001.CATOAP initialAttributes; /* Commarea TO application*/
  set PA0CM001.CAITEM initialAttributes; /* Commarea application data*/

   /* ------------------ end of process PA0C-400 -----------------*/

end // end PA0C-400

// VERIFY THE DATA ENTERED
Function PA0C-500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    PAWREC.XXXMODID = "150"; /* Module identification*/
    set PA0CM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

   /* ------------------------------------------------------------*/
   /* verify request to page forward(pf7) or backwards(pf8), and*/
   /* check modifiable fields*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)

    PA0C-510(); /* verify scroll request*/

    if (converseVar.validationMsgNum == 2 /* NO PREVIOUS PAGES TO DISPLAY*/
     || converseVar.validationMsgNum == 3) /* NO MORE PAGES TO DISPLAY*/
      exit stack;
    end

    PA0C-520(); /* check modifiable fields*/

  end

   /* ------------------------------------------------------------*/
   /* if data loaded, verify modifiable fields*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf9  /* accept update   (pf9)*/
   || converseVar.eventKey is pf18 /**/
   || converseVar.eventKey is pf17 /* IF TRANSFER TO PA0U REQUESTED*/
   || converseVar.eventKey is pf20) /* IF SIZE DETAIL REQUESTED*/

    PA0C-520(); /* check modifiable fields*/

  end

   /* DON'T FORGET TO ALLOW PAGING EVEN IF THERE ARE ERRORS*/

  if (converseVar.validationMsgNum != 0)
    if (converseVar.eventKey is pf7
     || converseVar.eventKey is pf8)
         /* NEXT SENTENCE*/
    else
      exit stack; /* display error message*/
    end
  end


end // end PA0C-500

// VERIFY SCROLL REQUEST
Function PA0C-510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && PA0CW00.PA0CW-CURRENT-TS-PAGE < 2)

    PAWREC.XXXMODID = "151"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && PA0CW00.PA0CW-CURRENT-TS-PAGE >= PA0CW00.PA0CW-MAX-PAGES)

    PAWREC.XXXMODID = "151"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end


end // end PA0C-510

// VALIDATE MODIFIABLE DATA
Function PA0C-520()
   /* ------------------------------------------------------------*/
   /* DETERMINE IF KEY FIELD HAS CHANGED ON MAP*/
   /* ------------------------------------------------------------*/

  PA0CW00.PA0CW-KEY-CHANGED = "N";

  if (PA0CM001.PA1OANBR == 0
   && PA0CM001.PA-AFRGT-RQT-ID == 0
   && PA0CW00.PA1OANBR == 0
   && PA0CW00.PA-AFRGT-RQT-ID == 0)
    return;
  end

   /* CHECK TO SEE IF THE AF AND OA NUMBER CHANGED AT THE SAME TIME.*/

  if (PA0CM001.PA1OANBR != PA0CW00.PA1OANBR
   && PA0CM001.PA1OANBR != 0)

    if (PA0CM001.PA-AFRGT-RQT-ID != PA0CW00.PA-AFRGT-RQT-ID
     && PA0CM001.PA-AFRGT-RQT-ID != 0)
      set PA0CM001.PA-AFRGT-RQT-ID cursor, bold;
      set PA0CM001.PA1OANBR bold;
      PAWREC.XXXMODID = "520";
      converseLib.validationFailed(306); /* CAN'T ENTER AF AND OA AT THE SAME TIME*/
      return;
    end

  end

  if (PA0CM001.PA1OANBR == PA0CW00.PA1OANBR
   && PA0CM001.PA-AFRGT-RQT-ID == PA0CW00.PA-AFRGT-RQT-ID)
    PA0C-521(); /* EDIT BODY OF MAP*/
    PA0C-523(); /* EDIT HEADER DATA*/
    return;
  end

  PA0C-522(); /* SETUP FOR NEW AF/OA*/


   /* ------------- End of process PA0C-520 ----------------------*/

end // end PA0C-520

// VALIDATE MODIFIABLE DATA
Function PA0C-521()
   /* ------------------------------------------------------------*/
   /* DETERMINE IF KEY FIELD HAS CHANGED ON MAP*/
   /* ------------------------------------------------------------*/


  if (PA0CM001.PA-BLTO-NIKE-PCT != PA0CW01.PA-BLTO-NIKE-PCT
   || PA0CM001.PA0CM-PA-DEPT-RSP-X[1] != PA0CW01.PA0CW-PA-DEPT-RSP-X[1]
   || PA0CM001.PA-BLTO-FCTY-PCT != PA0CW01.PA-BLTO-FCTY-PCT
   || PA0CM001.PA0CM-PA-DEPT-RSP-X[2] != PA0CW01.PA0CW-PA-DEPT-RSP-X[2]
   || PA0CM001.PA-BLTO-CUST-PCT != PA0CW01.PA-BLTO-CUST-PCT
   || PA0CM001.PA0CM-PA-DEPT-RSP-X[3] != PA0CW01.PA0CW-PA-DEPT-RSP-X[3]
   || PA0CM001.PA-BLTO-FRWRDR-PCT != PA0CW01.PA-BLTO-FRWRDR-PCT
   || PA0CM001.PA0CM-PA-DEPT-RSP-X[4] != PA0CW01.PA0CW-PA-DEPT-RSP-X[4]
   || PA0CM001.PA-LIAS-CTCT-NM != PA0CW01.PA-LIAS-CTCT-NM
   || PA0CM001.PA0CM-PA-DEPT-RSP-X[5] != PA0CW01.PA0CW-PA-DEPT-RSP-X[5]
   || PA0CM001.PA-RSP-COMNT1 != PA0CW01.PA-RSP-COMNT1
   || PA0CM001.PA-RSP-COMNT2 != PA0CW01.PA-RSP-COMNT2
   || PA0CM001.PA-RSN-COMNT1 != PA0CW01.PA-RSN-COMNT1
   || PA0CM001.PA-RSN-COMNT2 != PA0CW01.PA-RSN-COMNT2
   || PA0CM001.PA-RSN-COMNT3 != PA0CW01.PA-RSN-COMNT3
  )
    if (PA0CM001.PA1OANBR == PA0CW00.PA1OANBR
     && PA0CM001.PA1OANBR != 0)
      PA0CW00.PA0CW-REQ-FOR-DATA-FLAG = "N";
    end

    if (PA0CM001.PA-AFRGT-RQT-ID == PA0CW00.PA-AFRGT-RQT-ID
     && PA0CM001.PA-AFRGT-RQT-ID != 0)
      PA0CW00.PA0CW-REQ-FOR-DATA-FLAG = "N";
    end

    PA0CW00.PA0CW-UPDATE-VPAAFH01-FLAG = "Y";

  else

    PA0CW00.PA0CW-REQ-FOR-DATA-FLAG = "N";

  end


   /* ------------- End of process PA0C-521 ----------------------*/

end // end PA0C-521

// VALIDATE MODIFIABLE DATA
Function PA0C-522()
   /* ------------------------------------------------------------*/
   /* DETERMINE IF KEY FIELD HAS CHANGED ON MAP*/
   /* ------------------------------------------------------------*/

   /* PURGE TEMP STORAGE*/

  PA0CS-01-TA0050-P();

  set PA0CW01 empty;
  PA0CW00.PA0CW-READ-ONLY = "N";
  PA0CW00.PA0CW-CONFIRM-MSG-SHOWN = "N";

  if (PA0CM001.PA1OANBR != 0
   && PA0CM001.PA1OANBR != PA0CW00.PA1OANBR)
    PA0CW00.PA0CW-REQ-FOR-DATA-FLAG = "Y";
    PA0CW00.PA0CW-KEY-CHANGED = "Y";
    PA0CW00.PA-AFRGT-RQT-ID = 0;
    PA0CW00.PA1OANBR = PA0CM001.PA1OANBR;
    return;
  end

  if (PA0CM001.PA-AFRGT-RQT-ID != 0
   && PA0CM001.PA-AFRGT-RQT-ID != PA0CW00.PA-AFRGT-RQT-ID)
    PA0CW00.PA0CW-REQ-FOR-DATA-FLAG = "Y";
    PA0CW00.PA0CW-KEY-CHANGED = "Y";
    PA0CW00.PA1OANBR = 0;
    PA0CW00.PA-AFRGT-RQT-ID = PA0CM001.PA-AFRGT-RQT-ID;
    return;
  end

   /* IF THE AIR FREIGHT FEILD IS EOF'D, RESET*/

  if (PA0CM001.PA-AFRGT-RQT-ID == 0
   && PA0CW00.PA-AFRGT-RQT-ID != 0)
    PA0CW00.PA0CW-REQ-FOR-DATA-FLAG = "N";
    PA0CW00.PA0CW-KEY-CHANGED = "N";
    PA0CW00.PA1OANBR = 0;
    PA0CW00.PA-AFRGT-RQT-ID = PA0CM001.PA-AFRGT-RQT-ID;
    return;
  end

   /* IF THE O/A FIELD IS EOF'D, RESET*/

  if (PA0CM001.PA1OANBR == 0
   && PA0CW00.PA1OANBR != 0)
    PA0CW00.PA0CW-REQ-FOR-DATA-FLAG = "N";
    PA0CW00.PA0CW-KEY-CHANGED = "N";
    PA0CW00.PA-AFRGT-RQT-ID = 0;
    PA0CW00.PA1OANBR = PA0CM001.PA1OANBR;
    return;
  end


   /* ------------- End of process PA0C-522 ----------------------*/

end // end PA0C-522

// VALIDATE KEY CHANGED
Function PA0C-523()
   /* ------------------------------------------------------------*/
   /* VALIDATE KEY CHANGED - VALIDATE FROM BOTTOM OF SCREEN TO*/
   /* THE TOP.*/
   /* ------------------------------------------------------------*/

   /* VALIDATE A/F REASON COMMENT*/

  if (PA0CM001.PA-RSN-COMNT1 == " "
   && PA0CM001.PA-RSN-COMNT2 == " "
   && PA0CM001.PA-RSN-COMNT3 == " ")
    set PA0CM001.PA-RSN-COMNT1 cursor, bold;
    PAWREC.XXXMODID = "523";
    converseLib.validationFailed(330); /* AIR FREIGHT REASON REQUIRED*/
  end

  if (PA0CM001.PA-RSN-COMNT1 != PA0CW01.PA-RSN-COMNT1)
    PA0CW01.PA-RSN-COMNT1 = PA0CM001.PA-RSN-COMNT1;
  end

  if (PA0CM001.PA-RSN-COMNT2 != PA0CW01.PA-RSN-COMNT2)
    PA0CW01.PA-RSN-COMNT2 = PA0CM001.PA-RSN-COMNT2;
  end

  if (PA0CM001.PA-RSN-COMNT3 != PA0CW01.PA-RSN-COMNT3)
    PA0CW01.PA-RSN-COMNT3 = PA0CM001.PA-RSN-COMNT3;
  end

   /* VALIDATE A/F RESPONSIBILITY COMMENT*/

  if (PA0CM001.PA-RSP-COMNT1 != PA0CW01.PA-RSP-COMNT1)
    PA0CW01.PA-RSP-COMNT1 = PA0CM001.PA-RSP-COMNT1;
  end

  if (PA0CM001.PA-RSP-COMNT2 != PA0CW01.PA-RSP-COMNT2)
    PA0CW01.PA-RSP-COMNT2 = PA0CM001.PA-RSP-COMNT2;
  end

   /* VALIDATE DEPARTMENT RESPONSIBLE*/

  PA0C-52301();

   /* VALIDATE FACTORY CONTACT*/

  if (PA0CM001.PA-LIAS-CTCT-NM == " ")
    set PA0CM001.PA-LIAS-CTCT-NM cursor, bold;
    PAWREC.XXXMODID = "523";
    converseLib.validationFailed(331); /* FACTORY LIAISON/CONTACT REQUIRED*/
  end

  if (PA0CM001.PA-LIAS-CTCT-NM != PA0CW01.PA-LIAS-CTCT-NM)
    PA0CW01.PA-LIAS-CTCT-NM = PA0CM001.PA-LIAS-CTCT-NM;
  end

   /* VALIDATE BILL TO PERCENT*/

  if (PA0CM001.PA-BLTO-FRWRDR-PCT != PA0CW01.PA-BLTO-FRWRDR-PCT)
    if (PA0CM001.PA-BLTO-FRWRDR-PCT > 100)
      set PA0CM001.PA-BLTO-FRWRDR-PCT cursor, bold;
      PAWREC.XXXMODID = "523";
      converseLib.validationFailed(304);
    end

     /* ADD ONLY THE DIFFERENCE BETWEEN THE MAP AND WORK BILL TO QTYS.*/

    PA0CW01.PA0CW-PA-BLTO-TOTAL = PA0CW01.PA0CW-PA-BLTO-TOTAL +                                  PA0CM001.PA-BLTO-FRWRDR-PCT -                                  PA0CW01.PA-BLTO-FRWRDR-PCT;

    PA0CW01.PA-BLTO-FRWRDR-PCT = PA0CM001.PA-BLTO-FRWRDR-PCT;
  end

   /* VALIDATE BILL TO PERCENT*/

  if (PA0CM001.PA-BLTO-CUST-PCT != PA0CW01.PA-BLTO-CUST-PCT)
    if (PA0CM001.PA-BLTO-CUST-PCT > 100)
      set PA0CM001.PA-BLTO-CUST-PCT cursor, bold;
      PAWREC.XXXMODID = "523";
      converseLib.validationFailed(304);
    end

     /* ADD ONLY THE DIFFERENCE BETWEEN THE MAP AND WORK BILL TO QTYS.*/

    PA0CW01.PA0CW-PA-BLTO-TOTAL = PA0CW01.PA0CW-PA-BLTO-TOTAL +                                  PA0CM001.PA-BLTO-CUST-PCT -                                  PA0CW01.PA-BLTO-CUST-PCT;

    PA0CW01.PA-BLTO-CUST-PCT = PA0CM001.PA-BLTO-CUST-PCT;
  end

   /* VALIDATE BILL TO PERCENT*/

  if (PA0CM001.PA-BLTO-FCTY-PCT != PA0CW01.PA-BLTO-FCTY-PCT)
    if (PA0CM001.PA-BLTO-FCTY-PCT > 100)
      set PA0CM001.PA-BLTO-FCTY-PCT cursor, bold;
      PAWREC.XXXMODID = "523";
      converseLib.validationFailed(304);
    end

     /* ADD ONLY THE DIFFERENCE BETWEEN THE MAP AND WORK BILL TO QTYS.*/

    PA0CW01.PA0CW-PA-BLTO-TOTAL = PA0CW01.PA0CW-PA-BLTO-TOTAL +                                  PA0CM001.PA-BLTO-FCTY-PCT -                                  PA0CW01.PA-BLTO-FCTY-PCT;

    PA0CW01.PA-BLTO-FCTY-PCT = PA0CM001.PA-BLTO-FCTY-PCT;
  end

   /* VALIDATE BILL TO PERCENT*/

  if (PA0CM001.PA-BLTO-NIKE-PCT != PA0CW01.PA-BLTO-NIKE-PCT)
    if (PA0CM001.PA-BLTO-NIKE-PCT > 100)
      set PA0CM001.PA-BLTO-NIKE-PCT cursor, bold;
      PAWREC.XXXMODID = "523";
      converseLib.validationFailed(304);
    end

     /* ADD ONLY THE DIFFERENCE BETWEEN THE MAP AND WORK BILL TO QTYS.*/

    PA0CW01.PA0CW-PA-BLTO-TOTAL = PA0CW01.PA0CW-PA-BLTO-TOTAL +                                  PA0CM001.PA-BLTO-NIKE-PCT -                                  PA0CW01.PA-BLTO-NIKE-PCT;

    PA0CW01.PA-BLTO-NIKE-PCT = PA0CM001.PA-BLTO-NIKE-PCT;
  end

   /* VALIDATE BILL TO PERCENT*/

  PA0CM001.PA0CM-PA-BLTO-TOTAL = PA0CW01.PA0CW-PA-BLTO-TOTAL;

  if (PA0CW01.PA0CW-PA-BLTO-TOTAL > 100)
    if (PA0CM001.PA-BLTO-FRWRDR-PCT > 0)
      set PA0CM001.PA-BLTO-FRWRDR-PCT cursor, bold;
    end
    if (PA0CM001.PA-BLTO-CUST-PCT > 0)
      set PA0CM001.PA-BLTO-CUST-PCT cursor, bold;
    end
    if (PA0CM001.PA-BLTO-FCTY-PCT > 0)
      set PA0CM001.PA-BLTO-FCTY-PCT cursor, bold;
    end
    if (PA0CM001.PA-BLTO-NIKE-PCT > 0)
      set PA0CM001.PA-BLTO-NIKE-PCT cursor, bold;
    end
    set PA0CM001.PA0CM-PA-BLTO-TOTAL bold;
    PAWREC.XXXMODID = "523";
    converseLib.validationFailed(304);
    return;
  end

  if (PA0CW01.PA0CW-PA-BLTO-TOTAL > 0
   && PA0CW01.PA0CW-PA-BLTO-TOTAL < 100)
    if (PA0CM001.PA-BLTO-FRWRDR-PCT > 0)
      set PA0CM001.PA-BLTO-FRWRDR-PCT cursor, bold;
    end
    if (PA0CM001.PA-BLTO-CUST-PCT > 0)
      set PA0CM001.PA-BLTO-CUST-PCT cursor, bold;
    end
    if (PA0CM001.PA-BLTO-FCTY-PCT > 0)
      set PA0CM001.PA-BLTO-FCTY-PCT cursor, bold;
    end
    if (PA0CM001.PA-BLTO-NIKE-PCT > 0)
      set PA0CM001.PA-BLTO-NIKE-PCT cursor, bold;
    end
    set PA0CM001.PA0CM-PA-BLTO-TOTAL bold;
    PAWREC.XXXMODID = "523";
    converseLib.validationFailed(343); /* BILL TO PERCENTS MUST ADD UP TO 100 %*/
    return;
  end

  PA0CW00.PA0CW-SELECTION-UPDATED = "N";

  sysVar.arrayIndex = 6;
  while (sysVar.arrayIndex >= 1)

    if (PA0CM001.PA0CM-SELECT[sysVar.arrayIndex] != PA0CW04.PA0CW-SELECT[sysVar.arrayIndex])

      if (PA0CM001.PA0CM-SELECT[sysVar.arrayIndex] == "S"
       || PA0CM001.PA0CM-SELECT[sysVar.arrayIndex] == " ")
        PA0CW00.PA0CW-SELECTION-UPDATED = "Y";
        PA0CW04.PA0CW-SELECT[sysVar.arrayIndex] = PA0CM001.PA0CM-SELECT[sysVar.arrayIndex];
      else
        set PA0CM001.PA0CM-SELECT[sysVar.arrayIndex] cursor, bold;
        PAWREC.XXXMODID = "523";
        converseLib.validationFailed(13); /* SELECTION INVALID - MUST BE ' ' OR 'S'*/
      end

    end

    sysVar.arrayIndex = sysVar.arrayIndex - 1;

  end

  if (PA0CW00.PA0CW-SELECTION-UPDATED == "Y")
    PA0CS-18-TA0050-U(); /* UPDATE TEMP STORAGE*/
  end

   /* ------------- End of process PA0C-523 ----------------------*/

end // end PA0C-523

// VALIDATE DEPT. RESPONSIBLE
Function PA0C-52301()
   /* ------------------------------------------------------------*/
   /* VALIDATE DEPARTMENT RESPONSIBLE.*/
   /* ------------------------------------------------------------*/

  PA0CW00.PA0CW-DEPT-RSP-ENTERED = "N";

  sysVar.arrayIndex = 5;
  while (sysVar.arrayIndex >= 1)

    if (PA0CM001.PA0CM-PA-DEPT-RSP-X[sysVar.arrayIndex] != 
    PA0CW01.PA0CW-PA-DEPT-RSP-X[sysVar.arrayIndex])

      PA0CW01.PA0CW-PA-DEPT-RSP-X[sysVar.arrayIndex] = PA0CM001.PA0CM-PA-DEPT-RSP-X[sysVar.arrayIndex];
      PA0C-52302();
      if (converseVar.validationMsgNum != 305) /* MUST ENTER 'X'*/
        PA0CW01.PA0CW-PA-DEPT-RSP-NUM = sysVar.arrayIndex;
        PA0CW-UPDATE-HEADER = "Y";
      end

    end

    sysVar.arrayIndex = sysVar.arrayIndex - 1;

  end


   /* ------------- End of process PA0C-52301 --------------------*/

end // end PA0C-52301

// VALIDATE DEPARTMENT RESP
Function PA0C-52302()
   /* ------------------------------------------------------------*/
   /* VALIDATE DEPARTMENT RESPONSIBLE*/
   /* ------------------------------------------------------------*/

   /* VALIDATE DEPARTMENT RESPONSIBLE*/

  if (PA0CM001.PA0CM-PA-DEPT-RSP-X[sysVar.arrayIndex] != " "
   && PA0CM001.PA0CM-PA-DEPT-RSP-X[sysVar.arrayIndex] != "X")
    set PA0CM001.PA0CM-PA-DEPT-RSP-X[sysVar.arrayIndex] cursor, bold;
    PAWREC.XXXMODID = "523";
    converseLib.validationFailed(305);
    return;
  end

  if (PA0CW00.PA0CW-DEPT-RSP-ENTERED == "Y")
    set PA0CM001.PA0CM-PA-DEPT-RSP-X[sysVar.arrayIndex] cursor, bold;
    PAWREC.XXXMODID = "523";
    converseLib.validationFailed(321); /* CAN ONLY PICK ONE DEPT. RESPONSIBLE*/
    return;
  end

  PA0CW00.PA0CW-DEPT-RSP-ENTERED = "Y";

   /* ------------- End of process PA0C-52302 --------------------*/

end // end PA0C-52302

// PROCESS VALID INPUT REQUEST
Function PA0C-600()
   /* ------------------------------------------------------------*/
   /* process valid input request*/
   /* ------------------------------------------------------------*/

  if (PA0CW00.PA0CW-DISPLAY-MAP2 == "Y")
    PA0C-605();
    return;
  end

  if (converseVar.eventKey is pf7) /* SCROLL BACKWARD*/
    PA0CW00.PA0CW-CURRENT-TS-PAGE = PA0CW00.PA0CW-CURRENT-TS-PAGE - 1;
    return;
  end

  if (converseVar.eventKey is pf8) /* SCROLL FORWARD*/
    PA0CW00.PA0CW-CURRENT-TS-PAGE = PA0CW00.PA0CW-CURRENT-TS-PAGE + 1;
    return;
  end

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    return;
  end

  if (PA0CW00.PA0CW-READ-ONLY == "Y"
   || PA0CW00.PA0CW-KEY-CHANGED == "Y") /* KEY FIELDS HAVE BEEN CHANGED*/
    return;
  end

  if (converseVar.eventKey is enter)
    converseLib.validationFailed(332); /* PRESS PF9 TO UPDATE*/
    return;
  end

  if (converseVar.eventKey not pf9) /* Pf9 not pressed*/
    return; /* update accepted*/
  end

   /* DETERMINE IF USER IS A VALID APPROVAL MANAGER.  IF SO AND THIS*/
   /* IS THE FIRST TIME PF9 IS HIT, DISPLAY CONFIRM MESSAGE.*/

   /* IF PA0CW00.PA0CW-APPROVE-AF-FLAG = 'N';*/
     /* MOVE 'Y' TO PA0CW00.PA0CW-APPROVE-AF-FLAG;*/
     /* EZERTN;*/
   /* END;*/

   /* ------------ IF PF9 HAS BEEN HIT ---------------------------*/
   /* UPDATE DATABASE ROWS HERE*/

  if (PA0CW00.PA0CW-UPDATE-VPAAFH01-FLAG == "Y")

     /* GET MOST CURRENT DATE/TIME*/

    set XX0XW01 empty;
    XX0XS01();

    VPAAFH01.ZZZCHGDT = XX0XW01.XX0XWDAT;
    VPAAFH01.ZZZCHGTM = XX0XW01.XX0XWTIM;

    VPAAFH01.PA-BLTO-NIKE-PCT = PA0CW01.PA-BLTO-NIKE-PCT;
    VPAAFH01.PA-BLTO-FCTY-PCT = PA0CW01.PA-BLTO-FCTY-PCT;
    VPAAFH01.PA-BLTO-CUST-PCT = PA0CW01.PA-BLTO-CUST-PCT;
    VPAAFH01.PA-BLTO-FRWRDR-PCT = PA0CW01.PA-BLTO-FRWRDR-PCT;

    if (PA0CW01.PA-DEPT-RSP-IND == 0)
      VPAAFH01.PA-DEPT-RSP-IND = " ";
    else
      VPAAFH01.PA-DEPT-RSP-IND = PA0CW01.PA-DEPT-RSP-IND;
    end

    VPAAFH01.PA-LIAS-CTCT-NM = PA0CW01.PA-LIAS-CTCT-NM;
    VPAAFH01.PA-RSP-COMNT1 = PA0CW01.PA-RSP-COMNT1;
    VPAAFH01.PA-RSP-COMNT2 = PA0CW01.PA-RSP-COMNT2;
    VPAAFH01.PA-RSN-COMNT1 = PA0CW01.PA-RSN-COMNT1;
    VPAAFH01.PA-RSN-COMNT2 = PA0CW01.PA-RSN-COMNT2;
    VPAAFH01.PA-RSN-COMNT3 = PA0CW01.PA-RSN-COMNT3;

    if (PA0CW01.PA0CW-PA-BLTO-TOTAL == 100)
      VPAAFH01.PA-NEED-BLTO-FL = "N";
    else
      VPAAFH01.PA-NEED-BLTO-FL = "Y";
    end

    PA0CS-20-IO7080-U(); /* UPDATE DPRODA.VPAAFH01*/

  end

   /* CHECK TO SEE IF USERID IS A VALID APPROVAL MANAGER.*/

  if (PA1REC.YESCD == "20")
    set PA0CM001.PA-AFRGT-APVL-MGR[1] bold;
    set PA0CM001.PA-AFRGT-APVL-MGR[2] bold;
    set PA0CM001.PA-AFRGT-APVL-MGR[3] bold;
    set PA0CM001.YESCD bold;
    PAWREC.XXXMODID = "600";
    converseLib.validationFailed(323); /* AIR FREIGHT ALREADY APPROVED;*/
  else
    if (PA1REC.YESCD == "00")

      set VPAAFM01 empty;

      VPAAFM01.PA-AFRGT-APVL-MGR = COMMAREA.CAUSERID;

      PA0CS-22-IO7110-S(); /* SELECT DPRODA.VPAAFM01*/

      if (SQLCA.VAGen_SQLCODE == 0)

           /* CHECK TO MAKE SURE THAT THERE ARE O/A ITEMS*/

        PA0CS-42-IO4980-SC();

        if (PAEREC.PAECOUNT == 0)
          set PA0CM001.PA1OANBR cursor, bold;
          PAWREC.XXXMODID = "600";
          converseLib.validationFailed(335); /* CAN'T APPROVED - NO O/A ITEMS*/
          return;
        end

        PA0CW00.PA-APVL-GRP-ID = VPAAFM01.PA-APVL-GRP-ID;
        PA0CW00.PA0CW-NUM-GROUPS-APPROVED = 1;
        PA0C-620(); /* CHECK APPROVAL MANAGER/GROUP.*/
      end
    end
  end

  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit();

  if (converseVar.validationMsgNum != 0)
    return;
  end

   /* init flags/counters*/

  PA0CW00.PA0CW-REQ-FOR-DATA-FLAG = "N";
  PA0CW00.XXXMODID = "600"; /* Module identification*/
  converseLib.validationFailed(1);

   /* OVE 'PA0C' TO PA0CM001.CATOAP;*/

   /* PA0CS-00-FAST-PATH;*/

   /* XSPAS01;*/

   /* EZEFLO;*/

   /* ------------------ END OF PROCESS PA0C-600 -----------------*/
end // end PA0C-600

// DISPLAY DATA ON SCREEN 2
Function PA0C-605()
   /* --------------------------------------------------------*/
    /* GET DATA AND MOVE TO SCREEN 2*/
   /* --------------------------------------------------------*/

  PA0CW00.XX4 = 1;

  while (PA0CW00.XX4 <= 6)
    if (PA0CM001.PA0CM-SELECT[XX4] == "S")
      PA0C-60501(); /* MOVE DATA TO SCREEN*/
      return;
    end
    PA0CW00.XX4 = PA0CW00.XX4 + 1;
  end


end // end PA0C-605

// BUILD DATA FOR SCREEN 2
Function PA0C-60501()
   /* -------------------------------------------------*/
   /* FIRST GO THRU SIZE DATA AND BUILD PG3REC FOR*/
   /* CALL TO PG1050*/
   /* --------------------------------------------------*/

   /* RESET SELECTION FIELD*/

  PA0CW04.PA0CW-SELECT[XX4] = " ";

  PA0CS-18-TA0050-U(); /* UPDATE TEMP STORAGE*/

   /* REMEMBER THAT PA0CW04 CONTAINS THE TEMP STORAGE INFORMATION*/
   /* FOR THE CURRENT PAGE DISPLAYED ON PA0CM001*/

  set PA0CW02 empty;

  set PG3REC empty;

   /* MOVE THE TEMP STORAGE SELECTED INTO THE WORKING*/
   /* STORAGE FIELDS.*/

  PG3REC.SY1STNBR = PA0CW01.SY1STNBR;
  PG3REC.SY2CLRID = PA0CW01.SY2CLRID;
  PG3REC.XDMCD = PA0CW01.XDMCD;

  PA0CW00.XX2 = 1; /* INIT INDEX;*/
  PA0CW00.XX3 = 1; /* INIT INDEX;*/

   /* THIS CODE IS TO DETERMINE THE ACTUAL SIZE LABELS NEEDED*/
   /* TO DISPLAY ON THE MAP.*/

  set PA0CW02 empty;
  PA0CW02.PA0CW-TEMP-GROUP = PA0CW04.PA0CW-TEMP-STORE-GRP[XX4];

  while (PA0CW00.XX2 <= 40)
    if (PA0CW02.PA0CW-PACFLADJ[XX2] != 0)
      PG3REC.SY5SZID[XX3] = PA0CW00.XX2;
      PA0CW00.XX3 = PA0CW00.XX3 + 1;
    end
    PA0CW00.XX2 = PA0CW00.XX2 + 1;
  end

  PG3REC.XGPCD = "02";
  PG3REC.XQACD = "01";
  PG3REC.PG3FUNCD = "IE";
  PG3REC.PG3DATFM = "C";
  PG3REC.PG3XDVCD = "99";

  XSPG301(); /* CALL SIZE TRANSLATION ROUTINE*/

  if (sysVar.errorCode != "00000000")
    PAWREC.XXXMODID = "605";
    converseLib.validationFailed(10); /* UNEXPECTED ERROR HAS OCCURRED*/
    return;
  end

  if (PG3REC.PG3RETCD > 5)
    PAWREC.XXXMODID = "605";
    converseLib.validationFailed(11); /* DATA IN USE*/
    return;
  end

  set PA0CM002 initial;

  PA0CW00.XX2 = 1;

  if (XX4 <= 6
   && PA0CW02.PA0CW-TOTAL-RECORD != "Y")
    PA0CM002.PA-AFRGT-RQT-ID = PA0CM001.PA-AFRGT-RQT-ID;
    PA0CM002.PA0CM-XWH-WHSE-CD = PA0CM001.PA0CM-XWH-WHSE-CD[XX4];
    PA0CM002.PA0CM-PC-PRDCU-ID = PA0CM001.PA0CM-PC-PRDCU-ID[XX4];
    PA0CM002.PA0CM-PC-RQT-ARVDT = PA0CM001.PA0CM-PC-RQT-ARVDT[XX4];
    PA0CM002.PA0CM-PC-EST-HDT = PA0CM001.PA0CM-PC-EST-HDT[XX4];
    PA0CM002.PA0CM-AF-ETA-CALC = PA0CM001.PA0CM-AF-ETA-CALC[XX4];
    PA0CM002.PA0CM-VL-ETA-CALC = PA0CM001.PA0CM-VL-ETA-CALC[XX4];
    PA0CM002.PA1OANBR = PA0CM001.PA1OANBR;
    PA0CM002.PA0CM-TOTAL-NUM-PAIRS = PA0CM001.PA0CM-TOTAL-NUM-PAIRS[XX4];

      /* MOVE THE SIZE RELATED FIELDS*/

    PA0CW00.XX2 = 1;

    while (PG3REC.SY5SZID[XX2] > 0)
      PA0CW00.XX3 = PG3REC.SY5SZID[XX2];
      PA0CM002.SY4IDDSC[XX2] = PG3REC.SY4IDDSC[XX2];
      PA0CM002.PACFLADJ[XX2] = PA0CW02.PA0CW-PACFLADJ[XX3];
      PA0CW00.XX2 = PA0CW00.XX2 + 1;
    end

    return;

  end

  PA0CM002.PA-AFRGT-RQT-ID = PA0CM001.PA-AFRGT-RQT-ID;
  PA0CM002.PA0CM-XWH-WHSE-CD = " ";
  PA0CM002.PA0CM-PC-PRDCU-ID = " ";
  PA0CM002.PA0CM-PC-RQT-ARVDT = " ";
  PA0CM002.PA0CM-PC-EST-HDT = " ";
  PA0CM002.PA0CM-AF-ETA-CALC = " ";
  PA0CM002.PA0CM-VL-ETA-CALC = " ";
  PA0CM002.PA1OANBR = PA0CM001.PA1OANBR;
  PA0CM002.PA0CM-TOTAL-NUM-PAIRS = PA0CM001.PA0CM-TOTAL-NUM-PAIRS[XX4];

   /* MOVE THE SIZE RELATED FIELDS*/

  PA0CW00.XX2 = 1;

  while (PG3REC.SY5SZID[XX2] > 0)
    PA0CW00.XX3 = PG3REC.SY5SZID[XX2];
    PA0CM002.SY4IDDSC[XX2] = PG3REC.SY4IDDSC[XX2];
    PA0CM002.PACFLADJ[XX2] = PA0CW02.PA0CW-PACFLADJ[XX3];
    PA0CW00.XX2 = PA0CW00.XX2 + 1;
  end

end // end PA0C-60501

// CHECK APPROVAL MANAGER/GROUP
Function PA0C-620()
   /* ------------------------------------------------------------*/
   /* CHECK APPROVAL MANAGER/GROUP*/
   /* ------------------------------------------------------------*/

   /* CHECK TO SEE IF THE MANAGER HAS APPROVAL FOR THIS TYPE OF*/
   /* O/A*/

  PA0C-62000(); /* CHECK APPROVAL GROUP AGAINST DIVISION*/

  if (converseVar.validationMsgNum != 0)
    return;
  end

  set VPAAFA01 empty;

  VPAAFA01.PA-AFRGT-RQT-ID = PA0CM001.PA-AFRGT-RQT-ID;

  PA0CS-23-IO7100-S1();

  PA0CS-24-IO7100-N1();

  sysVar.arrayIndex = 1;

  while (SQLCA.VAGen_SQLCODE == 0
   && sysVar.arrayIndex <= 3)

     /* IF TWO APPROVERS AT THE SAME TIME, UPDATE THE ONLINE LIST IN CASE*/
     /* OF ERROR.*/

    PA0CM001.PA-AFRGT-APVL-MGR[sysVar.arrayIndex] = VPAAFA01.PA-AFRGT-APVL-MGR;
    PA0CW01.PA-AFRGT-APVL-MGR[sysVar.arrayIndex] = VPAAFA01.PA-AFRGT-APVL-MGR;

     /* DETERMINE APPROVAL GROUP FOR MANAGER RETRIEVED*/

    set VPAAFM01 empty;
    VPAAFM01.PA-AFRGT-APVL-MGR = VPAAFA01.PA-AFRGT-APVL-MGR;

    PA0CS-22-IO7110-S();

    if (VPAAFM01.PA-APVL-GRP-ID == PA0CW00.PA-APVL-GRP-ID)
      set PA0CM001.PA-AFRGT-APVL-MGR[sysVar.arrayIndex] bold;
      PAWREC.XXXMODID = "620";
      converseLib.validationFailed(322); /* YOUR APPROVAL GROUP ALREADY APPROVED AF*/
      PA0CS-25-IO7100-C1();
      return;
    end

    PA0CS-24-IO7100-N1();

    sysVar.arrayIndex = sysVar.arrayIndex + 1;

  end

  PA0CS-25-IO7100-C1();

   /* ADD APPROVAL MANAGER TO MAP AND THE DPRODA.VPAAFA01 DATABASE*/

  PA0C-623(); /* ADD DPRODA.VPAAFA01*/

   /* DETEMINE THE NUMBER OF MANAGERS THAT HAVE APPROVED THE AIR*/
   /* FREIGHT REQUEST HERE.  THIS IS SO THAT IF TWO MANAGERS ARE*/
   /* APPROVING THE SAME AIR FREIGHT, THE LAST MANAGERS APPROVAL*/
   /* WILL KICK OF PC111D TO UPDATE PO. GET LATEST APPROVER LIST.*/

  VPAAFA01.PA-AFRGT-RQT-ID = PA0CM001.PA-AFRGT-RQT-ID;

  PA0CS-23-IO7100-S1();

  PA0CS-24-IO7100-N1();

  PA0CW00.PA0CW-NUM-GROUPS-APPROVED = 0;
  sysVar.arrayIndex = 1;
  PA0CW00.PA0CW-APPROVED-DATE = 0;
  PA0CW00.PA0CW-APPROVED-HHMM = 0;

  while (SQLCA.VAGen_SQLCODE == 0
   && sysVar.arrayIndex <= 3)

    PA0CM001.PA-AFRGT-APVL-MGR[sysVar.arrayIndex] = VPAAFA01.PA-AFRGT-APVL-MGR;
    PA0CW01.PA-AFRGT-APVL-MGR[sysVar.arrayIndex] = VPAAFA01.PA-AFRGT-APVL-MGR;

     /* SHOW LATEST APPROVAL DATE/TIME*/

    if (VPAAFA01.ZZZSDT > PA0CW00.PA0CW-APPROVED-DATE)
      PA0CW00.PA0CW-APPROVED-DATE = VPAAFA01.ZZZSDT;
      PA0CW00.PA0CW-APPROVED-HHMM = VPAAFA01.ZZZSTM;
    else
      if (VPAAFA01.ZZZSDT < PA0CW00.PA0CW-APPROVED-DATE)
           /* NEXT SENTENCE*/
      else
        PA0CW00.PA0CW-APPROVED-DATE = VPAAFA01.ZZZSDT;
        PA0CW00.PA0CW-APPROVED-HHMM = VPAAFA01.ZZZSTM;
      end
    end

    PA0CW00.PA0CW-NUM-GROUPS-APPROVED = PA0CW00.PA0CW-NUM-GROUPS-APPROVED + 1;

    sysVar.arrayIndex = sysVar.arrayIndex + 1;

    PA0CS-24-IO7100-N1();

  end

  PA0CS-25-IO7100-C1();

  if (PA0CW00.YSMXDV == "20")
    if (PA0CW00.PA0CW-NUM-GROUPS-APPROVED < 2)
         /* NEXT SENTENCE*/
    else
      PA0C-621(); /* UPDATE VPAAFA01/VPAHDR01/VFYPA001*/
      PA0C-622(); /* SUBMIT JCL TO UPDATE PO*/
    end
  else
    if (PA0CW00.PA0CW-NUM-GROUPS-APPROVED < 3)
         /* NEXT SENTENCE*/
    else
      PA0C-621(); /* UPDATE VPAAFA01/VPAHDR01/VFYPA001*/
      PA0C-622(); /* SUBMIT JCL TO UPDATE PO*/
    end
  end

   /* ------------------ END OF PROCESS PA0C-620 -----------------*/
end // end PA0C-620

// CHECK APPROVAL GRP/DIVISION
Function PA0C-62000()
   /* ------------------------------------------------------------*/
   /* CHECK APPROVAL MANAGER/GROUP AGAINST DIVISION*/
   /* ------------------------------------------------------------*/

  if (PA0CW01.YETCD == "NI") /* INTERNATIONAL DIVERT TO DOMESTIC*/
    if (PA0CW00.PA-APVL-GRP-ID == 4) /* INTERNATIONAL APPROVAL GROUP*/
      PAWREC.XXXMODID = "620";
      converseLib.validationFailed(328); /* CAN'T APPROVE THIS O/A*/
      return;
    end
    return;
  end

  if (PA0CW01.YETCD == "DN") /* DOMESTIC DIVERT TO INTERNATIONAL*/
    if (PA0CW00.PA-APVL-GRP-ID == 1) /* DOMESTIC APPROVAL GROUP*/
      PAWREC.XXXMODID = "620";
      converseLib.validationFailed(329); /* CAN'T APPROVE THIS O/A*/
      return;
    end
    return;
  end

  if (PA0CW00.YSMXDV == "10")
    if (PA0CW00.PA-APVL-GRP-ID == 4) /* INTERNATIONAL APPROVAL GROUP*/
      PAWREC.XXXMODID = "620";
      converseLib.validationFailed(326); /* CAN'T APPROVE DOMESTIC O/AS*/
      return;
    end
    return;
  end

  if (PA0CW00.PA-APVL-GRP-ID == 1) /* DOMESTIC APPROVAL GROUP*/
    PAWREC.XXXMODID = "620";
    converseLib.validationFailed(327); /* CAN'T APPROVE INTERNATIONAL O/AS*/
    return;
  end

   /* ------------------ END OF PROCESS PA0C-62000 ---------------*/
end // end PA0C-62000

// UPDATE VPAAFH/VPAHDR/VFYPA
Function PA0C-621()
   /* -------------------------------------------------------------*/
   /* UPDATE DPRODA.VPAAFH01, DPRODA.VPAHDR01, AND DPRODA.VFYPA001*/
   /* -------------------------------------------------------------*/

   /* UPDATE DPRODA.VPAAFH01*/

  VPAAFH01.PA-AFRGT-APVL-FL = "Y";
  PA0CS-20-IO7080-U(); /* UPDATE DPRODA.VPAAFH01*/

   /* UPDATE DPRODA.VPAHDR01*/

  PA0CW01.YESCD = "20";
  PA0CM001.YESCD = "20";

  if (PA1REC.YETCD != "OR"
   && PA1REC.YETCD != "NO")
    PA0C-62101(); /* CHECK FOR ACTIVE BUY STATUS*/
  end

  PA1REC.YESCD = PA0CW01.YESCD;

   /* GET CURRENT DATE/TIME*/

  set XX0XW01 empty;
  XX0XS01();

  PA1REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  PA1REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  PA0CS-27-IO4830-U(); /* UPDATE DPRODA.VPAHDR01*/

   /* UPDATE DPRODA.VFYPA001*/

  set PA4REC empty;
  PA4REC.PA1OANBR = PA0CW00.PA1OANBR;
  PA4REC.YESCD = "*";

  PA0CS-28-IO4810-S1();

  PA0CS-29-IO4810-N1();

   /* NOTE: THERE SHOULD ONLY BE ONE FACTORY FOR THESE AIR FREIGHT*/
   /* REQUESTS.*/

  while (SQLCA.VAGen_SQLCODE == 0)

    if (PA4REC.YESCD != "18" /* FACTORY RETRACTION*/
     && PA4REC.YESCD != "84" /* FACTORY DENIED*/
     && PA4REC.YESCD != "96" /* IP CANCEL*/
     && PA4REC.YESCD != "98") /* CANCELLED*/
      PA4REC.YESCD = "20";

        /* GET CURRENT DATE/TIME*/

      set XX0XW01 empty;
      XX0XS01();

      PA4REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
      PA4REC.ZZZCHGTM = XX0XW01.XX0XWTIM;

      PA0CS-31-IO4810-U();
    end

    PA0CS-29-IO4810-N1();

  end

  PA0CS-30-IO4810-C1();

   /* ------------------ END OF PROCESS PA0C-621 -----------------*/
end // end PA0C-621

// CHECK FOR ACTIVE BUY STATUS
Function PA0C-62101()
   /* ------------------------------------------------------------*/
   /* WHEN THE AIR FREIGHT PROJECT WAS INITIALLY INSTALLED, THE*/
   /* BEGINNING STATUS IS '00' AND IS CHANGED TO '20'.  THIS MEANS*/
   /* THAT IT IS BEING CHANGED FROM AN INACTIVE STATUS TO AN ACTIVE*/
   /* STATUS.  THE BUY FLAGS MUST BE RESET.  HOWEVER, THIS CODE*/
   /* HAS BEEN WRITTEN SO THAT IF THESE STATUS CODES CHANGE IN*/
   /* THE FUTURE, THE BUY FLAGS WILL BE SET CORRECTLY.*/
   /*  */
   /* FB322 - DOMESTIC SALES ORDERS FOR THE CURRENT BUY CAN BE*/
   /* MOVED TO ANOTHER BUY MONTH.  THE BUY SYSTEM NEEDS TO KNOW*/
   /* IF IT NEEDS TO BUY THESE SALES ORDERS.  IF THE O/A HAS AN*/
   /* ACTIVE BUY STATUS, THE BUY SYSTEM WILL NOT BUY THESE SALES*/
   /* ORDERS.  DCORP.VSUMCD01 IS USED TO DETERMINE IF THE O/A HAS*/
   /* AN ACTIVE BUY STATUS.  THE O/A WILL HAVE TO BE COMPLETED. IF*/
   /* THE O/A STATUS IS CHANGED FROM/TO THIS GROUP, THE BUY SYSTEM*/
   /* NEEDS TO KNOW THAT THEIR PICTURE HAS CHANGED.*/
   /* ------------------------------------------------------------*/

  set YSMREC empty;

   /* STATUS CHANGED FROM*/

  YSMREC.YSMTBLPF = "YES";
  YSMREC.YSMSYSPF = "PA";
  YSMREC.YSMSUMID = 6;
  YSMREC.YSMSRCVL = PA1REC.YESCD;

  PA0CS-32-IO2640-S();

  if (SQLCA.VAGen_SQLCODE == 0)

     /* STATUS CHANGED TO*/

    set YSMREC empty;
    YSMREC.YSMTBLPF = "YES";
    YSMREC.YSMSYSPF = "PA";
    YSMREC.YSMSUMID = 6;
    YSMREC.YSMSRCVL = PA0CW01.YESCD;

    PA0CS-32-IO2640-S();

    if (SQLCA.VAGen_SQLCODE == 100)
      PA0C-62102();
    else
        /* NEXT SENTENCE*/
    end

  else

     /* STATUS CHANGED TO*/

    set YSMREC empty;
    YSMREC.YSMTBLPF = "YES";
    YSMREC.YSMSYSPF = "PA";
    YSMREC.YSMSUMID = 6;
    YSMREC.YSMSRCVL = PA0CW01.YESCD;

    PA0CS-32-IO2640-S();

    if (SQLCA.VAGen_SQLCODE == 100)
        /* NEXT SENTENCE*/
    else
      PA0C-62102();
    end

  end



end // end PA0C-62101

// CHECK FOR ACTIVE BUY STATUS
Function PA0C-62102()
   /* ------------------------------------------------------------*/
   /* DETERMINE IF THE BUY FLAGS NEED TO BE UPDATED*/
   /* ------------------------------------------------------------*/

  PA0CW00.PA0CW-BUY-FLAGS-UPDATED = "N";

  PA0CS-33-IO4980-S1(); /* OPEN DPRODA.VPAITM01*/

  PA0CS-34-IO4980-N1(); /* FETCH DPRODA.VPAITM01*/

  while (SQLCA.VAGen_SQLCODE == 0
   && PA0CW00.PA0CW-BUY-FLAGS-UPDATED == "N")

    if (PA2REC.OP1CUOID != 0)

      set FBHREC empty;
      FBHREC.OP1PARTN = PA2REC.OP1PARTN;
      FBHREC.OP1CUOID = PA2REC.OP1CUOID;
      FBHREC.OP1NORID = PA2REC.OP1NORID;
      FBHREC.PC2CUXID = PA2REC.PC2CUXID;
      FBHREC.FB8BUYDT = PAWREC.PAWBUYDT;
      FBHREC.SY1STNBR = PA2REC.SY1STNBR;
      FBHREC.SY2CLRID = PA2REC.SY2CLRID;
      FBHREC.XDMCD = PA2REC.XDMCD;
      FBHREC.XQACD = PA2REC.XQACD;
      FBHREC.XPGCD = PA2REC.XPGCD;
      FBHREC.XUMCD = PA2REC.XUMCD;

      PA0CS-36-IO4640-SB(); /* GET DFBUY.VDNORD01*/

      if (SQLCA.VAGen_SQLCODE == 0)
        if (FBHREC.XDVCD != "02")
             /* RESET BUY FLAGS ONLY THE SALES ORDER IS FROM THE CURRENT*/
             /* BUY MONTH.*/
          if (FBHREC.FB8BUYDT == FB9REC.FB8BUYDT)
            PA0C-62103();
          end
        end
      end

    end

    PA0CS-34-IO4980-N1();

  end

  PA0CS-35-IO4980-C1(); /* CLOSE DPRODA.VPAITM01*/



end // end PA0C-62102

// UPDATE BUY FLAGS
Function PA0C-62103()
   /* ------------------------------------------------------------*/
   /* SET BUY FLAGS TO 'N'*/
   /* ------------------------------------------------------------*/

  PA0CW00.PA0CW-BUY-FLAGS-UPDATED = "Y";

   /* UPDATE DFBUY.VDNORD01*/

  FBHREC.FBHDSAFL = "N"; /* FB-DIRSHP-ACPT-FL*/

   /* GET CURRENT DATE/TIME*/

  set XX0XW01 empty;
  XX0XS01();

  FBHREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FBHREC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  PA0CS-37-IO4640-U(); /* UPDATE DFBUY.VDNORD01*/

   /* SELECT/UPDATE DFBUY.VFQTBS01*/

  set FBKREC empty;
  FBKREC.SY1STNBR = PA2REC.SY1STNBR;
  FBKREC.SY2CLRID = PA2REC.SY2CLRID;
  FBKREC.XDMCD = PA2REC.XDMCD;
  FBKREC.FB8RCTYP = "B";
  FBKREC.FB8BUYDT = PAWREC.PAWBUYDT;

  PA0CS-38-IO4740-S(); /* SELECT DFBUY.VFQTBS01*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FBKREC.FBKCAFL = "N"; /* FB-CALC-ACPT-FL*/
    FBKREC.FBKFSAFL = "N"; /* FB-FCST-ACPT-FL*/

     /* GET CURRENT DATE/TIME*/

    set XX0XW01 empty;
    XX0XS01();

    FBKREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
    FBKREC.ZZZCHGTM = XX0XW01.XX0XWTIM;

    PA0CS-39-IO4740-U(); /* UPDATE DFBUY.VFQTBS01*/
  end

   /* SELECT/UPDATE DFBUY.VFSCTL01*/

  set FBMREC empty;
  FBMREC.PG1SC4CD = PA1REC.PG1SC4CD;

  PA0CS-40-IO4670-S(); /* SELECT DFBUY.VFSCTL01*/

  if (SQLCA.VAGen_SQLCODE == 0)

     /* BASED ON THE PRODUCT LINE CODE, DETERMINE WHICH FLAG TO UPDATE*/

    PA0C-62104();

     /* 07/25/95: FBMREC FLAGS OCCUR 20 TIMES*/

    if (sysVar.arrayIndex > 0
     && sysVar.arrayIndex < 21)
      FBMREC.FBMCFFL = "N"; /* FB-CALC-FNSH-FL*/
      FBMREC.FBMFINFL = "N"; /* FB-DIRSHP-FNSH-FL*/
      FBMREC.FBMPAFL[sysVar.arrayIndex] = "N"; /* FB-PRODLN-ACPT-FL*/
      FBMREC.FBMDSLNF[sysVar.arrayIndex] = "N"; /* FB-DRSLN-FNSH-FL*/

        /* GET CURRENT DATE/TIME*/

      set XX0XW01 empty;
      XX0XS01();

      FBMREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
      FBMREC.ZZZCHGTM = XX0XW01.XX0XWTIM;

      PA0CS-41-IO4670-U(); /* UPDATE DFBUY.VFSCTL01*/
    end

  end

end // end PA0C-62103

// DETERMINE WHICH VFSCTL01 FLAG
Function PA0C-62104()
   /* ------------------------------------------------------------*/
   /* BASED ON THE PRODUCT LINE CODE, DETERMINE WHICH FLAG TO*/
   /* SET.*/
   /* ------------------------------------------------------------*/
  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 20)
    if (FBHREC.XPLCD == 
    FBMREC.FBMPCD[sysVar.arrayIndex])
      return;
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end
end // end PA0C-62104

// UPDATE P.O.
Function PA0C-622()
   /* ------------------------------------------------------------*/
   /* Make sure that the Production/Test JCL is submitted based*/
   /* on the region the program is running in.*/
   /* ------------------------------------------------------------*/

   /* IF THE REMOTE PRINTER IS NOT DEFAULTED AND THE USER DOES NOT HAVE*/
   /* A PRINTER ASSIGNED, TA0P WILL SHOW MAP TO SELECT PRINTER.  THIS*/
   /* CAN THEN BE CANCELLED.  THIS CAUSES THE AIR FREIGHT TO REMAIN IN*/
   /* STATUS '20' AND PO IS NEVER UPDATED BECAUSE PC1111 IS NEVER*/
   /* SUBMITTED.  TO AVOID THIS SITUATION, DEFAULT THE PRINTER TO RMT999.*/
   /* THERE IS NO REPORT TO PRINT.  SO, THIS DOES NOT CAUSE A PROBLEM.*/
   /* ALSO, IT DOES NOT PERMANENTLY CHANGE THE USER'S PRINTER.  SO THIS*/
   /* ASSIGNMENT IS TRANSPARENT TO THE USERS.*/
   /*  */
   /* D O   N O T   R E M O V E   T H I S   P R I N T E R   D E F A U L T !*/
   /*  */

  TA6REC.XURDEST = "RMT999"; /* SET DEFAULT PRINTER*/

  if (TA3REC.TA3RGNID == "03") /* if on production system*/
    PA0C-62201(); /* format production jcl*/
  else
    PA0C-62202(); /* format test jcl*/
  end


end // end PA0C-622

// SUBMIT PRODUCTION JCL PA0CT01
Function PA0C-62201()
   /* ------------------------------------------------------------*/
   /* P R O D U C T I O N   J C L - PA0CT01*/
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  sysVar.arrayIndex = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (PA0CT01.TARTYPE[sysVar.arrayIndex] == "P")
       /* FORMAT THE PARM CARD FOR PC1111*/
      TA6REC.TARTYPE[TA6INDEX] = PA0CT01.TARTYPE[sysVar.arrayIndex];
      PA0C-62203(); /* FORMAT PARM CARD*/
    else

       /* ------------------------------------------------------------*/
        /* Format the Job Control Language statement from the table.*/
       /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PA0CT01.TARJCL[sysVar.arrayIndex]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PA0CT01.TARTYPE[sysVar.arrayIndex]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PA0CT01.TARJCL[sysVar.arrayIndex] == "/*EOF") /* End of table*/
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Input table index*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    PAWREC.XXXMODID = "622"; /* MODULE IDENTIFICATION*/
    converseLib.validationFailed(324); /* AF O/A SUBMITTED TO P.O.*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    PAWREC.XXXMODID = "622"; /* Module identification*/
    converseLib.validationFailed(325); /* ERROR OCCURRED*/

    return;

  end



end // end PA0C-62201

// SUBMIT TEST JCL - PA0CT11
Function PA0C-62202()
   /* ------------------------------------------------------------*/
   /* T E S T   J C L - PA0CT11*/
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  sysVar.arrayIndex = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (PA0CT11.TARTYPE[sysVar.arrayIndex] == "P")
       /* FORMAT THE PARM CARD FOR PC1111*/
      TA6REC.TARTYPE[TA6INDEX] = PA0CT11.TARTYPE[sysVar.arrayIndex];
      PA0C-62203(); /* FORMAT PARM CARD*/
    else

       /* ------------------------------------------------------------*/
        /* Format the Job Control Language statement from the table.*/
       /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PA0CT11.TARJCL[sysVar.arrayIndex]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PA0CT11.TARTYPE[sysVar.arrayIndex]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PA0CT11.TARJCL[sysVar.arrayIndex] == "/*EOF") /* End of table*/
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Input table index*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    PA0CW00.PA0CW-PC111D-SUBMITTED = "Y";

    PAWREC.XXXMODID = "622"; /* MODULE ID*/
    converseLib.validationFailed(324); /* AF O/A SUMBITTED TO PO*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    PAWREC.XXXMODID = "622"; /* Module identification*/
    converseLib.validationFailed(325); /* Unexpected error occurred*/

    return; /* Return to previous process*/

  end

end // end PA0C-62202

// FORMAT PARM CARD FOR PC1111
Function PA0C-62203()
   /* ------------------------------------------------------------*/
   /* FORMAT THE PARM CARD.*/
   /* ------------------------------------------------------------*/

   /* WHEN PC1111 IS SUBMITTED FROM PA0C, ONLY ONE O/A SHOULD BE*/
   /* PROCESSED.  PUT THE O/A NUMBER INTO THE SINGLE O/A PARM.*/

  PA0CW01.PA0CW-PC1111-DAY = "DAY";
  PA0CW01.PA0CW-PC1111-LOCK = " ";
  PA0CW01.PA0CW-PC1111-UPDATE = "UPDATE";

   /* PA903: Elimination of Improper Format of OA #.*/
   /* dt: 09/23/98*/

  PA0CW01.PA0CW-PC1111-SINGLE-OA-NUM = PA0CW00.PA1OANBR;
  PA0CW01.PA0CW-PC1111-SINGLE-OA = PA0CW01.PA0CW-PC1111-SINGLE-OA-NUM;

  TA6REC.TARJCL[TA6INDEX] = PA0CW01.PA0CW-PC1111-PARM;
  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

end // end PA0C-62203

// ADD DPRODA.VPAAFA01
Function PA0C-623()
   /* ------------------------------------------------------------*/
   /* ADD APPROVAL MANAGER TO DPRODA.VPAAFA01.*/
   /* ------------------------------------------------------------*/

  set VPAAFA01 empty;

  VPAAFA01.PA-AFRGT-RQT-ID = PA0CW00.PA-AFRGT-RQT-ID;
  VPAAFA01.PA-AFRGT-APVL-MGR = COMMAREA.CAUSERID;

   /* GET CURRENT DATE/TIME*/

  set XX0XW01 empty;
  XX0XS01();

  VPAAFA01.ZZZSDT = XX0XW01.XX0XWDAT;
  VPAAFA01.ZZZSTM = XX0XW01.XX0XWTIM;
  VPAAFA01.ZZZCHGDT = 0;
  VPAAFA01.ZZZCHGTM = 0;
  VPAAFA01.ZZZCHGCT = 0;

  PA0CS-26-IO7100-A(); /* ADD DPRODA.VPAAFA01*/


   /* ------------------ END OF PROCESS PA0C-622 -----------------*/
end // end PA0C-623

// FAST PATH PF-KEY PROCESSING
Function PA0CS-00-FAST-PATH()
   /* ------------------------------------------------------------*/
   /* This procedure will determine what the catoap will be*/
   /* based on the pf-key pressed.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CATOAP = PA0CM001.CATOAP;

  PAWREC.PAWOANBR = PA0CM001.PA1OANBR;

   /* Setup the leveling for subsequent applications*/

  if (PAWREC.CAFROMAP[1] == " ")
    PAWREC.CAFROMAP[1] = COMMAREA.CACURRAP;
  else
    if (PAWREC.CAFROMAP[2] == " ")
      PAWREC.CAFROMAP[2] = COMMAREA.CACURRAP;
    else
      if (PAWREC.CAFROMAP[3] == " ")
        PAWREC.CAFROMAP[3] = COMMAREA.CACURRAP;
      else
        if (PAWREC.CAFROMAP[4] == " ")
          PAWREC.CAFROMAP[4] = COMMAREA.CACURRAP;
        else
          PAWREC.CAFROMAP[5] = COMMAREA.CACURRAP;
        end
      end
    end
  end


end // end PA0CS-00-FAST-PATH

// DELETE TEMP STORAGE
Function PA0CS-01-TA0050-P()
   /* -------------------------------------------*/
    /* PURGE ANY TEMPORARY STORAGE*/
   /* -------------------------------------------*/

  set PA0CW04 empty;

  PA0CW00.XX6 = 1;

  TA5REC.TA5TSQIX = 0; /* CURRENT PAGE NUMBER;*/
  PA0CW00.PA0CW-MAX-PAGES = 0; /* MAX NUMBER OF PAGES*/

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
      /* NEXT SENTENCE*/
  else
    PA0CW00.PA0CW-CURRENT-TS-PAGE = 1; /* CURRENT TEMP STORE PAGE*/
  end

  TA5REC.TA5APPID = "PA0C"; /* APPL ID*/
  TA5REC.TA5FNCCD = "P"; /* SET FUNCTION CODE*/

  try
    call "TA0050" (PA0CW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* TEMPORARY STORAGE*/

   /* -------------------------------------------*/
    /* IF SUCCESSFUL RETURN TO CALLING ROUTINE*/
   /* -------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && TA5REC.TA5RTNCD == 0)          /* NORMAL RETURN*/

    return;

  end

   /* -------------------------------------------------------*/
    /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* -------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* SUBROUTINE PARAMETERS*/

  PAWREC.XXXMODID = "S01";
  converseLib.validationFailed(10); /* SYSTEM ERROR*/

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* MAP APPLICATION*/
  TA1REC.TA1MAP = "M001";
  SQLCA.SQLCAREC = TA5REC.TA5DATA;

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes};

  exit stack;

end // end PA0CS-01-TA0050-P

// OPEN DPRODA.VPAHDR01
Function PA0CS-02-PA1000-S9()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAHDR01 TABLE.*/
   /* ------------------------------------------------------------*/

  set PA1REC empty;
  set PAYREC empty;

  PAYREC.PAYFUNCT = "S9";
  PA1REC.PA-AFRGT-RQT-ID = PA0CW00.PA-AFRGT-RQT-ID;
  PAYREC.PAYREQLO = +0;
  PAYREC.PAYREQHI = +999999999;
  PAYREC.PAYSTGRP = "OP";

  try
    call "PA1000" (PAYREC, SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S02"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DPRODA.VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS02"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1GROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-02-PA1000-S9 **************************/
   /* **                                                        ***/


end // end PA0CS-02-PA1000-S9

// GET NEXT DPRODA.VPAHDR01
Function PA0CS-03-PA1000-N9()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAHDR01 TABLE.*/
   /* ------------------------------------------------------------*/

  PAYREC.PAYFUNCT = "N9";

  try
    call "PA1000" (PAYREC, SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S03"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DPRODA.VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS03"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1GROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-03-PA1000-N9 **************************/
   /* **                                                        ***/


end // end PA0CS-03-PA1000-N9

// CLOSE DPRODA.VPAHDR01
Function PA0CS-04-PA1000-C9()
   /* ------------------------------------------------------------*/
   /* CLOSE DPRODA.VPAHDR01 TABLE.*/
   /* ------------------------------------------------------------*/

  PAYREC.PAYFUNCT = "C9";

  try
    call "PA1000" (PAYREC, SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S03"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DPRODA.VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS03"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1GROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-03-PA1000-C9 **************************/
   /* **                                                        ***/


end // end PA0CS-04-PA1000-C9

// SELECT 'S' DPRODA.VPAAFH01
Function PA0CS-05-IO7080-S()
   /* ------------------------------------------------------------*/
   /* Select 'S' DPRODA.VPAAFH01*/
   /* ------------------------------------------------------------*/

  try
    call "IO7080" ("S ", SQLCA, VPAAFH01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S05"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODA.VPAAFH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFH01.VPAAFH01-GROUP; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0CS-05-IO7080-S

// OPEN DPRODA.VPAWRK01
Function PA0CS-06-IO4950-S2()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAWRK01 TABLE.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4950" ("S2", SQLCA, PACREC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S06"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DPRODA.VPAWRK01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS06"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK01"; /* Table view name*/
  TA1REC.TA1TBLKE = PACREC.PACGRP01; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-06-IO4950-S2 **************************/
   /* **                                                        ***/


end // end PA0CS-06-IO4950-S2

// GET NEXT DPRODA.VPAWRK01
Function PA0CS-07-IO4950-N2()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAWRK01 TABLE.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4950" ("N2", SQLCA, PACREC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S07"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DPRODA.VPAWRK01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS07"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK01"; /* Table view name*/
  TA1REC.TA1TBLKE = PACREC.PACGRP01; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-07-IO4950-N2 **************************/
   /* **                                                        ***/


end // end PA0CS-07-IO4950-N2

// CLOSE DPRODA.VPAWRK01
Function PA0CS-08-IO4950-C2()
   /* ------------------------------------------------------------*/
   /* CLOSE DPRODA.VPAHDR01 TABLE.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4950" ("C2", SQLCA, PACREC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S08"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DPRODA.VPAWRK01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS08"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK01"; /* Table view name*/
  TA1REC.TA1TBLKE = PACREC.PACGRP01; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-08-IO4950-C2 **************************/
   /* **                                                        ***/


end // end PA0CS-08-IO4950-C2

// SELECT 'S' DFCTY.VFCTY001
Function PA0CS-09-IO2810-S()
   /* ------------------------------------------------------------*/
   /* Select 'S' DFCTY.VFCTY001*/
   /* ------------------------------------------------------------*/

  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S09"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DFCTY.VFCTY001 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = PACREC.FY1FCTYC; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0CS-09-IO2810-S

// SELECT 'S' DPRODC.VPRDCU01
Function PA0CS-10-IO3340-S()
   /* ------------------------------------------------------------*/
   /* Select 'S' DPRODC.VPRDCU01*/
   /* ------------------------------------------------------------*/

  try
    call "IO3340" ("S ", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S10"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODC.VPRDCU01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  TA1REC.TA1TBLKE = PACREC.PC2CUXID; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0CS-10-IO3340-S

// SELECT 'S' DTRANS.VTTIME01
Function PA0CS-11-IO2360-S()
   /* ------------------------------------------------------------*/
   /* Select 'S' DTRANS.VTTIME01*/
   /* ------------------------------------------------------------*/

  try
    call "IO2360" ("S ", SQLCA, TSEREC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S11"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DTRANS.VTTIME01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTTIME01"; /* Table view name*/
  TA1REC.TA1TBLKE = TSEREC.TSEGROUP; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0CS-11-IO2360-S

// SELECT 'S' DPROD.VSTYLE01
Function PA0CS-12-IO0120-S()
   /* ------------------------------------------------------------*/
   /* Select 'S' DPROD.VSTYLE01*/
   /* ------------------------------------------------------------*/

  try
    call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S12"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPROD.VSTYLE01 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSTYLE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY1REC.SY1STNBR; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0CS-12-IO0120-S

// SELECT 'SB' DTRANS.VFRATE01
Function PA0CS-13-IO7000-SB()
   /* ------------------------------------------------------------*/
   /* Select 'SB' DTRANS.VFRATE01*/
   /* ------------------------------------------------------------*/

  try
    call "IO7000" ("SB", SQLCA, VFRATE01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S13"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"SB\" DTRANS.VFRATE01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRATE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFRATE01.VFRATE01-GROUP; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0CS-13-IO7000-SB

// WRITE TEMP STORAGE
Function PA0CS-16-TA0050-A()
   /* ------------------------------------------------*/
   /* WRITE TEMP STORAGE*/
   /* -----------------------------------------------*/

  sysVar.arrayIndex = 0;
  PA0CW04.PA0CW-TS-PAGE-LENGTH = 1350; /* TEMP STORAGE PAGE LENGTH*/
  TA5REC.TA5APPID = "PA0C"; /* SET APPLICATION ID*/
  TA5REC.TA5FNCCD = "A"; /* SET FUNCTION CODE*/

  try
    call "TA0050" (PA0CW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* TEMPORARY STORAGE*/

   /* ----------------------------------------------------------*/
   /* IF SUCCESSFUL, INITIALIZE THE STORAGE AREA AND INDICATORS*/
   /* TO BE USED. RETURN TO THE PREVIOUS PROCESS.*/
   /* ----------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && TA5REC.TA5RTNCD == 0)          /* AND NORMAL RETURN CODE*/

    PA0CW00.PA0CW-MAX-PAGES = TA5REC.TA5TSQIX;

    set PA0CW04 empty;

    sysVar.arrayIndex = 0;

    return;

  end

   /* ----------------------------------------------------------*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ----------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* SUBROUTINE PARAMETERS*/

  PAWREC.XXXMODID = "S16";
  converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1PGMNM = "PA0CS16";
  TA1REC.TA1LOC = "WRITE  TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* MAP APPLICATION*/
  TA1REC.TA1MAP = "M001";

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes};

  exit stack;


end // end PA0CS-16-TA0050-A

// READ TEMP STORAGE
Function PA0CS-17-TA0050-R()
   /* ---------------------------------------------*/
    /* OBTAIN TEMP STORAGE PAGE*/
   /* ---------------------------------------------*/

  PA0CW04.PA0CW-TS-PAGE-LENGTH = 1350; /* TEMP STORAGE PAGE LENGTH*/
  TA5REC.TA5TSQIX = PA0CW00.PA0CW-CURRENT-TS-PAGE;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (PA0CW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  PAWREC.XXXMODID = "S17"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1PGMNM = "PA0CS17"; /* Module identification*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* MAP APPLICATION*/
  TA1REC.TA1MAP = "M001"; /* Map name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

end // end PA0CS-17-TA0050-R

// UPDATE TEMP STORAGE
Function PA0CS-18-TA0050-U()
   /* ------------------------------------------------*/
   /* WRITE TEMP STORAGE*/
   /* -----------------------------------------------*/

  sysVar.arrayIndex = 0;
  PA0CW04.PA0CW-TS-PAGE-LENGTH = 1350; /* TEMP STORAGE PAGE LENGTH*/
  TA5REC.TA5APPID = "PA0C"; /* SET APPLI ID*/
  TA5REC.TA5FNCCD = "U"; /* SET FUNCTION CODE*/

  call "TA0050" (PA0CW04, TA5REC) {isNoRefresh = yes};

   /* ------------------------------------------------*/
   /* IF SUCCESSFUL, RETURN TO THE PREVIOUS PROCESS*/
   /* -----------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && TA5REC.TA5RTNCD == 0)         

    return;

  end

   /* ------------------------------------------------------*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* SUBROUTINE PARAMETERS*/

  PAWREC.XXXMODID = "S18";
  converseLib.validationFailed(10); /* SYSTEM ERROR*/

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE M001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* MAP APPLICATION*/
  TA1REC.TA1MAP = "M001";
  SQLCA.SQLCAREC = TA5REC.TA5DATA;

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes};

  exit stack;

end // end PA0CS-18-TA0050-U

// SELECT 'S' DPRODA.VPAHDR01
Function PA0CS-19-IO4830-S()
   /* ------------------------------------------------------------*/
   /* Select 's' dproda.vpahdr01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4830" ("S ", SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S19"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODA.VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0CS-19-IO4830-S

// UPDATE DPRODA.VPAAFH01
Function PA0CS-20-IO7080-U()
   /* ------------------------------------------------------------*/
   /* UPDATE DPRODA.VPAAFH01*/
   /* ------------------------------------------------------------*/

  try
    call "IO7080" ("U ", SQLCA, VPAAFH01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S20"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DPRODA.VPAAFH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFH01.VPAAFH01-GROUP; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0CS-20-IO7080-U

// SELECT 'S' DPRODA.VPAAFM01
Function PA0CS-22-IO7110-S()
   /* ------------------------------------------------------------*/
   /* Select 's' DPRODA.VPAAFM01*/
   /* ------------------------------------------------------------*/

  try
    call "IO7110" ("S ", SQLCA, VPAAFM01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S22"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODA.VPAAFM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFM01.VPAAFM01-GROUP; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0CS-22-IO7110-S

// OPEN DPRODA.VPAAFA01
Function PA0CS-23-IO7100-S1()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAAFA01 TABLE.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7100" ("S1", SQLCA, VPAAFA01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S23"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DPRODA.VPAAFA01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS23"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFA01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFA01.VPAAFA01-GROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-23-IO7100-S1 **************************/
   /* **                                                        ***/


end // end PA0CS-23-IO7100-S1

// GET NEXT DPRODA.VPAAFA01
Function PA0CS-24-IO7100-N1()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAAFA01 TABLE.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7100" ("N1", SQLCA, VPAAFA01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S24"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DPRODA.VPAAFA01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS24"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFA01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFA01.VPAAFA01-GROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-24-IO7100-N1 **************************/
   /* **                                                        ***/


end // end PA0CS-24-IO7100-N1

// CLOSE DPRODA.VPAAFA01
Function PA0CS-25-IO7100-C1()
   /* ------------------------------------------------------------*/
   /* CLOSE DPRODA.VPAAFA01 TABLE.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7100" ("C1", SQLCA, VPAAFA01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S25"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DPRODA.VPAAFA01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS25"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFA01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFA01.VPAAFA01-GROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-25-IO7100-C1 **************************/
   /* **                                                        ***/


end // end PA0CS-25-IO7100-C1

// ADD DPRODA.VPAAFA01
Function PA0CS-26-IO7100-A()
   /* ------------------------------------------------------------*/
   /* UPDATE DPRODA.VPAAFA01*/
   /* ------------------------------------------------------------*/

  try
    call "IO7100" ("A ", SQLCA, VPAAFA01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S26"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DPRODA.VPAAFA01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFA01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFA01.VPAAFA01-GROUP; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0CS-26-IO7100-A

// UPDATE DPRODA.VPAHDR01
Function PA0CS-27-IO4830-U()

   /* ------------------------------------------------------------*/
   /* UPDATE DPRODA.VPAHDR01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4830" ("U ", SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end


    /* ------------------------------------------------------------*/
     /* IF ROW NOT FOUND, INDICATE THE DATA WAS UPDATED BY ANOTHER.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100)
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
      PA0CW00.PA0CW-DB2-ERROR = "Y";
      PAWREC.XXXMODID = "S27";
      converseLib.validationFailed(12);
      exit stack;
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S27"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DPRODA.VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0CS-27-IO4830-U

// SELECT SET (S1) PA4REC
Function PA0CS-28-IO4810-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from dproda.vfypa001.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4810" ("S1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S28"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET DPRODA.VFYPA001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS28"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0CS-28-IO4810-S1 ************/
   /* **                                                        ***/
end // end PA0CS-28-IO4810-S1

// FETCH (N1) PA4REC
Function PA0CS-29-IO4810-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4810" ("N1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S29"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS29"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* ===> Table view name*/

  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ************ END OF PA0CS-29-IO4810-N1 **********************/
   /* **                                                        ***/
end // end PA0CS-29-IO4810-N1

// CLOSE (C1) PA4REC
Function PA0CS-30-IO4810-C1()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4810" ("C1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S30"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS30"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0CS-30-IO4810-C1 ************/
   /* **                                                        ***/
end // end PA0CS-30-IO4810-C1

// UPDATE DPRODA.VFYPA001
Function PA0CS-31-IO4810-U()

   /* ------------------------------------------------------------*/
   /* UPDATE DPRODA.VFYPA001*/
   /* ------------------------------------------------------------*/

  try
    call "IO4810" ("U ", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end


    /* ------------------------------------------------------------*/
     /* IF ROW NOT FOUND, INDICATE THE DATA WAS UPDATED BY ANOTHER.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100)
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
      PA0CW00.PA0CW-DB2-ERROR = "Y";
      PAWREC.XXXMODID = "S31";
      converseLib.validationFailed(12);
      exit stack;
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S31"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DPRODA.VFYPA001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0CS-31-IO4810-U

// SELECT SET DCORP.VSUMCD01
Function PA0CS-32-IO2640-S()

   /* ------------------------------------------------------------*/
   /* Select UNIQUE row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2640" ("S ", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* OR NOT FOUND*/

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  PAWREC.XXXMODID = "S32"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "GET UNIQUE DCORP.VSUMCD01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0CS32"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* Formatted error key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* EXIT TO DISPLAY MAP*/


end // end PA0CS-32-IO2640-S

// OPEN DPRODA.VPAITM01
Function PA0CS-33-IO4980-S1()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAITM01 TABLE.*/
   /* ------------------------------------------------------------*/

  set PA2REC empty; /* init item  rec*/
  set PAEREC empty; /* init item  rec*/
  PAEREC.PAEFUNC = "S1";
  PA2REC.PA1OANBR = PA1REC.PA1OANBR;
  PA2REC.YESCD = "*";

  try
    call "IO4980" (PAEREC, SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S33"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS33"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-33-IO4980-S1 **************************/
   /* **                                                        ***/


end // end PA0CS-33-IO4980-S1

// GET NEXT DPRODA.VPAITM01
Function PA0CS-34-IO4980-N1()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAITM01 TABLE.*/
   /* ------------------------------------------------------------*/

  PAEREC.PAEFUNC = "N1";

  try
    call "IO4980" (PAEREC, SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S34"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS34"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-34-IO4980-N1 **************************/
   /* **                                                        ***/


end // end PA0CS-34-IO4980-N1

// CLOSE DPRODA.VPAITM01
Function PA0CS-35-IO4980-C1()
   /* ------------------------------------------------------------*/
   /* CLOSE DPRODA.VPAITM01 TABLE.*/
   /* ------------------------------------------------------------*/

  PAEREC.PAEFUNC = "C1";

  try
    call "IO4980" (PAEREC, SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S35"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS35"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-35-IO4980-C1 **************************/
   /* **                                                        ***/


end // end PA0CS-35-IO4980-C1

// IO4640 SELECT VDNORD01 RECORDS
Function PA0CS-36-IO4640-SB()
   /* ---------------------------------------------*/
   /* CALL IO4640 TO SELECT O/A CUSTOMER RECORDS*/
   /* ---------------------------------------------*/

  try
    call "IO4640" ("SB", SQLCA, FBHREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/

  PAWREC.XXXMODID = "S36";

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/

    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";

  else

    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";

    converseLib.clearScreen();

  end

  PA0CW00.PA0CW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0CS36 SELECT VDNORD01 ROW   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDNORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBHREC.FBHGROUP; /* TABLE KEY*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* EXIT TO DISPLAY MAP*/


end // end PA0CS-36-IO4640-SB

// UPDATE DFBUY.VDNORD01
Function PA0CS-37-IO4640-U()
   /* ------------------------------------------------------------*/
   /* UPDATE DFBUY.VDNORD01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4640" ("U ", SQLCA, FBHREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
    )                           
      return; /* Return to previous process*/

    else
      if (SQLCA.VAGen_SQLCODE == 100)
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
        PAWREC.XXXMODID = "S05";
        converseLib.validationFailed(12); /* DATA UPDATED BY ANOTHER APPLICATION*/
        exit stack;
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S37"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UDPATE DFBUY.VDNORD01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS37"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDNORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBHREC.FBHGROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-37-IO4640-U  **************************/
   /* **                                                        ***/


end // end PA0CS-37-IO4640-U

// SELECT DFBUY.VFQTBS01
Function PA0CS-38-IO4740-S()
   /* ------------------------------------------------------------*/
   /* SELECT DFBUY.VFQTBS01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4740" ("S ", SQLCA, FBKREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S38"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "GET DFBUY.VFQTBS01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS38"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFQTBS01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBKREC.FBKGROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-38-IO4740-S  **************************/
   /* **                                                        ***/


end // end PA0CS-38-IO4740-S

// UPDATE DFBUY.VFQTBS01
Function PA0CS-39-IO4740-U()
   /* ------------------------------------------------------------*/
   /* UPDATE DFBUY.VDNORD01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4740" ("U ", SQLCA, FBKREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
    )                           
      return; /* Return to previous process*/

    else
      if (SQLCA.VAGen_SQLCODE == 100)
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
        PAWREC.XXXMODID = "S07";
        converseLib.validationFailed(12); /* DATA UPDATED BY ANOTHER APPLICATION*/
        exit stack;
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S39"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UDPATE DFBUY.VFQTBS01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS39"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFQTBS01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBKREC.FBKGROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-39-IO4740-U  **************************/
   /* **                                                        ***/


end // end PA0CS-39-IO4740-U

// SELECT DFBUY.VFSCTL01
Function PA0CS-40-IO4670-S()
   /* ------------------------------------------------------------*/
   /* SELECT DFBUY.VFSCTL01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4670" ("S ", SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S40"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "GET DFBUY.VFSCTL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS40"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBMREC.FBMGROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-40-IO4670-S  **************************/
   /* **                                                        ***/


end // end PA0CS-40-IO4670-S

// UPDATE DFBUY.VFSCTL01
Function PA0CS-41-IO4670-U()
   /* ------------------------------------------------------------*/
   /* UPDATE DFBUY.VFSCTL01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4670" ("U ", SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
    )                           
      return; /* Return to previous process*/

    else
      if (SQLCA.VAGen_SQLCODE == 100)
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
        PAWREC.XXXMODID = "S09";
        converseLib.validationFailed(12); /* DATA UPDATED BY ANOTHER APPLICATION*/
        exit stack;
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S41"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UDPATE DFBUY.VFSCTL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS41"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBMREC.FBMGROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-41-IO4670-U  **************************/
   /* **                                                        ***/


end // end PA0CS-41-IO4670-U

// SELECT COUNT DPRODA.VPAITM01
Function PA0CS-42-IO4980-SC()
   /* ------------------------------------------------------------*/
   /* SELECT COUNT DPRODA.VPAITM01*/
   /* ------------------------------------------------------------*/

  set PA2REC empty; /* init item  rec*/
  set PAEREC empty; /* init item  rec*/
  PAEREC.PAEFUNC = "SC";
  PA2REC.PA1OANBR = PA1REC.PA1OANBR;

  try
    call "IO4980" (PAEREC, SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S42"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "COUNT DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS42"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-42-IO4980-SC **************************/
   /* **                                                        ***/


end // end PA0CS-42-IO4980-SC

// OPEN DPRODA.VPACMT01
Function PA0CS-43-IO4820-S1()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPACMT01 TABLE.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4820" ("S1", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S43"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DPRODA.VPACMT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS43"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-43-IO4820-S1 **************************/
   /* **                                                        ***/


end // end PA0CS-43-IO4820-S1

// GET NEXT DPRODA.VPACMT01
Function PA0CS-44-IO4820-N1()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPACMT01 TABLE.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4820" ("N1", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S44"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DPRODA.VPACMT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS44"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-44-IO4820-N1 **************************/
   /* **                                                        ***/


end // end PA0CS-44-IO4820-N1

// CLOSE DPRODA.VPACMT01
Function PA0CS-45-IO4820-C1()
   /* ------------------------------------------------------------*/
   /* CLOSE DPRODA.VPACMT01 TABLE.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4820" ("C1", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S45"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DPRODA.VPACMT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0CS45"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0CS-45-IO4820-C1 **************************/
   /* **                                                        ***/


end // end PA0CS-45-IO4820-C1

//*** RECORD=PA0CW00 ****
// Working storage for PA0C - AIR FREIGHT APPROVAL
// ***********************
Record PA0CW00 type basicRecord
  10 XXXMSGNO XXXMSGNO ; 
  10 XXXMODID XXXMODID ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 XX1 XX1 ; 
  10 XX2 XX2 ; 
  10 XX3 XX3 ; 
  10 XX4 XX4 ; 
  10 XX5 XX5 ; 
  10 XX6 XX6 ; 
  10 XX7 XX7 ; 
  10 XX8 XX8 ; 
  10 XX9 XX9 ; 
  10 PA1OANBR PA1OANBR ; 
  10 PA-AFRGT-RQT-ID PA-AFRGT-RQT-ID ; 
  10 PAWBUYDT PAWBUYDT ; 
  10 PAWBUYYM PAWBUYYM ; 
  10 PA0CW-REQ-FOR-DATA-FLAG PA0CW-REQ-FOR-DATA-FLAG ; 
  10 PA0CW-KEY-CHANGED PA0CW-KEY-CHANGED ; 
  10 PA0CW-SELECT-MODIFIED PA0CW-SELECT-MODIFIED ; 
  10 PA0CW-CONFIRM-MSG-SHOWN PA0CW-CONFIRM-MSG-SHOWN ; 
  10 PA0CW-MAX-PAGES PA0CW-MAX-PAGES ; 
  10 PA0CW-CURRENT-TS-PAGE PA0CW-CURRENT-TS-PAGE ; 
  10 PA0CW-DISPLAY-MAP2 PA0CW-DISPLAY-MAP2 ; 
  10 PA0CW-SELECTION-UPDATED PA0CW-SELECTION-UPDATED ; 
  10 PC3POIDT PC3POIDT ; 
  10 PA0CW-DB2-ERROR PA0CW-DB2-ERROR ; 
  10 FY1FCTYC FY1FCTYC [4] ; 
  10 YESCD YESCD [4] ; 
  10 PA0CW-READ-ONLY PA0CW-READ-ONLY ; 
  10 PA0CW-AF-CHANGED PA0CW-AF-CHANGED ; 
  10 PA0CW-OA-CHANGED PA0CW-OA-CHANGED ; 
  10 PA0CW-HEADER-ERROR PA0CW-HEADER-ERROR ; 
  10 TSCLOCCD TSCLOCCD ; 
  10 PA0CW-PAIR-WT-KG PA0CW-PAIR-WT-KG ; 
  10 PA0CW-CCYYMMDD PA0CW-CCYYMMDD ; 
    15 PA0CW-CCYYMMDD-CCC PA0CW-CCYYMMDD-CCC ; 
    15 PA0CW-CCYYMMDD-YY PA0CW-CCYYMMDD-YY ; 
    15 PA0CW-CCYYMMDD-MM PA0CW-CCYYMMDD-MM ; 
    15 PA0CW-CCYYMMDD-DD PA0CW-CCYYMMDD-DD ; 
  10 PA0CW-MMDDYY PA0CW-MMDDYY ; 
    15 PA0CW-MMDDYY-MM PA0CW-MMDDYY-MM ; 
    15 PA0CW-MMDDYY-DD PA0CW-MMDDYY-DD ; 
    15 PA0CW-MMDDYY-YY PA0CW-MMDDYY-YY ; 
  10 PA0CW-PROCESS-BY-FL PA0CW-PROCESS-BY-FL ; 
  10 PA0CW-DEPT-RSP-ENTERED PA0CW-DEPT-RSP-ENTERED ; 
  10 PA0CW-UPDATE-VPAAFH01-FLAG PA0CW-UPDATE-VPAAFH01-FLAG ; 
  10 PA0CW-APPROVE-AF-FLAG PA0CW-APPROVE-AF-FLAG ; 
  10 PA-APVL-GRP-ID PA-APVL-GRP-ID ; 
  10 PA0CW-NUM-GROUPS-APPROVED PA0CW-NUM-GROUPS-APPROVED ; 
  10 YSMXDV YSMXDV ; 
  10 PA0CW-BUY-FLAGS-UPDATED PA0CW-BUY-FLAGS-UPDATED ; 
  10 PA0CW-PC111D-SUBMITTED PA0CW-PC111D-SUBMITTED ; 
  10 TSEDEST TSEDEST ; 
    15 PA0CW-GENERAL-LOCATION PA0CW-GENERAL-LOCATION ; 
    15 * char(2) ; 
  10 PA0CW-APPROVED-DATE PA0CW-APPROVED-DATE ; 
  10 PA0CW-APPROVED-HHMM PA0CW-APPROVED-HHMM ; 
    15 PA0CW-APPROVED-HOUR PA0CW-APPROVED-HOUR ; 
    15 PA0CW-APPROVED-MIN PA0CW-APPROVED-MIN ; 
  10 PA0CW-APPROVED-TIME PA0CW-APPROVED-TIME ; 
    15 PA0CW-APPROVED-HH PA0CW-APPROVED-HH ; 
    15 PA0CW-APPROVED-COLON PA0CW-APPROVED-COLON ; 
    15 PA0CW-APPROVED-MM PA0CW-APPROVED-MM ; 
end // end PA0CW00

//*** RECORD=PA0CW01 ****
// Working storage for PA0C - AIR FREIGHT APPROVAL
// ***********************
Record PA0CW01 type basicRecord
  5 PA0CW-PA0CW01-GROUP PA0CW-PA0CW01-GROUP ; 
    10 YESCD YESCD ; 
    10 YESSDESC YESSDESC ; 
    10 PA1HLDFL PA1HLDFL ; 
    10 YETCD YETCD ; 
    10 YSMXDV YSMXDV ; 
    10 PC3POIDT PC3POIDT [4] ; 
    10 FY1FCTYC FY1FCTYC [4] ; 
    10 PC3PONBR PC3PONBR [4] ; 
    10 PG1SC4CD PG1SC4CD ; 
    10 PA0CW-CURR-BUY-YYMM PA0CW-CURR-BUY-YYMM ; 
      15 PA0CW-CURR-BUY-YY PA0CW-CURR-BUY-YY ; 
      15 PA0CW-CURR-BUY-MM PA0CW-CURR-BUY-MM ; 
    10 PA0CW-EDIT-MONTH PA0CW-EDIT-MONTH ; 
    10 PA0CW-PC3POIDT PA0CW-PC3POIDT ; 
      15 * num(1) ; 
      15 PA0CW-PO-ID-CC PA0CW-PO-ID-CC ; 
      15 PA0CW-PO-ID-YY PA0CW-PO-ID-YY ; 
      15 PA0CW-PO-ID-MM PA0CW-PO-ID-MM ; 
      15 PA0CW-PO-ID-BUY-MM PA0CW-PO-ID-BUY-MM ; 
    10 PA0CW-PO-ID-FCTY PA0CW-PO-ID-FCTY ; 
    10 PA0CW-ORIG-PO-ID-CCYYMMMM PA0CW-ORIG-PO-ID-CCYYMMMM ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 SY1SSTNM SY1SSTNM ; 
    10 PC2CUXID PC2CUXID ; 
    10 XCTCD XCTCD ; 
    10 PA1RQQTY PA1RQQTY ; 
    10 PA0CW-SELECT PA0CW-SELECT [11] ; 
    10 PA0CW-UPDATE-HEADER PA0CW-UPDATE-HEADER ; 
    10 PA0CW-UPDATE-COMMENT PA0CW-UPDATE-COMMENT ; 
    10 PA0CW-COMMENT PA0CW-COMMENT ; 
    10 PA0CW-PA1020-YSMXDV PA0CW-PA1020-YSMXDV ; 
    10 PA-BLTO-NIKE-PCT PA-BLTO-NIKE-PCT ; 
    10 PA-BLTO-FCTY-PCT PA-BLTO-FCTY-PCT ; 
    10 PA-BLTO-CUST-PCT PA-BLTO-CUST-PCT ; 
    10 PA-BLTO-FRWRDR-PCT PA-BLTO-FRWRDR-PCT ; 
    10 PA0CW-PA-BLTO-TOTAL PA0CW-PA-BLTO-TOTAL ; 
    10 PA0CW-PA-DEPT-RSP-X PA0CW-PA-DEPT-RSP-X [5] ; 
    10 PA-DEPT-RSP-IND PA-DEPT-RSP-IND ; 
      15 PA0CW-PA-DEPT-RSP-NUM PA0CW-PA-DEPT-RSP-NUM ; 
    10 PA-LIAS-CTCT-NM PA-LIAS-CTCT-NM ; 
    10 PA-RSP-COMNT1 PA-RSP-COMNT1 ; 
    10 PA-RSP-COMNT2 PA-RSP-COMNT2 ; 
    10 PA-RSN-COMNT1 PA-RSN-COMNT1 ; 
    10 PA-RSN-COMNT2 PA-RSN-COMNT2 ; 
    10 PA-RSN-COMNT3 PA-RSN-COMNT3 ; 
    10 XXXPGUID XXXPGUID ; 
    10 ZZZSDT ZZZSDT ; 
    10 PA0CW-GRAND-TOTAL-PAIRS PA0CW-GRAND-TOTAL-PAIRS ; 
    10 PA0CW-PACFLADJ-GROUP PA0CW-PACFLADJ-GROUP ; 
      15 PA0CW-PACFLADJ PA0CW-PACFLADJ [40] ; 
    10 PA0CW-AF-GRAND-TOTAL PA0CW-AF-GRAND-TOTAL ; 
    10 PA0CW-VL-GRAND-TOTAL PA0CW-VL-GRAND-TOTAL ; 
    10 PA-AFRGT-APVL-MGR PA-AFRGT-APVL-MGR [3] ; 
    10 PA0CW-APVL-NDX PA0CW-APVL-NDX ; 
    10 PA0CW-MESSAGE PA0CW-MESSAGE ; 
    10 PA0CW-PC1111-PARM PA0CW-PC1111-PARM ; 
      15 PA0CW-PC1111-DAY PA0CW-PC1111-DAY ; 
      15 PA0CW-PC1111-F1 PA0CW-PC1111-F1 ; 
      15 PA0CW-PC1111-LOCK PA0CW-PC1111-LOCK ; 
      15 PA0CW-PC1111-F2 PA0CW-PC1111-F2 ; 
      15 PA0CW-PC1111-UPDATE PA0CW-PC1111-UPDATE ; 
      15 PA0CW-PC1111-F3 PA0CW-PC1111-F3 ; 
      15 PA0CW-PC1111-SINGLE-OA PA0CW-PC1111-SINGLE-OA ; 
    10 PA0CW-PC1111-SINGLE-OA-NUM PA0CW-PC1111-SINGLE-OA-NUM ; 
end // end PA0CW01

//*** RECORD=PA0CW02 ****
// THIS RECORD IS USED TO STORE THE OA ITEMS WITH AIR FREIGHT
// INTO.  THESE ITEMS ARE WRITTEN OUT TO TEMP STORAGE.
// 
// KEEP IN MIND THAT THE TEMP STORAGE MAXIMUM LENGTH IS 4092.
// SINCE A TEMP STORAGE PAGE CONTAINS 11 ROWS, THE MAXIMUM
// LENGTH OF THIS WORKING STORAGE GROUP IS 372.
// 
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 02/03/94   MSMIT2   New record.
// ***********************
Record PA0CW02 type basicRecord
  5 PA0CW-TEMP-GROUP PA0CW-TEMP-GROUP ; 
    10 PA0CW-SELECT PA0CW-SELECT ; 
    10 XWHCD XWHCD ; 
    10 PC2CUXID PC2CUXID ; 
    10 PC6ETSDT PC6ETSDT ; 
    10 PC6RTADT PC6RTADT ; 
    10 PA0CW-AF-ETA PA0CW-AF-ETA ; 
    10 PA0CW-VL-ETA PA0CW-VL-ETA ; 
    10 PA0CW-TOTAL-NUM-PAIRS PA0CW-TOTAL-NUM-PAIRS ; 
    10 PA0CW-PACFLADJ-GROUP PA0CW-PACFLADJ-GROUP ; 
      15 PA0CW-PACFLADJ PA0CW-PACFLADJ [40] ; 
    10 PA0CW-AF-DOLLAR-PER-PAIR PA0CW-AF-DOLLAR-PER-PAIR ; 
    10 PA0CW-AF-TOTAL PA0CW-AF-TOTAL ; 
    10 PA0CW-VL-TOTAL PA0CW-VL-TOTAL ; 
    10 PA0CW-TOTAL-RECORD PA0CW-TOTAL-RECORD ; 
    10 * char(23) ; 
end // end PA0CW02

//*** RECORD=PA0CW04 ****
// THIS RECORD CONTAINS THE 6 RECORDS THAT ARE TO BE PLACED
// INTO/READ OUT OF TEMP STORAGE
// 
// KEEP IN MIND THAT THE TEMP STORAGE MAXIMUM LENGTH IS 4092.
// SINCE A TEMP STORAGE PAGE CONTAINS 11 ROWS, THE MAXIMUM
// LENGTH OF THIS WORKING STORAGE GROUP IS 372.
// 
// ***********************
Record PA0CW04 type basicRecord
  5 PA0CW-TS-PAGE-LENGTH PA0CW-TS-PAGE-LENGTH ; 
  5 * char(1350) ; 
    10 PA0CW-TEMP-STORE-GRP PA0CW-TEMP-STORE-GRP [6] ; 
      15 PA0CW-SELECT PA0CW-SELECT ; 
      15 * char(224) ; 
end // end PA0CW04

//*** RECORD=PA0CW06 ****
// ********** ORDER ADJUSTMENTS COMMON PASS DATA *************
// 
//   This record breaks out the PAWEXTRA field of PAWREC.  this
//   is so that information can be passed to PA0U.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 10/23/91   MSMIT2   New record.
// ***********************
Record PA0CW06 type basicRecord
  5 PAWEXTRA PAWEXTRA ; 
    10 PC2CUXID PC2CUXID ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 PC3POIDT PC3POIDT ; 
    10 * char(1498) ; 
end // end PA0CW06

DataItem PA0CW-AF-CHANGED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-AF-DOLLAR-PER-PAIR decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-AF-ETA int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-AF-GRAND-TOTAL int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-AF-TOTAL int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-APPROVE-AF-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-APPROVED-COLON char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ZZ_SDT
DataItem PA0CW-APPROVED-DATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-APPROVED-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ZZ_SETUP_HHMM
DataItem PA0CW-APPROVED-HHMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-APPROVED-HOUR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-APPROVED-MIN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-APPROVED-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ZZ_SETUP_HHMM
DataItem PA0CW-APPROVED-TIME char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-APVL-NDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-BUY-FLAGS-UPDATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-CCYYMMDD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-CCYYMMDD-CCC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-CCYYMMDD-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-CCYYMMDD-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-CCYYMMDD-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-COMMENT char(65)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-CONFIRM-MSG-SHOWN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-CURR-BUY-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-CURR-BUY-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-CURR-BUY-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// MAX NUMBER OF TEMP PAGES
DataItem PA0CW-CURRENT-TS-PAGE num(2)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// DB2 ERROR OCCURRED FLAG
DataItem PA0CW-DB2-ERROR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-DEPT-RSP-ENTERED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-DISPLAY-MAP2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-EDIT-MONTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FIRST TWO CHARACTERS TSEDEST
DataItem PA0CW-GENERAL-LOCATION char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-GRAND-TOTAL-PAIRS int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-HEADER-ERROR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// KEY FIELD CHANGED FLAG
DataItem PA0CW-KEY-CHANGED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MAX NUMBER OF TEMP PAGES
DataItem PA0CW-MAX-PAGES num(2)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-MESSAGE char(48)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-MMDDYY num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-MMDDYY-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-MMDDYY-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-MMDDYY-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-NUM-GROUPS-APPROVED smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-OA-CHANGED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-ORIG-PO-ID-CCYYMMMM num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-PA-BLTO-TOTAL smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-PA-DEPT-RSP-NUM num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-PA-DEPT-RSP-X char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-PA0CW01-GROUP char(868)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XXX_SUM_XDV_CD
DataItem PA0CW-PA1020-YSMXDV char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FROM DPRODC.VPOITM01
DataItem PA0CW-PACFLADJ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-PACFLADJ-GROUP char(160)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-PAIR-WT-KG decimal(14,5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-PC1111-DAY char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-PC1111-F1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-PC1111-F2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-PC1111-F3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-PC1111-LOCK char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-PC1111-PARM char(27)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CHARACTER REP. OF OA# PA903
DataItem PA0CW-PC1111-SINGLE-OA char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// INTERMEDIATE VAR CONV. PA903
DataItem PA0CW-PC1111-SINGLE-OA-NUM num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-PC1111-UPDATE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-PC111D-SUBMITTED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PC_PO_ID_MO_RNG
DataItem PA0CW-PC3POIDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PO ID DAY
DataItem PA0CW-PO-ID-BUY-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-PO-ID-CC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PO ID FACTORY
DataItem PA0CW-PO-ID-FCTY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PO ID MONTH
DataItem PA0CW-PO-ID-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PO ID YEAR
DataItem PA0CW-PO-ID-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-PROCESS-BY-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-READ-ONLY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// indicates data requested
DataItem PA0CW-REQ-FOR-DATA-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-SELECT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-SELECT-MODIFIED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-SELECTION-UPDATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-TEMP-GROUP char(225)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record group level
DataItem PA0CW-TEMP-STORE-GRP char(225)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-TOTAL-NUM-PAIRS int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-TOTAL-RECORD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TEMP STORAGE PAGE LENGTH
DataItem PA0CW-TS-PAGE-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-UPDATE-COMMENT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// UPDATE DPRODA.VPAHDR01
DataItem PA0CW-UPDATE-HEADER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-UPDATE-VPAAFH01-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0CW-VL-ETA int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-VL-GRAND-TOTAL int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0CW-VL-TOTAL int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

