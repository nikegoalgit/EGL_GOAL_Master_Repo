package pa0q;
import corpcom2.XP0CW01;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom2.YSMREC;
import corpcom3.XP0C100;
import corpcom3.XP0C140;
import corpcom3.XPPA001;
import corpcom3.XPPA020;
import corpcom3.XPPA100;
import corpcom3.XPPC021;
import corpcom3.XPPC022;
import corpcom3.XPPC023;
import corpcom3.XPPC030;
import corpcom3.XPXDM01;
import corpcom3.XPXX001;
import corpcom3.XPYET01;
import corpcom4.XSPAS01;
import corpcom4.XSPG301;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XX1;
import corpcom7.XX2;
import corpcom7.XX3;
import corpcom7.XX4;
import corpcom7.XX5;
import corpcom7.XX6;
import corpcom7.XX7;
import corpcom7.XX8;
import corpcom7.XX9;
import corpcom7.XXXMODID;
import corpcom7.XXXMSGNO;
import corpcom7.XXXTSPAG;
import corpcom7.ZZ-CS400-CHNG-DT;
import corpcom7.ZZ-CS400-CHNG-HHMM;
import corpcom7.ZZ-DS400-CHNG-DT;
import corpcom7.ZZ-DS400-CHNG-HHMM;
import corpy2.YSMXDV;
import fb.common.FB-LATE-BK-FL;
import fb.common.FB-LATE-BK-FL-MDT;
import fb.common.FB9REC;
import fb.common.FBHREC;
import fb.common.FBKREC;
import fb.common.FBMREC;
import fy.common.FY1FCTNM;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import fy.common.FY2REC;
import fy.common.FYBREC;
import op.common.OP-SZ-GRP-SEQ;
import op.common.OP1CUNDT;
import op.common.OP1CUOID;
import op.common.OP1NORID;
import op.common.OP1PARTN;
import op.common.OP1REC;
import op.common.OP2KEY;
import op.common.OP2LNINB;
import op.common.OP2PRCOF;
import op.common.OP2REC;
import op.common.OP3ALQT;
import op.common.OP3CNLQT;
import op.common.OP3OHRQT;
import op.common.OP3ONOQT;
import op.common.OP3ORGQT;
import op.common.OP3SHPQT;
import op.common.OP3WPRQT;
import pa.common.*;
import pc.common.PC2CUXID;
import pc.common.PC2INSEG;
import pc.common.PC2REC;
import pc.common.PC3POIDT;
import pc.common.PC3PONBR;
import pc.common.PC3REC;
import pc.common.PC4ORTYP;
import pc.common.PC5REC;
import pc.common.PC6ETSDT;
import pc.common.PC6ITMNB;
import pc.common.PC6REC;
import pc.common.PC6RTADT;
import pc.common.PC7REC;
import pc.common.PCMREC;
import pc.common.PCYREC;
import pg.common.PG1SC4CD;
import pg.common.PG2REC;
import pg.common.PG3REC;
import sy.common.SY1STYNM;
import sy.common.SY2CLRID;
import sy.common.SY5PRCUN;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import ts.common.TS5REC;
import ts.common.TSHREC;
import ts.common.TSOREC;
import ts.common.TSTREC;
import vv.common.VCMPPG01;
import vv.common.VCPLHDJ4;
import vv.common.VFRZIT02;
import vv.common.VFYPO002;
import vv.common.VPAWRK02;
import vv.common.VPAWRK03;
import vv.common.VPOITM03;
import vv.common.VPOITM04;
import vv.common.VPOITM05;
import vv.common.VPOSIZ02;
import vv.common.VSOPOX01;
import ww.common.WEU0100;
import xx.common.*;
import xx.common.KUCCOID;
import xx.common.KUMSTRID;
import xx.common.XCTCD;
import xx.common.XGPCD;
import xx.common.XNXCD;
import xx.common.XQACD;
import xx.common.XWHCD;
import xx.common.ZZZCHGCT;
import xx.common.ZZZCHGDT;
import xx.common.ZZZCHGTM;
import xx.common.ZZZSDT;
import xx02.*;
import xx02.XDMCD;
import xx02.XDMTBL;
import xx02.XDSCD;
import xx02.XDZ-DATA-DIST-CD;
import xx02.XFRCD;
import xx04.*;
import xx04.XPGCD;
import xx06.*;
import xx06.XUMCD;
import xx06.XWHTBL;
import xx07.*;
import xx07.SY5SZID;
import xx07.YESCD;
import xx07.YESSDESC;
import xx07.YESTBL;
import xx07.YETCD;
import xx07.YETTBL;
import xx08.*;
import xx08.SY1STNBR;
import xx08.YMTCD;
import xx09.*;
import xx09.PC-XCT-ORIG-CD;
import xx10.*;
//*** PROGRAM=PA0Q ****
// This application is designed to allow users to display and
// select sales order and purchase order items in order to
// create and maintain order adjustments.
// 
// This application maintains the OA header (DPRODA.VPAHDR01),
// OA item (DPRODA.VPAITM01), frozen item (DPRODA.VFRZIT01),
// frozen size (DPRODA.VFRZSZ01), OA work (DPRODA.VPAWRK01),
// OA factory (DPRODA.VFYPA001), and OA customer (DPRODA.
// VPACUS01) records.  This applicate allows specific OA type
// changes and allows reworking of OAs in specific status
// codes.
// 
// NOTE ON TEMP STORAGE:  The maximum record length allowed in
// temp storage is 4K bytes (4,096).  The maximum size of a CSP
// working storage record is 65,535 bytes.  If a working
// storage record exceeds this amount, three methods can be
// used to store the info:
// 
// 1.  Cut the occurs for the working storage record down to
//     fit within the limit.
// 
// 2.  Cut the length of each record down so that the needed
//     number of occurs can be used.
// 
// 3.  Use temp storage to write the information out in blocks.
//     In the case listed above, the temp storage record length
//     limit is 4K.
// 
//     The temp storage in PA0Q is used to store a full screen
//     page of data which consists of 11 lines of information.
//     If the PA0QW02 or PA0QW03 records need to be expanded,
//     the number of lines on the screen must be decreased or
//     two records havn to be written to temp storage (and two
//     pages written/read).
// 
// Of the three methods listed above, the temp storage solution
// was used (option 3 above).
// 
// The user may exit to another application at any time VIA
// fastpath or PF key.
// 
// ------------------------------------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          09/10/91  MSMIT2  NEW APPLICATION
// PA0000   02/03/92  DHALES  TEMP FIX TO ALLOW OA'S IN CURRENT
//                            BUY MO AND FIX TO ALLOW NIL TO
//                            PROCESS OA'S (INCORRECT XDVCODE)
// PA0001   02/10/92  MSMIT2  BALANCE TO SHIP QUANTITY SHOULD
//                            BE LOADED INTO THE PACADJQT AND
//                            THE ON ORDER QUANTITY SHOULD BE
//                            LOADED INTO THE PACWRKQT.
// 000002   02/12/92  MSMIT2  THE BALANCE TO SHIP QUANTITIES
//                            WHERE INCORRECTLY CALCULATED FOR
//                            WAREHOUSE RECORDS WITH DIFFERENT
//                            RTA/ETS.
// 000003   02/13/92  MSMIT2  THE RECEIVED QUANTITIES ARE NOT
//                            BEING USED TO CALCULATE BTS.
//                            RETRIEVE NDV01 RECORDS AFTER THE
//                            WAREHOUSE RECORDS.
// 000004   02/14/92  MSMIT2  INITIALIZE NDV01 FLAGS.
// 000005   02/25/92  DHALES  MOVE DIR SHP CODE INTO PO SELECT
//                            WHEN NOT SELECTING WHSE ONLY
//                            CHANGE MADE TO PA0Q-161
// 000006   02/28/92  DHALES  CORRECT PROCESS FOR DIRECT SHIP
//                            CODE 2 AND FIX BAL TO SHIP PROB
// 000007   02/12/92  DHALES  database change - pa0q-610 change
//                            to init late book stuff on hdr
// 000008   04/13/92  MSMIT2  DATABASE CHANGES TO PG2REC. ALSO:
//                            1.  MAKE FACTORY WITH HARD ERROR
//                                A WARNING.
//                            2.  DEFAULT PO TYPE FOR SIDE ONE
//                                PRODUCTS TO 'S1' - ALWAYS.
// 000009   04/20/92  MSMIT2  SHOW PO LINE ITEMS FOR DIRECT
//                            SHIPS EVEN IF THEY DO NOT HAVE A
//                            SALES ORDER NUMBER
// 000010   04/21/02  MSMIT2  ADD LATE BOOKING AND MULT. SO/PO
//                            PO LOGIC.
// 000011   05/27/92  dhales  security for nil adding factory
//                            not working when return from pa0u
// 000012   06/09/92  DHALES  TABLE CHANGES - VPAHDR01
// PA272    06/23/92  MSMIT2  PUT PO TYPE IN HEADER RECORD.
//                            WHEN INITIAL PA0Q SCREEN, PO TYPE
//                            SHOULD BE BLANK.  AFTER PRODUCT
//                            ENTERED, DEFAULT PO TYPE BASED ON
//                            PRODUCT.
// PA279                      IF 1 FACTORY BUILDS STYLE,
//                            DEFAULT FACTORY ASSIGNMENT TO
//                            THAT FACTORY.
// PA281                      FOR 'ND' O/AS DEFAULT CUSOR TO
//                            FIRST SELECTION FIELD WHEN PAGING
// 000013                     WHEN PF18 HIT, KEEP PG1SC4CD.
// 000014                     WHEN O/A IS REWORK:
//                            1.  CAN SELECT "84'D" FACTORY
//                            2.  MUST RESELECT NON "84'D" FCTY
//                            3.  CLEAR OUT FACTORY ENTRY BOX
// 000015                     MAKE SURE THAT 'SE' TYPES CAN BE
//                            CHANGED TO 'DD', 'DM', 'DS'.
// PA292    07/06/92  MSMIT2  DO NOT DISPLAY CANCELLED PO ITEMS
// 000016   07/10/92  MSMIT2  ADD EDIT SO THAT THE SAME FACTORY
//                            CAN'T BE ADDED IN THE FACTORY
//                            ENTRY BOX.
// 000017   10/12/92  dhales  data base changes add flag for
//                            buy sys:  pa_appl_buy_btl_fl
// 000018   10/19/92  dhales  pa269 - add code to separate
//                            shipments by mode
// 000019   10/29/92  dhales  stray po's not having correct
//                            balance to ship
// 000020   11/12/92  DFRANC  corrected hold field when flag=Y
// 000021   11/13/92  DFRANC  Added purge of temp storage when
//                            key changes, init of working
//                            storage recs in flow.  Protect
//                            STY/CLR/DIM when O/A exits.
// 000022   11/25/92  MSMIT2  MAKE SURE PG1SC4CD ALWAYS ADDED
//                            TO HEADER.
// PA308    12/16/92  DFRANC  ALLOW 'PR' TO CHANGE TO 'EO' AND
//                            'EO' TO CHANGE TO 'PR'.(OA TYPES)
// 000023   01/14/93  MSMIT2  WHEN SALES ORDER LAST LINE ON
//                            PAGE, NEXT PAGE NOT SAVED TO TEMP
//                            STORAGE.
// PA308    11/15/92  MSMIT2  PRINT ERROR MESSAGE FOR 'PR' O/AS
//                            WHEN DIRECT SHIP CODES ARE
//                            DIFFERENT BETWEEN DORDER.VORHDR01
//                            AND DFBUY.VDNORD01.  NOTE, THIS
//                            EDIT IS ONLY DONE FOR PRE-ADVICE
//                            O/AS IN THE CURRENT BUY MONTH.
// 000024   02/09/93  MSMIT2  FOR REWORK O/AS, CHECK PA0QW00
//                            RECORD FOR FACTORY INFO INSTEAD
//                            OF PA0QW01 RECORD.
// PA308    02/09/93  MSMIT2  OPEN UP FACTORY BOX FOR 'PR' AND
//                            'EO' O/AS TYPES FROM FORECASTING.
// PA308    02/25/93  MSMIT2  ALLOW 'DR' TO CHANGE TO 'PR' AND
//                            'EO'.
// PA308    03/02/93  MSMIT2  OPEN UP FACTORY BOX FOR 'OR'.
// 000025   03/09/93  MSMIT2  TRADE RESTRICTION WARNING ACTS
//                            LIKE AN ERROR WHEN CUSTOMER
//                            ENTERED.
// 000026   03/25/93  MSMIT2  WHEN O/A IN STATUS '80', ALLOW
//                            DIVISION TO BE CHANGED TO BRING
//                            UP POS.
// PA0327   03/04/93  DHALES  PRODUCE WARNING IF NI FOR SAME
//                            PO ID, STYLE, COLOR, DIM ...
// PA0331   04/01/93  MSMIT2  DON'T ALLOW STATUS '80' TO
//                            PROCESSES. MUST BE CHANGED TO
//                            '01'.
// PA0330   04/28/93  MSMIT2  FOR OR/NO O/A TYPES:
//                            1.  OVERRIDE PO ID WITH FY0605
//                                (FY IS FISCAL YEAR BASED ON
//                                ZZ_SDT FROM DPRODA.VPAHDR01.
//                            2.  TAKE OUT THE ABILITY FOR
//                                OVERRUN TO CHANGE TO ADDS
//                                AND ADDS TO CHANGE TO
//                                OVERRUNS.
//                            ALSO, FOR 'NI' AND 'DN' REQUIRE
//                            SALES ORDER TO BE SELECTED. THIS
//                            WILL ENSURE THAT THE SALES ORDER
//                            IS UPDATED BEFORE THE O/A CAN
//                            PROCESS.
//          05/05/93  MSMIT2  FOR REWORK O/AS, WHEN MESSAGE 273
//                            IS DISPLAYED, OPEN UP FACTORY BOX
//          05/12/93  MSMIT2  IF PO TYPE NOT ENTERED AND STYLE,
//                            COLOR, DIMENSION MISSING - SHOW
//                            THE ERROR FOR THE STYLE, COLOR,
//                            DIMENSION MISSING.
//          05/24/93  MSMIT2  FOR REWORK O/AS, DISPLAY FACTORY
//                            ENTRY BOX AND ALLOW FACTORIES
//                            TO BE CHANGED.  EDITS STILL APPLY
//          05/26/93  MSMIT2  REMOVE BRAND CODE '05' SIDE-1.
// 000027   06/04/93  MSMIT2  STANDARDIZE PF KEYS.
// 000028   06/09/93  MSMIT2  TABLE CHANGE TO FBHREC.
// 000029   06/14/93  MSMIT2  TABLE CHANGES TO:
//                            1.  FY2REC
//                            2.  PASREC
//                            3.  PC7REC
// 000030   06/28/93  MSMIT2  ADD PFKEY TO TRANSFER TO PA0A.
// pa9999   07/30/93  pkhan   fix wrong whse shown in map2.
// 000031   08/09/93  MSMIT2  DATABASE CHANGES - ADD SETUP TIME
//                            TO DPRODA.VPAHDR01.  ALSO, DON'T
//                            REQUIRE THE '96' TO BE RESELECTED
// 000032   08/16/93  MSMIT2  DON'T REQUIRE THE '18' TO BE
//                            RESELECTED.
// 000033   08/23/93  MSMIT2  CUSTOMER MISC1 DOESN'T SHOW PO.
// PA0344   08/26/93  MSMIT2  SHOW FUTURE SALES ORDERS SO THAT
//                            THE PRODUCT CAN BE BUILT SOONER.
// PA0344   10/13/93  MSMIT2  SHOW PRIOR POS THAT MATCH SOS.
// PA0344   10/18/93  MSMIT2  DN AND ND SHOULD SHOW NIL FROM
//                            SALES ORDER DATES.  OVERRUN TYPES
//                            NEED TO BRING IN ALL DATA.
// PA9999   11/08/93  MSMIT2  DATABASE CHANGES - ADD AIR
//                            FREIGHT NUMBER TO PA1REC.
// PA9999   12/03/93  MSMIT2  TAKE OUT TEMP CODE FOR PA344.
// FB322    12/16/93  MSMIT2  USE DCORP.VSUMCD01 'YES','PA',
//                            6,'BY' TO CONTAIN THE ACTIVE BUY
//                            STATUS CODES.  FOR DOMESTIC SALES
//                            ORDERS FOR THE CURRENT BUY AND IF
//                            THE STATUS CHANGES FROM/TO THIS
//                            GROUP OF CODES AND:
//                            1.  BEFORE CUTOFF - RESET THE
//                                BUY FLAGS TO 'N'.
//                            2.  AFTER CUTOFF - ERROR.
//          01/04/94  MSMIT2  DON'T ALLOW CHANGES FROM/TO PR.
//                            IF THIS IS EVER ALLOWED, THE BUY
//                            FLAGS WILL HAVE TO BE RESET.
// PA0349   01/05/94  MSMIT2  ADD MUSICAL SIZE RUN IND TO MAP.
// PA9999   01/24/94  MSMIT2  JADKIN - TAKE OUT EDIT AGAINST
//                            BUY DATE (PA0Q-60001/PA0Q-62001).
// PA302    01/25/94  MSMIT2  ADD AIR FREIGHT PROCESSING.
// PA9999   03/22/94  MSMIT2  PA0Q-160 CALCULATING THE WRONG
//                            BTS.  MUST COMPARE PA0QW03 WHSE
//                            WITH PREVIOUSE WHSE, IF DIFFERENT
//                            CALC BTS.
// Pcf-231  09/12/94  JJUDKI  components program styles hilight
// PA9999   10/14/94  MSMIT2  ALLOW REPAK TO PROCESS PA0Q-16101
//                            OPEN UP TO ALLOW PROCESSING OF
//                            NIKE XREFS (YPC-PRDCU-TYP-CD = N)
//                            IF NOT DS = '1' OR '2' AND WHSE
//                            ON PO.
// pg-82    12/15/94  pmainw  Handle twenty product lines
//                            in vfsctl01.
// PA9999   01/06/95  MSMIT2  DEFAULT PA0QW01.PA0QW-PC3POIDT
//                            TO ZEROES (PA0Q-20001 ABEND).
// PA9999   01/12/95  MSMIT2  MAKE EUROPEAN O/AS INQUIRY ONLY.
// PA9999   07/25/95  MSMIT2  IF PRODUCT LINE INVALID FOR
//                            SCHEDULER, SKIP FBMREC FLAG RESET
// PA9999   07/26/95  MSMIT2  NOT RESETTING A/F NUMBER WHEN
//                            KEY INFORMATION CHANGED.
// PA113    12/06/95  jcarl1  add byte to oa qty for wrapfit.
//                            KEY INFORMATION CHANGED.
// PA#00    07/01/96  jcarl1  Fixed 'no' po id calculation to
//                            use system date as seed.
// PA279    07/22/96  DKESLE  made po month for order adj. the
//                            PA1BUYMO field instead of
//                            PA1SBFMO
// PA999    09/25/96  WROBIN  Make factory declined(yes_stat=84
//                            OAs read only
// PA999    09/25/96  WROBIN  Brightening Component factories
//                            need to be set askip
// PA720    01/27/97  WROBIN  Remove AF number from header if
//                            no AF items selected.
// PA999    05/14/97  WROBIN  Remove SO requirement for 'NI'
//                            type OAs - leave DN requirement
// Y2KFIX   01/09/98  CSAWKI  MODIFICATIONS MADE TO: PA0QM001,
//                            PA0QM002, PA0Q-001, PA0Q-110,
//                            PA0Q-52105, PA0Q-525, PA0Q-610,
//                            PA0QS-37-IO5090-D,
//                            PA0QS-55-HARD-ERR
// PA1526   02/23/98  WROBIN  Add 'ST' type OAs for Stock
//                            Transfers.
// PA2003   09/03/98  MSEVAL  Change PO/SO field to char for
//                            y2k.
// TS1512   10/20/98  MHUYNH  Generated due to changes XPPC030
// PA2045   04/28/99  SRAMAS  Modified pa0q-162 and generated.
// paw115   09/07/99  sramas  modified pa0q-52105 and generated
// paw660   11/01/99  GREDDY  RESTRICT MULTIPLE OA ON SAME POIT
// paw661   11/01/99  GREDDY  RESTRICT MULTIPLE OA ON SAME POIT
// paw660   11/19/99  GREDDY  VALIDATE VPACUS01 INSERTION.
// paw661   11/19/99  GREDDY  VALIDATE VPACUS01 INSERTION.
// paw04    11/19/99  GREDDY  MODIFY PA0QW04 DEFINITION.
// paw04    02/17/00  skathi  Fixed BTS problem.
// NSC      05/08/00  GREDDY  NSC CHANGES FOR REL-PLN-NBR
// NSC      07/24/00  GREDDY  NSC CHANGES FOR PO-ID PO-NBR
//                            COUPLING BREAKAGE.
// NSC      10/20/00  GREDDY  Change logic to fix cursor error
//          01/04/01  GREDDY  Close header cursor before
//                            displaying no item message in
//                            PA0Q-52601.
//          04/04/01  GREDDY  Fix BTS calc to get rcpt info
//                            from transportation instead of PO
//          07/10/01  GREDDY  Move low and high values to
//                            PC6OETS before checking item cnt
//                            in PA0Q-52601
// *********************
Program PA0Q type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FB9REC FB9REC; // record
  FBHREC FBHREC; // record
  FBKREC FBKREC; // record
  FBMREC FBMREC; // record
  FY1REC FY1REC; // record
  FY2REC FY2REC; // record
  FYBREC FYBREC; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  PA0QW00 PA0QW00; // record
  PA0QW01 PA0QW01; // record
  PA0QW02 PA0QW02; // record
  PA0QW03 PA0QW03; // record
  PA0QW04 PA0QW04; // record
  PA0QW05 PA0QW05; // record
  PA0QW06 PA0QW06; // record
  PA0QW07 PA0QW07; // record
  PA0QW08 PA0QW08; // record
  PA0QW09 PA0QW09; // record
  PA0QW10 PA0QW10; // record
  PA0QW11 PA0QW11; // record
  PA0QW12 PA0QW12; // record
  PA0QW13 PA0QW13 { redefines = PA0QW12 } ; // record
  PA1REC PA1REC; // record
  PA4REC PA4REC; // record
  PA5REC PA5REC; // record
  PA7REC PA7REC; // record
  PA8REC PA8REC; // record
  PA9REC PA9REC; // record
  PAEREC PAEREC; // record
  PAGREC PAGREC; // record
  PAIREC PAIREC; // record
  PAMREC PAMREC; // record
  PASREC PASREC; // record
  PAVREC PAVREC; // record
  PAWREC PAWREC; // record
  PC2REC PC2REC; // record
  PC3REC PC3REC; // record
  PC5REC PC5REC; // record
  PC6REC PC6REC; // record
  PC7REC PC7REC; // record
  PCMREC PCMREC; // record
  PCYREC PCYREC; // record
  PG2REC PG2REC; // record
  PG3REC PG3REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TS5REC TS5REC; // record
  TSHREC TSHREC; // record
  TSOREC TSOREC; // record
  TSTREC TSTREC; // record
  VCMPPG01 VCMPPG01; // record
  VCPLHDJ4 VCPLHDJ4; // record
  VFRZIT02 VFRZIT02; // record
  VFYPO002 VFYPO002; // record
  VOSIZE01 VOSIZE01; // record
  VPAITM02 VPAITM02; // record
  VPAWRK02 VPAWRK02; // record
  VPAWRK03 VPAWRK03; // record
  VPOITM03 VPOITM03; // record
  VPOITM04 VPOITM04; // record
  VPOITM05 VPOITM05; // record
  VPOSIZ02 VPOSIZ02; // record
  VSOPOX01 VSOPOX01; // record
  WEU0100 WEU0100; // record
  XP0CW01 XP0CW01; // record
  XP0DW01 XP0DW01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record
  YSMREC YSMREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PABTBL; // table
  use XDMTBL; // table
  use XCTTBL; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use YESTBL; // table
  use YETTBL; // table
  use YTRTBL; // table
  use PA0QM.PA0QM001,  // forms
      PA0QM.PA0QM002, 
      PA0QM.XMPAM001,
      PA0QM.XP0DM001,
      PA0QM.XP0CM001,
      PA0QM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPA001: XPPA001();
     /* -------------------------------------------------------*/
      /* INITIALIZE WORKING STORAGE AND DISPLAY STORAGE*/
     /* -------------------------------------------------------*/
    ;
    set SQLCA empty;
    set PA0QW00 empty; /* working storage*/
    set PA0QW01 empty; /* M001 header display storage*/
    set PA0QW02 empty; /* VSOPOX01 information*/
    set PA0QW03 empty; /* PO items with corsp. BTS info*/
    set PA0QW04 empty; /* Temp storage*/
    set PA0QW05 empty; /* From and to data*/
    set PA0QW06 empty; /* PAWEXTRA break out from PAWREC*/
    set PA0QW07 empty; /* Screen Format fields*/
    set PA0QW08 empty; /* Totals for MAP 2*/
    set PA0QW09 empty; /* Same as PA0QW03 but only occurs once*/
    set PA0QW10 empty; /* breaks out PAWEXTRA of PAWREC*/
    set PA0QW11 empty; /* keys for direct ship line*/
    set TAEREC empty; /* error diagnosis information*/
    set TA1REC empty; /* error diagnosis parameters*/
    set TA5REC empty; /* temp storage queue area*/
    set XX0XW01 empty; /* date/time subroutine parameters*/
    ;
    set PA0QM001 initial; /* clear map m001*/
    set PA0QM002 initial; /* clear map m002- SIZE DETAIL*/
    ;
     /* ------------------------------------------------------------*/
     /* INITIALIZE PA0QW00 FLAGS*/
     /* ------------------------------------------------------------*/
    ;
    PA0QW00.PA0QW-REQ-FOR-DATA-FLAG = "N";
    PA0QW00.PA0QW-KEY-CHANGED = "N";
    PA0QW00.PA0QW-PROCESS-BY-CUSTOMER = "N";
    PA0QW00.PA0QW-CLOSEOUT-WARNING = "N";
    PA0QW00.PA0QW-SIDE1-PRODUCT = "N";
    PA0QW00.PA0QW-END-OF-VSOPOX01 = "N";
    PA0QW00.PA0QW-END-OF-VPOITM01 = "N";
    PA0QW00.PA0QW-VSOPOX01-FOUND = "N";
    PA0QW00.PA0QW-SELECT-MODIFIED = "N";
    PA0QW00.PA0QW-CONFIRM-MSG-SHOWN = "N";
    PA0QW00.PA0QW-FACTORY-ENTERED = "N";
    PA0QW00.PA0QW-CUST-NBR-CHANGED = "N";
    PA0QW00.PA0QW-WAREHOUSE-FLAG = "N";
    PA0QW00.PA0QW-XWHCD-BLANK-PRINTED = "N";
    PA0QW00.PA0QW-TEMP-PAGE-PRINTED = "N";
    PA0QW00.PA0QW-SEL-FCTY-FOUND = "N";
    PA0QW00.PA0QW-TRADE-REST-WARNING = "N";
    PA0QW00.PA0QW-DUP-OA-WARNING = "N";
    PA0QW00.PA0QW-DISPLAY-MAP2 = "N";
    PA0QW00.PA0QW-DISPLAY-FACTORY-BOX = "N";
    PA0QW00.PA0QW-HEADER-ERROR = "N";
    PA0QW00.PA0QW-READ-ONLY = "N";
    PA0QW00.PA0QW-LAST-LINE-BLANK = "N";
    PA0QW00.PA0QW-CUST-UPDATED = "N";
    PA0QW00.PA0QW-NIL-OA = "N";
    PA0QW00.PA0QW-DB2-ERROR = "N";
    PA0QW00.PA0QW-TYPE-CHANGED = "N";
    PA0QW00.PA0QW-NDV01-FLAG = "N";
    PA0QW00.PA0QW-DATA-FOUND-FLAG = "N";
    PA0QW00.PA0QW-HARD-ERROR-WARNING = "N";
    PA0QW00.PA0QW-PO-NO-SO-FLAG = "N";
    PA0QW00.PA0QW-PROCESS-TYPE = "S";
    PA0QW00.PA0QW-SO-SELECTED-FLAG = "N";
    PA0QW00.PA0QW-MULT-SO-FLAG = "N";
    PA0QW00.PA0QW-SHOW-PRIOR-PO = "N";
    PA0QW00.PA0QW-LIVE-BUY-STAT-CHANGED = "N";
    PA0QW00.PA0QW-AIR-FREIGHT-SELECTED = "N";
    PA0QW00.PA0QW-EURD-OA-INQ-ONLY = "N";
    ;
    PA0QW00.PA0QW-NDX = 1; /* INITIALIZE INDEX INTO PA0QW11*/
    ;
     /* 01/06/95: DEFAULT PA0QW01.PA0QW-PC3POIDT TO ZEROES*/
    ;
    PA0QW01.PA0QW-PC3POIDT = 0;
    ;
    XPPA020: XPPA020();
    PA0Q-001: PA0Q-001();
    PA0Q-002: PA0Q-002();
    ;
    goto PA0Q-001;
    ;
  end // end main
end // end PA0Q

// SPECIAL INITIALIZATION
Function PA0Q-001()
   /* ------------------------------------------------------------*/
   /* This process will perform any special initialization that*/
   /* is unique to the application.*/
   /* ------------------------------------------------------------*/
  ;
  PA0QW00.XXXMODID = PAWREC.XXXMODID;
  ;
   /* PAWREC.PAWOANBR cnntains only one oa number*/
  ;
  if (PAWREC.PAWOANBR > 0) /* If OA number passed in commarea*/
    if (PAWREC.XXXMSGNO == 0)
      PA0QW00.PA1OANBR = PAWREC.PAWOANBR;
      PA0QW00.PA0QW-REQ-FOR-DATA-FLAG = "Y";
      PA0QW00.PA0QW-KEY-CHANGED = "Y";
        /* IF TRANSFERRED TO PA0U WITH A FUTURE SALES ORDER THRU DATE*/
        /* AND THEN TRANSFERRED BACK TO PA0Q, KEEP THIS DATE.*/
      if (COMMAREA.CAFROMAP == "PA0U")
        ;
        set PA0QW06 empty;
        set PA0QW01 empty;
        PA0QW06.PAWEXTRA = PAWREC.PAWEXTRA;
        PA0QW01.PA0QW-PA0QW01-GROUP = PA0QW06.PA0QW-PA0QW01-GROUP;
        ;
        if (PA0QW06.PA0QW-OP-CUST-NEED1-DT != 0
         && PA0QW01.YETCD != "OR"
         && PA0QW01.YETCD != "NO")
          PA0QW00.PA0QW-SAVE-NEED1-DT = PA0QW06.PA0QW-OP-CUST-NEED1-DT;
          PA0QW00.PA0QW-MULT-SO-FLAG = "Y";
        end
        if (PA0QW06.PA0QW-OP-CUST-NEED2-DT != 0
         && PA0QW01.YETCD != "OR"
         && PA0QW01.YETCD != "NO")
          PA0QW00.PA0QW-SAVE-NEED2-DT = PA0QW06.PA0QW-OP-CUST-NEED2-DT;
          PA0QW00.PA0QW-MULT-SO-FLAG = "Y";
        end
        ;
      end
      ;
    else
      if (PAWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(PAWREC.XXXMSGNO);
      end
      ;
      if (PAWREC.XXXMSGNO == 242) /* PF18 HAS BEEN PRESSED*/
        ;
        PA0QW00.PA0QW-DISPLAY-OA = PAWREC.PAWOANBR;
        ;
        set PA0QW01 empty;
        set PA0QW10 empty;
        ;
        PA0QW10.PAWEXTRA = PAWREC.PAWEXTRA;
        ;
        PA0QW01.YETCD = PA0QW10.YETCD;
        PA0QW01.YSMXDV = PA0QW10.YSMXDV;
        PA0QW01.PC4ORTYP = PA0QW10.PC4ORTYP;
  /*  */
  /* *************************** Y2K OUT BEGIN ****************************/
  /*  */
  /* MOVE '19' TO PA0QW01.PA0QW-PO-ID-CC;*/
  /*  */
  /* *************************** Y2K OUT END ******************************/
  /*  */
  /*  */
  /* *************************** Y2K IN BEGIN *****************************/
  /*  */
        if (PA0QW10.PA0QW-PO-ID-YY > "60")
          PA0QW01.PA0QW-PO-ID-CC = "19";
        else
          PA0QW01.PA0QW-PO-ID-CC = "20";
        end
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */
        PA0QW01.PA0QW-PO-ID-YY = PA0QW10.PA0QW-PO-ID-YY;
        PA0QW01.PA0QW-PO-ID-MM = PA0QW10.PA0QW-PO-ID-MM;
        PA0QW01.PA0QW-PO-ID-BUY-MM = PA0QW10.PA0QW-PO-ID-BUY-MM;
        PA0QW01.PA0QW-PO-ID-FCTY = PA0QW10.PA0QW-PO-ID-FCTY;
   /* MOVE PA0QW10.PA0QW-ALT-PO-ID-YY TO PA0QW01.PA0QW-ALT-PO-ID-YY;*/
   /* MOVE PA0QW10.PA0QW-ALT-PO-ID-MM TO PA0QW01.PA0QW-ALT-PO-ID-MM;*/
   /* MOVE PA0QW10.PA0QW-ALT-PO-ID-BUY-MM TO*/
   /* PA0QW01.PA0QW-ALT-PO-ID-BUY-MM;*/
   /* MOVE PA0QW10.PA0QW-ALT-PO-ID-FCTY TO*/
   /* PA0QW01.PA0QW-ALT-PO-ID-FCTY;*/
        PA0QW01.SY1STNBR = PA0QW10.SY1STNBR;
        PA0QW01.SY2CLRID = PA0QW10.SY2CLRID;
        PA0QW01.XDMCD = PA0QW10.XDMCD;
        PA0QW01.PC2CUXID = PA0QW10.PC2CUXID;
        PA0QW01.KUCCOID = PA0QW10.KUCCOID;
        PA0QW01.KUMSTRID = PA0QW10.KUMSTRID;
        PA0QW01.XNXCD = PA0QW10.XNXCD;
        PA0QW01.PA0QW-SHOW-ALL-SO = PA0QW10.PA0QW-SHOW-ALL-SO;
        PA0QW01.PG1SC4CD = PA0QW10.PG1SC4CD;
        ;
      end
      ;
    end
  else
    ;
    set PA0QW06 empty;
    PA0QW06.PAWEXTRA = PAWREC.PAWEXTRA;
    ;
    if (COMMAREA.CAFROMAP == "PA0U")
      ;
      set PA0QW01 empty;
      ;
      PA0QW01.PA0QW-PA0QW01-GROUP = PA0QW06.PA0QW-PA0QW01-GROUP;
      PA0QW00.PA0QW-KEY-CHANGED = "Y";
      ;
      if (PA0QW01.PA0QW-OP-CUST-NEED2-DT != 0
       && PA0QW01.YETCD != "OR"
       && PA0QW01.YETCD != "NO") /**/
        PA0QW00.PA0QW-MULT-SO-FLAG = "Y";
      end
      ;
    end
    ;
  end
  ;
  PAWREC.PAWOANBR = 0;
  PAWREC.PAWEXTRA = " ";
  ;
  PA0QW00.PAWBUYDT = PAWREC.PAWBUYDT; /* Current buy date*/
  ;
  XX0XS01(); /* Obtain current date*/
  ;
end // end PA0Q-001

// PROCESS SO/PO SELECTION
Function PA0Q-002()
   /* ------------------------------------------------------------*/
  ;
   /* 1) obtain data*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  PA0Q-100(); /* Obtain the data to display*/
  ;
  PA0Q-200(); /* Format and display the map*/
  ;
  PA0Q-300(); /* Check attention identifier*/
  ;
  PA0Q-400(); /* Reset fields to normal intensity*/
  ;
  PA0Q-500(); /* Verify the entered data*/
  ;
  PA0Q-600(); /* Process valid input request*/
  ;
  ;
end // end PA0Q-002

// OBTAIN THE DATA TO DISPLAY
Function PA0Q-100()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set(s) to be formatted*/
   /* Fetch and format the data in the working storage*/
   /* At end of rows, close the selected set cursor.*/
   /* If no data found, display error message and return to*/
   /* previous process.*/
   /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/
  ;
   /* IF A DB2 ERROR HAS OCCURRED, EXIT AND DISPLAY THE MAP*/
  ;
  if (PA0QW00.PA0QW-DB2-ERROR == "Y"
   && converseVar.validationMsgNum != 0
   && converseVar.validationMsgNum != 205) /* WARNING: THIS PRODUCT IS CLOSED OUT*/
    return;
  else
    PA0QW00.PA0QW-DB2-ERROR = "N";
  end
  ;
   /* IF SIZE DETAIL MAP REQUESTED, SKIP THIS PROCESSING*/
  ;
  if (PA0QW00.PA0QW-DISPLAY-MAP2 == "Y")
    return;
  end
  ;
  if (PA0QW00.PA0QW-REQ-FOR-DATA-FLAG == "Y" /* DATA REQUESTED*/
   && converseVar.validationMsgNum == 0)     /* AND NO ERRORS*/
    PA0Q-110();
  end
  ;
   /* IF PF9 OR PF18 IS HIT BEFORE ENTER, THE PROGRAM CHECKS FOR HARD*/
   /* ERRORS.  IN THIS CASE, WE DON'T HAVE TO RECHECK FOR HARD ERRORS*/
   /* HERE.*/
  ;
  if (converseVar.validationMsgNum != 271 /* WARNING: FACTORY CONTAINS HARD ERROR*/
   && PA0QW01.YETCD != "ST")             
    PA0QS-55-HARD-ERR();
  end
  ;
  if (COMMAREA.CAFROMAP == "PA0U")
    COMMAREA.CAFROMAP = " ";
  else
    ;
      /* PA0Q-120 CLEARS OUT TEMP STORAGE AND GETS FRESH DATA.  THIS*/
      /* IS A PROBLEM IF THE USER HAS SELECTED AN ITEM ON THE SCREEN.*/
      /* IN THIS CASE, WE WANT TO EXIT WITHOUT OBTAINING THE NEW DATA.*/
    ;
    if (converseVar.validationMsgNum == 271) /* WARNING: FACTORY CONTAINS HARD ERROR*/
      if (PA0QM001.PA1OANBR == 0) /* NEW O/A*/
        if (PA0QW00.PA0QW-KEY-CHANGED != "Y")
          return;
        end
      else
        if (PA0QW00.PA0QW-KEY-CHANGED != "Y")
          return;
        end
      end
    else
      if (converseVar.validationMsgNum != 249 /* NEGATIVE O/A QTY REQUIRED FOR 'ND'*/
       && converseVar.validationMsgNum != 250 /* O/A QUANTITY MUST BE NEGATIVE*/
       && converseVar.validationMsgNum != 242 /* PF18 PRESSED - UPDATE SUCCESSFUL*/
       && converseVar.validationMsgNum != 223 /* CANT SELECT ITEMS AND CHANGE HEADER*/
       && converseVar.validationMsgNum != 205 /* WARNING: THIS PRODUCT IS CLOSED OUT*/
       && converseVar.validationMsgNum != 340) /* EUROPEAN O/A ALLOWS INQUIRY ONLY*/
        if (PA0QW00.PA0QW-KEY-CHANGED != "Y"
         || converseVar.validationMsgNum != 0)
          return;
        end
      end
    end
  end
  ;
  PA0Q-120(); /* FIND SO/PO INFORMATION TO DISPLAY*/
  ;
   /* PABAFYQT INDICATES IF THE FACTORY QUANTITY CAN BE ENTERED*/
   /* PABVYBTS INDICATES IF THE BTS MUST BE VERIFIED FOR A*/
            /* REDUCTION IN FACTORY QUANTITY*/
  ;
  if (PA0QW01.YETCD in PABTBL.YETCD
   && PABTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    PA0QW00.PABAFYQT = PABTBL.PABAFYQT[sysVar.arrayIndex];
    PA0QW00.PABVYBTS = PABTBL.PABVYBTS[sysVar.arrayIndex];
  else
    PA0QW00.PABAFYQT = "N";
    PA0QW00.PABVYBTS = "N";
  end
  ;
   /* ------------------ End of Process PA0Q-100 -----------------*/
  ;
end // end PA0Q-100

// OBTAIN HEADER INFORMATION
Function PA0Q-110()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set(s) to be formatted*/
   /* Fetch and format the data in the working storage*/
   /* At end of rows, close the selected set cursor.*/
   /* If no data found, display error message and return to*/
   /* previous process.*/
   /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/
  ;
  set PC6REC empty; /* Clear PO item record*/
  set PC7REC empty; /* Clear PO size record*/
  set PCMREC empty; /* Clear PO receipt record*/
  set PA1REC empty; /* Clear header record*/
  set PA4REC empty; /* Clear factory record*/
  set PA9REC empty; /* Clear OA comment table*/
  set VPAWRK02 empty; /* Clear OA work item table*/
  set PAIREC empty; /* Clear frozen item table*/
  set PASREC empty; /* Clear frozen size table*/
  set PA0QW01 empty; /* clear 1- MAP*/
  set PA0QW02 empty; /* clear 2- VSOPOX01*/
  set PA0QW03 empty; /* clear 3- ITEM BREAK*/
  set PA0QW04 empty; /* clear 4- QTY FIELDS*/
  set PA0QW05 empty; /* clear 5- IOMOD 6020 REC*/
  set PA0QW06 empty; /* clear 6- PASS DATA TO PA0U*/
  set PA0QW07 empty; /* clear 7- SCREEN FORMAT FIELDS*/
  set PA0QW11 empty; /* clear11- STORE PO ITEM KEYS*/
  set VSOPOX01 empty; /* CLEAR SO/PO CROSS REF. TABLE*/
  ;
   /* PA0344: SAVE THE THRU FUTURE CUSTOMER NEED DATE THAT WAS*/
   /* PASSED TO PA0U.  SHOW THIS DATE ON THE SCREEN.*/
  ;
  if (PA0QW00.PA0QW-SAVE-NEED1-DT != 0)
    PA0QW01.PA0QW-OP-CUST-NEED1-DT = PA0QW00.PA0QW-SAVE-NEED1-DT;
  end
  ;
  if (PA0QW00.PA0QW-SAVE-NEED2-DT != 0)
    PA0QW01.PA0QW-OP-CUST-NEED2-DT = PA0QW00.PA0QW-SAVE-NEED2-DT;
  end
  ;
  move 0 to PA0QW11.PA0QW-PO-ITEM-KEY[1] for all;
  ;
   /* ------------------------------------------------------------*/
   /* INITIALIZE FLAGS IN PA0QW01.*/
   /* ------------------------------------------------------------*/
  ;
  PA0QW01.PA0QW-SHOW-ALL-SO = PA0QM001.PA0QM-SHOW-ALL-SO;
  ;
  if (PA0QW01.PA0QW-SHOW-ALL-SO == " ")
    PA0QW01.PA0QW-SHOW-ALL-SO = "N";
  end
  ;
  PA0QW01.PA0QW-UPDATE-HEADER = "N";
  PA0QW01.PA0QW-UPDATE-COMMENT = "N";
  ;
   /* ------------------------------------------------------------*/
   /* PROTECT FACTORY ENTRY BOX.*/
   /* ------------------------------------------------------------*/
  ;
  PA0QW00.XX3 = 1;
  while (PA0QW00.XX3 <= 4)
     /* SET PA0QM001.PC3POIDT(XX3) PROTECT;*/
    set PA0QM001.FY1FCTYC[XX3] protect;
    set PA0QM001.PA4FCTQT[XX3] protect;
    PA0QW01.PA0QW-FACTORY-SELECTED[XX3] = "N";
    PA0QW00.XX3 = PA0QW00.XX3 + 1;
  end
  ;
  PA1REC.PA1OANBR = PA0QW00.PA1OANBR;
  ;
  PA0QS-01-IO4830-S();
  ;
  if (SQLCA.VAGen_SQLCODE == 100) /* OA not found*/
    set PA0QM001.PA1OANBR cursor, bold;
    converseLib.validationFailed(50); /* THIS O/A NUMBER DOES NOT EXIST*/
    PAWREC.XXXMODID = "100";
    ;
    set PA0QW01 empty;
    PA0QW00.PA0QW-REQ-FOR-DATA-FLAG = "N";
    PA0QW00.PA0QW-KEY-CHANGED = "N";
    PA0QW00.PA0QW-DISPLAY-FACTORY-BOX = "N";
    ;
      /* PURGE TEMP STORAGE*/
    ;
    PA0QS-30-TA0050-P();
    ;
    PA0QW01.PA0QW-UPDATE-HEADER = "N";
    PA0QW01.PA0QW-UPDATE-COMMENT = "N";
    ;
    PA0QW00.XX3 = 1;
    while (PA0QW00.XX3 <= 4)
      PA0QW01.PA0QW-FACTORY-SELECTED[XX3] = "N";
      PA0QW00.XX3 = PA0QW00.XX3 + 1;
    end
    ;
    return;
    ;
  end
  ;
   /* CHECK TO SEE IF PROCESSING AN EUROPEAN ORDER ADJUSTMENT.  IF SO,*/
   /* ALLOW INQUIRY ONLY.*/
  ;
  if (PA1REC.PA1OANBR > 199999
   && PA1REC.PA1OANBR < 300000) /* EUROPEAN O/A NUMBER RANGE*/
    PA0QW00.PA0QW-EURD-OA-INQ-ONLY = "Y";
  else
    PA0QW00.PA0QW-EURD-OA-INQ-ONLY = "N";
  end
  ;
   /* Load OA header information into working storage*/
  ;
  PA0QW01.PA1OATXT = PA1REC.PA1OATXT;
  PA0QW01.YESCD = PA1REC.YESCD;
  PA0QW01.PA1HLDFL = PA1REC.PA1HLDFL;
  PA0QW01.YETCD = PA1REC.YETCD;
  PA0QW01.PC4ORTYP = PA1REC.PC4ORTYP;
  ;
  if (PA1REC.YETCD == "DN" /* DOMESTIC TO NIL DIVERSION*/
   || PA1REC.YETCD == "NI") /* NIL TO DOMESTIC DIVERSION*/
    ;
    PA0QW01.YSMXDV = "*"; /* DEFAULT THE DIVISION CODE SO THAT*/
                                /* BOTH NIL AND DOMESTIC INFO DISPLAYED*/
  else
    PA0QW01.YSMXDV = PA1REC.YSMXDV;
  end
  ;
   /* ------------------------------------------------------------*/
   /* PA0330 - FOR OVERRUN O/AS, OVERRIDE THE PO ID MONTH RANGE*/
   /* WITH FY0605.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA1REC.YETCD == "OR"
   || PA1REC.YETCD == "NO")
    ;
    if (PA1REC.YETCD == "NO")
      PA0QW00.PA0QW-SETUP-DATE = XX0XW01.XX0XWDAT;
    else
      PA0QW00.PA0QW-SETUP-DATE = PA1REC.PA1BUYMO * 100;
    end
    PA0QS-63-ORNO();
    ;
    if (PA1REC.PA1BUYMO != PA0QW00.PA0QW-PA1BUYMO)
      PA0QW01.PA0QW-UPDATE-HEADER = "Y";
    end
    ;
  else
    ;
     /* ------------------------------------------------------------*/
      /* DETERMINE WHAT THE MAP PO ID RANGE IS BASED ON THE O/A HEADER*/
      /* BUY MONTH.  IF THE BUY MONTH IS 199201, THE BUY MONTH RANGE*/
      /* IS 19911101.*/
     /* ------------------------------------------------------------*/
    ;
    PA0QW00.PA0QW-PA1BUYMO = PA1REC.PA1BUYMO;
    PA0QW01.PA0QW-PO-ID-BUY-MM = PA0QW00.PA0QW-PA1BUYMO-MM;
    ;
    ;
    PA0QW00.PA0QW-CALC-MM = PA0QW00.PA0QW-PA1BUYMO-MM - 2;
    ;
    if (PA0QW00.PA0QW-CALC-MM <= 0)
      if (PA0QW00.PA0QW-PA1BUYMO-YY == 0)
        PA0QW00.PA0QW-CALC-YY = 99;
      else
        PA0QW00.PA0QW-CALC-YY = PA0QW00.PA0QW-PA1BUYMO-YY - 1;
      end
      PA0QW01.PA0QW-PO-ID-YY = PA0QW00.PA0QW-CALC-YY;
      PA0QW00.PA0QW-CALC-MM = PA0QW00.PA0QW-CALC-MM + 12;
    else
      PA0QW01.PA0QW-PO-ID-YY = PA0QW00.PA0QW-PA1BUYMO-YY;
    end
    ;
    PA0QW01.PA0QW-PO-ID-MM = PA0QW00.PA0QW-CALC-MM;
     /*  */
    if (PA0QW01.PA0QW-PO-ID-YY > "60")
      PA0QW01.PA0QW-PO-ID-CC = "19";
    else
      PA0QW01.PA0QW-PO-ID-CC = "20";
    end
     /*  */
    PA0QW01.PA0QW-ORIG-PO-ID-CCYYMMMM = PA0QW01.PA0QW-PC3POIDT;
    ;
  end
  ;
   /* -------------------------------------------------------------------*/
   /* LOAD THE FROM DEFAULT SALES ORDER CUSTOMER NEED DATE YYMM*/
   /*  */
   /* FOR NIL ORDERS, THE VALID NEED DATE YEAR AND MONTH IS EQUAL TO THE*/
   /* BUY DATE YEAR AND MONTH.*/
   /*  */
   /* FOR DOMESTIC ORDERS, THE NEED DATE YEAR AND MONTH IS EQUAL TO THE*/
   /* BUY DATE YEAR AND MONTH + 1.  IF THE BUY MONTH IS 01 OR 02, THEN 1*/
   /* MUST BE ADDED TO THE YEAR.  FOR EXAMPLE, IF THE PO ID IS 931101,*/
   /* THE CUSTOMER NEED DATE YEAR AND MONTH IS 9402.*/
   /*  */
   /* 12/19/94: PROCESS EUROPEAN O/AS LIKE DOMESTIC.*/
   /*  */
   /* -------------------------------------------------------------------*/
  ;
  PA0QW01.PA0QW-OP-CUST-NEED1-DD = 01; /* ALWAYS FIRST OF THE MONTH*/
  PA0QW01.PA0QW-OP-NEED1-CCYYMM = PA1REC.PA1BUYMO;
  ;
  if ((PA1REC.YSMXDV == "10" /* DOMESTIC ONLY*/
   && PA1REC.YETCD != "DN")  /* DOMESTIC TO NIL DIVERSION*/
   || PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    ;
    if (PA0QW01.PA0QW-OP-CUST-NEED1-MM == 12)
      PA0QW01.PA0QW-OP-CUST-NEED1-MM = 01;
      if (PA0QW01.PA0QW-OP-CUST-NEED1-YY == 99)
        PA0QW01.PA0QW-OP-CUST-NEED1-YY = 00;
        PA0QW01.PA0QW-OP-CUST-NEED1-CC = PA0QW01.PA0QW-OP-CUST-NEED1-CC + 1;
      else
        PA0QW01.PA0QW-OP-CUST-NEED1-YY = PA0QW00.PA0QW-PA1BUYMO-YY + 1;
      end
    else
      PA0QW01.PA0QW-OP-CUST-NEED1-MM = PA0QW01.PA0QW-OP-CUST-NEED1-MM + 1;
    end
    ;
  end
  ;
   /* DEFAULT THE TO SO NEED DATE*/
  if (PA1REC.YETCD == "DN") /* DOMESTIC TO NIL DIVERSION*/
    ;
    PA0QW01.PA0QW-OP-CUST-NEED2-DT = PA0QW01.PA0QW-OP-CUST-NEED1-DT;
    ;
    if (PA0QW01.PA0QW-OP-CUST-NEED2-MM == 12)
      PA0QW01.PA0QW-OP-CUST-NEED2-MM = 01;
      if (PA0QW01.PA0QW-OP-CUST-NEED2-YY == 99)
        PA0QW01.PA0QW-OP-CUST-NEED2-YY = 00;
        PA0QW01.PA0QW-OP-CUST-NEED2-CC = PA0QW01.PA0QW-OP-CUST-NEED2-CC + 1;
      else
        PA0QW01.PA0QW-OP-CUST-NEED2-YY = PA0QW00.PA0QW-PA1BUYMO-YY + 1;
      end
    else
      PA0QW01.PA0QW-OP-CUST-NEED2-MM = PA0QW01.PA0QW-OP-CUST-NEED2-MM + 1;
    end
    ;
  end
  ;
   /* AIR FREIGHT NUMBER*/
  ;
  PA0QW01.PA-AFRGT-RQT-ID = PA1REC.PA-AFRGT-RQT-ID;
  ;
   /* STYLE, COLOR, AND DIMENSION*/
  ;
  PA0QW01.SY1STNBR = PA1REC.SY1STNBR;
  PA0QW01.SY2CLRID = PA1REC.SY2CLRID;
  PA0QW01.XDMCD = PA1REC.XDMCD;
  PA0QW01.PA1RQQTY = PA1REC.PA1RQQTY;
  ;
  ;
  PA0QW01.YESCD = PA1REC.YESCD;
  ;
  if (PA1REC.YESCD in YESTBL.YESCD)
    PA0QW01.YESSDESC = YESTBL.YESSDESC[sysVar.arrayIndex];
  else
    PA0QW01.YESSDESC = " ";
  end
  ;
   /* FIND STYLE DESCRIPTION*/
  ;
  set PG2REC empty;
  PG2REC.XGPCD = "02";
  PG2REC.SY1STNBR = PA1REC.SY1STNBR;
  PG2REC.SY2CLRID = PA1REC.SY2CLRID;
  PG2REC.XDMCD = PA1REC.XDMCD;
  ;
  PA0QS-07-IO3120-S();
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    PA0QW01.SY1STYNM = PG2REC.SY1STYNM;
    if (PA1REC.PC4ORTYP == " ")
      if (PA1REC.YETCD == "OR"
       || PA1REC.YETCD == "NO") /* NIL OVERRUN*/
        PA0QW01.PC4ORTYP = "OR";
      else
        if (PA1REC.YETCD == "ST")
          PA0QW01.PC4ORTYP = "ST";
        else
          PA0QW01.PC4ORTYP = "FT";
        end
      end
    end
  end
  ;
   /* Load OA factory information*/
  ;
  PA4REC.PA1OANBR = PA0QW00.PA1OANBR;
  PA4REC.YESCD = "*";
  ;
  PA0QS-02-IO4810-S1();
  ;
   /* Load factory information*/
  ;
  PA0QS-03-IO4810-N1();
  ;
  PA0QW00.XX3 = 1;
  ;
  while (SQLCA.VAGen_SQLCODE == 0
   && PA0QW00.XX3 <= 4)
    ;
    if (PA1REC.YESCD == "01")
      PA0QW00.FY1FCTYC[XX3] = PA4REC.FY1FCTYC;
      PA0QW00.YESCD[XX3] = PA4REC.YESCD;
      ;
      if (PA4REC.YESCD == "84") /* FACTORY DENIED*/
        PA0QW00.PA0QW-RESELECTED[XX3] = "X";
        PA0QW01.PC3POIDT[XX3] = 0;
        PA0QW01.FY1FCTYC[XX3] = " ";
        PA0QW01.PA4FCTQT[XX3] = 0;
        PA0QW01.PC3PONBR[XX3] = 0;
        PA0QW01.PA0QW-FACTORY-SELECTED[XX3] = " ";
        PA0QW01.PA0QW-FACTORY-YESCD[XX3] = " ";
        PA0QW01.PA0QW-HARD-ERROR[XX3] = " ";
      else
        if (PA4REC.YESCD == "96" /* IN-PROCESS CANCEL*/
         || PA4REC.YESCD == "18") /* FACTORY RETRACTION PRINTED*/
          PA0QW00.PA0QW-RESELECTED[XX3] = "X";
          PA0QW01.FY1FCTYC[XX3] = PA4REC.FY1FCTYC;
          PA0QW01.PA4FCTQT[XX3] = PA4REC.PA4FCTQT;
          PA0QW01.PA0QW-FACTORY-YESCD[XX3] = PA4REC.YESCD;
        else
          PA0QW00.PA0QW-RESELECTED[XX3] = "N";
          PA0QW01.FY1FCTYC[XX3] = PA4REC.FY1FCTYC;
          PA0QW01.PA4FCTQT[XX3] = PA4REC.PA4FCTQT;
          PA0QW01.PA0QW-FACTORY-YESCD[XX3] = PA4REC.YESCD;
        end
      end
    else
      PA0QW01.FY1FCTYC[XX3] = PA4REC.FY1FCTYC;
      PA0QW01.PA4FCTQT[XX3] = PA4REC.PA4FCTQT;
      PA0QW01.PA0QW-FACTORY-YESCD[XX3] = PA4REC.YESCD;
    end
    ;
    PA0QS-03-IO4810-N1();
    ;
    PA0QW00.XX3 = PA0QW00.XX3 + 1;
    ;
  end
  ;
   /* Close factory information*/
  ;
  PA0QS-04-IO4810-C1();
  ;
  ;
   /* ------------------ End of Process PA0Q-110 -----------------*/
  ;
end // end PA0Q-110

// OBTAIN SO/PO INFO TO DISPLAY
Function PA0Q-120()
   /* ------------------------------------------------------------*/
   /* SET UP READ OF THE VSOPOX01 TABLE.*/
   /* ------------------------------------------------------------*/
  ;
  PA0QS-30-TA0050-P();
  ;
  set VSOPOX01 empty;
  set PA0QW05 empty; /* CLEAR OUT IO6020 PASS RECORD*/
  ;
  if (PA0QW01.SY1STNBR > " ")
    VSOPOX01.SY1STNBR = PA0QW01.SY1STNBR;
    VSOPOX01.SY2CLRID = PA0QW01.SY2CLRID;
    VSOPOX01.XDMCD = PA0QW01.XDMCD;
    if (PA0QW01.PC2CUXID > " ")
      VSOPOX01.PC2CUXID = PA0QW01.PC2CUXID;
    else
      VSOPOX01.PC2CUXID = "*";
    end
    PA0QW00.PA0QW-PROCESS-TYPE = "S"; /* PROCESS BY STYLE*/
  else
    if (PA0QW01.PC2CUXID > " ")
      VSOPOX01.PC2CUXID = PA0QW01.PC2CUXID;
      PA0QW00.PA0QW-PROCESS-TYPE = "C"; /* PROCESS BY CUSTOMER*/
    else
      set PA0QM001.SY1STNBR cursor, bold;
      set PA0QM001.SY2CLRID bold;
      set PA0QM001.XDMCD bold;
      set PA0QM001.PC2CUXID bold;
      set PA0QM001.KUCCOID bold;
      set PA0QM001.KUMSTRID bold;
      set PA0QM001.XNXCD bold;
      PAWREC.XXXMODID = "120";
      converseLib.validationFailed(106); /* CUSTOMER XREF/NUMBER OR STYLE*/
                                     /* REQUIRED*/
      return;
    end
  end
  ;
   /* DETEREMINE THE BEGINNING SO CUSTOMER NEED DATE BASED ON THE PO ID*/
   /* FOR NEW O/AS.*/
  ;
  if (PA0QM001.PA1OANBR == 0 /* NEW O/A*/
   && PA0QW00.PA1OANBR == 0)
    PA0Q-12001();
  end
  ;
  VSOPOX01.YSMXDV = PA0QW01.YSMXDV;
   /* MOVE PA0QW01.PC4ORTYP TO VSOPOX01.PC4ORTYP;*/
  PA0QW05.PA0QW-IO-DATE1 = PA0QW01.PA0QW-PC3POIDT;
   /* MOVE PA0QW01.PA0QW-ALT-PO-ID-CCYYMMMM TO PA0QW05.PA0QW-IO-DATE2;*/
  ;
  PA0QW00.PA0QW-END-OF-VSOPOX01 = "N";
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "S") /* IF PROCESSING BY STYLE*/
    ;
    if (PA0QW00.PA0QW-MULT-SO-FLAG == "N") /* DON'T INCLUDE FUTURE SOs*/
      PA0QW05.PA0QW-IO-FUNCTION = "S1";
      PA0QS-12-IO6020-S(); /* SELECT VSOPOX01 BY STYLE*/
      ;
      PA0QW05.PA0QW-IO-FUNCTION = "N1";
      PA0QS-13-IO6020-N(); /* FETCH NEXT VSOPOX01 BY STYLE*/
      ;
    else /* INCLUDE FUTURE SOs BASED ON MAP DATA*/
      ;
      PA0QW05.PA0QW-IO-DATE1 = PA0QW01.PA0QW-OP-CUST-NEED1-DT;
      PA0QW05.PA0QW-IO-DATE2 = PA0QW01.PA0QW-OP-CUST-NEED2-DT;
      ;
      PA0QW05.PA0QW-IO-FUNCTION = "S4";
      PA0QS-12-IO6020-S(); /* SELECT VSOPOX01 BY STYLE*/
      ;
      PA0QW05.PA0QW-IO-FUNCTION = "N4";
      PA0QS-13-IO6020-N(); /* FETCH NEXT VSOPOX01 BY STYLE*/
      ;
    end
  else
    ;
    if (PA0QW00.PA0QW-MULT-SO-FLAG == "N") /* DON'T INCLUDE FUTURE SOs*/
      PA0QW05.PA0QW-IO-FUNCTION = "S2";
      PA0QS-12-IO6020-S(); /* PROCESS BY CUSTOMER*/
      ;
      PA0QW05.PA0QW-IO-FUNCTION = "N2";
      PA0QS-13-IO6020-N(); /* FETCH NEXT VSOPOX01 BY CUSTOMER*/
      ;
    else /* INCLUDE FUTURE SOs BASED ON MAP DATA*/
      ;
      PA0QW05.PA0QW-IO-DATE1 = PA0QW01.PA0QW-OP-CUST-NEED1-DT;
      PA0QW05.PA0QW-IO-DATE2 = PA0QW01.PA0QW-OP-CUST-NEED2-DT;
      ;
      PA0QW05.PA0QW-IO-FUNCTION = "S5";
      PA0QS-12-IO6020-S(); /* SELECT VSOPOX01 BY STYLE*/
      ;
      PA0QW05.PA0QW-IO-FUNCTION = "N5";
      PA0QS-13-IO6020-N(); /* FETCH NEXT VSOPOX01 BY STYLE*/
      ;
    end
    ;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    PA0QW00.PA0QW-VSOPOX01-FOUND = "Y";
  else
    PA0QW00.PA0QW-VSOPOX01-FOUND = "N";
  end
  ;
   /* INDEX XX4 IS USED TO KEEP TRACK OF THE WORKING STORAGE VSOPOX01*/
   /* RECORDS ALONG WITH THE CORRECT QUANTITIES.*/
  ;
  PA0QW00.XX4 = 1;
  PA0QW00.PA0QW-PREV-PC3PONBR = 0;
  PA0QW00.PA0QW-PREV-CUSTOMER = " ";
  PA0QW00.PA0QW-WAREHOUSE-FLAG = "N";
  ;
  if (PA0QW00.PA0QW-VSOPOX01-FOUND == "N")
    if (PA0QW00.PA0QW-PROCESS-TYPE == "C")
      if (converseVar.validationMsgNum == 0   
       || converseVar.validationMsgNum == 242 /* PF18 PRESSED - UPDATE SUCCESSFUL*/
       || converseVar.validationMsgNum == 223 /* CANT SELECT ITEMS AND CHANGE HEADER*/
       || converseVar.validationMsgNum == 72) /* HEADER STATUS ALLOWS READ ONLY*/
        PAWREC.XXXMODID = "120";
        converseLib.validationFailed(15); /* NO DATA FOUND TO DISPLAY*/
        return;
      end
    else
      PA0QW00.PA0QW-PREV-PC3POIDT = 0;
      PA0QW00.PA0QW-PREV-SY1STNBR = PA0QW01.SY1STNBR;
      PA0QW00.PA0QW-PREV-SY2CLRID = PA0QW01.SY2CLRID;
      PA0QW00.PA0QW-PREV-XDMCD = PA0QW01.XDMCD;
      PA0QW00.PA0QW-PREV-XDSCD = " ";
      ;
         /* SET THE WAREHOUSE BLANK LINE PRINTED = 'Y' BECAUSE THERE ARE*/
         /* ONLY WAREHOUSE RECORDS TO PRINT.  NO BLANK LINE IS NEEDED.*/
      ;
      PA0QW00.PA0QW-XWHCD-BLANK-PRINTED = "Y";
      ;
      PA0Q-121(); /* FIND WAREHOUSE RECORDS*/
      ;
      if (PA0QW00.PA0QW-DATA-FOUND-FLAG == "N")
        if (converseVar.validationMsgNum == 0   
         || converseVar.validationMsgNum == 242 /* PF18 PRESSED - UPDATE SUCCESSFUL*/
         || converseVar.validationMsgNum == 223 /* CANT SELECT ITEMS AND CHANGE HEADER*/
         || converseVar.validationMsgNum == 72) /* HEADER STATUS ALLOWS READ ONLY*/
          PAWREC.XXXMODID = "120";
          converseLib.validationFailed(15); /* NO DATA FOUND TO DISPLAY*/
        end
      end
      ;
      return;
      ;
    end
  end
  ;
   /* CALL SUBROUTINE TA0230 TO FIND WHICH ENVIRONMENT THE*/
   /* PROGRAM IS RUNNING IN (PRODUCTION OR DEVELOPMENT).*/
  ;
  set TA3REC empty;
  TA3REC.TA3OPTN = "ASSIGN";
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && TA3REC.TA3RTNCD == 0)          /* GOOD RETURN CODE*/
   /* NEXT SENTENCE*/
  else
    converseLib.validationFailed(10); /* ERROR ENCOUNTERED*/
    exit stack;
  end
  ;
  PA0QW00.PA0QW-PREV-OP1PARTN = VSOPOX01.OP1PARTN;
  PA0QW00.PA0QW-PREV-OP1CUOID = VSOPOX01.OP1CUOID;
  PA0QW00.PA0QW-PREV-OP1NORID = VSOPOX01.OP1NORID;
  PA0QW00.PA0QW-PREV-PC3POIDT = VSOPOX01.PC3POIDT;
  PA0QW00.PA0QW-PREV-PC2CUXID = VSOPOX01.PC2CUXID;
   /* KEEP STYLE IN PREVIOUS FIELDS SO THAT THE READ OF THE PO ITEMS*/
   /* USES THE STYLE CODES.*/
  PA0QW00.PA0QW-PREV-SY1STNBR = VSOPOX01.SY1STNBR;
  PA0QW00.PA0QW-PREV-SY2CLRID = VSOPOX01.SY2CLRID;
  PA0QW00.PA0QW-PREV-XDMCD = VSOPOX01.XDMCD;
  PA0QW00.PA0QW-PREV-XDSCD = VSOPOX01.XDSCD;
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "S") /* IF PROCESSING BY CUSTOMER*/
    PA0QW00.PA0QW-PREV-XWHCD = VSOPOX01.XWHCD;
  end
  ;
   /* MOVE SO INFORMATION INTO WORKING STORAGE*/
  ;
  set PA0QW02 empty;
  PA0QW02.PA0QW-RECORD-TYPE = "SO";
  PA0QW02.OP1PARTN = VSOPOX01.OP1PARTN;
  PA0QW02.OP1CUOID = VSOPOX01.OP1CUOID;
  PA0QW02.OP1NORID = VSOPOX01.OP1NORID;
  PA0QW02.OP2LNINB = VSOPOX01.OP2LNINB;
  PA0QW02.PC2CUXID = VSOPOX01.PC2CUXID;
  PA0QW02.OP1CUNDT = VSOPOX01.OP1CUNDT;
  PA0QW02.SY1STNBR = VSOPOX01.SY1STNBR;
  PA0QW02.SY2CLRID = VSOPOX01.SY2CLRID;
  PA0QW02.XDMCD = VSOPOX01.XDMCD;
  PA0QW02.XWHCD = VSOPOX01.XWHCD;
  PA0QW02.XDSCD = VSOPOX01.XDSCD;
  PA0QW02.YSMXDV = VSOPOX01.YSMXDV;
  PA0QW02.PC3POIDT = VSOPOX01.PC3POIDT;
  ;
  while (PA0QW00.PA0QW-END-OF-VSOPOX01 == "N")
    PA0Q-121();
  end
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "S") /* PROCESSING BY STYLE*/
    ;
    if (PA0QW00.PA0QW-MULT-SO-FLAG == "N") /* DON'T INCLUDE FUTURE SOs*/
      ;
      PA0QW05.PA0QW-IO-FUNCTION = "C1";
      ;
    else
      ;
      PA0QW05.PA0QW-IO-FUNCTION = "C4";
      ;
    end
    ;
  else /* PROCESSING BY CUSTOMER*/
    ;
    if (PA0QW00.PA0QW-MULT-SO-FLAG == "N") /* DON'T INCLUDE FUTURE SOs*/
      ;
      PA0QW05.PA0QW-IO-FUNCTION = "C2";
      ;
    else
      ;
      PA0QW05.PA0QW-IO-FUNCTION = "C5";
      ;
    end
    ;
  end
  ;
  PA0QS-14-IO6020-C(); /* CLOSE CURSOR*/
  ;
  ;
   /* ------------------ End of Process PA0Q-120 -----------------*/
  ;
end // end PA0Q-120

// FIND BEGIN SO CUST NEED DT
Function PA0Q-12001()
   /* ------------------------------------------------------------*/
   /* DETERMINE THE BEGINNING SO CUSTOMER NEED DATE BASED ON THE*/
   /* PO ID.*/
   /*  */
   /* FOR NIL ORDERS, THE VALID NEED DATE YEAR AND MONTH IS EQUAL*/
   /* TO THE BUY DATE YEAR AND MONTH.*/
   /*  */
   /* FOR DOMESTIC ORDERS, THE VALID NEED DATE YEAR AND MONTH IS*/
   /* EQUAL TO THE BUY DATE YEAR AND MONTH + 1.  IF THE BUY MONTH*/
   /* IS 01 OR 02, THEN 1 MUST BE ADDED THE THE YEAR.  FOR EXAMPLE,*/
   /* IF THE PO ID IS 931101, THE CUSTOMER NEED DATE YYMM IS 9402.*/
   /*  */
   /* ------------------------------------------------------------*/
  ;
  if (PA0QW01.PA0QW-OP-CUST-NEED1-DT == 0)
    PA0QW01.PA0QW-OP-CUST-NEED1-DD = 01; /* ALWAYS FIRST OF THE MONTH*/
    PA0QW01.PA0QW-OP-CUST-NEED1-MM = PA0QW01.PA0QW-PO-ID-BUY-MM;
    PA0QW01.PA0QW-OP-CUST-NEED1-YY = PA0QW01.PA0QW-PO-ID-YY;
    ;
    if (PA0QW01.PA0QW-OP-CUST-NEED1-YY < 93)
      PA0QW01.PA0QW-OP-CUST-NEED1-CC = 20;
    else
      PA0QW01.PA0QW-OP-CUST-NEED1-CC = 19;
    end
    ;
   /* FOR DOMSTIC ORDERS, ADD ONE TO THE MONTH TO DETERMINE THE NEED*/
   /* DATE FOR THE SALES ORDERS.*/
    ;
    if (PA0QW01.YSMXDV == "10" /* DOMESTIC ORDER*/
    )                         
      if (PA0QW01.PA0QW-OP-CUST-NEED1-MM == 12)
        PA0QW01.PA0QW-OP-CUST-NEED1-MM = 01;
      else
        PA0QW01.PA0QW-OP-CUST-NEED1-MM = PA0QW01.PA0QW-OP-CUST-NEED1-MM + 1;
      end
      ;
      if (PA0QW01.PA0QW-OP-CUST-NEED1-MM < 04)
        if (PA0QW01.PA0QW-OP-CUST-NEED1-YY == 99)
          PA0QW01.PA0QW-OP-CUST-NEED1-YY = 00;
          PA0QW01.PA0QW-OP-CUST-NEED1-CC = PA0QW01.PA0QW-OP-CUST-NEED1-CC + 1;
        else
          PA0QW01.PA0QW-OP-CUST-NEED1-YY = PA0QW01.PA0QW-OP-CUST-NEED1-YY + 1;
        end
      end
      ;
    else
      if (PA0QW01.PA0QW-OP-CUST-NEED1-MM < 03)
        if (PA0QW01.PA0QW-OP-CUST-NEED1-YY == 99)
          PA0QW01.PA0QW-OP-CUST-NEED1-YY = 00;
          PA0QW01.PA0QW-OP-CUST-NEED1-CC = PA0QW01.PA0QW-OP-CUST-NEED1-CC + 1;
        else
          PA0QW01.PA0QW-OP-CUST-NEED1-YY = PA0QW01.PA0QW-OP-CUST-NEED1-YY + 1;
        end
      end
    end
  end /* END OF FIRST IF*/
  ;
   /* VALIDATE AGAINST ENDING SO CUSTOMER NEED DATE*/
  ;
  if (PA0QW01.PA0QW-OP-CUST-NEED2-DT == 0
   || PA0QW01.PA0QW-OP-CUST-NEED2-DT >= PA0QW01.PA0QW-OP-CUST-NEED1-DT)
    return;
  else
    set PA0QM001.PA0QM-OP-CUST-NEED2-MM cursor, bold;
    set PA0QM001.PA0QM-OP-CUST-NEED2-YY bold;
    PAWREC.XXXMODID = "120";
    converseLib.validationFailed(292); /* ENDING SO CUST NEED DATE MUST BE > BEGINNING*/
  end
  ;
  ;
   /* ------------------ End of Process PA0Q-12001 ---------------*/
  ;
end // end PA0Q-12001

// PROCESS SO SIZE AND PO ITEM
Function PA0Q-121()
   /* ------------------------------------------------------------*/
   /* PROCESS SO SIZE/PO ITEM DATA.*/
   /* ------------------------------------------------------------*/
  ;
   /* INITIALIZE THE NDV01 FLAG*/
  ;
  PA0QW00.PA0QW-NDV01-FLAG = "N";
  PA0QW00.PA0QW-PO-NO-SO-FLAG = "N";
  ;
  PA0QW00.PA0QW-SAVE-INDEX = 1; /* INITIALIZE THE TEMP STORE INDEX*/
  ;
  while (PA0QW00.PA0QW-END-OF-VSOPOX01 == "N"
  )
    PA0Q-140(); /* AD PROCESSING*/
    ;
  end
  ;
   /* REMEMBER: IF THE END OF THE VSOPOX01 TABLE IS FOUND THERE MAY*/
   /* BE A SALES ORDER THAT HAS NOT BEEN PROCESSED THROUGH THE*/
   /* BALANCE TO SHIP ROUTINES.*/
  ;
  if (PA0QW00.PA0QW-PREV-PC3POIDT != 0)
    ;
    PA0QW00.PA0QW-TEMP-PAGE-PRINTED = "N";
    ;
    PA0Q-160(); /* APPLY TO PO ITEMS*/
    ;
      /* IF PROCESSING BY CUSTOMER, FINISHED WITH PROCESSING.*/
      /* WRITE LAST PAGE OUT TO TEMP STORAGE*/
    ;
    if (PA0QW00.PA0QW-PROCESS-TYPE == "C"
     && PA0QW00.PA0QW-TEMP-PAGE-PRINTED == "N")
      ;
      PA0QW00.PA0QW-MAX-PAGES = PA0QW00.PA0QW-MAX-PAGES + 1;
      ;
      PA0QS-31-TA0050-A(); /* ADD PO TO TEMP STORAGE*/
      ;
      set PA0QW04 empty;
      ;
    end
    ;
  end
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "C")
    return;
  end
  ;
   /* IF PROCESSING BY STYLE, GET ALL THE WAREHOUSE RECORDS*/
  ;
  PA0QW00.PA0QW-WAREHOUSE-FLAG = "Y";
  PA0QW00.PA0QW-NDV01-FLAG = "N";
  set PA0QW02 empty; /* CLEAR OUT SALES ORDER INFORMATION*/
  ;
  PA0Q-160();

  if (PA0QW00.PA0QW-PO-TABLE-MAX > 0)
    PA0QW00.PA0QW-DATA-FOUND-FLAG = "Y";
  else
    PA0QW00.PA0QW-DATA-FOUND-FLAG = "N";
  end
  ;
  if (PA0QW00.PA0QW-TEMP-PAGE-PRINTED == "N"
   && PA0QW00.XX6 >= 11)
    ;
    PA0QW00.PA0QW-MAX-PAGES = PA0QW00.PA0QW-MAX-PAGES + 1;
    ;
    PA0QS-31-TA0050-A(); /* ADD PO TO TEMP STORAGE*/
    ;
    set PA0QW04 empty;
    ;
    PA0QW00.PA0QW-TEMP-PAGE-PRINTED = "Y";
    ;
    PA0QW00.XX6 = 1;
    PA0QW00.PA0QW-SAVE-INDEX = 1;
    ;
  end
  ;
   /* A BLANK LINE NEEDS TO BE PRINTED BETWEEN THE WAREHOUSE RECORDS*/
   /* AND THE NDV01 RECORDS.*/
  ;
  if (PA0QW00.XX6 != 1)
    PA0QW00.XX6 = PA0QW00.XX6 + 1;
    PA0QW00.PA0QW-SAVE-INDEX = PA0QW00.XX6;
    PA0QW00.PA0QW-LAST-LINE-BLANK = "Y";
  end
  ;
   /* IF PROCESSING BY STYLE, GET ANY NDV01 PO ITEMS*/
  ;
  PA0QW00.PA0QW-WAREHOUSE-FLAG = "N";
  PA0QW00.PA0QW-NDV01-FLAG = "Y";
  ;
  set PA0QW02 empty; /* CLEAR OUT SALES ORDER INFORMATION*/
  ;
  PA0Q-160();

  if (PA0QW00.PA0QW-PO-TABLE-MAX > 0)
    PA0QW00.PA0QW-DATA-FOUND-FLAG = "Y";
  end
  ;
  if (PA0QW00.PA0QW-TEMP-PAGE-PRINTED == "N"
   && PA0QW00.XX6 >= 11)
    ;
    PA0QW00.PA0QW-MAX-PAGES = PA0QW00.PA0QW-MAX-PAGES + 1;
    ;
    PA0QS-31-TA0050-A(); /* ADD PO TO TEMP STORAGE*/
    ;
    set PA0QW04 empty;
    ;
    PA0QW00.PA0QW-TEMP-PAGE-PRINTED = "Y";
    ;
    PA0QW00.XX6 = 1;
    PA0QW00.PA0QW-SAVE-INDEX = 1;
    ;
  end
  ;
   /* A BLANK LINE NEEDS TO BE PRINTED BETWEEN THE NDV01 RECORDS AND*/
   /* THE PO LINE ITEMS THAT DO NOT HAVE SALES ORDERS*/
  ;
  if (PA0QW00.XX6 != 1
   && PA0QW00.PA0QW-LAST-LINE-BLANK == "N")
    PA0QW00.XX6 = PA0QW00.XX6 + 1;
    PA0QW00.PA0QW-SAVE-INDEX = PA0QW00.XX6;
  end
  ;
   /* FIND THE PO LINE ITEMS THAT DO NOT HAVE SALES ORDERS (IN VSOPOX01)*/
  ;
  PA0QW00.PA0QW-NDV01-FLAG = "N";
  PA0QW00.PA0QW-PO-NO-SO-FLAG = "Y";
  ;
  set PA0QW02 empty; /* CLEAR OUT SALES ORDER INFORMATION*/
  ;
  PA0Q-160();

  if (PA0QW00.PA0QW-PO-TABLE-MAX > 0)
    PA0QW00.PA0QW-DATA-FOUND-FLAG = "Y";
  end
  ;
  ;
  if (PA0QW00.PA0QW-TEMP-PAGE-PRINTED == "N")
    ;
    PA0QW00.PA0QW-MAX-PAGES = PA0QW00.PA0QW-MAX-PAGES + 1;
    ;
    PA0QS-31-TA0050-A(); /* ADD PO TO TEMP STORAGE*/
    ;
    set PA0QW04 empty;
    ;
  end
   /* ------------------ End of Process PA0Q-121 -----------------*/
  ;
end // end PA0Q-121

// Early BTS Processing
Function PA0Q-140()
   /* ------------------------------------------------------------*/
   /*  */
   /* 1.  THE KEY BREAK CONSISTS OF THE FOLLOWING FIELDS*/
   /* PO ID*/
   /* CUSTOMER XREF*/
   /* DIMENSION*/
   /* DIRECT SHIP CODE*/
   /* CUSTOMER ORDER ID*/
   /* NIKE ORDER ID*/
   /*  */
   /* 2.  WHEN THE KEY IS THE SAME, THE SO SIZE INFORMATION MUST BE*/
   /* DETERMINED AND ACCUMULATED.*/
   /*  */
   /* 3.  WHEN THE KEY CHANGES, THE PO ITEMS MUST BE READ AND THE*/
   /* BALANCE TO SHIP DETERMINED.  THE BALANCE TO SHIP IS THEN*/
   /* APPLIED TO THE PO ITEMS IN EARLIEST ETS/RTA DATE ORDER.*/
   /*  */
   /* ------------------------------------------------------------*/
  ;
   /* IF PROCESSING BY CUSTOMER AND THE KEY IS THE SAME*/
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "C")
    if (VSOPOX01.PC3POIDT == PA0QW00.PA0QW-PREV-PC3POIDT
     && VSOPOX01.PC2CUXID == PA0QW00.PA0QW-PREV-PC2CUXID
     && VSOPOX01.SY1STNBR == PA0QW00.PA0QW-PREV-SY1STNBR
     && VSOPOX01.SY2CLRID == PA0QW00.PA0QW-PREV-SY2CLRID
     && VSOPOX01.XDMCD == PA0QW00.PA0QW-PREV-XDMCD
     && VSOPOX01.XDSCD == PA0QW00.PA0QW-PREV-XDSCD
     && VSOPOX01.OP1CUOID == PA0QW00.PA0QW-PREV-OP1CUOID
     && VSOPOX01.OP1NORID == PA0QW00.PA0QW-PREV-OP1NORID)
      ;
      PA0QS-15-SO-SIZE(); /* READ AND ACCUMULATE SO SIZE RECORDS*/
      ;
    else
      ;
      PA0Q-150(); /* PROCESS BTS ROUTINE AND APPLY TO PO ITEMS*/
      ;
    end
    ;
  else /* IF PROCESSING BY STYLE AND THE KEY IS THE SAME*/
    ;
    if (VSOPOX01.PC3POIDT == PA0QW00.PA0QW-PREV-PC3POIDT
     && VSOPOX01.XDMCD == PA0QW00.PA0QW-PREV-XDMCD
     && VSOPOX01.XDSCD == PA0QW00.PA0QW-PREV-XDSCD
     && VSOPOX01.OP1CUOID == PA0QW00.PA0QW-PREV-OP1CUOID
     && VSOPOX01.OP1NORID == PA0QW00.PA0QW-PREV-OP1NORID)
      ;
      PA0QS-15-SO-SIZE(); /* READ AND ACCUMULATE SO SIZE RECORDS*/
      ;
    else
      ;
      PA0Q-150(); /* PROCESS BTS ROUTINE AND APPLY TO PO ITEMS*/
      ;
    end
    ;
  end
  ;
   /* ------------------ End of Process PA0Q-140 -----------------*/
  ;
end // end PA0Q-140

// KEY CHANGED
Function PA0Q-150()
   /* ------------------------------------------------------------*/
   /* THE KEY HAS CHANGED. CALACULATE*/
   /* AND APPLY BTS.*/
   /* ------------------------------------------------------------*/
  ;
  PA0Q-160(); /* PROCESS BTS ROUTINE AND APPLY TO PO ITEMS*/
  ;
   /* MOVE CURRENT SO INFORMATION INTO KEY FIELDS*/
  ;
   /* MOVE IN THE SALES ORDER NUMBER INFO INTO THE PREVIOUS*/
   /* FIELDS. THIS IS USED TO CONTROL THE BREAK FOR AD PROCESSING*/
  ;
  PA0QW00.PA0QW-PREV-OP1PARTN = VSOPOX01.OP1PARTN;
  PA0QW00.PA0QW-PREV-OP1CUOID = VSOPOX01.OP1CUOID;
  PA0QW00.PA0QW-PREV-OP1NORID = VSOPOX01.OP1NORID;
  ;
  PA0QW00.PA0QW-PREV-PC3POIDT = VSOPOX01.PC3POIDT;
  PA0QW00.PA0QW-PREV-PC2CUXID = VSOPOX01.PC2CUXID;
  PA0QW00.PA0QW-PREV-SY1STNBR = VSOPOX01.SY1STNBR;
  PA0QW00.PA0QW-PREV-SY2CLRID = VSOPOX01.SY2CLRID;
  PA0QW00.PA0QW-PREV-XDMCD = VSOPOX01.XDMCD;
  PA0QW00.PA0QW-PREV-XDSCD = VSOPOX01.XDSCD;
  PA0QW00.PA0QW-PREV-XWHCD = VSOPOX01.XWHCD;
  ;
   /* PREVIOUS FIELDS USED FOR PO PROCESSING*/
  ;
  PA0QW00.PA0QW-PREV-PC3PONBR = 0;
  PA0QW00.PA0QW-PREV-CUSTOMER = " ";
  ;
   /* MOVE CURRENT SO INFORMATION INTO WORKING STORAGE*/
  ;
  set PA0QW02 empty;
  PA0QW02.PA0QW-RECORD-TYPE = "SO";
  PA0QW02.OP1PARTN = VSOPOX01.OP1PARTN;
  PA0QW02.OP1CUOID = VSOPOX01.OP1CUOID;
  PA0QW02.OP1NORID = VSOPOX01.OP1NORID;
  PA0QW02.OP2LNINB = VSOPOX01.OP2LNINB;
  PA0QW02.PC2CUXID = VSOPOX01.PC2CUXID;
  PA0QW02.OP1CUNDT = VSOPOX01.OP1CUNDT;
  PA0QW02.SY1STNBR = VSOPOX01.SY1STNBR;
  PA0QW02.SY2CLRID = VSOPOX01.SY2CLRID;
  PA0QW02.XDMCD = VSOPOX01.XDMCD;
  PA0QW02.XWHCD = VSOPOX01.XWHCD;
  PA0QW02.XDSCD = VSOPOX01.XDSCD;
  PA0QW02.YSMXDV = VSOPOX01.YSMXDV;
  PA0QW02.PC3POIDT = VSOPOX01.PC3POIDT;
  ;
  ;
   /* ------------------ End of Process PA0Q-150 -----------------*/
  ;
end // end PA0Q-150

// BTS CALCULATION
Function PA0Q-160()
  ;
   /* IF THE KEY IS DIFFERENT OR END OF TABLE*/
  ;
  PA0QW00.PA0QW-PO-TABLE-MAX = 0;
  ;
  move 0 to PA0QW00.PA0QW-TOTAL-PO-ORDER-QTY[1] for all;
  ;
  PA0QW00.PA0QW-SHOW-PRIOR-PO = "N";
  ;
  PA0Q-161(); /* READ PO ITEMS*/
  ;
   /* DETERMINE THE BALANCE TO SHIP QUANTITIES*/
  ;
  PA0QW00.XX5 = 1;
  while (PA0QW00.XX5 <= 100
   && PA0QW00.XX5 <= PA0QW00.PA0QW-PO-TABLE-MAX)
    ;
     /* MKS: 03/22/94 ADD COMPARE WITH WAREHOUSE.  IF THE WAREHOUSE IS*/
     /* DIFFERENT, GET/CALC BTS.*/
    ;
    if (PA0QW03.XWHCD[XX5] == " "
     || PA0QW03.XDSCD[XX5] == "2")
      if (PA0QW03.PC3PONBR[XX5] != PA0QW00.PA0QW-PREV-PC3PONBR
       || PA0QW03.PC2CUXID[XX5] != PA0QW00.PA0QW-PREV-CUSTOMER
       || PA0QW03.OP1CUOID[XX5] != PA0QW00.PA0QW-BTS-PREV-OP1CUOID
       || PA0QW03.OP1NORID[XX5] != PA0QW00.PA0QW-BTS-PREV-OP1NORID
       || PA0QW03.XWHCD[XX5] != PA0QW00.PA0QW-BTS-PREV-XWHCD
       || PA0QW03.YMTCD[XX5] != PA0QW00.PA0QW-BTS-PREV-YMTCD
       || PA0QW00.PA0QW-END-OF-VSOPOX01 == "Y")
        PA0Q-162(); /* DETERMINE BTS AND APPLY BTS TO PO*/
                                   /* ITEMS*/
        PA0QW00.XX5 = PA0QW00.XX5 + 1;
      else
        PA0QW00.XX5 = PA0QW00.XX5 + 1;
      end
      ;
    else /* DETERMINE BTS BY WAREHOUSE*/
      ;
      if (PA0QW03.XWHCD[XX5] != PA0QW00.PA0QW-BTS-PREV-XWHCD
       || PA0QW03.PC6ITMNB[XX5] != PA0QW00.PA0QW-PREV-PC6ITMNB
       || PA0QW03.YMTCD[XX5] != PA0QW00.PA0QW-BTS-PREV-YMTCD
       || PA0QW00.PA0QW-END-OF-VSOPOX01 == "Y")
        PA0Q-162(); /* DETERMINE BTS AND APPLY BTS TO PO*/
                                   /* ITEMS*/
        PA0QW00.XX5 = PA0QW00.XX5 + 1;
      else
        PA0QW00.XX5 = PA0QW00.XX5 + 1;
      end
      ;
    end
    ;
  end
  ;
  if (PA0QW00.PA0QW-WAREHOUSE-FLAG == "N"
   && PA0QW00.PA0QW-NDV01-FLAG == "N"
   && PA0QW00.PA0QW-PO-NO-SO-FLAG == "N")
    ;
    PA0Q-163(); /* WRITE SO TO TEMP STORAGE*/
    ;
     /* IF STILL PROCESSING SALES ORDERS, AND THE LAST TEMP STORAGE LINE*/
     /* PRINTED, RESET FLAG.*/
    ;
    if (PA0QW00.PA0QW-TEMP-PAGE-PRINTED == "Y"
     && PA0QW00.XX6 > 1)
      PA0QW00.PA0QW-TEMP-PAGE-PRINTED = "N";
    end
    ;
  else
    PA0QW00.XX6 = PA0QW00.PA0QW-SAVE-INDEX;
  end
  ;
  PA0QW00.XX5 = 1;
  while (PA0QW00.XX5 <= 100
   && PA0QW00.XX5 <= PA0QW00.PA0QW-PO-TABLE-MAX)
    ;
    if (PA0QW00.XX6 == 1)
      PA0QW00.PA0QW-TEMP-PAGE-PRINTED = "N";
    end
    ;
     /* CHECK FOR WAREHOUSE PO ITEM.  IF FOUND, INSERT A BLANK LINE.*/
    ;
    if (PA0QW00.PA0QW-PROCESS-TYPE == "S"        /* IF PROCESSING BY STYLE*/
     && PA0QW00.PA0QW-XWHCD-BLANK-PRINTED == "N" /* AND NO BLANK LINE*/
     && PA0QW03.XWHCD[XX5] > " "                 
     && PA0QW03.XDSCD[XX5] != "2")              
      ;
      if (PA0QW00.XX6 != 1)
        PA0QW00.XX6 = PA0QW00.XX6 + 1;
      end
      PA0QW00.PA0QW-XWHCD-BLANK-PRINTED = "Y";
      ;
      if (PA0QW00.XX6 > 11)
        PA0QW00.PA0QW-LAST-LINE-BLANK = "N";
        ;
        PA0QW00.PA0QW-MAX-PAGES = PA0QW00.PA0QW-MAX-PAGES + 1;
        ;
        PA0QS-31-TA0050-A(); /* ADD PAGE TO TEMP STORAGE*/
        ;
        set PA0QW04 empty;
        ;
           /* THIS FLAG MUST BE SET TO NO BECAUSE THE WAREHOUSE PO*/
           /* RECORD MUST BE PRINTED ON THE NEXT PAGE.*/
        ;
        PA0QW00.PA0QW-TEMP-PAGE-PRINTED = "N";
        ;
        PA0QW00.XX6 = 1;
        ;
      end
      ;
    end
    ;
     /* IF THE PO ID FACTORY IS ENTERED, ONLY SHOW THOSE PO ITEMS THAT*/
     /* HAVE THE SAME FACTORY.  HOWEVER, IF THERE IS A DIFFERENCE BETWEEN*/
     /* THE SO AND THE PO QUANTITIES, SHOW ALL THE PO ITEMS FOR THAT SO.*/
    ;
    if (PA0QW01.PA0QW-PO-ID-FCTY != " ") /* IF PO ID FACTORY ENTERED*/
      ;
      if (PA0QW03.XWHCD[XX5] > " " /* IF WAREHOUSE PO ITEM*/
       && PA0QW03.XDSCD[XX5] != "2")
        if (PA0QW03.FY1FCTYC[XX5] != PA0QW01.PA0QW-PO-ID-FCTY)
                                   /* DIFF FCTY*/
          PA0QW00.XX5 = PA0QW00.XX5 + 1; /* SKIP PO ITEM*/
        else
          ;
             /* PA0349: DETERMINE IF SO IS A MUSICAL SIZE RUN*/
          PA0Q-16000();
          ;
          PA0Q-164(); /* WRITE PO ITEM TO TEMP STORAGE*/
        end
      else
        if (PA0QW00.PA0QW-SO-PO-DIFF == 0 /* IF THERE IS NO SO ADJ QTY*/
         && PA0QW03.FY1FCTYC[XX5] != PA0QW01.PA0QW-PO-ID-FCTY)
                                   /* DIFF FCTY*/
          PA0QW00.XX5 = PA0QW00.XX5 + 1; /* SKIP PO ITEM*/
        else
          ;
              /* DETERMINE IF THE PACADDRS FIELD ON THE PO ITEM SHOULD*/
              /* BE '*'.*/
          ;
          if (PA0QW00.PA0QW-SO-PO-DIFF != 0)
            PA0QW03.PACADDRS = "*";
          else
            PA0QW03.PACADDRS = " ";
          end
          ;
             /* PA0349: DETERMINE IF SO IS A MUSICAL SIZE RUN*/
          PA0Q-16000();
          ;
          PA0Q-164(); /* WRITE PO ITEM TO TEMP STORAGE*/
        end
      end
      ;
    else
      ;
        /* DETERMINE IF THE PACADDRS FIELD ON THE PO ITEM SHOULD*/
        /* BE '*'.*/
      ;
      if (PA0QW00.PA0QW-SO-PO-DIFF != 0)
        PA0QW03.PACADDRS = "*";
      else
        PA0QW03.PACADDRS = " ";
      end
      ;
       /* PA0349: DETERMINE IF SO IS A MUSICAL SIZE RUN*/
      PA0Q-16000();
      ;
      PA0Q-164(); /* WRITE PO ITEM TO TEMP STORAGE*/
      ;
    end
    ;
  end
  ;
  PA0QW00.PA0QW-SAVE-INDEX = PA0QW00.XX6; /* SAVE TEMP STORAGE INDEX*/
  ;
  ;
   /* ------------------ End of Process PA0Q-160  ----------------*/
  ;
end // end PA0Q-160

// DETERMINE IF SO IS MSR
Function PA0Q-16000()
   /* ------------------------------------------------------------*/
   /* PA0349: DETERMINE IF THE SO IS A MUSICAL SIZE RUN.*/
   /* ------------------------------------------------------------*/
  ;
   /* IF PO DOES NOT HAVE AN SO ATTACHED - SKIP*/
  ;
  if (PA0QW03.OP1CUOID[XX5] == 0
   && PA0QW03.OP1NORID[XX5] == 0)
    return;
  end
  ;
  set OP1REC empty;
  ;
   /* GET OP1PARTN;*/
  ;
  if (PA0QW03.OP1CUOID[XX5] == 0)
    OP1REC.OP1PARTN = " ";
  else
    PA0QW00.PA0QW-OP1CUOID = PA0QW03.OP1CUOID[XX5];
    OP1REC.OP1PARTN = PA0QW00.OP1PARTN;
  end
  ;
  OP1REC.OP1CUOID = PA0QW03.OP1CUOID[XX5];
  OP1REC.OP1NORID = PA0QW03.OP1NORID[XX5];
  ;
  PA0QS-60-IO0430-S();
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    if (OP1REC.XPACD == "MS")
      PA0QW03.PA0QW-MSR-IND[XX5] = "M";
    else
      PA0QW03.PA0QW-MSR-IND[XX5] = " ";
    end
  end
  ;
  ;
end // end PA0Q-16000

// READ PO ITEMS
Function PA0Q-161()
   /* ------------------------------------------------------------*/
   /* READ PO ITEMS*/
   /* ------------------------------------------------------------*/
   /* Modified code to access VPOITM05 instead of VPOITM01 to help*/
   /* ignore Canadian PO items. - GREDDY 09/29/00*/
   /* ------------------------------------------------------------*/
  ;
   /* SET PC6REC EMPTY;*/
  set VPOITM05 empty;
  set PCYREC empty;
  ;
  VPOITM05.XGPCD = "02";
  VPOITM05.SY1STNBR = PA0QW00.PA0QW-PREV-SY1STNBR;
  VPOITM05.SY2CLRID = PA0QW00.PA0QW-PREV-SY2CLRID;
  VPOITM05.XDMCD = PA0QW00.PA0QW-PREV-XDMCD;
  VPOITM05.XQACD = "01";
  VPOITM05.FY1FCTYC = "*";
  VPOITM05.XOWCD = "*";
  VPOITM05.PC2INSEG = "*";
  VPOITM05.XPGCD = "*";
  VPOITM05.XUMCD = "*";
  VPOITM05.PC6ETSDT = -1;
  VPOITM05.YMTCD = "*";
  VPOITM05.PC6PLAN = -1;
  VPOITM05.XWHCD = "*";
  ;
   /* IF PROCESSING BY STYLE, WILDCARD CUSTOMER*/
  ;
   /* NOTE, IF PROCESSING BY STYLE, FOLLOWING ARE THE CURRENT FLAGS*/
   /* USED:*/
   /* 1.  PA0QW00.PA0QW-WAREHOUSE-FLAG*/
   /* 2.  PA0QW00.PA0QW-NDV01-FLAG*/
   /* 3.  PA0QW00.PA0QW-PO-NO-SO-FLAG*/
   /* IF FLAGS ARE ADDED TO THIS LIST, MAKE SURE ANY APPROPRIATE CHANGES*/
   /* ARE MADE TO PA0Q-162.  THIS IS SO THAT THE STYLE IS CORRECTLY*/
   /* LOADED INTO THE PC5REC.  THE PA0QW02 RECORD STORES THE SO INFO.*/
   /*  */
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "S")
    if (PA0QW00.PA0QW-WAREHOUSE-FLAG == "Y") /* FIND WAREHOUSE RECORDS*/
      VPOITM05.PC2CUXID = " "; /* PICK UP JUST WAREHOUSE RECORDS*/
      VPOITM05.XDSCD = "*";
    else
      if (PA0QW00.PA0QW-NDV01-FLAG == "Y") /* FIND NDV01 PO ITEMS*/
        VPOITM05.PC2CUXID = "NDV01";
        VPOITM05.XDSCD = "*";
      else
        if (PA0QW00.PA0QW-PO-NO-SO-FLAG == "Y") /* FIND STRAY PO ITEMS*/
          VPOITM05.PC2CUXID = "*";
          VPOITM05.XDSCD = "*";
        else
          VPOITM05.PC2CUXID = PA0QW02.PC2CUXID; /* MOVE IN SO CUST*/
          VPOITM05.XDSCD = PA0QW02.XDSCD; /* MOVE IN DIR SHP CODE*/
        end
      end
    end
  else
    VPOITM05.PC2CUXID = PA0QW01.PC2CUXID;
    VPOITM05.XDSCD = PA0QW02.XDSCD; /* MOVE IN DIR SHP CODE*/
  end
  ;
  VPOITM05.PC4ORTYP = PA0QW01.PC4ORTYP;
  ;
  if (PA0QW00.PA0QW-NDV01-FLAG == "Y")
    VPOITM05.YSMXDV = "20";
  else
    VPOITM05.YSMXDV = PA0QW01.YSMXDV;
  end
  ;
  if (PA0QW00.PA0QW-WAREHOUSE-FLAG == "Y") /* FIND WAREHOUSE RECORDS*/
    VPOITM05.PC6STAT = "OP";
  else
    VPOITM05.PC6STAT = "*";
  end
  ;
   /* KEEP IN MIND THAT THE IOMOD GETS ALL PO ITEMS BETWEEN THE*/
   /* SPECIFIED DATES.  WE WANT THE ONLY THOSE PO ITEMS IN EACH*/
   /* OF THE DATES.*/
  ;
  PCYREC.PCYFRDT = PA0QW01.PA0QW-PC3POIDT;
  ;
  PCYREC.PCYTODT = PA0QW01.PA0QW-PC3POIDT;
  ;
  ;
   /* IF PROCESSING WAREHOUSE RECORDS, OR PROCESSING*/
   /* NDV01 RECORDS, OR PROCESSING STRAY PO ITEMS; WILDCARD THE SALES*/
   /* ORDER INFORMATION.*/
  ;
  if (PA0QW00.PA0QW-WAREHOUSE-FLAG == "Y"
   || PA0QW00.PA0QW-NDV01-FLAG == "Y"
   || PA0QW00.PA0QW-PO-NO-SO-FLAG == "Y")
    VPOITM05.OP1PARTN = "*";
    VPOITM05.OP1CUOID = -1;
    VPOITM05.OP1NORID = -1;
  else
    VPOITM05.OP1PARTN = PA0QW00.PA0QW-PREV-OP1PARTN;
    VPOITM05.OP1CUOID = PA0QW00.PA0QW-PREV-OP1CUOID;
    VPOITM05.OP1NORID = PA0QW00.PA0QW-PREV-OP1NORID;
    ;
        /* PA344: IF PROCESSING FUTURE SALES ORDER, DETERMINE IF THERE*/
        /* IS PO FOR THIS SALES ORDER.  DISREGARD THE DIRECT SHIP*/
        /* CODE.*/
    if (PA0QW00.PA0QW-PREV-PC3POIDT > PA0QW00.PC3POIDT) /**/
      VPOITM05.XDSCD = "*";
      PCYREC.PCYFRDT = 0; /* FROM PO BUY MONTH DATE*/
    end
    ;
  end
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "S") /* IF PROCESSING BY STYLE*/
    PCYREC.PCYFUNC = "SN";
  else
    PCYREC.PCYFUNC = "SO";
  end
  ;
   /* OPEN DPRODC.VPOITM05 CURSOR*/
  PA0QS-20-VPOITM5-S();
  if (PA0QW00.PA0QW-PROCESS-TYPE == "S") /* IF PROCESSING BY STYLE*/
    PCYREC.PCYFUNC = "NN";
  else
    PCYREC.PCYFUNC = "NO";
  end
  ;
   /* GET FIRST DPRODC.VPOITM05 ROW*/
  PA0QS-21-VPOITM5-N();
  set PA0QW03 empty; /* INITIALIZE WORKING STORAGE PO TABLE*/
  ;
  PA0QW00.XX5 = 1;
  ;
  while (SQLCA.VAGen_SQLCODE == 0)
    ;
      /* PA292: DO NOT DISPLAY CANCELLED P.O. LINE ITEMS - 07/06/92*/
      /* PA344: DISPLAY PRIOR POS.*/
    ;
    if (VPOITM05.PC6STAT != "CX" /* AND P.O. NOT CANCELLED*/
     && VPOITM05.PC-SAP-PO-NBR == " ") /* Non-Canada PO*/
      ;
        /* 12/19/94: MVSEURD - MAKE SURE THAT IF PROCESSING A EUROPEAN*/
        /* O/A, ONLY EUROPEAN PO'S APPEAR.*/
      ;
      PA0QW00.PA0QW-EUROPEAN-ITEM = "N";
      ;
      if (VPOITM05.XWHCD != " ")
        set YSMREC empty;
        YSMREC.YSMTBLPF = "XWH";
        YSMREC.YSMSYSPF = "FB";
        YSMREC.YSMSUMID = 1;
        YSMREC.YSMSRCVL = VPOITM05.XWHCD;
        ;
        PA0QS-72-IO2640-S(); /* GET UNIQUE DCORP.VSUMCD01*/
        ;
        if (YSMREC.YSMSUMCD == "02") /* EUROPEAN DESTINATION*/
          PA0QW00.PA0QW-EUROPEAN-ITEM = "Y";
        end
      else
        if (VPOITM05.PC2CUXID != " ")
          PA0Q-16100(); /* CHECK CUSTOMER XREF*/
        end
      end
      ;
        /* IF EUROPEAN O/A, ONLY SHOW EUROPEAN PO ITEMS.*/
      ;
      if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
        if (PA0QW00.PA0QW-EUROPEAN-ITEM == "Y")
          PA0Q-16101(); /* PROCESS PO ITEM*/
        end
      else
        if (PA0QW00.PA0QW-EUROPEAN-ITEM == "N")
          PA0Q-16101(); /* PROCESS PO ITEM*/
        end
      end
      ;
    end
    ;
   /* GET NEXT DPRODC.VPOITM05 ROW*/
    PA0QS-21-VPOITM5-N();
  end
  ;
  if (PA0QW00.XX5 > 0)
    PA0QW00.XX5 = PA0QW00.XX5 - 1;
  end
  ;
  PA0QW00.PA0QW-PO-TABLE-MAX = PA0QW00.XX5;
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "S") /* IF PROCESSING BY STYLE*/
    PCYREC.PCYFUNC = "CN";
  else
    PCYREC.PCYFUNC = "CO";
  end
  ;
   /* CLOSE DPRODC.VPOITM05 CURSOR*/
  PA0QS-22-VPOITM5-C();
   /* ------------------ End of Process PA0Q-161 -----------------*/
  ;
end // end PA0Q-161

// CHECK FOR EUROPEAN XREF
Function PA0Q-16100()
   /* ------------------------------------------------------------*/
   /* CHECK CUSTOMER XREF TO SEE IF IT'S EUROPEAN*/
   /* ------------------------------------------------------------*/
  ;
  set PC2REC empty;
  PC2REC.XGPCD = "02";
  PC2REC.PC2CUXID = VPOITM05.PC2CUXID;
  ;
  PA0QS-06-IO3340-S(); /* GET CUSTOMER XREF TO DETERMINE IF EUROPEAN*/
  ;
  if (PC2REC.PC-PRDCU-APAO-FL == "E")
    PA0QW00.PA0QW-EUROPEAN-ITEM = "Y";
  end
  ;
   /* ------------------ End of Process PA0Q-16100 ---------------*/
  ;
end // end PA0Q-16100

// PROCESS PO ITEMS
Function PA0Q-16101()
   /* ------------------------------------------------------------*/
   /* VERIFY WAREHOUSE IS ACTIVE ON YSMREC AND XWHTBL*/
   /* ------------------------------------------------------------*/
  ;
  if (VPOITM05.XWHCD != " ")
    ;
    if (YSMREC.XXXSTAT != "A")
      return; /* SKIP INACTIVE WAREHOUSE*/
    end
    ;
    if (YSMREC.YSMSRCVL in XWHTBL.XWHCD)
      if (XWHTBL.XXXSTAT[sysVar.arrayIndex] != "A")
        return; /* SKIP INACTIVE WAREHOUSE*/
      end
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* PROCESS PO ITEMS*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0QW00.PA0QW-PO-NO-SO-FLAG == "Y")
    ;
      /* LOOK AT DIRECT AND INDIRECT DIRECTS ONLY*/
      /* 08/24/93: ALSO PROCESS NIKE CUSTOMERS IF THERE IS A WAREHOUSE*/
      /* CODE AND A DIRECT SHIP CODE OF ' '.  THEY ARE USED TO KEEP*/
      /* PRODUCTS SEPARATE.*/
     /* 10/17/94: ONLY PROCESS 'NIKE' CUSTOMERS THAT HAVE WAREHOUSE*/
     /* CODES.*/
    ;
    if (VPOITM05.XDSCD != "1"
     && VPOITM05.XDSCD != "2")
      if (VPOITM05.XWHCD != " "
       && VPOITM05.PC2CUXID != " ")
        ;
        set PC2REC empty;
        PC2REC.XGPCD = "02";
        PC2REC.PC2CUXID = VPOITM05.PC2CUXID;
        ;
        PA0QS-06-IO3340-S(); /* GET CUSTOMER XREF INFORMATION*/
        ;
        if (PC2REC.YPCCD != "N") /* NOT A 'NIKE' CUSTOMER XREF*/
          return;
        end
        ;
      else
        ;
        return;
        ;
      end
    end
    ;
    PA0QW00.PA0QW-NDX = 1;
    ;
    while (PA0QW00.PA0QW-NDX <= 100
     && PA0QW00.PA0QW-NDX <= PA0QW00.PA0QW-PO-SO-TABLE-MAX)
      ;
         /* IF FOUND, RECORD ALREADY PROCESSED -- SKIP*/
      ;
      if (VPOITM05.PC3PONBR == PA0QW11.PC3PONBR[PA0QW-NDX]
       && VPOITM05.PC6ITMNB == PA0QW11.PC6ITMNB[PA0QW-NDX])
        return;
      end
      ;
      PA0QW00.PA0QW-NDX = PA0QW00.PA0QW-NDX + 1;
    end
    ;
  end
  ;
  PA0QW03.PA0QW-RECORD-TYPE[XX5] = "PO";
  PA0QW03.OP1CUOID[XX5] = VPOITM05.OP1CUOID;
  PA0QW03.OP1NORID[XX5] = VPOITM05.OP1NORID;
  PA0QW03.PC3PONBR[XX5] = VPOITM05.PC3PONBR;
  PA0QW03.PC6ITMNB[XX5] = VPOITM05.PC6ITMNB;
  PA0QW03.PC3POIDT[XX5] = VPOITM05.PC3POIDT;
  PA0QW03.FY1FCTYC[XX5] = VPOITM05.FY1FCTYC;
  PA0QW03.PC2CUXID[XX5] = VPOITM05.PC2CUXID;
  PA0QW03.XWHCD[XX5] = VPOITM05.XWHCD;
  PA0QW03.PC6RTADT[XX5] = VPOITM05.PC6RTADT;
  PA0QW03.PC6ETSDT[XX5] = VPOITM05.PC6ETSDT;
  PA0QW03.PC2INSEG[XX5] = VPOITM05.PC2INSEG;
  PA0QW03.YMTCD[XX5] = VPOITM05.YMTCD;
  PA0QW03.XDSCD[XX5] = VPOITM05.XDSCD;
  PA0QW03.YSMXDV[XX5] = VPOITM05.YSMXDV;
  PA0QW03.PA-AFRGT-RQT-ID[XX5] = VPOITM05.PC6AIRNB;
  ;
   /* PA0344: SHOW SALES ORDER FOR PRIOR POS.*/
  ;
  if (VPOITM05.PC3POIDT != PA0QW01.PA0QW-PC3POIDT)
    PA0QW00.PA0QW-SHOW-PRIOR-PO = "Y";
  end
  ;
   /* LOAD PO ITEM KEYS INTO PA0QW11*/
  ;
  if (PA0QW00.PA0QW-PO-NO-SO-FLAG == "N")
    if (VPOITM05.XDSCD == "1" /* DIRECT SHIP*/
     || VPOITM05.XDSCD == "2") /* INDIRECT DIRECT*/
      PA0QW11.PC3PONBR[PA0QW-NDX] = VPOITM05.PC3PONBR;
      PA0QW11.PC6ITMNB[PA0QW-NDX] = VPOITM05.PC6ITMNB;
      PA0QW00.PA0QW-NDX = PA0QW00.PA0QW-NDX + 1;
      PA0QW00.PA0QW-PO-SO-TABLE-MAX = PA0QW00.PA0QW-PO-SO-TABLE-MAX + 1;
    end
  end
  ;
  move 0 to PA0QW00.PA0QW-PO-ORDER-QTY[1] for all;
  move 0 to PA0QW00.PA0QW-BALANCE-TO-SHIP[1] for all;
  ;
   /* GET THE ON ORDER QUANTITIES*/
  ;
  set PC7REC empty;
  PC7REC.XGPCD = "02";
  PC7REC.PC3PONBR = VPOITM05.PC3PONBR;
  PC7REC.PC6ITMNB = VPOITM05.PC6ITMNB;
  ;
  PA0QS-23-IO3640-S(); /* GET UNIQUE DPRODC.VPOSIZ01 RECORD*/
  ;
  move PC7REC.PC7ORDEQ to PA0QW00.PA0QW-PO-ORDER-QTY[1] for all;
  ;
   /* ONLY ADD THE PO TOTALS FOR THOSE PO ITEMS THAT DO NOT*/
   /* HAVE A WAREHOUSE CODE*/
  ;
  if (VPOITM05.XWHCD == " "
   || VPOITM05.XDSCD == "2")
    sysVar.arrayIndex = 1;
    while (sysVar.arrayIndex <= 40)
      PA0QW00.PA0QW-TOTAL-PO-ORDER-QTY[sysVar.arrayIndex] = PA0QW00.PA0QW-TOTAL-PO-ORDER-QTY[sysVar.arrayIndex] +       PA0QW00.PA0QW-PO-ORDER-QTY[sysVar.arrayIndex];
      ;
      sysVar.arrayIndex = sysVar.arrayIndex + 1;
    end
  end
  ;
  PA0QW03.PA0QW-PO-ORDER-QTY-GRP[XX5] = PA0QW00.PA0QW-PO-ORDER-QTY-GRP;
  ;
  PA0QW00.XX5 = PA0QW00.XX5 + 1;
  ;
   /* ------------------ End of Process PA0Q-16101 ---------------*/
  ;
end // end PA0Q-16101

// DETERMINE AND APPLY BTS
Function PA0Q-162()
   /* ------------------------------------------------------------*/
   /* IF THE PO NUMBER IS DIFFERENT THAN THE PREVIOUS PO NUMBER,*/
   /* DETERMINE THE BALANCE TO SHIP QUANTITIES.*/
   /* ------------------------------------------------------------*/
  ;
   /* SAVE PO NUMBER*/
  ;
  PA0QW00.PA0QW-PREV-PC3PONBR = PA0QW03.PC3PONBR[XX5];
  ;
  PA0QW00.PA0QW-PREV-PC6ITMNB = PA0QW03.PC6ITMNB[XX5];
  ;
  PA0QW00.PA0QW-PREV-CUSTOMER = PA0QW03.PC2CUXID[XX5];
  ;
  PA0QW00.PA0QW-BTS-PREV-OP1CUOID = PA0QW03.OP1CUOID[XX5];
  ;
  PA0QW00.PA0QW-BTS-PREV-OP1NORID = PA0QW03.OP1NORID[XX5];
  ;
  PA0QW00.PA0QW-BTS-PREV-XWHCD = PA0QW03.XWHCD[XX5];
  ;
  PA0QW00.PA0QW-BTS-PREV-YMTCD = PA0QW03.YMTCD[XX5];
  ;
   /* INITIALIZE THE RECORDS USED BY THE BALANCE TO SHIP ROUTINE*/
  ;
  set PC5REC empty;
  set PC6REC empty;
  set PC7REC empty;
  set PCMREC empty;
   /* SET TSTREC EMPTY;*/
  set VCPLHDJ4 empty;
  set TS5REC empty;
  set TSOREC empty;
  set TSHREC empty;
  ;
   /* LOAD PO TABLE INFO INTO THE BALANCE TO SHIP RECORD*/
  ;
  PC5REC.PC3PONBR = PA0QW03.PC3PONBR[XX5];
  PC5REC.XWHCD = PA0QW03.XWHCD[XX5];
  PC5REC.PC-ITM-SEQ-NBR = PA0QW03.PC6ITMNB[XX5];
  PC5REC.PC2CUXID = PA0QW03.PC2CUXID[XX5];
  PC5REC.YMTCD = PA0QW03.YMTCD[XX5];
  ;
   /* IF SALES ORDER, LOAD IN THE STYLE INFO FROM THE SALES ORDER.*/
   /* PA0QW02 STORES THE SO INFORMATION.*/
  ;
  if (PA0QW00.PA0QW-WAREHOUSE-FLAG == "N"
   && PA0QW00.PA0QW-NDV01-FLAG == "N"
   && PA0QW00.PA0QW-PO-NO-SO-FLAG == "N")
    PC5REC.SY1STNBR = PA0QW02.SY1STNBR;
    PC5REC.SY2CLRID = PA0QW02.SY2CLRID;
    PC5REC.XDMCD = PA0QW02.XDMCD;
  else
      /* PROCESSING WAREHOUSE RECORDS OR*/
      /* NDV01 RECORDS     OR*/
      /* STRAY PO RECORDS*/
    ;
    PC5REC.SY1STNBR = PA0QW01.SY1STNBR;
    PC5REC.SY2CLRID = PA0QW01.SY2CLRID;
    PC5REC.XDMCD = PA0QW01.XDMCD;
  end
  ;
  PC5REC.XQACD = "01";
  PC5REC.XOWCD = "00";
  PC5REC.PC2INSEG = PA0QW03.PC2INSEG[XX5];
  PC5REC.XPGCD = "00";
  PC5REC.XUMCD = "01";
  PC5REC.XGPCD = "02";
  PC5REC.PC5ERFL = "N";
  ;
     /* GET OP1PARTN;*/
  ;
  if (PA0QW03.OP1CUOID[XX5] == 0)
    PC5REC.OP1PARTN = " ";
  else
    PA0QW00.PA0QW-OP1CUOID = PA0QW03.OP1CUOID[XX5];
    PC5REC.OP1PARTN = PA0QW00.OP1PARTN;
  end
  ;
  PC5REC.OP1CUOID = PA0QW03.OP1CUOID[XX5];
  PC5REC.OP1NORID = PA0QW03.OP1NORID[XX5];
  ;
  XPPC030(); /* BALANCE TO SHIP ROUTINE*/
  ;
  ;
   /* MOVE THE SHIPPED/RECEIVED QUANTITIES CALCULATED FROM THE*/
   /* XPPC020/XPPC030 ROUTINE TO WORKING STORAGE.  THIS WORKING STORAGE*/
   /* FIELD IS USED TO DETERMINE WHERE TO APPLY THE AMOUNTS.*/
   /*  */
   /* 1. MOVE INTRANSIT QUANTITIES INTO THE WORKING STORAGE FIELD.*/
   /* 2. ADD THE RECEIVED QUANTITIES TO THE WORKING STORAGE FIELD.*/
  ;
  move PC5REC.PC5SHIP to PA0QW00.PA0QW-REMAIN-SHIPPED[1] for all;
  ;
  PA0QW00.XX6 = 1;
  while (PA0QW00.XX6 <= 40)
    ;
   /* GREDDY - Begin - changes done on 04/04/01*/
   /* Modified to calculate based on transportation instead of po*/
   /* PA0QW00.PA0QW-REMAIN-SHIPPED(XX6) = PA0QW00.PA0QW-REMAIN-SHIPPED(XX6)*/
   /* + PC5REC.PC5RECV(XX6);*/
    PA0QW00.PA0QW-REMAIN-SHIPPED[XX6] = PA0QW00.PA0QW-REMAIN-SHIPPED[XX6]     + PC5REC.PC5SRCV[XX6];
   /* GREDDY - End - changes done on 04/04/01*/
    ;
    PA0QW00.XX6 = PA0QW00.XX6 + 1;
    ;
  end
  ;
   /* THE NEXT SET OF CODE APPLIES THE BALANCE TO SHIP QUANTITIES TO*/
   /* THE PO ITEMS IN ORDER OF EARLIEST ETS/RTA.*/
  ;
  PA0QW00.XX6 = 1;
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "C") /* IF PROCESSING BY CUSTOMER*/
    ;
    PA0QW00.XX6 = PA0QW00.XX5;
    ;
    while (PA0QW00.XX6 <= 100
     && PA0QW00.XX6 <= PA0QW00.PA0QW-PO-TABLE-MAX
     && PA0QW03.YMTCD[XX6] == PA0QW00.PA0QW-BTS-PREV-YMTCD)
      ;
      PA0Q-16201(); /* APPLY BTS QUANTITIES TO PO ITEMS*/
      ;
    end
    ;
  else /* IF PROCESSING BY STYLE*/
    ;
      /* PLACE THE CURSOR ON THE FIRST ITEM RECORD TO BE PROCESSED*/
    ;
    PA0QW00.XX6 = PA0QW00.XX5;
    ;
    while (PA0QW00.XX6 <= 100
     && PA0QW00.XX6 <= PA0QW00.PA0QW-PO-TABLE-MAX
     && PA0QW03.PC3PONBR[XX6] == PA0QW00.PA0QW-PREV-PC3PONBR
     && PA0QW03.PC6ITMNB[XX6] == PA0QW00.PA0QW-PREV-PC6ITMNB
     && PA0QW03.XWHCD[XX6] == PA0QW00.PA0QW-BTS-PREV-XWHCD
     && PA0QW03.PC2CUXID[XX6] == PA0QW00.PA0QW-PREV-CUSTOMER
     && PA0QW03.OP1CUOID[XX6] == PA0QW00.PA0QW-BTS-PREV-OP1CUOID
     && PA0QW03.OP1NORID[XX6] == PA0QW00.PA0QW-BTS-PREV-OP1NORID
     && PA0QW03.YMTCD[XX6] == PA0QW00.PA0QW-BTS-PREV-YMTCD)
      ;
      PA0Q-16201(); /* APPLY BTS QUANTITIES TO PO ITEMS*/
      ;
    end
    ;
    /* PA0QW00.XX5 = PA0QW00.XX6 - 1;*/
    ;
  end
  ;
   /* ------------------ End of Process PA0Q-162 -----------------*/
  ;
end // end PA0Q-162

// DETERMINE AND APPLY BTS
Function PA0Q-16201()
   /* ------------------------------------------------------------*/
   /* APPLY BTS TO PO ITEMS*/
   /* ------------------------------------------------------------*/
  ;
   /* THE NEXT SET OF CODE APPLIES THE BALANCE TO SHIP QUANTITIES TO*/
   /* THE PO ITEMS IN ORDER OF EARLIEST ETS/RTA.*/
  ;
   /* MOVE THE SHIPPED QUANTITY CALCULATED FROM THE XPPC020 ROUTINE TO*/
   /* WORKING STORAGE.  THIS WORKING STORAGE FIELD WILL BE USED TO*/
   /* DETERMINE WHERE TO APPLY AMOUNTS.*/
  ;
   /* MOVEA PC5REC.PC5SHIP TO PA0QW00.PA0QW-REMAIN-SHIPPED;*/
  ;
  ;
   /* MOVE THE PO ON ORDER QUANTITY GROUP INTO PA0QW00 SO THAT THE*/
   /* QUANTITIES CAN BE LOOKED BY SIZE*/
  ;
  PA0QW00.PA0QW-PO-ORDER-QTY-GRP = PA0QW03.PA0QW-PO-ORDER-QTY-GRP[XX6];
  ;
  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 40)
    ;
      /* NEXT, TAKE THE ON ORDER QUANTITY OF THE PO ITEM AND SUBTRACT*/
      /* IT FROM THE REMAINING SHIPPED QUANTITY.  THIS IS SO THAT IT*/
      /* CAN BE DETERMINED HOW MUCH OF THE ON ORDER QUANTITY WAS*/
      /* SHIPPED.*/
    ;
    PA0QW00.PA0QW-REMAIN-SHIPPED[sysVar.arrayIndex] = PA0QW00.PA0QW-REMAIN-SHIPPED[sysVar.arrayIndex] -    PA0QW00.PA0QW-PO-ORDER-QTY[sysVar.arrayIndex];
    ;
      /* IF THE CALCULATED REMAINING SHIPPED QUANTITY IS GREATER THAN*/
      /* ZERO, THE ENTIRE ON ORDER AMOUNT HAS BEEN SHIPPED AND THE*/
      /* BALANCE TO SHIP QUANTITY IS ZERO.*/
    ;
    if (PA0QW00.PA0QW-REMAIN-SHIPPED[sysVar.arrayIndex] > 0)
      ;
      PA0QW00.PA0QW-PO-SHIPPED[sysVar.arrayIndex] = PA0QW00.PA0QW-PO-ORDER-QTY[sysVar.arrayIndex];
      ;
      PA0QW00.PA0QW-BALANCE-TO-SHIP[sysVar.arrayIndex] = 0;
      ;
    else
      /* THE PO SHIPPED QUANTITY IS THE PO ON ORDER QUANTITY + THE*/
      /* REMAINING SHIPPED QUANTITY. NOTICE THAT THE REMAINING SHIPPED*/
      /* QUANTITY IS NEGATIVE.*/
      ;
      /* IF THE CALCULATED PO SHIPPED QUANTITY IS LESS THAN OR EQUAL TO*/
      /* ZERO, THE PO SHIPPED QUANTITY IS REALLY ZERO. YOU CAN NOT*/
      /* NEGATIVELY SHIP QUANTITY.  THE BALANCE TO SHIP QUANTITY IS THE*/
      /* SAME AS THE PO ON ORDER QUANTITY.*/
      ;
      /* IF THE CALCULATED PO SHIPPED QUANTITY IS NOT LESS THAN OR EQUAL*/
      /* TO ZERO, THE BALANCE TO SHIP QUANTITY IS EQUAL TO THE REMAING*/
      /* TO SHIP QUANTITY TIMES -1 (THIS IS TO MAKE THE BALANCE TO SHIP*/
      /* POSITIVE).*/
      ;
      ;
      PA0QW00.PA0QW-PO-SHIPPED[sysVar.arrayIndex] = PA0QW00.PA0QW-PO-ORDER-QTY[sysVar.arrayIndex] +       PA0QW00.PA0QW-REMAIN-SHIPPED[sysVar.arrayIndex];
      ;
      if (PA0QW00.PA0QW-PO-SHIPPED[sysVar.arrayIndex] <= 0)
        PA0QW00.PA0QW-PO-SHIPPED[sysVar.arrayIndex] = 0;
        PA0QW00.PA0QW-BALANCE-TO-SHIP[sysVar.arrayIndex] = PA0QW00.PA0QW-PO-ORDER-QTY[sysVar.arrayIndex];
      else
        PA0QW00.PA0QW-BALANCE-TO-SHIP[sysVar.arrayIndex] = PA0QW00.PA0QW-REMAIN-SHIPPED[sysVar.arrayIndex] * -1;
      end
    end
    ;
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
    ;
  end
  ;
   /* MOVE THE WORKING QUANTITY FIELDS TO*/
   /* THE WORKING STORAGE PO TABLE*/
  ;
  PA0QW03.PA0QW-BALANCE-TO-SHIP-GRP[XX6] = PA0QW00.PA0QW-BALANCE-TO-SHIP-GRP;
  ;
  PA0QW00.XX6 = PA0QW00.XX6 + 1;
  ;
   /* RECALCULATE THE PA0QW-REMAIN-SHIPPED QUANTITIES FOR THE NEXT*/
   /* RECORD.  ALL NEGATIVE VALUES MUST BE SET TO 0.  THIS IS BECAUSE*/
   /* WE ARE SAYING THAT THE IN TRANSIT AND RECEIVED QUANTITIES HAVE*/
   /* BEEN COMPLETELY APPLIED TO PREVIOUS RECORDS.*/
  ;
  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 40)
    ;
    if (PA0QW00.PA0QW-REMAIN-SHIPPED[sysVar.arrayIndex] < 0)
      PA0QW00.PA0QW-REMAIN-SHIPPED[sysVar.arrayIndex] = 0;
    end
    ;
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
    ;
  end
  ;
   /* ------------------ End of Process PA0Q-16201 ---------------*/
  ;
end // end PA0Q-16201

// WRITE SO TO TEMP STORAGE
Function PA0Q-163()
  ;
   /* CALACULATE THE DIFFERENCE BETWEEN THE SO ORDER QUANTITIES AND THE*/
   /* PO ORDER QUANTITIES*/
   /* IF THE SO IS A PULL FROM STOCK, THE SO ADJUSTMENT QUANTITY IS THE*/
   /* PO ORDER QUANTITY * -1.*/
  ;
  PA0QW00.XX5 = 1;
  ;
  if (PA0QW02.XDSCD == "3")
    while (PA0QW00.XX5 <= 40)
      ;
      PA0QW02.PA0QW-SO-ADJ-QTY[XX5] = PA0QW00.PA0QW-TOTAL-PO-ORDER-QTY[XX5] * -1;
      ;
      PA0QW00.XX5 = PA0QW00.XX5 + 1;
      ;
    end
  else
    while (PA0QW00.XX5 <= 40)
      ;
      PA0QW02.PA0QW-SO-ADJ-QTY[XX5] = PA0QW02.PA0QW-SO-ORDER-QTY[XX5] -       PA0QW00.PA0QW-TOTAL-PO-ORDER-QTY[XX5];
      ;
      PA0QW00.XX5 = PA0QW00.XX5 + 1;
      ;
    end
  end
  ;
   /* WRITE INFORMATION TO TEMP STORAGE*/
   /* 1.  SET UP INDEX FOR TEMP STORAGE*/
   /* 2.  MOVE SO INFORMATION FROM PA0QW02 TO TEMP STORAGE*/
   /* 3.  MOVE ALL PO ITEM RECORDS FROM PA0QW03 TO TEMP STORAGE*/
  ;
  PA0QW00.XX6 = PA0QW00.PA0QW-SAVE-INDEX; /* INDEX FOR TEMP STORAGE*/
  PA0QW00.PA0QW-XWHCD-BLANK-PRINTED = "N";
  ;
   /* THE SO INFORMATION AND THE PO INFORMATION MUST BE SEPARTATED*/
   /* BY A BLANK LINE ON THE SCREEN.  ALSO, THE WAREHOUSE PO LINES*/
   /* MUST BE SEPARTED FROM THE OTHER PO ITEMS.  MAKE SURE THAT ONLY*/
   /* ONE BLANK LINE IS PRINTED.*/
  ;
  if (PA0QW00.XX6 != 1
   && PA0QW00.PA0QW-LAST-LINE-BLANK == "N")
    PA0QW00.XX6 = PA0QW00.XX6 + 1; /* INSERT BLANK LINE BEFORE SO INFO*/
    PA0QW00.PA0QW-LAST-LINE-BLANK = "Y";
    if (PA0QW00.XX6 >= 12) /* WRITE PAGE OUT TO TO TEMP STORAGE*/
      ;
      PA0QW00.PA0QW-MAX-PAGES = PA0QW00.PA0QW-MAX-PAGES + 1;
      ;
      PA0QS-31-TA0050-A(); /* ADD PAGE TO TEMP STORAGE*/
      ;
      set PA0QW04 empty;
      ;
      PA0QW00.PA0QW-TEMP-PAGE-PRINTED = "Y";
      ;
      PA0QW00.XX6 = 1;
      ;
    end
  end
  ;
  PA0QW00.XX5 = 1;
  PA0QW00.PA0QW-SO-PO-DIFF = 0;
  ;
  while (PA0QW00.XX5 <= 40)
    PA0QW00.PA0QW-SO-PO-DIFF = PA0QW00.PA0QW-SO-PO-DIFF +    PA0QW02.PA0QW-SO-ADJ-QTY[XX5];
    PA0QW00.XX5 = PA0QW00.XX5 + 1;
  end
  ;
   /* DETERMINE IF '*' SHOULD BE LOADED INTO THE SO PACADDRS FIELD*/
  ;
  if (PA0QW00.PA0QW-SO-PO-DIFF != 0)
    PA0QW02.PACADDRS = "*";
  else
    PA0QW02.PACADDRS = " ";
  end
  ;
   /* IF FACTORY TRANSFER, DO NOT SHOW SO INFORMATION*/
  ;
  if (PA0QW01.YETCD == "FT")
    return;
  end
  ;
  ;
  if (PA0QW01.PA0QW-SHOW-ALL-SO == "N") /* SHOW ONLY SO'S WITH DIFFERENCE*/
    ;
    if (PA0QW00.PA0QW-SO-PO-DIFF != 0)
      ;
      PA0Q-16300(); /* DETERINE IF SO IS A MUSICAL SIZE RUN*/
      ;
      PA0Q-16301(); /* WRITE INFORMATION TO TEMP STORAGE;*/
      ;
    else
        /* PA0344: SHOW CURRENT SALES ORDERS WITH PRIOR POS*/
      if (PA0QW00.PA0QW-SHOW-PRIOR-PO == "Y")
        ;
        PA0Q-16300(); /* DETERINE IF SO IS A MUSICAL SIZE RUN*/
        ;
        PA0Q-16301(); /* WRITE INFORMATION TO TEMP STORAGE;*/
        ;
      end
    end
    ;
  else
    ;
    PA0Q-16300(); /* DETERINE IF SO IS A MUSICAL SIZE RUN*/
    ;
    PA0Q-16301(); /* WRITE INFORMATION TO TEMP STORAGE;*/
    ;
  end
  ;
  ;
  ;
   /* ------------------ End of Process PA0Q-163  ----------------*/
  ;
end // end PA0Q-163

// DETERMINE IF SO IS MSR
Function PA0Q-16300()
   /* ------------------------------------------------------------*/
   /* PA0349: DETERMINE IF THE SO IS A MUSICAL SIZE RUN.*/
   /* ------------------------------------------------------------*/
  ;
  set OP1REC empty;
  OP1REC.OP1PARTN = PA0QW02.OP1PARTN;
  OP1REC.OP1CUOID = PA0QW02.OP1CUOID;
  OP1REC.OP1NORID = PA0QW02.OP1NORID;
  ;
  PA0QS-60-IO0430-S();
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    if (OP1REC.XPACD == "MS")
      PA0QW02.PA0QW-MSR-IND = "M";
    else
      PA0QW02.PA0QW-MSR-IND = " ";
    end
  end
  ;
  ;
end // end PA0Q-16300

// WRITE PAGE TO TEMP STORAGE
Function PA0Q-16301()
  ;
   /* CHECK TO SEE IF THE PAGE SHOULD BE WRITTEN TO TEMP STORAGE.*/
  ;
  ;
  if (PA0QW00.XX6 <= 11)
    PA0QW04.PA0QW-TEMP-STORE-GRP[XX6] = PA0QW02.PA0QW-TEMP-SO-GROUP;
    PA0QW00.PA0QW-LAST-LINE-BLANK = "N";
  end
  ;
  if (PA0QW00.XX6 >= 11)
    ;
    PA0QW00.PA0QW-MAX-PAGES = PA0QW00.PA0QW-MAX-PAGES + 1;
    ;
    PA0QS-31-TA0050-A(); /* ADD PAGE TO TEMP STORAGE*/
    ;
    set PA0QW04 empty;
    ;
    PA0QW00.PA0QW-TEMP-PAGE-PRINTED = "Y";
    ;
    if (PA0QW00.XX6 > 11)
      PA0QW04.PA0QW-TEMP-STORE-GRP[1] = PA0QW02.PA0QW-TEMP-SO-GROUP;
      PA0QW00.PA0QW-LAST-LINE-BLANK = "N";
      PA0QW00.XX6 = 2;
    else
      PA0QW00.XX6 = 1;
    end
    ;
  else
    ;
    PA0QW00.XX6 = PA0QW00.XX6 + 1;
    ;
  end
  ;
  ;
  ;
   /* ------------------ End of Process PA0Q-16301 ---------------*/
  ;
end // end PA0Q-16301

// WRITE PO ITEM TO TEMP STORE
Function PA0Q-164()
  ;
   /* WRITE INFORMATION TO TEMP STORAGE*/
   /* 1.  SET UP INDEX FOR TEMP STORAGE*/
   /* 2.  MOVE SO INFORMATION FROM PA0QW02 TO TEMP STORAGE*/
   /* 3.  MOVE ALL PO ITEM RECORDS FROM PA0QW03 TO TEMP STORAGE*/
  ;
  PA0QW04.PA0QW-TEMP-STORE-GRP[XX6] = PA0QW03.PA0QW-TEMP-PO-GROUP[XX5];
  ;
  PA0QW00.PA0QW-LAST-LINE-BLANK = "N";
  ;
  if (PA0QW00.XX6 >= 11)
    ;
    PA0QW00.PA0QW-MAX-PAGES = PA0QW00.PA0QW-MAX-PAGES + 1;
    ;
    PA0QS-31-TA0050-A(); /* ADD PO TO TEMP STORAGE*/
    ;
    set PA0QW04 empty;
    ;
    PA0QW00.PA0QW-TEMP-PAGE-PRINTED = "Y";
    ;
    PA0QW00.XX6 = 1;
    ;
  else
    ;
    PA0QW00.XX6 = PA0QW00.XX6 + 1;
    ;
  end
  ;
  PA0QW00.XX5 = PA0QW00.XX5 + 1;
  ;
  ;
   /* ------------------ End of Process PA0Q-164  ----------------*/
  ;
end // end PA0Q-164

// Format and display the map
Function PA0Q-200()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0QW00.PA0QW-DISPLAY-MAP2 == "Y")
    PA0Q-205();
    return;
  end
  ;
   /* USERS REQUESTED THAT THE HOLD FLAG BE HIGHLIGHTED IF THE O/A*/
   /* IS ON HOLD.*/
  ;
  if (PA0QW01.PA1HLDFL == "Y")
    set PA0QM001.PA1HLDFL bold, protect;
  end
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y"
   && converseVar.validationMsgNum == 0)
    converseLib.validationFailed(340); /* EUROPEAN O/A ALLOWS INQUIRY ONLY*/
    PAWREC.XXXMODID = "200";
  end
  ;
  if (converseVar.validationMsgNum == 0   /* No errors*/
   || converseVar.validationMsgNum == 50  /* THIS O/A NUMBER DOES NOT EXIST*/
   || converseVar.validationMsgNum == 271 /* WARNING: FACTORY HAS HARD ERROR*/
   || converseVar.validationMsgNum == 223 /* CAN'T SELECT ITEMS IF HEADER CHANGED*/
   || converseVar.validationMsgNum == 249 /* NEGATIVE O/A QTY REQUIRED*/
   || converseVar.validationMsgNum == 250 /* O/A QUANTITY MUST BE NEGATIVE*/
   || converseVar.validationMsgNum == 242 /* PF18 PRESSED - UPDATE SUCCESSFUL*/
   || converseVar.validationMsgNum == 205 /* WARNING: THIS PRODUCT IS CLOSED OUT*/
   || converseVar.validationMsgNum == 283 /* WARNING: O/A WITH SAVE PO ID/STYLE*/
   || converseVar.validationMsgNum == 273 /* (REWORK) MUST INCLUDE FACTORIES...*/
   || converseVar.validationMsgNum == 293 /* NOT AUTHORIZED-SO NEED DT DEFAULTED*/
   || converseVar.validationMsgNum == 340) /* EUROPEAN O/A ALLOWS INQUIRY ONLY*/
    ;
    if (converseVar.validationMsgNum != 250)
      PA0Q-210(); /* FORMAT HEADER INFORMATION*/
    end
    ;
    if (converseVar.validationMsgNum == 249) /* NEGATIVE O/A QTY REQUIRED*/
      set PA0QM001.PA1RQQTY cursor, bold;
    end
    ;
    if (converseVar.validationMsgNum == 223) /* CANT SELECT ITEMS IF HEADER CHANGED*/
      set PA0QM001.PA0QM-SELECT[1] cursor;
    end
    ;
    if (converseVar.validationMsgNum == 273) /* (REWORK) MUST INCLUDE FACTORIES*/
      set PA0QM001.FY1FCTYC[1] cursor;
    end
    ;
    PA0Q-215(); /* FORMAT SELECTION/FACTORY ENTRY*/
    ;
    if (PA0QW00.PA0QW-MAX-PAGES > 0)
      ;
        /* CHECK TO SEE IF PF7 OR PF8 PRESSED.  THIS IS SO THAT EVEN*/
        /* IF THERE ARE ERRORS, PAGING IS ALLOWED.*/
      ;
      if (converseVar.eventKey is pf7
       || converseVar.eventKey is pf8)
        PA0QM001.XXXTSPAG = PA0QW00.PA0QW-CURRENT-TS-PAGE;
      end
      ;
      set PA0QW02 empty; /* SO INFORMATION*/
      set PA0QW09 empty; /* PO ITEM INFORMATION*/
      PA0Q-220(); /* FORMAT DATA IN BODY OF MAP*/
      ;
    else /* PROTECT SELECTION FIELD*/
      ;
      PA0QW00.XX6 = 1;
      while (PA0QW00.XX6 <= 11)
        set PA0QM001.PA0QM-SELECT[XX6] skip, invisible;
        PA0QW00.XX6 = PA0QW00.XX6 + 1;
      end
      ;
    end
    ;
    if (converseVar.validationMsgNum == 242)
      PA0QM001.PA0QM-DISPLAY-OA = PA0QW00.PA0QW-DISPLAY-OA;
    end
    ;
  else
    ;
    PAWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
    ;
    if (converseVar.validationMsgNum == 242 /* PF18: UPDATE SUCCESSFUL - SHOW O/A*/
     /* NUMBER*/
     || PA0QW00.PA0QW-DB2-ERROR == "Y")    
      PA0Q-210(); /* LOAD HEADER INFORMATION*/
      PA0Q-215(); /* FORMAT SELECTION/FACTORY ENTRY*/
      PA0QM001.PA0QM-DISPLAY-OA = PA0QW00.PA0QW-DISPLAY-OA;
    end
    ;
    if (converseVar.validationMsgNum == 207) /* TRADE RESTRICTION WARNING DISPLAYED*/
      PA0QW00.PA0QW-TRADE-REST-WARNING = "Y";
    end
    ;
    if (converseVar.validationMsgNum == 15) /* NO DATA FOUND TO DISPLAY*/
      PA0Q-210(); /* LOAD HEADER INFORMATION*/
      PA0Q-215(); /* FORMAT SELECTION/FACTORY ENTRY*/
    end
    ;
    if (converseVar.validationMsgNum == 222 /* PREVIOUS RECORDS EXIST*/
     && PA0QW00.PA0QW-TYPE-CHANGED == "Y") 
      PA0Q-215(); /* FACTORY ENTRY BOX MAY HAVE TO CHANGE*/
    end
    ;
    if (converseVar.validationMsgNum == 15 /* NO DATA FOUND TO DISPLAY*/
     || PA0QW00.PA0QW-HEADER-ERROR == "Y")
      ;
      set PA0QM001.XXXLITPG skip, invisible;
      set PA0QM001.XXXTSPAG skip, invisible;
      set PA0QM001.XXXLITOF skip, invisible;
      set PA0QM001.TA5TSQIX skip, invisible;
      ;
      sysVar.arrayIndex = 1;
      ;
      while (sysVar.arrayIndex <= 11)
        PA0Q-223(); /* CLEAR OUT BODY OF MAP*/
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end
      ;
    else
      ;
        /* CHECK TO SEE IF PF7 OR PF8 PRESSED.  THIS IS SO THAT EVEN*/
        /* IF THERE ARE ERRORS, PAGING IS ALLOWED.*/
      ;
      if (converseVar.eventKey is pf7
       || converseVar.eventKey is pf8)
        if (converseVar.validationMsgNum != 2 /* NO PREVIOUS PAGES TO DISPLAY*/
         && converseVar.validationMsgNum != 3) /* NO MORE PAGES TO DISPLAY*/
          PA0QM001.XXXTSPAG = PA0QW00.PA0QW-CURRENT-TS-PAGE;
          set PA0QW02 empty; /* SO INFORMATION*/
          set PA0QW09 empty; /* PO INFORMATION*/
          PA0Q-220(); /* FORMAT DATA IN BODY OF MAP*/
        end
      end
      ;
      sysVar.arrayIndex = 1;
      ;
      while (sysVar.arrayIndex <= 11)
        if (PA0QM001.PA0QM-LINE-TYPE[sysVar.arrayIndex] == " ")
          set PA0QM001.PA0QM-SELECT[sysVar.arrayIndex] skip, invisible;
        end
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end
      ;
    end
    ;
  end
  ;
  PA0Q-230(); /* PROTECT FIELDS*/
  ;
  if (PAWREC.XXXMSGNO != 0)
    ;
    PA0QM001.XXXMODID = PAWREC.XXXMODID;
    if (PAWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PAWREC.XXXMSGNO);
    end /* Message number*/
    PAWREC.XXXMSGNO = 0;
    set PA0QM001 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
   /* Look for style on components table.*/
   /* If found, highlight fields and show warning*/
  ;
  if (PA0QM001.PA0QM-PO-ID-YY > "   " && 
  PA0QM001.PA0QM-PO-ID-MM > "   " && 
  PA0QM001.PA0QM-PO-ID-BUY-MM > "   " && 
  PA0QM001.SY1STNBR > "  ")
    PA0Q-20001();
  end
  ;
  ;
  converse PA0QM001 ;
  ;
   /* IF EUROPEAN O/A, SET FLAG.  NOTE, THAT THE O/A NUMBER COULD HAVE*/
   /* BEEN CHANGED AFTER CONVERSE.*/
  ;
  if (PA0QM001.PA1OANBR > 199999
   && PA0QM001.PA1OANBR < 300000) /* EUROPEAN O/A RANGE*/
    PA0QW00.PA0QW-EURD-OA-INQ-ONLY = "Y";
  else
    PA0QW00.PA0QW-EURD-OA-INQ-ONLY = "N";
  end
  ;
  PAWREC.XXXMODID = " "; /* Module id*/
  PA0QW00.XXXMSGNO = 0; /* Reset message number*/
  ;
  COMMAREA.CATOAP = PA0QM001.CATOAP; /* To application*/
  COMMAREA.CAITEM = PA0QM001.CAITEM; /* Application data*/
  ;
   /* ------------------ end of process PA0Q-200 -----------------*/
  ;
end // end PA0Q-200

// Format the data on the map
Function PA0Q-20001()
    /* Look for style on component program table;*/
  ;
  VCMPPG01.XGPCD = "02"; /* gpc*/
  VCMPPG01.SY1STNBR = PA0QW01.SY1STNBR; /* Style number*/
  VCMPPG01.SY2CLRID = PA0QW01.SY2CLRID; /* Color identification*/
  VCMPPG01.XDMCD = PA0QW01.XDMCD; /* Dimension code*/
  VCMPPG01.PC-PO-ID-MO-RNG = PA0QW01.PA0QW-PC3POIDT; /* buy month*/
  ;
  if (PA0QM001.PA0QM-PO-ID-FCTY > "    ")
    VCMPPG01.FY1FCTYC = PA0QM001.PA0QM-PO-ID-FCTY; /* factory code*/
    PA0QS-VCMPPG01-S();
    if (SQLCA.VAGen_SQLCODE == 0)
      set PA0QM001.SY1STNBR bold;
      set PA0QM001.SY2CLRID bold;
      set PA0QM001.XDMCD bold;
      set PA0QM001.PA0QM-PO-ID-FCTY bold;
      PA0QM-01-COMP-PGM-MSG = "COMPONENT    ";
    end
  end
  ;
  PA0QW00.XX10 = 1;
  while (PA0QW00.XX10 < 5)
    if (PA0QM001.FY1FCTYC[XX10] > "   ") /* factory code*/
      VCMPPG01.FY1FCTYC = PA0QM001.FY1FCTYC[XX10]; /* factory code*/
      PA0QS-VCMPPG01-S();
      if (SQLCA.VAGen_SQLCODE == 0)
        set PA0QM001.SY1STNBR bold;
        set PA0QM001.SY2CLRID bold;
        set PA0QM001.XDMCD bold;
        set PA0QM001.FY1FCTYC[XX10] bold;
        PA0QM-01-COMP-PGM-MSG = "COMPONENT    ";
      end
    end
    PA0QW00.XX10 = PA0QW00.XX10 + 1;
  end
  ;
  PA0QW00.XX10 = 1;
  while (PA0QW00.XX10 < 12)
    if (PA0QM-FY-FCTY-CD[XX10] > "  ")
      VCMPPG01.FY1FCTYC = PA0QM-FY-FCTY-CD[XX10]; /* factory code*/
      PA0QS-VCMPPG01-S();
      if (SQLCA.VAGen_SQLCODE == 0)
        set PA0QM001.SY1STNBR bold;
        set PA0QM001.SY2CLRID bold;
        set PA0QM001.XDMCD bold;
        set PA0QM-FY-FCTY-CD[XX10] bold, skip;
        PA0QM-01-COMP-PGM-MSG = "COMPONENT    ";
      end
    end
    PA0QW00.XX10 = PA0QW00.XX10 + 1;
  end
  ;
end // end PA0Q-20001

// Format and display MAP2
Function PA0Q-205()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
  
  ;
  PA0QM002.FB8BUYDT = PAWREC.PAWBUYYM;
  PA0QM002.XXXCURDT = VGVar.currentShortGregorianDate;
  ;
  converse PA0QM002 ;
  ;
  PAWREC.XXXMODID = " "; /* Module id*/
  PA0QW00.XXXMSGNO = 0; /* Reset message number*/
  ;
  COMMAREA.CATOAP = PA0QM002.CATOAP; /* To application*/
  COMMAREA.CAITEM = PA0QM002.CAITEM; /* Application data*/
  ;
   /* ------------------ end of process PA0Q-205 -----------------*/
  ;
end // end PA0Q-205

// FORMAT DATA IN HEADER
Function PA0Q-210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set PA0QM001 initial; /* M001 input/output area*/
  ;
   /* ------------------------------------------------------------*/
   /* Format the data in the header portion of the map*/
   /* ------------------------------------------------------------*/
  ;
  PA0QM001.XXXCURDT = VGVar.currentShortGregorianDate; /* current system date*/
  PA0QM001.PAWBUYYM = PAWREC.PAWBUYYM; /* Current buy date yymm*/
  ;
  PA0QM001.XXXTSPAG = PA0QW00.PA0QW-CURRENT-TS-PAGE; /* FROM PAGE*/
  PA0QM001.TA5TSQIX = PA0QW00.PA0QW-MAX-PAGES; /* TO PAGE*/
  ;
  if (PA0QW00.PA0QW-CURRENT-TS-PAGE == 0
   && PA0QW00.PA0QW-MAX-PAGES == 0)
    set PA0QM001.XXXLITPG skip, invisible;
    set PA0QM001.XXXTSPAG skip, invisible;
    set PA0QM001.XXXLITOF skip, invisible;
    set PA0QM001.TA5TSQIX skip, invisible;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the data HEADER INFORMATION*/
   /* ------------------------------------------------------------*/
  PA0QM001.PA1OANBR = PA0QW00.PA1OANBR;
  ;
  if (converseVar.validationMsgNum == 50) /* O/A NUMBER DOES NOT EXIST*/
    set PA0QM001.PA1OANBR cursor, bold;
    PA0QW00.PA1OANBR = 0;
  end
  ;
  PA0QM001.PA-AFRGT-RQT-ID = PA0QW01.PA-AFRGT-RQT-ID;
  PA0QM001.PA1OATXT = PA0QW01.PA1OATXT;
  PA0QM001.YESCD = PA0QW01.YESCD;
  PA0QM001.YESSDESC = PA0QW01.YESSDESC;
  PA0QM001.PA1HLDFL = PA0QW01.PA1HLDFL;
  ;
   /* USERS REQUESTED THAT THE HOLD FLAG BE HIGHLIGHTED IF THE O/A*/
   /* IS ON HOLD.*/
  ;
  if (PA0QW01.PA1HLDFL == "Y")
    set PA0QM001.PA1HLDFL bold, protect;
  end
  ;
  PA0QM001.YETCD = PA0QW01.YETCD;
  ;
   /* PA274: LEAVE THE PO TYPE EMPTY - DO NOT DEFAULT IT.*/
   /* IF PA0QW01.PC4ORTYP EQ '  ';*/
      /* MOVE 'FT' TO PA0QM001.PC4ORTYP;*/
      /* MOVE 'FT' TO PA0QW01.PC4ORTYP;*/
   /* ELSE;*/
  PA0QM001.PC4ORTYP = PA0QW01.PC4ORTYP;
   /* END;*/
  ;
   /* IF THE O/A TYPE IS AN OVER RUN, DON'T ALLOW THE OVER RUN PO*/
   /* TYPE TO BE CHANGED*/
  ;
  if (PA0QM001.YETCD == "OR"
   || PA0QM001.YETCD == "NO")
    set PA0QM001.PC4ORTYP skip;
  end
  ;
  PA0QM001.PA0QM-OP-CUST-NEED1-MM = PA0QW01.PA0QW-OP-CUST-NEED1-MM;
  PA0QM001.PA0QM-OP-CUST-NEED1-YY = PA0QW01.PA0QW-OP-CUST-NEED1-YY;
  ;
   /* PA0344: IF THE THRU CUSTOMER NEED DATE IS EMPTY, DEFAULT IT TO THE*/
   /* FROM CUSTOMER NEED DATE.*/
  ;
  if (PA0QW01.PA0QW-OP-CUST-NEED2-DT == 0)
    PA0QW01.PA0QW-OP-CUST-NEED2-DT = PA0QW01.PA0QW-OP-CUST-NEED1-DT;
  end
  ;
  PA0QM001.PA0QM-OP-CUST-NEED2-MM = PA0QW01.PA0QW-OP-CUST-NEED2-MM;
  PA0QM001.PA0QM-OP-CUST-NEED2-YY = PA0QW01.PA0QW-OP-CUST-NEED2-YY;
  ;
  PA0QM001.SY1STNBR = PA0QW01.SY1STNBR;
  PA0QM001.SY2CLRID = PA0QW01.SY2CLRID;
  PA0QM001.XDMCD = PA0QW01.XDMCD;
   /* MOVE PA0QW01.SY1SSTNM TO PA0QM001.SY1SSTNM;*/
  PA0QM001.SY1SSTNM = PG2REC.SY1SSTNM;
  ;
  if (PA0QM001.PA1OANBR > 0)
    set PA0QM001.SY1STNBR protect;
    set PA0QM001.SY2CLRID protect;
    set PA0QM001.XDMCD protect;
  end
  ;
  if (PA0QW01.YSMXDV == "  "
   && PA0QW00.PA0QW-DB2-ERROR == "N")
    PA0Q-21001();
  else
    PA0QM001.YSMXDV = PA0QW01.YSMXDV;
  end
  ;
   /* FORMAT PO ID AND ALT PO ID*/
  ;
  if (PA0QW01.PA0QW-PO-ID-YY == 00
   && PA0QW01.PA0QW-PO-ID-MM == 00
   && PA0QW01.PA0QW-PO-ID-BUY-MM == "00")
    PA0QM001.PA0QM-PO-ID-YY = "  ";
    PA0QM001.PA0QM-PO-ID-MM = "  ";
    PA0QM001.PA0QM-PO-ID-BUY-MM = "  ";
  else
    PA0QM001.PA0QM-PO-ID-YY = PA0QW01.PA0QW-PO-ID-YY;
    PA0QM001.PA0QM-PO-ID-MM = PA0QW01.PA0QW-PO-ID-MM;
    PA0QM001.PA0QM-PO-ID-BUY-MM = PA0QW01.PA0QW-PO-ID-BUY-MM;
  end
  ;
   /* IF PA0QW01.PA0QW-ALT-PO-ID-YY EQ '00';*/
   /* AND PA0QW01.PA0QW-ALT-PO-ID-MM EQ '00';*/
   /* AND PA0QW01.PA0QW-ALT-PO-ID-BUY-MM EQ '00';*/
   /* MOVE '  ' TO PA0QM001.PA0QM-ALT-PO-ID-YY;*/
   /* MOVE '  ' TO PA0QM001.PA0QM-ALT-PO-ID-MM;*/
   /* MOVE '  ' TO PA0QM001.PA0QM-ALT-PO-ID-BUY-MM;*/
   /* ELSE;*/
   /* MOVE PA0QW01.PA0QW-ALT-PO-ID-YY TO PA0QM001.PA0QM-ALT-PO-ID-YY;*/
   /* MOVE PA0QW01.PA0QW-ALT-PO-ID-MM TO PA0QM001.PA0QM-ALT-PO-ID-MM;*/
   /* MOVE PA0QW01.PA0QW-ALT-PO-ID-BUY-MM TO*/
   /* PA0QM001.PA0QM-ALT-PO-ID-BUY-MM;*/
   /* END;*/
  ;
  PA0QM001.PA0QM-PO-ID-FCTY = PA0QW01.PA0QW-PO-ID-FCTY;
   /* MOVE PA0QW01.PA0QW-ALT-PO-ID-FCTY TO PA0QM001.PA0QM-ALT-PO-ID-FCTY;*/
  ;
  PA0QM001.PC2CUXID = PA0QW01.PC2CUXID;
  PA0QM001.KUCCOID = PA0QW01.KUCCOID;
  PA0QM001.KUMSTRID = PA0QW01.KUMSTRID;
  PA0QM001.XNXCD = PA0QW01.XNXCD;
  ;
  if (PA0QW01.PA0QW-SHOW-ALL-SO == " ")
    PA0QM001.PA0QM-SHOW-ALL-SO = "N";
    PA0QW01.PA0QW-SHOW-ALL-SO = "N";
  else
    PA0QM001.PA0QM-SHOW-ALL-SO = PA0QW01.PA0QW-SHOW-ALL-SO;
  end
  ;
  PA0QM001.PA1RQQTY = PA0QW01.PA1RQQTY;
  ;
  if (PA0QW01.YETCD == "ST"
   && PA0QW01.YSMXDV == "20")
    PA0QM001.PA4FCTQT[1] = PA0QW01.PA4FCTQT[1];
    PA0QM001.PA1RQQTY = PA0QW01.PA4FCTQT[1];
  end
   /* ------------------ End of Process PA0Q-210 -----------------*/
  ;
end // end PA0Q-210

// VALIDATE USER DIVISION DOM/NIL
Function PA0Q-21001()
  ;
   /* ------------------------------------------------------------*/
   /* verify userid sum division group code*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.XDVCD == " ") /* verify xdvcd assigned to user*/
    PAWREC.XXXMODID = "210"; /* Module identification*/
    converseLib.validationFailed(154); /* indicate missing or invalid*/
  else
    ;
    PA0QS-09-IO2640-S1(); /* select set dcorp.vsumcd01*/
    ;
    PA0QS-10-IO2640-N1(); /* fetch dcorp.vsumcd01 row*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100
     || YSMREC.XXXSTAT != "A")
      ;
      PAWREC.XXXMODID = "210"; /* Module identification*/
      converseLib.validationFailed(154); /* indicate missing or invalid*/
      ;
    else
      if (YSMREC.YSMSUMCD != "10"
       && YSMREC.YSMSUMCD != "20")
        ;
        PAWREC.XXXMODID = "210"; /* Module identification*/
        converseLib.validationFailed(154); /* INDICATE MISSING OR INVALID*/
        ;
      else
        PA0QW01.YSMXDV = YSMREC.YSMSUMCD;
        PA0QM001.YSMXDV = YSMREC.YSMSUMCD;
      end
    end
    ;
    PA0QS-11-IO2640-C1(); /* close dcorp.vsumcd01 set*/
    ;
  end
  ;
  if (converseVar.validationMsgNum == 154) /* user division invalid*/
    COMMAREA.CATOAP = "PA0M";
    XSPAS01(); /* exit to menu*/
  end
  ;
  ;
end // end PA0Q-21001

// FORMAT SELECTION/FACTORY ENTRY
Function PA0Q-215()
   /* ------------------------------------------------------------*/
   /* Format the FACTORY ENTRY BOX INFORMATION*/
   /* ------------------------------------------------------------*/
  ;
   /* PA1122: Create new stock transfer type OA*/
  if (PA0QW01.YETCD == "ST")
    WEU0100.WEU0100-EQUIP-PROD-FL = "N";
    WEU0100.WEU0100-CALLING-APPL = "PA0Q";
    ;
    WEU0100.XGPCD = "02";
    WEU0100.SY1STNBR = PA0QM001.SY1STNBR;
    WEU0100.SY2CLRID = PA0QM001.SY2CLRID;
    WEU0100.XDMCD = PA0QM001.XDMCD;
    ;
    PA0QS-EU0100-SU();
    ;
    if (WEU0100-EQUIP-PROD-FL == "Y")
      PA0QM001.FY1FCTYC[1] = "EAA";
    else
      PA0QM001.FY1FCTYC[1] = "AA";
    end
    ;
    PA0QM001.PA4FCTQT[1] = PA0QM001.PA1RQQTY;
    PA0QW01.PA4FCTQT[1] = PA0QM001.PA1RQQTY;
    ;
    set PA0QM001.FY1FCTYC[1] protect;
    ;
    if (PA0QM001.YSMXDV == "10")
      set PA0QM001.PA4FCTQT[1] protect;
    else
      set PA0QM001.PA4FCTQT[1] normal;
  /* MOVE PA0QM001.PA4FCTQT(1) TO PA0QM001.PA1RQQTY;*/
  /* MOVE PA0QM001.PA1RQQTY TO PA0QW01.PA4FCTQT(1);*/
    end
    ;
    PA0QW00.XX3 = 2;
    while (PA0QW00.XX3 <= 4)
      PA0QM001.PA4FCTQT[XX3] = " ";
      PA0QM001.FY1FCTYC[XX3] = " ";
      set PA0QM001.PA4FCTQT[XX3] protect;
      set PA0QM001.FY1FCTYC[XX3] protect;
      PA0QW00.XX3 = PA0QW00.XX3 + 1;
    end
    return;
  end
  ;
  if (PA0QW01.YETCD == "DA"
   || PA0QW01.YETCD == "PR"
   || PA0QW01.YETCD == "EO"
   || PA0QW01.YETCD == "OR")
    PA0QW00.PA0QW-DISPLAY-FACTORY-BOX = "Y";
  end
  ;
  if (PA0QW01.FY1FCTYC[1] != " "
   || PA0QW00.PA0QW-DISPLAY-FACTORY-BOX == "Y"
   || PA0QW00.PA0QW-SELECT-MODIFIED == "Y")
    PA0QW00.PA0QW-DISPLAY-FACTORY-BOX = "Y";
    set PA0QM001.PA0QM-FCTY-QTY-LABEL skip;
    ;
    PA0QW00.XX3 = 1;
    while (PA0QW00.XX3 <= 4)
         /* SET PA0QM001.PC3POIDT(XX3) NORMAL;*/
      ;
      if (converseVar.validationMsgNum == 271 /* HARD ERROR ON FACTORY*/
       && PA0QW01.PA0QW-HARD-ERROR[XX3] == "Y")
        if (PA0QW00.PA0QW-HARD-ERROR-WARNING == "N")
          set PA0QM001.FY1FCTYC[XX3] cursor, bold;
          PA0QW00.PA0QW-HARD-ERROR-WARNING = "Y";
        else
               /* NEXT SENTENCE*/
        end
      else
        set PA0QM001.FY1FCTYC[XX3] normal;
      end
      ;
      if (PA0QW00.PABAFYQT == "N") /* CAN'T MODIFY FACTORY QUANTITIES*/
        set PA0QM001.PA4FCTQT[XX3] skip, invisible;
      else
        set PA0QM001.PA4FCTQT[XX3] normal;
      end
      PA0QW00.XX3 = PA0QW00.XX3 + 1;
    end
  end
  ;
  PA0QW00.XX3 = 1;
  ;
  while (PA0QW00.XX3 <= 4)
    /* MOVE PA0QW01.PA0QW-PC3POIDT TO PA0QM001.PC3POIDT(XX3);*/
    /* MOVE PA0QW01.PC3POIDT(XX3) TO PA0QM001.PC3POIDT(XX3);*/
    PA0QM001.FY1FCTYC[XX3] = PA0QW01.FY1FCTYC[XX3];
    PA0QM001.PA4FCTQT[XX3] = PA0QW01.PA4FCTQT[XX3];
    PA0QW00.XX3 = PA0QW00.XX3 + 1;
  end
  ;
  if (converseVar.validationMsgNum != 0)
    if (PA0QW01.YETCD == "DA"
     && converseVar.validationMsgNum == 15)
         /* NEXT SENTENCE*/
    else
      return;
    end
  end
  ;
   /* PA281: DEFAULT THE CURSOR TO SELECTION FIELD WHEN PAGING.*/
  ;
  if (PA0QM001.YETCD == "ND")
    if (converseVar.eventKey is pf8)
      set PA0QM001.PA0QM-SELECT[1] cursor;
      return;
    end
    if (converseVar.eventKey is pf7
     && PA0QM001.XXXTSPAG >= 2)
      set PA0QM001.PA0QM-SELECT[1] cursor;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF SELECTION MADE, PLACE CURSOR IN FACTORY ENTRY BOX*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0QW00.PA0QW-SELECT-MODIFIED == "N")
    if (PA0QW00.PA0QW-DISPLAY-FACTORY-BOX == "Y"
     || PA0QW00.PA0QW-KEY-CHANGED == "Y")
      ;
       /* 02/07/92: PA259 - PLACE CURSOR ON O/A TEXT FIELD*/
       /* SET PA0QM001.PA0QM-SELECT(1) CURSOR;*/
       /* FOR NIL - IF THE O/A DESCRIPTION IS EMPTY, DEFAULT THE CURSOR*/
       /* TO THE O/A TEXT FIELD.  IF THE O/A DESCRIPTION IS THERE,*/
       /* DEFAULT THE CURSOR TO FIRST SELECTION FIELD.*/
      ;
      if (PA0QM001.YSMXDV == "20"
       && PA0QM001.PA1OATXT != " ")
        set PA0QM001.PA0QM-SELECT[1] cursor;
      end
      ;
      return;
      ;
    end
    return;
  end
  ;
   /* F PA0QW00.PA0QW-SELECT-MODIFIED EQ 'Y';*/
  if (PA0QW00.PA0QW-DISPLAY-FACTORY-BOX == "Y")
    ;
    PA0QW00.XX6 = 1;
    ;
      /* FIND NEXT EMPTY FACTORY LINE*/
    ;
    while (PA0QW00.XX6 <= 4
     && PA0QM001.FY1FCTYC[XX6] != " ")
      if (PA0QW00.PABAFYQT == "Y" /* IF FACTORY QUANTITY REQUIRED*/
       && PA0QM001.PA4FCTQT[XX6] == 0)
        set PA0QM001.PA4FCTQT[XX6] cursor;
        return;
      end
      PA0QW00.XX6 = PA0QW00.XX6 + 1;
    end
    ;
    if (converseVar.eventKey is pf3) /* RETURN FROM SIZE DETAIL*/
      return;
    end
    ;
    if (PA0QW00.XX6 > 4)
      if (PA0QM001.PA4FCTQT[1] == 0
       && PA0QW00.PABAFYQT == "Y")
        set PA0QM001.PA4FCTQT[1] cursor;
      else
            /* SET PA0QM001.PC3POIDT(1) CURSOR;*/
        set PA0QM001.FY1FCTYC[1] cursor;
      end
    else
         /* SET PA0QM001.PC3POIDT(XX6) CURSOR;*/
      set PA0QM001.FY1FCTYC[XX6] cursor;
    end
    ;
  end
  ;
   /* ------------------ End of Process PA0Q-215 -----------------*/
  ;
end // end PA0Q-215

// FORMAT DATA IN BODY OF MAP
Function PA0Q-220()
   /* ------------------------------------------------------------*/
   /* Format the data in the body of the map*/
   /* ------------------------------------------------------------*/
  ;
   /* RETRIEVE RECORDS FROM TEMP STORAGE*/
  ;
  if (PA0QW00.PA0QW-DB2-ERROR == "Y")
    return;
  end
  ;
  set PA0QW04 empty; /* CLEAR OUT TEMP STORAGE WORK RECORD FIRST*/
  ;
  PA0QS-32-TA0050-R(); /* READ 1 PAGE OF TEMP STORAGE*/
  ;
  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 11)
    ;
    PA0QM001.PA0QM-SELECT[sysVar.arrayIndex] = PA0QW04.PA0QW-SELECT[sysVar.arrayIndex];
    PA0QW01.PA0QW-SELECT[sysVar.arrayIndex] = PA0QW04.PA0QW-SELECT[sysVar.arrayIndex];
    ;
    if (PA0QW04.PA0QW-RECORD-TYPE[sysVar.arrayIndex] == "SO") /* SO RECORD*/
      PA0QW02.PA0QW-TEMP-SO-GROUP = PA0QW04.PA0QW-TEMP-STORE-GRP[sysVar.arrayIndex];
      ;
      PA0Q-221(); /* LOAD SO INFORMATION TO THE MAP*/
      ;
    else
      ;
      if (PA0QW04.PA0QW-RECORD-TYPE[sysVar.arrayIndex] == "PO")
        PA0QW09.PA0QW-TEMP-PO-GROUP = PA0QW04.PA0QW-TEMP-STORE-GRP[sysVar.arrayIndex];
        ;
        PA0Q-222(); /* LOAD PO INFORMATION TO THE MAP*/
        ;
      else
        ;
        PA0Q-223(); /* INSERT BLANK LINE*/
        ;
      end
      ;
    end
    ;
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
    ;
  end
  ;
  ;
   /* ------------------ End of Process PA0q-220 -----------------*/
  ;
end // end PA0Q-220

// LOAD SO INFO TO MAP
Function PA0Q-221()
   /* **********************************************************************/
   /* MOVE SO INFORMATION TO MAP*/
   /* **********************************************************************/
  ;
  PA0QM001.PA0QM-LINE-TYPE[sysVar.arrayIndex] = PA0QW02.PA0QW-RECORD-TYPE;
  PA0QW00.PA0QW-OP1CUOID-TEMP = PA0QW02.OP1CUOID;
  PA0QM001.PA0QM-SO-PO-NBR[sysVar.arrayIndex] = PA0QW00.PA0QW-OP1CUOID-TEMP;
  ;
  PA0QW07.PA0QW-OP1NORID-NNN = PA0QW02.OP1NORID;
  PA0QM001.PA0QM-FY-FCTY-CD[sysVar.arrayIndex] = PA0QW07.PA0QW-OP1NORID-NNN;
  ;
  PA0QM001.PA0QM-CUST-XREF[sysVar.arrayIndex] = PA0QW02.PC2CUXID;
  ;
  PA0QW07.PA0QW-DATE-CCYYMMDD = PA0QW02.OP1CUNDT;
  PA0QW07.PA0QW-MM = PA0QW07.PA0QW-DATE-MM;
  PA0QW07.PA0QW-DD = PA0QW07.PA0QW-DATE-DD;
  PA0QW07.PA0QW-YY = PA0QW07.PA0QW-DATE-YY;
  PA0QM001.PA0QM-NEED-DT-RTA[sysVar.arrayIndex] = PA0QW07.PA0QW-MMDDYY;
  ;
  PA0QM001.PA0QM-STYLE-ETS[sysVar.arrayIndex] = PA0QW02.SY1STNBR;
  ;
   /* FORMAT THE PA0QM001.PA0QM-COLOR-MODE FIELD*/
  ;
  set PA0QW12 empty;
  PA0QW12.PA0QW-SY2CLRID = PA0QW02.SY2CLRID;
  PA0QW12.PA0QW-SPACE = " ";
  PA0QW12.PA0QW-XDMCD = PA0QW02.XDMCD;
  PA0QM-COLOR-MODE[sysVar.arrayIndex] = PA0QW12.PA0QW-COLOR-MODE;
  ;
  PA0QM001.PA0QM-WHSE[sysVar.arrayIndex] = PA0QW02.XWHCD;
  PA0QM001.PA0QM-XDS-DIR-SHIP-CD[sysVar.arrayIndex] = PA0QW02.XDSCD;
  PA0QM001.PA0QM-MSR-IND[sysVar.arrayIndex] = PA0QW02.PA0QW-MSR-IND;
  PA0QM001.PA0QM-BALANCE-TO-SHIP[sysVar.arrayIndex] = " ";
  ;
   /* DETERMINE TOTAL SO ORDER QUANTITY*/
  ;
  PA0QW00.PA0QW-TOTAL-ORDER-QTY = 0;
  ;
  PA0QW00.XX7 = 1;
  ;
  while (PA0QW00.XX7 <= 40)
    ;
    PA0QW00.PA0QW-TOTAL-ORDER-QTY = PA0QW00.PA0QW-TOTAL-ORDER-QTY + PA0QW02.PA0QW-SO-ORDER-QTY[XX7];
    ;
    PA0QW00.XX7 = PA0QW00.XX7 + 1;
    ;
  end
  ;
  PA0QM001.PA0QM-ON-ORDER-QTY[sysVar.arrayIndex] = PA0QW00.PA0QW-TOTAL-ORDER-QTY;
  ;
   /* DETERMINE TOTAL SO ADJUSTMENT QUANTITY*/
  ;
  PA0QW00.PA0QW-TOTAL-ADJ-QTY = 0;
  ;
  PA0QW00.XX7 = 1;
  ;
  while (PA0QW00.XX7 <= 40)
    ;
    PA0QW00.PA0QW-TOTAL-ADJ-QTY = PA0QW00.PA0QW-TOTAL-ADJ-QTY + PA0QW02.PA0QW-SO-ADJ-QTY[XX7];
    ;
    PA0QW00.XX7 = PA0QW00.XX7 + 1;
    ;
  end
  ;
  PA0QM001.PA0QM-SO-PO-DIFF[sysVar.arrayIndex] = PA0QW02.PACADDRS;
  ;
  PA0QM001.PA0QM-ADJ-QTY[sysVar.arrayIndex] = PA0QW00.PA0QW-TOTAL-ADJ-QTY;
  ;
   /* ------------------ End of Process PA0q-221 -----------------*/
  ;
end // end PA0Q-221

// LOAD PO INFO TO MAP
Function PA0Q-222()
   /* **********************************************************************/
   /* MOVE PO INFORMATION TO MAP - THE TEMP STORAGE PO INFORMATION HAS*/
   /* BEEN LOADED INTO THE WORKING STORAGE RECORD PA0QW09.*/
   /* **********************************************************************/
  ;
  PA0QM001.PA0QM-LINE-TYPE[sysVar.arrayIndex] = PA0QW09.PA0QW-RECORD-TYPE;
  ;
   /* PA0344: IF PREVIOUS PO IS BEING DISPLAYED, PROTECT SELECTION*/
   /* FIELD.*/
  ;
  if (PA0QW09.PC3POIDT != PA0QW01.PA0QW-PC3POIDT)
    set PA0QM001.PA0QM-SELECT[sysVar.arrayIndex] skip, invisible;
  end
  ;
  PA0QW07.PA0QW-PC3POIDT = PA0QW09.PC3POIDT;
  PA0QW07.PA0QW-MAP-PO-ID-YY = PA0QW07.PA0QW-PC3POIDT-YY;
  PA0QW07.PA0QW-MAP-PO-ID-MM = PA0QW07.PA0QW-PC3POIDT-MM;
  PA0QW07.PA0QW-MAP-PO-ID-DD = PA0QW07.PA0QW-PC3POIDT-DD;
  PA0QM001.PA0QM-SO-PO-NBR[sysVar.arrayIndex] = PA0QW07.PA0QW-MAP-PO-ID;
  ;
  PA0QM001.PA0QM-FY-FCTY-CD[sysVar.arrayIndex] = PA0QW09.FY1FCTYC;
  ;
  PA0QM001.PA0QM-CUST-XREF[sysVar.arrayIndex] = PA0QW09.PC2CUXID;
  PA0QM001.PA0QM-WHSE[sysVar.arrayIndex] = PA0QW09.XWHCD;
  ;
  PA0QW07.PA0QW-DATE-CCYYMMDD = PA0QW09.PC6RTADT;
  PA0QW07.PA0QW-MM = PA0QW07.PA0QW-DATE-MM;
  PA0QW07.PA0QW-DD = PA0QW07.PA0QW-DATE-DD;
  PA0QW07.PA0QW-YY = PA0QW07.PA0QW-DATE-YY;
  PA0QM001.PA0QM-NEED-DT-RTA[sysVar.arrayIndex] = PA0QW07.PA0QW-MMDDYY;
  ;
  if (PA0QW09.PC6ETSDT == 0)
    PA0QM001.PA0QM-STYLE-ETS[sysVar.arrayIndex] = " ";
  else
    PA0QW07.PA0QW-DATE-CCYYMMDD = PA0QW09.PC6ETSDT;
    PA0QW07.PA0QW-MM = PA0QW07.PA0QW-DATE-MM;
    PA0QW07.PA0QW-DD = PA0QW07.PA0QW-DATE-DD;
    PA0QW07.PA0QW-YY = PA0QW07.PA0QW-DATE-YY;
    PA0QM001.PA0QM-STYLE-ETS[sysVar.arrayIndex] = PA0QW07.PA0QW-MMDDYY;
  end
  ;
   /* FORMAT THE PA0QM001.PA0QM-COLOR-MODE FIELD.  IF THE MODE IS*/
   /* AIR FREIGHT SHOW THE AIR FREIGHT NUMBER.*/
  ;
  set PA0QW13 empty;
  PA0QW13.PA0QW-YMTCD = PA0QW09.YMTCD;
  if (PA0QW09.YMTCD == "AF")
    PA0QW13.PA0QW-DASH = "-";
    PA0QW13.PA0QW-PA-AFRGT-RQT-ID = PA0QW09.PA-AFRGT-RQT-ID;
  else
    PA0QW13.PA0QW-AF-INFO = " ";
  end
  PA0QM001.PA0QM-COLOR-MODE[sysVar.arrayIndex] = PA0QW13.PA0QW-COLOR-MODE;
  ;
  PA0QM001.PA0QM-XDS-DIR-SHIP-CD[sysVar.arrayIndex] = PA0QW09.XDSCD;
  PA0QM001.PA0QM-MSR-IND[sysVar.arrayIndex] = PA0QW09.PA0QW-MSR-IND;
  ;
   /* DETERMINE TOTAL BALANCE TO SHIP QUANTITY*/
  ;
  PA0QW00.PA0QW-BALANCE-TO-SHIP-GRP = PA0QW09.PA0QW-BALANCE-TO-SHIP-GRP;
  ;
  PA0QW00.PA0QW-TOTAL-BTS-QTY = 0;
  ;
  PA0QW00.XX8 = 1;
  ;
  while (PA0QW00.XX8 <= 40)
    ;
    PA0QW00.PA0QW-TOTAL-BTS-QTY = PA0QW00.PA0QW-TOTAL-BTS-QTY + PA0QW00.PA0QW-BALANCE-TO-SHIP[XX8];
    ;
    PA0QW00.XX8 = PA0QW00.XX8 + 1;
    ;
  end
  ;
  PA0QM001.PA0QM-BALANCE-TO-SHIP[sysVar.arrayIndex] = PA0QW00.PA0QW-TOTAL-BTS-QTY;
  ;
  ;
   /* DETERMINE TOTAL PO ORDER QUANTITY*/
  ;
  PA0QW00.PA0QW-PO-ORDER-QTY-GRP = PA0QW09.PA0QW-PO-ORDER-QTY-GRP;
  ;
  PA0QW00.PA0QW-TOTAL-ORDER-QTY = 0;
  ;
  PA0QW00.XX8 = 1;
  ;
  while (PA0QW00.XX8 <= 40)
    ;
    PA0QW00.PA0QW-TOTAL-ORDER-QTY = PA0QW00.PA0QW-TOTAL-ORDER-QTY + PA0QW00.PA0QW-PO-ORDER-QTY[XX8];
    ;
    PA0QW00.XX8 = PA0QW00.XX8 + 1;
    ;
  end
  ;
  PA0QM001.PA0QM-ON-ORDER-QTY[sysVar.arrayIndex] = PA0QW00.PA0QW-TOTAL-ORDER-QTY;
  ;
  PA0QM001.PA0QM-SO-PO-DIFF[sysVar.arrayIndex] = " ";
  ;
  PA0QM001.PA0QM-ADJ-QTY[sysVar.arrayIndex] = " ";
  ;
  ;
   /* ------------------ End of Process PA0Q-222 -----------------*/
  ;
end // end PA0Q-222

// LOAD PO INFO TO MAP
Function PA0Q-223()
   /* **********************************************************************/
   /* INSERT BLANK LINE ON THE MAP.*/
   /* **********************************************************************/
  ;
   /* SET PA0QM001.PA0QM-SELECT(EZETST) PROTECT;*/
  set PA0QM001.PA0QM-SELECT[sysVar.arrayIndex] skip, invisible;
  ;
  PA0QM001.PA0QM-LINE-TYPE[sysVar.arrayIndex] = "  ";
  PA0QM001.PA0QM-SO-PO-NBR[sysVar.arrayIndex] = " ";
  PA0QM001.PA0QM-FY-FCTY-CD[sysVar.arrayIndex] = "    ";
  PA0QM001.PA0QM-CUST-XREF[sysVar.arrayIndex] = "     ";
  PA0QM001.PA0QM-WHSE[sysVar.arrayIndex] = "  ";
  PA0QM001.PA0QM-NEED-DT-RTA[sysVar.arrayIndex] = " ";
  PA0QM001.PA0QM-STYLE-ETS[sysVar.arrayIndex] = " ";
  PA0QM001.PA0QM-COLOR-MODE[sysVar.arrayIndex] = "   ";
  PA0QM001.PA0QM-XDS-DIR-SHIP-CD[sysVar.arrayIndex] = " ";
  PA0QM001.PA0QM-BALANCE-TO-SHIP[sysVar.arrayIndex] = 0;
  PA0QM001.PA0QM-ON-ORDER-QTY[sysVar.arrayIndex] = 0;
  PA0QM001.PA0QM-SO-PO-DIFF[sysVar.arrayIndex] = " ";
  PA0QM001.PA0QM-ADJ-QTY[sysVar.arrayIndex] = " ";
  ;
  ;
   /* ------------------ End of Process PA0Q-223 -----------------*/
  ;
end // end PA0Q-223

// PROTECT FIELDS
Function PA0Q-230()
   /* * ------------------------------------------------------------*/
   /* PROTECT FIELDS BASED ON O/A STATUS CODE.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    set PA0QM001.PA0QM-PF9-LABEL skip, invisible;
    set PA0QM001.PA0QM-PF17-LABEL skip, invisible;
    set PA0QM001.PA0QM-PF18-LABEL skip, invisible;
    ;
      /* PROTECT FACTORY ENTRY BOX FIELDS AND DARKEN ROWS WITH*/
      /* NO FACTORY INFORMATION.*/
    ;
    PA0QW00.XX3 = 1;
    while (PA0QW00.XX3 <= 4)
      if (PA0QM001.FY1FCTYC[XX3] == " "
       && PA0QM001.PA4FCTQT[XX3] == 0)
        set PA0QM001.PC3POIDT[XX3] skip, invisible;
        set PA0QM001.FY1FCTYC[XX3] skip, invisible;
        set PA0QM001.PA4FCTQT[XX3] skip, invisible;
      else
        set PA0QM001.PC3POIDT[XX3] protect;
        set PA0QM001.FY1FCTYC[XX3] protect;
        set PA0QM001.PA4FCTQT[XX3] protect;
      end
      PA0QW00.XX3 = PA0QW00.XX3 + 1;
    end
  end
  ;
  ;
  if (PA0QM001.YESCD == "15" 
   || PA0QM001.YESCD == "20" 
   || PA0QM001.YESCD == "75" 
   || PA0QM001.YESCD == "84" /* 9/05:*/
   || PA0QM001.YESCD == "80" /* DIFFERENT PROTECTS*/
   || PA0QM001.YESCD == "97" 
   || PA0QM001.YESCD == "98")
    set PA0QM001.PA1OATXT protect;
    set PA0QM001.YETCD protect;
    set PA0QM001.PC4ORTYP protect;
    ;
      /* 03/25/93: ALLOW DIVISION TO BE CHANGED IF STATUS '80'*/
    /* IF PA0QM001.YESCD NE '80';*/
    set PA0QM001.YSMXDV protect;
    /* END;*/
    ;
    /* IF PA0QM001.YESCD EQ '80';*/
    /* AND EZEMNO EQ 246; /* MUST SELECT ITEMS FOR EXISTING FACTORIES*/
         /* NEXT SENTENCE*/
    /* ELSE;*/
    PA0QW00.XX3 = 1;
    while (PA0QW00.XX3 <= 4)
            /* SET PA0QM001.PC3POIDT(XX3) PROTECT;*/
      set PA0QM001.FY1FCTYC[XX3] protect;
      set PA0QM001.PA4FCTQT[XX3] protect;
      PA0QW00.XX3 = PA0QW00.XX3 + 1;
    end
    /* END;*/
    ;
    set PA0QM001.PA0QM-PO-ID-YY protect;
    set PA0QM001.PA0QM-PO-ID-MM protect;
    set PA0QM001.PA0QM-PO-ID-BUY-MM protect;
    set PA0QM001.PA0QM-PO-ID-FCTY protect;
    /* SET PA0QM001.PA0QM-ALT-PO-ID-YY PROTECT;*/
    /* SET PA0QM001.PA0QM-ALT-PO-ID-MM PROTECT;*/
    /* SET PA0QM001.PA0QM-ALT-PO-ID-BUY-MM PROTECT;*/
    /* SET PA0QM001.PA0QM-ALT-PO-ID-FCTY PROTECT;*/
    set PA0QM001.SY1STNBR protect;
    set PA0QM001.SY2CLRID protect;
    set PA0QM001.XDMCD protect;
    set PA0QM001.PC2CUXID protect;
    set PA0QM001.KUCCOID protect;
    set PA0QM001.KUMSTRID protect;
    set PA0QM001.XNXCD protect;
    ;
    /* IF PA0QM001.YESCD NE '80';*/
    ;
         /* PROTECT SELECTION FIELDS*/
    ;
    /* MOVE 1 TO PA0QW00.XX3;*/
    /* WHILE PA0QW00.XX3 LE 11;*/
    /* SET PA0QM001.PA0QM-SELECT(XX3) AUTOSKIP,DARK;*/
    /* PA0QW00.XX3 = PA0QW00.XX3 + 1;*/
    /* END;*/
    ;
    if (converseVar.validationMsgNum == 0
     || converseVar.validationMsgNum == 15) /* NO DATA TO DISPLAY*/
      PAWREC.XXXMODID = "220";
      converseLib.validationFailed(72); /* O/A HEADER STATUS ALLOWS READ ONLY*/
      PAWREC.XXXMSGNO = 72;
    end
    ;
    PA0QW00.PA0QW-READ-ONLY = "Y";
    ;
    /* END;*/
    ;
      /* PROTECT FACTORY ENTRY BOX FIELDS AND DARKEN ROWS WITH*/
      /* NO FACTORY INFORMATION.*/
    ;
    PA0QW00.XX3 = 1;
    while (PA0QW00.XX3 <= 4)
      /* IF PA0QM001.PC3POIDT(XX3) EQ 0;*/
      if (PA0QM001.FY1FCTYC[XX3] == " "
       && PA0QM001.PA4FCTQT[XX3] == 0)
        set PA0QM001.PC3POIDT[XX3] skip, invisible;
        set PA0QM001.FY1FCTYC[XX3] skip, invisible;
        set PA0QM001.PA4FCTQT[XX3] skip, invisible;
      end
      PA0QW00.XX3 = PA0QW00.XX3 + 1;
    end
    ;
    if (converseVar.validationMsgNum != 245) /* MUST SELECT ITEMS ONLY FOR EXISTING*/
                                   /* FACTORIES*/
      set PA0QM001.PA1OANBR cursor;
    end
    ;
  end
  ;
   /* 01/06/92: USERS WANT THE ABILITY TO CHANGE THE FACTORY QUANTITY*/
   /* IF THE O/A IS IN STATUS '01'.  THEY SHOULD NOT BE ABLE TO CHANGE*/
   /* THE O/A QUANTITY.*/
  ;
   /* IF PA0QM001.YESCD EQ '01';*/
   /* OR PA0QM001.YESCD EQ '80';*/
  ;
  if (PA0QM001.YESCD == "01")
    if (converseVar.validationMsgNum == 0)
      set PA0QM001.PA1OANBR cursor;
    end
    ;
      /* 07/01/92: COMMENT THIS OUT FOR NOW PER JULIE*/
    ;
      /* FOR REWORK O/AS, PROTECT "84'D" FACTORY PO LINES SO THAT*/
      /* THEY CAN'T BE SELECTED.*/
    ;
       /* MOVE 1 TO PA0QW00.XX3;*/
       /* WHILE PA0QW00.XX3 LE 4;*/
           /* IF PA0QW00.YESCD(XX3) EQ '84'; /* FACTORY REJECTED*/
              /* MOVE 1 TO PA0QW00.XX4;*/
              /* WHILE PA0QW00.XX4 LE 11;*/
                 /* IF PA0QM001.PA0QM-FY-FCTY-CD(XX4) EQ*/
                    /* PA0QW00.FY1FCTYC(XX3);*/
                    /* SET PA0QM001.PA0QM-SELECT(XX4) AUTOSKIP,DARK;*/
                 /* END;*/
                 /* PA0QW00.XX4 = PA0QW00.XX4 + 1;*/
              /* END;*/
           /* END;*/
           /* PA0QW00.XX3 = PA0QW00.XX3 + 1;*/
       /* END;*/
    ;
    /* END;*/
    PA0QW00.XX3 = 1;
    /* 05/24/93: COMMENT OUT FACTORY PROTECT PER JADKINS.*/
    while (PA0QW00.XX3 <= 4)
      /* IF PA0QM001.PC3POIDT(XX3) NE 0;*/
       /* IF PA0QM001.FY1FCTYC(XX3) NE ' ';*/
       /* OR PA0QM001.PA4FCTQT(XX3) NE 0;*/
          /* IF EZEMNO NE 246; /* MUST SELECT ITEMS FOR EXISTING FACTORIES*/
             /* ; /* SET PA0QM001.PC3POIDT(XX3) AUTOSKIP;*/
             /* IF EZEMNO NE 272; /* CAN'T USE FACTORY - FACTORY DENIED*/
             /* AND EZEMNO NE 271; /* WARNING: HARD ERROR*/
             /* AND EZEMNO NE 63;  /* PO MONTH DOES NOT EXIST*/
             /* AND EZEMNO NE 176; /* NO PO ITEMS EXIST*/
             /* AND EZEMNO NE 160; /* FACTORY DOES NOT PRODUCE THIS STYLE*/
             /* AND EZEMNO NE 20;  /* FACTORY MISSING OR INVALID*/
             /* AND EZEMNO NE 262; /* OVERRUN PO HEADER NOT FOUND*/
             /* AND EZEMNO NE 252; /* FACTORY DOES NOT PRODUCT THIS STYLE*/
                /* SET PA0QM001.FY1FCTYC(XX3) AUTOSKIP;*/
             /* END;*/
          /* ELSE;*/
      if (PA0QW01.PA0QW-FACTORY-SELECTED[XX3] == "Y")
                  /* SET PA0QM001.PC3POIDT(XX3) AUTOSKIP;*/
        set PA0QM001.FY1FCTYC[XX3] skip;
      end
          /* END;*/
      if (PA0QW00.PABAFYQT == "N") /* CAN'T MODIFY FACTORY QTYS*/
        set PA0QM001.PA4FCTQT[XX3] skip, invisible;
      else
        if (PA0QM001.YESCD != "01")
          set PA0QM001.PA4FCTQT[XX3] skip;
        end
      end
       /* END;*/
      PA0QW00.XX3 = PA0QW00.XX3 + 1;
    end
  end
   /* END;*/
  ;
  if (PA0QM001.YESCD == "10")
    /* OR PA0QM001.YESCD EQ '80';*/
    set PA0QM001.YETCD protect;
    set PA0QM001.SY1STNBR protect;
    set PA0QM001.SY2CLRID protect;
    set PA0QM001.XDMCD protect;
  end
  ;
  if (PA0QM001.YESCD == "10")
    set PA0QM001.PA1OATXT protect;
    PA0QW00.XX3 = 1;
    while (PA0QW00.XX3 <= 4)
         /* SET PA0QM001.PC3POIDT(XX3) PROTECT;*/
      set PA0QM001.FY1FCTYC[XX3] protect;
      set PA0QM001.PA4FCTQT[XX3] protect;
      PA0QW00.XX3 = PA0QW00.XX3 + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* PROTECT FIELDS BASED ON O/A TYPE.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0QM001.YETCD != "ND"
   || PA0QM001.PA1OANBR != 0)
    set PA0QM001.PA1RQQTY protect;
  end
  ;
  if (PA0QM001.YETCD == "ND") /* MUST PROCESS BY STYLE*/
    set PA0QM001.PC2CUXID protect;
    set PA0QM001.KUCCOID protect;
    set PA0QM001.KUMSTRID protect;
    set PA0QM001.XNXCD protect;
  end
  ;
   /* IF PA0QM001.YETCD EQ 'DD';*/
   /* OR PA0QM001.YETCD EQ 'FT';*/
   /* OR PA0QM001.YETCD EQ 'ND';*/
   /* OR PA0QM001.YETCD EQ 'DN';*/
   /* OR PA0QM001.YETCD EQ 'NI';*/
   /* OR PA0QM001.YETCD EQ '  ';*/
   /* NEXT SENTENCE;*/
   /* ELSE;*/
   /* SET PA0QM001.PA0QM-ALT-PO-ID-YY PROTECT;*/
   /* SET PA0QM001.PA0QM-ALT-PO-ID-MM PROTECT;*/
   /* SET PA0QM001.PA0QM-ALT-PO-ID-BUY-MM PROTECT;*/
   /* SET PA0QM001.PA0QM-ALT-PO-ID-FCTY PROTECT;*/
   /* END;*/
  ;
  if (PA0QM001.YETCD == "DS"
   || PA0QM001.YETCD == "DA"
   || PA0QM001.YETCD == "DT"
   || PA0QM001.YETCD == "DM"
   || PA0QM001.YETCD == "DR"
   || PA0QM001.YETCD == "PR"
   || PA0QM001.YETCD == "EO"
   || PA0QM001.YETCD == "SE"
   || PA0QM001.YETCD == "OR"
   || PA0QM001.YETCD == "NO") /* NIL OVERRUN*/
    set PA0QM001.PC2CUXID protect;
    set PA0QM001.KUCCOID protect;
    set PA0QM001.KUMSTRID protect;
    set PA0QM001.XNXCD protect;
  end
  ;
   /* FOR OVERRUNS, DON'T ALLOW THE O/A TYPE, PO TYPE, OR THE PO ID*/
   /* INFORMATION TO BE CHANGED.*/
  ;
  if (PA0QM001.YETCD == "OR"
   || PA0QM001.YETCD == "NO")
    set PA0QM001.YETCD protect;
    set PA0QM001.PC4ORTYP protect;
    set PA0QM001.PA0QM-PO-ID-YY protect;
    set PA0QM001.PA0QM-PO-ID-MM protect;
    set PA0QM001.PA0QM-PO-ID-BUY-MM protect;
    set PA0QM001.PA0QM-PO-ID-FCTY protect;
  end
  ;
   /* PA0344: FOR 'DN' AND 'NI' O/A TYPES, PROTECT THE THRU SALES*/
   /* ORDER CUSTOMER NEED DATE IF THE USER'S SIGNON IS NOT DIVISION*/
   /* '10'.*/
  ;
  if (PA0QM001.YETCD == "DN"
   || PA0QM001.YETCD == "NI")
    if (COMMAREA.XDVCD != "01")
      set PA0QM001.PA0QM-OP-CUST-NEED2-MM protect;
      set PA0QM001.PA0QM-OP-CUST-NEED2-YY protect;
    end
  end
  ;
   /* PA0344: FOR 'OR' AND 'NO' O/A TYPES, DON'T SHOW SO FIELDS*/
  ;
  if (PA0QM001.YETCD == "OR"
   || PA0QM001.YETCD == "NO")
    set PA0QM001.PA0QM-OP-CUST-NEED1-MM skip, invisible;
    set PA0QM001.PA0QM-OP-CUST-NEED1-YY skip, invisible;
    set PA0QM001.PA0QM-OP-CUST-NEED2-MM skip, invisible;
    set PA0QM001.PA0QM-OP-CUST-NEED2-YY skip, invisible;
    return;
  end
  ;
   /* ------------------ End of Process PA0Q-230 -----------------*/
  ;
end // end PA0Q-230

// CHECK ATTENTION IDENTIFIER
Function PA0Q-300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0QW00.PA0QW-DISPLAY-MAP2 == "Y")
    PA0Q-305();
    return;
  end
  ;
   /* IF PF9/PF18 CONFIRMATION LINE DISPLAYED AND PF9 OR PF18 WAS NOT*/
   /* HIT, RESET CONFIRMATION SWITCH*/
  ;
  if (PA0QW00.PA0QW-CONFIRM-MSG-SHOWN == "Y"
   && converseVar.eventKey not pf9
   && converseVar.eventKey not pf18)
    PA0QW00.PA0QW-CONFIRM-MSG-SHOWN = "N";
  end
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    converseLib.clearScreen();
     /* clear map fields*/
    PA0QW00.PA0QW-REQ-FOR-DATA-FLAG = "N"; /* request data*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (PA0QM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      PAWREC.PAWOANBR = PA0QW00.PA1OANBR; /* MOVE IN O/A NUMBER*/
      COMMAREA.CATOAP = PA0QM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = PA0QM001.CAITEM; /* Application data*/
      XSPAS01(); /* Exit to another application*/
    else
      PAWREC.XXXMODID = "300";
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end
    ;
    set PA0QM001.CATOAP cursor, modified, bold; /* Highlight*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    if (converseVar.eventKey is pf3) /* pf3 pressed*/
       /* NEXT SENTENCE*/
    else
      if (converseVar.eventKey is pf1) /* pf1 pressed*/
        COMMAREA.CAITEM = "PA0QM001"; /* move in map name for help*/
      else
        COMMAREA.CAITEM = " "; /* clear item field*/
      end
    end
    ;
    XSPAS01(); /* Exit to another application*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  if (converseVar.eventKey is pf12) /* reset screen*/
    PA0QM001.CATOAP = "PA0Q";
    PA0QW00.PA0QW-REQ-FOR-DATA-FLAG = "N"; /* Request for no data*/
    set PA0QM001 initial;
    set PAWREC empty;
    PA0QS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf5   /* AND NOT TRANSFER TO PA0A*/
   && converseVar.eventKey not pf6   /* AND NOT PF6 HEADER INSTRUCTIONS*/
   && converseVar.eventKey not pf7   /* and not PF7 up*/
   && converseVar.eventKey not pf8   /* and not PF8 down*/
   && converseVar.eventKey not pf9   /* and not PF9 accept*/
   && converseVar.eventKey not pf13  /* and not PF13 PA0P*/
   && converseVar.eventKey not pf14  /* and not PF14 PA0N*/
   && converseVar.eventKey not pf15  /* and not PF15 FCTY*/
   && converseVar.eventKey not pf17  /* and not PF17 PA0U*/
   && converseVar.eventKey not pf18  /* and not PF18 NEXT O/A*/
   && converseVar.eventKey not pf19  /* and not PF19 PA0Z*/
   && converseVar.eventKey not pf20  /* and not PF20 SIZE*/
   && converseVar.eventKey not pf21  /* and not PF21 PA0E*/
   && converseVar.eventKey not pf24) /* and not PF24 PA0C*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (converseVar.eventKey is pf5) /* TRANSFER TO PA0A*/
    PA0QM001.CATOAP = "PA0A";
    PA0QS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end
  ;
  if (converseVar.eventKey is pf6 /* SHOW HEADER INSTRUCTIONS*/
   && PA0QM001.PA1OANBR != 0)    
    set PA9REC empty;
    PA9REC.PA1OANBR = PA0QM001.PA1OANBR;
    ;
    XPPA100();
    ;
    if (converseVar.validationMsgNum != 0)
      PAWREC.XXXMODID = "300";
    end
    ;
      /* THIS POP-UP COMES BACK WITH THE PO ID AND ALL SO LABELS*/
      /* REVERSE VIDEO.  THIS NEXT STATEMENTS RESET THE ATTRIBUTES*/
      /* BACK TO NORMAL.*/
    ;
    set PA0QM-PO-ID-LABEL normal;
    set PA0QM-ALL-SO-LABEL normal;
    ;
    exit stack;
  end
  ;
  if (converseVar.eventKey is pf9
   || converseVar.eventKey is pf18)
    if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
      PAWREC.XXXMODID = "300";
      converseLib.validationFailed(336); /* EUROPEAN O/A ALLOWS INQUIRY ONLY*/
    else
      if (PA0QW01.PA1HLDFL == "Y" /* IF O/A ON HOLD*/
       || PA0QW00.PA0QW-READ-ONLY == "Y")
        PAWREC.XXXMODID = "300";
        converseLib.validationFailed(254);
      end
    end
  end
  ;
  if (converseVar.eventKey is pf13) /* TRANSFER TO PA0P*/
    PA0QM001.CATOAP = "PA0P";
    PA0QS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end
  ;
  if (converseVar.eventKey is pf15) /* FACTORY FOR STYLE POP-UP*/
    if (PA0QM001.SY1STNBR == " "
     && PA0QW00.PA0QW-OA-SY1STNBR == " ")
      set PA0QM001.SY1STNBR cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(217); /* STYLE REQUIRED WHEN PF15 IS PRESSED*/
      exit stack;
    else
      PA0Q-310();
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf14) /* TRANSFER TO PA0N*/
    PA0QM001.CATOAP = "PA0N";
    PA0QS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end
  ;
  if (converseVar.eventKey is pf17) /* reset screen*/
    if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
      PAWREC.XXXMODID = "300";
      converseLib.validationFailed(336); /* EUROPEAN O/A ALLOWS INQUIRY ONLY*/
      exit stack;
    else
      if (PA0QM001.YETCD == "OR") /* DON'T ALLOW TRANSFER*/
        PAWREC.XXXMODID = "521";
        converseLib.validationFailed(296); /* CAN'T TRANSFER TO PA0U WITH 'OR'*/
        exit stack;
      else
        PA0Q-320(); /* CHECK VALUES AND TRANSFER TO PA0U*/
      end
    end
  end
  ;
  if (converseVar.eventKey is pf19) /* reset screen*/
    PA0QM001.CATOAP = "PA0Z";
    PA0QS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end
  ;
  if (converseVar.eventKey is pf20 /* DISPLAY SIZE DETAIL*/
   && converseVar.validationMsgNum == 0)
    PA0QW00.PA0QW-DISPLAY-MAP2 = "Y";
    PA0QW00.XX7 = 0;
  else
    PA0QW00.PA0QW-DISPLAY-MAP2 = "N";
  end
  ;
  if (converseVar.eventKey is pf21) /* TRANSFER TO PA0E*/
    PA0QM001.CATOAP = "PA0E";
    PA0QS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end
  ;
  if (converseVar.eventKey is pf24) /* TRANSFER TO PA0C*/
    PAWREC.PA1OANBR = PA0QM001.PA1OANBR;
    PAWREC.PAWOANBR = PA0QM001.PA1OANBR;
    COMMAREA.CATOAP = "PA0C";
    XSPAS01();
    exit stack;
  end
  ;
   /* ------------------ End of Process PA0Q-300 -----------------*/
  ;
end // end PA0Q-300

// CHECK ATTENTION IDENT MAP2
Function PA0Q-305()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2)
    exit stack;
  end
  ;
  if (PA0QM002.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      PAWREC.PAWOANBR = PA0QM002.PA1OANBR; /* LOAD O/A NUMBER*/
      COMMAREA.CATOAP = PA0QM002.CATOAP; /* TO application*/
      COMMAREA.CAITEM = PA0QM002.CAITEM; /* Application data*/
      XSPAS01(); /* Exit to another application*/
    else
      PAWREC.XXXMODID = "300";
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end
    ;
    set PA0QM002.CATOAP cursor, modified, bold; /* Highlight*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3) /* or PF3 was pressed*/
    ;
    if (converseVar.eventKey is pf3) /* pf3 pressed*/
      PA0QW00.PA0QW-DISPLAY-MAP2 = "N";
      ;
      sysVar.arrayIndex = 1;
      while (sysVar.arrayIndex <= 11)
        PA0QW01.PA0QW-SELECT[sysVar.arrayIndex] = " ";
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end
      ;
      exit stack;
    else
      COMMAREA.CAITEM = "PA0QM002"; /* move in map name for help*/
    end
    ;
    XSPAS01(); /* Exit to another application*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end
  ;
  ;
   /* ------------------ End of Process PA0Q-305 -----------------*/
  ;
end // end PA0Q-305

// PROCESS FACTORY/STYLE POP-UP
Function PA0Q-310()
   /* ------------------------------------------------------------*/
   /* SHOW ALL FACTORIES THAT ARE VALID FOR THIS STYLE.*/
   /* ------------------------------------------------------------*/
  ;
  set FY2REC empty;
  set XP0DW01 empty;
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "S")
    FY2REC.SY1STNBR = PA0QM001.SY1STNBR;
  else
    FY2REC.SY1STNBR = PA0QW00.PA0QW-OA-SY1STNBR;
  end
  ;
  XP0DW01.XP0DW-POP-UP-DONE = "N";
  XP0DW01.XP0DW-FACTORY-FOUND = "N";
  ;
  XP0D-100(); /* GET INFORMATION FOR POP-UP*/
  ;
  XP0DW01.XP0DW-XX2 = 1; /* INITIALIZE INDEX*/
  ;
  while (XP0DW01.XP0DW-POP-UP-DONE == "N")
   /* INITIALIZE POP-UP INDEX*/
    XP0DW01.XP0DW-XX1 = 1;
    XP0D-200(); /* PERFORM POP-UP ROUTINE*/
    ;
  end
  ;
  if (XP0DW01.XP0DW-POP-UP-DONE == "Y")
    converseLib.clearScreen();
     /* RESET SCREEN*/
    PAWREC.XXXMODID = "310";
    converseLib.validationFailed(45); /* REQUESTED LIST DISPLAYED - CONTINUE OR CANCEL*/
  end
  ;
  exit stack;
  ;
  ;
   /* ------------------ End of Process PA0Q-310 -----------------*/
  ;
end // end PA0Q-310

// CHECK EDITS & TRANSFER TO PA0U
Function PA0Q-320()
  ;
   /* ------------------ Process PA0Q-320 -----------------*/
  ;
   /* STYLE/COLOR/DIMENSION OR CUSTOMER INFO REQUIRED WHEN TRANSFERRING*/
   /* TO PA0U.*/
  ;
  if (PA0QM001.SY1STNBR == " "
   && PA0QM001.PC2CUXID == " ")
    set PA0QM001.SY1STNBR cursor, bold;
    set PA0QM001.SY2CLRID bold;
    set PA0QM001.XDMCD bold;
    set PA0QM001.PC2CUXID bold;
    PAWREC.XXXMODID = "320";
    converseLib.validationFailed(233); /* PA0U REQUIRES STYLE/COLOR/DIM OR CUST INFO*/
    exit stack;
  end
  ;
   /* ALT PO ID CAN'T BE ENTERED WHEN TRANSFERRING TO PA0U*/
  ;
   /* IF PA0QM001.PA0QM-ALT-PO-ID-YY NE ' ';*/
   /* OR PA0QM001.PA0QM-ALT-PO-ID-MM NE ' ';*/
   /* OR PA0QM001.PA0QM-ALT-PO-ID-BUY-MM NE ' ';*/
   /* SET PA0QM001.PA0QM-ALT-PO-ID-YY CURSOR,BRIGHT;*/
   /* SET PA0QM001.PA0QM-ALT-PO-ID-MM BRIGHT;*/
   /* SET PA0QM001.PA0QM-ALT-PO-ID-BUY-MM BRIGHT;*/
   /* MOVE '320' TO PAWREC.XXXMODID;*/
   /* MOVE 234 TO EZEMNO; /* CAN'T TRANSFER TO PA0U WITH ALT PO ID*/
   /* EZEFLO;*/
   /* END;*/
  ;
   /* PO ID REQUIRED WHEN TRANSFERRING TO PA0U*/
  ;
  if (PA0QM001.PA0QM-PO-ID-YY == " "
   || PA0QM001.PA0QM-PO-ID-MM == " "
   || PA0QM001.PA0QM-PO-ID-BUY-MM == " ")
    set PA0QM001.PA0QM-PO-ID-YY cursor, bold;
    set PA0QM001.PA0QM-PO-ID-MM bold;
    set PA0QM001.PA0QM-PO-ID-BUY-MM bold;
    PAWREC.XXXMODID = "320";
    converseLib.validationFailed(235); /* PO ID REQUIRED TO TRANSFER TO PA0U*/
    exit stack;
  end
  ;
   /* ------------------ End of Process PA0Q-320 -----------------*/
  ;
end // end PA0Q-320

// RESET HIGHLIGHTED FIELDS
Function PA0Q-400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set PA0QM001.PA1OATXT initialAttributes; /* OA DESCRIPTION*/
  set PA0QM001.PA1OANBR initialAttributes; /* OA NUMBER*/
  set PA0QM001.PA1HLDFL initialAttributes; /* HOLD FLAG*/
  set PA0QM001.YETCD initialAttributes; /* OA TYPE CODE*/
  set PA0QM001.YSMXDV initialAttributes; /* DIVISION CODE*/
  set PA0QM001.PC4ORTYP initialAttributes; /* PO TYPE*/
  set PA0QM001.PA0QM-PO-ID-YY initialAttributes; /* PO ID YEAR*/
  set PA0QM001.PA0QM-PO-ID-MM initialAttributes; /* PO ID MONTH*/
  set PA0QM001.PA0QM-PO-ID-BUY-MM initialAttributes; /* PO ID BUY MONTH*/
  set PA0QM001.PA0QM-PO-ID-FCTY initialAttributes; /* PO ID FACTORY*/
  set PA0QM001.PA1RQQTY initialAttributes; /* O/A QUANTITY*/
  set PA0QM001.PA0QM-OP-CUST-NEED1-MM initialAttributes;
  set PA0QM001.PA0QM-OP-CUST-NEED1-YY initialAttributes;
  set PA0QM001.PA0QM-OP-CUST-NEED2-MM initialAttributes;
  set PA0QM001.PA0QM-OP-CUST-NEED2-YY initialAttributes;
   /* SET PA0QM001.PA0QM-ALT-PO-ID-YY DEFINED;   /* ALT PO ID YEAR*/
   /* SET PA0QM001.PA0QM-ALT-PO-ID-MM DEFINED;   /* ALT PO ID MONTH*/
   /* SET PA0QM001.PA0QM-ALT-PO-ID-BUY-MM DEFINED; /* ALT PO ID BUY MONTH*/
   /* SET PA0QM001.PA0QM-ALT-PO-ID-FCTY DEFINED; /* ALT PO ID FACTORY*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    set PA0QM001.PA0QM-PF9-LABEL invisible;
    set PA0QM001.PA0QM-PF17-LABEL invisible;
    set PA0QM001.PA0QM-PF18-LABEL invisible;
  else
    set PA0QM001.PA0QM-PF9-LABEL initialAttributes;
    set PA0QM001.PA0QM-PF17-LABEL initialAttributes;
    set PA0QM001.PA0QM-PF18-LABEL initialAttributes;
  end
  ;
  PA0QW00.XX1 = 1;
  ;
  while (PA0QW00.XX1 <= 11)
    set PA0QM001.PA0QM-SELECT[XX1] normal;
    PA0QW00.XX1 = PA0QW00.XX1 + 1;
  end
  ;
   /* O/A TYPE POP-UP*/
  ;
  if (PA0QM001.YETCD == "?")
    ;
    XPXX001(); /* WINDOW INITIALIZATION*/
    ;
    XX0XW02.YESCDIND = "H"; /* STATUS CODE TYPE INDICATOR*/
    XX0XW02.XX0XWHDR = "O/A TYPE"; /* HEADING*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* UNTIL END OF REQUEST*/
      XPYET01(); /* DISPLAY THE LIST*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0)
      PA0QM001.YETCD = PA0QW01.YETCD; /* RESTORE PRIOR CODE*/
    else
      PA0QM001.YETCD = YETTBL.YETCD[XX0XWPIX]; /* SELECTED CODE*/
    end
    ;
    set PA0QM001.YETCD cursor;
    converseLib.clearScreen();
     /* RESET SCREEN*/
    PAWREC.XXXMODID = "400";
    converseLib.validationFailed(45); /* REQUESTED DATA DISPLAYED*/
    ;
    exit stack;
    ;
  end
  ;
   /* DIMENSION CODE POP-UP*/
  ;
  if (PA0QM001.XDMCD == "?") /* DIMENSION LIST REQUESTED*/
    ;
    XPXX001(); /* WINDOW INITIALIZATION*/
    ;
    XX0XW02.XX0XWHDR = "  DIMENSION"; /* HEADING*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* UNTIL END OF REQUEST*/
      XPXDM01();
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* NO SELECTION MADE*/
      PA0QM001.XDMCD = PA0QW01.XDMCD; /* RESTORE PRIOR CODE*/
    else
      PA0QM001.XDMCD = XDMTBL.XDMCD[XX0XWPIX];
    end
    ;
    set PA0QM001.XDMCD cursor;
    converseLib.clearScreen();
     /* RESET SCREEN*/
    PAWREC.XXXMODID = "400";
    converseLib.validationFailed(45); /* REQUESTED DATA DISPLAYED*/
    ;
    exit stack;
    ;
  end
  ;
   /* TRADE RESTRICTION POP-UP*/
  ;
  if (converseVar.eventKey is enter) /* IF ENTER PRESSED*/
    sysVar.arrayIndex = 11; /* SCREEN LENGTH*/
    while (sysVar.arrayIndex >= 1) /* EVALUATE SCREEN*/
      if (PA0QM001.PA0QM-SELECT[sysVar.arrayIndex] == "?")
        ;
            /* TRADE RESTRICTION POP-UP ONLY VALID WITH PO LINE ITEM*/
        ;
        if (PA0QM001.PA0QM-LINE-TYPE[sysVar.arrayIndex] == "SO")
          return;
        end
        ;
        set FY1REC empty; /* FACTORY RECORD*/
        set XP0CW01 empty; /* WORK RECORD*/
        FY1REC.FY1FCTYC = PA0QM001.PA0QM-FY-FCTY-CD[sysVar.arrayIndex];
        XP0CW01.XP0CWEND = "N"; /* NOE END OF TABLE*/
        XP0CW01.XP0CWXCT = "N"; /* COUNTRY FOUND FLAG*/
        XP0C100(); /* GET INFO FOR POP-UP*/
        XP0CW01.XP0CWXX2 = 1; /* INIT POP-UP INDEX*/
        while (XP0CW01.XP0CWEND == "N")
          XP0CW01.XP0CWXX1 = 1; /* INIT POP-UP INDEX*/
          XP0C140(); /* PERFORM POP-UP ROUTINE*/
        end
        if (XP0CW01.XP0CWEND == "Y")
          converseLib.clearScreen();
           /* RESET SCREEN*/
          PAWREC.XXXMODID = "400";
          converseLib.validationFailed(45); /* REQUESTED DATA DISPLAYED*/
          XP0CW01.XP0CWXX2 = 1;
          while (XP0CW01.XP0CWXX2 <= 11)
            if (PA0QM001.PA0QM-SELECT[XP0CWXX2] == "?")
              PA0QM001.PA0QM-SELECT[XP0CWXX2] = " ";
              PA0QW01.PA0QW-SELECT[XP0CWXX2] = " ";
            end
            XP0CW01.XP0CWXX2 = XP0CW01.XP0CWXX2 + 1;
          end
        end
        exit stack;
      end
      sysVar.arrayIndex = sysVar.arrayIndex - 1;
    end
  end
  ;
  set PA0QM001.CATOAP initialAttributes; /* Commarea TO application*/
  set PA0QM001.CAITEM initialAttributes; /* Commarea application data*/
  ;
   /* ------------------ end of process PA0Q-400 -----------------*/
  ;
end // end PA0Q-400

// VERIFY THE DATA ENTERED
Function PA0Q-500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CAITEM > " ") /* Application data was entered*/
    ;
    PAWREC.XXXMODID = "150"; /* Module identification*/
    set PA0QM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* verify request to page forward(pf7) or backwards(pf8), and*/
   /* check modifiable fields*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    ;
    PA0Q-510(); /* verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 2 /* NO PREVIOUS PAGES TO DISPLAY*/
     || converseVar.validationMsgNum == 3) /* NO MORE PAGES TO DISPLAY*/
      exit stack;
    end
    ;
    PA0Q-520(); /* check modifiable fields*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* if data loaded, verify modifiable fields*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf9  /* accept update   (pf9)*/
   || converseVar.eventKey is pf18 /**/
   || converseVar.eventKey is pf17 /* IF TRANSFER TO PA0U REQUESTED*/
   || converseVar.eventKey is pf20) /* IF SIZE DETAIL REQUESTED*/
    ;
    PA0Q-520(); /* check modifiable fields*/

  end
  ;
   /* DON'T FORGET TO ALLOW PAGING EVEN IF THERE ARE ERRORS*/
  ;
  if (converseVar.validationMsgNum != 0)
    if (converseVar.eventKey is pf7
     || converseVar.eventKey is pf8)
         /* NEXT SENTENCE*/
    else
      exit stack; /* display error message*/
    end
  end
  ;
  ;
end // end PA0Q-500

// VERIFY SCROLL REQUEST
Function PA0Q-510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && PA0QW00.PA0QW-CURRENT-TS-PAGE < 2)
    ;
    PAWREC.XXXMODID = "151"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && PA0QW00.PA0QW-CURRENT-TS-PAGE >= PA0QW00.PA0QW-MAX-PAGES)
    ;
    PAWREC.XXXMODID = "151"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end PA0Q-510

// VALIDATE MODIFIABLE DATA
Function PA0Q-520()
   /* ------------------------------------------------------------*/
   /* DETERMINE IF KEY FIELD HAS CHANGED ON MAP*/
   /* ------------------------------------------------------------*/
  ;
  PA0QW00.PA0QW-KEY-CHANGED = "N";
  ;
  if (PA0QM001.PA1OANBR == 0
   && PA0QW00.PA1OANBR != 0)
    ;
    PA0QS-74-INIT-FLAG(); /* INITIALIZE FLAGS*/
    ;
    set PA0QW01 empty;
    set PG2REC empty; /* RESET STYLE RECORD*/
    PA0QW00.PA1OANBR = PA0QM001.PA1OANBR;
    PA0QW00.PA0QW-KEY-CHANGED = "Y";
    ;
    PAWREC.XXXMODID = "520";
    converseLib.validationFailed(15); /* NO DATA TO DISPLAY*/
    ;
    if (PA0QW01.PA0QW-SHOW-ALL-SO == " ")
      PA0QW01.PA0QW-SHOW-ALL-SO = "N";
    end
    ;
      /* PURGE TEMP STORAGE*/
    ;
    PA0QS-30-TA0050-P();
    ;
    PA0QW01.PA0QW-UPDATE-HEADER = "N";
    PA0QW01.PA0QW-UPDATE-COMMENT = "N";
    PA0QW00.XX3 = 1;
    while (PA0QW00.XX3 <= 4)
      PA0QW01.PA0QW-FACTORY-SELECTED[XX3] = "N";
      PA0QW00.XX3 = PA0QW00.XX3 + 1;
    end
    return;
  end
  ;
  if (PA0QM001.PA1OANBR == 0
   || PA0QM001.PA1OANBR == PA0QW00.PA1OANBR)
    if (PA0QM001.PA1OATXT != PA0QW01.PA1OATXT
     || PA0QM001.YETCD != PA0QW01.YETCD
     || PA0QM001.YSMXDV != PA0QW01.YSMXDV
     || PA0QM001.PC4ORTYP != PA0QW01.PC4ORTYP
     || PA0QM001.PA0QM-PO-ID-YY != PA0QW01.PA0QW-PO-ID-YY
     || PA0QM001.PA0QM-PO-ID-MM != PA0QW01.PA0QW-PO-ID-MM
     || PA0QM001.PA0QM-PO-ID-BUY-MM != PA0QW01.PA0QW-PO-ID-BUY-MM
     || PA0QM001.PA0QM-PO-ID-FCTY != PA0QW01.PA0QW-PO-ID-FCTY
     || PA0QM001.PA0QM-OP-CUST-NEED1-MM != PA0QW01.PA0QW-OP-CUST-NEED1-MM
     || PA0QM001.PA0QM-OP-CUST-NEED1-YY != PA0QW01.PA0QW-OP-CUST-NEED1-YY
     || PA0QM001.PA0QM-OP-CUST-NEED2-MM != PA0QW01.PA0QW-OP-CUST-NEED2-MM
     || PA0QM001.PA0QM-OP-CUST-NEED2-YY != PA0QW01.PA0QW-OP-CUST-NEED2-YY
     /* OR PA0QM001.PA0QM-ALT-PO-ID-YY NE PA0QW01.PA0QW-ALT-PO-ID-YY;*/
     /* OR PA0QM001.PA0QM-ALT-PO-ID-MM NE PA0QW01.PA0QW-ALT-PO-ID-MM;*/
     /* OR PA0QM001.PA0QM-ALT-PO-ID-BUY-MM NE*/
     /* PA0QW01.PA0QW-ALT-PO-ID-BUY-MM;*/
     /* OR PA0QM001.PA0QM-ALT-PO-ID-FCTY NE PA0QW01.PA0QW-ALT-PO-ID-FCTY;*/
     || PA0QM001.SY1STNBR != PA0QW01.SY1STNBR
     || PA0QM001.SY2CLRID != PA0QW01.SY2CLRID
     || PA0QM001.XDMCD != PA0QW01.XDMCD
     || PA0QM001.PC2CUXID != PA0QW01.PC2CUXID
     || PA0QM001.KUCCOID != PA0QW01.KUCCOID
     || PA0QM001.KUMSTRID != PA0QW01.KUMSTRID
     || PA0QM001.XNXCD != PA0QW01.XNXCD
     || PA0QM001.PA0QM-SHOW-ALL-SO != PA0QW01.PA0QW-SHOW-ALL-SO)
      ;
      if (PA0QM001.PA1OANBR == PA0QW00.PA1OANBR)
        PA0QW00.PA0QW-REQ-FOR-DATA-FLAG = "N";
      end
      ;
      PA0QW00.PA0QW-KEY-CHANGED = "Y";
      ;
    else
      ;
      PA0QW00.PA0QW-REQ-FOR-DATA-FLAG = "N";
      ;
    end
    ;
  else
    ;
      /* PURGE TEMP STORAGE*/
    ;
    PA0QS-30-TA0050-P();
    ;
    PA0QS-74-INIT-FLAG(); /* INITIALIZE FLAGS*/
    ;
    PA0QW00.PA1OANBR = PA0QM001.PA1OANBR;
    set PA0QW01 empty;
    set PG2REC empty; /* RESET STYLE RECORD*/
    ;
    PA0QW00.PA0QW-REQ-FOR-DATA-FLAG = "Y";
    PA0QW00.PA0QW-KEY-CHANGED = "Y";
    ;
     /* IF INVALID SHOW ALL SO FIELD, DEFAULT*/
    ;
    if (PA0QM001.PA0QM-SHOW-ALL-SO != "Y"
     && PA0QM001.PA0QM-SHOW-ALL-SO != "N")
      PA0QM001.PA0QM-SHOW-ALL-SO = "N";
    end
    ;
    return;
    ;
  end
  ;
  PA0Q-521(); /* HEADER DATA*/
  ;
   /* ------------- End of process PA0Q-520 ----------------------*/
  ;
end // end PA0Q-520

// VALIDATE KEY CHANGED
Function PA0Q-521()
   /* ------------------------------------------------------------*/
   /* VALIDATE KEY CHANGED - VALIDATE FROM BOTTOM OF SCREEN TO*/
   /* THE TOP.*/
   /* ------------------------------------------------------------*/
  ;
   /* VALIDATE O/A QUANTITY FOR O/A TYPE 'ND' NIL TO NIL DIVERSION ONLY*/
  ;
  if (PA0QM001.YETCD == "ND"
   && PA0QM001.PA1OANBR == 0)
    ;
    PA0Q-522(); /* VALIDATE O/A QUANTITY*/
    ;
  end
  ;
   /* VALIDATE SHOW ALL SO FLAG*/
  ;
  PA0Q-523();
  ;
   /* VALIDATE CUSTOMER NUMBER*/
  ;
  if (PA0QM001.KUCCOID != PA0QW01.KUCCOID
   || PA0QM001.KUMSTRID != PA0QW01.KUMSTRID
   || PA0QM001.XNXCD != PA0QW01.XNXCD)
    ;
    PA0QW00.PA0QW-CUST-NBR-CHANGED = "Y";
    ;
  else
    PA0QW00.PA0QW-CUST-NBR-CHANGED = "N";
  end
  ;
   /* IF PROCESSING 'ND' O/A TYPE, THE CUSTOMER INFORMATION MUST BE*/
   /* EMPTY.  IF IT IS NOT, BLANK OUT THE INFO.*/
  ;
  if (PA0QM001.YETCD == "ND")
    PA0QW01.PC2CUXID = " ";
    PA0QM001.PC2CUXID = " ";
    PA0QW01.KUCCOID = 0;
    PA0QM001.KUCCOID = 0;
    PA0QW01.KUMSTRID = 0;
    PA0QM001.KUMSTRID = 0;
    PA0QW01.XNXCD = 0;
    PA0QM001.XNXCD = 0;
  else
    PA0Q-52101(); /* VALIDATE CUSTOMER NUMBER*/
    ;
      /* VALIDATE CUSTOMER XREF*/
    ;
    PA0Q-52102();
    ;
  end
  ;
   /* VALIDATE STYLE/COLOR/DIMENSION*/
  ;
  PA0Q-52103();
  ;
   /* VALIDATE SO CUSTOMER NEED DATE RANGE - EDIT BASED ON PO ID*/
  ;
  if (PA0QM001.YETCD != "OR" /* OVERRUN*/
   && PA0QM001.YETCD != "NO") /* INT'L OVERRUN*/
    PA0Q-52110();
  end
  ;
   /* VALIDATE ALTERNATE PO ID AND FACTORY*/
  ;
   /* PERFORM PA0Q-52104;*/
  ;
   /* VALIDATE PO ID AND FACTORY FOR ALL O/A TYPES EXCEPT OVERRUNS*/
  ;
  if (PA1REC.YETCD != "OR"
   && PA1REC.YETCD != "NO"
   && PA0QM001.YETCD != "OR"
   && PA0QM001.YETCD != "NO")
    PA0Q-52105();
  end
  ;
   /* VALIDATE PO TYPE*/
  ;
  PA0Q-52106();

   /* VALIDATE DIVISION CODE*/
  ;
  PA0Q-52107();
  ;
   /* VALIDATE O/A TYPE*/
  ;
  PA0Q-52108();
  ;
   /* IF TYPE CHANGED, CHECK TO SEE IF THE FACTORY ENTRY BOX NEEDS TO*/
   /* BE REDONE.*/
  ;
  if (PA0QW00.PA0QW-TYPE-CHANGED == "Y")
    PA0Q-52109();
  end
  ;
   /* VALIDATE O/A DESCRIPTION*/
  ;
  if (PA0QM001.PA1OATXT != PA0QW01.PA1OATXT)
    PA0QW01.PA1OATXT = PA0QM001.PA1OATXT;
    PA0QW-UPDATE-HEADER = "Y";
  end
  ;
   /* DETERMINE IF THERE IS AN ERROR IN THE HEADER.  THIS IS SO THAT*/
   /* THE SELECTION FIELD CAN BE PROTECTED.*/
  ;
  if (converseVar.validationMsgNum == 0
   || converseVar.validationMsgNum == 239) /* O/A TYPE REQUIRED WITH UPDATE*/
    PA0QW00.PA0QW-HEADER-ERROR = "N";
  else
    PA0QW00.PA0QW-HEADER-ERROR = "Y";
  end
  ;
   /* VALIDATE PROCESSING 1 STYLE*/
  ;
  PA0Q-524();
  ;
   /* VALIDATE SELECTION FIELD*/
  ;
  PA0Q-525();
  ;
   /* VALIDATE FACTORY ENTRY BOX*/
  ;
  if (converseVar.validationMsgNum != 39) /* O/A TYPE IS MISSING OR INVALID*/
    PA0Q-526();
  end
  ;
   /* PA279: IF THERE IS ONLY ONE FACTORY BUILDING THE PRODUCT, DEFAULT*/
   /* TO THIS FACTORY.*/
  ;
  PA0Q-528();
  ;
   /* ------------- End of process PA0Q-521 ----------------------*/
  ;
end // end PA0Q-521

// VALIDATE CUSTOMER NUMBER
Function PA0Q-52101()
  ;
   /* VALIDATE CUSTOMER NUMBER*/
  ;
   /* CHECK TO SEE IF THE CUSTOMER NUMBER FIELD HAS BE "EOF"ED.  IF IT*/
   /* HAS BEEN, BLANK OUT THE CUSTOMER XREF.*/
  ;
  if (PA0QM001.KUCCOID == 0
   && PA0QM001.KUMSTRID == 0
   && PA0QM001.XNXCD == 0)
    if (PA0QW01.KUCCOID != 0
     || PA0QW01.KUMSTRID != 0
     || PA0QW01.XNXCD != 0)
      PA0QW00.PA0QW-PROCESS-BY-CUSTOMER = "N";
      PA0QW01.KUCCOID = PA0QM001.KUCCOID;
      PA0QW01.KUMSTRID = PA0QM001.KUMSTRID;
      PA0QW01.XNXCD = PA0QM001.XNXCD;
      PA0QW01.PC2CUXID = " ";
      PA0QM001.PC2CUXID = " ";
    end
  else
    PA0QW00.PA0QW-PROCESS-BY-CUSTOMER = "Y";
    set PC2REC empty;
    PC2REC.XGPCD = "02";
    PC2REC.KUCCOID = PA0QM001.KUCCOID;
    PC2REC.KUMSTRID = PA0QM001.KUMSTRID;
    PC2REC.XNXCD = PA0QM001.XNXCD;
    ;
    if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
      PC2REC.PC-PRDCU-APAO-FL = "E"; /* EUROPEAN CUSTOMER ONLY*/
    else
      PC2REC.PC-PRDCU-APAO-FL = " "; /* MVSPROD CUSTOMER*/
    end
    ;
    PA0QS-05-IO3340-SA();
    ;
    if (SQLCA.VAGen_SQLCODE == 100)
      set PA0QM001.KUCCOID cursor, bold;
      set PA0QM001.KUMSTRID bold;
      set PA0QM001.XNXCD bold;
      PA0QW01.PC2CUXID = " ";
      PA0QM001.PC2CUXID = " ";
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(24); /* COMPANY/STORE/DEPT IS MISSING OR INVALID*/
    else
      ;
      PA0QW01.PC2CUXID = PC2REC.PC2CUXID;
      ;
      if (PA0QM001.PC2CUXID == " ")
        PA0QM001.PC2CUXID = PC2REC.PC2CUXID;
      end
      ;
      PA0QW01.KUCCOID = PA0QM001.KUCCOID;
      PA0QW01.KUMSTRID = PA0QM001.KUMSTRID;
      PA0QW01.XNXCD = PA0QM001.XNXCD;
      ;
        /* 12/19/94: DON'T CHECK THIS FOR EUROPEAN O/AS.*/
      ;
      if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
           /* NEXT SENTENCE*/
      else
        if (PA0QM001.YSMXDV == "20" /* NIL O/A*/
         && PC2REC.YSMXDV == "10")  /* DOMESTIC CUSTOMER*/
          PA0QM001.PC2CUXID = PC2REC.PC2CUXID;
          set PA0QM001.KUCCOID cursor, bold;
          set PA0QM001.KUMSTRID bold;
          set PA0QM001.XNXCD bold;
          set PA0QM001.YSMXDV bold;
          set PA0QM001.PC2CUXID bold;
          PAWREC.XXXMODID = "521";
          converseLib.validationFailed(122); /* DOMESTIC CUSTOMER INVALID FOR NIL O/A*/
          return;
        end
      end
      ;
    end
  end
  ;
  ;
   /* ------------- End of process PA0Q-52101 --------------------*/
  ;
end // end PA0Q-52101

// VALIDATE CUSTOMER XREF
Function PA0Q-52102()
  ;
   /* VALIDATE CUSTOMER XREF*/
  ;
  if (PA0QM001.PC2CUXID == "     "
   && PA0QW01.KUCCOID == 0
   && PA0QW01.KUMSTRID == 0
   && PA0QW01.XNXCD == 0)
    PA0QW01.PC2CUXID = PA0QM001.PC2CUXID;
    return;
  end
  ;
   /* IF CUSTOMER XREF "EOF"ED, BLANK OUT THE CUSTOMER NUMBER ALSO.*/
  ;
  if (PA0QM001.PC2CUXID == " "
   && PA0QW01.PC2CUXID != " ")
    ;
      /* IF THE CUSTOMER NUMBER EDITS PRODUCED AN ERROR AND THE CUSTOMER*/
      /* XREF WAS "EOF"ED, THE "EOF" TAKES PRECEDENCE.  SO THE ERROR IS*/
      /* RESET.*/
    ;
    if (converseVar.validationMsgNum == 24 /* COMPANY/STORE/DEPT ISMISSING OR INVALID*/
     || converseVar.validationMsgNum == 122) /* DOMESTIC CUSTOMER INVALID FOR NIL O/A*/
      converseLib.validationFailed(0);
      set PA0QM001.KUCCOID normal;
      set PA0QM001.KUMSTRID normal;
      set PA0QM001.XNXCD normal;
      set PA0QM001.YSMXDV normal;
    end
    ;
    PA0QW01.PC2CUXID = PA0QM001.PC2CUXID;
    PA0QW01.KUCCOID = 0;
    PA0QW01.KUMSTRID = 0;
    PA0QW01.XNXCD = 0;
    PA0QM001.KUCCOID = 0;
    PA0QM001.KUMSTRID = 0;
    PA0QM001.XNXCD = 0;
    return;
  end
  ;
  if (PA0QM001.PC2CUXID != "     ")
    ;
    if (PA0QW01.PC2CUXID != "     "
     && PA0QW01.PC2CUXID != PA0QM001.PC2CUXID
     && PA0QW00.PA0QW-CUST-NBR-CHANGED == "Y")
      set PA0QM001.PC2CUXID cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(24); /* COMPANY/STORE/DEPT IS MISSING OR INVALID*/
    else
      PA0QW00.PA0QW-PROCESS-BY-CUSTOMER = "Y";
      set PC2REC empty;
      PC2REC.XGPCD = "02";
      PC2REC.PC2CUXID = PA0QM001.PC2CUXID;
      ;
      PA0QS-06-IO3340-S();
      ;
      if (SQLCA.VAGen_SQLCODE == 100)
        set PA0QM001.PC2CUXID cursor, bold;
        PAWREC.XXXMODID = "521";
        converseLib.validationFailed(24); /* COMPANY/STORE/DEPT IS MISSING OR INVALID*/
      else
        ;
        PA0QW01.PC2CUXID = PA0QM001.PC2CUXID;
        PA0QW01.KUCCOID = PC2REC.KUCCOID;
        PA0QW01.KUMSTRID = PC2REC.KUMSTRID;
        PA0QW01.XNXCD = PC2REC.XNXCD;
        PA0QW01.XCTCD = PC2REC.XCTCD; /* CUSTOMER COUNTRY*/
        PA0QM001.KUCCOID = PC2REC.KUCCOID;
        PA0QM001.KUMSTRID = PC2REC.KUMSTRID;
        PA0QM001.XNXCD = PC2REC.XNXCD;
        ;
           /* 12/19/94: DON'T CHECK THIS FOR EUROPEAN O/AS.*/
        ;
        if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
              /* NEXT SENTENCE*/
        else
          if (PA0QM001.YSMXDV == "20" /* NIL O/A*/
           && PC2REC.YSMXDV == "10")  /* DOMESTIC CUSTOMER*/
            set PA0QM001.PC2CUXID cursor, bold;
            set PA0QM001.KUCCOID bold;
            set PA0QM001.KUMSTRID bold;
            set PA0QM001.XNXCD bold;
            set PA0QM001.YSMXDV bold;
            PAWREC.XXXMODID = "521";
            converseLib.validationFailed(122); /* DOMESTIC CUST INVALID OF NIL O/A*/
            return;
          end
        end
        ;
      end
    end
  end
  ;
  ;
   /* ------------- End of process PA0Q-52102 --------------------*/
  ;
end // end PA0Q-52102

// VALIDATE STYLE/COLOR/DIMENSION
Function PA0Q-52103()
  ;
   /* VALIDATE STYLE/COLOR/DIMENSION*/
  ;
  if (PA0QM001.XDMCD == " "
   && PA0QM001.SY2CLRID == " "
   && PA0QM001.SY1STNBR == " ")
    PA0QM001.SY1SSTNM = " ";
    PA0QW01.SY1STYNM = " ";
    PA0QW01.SY1STNBR = PA0QM001.SY1STNBR;
    PA0QW01.SY2CLRID = PA0QM001.SY2CLRID;
    PA0QW01.XDMCD = PA0QM001.XDMCD;
    return;
  end
  ;
  if (PA0QM001.XDMCD <= " ")
    if (PA0QM001.SY1STNBR != " ")
      PA0QM001.XDMCD = "00"; /* DEFAULT DIMENSION TO '00'*/
      PA0QW01.XDMCD = "00";
    else
      PA0QW01.XDMCD = PA0QM001.XDMCD;
      PA0QM001.SY1SSTNM = " ";
      PA0QW01.SY1STYNM = " ";
      set PA0QM001.XDMCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(27); /* DIMENSION CODE MISSING OR INVALID*/
    end
  else
    if (PA0QM001.XDMCD != PA0QW01.XDMCD)
      if (PA0QM001.XDMCD in XDMTBL.XDMCD
       && XDMTBL.XXXSTAT == "A")
         /* NEXT SENTENCE*/
      else
        PA0QW01.XDMCD = PA0QM001.XDMCD;
        PA0QM001.SY1SSTNM = " ";
        PA0QW01.SY1STYNM = " ";
        set PA0QM001.XDMCD cursor, bold;
        PAWREC.XXXMODID = "521";
        converseLib.validationFailed(27); /* DIMENSION CODE MISSING OR INVALID*/
      end
    end
  end
  ;
  if (PA0QM001.SY1STNBR <= " "
   || PA0QM001.SY2CLRID <= " ")
    PA0QW01.SY1STNBR = PA0QM001.SY1STNBR;
    PA0QW01.SY2CLRID = PA0QM001.SY2CLRID;
    PA0QM001.SY1SSTNM = " ";
    PA0QW01.SY1STYNM = " ";
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(26); /* STYLE/COLOR IS MISSING OR INVALID*/
    ;
    if (PA0QM001.SY1STNBR <= " "
     && PA0QM001.SY2CLRID <= " ")
      set PA0QM001.SY1STNBR cursor, bold;
      set PA0QM001.SY2CLRID bold;
    else
      if (PA0QM001.SY1STNBR <= " ")
        set PA0QM001.SY1STNBR cursor, bold;
      else
        set PA0QM001.SY2CLRID cursor, bold;
      end
    end
    ;
    return;
    ;
  end
  ;
  if (PA0QM001.SY1STNBR != PA0QW01.SY1STNBR
   || PA0QM001.SY2CLRID != PA0QW01.SY2CLRID
   || PA0QM001.XDMCD != PA0QW01.XDMCD)
    PA0QW00.PA0QW-PRODUCT-CHANGED = "Y";
    set PG2REC empty;
    PG2REC.SY1STNBR = PA0QM001.SY1STNBR;
    PG2REC.SY2CLRID = PA0QM001.SY2CLRID;
    PG2REC.XDMCD = PA0QM001.XDMCD;
    PG2REC.XGPCD = "02";
    ;
    PA0QS-07-IO3120-S();
    ;
    if (SQLCA.VAGen_SQLCODE == 100)
      set PA0QM001.SY1STNBR cursor, bold;
      set PA0QM001.SY2CLRID bold;
      set PA0QM001.XDMCD bold;
      PA0QM001.SY1SSTNM = " ";
      PA0QM001.PA0QM-01-COMP-PGM-MSG = " ";
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(37); /* INVALID STYLE, COLOR, DIMENSION*/
      return;
    end
    ;
    PA0QW01.PG1SC4CD = PG2REC.PG1SC4CD;
    PA0QW01.SY1STNBR = PG2REC.SY1STNBR;
    PA0QW01.SY2CLRID = PG2REC.SY2CLRID;
    PA0QW01.XDMCD = PG2REC.XDMCD;
    PA0QW01.SY1STYNM = PG2REC.SY1STYNM;
    /* MOVE PG2REC.SY1STYNM TO PA0QW01.SY1STYNM;*/
    /* MOVE PG2REC.SY1STYNM TO PA0QM001.SY1STYNM;*/
    PA0QM001.SY1SSTNM = PG2REC.SY1SSTNM;
    ;
    if (PG2REC.XLCCD1 == "05" /* LIFE CYCLE CODE*/
     || PG2REC.XLCCD1 == "10" 
     || PG2REC.XLCCD1 == "20")
      PA0QW00.PA0QW-SIDE1-PRODUCT = "N";
       /* IF PG2REC.XBCCD EQ '05';/* 05/26/93: REMOVE SIDE-1*/
      if (PG2REC.XBCCD == "07")
        PA0QW00.PA0QW-SIDE1-PRODUCT = "Y";
      end
    else
      set PA0QM001.SY1STNBR cursor, bold;
      set PA0QM001.SY2CLRID bold;
      set PA0QM001.XDMCD bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(47); /* STYLE/COLOR/DIM HAS INACTIVE LIFE CYCLE*/
    end
    ;
    if (PG2REC.XLCCD1 == "20"
     && PA0QW00.PA0QW-CLOSEOUT-WARNING == "N")
      set PA0QM001.SY1STNBR cursor, bold;
      set PA0QM001.SY2CLRID bold;
      set PA0QM001.XDMCD bold;
      PA0QW00.PA0QW-CLOSEOUT-WARNING = "Y";
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(205); /* WARNING: THIS PRODUCT CLOSED OUT*/
    end
    ;
    if (PA0QM001.YETCD == "FT")
      return;
    end
    ;
     /* 12/19/94: DON'T CHECK THIS FOR EUROPEAN O/AS.*/
    ;
    if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
        /* NEXT SENTENCE*/
    else
      if (PA0QM001.YSMXDV == "10" /* IF DOMESTIC O/A*/
       && PG2REC.XDVCD1 == "02")  /* NIL PRODUCT*/
        set PA0QM001.SY1STNBR cursor, bold;
        set PA0QM001.SY2CLRID bold;
        set PA0QM001.XDMCD bold;
        PAWREC.XXXMODID = "521";
        converseLib.validationFailed(190); /* NIL ONLY PRODUCT CANNOTBE USED WITH*/
                               /* DOMESTIC O/A TYPE*/
      end
    end
    ;
  else
    PA0QW00.PA0QW-PRODUCT-CHANGED = "N";
     /* IF PF18 HIT, MAKE SURE SCHEDULER CODE IS RETRIEVED*/
    if (converseVar.eventKey is pf18
     && PA0QW01.PG1SC4CD == " ")
      set PG2REC empty;
      PG2REC.SY1STNBR = PA0QM001.SY1STNBR;
      PG2REC.SY2CLRID = PA0QM001.SY2CLRID;
      PG2REC.XDMCD = PA0QM001.XDMCD;
      PG2REC.XGPCD = "02";
      ;
      PA0QS-07-IO3120-S();
      ;
      if (SQLCA.VAGen_SQLCODE == 100)
        set PA0QM001.SY1STNBR cursor, bold;
        set PA0QM001.SY2CLRID bold;
        set PA0QM001.XDMCD bold;
        PA0QM001.SY1SSTNM = " ";
        PA0QM001.PA0QM-01-COMP-PGM-MSG = " ";
        PAWREC.XXXMODID = "521";
        converseLib.validationFailed(37); /* INVALID STYLE, COLOR, DIMENSION*/
        return;
      end
      ;
      PA0QW01.PG1SC4CD = PG2REC.PG1SC4CD;
      ;
    end
  end
  ;
  ;
  ;
   /* ------------- End of process PA0Q-52103 --------------------*/
  ;
end // end PA0Q-52103

// VALIDATE PO ID AND FACTORY
Function PA0Q-52105()
  ;
   /* VALIDATE PO ID FACTORY*/
  ;
  if (PA0QM001.PA0QM-PO-ID-FCTY != PA0QW01.PA0QW-PO-ID-FCTY)
    ;
    if (PA0QM001.PA0QM-PO-ID-FCTY == "    ")
      PA0QW01.PA0QW-PO-ID-FCTY = PA0QM001.PA0QM-PO-ID-FCTY;
    else
      set FY1REC empty;
      FY1REC.XGPCD = "02";
      FY1REC.FY1FCTYC = PA0QM001.PA0QM-PO-ID-FCTY;
      ;
      PA0QS-08-IO2810-S();
      ;
      if (SQLCA.VAGen_SQLCODE == 100)
        set PA0QM001.PA0QM-PO-ID-FCTY cursor, bold;
        PAWREC.XXXMODID = "521";
        converseLib.validationFailed(20); /* FACTORY CODE IS MISSING OR INVALID*/
      else
        PA0QW01.PA0QW-PO-ID-FCTY = PA0QM001.PA0QM-PO-ID-FCTY;
      end
    end
  end
  ;
   /* VALIDATE PO ID*/
  ;
  if (PA0QM001.PA0QM-PO-ID-BUY-MM == "  "
   && PA0QM001.PA0QM-PO-ID-MM == "  "
   && PA0QM001.PA0QM-PO-ID-YY == "  ")
    PA0QW01.PA0QW-PO-ID-YY = PA0QM001.PA0QM-PO-ID-YY;
    PA0QW01.PA0QW-PO-ID-MM = PA0QM001.PA0QM-PO-ID-MM;
    PA0QW01.PA0QW-PO-ID-BUY-MM = PA0QM001.PA0QM-PO-ID-BUY-MM;
    set PA0QM001.PA0QM-PO-ID-YY cursor, bold;
    set PA0QM001.PA0QM-PO-ID-MM bold;
    set PA0QM001.PA0QM-PO-ID-BUY-MM bold;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(238); /* PO ID REQUIRED*/
    return;
  end
  ;
  if (PA0QM001.PA0QM-PO-ID-BUY-MM != PA0QW01.PA0QW-PO-ID-BUY-MM)
    if (PA0QM001.PA0QM-PO-ID-BUY-MM < "01"
     || PA0QM001.PA0QM-PO-ID-BUY-MM > "12")
      set PA0QM001.PA0QM-PO-ID-BUY-MM cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(175); /* MONTH MUST BE BETWEEN 1 AND 12*/
    else
      PA0QW01.PA0QW-PO-ID-BUY-MM = PA0QM001.PA0QM-PO-ID-BUY-MM;
    end
  end
  ;
  if (PA0QM001.PA0QM-PO-ID-MM != PA0QW01.PA0QW-PO-ID-MM)
    if (PA0QM001.PA0QM-PO-ID-MM < "01"
     || PA0QM001.PA0QM-PO-ID-MM > "12")
      set PA0QM001.PA0QM-PO-ID-MM cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(175); /* MONTH MUST BE BETWEEN 1 AND 12*/
    else
      PA0QW01.PA0QW-PO-ID-MM = PA0QM001.PA0QM-PO-ID-MM;
    end
  end
  ;
  if (PA0QM001.PA0QM-PO-ID-YY != PA0QW01.PA0QW-PO-ID-YY)
    if (PA0QM001.PA0QM-PO-ID-YY < "00"
     || PA0QM001.PA0QM-PO-ID-YY > "99")
      set PA0QM001.PA0QM-PO-ID-YY cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(215); /* YEAR MUST BE NUMERIC*/
    else
      PA0QW01.PA0QW-PO-ID-YY = PA0QM001.PA0QM-PO-ID-YY;
    end
  end
  ;
  /* *************************** Y2K OUT BEGIN *************************/
  /*  */
   /* MOVE IN THE CENTURY*/
  /* MOVE 19 TO PA0QW01.PA0QW-PO-ID-CC;*/
  /*  */
  /* *************************** Y2K OUT END ***************************/
  /*  */
  ;
   /* VALIDATE TO MAKE SURE THAT THERE IS A TWO MONTH SPAN ON PO ID*/
  ;
  PA0QW01.PA0QW-EDIT-MONTH = PA0QW01.PA0QW-PO-ID-MM;
  PA0QW01.PA0QW-EDIT-MONTH = PA0QW01.PA0QW-EDIT-MONTH + 2;
  ;
  if (PA0QW01.PA0QW-PO-ID-MM > "10")
    PA0QW01.PA0QW-EDIT-MONTH = PA0QW01.PA0QW-EDIT-MONTH - 12;
  end
  ;
  if (PA0QW01.PA0QW-EDIT-MONTH != PA0QW01.PA0QW-PO-ID-BUY-MM)
    set PA0QM001.PA0QM-PO-ID-MM cursor, bold;
    set PA0QM001.PA0QM-PO-ID-BUY-MM bold;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(212); /* MONTH RANGE MUST BE 2 MONTHS APART*/
    return;
  end
  ;
   /* VALIDATE PO ID AGAINST CURRENT BUY MONTH*/
  ;
  PA0QW01.PA0QW-CURR-BUY-YY = PA0QW01.PA0QW-PO-ID-YY;
  PA0QW01.PA0QW-CURR-BUY-MM = PA0QW01.PA0QW-PO-ID-BUY-MM;
  ;
  if (PA0QW01.PA0QW-PO-ID-BUY-MM == "01"
   || PA0QW01.PA0QW-PO-ID-BUY-MM == "02")
    if (PA0QW01.PA0QW-CURR-BUY-YY == 99)
      PA0QW01.PA0QW-CURR-BUY-YY = 0;
    else
      PA0QW01.PA0QW-CURR-BUY-YY = PA0QW01.PA0QW-CURR-BUY-YY + 1;
    end
  end
   /*  */
   /* *************************** Y2K IN BEGIN **************************/
   /*  */
   /* IF PA0QW01.PA0QW-CURR-BUY-YY GT 60;*/
     /* MOVE '19' TO PA0QW01.PA0QW-PO-ID-CC;*/
   /* ELSE;*/
     /* MOVE '20' TO PA0QW01.PA0QW-PO-ID-CC;*/
   /* END;*/
   /*  */
  if (PA0QW01.PA0QW-PO-ID-YY > "60")
    PA0QW01.PA0QW-PO-ID-CC = "19";
  else
    PA0QW01.PA0QW-PO-ID-CC = "20";
  end
   /*  */
   /* *************************** Y2K IN END ****************************/
   /*  */
   /* IF THE BUY MONTH IS EQUAL TO THE CURRENT BUY MONTH THEN THE*/
   /* CURRENT SYSTEM DATE MUST BE >= THE CUTOFF BUY DATE.  IF THE*/
   /* CURRENT SYSTEM DATE IS = TO THE CUTOFF BUY DATE, THE CURRENT*/
   /* SYSTEM TIME MUST BE > THAN THE CUTOFF BUY TIME.*/
   /*  */
   /* THIS EDIT ONLY NEEDS TO BE DONE ON NIL O/AS AND DOMESTIC*/
   /* O/AS THAT DO NOT COME FROM FORECASTING.  TO CHECK THIS*/
   /* THE YETTBL MUST BE READ.*/
  ;
  if (PA0QW01.PA0QW-CURR-BUY-YYMM == PAWREC.PAWBUYYM)
    ;
    PA0Q-527(); /* VALIDATE CURRENT BUY MONTH*/
    ;
  end
  ;
   /* MAKE SURE PO ID INFO PROVIDED WHEN PO ID FACTORY ENTERED*/
  ;
  if (PA0QW01.PA0QW-PO-ID-FCTY != " "
   && PA0QW01.PA0QW-PO-ID-YY == " "
   && PA0QW01.PA0QW-PO-ID-MM == " "
   && PA0QW01.PA0QW-PO-ID-BUY-MM == " ")
    set PA0QM001.PA0QM-PO-ID-YY cursor, bold;
    set PA0QM001.PA0QM-PO-ID-MM bold;
    set PA0QM001.PA0QM-PO-ID-BUY-MM bold;
    set PA0QM001.PA0QM-PO-ID-FCTY bold;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(219); /* PO ID FACTORY NOT VALID WITHOUT OTHER INFO*/
    return;
  end
  ;
  ;
   /* ------------- End of process PA0Q-52105 --------------------*/
  ;
end // end PA0Q-52105

// VALIDATE PO TYPE
Function PA0Q-52106()
  ;
   /* VALIDATE PO TYPE*/
  ;
   /* IF THE O/A TYPE IS AN OVER RUN, HARD CODE THE PO TYPE TO BE AN*/
   /* OVER RUN*/
  ;
  if (PA0QM001.YETCD == "OR"
   || PA0QM001.YETCD == "NO") /* NIL OVERRUN*/
    PA0QW01.PC4ORTYP = "OR";
    PA0QM001.PC4ORTYP = "OR";
    return;
  end
  ;
  if (PA0QM001.YETCD == "ST")
    PA0QW01.PC4ORTYP = "ST";
    PA0QM001.PC4ORTYP = "ST";
    return;
  end
  ;
   /* PA274: IF THE PO TYPE IS BLANK AND THE STYLE, COLOR, DIMENSION*/
   /* WAS ENTERED, DEFAULT THE PO TYPE BASED ON THE TYPE OF PRODUCT.*/
  ;
  if (PA0QM001.PC4ORTYP == " "
   || PA0QW00.PA0QW-PRODUCT-CHANGED == "Y")
    if (PA0QM001.SY1STNBR != " "
     || PA0QM001.SY2CLRID != " "
     || PA0QM001.XDMCD != " ")
      ;
      if (PA0QM001.PC4ORTYP > " ")
        PA0QW01.PC4ORTYP = PA0QM001.PC4ORTYP;
      else
        PA0QW01.PC4ORTYP = "FT";
        PA0QM001.PC4ORTYP = "FT";
      end
      ;
      return;
      ;
    else
      set PA0QM001.SY1STNBR cursor, bold;
      set PA0QM001.SY2CLRID bold;
      set PA0QM001.XDMCD bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(107); /* STYLE/COLOR/DIMENSION MISSING*/
      return;
    end
    ;
  end
  ;
  PA0QW01.PC4ORTYP = PA0QM001.PC4ORTYP;
  ;
  if (PA0QM001.PC4ORTYP != "FT"
   && PA0QM001.PC4ORTYP != "OR"
   && PA0QM001.PC4ORTYP != "ST")
    set PA0QM001.PC4ORTYP cursor, bold;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(213); /* PO TYPE MUST BE 'FT', 'OR', OR 'ST'*/
  end
  ;
  ;
   /* ------------- End of process PA0Q-52106 --------------------*/
  ;
end // end PA0Q-52106

// VALIDATE DIVISION CODE
Function PA0Q-52107()
  ;
   /* VALIDATE DIVISION CODE*/
  ;
  if (PA0QM001.YETCD == "DN" /* DOMESTIC TO NIL DIVERSION*/
   || PA0QM001.YETCD == "NI") /* NIL TO DOMESTIC DIVERSION*/
    PA0QW01.YSMXDV = "*"; /* DEFAULT THE DIVISION TO PICK UP*/
    return; /* BOTH NIL AND DOMESTIC INFORMATION*/
  end
  ;
  if (PA0QM001.YSMXDV == " ")
    PA0QW01.YSMXDV = PA0QM001.YSMXDV;
    return;
  end
  ;
  PA0QW01.YSMXDV = PA0QM001.YSMXDV;
  ;
  if (PA0QM001.YSMXDV != "10"
   && PA0QM001.YSMXDV != "20"
   && PA0QM001.YSMXDV != "*")
    set PA0QM001.YSMXDV cursor, bold;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(214); /* DIVISION INVALID, MUST BE '10', '20', OR '*'*/
  end
  ;
  if (PA0QM001.YSMXDV == "20"
   || PA0QM001.YSMXDV == "*")
    if (PA0QM001.SY1STNBR == " "
     && PA0QM001.SY2CLRID == " "
     && PA0QM001.XDMCD == " "
     && PA0QW00.PA0QW-PROCESS-BY-CUSTOMER == "N")
      set PA0QM001.SY1STNBR cursor, bold;
      set PA0QM001.SY2CLRID bold;
    end
  end
  ;
   /* ------------- End of process PA0Q-52107 --------------------*/
  ;
end // end PA0Q-52107

// VALIDATE O/A TYPE
Function PA0Q-52108()
  ;
   /* VALIDATE O/A TYPE*/
  ;
  if (PA0QM001.YETCD == " ")
    PA0QW01.YETCD = PA0QM001.YETCD;
    ;
    if (converseVar.eventKey is pf9
     || converseVar.eventKey is pf18)
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(239); /* O/A TYPE REQUIRED WITH UPDATE*/
    end
    ;
    return;
  end
  ;
  ;
  if (PA0QM001.YETCD in YETTBL.YETCD)
    if (YETTBL.XXXSTAT[sysVar.arrayIndex] != "A")
      set PA0QM001.YETCD cursor, modified, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(39); /* O/A TYPE IS MISSING OR INVALID*/
      return;
    end
  else
    set PA0QM001.YETCD cursor, modified, bold;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(39); /* O/A TYPE IS MISSING OR INVALID*/
    return;
  end
  ;
   /* 12/19/94: PROCESS EUROPEAN O/AS LIKE DOMESTIC*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    PA0QW00.PA0QW-NIL-OA = "N";
  else
    if (YETTBL.YETNILFL[sysVar.arrayIndex] == "Y") /* NIL O/A TYPE*/
      PA0QW00.PA0QW-NIL-OA = "Y";
      if (COMMAREA.XDVCD != "02")
        if (PA0QM001.YETCD != "NI")
          if (PA0QM001.YETCD != "DN")
            set PA0QM001.YETCD cursor, modified, bold;
            PAWREC.XXXMODID = "521";
            converseLib.validationFailed(39); /* O/A TYPE IS MISSING OR INVALID*/
            return;
          end
        end
      end
    else
      PA0QW00.PA0QW-NIL-OA = "N";
      if (COMMAREA.XDVCD != "01") /* NOT A DOMESTIC USER*/
        if (PA0QM001.YETCD != "ST")
          set PA0QM001.YETCD cursor, modified, bold;
          PAWREC.XXXMODID = "521";
          converseLib.validationFailed(39); /* O/A TYPE IS MISSING OR INVALID*/
          return;
        end
      end
    end
  end
  ;
  if (PA0QM001.YETCD == PA0QW01.YETCD)
    return;
  end
   /* THE FOLLOWING CODE IS TO CHECK TO MAKE SURE THAT WHEN ADDING A*/
   /* NEW O/A, THE O/A TYPE MUST BE VALIDATED.  THIS VALIDATION TAKES*/
   /* INTO CONSIDERATION THE O/AS THAT COME FROM FORECASTING.*/
  ;
  if (PA0QW00.PA1OANBR == 0
   && PA0QM001.YETCD != "ST"
   && PA0QM001.YETCD != " ")
    ;
    if (YETTBL.YETNILFL[sysVar.arrayIndex] == "N")
      if (YETTBL.YETBOIND[sysVar.arrayIndex] == "B")
        set PA0QM001.YETCD cursor, modified, bold;
        PAWREC.XXXMODID = "521";
        converseLib.validationFailed(39); /* O/A TYPE IS MISSING OR INVALID*/
        return;
      end
    else
      if (PA0QM001.YETCD == "DN"
       || PA0QM001.YETCD == "NI")
        set PA0QM001.YETCD cursor, modified, bold;
        PAWREC.XXXMODID = "521";
        converseLib.validationFailed(39); /* O/A TYPE IS MISSING OR INVALID*/
        return;
      end
    end
    ;
  end
  ;
   /* STYLE, COLOR, DIMENSION REQUIRED FOR FACTORY TRANSFERS*/
   /* AND NIL DIVERSIONS.*/
  ;
  if (PA0QM001.YETCD == "FT"
   || PA0QM001.YETCD == "ND")
    if (PA0QW01.SY1STNBR == " "
     && PA0QW01.SY2CLRID == " "
     && PA0QW01.XDMCD == " ")
      set PA0QM001.YETCD bold;
      set PA0QM001.SY1STNBR cursor, bold;
      set PA0QM001.SY2CLRID bold;
      set PA0QM001.XDMCD bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(248); /* STYLE/COLOR/DIM REQUIRED FOR 'FT'*/
    end
  end
  ;
  if (PA0QW01.YETCD == "  ")
    if (PA0QM001.YETCD == "OR")
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    else
      PA0QW01.YETCD = PA0QM001.YETCD;
      if (PA0QM001.YETCD == "NO") /* NIL OVERRUN*/
        PA0QW00.PA0QW-SETUP-DATE = XX0XW01.XX0XWDAT;
        PA0QS-63-ORNO();
      end
      return;
    end
  end
  ;
  if (PA0QW00.PA1OANBR == 0
   && PA0QM001.PA1OANBR == 0)
    PA0QW01.YETCD = PA0QM001.YETCD;
    return;
  end
  ;
   /* VALIDATE TYPE CHANGE*/
  ;
  PA0QW01.PA0QW-UPDATE-HEADER = "Y";
  PA0QW00.PA0QW-TYPE-CHANGED = "N";
  ;
  if (PA0QW01.YETCD == "DA")
    if (PA0QM001.YETCD == "EO" 
     || PA0QM001.YETCD == "ST" /* PA1122: Create Stock Transfer Type OA*/
     || PA0QM001.YETCD == "NI")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  ;
  if (PA0QW01.YETCD == "DR")
    if (PA0QM001.YETCD == "DN" 
     || PA0QM001.YETCD == "ST" /* PA1122: Create Stock Transfer Type OA*/
     || PA0QM001.YETCD == "EO")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  ;
  if (PA0QW01.YETCD == "DD")
    if (PA0QM001.YETCD == "DM"
     || PA0QM001.YETCD == "DS"
     || PA0QM001.YETCD == "DT"
     || PA0QM001.YETCD == "SE")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  ;
  if (PA0QW01.YETCD == "DM")
    if (PA0QM001.YETCD == "DS"
     || PA0QM001.YETCD == "DT"
     || PA0QM001.YETCD == "DD"
     || PA0QM001.YETCD == "SE")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  ;
  if (PA0QW01.YETCD == "DT")
    if (PA0QM001.YETCD == "DM"
     || PA0QM001.YETCD == "DS"
     || PA0QM001.YETCD == "DD"
     || PA0QM001.YETCD == "SE")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  ;
  if (PA0QW01.YETCD == "DS")
    if (PA0QM001.YETCD == "DD"
     || PA0QM001.YETCD == "DM"
     || PA0QM001.YETCD == "DT"
     || PA0QM001.YETCD == "SE")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  ;
  if (PA0QW01.YETCD == "SE")
    if (PA0QM001.YETCD == "DD"
     || PA0QM001.YETCD == "DM"
     || PA0QM001.YETCD == "DT"
     || PA0QM001.YETCD == "DS")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  if (PA0QW01.YETCD == "NM")
    if (PA0QM001.YETCD == "NT")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  ;
  if (PA0QW01.YETCD == "NT")
    if (PA0QM001.YETCD == "NM")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  ;
  if (PA0QW01.YETCD == "OR")
    set PA0QM001.YETCD cursor, bold;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
    return;
    /* END;*/
  end
  ;
  if (PA0QW01.YETCD == "PR")
    set PA0QM001.YETCD cursor, bold;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
    return;
     /* END;*/
  end
  ;
  if (PA0QW01.YETCD == "EO")
    if (PA0QM001.YETCD == "DA"
     || PA0QM001.YETCD == "DR")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  ;
  if (PA0QW01.YETCD == "ST")
    if (PA0QM001.YETCD == "DA"
     || PA0QM001.YETCD == "DR"
     || PA0QM001.YETCD == "NA"
     || PA0QM001.YETCD == "NR")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  ;
  if (PA0QW01.YETCD == "NI")
    if (PA0QM001.YETCD == "DA")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  ;
  if (PA0QW01.YETCD == "NA"
   || PA0QW01.YETCD == "NR")
    if (PA0QM001.YETCD == "ST")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  ;
  if (PA0QW01.YETCD == "DN")
    if (PA0QM001.YETCD == "DR")
      PA0QW01.YETCD = PA0QM001.YETCD;
      PA0QW00.PA0QW-TYPE-CHANGED = "Y";
      return;
    else
      set PA0QM001.YETCD cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
      return;
    end
  end
  ;
  if (PA0QW01.YETCD != PA0QM001.YETCD)
    set PA0QM001.YETCD cursor, bold;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO THIS*/
                                   /* CODE*/
    return;
  end
  ;
   /* ------------- End of process PA0Q-52108 --------------------*/
  ;
end // end PA0Q-52108

// REDO FCTY BOX ON TYPE CHANGE
Function PA0Q-52109()
  ;
   /* REDO THE FACTORY ENTRY BOX ON A TYPE CHANGE*/
  ;
  if (PA0QW01.YETCD in PABTBL.YETCD
   && PABTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    PA0QW00.PABAFYQT = PABTBL.PABAFYQT[sysVar.arrayIndex];
    PA0QW00.PABVYBTS = PABTBL.PABVYBTS[sysVar.arrayIndex];
  else
    PA0QW00.PABAFYQT = "N";
    PA0QW00.PABVYBTS = "N";
  end
  ;
  if (PA0QW00.PABAFYQT == "N")
    PA0QW00.XX5 = 1;
    while (PA0QW00.XX5 <= 4)
      PA0QM001.PA4FCTQT[XX5] = 0;
      PA0QW01.PA4FCTQT[XX5] = 0;
      PA0QW00.XX5 = PA0QW00.XX5 + 1;
    end
  end
  ;
   /* ------------- End of process PA0Q-52109 --------------------*/
  ;
end // end PA0Q-52109

// VALIDATE END SO CUST NEED DATE
Function PA0Q-52110()
  ;
   /* VALIDATE SO CUSTOMER NEED DATE RANGE*/
  ;
   /* CHECK FOR EOF*/
  ;
  if (PA0QM001.PA0QM-OP-CUST-NEED2-MM == 0
   && PA0QM001.PA0QM-OP-CUST-NEED2-YY == 0)
    PA0QW00.PA0QW-MULT-SO-FLAG = "N";
    PA0QW01.PA0QW-OP-CUST-NEED2-DT = 0;
    return;
  end
  ;
   /* CHECK TO SEE IF THE PO ID MONTH RANGE HAS BEEN CHANGED, IF SO*/
   /* NEW SO CUSTOMER NEED DATES NEED TO BE ASSIGNED.*/
  ;
  if (PA0QM001.PA0QM-PO-ID-YY != PA0QW01.PA0QW-PO-ID-YY
   || PA0QM001.PA0QM-PO-ID-MM != PA0QW01.PA0QW-PO-ID-MM
   || PA0QM001.PA0QM-PO-ID-BUY-MM != PA0QW01.PA0QW-PO-ID-BUY-MM)
    PA0QW01.PA0QW-OP-CUST-NEED1-DT = 0;
    PA0QW01.PA0QW-OP-CUST-NEED2-DT = 0;
    return;
  end
  ;
   /* IF 'DN' OR 'NI' AND USER'S DIVISION SIGNON IS NOT '10',*/
   /* DEFAULT THRU SO CUSTOMER NEED DATE.*/
  ;
  if (PA0QM001.YETCD == "DN"
   || PA0QM001.YETCD == "NI")
    if (COMMAREA.XDVCD != "01")
      if (PA0QM001.PA0QM-OP-CUST-NEED2-MM != 
      PA0QW01.PA0QW-OP-CUST-NEED1-MM
       || PA0QM001.PA0QM-OP-CUST-NEED2-YY != 
      PA0QW01.PA0QW-OP-CUST-NEED1-YY)
        PA0QW01.PA0QW-OP-CUST-NEED2-DT = PA0QW01.PA0QW-OP-CUST-NEED1-DT;
        PAWREC.XXXMODID = "521";
        converseLib.validationFailed(293); /* NOT AUTHORIZED TO CHANGE THRU SO DATE*/
        PA0QW00.PA0QW-MULT-SO-FLAG = "N";
      end
    end
     /* DEFAULT THE FROM SO NEED DATE TO INT'L BEGIN DATE*/
    PA0QW01.PA0QW-OP-CUST-NEED1-DD = 01; /* ALWAYS FIRST OF MONTH*/
    PA0QW01.PA0QW-OP-CUST-NEED1-MM = PA0QW01.PA0QW-PO-ID-BUY-MM;
    PA0QW01.PA0QW-OP-CUST-NEED1-YY = PA0QW01.PA0QW-PO-ID-YY;
    ;
    if (PA0QW01.PA0QW-OP-CUST-NEED1-YY < 93)
      PA0QW01.PA0QW-OP-CUST-NEED1-CC = 20;
    else
      PA0QW01.PA0QW-OP-CUST-NEED1-CC = 19;
    end
    ;
    if (PA0QW01.PA0QW-OP-CUST-NEED1-MM < 03)
      if (PA0QW01.PA0QW-OP-CUST-NEED1-YY == 99)
        PA0QW01.PA0QW-OP-CUST-NEED1-YY = 00;
        PA0QW01.PA0QW-OP-CUST-NEED1-CC = PA0QW01.PA0QW-OP-CUST-NEED1-CC + 1;
      else
        PA0QW01.PA0QW-OP-CUST-NEED1-YY = PA0QW01.PA0QW-OP-CUST-NEED1-YY + 1;
      end
    end
    ;
    if (COMMAREA.XDVCD != "01")
      return;
    end
    ;
  end
  ;
  if (PA0QM001.PA0QM-OP-CUST-NEED1-YY != PA0QW01.PA0QW-OP-CUST-NEED1-YY)
    if (PA0QM001.PA0QM-OP-CUST-NEED1-YY < 0
     || PA0QM001.PA0QM-OP-CUST-NEED1-YY > 99)
      set PA0QM001.PA0QM-OP-CUST-NEED1-YY cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(215); /* YEAR MUST BE NUMERIC*/
    else
      PA0QW01.PA0QW-OP-CUST-NEED1-YY = PA0QM001.PA0QM-OP-CUST-NEED1-YY;
      if (PA0QW01.PA0QW-OP-CUST-NEED1-CC == 0)
        if (PA0QW01.PA0QW-OP-CUST-NEED1-YY < 93)
          PA0QW01.PA0QW-OP-CUST-NEED1-CC = 20;
        else
          PA0QW01.PA0QW-OP-CUST-NEED1-CC = 19;
        end
      end
    end
  end
  ;
  if (PA0QM001.PA0QM-OP-CUST-NEED1-MM != PA0QW01.PA0QW-OP-CUST-NEED1-MM)
    if (PA0QM001.PA0QM-OP-CUST-NEED1-MM < 1
     || PA0QM001.PA0QM-OP-CUST-NEED1-MM > 12)
      set PA0QM001.PA0QM-OP-CUST-NEED1-MM cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(175); /* MONTH MUST BE BETWEEN 1 AND 12*/
    else
      PA0QW01.PA0QW-OP-CUST-NEED1-MM = PA0QM001.PA0QM-OP-CUST-NEED1-MM;
    end
  end
  ;
  if (PA0QM001.PA0QM-OP-CUST-NEED2-YY != PA0QW01.PA0QW-OP-CUST-NEED2-YY)
    if (PA0QM001.PA0QM-OP-CUST-NEED2-YY < 0
     || PA0QM001.PA0QM-OP-CUST-NEED2-YY > 99)
      set PA0QM001.PA0QM-OP-CUST-NEED2-YY cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(215); /* YEAR MUST BE NUMERIC*/
    else
      PA0QW01.PA0QW-OP-CUST-NEED2-YY = PA0QM001.PA0QM-OP-CUST-NEED2-YY;
      if (PA0QW01.PA0QW-OP-CUST-NEED2-YY < 93)
        PA0QW01.PA0QW-OP-CUST-NEED2-CC = PA0QW01.PA0QW-OP-CUST-NEED2-CC + 1;
      else
        PA0QW01.PA0QW-OP-CUST-NEED2-CC = 19;
      end
    end
  end
  ;
  if (PA0QM001.PA0QM-OP-CUST-NEED2-MM != PA0QW01.PA0QW-OP-CUST-NEED2-MM)
    if (PA0QM001.PA0QM-OP-CUST-NEED2-MM < 1
     || PA0QM001.PA0QM-OP-CUST-NEED2-MM > 12)
      set PA0QM001.PA0QM-OP-CUST-NEED2-MM cursor, bold;
      PAWREC.XXXMODID = "521";
      converseLib.validationFailed(175); /* MONTH MUST BE BETWEEN 1 AND 12*/
    else
      PA0QW01.PA0QW-OP-CUST-NEED2-MM = PA0QM001.PA0QM-OP-CUST-NEED2-MM;
    end
  end
  ;
   /* DEFAULT THE DAY TO THE END OF THE MONTH*/
  ;
  PA0QW01.PA0QW-OP-CUST-NEED2-DD = 31;
  ;
   /* MAKE SURE THAT THE THRU SO NEED DATE IS LATER THAN THE FROM.*/
  ;
  if (PA0QW01.PA0QW-OP-CUST-NEED2-DT >= PA0QW01.PA0QW-OP-CUST-NEED1-DT)
     /* NEXT SENTENCE;*/
  else
    set PA0QM001.PA0QM-OP-CUST-NEED2-MM cursor, bold;
    set PA0QM001.PA0QM-OP-CUST-NEED2-YY bold;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(292); /* ENDING SO CUST NEED DATE MUST BE > BEGINNING*/
    return;
  end
  ;
  PA0QW00.PA0QW-MULT-SO-FLAG = "Y";
  ;
   /* ------------- End of process PA0Q-52110 --------------------*/
  ;
end // end PA0Q-52110

// VALIDATE O/A QTY FOR 'ND'
Function PA0Q-522()
   /* ------------------------------------------------------------*/
   /* FOR O/A TYPE 'ND', MAKE SURE THE O/A QUANTITY IS ENTERED AND*/
   /* A NEGATIVE NUMBER*/
   /* ------------------------------------------------------------*/
  ;
   /* VALIDATE O/A QUANTITY FOR O/A TYPE 'ND' NIL TO NIL DIVERSION ONLY*/
  ;
  if (PA0QM001.PA1RQQTY == 0)
    set PA0QM001.PA1RQQTY cursor, bold;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(249); /* NEGATIVE O/A QUANTITY REQUIRED*/
    return;
  end
  ;
  PA0QW01.PA1RQQTY = PA0QM001.PA1RQQTY;
  ;
  if (PA0QM001.PA1RQQTY > 0)
    set PA0QM001.PA1RQQTY cursor, bold;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(250); /* O/A QUANTITY MUST BE NEGATIVE*/
  end
  ;
  ;
   /* ------------- End of process PA0Q-522 ----------------------*/
  ;
end // end PA0Q-522

// VALIDATE SHOW ALL SO
Function PA0Q-523()
   /* ------------------------------------------------------------*/
   /* VALIDATE SHOW ALL SO FIELD.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0QM001.PA0QM-SHOW-ALL-SO == " ") /* IF NOTHING ENTERED*/
    PA0QW01.PA0QW-SHOW-ALL-SO = "N"; /* DEFAULT TO NO*/
    return;
  end
  ;
  PA0QW01.PA0QW-SHOW-ALL-SO = PA0QM001.PA0QM-SHOW-ALL-SO;
  ;
  if (PA0QM001.PA0QM-SHOW-ALL-SO != "Y"
   && PA0QM001.PA0QM-SHOW-ALL-SO != "N")
    set PA0QM001.PA0QM-SHOW-ALL-SO cursor, bold;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(220); /* ALL SO FIELD MUST BE 'N' OR 'Y'*/
  end
  ;
  ;
   /* ------------- End of process PA0Q-523 ----------------------*/
  ;
end // end PA0Q-523

// MAKE SURE PROCESSING 1 STYLE
Function PA0Q-524()
  ;
   /* MAKE SURE THAT ONLY ONE STYLE IS BEING PROCESSED AT A TIME*/
   /* ONLY WHEN PROCESSING BY CUSTOMER.*/
  ;
   /* PA308: FOR 'PR' ONLY, CHECK SALES ORDER AGAINST DORDER.VORHDR01 AND*/
   /* DFBUY.VDNORD01.  IF THEY ARE DIFFERENT, OUTPUT ERROR MESSAGE.*/
   /* NOTE, THIS EDIT ONLY NEEDS TO BE DONE IF THE PRE-ADVISE IS IN THE*/
   /* CURRENT BUY MONTH.*/
  ;
  PA0QW00.XX5 = 1;
  ;
  while (PA0QW00.XX5 <= 11)
    ;
    if (PA0QM001.PA0QM-SELECT[XX5] == "S")
      ;
         /* FORCE SELECTION TO BE EDITED BY SETTING STORED SELECTION*/
         /* FIELD = ' ';*/
      ;
      PA0QW01.PA0QW-SELECT[XX5] = " ";
      ;
      if (PA0QM001.PA0QM-LINE-TYPE[XX5] == "SO") /* SALES ORDER*/
        PA0QW00.PA0QW-SO-SELECTED-FLAG = "Y";
        if (PA0QW00.PA0QW-PROCESS-TYPE == "C")
          PA0Q-52401(); /* CHECK SALES ORDER*/
        end
        if (converseVar.validationMsgNum == 0
         && PA0QM001.YETCD == "PR"
         && PA0QW01.PA0QW-CURR-BUY-YYMM == PAWREC.PAWBUYYM)
          ;
          set PA0QW02 empty;
          PA0QW02.PA0QW-TEMP-SO-GROUP = PA0QW04.PA0QW-TEMP-STORE-GRP[XX5];
          ;
               /* SET UP READ FOR DORDER.VORHDR01*/
          ;
          set OP1REC empty; /* INITIALIZE DORDER.VORHDR01*/
          ;
          OP1REC.OP1PARTN = PA0QW02.OP1PARTN;
          OP1REC.OP1CUOID = PA0QW02.OP1CUOID;
          OP1REC.OP1NORID = PA0QW02.OP1NORID;
          ;
               /* SET UP READ FOR DFBUY.VDNORD01*/
          ;
          set FBHREC empty; /* INITIALIZE DFBUY.VDNORD01*/
          FBHREC.OP1PARTN = PA0QW02.OP1PARTN;
          FBHREC.OP1CUOID = PA0QW02.OP1CUOID;
          FBHREC.OP1NORID = PA0QW02.OP1NORID;
          FBHREC.PC2CUXID = PA0QW02.PC2CUXID;
          FBHREC.FB8BUYDT = PAWREC.PAWBUYDT;
          FBHREC.SY1STNBR = PA0QW02.SY1STNBR;
          FBHREC.SY2CLRID = PA0QW02.SY2CLRID;
          FBHREC.XDMCD = PA0QW02.XDMCD;
          FBHREC.XQACD = "01";
          FBHREC.XPGCD = "00";
          FBHREC.XUMCD = "01";
          ;
          PA0Q-52403(); /* CHECK DIRECT SHIP CODES*/
          ;
        end
      else
        if (PA0QM001.PA0QM-LINE-TYPE[XX5] == "PO") /* PO*/
          if (PA0QW00.PA0QW-PROCESS-TYPE == "C")
            PA0Q-52402();
          end
          if (converseVar.validationMsgNum == 0
           && PA0QM001.YETCD == "PR"
           && PA0QW01.PA0QW-CURR-BUY-YYMM == PAWREC.PAWBUYYM
           && PA0QW09.OP1CUOID != 0)
            ;
                  /* SET UP READ FOR DORDER.VORHDR01*/
            ;
            set OP1REC empty; /* INITIALIZE DORDER.VORHDR01*/
            ;
                 /* GET OP1PARTN;*/
            ;
            PA0QW00.PA0QW-OP1CUOID = PA0QW09.OP1CUOID;
            OP1REC.OP1PARTN = PA0QW00.OP1PARTN;
            ;
            OP1REC.OP1CUOID = PA0QW09.OP1CUOID;
            OP1REC.OP1NORID = PA0QW09.OP1NORID;
            ;
                  /* SET UP READ FOR DFBUY.VDNORD01*/
            ;
            set FBHREC empty; /* INITIALIZE DFBUY.VDNORD01*/
            FBHREC.OP1PARTN = OP1REC.OP1PARTN;
            FBHREC.OP1CUOID = PA0QW09.OP1CUOID;
            FBHREC.OP1NORID = PA0QW09.OP1NORID;
            FBHREC.PC2CUXID = PA0QW09.PC2CUXID;
            FBHREC.FB8BUYDT = PAWREC.PAWBUYDT;
            FBHREC.SY1STNBR = PA0QW01.SY1STNBR;
            FBHREC.SY2CLRID = PA0QW01.SY2CLRID;
            FBHREC.XDMCD = PA0QW01.XDMCD;
            FBHREC.XQACD = "01";
            FBHREC.XPGCD = "00";
            FBHREC.XUMCD = "01";
            ;
            PA0Q-52403(); /* CHECK DIRECT SHIP CODES*/
            ;
          end
        end
      end
    else
      ;
      if (PA0QW00.PA0QW-PROCESS-TYPE == "C")
        if (PA0QM001.PA0QM-SELECT[XX5] == " " /* ITEM DESELECTED*/
         && PA0QW01.PA0QW-SELECT[XX5] == "S")
          set PA0QW12 empty;
          PA0QW12.PA0QW-COLOR-MODE = PA0QM001.PA0QM-COLOR-MODE[XX5];
          if (PA0QM001.PA0QM-STYLE-ETS[XX5] == PA0QW00.PA0QW-OA-SY1STNBR
           && PA0QW12.PA0QW-SY2CLRID == PA0QW00.PA0QW-OA-SY2CLRID
           && PA0QW12.PA0QW-XDMCD == PA0QW00.PA0QW-OA-XDMCD)
            PA0QW00.PA0QW-OA-SY1STNBR = " ";
            PA0QW00.PA0QW-OA-SY2CLRID = " ";
            PA0QW00.PA0QW-OA-XDMCD = " ";
          end
        end
      end
    end
    ;
    PA0QW00.XX5 = PA0QW00.XX5 + 1;
    ;
  end
  ;
  ;
   /* ------------- End of process PA0Q-524 ------------------*/
  ;
end // end PA0Q-524

// SELECTION IS SALES ORDER
Function PA0Q-52401()
  ;
   /* CHECK STYLE, COLOR, DIMENSION ON SALES ORDER*/
  ;
  set PA0QW12 empty;
  PA0QW12.PA0QW-COLOR-MODE = PA0QM001.PA0QM-COLOR-MODE[XX5];
  ;
  if (PA0QW00.PA0QW-OA-SY1STNBR == " "
   && PA0QW00.PA0QW-OA-SY2CLRID == " "
   && PA0QW00.PA0QW-OA-XDMCD == " ")
    PA0QW00.PA0QW-OA-SY1STNBR = PA0QM001.PA0QM-STYLE-ETS[XX5];
    PA0QW00.PA0QW-OA-SY2CLRID = PA0QW12.PA0QW-SY2CLRID;
    PA0QW00.PA0QW-OA-XDMCD = PA0QW12.PA0QW-XDMCD;
  else
    if (PA0QW00.PA0QW-OA-SY1STNBR != PA0QM001.PA0QM-STYLE-ETS[XX5]
     || PA0QW00.PA0QW-OA-SY2CLRID != PA0QW12.PA0QW-SY2CLRID
     || PA0QW00.PA0QW-OA-XDMCD != PA0QW12.PA0QW-XDMCD)
      set PA0QM001.PA0QM-SELECT[XX5] cursor, bold;
      PAWREC.XXXMODID = "524";
      converseLib.validationFailed(251);
    end
  end
  ;
   /* ------------- End of process PA0Q-52401 ----------------*/
  ;
end // end PA0Q-52401

// SELCTION IS PO
Function PA0Q-52402()
  ;
   /* CHECK STYLE, COLOR, DIMENSION ON PO*/
  ;
   /* MAKE SURE THAT ONLY ONE STYLE IS BEING PROCESSED AT A TIME*/
   /*  */
   /* FIRST: THE STYLE, COLOR, DIMENSION MUST BE DETERMINED BY*/
   /* READING THE PO ITEM RECORD.  THE REASON THAT THE PO ITEM*/
   /* TABLE HAS TO BE READ AGAIN HERE IS BECAUSE TEMP STORAGE HAS*/
   /* A PAGE LENGTH LIMIT OF 4092.  THERE IS NO ROOM TO STORE THE*/
   /* STYLE, COLOR, DIMENSION IN TEMP STORAGE.  IF THE NUMBER OF*/
   /* LINES TO DISPLAY ON THE SCREEN IS CHANGED FROM 11 TO 10, THERE*/
   /* WOULD BE ENOUGH ROOM IN TEMP STORAGE.*/
  ;
   /* SAVE THE PO NUMBER, THIS IS USED LATER WHEN EDITING*/
   /* THE FACTORY ENTRY BOX.*/
  ;
  set PA0QW09 empty;
  PA0QW09.PA0QW-TEMP-PO-GROUP = PA0QW04.PA0QW-TEMP-STORE-GRP[XX5];
  ;
  set PC6REC empty;
  PC6REC.XGPCD = "02";
  PC6REC.PC3PONBR = PA0QW09.PC3PONBR;
  PC6REC.PC6ITMNB = PA0QW09.PC6ITMNB;
  ;
  PA0QS-51-IO3310-SA(); /* SELECT UNIQUE ALT PO ITEM*/
  ;
  if (PA0QW00.PA0QW-OA-SY1STNBR == " "
   && PA0QW00.PA0QW-OA-SY2CLRID == " "
   && PA0QW00.PA0QW-OA-XDMCD == " ")
    PA0QW00.PA0QW-OA-SY1STNBR = PC6REC.SY1STNBR;
    PA0QW00.PA0QW-OA-SY2CLRID = PC6REC.SY2CLRID;
    PA0QW00.PA0QW-OA-XDMCD = PC6REC.XDMCD;
  else
    if (PA0QW00.PA0QW-OA-SY1STNBR != PC6REC.SY1STNBR
     || PA0QW00.PA0QW-OA-SY2CLRID != PC6REC.SY2CLRID
     || PA0QW00.PA0QW-OA-XDMCD != PC6REC.XDMCD)
      set PA0QM001.PA0QM-SELECT[XX5] cursor, bold;
      PAWREC.XXXMODID = "524";
      converseLib.validationFailed(251);
    end
  end
  ;
  ;
   /* ------------- End of process PA0Q-52402 ----------------*/
  ;
end // end PA0Q-52402

// PA308: FOR 'PR' CHECK XDSCD
Function PA0Q-52403()
  ;
   /* PA308: FOR PRE-ADVISE O/AS COMPARE THE DIRECT SHIP CODES FOR THE*/
   /* SALES ORDER BETWEEN DORDER.VORHDR01 AND DFBUY.VDNORD01.*/
  ;
  PA0QS-60-IO0430-S(); /* SELECT UNIQUE DORDER.VORHDR01*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    PA0QS-61-IO4640-SB(); /* SELECT UNIQUE DFBUY.VDNORD01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      if (OP1REC.XDSCD != FBHREC.XDSCD)
        set PA0QM001.PA0QM-SELECT[XX5] cursor, bold;
        PAWREC.XXXMODID = "524";
        converseLib.validationFailed(279); /* FB02 HAS CHANGED XDSCD FOR SALES ORDER*/
      end
    end
  end
  ;
  ;
   /* ------------- End of process PA0Q-52403 ----------------*/
  ;
end // end PA0Q-52403

// VALIDATE SELECTION FIELD
Function PA0Q-525()
  ;
   /* VALIDATE SELECTION FIELD*/
  ;
   /* 12/19/94: EUROPEAN O/AS HAVE YSMXDV OF '20'*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    PAMREC.YSMXDV = "20";
  else
    if (PA0QM001.YETCD in YETTBL.YETCD)
      if (YETTBL.YETNILFL[sysVar.arrayIndex] == "Y"
       && PA0QM001.YETCD != "DN")
        PAMREC.YSMXDV = "20";
      else
        PAMREC.YSMXDV = "10";
      end
    end
  end
  ;
  PA0QW00.PA0QW-PREV-PC2CUXID-DUP = "     ";
  PAMREC.PAM-COUNT = 0;
  PAMREC.PA1OANBR = PA0QW00.PA1OANBR;
  PAMREC.PC4ORTYP = PA0QM001.PC4ORTYP;
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "S")
    PAMREC.SY1STNBR = PA0QM001.SY1STNBR;
    PAMREC.SY2CLRID = PA0QM001.SY2CLRID;
    PAMREC.XDMCD = PA0QM001.XDMCD;
  else
    PAMREC.SY1STNBR = PA0QW00.PA0QW-OA-SY1STNBR;
    PAMREC.SY2CLRID = PA0QW00.PA0QW-OA-SY2CLRID;
    PAMREC.XDMCD = PA0QW00.PA0QW-OA-XDMCD;
  end
  ;
  /*  */
  /* *************************** Y2K OUT BEGIN ****************************/
  /*  */
  /* MOVE 19 TO PA0QW00.PA0QW-CC;*/
  /*  */
  /* *************************** Y2K OUT END ******************************/
  /*  */
  ;
  PA0QW00.PA0QW-YY = PA0QW01.PA0QW-PO-ID-YY;
  PA0QW00.PA0QW-MM = PA0QW01.PA0QW-PO-ID-BUY-MM;
  ;
  if (PA0QW00.PA0QW-MM == 1
   || PA0QW00.PA0QW-MM == 2)
    if (PA0QW00.PA0QW-YY == 99)
      PA0QW00.PA0QW-YY = 0;
    else
      PA0QW00.PA0QW-YY = PA0QW00.PA0QW-YY + 1;
    end
  end
  ;
  /*  */
  /* *************************** Y2K IN BEGIN *****************************/
  /*  */
  if (PA0QW00.PA0QW-YY > 60)
    PA0QW00.PA0QW-CC = 19;
  else
    PA0QW00.PA0QW-CC = 20;
  end
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */
  PAMREC.PA1BUYMO = PA0QW00.PA0QW-PA-ORD-ADJ-BUY-MO;
  ;
   /* PA302: IF AN EXISTING AIR FREIGHT ITEM SELECTED AND THE*/
   /* AIR FREIGHT REQUEST ASSIGNED TO THE O/A IS 0, SAVE THE AIR*/
   /* FREIGHT NUMBER IN THE HEADER.  IF THE AIR FREIGHT REQUEST*/
   /* ASSIGNED TO THE O/A IS NOT 0, CAN ONLY SELECT THAT SAME AIR*/
   /* FREIGHT NUMBER.*/
  ;
  PA0QW00.XX5 = 11; /* MUST EDIT FROM BOTTOM OF SCREEN TO*/
                                   /* TOP*/
  PA0QW00.PA0QW-SELECT-MODIFIED = "N";
  ;
  while (PA0QW00.XX5 > 0)
    if (PA0QM001.PA0QM-SELECT[XX5] == "S"       
     || PA0QM001.PA0QM-SELECT[XX5] != PA0QW04.PA0QW-SELECT[XX5]
     || PA0QW00.PA0QW-TRADE-REST-WARNING == "Y" /* OR TRADE REST OVERRIDEN*/
     || PA0QW00.PA0QW-DUP-OA-WARNING == "Y")    /* OR dup oa OVERRIDEN*/
      ;
      PA0QW00.PA0QW-SELECT-MODIFIED = "Y";
      ;
         /* IF ANOTHER SELECTION MADE, THE TRADE RESTRICTIONS NEED TO*/
         /* BE CHECKED AGAIN.*/
      ;
      if (PA0QM001.PA0QM-SELECT[XX5] == "S"
      )
        if (PA0QM001.PA0QM-SELECT[XX5] != PA0QW04.PA0QW-SELECT[XX5])
          PA0QW00.PA0QW-TRADE-REST-WARNING = "N";
          if (converseVar.validationMsgNum != 283) /* WARNING MESSAGE FOR PRIOR EXECUTION*/
            PA0QW00.PA0QW-DUP-OA-WARNING = "N"; /* reset warning*/
          end
        end
        ;
           /* VALIDATE EXISTING AIR FREIGHT SELECTION*/
        ;
        if (PA0QM001.PA0QM-LINE-TYPE[XX5] == "PO")
          PA0Q-52500();
        end
        ;
      end
      ;
      PA0QW01.PA0QW-SELECT[XX5] = PA0QM001.PA0QM-SELECT[XX5];
      ;
         /* TRADE RESTRICTION POP-UP VALID FOR PO LINE ITEM ONLY*/
      ;
      if (PA0QM001.PA0QM-SELECT[XX5] == "?"
       && PA0QM001.PA0QM-LINE-TYPE[XX5] == "SO")
        set PA0QM001.PA0QM-SELECT[XX5] cursor, bold;
        set PA0QM001.PA0QM-LINE-TYPE[XX5] bold;
        PAWREC.XXXMODID = "521";
        converseLib.validationFailed(237); /* TRADE REST POP-UP VALID FOR PO LINE*/
                                   /* ONLY*/
        return;
      end
      ;
      if (PA0QM001.PA0QM-SELECT[XX5] != "S"
       && PA0QM001.PA0QM-SELECT[XX5] != " ")
        set PA0QM001.PA0QM-SELECT[XX5] cursor, bold;
        PAWREC.XXXMODID = "521";
        converseLib.validationFailed(13); /* ONLY 'S' VALID FOR SELECT*/
        return;
      end
      ;
         /* IF SIZE DETAIL HAS BEEN REQUESTED, DON'T LOAD THE FACTORY*/
         /* ENTRY BOX.*/
      ;
      if (converseVar.eventKey is pf20
       || PA0QW00.PA0QW-DISPLAY-MAP2 == "Y")
        return;
      end
      ;
      if (PA0QM001.PA0QM-SELECT[XX5] == "S")
        ;
        PA0Q-52501(); /* VALIDATE FACTORY SELECTED*/
        ;
           /* 12/19/94: PROCESS EUROPEAN O/AS LIKE DOMESTIC*/
        ;
        if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
              /* NEXT SENTENCE*/
        else
          if (PAMREC.YSMXDV == "20"
           || PA0QM001.YETCD == "NI"
           || PA0QM001.YETCD == "DN")
            if (converseVar.validationMsgNum == 0) /* MAKE SURE NO OTHER ERRORS*/
              PA0Q-52505(); /* check for duplicate o/a's*/
            end
          end
        end
        ;
      end
      ;
    end
    PA0QW00.XX5 = PA0QW00.XX5 - 1;
  end
  ;
   /* CHECK TO SEE IF THE AIR FREIGHT PO ITEM WAS DESELECTED.  IF IT WAS,*/
   /* TAKE THE AIR FREIGHT NUMBER OUT OF THE HEADER RECORD.  NOTE, ONLY*/
   /* IF THE AIR FREIGHT NUMBER IS NOT ON THE HEADER RECORD.*/
  ;
  if (PA0QW00.PA0QW-AIR-FREIGHT-SELECTED == "N"
   && PA0QM001.PA-AFRGT-RQT-ID != 0
  ) /* AND PA1REC.PA-AFRGT-RQT-ID = 0;*/
    PA0QW01.PA0QW-UPDATE-HEADER = "Y";
    PA0QM001.PA-AFRGT-RQT-ID = 0;
    PA0QW01.PA-AFRGT-RQT-ID = 0;
  end
  ;
   /* IF THE O/A STATUS IS '80' THEN ITEMS MUST BE SELECTED*/
   /* FOR ALL EXISTING FACTORIES*/
  ;
  if (converseVar.validationMsgNum != 245) /* MUST SELECT ONLY ITEMS FOR EXISTING*/
                                   /* FACTORIES*/
    /* IF PA0QW01.YESCD EQ '80';*/
    /* AND PA0QM001.YETCD NE 'FT';*/
       /* MOVE 1 TO PA0QW00.XX3;*/
       /* WHILE PA0QW00.XX3 LE 4;*/
          /* IF PA0QW01.FY1FCTYC(XX3) NE ' ';*/
          /* AND PA0QW01.PA0QW-FACTORY-SELECTED(XX3) EQ 'N';*/
             /* ; /* SET PA0QM001.PC3POIDT(XX3) AUTOSKIP,BRIGHT;*/
             /* SET PA0QM001.FY1FCTYC(XX3) AUTOSKIP,BRIGHT;*/
             /* MOVE '525' TO PAWREC.XXXMODID;*/
                                  /* MOVE 246 TO EZEMNO; /* MUST SELECT*/
                                   /* ITEMS FOR EXISTING FACTORY*/
          /* END;*/
          /* PA0QW00.XX3 = PA0QW00.XX3 + 1;*/
       /* END;*/
    /* ELSE;*/
    if (PA0QW00.PA0QW-SELECT-MODIFIED != "N"
     && converseVar.validationMsgNum == 0) /* MAKE SURE NO OTHER ERRORS BEFORE*/
                                   /* CHECK WARNING*/
      ;
            /* 12/19/94: PERFORM T3 COUNT FOR EUROPEAN O/AS.*/
      ;
      if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
        PA0Q-525010();
      else
        if (PAMREC.YSMXDV == "10"
         || PA0QM001.YETCD == "NI"
         || PA0QM001.YETCD == "DN")
          PA0Q-525010();
        end
      end
    end
    /* END;*/
  end
  ;
  if (PA0QW00.PA0QW-SELECT-MODIFIED == "N")
    return;
  end
  ;
   /* IF THERE ARE NO ERRORS, UPDATE THE SELECTION FIELD ON THE TEMP*/
   /* STORAGE RECORD.*/
  ;
  PA0QW00.XX5 = 1;
  while (PA0QW00.XX5 <= 11)
    ;
    if (PA0QM001.PA0QM-SELECT[XX5] == "S")
      PA0QW04.PA0QW-SELECT[XX5] = "S";
    else
      PA0QW04.PA0QW-SELECT[XX5] = " ";
    end
    ;
    PA0QW00.XX5 = PA0QW00.XX5 + 1;
  end
  ;
   /* UPDATE TEMP STORAGE RECORD WITH SELECTIONS*/
  ;
  PA0QS-33-TA0050-U(); /* UPDATE TEMP STORAGE PAGE*/
  ;
  ;
   /* ------------- End of process PA0Q-525 --------------------*/
  ;
end // end PA0Q-525

// VALIDATE AIR FREIGHT SELECTION
Function PA0Q-52500()
  ;
   /* VALIDATE AIR FREIGHT SELECTION*/
  ;
  set PA0QW13 empty;
  PA0QW13.PA0QW-COLOR-MODE = PA0QM001.PA0QM-COLOR-MODE[XX5];
  ;
  if (PA0QW13.PA0QW-YMTCD != "AF")
    return;
  end
  ;
  if (PA0QW13.PA0QW-PA-AFRGT-RQT-ID == 0)
    return;
  end
  ;
  PA0QW00.PA0QW-AIR-FREIGHT-SELECTED = "Y";
  ;
  if (PA0QM001.PA-AFRGT-RQT-ID == 0)
    if (PA0QW13.PA0QW-PA-AFRGT-RQT-ID >= 60000
     && PA0QW13.PA0QW-PA-AFRGT-RQT-ID <= 89999)
      set PA0QM001.PA0QM-SELECT[XX5] cursor, bold;
      set PA0QM001.PA-AFRGT-RQT-ID bold;
      set PA0QM001.PA0QM-COLOR-MODE[XX5] bold;
      PAWREC.XXXMODID = "525";
      converseLib.validationFailed(346); /* EUROPEAN AIR FREIGHT NUMBER*/
      return;
    end
    PA0QM001.PA-AFRGT-RQT-ID = PA0QW13.PA0QW-PA-AFRGT-RQT-ID;
    PA0QW01.PA-AFRGT-RQT-ID = PA0QW13.PA0QW-PA-AFRGT-RQT-ID;
    PA0QW01.PA0QW-UPDATE-HEADER = "Y";
    return;
  end
  ;
  if (PA0QM001.PA-AFRGT-RQT-ID != PA0QW13.PA0QW-PA-AFRGT-RQT-ID)
    set PA0QM001.PA0QM-SELECT[XX5] cursor, bold;
    set PA0QM001.PA-AFRGT-RQT-ID bold;
    set PA0QM001.PA0QM-COLOR-MODE[XX5] bold;
    PAWREC.XXXMODID = "525";
    converseLib.validationFailed(302); /* ONLY ONE AIR FREIGHT REQUEST PER O/A ALLOWED*/
    return;
  end
  ;
  ;
   /* ------------- End of process PA0Q-52500 ------------------*/
  ;
end // end PA0Q-52500

// VALIDATE SELECTION FIELD
Function PA0Q-52501()
  ;
   /* VALIDATE FACTORY SELECTED*/
  ;
   /* IF KEY INFORMATION CHANGED, CAN'T SELECT ITEMS*/
  ;
  if (PA0QW00.PA0QW-KEY-CHANGED == "Y")
    ;
      /* RESET SELECTION FIELDS TO SPACES AND RESELECT ITEMS BASED ON*/
      /* NEW HEADER INFORMATION.  INSTRUCT USER TO RESELECT ITEMS.*/
    ;
    PA0QW00.XX7 = 1;
    while (PA0QW00.XX7 <= 11)
      PA0QW01.PA0QW-SELECT[XX7] = " ";
      PA0QM001.PA0QM-SELECT[XX7] = " ";
      PA0QW00.XX7 = PA0QW00.XX7 + 1;
    end
    ;
    PA0QW00.PA0QW-SELECT-MODIFIED = "N";
    PA0QW00.PA0QW-AIR-FREIGHT-SELECTED = "N";
    ;
    PA0QM001.PA-AFRGT-RQT-ID = 0;
    PA0QW01.PA-AFRGT-RQT-ID = 0;
    ;
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(223); /* ITEMS CAN'T BE SELECTED WHEN THE O/A HEADER*/
    return; /* FIELDS ARE CHANGED*/
  end
  ;
   /* LOOK FOR SELECTED FACTORY IN FACTORY ARRAY*/
  ;
  PA0QW00.PA0QW-SEL-FCTY-FOUND = "N";
  ;
  if (PA0QM001.PA0QM-LINE-TYPE[XX5] != "PO")
    return;
  end
  ;
  PA0QW00.XX7 = 1;
  ;
  while (PA0QW00.XX7 <= 4
   && PA0QW00.PA0QW-SEL-FCTY-FOUND == "N"
   && PA0QM001.FY1FCTYC[XX7] != " ")
    if (PA0QM001.PA0QM-FY-FCTY-CD[XX5] == PA0QM001.FY1FCTYC[XX7])
   /* AND PA0QM001.PA0QM-SO-PO-NBR(XX5) EQ PA0QM001.PC3POIDT(XX7);*/
      PA0QW01.PA0QW-FACTORY-SELECTED[XX7] = "Y";
      PA0QW00.PA0QW-SEL-FCTY-FOUND = "Y";
    end
    PA0QW00.XX7 = PA0QW00.XX7 + 1;
  end
  ;
  PA0QW00.XX6 = PA0QW00.XX7;
  ;
  if (PA0QW00.PA0QW-SEL-FCTY-FOUND == "Y")
    return;
  end
  ;
   /* IF PA0QW01.YESCD EQ '80';*/
     /* SET PA0QM001.YESCD BRIGHT;*/
     /* SET PA0QM001.PA0QM-SELECT(XX5) CURSOR,BRIGHT;*/
     /* MOVE '525' TO PAWREC.XXXMODID;*/
     /* MOVE 245 TO EZEMNO; /* MUST SELECT ITEMS FOR EXISTING FACTORIES*/
     /* EZERTN;*/
   /* END;*/
  ;
  if (PA0QW00.XX6 > 3)
    PAWREC.XXXMODID = "521";
    converseLib.validationFailed(158); /* FACTORY TABLE EXCEEDED*/
    return;
  end
  ;
   /* CHECK TRADE RESTRICTIONS BETWEEN CUSTOMER AND FACTORY.*/
   /* A WARNING MESSAGE IS DISPLAYED.*/
  ;
  if (PA0QW01.PC2CUXID != " " /* IF CUSTOMER ENTERED*/
   && PA0QW00.PA0QW-TRADE-REST-WARNING == "N") /* AND WARNING NOT PRINTED*/
    PA0Q-52502(); /* VALIDATE TRADE RESTRICTIONS*/
    if (converseVar.validationMsgNum != 0)
      return;
    end
  end
  ;
   /* MOVE PA0QM001.PA0QM-SO-PO-NBR(XX5) TO PA0QM001.PC3POIDT(XX6);*/
  ;
   /* ADD CENTURY CODE ONTO DATE*/
  ;
   /* PA0QW01.PC3POIDT(XX6) = PA0QM001.PA0QM-SO-PO-NBR(XX5) + 19000000;*/
  PA0QM001.FY1FCTYC[XX6] = PA0QM001.PA0QM-FY-FCTY-CD[XX5];
  PA0QW01.FY1FCTYC[XX6] = PA0QM001.PA0QM-FY-FCTY-CD[XX5];
  PA0QM001.PA4FCTQT[XX6] = 0;
  PA0QW01.PA4FCTQT[XX6] = 0;
  ;
  set PA0QW09 empty;
  PA0QW09.PA0QW-TEMP-PO-GROUP = PA0QW04.PA0QW-TEMP-STORE-GRP[XX5];
  PA0QW01.PC3PONBR[XX6] = PA0QW09.PC3PONBR;
  PA0QW01.PA0QW-FACTORY-SELECTED[XX6] = "Y";
  ;
  PA0QW00.XX6 = PA0QW00.XX6 + 1;
  ;
  ;
   /* ------------- End of process PA0Q-52501 ------------------*/
  ;
end // end PA0Q-52501

// CHECK FOR DOMESTIC DUPS
Function PA0Q-525010()
  ;
   /* determine if there are any o/a's with same po,buy mo, and style*/
  ;
  ;
  if (PA0QW00.PA0QW-DUP-OA-WARNING == "Y") /* previous warning found*/
    return; /**/
  end
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    PAMREC.PAM-LOW-PA1OANBR = 200000;
    PAMREC.PAM-HI-PA1OANBR = 299999;
    PAMREC.PAM-FUNCT = "T3";
  else
    PAMREC.PAM-FUNCT = "T2"; /* count of other o/a's*/
  end
  ;
  PA0QS-62-PA1060(); /* call of pa1060 for count of other o/a's*/
  ;
  if (SQLCA.VAGen_SQLCODE == 100
   || PAMREC.PAM-COUNT != 0)
    PA0QW00.PA0QW-DUP-OA-WARNING = "Y";
    converseLib.validationFailed(283);
    return;
  end
  ;
   /* ------------- End of process PA0Q-525010 -----------------*/
  ;
end // end PA0Q-525010

// VALIDATE TRADE RESTRICTIONS
Function PA0Q-52502()
   /* ------------------------------------------------------------*/
   /* VALIDATE TRADE RESTRICTIONS*/
   /* ------------------------------------------------------------*/
  ;
   /* FIND SELECTED FACTORIES COUNTRY*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = PA0QM001.PA0QM-FY-FCTY-CD[XX5];
  ;
  PA0QS-08-IO2810-S(); /* SELECT FACTORY ROW*/
  ;
  set FYBREC empty;
  FYBREC.FYBOXCC = FY1REC.XCTCD;
  FYBREC.XGPCD = "02";
  PA0QW00.PA0QW-TRADE-REST-FOUND = "N";
  ;
  PA0QS-47-IO2800-S2(); /* OPEN FACTORY TRADE RESTRICTION CURSOR*/
  ;
  PA0QS-48-IO2800-N2(); /* GET FIRST FACTORY TRADE RESTRICTION*/
  ;
  while (SQLCA.VAGen_SQLCODE == 0
   && PA0QW00.PA0QW-TRADE-REST-FOUND == "N")
    ;
    if (FYBREC.FYBDXCC == PA0QW01.XCTCD) /* IF EQUAL TO CUSTOMER COUNTRY*/
      PA0QW00.PA0QW-TRADE-REST-FOUND = "Y";
      PA0QW00.PA0QW-TRADE-REST-WARNING = "Y";
      set PA0QM001.PC2CUXID bold;
      set PA0QM001.PA0QM-SELECT[XX5] cursor, bold;
      set PA0QM001.PA0QM-FY-FCTY-CD[XX5] bold, skip;
      PAWREC.XXXMODID = "525";
      converseLib.validationFailed(207); /* TRADE RESTRICTION WARNING*/
    else
      ;
      PA0QS-48-IO2800-N2(); /* GET NEXT FACTORY TRADE RESTRICTION*/
      ;
    end
    ;
  end
  ;
  PA0QS-49-IO2800-C2(); /* CLOSE FACTORY TRADE RESTRICTION TABLE*/
  ;
  ;
   /* ------------- End of process PA0Q-52502 ------------------*/
  ;
end // end PA0Q-52502

// check for NIL DUPS
Function PA0Q-52505()
  ;
   /* determine if there are any o/a's with same po,buy mo, and style*/
  ;
   /* IF KEY INFORMATION CHANGED, CAN'T SELECT ITEMS*/
  ;
  if (PA0QW00.PA0QW-DUP-OA-WARNING == "Y") /* WARNING ALREADY PRINTED*/
    return;
  end
  ;
  if (converseVar.validationMsgNum == 223) /* key information changed*/
    return; /* FIELDS ARE CHANGED*/
  end
  ;
  if (PA0QM001.PA0QM-CUST-XREF[XX5] > " ")
    if (PA0QM001.PA0QM-CUST-XREF[XX5] != PA0QW00.PA0QW-PREV-PC2CUXID-DUP)
      set PC2REC empty;
      PC2REC.PC2CUXID = PA0QM001.PA0QM-CUST-XREF[XX5];
      PC2REC.XGPCD = "02";
      ;
      PA0QS-06-IO3340-S();
      ;
      if (SQLCA.VAGen_SQLCODE == 100)
        PAWREC.XXXMODID = "525";
        converseLib.validationFailed(24); /* INVALID COMPANY/STORE/DEPT*/
        return;
      else
        PAMREC.KUCCOID = PC2REC.KUCCOID; /**/
        PAMREC.KUMSTRID = PC2REC.KUMSTRID; /**/
        PAMREC.XNXCD = PC2REC.XNXCD; /**/
      end
      ;
      PAMREC.PAM-FUNCT = "T1";
      ;
        /* 12/19/94: EXCLUDE EUROPEAN O/AS.*/
      ;
      PAMREC.PAM-LOW-PA1OANBR = 200000;
      PAMREC.PAM-HI-PA1OANBR = 299999;
      ;
      PA0QS-62-PA1060();
      ;
      if (SQLCA.VAGen_SQLCODE == 100
       || PAMREC.PAM-COUNT != 0)
        converseLib.validationFailed(283);
        PA0QW00.PA0QW-DUP-OA-WARNING = "Y";
        return;
      end
    end
    PA0QW00.PA0QW-PREV-PC2CUXID-DUP = PA0QM001.PA0QM-CUST-XREF[XX5];
  end
  ;
   /* ------------- End of process PA0Q-52505 ------------------*/
  ;
end // end PA0Q-52505

// VALIDATE FACTORY ENTRY BOX
Function PA0Q-526()
  ;
   /* VALIDATE FACTORY ENTRY BOX*/
  ;
   /* CHECK TO SEE IF THE FACTORY INFORMATION HAS BEEN MODIFIED*/
  ;
  PA0QW00.XX5 = 1;
  PA0QW00.PA0QW-FACTORY-ENTERED = "N";
  ;
  while (PA0QW00.XX5 <= 4)
    if (PA0QM001.FY1FCTYC[XX5] != PA0QW01.FY1FCTYC[XX5])
      PA0QW00.PA0QW-FACTORY-ENTERED = "Y";
      PA0QW01.FY1FCTYC[XX5] = PA0QM001.FY1FCTYC[XX5];
    end
    PA0QW00.XX5 = PA0QW00.XX5 + 1;
  end
  ;
   /* IF FACTORY ENTERED, CAN'T SELECT ITEMS*/
  ;
   /* IF PA0QW00.PA0QW-FACTORY-ENTERED EQ 'Y';*/
   /* AND PA0QW00.PA0QW-SELECT-MODIFIED EQ 'Y';*/
   /* MOVE 4 TO PA0QW00.XX5;*/
   /* WHILE PA0QW00.XX5 GE 1;*/
   /* SET PA0QM001.PC3POIDT(XX5) CURSOR,BRIGHT;*/
   /* SET PA0QM001.FY1FCTYC(XX5) CURSOR,BRIGHT;*/
   /* SET PA0QM001.PA4FCTQT(XX5) BRIGHT;*/
   /* PA0QW00.XX5 = PA0QW00.XX5 - 1;*/
   /* END;*/
   /* MOVE '526' TO PAWREC.XXXMODID;*/
   /* MOVE 224 TO EZEMNO; /* FACTORY INFO CAN'T CHANGE WHEN SELECTION MADE*/
   /* EZERTN;*/
   /* END;*/
  ;
   /* IF USER ADDING A NEW NIL REDUCTION, NIL ADD, OR NIL OVER RUN;*/
   /* INITIALIZE THE O/A QUANTITY TO ZERO.  THE O/A QUANTITY IS CALCULATED*/
   /* IN A FOLLOWING ROUTINE.*/
  ;
  if (PA0QM001.PA1OANBR == 0)
    if (PA0QM001.YETCD == "NA" /* NIL ADD*/
     || PA0QM001.YETCD == "NR" /* NIL REDUCTION*/
     || PA0QM001.YETCD == "NO") /* NIL OVER RUN*/
      PA0QW01.PA1RQQTY = 0;
    end
  end
  ;
  PA0QW00.PA0QW-REQ-QTY-REMAIN = PA0QM001.PA1RQQTY;
  PA0QW00.XX5 = 4;
  while (PA0QW00.XX5 >= 1)
    ;
      /* VALIDATE FACTORY QUANTITY*/
    ;
    PA0QW01.PA4FCTQT[XX5] = PA0QM001.PA4FCTQT[XX5];
    ;
    if (PA0QM001.PA4FCTQT[XX5] != 0)
      if (PA0QW00.PABAFYQT == "Y") /* FACTORY QUANTITY REQUIRED*/
        PA0Q-52601();
      end
    end
    ;
      /* VALIDATE FACTORY CODE*/
    ;
    if (PA0QM001.FY1FCTYC[XX5] == " ")
      PA0QW01.FY1FCTYC[XX5] = PA0QM001.FY1FCTYC[XX5];
    else
      PA0Q-52603(); /* VALIDATE FACTORY CODE*/
      PA0QW00.XX3 = 1;
      while (PA0QW00.XX3 < PA0QW00.XX5
       && converseVar.validationMsgNum == 0)
        if (PA0QM001.FY1FCTYC[XX5] == PA0QM001.FY1FCTYC[XX3])
          set PA0QM001.FY1FCTYC[XX3] cursor, bold;
          set PA0QM001.FY1FCTYC[XX5] bold;
          PAWREC.XXXMODID = "536";
          converseLib.validationFailed(274); /* CAN'T HAVE DUPLICATE FACTORIES*/
          return;
        end
        PA0QW00.XX3 = PA0QW00.XX3 + 1;
      end
    end
    ;
     /* VALIDATE FACTORY PO ID*/
    ;
     /* 12/11/91: USERS DECIDED THAT THE ALT PO ID LOGIC WAS NOT*/
     /* NECESSARY.  SINCE ONLY DEEALING WITH ONE PO ID, THIS LOGIC*/
     /* CAN BE COMMENTED OUT.*/
    ;
     /* IF PA0QM001.PC3POIDT(XX5) EQ 0;*/
     /* MOVE PA0QM001.PC3POIDT(XX5) TO PA0QW01.PC3POIDT(XX5);*/
     /* ELSE;*/
     /* ;*/
     /* ; /* IF THE FACTORY PO ID ENTERED IS NOT EQUAL TO THE MAP PO ID*/
     /* ; /* AND THE ALT PO ID, THIS IS AN ERROR.*/
     /* ;*/
     /* PA0QW00.PC3POIDT = PA0QM001.PC3POIDT(XX5) + 19000000;*/
     /* ;*/
     /* IF PA0QW00.PC3POIDT EQ PA0QW01.PC3POIDT(XX5);*/
     /* OR PA0QW00.PC3POIDT EQ PA0QW01.PA0QW-PC3POIDT;*/
     /* OR PA0QW00.PC3POIDT EQ PA0QW01.PA0QW-ALT-PO-ID-CCYYMMMM;*/
     /* MOVE PA0QW00.PC3POIDT TO PA0QW01.PC3POIDT(XX5);*/
     /* ELSE;*/
     /* SET PA0QM001.PC3POIDT(XX5) CURSOR,BRIGHT;*/
     /* MOVE '526' TO PAWREC.XXXMODID;*/
     /* MOVE 240 TO EZEMNO; /* FACTORY PO ID MUST BE THE PO ID OR*/
     /* END;                  /* ALT PO ID*/
     /* ;*/
     /* END;*/
    ;
    PA0QW00.XX5 = PA0QW00.XX5 - 1;
    ;
  end
  ;
  if (converseVar.validationMsgNum == 272) /* CAN'T USE FACTORY - FACTORY DENIED*/
    return;
  end
  ;
   /* CHECK TO MAKE SURE THAT THE NON 84'D FACTORIES ON A REWORK O/A*/
   /* WERE RESELECTED*/
  ;
  if (PA0QM001.YESCD == "01")
    PA0QW00.XX3 = 1;
    if (PA0QW00.PA0QW-KEY-CHANGED == "Y")
      PA0QW00.PA0QW-DISPLAY-FACTORY-BOX = "N";
      return;
    end
    while (PA0QW00.XX3 <= 4)
      if (PA0QW00.PA0QW-RESELECTED[XX3] == "N")
        set PA0QM001.FY1FCTYC[1] cursor;
        PAWREC.XXXMODID = "526";
        converseLib.validationFailed(273); /* MUST USE ORIGINAL FACTORIES*/
        return;
      end
      PA0QW00.XX3 = PA0QW00.XX3 + 1;
    end
  end
  ;
  if (PA0QW00.PA0QW-DISPLAY-FACTORY-BOX == "N")
    return;
  end
  ;
   /* IF O/A TYPE IS 'NA' OR 'NR', MAKE USER O/A QUANTITY IS NOT 0.*/
  ;
  if (PA0QM001.YETCD == "NA")
    if (PA0QW01.PA1RQQTY == 0)
      PA0QM001.PA1RQQTY = 0;
      set PA0QM001.PA4FCTQT[1] cursor, bold;
      PA0QW00.XX5 = 2;
      while (PA0QW00.XX5 <= 4)
        set PA0QM001.PA4FCTQT[XX5] bold;
        PA0QW00.XX5 = PA0QW00.XX5 + 1;
      end
      PAWREC.XXXMODID = "526";
      converseLib.validationFailed(263);
      return;
    end
  end
  ;
  if (PA0QM001.YETCD == "NR")
    if (PA0QW01.PA1RQQTY == 0)
      PA0QM001.PA1RQQTY = 0;
      set PA0QM001.PA4FCTQT[1] cursor, bold;
      PA0QW00.XX5 = 2;
      while (PA0QW00.XX5 <= 4)
        set PA0QM001.PA4FCTQT[XX5] bold;
        PA0QW00.XX5 = PA0QW00.XX5 + 1;
      end
      PAWREC.XXXMODID = "526";
      converseLib.validationFailed(264);
    end
  end
  ;
   /* ------------- End of process PA0Q-526 --------------------*/
  ;
end // end PA0Q-526

// VALIDATE FACTORY QUANTITY
Function PA0Q-52601()
  ;
   /* VALIDATE FACTORY QUANTITY*/
  ;
  if (PA0QM001.YETCD == "DA" /* DOMESTIC ADD*/
   || PA0QM001.YETCD == "NA") /* NIL ADD*/
    if (PA0QM001.PA4FCTQT[XX5] <= 0)
      set PA0QM001.PA4FCTQT[XX5] cursor, bold;
      PAWREC.XXXMODID = "526";
      converseLib.validationFailed(189); /* ONLY 0 OR POSITIVE FACTORY QUANTITIES*/
                                   /* VALID*/
      return;
    end
  else
    if (PA0QM001.YETCD == "DR" /* DOMESTIC REDUCTION*/
     || PA0QM001.YETCD == "NR") /* NIL REDUCTION*/
      if (PA0QM001.PA4FCTQT[XX5] > 0)
        set PA0QM001.PA4FCTQT[XX5] cursor, bold;
        PAWREC.XXXMODID = "526";
        converseLib.validationFailed(179); /* ONLY 0 OR NEGATIVE FACTORY QUANTITY*/
                                   /* VALID*/
        return;
      end
    end
  end
  ;
  if (PA0QM001.YETCD == "ST" /* stock transfer*/
   && PA0QM001.YSMXDV == "20")
    PA0QW01.PA1RQQTY = PA0QW01.PA4FCTQT[1];
    PA0QM001.PA1RQQTY = PA0QM001.PA4FCTQT[1];
    return;
  end
  ;
  if (PA0QM001.YETCD != "NO" /* IF NOT A NIL OVERRUN*/
   && PA0QM001.YETCD != "FT") /* AND NOT A FACTORY TRANSFER*/
    if (PA0QW00.PABVYBTS == "N") /* VERIFY BTS = 'NO'*/
      if (PA0QM001.YETCD == "NA" /* NIL ADD*/
       && PA0QM001.PA1OANBR == 0) /* NEW O/A*/
            /* NEXT SENTENCE*/
      else
        PA0QW00.PA0QW-REQ-QTY-REMAIN = PA0QW00.PA0QW-REQ-QTY-REMAIN - PA0QM001.PA4FCTQT[XX5];
        if (PA0QW00.PA0QW-REQ-QTY-REMAIN < 0)
          set PA0QM001.PA4FCTQT[XX5] cursor, bold;
          set PA0QM001.PA1RQQTY bold;
          PAWREC.XXXMODID = "526";
          converseLib.validationFailed(191); /* REQUESTED QTY > REMAINING O/A QTY*/
          return;
        end
      end
    else
      if (PA0QM001.YETCD != "NR" /* AND NOT NIL REDUCTION*/
       || PA0QM001.PA1OANBR != 0) /* OR NOT NEW O/A*/
        PA0QW00.PA0QW-REQ-QTY-REMAIN = PA0QW00.PA0QW-REQ-QTY-REMAIN - PA0QM001.PA4FCTQT[XX5];
        if (PA0QW00.PA0QW-REQ-QTY-REMAIN > 0)
          set PA0QM001.PA4FCTQT[XX5] cursor, bold;
          set PA0QM001.PA1RQQTY bold;
          PAWREC.XXXMODID = "526";
          converseLib.validationFailed(53); /* REQUESTED QTY < REMAINING O/A QTY*/
          return;
        end
      end
    end
  end
  ;
  if (PA0QW01.PC3PONBR[XX5] == 0 /* NO PO ITEM SELECTED FOR FACTORY;*/
   && PA0QW01.FY1FCTYC[XX5] != " ")
    if (PA0QW00.PABAFYQT == "Y" /* IF FACTORY QUANTITY REQUIRED*/
     && PA0QW00.PABVYBTS == "N") /* VERIFY BTS = 'N'*/
         /* NEXT SENTENCE*/
    else
      ;
         /* GET THE PO NUMBER*/
      ;
      set PC3REC empty;
      set PC6REC empty;
      set PCYREC empty;
      PC3REC.XGPCD = "02";
      PC3REC.PC4ORTYP = PA0QM001.PC4ORTYP;
      PC3REC.PC3POIDT = PA0QW01.PA0QW-PC3POIDT;
      /* MOVE PA0QW01.PC3POIDT(XX5) TO PC3REC.PC3POIDT;*/
      PC3REC.FY1FCTYC = PA0QW01.FY1FCTYC[XX5];
      PC3REC.PCFSECD = "*";
      ;
      /* Cursor Select is now employed instead of plain*/
      /* Select because of the possibility of more than one*/
      /* PO-NBR for each PO-ID. NSC Changes -- GREDDY 07/24/00*/
      ;
      /* PA0QS-40-IO3270-SA;          /* SELECT PO HEADER*/
      ;
      PA0QS-80-IO3270-S6(); /* SELECT PO HEADER*/
      ;
      PA0QW00.PA0QW-NON-SAP-PONBR-FL = "N";
      ;
      PA0QS-81-IO3270-N6(); /* SELECT PO HEADER*/
      ;
      while (SQLCA.VAGen_SQLCODE == 0
       && PA0QW00.PA0QW-NON-SAP-PONBR-FL == "N")
        ;
        set VPOITM05 empty;
        set PCYREC empty;
        ;
        VPOITM05.PC3PONBR = PC3REC.PC3PONBR;
        VPOITM05.XGPCD = "02";
        PCYREC.PCYFUNC = "S2";
        ;
        PA0QS-20-VPOITM5-S(); /* Select POITM*/
        ;
        PA0QW00.PA0QW-FIRST-FETCH-FL = "Y";
        ;
        PCYREC.PCYFUNC = "N2";
        ;
        PA0QS-21-VPOITM5-N();
        ;
        while (SQLCA.VAGen_SQLCODE == 0 /* Check for a Valid PO Nbr*/
         && PA0QW00.PA0QW-NON-SAP-PONBR-FL == "N")
          ;
          if (VPOITM05.PC-SAP-PO-NBR == " ")
            PA0QW00.PA0QW-NON-SAP-PONBR-FL = "Y";
          end
          ;
          PA0QW00.PA0QW-FIRST-FETCH-FL = "N";
          PA0QS-21-VPOITM5-N();
          ;
        end /* End of Item fetch loop*/
        ;
        if (SQLCA.VAGen_SQLCODE == 100 && 
        PA0QW00.PA0QW-FIRST-FETCH-FL == "Y")
          PA0QW00.PA0QW-NON-SAP-PONBR-FL = "Y";
        end
        ;
        PCYREC.PCYFUNC = "C2";
        ;
        PA0QS-22-VPOITM5-C();
        ;
        if (PA0QW00.PA0QW-NON-SAP-PONBR-FL == "Y")
          PA0QW01.PC3PONBR[XX5] = PC3REC.PC3PONBR;
          ;
             /* COUNT THE NUMBER OF DPRODC.VPOITM01 RECORDS, THERE SHOULD*/
             /* BE AT LEAST 1.*/
          ;
          PC6REC.XGPCD = "02";
          ;
          if (PA0QW00.PA0QW-PROCESS-TYPE == "S")
            PC6REC.SY1STNBR = PA0QM001.SY1STNBR;
            PC6REC.SY2CLRID = PA0QM001.SY2CLRID;
            PC6REC.XDMCD = PA0QM001.XDMCD;
          else
            PC6REC.SY1STNBR = PA0QW00.PA0QW-OA-SY1STNBR;
            PC6REC.SY2CLRID = PA0QW00.PA0QW-OA-SY2CLRID;
            PC6REC.XDMCD = PA0QW00.PA0QW-OA-XDMCD;
          end
          ;
          PC6REC.PC3PONBR = PC3REC.PC3PONBR;
          PC6REC.XQACD = "01";
          PC6REC.FY1FCTYC = "*";
          PC6REC.YSMXDV = "*";
          PC6REC.XOWCD = "*";
          PC6REC.PC2INSEG = "*";
          PC6REC.XPGCD = "*";
          PC6REC.XUMCD = "*";
          PC6REC.PC6ETSDT = -1;
          PC6REC.PC6OETS = -1;
          PC6REC.PC6RTADT = -1;
          PC6REC.YMTCD = "*";
          PC6REC.PC6PLAN = -1;
          PC6REC.XWHCD = "*";
          PC6REC.PC4ORTYP = "*";
          PC6REC.XDSCD = "*";
          PC6REC.PC6CXNBR = -1;
          PC6REC.PC6STAT = "OP";
          PCYREC.PCYFUNC = "T1";
          ;
          if (PA0QM001.YETCD == "NR") /* NIL REDUCTION*/
            if (PA0QM001.PC2CUXID == " ")
              PC6REC.PC2CUXID = "*";
            else
              PC6REC.PC2CUXID = PA0QM001.PC2CUXID;
            end
          else
            PC6REC.PC2CUXID = "*";
          end
          ;
          PA0QS-41-IO3310-T(); /* COUNT DPRODC.VPOITM01 ROWS;*/
          ;
          if (PA0QM001.YETCD == "FT"
           && PA0QW01.PA4FCTQT[XX5] >= 0)
                /* NEXT SENTENCE;*/
          else
            if (SQLCA.VAGen_SQLCODE == 100
             || PCYREC.PCYCOUNT == 0)
              set PA0QM001.FY1FCTYC[XX5] cursor, bold;
              PAWREC.XXXMODID = "526";
              converseLib.validationFailed(176); /* NO PO ITEMS EXIST FOR THIS*/
                                      /* STYLE/FACTORY/BUY MONTH*/
              PA0QS-82-IO3270-C6(); /* STYLE/FACTORY/BUY MONTH*/
              return; /* STYLE/FACTORY/BUY MONTH*/
            end
          end
        end /* End of IF loop of selected PO Number*/
        ;
        PA0QS-81-IO3270-N6();
        ;
      end /* End of PO Header While loop*/
      ;
      PA0QS-82-IO3270-C6();
      ;
      if (PA0QW00.PA0QW-NON-SAP-PONBR-FL == "N") /* No Valid PO Nbr found*/
        /* SET PA0QM001.PC3POIDT(XX5) BRIGHT;*/
        set PA0QM001.FY1FCTYC[XX5] cursor, bold;
        PAWREC.XXXMODID = "526";
        converseLib.validationFailed(63); /* NO PO FOR THIS PO MONTH/FACTORY*/
        return;
      end
      ;
    end /* Factory Quantity check - IF*/
    ;
  end /* PO selection - IF*/
  ;
   /* CHECK BALANCE TO SHIP*/
  ;
  if (PA0QM001.PA4FCTQT[XX5] < 0
   && PA0QW00.PABVYBTS == "Y") /* VERIFY BALANCE TO SHIP*/
    PA0Q-52602(); /* CALCULATE BALANCE TO SHIP FOR*/
                                   /* FACTORY EDITS*/
    ;
    PC5REC.PC5TBALC = PC5REC.PC5TBALC + PA0QW01.PA4FCTQT[XX5] + 240;
    ;
    if (PC5REC.PC5TBALC < 0)
      set PA0QM001.PA4FCTQT[XX5] cursor, bold;
      PAWREC.XXXMODID = "526";
      converseLib.validationFailed(55); /* REQUESTED ADJ. IS > THAN*/
                                 /* BALANCE TO SHIP*/
      return;
    end
    ;
  end
  ;
  ;
   /* IF USER ADDING A NEW NIL ADD, NIL REDUCTION, OR NIL OVER RUN;*/
   /* CALCULATE THE O/A QUANTITY.*/
  ;
  if (PA0QM001.PA1OANBR == 0)
    if (PA0QM001.YETCD == "NA" /* NIL ADD*/
     || PA0QM001.YETCD == "NR" /* NIL REDUCTION*/
     || PA0QM001.YETCD == "NO") /* NIL OVER RUN*/
      PA0QW01.PA1RQQTY = PA0QW01.PA1RQQTY + PA0QW01.PA4FCTQT[XX5];
    end
  end
  ;
  if (PA0QM001.PA4FCTQT[XX5] < 0)
    return;
  end
  ;
  if (PA0QM001.YETCD == "DA" /* DOMESTIC ADD*/
   || PA0QM001.YETCD == "NA" /* NIL ADD*/
   || PA0QM001.YETCD == "FT" /* FACTORY TRANSFER*/
   || PA0QM001.YETCD == "OR" /* DOMESTIC OVER RUN*/
   || PA0QM001.YETCD == "EO" /* EARLY ORDER*/
   || PA0QM001.YETCD == "NO") /* NIL OVER RUN*/
    set FY2REC empty;
    ;
    if (PA0QW00.PA0QW-PROCESS-TYPE == "S")
      FY2REC.SY1STNBR = PA0QM001.SY1STNBR;
    else
      FY2REC.SY1STNBR = PA0QW00.PA0QW-OA-SY1STNBR;
    end
    ;
    FY2REC.FY1FCTYC = PA0QW01.FY1FCTYC[XX5];
    FY2REC.XGPCD = "02";
    ;
    PA0QS-42-IO2980-S(); /* SELECT FACTORY/STYLE RECORD*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100)
      set PA0QM001.FY1FCTYC[XX5] cursor, bold;
      PAWREC.XXXMODID = "526";
      converseLib.validationFailed(160); /* FACTORY DOES NOT PRODUCE THIS STYLE*/
    else
      if (SQLCA.VAGen_SQLCODE != 100
       && FY2REC.XXXSTAT != "A")
        set PA0QM001.FY1FCTYC[XX5] cursor, bold;
        PAWREC.XXXMODID = "526";
        converseLib.validationFailed(350); /* FACTORY NOT ACTIVE, INVALID*/
      end
    end
  end
  ;
   /* ------------- End of process PA0Q-52601 --------------------*/
  ;
end // end PA0Q-52601

// CALC BTS FOR FACTORY EDITS
Function PA0Q-52602()
   /* ------------------------------------------------------------*/
   /* Calculate the balance to ship from transportation.*/
   /* ------------------------------------------------------------*/
  ;
  set PC5REC empty; /* ===>initialize record*/
  ;
  PC5REC.XGPCD = "02"; /* ===>GPC Code*/
  PC5REC.PC3PONBR = PA0QW01.PC3PONBR[XX5];
  PC5REC.SY1STNBR = PA0QW01.SY1STNBR; /* ==> Style number*/
  PC5REC.SY2CLRID = PA0QW01.SY2CLRID; /* ==> Color code*/
  PC5REC.XDMCD = PA0QW01.XDMCD; /* ==> Dimension code*/
  PC5REC.XQACD = "01"; /* ==> Quality code*/
  PC5REC.XOWCD = "00"; /* ==> Owner grp code*/
  PC5REC.PC2INSEG = "*"; /* ==> Spec Diff code*/
  PC5REC.XPGCD = "00"; /* ==> Package code*/
  PC5REC.XUMCD = "01"; /* ==> Unit of measure*/
  ;
  PC5REC.XWHCD = "*"; /* ==> Warehouse code*/
  PC5REC.YMTCD = "*"; /* ==> mode code*/
  PC5REC.PC2CUXID = "*"; /* ==> Cust Xref ID*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set up to calculate all the quantities necessary to*/
   /* Calculate the remaining balance of QTYs still left to ship.*/
   /* These three calls will use the Transportation access key*/
   /* of (GPC, Product Key, and Destination Key) and accumulate*/
   /* QTY totals on a size level.*/
   /* ------------------------------------------------------------*/
  ;
  XPPC021(); /* ===> get Shipment QTYs from VCPLIT01*/
  ;
  XPPC022(); /* ===> get Receipt QTYs  from VFYPO001*/
  ;
  XPPC023(); /* ===> get On Order QTYs from VPOSIZ01*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Calc. the remaining balance of QTYs still left to ship*/
   /* on a size level.*/
  ;
   /* Note:  Balance To Ship = On Order - (Shipped + Received)*/
  ;
   /* ------------------------------------------------------------*/
  ;
  PC5REC.PC5WIXT = 1;
  ;
  while (PC5REC.PC5WIXT <= 40)
    ;
    ;
    /* ------------------------------------------------------------*/
    /* ==> On Order  size QTYs  (on size level w/ status "OP")*/
    /* ==> Shipped   size QTYs  (on size level w/ status "IT","CC")*/
    /* ==> Received size QTYs  (on size level w/ status "10")*/
    /* ------------------------------------------------------------*/
    ;
    PC5REC.PC5WORD = PC5REC.PC5ORDR[PC5WIXT]; /* ==> W.S*/
    PC5REC.PC5WSHP = PC5REC.PC5SHIP[PC5WIXT]; /* ==> W.S*/
    PC5REC.PC5WRCV = PC5REC.PC5RCV10[PC5WIXT]; /* ==> W.S*/
    ;
    PC5REC.PC5WSUM = PC5REC.PC5WSHP + PC5REC.PC5WRCV;
    ;
    /* ------------------------------------------------------------*/
    /* ===> Balance To Ship = On Order - (Shipped + Received)*/
    /* ------------------------------------------------------------*/
    ;
    PC5REC.PC5BALC[PC5WIXT] = PC5REC.PC5WORD - PC5REC.PC5WSUM;
    ;
    if (PC5REC.PC5BALC[PC5WIXT] < 0) /* ==> balance is negative*/
      PC5REC.PC5BALC[PC5WIXT] = 0; /* ===> force to zero*/
    end
    ;
    PC5REC.PC5TBALC = PC5REC.PC5TBALC + PC5REC.PC5BALC[PC5WIXT];
    ;
    PC5REC.PC5WIXT = PC5REC.PC5WIXT + 1;
    ;
  end
  ;
  ;
   /* ********************** END OF PA0Q-52602  *******************/
end // end PA0Q-52602

// VALIDATE FACTORY CODE
Function PA0Q-52603()
  ;
    /* VALIDATE FACTORY CODE*/
  ;
   /* 07/02/92: JULIE REQUESTED THAT THE "84'D" FACTORY CAN BE RESELECTED.*/
   /* SO JUST COMMENT OUT ERROR.*/
   /* 08/10/92: JAN WRIGHT DOES NOT WANT TO HAVE TO RESELECT '96'D OR*/
   /* '18' FACTORIES.*/
   /*  */
   /* IF O/A IS BEING REWORKED, DO NOT ALLOW THE "84'D" FACTORIES TO*/
   /* BE SELECTED.*/
  ;
  if (PA0QM001.YESCD == "01")
    PA0QW00.XX4 = 1;
    while (PA0QW00.XX4 <= 4)
      if (PA0QM001.FY1FCTYC[XX5] == PA0QW00.FY1FCTYC[XX4])
        if (PA0QW00.YESCD[XX4] == "84" /* FACTORY DENIED*/
         || PA0QW00.YESCD[XX4] == "96" /* IN-PROCESS CANCEL*/
         || PA0QW00.YESCD[XX4] == "18") /* FACTORY RETRACTION PRINTED*/
             /* SET PA0QM001.FY1FCTYC(XX5) CURSOR,BRIGHT;*/
             /* MOVE '526' TO PAWREC.XXXMODID;*/
                                  /* MOVE 272 TO EZEMNO; /* CAN'T USE THIS*/
                                   /* FACTORY-FACTORY DENIED*/
        else
            /* THE NON 84'D FACTORIES MUST BE SELECTED AGAIN (EITHER BY*/
            /* SELECTING A PO LINE OR BY TYPING IN THE FACTORY).  THIS*/
            /* FLAG IS EXAMINED LATER TO MAKE SURE THESE FACTORIES WERE*/
            /* SELECTED.*/
          PA0QW00.PA0QW-RESELECTED[XX4] = "Y";
        end
      end
      PA0QW00.XX4 = PA0QW00.XX4 + 1;
    end
    ;
    if (converseVar.validationMsgNum == 272)
      return;
    end
    ;
  end
  ;
  set FY1REC empty;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = PA0QM001.FY1FCTYC[XX5];
  ;
  PA0QS-08-IO2810-S();
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    set PA0QM001.FY1FCTYC[XX5] cursor, bold;
    PAWREC.XXXMODID = "526";
    converseLib.validationFailed(20); /* FACTORY CODE IS MISSING OR INVALID*/
    return;
  end
  ;
   /* IF O/A TYPE IS 'OR' OR 'NO' (OVER RUN TYPE), MAKE SURE THAT THERE*/
   /* IS AN OVER RUN PO HEADER*/
  ;
  if (PA0QW01.YETCD == "OR"
   || PA0QW01.YETCD == "NO")
    ;
    set PC3REC empty;
    set PCYREC empty;
    ;
    PC3REC.XGPCD = "02";
    PC3REC.PC4ORTYP = "OR";
    PC3REC.PC3POIDT = PA0QW01.PA0QW-PC3POIDT;
    PC3REC.FY1FCTYC = PA0QW01.FY1FCTYC[XX5];
    ;
    PCYREC.PCYFUNC = "SC";
    PCYREC.PCYFRDT = PA0QW01.PA0QW-PC3POIDT;
    PCYREC.PCYTODT = PA0QW01.PA0QW-PC3POIDT;
    ;
    PA0QS-54-IO3270-SC(); /* COUNT OVER RUN PO HEADER RECORDS*/
    ;
    if (PCYREC.PCYCOUNT == 0)
      set PA0QM001.YETCD bold;
      set PA0QM001.PA0QM-PO-ID-YY bold;
      set PA0QM001.PA0QM-PO-ID-MM bold;
      set PA0QM001.PA0QM-PO-ID-BUY-MM bold;
      set PA0QM001.FY1FCTYC[XX5] cursor, bold;
      PAWREC.XXXMODID = "536";
      converseLib.validationFailed(262);
    end
    ;
  end
  ;
  if (PA0QW00.PA0QW-NIL-OA == "N") /* IF DOMESTIC O/A*/
    return;
  end
  ;
   /* CHECK THE SECURITY CODE FOR ADD LEVEL 1.  THIS FLAG IS SET TO 'Y'*/
   /* IF THE NIL USER IS ALLOWED TO ADD A VALID FACTORY FOR STYLE THAT*/
   /* IS NOT CURRENTLY BEING BUILT IN THE SPECIFIED BUY MONTH.  OTHERWISE,*/
   /* THE PROGRAM HAS TO CHECK TO MAKE SURE THAT THE STYLE IS CURRENTLY*/
   /* BEING BUILT.*/
  ;
  if (COMMAREA.CAALVL[1] == "Y")
    return;
  end
  ;
   /* FOR NIL ORDER ADJUSTMENTS, CHECK TO MAKE SURE THAT THE FACTORY*/
   /* ENTERED BUILDS THIS STYLE FOR THE SPECIFIED BUY MONTH*/
  ;
  set PC6REC empty;
  set PCYREC empty;
  ;
  PCYREC.PCYFUNC = "T6";
  PC6REC.XGPCD = "02";
  PC6REC.PC3POIDT = PA0QW01.PA0QW-PC3POIDT;
  PC6REC.FY1FCTYC = PA0QW01.FY1FCTYC[XX5];
  PC6REC.XQACD = "01";
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "S"
   || PA0QM001.SY1STNBR != " "
   || PA0QM001.SY2CLRID != " "
   || PA0QM001.XDMCD != " ")
    PC6REC.SY1STNBR = PA0QM001.SY1STNBR;
    PC6REC.SY2CLRID = PA0QM001.SY2CLRID;
    PC6REC.XDMCD = PA0QM001.XDMCD;
  else
    PC6REC.SY1STNBR = PA0QW00.PA0QW-OA-SY1STNBR;
    PC6REC.SY2CLRID = PA0QW00.PA0QW-OA-SY2CLRID;
    PC6REC.XDMCD = PA0QW00.PA0QW-OA-XDMCD;
  end
  ;
  PA0QS-41-IO3310-T(); /* COUNT PO ITEMS*/
  ;
  if (PCYREC.PCYCOUNT <= 0) /* PO ITEM NOT FOUND*/
    set PA0QM001.FY1FCTYC[XX5] cursor, bold;
    PAWREC.XXXMODID = "526";
    converseLib.validationFailed(252); /* FACTORY DOES NOT PRODUCE THIS STYLE IN BUY MO*/
  end
  ;
  ;
   /* ------------- End of process PA0Q-52603 ------------------*/
  ;
end // end PA0Q-52603

// VALIDATE CURRENT BUY MONTH
Function PA0Q-527()
  ;
   /* THIS EDIT ONLY NEEDS TO BE DONE FOR NIL O/AS AND DOMESTIC O/AS*/
   /* THAT DO NOT COME FROM FORECASTING.  THE YETTBL MUST BE READ*/
   /* TO DETERMINE IF THIS EDIT SHOULD BE DONE.*/
  ;
  if (PA0QM001.YETCD in YETTBL.YETCD)
    if (YETTBL.XXXSTAT[sysVar.arrayIndex] == "A"
     && YETTBL.YETNILFL[sysVar.arrayIndex] == "N"
     && YETTBL.YETBOIND[sysVar.arrayIndex] == "B")
      return;
    end
  end
  ;
  if (XX0XW01.XX0XWDAT > PAWREC.PAWCOFDT)
    return;
  end
  ;
  if (XX0XW01.XX0XWDAT < PAWREC.PAWCOFDT)
    set PA0QM001.PA0QM-PO-ID-YY cursor, bold;
    set PA0QM001.PA0QM-PO-ID-MM bold;
    set PA0QM001.PA0QM-PO-ID-BUY-MM bold;
    PAWREC.XXXMODID = "527";
    converseLib.validationFailed(266); /* SYSTEM DATE IS LESS THAN BUY CUT OFF DATE*/
    return;
  end
  ;
   /* THE SYSTEM DATE IS EQUAL TO THE BUY CUTOFF DATE, CHECK THE*/
   /* SYSTEM TIME.*/
  ;
  if (XX0XW01.XX0XWTIM <= PAWREC.FB9COFTM)
    set PA0QM001.PA0QM-PO-ID-YY cursor, bold;
    set PA0QM001.PA0QM-PO-ID-MM bold;
    set PA0QM001.PA0QM-PO-ID-BUY-MM bold;
    PAWREC.XXXMODID = "527";
    converseLib.validationFailed(267); /* SYSTEM TIME CANT BE LE TO THE BUY CUTOFF TIME*/
    return;
  end
  ;
  ;
   /* ------------- End of process PA0Q-527   --------------------*/
  ;
end // end PA0Q-527

// PRODUCT HAS 1 FACTORY?
Function PA0Q-528()
   /* *********************** P A 2 7 9 **********************************/
   /* IF THE PRODUCT WAS ENTERED AND NO FACTORY INFO WAS ENTERED, CHECK*/
   /* IF THE PRODUCT WAS ENTERED AND NO FACTORY INFO WAS ENTERED, CHECK*/
   /* TO SEE WHERE THIS PRODUCT IS BUILT.  IF IT IS BUILT IN ONLY ONE*/
   /* FACTORY, DEFAULT TO THIS FACTORY.*/
  ;
  if (PA0QM001.PA1OANBR != 0)
    return;
  end
  ;
  if (PA0QM001.SY1STNBR == " ")
    return;
  end
  ;
  if (PA0QM001.FY1FCTYC[1] != " "
   || PA0QM001.FY1FCTYC[2] != " "
   || PA0QM001.FY1FCTYC[3] != " "
   || PA0QM001.FY1FCTYC[4] != " ")
    return;
  end
  ;
  PA0QW01.FY1FCTYC[1] = " ";
  PA0QW01.FY1FCTYC[2] = " ";
  PA0QW01.FY1FCTYC[3] = " ";
  PA0QW01.FY1FCTYC[4] = " ";
  ;
  set FY2REC empty;
  FY2REC.XGPCD = "02";
  FY2REC.FY1FCTYC = "*";
  FY2REC.XSECD = "*";
  FY2REC.XSNYR = -1;
  FY2REC.XXXSTAT = "*";
  FY2REC.SY1STNBR = PA0QM001.SY1STNBR;
  ;
  XP0D-110(); /* OPEN DFCTY.VFYSTY01 CURSOR*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    return;
  end
  ;
  XP0D-120(); /* FETCH FIRST FACTORY*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    return;
  end
  ;
  PA0QM001.FY1FCTYC[1] = FY2REC.FY1FCTYC;
  PA0QW01.FY1FCTYC[1] = FY2REC.FY1FCTYC;
  ;
  XP0D-120(); /* FETCH NEXT FACTORY*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    return;
  end
  ;
   /* IF ANOTHER FACTORY IS FOUND, GET RID OF DEFAULTED FACTORY*/
  ;
  PA0QM001.FY1FCTYC[1] = " ";
  PA0QW01.FY1FCTYC[1] = " ";
  ;
  ;
   /* ------------- End of process PA0Q-528 --------------------*/
  ;
end // end PA0Q-528

// PROCESS VALID INPUT REQUEST
Function PA0Q-600()
   /* ------------------------------------------------------------*/
   /* process valid input request*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0QW00.PA0QW-DISPLAY-MAP2 == "Y")
    PA0Q-605();
    return;
  end
  ;
  if (converseVar.eventKey is pf7) /* SCROLL BACKWARD*/
    PA0QW00.PA0QW-CURRENT-TS-PAGE = PA0QW00.PA0QW-CURRENT-TS-PAGE - 1;
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* SCROLL FORWARD*/
    PA0QW00.PA0QW-CURRENT-TS-PAGE = PA0QW00.PA0QW-CURRENT-TS-PAGE + 1;
    return;
  end
  ;
  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    return;
  end
  ;
  if (PA0QW00.PA0QW-READ-ONLY == "Y"
   || PA0QW00.PA0QW-KEY-CHANGED == "Y") /* KEY FIELDS HAVE BEEN CHANGED*/
    return;
  end
  ;
  if (converseVar.eventKey is pf17) /* TRANSFER TO PA0U*/
    PA0QW06.PC2CUXID = PA0QW01.PC2CUXID;
    PA0QW06.KUCCOID = PA0QW01.KUCCOID;
    PA0QW06.KUMSTRID = PA0QW01.KUMSTRID;
    PA0QW06.XNXCD = PA0QW01.XNXCD;
    PA0QW06.SY1STNBR = PA0QW01.SY1STNBR;
    PA0QW06.SY2CLRID = PA0QW01.SY2CLRID;
    PA0QW06.XDMCD = PA0QW01.XDMCD;
    PA0QW06.PC3POIDT = PA0QW01.PA0QW-PC3POIDT;
    ;
    PA0QW06.PA0QW-PA0QW01-GROUP = PA0QW01.PA0QW-PA0QW01-GROUP;
    ;
    PAWREC.PAWEXTRA = PA0QW06.PAWEXTRA;
    PA0QM001.CATOAP = "PA0U";
    PAWREC.XXXMSGNO = converseVar.validationMsgNum;
    ;
    PA0QS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end
  ;
  if (converseVar.eventKey not pf9 /* Pf9 not pressed*/
   && converseVar.eventKey not pf18)
    return; /* update accepted*/
  end
  ;
  if (PA0QM001.YETCD == "DN") /* IF DOMESTIC TO NIL, REQUIRE SO*/
    if (PA0QW00.PA0QW-SO-SELECTED-FLAG == "N")
      PAWREC.XXXMODID = "600";
      converseLib.validationFailed(285); /* MUST SELECT AN SO*/
      set PA0QM001.YETCD cursor, bold;
      return;
    end
  end
  ;
  if (PA0QW00.PA1OANBR != 0 /* IF O/A EXISTS*/
   && PA1REC.YETCD != "OR"  
   && PA1REC.YETCD != "NO")
    if (PA0QW01.PA0QW-ORIG-PO-ID-CCYYMMMM != PA0QW01.PA0QW-PC3POIDT) /**/
      PAWREC.XXXMODID = "600";
      converseLib.validationFailed(277); /* USER CHANGED*/
                          /* PO ID DATE FROM WHATS ON HDR*/
      set PA0QM001.PA0QM-PO-ID-YY cursor, bold; /**/
      set PA0QM001.PA0QM-PO-ID-MM bold; /**/
      set PA0QM001.PA0QM-PO-ID-BUY-MM bold; /**/
      return; /**/
    end
  end
  ;
   /* FB322: CHECK FOR ACTIVE BUY STATUS*/
  ;
  if (PA0QW01.PA0QW-UPDATE-HEADER == "Y"
   || PA0QW01.YESCD != "00")
    if (PA1REC.YETCD != "OR"
     && PA1REC.YETCD != "NO")
      PA0Q-60001(); /* CHECK FOR ACTIVE BUY STATUS*/
      if (converseVar.validationMsgNum != 0)
        return;
      end
    end
  end
  ;
  if (PA0QW00.PA1OANBR != 0 /* IF O/A EXISTS*/
   && PA0QW00.PA0QW-CONFIRM-MSG-SHOWN == "N") /* AND MESSAGE NOT SHOWN*/
    ;
      /* CHECK TO SEE IF FACTORY RECORDS ALREADY EXISTS*/
    ;
    set PA4REC empty;
    PA4REC.PA1OANBR = PA0QW00.PA1OANBR;
    PA4REC.YESCD = "*";
    ;
    PA0QS-02-IO4810-S1(); /* OPEN CURSOR*/
    ;
    PA0QS-03-IO4810-N1(); /* GET FIRST RECORD*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* RECORD FOUND*/
      PAWREC.XXXMODID = "600";
      converseLib.validationFailed(222); /* PREVIOUS RECORDS EXIST, PRESS*/
                                   /* PF9/PF18*/
      PA0QW00.PA0QW-CONFIRM-MSG-SHOWN = "Y";
      PA0QS-04-IO4810-C1(); /* CLOSE CURSOR*/
      return;
    end
    ;
    PA0QS-04-IO4810-C1(); /* CLOSE CURSOR*/
    ;
  end
  ;
   /* NOTE, IF PF9 OR PF18 IS HIT BEFORE ENTER, THE FACTORY MUST BE*/
   /* CHECKED TO SEE IF THERE IS A HARD ERROR.*/
  ;
  if (PA0QW00.PA1OANBR == 0 /* IF O/A DOES NOT EXIST*/
   && PA0QW01.YETCD != "ST")
    PA0QS-55-HARD-ERR();
    ;
    if (converseVar.validationMsgNum != 0)
      return;
    end
    ;
  end
  ;
   /* ------------PF9 OR PF18 HAS BEEN HIT------------------------*/
   /* UPDATE DATABASE ROWS HERE*/
  ;
  PA0QW00.PA0QW-ADD-HDR = "N"; /* init flag*/
  PA0QW00.PA0QW-UPDATE-EXIST-HDR = "N"; /* init flag*/
  ;
  if (PA0QM001.PA1OANBR == 0) /* ADD NEW O/A*/
      /* ---------------------------------------------------------*/
      /* UPDATE DPRODA.VPACTL01*/
      /* ---------------------------------------------------------*/
    PA8REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
    PA8REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
    ;
    PA0QS-45-IO4800-G(); /* UPDATE DPRODA.VPACTL01*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
          /* -----------------------------------------------------*/
          /* ADD NEW DPRODA.VPAHDR01 RECORD*/
          /* -----------------------------------------------------*/
      PA0QM001.PA1OANBR = PA8REC.PA8NXTNB;
      PA0QW00.PA1OANBR = PA8REC.PA8NXTNB;
      PA0Q-610();
      PA0QW00.PA0QW-ADD-HDR = "Y"; /* add the header*/
          /* -----------------------------------------------------*/
          /* ADD DPRODA.VPACMT01 RECORD*/
          /* -----------------------------------------------------*/
      set PA9REC empty;
      PA9REC.PA1OANBR = PA0QW00.PA1OANBR;
      PA9REC.FY1FCTYC = " ";
      PA9REC.YESCD = "00";
      PA9REC.PA9COMTY = "H";
      PA9REC.PA9COM[1] = PA0QW01.PA0QW-COMMENT;
      PA9REC.XXXUSER = COMMAREA.CAUSERID;
      PA9REC.ZZZSDT = XX0XW01.XX0XWDAT;
      PA9REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
      PA9REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
      PA9REC.ZZZCHGCT = 0;
      PA0QS-43-IO4820-A(); /* ADD DPRODA.VPACMT01 RECORD*/
      ;
      PAWREC.XXXMODID = "600";
      converseLib.validationFailed(1); /* UPDATE SUCCESSFULLY COMPLETED*/
    end
    ;
  else /* DEALING WITH EXISTING O/A*/
    if (PA0QW01.PA0QW-UPDATE-HEADER == "Y"
     || PA0QW01.YESCD != 00)
      PA0Q-620(); /* setup UPDATE to DPRODA.VPAHDR01*/
      PA0QW00.PA0QW-UPDATE-EXIST-HDR = "Y"; /* update header*/
      if (PA0QW01.PA0QW-UPDATE-COMMENT == "Y")
        set PA9REC empty;
        PA9REC.PA1OANBR = PA1REC.PA1OANBR;
        PA9REC.FY1FCTYC = " ";
        ;
          /* IF PA0QW01.YESCD EQ '80';*/
             /* MOVE PA0QW01.YESCD TO PA9REC.YESCD;*/
          /* ELSE;*/
        PA9REC.YESCD = "00";
          /* END;*/
        ;
        PA9REC.PA9COMTY = "H";
        PA9REC.PA9COM[1] = PA0QW01.PA0QW-COMMENT;
        PA9REC.XXXUSER = COMMAREA.CAUSERID;
        PA9REC.ZZZSDT = XX0XW01.XX0XWDAT;
        PA9REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
        PA9REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
        PA9REC.ZZZCHGCT = 0;
        ;
        PA0QS-43-IO4820-A(); /* ADD DPRODA.VPACMT01*/
        ;
      end
    end
  end
  ;
      /* ---------------------------------------------------------*/
      /* PROCESS FACTORY RECORDS*/
      /* ---------------------------------------------------------*/
  ;
  set PA4REC empty;
  ;
  PA4REC.PA1OANBR = PA0QW00.PA1OANBR;
  if (PA1REC.YETCD == "ST")
    PA0QW01.PA4FCTQT[1] = PA0QM001.PA1RQQTY;
  end
  ;
  PA0QS-24-IO4810-D2(); /* DELETE EXISTING FACTORY RECORDS*/
  ;
  PA0Q-630(); /* ADD FACTORY AND O/A COMMENT RECORDS*/
  ;
   /* --------------------------------------------------------*/
   /* PROCESS FROZEN RECORDS*/
   /* --------------------------------------------------------*/
  set PAIREC empty;
  set PASREC empty;
  ;
  PAIREC.PA1OANBR = PA0QW00.PA1OANBR;
  PASREC.PA1OANBR = PA0QW00.PA1OANBR;
  PAIREC.ZZZCHGDT = -1;
  PASREC.ZZZCHGDT = -1;
  PAIREC.ZZZCHGTM = -1;
  PASREC.ZZZCHGTM = -1;
  ;
  PA0QS-25-IO4960-D1();
  ;
  PA0QS-26-IO4970-D1();
  ;
  PA0Q-640(); /* ADD FROZEN ITEM RECORDS*/
   /* --------------------------------------------------------*/
   /* PROCESS WORK RECORDS*/
   /* --------------------------------------------------------*/
  set VPAWRK02 empty;
  ;
  VPAWRK02.PA1OANBR = PA0QW00.PA1OANBR;
  VPAWRK02.ZZZSDT = -1;
  VPAWRK02.ZZZSTM = -1;
  VPAWRK02.PACORDTY = "*";
  ;
  PA0QS-27-VPAWRK-D1();
  ;
  PA0Q-650(); /* ADD WORK RECORDS*/
  ;
  if (PA1REC.YETCD == "DA" /* all dom adds*/
   || PA1REC.YETCD == "NA") /* and nil adds default to*/
    PA1REC.FB-LATE-BK-FL = "Y"; /* late book*/
  else
    if (PA0QW00.PA0QW-UPDATE-EXIST-HDR == "Y") /* if need to do update*/
      if (PA1REC.YETCD == "OR") /**/
        PA1REC.FB-LATE-BK-FL = "N"; /* not late book*/
      end
    end
  end
  ;
   /* --------------------------------------------------------*/
   /* either an add or an update has been set up to be*/
   /* done for the header, it is now time to do the actual*/
   /* call to either update or add.*/
   /* --------------------------------------------------------*/
  ;
   /* PA272: IF AN EXISTING O/A IS MISSING THE PO TYPE, UPDATE THE*/
   /* HEADER WITH THE DEFUALTED PO TYPE.*/
  ;
  if (PA1REC.PC4ORTYP == " "
   && PA0QM001.PC4ORTYP != " ")
    PA1REC.PC4ORTYP = PA0QM001.PC4ORTYP;
    PA0QW00.PA0QW-UPDATE-EXIST-HDR = "Y";
  end
  ;
  if (PA0QW00.PA0QW-ADD-HDR == "Y") /* init flag*/
    PA0QS-46-IO4830-A(); /* do the actual add to data base*/
  else
    if (PA0QW00.PA0QW-UPDATE-EXIST-HDR == "Y" /* if need to do update*/
     || PA1REC.FB-LATE-BK-FL == "Y")          /* or fb-late-book set y*/
      PA1REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
      PA1REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
      PA0QS-44-IO4830-U(); /* update pahdr*/
    end
  end
   /* --------------------------------------------------------*/
   /* PROCESS CUSTOMER RECORDS*/
   /* --------------------------------------------------------*/
  ;
  if (PA0QW01.YETCD in YETTBL.YETCD)
    if (YETTBL.YETNILFL[sysVar.arrayIndex] == "Y")
      ;
      set PAGREC empty;
      ;
      PAGREC.PA1OANBR = PA0QW00.PA1OANBR;
      ;
      PA0QS-28-IO5140-D2(); /* DELETE EXISTING DPRODA.VPACUS01*/
                                   /* RECORDS*/
      ;
      PA0QW00.PA0QW-CUST-UPDATED = "N";
      ;
      PA0Q-660(); /* ADD DPRODA.VPACUS01 RECORDS*/
      ;
    end
  end
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit();
  ;
   /* init flags/counters*/
  ;
  PA0QW00.PA0QW-REQ-FOR-DATA-FLAG = "N";
  PA0QW00.XXXMODID = "600"; /* Module identification*/
  ;
  if (converseVar.eventKey is pf9) /* UPDATE AND TRANSFER TO PA0P*/
    ;
    PAWREC.PAWOANBR = PA0QW00.PA1OANBR;
    ;
  else /* PF18 HAS BEEN HIT*/
    ;
    PA0QM001.CATOAP = "PA0Q";
    PA0QW00.PA0QW-REQ-FOR-DATA-FLAG = "N";
    set PAWREC empty;
    PAWREC.XXXMODID = "600";
    PAWREC.XXXMSGNO = 242;
    PAWREC.PAWOANBR = PA0QW00.PA1OANBR;
    ;
      /* LOAD HEADER INFORMATION INTO PAWREC*/
    ;
    set PA0QW10 empty;
    ;
    PA0QW10.YETCD = PA0QM001.YETCD;
    PA0QW10.YSMXDV = PA0QM001.YSMXDV;
    PA0QW10.PC4ORTYP = PA0QM001.PC4ORTYP;
    PA0QW10.PA0QW-PO-ID-YY = PA0QM001.PA0QM-PO-ID-YY;
    PA0QW10.PA0QW-PO-ID-MM = PA0QM001.PA0QM-PO-ID-MM;
    PA0QW10.PA0QW-PO-ID-BUY-MM = PA0QM001.PA0QM-PO-ID-BUY-MM;
    PA0QW10.PA0QW-PO-ID-FCTY = PA0QM001.PA0QM-PO-ID-FCTY;
    PA0QW01.PA0QW-OP-CUST-NEED1-MM = PA0QM001.PA0QM-OP-CUST-NEED1-MM;
    PA0QW01.PA0QW-OP-CUST-NEED1-YY = PA0QM001.PA0QM-OP-CUST-NEED1-YY;
    PA0QW01.PA0QW-OP-CUST-NEED2-MM = PA0QM001.PA0QM-OP-CUST-NEED2-MM;
    PA0QW01.PA0QW-OP-CUST-NEED2-YY = PA0QM001.PA0QM-OP-CUST-NEED2-YY;
    /* MOVE PA0QM001.PA0QM-ALT-PO-ID-YY TO PA0QW10.PA0QW-ALT-PO-ID-YY;*/
    /* MOVE PA0QM001.PA0QM-ALT-PO-ID-MM TO PA0QW10.PA0QW-ALT-PO-ID-MM;*/
    /* MOVE PA0QM001.PA0QM-ALT-PO-ID-BUY-MM TO*/
    /* PA0QW10.PA0QW-ALT-PO-ID-BUY-MM;*/
    /* MOVE PA0QM001.PA0QM-ALT-PO-ID-FCTY TO PA0QW10.PA0QW-ALT-PO-ID-FCTY;*/
    PA0QW10.SY1STNBR = PA0QM001.SY1STNBR;
    PA0QW10.SY2CLRID = PA0QM001.SY2CLRID;
    PA0QW10.XDMCD = PA0QM001.XDMCD;
    PA0QW10.PC2CUXID = PA0QM001.PC2CUXID;
    PA0QW10.KUCCOID = PA0QM001.KUCCOID;
    PA0QW10.KUMSTRID = PA0QM001.KUMSTRID;
    PA0QW10.XNXCD = PA0QM001.XNXCD;
    PA0QW10.PA0QW-SHOW-ALL-SO = PA0QM001.PA0QM-SHOW-ALL-SO;
    PA0QW10.PG1SC4CD = PA0QW01.PG1SC4CD;
    ;
    PAWREC.PAWEXTRA = PA0QW10.PAWEXTRA;
    ;
  end
  ;
  PA0QS-00-FAST-PATH();
  ;
  XSPAS01();
  ;
  exit stack;
  ;
   /* ------------------ END OF PROCESS PA0Q-600 -----------------*/
end // end PA0Q-600

// CHECK FOR ACTIVE BUY STATUS
Function PA0Q-60001()
   /* ------------------------------------------------------------*/
   /* FB322 - DOMESTIC SALES ORDERS FOR THE CURRENT BUY CAN BE*/
   /* MOVED TO ANOTHER BUY MONTH.  THE BUY SYSTEM NEEDS TO KNOW*/
   /* IF IT NEEDS TO BUY THESE SALES ORDERS.  IF THE O/A HAS AN*/
   /* ACTIVE BUY STATUS, THE BUY SYSTEM WILL NOT BUY THESE SALES*/
   /* ORDERS.  DCORP.VSUMCD01 IS USED TO DETERMINE IF THE O/A HAS*/
   /* AN ACTIVE BUY STATUS.  THE O/A WILL HAVE TO BE COMPLETED. IF*/
   /* THE O/A STATUS IS CHANGED FROM/TO THIS GROUP, THE BUY SYSTEM*/
   /* NEEDS TO KNOW THAT THEIR PICTURE HAS CHANGED.  IF IT IS BEFORE*/
   /* THE BUY CUTOFF, RESET THE FLAGS FOR THE BUY SYSTEM.  IF IT IS*/
   /* AFTER THE CUTOFF, ERROR.*/
   /* ------------------------------------------------------------*/
  ;
   /* NOTICE THAT STATUS '01' REWORK IS NOT INCLUDED IN THE ACTIVE BUY*/
   /* STATUS HERE BECAUSE WHEN PF9 IS HIT FOR A REWORK, THE HEADER*/
   /* STATUS REMAINS '01'.  IT IS NOT RESET BACK TO '00'.*/
  ;
  if (PA0QW01.YESCD == "01") /* REWORK*/
    return;
  end
  ;
  set YSMREC empty;
  ;
  YSMREC.YSMTBLPF = "YES";
  YSMREC.YSMSYSPF = "PA";
  YSMREC.YSMSUMID = 6;
  YSMREC.YSMSRCVL = PA0QW01.YESCD;
  ;
  PA0QS-72-IO2640-S();
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    return;
  end
  ;
   /* PA0QS-64-IO4980-S1; /* OPEN DPRODA.VPAITM01*/
  ;
   /* PA0QS-65-IO4980-N1; /* FETCH DPRODA.VPAITM01*/
  ;
   /* WHILE SQLCA.SQLCODE = 0*/
   /* AND EZEMNO EQ 0;*/
     /* ;*/
     /* IF PA2REC.OP1CUOID NE 0;*/
        /* ;*/
        /* SET FBHREC EMPTY;*/
        /* MOVE PA2REC.OP1PARTN TO FBHREC.OP1PARTN;*/
        /* MOVE PA2REC.OP1CUOID TO FBHREC.OP1CUOID;*/
        /* MOVE PA2REC.OP1NORID TO FBHREC.OP1NORID;*/
        /* MOVE PA2REC.PC2CUXID TO FBHREC.PC2CUXID;*/
        /* MOVE PAWREC.PAWBUYDT TO FBHREC.FB8BUYDT;*/
        /* MOVE PA2REC.SY1STNBR TO FBHREC.SY1STNBR;*/
        /* MOVE PA2REC.SY2CLRID TO FBHREC.SY2CLRID;*/
        /* MOVE PA2REC.XDMCD TO FBHREC.XDMCD;*/
        /* MOVE PA2REC.XQACD TO FBHREC.XQACD;*/
        /* MOVE PA2REC.XPGCD TO FBHREC.XPGCD;*/
        /* MOVE PA2REC.XUMCD TO FBHREC.XUMCD;*/
        /* ;*/
        /* PA0QS-61-IO4640-SB;/* GET DFBUY.VDNORD01*/
        /* ;*/
        /* IF SQLCA.SQLCODE EQ 0;*/
           /* IF FBHREC.XDVCD NE '02';*/
             /* DETERMINE THE BUY CUTOFF DATE, IF THE BUY CUTOFF DATE IS*/
             /* PAST, ERROR.  OTHERWISE, UPDATE FLAGS.*/
              /* IF FBHREC.FB8BUYDT NE FB9REC.FB8BUYDT;*/
                 /* IF XX0XW01.XX0XWDAT GT FB9REC.FB9COFDT;*/
                    /* MOVE '600' TO PAWREC.XXXMODID;*/
                    /* SET PA0QM001.YESCD BRIGHT;*/
                    /* MOVE 297 TO EZEMNO;*/
                 /* ELSE;*/
                    /* IF XX0XW01.XX0XWDAT EQ FB9REC.FB9COFDT*/
                    /* AND XX0XW01.XX0XWTIM GE FB9REC.FB9COFTM;*/
                       /* MOVE '515' TO PAWREC.XXXMODID;*/
                       /* SET PA0QM001.YESCD BRIGHT;*/
                       /* MOVE 297 TO EZEMNO;*/
                    /* END;*/
                 /* END;*/
              /* END;*/
           /* END;*/
        /* END;*/
        /* ;*/
     /* END;*/
     /* ;*/
     /* IF EZEMNO EQ 0;*/
        /* PA0QS-65-IO4980-N1;*/
     /* END;*/
     /* ;*/
   /* END;*/
  ;
   /* PA0QS-66-IO4980-C1; /* CLOSE DPRODA.VPAITM01*/
  ;
   /* IF EZEMNO NE 0;*/
     /* EZERTN;*/
   /* END;*/
  ;
  PA0QW00.PA0QW-LIVE-BUY-STAT-CHANGED = "Y";
  ;
  ;
  ;
end // end PA0Q-60001

// DISPLAY DATA ON SCREEN 2
Function PA0Q-605()
   /* --------------------------------------------------------*/
    /* GET DATA AND MOVE TO SCREEN 2*/
   /* --------------------------------------------------------*/
  ;
  if (PA0QW00.XX7 == 11)
    PAWREC.XXXMODID = "605";
    converseLib.validationFailed(73); /* NO MORE SIZES*/
    return;
  end
  ;
  PA0QW00.XX7 = PA0QW00.XX7 + 1;
  ;
  while (PA0QM001.PA0QM-SELECT[XX7] == " ")
    ;
    if (PA0QW00.XX7 == 11)
      PAWREC.XXXMODID = "605";
      converseLib.validationFailed(73); /* NO MORE SIZE RECORDS SELECTED*/
      return;
    end
    ;
    PA0QW00.XX7 = PA0QW00.XX7 + 1;
    ;
  end
  ;
  if (PA0QM001.PA0QM-SELECT[XX7] == "S")
    PA0Q-60501(); /* MOVE DATA TO SCREEN*/
    PA0QM001.PA0QM-SELECT[XX7] = " ";
  end
end // end PA0Q-605

// BUILD DATA FOR SCREEN 2
Function PA0Q-60501()
   /* -------------------------------------------------*/
   /* FIRST GO THRU SIZE DATA AND BUILD PG3REC FOR*/
   /* CALL TO PG1050*/
   /* -------------------------------------------------*/
   /* THEN DECIDE WHICH RECORD TYPE WE ARE WORKING WITH*/
   /* IF LINE ITEM TYPE IS 'SO' AND DIRECT SHIP CODE IS 1*/
   /* THEN IT IS A DIRECT SHIP.*/
   /* IF LINE ITEM TYPE IS 'SO' AND DIRECT SHIP CODE IS 3*/
   /* THEN IT IS A PULL FROM STOCK.*/
   /* IF LINE ITEM TYPE IS 'PO' IT IS A PO ITEM.*/
   /* --------------------------------------------------*/
  ;
   /* REMEMBER THAT PA0QW04 CONTAINS THE TEMP STORAGE INFORMATION*/
   /* FOR THE CURRENT PAGE DISPLAYED ON PA0QM001*/
  ;
  set PA0QW08 empty;
  ;
  set PG3REC empty;
  ;
   /* MOVE THE TEMP STORAGE SELECTED INTO THE SO OR PO WORKING*/
   /* STORAGE FIELDS.*/
  ;
  if (PA0QW04.PA0QW-RECORD-TYPE[XX7] == "SO")
    set PA0QW02 empty;
    PA0QW02.PA0QW-TEMP-SO-GROUP = PA0QW04.PA0QW-TEMP-STORE-GRP[XX7];
    move 0 to PA0QW08.PA0QW-BALANCE-TO-SHIP[1] for all;
    PA0QW08.PA0QW-ON-ORDER-QTY-GRP = PA0QW02.PA0QW-SO-ORDER-QTY-GRP;
    PA0QW08.PA0QW-VARIANCE-QTY-GRP = PA0QW02.PA0QW-SO-ADJ-QTY-GRP;
    ;
      /* SET UP PG3REC STYLE/COLOR/DIMENSION*/
    ;
    PG3REC.SY1STNBR = PA0QW02.SY1STNBR;
    PG3REC.SY2CLRID = PA0QW02.SY2CLRID;
    PG3REC.XDMCD = PA0QW02.XDMCD;
  else
    if (PA0QW04.PA0QW-RECORD-TYPE[XX7] == "PO")
      set PA0QW09 empty;
      PA0QW09.PA0QW-TEMP-PO-GROUP = PA0QW04.PA0QW-TEMP-STORE-GRP[XX7];
      PA0QW08.PA0QW-BALANCE-TO-SHIP-GRP = PA0QW09.PA0QW-BALANCE-TO-SHIP-GRP;
      PA0QW08.PA0QW-ON-ORDER-QTY-GRP = PA0QW09.PA0QW-PO-ORDER-QTY-GRP;
      move 0 to PA0QW08.PA0QW-VARIANCE-QTY[1] for all;
      ;
         /* SET UP PG3REC STYLE/COLOR/DIMENSION*/
      ;
      if (PA0QW00.PA0QW-PROCESS-TYPE == "S")
        PG3REC.SY1STNBR = PA0QM001.SY1STNBR;
        PG3REC.SY2CLRID = PA0QM001.SY2CLRID;
        PG3REC.XDMCD = PA0QM001.XDMCD;
      else
        ;
            /* NOTE: TEMP STORAGE CAN NOT BE EXPANDED TO INCLUDE THE*/
            /* SYTLE, COLOR, DIMENSION BECUASE THE MAXIMUM NUMBER OF*/
            /* BYTES IS 4092.  SO, THE PO ITEM RECORD MUST BE READ TO*/
            /* DETERMINE THE SYTLE, COLOR, AND DIMENSION.*/
        ;
        set PC6REC empty;
        PC6REC.XGPCD = "02";
        PC6REC.PC3PONBR = PA0QW09.PC3PONBR;
        PC6REC.PC6ITMNB = PA0QW09.PC6ITMNB;
        ;
        PA0QS-51-IO3310-SA(); /* SELECT ALT PO ITEM*/
        ;
        PG3REC.SY1STNBR = PC6REC.SY1STNBR;
        PG3REC.SY2CLRID = PC6REC.SY2CLRID;
        PG3REC.XDMCD = PC6REC.XDMCD;
        ;
      end
      ;
    else
      return;
    end
  end
  ;
  PA0QW00.XX5 = 1; /* INIT INDEX;*/
  PA0QW00.XX6 = 0; /* INIT INDEX;*/
  ;
   /* THIS CODE IS TO DETERMINE THE ACTUAL SIZE LABELS NEEDED*/
   /* TO DISPLAY ON THE MAP.*/
  ;
  while (PA0QW00.XX5 <= 40)
    ;
    if (PA0QW08.PA0QW-BALANCE-TO-SHIP[XX5] != 0
     || PA0QW08.PA0QW-ON-ORDER-QTY[XX5] != 0
     || PA0QW08.PA0QW-VARIANCE-QTY[XX5] != 0)
      PA0QW00.XX6 = PA0QW00.XX6 + 1;
      PG3REC.SY5SZID[XX6] = PA0QW00.XX5;
    end
    PA0QW00.XX5 = PA0QW00.XX5 + 1;
  end
  ;
  PG3REC.XGPCD = "02";
  PG3REC.XQACD = "01";
  PG3REC.PG3FUNCD = "IE";
  PG3REC.PG3DATFM = "C";
  PG3REC.PG3XDVCD = "99";
  ;
  XSPG301(); /* CALL SIZE TRANSLATION ROUTINE*/
  ;
  if (sysVar.errorCode != "00000000")
    PAWREC.XXXMODID = "605";
    converseLib.validationFailed(10); /* UNEXPECTED ERROR HAS OCCURRED*/
    return;
  end
  ;
  if (PG3REC.PG3RETCD > 5)
    PAWREC.XXXMODID = "605";
    converseLib.validationFailed(11); /* DATA IN USE*/
    return;
  end
  ;
  set PA0QM002 initial;
  ;
  PA0QW00.XX5 = 1;
  ;
  while (PA0QW00.XX5 <= 39)
    set PA0QM002.SY4IDDSC[XX5] skip, invisible;
    set PA0QM002.PACWRKQT[XX5] skip, invisible;
    PA0QW00.XX5 = PA0QW00.XX5 + 1;
  end
  ;
  PA0QM002.PA1OANBR = PA0QM001.PA1OANBR;
  ;
  PA0QM002.PA0QM-CUST-XREF = PA0QM001.PA0QM-CUST-XREF[XX7];
  PA0QM002.PA0QM-WHSE = PA0QM001.PA0QM-WHSE[XX7];
  PA0QM002.PC6RTADT = PA0QM001.PA0QM-NEED-DT-RTA[XX7];
  PA0QM002.PC6OETS = PA0QM001.PA0QM-STYLE-ETS[XX7];
  ;
  PA0QM002.PA0QM-ORDER-TOTAL = PA0QM001.PA0QM-ON-ORDER-QTY[XX7];
  ;
  if (PA0QM001.PA0QM-LINE-TYPE[XX7] == "SO") /* SALES ORDER LINE SELECTED*/
    set PA0QM002.PA0QM-RTA-LABEL skip, invisible;
    set PA0QM002.PC6RTADT skip, invisible;
    set PA0QM002.PA0QM-ETS-LABEL skip, invisible;
    set PA0QM002.PC6OETS skip, invisible;
    PA0QM002.PA0QM-BTS-LABEL1 = "VARIANCE";
    PA0QM002.PA0QM-BTS-LABEL2 = "VARIANCE";
    PA0QM002.PA0QM-BTS-LABEL3 = "VARIANCE";
    ;
    if (PA0QM001.PA0QM-XDS-DIR-SHIP-CD[XX7] == "1")
      PA0QM002.PA0QM-HEADER = " FOR DIRECT SHIP ORDER";
    else
      if (PA0QM001.PA0QM-XDS-DIR-SHIP-CD[XX7] == "2")
        PA0QM002.PA0QM-HEADER = " FOR INDIRECT DIRECT SHIP ORDER";
      else
        if (PA0QM001.PA0QM-XDS-DIR-SHIP-CD[XX7] == "3")
          PA0QM002.PA0QM-HEADER = " FOR PULL FROM STOCK ORDER";
        end
      end
    end
    ;
  else /* PO LINE ITEM SELECTED*/
    set PA0QM002.PA0QM-RTA-LABEL initialAttributes;
    set PA0QM002.PC6RTADT initialAttributes;
    set PA0QM002.PA0QM-ETS-LABEL initialAttributes;
    set PA0QM002.PC6OETS initialAttributes;
    PA0QM002.PA0QM-BTS-LABEL1 = "BAL SHP";
    PA0QM002.PA0QM-BTS-LABEL2 = "BAL SHP";
    PA0QM002.PA0QM-BTS-LABEL3 = "BAL SHP";
    PA0QW08.PA0QW-PC3PONBR = PA0QW09.PC3PONBR;
    PA0QW08.PA0QW-PO-NUM-LABEL = "  FOR P.O. NUM ";
    PA0QM002.PA0QM-HEADER = PA0QW08.PA0QW-PO-NUM-LINE;
    ;
  end
   /* HERE WE WILL MOVE THE SIZE RELATED FIELDS*/
  ;
  PA0QW00.XX5 = 1;
  ;
  while (PG3REC.SY5SZID[XX5] > 0)
    PA0QW00.XX6 = PG3REC.SY5SZID[XX5];
    PA0QM002.SY4IDDSC[XX5] = PG3REC.SY4IDDSC[XX5];
    PA0QM002.PACWRKQT[XX5] = PA0QW08.PA0QW-ON-ORDER-QTY[XX6];
    ;
    if (PA0QM001.PA0QM-LINE-TYPE[XX7] == "SO")
      PA0QM002.PACFLADJ[XX5] = PA0QW08.PA0QW-VARIANCE-QTY[XX6];
    else
      PA0QM002.PACFLADJ[XX5] = PA0QW08.PA0QW-BALANCE-TO-SHIP[XX6];
    end
    ;
    set PA0QM002.SY4IDDSC[XX5] initialAttributes;
    set PA0QM002.PACWRKQT[XX5] initialAttributes;
    set PA0QM002.PACFLADJ[XX5] initialAttributes;
    ;
    PA0QW00.XX5 = PA0QW00.XX5 + 1;
  end
  ;
end // end PA0Q-60501

// ADD ROW TO DPRODA.VPAHDR01
Function PA0Q-610()
   /* ------------------------------------------------------------*/
   /* Format the data from the map in the table row.*/
   /* ------------------------------------------------------------*/
  ;
  PA1REC.PA1OANBR = PA8REC.PA8NXTNB; /* request number*/
  PA0QW00.PA1OANBR = PA8REC.PA8NXTNB;
  ;
  PA1REC.YSMXDV = "10"; /* FORCE SUB DIV GRP CODE TO 10*/
  ;
  if (PA0QM001.YETCD in YETTBL.YETCD)
    if (YETTBL.YETNILFL[sysVar.arrayIndex] == "Y"
     && PA0QM001.YETCD != "DN")
      ;
      PA1REC.YSMXDV = "20"; /* FORCE SUB DIV GRP CODE TO 20*/
      ;
    else
      if (PA0QM001.YETCD == "ST"
       && COMMAREA.XDVCD != "01")
        PA1REC.YSMXDV = "20"; /* FORCE SUB DIV GRP CODE TO 20*/
      end
    end
  end
  ;
  PA1REC.PC4ORTYP = PA0QM001.PC4ORTYP; /* PO TYPE*/
  ;
   /* CHECK TO SEE IF PROCESSING BY STYLE*/
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "S")
    PA1REC.SY1STNBR = PA0QM001.SY1STNBR;
    PA1REC.SY2CLRID = PA0QM001.SY2CLRID;
    PA1REC.XDMCD = PA0QM001.XDMCD;
    PA1REC.PG1SC4CD = PA0QW01.PG1SC4CD; /* SPECIALIST CODE*/
  else
    PA1REC.SY1STNBR = PA0QW00.PA0QW-OA-SY1STNBR;
    PA1REC.SY2CLRID = PA0QW00.PA0QW-OA-SY2CLRID;
    PA1REC.XDMCD = PA0QW00.PA0QW-OA-XDMCD;
    ;
      /* DETERMINE THE SPECIALIST CODE*/
    ;
    set PG2REC empty;
    PG2REC.XGPCD = "02";
    PG2REC.SY1STNBR = PA0QW00.PA0QW-OA-SY1STNBR;
    PG2REC.SY2CLRID = PA0QW00.PA0QW-OA-SY2CLRID;
    PG2REC.XDMCD = PA0QW00.PA0QW-OA-XDMCD;
    ;
    PA0QS-07-IO3120-S(); /* SELECT STYLE/COLOR TABLE*/
    ;
    /* MOVE ' ' TO PA1REC.PG1SC4CD;*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* STYLE CLOSED OUT*/
       /* IF PG2REC.XLCCD1 EQ '05'; /* LIFE CYCLE CODE*/
       /* OR PG2REC.XLCCD1 EQ '10';*/
       /* OR PG2REC.XLCCD1 EQ '20';*/
      PA1REC.PG1SC4CD = PG2REC.PG1SC4CD;
       /* END;*/
    end
    ;
  end
  ;
  PA1REC.KUCCOID = PA0QM001.KUCCOID; /* company id*/
  PA1REC.KUMSTRID = PA0QM001.KUMSTRID; /* store id*/
  PA1REC.XNXCD = PA0QM001.XNXCD; /* dept id xref*/
  ;
   /* FORMAT THE O/A BUY MONTH RANGE*/
  ;
  ;
  /*  */
  /* *************************** Y2K OUT BEGIN ****************************/
  /*  */
  /* MOVE 19 TO PA0QW00.PA0QW-CC;*/
  /*  */
  /* *************************** Y2K OUT END ******************************/
  /*  */
  ;
  PA0QW00.PA0QW-YY = PA0QW01.PA0QW-PO-ID-YY;
  PA0QW00.PA0QW-MM = PA0QW01.PA0QW-PO-ID-BUY-MM;
  ;
  if (PA0QW00.PA0QW-MM == 1
   || PA0QW00.PA0QW-MM == 2)
    if (PA0QW00.PA0QW-YY == 99)
      PA0QW00.PA0QW-YY = 0;
    else
      PA0QW00.PA0QW-YY = PA0QW00.PA0QW-YY + 1;
    end
  end
  ;
  /*  */
  /* *************************** Y2K IN BEGIN *****************************/
  /*  */
  if (PA0QW00.PA0QW-YY > 60)
    PA0QW00.PA0QW-CC = 19;
  else
    PA0QW00.PA0QW-CC = 20;
  end
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */
  ;
  PA1REC.PA1BUYMO = PA0QW00.PA0QW-PA-ORD-ADJ-BUY-MO; /* BUY MONTH*/
  ;
  PA1REC.PA1SBFMO = 0; /* initialize pa_sbmt_fcst_mo*/
  PA1REC.PA1OATXT = PA0QM001.PA1OATXT; /* request description*/
  PA1REC.YESCD = "00"; /* o/a status code*/
  PA1REC.PA1YESID = " "; /* changed by user id*/
  PA1REC.PA1YESDT = XX0XW01.XX0XWDAT; /* CHANGED BY DATE*/
  PA1REC.YETCD = PA0QM001.YETCD; /* o/a type code*/
  PA1REC.PA1YETBY = " "; /* changed by user id*/
  PA1REC.PA1YETDT = 0; /* changed by date*/
  PA1REC.PA1RQQTY = PA0QW01.PA1RQQTY; /* O/A REQUEST QUANTITY*/
  PA1REC.PA1HLDFL = "N"; /* initialize pa_hld_fl*/
  PA1REC.PA1INTFL = "N"; /* initialize pa_intrn_adj_fl*/
  PA1REC.PA1CMIND = " "; /* initialize pa_comb_ind*/
  PA1REC.PA1FCRFL = "N"; /* initialize pa_fcst_rlv_fl*/
  PA1REC.FB-LATE-BK-FL = "N"; /* initialize LATE BOOK*/
  PA1REC.FB-LATE-BK-FL-MDT = 0; /* DATE LATE BOOK SET*/
  PA1REC.PA-APPL-BUY-BTL-FL = "Y"; /* init buy bottom line fl*/
  PA1REC.XXXPGUID = COMMAREA.CAUSERID; /* user id*/
  PA1REC.ZZZSDT = XX0XW01.XX0XWDAT; /* set up date*/
  PA1REC.ZZZSTM = XX0XW01.XX0XWTIM; /* set up time*/
  PA1REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  PA1REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  PA1REC.ZZZCHGCT = 0; /* change count*/
  PA1REC.PA-AFRGT-RQT-ID = PA0QW01.PA-AFRGT-RQT-ID; /* AIR FREIGHT*/
  ;
   /* PA0QS-46-IO4830-A; /* ADD HEADER RECORD*/
  ;
  ;
  ;
end // end PA0Q-610

// UPDATE DPRODA.VPAHDR01
Function PA0Q-620()
   /* ------------------------------------------------------------*/
   /* Format the data from the map in the table row.*/
   /* ------------------------------------------------------------*/
  ;
   /* ------------------------------------------------------------*/
   /* IF THE O/A TYPE CODE CHANGED FORMAT FOR THE CHANGED FIELDS.*/
   /* ------------------------------------------------------------*/
  ;
  PA0QW01.PA0QW-COMMENT = " ";
  ;
   /* IF THE HEADER STATUS IS NOT PO UPDATE FAILED AND NOT A REWORK,*/
   /* RESET THE HEADER STATUS TO '00'.*/
  ;
   /* IF PA0QW01.YESCD NE '80';*/
  if (PA0QW01.YESCD != "01") /* REWORK O/A*/
    ;
    PA1REC.YESCD = "00";
    ;
    if (PA0QW00.PA0QW-LIVE-BUY-STAT-CHANGED == "Y")
      PA0Q-62001(); /* UPDATE BUY FLAGS*/
    end
    ;
  end
  ;
   /* PA0330: FOR OVERRUN O/AS, CHANGE THE PO ID MONTH RANGE TO HAVE THE*/
   /* FORM FY0605.*/
  ;
  if (PA1REC.PA1BUYMO != PA0QW00.PA0QW-PA1BUYMO)
    PA1REC.PA1BUYMO = PA0QW00.PA0QW-PA1BUYMO;
  end
  ;
  if (PA1REC.YETCD != PA0QM001.YETCD) /* if o/a type code changed*/
    PA0QW01.PA0QW-UPDATE-COMMENT = "Y";
    PA0QW01.PA0QW-COMMENT = "O/A TYPE HAS BEEN CHANGED";
    if (PA1REC.YETCD == "DA")
      if (PA0QM001.YETCD == "NI")
        PA1REC.YSMXDV = "20";
        PA0QW01.YSMXDV = "20";
        PA1REC.KUCCOID = 694572;
        PA0QW01.KUCCOID = 694572;
        PA1REC.KUMSTRID = 0;
        PA0QW01.KUMSTRID = 0;
        PA1REC.XNXCD = 0;
        PA0QW01.XNXCD = 0;
      else
        if (PA0QM001.YETCD == "OR"
         || PA0QM001.YETCD == "ST")
          PA1REC.PC4ORTYP = PA0QM001.PC4ORTYP;
        end
      end
    end
    PA1REC.YETCD = PA0QM001.YETCD; /* o/a type code*/
    PA1REC.PA1YETBY = COMMAREA.CAUSERID; /* o/a changed by*/
    PA1REC.PA1YETDT = XX0XW01.XX0XWDAT; /* o/a changed date*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the request description changed, format for the new fld.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA1REC.PA1OATXT != PA0QM001.PA1OATXT) /* if request desc changed*/
    /* IF PA0QW01.PA0QW-COMMENT EQ ' ';*/
       /* MOVE 'O/A DESCRIPTION HAS BEEN CHANGED' TO*/
            /* PA0QW01.PA0QW-COMMENT;*/
    /* END;*/
    PA1REC.PA1OATXT = PA0QM001.PA1OATXT; /* request desc*/
  end
  ;
  PA1REC.PA-AFRGT-RQT-ID = PA0QM001.PA-AFRGT-RQT-ID;
  ;
  PA1REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  PA1REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
    /* increment change counter*/
  ;
   /* PA0QS-44-IO4830-U; /* UPDATE DPRODA.VPAHDR01*/
  ;
  ;
end // end PA0Q-620

// CHECK FOR ACTIVE BUY STATUS
Function PA0Q-62001()
   /* ------------------------------------------------------------*/
   /* FB322 - DOMESTIC SALES ORDERS FOR THE CURRENT BUY CAN BE*/
   /* MOVED TO ANOTHER BUY MONTH.  THE BUY SYSTEM NEEDS TO KNOW*/
   /* IF IT NEEDS TO BUY THESE SALES ORDERS.  IF THE O/A STATUS HAS*/
   /* CHANGED FROM A LIVE BUY STATUS (BASED ON DCORP.VSUMCD01),*/
   /* THE BUY SYSTEM WILL NOT BUY THESE SALES ORDERS.  THE O/A WILL*/
   /* HAVE TO BE COMPLETED.  IF THE O/A STATUS IS CHANGED FROM/TO*/
   /* THIS GROUP, THE BUY SYSTEM NEEDS TO KNOW THAT THEIR PICTURE*/
   /* HAS CHANGED.  IF IT IS BEFORE THE BUY CUTOFF, RESET THE FLAGS*/
   /* FOR THE BUY SYSTEM.  IF IT IS AFTER THE CUTOFF, ERROR.*/
   /* ------------------------------------------------------------*/
  ;
  PA0QW00.PA0QW-BUY-FLAGS-UPDATED = "N";
  ;
  PA0QS-64-VPAITM-S1(); /* OPEN DPRODA.VPAITM02*/
  ;
  PA0QS-65-VPAITM-N1(); /* FETCH DPRODA.VPAITM02*/
  ;
  while (SQLCA.VAGen_SQLCODE == 0
   && PA0QW00.PA0QW-BUY-FLAGS-UPDATED == "N")
    ;
    if (VPAITM02.OP1CUOID != 0)
      ;
      set FBHREC empty;
      FBHREC.OP1PARTN = VPAITM02.OP1PARTN;
      FBHREC.OP1CUOID = VPAITM02.OP1CUOID;
      FBHREC.OP1NORID = VPAITM02.OP1NORID;
      FBHREC.PC2CUXID = VPAITM02.PC2CUXID;
      FBHREC.FB8BUYDT = PAWREC.PAWBUYDT;
      FBHREC.SY1STNBR = VPAITM02.SY1STNBR;
      FBHREC.SY2CLRID = VPAITM02.SY2CLRID;
      FBHREC.XDMCD = VPAITM02.XDMCD;
      FBHREC.XQACD = VPAITM02.XQACD;
      FBHREC.XPGCD = VPAITM02.XPGCD;
      FBHREC.XUMCD = VPAITM02.XUMCD;
      ;
      PA0QS-61-IO4640-SB(); /* GET DFBUY.VDNORD01*/
      ;
      if (SQLCA.VAGen_SQLCODE == 0)
        if (FBHREC.XDVCD != "02")
             /* RESET BUY FLAGS ONLY THE SALES ORDER IS FROM THE CURRENT*/
             /* BUY MONTH.*/
          if (FBHREC.FB8BUYDT == FB9REC.FB8BUYDT)
            PA0Q-62002();
          end
        end
      end
      ;
    end
    ;
    PA0QS-65-VPAITM-N1();
    ;
  end
  ;
  PA0QS-66-VPAITM-C1(); /* CLOSE DPRODA.VPAITM02*/
  ;
  ;
  ;
end // end PA0Q-62001

// CHECK AGAINS BUY CUTOFF DATE
Function PA0Q-62002()
   /* ------------------------------------------------------------*/
   /* SET BUY FLAGS TO 'N'*/
   /* ------------------------------------------------------------*/
  ;
  PA0QW00.PA0QW-BUY-FLAGS-UPDATED = "Y";
  ;
   /* UPDATE DFBUY.VDNORD01*/
  ;
  FBHREC.FBHDSAFL = "N"; /* FB-DIRSHP-ACPT-FL*/
  FBHREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FBHREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  PA0QS-67-IO4640-U(); /* UPDATE DFBUY.VDNORD01*/
  ;
   /* SELECT/UPDATE DFBUY.VFQTBS01*/
  ;
  set FBKREC empty;
  FBKREC.SY1STNBR = VPAITM02.SY1STNBR;
  FBKREC.SY2CLRID = VPAITM02.SY2CLRID;
  FBKREC.XDMCD = VPAITM02.XDMCD;
  FBKREC.FB8RCTYP = "B";
  FBKREC.FB8BUYDT = PAWREC.PAWBUYDT;
  ;
  PA0QS-68-IO4740-S(); /* SELECT DFBUY.VFQTBS01*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    FBKREC.FBKCAFL = "N"; /* FB-CALC-ACPT-FL*/
    FBKREC.FBKFSAFL = "N"; /* FB-FCST-ACPT-FL*/
    FBKREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
    FBKREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
    PA0QS-69-IO4740-U(); /* UPDATE DFBUY.VFQTBS01*/
  end
  ;
   /* SELECT/UPDATE DFBUY.VFSCTL01*/
  ;
  set FBMREC empty;
  FBMREC.PG1SC4CD = PA1REC.PG1SC4CD;
  ;
  PA0QS-70-IO4670-S(); /* SELECT DFBUY.VFSCTL01*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    ;
     /* BASED ON THE PRODUCT LINE CODE, DETERMINE WHICH FLAG TO UPDATE*/
    ;
    PA0Q-62003();
    ;
     /* 07/25/95: FBMREC FLAGS OCCUR 20 TIMES*/
    ;
    if (sysVar.arrayIndex > 0
     && sysVar.arrayIndex < 21)
      FBMREC.FBMCFFL = "N"; /* FB-CALC-FNSH-FL*/
      FBMREC.FBMFINFL = "N"; /* FB-DIRSHP-FNSH-FL*/
      FBMREC.FBMPAFL[sysVar.arrayIndex] = "N"; /* FB-PRODLN-ACPT-FL*/
      FBMREC.FBMDSLNF[sysVar.arrayIndex] = "N"; /* FB-DRSLN-FNSH-FL*/
      FBMREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
      FBMREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
      PA0QS-71-IO4670-U(); /* UPDATE DFBUY.VFSCTL01*/
    end
    ;
  end
  ;
end // end PA0Q-62002

// DETERMINE WHICH VFSCTL01 FLAG
Function PA0Q-62003()
   /* ------------------------------------------------------------*/
   /* BASED ON THE PRODUCT LINE CODE, DETERMINE WHICH FLAG TO*/
   /* SET.*/
   /* ------------------------------------------------------------*/
  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 20)
    if (FBHREC.XPLCD == 
    FBMREC.FBMPCD[sysVar.arrayIndex])
      return;
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end
end // end PA0Q-62003

// ADD FACTORY AND O/A COMMENTS
Function PA0Q-630()
  ;
   /* ADD FACTORY AND O/A COMMENT RECORDS*/
  ;
  PA0QW00.XX5 = 1;
  while (PA0QW00.XX5 <= 4)
    if (PA0QW01.FY1FCTYC[XX5] != " ")
      ;
      PA4REC.YESCD = "00"; /* STATUS CODE*/
      PA4REC.PC3POIDT = PA0QW01.PA0QW-PC3POIDT;
     /* MOVE PA0QW01.PC3POIDT(XX5) TO PA4REC.PC3POIDT;*/
      PA4REC.FY1FCTYC = PA0QW01.FY1FCTYC[XX5];
      PA4REC.PA4FCTQT = PA0QW01.PA4FCTQT[XX5];
      PA4REC.PA4FPCT = 0;
      PA4REC.PA4FCTDC = " ";
      PA4REC.PA4RQTSN = " ";
      PA4REC.PA4FAPVL = " ";
      PA4REC.PA4FPRT = " ";
      PA4REC.PA-NEW-BOOK-FL = "N";
      PA4REC.XXXINIT = " ";
      ;
      XX0XS01(); /* OBTAIN CURRENT TIME*/
      ;
      PA4REC.ZZZSDT = XX0XW01.XX0XWDAT;
      PA4REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
      PA4REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
      PA4REC.ZZZCHGCT = 0;
      ;
      PA0QS-29-IO4810-A(); /* ADD FACTORY RECORD*/
      ;
      set PA9REC empty; /* CLEAR OUT O/A COMMENT RECORD*/
      PA9REC.PA1OANBR = PA1REC.PA1OANBR;
      PA9REC.FY1FCTYC = PA0QW01.FY1FCTYC[XX5];
      PA9REC.YESCD = "00";
      PA9REC.PA9COMTY = "F";
      ;
         /* USERS REQUESTED THAT THIS MESSAGE BE PUT IN ALL THREE COMMENT*/
         /* LINES.*/
      ;
      if (PA0QW01.YESCD == "01")
          /* MOVE '00' TO PA0QW01.YESCD;*/
          /* IF PA0QW00.YESCD(XX5) EQ '15';*/
          /* OR PA0QW00.YESCD(XX5) EQ '20';*/
        PA9REC.PA9COM[1] = "***THIS IS A REVISION. PLEASE REVIEW, SIZE RUN MAY HAVE CHANGED***";
        PA9REC.PA9COM[2] = PA9REC.PA9COM[1];
        PA9REC.PA9COM[3] = PA9REC.PA9COM[1];
          /* END;*/
      end
      ;
      PA9REC.XXXUSER = COMMAREA.CAUSERID;
      PA9REC.ZZZSDT = XX0XW01.XX0XWDAT;
      PA9REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
      PA9REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
      PA9REC.ZZZCHGCT = 0;
      ;
      PA0QS-43-IO4820-A(); /* ADD COMMENT RECORD*/
      ;
    end
    ;
    PA0QW00.XX5 = PA0QW00.XX5 + 1;
    ;
  end
  ;
  ;
   /* ------------------ END OF PROCESS PA0Q-630 -----------------*/
end // end PA0Q-630

// ADD FROZEN ITEM RECORDS
Function PA0Q-640()
  ;
   /* ADD FROZEN ITEM RECORDS*/
  ;
   /* READ TEMP STORAGE*/
  ;
  PA0QW00.PA0QW-CURRENT-TS-PAGE = 1;
  while (PA0QW00.PA0QW-CURRENT-TS-PAGE <= PA0QW00.PA0QW-MAX-PAGES)
    ;
    PA0QS-32-TA0050-R();
    ;
    PA0QW00.XX5 = 1;
    while (PA0QW00.XX5 <= 11) /* PAGE LENGTH*/
      ;
      if (PA0QW04.PA0QW-SELECT[XX5] == "S" /* IF SELECTED*/
       && PA0QW04.PA0QW-RECORD-TYPE[XX5] == "PO") /* AND PO ITEM*/
        ;
            /* GET DPRODC.VPOITM01 RECORD*/
        ;
   /* NSC CHANGES TO MAINTAIN PLAN-REF-NBR -- GREDDY 05/05/00*/
   /* SET PC6REC EMPTY;*/
   /* SET PA0QW09 EMPTY;*/
   /* MOVE PA0QW04.PA0QW-TEMP-STORE-GRP(XX5) TO*/
   /* PA0QW09.PA0QW-TEMP-PO-GROUP;*/
   /* MOVE PA0QW09.PC3PONBR TO PC6REC.PC3PONBR;*/
   /* MOVE PA0QW09.PC6ITMNB TO PC6REC.PC6ITMNB;*/
   /* MOVE '02' TO PC6REC.XGPCD;*/
        set VPOITM05 empty;
        set PA0QW09 empty;
        PA0QW09.PA0QW-TEMP-PO-GROUP = PA0QW04.PA0QW-TEMP-STORE-GRP[XX5];
        VPOITM05.PC3PONBR = PA0QW09.PC3PONBR;
        VPOITM05.PC6ITMNB = PA0QW09.PC6ITMNB;
        VPOITM05.XGPCD = "02";
        ;
   /* PA0QS-34-IO3310-SA; /* GET DPRODC.VPOITM01*/
        PA0QS-34-VPOITM-SA(); /* GET DPRODC.VPOITM05*/
        ;
   /* MOVE PC6REC.PC6GROUP TO PAIREC.PAIPOGRP;*/
   /* MOVE PA1REC.PA1OANBR TO PAIREC.PA1OANBR;*/
   /* MOVE XX0XW01.XX0XWDAT TO PAIREC.ZZZCHGDT;*/
   /* MOVE XX0XW01.XX0XWTIM TO PAIREC.ZZZCHGTM;*/
   /* MOVE '  ' TO PAIREC.XFRCD;*/
   /* MOVE 'N' TO PAIREC.FB-LATE-BK-FL;*/
   /* MOVE 0 TO PAIREC.FB-LATE-BK-FL-MDT;*/
        ;
            /* ADD DPRODA.VFRZIT01 RECORD*/
        ;
        PA0QS-FRMT-VFRZIT2(); /* FORMAT VFRZIT02*/
        ;
        PA0QS-35-VFRZIT2-A(); /* ADD DPRODA.VFRZIT02*/
        ;
            /* GET DPRODC.VPOSIZ01 RECORD*/
        ;
        set PC7REC empty;
        PC7REC.PC3PONBR = PA0QW09.PC3PONBR;
        PC7REC.PC6ITMNB = PA0QW09.PC6ITMNB;
        PC7REC.XGPCD = "02";
        ;
        PA0QS-23-IO3640-S(); /* SELECT DPRODC.VPOSIZ01*/
        ;
            /* ADD DPRODA.VFRZSZ01 ROW*/
        ;
        set PASREC empty;
        PASREC.PA1OANBR = PA1REC.PA1OANBR;
        PASREC.PC7KEY = PC7REC.PC7KEY;
        PASREC.ZFC-CRCY-CD = PC7REC.ZFC-CRCY-CD;
        move PC7REC.PC7ORDEQ to PASREC.PC7ORDEQ[1] for all;
        PA0QW00.PA0QW-BALANCE-TO-SHIP-GRP = PA0QW09.PA0QW-BALANCE-TO-SHIP-GRP;
        move PA0QW00.PA0QW-BALANCE-TO-SHIP to PASREC.PASBALSP[1] for all;
        PASREC.ZZZSDT = PC7REC.ZZZSDT;
        PASREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
        PASREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
        ;
        PA0QS-36-IO4970-A();
        ;
      end
      ;
      PA0QW00.XX5 = PA0QW00.XX5 + 1;
      ;
    end
    ;
    PA0QW00.PA0QW-CURRENT-TS-PAGE = PA0QW00.PA0QW-CURRENT-TS-PAGE + 1;
    ;
  end
  ;
  ;
  ;
   /* ------------------ END OF PROCESS PA0Q-640 -----------------*/
end // end PA0Q-640

// ADD O/A WORK RECORDS
Function PA0Q-650()
  ;
   /* DELETE BOTTOM LINE RECORDS AND O/A ITEM RECORDS*/
  ;
  set PA5REC empty;
  PA5REC.PA1OANBR = PA1REC.PA1OANBR;
  ;
  PA0QS-37-IO5090-D();
  ;
  set VPAITM02 empty;
  VPAITM02.PA1OANBR = PA1REC.PA1OANBR;
  ;
  PA0QS-38-VPAITM-D();
  ;
   /* READ TEMP STORAGE*/
  ;
  PA0QW00.PA0QW-CURRENT-TS-PAGE = 1;
  while (PA0QW00.PA0QW-CURRENT-TS-PAGE <= PA0QW00.PA0QW-MAX-PAGES)
    ;
    PA0QS-32-TA0050-R();
    ;
    PA0QW00.XX5 = 1;
    while (PA0QW00.XX5 <= 11) /* PAGE LENGTH*/
      ;
      if (PA0QW04.PA0QW-SELECT[XX5] == "S") /* IF SELECTED*/
        ;
        if (PA0QW04.PA0QW-RECORD-TYPE[XX5] == "SO") /* AND SO LINE ITEM*/
          PA0Q-651(); /* FORMAT SO WORK RECORD*/
        else
          PA0Q-652(); /* FORMAT PO WORK RECORD;*/
        end
        ;
        PA0QS-39-VPAWRK-A(); /* ADD WORK RECORD*/
        ;
      end
      ;
      PA0QW00.XX5 = PA0QW00.XX5 + 1;
      ;
    end
    ;
    PA0QW00.PA0QW-CURRENT-TS-PAGE = PA0QW00.PA0QW-CURRENT-TS-PAGE + 1;
    ;
  end
  ;
   /* INSERT BULK QUANTITY WORK RECORDS*/
  ;
  if (PA0QW01.YETCD == "ST"
   || PA0QM001.YETCD == "ST")
    PA0Q-654(); /* FORMAT STOCK TRANSFER RECORD*/
  else
    PA0Q-653(); /* FORMAT BULK QUANTITY RECORD*/
  end
  ;
  ;
   /* ------------------ END OF PROCESS PA0Q-650 -----------------*/
end // end PA0Q-650

// TYPE 4: FORMAT SO WORK RECORD
Function PA0Q-651()
  ;
   /* FORMAT SO WORK RECORD*/
  ;
   /* NSC CHANGES TO MAINTAIN REL-PLN-NBR*/
   /* GREDDY -- 05/08/00*/
  ;
   /* SET VPAWRK02 EMPTY;*/
  set VPAWRK03 empty;
  set PA0QW02 empty;
  PA0QW02.PA0QW-TEMP-SO-GROUP = PA0QW04.PA0QW-TEMP-STORE-GRP[XX5];
   /* MOVE PA1REC.PA1OANBR TO VPAWRK02.PA1OANBR;*/
  VPAWRK03.PA1OANBR = PA1REC.PA1OANBR;
  ;
   /* DETERMINE THE PA-PROG-GRP*/
  ;
  PA0QW00.YSMXDV = PA0QW02.YSMXDV;
  PA0QW00.PC2CUXID = PA0QW02.PC2CUXID;
  ;
  if (PA0QW02.XDSCD == "1")
    PA0QW00.PA0QW-SEQ-IND = "3";
  else
    if (PA0QW02.XDSCD == "2")
      PA0QW00.PA0QW-SEQ-IND = "2";
    else
      PA0QW00.PA0QW-SEQ-IND = "1";
    end
  end
  ;
  VPAWRK02.PACGRPCD = PA0QW00.PA0QW-PA-PROC-GRP;
  ;
   /* MOVE '4' TO VPAWRK02.PACORDTY;*/
   /* MOVE ' ' TO VPAWRK02.PACSEVAL;*/
   /* MOVE PA0QW02.XDSCD TO VPAWRK02.XDSCD;*/
   /* MOVE PA0QW02.PACADDRS TO VPAWRK02.PACADDRS;*/
   /* MOVE ' ' TO VPAWRK02.FY1FCTYC;*/
   /* MOVE PA0QW02.PC3POIDT TO VPAWRK02.PC3POIDT;*/
   /* MOVE 0 TO VPAWRK02.PC3PONBR;*/
   /* MOVE 0 TO VPAWRK02.PC6ITMNB;*/
   /* MOVE 0 TO VPAWRK02.PACFPONO;*/
   /* MOVE 0 TO VPAWRK02.PACFPCIT;*/
   /* MOVE 0 TO VPAWRK02.PC6ETSDT;*/
   /* MOVE 0 TO VPAWRK02.PC6RTADT;*/
   /* MOVE ' ' TO VPAWRK02.YMTCD;*/
   /* MOVE PA0QW02.PC2CUXID TO VPAWRK02.PC2CUXID;*/
   /* MOVE ' ' TO VPAWRK02.PC2INSEG;   /* MKS - CHECK ON THIS*/
   /* MOVE PA0QW02.XWHCD TO VPAWRK02.XWHCD;*/
   /* MOVE PA0QW02.OP1PARTN TO VPAWRK02.OP1PARTN;*/
   /* MOVE PA0QW02.OP1CUOID TO VPAWRK02.OP1CUOID;*/
   /* MOVE PA0QW02.OP1NORID TO VPAWRK02.OP1NORID;*/
   /* MOVE 0 TO VPAWRK02.PACFBQTY;*/
   /* MOVE ' ' TO VPAWRK02.XFRCD;*/
   /* MOVE 'N' TO VPAWRK02.FB-LATE-BK-FL;*/
   /* MOVE 0 TO VPAWRK02.FB-LATE-BK-FL-MDT;*/
   /* MOVEA PA0QW02.PA0QW-SO-ORDER-QTY TO VPAWRK02.PACWRKQT;*/
   /* MOVEA 0 TO VPAWRK02.PACADJQT;*/
   /* MOVEA PA0QW02.PA0QW-SO-ADJ-QTY TO VPAWRK02.PACFLADJ;*/
   /* MOVE XX0XW01.XX0XWDAT TO VPAWRK02.ZZZSDT;*/
   /* MOVE 0 TO VPAWRK02.ZZZCHGDT;*/
   /* MOVE XX0XW01.XX0XWTIM TO VPAWRK02.ZZZSTM;*/
   /* MOVE 0 TO VPAWRK02.ZZZCHGTM;*/
   /* MOVE 0 TO VPAWRK02.ZZZCHGCT;*/
  VPAWRK03.PACORDTY = "4";
  VPAWRK03.PACSEVAL = " ";
  VPAWRK03.XDSCD = PA0QW02.XDSCD;
  VPAWRK03.PACADDRS = PA0QW02.PACADDRS;
  VPAWRK03.FY1FCTYC = " ";
  VPAWRK03.PC3POIDT = PA0QW02.PC3POIDT;
  VPAWRK03.PC3PONBR = 0;
  VPAWRK03.PC6ITMNB = 0;
  VPAWRK03.PACFPONO = 0;
  VPAWRK03.PACFPCIT = 0;
  VPAWRK03.PC6ETSDT = 0;
  VPAWRK03.PC6RTADT = 0;
  VPAWRK03.YMTCD = " ";
  VPAWRK03.PC2CUXID = PA0QW02.PC2CUXID;
  VPAWRK03.PC2INSEG = " "; /* MKS - CHECK ON THIS*/
  VPAWRK03.XWHCD = PA0QW02.XWHCD;
  VPAWRK03.OP1PARTN = PA0QW02.OP1PARTN;
  VPAWRK03.OP1CUOID = PA0QW02.OP1CUOID;
  VPAWRK03.OP1NORID = PA0QW02.OP1NORID;
  VPAWRK03.PACFBQTY = 0;
  VPAWRK03.XFRCD = " ";
  VPAWRK03.FB-LATE-BK-FL = "N";
  VPAWRK03.FB-LATE-BK-FL-MDT = 0;
  move PA0QW02.PA0QW-SO-ORDER-QTY to VPAWRK03.PACWRKQT[1] for all;
  move 0 to VPAWRK03.PACADJQT[1] for all;
  move PA0QW02.PA0QW-SO-ADJ-QTY to VPAWRK03.PACFLADJ[1] for all;
  VPAWRK03.ZZZSDT = XX0XW01.XX0XWDAT;
  VPAWRK03.ZZZCHGDT = 0;
  VPAWRK03.ZZZSTM = XX0XW01.XX0XWTIM;
  VPAWRK03.ZZZCHGTM = 0;
  VPAWRK03.ZZZCHGCT = 0;
  ;
  ;
   /* ------------------ END OF PROCESS PA0Q-651 -----------------*/
end // end PA0Q-651

// TYPE 6: FORMAT PO WORK RECORD
Function PA0Q-652()
  ;
   /* FORMAT PO WORK RECORD*/
  ;
   /* NSC CHANGES TO MAINTAIN REL-PLN-NBR*/
   /* VPAWRK02 AND PC6REC ARE REPLACED WITH VPAWRK03 AND*/
   /* VPOITM05 RESPECTIVELY*/
   /* GREDDY -- 05/08/00*/
  ;
   /* SET VPAWRK02 EMPTY;*/
  set VPAWRK03 empty;
  set PA0QW09 empty;
  PA0QW09.PA0QW-TEMP-PO-GROUP = PA0QW04.PA0QW-TEMP-STORE-GRP[XX5];
   /* MOVE PA1REC.PA1OANBR TO VPAWRK02.PA1OANBR;*/
  VPAWRK03.PA1OANBR = PA1REC.PA1OANBR;
  ;
   /* DETERMINE THE PA-PROG-GRP*/
  ;
  PA0QW00.YSMXDV = PA0QW09.YSMXDV;
  ;
  if (PA0QW09.PC2CUXID != " ")
    PA0QW00.PC2CUXID = PA0QW09.PC2CUXID;
  else
    PA0QW00.PC2CUXID = "ZZZZZ";
  end
  ;
  PA0QW00.PA0QW-SEQ-IND = "4";
  VPAWRK02.PACGRPCD = PA0QW00.PA0QW-PA-PROC-GRP;
  ;
   /* MOVE '6' TO VPAWRK02.PACORDTY;*/
   /* MOVE ' ' TO VPAWRK02.PACSEVAL;*/
   /* MOVE PA0QW09.XDSCD TO VPAWRK02.XDSCD;*/
   /* MOVE PA0QW09.PACADDRS TO VPAWRK02.PACADDRS;*/
   /* MOVE PA0QW09.FY1FCTYC TO VPAWRK02.FY1FCTYC;*/
   /* MOVE PA0QW09.PC3POIDT TO VPAWRK02.PC3POIDT;*/
   /* MOVE PA0QW09.PC3PONBR TO VPAWRK02.PC3PONBR;*/
   /* MOVE PA0QW09.PC6ITMNB TO VPAWRK02.PC6ITMNB;*/
   /* MOVE 0 TO VPAWRK02.PACFPONO;*/
   /* MOVE 0 TO VPAWRK02.PACFPCIT;*/
   /* MOVE PA0QW09.PC6ETSDT TO VPAWRK02.PC6ETSDT;*/
   /* MOVE PA0QW09.PC6RTADT TO VPAWRK02.PC6RTADT;*/
   /* MOVE PA0QW09.YMTCD TO VPAWRK02.YMTCD;*/
   /* MOVE PA0QW09.PC2CUXID TO VPAWRK02.PC2CUXID;*/
   /* MOVE PA0QW09.PC2INSEG TO VPAWRK02.PC2INSEG;*/
   /* MOVE PA0QW09.XWHCD TO VPAWRK02.XWHCD;*/
  VPAWRK03.PACGRPCD = PA0QW00.PA0QW-PA-PROC-GRP;
  ;
  VPAWRK03.PACORDTY = "6";
  VPAWRK03.PACSEVAL = " ";
  VPAWRK03.XDSCD = PA0QW09.XDSCD;
  VPAWRK03.PACADDRS = PA0QW09.PACADDRS;
  VPAWRK03.FY1FCTYC = PA0QW09.FY1FCTYC;
  VPAWRK03.PC3POIDT = PA0QW09.PC3POIDT;
  VPAWRK03.PC3PONBR = PA0QW09.PC3PONBR;
  VPAWRK03.PC6ITMNB = PA0QW09.PC6ITMNB;
  VPAWRK03.PACFPONO = 0;
  VPAWRK03.PACFPCIT = 0;
  VPAWRK03.PC6ETSDT = PA0QW09.PC6ETSDT;
  VPAWRK03.PC6RTADT = PA0QW09.PC6RTADT;
  VPAWRK03.YMTCD = PA0QW09.YMTCD;
  VPAWRK03.PC2CUXID = PA0QW09.PC2CUXID;
  VPAWRK03.PC2INSEG = PA0QW09.PC2INSEG;
  VPAWRK03.XWHCD = PA0QW09.XWHCD;
  ;
   /* GET OP1PARTN - IF OP-CUST-ORD-ID = 0, THEN OP-ORD-PART-CHAR = ' '*/
  ;
  if (PA0QW09.OP1CUOID == 0)
   /* MOVE ' ' TO VPAWRK02.OP1PARTN;*/
    VPAWRK03.OP1PARTN = " ";
  else
    PA0QW00.PA0QW-OP1CUOID = PA0QW09.OP1CUOID;
   /* MOVE PA0QW00.OP1PARTN TO VPAWRK02.OP1PARTN;*/
    VPAWRK03.OP1PARTN = PA0QW00.OP1PARTN;
  end
  ;
   /* MOVE PA0QW09.OP1CUOID TO VPAWRK02.OP1CUOID;*/
   /* MOVE PA0QW09.OP1NORID TO VPAWRK02.OP1NORID;*/
   /* MOVE 0 TO VPAWRK02.PACFBQTY;*/
   /* MOVE ' ' TO VPAWRK02.XFRCD;*/
  VPAWRK03.OP1CUOID = PA0QW09.OP1CUOID;
  VPAWRK03.OP1NORID = PA0QW09.OP1NORID;
  VPAWRK03.PACFBQTY = 0;
  VPAWRK03.XFRCD = " ";
  ;
   /* IN ORDER TO DETERMINE THE LATE BOOKINGS FLAG INFORMATION, THE*/
   /* PO ITEM RECORD MUST BE READ*/
  ;
   /* SET PC6REC EMPTY;*/
   /* MOVE '02' TO PC6REC.XGPCD;*/
   /* MOVE PA0QW09.PC3PONBR TO PC6REC.PC3PONBR;*/
   /* MOVE PA0QW09.PC6ITMNB TO PC6REC.PC6ITMNB;*/
  set VPOITM05 empty;
  VPOITM05.XGPCD = "02";
  VPOITM05.PC3PONBR = PA0QW09.PC3PONBR;
  VPOITM05.PC6ITMNB = PA0QW09.PC6ITMNB;
  ;
   /* PA0QS-34-IO3310-SA;              /* GET DPRODC.VPOITM01*/
  PA0QS-34-VPOITM-SA(); /* GET DPRODC.VPOITM05*/
  ;
   /* MOVE PC6REC.FB-LATE-BK-FL TO VPAWRK02.FB-LATE-BK-FL;*/
   /* MOVE PC6REC.FB-LATE-BK-FL-MDT TO VPAWRK02.FB-LATE-BK-FL-MDT;*/
  VPAWRK03.FB-LATE-BK-FL = VPOITM05.FB-LATE-BK-FL;
  VPAWRK03.FB-LATE-BK-FL-MDT = VPOITM05.FB-LATE-BK-FL-MDT;
  VPAWRK03.PC-REL-PLN-REF-NBR = VPOITM05.PC-REL-PLN-REF-NBR;
   /* IF VPAWRK02.FB-LATE-BK-FL EQ 'Y';/**/
  if (VPAWRK03.FB-LATE-BK-FL == "Y") /**/
    PA1REC.FB-LATE-BK-FL = "Y"; /* set the header to late book*/
  end /* even if only one item is late*/
  ;
  PA0QW00.PA0QW-BALANCE-TO-SHIP-GRP = PA0QW09.PA0QW-BALANCE-TO-SHIP-GRP;
   /* MOVEA PA0QW00.PA0QW-BALANCE-TO-SHIP TO VPAWRK02.PACADJQT;*/
  move PA0QW00.PA0QW-BALANCE-TO-SHIP to VPAWRK03.PACADJQT[1] for all;
  PA0QW00.PA0QW-PO-ORDER-QTY-GRP = PA0QW09.PA0QW-PO-ORDER-QTY-GRP;
   /* MOVEA PA0QW00.PA0QW-PO-ORDER-QTY TO VPAWRK02.PACWRKQT;*/
   /* MOVEA 0 TO VPAWRK02.PACFLADJ;*/
   /* MOVE XX0XW01.XX0XWDAT TO VPAWRK02.ZZZSDT;*/
   /* MOVE 0 TO VPAWRK02.ZZZCHGDT;*/
   /* MOVE XX0XW01.XX0XWTIM TO VPAWRK02.ZZZSTM;*/
   /* MOVE 0 TO VPAWRK02.ZZZCHGTM;*/
   /* MOVE 0 TO VPAWRK02.ZZZCHGCT;*/
   /*  */
   /* MOVE ' ' TO VPAWRK02.XCTCD;*/
   /* MOVE ' ' TO VPAWRK02.PC-XCT-ORIG-CD;*/
  move PA0QW00.PA0QW-PO-ORDER-QTY to VPAWRK03.PACWRKQT[1] for all;
  move 0 to VPAWRK03.PACFLADJ[1] for all;
  VPAWRK03.ZZZSDT = XX0XW01.XX0XWDAT;
  VPAWRK03.ZZZCHGDT = 0;
  VPAWRK03.ZZZSTM = XX0XW01.XX0XWTIM;
  VPAWRK03.ZZZCHGTM = 0;
  VPAWRK03.ZZZCHGCT = 0;
  ;
  VPAWRK03.XCTCD = " ";
  VPAWRK03.PC-XCT-ORIG-CD = " ";
  ;
  if (PA0QW01.YETCD == "ST"
   || PA0QM001.YETCD == "ST")
    set PC3REC empty;
    PC3REC.XGPCD = "02";
    PC3REC.PC3PONBR = PA0QW09.PC3PONBR;
    ;
    PA0QS-75-IO3270-S(); /* GET DPRODC.VPOHDR01*/
    ;
   /* MOVE PC3REC.XCTCD TO VPAWRK02.XCTCD;*/
   /* MOVE PC3REC.PC-XCT-ORIG-CD TO VPAWRK02.PC-XCT-ORIG-CD;*/
    VPAWRK03.XCTCD = PC3REC.XCTCD;
    VPAWRK03.PC-XCT-ORIG-CD = PC3REC.PC-XCT-ORIG-CD;
    ;
  end
  ;
   /* ------------------ END OF PROCESS PA0Q-652 -----------------*/
end // end PA0Q-652

// TYPE 1: FORMAT BULK QTY RECORD
Function PA0Q-653()
  ;
   /* FORMAT BULK QUANTITY WORK RECORD*/
  ;
   /* This PROC was used to access VPAWRK02. Per NSC changes*/
   /* it is now modified to access VPAWRK03. GREDDY -- 05/08/00*/
  ;
  PA0QW00.XX7 = 1;
  while (PA0QW00.XX7 <= 4)
    ;
    if (PA0QM001.FY1FCTYC[XX7] != " ")
      ;
      set VPAWRK03 empty;
      VPAWRK03.FY1FCTYC = PA0QM001.FY1FCTYC[XX7];
      VPAWRK03.PACFBQTY = PA0QM001.PA4FCTQT[XX7];
      VPAWRK03.PA1OANBR = PA1REC.PA1OANBR;
      VPAWRK03.PACORDTY = "1";
      VPAWRK03.PACFPONO = 0;
      VPAWRK03.PACFPCIT = 0;
      VPAWRK03.XFRCD = " ";
      VPAWRK03.FB-LATE-BK-FL = "N";
      VPAWRK03.FB-LATE-BK-FL-MDT = 0;
      VPAWRK03.ZZZSDT = XX0XW01.XX0XWDAT;
      VPAWRK03.ZZZSTM = XX0XW01.XX0XWTIM;
      ;
      PA0QS-39-VPAWRK-A(); /* ADD BULK QTY WORK RECORD*/
      ;
    end
    ;
    PA0QW00.XX7 = PA0QW00.XX7 + 1;
    ;
  end
  ;
  ;
  ;
   /* ------------------ END OF PROCESS PA0Q-653 -----------------*/
end // end PA0Q-653

// TYPE 5: Prep ST Work Record
Function PA0Q-654()
  ;
   /* FORMAT STOCK TRANSFER WORK RECORD*/
  ;
   /* This Proc now accesses VPAWRK03 and was earlier accessing*/
   /* VPAWRK02. Changes done are part of NSC -- GREDDY 05/08/00*/
  ;
  set VPAWRK03 empty;
  VPAWRK03.FY1FCTYC = PA0QM001.FY1FCTYC[1];
  VPAWRK03.PACFBQTY = PA0QM001.PA1RQQTY;
  VPAWRK03.PA1OANBR = PA1REC.PA1OANBR;
  VPAWRK03.PACORDTY = "5";
  VPAWRK03.PACFPONO = 0;
  VPAWRK03.PACFPCIT = 0;
  VPAWRK03.XFRCD = " ";
  VPAWRK03.FB-LATE-BK-FL = "N";
  VPAWRK03.FB-LATE-BK-FL-MDT = 0;
  VPAWRK03.ZZZSDT = XX0XW01.XX0XWDAT;
  VPAWRK03.ZZZSTM = XX0XW01.XX0XWTIM;
  ;
  PA0QS-39-VPAWRK-A(); /* ADD BULK QTY WORK RECORD*/
  ;
  ;
  ;
  ;
   /* ------------------ END OF PROCESS PA0Q-654 -----------------*/
end // end PA0Q-654

// ADD DPRODA.VPACUS01 ROWS
Function PA0Q-660()
  ;
   /* READ TEMP STORAGE*/
  ;
  PA0QW00.PA0QW-CURRENT-TS-PAGE = 1;
  while (PA0QW00.PA0QW-CURRENT-TS-PAGE <= PA0QW00.PA0QW-MAX-PAGES)
    ;
    PA0QS-32-TA0050-R();
    ;
    PA0QW00.XX5 = 1;
    while (PA0QW00.XX5 <= 11) /* PAGE LENGTH*/
      ;
      if (PA0QW04.PA0QW-SELECT[XX5] == "S") /* IF SELECTED*/
        ;
        if (PA0QW04.PA0QW-RECORD-TYPE[XX5] == "PO")
          PA0QW09.PA0QW-TEMP-PO-GROUP = PA0QW04.PA0QW-TEMP-STORE-GRP[XX5];
        end
        ;
        if (PA0QW04.PA0QW-RECORD-TYPE[XX5] == "SO"  /* AN SO LINE ITEM*/
         || (PA0QW04.PA0QW-RECORD-TYPE[XX5] == "PO" /* A PO LINE ITEM*/
         && PA0QW09.PC2CUXID != " "))               /* VERIFY CUST XREF*/
          PA0Q-661(); /* FORMAT SO WORK RECORD*/
          ;
          if (SQLCA.VAGen_SQLCODE == 100)
            PA0QS-53-IO5140-A(); /* ADD DPRODA.VPACUS01*/
          end
          ;
        end
        ;
      end
      ;
      PA0QW00.XX5 = PA0QW00.XX5 + 1;
      ;
    end
    ;
    PA0QW00.PA0QW-CURRENT-TS-PAGE = PA0QW00.PA0QW-CURRENT-TS-PAGE + 1;
    ;
  end
  ;
  ;
   /* ------------------ END OF PROCESS PA0Q-660 -----------------*/
end // end PA0Q-660

// CREATE VPACUS01 FROM SO INFO
Function PA0Q-661()
  ;
   /* READ DPRODA.VPACUS01 RECORD*/
  ;
  set PAGREC empty;
  set PA0QW02 empty;
  ;
  if (PA0QW04.PA0QW-RECORD-TYPE[XX5] == "SO")
    PA0QW02.PA0QW-TEMP-SO-GROUP = PA0QW04.PA0QW-TEMP-STORE-GRP[XX5];
  end
  ;
  if (PA0QW04.PA0QW-RECORD-TYPE[XX5] == "PO")
    PA0QW09.PA0QW-TEMP-PO-GROUP = PA0QW04.PA0QW-TEMP-STORE-GRP[XX5];
  end
  ;
  PAGREC.PA1OANBR = PA1REC.PA1OANBR;
  ;
  if (PA0QW00.PA0QW-PROCESS-TYPE == "C" /* PROCESSING BY CUSTOMER*/
   || PA0QM001.KUCCOID != 0             
   || PA0QM001.KUMSTRID != 0            
   || PA0QM001.XNXCD != 0)             
    PAGREC.KUCCOID = PA0QM001.KUCCOID;
    PAGREC.KUMSTRID = PA0QM001.KUMSTRID;
    PAGREC.XNXCD = PA0QM001.XNXCD;
  else
    set PC2REC empty;
    PC2REC.XGPCD = "02";
    ;
    if (PA0QW04.PA0QW-RECORD-TYPE[XX5] == "SO")
      PC2REC.PC2CUXID = PA0QW02.PC2CUXID;
    end
    if (PA0QW04.PA0QW-RECORD-TYPE[XX5] == "PO")
      PC2REC.PC2CUXID = PA0QW09.PC2CUXID;
    end
    ;
    PA0QS-06-IO3340-S(); /* FIND CUSTOMER NUMBER*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      PAGREC.KUCCOID = PC2REC.KUCCOID;
      PAGREC.KUMSTRID = PC2REC.KUMSTRID;
      PAGREC.XNXCD = PC2REC.XNXCD;
    end
    ;
      /* UPDATE THE HEADER RECORD WITH THE FIRST CUSTOMER SELECTED*/
    ;
    if (PA0QW00.PA0QW-CUST-UPDATED == "N")
      ;
      PA0Q-66101(); /* READ/UPDATE DPRODA.VPAHDR*/
      ;
    end
    ;
  end
  ;
   /* SAVE CUSTOMER NUMBER IN WORKING STORAGE*/
  ;
  PA0QW00.KUCCOID = PAGREC.KUCCOID;
  PA0QW00.KUMSTRID = PAGREC.KUMSTRID;
  PA0QW00.XNXCD = PAGREC.XNXCD;
  ;
  PAGREC.FY1FCTYC = " ";
  ;
  if (PA0QW04.PA0QW-RECORD-TYPE[XX5] == "SO")
    PAGREC.OP1CUNDT = PA0QW02.OP1CUNDT;
  end
  if (PA0QW04.PA0QW-RECORD-TYPE[XX5] == "PO")
    PAGREC.OP1CUNDT = PA0QW09.PC6RTADT;
  end
  ;
  ;
  PA0QS-52-IO5140-S(); /* SELECT UNIQUE VPACUS01 ROW*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ROW FOUND, SKIP ADD*/
    return;
  end
  ;
   /* ADD DPRODA.VPACUS01 RECORD*/
  ;
  set PAGREC empty;
  PAGREC.PA1OANBR = PA1REC.PA1OANBR;
  PAGREC.KUCCOID = PA0QW00.KUCCOID;
  PAGREC.KUMSTRID = PA0QW00.KUMSTRID;
  PAGREC.XNXCD = PA0QW00.XNXCD;
  PAGREC.FY1FCTYC = " ";
  ;
  if (PA0QW04.PA0QW-RECORD-TYPE[XX5] == "SO")
    PAGREC.SY1STNBR = PA0QW02.SY1STNBR;
    PAGREC.SY2CLRID = PA0QW02.SY2CLRID;
    PAGREC.XDMCD = PA0QW02.XDMCD;
    PAGREC.OP1CUNDT = PA0QW02.OP1CUNDT;
  end
  if (PA0QW04.PA0QW-RECORD-TYPE[XX5] == "PO")
    PAGREC.SY1STNBR = PA0QW01.SY1STNBR;
    PAGREC.SY2CLRID = PA0QW01.SY2CLRID;
    PAGREC.XDMCD = PA0QW01.XDMCD;
    PAGREC.OP1CUNDT = PA0QW09.PC6RTADT;
  end
  ;
  PAGREC.PA1BUYMO = PA0QW00.PA0QW-PA-ORD-ADJ-BUY-MO;
  PAGREC.PAGEREST = 0;
  PAGREC.PC6TORDE = 0;
  PAGREC.PAGCUQTY = 0;
  PAGREC.PAGCUIND = "2";
  PAGREC.XXXPGUID = COMMAREA.CAUSERID;
  PAGREC.ZZZSDT = XX0XW01.XX0XWDAT;
  PAGREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  PAGREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  PAGREC.ZZZCHGCT = 0;
  ;
  ;
   /* ------------------ END OF PROCESS PA0Q-661 -----------------*/
end // end PA0Q-661

// READ/UPDATE CUST ON HEADER
Function PA0Q-66101()
  ;
   /* UPDATE THE HEADER RECORD WITH THE FIRST CUSTOMER SELECTED*/
  ;
  PA0QW00.PA0QW-CUST-UPDATED = "Y";
  ;
   /* READ THE O/A HEADER RECORD FIRST TO MAKE SURE THAT ANY*/
   /* EXISTING CUSTOMER IS NOT OVERRIDEN.*/
  ;
  set PA1REC empty;
  PA1REC.PA1OANBR = PA0QW00.PA1OANBR;
  ;
  PA0QS-01-IO4830-S();
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    return;
  end
  ;
  if (PA1REC.KUCCOID != 0
   || PA1REC.KUMSTRID != 0
   || PA1REC.XNXCD != 0)
    return;
  end
  ;
   /* UPDATE CUSTOMER ON HEADER RECORD*/
  ;
  PA1REC.KUCCOID = PC2REC.KUCCOID;
  PA1REC.KUMSTRID = PC2REC.KUMSTRID;
  PA1REC.XNXCD = PC2REC.XNXCD;
  ;
  PA0QS-44-IO4830-U();
  ;
  ;
   /* ------------------ END OF PROCESS PA0Q-66101 ---------------*/
end // end PA0Q-66101

// FAST PATH PF-KEY PROCESSING
Function PA0QS-00-FAST-PATH()
   /* ------------------------------------------------------------*/
   /* This procedure will determine what the catoap will be*/
   /* based on the pf-key pressed.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf5) /* TRANSFER TO PA0A*/
    COMMAREA.CATOAP = "PA0A";
  end
  ;
  if (converseVar.eventKey not pf12)
    PAWREC.PAWOANBR = PA0QW00.PA1OANBR;
  end
  ;
  if (converseVar.eventKey is pf12 /* RESET SCREEN*/
   || converseVar.eventKey is pf18)
    COMMAREA.CATOAP = "PA0Q";
  end
  ;
  if (converseVar.eventKey is pf9
   || converseVar.eventKey is pf13) /* OA ITEM SELECT*/
    COMMAREA.CATOAP = "PA0P";
  end
  ;
  if (converseVar.eventKey is pf14) /* HISTORICAL COMMENTS*/
    COMMAREA.CATOAP = "PA0N";
  end
  ;
  if (converseVar.eventKey is pf17) /* SALES ORDER ENTRY*/
    COMMAREA.CATOAP = "PA0U";
  end
  ;
  if (converseVar.eventKey is pf19) /**/
    COMMAREA.CATOAP = "PA0Z";
  end
  ;
  if (converseVar.eventKey is pf19) /* O/A Status maint.*/
    COMMAREA.CATOAP = "PA0Z";
  end
  ;
  if (converseVar.eventKey is pf21) /* Header list*/
    COMMAREA.CATOAP = "PA0E";
  end
  ;
   /* Setup the leveling for subsequent applications*/
  ;
  if (PAWREC.CAFROMAP[1] == " ")
    PAWREC.CAFROMAP[1] = COMMAREA.CACURRAP;
  else
    if (PAWREC.CAFROMAP[2] == " ")
      PAWREC.CAFROMAP[2] = COMMAREA.CACURRAP;
    else
      if (PAWREC.CAFROMAP[3] == " ")
        PAWREC.CAFROMAP[3] = COMMAREA.CACURRAP;
      else
        if (PAWREC.CAFROMAP[4] == " ")
          PAWREC.CAFROMAP[4] = COMMAREA.CACURRAP;
        else
          PAWREC.CAFROMAP[5] = COMMAREA.CACURRAP;
        end
      end
    end
  end
  ;
  ;
end // end PA0QS-00-FAST-PATH

// SELECT 'S' DPRODA.VPAHDR01
Function PA0QS-01-IO4830-S()
   /* ------------------------------------------------------------*/
   /* Select 's' dproda.vpahdr01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4830" ("S ", SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S01"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODA.VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0QS-01-IO4830-S

// SELECT SET (S1) PA4REC
Function PA0QS-02-IO4810-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from dproda.vfypa001.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4810" ("S1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S02"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET DPRODA.VFYPA001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0QS02"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* **                                                        ***/
   /* ********************** End of PA0QS-02-IO4810-S1 ************/
   /* **                                                        ***/
end // end PA0QS-02-IO4810-S1

// FETCH (N1) PA4REC
Function PA0QS-03-IO4810-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4810" ("N1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
     /* MOVE 'Y' TO PA0QW00.PA0WWSW1;        /* Set end of data switch*/
      return; /* Return to previous process*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S03"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0QS03"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* ===> Table view name*/
  ;
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* **                                                        ***/
   /* ************ END OF PA0QS-03-IO4810-N1 **********************/
   /* **                                                        ***/
end // end PA0QS-03-IO4810-N1

// CLOSE (C1) PA4REC
Function PA0QS-04-IO4810-C1()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4810" ("C1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S04"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0QS04"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* **                                                        ***/
   /* ********************** End of PA0QS-04-IO4810-C1 ************/
   /* **                                                        ***/
end // end PA0QS-04-IO4810-C1

// SELECT ALTERNATE PC2REC
Function PA0QS-05-IO3340-SA()
  ;
   /* ------------------------------------------------------------*/
   /* Select alternate unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3340" ("SA", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S05"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC2REC.PC2KEY; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0QS-05-IO3340-SA

// SELECT PC2REC
Function PA0QS-06-IO3340-S()
  ;
   /* ------------------------------------------------------------*/
   /* Select unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3340" ("S ", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S06"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC2REC.PC2KEY; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0QS-06-IO3340-S

// SELECT UNIQUE PG2REC
Function PA0QS-07-IO3120-S()
  ;
   /* ------------------------------------------------------------*/
   /* Select unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S07"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0QS-07-IO3120-S

// SELECT UNIQUE FY1REC
Function PA0QS-08-IO2810-S()
  ;
   /* ------------------------------------------------------------*/
   /* Select unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S08"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1KEY; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0QS-08-IO2810-S

// SELECT SET DCORP.VSUMCD01
Function PA0QS-09-IO2640-S1()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used*/
   /* ------------------------------------------------------------*/
  ;
  set YSMREC empty; /* Initialize record*/
  ;
   /* ------------------------------------------------------------*/
   /* Format the key values for select set*/
   /* ------------------------------------------------------------*/
  ;
  YSMREC.YSMTBLPF = "XDV";
  YSMREC.YSMSYSPF = "FF";
  YSMREC.YSMSUMID = 1;
  YSMREC.YSMSUMCD = "**";
  YSMREC.YSMSRCVL = COMMAREA.XDVCD;
  ;
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2640" ("S1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S09"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCORP.VSUMCD01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS09"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-09-IO2640-S1

// FETCH DCORP.VSUMCD01 ROW
Function PA0QS-10-IO2640-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from select for Vsumcd01.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2640" ("N1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S10"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT SUM DIV ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS10"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-10-IO2640-N1

// CLOSE DCORP.VSUMCD01
Function PA0QS-11-IO2640-C1()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2640" ("C1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  PAWREC.XXXMODID = "S11"; /* Module identification*/
  converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE VSUMCD01 TABLE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS11"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP    "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-11-IO2640-C1

// DPRODA.VSOPOX01 BY STYLE
Function PA0QS-12-IO6020-S()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* GET THE CORRECT TABLE: DPRODA.VSOPOX01 OR DEURO.VESOPO01*/
   /* ------------------------------------------------------------*/
  ;
   /* IF EUROPEAN O/A, GET EUROPEAN SALES ORDER INFORMATION*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    try
      call "VESOPO01" (PA0QW05, SQLCA, VSOPOX01) {isNoRefresh = yes, isExternal = yes};
    end
  else
    try
      call "IO6020" (PA0QW05, SQLCA, VSOPOX01) {isNoRefresh = yes, isExternal = yes};
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S12"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DPRODA.VSOPOX01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS12"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOPOX01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOPOX01.VSOPOX01-GROUP; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-12-IO6020-S

// NEXT DPRODA.VSOPOX01 BY STYLE
Function PA0QS-13-IO6020-N()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from select for VSOPOX01.*/
   /* ------------------------------------------------------------*/
  ;
   /* IF EUROPEAN O/A, GET DEURO.VESOPO01*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    try
      call "VESOPO01" (PA0QW05, SQLCA, VSOPOX01) {isNoRefresh = yes, isExternal = yes};
    end
  else
    try
      call "IO6020" (PA0QW05, SQLCA, VSOPOX01) {isNoRefresh = yes, isExternal = yes};
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100)
      PA0QW00.PA0QW-END-OF-VSOPOX01 = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S13"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT VSOPOX01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS13"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOPOX01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSOPOX01.VSOPOX01-GROUP; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-13-IO6020-N

// CLOSE DPRODA.VSOPOX01 (STYLE)
Function PA0QS-14-IO6020-C()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/
  ;
   /* IF EUROPEAN O/A, GET DEURO.VESOPO01*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    try
      call "VESOPO01" (PA0QW05, SQLCA, VSOPOX01) {isNoRefresh = yes, isExternal = yes};
    end
  else
    try
      call "IO6020" (PA0QW05, SQLCA, VSOPOX01) {isNoRefresh = yes, isExternal = yes};
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S14"; /* Module identification*/
  converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE VSOPOX01 TABLE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS14"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSOPOX01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-14-IO6020-C

// FIND SO SIZE QTY INFO
Function PA0QS-15-SO-SIZE()
   /* ------------------------------------------------------------*/
   /* FIND SO SIZE QUANTITY INFORMATION.*/
   /* ------------------------------------------------------------*/
  ;
  set VOSIZE01 empty;
  ;
  VOSIZE01.OP1PARTN = VSOPOX01.OP1PARTN;
  VOSIZE01.OP1CUOID = VSOPOX01.OP1CUOID;
  VOSIZE01.OP1NORID = VSOPOX01.OP1NORID;
  VOSIZE01.OP2LNINB = VSOPOX01.OP2LNINB;
  ;
  PA0QS-16-IO6030-S1(); /* SET UP CURSOR FOR SO SIZE TABLE*/
  ;
  PA0QS-17-IO6030-N1(); /* READ FIRST DORDER.VOSIZE01*/
  ;
   /* WE GO AFTER THE VOSIZE01 RECORD WITH THE ORDER PART CHAR, CUST*/
   /* ORDER ID, NIKE ORDER ID, AND THE LINE ITEM NUMBER.  IF THE SO SIZE*/
   /* RECORD IS NOT FOUND, THE SALES ORDER MAY HAVE SPLIT.  FOR EXAMPLE,*/
   /* ASSUME THAT THE SALES ORDER DATABASE CONTAINS THE FOLLOWING SALES*/
   /* ORDER.*/
   /*  */
   /* ORDER PART CHAR '8'*/
   /* CUST ORDER ID   6536718*/
   /* NIKE ORDER ID   2*/
   /* LINE ITEM       2*/
   /*  */
   /* LATER, THE CUSTOMER NEED DATE IS CHANGED.  THE SALES ORDER SYSTEM*/
   /* CREATES A NEW NIKE ORDER ID.  THE OLD ENTRY IS DELETED.*/
   /*  */
   /* ORDER PART CHAR '8'*/
   /* CUST ORDER ID   6536718*/
   /* NIKE ORDER ID   3 <-- NEW NIKE ORDER ID*/
   /* LINE ITEM       2 <-- THE LINE ITEM NUMBER STAYS THE SAME.*/
   /*  */
   /* IF THE SIZE RECORD IS NOT FOUND, WE MUST CHECK FOR THE SPLIT SALES*/
   /* ORDER CONDITION.  TO DO THIS, WE MUST ACCESS THE SALES ORDER*/
   /* DATABASE USING A RANGE FOR THE NIKE ORDER ID.  OPTIMUMLY, IO6030*/
   /* SHOULD BE USED TO ACCESS THE VOSIZE01 USING THIS RANGE.  SINCE THIS*/
   /* REQUIRES A CHANGE TO THE IOMOD, THERE IS ANOTHER WAY;*/
   /*  */
   /* 1.  CALL IO0440 TO READ THE VITEM01 RECORD USING A RANGE FOR THE*/
   /* NIKE ORDER ID.  THIS DOES NOT REQUIRE AN IOMOD CHANGE.*/
   /* 2.  USE THE NIKE ORDER ID OBTAINED FROM THIS CALL TO ACCESS THE*/
   /* VOSIZE01 RECORDS.*/
   /*  */
   /* IF THE SO SIZE RECORD IS NOT FOUND DO NOT ERROR.*/
   /*  */
  ;
  if (SQLCA.VAGen_SQLCODE == 100)
    ;
    PA0QS-19-IO6030-C1(); /* CLOSE VOSIZE01 TABLE*/
    ;
    set OP2REC empty;
    ;
    OP2REC.XGPCD = "02";
    OP2REC.OP1PARTN = VSOPOX01.OP1PARTN;
    OP2REC.OP1CUOID = VSOPOX01.OP1CUOID;
    OP2REC.OP1NORID = 0;
    OP2REC.SY1STNBR = VSOPOX01.SY1STNBR;
    OP2REC.SY2CLRID = VSOPOX01.SY2CLRID;
    OP2REC.XDMCD = VSOPOX01.XDMCD;
    ;
    PA0QS-57-IO0440-S2(); /* SET UP CURSOR FOR SALES ORDER ITEM TABLE*/
    ;
    PA0QS-58-IO0440-N2(); /* READ FIRST DORDER.VITEM001*/
    ;
      /* IF THE ITEM IS NOT FOUND THERE IS PROBLEM WITH SALES ORDERS.*/
      /* HOWEVER, WE DO NOT WANT TO ABEND IN THIS CASE.*/
    ;
    PA0QW00.OP1NORID = 0;
    ;
    if (SQLCA.VAGen_SQLCODE == 100)
      PA0QS-59-IO0440-C2(); /* CLOSE VITEM001 TABLE*/
      ;
      if (PA0QW00.PA0QW-MULT-SO-FLAG == "N") /* DON'T INCLUDE FUTURE SOs*/
        if (PA0QW00.PA0QW-PROCESS-TYPE == "S") /* PROCESSING BY STYLE*/
          PA0QW05.PA0QW-IO-FUNCTION = "N1";
        else
          PA0QW05.PA0QW-IO-FUNCTION = "N2";
        end
      else /* INCLUDE FUTURE SOs*/
        if (PA0QW00.PA0QW-PROCESS-TYPE == "S") /* PROCESSING BY STYLE*/
          PA0QW05.PA0QW-IO-FUNCTION = "N4";
        else
          PA0QW05.PA0QW-IO-FUNCTION = "N5";
        end
      end
      ;
      PA0QS-13-IO6020-N(); /* READ NEXT SO RECORD*/
      ;
      return;
      ;
    end
    ;
    while (SQLCA.VAGen_SQLCODE == 0
     && PA0QW00.OP1NORID == 0) /* AND LINE NUMBER NOT FOUND*/
      ;
      if (OP2REC.OP2LNINB != VSOPOX01.OP2LNINB)
        PA0QS-58-IO0440-N2(); /* GET NEXT VITEM001 RECORD*/
      else
        PA0QW00.OP1NORID = OP2REC.OP1NORID;
        PA0QW02.OP1NORID = OP2REC.OP1NORID;
        PA0QW00.PA0QW-PREV-OP1NORID = OP2REC.OP1NORID;
      end
      ;
    end
    ;
    PA0QS-59-IO0440-C2(); /* CLOSE VITEM001 TABLE*/
    ;
    if (PA0QW00.OP1NORID != 0)
      ;
      VOSIZE01.OP1NORID = PA0QW00.OP1NORID;
      ;
      PA0QS-16-IO6030-S1(); /* SET UP CURSOR FOR SO SIZE TABLE*/
      ;
      PA0QS-17-IO6030-N1(); /* READ FIRST DORDER.VOSIZE01*/
      ;
    end
    ;
  end
  ;
  ;
  while (SQLCA.VAGen_SQLCODE == 0)
    ;
      /* THIS INDEX IS TO KEEP TRACK OF THE 5 BUCKETS STORED ON THE*/
      /* VOSIZE01 RECORDS.*/
    ;
    PA0QW00.XX6 = 1;
    ;
    PA0QS-18-ADD-SIZES();
    ;
    PA0QS-17-IO6030-N1(); /* GET NEXT VOSIZE01 RECORD*/
    ;
  end
  ;
  PA0QS-19-IO6030-C1(); /* CLOSE VOSIZE01 TABLE*/
  ;
  if (PA0QW00.PA0QW-MULT-SO-FLAG == "N") /* DON'T INCLUDE FUTURE SOs*/
    if (PA0QW00.PA0QW-PROCESS-TYPE == "S") /* PROCESSING BY STYLE*/
      PA0QW05.PA0QW-IO-FUNCTION = "N1";
    else
      PA0QW05.PA0QW-IO-FUNCTION = "N2";
    end
  else /* INCLUDE FUTURE SOs*/
    if (PA0QW00.PA0QW-PROCESS-TYPE == "S") /* PROCESSING BY STYLE*/
      PA0QW05.PA0QW-IO-FUNCTION = "N4";
    else
      PA0QW05.PA0QW-IO-FUNCTION = "N5";
    end
  end
  ;
  PA0QS-13-IO6020-N(); /* READ NEXT SO RECORD*/
  ;
end // end PA0QS-15-SO-SIZE

// OPEN DORDER.VOSIZE01
Function PA0QS-16-IO6030-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
   /* IF EUROPEAN O/A, GET DEURO.VEORSZ01*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    try
      call "VEORSZ01" ("S1", SQLCA, VOSIZE01) {isNoRefresh = yes, isExternal = yes};
    end /* Select row*/
  else
    try
      call "IO6030" ("S1", SQLCA, VOSIZE01) {isNoRefresh = yes, isExternal = yes};
    end /* Select row*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S16"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DORDER.VOSIZE01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS16"; /* Program number*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOSIZE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOSIZE01.OP2KEY; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-16-IO6030-S1

// NEXT DORDER.VOSIZE01 ROW
Function PA0QS-17-IO6030-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from select for VOSIZE01.*/
   /* ------------------------------------------------------------*/
  ;
   /* IF EUROPEAN O/A, GET DEURO.VEORSZ01*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    try
      call "VEORSZ01" ("N1", SQLCA, VOSIZE01) {isNoRefresh = yes, isExternal = yes};
    end
  else
    try
      call "IO6030" ("N1", SQLCA, VOSIZE01) {isNoRefresh = yes, isExternal = yes};
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S17"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT VOSIZE01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS17"; /* Program number*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOSIZE01"; /* Table view name*/
  TA1REC.TA1TBLKE = VOSIZE01.OP2KEY; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-17-IO6030-N1

// ADD SO SIZE QUANTITIES
Function PA0QS-18-ADD-SIZES()
   /* ------------------------------------------------------------*/
   /* ADD SO SIZE QUANTITIES.*/
   /* ------------------------------------------------------------*/
  ;
  while (XX6 <= 5
   && VOSIZE01.SY5SZID[XX6] > 0)
    ;
      /* SET THE SIZE BUCKET XX5 = TO THE SIZE LOCATED IN SY5SZID*/
    ;
    PA0QW00.XX5 = VOSIZE01.SY5SZID[XX6];
    ;
    PA0QW02.PA0QW-SO-ORDER-QTY[XX5] = PA0QW02.PA0QW-SO-ORDER-QTY[XX5] +                                     VOSIZE01.OP3ONOQT[XX6] +                                     VOSIZE01.OP3SHPQT[XX6];
    ;
    PA0QW00.XX6 = PA0QW00.XX6 + 1;
    ;
  end
  ;
  ;
end // end PA0QS-18-ADD-SIZES

// CLOSE DORDER.VOSIZE01
Function PA0QS-19-IO6030-C1()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/
  ;
   /* IF EUROPEAN O/A, GET DEURO.VEORSZ01*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    try
      call "VEORSZ01" ("C1", SQLCA, VOSIZE01) {isNoRefresh = yes, isExternal = yes};
    end /* Close*/
  else
    try
      call "IO6030" ("C1", SQLCA, VOSIZE01) {isNoRefresh = yes, isExternal = yes};
    end /* Close*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S19"; /* Module identification*/
  converseLib.validationFailed(10); /* 'ERROR - PLEASE NOTIFY PROGRAMMING'*/
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE VOSIZE01 TABLE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS19"; /* Program number*/
  TA1REC.TA1DBASE = "DORDER   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOSIZE01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-19-IO6030-C1

// OPEN DPRODC.VPOITM05
Function PA0QS-20-VPOITM5-S()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "VPOITM05" (PCYREC, SQLCA, VPOITM05) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S20"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DPRODC.VPOITM05";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS20"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOITM05"; /* Table view name*/
  TA1REC.TA1TBLKE = VPOITM05.VPOITM05-KEY; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-20-VPOITM5-S

// NEXT DPRODC.VPOITM05
Function PA0QS-21-VPOITM5-N()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from select for VPOITM01.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "VPOITM05" (PCYREC, SQLCA, VPOITM05) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100)
      PA0QW00.PA0QW-END-OF-VPOITM01 = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S21"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT VPOITM05";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS21"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOITM05"; /* Table view name*/
  TA1REC.TA1TBLKE = VPOITM05.VPOITM05-KEY; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-21-VPOITM5-N

// CLOSE DPRODC.VPOITM05
Function PA0QS-22-VPOITM5-C()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "VPOITM05" (PCYREC, SQLCA, VPOITM05) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S22"; /* Module identification*/
  converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE VPOITM05 TABLE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS22"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOITM05"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-22-VPOITM5-C

// SELECT 'S' DPRODC.VPOSIZ01
Function PA0QS-23-IO3640-S()
   /* ------------------------------------------------------------*/
   /* Select 'S' DPRODC.VPOSIZ01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3640" ("S ", SQLCA, PC7REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S23"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODC.VPOSIZ01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOSIZ01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC7REC.PC7KEY; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0QS-23-IO3640-S

// IO4810 DELETE FACTORY RECORDS
Function PA0QS-24-IO4810-D2()
   /* ------------------------------------------------------------*/
   /* DELETE FACTORY RECORDS*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4810" ("D2", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* NO RECORDS TO DELETE*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/
  ;
  PAWREC.XXXMODID = "S24"; /* MODULE IDENTIFICATION*/
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
    ;
  else
    ;
    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";
    ;
    converseLib.clearScreen();
    
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS27 DELETE FACTORY RECORDS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID;
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* TABLE KEY*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-24-IO4810-D2

// IO4960 DELETE FROZEN ITEMS
Function PA0QS-25-IO4960-D1()
   /* ------------------------------------------------------------*/
   /* PERFORM DELETE FROZEN ITEMS*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4960" ("D1", SQLCA, PAIREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* NO RECORDS TO DELETE*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE;*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/
  ;
  PAWREC.XXXMODID = "S25"; /* MODULE IDENTIFICATION*/
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
    ;
  else
    ;
    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";
    ;
    converseLib.clearScreen();
    
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS25 DELETE FROZEN ITEM    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRZIT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PAIREC.PC6KEY; /* TABLE KEY;*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-25-IO4960-D1

// IO4970 DELETE FROZEN SIZES
Function PA0QS-26-IO4970-D1()
   /* ------------------------------------------------------------*/
   /* CALL IO4970 FOR DELETE OF FROZEN SIZE RECORDS*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4970" ("D1", SQLCA, PASREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/
  ;
  PAWREC.XXXMODID = "S26"; /* MODULE IDENTIFICATION*/
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
    ;
  else
    ;
    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";
    ;
    converseLib.clearScreen();
    
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS26 DELETE FROZEN SIZE    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRZSZ01"; /* Table view name*/
  TA1REC.TA1TBLKE = PASREC.PC7KEY; /* TABLE KEY*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-26-IO4970-D1

// IO4950 DELETE WORK RECORDS
Function PA0QS-27-VPAWRK-D1()
   /* ---------------------------------------------*/
   /* CALL VPAWRK02 TO DELETE WORK RECORDS*/
   /* ---------------------------------------------*/
  ;
  try
    call "VPAWRK02" ("D1", SQLCA, VPAWRK02) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* CSP COMMAREA*/
  ;
  PAWREC.XXXMODID = "S27"; /* MODULE IDENTIFICATION*/
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
    ;
  else
    ;
    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";
    ;
    converseLib.clearScreen();
    
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS27 DELETE TYPE ONE WORK  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK02"; /* Table view name*/
   /* TABLE KEY*/
  TA1REC.TA1TBLKE = VPAWRK02.VPAWRK02-GROUP;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-27-VPAWRK-D1

// IO5140 DELETE VPACUS01 RECORDS
Function PA0QS-28-IO5140-D2()
   /* ---------------------------------------------*/
   /* CALL IO5140 TO DELETE O/A CUSTOMER RECORDS*/
   /* ---------------------------------------------*/
  ;
  try
    call "IO5140" ("D2", SQLCA, PAGREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/
  ;
  PAWREC.XXXMODID = "S28";
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
    ;
  else
    ;
    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";
    ;
    converseLib.clearScreen();
    
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS28 DELETE TYPE ONE WORK  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACUS01"; /* Table view name*/
  TA1REC.TA1TBLKE = PAGREC.PAGKEY; /* TABLE KEY*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-28-IO5140-D2

// IO4810 ADD FACTORY RECORDS
Function PA0QS-29-IO4810-A()
   /* ------------------------------------------------------------*/
   /* ADD FACTORY RECORDS*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4810" ("A ", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF SUCCESSFUL, RETURN TO THE PREVIOUS PROCESS*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/
  ;
  PAWREC.XXXMODID = "S29"; /* MODULE IDENTIFICATION*/
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE NOT AVAILABLE*/
    ;
    converseLib.validationFailed(11); /* INDICATE NOT AVAILABLE*/
    TA1REC.TA1FUNC = "POST"; /* TERMINATION FUNCTION*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    ;
    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN"; /* TERMINATION ROUTINE*/
    ;
    converseLib.clearScreen();
     /* CLEAR SCREEN BEFORE DISPLAY*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS29 ADD FACTORY RECORDS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* TABLE KEY*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* ERROR DIAGNOSIS ROUTINE*/
  ;
  exit stack;
  ;
end // end PA0QS-29-IO4810-A

// DELETE TEMP STORAGE
Function PA0QS-30-TA0050-P()
   /* -------------------------------------------*/
    /* PURGE ANY TEMPORARY STORAGE*/
   /* -------------------------------------------*/
  ;
  set PA0QW04 empty;
  ;
  TA5REC.TA5TSQIX = 0; /* CURRENT PAGE NUMBER;*/
  PA0QW00.PA0QW-MAX-PAGES = 0; /* MAX NUMBER OF PAGES*/
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
      /* NEXT SENTENCE*/
  else
    PA0QW00.PA0QW-CURRENT-TS-PAGE = 1; /* CURRENT TEMP STORE PAGE*/
  end
  ;
  TA5REC.TA5APPID = "PA0Q"; /* APPL ID*/
  TA5REC.TA5FNCCD = "P"; /* SET FUNCTION CODE*/
  ;
  try
    call "TA0050" (PA0QW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* TEMPORARY STORAGE*/
  ;
   /* -------------------------------------------*/
    /* IF SUCCESSFUL RETURN TO CALLING ROUTINE*/
   /* -------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && TA5REC.TA5RTNCD == 0)          /* NORMAL RETURN*/
    ;
    return;
    ;
  end
  ;
   /* -------------------------------------------------------*/
    /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* -------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* SUBROUTINE PARAMETERS*/
  ;
  PAWREC.XXXMODID = "S30";
  converseLib.validationFailed(10); /* SYSTEM ERROR*/
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* MAP APPLICATION*/
  TA1REC.TA1MAP = "M001";
  SQLCA.SQLCAREC = TA5REC.TA5DATA;
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes};
  ;
  exit stack;
  ;
end // end PA0QS-30-TA0050-P

// WRITE TEMP STORAGE
Function PA0QS-31-TA0050-A()
   /* ------------------------------------------------*/
   /* WRITE TEMP STORAGE*/
   /* -----------------------------------------------*/
  ;
  sysVar.arrayIndex = 0;
  PA0QW04.PA0QW-TS-PAGE-LENGTH = 4092; /* TEMP STORAGE PAGE LENGTH*/
  TA5REC.TA5APPID = "PA0Q"; /* SET APPLICATION ID*/
  TA5REC.TA5FNCCD = "A"; /* SET FUNCTION CODE*/
  ;
  try
    call "TA0050" (PA0QW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* TEMPORARY STORAGE*/
  ;
   /* ----------------------------------------------------------*/
   /* IF SUCCESSFUL, INITIALIZE THE STORAGE AREA AND INDICATORS*/
   /* TO BE USED. RETURN TO THE PREVIOUS PROCESS.*/
   /* ----------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && TA5REC.TA5RTNCD == 0)          /* AND NORMAL RETURN CODE*/
    ;
    PA0QW00.PA0QW-MAX-PAGES = TA5REC.TA5TSQIX;
    ;
    set PA0QW04 empty;
    ;
    sysVar.arrayIndex = 0;
    ;
    return;
    ;
  end
  ;
   /* ----------------------------------------------------------*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ----------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* SUBROUTINE PARAMETERS*/
  ;
  PAWREC.XXXMODID = "S31";
  converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1PGMNM = "PA0QS31";
  TA1REC.TA1LOC = "WRITE  TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* MAP APPLICATION*/
  TA1REC.TA1MAP = "M001";
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes};
  ;
  exit stack;
  ;
  ;
end // end PA0QS-31-TA0050-A

// READ TEMP STORAGE
Function PA0QS-32-TA0050-R()
   /* ---------------------------------------------*/
    /* OBTAIN TEMP STORAGE PAGE*/
   /* ---------------------------------------------*/
  ;
  PA0QW04.PA0QW-TS-PAGE-LENGTH = 4092; /* TEMP STORAGE PAGE LENGTH*/
  TA5REC.TA5TSQIX = PA0QW00.PA0QW-CURRENT-TS-PAGE;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (PA0QW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S32"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1PGMNM = "PA0QS32"; /* Module identification*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* MAP APPLICATION*/
  TA1REC.TA1MAP = "M001"; /* Map name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end PA0QS-32-TA0050-R

// UPDATE TEMP STORAGE
Function PA0QS-33-TA0050-U()
   /* ------------------------------------------------*/
   /* WRITE TEMP STORAGE*/
   /* -----------------------------------------------*/
  ;
  sysVar.arrayIndex = 0;
  PA0QW04.PA0QW-TS-PAGE-LENGTH = 4092; /* TEMP STORAGE PAGE LENGTH*/
  TA5REC.TA5APPID = "PA0Q"; /* SET APPLI ID*/
  TA5REC.TA5FNCCD = "U"; /* SET FUNCTION CODE*/
  ;
  call "TA0050" (PA0QW04, TA5REC) {isNoRefresh = yes};
  ;
   /* ------------------------------------------------*/
   /* IF SUCCESSFUL, RETURN TO THE PREVIOUS PROCESS*/
   /* -----------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && TA5REC.TA5RTNCD == 0)         
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* SUBROUTINE PARAMETERS*/
  ;
  PAWREC.XXXMODID = "S33";
  converseLib.validationFailed(10); /* SYSTEM ERROR*/
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE M001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* MAP APPLICATION*/
  TA1REC.TA1MAP = "M001";
  SQLCA.SQLCAREC = TA5REC.TA5DATA;
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes};
  ;
  exit stack;
  ;
end // end PA0QS-33-TA0050-U

// SELECT ALT DPRODC.VPOITM01
Function PA0QS-34-VPOITM-SA()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "VPOITM05" ("SA", SQLCA, VPOITM05) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S34"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DPRODC.VPOITM05";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS34"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOITM05"; /* Table view name*/
  TA1REC.TA1TBLKE = VPOITM05.VPOITM05-KEY; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-34-VPOITM-SA

// ADD FROZEN ITEM RECORDS
Function PA0QS-35-VFRZIT2-A()
   /* ------------------------------------------------------------*/
   /* PERFORM ADD FROZEN ITEMS*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "VFRZIT02" ("A ", SQLCA, VFRZIT02) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/
  ;
  PAWREC.XXXMODID = "S35"; /* MODULE IDENTIFICATION*/
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE NOT AVAILABLE*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST"; /* TERMINATION FUNCTION*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* ROLLBACK ALL CHANGES*/
    ;
    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN"; /* TERMINATION FUNCTION*/
    ;
    converseLib.clearScreen();
     /* CLEAR SCREEN BEFORE DISPLAY*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS35 ADD FROZEN ITEM    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRZIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = VFRZIT02.VFRZIT02-KEY; /* TABLE KEY*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
end // end PA0QS-35-VFRZIT2-A

// ADD FROZEN SIZES
Function PA0QS-36-IO4970-A()
   /* ------------------------------------------------------------*/
   /* ADD FROZEN SIZE RECORDS*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4970" ("A ", SQLCA, PASREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* CSP COMMAREA;*/
  ;
  PAWREC.XXXMODID = "S36"; /* MODULE IDENTIFICATION*/
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    ;
    converseLib.validationFailed(10); /* SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS36 ADD FROZEN SIZE    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRZSZ01"; /* Table view name*/
   /* TABLE KEY*/
  TA1REC.TA1TBLKE = PASREC.PC7KEY;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
end // end PA0QS-36-IO4970-A

// DELETE VBOTLN01 RECORDS
Function PA0QS-37-IO5090-D()
   /* ---------------------------------------------*/
   /* CALL IO5090 TO DELETE BOTTOM LINE RECORDS*/
   /* ---------------------------------------------*/
  ;
  /*  */
  /* *************************** Y2K OUT BEGIN ****************************/
  /*  */
  /* CALL IO5090 'D ',SQLCA,PA5REC (NONCSP,NOMAPS,REPLY;*/
  /*  */
  /* *************************** Y2K OUT END ******************************/
  /*  */
  /*  */
  /* *************************** Y2K IN BEGIN *****************************/
  /*  */
  try
    call "VBOTLN02" ("D ", SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/
  ;
  PAWREC.XXXMODID = "S37"; /* MODULE IDENTIFICATION*/
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
    ;
  else
    ;
    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";
    ;
    converseLib.clearScreen();
    
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS37 DELETE BOTTOM LINE REC";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA5REC.PA5GRP01; /* TABLE KEY*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
end // end PA0QS-37-IO5090-D

// DELETE VPAITM01 RECORDS
Function PA0QS-38-VPAITM-D()
   /* ---------------------------------------------*/
   /* CALL VPAITM02 TO DELETE O/A ITEM RECORDS*/
   /* ---------------------------------------------*/
  ;
  try
    call "VPAITM02" ("D ", SQLCA, VPAITM02) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* CSP COMMAREA*/
  ;
  PAWREC.XXXMODID = "S38";
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
    
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS48 DELETE O/A ITEM RECORD";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM02"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAITM02.VPAITM02-KEY; /* TABLE KEY*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* ERROR DIAGNOSIS ROUTINE*/
  ;
  exit stack;
  ;
end // end PA0QS-38-VPAITM-D

// ADD O/A WORK RECORDS
Function PA0QS-39-VPAWRK-A()
   /* THIS PROC ORIGINALLY CALLED VPAWRK02. IT NOW*/
   /* CALLS VPAWRK03 PART OF NSC CHANGES. GREDDY - 05/08/00*/
   /* ---------------------------------------------*/
   /* CALL VPAWRK03 TO ADD WORK RECORDS*/
   /* ---------------------------------------------*/
  ;
  try
    call "VPAWRK03" ("A ", SQLCA, VPAWRK03) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE;*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* * CSP COMMAREA*/
  ;
  PAWREC.XXXMODID = "S39";
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
    ;
  else
    converseLib.validationFailed(10); /* SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";
    ;
    converseLib.clearScreen();
    
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS39 ADD O/A WORK RECORD   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK03"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAWRK03.VPAWRK03-GROUP; /* TABLE KEY*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
end // end PA0QS-39-VPAWRK-A

// SELECT COUNT DPRODC.VPOITM01
Function PA0QS-41-IO3310-T()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3310" (PCYREC, SQLCA, PC6REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S41"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "COUNT DPRODC.VPOITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS41"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC6REC.PC6KEY; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-41-IO3310-T

// SELECT UNIQUE FACTORY/STYLE
Function PA0QS-42-IO2980-S()
   /* ------------------------------------------------------------*/
   /* Fetch a unique factory/style row*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2980" ("S ", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      ;
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PA0QW00.XXXMODID = "S42"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT FACTORY/STYLE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0QS42"; /* Program number*/
  TA1REC.TA1DBASE = "DFCTY   "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VFYSTY01"; /* ===> Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-42-IO2980-S

// ADD O/A COMMENT RECORD
Function PA0QS-43-IO4820-A()
   /* ---------------------------------------------*/
   /* CALL IO4950 TO ADD WORK RECORDS*/
   /* ---------------------------------------------*/
  ;
  try
    call "IO4820" ("A ", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/
  ;
  PAWREC.XXXMODID = "S43";
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    ;
    converseLib.validationFailed(10); /* SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";
    ;
    converseLib.clearScreen();
    
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS43 ADD O/A COMMENT RECORD";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* TABLE KEY*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
end // end PA0QS-43-IO4820-A

// UPDATE DPRODA.VPAHDR01
Function PA0QS-44-IO4830-U()
  ;
   /* ------------------------------------------------------------*/
   /* UPDATE DPRODA.VPAHDR01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4830" ("U ", SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    ;
    /* ------------------------------------------------------------*/
     /* IF ROW NOT FOUND, INDICATE THE DATA WAS UPDATED BY ANOTHER.*/
    /* ------------------------------------------------------------*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100)
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
      PA0QW00.PA0QW-DB2-ERROR = "Y";
      PAWREC.XXXMODID = "S44";
      converseLib.validationFailed(12);
      exit stack;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S44"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DPRODA.VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0QS-44-IO4830-U

// UPDATE DPRODA.VPACTL01
Function PA0QS-45-IO4800-G()
  ;
   /* ------------------------------------------------------------*/
   /* UPDATE DPRODA.VPACTL01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4800" ("G ", SQLCA, PA8REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    ;
    /* ------------------------------------------------------------*/
     /* IF ROW NOT FOUND, INDICATE THE DATA WAS UPDATED BY ANOTHER.*/
    /* ------------------------------------------------------------*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100)
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
      PA0QW00.PA0QW-DB2-ERROR = "Y";
      PAWREC.XXXMODID = "S45";
      converseLib.validationFailed(12);
      exit stack;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S45"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DPRODA.VPACTL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA8REC.PA8KEY; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0QS-45-IO4800-G

// ADD DPRODA.VPAHDR01
Function PA0QS-46-IO4830-A()
  ;
   /* ------------------------------------------------------------*/
   /* UPDATE DPRODA.VPAHDR01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4830" ("A ", SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S46"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "ADD DPRODA.VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0QS-46-IO4830-A

// SELECT SET DFCTY.VTRDRS01
Function PA0QS-47-IO2800-S2()
   /* ------------------------------------------------------------*/
   /* select set trade restrictions.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2800" ("S2", SQLCA, FYBREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* row found*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return;
    end
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/
  ;
  PAWREC.XXXMODID = "S47"; /* module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* good return code*/
   && SQLCA.VAGen_SQLCODE == -911)  /* resource not available*/
    converseLib.validationFailed(11); /* indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* termination function*/
  else
    converseLib.validationFailed(10); /* indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* termination function*/
    converseLib.clearScreen();
     /* clear screen before redisplay*/
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2"; /* type of error*/
  TA1REC.TA1LOC = "SELECT SET";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* application name*/
  TA1REC.TA1PGMNM = "PA0QS47"; /* process name*/
  TA1REC.TA1DBASE = "DFCTY  "; /* database name*/
  TA1REC.TA1TBLVU = "VTRDRS01"; /* table view name*/
  TA1REC.TA1TBLKE = FYBREC.FYBKEY; /* table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis routine*/
  ;
  exit stack; /* flow to converse map*/
  ;
   /* --------------- End process PA0QS-47-IO2800-S2 -------------*/
  ;
end // end PA0QS-47-IO2800-S2

// NEXT DFCTY.VTRDRS01
Function PA0QS-48-IO2800-N2()
   /* ------------------------------------------------------------*/
   /* select set trade restrictions.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2800" ("N2", SQLCA, FYBREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* row found*/
     || SQLCA.VAGen_SQLCODE == 100) /* ROW NOT FOUND*/
      return;
    end
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/
  ;
  PAWREC.XXXMODID = "S48"; /* module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* good return code*/
   && SQLCA.VAGen_SQLCODE == -911)  /* resource not available*/
    converseLib.validationFailed(11); /* indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* termination function*/
  else
    converseLib.validationFailed(10); /* indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* termination function*/
    converseLib.clearScreen();
     /* clear screen before redisplay*/
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2"; /* type of error*/
  TA1REC.TA1LOC = "GET NEXT";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* application name*/
  TA1REC.TA1PGMNM = "PA0QS48"; /* process name*/
  TA1REC.TA1DBASE = "DFCTY  "; /* database name*/
  TA1REC.TA1TBLVU = "VTRDRS01"; /* table view name*/
  TA1REC.TA1TBLKE = FYBREC.FYBKEY; /* table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis routine*/
  ;
  exit stack; /* flow to converse map*/
  ;
   /* --------------- End process PA0QS-48-IO2800-N2 -------------*/
  ;
end // end PA0QS-48-IO2800-N2

// CLOSE DFCTY.VTRDRS01
Function PA0QS-49-IO2800-C2()
   /* ------------------------------------------------------------*/
   /* select set trade restrictions.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2800" ("C2", SQLCA, FYBREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* row found*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return;
    end
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/
  ;
  PAWREC.XXXMODID = "S49"; /* module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* good return code*/
   && SQLCA.VAGen_SQLCODE == -911)  /* resource not available*/
    converseLib.validationFailed(11); /* indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* termination function*/
  else
    converseLib.validationFailed(10); /* indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* termination function*/
    converseLib.clearScreen();
     /* clear screen before redisplay*/
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2"; /* type of error*/
  TA1REC.TA1LOC = "CLOSE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* application name*/
  TA1REC.TA1PGMNM = "PA0QS49"; /* process name*/
  TA1REC.TA1DBASE = "DFCTY  "; /* database name*/
  TA1REC.TA1TBLVU = "VTRDRS01"; /* table view name*/
  TA1REC.TA1TBLKE = FYBREC.FYBKEY; /* table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis routine*/
  ;
  exit stack; /* flow to converse map*/
  ;
   /* --------------- End process PA0QS-49-IO2800-C2 -------------*/
  ;
end // end PA0QS-49-IO2800-C2

// CALL PA1020
Function PA0QS-50-PA1020()
   /* ------------------------------------------------*/
    /* CALL PA1020 TO GET HARD ERRORS*/
   /* ------------------------------------------------*/
  ;
  try
    call "PA1020" (PAVREC, SQLCA) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (VAGen_SQLCODE == 0
     || VAGen_SQLCODE == 100)
      return;
    end
  end
  ;
   /* -------------------------------------------------------------*/
    /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
    /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* -------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S50";
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
    
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS50 GET HARD ERROR        ";
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PAVREC.FY1FCTYC; /* TABLE KEY*/
  ;
  if (PAVREC.PAVMSGNO > 0)
    if (PAVMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PAVMSGNO);
    end
  end
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-50-PA1020

// OPEN DPRODC.VPOITM01
Function PA0QS-51-IO3310-SA()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3310" ("SA", SQLCA, PC6REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S51"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE ALT DPRODC.VPOITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS51"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC6REC.PC6KEY; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-51-IO3310-SA

// IO5140 SELECT VPACUS01 RECORDS
Function PA0QS-52-IO5140-S()
   /* ---------------------------------------------*/
   /* CALL IO5140 TO SELECT O/A CUSTOMER RECORDS*/
   /* ---------------------------------------------*/
  ;
  try
    call "IO5140" ("S ", SQLCA, PAGREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/
  ;
  PAWREC.XXXMODID = "S52";
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
    ;
  else
    ;
    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";
    ;
    converseLib.clearScreen();
    
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS52 SELECT VPACUS01 ROW   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACUS01"; /* Table view name*/
  TA1REC.TA1TBLKE = PAGREC.PAGKEY; /* TABLE KEY*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-52-IO5140-S

// IO5140 ADD VPACUS01 RECORDS
Function PA0QS-53-IO5140-A()
   /* ---------------------------------------------*/
   /* CALL IO5140 TO ADD O/A CUSTOMER RECORDS*/
   /* ---------------------------------------------*/
  ;
  try
    call "IO5140" ("A ", SQLCA, PAGREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/
  ;
  PAWREC.XXXMODID = "S53";
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
    ;
  else
    ;
    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";
    ;
    converseLib.clearScreen();
    
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS57 ADD VPACUS01 ROW  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACUS01"; /* Table view name*/
  TA1REC.TA1TBLKE = PAGREC.PAGKEY; /* TABLE KEY*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-53-IO5140-A

// SELECT ALT DPRODC.VPOHDR01
Function PA0QS-54-IO3270-SC()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3270" (PCYREC, SQLCA, PC3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* NORMAL RETURN CODE*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S54"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "COUNT DPRODC.VPOHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS54"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC3REC.PC3KEY; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-54-IO3270-SC

// DETERMINE IF HARD ERROR
Function PA0QS-55-HARD-ERR()
  ;
   /* CHECK FOR HARD ERRORS*/
  ;
   /* DETERMINE BUY MONTH*/
  ;
  PA0QW00.PA0QW-PA-ORD-ADJ-BUY-MO = 0;
  ;
  /*  */
  /* *************************** Y2K OUT BEGIN ***************************/
  /*  */
  /* MOVE 19 TO PA0QW00.PA0QW-CC;*/
  /*  */
  /* *************************** Y2K OUT END *****************************/
  /*  */
  ;
  PA0QW00.PA0QW-YY = PA0QW01.PA0QW-PO-ID-YY;
  PA0QW00.PA0QW-MM = PA0QW01.PA0QW-PO-ID-BUY-MM;
  ;
  if (PA0QW00.PA0QW-MM == 1
   || PA0QW00.PA0QW-MM == 2)
    if (PA0QW00.PA0QW-YY == 99)
      PA0QW00.PA0QW-YY = 0;
    else
      PA0QW00.PA0QW-YY = PA0QW00.PA0QW-YY + 1;
    end
  end
  ;
  /*  */
  /* *************************** Y2K IN BEGIN *****************************/
  /*  */
  if (PA0QW00.PA0QW-YY > 60)
    PA0QW00.PA0QW-CC = 19;
  else
    PA0QW00.PA0QW-CC = 20;
  end
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */
  ;
  if (PA0QW01.YETCD != "SE" /* IF O/A TYPE IS 'SE' DON'T CHECK HARD ERRORS*/
   && PA0QW00.PA0QW-HARD-ERROR-WARNING == "N") /* SKIP IF WARNING PRINTED*/
    ;
    PA0QW00.XX9 = 4;
    ;
    while (PA0QW00.XX9 >= 1)
      ;
      PA0QW01.PA0QW-HARD-ERROR = "N";
      ;
      if (PA0QW01.FY1FCTYC[XX9] != " ")
        ;
            /* IF USER REQUESTS BOTH DIVISIONS, CHECK HARD ERRORS FOR*/
            /* BOTH DOMESTIC AND NIL*/
        ;
        if (PA0QW01.YSMXDV == "*")
          PA0QW01.PA0QW-PA1020-YSMXDV = "10";
          PA0QS-56-FCTY-HARD(); /* CHECK FOR HARD ERRORS*/
          PA0QW01.PA0QW-PA1020-YSMXDV = "20";
          PA0QS-56-FCTY-HARD(); /* CHECK FOR HARD ERRORS*/
        else
          PA0QS-56-FCTY-HARD(); /* CHECK FOR HARD ERRORS*/
        end
        ;
      end
      ;
      PA0QW00.XX9 = PA0QW00.XX9 - 1;
    end
    ;
  end
  ;
  ;
  ;
end // end PA0QS-55-HARD-ERR

// CHECK EACH FCTY FOR HARD ERROR
Function PA0QS-56-FCTY-HARD()
   /* -------------------------------------------------------*/
    /* CHECK FACTORY FOR HARD ERRORS*/
   /* -------------------------------------------------------*/
  ;
  set PAVREC empty;
  ;
  if (PA0QW01.YSMXDV == "*")
    PAVREC.YSMXDV = PA0QW01.PA0QW-PA1020-YSMXDV;
  else
    PAVREC.YSMXDV = PA0QW01.YSMXDV;
    if (PA0QW01.PC2CUXID == " ")
      PAVREC.PC2CUXID = "*";
    else
      PAVREC.PC2CUXID = PA0QW01.PC2CUXID;
    end
  end
  ;
  PAVREC.PC4ORTYP = PA0QW01.PC4ORTYP;
  PAVREC.FY1FCTYC = PA0QW01.FY1FCTYC[XX9];
  PAVREC.PA1BUYMO = PA0QW00.PA0QW-PA-ORD-ADJ-BUY-MO;
  PAVREC.SY1STNBR = PA0QW01.SY1STNBR;
  PAVREC.SY2CLRID = PA0QW01.SY2CLRID;
  PAVREC.XDMCD = PA0QW01.XDMCD;
  PAVREC.XQACD = "01";
  ;
  PA0QS-50-PA1020(); /* CALL PA1020*/
  ;
  if (PAVREC.PAVERFLG == "Y"
   || PAVREC.PAVCOUNT > 0)
    PA0QW01.PA0QW-HARD-ERROR[XX9] = "Y";
    PAWREC.XXXMODID = "523";
    converseLib.validationFailed(271); /* WARNING: FACTORY CONTAINS HARD ERROR*/
  end
  ;
  ;
end // end PA0QS-56-FCTY-HARD

// OPEN DORDER.VITEM001
Function PA0QS-57-IO0440-S2()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
   /* IF EUROPEAN O/A, GET DEURO.VEITEM01*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    try
      call "VEITEM01" ("S2", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Select row*/
  else
    try
      call "IO0440" ("S2", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Select row*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S57"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DORDER.VITEM001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS57"; /* Program number*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VITEM001"; /* Table view name*/
  TA1REC.TA1TBLKE = OP2REC.OP2KEY; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-57-IO0440-S2

// NEXT DORDER.VITEM001 ROW
Function PA0QS-58-IO0440-N2()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from select for VOSIZE01.*/
   /* ------------------------------------------------------------*/
  ;
   /* IF EUROPEAN O/A, GET DEURO.VEITEM01*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    try
      call "VEITEM01" ("N2", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Fetch*/
  else
    try
      call "IO0440" ("N2", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Fetch*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S58"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT VITEM001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS58"; /* Program number*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VITEM001"; /* Table view name*/
  TA1REC.TA1TBLKE = OP2REC.OP2KEY; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-58-IO0440-N2

// CLOSE DORDER.VITEM001
Function PA0QS-59-IO0440-C2()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/
  ;
   /* IF EUROPEAN O/A, GET DEURO.VEITEM01*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    try
      call "VEITEM01" ("C2", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Close*/
  else
    try
      call "IO0440" ("C2", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Close*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S59"; /* Module identification*/
  converseLib.validationFailed(10); /* 'ERROR - PLEASE NOTIFY PROGRAMMING'*/
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE VITEM001 TABLE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS59"; /* Program number*/
  TA1REC.TA1DBASE = "DORDER   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VITEM001"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-59-IO0440-C2

// Read DORDER.VORHDR01 IO0430
Function PA0QS-60-IO0430-S()
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0QW00.PA0QW-EURD-OA-INQ-ONLY == "Y")
    try
      call "VEORHD01" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};
    end /* Select row*/
  else
    try
      call "IO0430" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};
    end /* Select row*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* ROW NOT FOUND*/
      return; /* Exit to display map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that the system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  PAWREC.XXXMODID = "S60"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911    /* and resource not available*/
  )                                 
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";
    ;
    converseLib.clearScreen();
    
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DORDER   "; /* DATA BASE NAME*/
  TA1REC.TA1TBLVU = "VORHDR01 "; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
   /* ------------- End of process PA0QS-60-IO0430-S--------------*/
  ;
end // end PA0QS-60-IO0430-S

// IO4640 SELECT VDNORD01 RECORDS
Function PA0QS-61-IO4640-SB()
   /* ---------------------------------------------*/
   /* CALL IO4640 TO SELECT O/A CUSTOMER RECORDS*/
   /* ---------------------------------------------*/
  ;
  try
    call "IO4640" ("SB", SQLCA, FBHREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/
  ;
  PAWREC.XXXMODID = "S61";
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
    ;
  else
    ;
    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";
    ;
    converseLib.clearScreen();
    
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS61 SELECT VDNORD01 ROW   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDNORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBHREC.FBHGROUP; /* TABLE KEY*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-61-IO4640-SB

// call to pa1060 for count
Function PA0QS-62-PA1060()
   /* -----------------------------------------------------------------*/
    /* CALL PA1060 TO GET a count of other oa with buy mo and style*/
   /* -----------------------------------------------------------------*/
  ;
  try
    call "PA1060" (PAMREC, SQLCA, PA1REC, PAGREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (VAGen_SQLCODE == 0
     || VAGen_SQLCODE == 100)
      return;
    end
  end
  ;
   /* -------------------------------------------------------------*/
    /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
    /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* -------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S62";
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
    
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0QS62 GET OA COUNT          ";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA0QM001.PA1OANBR; /* TABLE KEY*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
   /* ------------------- END OF PA0QS-62-PA1060 --------------------------*/
end // end PA0QS-62-PA1060

// FORMAT THE PO ID FOR OVERRUNS
Function PA0QS-63-ORNO()
   /* -----------------------------------------------------------------*/
    /* CALL PA1060 TO GET a count of other oa with buy mo and style*/
   /* -----------------------------------------------------------------*/
  ;
  if (PA0QW00.PA0QW-SETUP-MM < 06)
    PA0QW00.PA0QW-PA1BUYMO-YY = PA0QW00.PA0QW-SETUP-YY;
    if (PA0QW00.PA0QW-SETUP-YY <= 90)
      PA0QW00.PA0QW-PA1BUYMO-CC = 20;
    else
      PA0QW00.PA0QW-PA1BUYMO-CC = 19;
    end
  else
    if (PA0QW00.PA0QW-SETUP-YY != 99)
      PA0QW00.PA0QW-PA1BUYMO-YY = PA0QW00.PA0QW-SETUP-YY + 1;
  /* MOVE 19 TO PA0QW00.PA0QW-PA1BUYMO-CC;*/
      if (PA0QW00.PA0QW-SETUP-YY <= 90)
        PA0QW00.PA0QW-PA1BUYMO-CC = 20;
      else
        PA0QW00.PA0QW-PA1BUYMO-CC = 19;
      end
    else
      PA0QW00.PA0QW-PA1BUYMO-YY = 00;
      PA0QW00.PA0QW-PA1BUYMO-CC = 20;
    end
  end
  ;
  PA0QW01.PA0QW-PO-ID-CC = PA0QW00.PA0QW-PA1BUYMO-CC;
  PA0QW01.PA0QW-PO-ID-YY = PA0QW00.PA0QW-PA1BUYMO-YY;
  PA0QM001.PA0QM-PO-ID-YY = PA0QW00.PA0QW-PA1BUYMO-YY;
  PA0QM001.PA0QM-PO-ID-MM = "06";
  PA0QW01.PA0QW-PO-ID-MM = "06";
  PA0QM001.PA0QM-PO-ID-BUY-MM = "05";
  PA0QW01.PA0QW-PO-ID-BUY-MM = "05";
  PA0QW00.PA0QW-PA1BUYMO-MM = 05;
  ;
   /* ------------------- END OF PA0QS-63-ORNO ----------------------------*/
end // end PA0QS-63-ORNO

// OPEN DPRODA.VPAITM01
Function PA0QS-64-VPAITM-S1()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAITM02 TABLE.*/
   /* ------------------------------------------------------------*/
  ;
  set VPAITM02 empty; /* init item  rec*/
  set PAEREC empty; /* init item  rec*/
  PAEREC.PAEFUNC = "S1";
  VPAITM02.PA1OANBR = PA1REC.PA1OANBR;
  VPAITM02.YESCD = "*";
  ;
  try
    call "VPAITM02" (PAEREC, SQLCA, VPAITM02) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S01"; /* Module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0QS64"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM02"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAITM02.VPAITM02-KEY; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
   /* **                                                        ***/
   /* ********* END OF PA0QS-64-vpaitm-S1 **************************/
   /* **                                                        ***/
  ;
  ;
end // end PA0QS-64-VPAITM-S1

// GET NEXT DPRODA.VPAITM01
Function PA0QS-65-VPAITM-N1()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAITM02 TABLE.*/
   /* ------------------------------------------------------------*/
  ;
  PAEREC.PAEFUNC = "N1";
  ;
  try
    call "VPAITM02" (PAEREC, SQLCA, VPAITM02) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S02"; /* Module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0QS65"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM02"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAITM02.VPAITM02-KEY; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
   /* **                                                        ***/
   /* ********* END OF PA0QS-65-IO4980-N1 **************************/
   /* **                                                        ***/
  ;
  ;
end // end PA0QS-65-VPAITM-N1

// CLOSE DPRODA.VPAITM01
Function PA0QS-66-VPAITM-C1()
   /* ------------------------------------------------------------*/
   /* CLOSE DPRODA.VPAITM02 TABLE.*/
   /* ------------------------------------------------------------*/
  ;
  PAEREC.PAEFUNC = "C1";
  ;
  try
    call "VPAITM02" (PAEREC, SQLCA, VPAITM02) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S03"; /* Module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0QS66"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM02"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAITM02.VPAITM02-KEY; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
   /* **                                                        ***/
   /* ********* END OF PA0QS-66-IO4980-C1 **************************/
   /* **                                                        ***/
  ;
  ;
end // end PA0QS-66-VPAITM-C1

// UPDATE DFBUY.VDNORD01
Function PA0QS-67-IO4640-U()
   /* ------------------------------------------------------------*/
   /* UPDATE DFBUY.VDNORD01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4640" ("U ", SQLCA, FBHREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
    )                           
      return; /* Return to previous process*/
      ;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
        PAWREC.XXXMODID = "S05";
        converseLib.validationFailed(12); /* DATA UPDATED BY ANOTHER APPLICATION*/
        exit stack;
      end
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S05"; /* Module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UDPATE DFBUY.VDNORD01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0QS67"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDNORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBHREC.FBHGROUP; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
   /* **                                                        ***/
   /* ********* END OF PA0QS-67-IO4640-U  **************************/
   /* **                                                        ***/
  ;
  ;
end // end PA0QS-67-IO4640-U

// SELECT DFBUY.VFQTBS01
Function PA0QS-68-IO4740-S()
   /* ------------------------------------------------------------*/
   /* SELECT DFBUY.VFQTBS01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4740" ("S ", SQLCA, FBKREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S06"; /* Module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "GET DFBUY.VFQTBS01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0QS68"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFQTBS01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBKREC.FBKGROUP; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
   /* **                                                        ***/
   /* ********* END OF PA0QS-68-IO4740-S  **************************/
   /* **                                                        ***/
  ;
  ;
end // end PA0QS-68-IO4740-S

// UPDATE DFBUY.VFQTBS01
Function PA0QS-69-IO4740-U()
   /* ------------------------------------------------------------*/
   /* UPDATE DFBUY.VDNORD01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4740" ("U ", SQLCA, FBKREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
    )                           
      return; /* Return to previous process*/
      ;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
        PAWREC.XXXMODID = "S07";
        converseLib.validationFailed(12); /* DATA UPDATED BY ANOTHER APPLICATION*/
        exit stack;
      end
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S07"; /* Module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UDPATE DFBUY.VFQTBS01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0QS07"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFQTBS01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBKREC.FBKGROUP; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
   /* **                                                        ***/
   /* ********* END OF PA0QS-69-IO4740-U  **************************/
   /* **                                                        ***/
  ;
  ;
end // end PA0QS-69-IO4740-U

// SELECT DFBUY.VFSCTL01
Function PA0QS-70-IO4670-S()
   /* ------------------------------------------------------------*/
   /* SELECT DFBUY.VFSCTL01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4670" ("S ", SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S08"; /* Module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "GET DFBUY.VFSCTL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0QS70"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBMREC.FBMGROUP; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
   /* **                                                        ***/
   /* ********* END OF PA0QS-70-IO4670-S  **************************/
   /* **                                                        ***/
  ;
  ;
end // end PA0QS-70-IO4670-S

// UPDATE DFBUY.VFSCTL01
Function PA0QS-71-IO4670-U()
   /* ------------------------------------------------------------*/
   /* UPDATE DFBUY.VFSCTL01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4670" ("U ", SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
    )                           
      return; /* Return to previous process*/
      ;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
        PAWREC.XXXMODID = "S09";
        converseLib.validationFailed(12); /* DATA UPDATED BY ANOTHER APPLICATION*/
        exit stack;
      end
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S09"; /* Module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UDPATE DFBUY.VFSCTL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0QS71"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBMREC.FBMGROUP; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
   /* **                                                        ***/
   /* ********* END OF PA0QS-71-IO4670-U  **************************/
   /* **                                                        ***/
  ;
  ;
end // end PA0QS-71-IO4670-U

// SELECT SET DCORP.VSUMCD01
Function PA0QS-72-IO2640-S()
  ;
   /* ------------------------------------------------------------*/
   /* Select UNIQUE row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2640" ("S ", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* OR NOT FOUND*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S72"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "GET UNIQUE DCORP.VSUMCD01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS72"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-72-IO2640-S

// INITIALIZE FLAGS
Function PA0QS-74-INIT-FLAG()
   /* ------------------------------------------------------------*/
   /* INITIALIZE PA0QW00 FLAGS*/
   /* ------------------------------------------------------------*/
  ;
  PA0QW00.PA0QW-REQ-FOR-DATA-FLAG = "N";
  PA0QW00.PA0QW-KEY-CHANGED = "N";
  PA0QW00.PA0QW-PROCESS-BY-CUSTOMER = "N";
  PA0QW00.PA0QW-CLOSEOUT-WARNING = "N";
  PA0QW00.PA0QW-SIDE1-PRODUCT = "N";
  PA0QW00.PA0QW-END-OF-VSOPOX01 = "N";
  PA0QW00.PA0QW-END-OF-VPOITM01 = "N";
  PA0QW00.PA0QW-VSOPOX01-FOUND = "N";
  PA0QW00.PA0QW-SELECT-MODIFIED = "N";
  PA0QW00.PA0QW-CONFIRM-MSG-SHOWN = "N";
  PA0QW00.PA0QW-FACTORY-ENTERED = "N";
  PA0QW00.PA0QW-CUST-NBR-CHANGED = "N";
  PA0QW00.PA0QW-WAREHOUSE-FLAG = "N";
  PA0QW00.PA0QW-XWHCD-BLANK-PRINTED = "N";
  PA0QW00.PA0QW-TEMP-PAGE-PRINTED = "N";
  PA0QW00.PA0QW-SEL-FCTY-FOUND = "N";
  PA0QW00.PA0QW-TRADE-REST-WARNING = "N";
  PA0QW00.PA0QW-DUP-OA-WARNING = "N";
  PA0QW00.PA0QW-DISPLAY-MAP2 = "N";
  PA0QW00.PA0QW-DISPLAY-FACTORY-BOX = "N";
  PA0QW00.PA0QW-HEADER-ERROR = "N";
  PA0QW00.PA0QW-READ-ONLY = "N";
  PA0QW00.PA0QW-LAST-LINE-BLANK = "N";
  PA0QW00.PA0QW-CUST-UPDATED = "N";
  PA0QW00.PA0QW-NIL-OA = "N";
  PA0QW00.PA0QW-DB2-ERROR = "N";
  PA0QW00.PA0QW-TYPE-CHANGED = "N";
  PA0QW00.PA0QW-NDV01-FLAG = "N";
  PA0QW00.PA0QW-DATA-FOUND-FLAG = "N";
  PA0QW00.PA0QW-HARD-ERROR-WARNING = "N";
  PA0QW00.PA0QW-PO-NO-SO-FLAG = "N";
  PA0QW00.PA0QW-PROCESS-TYPE = "S";
  PA0QW00.PA0QW-SO-SELECTED-FLAG = "N";
  PA0QW00.PA0QW-MULT-SO-FLAG = "N";
  PA0QW00.PA0QW-SHOW-PRIOR-PO = "N";
  PA0QW00.PA0QW-LIVE-BUY-STAT-CHANGED = "N";
  PA0QW00.PA0QW-AIR-FREIGHT-SELECTED = "N";
  PA0QW00.PA0QW-EURD-OA-INQ-ONLY = "N";
  ;
  PA0QW00.PA0QW-NDX = 1; /* INITIALIZE INDEX INTO PA0QW11*/
  ;
   /* 01/06/95: DEFAULT PA0QW01.PA0QW-PC3POIDT TO ZEROES*/
  ;
  PA0QW01.PA0QW-PC3POIDT = 0;
  ;
end // end PA0QS-74-INIT-FLAG

// SELECT ALT DPRODC.VPOHDR01
Function PA0QS-75-IO3270-S()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3270" ("S ", SQLCA, PC3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* NORMAL RETURN CODE*/
     || SQLCA.VAGen_SQLCODE == 100) /* RECORD NOT FOUND*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S40"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DPRODC.VPOHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0QS75"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC3REC.PC3KEY; /* Formatted error key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* EXIT TO DISPLAY MAP*/
  ;
  ;
end // end PA0QS-75-IO3270-S

// SELECT DPRODC.VPOHDR01
Function PA0QS-80-IO3270-S6()
   /* ------------------------------------------------------------*/
   /* select set PC-PO-NBR*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3270" ("S6", SQLCA, PC3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* row found*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return;
    end
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/
  ;
  PAWREC.XXXMODID = "S80"; /* module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* good return code*/
   && SQLCA.VAGen_SQLCODE == -911)  /* resource not available*/
    converseLib.validationFailed(11); /* indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* termination function*/
  else
    converseLib.validationFailed(10); /* indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* termination function*/
    converseLib.clearScreen();
     /* clear screen before redisplay*/
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2"; /* type of error*/
  TA1REC.TA1LOC = "SELECT SET";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* application name*/
  TA1REC.TA1PGMNM = "PA0QS80"; /* process name*/
  TA1REC.TA1DBASE = "DPRODC "; /* database name*/
  TA1REC.TA1TBLVU = "VPOHDR01"; /* table view name*/
  TA1REC.TA1TBLKE = PC3REC.PC3KEY; /* table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis routine*/
  ;
  exit stack; /* flow to converse map*/
  ;
   /* --------------- End process PA0QS-80-IO3270-S6 -------------*/
  ;
end // end PA0QS-80-IO3270-S6

// NEXT DPRODC.VPOHDR01
Function PA0QS-81-IO3270-N6()
   /* ------------------------------------------------------------*/
   /* select set PC-PO-NBR*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3270" ("N6", SQLCA, PC3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* row found*/
     || SQLCA.VAGen_SQLCODE == 100) /* ROW NOT FOUND*/
      return;
    end
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/
  ;
  PAWREC.XXXMODID = "S81"; /* module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* good return code*/
   && SQLCA.VAGen_SQLCODE == -911)  /* resource not available*/
    converseLib.validationFailed(11); /* indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* termination function*/
  else
    converseLib.validationFailed(10); /* indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* termination function*/
    converseLib.clearScreen();
     /* clear screen before redisplay*/
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2"; /* type of error*/
  TA1REC.TA1LOC = "GET NEXT";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* application name*/
  TA1REC.TA1PGMNM = "PA0QS81"; /* process name*/
  TA1REC.TA1DBASE = "DPRODC "; /* database name*/
  TA1REC.TA1TBLVU = "VPOHDR01"; /* table view name*/
  TA1REC.TA1TBLKE = PC3REC.PC3KEY; /* table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis routine*/
  ;
  exit stack; /* flow to converse map*/
  ;
   /* --------------- End process PA0QS-81-IO3270-N6 -------------*/
  ;
end // end PA0QS-81-IO3270-N6

// CLOSE DPRODC.VPOHDR01
Function PA0QS-82-IO3270-C6()
   /* ------------------------------------------------------------*/
   /* select set PC-PO-NBR*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3270" ("C6", SQLCA, PC3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000") /* good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* row found*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return;
    end
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/
  ;
  PAWREC.XXXMODID = "S82"; /* module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* good return code*/
   && SQLCA.VAGen_SQLCODE == -911)  /* resource not available*/
    converseLib.validationFailed(11); /* indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* termination function*/
  else
    converseLib.validationFailed(10); /* indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* termination function*/
    converseLib.clearScreen();
     /* clear screen before redisplay*/
  end
  ;
  PA0QW00.PA0QW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2"; /* type of error*/
  TA1REC.TA1LOC = "CLOSE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* application name*/
  TA1REC.TA1PGMNM = "PA0QS82"; /* process name*/
  TA1REC.TA1DBASE = "DPRODC "; /* database name*/
  TA1REC.TA1TBLVU = "VPOHDR01"; /* table view name*/
  TA1REC.TA1TBLKE = PC3REC.PC3KEY; /* table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis routine*/
  ;
  exit stack; /* flow to converse map*/
  ;
   /* --------------- End process PA0QS-82-IO3270-C6 -------------*/
  ;
end // end PA0QS-82-IO3270-C6

// EU0100 select unique
Function PA0QS-EU0100-SU()
   /* ------------------- av0bs-eu0100-su -------------------------*/
  ;
  WEU0100.WEU0100-TASK = "S ";
  WEU0100.WEU0100-CALLER-LOCATION = "PA0QS-EU0100-SU";
  ;
  try
    call "EU0100" (WEU0100) {isNoRefresh = yes, isExternal = yes};
  end /* select unique*/
  ;
  SQLCA.SQLCAREC = WEU0100.SQLCAREC;
  ;
  if (WEU0100.WEU0100-RETURN-CODE == 0) /* call successful*/
    return; /* return to av0bs-check-eqmt*/
  end
  ;
  TA1REC.TA1MAP = WEU0100.WEU0100-RETURN-CODE; /* CSP return code*/
  ;
  if (WEU0100.WEU0100-RETURN-CODE == 8) /* resource not available*/
    TA1REC.TA1FUNC = "POST"; /* termination function*/
  else
    TA1REC.TA1FUNC = "RETN"; /* termination function*/
  end
  ;
  TA1REC.TA1TYPE = "DB2"; /* type of error*/
  TA1REC.TA1LOC = "PA0QS-EU0100-SU"; /* program location*/
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* program application*/
  TA1REC.TA1PGMNO = "EU0100"; /* called program*/
  TA1REC.TA1DBASE = "DEQUIP"; /* database name*/
  TA1REC.TA1TBLVU = "VEQPRD01"; /* table view name*/
  TA1REC.TA1TBLKE = WEU0100.SY1STNBR; /* table key*/
  ;
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis routine*/
  ;
   /* ------------------- pa0qs-eu0100-su -------------------------*/
end // end PA0QS-EU0100-SU

// FORMAT VFRZIT02 FOR INSERT
Function PA0QS-FRMT-VFRZIT2()
  VFRZIT02.XGPCD = VPOITM05.XGPCD;
  VFRZIT02.PC3PONBR = VPOITM05.PC3PONBR;
  VFRZIT02.PC6ITMNB = VPOITM05.PC6ITMNB;
  VFRZIT02.PC3POIDT = VPOITM05.PC3POIDT;
  VFRZIT02.PCFSECD = VPOITM05.PCFSECD;
  VFRZIT02.FY1FCTYC = VPOITM05.FY1FCTYC;
  VFRZIT02.XCTCD = VPOITM05.XCTCD;
  VFRZIT02.SY1STNBR = VPOITM05.SY1STNBR;
  VFRZIT02.SY2CLRID = VPOITM05.SY2CLRID;
  VFRZIT02.XDMCD = VPOITM05.XDMCD;
  VFRZIT02.XQACD = VPOITM05.XQACD;
  VFRZIT02.XOWCD = VPOITM05.XOWCD;
  VFRZIT02.PC2INSEG = VPOITM05.PC2INSEG;
  VFRZIT02.XPGCD = VPOITM05.XPGCD;
  VFRZIT02.XUMCD = VPOITM05.XUMCD;
  VFRZIT02.PC6ETSDT = VPOITM05.PC6ETSDT;
  VFRZIT02.PC6OETS = VPOITM05.PC6OETS;
  VFRZIT02.PC6RTADT = VPOITM05.PC6RTADT;
  VFRZIT02.YMTCD = VPOITM05.YMTCD;
  VFRZIT02.PC6CXNBR = VPOITM05.PC6CXNBR;
  VFRZIT02.PC6PLAN = VPOITM05.PC6PLAN;
  VFRZIT02.XPLCD = VPOITM05.XPLCD;
  VFRZIT02.XPRCD = VPOITM05.XPRCD;
  VFRZIT02.XPCCD = VPOITM05.XPCCD;
  VFRZIT02.SYBSTGNB = VPOITM05.SYBSTGNB;
  VFRZIT02.XGACD = VPOITM05.XGACD;
  VFRZIT02.PG1SC4CD = VPOITM05.PG1SC4CD;
  VFRZIT02.PC6CLVAR = VPOITM05.PC6CLVAR;
  VFRZIT02.XWHCD = VPOITM05.XWHCD;
  VFRZIT02.PC2CUXID = VPOITM05.PC2CUXID;
  VFRZIT02.YSMXDV = VPOITM05.YSMXDV;
  VFRZIT02.PC6XCTCD = VPOITM05.PC6XCTCD;
  VFRZIT02.OP1CUPO = VPOITM05.OP1CUPO;
  VFRZIT02.OP1PARTN = VPOITM05.OP1PARTN;
  VFRZIT02.OP1CUOID = VPOITM05.OP1CUOID;
  VFRZIT02.OP1NORID = VPOITM05.OP1NORID;
  VFRZIT02.OP1CUNDT = VPOITM05.OP1CUNDT;
  VFRZIT02.PC4ORTYP = VPOITM05.PC4ORTYP;
  VFRZIT02.PC61TMSH = VPOITM05.PC61TMSH;
  VFRZIT02.XDSCD = VPOITM05.XDSCD;
  VFRZIT02.PC6STAT = VPOITM05.PC6STAT;
  VFRZIT02.PC6STADT = VPOITM05.PC6STADT;
  VFRZIT02.XFRCD = " ";
  VFRZIT02.FB-LATE-BK-FL = "N";
  VFRZIT02.FB-LATE-BK-FL-MDT = 0;
  VFRZIT02.PC6AIRNB = VPOITM05.PC6AIRNB;
  VFRZIT02.PC6AIRDT = VPOITM05.PC6AIRDT;
  VFRZIT02.PC-AIR-FRGT-PMTIND = VPOITM05.PC-AIR-FRGT-PMTIND;
  VFRZIT02.PC6NILRF = VPOITM05.PC6NILRF;
  VFRZIT02.YOHCD = VPOITM05.YOHCD;
  VFRZIT02.PC3SIFL = VPOITM05.PC3SIFL;
  VFRZIT02.PC6SZAVL = VPOITM05.PC6SZAVL;
  VFRZIT02.PC-REL-PLN-REF-NBR = VPOITM05.PC-REL-PLN-REF-NBR;
  VFRZIT02.PC6CONNO = VPOITM05.PC6CONNO;
  VFRZIT02.PC6PETS = VPOITM05.PC6PETS;
  VFRZIT02.PC6OETAL = VPOITM05.PC6OETAL;
  VFRZIT02.PC6ETALF = VPOITM05.PC6ETALF;
  VFRZIT02.PC6MICHG = VPOITM05.PC6MICHG;
  VFRZIT02.PC6TORIG = VPOITM05.PC6TORIG;
  VFRZIT02.PC6TORDE = VPOITM05.PC6TORDE;
  VFRZIT02.PC6TADD = VPOITM05.PC6TADD;
  VFRZIT02.PC6TCNCL = VPOITM05.PC6TCNCL;
  VFRZIT02.PC6PREFL = VPOITM05.PC6PREFL;
  VFRZIT02.XXXUSRID = VPOITM05.XXXUSRID;
  VFRZIT02.PA1OANBR = PA1REC.PA1OANBR;
  VFRZIT02.ZZZSDT = VPOITM05.ZZZSDT;
  VFRZIT02.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VFRZIT02.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  /* ******END OF SGRP PA0QS-FRMT-VFRZIT2*******************************/
end // end PA0QS-FRMT-VFRZIT2

// select unique VCMPPG01
Function PA0QS-VCMPPG01-S()
   /* *****************************************************/
   /* select unique DPRODG.VCMPPG01*/
   /* *****************************************************/
  ;
  call "VCMPPG01" ("S ", SQLCA, VCMPPG01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S     ";
    TA1REC.TA1LOCAT[3] = "VCMPPG01";
    TA1REC.TA1DBASE = "DPRODG ";
    TA1REC.TA1TBLVU = "VCMPPG01";
    TA1REC.TA1FUNC = "ABND"; /* Termination function*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1LOC = "PA0QS-VCMPPG01-S  ";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1TBLKE = VCMPPG01-GROUP; /* key*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  end
  ;
  ;
end // end PA0QS-VCMPPG01-S

// FACTORIES FOR STYLE POP-UP
Function XP0D-100()
   /* ************************************************************/
   /* * XP0D-100 FORMAT AND DISPLAY XP0DM001                    **/
   /* *                                                         **/
   /* *  The purpose of this process is to format and display   **/
   /* *  the pop-up window with the factories that produce the  **/
   /* *  given style.  This process must determine:             **/
   /* *                                                         **/
   /* *  1.  The valid factories that produce the style -       **/
   /* *      DFCTY.VFYSTY01.                                    **/
   /* *  2.  The corresponding factory name and country -       **/
   /* *      DFCTY.VFCTY001.                                    **/
   /* *                                                         **/
   /* *  If there are no rows found, the pop-up window shows    **/
   /* *  no factories.  If an error occurs, the application     **/
   /* *  using this process must perform all necessary calls    **/
   /* *  to the abend routine.  This process moves all the      **/
   /* *  literal data needed to identify the location of the    **/
   /* *  error.                                                 **/
   /* *                                                         **/
   /* *  PROGRAMMING REQUIREMENTS:                              **/
   /* *                                                         **/
   /* *  1.  Set DFCTY.VFYSTY01 record empty - FY2REC (IO2980)  **/
   /* *  2.  Set DFCTY.VFCTY001 record empty - FY1REC (IO2810)  **/
   /* *  3.  Move the style into SY1STNBR.                      **/
   /* *                                                         **/
   /* *  After performing this process, check the sqlcode and   **/
   /* *  ezertn 8.                                              **/
   /* *                                                         **/
   /* ************************************************************/
   /* * REQUEST #   NAME     DATE    COMMENTS                   **/
   /* * ---------  ------  --------  ---------------------------**/
   /* * 000000000  MSMIT2  09/27/91  CREATED                    **/
   /* *                                                         **/
   /* ************************************************************/
  ;
  FY2REC.XGPCD = "02"; /* FOOTWEAR GPC CODE*/
  FY2REC.FY1FCTYC = "*";
  FY2REC.XSECD = "*";
  FY2REC.XSNYR = -1;
  FY2REC.XXXSTAT = "*";
  XP0DW01.SY1STNBR = FY2REC.SY1STNBR;
  ;
  XP0D-110(); /* OPEN DFCTY.VFYSTY01 CURSOR*/
  ;
  XP0DW01.XP0DW-XX2 = 1; /* FACTORY INDEX*/
  ;
  while (SQLCA.VAGen_SQLCODE == 0)
    XP0D-120(); /* FECTH NEXT DFCTY.VFYSTY01 ROW*/
    if (SQLCA.VAGen_SQLCODE == 0)
      XP0DW01.XP0DW-FACTORY-FOUND = "Y";
      XP0DW01.FY1FCTYC[XP0DW-XX2] = FY2REC.FY1FCTYC;
      set FY1REC empty;
      FY1REC.XGPCD = "02";
      FY1REC.FY1FCTYC = FY2REC.FY1FCTYC;
      ;
      XP0D-140(); /* GET FACTORY INFO*/
      ;
      if (SQLCA.VAGen_SQLCODE == 0)
        XP0DW01.FY1FCTNM[XP0DW-XX2] = FY1REC.FY1FCTNM;
        XP0DW01.XCTCD[XP0DW-XX2] = FY1REC.XCTCD;
      end
      ;
      XP0DW01.XP0DW-XX2 = XP0DW01.XP0DW-XX2 + 1;
    end
  end
  ;
  if (XP0DW01.XP0DW-FACTORY-FOUND == "Y")
    XP0DW01.XP0DW-NUM-FACTORIES = XP0DW01.XP0DW-XX2 - 1;
  else
    XP0DW01.XP0DW-MESSAGE = "** NO FACTORIES FOUND FOR THIS STYLE";
    XP0DW01.XP0DW-NUM-FACTORIES = 0;
  end
  ;
  if (converseVar.validationMsgNum > 0)
    return;
  end
  ;
  XP0D-130(); /* CLOSE CURSOR*/
  ;
  if (converseVar.validationMsgNum > 0)
    return;
  end
  ;
end // end XP0D-100

// OPEN DFCTY.VFYSTY01 CURSOR
Function XP0D-110()
   /* ------------------------------------------------------------*/
   /* Open select set for DFCTY.VFYSTY01.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2980" ("S2", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000"
   && SQLCA.VAGen_SQLCODE == 0)
     /* NEXT SENTENCE*/
  else
    if (sysVar.errorCode == "00000000"
     && SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(37); /* STYLE INVALID*/
      return;
    else
      /* ------------------------------------------------------------*/
       /* If data not available, return  to the user.*/
       /* Otherwise, indicate that a system error has occurred.*/
      /* ------------------------------------------------------------*/
      ;
      converseLib.validationFailed(10);
      TA1REC.TA1LOC = "SELECT DFCTY.VFYSTY01";
      TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
      TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
      TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/
      TA1REC.TA1TBLKE = FY2REC.FY2KEY; /* Table key*/
      ;
      return; /* Exit CALLER*/
      ;
    end
  end
  ;
end // end XP0D-110

// FETCH NEXT DFCTY.VFYSTY01
Function XP0D-120()
   /* ***********************************************/
   /* FETCH A ROW FROM DFCTY.VFYSTY01*/
   /* ***********************************************/
  ;
  try
    call "IO2980" ("N2", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000"
   && SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
    return;
  else
    if (sysVar.errorCode == "00000000"
     && SQLCA.VAGen_SQLCODE == 100) /* END OF SET*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  converseLib.validationFailed(10);
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/
  TA1REC.TA1TBLKE = FY2REC.FY2KEY; /* Table key*/
  ;
  ;
  ;
end // end XP0D-120

// CLOSE DFCTY.VFYSTY01
Function XP0D-130()
   /* ***********************************************/
   /* CLOSE CURSOR     DFCTY.VFYSTY01*/
   /* ***********************************************/
  ;
  ;
  try
    call "IO2980" ("C2", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000"
   && SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  converseLib.validationFailed(10);
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/
  TA1REC.TA1TBLKE = FY2REC.FY2KEY; /* Table key*/
  ;
  ;
end // end XP0D-130

// SELECT UNIQUE DFCTY.VFCTY001
Function XP0D-140()
  ;
   /* ------------------------------------------------------------*/
   /* Select unique factory row.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000"
   && SQLCA.VAGen_SQLCODE == 0)
     /* NEXT SENTENCE*/
  else
    if (sysVar.errorCode == "00000000"
     && SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(20); /* factory code missing or invalid*/
      return;
    else
      /* ------------------------------------------------------------*/
       /* If data not available, return  to the user.*/
       /* Otherwise, indicate that a system error has occurred.*/
      /* ------------------------------------------------------------*/
      ;
      converseLib.validationFailed(10);
      TA1REC.TA1LOC = "SELECT UNIQUE FACTORY";
      TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
      TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
      TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
      TA1REC.TA1TBLKE = FY1REC.FY1KEY; /* Table key*/
      ;
      return; /* Exit CALLER*/
      ;
    end
  end
  ;
end // end XP0D-140

// FACTORY FOR STYLE POP-UP
Function XP0D-200()
   /* ************************************************************/
   /* * XP0D-200 FORMAT AND DISPLAY XP0DM001                    **/
   /* ************************************************************/
  ;
  if (converseVar.eventKey is pf3) /* exit*/
    XP0DW01.XP0DW-POP-UP-DONE = "Y";
    return;
  else
    if (converseVar.eventKey is pf7) /* page backward*/
      XP0DW01.XP0DW-XX2 = XP0DW01.XP0DW-XX2 - 1; /* LAST POSITION PRINTED*/
      XP0DW01.XP0DW-XX2 = XP0DW01.XP0DW-XX2 - 11; /* SUB PAGE LENGTH + 1*/
      XP0DW01.XP0DW-XX2 = XP0DW01.XP0DW-XX2 / 10; /* / BY PAGE LENGTH*/
      XP0DW01.XP0DW-XX2 = XP0DW01.XP0DW-XX2 + 1; /* ADD 1 PAGE*/
      XP0DW01.XP0DW-XX2 = XP0DW01.XP0DW-XX2 * 10; /* FIND 1ST SPOT ON PAGE*/
      XP0DW01.XP0DW-XX2 = XP0DW01.XP0DW-XX2 - 9; /* SUBT (PAGE LEN - 1)*/
      if (XP0DW01.XP0DW-XX2 >= 0)
        /* next sentence*/
      else
        exit stack;
      end
    end
  end
  ;
  if (converseVar.eventKey is pf8 /* page forward*/
   || converseVar.eventKey is enter)
    if (XP0DW01.XP0DW-XX2 <= XP0DW01.XP0DW-NUM-FACTORIES)
      set XP0DM001 initial;
    end
  else
    set XP0DM001 initial; /* CLEAR POP-UP*/
  end
  ;
   /* setup headings and footings*/
  ;
  XP0DM001.XP0DM-HEADER = " FACTORIES THAT PRODUCE THIS STYLE";
  XP0DW01.XP0DW-STYLE-LABEL = " STYLE:";
  XP0DM001.XP0DM-STYLE-MESSAGE = XP0DW01.XP0DW-STYLE-MESSAGE;
  XP0DM001.XP0DM-COLUMN-LABEL = " FCTY  FACTORY NAME         COUNTRY";
  XP0DM001.XP0DM-FOOT = "  PF3:EXIT   PF7:UP   PF8:DOWN";
  ;
  while (XP0DW01.XP0DW-XX2 <= XP0DW01.XP0DW-NUM-FACTORIES
   && XP0DW01.XP0DW-XX1 <= 10) /* PAGE LENGTH*/
    XP0DM001.FY1FCTYC[XP0DW-XX2] = XP0DW01.FY1FCTYC[XP0DW-XX2];
    XP0DM001.FY1FCTNM[XP0DW-XX2] = XP0DW01.FY1FCTNM[XP0DW-XX2];
    XP0DM001.XCTCD[XP0DW-XX2] = XP0DW01.XCTCD[XP0DW-XX2];
    XP0DW01.XP0DW-XX1 = XP0DW01.XP0DW-XX1 + 1;
    XP0DW01.XP0DW-XX2 = XP0DW01.XP0DW-XX2 + 1;
  end
  ;
  if (converseVar.validationMsgNum > 0)
    return;
  end
  ;
  ;
  ;
  converse XP0DM001 ;
end // end XP0D-200

//*** RECORD=PA0QW00 ****
// Working storage for PA0Q - ITEM SELECTION
// ***********************
Record PA0QW00 type basicRecord
  10 XXXMSGNO XXXMSGNO ; 
  10 XXXMODID XXXMODID ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 XX1 XX1 ; 
  10 XX2 XX2 ; 
  10 XX3 XX3 ; 
  10 XX4 XX4 ; 
  10 XX5 XX5 ; 
  10 XX6 XX6 ; 
  10 XX7 XX7 ; 
  10 XX8 XX8 ; 
  10 XX9 XX9 ; 
  10 XX10 XX10 ; 
  10 PA0QW-NDX PA0QW-NDX ; 
  10 PA0QW-SAVE-INDEX PA0QW-SAVE-INDEX ; 
  10 PA1OANBR PA1OANBR ; 
  10 PAWBUYDT PAWBUYDT ; 
  10 PAWBUYYM PAWBUYYM ; 
  10 PA0QW-PA-ORD-ADJ-BUY-MO PA0QW-PA-ORD-ADJ-BUY-MO ; 
    15 PA0QW-CC PA0QW-CC ; 
    15 PA0QW-YY PA0QW-YY ; 
    15 PA0QW-MM PA0QW-MM ; 
  10 PA0QW-REQ-FOR-DATA-FLAG PA0QW-REQ-FOR-DATA-FLAG ; 
  10 PA0QW-KEY-CHANGED PA0QW-KEY-CHANGED ; 
  10 PA0QW-PROCESS-BY-CUSTOMER PA0QW-PROCESS-BY-CUSTOMER ; 
  10 PA0QW-CLOSEOUT-WARNING PA0QW-CLOSEOUT-WARNING ; 
  10 PA0QW-SIDE1-PRODUCT PA0QW-SIDE1-PRODUCT ; 
  10 PA0QW-PROCESS-TYPE PA0QW-PROCESS-TYPE ; 
  10 PA0QW-BC-OR-AD-FLAG PA0QW-BC-OR-AD-FLAG ; 
  10 PA0QW-PREV-PC3POIDT PA0QW-PREV-PC3POIDT ; 
  10 PA0QW-PREV-PC2CUXID PA0QW-PREV-PC2CUXID ; 
  10 PA0QW-PREV-CUSTOMER PA0QW-PREV-CUSTOMER ; 
  10 PA0QW-PREV-OP1PARTN PA0QW-PREV-OP1PARTN ; 
  10 PA0QW-PREV-OP1CUOID PA0QW-PREV-OP1CUOID ; 
  10 PA0QW-PREV-OP1NORID PA0QW-PREV-OP1NORID ; 
  10 PA0QW-PREV-SY1STNBR PA0QW-PREV-SY1STNBR ; 
  10 PA0QW-PREV-SY2CLRID PA0QW-PREV-SY2CLRID ; 
  10 PA0QW-PREV-XDMCD PA0QW-PREV-XDMCD ; 
  10 PA0QW-PREV-XDSCD PA0QW-PREV-XDSCD ; 
  10 PA0QW-END-OF-VSOPOX01 PA0QW-END-OF-VSOPOX01 ; 
  10 PA0QW-END-OF-VPOITM01 PA0QW-END-OF-VPOITM01 ; 
  10 PA0QW-VSOPOX01-FOUND PA0QW-VSOPOX01-FOUND ; 
  10 PA0QW-SELECT-MODIFIED PA0QW-SELECT-MODIFIED ; 
  10 PA0QW-CONFIRM-MSG-SHOWN PA0QW-CONFIRM-MSG-SHOWN ; 
  10 PA0QW-FACTORY-ENTERED PA0QW-FACTORY-ENTERED ; 
  10 PA0QW-PO-TABLE-MAX PA0QW-PO-TABLE-MAX ; 
  10 PA0QW-PO-ORDER-QTY-GRP PA0QW-PO-ORDER-QTY-GRP ; 
    15 PA0QW-PO-ORDER-QTY PA0QW-PO-ORDER-QTY [40] ; 
  10 PA0QW-PO-SHIPPED PA0QW-PO-SHIPPED [40] ; 
  10 PA0QW-BALANCE-TO-SHIP-GRP PA0QW-BALANCE-TO-SHIP-GRP ; 
    15 PA0QW-BALANCE-TO-SHIP PA0QW-BALANCE-TO-SHIP [40] ; 
  10 PA0QW-TOTAL-PO-ORDER-QTY PA0QW-TOTAL-PO-ORDER-QTY [40] ; 
  10 PA0QW-MAX-PAGES PA0QW-MAX-PAGES ; 
  10 PA0QW-CURRENT-TS-PAGE PA0QW-CURRENT-TS-PAGE ; 
  10 PA0QW-PREV-PC3PONBR PA0QW-PREV-PC3PONBR ; 
  10 PA0QW-REMAIN-SHIPPED PA0QW-REMAIN-SHIPPED [40] ; 
  10 PA0QW-TOTAL-ORDER-QTY PA0QW-TOTAL-ORDER-QTY ; 
  10 PA0QW-TOTAL-ADJ-QTY PA0QW-TOTAL-ADJ-QTY ; 
  10 PA0QW-TOTAL-BTS-QTY PA0QW-TOTAL-BTS-QTY ; 
  10 PA0QW-CUST-NBR-CHANGED PA0QW-CUST-NBR-CHANGED ; 
  10 PA0QW-WAREHOUSE-FLAG PA0QW-WAREHOUSE-FLAG ; 
  10 PA0QW-BTS-PREV-XWHCD PA0QW-BTS-PREV-XWHCD ; 
  10 PA0QW-PREV-XWHCD PA0QW-PREV-XWHCD ; 
  10 PA0QW-XWHCD-BLANK-PRINTED PA0QW-XWHCD-BLANK-PRINTED ; 
  10 PA0QW-BTS-PREV-YMTCD PA0QW-BTS-PREV-YMTCD ; 
  10 PA0QW-TEMP-PAGE-PRINTED PA0QW-TEMP-PAGE-PRINTED ; 
  10 PA0QW-SO-PO-DIFF PA0QW-SO-PO-DIFF ; 
  10 PA0QW-SEL-FCTY-FOUND PA0QW-SEL-FCTY-FOUND ; 
  10 PA0QW-TRADE-REST-WARNING PA0QW-TRADE-REST-WARNING ; 
  10 PA0QW-TRADE-REST-FOUND PA0QW-TRADE-REST-FOUND ; 
  10 PA0QW-DUP-OA-WARNING PA0QW-DUP-OA-WARNING ; 
  10 PA0QW-DUP-OA-FOUND PA0QW-DUP-OA-FOUND ; 
  10 PA0QW-DISPLAY-MAP2 PA0QW-DISPLAY-MAP2 ; 
  10 PA0QW-SELECTION-UPDATED PA0QW-SELECTION-UPDATED ; 
  10 PA0QW-PA-PROC-GRP PA0QW-PA-PROC-GRP ; 
    15 YSMXDV YSMXDV ; 
    15 PC2CUXID PC2CUXID ; 
    15 PA0QW-SEQ-IND PA0QW-SEQ-IND ; 
  10 PA0QW-PA1BUYMO PA0QW-PA1BUYMO ; 
    15 * num(3) ; 
    15 PA0QW-PA1BUYMO-CC PA0QW-PA1BUYMO-CC ; 
    15 PA0QW-PA1BUYMO-YY PA0QW-PA1BUYMO-YY ; 
    15 PA0QW-PA1BUYMO-MM PA0QW-PA1BUYMO-MM ; 
  10 PA0QW-CALC-MM PA0QW-CALC-MM ; 
  10 PA0QW-CALC-YY PA0QW-CALC-YY ; 
  10 PA0QW-REQ-QTY-REMAIN PA0QW-REQ-QTY-REMAIN ; 
  10 PABAFYQT PABAFYQT ; 
  10 PABVYBTS PABVYBTS ; 
  10 PA0QW-DISPLAY-FACTORY-BOX PA0QW-DISPLAY-FACTORY-BOX ; 
  10 PC3POIDT PC3POIDT ; 
  10 PA0QW-HEADER-ERROR PA0QW-HEADER-ERROR ; 
  10 PA0QW-DISPLAY-OA PA0QW-DISPLAY-OA ; 
  10 PA0QW-READ-ONLY PA0QW-READ-ONLY ; 
  10 PA0QW-LAST-LINE-BLANK PA0QW-LAST-LINE-BLANK ; 
  10 PA0QW-OA-SY1STNBR PA0QW-OA-SY1STNBR ; 
  10 PA0QW-OA-SY2CLRID PA0QW-OA-SY2CLRID ; 
  10 PA0QW-OA-XDMCD PA0QW-OA-XDMCD ; 
  10 KUCCOID KUCCOID ; 
  10 KUMSTRID KUMSTRID ; 
  10 XNXCD XNXCD ; 
  10 PA0QW-CUST-UPDATED PA0QW-CUST-UPDATED ; 
  10 PA0QW-NIL-OA PA0QW-NIL-OA ; 
  10 PA0QW-DB2-ERROR PA0QW-DB2-ERROR ; 
  10 PA0QW-TYPE-CHANGED PA0QW-TYPE-CHANGED ; 
  10 PA0QW-NDV01-FLAG PA0QW-NDV01-FLAG ; 
  10 PA0QW-DATA-FOUND-FLAG PA0QW-DATA-FOUND-FLAG ; 
  10 PA0QW-PO-NO-SO-FLAG PA0QW-PO-NO-SO-FLAG ; 
  10 PA0QW-PO-SO-TABLE-MAX PA0QW-PO-SO-TABLE-MAX ; 
  10 PA0QW-HARD-ERROR-WARNING PA0QW-HARD-ERROR-WARNING ; 
  10 OP1NORID OP1NORID ; 
  10 PA0QW-UPDATE-EXIST-HDR PA0QW-UPDATE-EXIST-HDR ; 
  10 PA0QW-ADD-HDR PA0QW-ADD-HDR ; 
  10 PA0QW-PRODUCT-CHANGED PA0QW-PRODUCT-CHANGED ; 
  10 FY1FCTYC FY1FCTYC [4] ; 
  10 YESCD YESCD [4] ; 
  10 PA0QW-RESELECTED PA0QW-RESELECTED [4] ; 
  10 PA0QW-PREV-PC2CUXID-DUP PA0QW-PREV-PC2CUXID-DUP ; 
  10 PA0QW-SETUP-DATE PA0QW-SETUP-DATE ; 
    15 PA0QW-SETUP-CCC PA0QW-SETUP-CCC ; 
    15 PA0QW-SETUP-YY PA0QW-SETUP-YY ; 
    15 PA0QW-SETUP-MM PA0QW-SETUP-MM ; 
    15 PA0QW-SETUP-DD PA0QW-SETUP-DD ; 
  10 PA0QW-SO-SELECTED-FLAG PA0QW-SO-SELECTED-FLAG ; 
  10 PA0QW-FIRST-FETCH-FL PA0QW-FIRST-FETCH-FL ; 
  10 PA0QW-NON-SAP-PONBR-FL PA0QW-NON-SAP-PONBR-FL ; 
  10 PA0QW-MULT-SO-FLAG PA0QW-MULT-SO-FLAG ; 
  10 PA0QW-SAVE-NEED2-DT PA0QW-SAVE-NEED2-DT ; 
  10 PA0QW-SAVE-NEED1-DT PA0QW-SAVE-NEED1-DT ; 
  10 PA0QW-SHOW-PRIOR-PO PA0QW-SHOW-PRIOR-PO ; 
  10 PA0QW-LIVE-BUY-STAT-CHANGED PA0QW-LIVE-BUY-STAT-CHANGED ; 
  10 PA0QW-BUY-FLAGS-UPDATED PA0QW-BUY-FLAGS-UPDATED ; 
  10 PA0QW-OP1CUOID PA0QW-OP1CUOID ; 
    15 * num(8) ; 
    15 OP1PARTN OP1PARTN ; 
  10 PA0QW-AIR-FREIGHT-SELECTED PA0QW-AIR-FREIGHT-SELECTED ; 
  10 PA0QW-EURD-OA-INQ-ONLY PA0QW-EURD-OA-INQ-ONLY ; 
  10 PA0QW-EUROPEAN-ITEM PA0QW-EUROPEAN-ITEM ; 
  10 PA0QW-BTS-PREV-OP1CUOID PA0QW-BTS-PREV-OP1CUOID ; 
  10 PA0QW-BTS-PREV-OP1NORID PA0QW-BTS-PREV-OP1NORID ; 
  10 PA0QW-OP1CUOID-TEMP PA0QW-OP1CUOID-TEMP ; 
  10 PA0QW-PREV-PC6ITMNB PA0QW-PREV-PC6ITMNB ; 
end // end PA0QW00

//*** RECORD=PA0QW01 ****
// Working storage for PA0Q - ITEM SELECTION
// ***********************
Record PA0QW01 type basicRecord
  5 PA0QW-PA0QW01-GROUP PA0QW-PA0QW01-GROUP ; 
    10 PA1OATXT PA1OATXT ; 
    10 PA-AFRGT-RQT-ID PA-AFRGT-RQT-ID ; 
    10 YESCD YESCD ; 
    10 YESSDESC YESSDESC ; 
    10 PA1HLDFL PA1HLDFL ; 
    10 YETCD YETCD ; 
    10 YSMXDV YSMXDV ; 
    10 PC4ORTYP PC4ORTYP ; 
    10 PC3POIDT PC3POIDT [4] ; 
    10 FY1FCTYC FY1FCTYC [4] ; 
    10 PA4FCTQT PA4FCTQT [4] ; 
    10 PC3PONBR PC3PONBR [4] ; 
    10 PA0QW-FACTORY-SELECTED PA0QW-FACTORY-SELECTED [4] ; 
    10 PA0QW-FACTORY-YESCD PA0QW-FACTORY-YESCD [4] ; 
    10 PA0QW-HARD-ERROR PA0QW-HARD-ERROR [4] ; 
    10 PG1SC4CD PG1SC4CD ; 
    10 PA0QW-CURR-BUY-YYMM PA0QW-CURR-BUY-YYMM ; 
      15 PA0QW-CURR-BUY-YY PA0QW-CURR-BUY-YY ; 
      15 PA0QW-CURR-BUY-MM PA0QW-CURR-BUY-MM ; 
    10 PA0QW-EDIT-MONTH PA0QW-EDIT-MONTH ; 
    10 PA0QW-PC3POIDT PA0QW-PC3POIDT ; 
      15 * num(1) ; 
      15 PA0QW-PO-ID-CC PA0QW-PO-ID-CC ; 
      15 PA0QW-PO-ID-YY PA0QW-PO-ID-YY ; 
      15 PA0QW-PO-ID-MM PA0QW-PO-ID-MM ; 
      15 PA0QW-PO-ID-BUY-MM PA0QW-PO-ID-BUY-MM ; 
    10 PA0QW-PO-ID-FCTY PA0QW-PO-ID-FCTY ; 
    10 PA0QW-ORIG-PO-ID-CCYYMMMM PA0QW-ORIG-PO-ID-CCYYMMMM ; 
    10 PA0QW-ALT-PO-ID-CCYYMMMM PA0QW-ALT-PO-ID-CCYYMMMM ; 
      15 * num(1) ; 
      15 PA0QW-ALT-PO-ID-CC PA0QW-ALT-PO-ID-CC ; 
      15 PA0QW-ALT-PO-ID-YY PA0QW-ALT-PO-ID-YY ; 
      15 PA0QW-ALT-PO-ID-MM PA0QW-ALT-PO-ID-MM ; 
      15 PA0QW-ALT-PO-ID-BUY-MM PA0QW-ALT-PO-ID-BUY-MM ; 
    10 PA0QW-ALT-PO-ID-FCTY PA0QW-ALT-PO-ID-FCTY ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 SY1STYNM SY1STYNM ; 
    10 PC2CUXID PC2CUXID ; 
    10 XCTCD XCTCD ; 
    10 PA0QW-CUSTOMER-NBR PA0QW-CUSTOMER-NBR ; 
      15 KUCCOID KUCCOID ; 
      15 KUMSTRID KUMSTRID ; 
      15 XNXCD XNXCD ; 
    10 PA1RQQTY PA1RQQTY ; 
    10 PA0QW-SHOW-ALL-SO PA0QW-SHOW-ALL-SO ; 
    10 PA0QW-SELECT PA0QW-SELECT [11] ; 
    10 PA0QW-UPDATE-HEADER PA0QW-UPDATE-HEADER ; 
    10 PA0QW-UPDATE-COMMENT PA0QW-UPDATE-COMMENT ; 
    10 PA0QW-COMMENT PA0QW-COMMENT ; 
    10 PA0QW-PA1020-YSMXDV PA0QW-PA1020-YSMXDV ; 
    10 PA0QW-OP-CUST-NEED1-DT PA0QW-OP-CUST-NEED1-DT ; 
      15 PA0QW-OP-NEED1-CCYYMM PA0QW-OP-NEED1-CCYYMM ; 
        20 PA0QW-OP-CUST-NEED1-CC PA0QW-OP-CUST-NEED1-CC ; 
        20 PA0QW-OP-CUST-NEED1-YY PA0QW-OP-CUST-NEED1-YY ; 
        20 PA0QW-OP-CUST-NEED1-MM PA0QW-OP-CUST-NEED1-MM ; 
      15 PA0QW-OP-CUST-NEED1-DD PA0QW-OP-CUST-NEED1-DD ; 
    10 PA0QW-OP-CUST-NEED2-DT PA0QW-OP-CUST-NEED2-DT ; 
      15 PA0QW-OP-NEED2-CCYYMM PA0QW-OP-NEED2-CCYYMM ; 
        20 PA0QW-OP-CUST-NEED2-CC PA0QW-OP-CUST-NEED2-CC ; 
        20 PA0QW-OP-CUST-NEED2-YY PA0QW-OP-CUST-NEED2-YY ; 
        20 PA0QW-OP-CUST-NEED2-MM PA0QW-OP-CUST-NEED2-MM ; 
      15 PA0QW-OP-CUST-NEED2-DD PA0QW-OP-CUST-NEED2-DD ; 
end // end PA0QW01

//*** RECORD=PA0QW02 ****
// THIS RECORD CONTAINS THE SALES ORDER THAT IS CURRENTLY BEING
// WORKED WITH (TAKEN FROM THE DPRODA.VSOPOX01 TABLE).  AFTER
// THE QUANTITIES ARE UPDATED, THIS RECORD IS WRITTEN OUT TO
// TEMP STORAGE ALONG WITH ITS CORRESPONDING PO ITEMS.
// 
// KEEP IN MIND THAT THE TEMP STORAGE MAXIMUM LENGTH IS 4092.
// SINCE A TEMP STORAGE PAGE CONTAINS 11 ROWS, THE MAXIMUM
// LENGTH OF THIS WORKING STORAGE GROUP IS 372.
// 
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 09/06/91   MSMIT2   New record.
// 01/06/94   MSMIT2   PA0349: ADD MUSICAL SIZE RUN INDICATOR.
// ***********************
Record PA0QW02 type basicRecord
  5 PA0QW-TEMP-SO-GROUP PA0QW-TEMP-SO-GROUP ; 
    10 PA0QW-RECORD-TYPE PA0QW-RECORD-TYPE ; 
    10 PA0QW-SELECT PA0QW-SELECT ; 
    10 OP1PARTN OP1PARTN ; 
    10 OP1CUOID OP1CUOID ; 
    10 OP1NORID OP1NORID ; 
    10 OP2LNINB OP2LNINB ; 
    10 PC2CUXID PC2CUXID ; 
    10 OP1CUNDT OP1CUNDT ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 XWHCD XWHCD ; 
    10 XDSCD XDSCD ; 
    10 YSMXDV YSMXDV ; 
    10 PC3POIDT PC3POIDT ; 
    10 PA0QW-SO-ORDER-QTY-GRP PA0QW-SO-ORDER-QTY-GRP ; 
      15 PA0QW-SO-ORDER-QTY PA0QW-SO-ORDER-QTY [40] ; 
    10 PACADDRS PACADDRS ; 
    10 PA0QW-SO-ADJ-QTY-GRP PA0QW-SO-ADJ-QTY-GRP ; 
      15 PA0QW-SO-ADJ-QTY PA0QW-SO-ADJ-QTY [40] ; 
    10 PA0QW-MSR-IND PA0QW-MSR-IND ; 
    10 * char(9) ; 
end // end PA0QW02

//*** RECORD=PA0QW03 ****
// THIS RECORD IS USED TO STORE THE PO ITEMS WITH CORRESPONDING
// BALANCE TO SHIP INFORMATION.  THESE PO ITEMS ARE PROCESSED
// BY SALES ORDER NUMBER AND ARE WRITTEN OUT TO TEMP STORAGE.
// 
// IMPORTANT: IF THIS RECORD IS MODIFIED, YOU MUST MODIFY
//            PA0QW09 ALSO.
// 
// KEEP IN MIND THAT THE TEMP STORAGE MAXIMUM LENGTH IS 4092.
// SINCE A TEMP STORAGE PAGE CONTAINS 11 ROWS, THE MAXIMUM
// LENGTH OF THIS WORKING STORAGE GROUP IS 372.
// 
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 09/06/91   MSMIT2   New record.
// 01/06/94   MSMIT2   PA0349: ADD MUSICAL SIZE RUN INDICATOR
// ***********************
Record PA0QW03 type basicRecord
  5 PA0QW-TEMP-PO-GROUP PA0QW-TEMP-PO-GROUP [100] ; 
    10 PA0QW-RECORD-TYPE PA0QW-RECORD-TYPE ; 
    10 PA0QW-SELECT PA0QW-SELECT ; 
    10 OP1CUOID OP1CUOID ; 
    10 OP1NORID OP1NORID ; 
    10 PC3PONBR PC3PONBR ; 
    10 PC6ITMNB PC6ITMNB ; 
    10 PC3POIDT PC3POIDT ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 PC2CUXID PC2CUXID ; 
    10 XWHCD XWHCD ; 
    10 PC6RTADT PC6RTADT ; 
    10 PC6ETSDT PC6ETSDT ; 
    10 PA0QW-PO-ORDER-QTY-GRP char(160) ; // FROM DPRODC.VPOITM01
    10 PACADDRS PACADDRS ; 
    10 PA0QW-BALANCE-TO-SHIP-GRP PA0QW-BALANCE-TO-SHIP-GRP ; 
    10 PC2INSEG PC2INSEG ; 
    10 YMTCD YMTCD ; 
    10 XDSCD XDSCD ; 
    10 YSMXDV YSMXDV ; 
    10 PA0QW-MSR-IND PA0QW-MSR-IND ; 
    10 PA-AFRGT-RQT-ID PA-AFRGT-RQT-ID ; 
end // end PA0QW03

//*** RECORD=PA0QW04 ****
// THIS RECORD CONTAINS THE 10 RECORDS THAT ARE TO BE PLACED
// INTO/READ OUT OF TEMP STORAGE
// 
// KEEP IN MIND THAT THE TEMP STORAGE MAXIMUM LENGTH IS 4092.
// SINCE A TEMP STORAGE PAGE CONTAINS 11 ROWS, THE MAXIMUM
// LENGTH OF THIS WORKING STORAGE GROUP IS 372.
// 
// ***********************
Record PA0QW04 type basicRecord
  5 PA0QW-TS-PAGE-LENGTH PA0QW-TS-PAGE-LENGTH ; 
  5 * char(4092) ; 
    10 PA0QW-TEMP-STORE-GRP PA0QW-TEMP-STORE-GRP [11] ; 
      15 PA0QW-RECORD-TYPE PA0QW-RECORD-TYPE ; 
      15 PA0QW-SELECT PA0QW-SELECT ; 
      15 * char(369) ; 
end // end PA0QW04

//*** RECORD=PA0QW05 ****
// ***************** po date pass record *********************
// 
//   This record contains a from and to date and a function
//   to be passed for po applications.
// 
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 04/27/89   mchris   New record.
// ***********************
Record PA0QW05 type basicRecord
  5 PA0QW-IO-GROUP PA0QW-IO-GROUP ; 
    10 PA0QW-IO-FUNCTION PA0QW-IO-FUNCTION ; 
    10 PA0QW-IO-DATE1 PA0QW-IO-DATE1 ; 
    10 PA0QW-IO-DATE2 PA0QW-IO-DATE2 ; 
end // end PA0QW05

//*** RECORD=PA0QW06 ****
// ********** ORDER ADJUSTMENTS COMMON PASS DATA *************
// 
//   This record breaks out the PAWEXTRA field of PAWREC.  this
//   is so that information can be passed to PA0U.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 10/23/91   MSMIT2   New record.
// ***********************
Record PA0QW06 type basicRecord
  5 PAWEXTRA PAWEXTRA ; 
    10 PC2CUXID PC2CUXID ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 PC3POIDT PC3POIDT ; 
    10 PA0QW-PA0QW01-GROUP PA0QW-PA0QW01-GROUP ; 
      15 * char(321) ; 
      15 PA0QW-OP-CUST-NEED1-DT PA0QW-OP-CUST-NEED1-DT ; 
      15 PA0QW-OP-CUST-NEED2-DT PA0QW-OP-CUST-NEED2-DT ; 
    10 * char(1159) ; 
end // end PA0QW06

//*** RECORD=PA0QW07 ****
// Working storage for PA0Q - SCREEN FORMAT FIELDS
// ***********************
Record PA0QW07 type basicRecord
  10 PA0QW-OP1NORID-NNN PA0QW-OP1NORID-NNN ; 
  10 PA0QW-DATE-CCYYMMDD PA0QW-DATE-CCYYMMDD ; 
    15 * num(3) ; 
    15 PA0QW-DATE-YY PA0QW-DATE-YY ; 
    15 PA0QW-DATE-MM PA0QW-DATE-MM ; 
    15 PA0QW-DATE-DD PA0QW-DATE-DD ; 
  10 PA0QW-MMDDYY PA0QW-MMDDYY ; 
    15 PA0QW-MM PA0QW-MM ; 
    15 PA0QW-DD PA0QW-DD ; 
    15 PA0QW-YY PA0QW-YY ; 
  10 PA0QW-PC3POIDT PA0QW-PC3POIDT ; 
    15 PA0QW-PC3POIDT-CC PA0QW-PC3POIDT-CC ; 
    15 PA0QW-PC3POIDT-YY PA0QW-PC3POIDT-YY ; 
    15 PA0QW-PC3POIDT-MM PA0QW-PC3POIDT-MM ; 
    15 PA0QW-PC3POIDT-DD PA0QW-PC3POIDT-DD ; 
  10 PA0QW-MAP-PO-ID PA0QW-MAP-PO-ID ; 
    15 PA0QW-MAP-PO-ID-YY PA0QW-MAP-PO-ID-YY ; 
    15 PA0QW-MAP-PO-ID-MM PA0QW-MAP-PO-ID-MM ; 
    15 PA0QW-MAP-PO-ID-DD PA0QW-MAP-PO-ID-DD ; 
end // end PA0QW07

//*** RECORD=PA0QW08 ****
// Working storage for PA0Q - USED TO KEEP TRACK OF TOTALS FOR
// MAP2 (DISPLAY SIZE INFORMATION)
// ***********************
Record PA0QW08 type basicRecord
  10 PA0QW-ON-ORDER-QTY-GRP PA0QW-ON-ORDER-QTY-GRP ; 
    15 PA0QW-ON-ORDER-QTY PA0QW-ON-ORDER-QTY [40] ; 
  10 PA0QW-BALANCE-TO-SHIP-GRP PA0QW-BALANCE-TO-SHIP-GRP ; 
    15 PA0QW-BALANCE-TO-SHIP PA0QW-BALANCE-TO-SHIP [40] ; 
  10 PA0QW-VARIANCE-QTY-GRP PA0QW-VARIANCE-QTY-GRP ; 
    15 PA0QW-VARIANCE-QTY PA0QW-VARIANCE-QTY [40] ; 
  10 PA0QW-PO-NUM-LINE PA0QW-PO-NUM-LINE ; 
    15 PA0QW-PO-NUM-LABEL PA0QW-PO-NUM-LABEL ; 
    15 PA0QW-PC3PONBR PA0QW-PC3PONBR ; 
    15 * char(2) ; // HEADER FILLER
end // end PA0QW08

//*** RECORD=PA0QW09 ****
// THIS RECORD IS AN EXACT COPY OF PA0QW03 EXCEPT THAT IT
// OCCURS 1 TIME INSTEAD OF 100.  THIS IS USED WHEN READING
// FROM TEMP STORAGE.  IT CONTAINS THE PO INFORMATION.
// 
// IMPORTANT: IF THIS RECORD IS MODIFIED, YOU MUST MODIFY
//            PA0QW03 ALSO.
// 
// KEEP IN MIND THAT THE TEMP STORAGE MAXIMUM LENGTH IS 4092.
// SINCE A TEMP STORAGE PAGE CONTAINS 11 ROWS, THE MAXIMUM
// LENGTH OF THIS WORKING STORAGE GROUP IS 372.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 11/15/91   MSMIT2   New record.
// 01/06/94   MSMIT2   PA0349: ADD MUSICAL SIZE RUN INDICATOR.
// ***********************
Record PA0QW09 type basicRecord
  5 PA0QW-TEMP-PO-GROUP PA0QW-TEMP-PO-GROUP ; 
    10 PA0QW-RECORD-TYPE PA0QW-RECORD-TYPE ; 
    10 PA0QW-SELECT PA0QW-SELECT ; 
    10 OP1CUOID OP1CUOID ; 
    10 OP1NORID OP1NORID ; 
    10 PC3PONBR PC3PONBR ; 
    10 PC6ITMNB PC6ITMNB ; 
    10 PC3POIDT PC3POIDT ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 PC2CUXID PC2CUXID ; 
    10 XWHCD XWHCD ; 
    10 PC6RTADT PC6RTADT ; 
    10 PC6ETSDT PC6ETSDT ; 
    10 PA0QW-PO-ORDER-QTY-GRP char(160) ; // FROM DPRODC.VPOITM01
    10 PACADDRS PACADDRS ; 
    10 PA0QW-BALANCE-TO-SHIP-GRP PA0QW-BALANCE-TO-SHIP-GRP ; 
    10 PC2INSEG PC2INSEG ; 
    10 YMTCD YMTCD ; 
    10 XDSCD XDSCD ; 
    10 YSMXDV YSMXDV ; 
    10 PA0QW-MSR-IND PA0QW-MSR-IND ; 
    10 PA-AFRGT-RQT-ID PA-AFRGT-RQT-ID ; 
end // end PA0QW09

//*** RECORD=PA0QW10 ****
// ********** ORDER ADJUSTMENTS COMMON PASS DATA *************
// 
//   This record breaks out the PAWEXTRA field of PAWREC.  this
//   is so that information can be passed to PA0Q when PF18
//   was pressed to process a bunch of O/As.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 11/27/91   MSMIT2   New record.
// ***********************
Record PA0QW10 type basicRecord
  5 PAWEXTRA PAWEXTRA ; 
    10 YETCD YETCD ; 
    10 YSMXDV YSMXDV ; 
    10 PC4ORTYP PC4ORTYP ; 
    10 PA0QW-PO-ID-YY PA0QW-PO-ID-YY ; 
    10 PA0QW-PO-ID-MM PA0QW-PO-ID-MM ; 
    10 PA0QW-PO-ID-BUY-MM PA0QW-PO-ID-BUY-MM ; 
    10 PA0QW-PO-ID-FCTY PA0QW-PO-ID-FCTY ; 
    10 PA0QW-ALT-PO-ID-YY PA0QW-ALT-PO-ID-YY ; 
    10 PA0QW-ALT-PO-ID-MM PA0QW-ALT-PO-ID-MM ; 
    10 PA0QW-ALT-PO-ID-BUY-MM PA0QW-ALT-PO-ID-BUY-MM ; 
    10 PA0QW-ALT-PO-ID-FCTY PA0QW-ALT-PO-ID-FCTY ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 PC2CUXID PC2CUXID ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 PA0QW-SHOW-ALL-SO PA0QW-SHOW-ALL-SO ; 
    10 PG1SC4CD PG1SC4CD ; 
    10 * char(1473) ; 
end // end PA0QW10

//*** RECORD=PA0QW11 ****
// THIS RECORD IS USED TO STORE THE KEYS FOR THE DIRECT SHIP
// LINE ITEM NUMBERS THAT HAVE SALES ORDERS.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 04/10/92   MSMIT2   New record.
// ***********************
Record PA0QW11 type basicRecord
  5 PA0QW-PO-ITEM-KEY PA0QW-PO-ITEM-KEY [100] ; 
    10 PC3PONBR PC3PONBR ; 
    10 PC6ITMNB PC6ITMNB ; 
end // end PA0QW11

//*** RECORD=PA0QW12 ****
// THIS RECORD IS USED TO REDEFINE THE COLOR/DIM/MODE/AIR
// FREIGHT FIELD.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 01/19/94   MSMIT2   New record.
// ***********************
Record PA0QW12 type basicRecord
  5 PA0QW-COLOR-MODE PA0QW-COLOR-MODE ; 
    10 PA0QW-SY2CLRID PA0QW-SY2CLRID ; 
    10 PA0QW-SPACE PA0QW-SPACE ; 
    10 PA0QW-XDMCD PA0QW-XDMCD ; 
    10 * char(3) ; 
end // end PA0QW12

//*** RECORD=PA0QW13 ****
// THIS RECORD IS USED TO REDEFINE THE COLOR/DIM/MODE/AIR
// FREIGHT FIELD.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 01/19/94   MSMIT2   New record.
// ***********************
Record PA0QW13 type basicRecord // VAGen Info - redefined PA0QW12
  5 PA0QW-COLOR-MODE PA0QW-COLOR-MODE ; 
    10 PA0QW-YMTCD PA0QW-YMTCD ; 
    10 PA0QW-AF-INFO PA0QW-AF-INFO ; 
      15 PA0QW-DASH PA0QW-DASH ; 
      15 PA0QW-PA-AFRGT-RQT-ID PA0QW-PA-AFRGT-RQT-ID ; 
end // end PA0QW13

Record PAMREC type basicRecord
  5 PAM-GROUP PAM-GROUP ; 
    15 PAM-FUNCT PAM-FUNCT ; 
    15 PAM-COUNT PAM-COUNT ; 
    15 PA1OANBR PA1OANBR ; 
    15 SY1STNBR SY1STNBR ; 
    15 SY2CLRID SY2CLRID ; 
    15 XDMCD XDMCD ; 
    15 PA1BUYMO PA1BUYMO ; 
    15 YSMXDV YSMXDV ; 
    15 KUCCOID KUCCOID ; 
    15 KUMSTRID KUMSTRID ; 
    15 XNXCD XNXCD ; 
    15 PC4ORTYP PC4ORTYP ; 
    15 PAM-LOW-PA1OANBR PAM-LOW-PA1OANBR ; 
    15 PAM-HI-PA1OANBR PAM-HI-PA1OANBR ; 
end // end PAMREC

//*** RECORD=PAVREC ****
// ****************** ORDER ADJUSTMENT HEADER *****************
// 
// DB2 TABLE VIEW:      dproda.vpahdr01
// 
// COPYLIB MEMBER:      dclv00780
// 
// I/O MODULE:          io4830
// 
// KEY TO DB2 TABLE:    pa_ord_adj_nbr
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 10/31/89   Gamen    New record.  Replaces az1rec.
// **********************
Record PAVREC type basicRecord
  10 FY1FCTYC FY1FCTYC ; 
  10 PC2CUXID PC2CUXID ; 
  10 YSMXDV YSMXDV ; 
  10 PC4ORTYP PC4ORTYP ; 
  10 PA1BUYMO PA1BUYMO ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 XQACD XQACD ; 
  10 PAVCOUNT PAVCOUNT ; 
  10 PAVMSGNO PAVMSGNO ; 
  10 PAVERFLG PAVERFLG ; 
end // end PAVREC

//*** RECORD=VOSIZE01 ****
// ***********************  ITEM TABLE  ***********************
// 
// DB2 TABLE:           DORDER.VOSIZE01
// 
// COPYLIB MEMBER:      DCL00040
// 
// I/O MOD:             IO
// 
// KEY TO DB2 TABLE:    OP1PARTN
//                      OP1CUOID
//                      OP1NORID
//                      OP2LNINB
// 
// DATE CREATED:        10/07/91
// 
// MAINTENANCE LOG:
// 
//   DATE    INIT.      COMMENT
// --------  -----      ---------------------------------------
// 10/07/91  MSMIT2     INITIAL RECORD CREATION
// 12/27/91  JBRUCE     Correct desc of op-sz-grp-seq.
// 03-08-94  gcalki     DB2 changes -
//                      resize:sy5prcun
//                      add:xdz-data-dist-cd
//                      add:zz-cs400-chng-dt
//                      add:zz-cs400-chng-hhmm
//                      add:zz-ds400-chng-dt
//                      add:zz-ds400-chng-hhmm
// ************************
Record VOSIZE01 type basicRecord
  10 OP2KEY OP2KEY ; 
    15 OP1PARTN OP1PARTN ; 
    15 OP1CUOID OP1CUOID ; 
    15 OP1NORID OP1NORID ; 
    15 OP2LNINB OP2LNINB ; 
  10 OP-SZ-GRP-SEQ OP-SZ-GRP-SEQ ; 
  10 XGPCD XGPCD ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 SY5SZID SY5SZID [5] ; 
  10 OP2PRCOF OP2PRCOF [5] ; 
  10 SY5PRCUN SY5PRCUN [5] ; 
  10 OP3ORGQT OP3ORGQT [5] ; 
  10 OP3ONOQT OP3ONOQT [5] ; 
  10 OP3ALQT OP3ALQT [5] ; 
  10 OP3OHRQT OP3OHRQT [5] ; 
  10 OP3WPRQT OP3WPRQT [5] ; 
  10 OP3SHPQT OP3SHPQT [5] ; 
  10 OP3CNLQT OP3CNLQT [5] ; 
  10 XDZ-DATA-DIST-CD XDZ-DATA-DIST-CD ; 
  10 ZZ-CS400-CHNG-DT ZZ-CS400-CHNG-DT ; 
  10 ZZ-CS400-CHNG-HHMM ZZ-CS400-CHNG-HHMM ; 
  10 ZZ-DS400-CHNG-DT ZZ-DS400-CHNG-DT ; 
  10 ZZ-DS400-CHNG-HHMM ZZ-DS400-CHNG-HHMM ; 
  10 ZZZCHGCT ZZZCHGCT ; 
end // end VOSIZE01

//*** RECORD=VPAITM02 ****
// ****************** ORDER ADJUSTMENT ITEM *******************
// 
// DB2 TABLE VIEW:      dproda.vpaitm02
// 
// COPYLIB MEMBER:      dpaitm02
// 
// I/O MODULE:          vpaitm02
// 
// KEY TO DB2 TABLE:    pa_ord_adj_nbr
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 06/12/98   WROBIN   New record.
// ************************
Record VPAITM02 type basicRecord
  5 VPAITM02-GROUP VPAITM02-GROUP ; 
    10 VPAITM02-KEY VPAITM02-KEY ; 
      15 PA1OANBR PA1OANBR ; 
      15 PC3POIDT PC3POIDT ; 
      15 PC3PONBR PC3PONBR ; 
      15 PC6ITMNB PC6ITMNB ; 
      15 PACFPONO PACFPONO ; 
      15 PACFPCIT PACFPCIT ; 
      15 PC4ORTYP PC4ORTYP ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 XCTCD XCTCD ; 
      15 PC6RTADT PC6RTADT ; 
      15 PC6ETSDT PC6ETSDT ; 
      15 PC-XCT-ORIG-CD PC-XCT-ORIG-CD ; 
      15 PA-UPD-PC-EST-HDT PA-UPD-PC-EST-HDT ; 
      15 YMTCD YMTCD ; 
      15 XWHCD XWHCD ; 
      15 XDSCD XDSCD ; 
      15 PC2CUXID PC2CUXID ; 
      15 OP1PARTN OP1PARTN ; 
      15 OP1CUOID OP1CUOID ; 
      15 OP1NORID OP1NORID ; 
      15 OP1CUNDT OP1CUNDT ; 
      15 YESCD YESCD ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
      15 XDMCD XDMCD ; 
      15 XQACD XQACD ; 
      15 PC2INSEG PC2INSEG ; 
      15 XPGCD XPGCD ; 
      15 XUMCD XUMCD ; 
      15 XFRCD XFRCD ; 
      15 FB-LATE-BK-FL FB-LATE-BK-FL ; 
      15 FB-LATE-BK-FL-MDT FB-LATE-BK-FL-MDT ; 
    10 PA2SZQTY PA2SZQTY [40] ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end VPAITM02

//*** RECORD=XP0DW01 ****
// ************************************************************
// 
//         ***** POP UP WINDOW WORKING RECORD *****
// 
// ************************************************************
// 
// Overview :
//            This record is the working record used by
//            the CSP pop up window processes - xppa300.
// 
// Maintenance History :
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          07/25/91  MSMIT2  created
// ************************************************************
// ***********************
Record XP0DW01 type basicRecord
  10 XP0DW-MESSAGE XP0DW-MESSAGE ; 
  10 XP0DW-POP-UP-DONE XP0DW-POP-UP-DONE ; 
  10 XP0DW-NUM-FACTORIES XP0DW-NUM-FACTORIES ; 
  10 XP0DW-FACTORY-FOUND XP0DW-FACTORY-FOUND ; 
  10 XP0DW-STYLE-MESSAGE XP0DW-STYLE-MESSAGE ; 
    15 XP0DW-FILLER XP0DW-FILLER ; 
    15 XP0DW-STYLE-LABEL XP0DW-STYLE-LABEL ; 
    15 SY1STNBR SY1STNBR ; 
    15 XP0DW-FILL XP0DW-FILL ; 
  10 XP0DW-GROUP XP0DW-GROUP [30] ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 FY1FCTNM FY1FCTNM ; 
    15 XCTCD XCTCD ; 
  10 XP0DW-XX1 XP0DW-XX1 ; 
  10 XP0DW-XX2 XP0DW-XX2 ; 
end // end XP0DW01

// flag set for add
DataItem PA0QW-ADD-HDR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-AF-INFO char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-AIR-FREIGHT-SELECTED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ALTERNATE PO ID DAY
DataItem PA0QW-ALT-PO-ID-BUY-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-ALT-PO-ID-CC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-ALT-PO-ID-CCYYMMMM num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ALTERNATE PO ID FACTORY
DataItem PA0QW-ALT-PO-ID-FCTY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ALTERNATE PO ID MONTH
DataItem PA0QW-ALT-PO-ID-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ALTERNATE PO ID YEAR
DataItem PA0QW-ALT-PO-ID-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FROM XPPC020
DataItem PA0QW-BALANCE-TO-SHIP int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-BALANCE-TO-SHIP-GRP char(160)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-BC-OR-AD-FLAG char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// op-cust-ord-id
DataItem PA0QW-BTS-PREV-OP1CUOID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// op-nike-ord-id
DataItem PA0QW-BTS-PREV-OP1NORID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// XWH_WHSE_CD
DataItem PA0QW-BTS-PREV-XWHCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ymtcd
DataItem PA0QW-BTS-PREV-YMTCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-BUY-FLAGS-UPDATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-CALC-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-CALC-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// KEY FIELD CHANGED FLAG
DataItem PA0QW-CLOSEOUT-WARNING char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-COLOR-MODE char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-COMMENT char(65)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-CONFIRM-MSG-SHOWN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-CURR-BUY-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-CURR-BUY-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-CURR-BUY-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// MAX NUMBER OF TEMP PAGES
DataItem PA0QW-CURRENT-TS-PAGE num(2)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-CUST-NBR-CHANGED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-CUST-UPDATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-CUSTOMER-NBR num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DASH
DataItem PA0QW-DASH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-DATA-FOUND-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-DATE-CCYYMMDD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-DATE-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-DATE-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-DATE-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DB2 ERROR OCCURRED FLAG
DataItem PA0QW-DB2-ERROR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-DISPLAY-FACTORY-BOX char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-DISPLAY-MAP2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// WHEN PF18 HIT - DISPLAY O/A
DataItem PA0QW-DISPLAY-OA int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-DUP-OA-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-DUP-OA-WARNING char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-EDIT-MONTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-END-OF-VPOITM01 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-END-OF-VSOPOX01 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-EURD-OA-INQ-ONLY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-EUROPEAN-ITEM char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-FACTORY-ENTERED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FLAG USED TO REQUIRE SELECT
DataItem PA0QW-FACTORY-SELECTED char(1)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-FACTORY-YESCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-FIRST-FETCH-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-HARD-ERROR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-HARD-ERROR-WARNING char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-HEADER-ERROR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IOMOD PO ID
DataItem PA0QW-IO-DATE1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// IOMOD ALT PO ID
DataItem PA0QW-IO-DATE2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// IOMOD FUNCTION
DataItem PA0QW-IO-FUNCTION char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-IO-GROUP char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// KEY FIELD CHANGED FLAG
DataItem PA0QW-KEY-CHANGED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-LAST-LINE-BLANK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-LIVE-BUY-STAT-CHANGED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-MAP-PO-ID num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-MAP-PO-ID-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-MAP-PO-ID-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-MAP-PO-ID-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// MAX NUMBER OF TEMP PAGES
DataItem PA0QW-MAX-PAGES num(2)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-MMDDYY num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// MUSICAL SIZE RUN INDICATOR
DataItem PA0QW-MSR-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// USED TO BRING IN FUTURE SOs
DataItem PA0QW-MULT-SO-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-NDV01-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-NDX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-NIL-OA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Indicator for SAP/Non-SAP PO #
DataItem PA0QW-NON-SAP-PONBR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_STY_NBR
DataItem PA0QW-OA-SY1STNBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_COLR_CD_ID
DataItem PA0QW-OA-SY2CLRID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XDM_DIM_CD
DataItem PA0QW-OA-XDMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FROM DPRODC.VPOITM01
DataItem PA0QW-ON-ORDER-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-ON-ORDER-QTY-GRP char(160)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-OP-CUST-NEED1-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-OP-CUST-NEED1-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-OP-CUST-NEED1-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-OP-CUST-NEED1-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-OP-CUST-NEED1-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-OP-CUST-NEED2-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-OP-CUST-NEED2-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-OP-CUST-NEED2-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-OP-CUST-NEED2-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-OP-CUST-NEED2-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-OP-NEED1-CCYYMM num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-OP-NEED2-CCYYMM num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-cust-ord-id
DataItem PA0QW-OP1CUOID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-cust-ord-id
DataItem PA0QW-OP1CUOID-TEMP num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-OP1NORID-NNN num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-ORIG-PO-ID-CCYYMMMM num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-PA-AFRGT-RQT-ID num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-PA-ORD-ADJ-BUY-MO num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-PA-PROC-GRP char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-PA0QW01-GROUP char(339)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XXX_SUM_XDV_CD
DataItem PA0QW-PA1020-YSMXDV char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PA_ORD_ADJ_BUY_MO
DataItem PA0QW-PA1BUYMO num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-PA1BUYMO-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-PA1BUYMO-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-PA1BUYMO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PC_PO_ID_MO_RNG
DataItem PA0QW-PC3POIDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-PC3POIDT-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-PC3POIDT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-PC3POIDT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-PC3POIDT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// HEADER PO NUMBER
DataItem PA0QW-PC3PONBR num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PO ID DAY
DataItem PA0QW-PO-ID-BUY-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-PO-ID-CC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PO ID FACTORY
DataItem PA0QW-PO-ID-FCTY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PO ID MONTH
DataItem PA0QW-PO-ID-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PO ID YEAR
DataItem PA0QW-PO-ID-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-PO-ITEM-KEY char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-PO-NO-SO-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// HEADER SECTION 1
DataItem PA0QW-PO-NUM-LABEL char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-PO-NUM-LINE char(23)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FROM DPRODC.VPOITM01
DataItem PA0QW-PO-ORDER-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FROM DPRODC.VPOITM01
DataItem PA0QW-PO-ORDER-QTY-GRP char(160)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-PO-SHIPPED int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index  5
DataItem PA0QW-PO-SO-TABLE-MAX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index  5
DataItem PA0QW-PO-TABLE-MAX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PC_PRDCU_ID
DataItem PA0QW-PREV-CUSTOMER char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// op-cust-ord-id
DataItem PA0QW-PREV-OP1CUOID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// op-nike-ord-id
DataItem PA0QW-PREV-OP1NORID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// op-ord-part-char
DataItem PA0QW-PREV-OP1PARTN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PC_PRDCU_ID
DataItem PA0QW-PREV-PC2CUXID char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PC_PRDCU_ID
DataItem PA0QW-PREV-PC2CUXID-DUP char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PC_PO_ID_MO_RNG
DataItem PA0QW-PREV-PC3POIDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PC_PO_NBR
DataItem PA0QW-PREV-PC3PONBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Item-Seq-Nbr
DataItem PA0QW-PREV-PC6ITMNB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SY_STY_NBR
DataItem PA0QW-PREV-SY1STNBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_COLR_CD_ID
DataItem PA0QW-PREV-SY2CLRID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XDM_DIM_CD
DataItem PA0QW-PREV-XDMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XDS_DIR_SHIP_CD
DataItem PA0QW-PREV-XDSCD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XWH_WHSE_CD
DataItem PA0QW-PREV-XWHCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// KEY FIELD CHANGED FLAG
DataItem PA0QW-PROCESS-BY-CUSTOMER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// KEY FIELD CHANGED FLAG
DataItem PA0QW-PROCESS-TYPE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// USED IS PO TYPE DEFAULT
DataItem PA0QW-PRODUCT-CHANGED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-READ-ONLY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// = 'SO' OR 'PO'
DataItem PA0QW-RECORD-TYPE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// On Order size QTY fields
DataItem PA0QW-REMAIN-SHIPPED int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// indicates data requested
DataItem PA0QW-REQ-FOR-DATA-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-REQ-QTY-REMAIN int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-RESELECTED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SAVE INDEX INTO SO/PO WORK TBL
DataItem PA0QW-SAVE-INDEX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SAVE FROM CUSTOMER NEED DATE
DataItem PA0QW-SAVE-NEED1-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SAVE THRU CUSTOMER NEED DATE
DataItem PA0QW-SAVE-NEED2-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-SEL-FCTY-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-SELECT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-SELECT-MODIFIED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-SELECTION-UPDATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-SEQ-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-SETUP-CCC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// REDEF OF ZZZSDT OF VPAHDR01
DataItem PA0QW-SETUP-DATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-SETUP-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-SETUP-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-SETUP-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// OA ENTERED FLAG
DataItem PA0QW-SHOW-ALL-SO char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-SHOW-PRIOR-PO char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// KEY FIELD CHANGED FLAG
DataItem PA0QW-SIDE1-PRODUCT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SO-SIZE-QTY - PO-SIZE-QTY
DataItem PA0QW-SO-ADJ-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-SO-ADJ-QTY-GRP char(160)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TOTAL OF SALES ORDER SIZE QTY
DataItem PA0QW-SO-ORDER-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-SO-ORDER-QTY-GRP char(160)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-SO-PO-DIFF int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-SO-SELECTED-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SPACE
DataItem PA0QW-SPACE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY-COLR-CD-ID
DataItem PA0QW-SY2CLRID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-TEMP-PAGE-PRINTED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-TEMP-PO-GROUP char(372)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-TEMP-SO-GROUP char(372)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record group level
DataItem PA0QW-TEMP-STORE-GRP char(372)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-TOTAL-ADJ-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-TOTAL-BTS-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-TOTAL-ORDER-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-TOTAL-PO-ORDER-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-TRADE-REST-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-TRADE-REST-WARNING char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TEMP STORAGE PAGE LENGTH
DataItem PA0QW-TS-PAGE-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-TYPE-CHANGED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-UPDATE-COMMENT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// flag set for update
DataItem PA0QW-UPDATE-EXIST-HDR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// UPDATE DPRODA.VPAHDR01
DataItem PA0QW-UPDATE-HEADER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FROM XPPC020
DataItem PA0QW-VARIANCE-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0QW-VARIANCE-QTY-GRP char(160)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-VSOPOX01-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-WAREHOUSE-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XDM-DIM-CD
DataItem PA0QW-XDMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-XWHCD-BLANK-PRINTED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XDM-DIM-CD
DataItem PA0QW-YMTCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0QW-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// IOMOD count
DataItem PAM-COUNT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// IOMOD FUNCTION CODE
DataItem PAM-FUNCT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TOTAL RECORD LENGTH
DataItem PAM-GROUP char(45)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PAM-HI-PA1OANBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PAM-LOW-PA1OANBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// BAD RECORD COUNT
DataItem PAVCOUNT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ERROR FLAG
DataItem PAVERFLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RETURN MESSAGE NUMBER
DataItem PAVMSGNO smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Record group level
DataItem VPAITM02-GROUP char(268)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Key group level
DataItem VPAITM02-KEY char(96)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FACTORY FOUND FLAG
DataItem XP0DW-FACTORY-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0DW-FILL char(22)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0DW-FILLER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table for trade info
DataItem XP0DW-GROUP char(38)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0DW-MESSAGE char(37)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// save counter1
DataItem XP0DW-NUM-FACTORIES int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// end of table flag
DataItem XP0DW-POP-UP-DONE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0DW-STYLE-LABEL char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0DW-STYLE-MESSAGE char(37)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index  1
DataItem XP0DW-XX1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index  2
DataItem XP0DW-XX2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Component style search index
DataItem XX10 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

