package pa0b;
import corpcom2.XX0XW02;
import corpcom2.YSMREC;
import corpcom3.XPPA001;
import corpcom3.XPPA020;
import corpcom3.XPXCT01;
import corpcom3.XPXPL01;
import corpcom3.XPXX001;
import corpcom4.XSPAS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXPGUID;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpcom7.ZZZSTM;
import corpy2.YSMXDV;
import fb.common.FB9REC;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import pa.common.*;
import pc.common.PC2CUXID;
import pc.common.PC2REC;
import pc.common.PC6ETSDT;
import pg.common.PG1REC;
import pg.common.PG2REC;
import sy.common.SY1SSTNM;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VPAAFA01;
import vv.common.VPAAFH01;
import vv.common.VPAAFM01;
import xx.common.*;
import xx.common.KUCCOID;
import xx.common.KUMSTRID;
import xx.common.XCTCD;
import xx.common.XNXCD;
import xx.common.ZZZCHGCT;
import xx.common.ZZZCHGDT;
import xx.common.ZZZCHGTM;
import xx.common.ZZZSDT;
import xx02.*;
import xx02.XCTTBL;
import xx02.XDMCD;
import xx04.*;
import xx04.XPLCD;
import xx04.XPLDESC;
import xx04.XPLTBL;
import xx07.*;
import xx07.YESCD;
import xx08.*;
import xx08.SY1STNBR;
//*** PROGRAM=PA0B ****
// THIS APPLICATION ALLOWS A USER TO SELECT A LIST OF AIR
// FREIGHT RECORDS FOR FURTHER PROCESSING IN THE AIR FREIGHT
// SYSTEM.  THE APPLICATION CAN TRANSFER THESE RECORDS TO
// OTHER ORDER ADJUSTMENT SCREENS.
// 
// THERE IS ONLY ONE SCREEN IN THIS APPLICATION, EXCLUDING THE
// POPUP SCREENS FOR CORPORATE TABLES AND HEADER COMMENTS.
// 
// THE USER MAY EXIT TO ANOTHER APPLICATION AT ANY TIME VIA
// FASTPATH OR PF KEY.
// ------------------------------------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          02/07/94  JALLE1  NEW APPLICATION
//                    MSMIT2  WHEN SHOWING UN-APPROVED, DON'T
//                            SHOW STATUS '98'. ALSO, PA0B-310
//                            ABENDING WITH INDEX PAWOAIDX.
// PA9999   01/24/95  MSMIT2  ALLOW INQUIRY ONLY FOR EUROPEAN
//                            O/AS.
// ECF      02/22/95  JALLE1  MISC CHANGES FOR EUROPE.
// ECF      04/13/95  LREIN   change in display end afrgt id
// PA113    12/06/95  jcarl1  added length to oa qty field for
//                            wrapfit.
//          09/05/96  SKEOBO  Expand Factory Code to 3 bytes.
// Y2KFIX   12/08/97  DKENNY  Y2K MODIFICATIONS MADE TO:
//                            PA0BM001
// Y2KFIX   05/13/98  CSAWKI  Y2K MODIFICATIONS MADE TO:
//                            PA0BM001 - RIGHT JUSTIFY CURR BUY
// PA679              MSEVAL  CHANGE OA SYSTEM FOR 'AF's.
// 9999     07/25/01  greddy  OA number reset changes.
// *********************
Program PA0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FB9REC FB9REC; // record
  FY1REC FY1REC; // record
  PA0BW00 PA0BW00; // record
  PA0BW01 PA0BW01; // record
  PA1REC PA1REC; // record
  PA2REC PA2REC; // record
  PACREC PACREC; // record
  PAFREC PAFREC; // record
  PAWREC PAWREC; // record
  PC2REC PC2REC; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VPAAFA01 VPAAFA01; // record
  VPAAFC01 VPAAFC01; // record
  VPAAFH01 VPAAFH01; // record
  VPAAFM01 VPAAFM01; // record
  XX0XW02 XX0XW02; // record
  YSMREC YSMREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XPLTBL {deleteAfterUse = yes}; // table
  use XCTTBL {deleteAfterUse = yes}; // table
  use PA0BM.PA0BM001, // form
  	PA0BM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPA001: XPPA001();
    goto PA0B-005;
    PA0B-005: PA0B-005();
    ;
    goto PA0B-010; /* Main process to display a map*/
    ;
    PA0B-010: PA0B-010();
    ;
    goto PA0B-010; /* Main process to display a map*/
    ;
  end // end main
end // end PA0B

// Special application init
Function PA0B-005()
   /* ------------------------------------------------------------*/
   /* Initialize working storage and display storage areas.*/
   /* ------------------------------------------------------------*/
  ;
  set PA0BW00 empty; /* Working storage*/
  set PA0BW01 empty; /* Display storage*/
  set SQLCA empty; /* SQL communication area*/
  set TAEREC empty; /* Error diagnosis information*/
  set TA1REC empty; /* Error diagnosis parameters*/
  ;
  set PA0BM001 initial; /* M001 map input/output*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Initialize temporary storage variables.*/
   /* ------------------------------------------------------------*/
  ;
  PA0BW00.PA0BW-REQUEST-DATA-SW = "N"; /* Init data switch*/
  PA0BW00.PA0BW-FMAT-MAP-SW = "N"; /* Format the map switch*/
  PA0BW00.PA0BW-TEMP-STOR-PG-UPDT-SW = "N"; /* Temp storage updt sw*/
  ;
  PA0BW00.PA0BW-NBR-MAP-ROWS = 5; /* Nbr of rows on map*/
  PA0BW00.PA0BW-MAX-NBR-OF-PA1OANBR = 25; /* Nbr pa1oanbr on PAWREC*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Setup DEFAULT values on map.*/
   /* ------------------------------------------------------------*/
  ;
  COMMAREA.XGPCD = "02"; /* Default GPC to '02'*/
  ;
  ;
  set VPAAFM01 empty; /* Init record*/
  VPAAFM01.PA-AFRGT-APVL-MGR = COMMAREA.CAUSERID;
  ;
  PA0BS-20-IO7110-S(); /* Select DPRODA.VPAAFM01*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
    PA0BM001.PA-AFRGT-APVL-MGR = COMMAREA.CAUSERID;
  else
    PA0BM001.PA-AFRGT-APVL-MGR = "      ";
  end
  ;
  ;
   /* ===> GET DEFAULT A/F RQT NBRS*/
  ;
  set VPAAFC01 empty; /* Initialize DPRODA.VPAAFC01 record*/
  ;
  PA0BS-01-IO7050-S(); /* Select "s" from DPRODA.VPAAFC01*/
  ;
  PA0BM001.PA0BM-BEG-AFRGT-RQT-ID = 1; /* Beg A/F rqt nbr*/
  VPAAFC01.PA-AFRGT-NXT-ID = VPAAFC01.PA-AFRGT-NXT-ID - 1; /* Calc last day*/
  PA0BM001.PA0BM-END-AFRGT-RQT-ID = VPAAFC01.PA-AFRGT-NXT-ID;
  PA0BW00.PA0BM-END-AFRGT-RQT-ID = VPAAFC01.PA-AFRGT-NXT-ID;
  ;
  ;
   /* ===> SET DEFAULT BUY MONTHS*/
  ;
  XPPA020(); /* Obtain current buy date*/
  ;
  PA0BW00.PA0BW-CCYYMMDD = PAWREC.PAWBUYDT; /* Move to work date*/
  PA0BM001.PA0BM-CURR-BUY-MO = PA0BW00.PA0BW-YYMM; /* Current buy month*/
  ;
  PA0BW00.PA0BW-CCYYMM = PA0BW00.PA0BW-CCYYMM - 100; /* Subtract a year*/
  PA0BM001.PA0BM-BEG-ORD-ADJ-BUY-MO = PA0BW00.PA0BW-YYMM; /* From buy date*/
  ;
  PA0BW00.PA0BW-CCYYMM = PA0BW00.PA0BW-CCYYMM + 200; /* Add 2 years*/
  PA0BM001.PA0BM-END-ORD-ADJ-BUY-MO = PA0BW00.PA0BW-YYMM; /* To buy date*/
  ;
  ;
   /* ===> SET DEFAULT FLAGS*/
  ;
  PA0BM001.PA0BM-HDR-AFRGT-APVL-FL = "N"; /* A/F approved flag*/
   /* MOVE 'N' TO PA0BM001.PA0BM-HDR-AFRGT-CNCL-FL;/* A/F cancelled flag*/
  PA0BM001.PA0BM-HDR-AFRGT-CNCL-FL = " "; /* A/F cancelled flag*/
  PA0BM001.PA0BM-HDR-NEED-BLTO-FL = " "; /* Need bill to flag*/
  ;
  ;
   /* ===> SET DEFAULT SUM XDV CODE*/
  ;
  PA0BM001.YSMXDV = " "; /* INIT TO ALL DIVISIONS*/
  ;
  if (COMMAREA.CAILVL[1] == "N") /* DEFAULT DIVISION TO ' '*/
    ;
    PA0BS-02-IO2640-S();
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && YSMREC.XXXSTAT == "A")
      PA0BM001.YSMXDV = YSMREC.YSMSUMCD;
    end
    ;
  end
  ;
  ;
end // end PA0B-005

// Main process to display map
Function PA0B-010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  PA0B-100(); /* Obtain the data to display*/
  PA0B-200(); /* Format and display the map*/
  PA0B-300(); /* Check attention identifier*/
  PA0B-400(); /* Reset fields to normal intensity*/
  PA0B-500(); /* Verify the entered data*/
  PA0B-600(); /* Process valid input request*/
  ;
  ;
end // end PA0B-010

// Obtain data to display
Function PA0B-100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (PA0BW00.PA0BW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  PA0BW00.XXXTSLEN = 778; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (PAWREC.XXXMSGNO == 0) /* No message to display*/
    PA0BW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  PA0BS-03-TA0050-P(); /* Purge temp storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare and process a cursor to get all O/A and air freight*/
   /* requests.*/
   /* --------------------------------------------------------------*/
  ;
  PA0BW00.PA0BW-IDX = 0; /* Init line index*/
  ;
  set VPAAFH01 empty;
  set PA1REC empty;
  ;
  PA0B-110(); /* Format PAFREC*/
  ;
  PA0BW00.PA0BW-END-AFRGT-CSR-SW = "N"; /* Init cursor switch*/
  ;
  PA0BS-11-PA1070-S1(); /* Declare the afrgt cursor*/
  PA0BS-12-PA1070-N1(); /* Fetch first afrgt record*/
  ;
  if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
    PA0BW00.PA0BW-END-AFRGT-CSR-SW = "Y";
  end
  ;
  while (PA0BW00.PA0BW-END-AFRGT-CSR-SW == "N") /* Until end of cursor*/
    ;
    /* TCS PA679*/
    if (PA1REC.YETCD == "DM" || PA1REC.YETCD == "NM")
      if (PA0BM001.PA0BM-SCHEDULER-XXXUSER != " "
       && PG1REC.PG1SC4CD != PA1REC.PG1SC4CD)
        /* NEXT SENTENCE - SKIP THIS RECORD*/
      else
        if (PA0BM001.PA0BM-HDR-AFRGT-APVL-FL == "N"
         && (PA1REC.YESCD == "98"
         || PA1REC.YESCD == "75")) /* CANCELLED OR COMPLETED*/
          /* NEXT SENTENCE - SKIP THIS RECORD*/
        else
          PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "Y";
          ;
          if (PA0BM001.XPLCD != " ") /* If xplcd entered*/
            ;
            set PG2REC empty;
            PG2REC.XGPCD = "02";
            PG2REC.SY1STNBR = PA1REC.SY1STNBR;
            PG2REC.SY2CLRID = PA1REC.SY2CLRID;
            PG2REC.XDMCD = PA1REC.XDMCD;
            ;
            PA0BS-08-IO3120-S(); /* Select DPRODG.VSYCLR01*/
            ;
            if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
              PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "N";
            else
              if (PG2REC.XPLCD != PA0BM001.XPLCD) /* Different xpl*/
                PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "N";
              end
            end
          end
          ;
          ;
          if (PA0BM001.PA-AFRGT-APVL-MGR > " " /* Mgr entered*/
           && PA0BM001.PA0BM-HDR-AFRGT-APVL-FL > " ")
                                   /* And aprval specified*/
            ;
            PA0B-130(); /* Check afrgt approval*/
            ;
            if (PA0BM001.PA0BM-HDR-AFRGT-APVL-FL == "Y" /* Approved requested*/
             && PA0BW00.PA0BW-AFRGT-APRVD-SW == "N")   
                                   /* And no approval found*/
              PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "N";
            else
              ;
              if (PA0BM001.PA0BM-HDR-AFRGT-APVL-FL == "N"
               /* Not approved rqst*/
               && PA0BW00.PA0BW-AFRGT-APRVD-SW == "Y")
                                   /* And approval found*/
                PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "N";
              end
            end
          end
          ;
          ;
          if (PA0BW00.PA0BW-WRITE-AFRGT-REC-SW == "Y")
            PA0BS-120(); /* Select and write item records*/
          end
          ;
        end
      end
      ;
    end
    /* TCS PA679*/
    PA0BS-12-PA1070-N1(); /* Fetch next afrgt record*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      PA0BW00.PA0BW-END-AFRGT-CSR-SW = "Y";
    end
  end
  ;
  PA0BS-13-PA1070-C1(); /* Close the afrgt cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Add any partially formatted page to temporary storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (PA0BW00.PA0BW-IDX > 0) /* Data formatted*/
    PA0BS-04-TA0050-A(); /* Add page to temporary storage queue*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data found, set message.*/
   /* --------------------------------------------------------------*/
  ;
  if (PA0BW00.TA5TSQIX == 0) /* No data found*/
    ;
    PAWREC.XXXMODID = "100"; /* Module identification*/
    converseLib.validationFailed(15); /* No data to display*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  PA0BW00.PA0BW-REQUEST-DATA-SW = "N";
  PA0BW00.PA0BW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end PA0B-100

// Format PAFREC
Function PA0B-110()
   /* --------------------------------------------------------------*/
   /* Format the data to PAFREC.  This data will be passed to*/
   /* declare a cursor in PA1070.*/
   /* --------------------------------------------------------------*/
  ;
  set PAFREC empty;
  ;
  if (PA0BM001.PA0BM-BEG-AFRGT-RQT-ID == 0) /* If not entered*/
    PAFREC.PAF-LO-PA-AFRGT-RQT-ID = 1; /* MUST HAVE AF NUMBER*/
  else
    PAFREC.PAF-LO-PA-AFRGT-RQT-ID = PA0BM001.PA0BM-BEG-AFRGT-RQT-ID; /* Begining afrgt id*/
  end
  ;
  if (PA0BM001.PA0BM-END-AFRGT-RQT-ID == 0) /* If not entered*/
    PAFREC.PAF-HI-PA-AFRGT-RQT-ID = -1; /* Wildcard*/
  else
    PAFREC.PAF-HI-PA-AFRGT-RQT-ID = PA0BM001.PA0BM-END-AFRGT-RQT-ID; /* Ending afrgt id*/
  end
  ;
   /* greddy - 07/25/01 Changes to facilitate OA num reset*/
  ;
  if (PA0BM001.PA0BM-BEG-ORD-ADJ-NBR == 0) /* If not entered*/
    PAFREC.PAF-LO-PA-ORD-ADJ-NBR1 = -1; /* Wildcard*/
    PAFREC.PAF-LO-PA-ORD-ADJ-NBR2 = -1; /* Wildcard*/
   /* ELSE;*/
   /* MOVE PA0BM001.PA0BM-BEG-ORD-ADJ-NBR*/
   /* TO PAFREC.PAF-LO-PA-ORD-ADJ-NBR; /* Beginning ord adj nbr*/
  end
  ;
  if (PA0BM001.PA0BM-END-ORD-ADJ-NBR == 0) /* If not entered*/
    PAFREC.PAF-HI-PA-ORD-ADJ-NBR1 = -1; /* Wildcard*/
    PAFREC.PAF-HI-PA-ORD-ADJ-NBR2 = -1; /* Wildcard*/
   /* ELSE;*/
   /* MOVE PA0BM001.PA0BM-END-ORD-ADJ-NBR*/
   /* TO PAFREC.PAF-HI-PA-ORD-ADJ-NBR; /* Ending ord adj nbr*/
  end
  ;
  PA0B-11010();
  ;
   /* greddy - 07/25/01 Changes end*/
  ;
  if (PA0BM001.PA0BM-BEG-ORD-ADJ-BUY-MO == 0) /* If not entered*/
    PAFREC.PAF-LO-PA-ORD-ADJ-BUY-MO = -1; /* Wildcard*/
  else
    PA0BW00.PA0BW-YYMM = PA0BM001.PA0BM-BEG-ORD-ADJ-BUY-MO; /* Move to ws to reformat*/
    if (PA0BW00.PA0BW-YY <= 70)
      PA0BW00.PA0BW-CC = 20;
    else
      PA0BW00.PA0BW-CC = 19;
    end
    PAFREC.PAF-LO-PA-ORD-ADJ-BUY-MO = PA0BW00.PA0BW-CCYYMM;
  end
  ;
  if (PA0BM001.PA0BM-END-ORD-ADJ-BUY-MO == 0) /* If not entered*/
    PAFREC.PAF-HI-PA-ORD-ADJ-BUY-MO = -1; /* Wildcard*/
  else
    PA0BW00.PA0BW-YYMM = PA0BM001.PA0BM-END-ORD-ADJ-BUY-MO; /* Move to ws to reformat*/
    if (PA0BW00.PA0BW-YY <= 70)
      PA0BW00.PA0BW-CC = 20;
    else
      PA0BW00.PA0BW-CC = 19;
    end
    PAFREC.PAF-HI-PA-ORD-ADJ-BUY-MO = PA0BW00.PA0BW-CCYYMM;
  end
  ;
  if (PA0BM001.PA0BM-HDR-AFRGT-APVL-FL == " ") /* If not entered*/
    PAFREC.PA-AFRGT-APVL-FL = "*"; /* Wilcard*/
  else
    PAFREC.PA-AFRGT-APVL-FL = PA0BM001.PA0BM-HDR-AFRGT-APVL-FL;
  end
  ;
  if (PA0BM001.PA0BM-HDR-AFRGT-CNCL-FL == " ") /* If not entered*/
    PAFREC.PA-AFRGT-CNCL-FL = "*"; /* Wilcard*/
  else
    PAFREC.PA-AFRGT-CNCL-FL = PA0BM001.PA0BM-HDR-AFRGT-CNCL-FL;
  end
  ;
  if (PA0BM001.YSMXDV == " ") /* If not entered*/
    PAFREC.YSMXDV = "*"; /* Wilcard*/
  else
    PAFREC.YSMXDV = PA0BM001.YSMXDV; /* Sum div*/
  end
  ;
  if (PA0BM001.PA0BM-HDR-NEED-BLTO-FL == " ") /* If not entered*/
    PAFREC.PA-NEED-BLTO-FL = "*"; /* Wilcard*/
  else
    PAFREC.PA-NEED-BLTO-FL = PA0BM001.PA0BM-HDR-NEED-BLTO-FL;
  end
  ;
  if (PA0BM001.PA0BM-HDR-SY1STNBR == " ") /* If not entered*/
    PAFREC.SY1STNBR = "*"; /* Wilcard*/
  else
    PAFREC.SY1STNBR = PA0BM001.PA0BM-HDR-SY1STNBR; /* Style*/
  end
  ;
  if (PA0BM001.PA0BM-HDR-SY2CLRID == " ") /* If not entered*/
    PAFREC.SY2CLRID = "*"; /* Wilcard*/
  else
    PAFREC.SY2CLRID = PA0BM001.PA0BM-HDR-SY2CLRID; /* Color*/
  end
  ;
  if (PA0BM001.PA0BM-HDR-XDMCD == " ") /* If not entered*/
    PAFREC.XDMCD = "*"; /* Wilcard*/
  else
    PAFREC.XDMCD = PA0BM001.PA0BM-HDR-XDMCD; /* Dim*/
  end
  ;
  ;
end // end PA0B-110

// Validate OA number range
Function PA0B-11010()
  if (PA0BM001.PA0BM-BEG-ORD-ADJ-NBR > 0
   || PA0BM001.PA0BM-END-ORD-ADJ-NBR > 0) /* If either nbr entered*/
    ;
    if (PA0BM001.PA0BM-END-ORD-ADJ-NBR > PA0BM001.PA0BM-BEG-ORD-ADJ-NBR
     && PA0BM001.PA0BM-END-ORD-ADJ-NBR > 139999
     && PA0BM001.PA0BM-BEG-ORD-ADJ-NBR < 140000)
      if (PA0BM001.PA0BM-BEG-ORD-ADJ-NBR > 0)
        PAFREC.PAF-LO-PA-ORD-ADJ-NBR1 = PA0BM001.PA0BM-BEG-ORD-ADJ-NBR;
        PAFREC.PAF-LO-PA-ORD-ADJ-NBR2 = PA0BM001.PA0BM-BEG-ORD-ADJ-NBR;
        PAFREC.PAF-HI-PA-ORD-ADJ-NBR1 = 139999;
        PAFREC.PAF-HI-PA-ORD-ADJ-NBR2 = 139999;
      else
        PAFREC.PAF-HI-PA-ORD-ADJ-NBR1 = PA0BM001.PA0BM-END-ORD-ADJ-NBR;
        PAFREC.PAF-HI-PA-ORD-ADJ-NBR2 = PA0BM001.PA0BM-END-ORD-ADJ-NBR;
        PAFREC.PAF-LO-PA-ORD-ADJ-NBR1 = 139999;
        PAFREC.PAF-LO-PA-ORD-ADJ-NBR2 = 139999;
      end
    end
    ;
    if (PA0BM001.PA0BM-END-ORD-ADJ-NBR > PA0BM001.PA0BM-BEG-ORD-ADJ-NBR)
      if (PA0BM001.PA0BM-BEG-ORD-ADJ-NBR > 139999
       || PA0BM001.PA0BM-END-ORD-ADJ-NBR < 140000)
        PAFREC.PAF-LO-PA-ORD-ADJ-NBR1 = PA0BM001.PA0BM-BEG-ORD-ADJ-NBR;
        PAFREC.PAF-LO-PA-ORD-ADJ-NBR2 = PA0BM001.PA0BM-BEG-ORD-ADJ-NBR;
        PAFREC.PAF-HI-PA-ORD-ADJ-NBR1 = PA0BM001.PA0BM-END-ORD-ADJ-NBR;
        PAFREC.PAF-HI-PA-ORD-ADJ-NBR2 = PA0BM001.PA0BM-END-ORD-ADJ-NBR;
      end
    end
    ;
    if (PA0BM001.PA0BM-BEG-ORD-ADJ-NBR > PA0BM001.PA0BM-END-ORD-ADJ-NBR
     && PA0BM001.PA0BM-BEG-ORD-ADJ-NBR > 139999
     && PA0BM001.PA0BM-END-ORD-ADJ-NBR < 140000)
      PAFREC.PAF-LO-PA-ORD-ADJ-NBR1 = PA0BM001.PA0BM-BEG-ORD-ADJ-NBR;
      PAFREC.PAF-LO-PA-ORD-ADJ-NBR2 = 1;
      PAFREC.PAF-HI-PA-ORD-ADJ-NBR1 = 199999;
      PAFREC.PAF-HI-PA-ORD-ADJ-NBR2 = PA0BM001.PA0BM-END-ORD-ADJ-NBR;
    end
    ;
  end
end // end PA0B-11010

// Save data in display storage
Function PA0B-121()
   /* --------------------------------------------------------------*/
   /* Increment the line index.*/
   /* --------------------------------------------------------------*/
  ;
  PA0BW00.PA0BW-IDX = PA0BW00.PA0BW-IDX + 1; /* Increment*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If first line on page, save the header information.*/
   /* --------------------------------------------------------------*/
  ;
  if (PA0BW00.PA0BW-IDX == 1) /* If first line on page*/
    ;
    PA0BW00.PA0BW-CCYYMMDD = PAWREC.PAWBUYDT;
    PA0BW01.PA0BM-CURR-BUY-MO = PA0BW00.PA0BW-YYMM; /* Buy month*/
    ;
    PA0BW01.PA-AFRGT-APVL-MGR = PA0BM001.PA-AFRGT-APVL-MGR; /* Approval mgr*/
    PA0BW01.XPLCD = PA0BM001.XPLCD; /* Product line*/
    PA0BW01.PA0BM-BEG-AFRGT-RQT-ID = PA0BM001.PA0BM-BEG-AFRGT-RQT-ID; /* A/F Req Nbr*/
    PA0BW01.PA0BM-END-AFRGT-RQT-ID = PA0BM001.PA0BM-END-AFRGT-RQT-ID; /* A/F Req Nbr*/
    PA0BW01.PA0BM-BEG-ORD-ADJ-NBR = PA0BM001.PA0BM-BEG-ORD-ADJ-NBR; /* O/A Req Nbr*/
    PA0BW01.PA0BM-END-ORD-ADJ-NBR = PA0BM001.PA0BM-END-ORD-ADJ-NBR; /* O/A Req Nbr*/
    PA0BW01.PA0BM-BEG-ORD-ADJ-BUY-MO = PA0BM001.PA0BM-BEG-ORD-ADJ-BUY-MO; /* Buy month*/
    PA0BW01.PA0BM-END-ORD-ADJ-BUY-MO = PA0BM001.PA0BM-END-ORD-ADJ-BUY-MO; /* Buy month*/
    PA0BW01.PA0BM-HDR-AFRGT-APVL-FL = PA0BM001.PA0BM-HDR-AFRGT-APVL-FL; /* Approved*/
    PA0BW01.PA0BM-HDR-AFRGT-CNCL-FL = PA0BM001.PA0BM-HDR-AFRGT-CNCL-FL; /* Cancelled*/
    PA0BW01.YSMXDV = PA0BM001.YSMXDV; /* Sum div cd*/
    PA0BW01.PA0BM-HDR-NEED-BLTO-FL = PA0BM001.PA0BM-HDR-NEED-BLTO-FL; /* Need bill to info*/
    PA0BW01.PA0BM-ETS-PAST-DT = PA0BM001.PA0BM-ETS-PAST-DT; /* ETS past*/
    PA0BW01.PA0BM-HDR-SY1STNBR = PA0BM001.PA0BM-HDR-SY1STNBR;
    PA0BW01.PA0BM-HDR-SY2CLRID = PA0BM001.PA0BM-HDR-SY2CLRID;
    PA0BW01.PA0BM-HDR-XDMCD = PA0BM001.PA0BM-HDR-XDMCD; /* Dimension*/
    PA0BW01.XCTCD = PA0BM001.XCTCD; /* Country*/
    PA0BW01.PA0BM-HDR-FY1FCTYC = PA0BM001.PA0BM-HDR-FY1FCTYC; /* Fcty*/
    PA0BW01.PA0BW-SCHEDULER-XXXUSER = PA0BM001.PA0BM-SCHEDULER-XXXUSER;
    PA0BW01.PC2CUXID = PA0BM001.PC2CUXID; /* Cust xref*/
    PA0BW01.KUCCOID = PA0BM001.KUCCOID; /* Customer nbr*/
    PA0BW01.KUMSTRID = PA0BM001.KUMSTRID; /* Store*/
    PA0BW01.XNXCD = PA0BM001.XNXCD; /* Dept*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  PA0BW01.PA0BM-SEL[PA0BW-IDX] = " "; /* Select*/
  PA0BW01.PA-AFRGT-RQT-ID[PA0BW-IDX] = VPAAFH01.PA-AFRGT-RQT-ID; /* A/F ID*/
  PA0BW01.PA1OANBR[PA0BW-IDX] = PA1REC.PA1OANBR; /* O/A nbr*/
  PA0BW01.YESCD[PA0BW-IDX] = PA1REC.YESCD; /* Status*/
  PA0BW01.PA1HLDFL[PA0BW-IDX] = PA1REC.PA1HLDFL; /* Hold flag*/
  PA0BW01.SY1STNBR[PA0BW-IDX] = PA1REC.SY1STNBR; /* Style*/
  PA0BW01.SY2CLRID[PA0BW-IDX] = PA1REC.SY2CLRID; /* Color*/
  PA0BW01.XDMCD[PA0BW-IDX] = PA1REC.XDMCD; /* Dimension*/
  PA0BW01.SY1SSTNM[PA0BW-IDX] = PG2REC.SY1SSTNM; /* Style desc*/
  ;
  PA0BW00.PA0BW-CCYYMMDD = VPAAFH01.ZZZSDT; /* Reformat the date*/
  PA0BW00.PA0BW-FMAT-MM = PA0BW00.PA0BW-MM;
  PA0BW00.PA0BW-FMAT-DD = PA0BW00.PA0BW-DD;
  PA0BW00.PA0BW-FMAT-YY = PA0BW00.PA0BW-YY;
  PA0BW01.ZZZSDT[PA0BW-IDX] = PA0BW00.PA0BW-FMAT-MMDDYY; /* Req dt*/
  ;
  PA0BW01.PA-AFRGT-APVL-FL[PA0BW-IDX] = VPAAFH01.PA-AFRGT-APVL-FL; /* Approved flag*/
  PA0BW01.PA-AFRGT-CNCL-FL[PA0BW-IDX] = VPAAFH01.PA-AFRGT-CNCL-FL; /* Cancelled flag*/
  PA0BW01.PA-NEED-BLTO-FL[PA0BW-IDX] = VPAAFH01.PA-NEED-BLTO-FL; /* Need bill to flag*/
  PA0BW01.PA-RSN-COMNT1[PA0BW-IDX] = VPAAFH01.PA-RSN-COMNT1; /* Reason comment*/
  PA0BW01.XXXPGUID[PA0BW-IDX] = PA1REC.XXXPGUID; /* Req by id*/
  ;
  if (PA0BW00.PA0BW-PAITM-EXIST-SW == "Y") /* If item exists*/
    PA0BW01.PA0BM-ITM-FL[PA0BW-IDX] = "Y"; /* Set flag 'y'*/
    ;
    PA0BW00.PA0BW-CCYYMMDD = PA0BW00.PC6ETSDT; /* Refmat the date*/
    PA0BW00.PA0BW-FMAT-MM = PA0BW00.PA0BW-MM;
    PA0BW00.PA0BW-FMAT-DD = PA0BW00.PA0BW-DD;
    PA0BW00.PA0BW-FMAT-YY = PA0BW00.PA0BW-YY;
    PA0BW01.PC6ETSDT[PA0BW-IDX] = PA0BW00.PA0BW-FMAT-MMDDYY;
    ;
    PA0BW01.FY1FCTYC[PA0BW-IDX] = PA0BW00.FY1FCTYC; /* Factory*/
    PA0BW01.PA0BM-AF-TOTAL-QTY[PA0BW-IDX] = PA0BW00.PA0BM-AF-TOTAL-QTY; /* Tot oa af qty*/
  else
    PA0BW01.PA0BM-ITM-FL[PA0BW-IDX] = "N"; /* Set flag 'n'*/
    PA0BW01.PC6ETSDT[PA0BW-IDX] = 0; /* Latest ETS*/
    PA0BW01.FY1FCTYC[PA0BW-IDX] = " "; /* Factory*/
    PA0BW01.PA0BM-AF-TOTAL-QTY[PA0BW-IDX] = 0; /* AF qty*/
  end
  ;
end // end PA0B-121

// Check air freight aprvl (grp)
Function PA0B-130()
   /* --------------------------------------------------------------*/
   /* Get the approval group for the current A/F approval mgr.*/
   /* --------------------------------------------------------------*/
  ;
  set VPAAFM01 empty;
  VPAAFM01.PA-AFRGT-APVL-MGR = PA0BM001.PA-AFRGT-APVL-MGR;
  ;
  PA0BS-20-IO7110-S(); /* Select DPRODA.VPAAFM01*/
  ;
   /* --------------------------------------------------------------*/
   /* Now check to see if anyone from this group has approved the A/F.*/
   /* --------------------------------------------------------------*/
  ;
  PA0BW00.PA0BW-AFRGT-APRVD-SW = "N";
  PA0BW00.PA0BW-END-PAAFM-CSR-SW = "N";
  ;
  PA0BS-22-IO7110-S1(); /* Select DPRODA.VPAAFM01 cursor*/
  PA0BS-23-IO7110-N1(); /* Fetch DPRODA.VPAAFM01 row*/
  ;
  if (SQLCA.VAGen_SQLCODE == +100)
    PA0BW00.PA0BW-END-PAAFM-CSR-SW = "Y";
  end
  ;
  while (PA0BW00.PA0BW-END-PAAFM-CSR-SW != "Y" /* Until end of cursor*/
   && PA0BW00.PA0BW-AFRGT-APRVD-SW != "Y") /* or a/f approved*/
    ;
    set VPAAFA01 empty;
    VPAAFA01.PA-AFRGT-APVL-MGR = VPAAFM01.PA-AFRGT-APVL-MGR;
    VPAAFA01.PA-AFRGT-RQT-ID = VPAAFH01.PA-AFRGT-RQT-ID;
    ;
    PA0BS-21-IO7100-S(); /* Select DPRODA.VPAAFA01*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* If row found*/
      PA0BW00.PA0BW-AFRGT-APRVD-SW = "Y";
    end
    ;
    PA0BS-23-IO7110-N1(); /* Fetch DPRODA.VPAAFM01 row*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100)
      PA0BW00.PA0BW-END-PAAFM-CSR-SW = "Y";
    end
  end
  ;
  PA0BS-24-IO7110-C1(); /* Close DPRODA.VPAAFM01 cursor*/
  ;
  ;
end // end PA0B-130

// Format and converse the map
Function PA0B-200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    PAWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BW00.PA0BW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    PA0B-210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  PA0BM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  PA0BM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  PA0BM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (PAWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set PA0BM001 alarm; /* Indicate sound alarm*/
    ;
    if (PAWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (PAWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(PAWREC.XXXMSGNO);
      end /* Message number*/
    else
      PA0BM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    PA0BM001.XXXMODID = PAWREC.XXXMODID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format all key descriptions.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BM001.XPLCD != " ") /* If code entered*/
    ;
    if (PA0BM001.XPLCD in XPLTBL.XPLCD
     && XPLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* If in table and active status*/
      ;
      PA0BM001.XPLSDESC = XPLTBL.XPLSDESC[sysVar.arrayIndex]; /* XPL desc*/
    else
      PA0BM001.XPLSDESC = "************"; /* Move asterisks - invalid*/
    end
  else
    PA0BM001.XPLSDESC = "            "; /* Move spaces to desc*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BW00.TA5TSQIX == 0) /* No data formatted*/
    ;
    set PA0BM001.XXXTSPAG invisible, skip;
    set PA0BM001.TA5TSQIX invisible, skip;
    ;
    PA0BW00.PA0BW-IDX = 1; /* Init index*/
    ;
    while (PA0BW00.PA0BW-IDX <= PA0BW00.PA0BW-NBR-MAP-ROWS) /* For all lines*/
      ;
      set PA0BM001.PA0BM-SEL[PA0BW-IDX] invisible, skip;
      set PA0BM001.PA-AFRGT-RQT-ID[PA0BW-IDX] invisible, skip;
      set PA0BM001.PA1OANBR[PA0BW-IDX] invisible, skip;
      set PA0BM001.YESCD[PA0BW-IDX] invisible, skip;
      set PA0BM001.PA1HLDFL[PA0BW-IDX] invisible, skip;
      set PA0BM001.PA0BM-ITM-FL[PA0BW-IDX] invisible, skip;
      set PA0BM001.PC6ETSDT[PA0BW-IDX] invisible, skip;
      set PA0BM001.FY1FCTYC[PA0BW-IDX] invisible, skip;
      set PA0BM001.SY1STNBR[PA0BW-IDX] invisible, skip;
      set PA0BM001.SY2CLRID[PA0BW-IDX] invisible, skip;
      set PA0BM001.XDMCD[PA0BW-IDX] invisible, skip;
      set PA0BM001.SY1SSTNM[PA0BW-IDX] invisible, skip;
      set PA0BM001.PA0BM-AF-TOTAL-QTY[PA0BW-IDX] invisible, skip;
      set PA0BM001.ZZZSDT[PA0BW-IDX] invisible, skip;
      set PA0BM001.PA-AFRGT-APVL-FL[PA0BW-IDX] invisible, skip;
     /* SET PA0BM001.PA-AFRGT-CNCL-FL(PA0BW-IDX) DARK,AUTOSKIP;*/
      set PA0BM001.PA-NEED-BLTO-FL[PA0BW-IDX] invisible, skip;
      set PA0BM001.PA0BM-REASON-TXT[PA0BW-IDX] invisible, skip;
      set PA0BM001.PA-RSN-COMNT1[PA0BW-IDX] invisible, skip;
      set PA0BM001.PA0BM-REQBY-TXT[PA0BW-IDX] invisible, skip;
      set PA0BM001.XXXPGUID[PA0BW-IDX] invisible, skip;
      ;
      PA0BW00.PA0BW-IDX = PA0BW00.PA0BW-IDX + 1; /* Increment*/
    end
  else
    ;
    ;
    PA0BW00.PA0BW-IDX = 1; /* Init index*/
    ;
    while (PA0BW00.PA0BW-IDX <= PA0BW00.PA0BW-NBR-MAP-ROWS) /* For all lines*/
      ;
      if (PA0BM001.PA-AFRGT-RQT-ID[PA0BW-IDX] == 0) /* No data on line*/
        ;
        set PA0BM001.PA0BM-SEL[PA0BW-IDX] invisible, skip;
        set PA0BM001.PA-AFRGT-RQT-ID[PA0BW-IDX] invisible, skip;
        set PA0BM001.PA1OANBR[PA0BW-IDX] invisible, skip;
        set PA0BM001.YESCD[PA0BW-IDX] invisible, skip;
        set PA0BM001.PA1HLDFL[PA0BW-IDX] invisible, skip;
        set PA0BM001.PA0BM-ITM-FL[PA0BW-IDX] invisible, skip;
        set PA0BM001.PC6ETSDT[PA0BW-IDX] invisible, skip;
        set PA0BM001.FY1FCTYC[PA0BW-IDX] invisible, skip;
        set PA0BM001.SY1STNBR[PA0BW-IDX] invisible, skip;
        set PA0BM001.SY2CLRID[PA0BW-IDX] invisible, skip;
        set PA0BM001.XDMCD[PA0BW-IDX] invisible, skip;
        set PA0BM001.SY1SSTNM[PA0BW-IDX] invisible, skip;
        set PA0BM001.PA0BM-AF-TOTAL-QTY[PA0BW-IDX] invisible, skip;
        set PA0BM001.ZZZSDT[PA0BW-IDX] invisible, skip;
        set PA0BM001.PA-AFRGT-APVL-FL[PA0BW-IDX] invisible, skip;
       /* SET PA0BM001.PA-AFRGT-CNCL-FL(PA0BW-IDX) DARK,AUTOSKIP;*/
        set PA0BM001.PA-NEED-BLTO-FL[PA0BW-IDX] invisible, skip;
        set PA0BM001.PA0BM-REASON-TXT[PA0BW-IDX] invisible, skip;
        set PA0BM001.PA-RSN-COMNT1[PA0BW-IDX] invisible, skip;
        set PA0BM001.PA0BM-REQBY-TXT[PA0BW-IDX] invisible, skip;
        set PA0BM001.XXXPGUID[PA0BW-IDX] invisible, skip;
      end
      ;
      PA0BW00.PA0BW-IDX = PA0BW00.PA0BW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* If no message to display*/
    if (PA0BW00.TA5TSQIX == 0) /* No pages formatted*/
      set PA0BM001.PA0BM-BEG-AFRGT-RQT-ID cursor;
    else
      set PA0BM001.PA0BM-SEL[1] cursor;
    end
  else
    if (converseVar.validationMsgNum == 15) /* No data found*/
      set PA0BM001.PA0BM-BEG-AFRGT-RQT-ID cursor;
    end
  end
  ;
  ;
  converse PA0BM001 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = " "; /* Module identification*/
  PAWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = PA0BM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = PA0BM001.CAITEM; /* Application data*/
  ;
  ;
end // end PA0B-200

// Format the data to display
Function PA0B-210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set PA0BM001 initial; /* Initialize map*/
  ;
  PA0BW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (PA0BW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (PA0BW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (PA0BW00.XXXTSPAG > PA0BW00.TA5TSQIX) /* Desired page > highest*/
        PA0BW00.XXXTSPAG = PA0BW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      if (PA0BW00.PA0BW-TEMP-STOR-PG-UPDT-SW == "Y") /* Temp storage updt*/
        ;
        PA0BS-05-TA0050-U(); /* Update temp storage page*/
        PA0BW-TEMP-STOR-PG-UPDT-SW = "N"; /* Reset switch*/
      end
      ;
      PA0BS-06-TA0050-R(); /* Read temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  PA0BM001.XXXTSPAG = PA0BW00.XXXTSPAG; /* Current page*/
  PA0BM001.TA5TSQIX = PA0BW00.TA5TSQIX; /* Max page*/
  ;
  PA0BM001.PA0BM-CURR-BUY-MO = PA0BW01.PA0BM-CURR-BUY-MO; /* Curr buy*/
  PA0BM001.PA-AFRGT-APVL-MGR = PA0BW01.PA-AFRGT-APVL-MGR; /* Approval mgr*/
  PA0BM001.XPLCD = PA0BW01.XPLCD; /* Product line*/
  PA0BM001.PA0BM-BEG-AFRGT-RQT-ID = PA0BW01.PA0BM-BEG-AFRGT-RQT-ID; /* A/F Req Nbr*/
  ;
  if (PA0BW00.PA0BM-END-AFRGT-RQT-ID != 
  PA0BW01.PA0BM-END-AFRGT-RQT-ID)
    PA0BM001.PA0BM-END-AFRGT-RQT-ID = PA0BW00.PA0BM-END-AFRGT-RQT-ID; /* A/F Req Nbr*/
  else
    PA0BM001.PA0BM-END-AFRGT-RQT-ID = PA0BW01.PA0BM-END-AFRGT-RQT-ID; /* A/F Req Nbr*/
  end
  ;
  PA0BM001.PA0BM-BEG-ORD-ADJ-NBR = PA0BW01.PA0BM-BEG-ORD-ADJ-NBR; /* O/A Req Nbr*/
  PA0BM001.PA0BM-END-ORD-ADJ-NBR = PA0BW01.PA0BM-END-ORD-ADJ-NBR; /* O/A Req Nbr*/
  PA0BM001.PA0BM-BEG-ORD-ADJ-BUY-MO = PA0BW01.PA0BM-BEG-ORD-ADJ-BUY-MO; /* Buy month*/
  PA0BM001.PA0BM-END-ORD-ADJ-BUY-MO = PA0BW01.PA0BM-END-ORD-ADJ-BUY-MO; /* Buy month*/
  PA0BM001.PA0BM-HDR-AFRGT-APVL-FL = PA0BW01.PA0BM-HDR-AFRGT-APVL-FL; /* Approved*/
   /* MOVE PA0BW01.PA0BM-HDR-AFRGT-CNCL-FL*/
    /* TO PA0BM001.PA0BM-HDR-AFRGT-CNCL-FL; /* Cancelled*/
  PA0BM001.YSMXDV = PA0BW01.YSMXDV; /* Sum div cd*/
  PA0BM001.PA0BM-HDR-NEED-BLTO-FL = PA0BW01.PA0BM-HDR-NEED-BLTO-FL; /* Need bill to info*/
  PA0BM001.PA0BM-ETS-PAST-DT = PA0BW01.PA0BM-ETS-PAST-DT; /* ETS past*/
  PA0BM001.PA0BM-HDR-SY1STNBR = PA0BW01.PA0BM-HDR-SY1STNBR; /* Style*/
  PA0BM001.PA0BM-HDR-SY2CLRID = PA0BW01.PA0BM-HDR-SY2CLRID; /* Color*/
  PA0BM001.PA0BM-HDR-XDMCD = PA0BW01.PA0BM-HDR-XDMCD; /* Dimension*/
  PA0BM001.XCTCD = PA0BW01.XCTCD; /* Country*/
  PA0BM001.PA0BM-HDR-FY1FCTYC = PA0BW01.PA0BM-HDR-FY1FCTYC; /* Fcty*/
  PA0BM001.PA0BM-SCHEDULER-XXXUSER = PA0BW01.PA0BW-SCHEDULER-XXXUSER;
  PA0BM001.PC2CUXID = PA0BW01.PC2CUXID; /* Cust xref*/
  PA0BM001.KUCCOID = PA0BW01.KUCCOID; /* Customer*/
  PA0BM001.KUMSTRID = PA0BW01.KUMSTRID; /* Customer*/
  PA0BM001.XNXCD = PA0BW01.XNXCD; /* Customer*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  PA0BW00.PA0BW-IDX = 1; /* Initialize idx*/
  ;
  while (PA0BW00.PA0BW-IDX <= PA0BW00.PA0BW-NBR-MAP-ROWS) /* For each line*/
    ;
    PA0BM001.PA0BM-SEL[PA0BW-IDX] = PA0BW01.PA0BM-SEL[PA0BW-IDX]; /* Select*/
    PA0BM001.PA-AFRGT-RQT-ID[PA0BW-IDX] = PA0BW01.PA-AFRGT-RQT-ID[PA0BW-IDX]; /* A/F ID*/
    PA0BM001.PA1OANBR[PA0BW-IDX] = PA0BW01.PA1OANBR[PA0BW-IDX]; /* O/A Nbr*/
    PA0BM001.YESCD[PA0BW-IDX] = PA0BW01.YESCD[PA0BW-IDX]; /* Status*/
    PA0BM001.PA1HLDFL[PA0BW-IDX] = PA0BW01.PA1HLDFL[PA0BW-IDX]; /* Hold flag*/
    PA0BM001.PA0BM-ITM-FL[PA0BW-IDX] = PA0BW01.PA0BM-ITM-FL[PA0BW-IDX]; /* Item exists flag*/
    PA0BM001.PC6ETSDT[PA0BW-IDX] = PA0BW01.PC6ETSDT[PA0BW-IDX]; /* Latest ETS*/
    PA0BM001.FY1FCTYC[PA0BW-IDX] = PA0BW01.FY1FCTYC[PA0BW-IDX]; /* Factory*/
    PA0BM001.SY1STNBR[PA0BW-IDX] = PA0BW01.SY1STNBR[PA0BW-IDX]; /* Style*/
    PA0BM001.SY2CLRID[PA0BW-IDX] = PA0BW01.SY2CLRID[PA0BW-IDX]; /* Color*/
    PA0BM001.XDMCD[PA0BW-IDX] = PA0BW01.XDMCD[PA0BW-IDX]; /* Dim*/
    PA0BM001.SY1SSTNM[PA0BW-IDX] = PA0BW01.SY1SSTNM[PA0BW-IDX]; /* Style desc*/
    PA0BM001.PA0BM-AF-TOTAL-QTY[PA0BW-IDX] = PA0BW01.PA0BM-AF-TOTAL-QTY[PA0BW-IDX]; /* Total af qty*/
    PA0BM001.ZZZSDT[PA0BW-IDX] = PA0BW01.ZZZSDT[PA0BW-IDX]; /* Req dt*/
    PA0BM001.PA-AFRGT-APVL-FL[PA0BW-IDX] = PA0BW01.PA-AFRGT-APVL-FL[PA0BW-IDX]; /* Approved flag*/
    /* MOVE PA0BW01.PA-AFRGT-CNCL-FL(PA0BW-IDX)*/
     /* TO PA0BM001.PA-AFRGT-CNCL-FL(PA0BW-IDX); /* Cancelled flag*/
    PA0BM001.PA-NEED-BLTO-FL[PA0BW-IDX] = PA0BW01.PA-NEED-BLTO-FL[PA0BW-IDX]; /* Neet bill to info flag*/
    PA0BM-REASON-TXT[PA0BW-IDX] = "REASON:";
    PA0BM001.PA-RSN-COMNT1[PA0BW-IDX] = PA0BW01.PA-RSN-COMNT1[PA0BW-IDX]; /* Reason comment*/
    PA0BM-REQBY-TXT[PA0BW-IDX] = "REQ BY:";
    PA0BM001.XXXPGUID[PA0BW-IDX] = PA0BW01.XXXPGUID[PA0BW-IDX]; /* Request by user id*/
    ;
    PA0BW00.PA0BW-IDX = PA0BW00.PA0BW-IDX + 1;
  end
  ;
  ;
end // end PA0B-210

// Check attention identifier
Function PA0B-300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    PA0BW00.PA0BW-REQUEST-DATA-SW = "N"; /* Request for data flag*/
    PA0BW00.PA0BW-FMAT-MAP-SW = "Y"; /* Format the map flag*/
    ;
    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      if (PA0BW00.TA5TSQIX > 0) /* If data formatted*/
        ;
        PA0B-520(); /* Verify select fields*/
        ;
        if (converseVar.validationMsgNum != 0)
          exit stack;
        end
        ;
        PA0B-310(); /* Format PAWREC*/
        PA0BS-03-TA0050-P(); /* Purge any temporary storage*/
      end
      ;
      COMMAREA.CATOAP = PA0BM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = PA0BM001.CAITEM; /* Application data*/
      ;
      XSPAS01(); /* Exit to another application*/
      ;
      set PA0BM001.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      PAWREC.XXXMODID = "300"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
    end
    ;
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* PF1 was pressed*/
   || converseVar.eventKey is pf3  /* or PF3 was pressed*/
   || converseVar.eventKey is pf4  /* or PF4 was pressed*/
   || converseVar.eventKey is pf5  /* or PF5 was pressed*/
   || converseVar.eventKey is pf19 /* or pf19 was pressed*/
   || converseVar.eventKey is pf24) /* or pf24 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "PA0BM001"; /* Application find code*/
    else
      ;
      if (converseVar.eventKey is pf5)
        PA0BM001.CATOAP = "FY0M"; /* TO application*/
      else
        ;
        if (converseVar.eventKey is pf19 /* TRANSFER TO PA0Z*/
         || converseVar.eventKey is pf24) /* pf24 was pressed - to PA0C*/
          if (PA0BW00.TA5TSQIX > 0) /* If data formatted*/
            ;
            PA0B-520(); /* Verify select fields*/
            ;
            if (converseVar.validationMsgNum != 0)
              exit stack;
            end
            ;
            PA0B-310(); /* Format PAWREC*/
            ;
          end
          if (converseVar.eventKey is pf19) /* TRANSFER TO PA0Z*/
            PA0BM001.CATOAP = "PA0Z"; /* TO application*/
          else
            PA0BM001.CATOAP = "PA0C"; /* TO application*/
          end
        end
      end
    end
    ;
    PA0BS-03-TA0050-P(); /* Purge any temporary storage*/
    ;
    COMMAREA.CATOAP = PA0BM001.CATOAP; /* TO application*/
    COMMAREA.CAITEM = PA0BM001.CAITEM; /* Application data*/
    ;
    XSPAS01(); /* Exit to another application*/
    ;
    set PA0BM001.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8)  /* and PF8 was not pressed*/
    ;
    PAWREC.XXXMODID = "300"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end PA0B-300

// Format PAWREC for xfer
Function PA0B-310()
   /* ------------------------------------------------------------*/
   /* Update current page in temp storage.*/
   /* ------------------------------------------------------------*/
  ;
  PA0BW00.PA0BW-IDX = 1; /* Init index*/
  while (PA0BW00.PA0BW-IDX <= PA0BW00.PA0BW-NBR-MAP-ROWS) /* All lines*/
    ;
    PA0BW01.PA0BM-SEL[PA0BW-IDX] = PA0BM001.PA0BM-SEL[PA0BW-IDX]; /* Save changes*/
    ;
    PA0BW00.PA0BW-IDX = PA0BW00.PA0BW-IDX + 1;
  end
  ;
  ;
  PA0BS-05-TA0050-U(); /* Update temp storage page*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Now go through each temporary storage page.  Move selected*/
   /* O/A nbrs to PAWREC for xfer to PA0C (up to maximum of 25).*/
   /* ------------------------------------------------------------*/
  ;
  set PAWREC empty; /* Initialize PAWREC*/
  ;
  PA0BW00.PA0BW-PAGE-IDX = 1; /* Page index*/
  PAWREC.PAWOAIDX = 0; /* O/A nbr index*/
  ;
  while (PA0BW00.PA0BW-PAGE-IDX <= PA0BW00.TA5TSQIX /* Until end of pages*/
   && PAWREC.PAWOAIDX < PA0BW00.PA0BW-MAX-NBR-OF-PA1OANBR)
                                                             /* or max recs*/
    ;
    PA0BW00.XXXTSPAG = PA0BW00.PA0BW-PAGE-IDX;
    PA0BS-06-TA0050-R(); /* Read next temp stoage page*/
    ;
    PA0BW00.PA0BW-IDX = 1; /* Init line index*/
    while (PA0BW00.PA0BW-IDX <= PA0BW00.PA0BW-NBR-MAP-ROWS /* Check each row*/
     && PAWREC.PAWOAIDX < PA0BW00.PA0BW-MAX-NBR-OF-PA1OANBR)
      ;
      if (PA0BW01.PA0BM-SEL[PA0BW-IDX] == "S") /* If line selected*/
        ;
        PAWREC.PAWOAIDX = PAWREC.PAWOAIDX + 1; /* Increment O/A idx*/
        PAWREC.PA1OANBR[PAWOAIDX] = PA0BW01.PA1OANBR[PA0BW-IDX]; /* Save O/A nbr to PAWREC*/
        ;
        if (PAWREC.PAWOAIDX == 1) /* If first record*/
          PAWREC.PAWOANBR = PA0BW01.PA1OANBR[PA0BW-IDX]; /* Also save first o/a nbr in this field*/
        end
      end
      ;
      PA0BW00.PA0BW-IDX = PA0BW00.PA0BW-IDX + 1; /* Increment line idx*/
    end
    ;
    PA0BW00.PA0BW-PAGE-IDX = PA0BW00.PA0BW-PAGE-IDX + 1;
  end
  ;
  PAWREC.PAWOAIDX = 1;
  PAWREC.PAWDRVR = "PA0B";
  ;
  ;
end // end PA0B-310

// Reset Highlighted fields
Function PA0B-400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set PA0BM001.XXXTSPAG initialAttributes;
  set PA0BM001.TA5TSQIX initialAttributes;
  ;
  set PA0BM001.PA0BM-CURR-BUY-MO initialAttributes;
  set PA0BM001.PA-AFRGT-APVL-MGR initialAttributes;
  set PA0BM001.XPLCD initialAttributes;
  set PA0BM001.XPLSDESC initialAttributes;
  set PA0BM001.PA0BM-BEG-AFRGT-RQT-ID initialAttributes;
  set PA0BM001.PA0BM-END-AFRGT-RQT-ID initialAttributes;
  set PA0BM001.PA0BM-BEG-ORD-ADJ-NBR initialAttributes;
  set PA0BM001.PA0BM-END-ORD-ADJ-NBR initialAttributes;
  set PA0BM001.PA0BM-BEG-ORD-ADJ-BUY-MO initialAttributes;
  set PA0BM001.PA0BM-END-ORD-ADJ-BUY-MO initialAttributes;
  set PA0BM001.PA0BM-HDR-AFRGT-APVL-FL initialAttributes;
   /* SET PA0BM001.PA0BM-HDR-AFRGT-CNCL-FL DEFINED;*/
  set PA0BM001.YSMXDV initialAttributes;
  set PA0BM001.PA0BM-HDR-NEED-BLTO-FL initialAttributes;
  set PA0BM001.PA0BM-ETS-PAST-DT initialAttributes;
  set PA0BM001.PA0BM-HDR-SY1STNBR initialAttributes;
  set PA0BM001.PA0BM-HDR-SY2CLRID initialAttributes;
  set PA0BM001.PA0BM-HDR-XDMCD initialAttributes;
  set PA0BM001.XCTCD initialAttributes;
  set PA0BM001.PA0BM-HDR-FY1FCTYC initialAttributes;
  set PA0BM001.PA0BM-SCHEDULER-XXXUSER initialAttributes;
  set PA0BM001.PC2CUXID initialAttributes;
  set PA0BM001.KUCCOID initialAttributes;
  set PA0BM001.KUMSTRID initialAttributes;
  set PA0BM001.XNXCD initialAttributes;
  ;
  ;
  PA0BW00.PA0BW-IDX = 1; /* Init index*/
  ;
  while (PA0BW00.PA0BW-IDX <= PA0BW00.PA0BW-NBR-MAP-ROWS) /* For all lines*/
    ;
    set PA0BM001.PA0BM-SEL[PA0BW-IDX] initialAttributes;
    set PA0BM001.PA-AFRGT-RQT-ID[PA0BW-IDX] initialAttributes;
    set PA0BM001.PA1OANBR[PA0BW-IDX] initialAttributes;
    set PA0BM001.YESCD[PA0BW-IDX] initialAttributes;
    set PA0BM001.PA1HLDFL[PA0BW-IDX] initialAttributes;
    set PA0BM001.PA0BM-ITM-FL[PA0BW-IDX] initialAttributes;
    set PA0BM001.PC6ETSDT[PA0BW-IDX] initialAttributes;
    set PA0BM001.FY1FCTYC[PA0BW-IDX] initialAttributes;
    set PA0BM001.SY1STNBR[PA0BW-IDX] initialAttributes;
    set PA0BM001.SY2CLRID[PA0BW-IDX] initialAttributes;
    set PA0BM001.XDMCD[PA0BW-IDX] initialAttributes;
    set PA0BM001.PA0BM-AF-TOTAL-QTY[PA0BW-IDX] initialAttributes;
    set PA0BM001.ZZZSDT[PA0BW-IDX] initialAttributes;
    set PA0BM001.PA-AFRGT-APVL-FL[PA0BW-IDX] initialAttributes;
   /* SET PA0BM001.PA-AFRGT-CNCL-FL(PA0BW-IDX) DEFINED;*/
    set PA0BM001.PA-NEED-BLTO-FL[PA0BW-IDX] initialAttributes;
    set PA0BM001.PA0BM-REASON-TXT[PA0BW-IDX] initialAttributes;
    set PA0BM001.PA-RSN-COMNT1[PA0BW-IDX] initialAttributes;
    set PA0BM001.PA0BM-REQBY-TXT[PA0BW-IDX] initialAttributes;
    set PA0BM001.XXXPGUID[PA0BW-IDX] initialAttributes;
    ;
    PA0BW00.PA0BW-IDX = PA0BW00.PA0BW-IDX + 1; /* Increment*/
  end
  ;
  set PA0BM001.CATOAP initialAttributes;
  set PA0BM001.CAITEM initialAttributes;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (PA0BM001.XPLCD != "?" /* XPL list not requested*/
   && PA0BM001.XCTCD != "?") /* and XCT list not requested*/
    return;
  end
  ;
  ;
  if (PA0BM001.XPLCD == "?" /* XPL list requested*/
   || PA0BM001.XCTCD == "?") /* XCT list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      ;
      PAWREC.XXXMODID = "400"; /* Module identification*/
      converseLib.validationFailed(46); /* Pa/pf key may not be used with lists*/
      exit stack; /* Exit to display the map*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XPL codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (PA0BM001.XPLCD == "?") /* XPL list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "PRODUCT LINE"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPL01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      PA0BM001.XPLCD = PA0BW01.XPLCD; /* Restore prior code*/
    else
      PA0BM001.XPLCD = XPLTBL.XPLCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set PA0BM001.XPLCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCT codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (PA0BM001.XCTCD == "?") /* XCT list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COUNTRY"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCT01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      PA0BM001.XCTCD = PA0BW01.XCTCD; /* Restore prior code*/
    else
      PA0BM001.XCTCD = XCTTBL.XCTCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set PA0BM001.XCTCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  PAWREC.XXXMODID = "400"; /* Module identification*/
  converseLib.validationFailed(45); /* Requested list displayed*/
  ;
  exit stack;
  ;
  ;
end // end PA0B-400

// Verify the entered data
Function PA0B-500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CAITEM > " ") /* Application data was entered*/
    ;
    PAWREC.XXXMODID = "500"; /* Module identification*/
    set PA0BM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    exit stack;
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    ;
    PA0B-510(); /* Verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 2 /* NO PREVIOUS PAGES TO DISPLAY*/
     || converseVar.validationMsgNum == 3) /* NO MORE PAGES TO DISPLAY*/
      exit stack;
    end
    ;
    PA0B-520(); /* Verify select fields*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the enterable data.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is enter)
    ;
    PA0B-520(); /* Verify select fields*/
    PA0B-530(); /* Verify key fields*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors*/
    exit stack;
  end
  ;
  ;
end // end PA0B-500

// Verify scroll request
Function PA0B-510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && PA0BW00.XXXTSPAG < 2)      
    ;
    PAWREC.XXXMODID = "510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && PA0BW00.XXXTSPAG >= PA0BW00.TA5TSQIX)
    ;
    PAWREC.XXXMODID = "510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end PA0B-510

// Verify select fields
Function PA0B-520()
   /* ------------------------------------------------------------*/
   /* Verify all select fields contain ' ' or 's'.*/
   /* ------------------------------------------------------------*/
  ;
  PA0BW00.PA0BW-IDX = PA0BW00.PA0BW-NBR-MAP-ROWS; /* Init index*/
  while (PA0BW00.PA0BW-IDX > 0) /* Check each row*/
    ;
    if (PA0BM001.PA0BM-SEL[PA0BW-IDX] == " " /* If blank*/
     || PA0BM001.PA0BM-SEL[PA0BW-IDX] == "S") /* Or selected*/
      ;
       /* Next sentence*/
    else
      set PA0BM001.PA0BM-SEL[PA0BW-IDX] cursor, bold; /* Highlight*/
      PAWREC.XXXMODID = "520"; /* Module identification*/
      converseLib.validationFailed(13); /* Only "S" may be used to select a line*/
    end
    ;
    PA0BW00.PA0BW-IDX = PA0BW00.PA0BW-IDX - 1;
  end
  ;
  ;
end // end PA0B-520

// Verify key data
Function PA0B-530()
   /* ------------------------------------------------------------*/
   /* Verify customer/store/dept.*/
   /* Verify customer xref.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BM001.KUCCOID != 0
   || PA0BM001.KUMSTRID != 0
   || PA0BM001.XNXCD != 0) /* If customer nbr entered*/
    ;
    set PC2REC empty;
    PC2REC.XGPCD = "02";
    PC2REC.KUCCOID = PA0BM001.KUCCOID;
    PC2REC.KUMSTRID = PA0BM001.KUMSTRID;
    PC2REC.XNXCD = PA0BM001.XNXCD;
    ;
    if (PA0BM001.PA1OANBR > 199999
     && PA0BM001.PA1OANBR < 300000)
      PC2REC.PC-PRDCU-APAO-FL = "E"; /* EUROPEAN CUSTOMER ONLY*/
    else
      PC2REC.PC-PRDCU-APAO-FL = " "; /* MVSPROD CUSTOMER*/
    end
    ;
    PA0BS-09-IO3340-SA(); /* Select DPRODC.VPRDCU01*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* If row not found*/
      ;
      set PA0BM001.KUCCOID cursor, bold; /* Highlight*/
      set PA0BM001.KUMSTRID bold; /* Highlight*/
      set PA0BM001.XNXCD bold; /* Highlight*/
      PAWREC.XXXMODID = "530"; /* Module identification*/
      converseLib.validationFailed(24); /* Co nbr missing or invalid*/
    else
      ;
      if (PA0BM001.PC2CUXID == " ") /* If customer not entered*/
        PA0BM001.PC2CUXID = PC2REC.PC2CUXID; /* Default it*/
      end
    end
  end
  ;
  if (PA0BM001.PC2CUXID > " ") /* If cust xref entered*/
    ;
    if (PA0BM001.KUCCOID != 0
     || PA0BM001.KUMSTRID != 0
     || PA0BM001.XNXCD != 0) /* If customer nbr entered*/
      ;
      if (PA0BM001.PC2CUXID != PC2REC.PC2CUXID) /* If xrefs don't match*/
        ;
        set PA0BM001.PC2CUXID cursor, bold; /* Highlight*/
        PAWREC.XXXMODID = "530"; /* Module identification*/
        converseLib.validationFailed(317); /* Xref not valid for specifid cust nbr*/
      end
    end
    ;
    set PC2REC empty;
    PC2REC.XGPCD = "02";
    PC2REC.PC2CUXID = PA0BM001.PC2CUXID;
    ;
    PA0BS-10-IO3340-S(); /* Select DPRODC.VPRDCU01*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* If row not found*/
      ;
      set PA0BM001.PC2CUXID cursor, bold; /* Highlight*/
      PAWREC.XXXMODID = "530"; /* Module identification*/
      converseLib.validationFailed(23); /* XREF missing or invalid*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify scheduler userid*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BM001.PA0BM-SCHEDULER-XXXUSER > " ") /* SCHEDULER ENTERED*/
     /* VERIFY AND CONVERT THE SCHEDULER LOGON ID*/
    set PG1REC empty;
    PG1REC.PG1SC4CD = "**";
    PG1REC.PG1FCTCD = "**";
    PG1REC.XXXUSER = PA0BM001.PA0BM-SCHEDULER-XXXUSER;
    PG1REC.XGPCD = "02";
    ;
    PA0BS-25-IO1200-SA(); /* SELECT DPRODG.VSUSER01*/
    ;
    if (VAGen_SQLCODE == +100)
      set PA0BM001.PA0BM-SCHEDULER-XXXUSER cursor, bold;
      PAWREC.XXXMODID = "530"; /* Module identification*/
      converseLib.validationFailed(333); /* INVALID SCHEDULER/SPECIALIST ENTERED*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify factory and country.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BM001.PA0BM-HDR-FY1FCTYC > " ") /* If factory entered*/
    ;
    set FY1REC empty;
    FY1REC.XGPCD = "02"; /* GPC code*/
    FY1REC.FY1FCTYC = PA0BM001.PA0BM-HDR-FY1FCTYC; /* Factory*/
    ;
    PA0BS-07-IO2810-S(); /* Select DFCTY.VFCTY001 record*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* If no row found*/
      ;
      set PA0BM001.PA0BM-HDR-FY1FCTYC cursor, bold; /* Highlight*/
      PAWREC.XXXMODID = "530"; /* Module identification*/
      converseLib.validationFailed(20); /* Factory code missing or invalid*/
    else
       /* If found, check the country code*/
      ;
      if (PA0BM001.XCTCD > " ") /* Country entered*/
        ;
        if (PA0BM001.XCTCD != FY1REC.XCTCD) /* If countries not =*/
          ;
          set PA0BM001.XCTCD cursor, bold; /* Highlight*/
          set PA0BM001.PA0BM-HDR-FY1FCTYC bold; /* Highlight*/
          PAWREC.XXXMODID = "530"; /* Module identification*/
          converseLib.validationFailed(311); /* Factory not in specified country*/
        end
      end
    end
  end
  ;
  ;
  if (PA0BM001.XCTCD > " ") /* If country entered*/
    ;
    if (PA0BM001.XCTCD in XCTTBL.XCTCD
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* If code in table*/
      ;
       /* Next sentence*/
    else
      ;
      set PA0BM001.XCTCD cursor, bold; /* Highlight*/
      PAWREC.XXXMODID = "530"; /* Module identification*/
      converseLib.validationFailed(25); /* Factory code missing or invalid*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify style/clr/dim.*/
   /* If style and color entered, but dimension not entered,*/
   /* default dimension to '00'.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BM001.PA0BM-HDR-SY1STNBR > " " /* Style entered*/
   && PA0BM001.PA0BM-HDR-SY2CLRID > " " /* Color entered*/
   && PA0BM001.PA0BM-HDR-XDMCD == " ")  /* Dim not entered*/
    ;
    PA0BM001.PA0BM-HDR-XDMCD = "00"; /* Default dimension*/
  end
  ;
  ;
  if (PA0BM001.PA0BM-HDR-SY1STNBR > " " /* Style entered*/
   || PA0BM001.PA0BM-HDR-SY2CLRID > " " /* Color entered*/
   || PA0BM001.PA0BM-HDR-XDMCD > " ")   /* Dim entered*/
    ;
    set PG2REC empty;
    PG2REC.XGPCD = "02";
    PG2REC.SY1STNBR = PA0BM001.PA0BM-HDR-SY1STNBR;
    PG2REC.SY2CLRID = PA0BM001.PA0BM-HDR-SY2CLRID;
    PG2REC.XDMCD = PA0BM001.PA0BM-HDR-XDMCD;
    ;
    PA0BS-08-IO3120-S(); /* Select DPRODG.VSYCLR01 record*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* If no row found*/
      ;
      set PA0BM001.PA0BM-HDR-SY1STNBR cursor, bold; /* Highlight*/
      set PA0BM001.PA0BM-HDR-SY2CLRID bold; /* Highlight*/
      set PA0BM001.PA0BM-HDR-XDMCD bold; /* Highlight*/
      PAWREC.XXXMODID = "530"; /* Module identification*/
      converseLib.validationFailed(37); /* Style/clr/dim not valid*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify ets past.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BM001.PA0BM-ETS-PAST-DT > 0) /* If date entered*/
    ;
    set TA2REC empty; /* Initialize ta2rec*/
    ;
    TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
    TA2REC.TA2GRTYP = "A"; /* Date format*/
    TA2REC.TA2GRGAN = PA0BM001.PA0BM-ETS-PAST-DT;
    ;
    try
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Date validation routine*/
    ;
    if (sysVar.errorCode == "00000000") /* Call successful*/
      if (TA2REC.TA2RTNCD != 0)
        converseLib.validationFailed(22); /* Date missing or invalid*/
        PAWREC.XXXMODID = "530"; /* Module identification*/
        set PA0BM001.PA0BM-ETS-PAST-DT cursor, bold; /* Highlight*/
      end
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify need bill to info.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BM001.PA0BM-HDR-NEED-BLTO-FL == " "
   || PA0BM001.PA0BM-HDR-NEED-BLTO-FL == "Y"
   || PA0BM001.PA0BM-HDR-NEED-BLTO-FL == "N") /* If valid values*/
    ;
     /* Next sentence*/
  else
    ;
    set PA0BM001.PA0BM-HDR-NEED-BLTO-FL cursor, bold; /* Highlight*/
    PAWREC.XXXMODID = "530"; /* Module identification*/
    converseLib.validationFailed(307); /* Need bill to flag must be 'y', 'n',*/
                                   /* or blank*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify sum div cd.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BM001.YSMXDV == "  "
   || PA0BM001.YSMXDV == "10"
   || PA0BM001.YSMXDV == "20") /* If valid values*/
    ;
     /* Next sentence*/
  else
    ;
    set PA0BM001.YSMXDV cursor, bold; /* Highlight*/
    PAWREC.XXXMODID = "530"; /* Module identification*/
    converseLib.validationFailed(308); /* Need bill to flag must be 'y', 'n',*/
                                   /* or blank*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify cancelled flag and approved flag.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BM001.PA0BM-HDR-AFRGT-CNCL-FL == " "
   || PA0BM001.PA0BM-HDR-AFRGT-CNCL-FL == "Y"
   || PA0BM001.PA0BM-HDR-AFRGT-CNCL-FL == "N") /* Valid values*/
    ;
     /* Next sentence*/
  else
    ;
    set PA0BM001.PA0BM-HDR-AFRGT-CNCL-FL cursor, bold; /* Highlight*/
    PAWREC.XXXMODID = "530"; /* Module identification*/
    converseLib.validationFailed(309); /* Cancelled flag must be 'y' or 'n'*/
  end
  ;
  if (PA0BM001.PA0BM-HDR-AFRGT-APVL-FL == " "
   || PA0BM001.PA0BM-HDR-AFRGT-APVL-FL == "Y"
   || PA0BM001.PA0BM-HDR-AFRGT-APVL-FL == "N") /* Valid values*/
    ;
     /* Next sentence*/
  else
    ;
    set PA0BM001.PA0BM-HDR-AFRGT-APVL-FL cursor, bold; /* Highlight*/
    PAWREC.XXXMODID = "530"; /* Module identification*/
    converseLib.validationFailed(310); /* Cancelled flag must be 'y' or 'n'*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify buy months.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BM001.PA0BM-BEG-ORD-ADJ-BUY-MO > 0
   || PA0BM001.PA0BM-END-ORD-ADJ-BUY-MO > 0) /* If either date entered*/
    ;
    /* ==> First reformat the 2 buy dates*/
    ;
    PA0BW00.PA0BW-YYMM = PA0BM001.PA0BM-BEG-ORD-ADJ-BUY-MO;
    PA0BW00.PA0BW-DD = 01;
    if (PA0BW00.PA0BW-YY <= 70)
      PA0BW00.PA0BW-CC = 20;
    else
      PA0BW00.PA0BW-CC = 19;
    end
    PA0BW00.PA0BW-FROM-BUY-MO-CCYYMMDD = PA0BW00.PA0BW-CCYYMMDD;
    ;
    PA0BW00.PA0BW-YYMM = PA0BM001.PA0BM-END-ORD-ADJ-BUY-MO;
    PA0BW00.PA0BW-DD = 01;
    if (PA0BW00.PA0BW-YY <= 70)
      PA0BW00.PA0BW-CC = 20;
    else
      PA0BW00.PA0BW-CC = 19;
    end
    PA0BW00.PA0BW-TO-BUY-MO-CCYYMMDD = PA0BW00.PA0BW-CCYYMMDD;
    ;
    ;
    /* ==> Verify "from" date not > "to" date*/
    ;
    if (PA0BW00.PA0BW-FROM-BUY-MO-CCYYMMDD
     > PA0BW00.PA0BW-TO-BUY-MO-CCYYMMDD)
      ;
      converseLib.validationFailed(82); /* Date missing or invalid*/
      PAWREC.XXXMODID = "530"; /* Module identification*/
      set PA0BM001.PA0BM-BEG-ORD-ADJ-BUY-MO cursor, bold;
      set PA0BM001.PA0BM-END-ORD-ADJ-BUY-MO bold;
    end
    ;
    ;
    /* ==> Now edit the "to" date*/
    ;
    set TA2REC empty; /* Initialize ta2rec*/
    ;
    TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
    TA2REC.TA2GRTYP = "G"; /* Date format*/
    TA2REC.TA2GRGGN = PA0BW00.PA0BW-TO-BUY-MO-CCYYMMDD;
    ;
    try
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Date validation routine*/
    ;
    if (sysVar.errorCode == "00000000") /* Call successful*/
      if (TA2REC.TA2RTNCD != 0)
        converseLib.validationFailed(22); /* Date missing or invalid*/
        PAWREC.XXXMODID = "530"; /* Module identification*/
        set PA0BM001.PA0BM-END-ORD-ADJ-BUY-MO cursor, bold;
      end
    end
    ;
    ;
    /* ==> Now edit the "from" date*/
    ;
    set TA2REC empty; /* Initialize ta2rec*/
    ;
    TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
    TA2REC.TA2GRTYP = "G"; /* Date format*/
    TA2REC.TA2GRGGN = PA0BW00.PA0BW-FROM-BUY-MO-CCYYMMDD;
    ;
    try
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Date validation routine*/
    ;
    if (sysVar.errorCode == "00000000") /* Call successful*/
      if (TA2REC.TA2RTNCD != 0)
        converseLib.validationFailed(22); /* Date missing or invalid*/
        PAWREC.XXXMODID = "530"; /* Module identification*/
        set PA0BM001.PA0BM-BEG-ORD-ADJ-BUY-MO cursor, bold;
      end
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify O/A req numbers.*/
   /* ------------------------------------------------------------*/
   /*  */
   /* greddy - 07/25/01. Changes done to facilitate OA num reset*/
   /*  */
  if (PA0BM001.PA0BM-BEG-ORD-ADJ-NBR > 0
   || PA0BM001.PA0BM-END-ORD-ADJ-NBR > 0) /* If either nbr entered*/
    ;
    if ((PA0BM001.PA0BM-BEG-ORD-ADJ-NBR > 0
     && PA0BM001.PA0BM-END-ORD-ADJ-NBR == 0)
     || (PA0BM001.PA0BM-BEG-ORD-ADJ-NBR > 
    PA0BM001.PA0BM-END-ORD-ADJ-NBR && 
    (PA0BM001.PA0BM-BEG-ORD-ADJ-NBR < 140000
     || PA0BM001.PA0BM-END-ORD-ADJ-NBR > 139999)))
      set PA0BM001.PA0BM-BEG-ORD-ADJ-NBR cursor, bold; /* Highlight*/
      set PA0BM001.PA0BM-END-ORD-ADJ-NBR bold; /* Highlight*/
      PAWREC.XXXMODID = "530"; /* Module identification*/
      converseLib.validationFailed(173); /* Rqst nbr must be > from rqst nbr*/
    end
  end
  ;
   /* PERFORM PA0B-53010;*/
  ;
   /* greddy - 07/25/01. Changes end.*/
  ;
   /* ------------------------------------------------------------*/
   /* Verify A/F request numbers.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BM001.PA0BM-BEG-AFRGT-RQT-ID > 0
   || PA0BM001.PA0BM-END-AFRGT-RQT-ID > 0) /* If either nbr entered*/
    ;
    if (PA0BM001.PA0BM-BEG-AFRGT-RQT-ID > 0
     && PA0BM001.PA0BM-END-AFRGT-RQT-ID == 0) /* DEFAULT END TO BEG*/
      PA0BM001.PA0BM-END-AFRGT-RQT-ID = PA0BM001.PA0BM-BEG-AFRGT-RQT-ID;
    else
      ;
      if (PA0BM001.PA0BM-BEG-AFRGT-RQT-ID > 
      PA0BM001.PA0BM-END-AFRGT-RQT-ID)
        set PA0BM001.PA0BM-BEG-AFRGT-RQT-ID cursor, bold; /* Highlight*/
        set PA0BM001.PA0BM-END-AFRGT-RQT-ID bold; /* Highlight*/
        PAWREC.XXXMODID = "530"; /* Module identification*/
        converseLib.validationFailed(173); /* Rqst nbr must be > from rqst nbr*/
      end
    end
  end
  ;
  if (converseVar.validationMsgNum == 0)
    PA0BW00.PA0BM-END-AFRGT-RQT-ID = PA0BM001.PA0BM-END-AFRGT-RQT-ID;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify product line.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BM001.XPLCD > " ") /* If product line entered*/
    ;
    if (PA0BM001.XPLCD in XPLTBL.XPLCD
     && XPLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* If code in table*/
      ;
       /* Next sentence*/
    else
      ;
      set PA0BM001.XPLCD cursor, bold; /* Highlight*/
      PAWREC.XXXMODID = "530"; /* Module identification*/
      converseLib.validationFailed(312); /* Product line missing or invalid*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify approval manager*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BM001.PA-AFRGT-APVL-MGR > " ") /* Apvl mgr entered*/
    ;
    set VPAAFM01 empty;
    VPAAFM01.PA-AFRGT-APVL-MGR = PA0BM001.PA-AFRGT-APVL-MGR;
    ;
    PA0BS-20-IO7110-S(); /* Select DPRODA.VPAAFM01*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      set PA0BM001.PA-AFRGT-APVL-MGR cursor, bold; /* Highlight*/
      PAWREC.XXXMODID = "530"; /* Module identification*/
      converseLib.validationFailed(313); /* Approval mgr missing or invalid*/
    end
  end
  ;
end // end PA0B-530

// Process valid request
Function PA0B-600()
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    PA0BW00.PA0BW-IDX = 1; /* Init index*/
    while (PA0BW00.PA0BW-IDX <= PA0BW00.PA0BW-NBR-MAP-ROWS) /* All lines*/
      ;
      if (PA0BM001.PA0BM-SEL[PA0BW-IDX] != PA0BW01.PA0BM-SEL[PA0BW-IDX])
        ;
        PA0BW01.PA0BM-SEL[PA0BW-IDX] = PA0BM001.PA0BM-SEL[PA0BW-IDX]; /* Save changes*/
        PA0BW00.PA0BW-TEMP-STOR-PG-UPDT-SW = "Y"; /* Flag it chgd*/
      end
      ;
      PA0BW00.PA0BW-IDX = PA0BW00.PA0BW-IDX + 1;
    end
    ;
    ;
    PA0BW00.PA0BW-FMAT-MAP-SW = "Y"; /* Format the page*/
    ;
    if (converseVar.eventKey is pf7) /* Pf7 pressed*/
      PA0BW00.XXXTSPAG = PA0BW00.XXXTSPAG - 1; /* Decrement page*/
    else
      PA0BW00.XXXTSPAG = PA0BW00.XXXTSPAG + 1; /* Increment page*/
    end
    ;
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (PA0BW01.PA-AFRGT-APVL-MGR != PA0BM001.PA-AFRGT-APVL-MGR
   || PA0BW01.XPLCD != PA0BM001.XPLCD
   || PA0BW01.PA0BM-BEG-AFRGT-RQT-ID != PA0BM001.PA0BM-BEG-AFRGT-RQT-ID
   || PA0BW01.PA0BM-END-AFRGT-RQT-ID != PA0BM001.PA0BM-END-AFRGT-RQT-ID
   || PA0BW01.PA0BM-BEG-ORD-ADJ-NBR != PA0BM001.PA0BM-BEG-ORD-ADJ-NBR
   || PA0BW01.PA0BM-END-ORD-ADJ-NBR != PA0BM001.PA0BM-END-ORD-ADJ-NBR
   || PA0BW01.PA0BM-BEG-ORD-ADJ-BUY-MO != PA0BM001.PA0BM-BEG-ORD-ADJ-BUY-MO
   || PA0BW01.PA0BM-END-ORD-ADJ-BUY-MO != PA0BM001.PA0BM-END-ORD-ADJ-BUY-MO
   || PA0BW01.PA0BM-HDR-AFRGT-APVL-FL != PA0BM001.PA0BM-HDR-AFRGT-APVL-FL
   || PA0BW01.PA0BM-HDR-AFRGT-CNCL-FL != PA0BM001.PA0BM-HDR-AFRGT-CNCL-FL
   || PA0BW01.YSMXDV != PA0BM001.YSMXDV
   || PA0BW01.PA0BM-HDR-NEED-BLTO-FL != PA0BM001.PA0BM-HDR-NEED-BLTO-FL
   || PA0BW01.PA0BM-ETS-PAST-DT != PA0BM001.PA0BM-ETS-PAST-DT
   || PA0BW01.PA0BM-HDR-SY1STNBR != PA0BM001.PA0BM-HDR-SY1STNBR
   || PA0BW01.PA0BM-HDR-SY2CLRID != PA0BM001.PA0BM-HDR-SY2CLRID
   || PA0BW01.PA0BM-HDR-XDMCD != PA0BM001.PA0BM-HDR-XDMCD
   || PA0BW01.XCTCD != PA0BM001.XCTCD
   || PA0BW01.PA0BM-HDR-FY1FCTYC != PA0BM001.PA0BM-HDR-FY1FCTYC
   || PA0BW01.PA0BW-SCHEDULER-XXXUSER != 
  PA0BM001.PA0BM-SCHEDULER-XXXUSER
   || PA0BW01.PC2CUXID != PA0BM001.PC2CUXID
   || PA0BW01.KUCCOID != PA0BM001.KUCCOID
   || PA0BW01.KUMSTRID != PA0BM001.KUMSTRID
   || PA0BW01.XNXCD != PA0BM001.XNXCD)
    ;
    PA0BW00.PA0BW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
end // end PA0B-600

// Select 'S' DPRODA.VPAAFC01
Function PA0BS-01-IO7050-S()
   /* ------------------------------------------------------------*/
   /* Select 's' dproda.vpahdr01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO7050" ("S ", SQLCA, VPAAFC01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S01"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please notify programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODA.VPAAFC01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFC01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFC01.VPAAFC01-GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-01-IO7050-S

// Select 'S' DCORP.VSUMCD01
Function PA0BS-02-IO2640-S()
   /* ------------------------------------------------------------*/
   /* SELECT SET DCORP.VSUMCD01*/
   /* ------------------------------------------------------------*/
  ;
  set YSMREC empty;
  ;
  YSMTBLPF = "XDV"; /* TABLE PREFIX*/
  YSMSYSPF = "FF"; /* SYSTEM PREFIX*/
  YSMSUMID = 1; /* SUM ID*/
  YSMSRCVL = COMMAREA.XDVCD; /* SOURCE VALUE '01' '02'...*/
  ;
  try
    call "IO2640" ("S ", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  PAWREC.XXXMODID = "S02"; /* MODULE ID*/
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* RESOURCE NOT AVAILABLE*/
    ;
    converseLib.validationFailed(11); /**/
    TA1REC.TA1FUNC = "POST"; /* TERMINATION FUNCTION*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* NOTIFY SYSTEM DEVL*/
    TA1REC.TA1FUNC = "RETN"; /* TERMINATION FUNCTION*/
    ;
    converseLib.clearScreen();
    
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  PAWREC.XXXMODID = "S02"; /* Module identification*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCORP.VSUMCD01";
  TA1REC.TA1PGMNM = "PA0BS02"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-02-IO2640-S

// Purge any temporary storage
Function PA0BS-03-TA0050-P()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set PA0BW01 empty; /* M001 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Displayed page number*/
  PA0BW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  ;
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (PA0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Purge storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  PAWREC.XXXMODID = "S03"; /* Message location*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/
  ;
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  ;
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = PAWREC.XXXMODID; /* Message location*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE"; /* Description*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-03-TA0050-P

// Add page to temporary storage
Function PA0BS-04-TA0050-A()
   /* ------------------------------------------------------------*/
   /* Add the next page to the temporary storage queue.*/
   /* ------------------------------------------------------------*/
  ;
  PA0BW01.XXXTSLEN = PA0BW00.XXXTSLEN; /* Temp storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  ;
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (PA0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add page*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set PA0BW01 empty; /* M001 display storage*/
    ;
    PA0BW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    ;
    TA5REC.TA5TSQIX = 0; /* Clear last page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  PAWREC.XXXMODID = "S04"; /* Message location*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/
  ;
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  ;
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = PAWREC.XXXMODID; /* Message location*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE"; /* Description*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-04-TA0050-A

// Update temporary storage page
Function PA0BS-05-TA0050-U()
   /* ------------------------------------------------------------*/
   /* Update the page in the temporary storage queue.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5FNCCD = "U"; /* Function code*/
  ;
  try
    call "TA0050" (PA0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update page*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  PAWREC.XXXMODID = "S05"; /* Message location*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/
  ;
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  ;
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = PAWREC.XXXMODID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE TEMPORARY STORAGE PAGE"; /* Description*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-05-TA0050-U

// Read temporary storage page
Function PA0BS-06-TA0050-R()
   /* ------------------------------------------------------------*/
   /* Read the next page from the temporary storage queue.*/
   /* ------------------------------------------------------------*/
  ;
  PA0BW01.XXXTSLEN = PA0BW00.XXXTSLEN; /* Temp storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = PA0BW00.XXXTSPAG; /* Page number*/
  ;
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (PA0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Read page*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  PAWREC.XXXMODID = "S06"; /* Message location*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/
  ;
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  ;
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = PAWREC.XXXMODID; /* Message location*/
  TA1REC.TA1LOC = "READ TEMPORARY STORAGE PAGE"; /* Description*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-06-TA0050-R

// Select 'S' DFCTY.VFCTY001
Function PA0BS-07-IO2810-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or row not found*/
      ;
      return;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S07"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please notify programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DFCTY.VFCTY001 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-07-IO2810-S

// Select 'S' DPRODG.VSYCLR01
Function PA0BS-08-IO3120-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or row not found*/
      ;
      return;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S08"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please notify programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODG.VSYCLR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-08-IO3120-S

// Select 'SA' DPRODC.VPRDCU01
Function PA0BS-09-IO3340-SA()
  ;
   /* ------------------------------------------------------------*/
   /* Select alternate unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3340" ("SA", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S09"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SA DPRODC.VPRDCU01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC2REC.PC2KEY; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-09-IO3340-SA

// Select 'S ' DPRODC.VPRDCU01
Function PA0BS-10-IO3340-S()
  ;
   /* ------------------------------------------------------------*/
   /* Select unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3340" ("S ", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S10"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT S DPRODC.VPRDCU01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC2REC.PC2KEY; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-10-IO3340-S

// Select 'S1' VPAAFH01,VPAHDR01
Function PA0BS-11-PA1070-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested cursor.*/
   /* ------------------------------------------------------------*/
  ;
  PAFREC.PAF-IO-TASK = "S1"; /* Select cursor*/
  ;
  try
    call "PA1070" (PAFREC, SQLCA, VPAAFH01, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      return;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S11"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please notify programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT S1 VPAAFH01, VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFH01.VPAAFH01-GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-11-PA1070-S1

// Fetch 'N1' VPAAFH01,VPAHDR01
Function PA0BS-12-PA1070-N1()
   /* ------------------------------------------------------------*/
   /* Select the requested cursor.*/
   /* ------------------------------------------------------------*/
  ;
  PAFREC.PAF-IO-TASK = "N1"; /* Fetch*/
  ;
  try
    call "PA1070" (PAFREC, SQLCA, VPAAFH01, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* Normal return code*/
      ;
      return;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S12"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please notify programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH N1 VPAAFH01, VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFH01.VPAAFH01-GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-12-PA1070-N1

// Process afrgt records
Function PA0BS-120()
   /* --------------------------------------------------------------*/
   /* Finish processing the airfreight records.*/
   /* - Declare and process a cursor on DPRODA.VPAITM01 to get*/
   /* factory and ets dates.*/
   /* - Verify fcty and ets dates requested for display.*/
   /* - Declare and process a cursor on DPRODA.VPAWRK01 to get*/
   /* total o/a a/f qty.*/
   /* - Format and write a record to the temp storage page.*/
   /* --------------------------------------------------------------*/
  ;
   /* ==> Reformat the ets past date*/
  ;
  if (PA0BM001.PA0BM-ETS-PAST-DT > 0) /* If ets past date entered*/
    ;
    PA0BW00.PA0BW-FMAT-MMDDYY = PA0BM001.PA0BM-ETS-PAST-DT;
    PA0BW00.PA0BW-MM = PA0BW00.PA0BW-FMAT-MM;
    PA0BW00.PA0BW-DD = PA0BW00.PA0BW-FMAT-DD;
    PA0BW00.PA0BW-YY = PA0BW00.PA0BW-FMAT-YY;
    if (PA0BW00.PA0BW-YY <= 70)
      PA0BW00.PA0BW-CC = 20;
    else
      PA0BW00.PA0BW-CC = 19;
    end
    PA0BW00.PA0BW-ETS-PAST-CCYYMMDD = PA0BW00.PA0BW-CCYYMMDD;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* - Declare and process the DPRODA.VPAITM01 cursor.*/
   /* --------------------------------------------------------------*/
  ;
  PA0BW00.PA0BW-END-PAITM-CSR-SW = "N"; /* Init cursor switch*/
  PA0BW00.PA0BW-PAITM-EXIST-SW = "N"; /* VPAITM01 rec exists switch*/
  PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "N";
  PA0BW00.FY1FCTYC = " "; /* Init factory*/
  PA0BW00.PC6ETSDT = 0; /* Init ets date*/
  ;
  set PA2REC empty;
  PA2REC.PA1OANBR = PA1REC.PA1OANBR;
  PA2REC.YESCD = "*";
  ;
  PA0BS-14-IO4980-S1(); /* Declare DPRODA.VPAITM01 cursor*/
  PA0BS-15-IO4980-N1(); /* Fetch DPRODA.VPAITM01 record*/
  ;
  while (PA0BW00.PA0BW-END-PAITM-CSR-SW == "N" /* Until end of cursor*/
   && PA0BW00.PA0BW-WRITE-AFRGT-REC-SW == "N")
    ;
    PA0BW00.FY1FCTYC = PA2REC.FY1FCTYC;
    if (PA2REC.YMTCD == "AF")
      ;
      PA0BW00.PA0BW-PAITM-EXIST-SW = "Y"; /* PAITM does exist*/
      ;
      /* TAKE UPDATED ETS DATE IF IT EXISTS.*/
      ;
      if (PA2REC.PA-UPD-PC-EST-HDT != 0)
        if (PA2REC.PA-UPD-PC-EST-HDT > PA0BW00.PC6ETSDT)
          PA0BW00.PC6ETSDT = PA2REC.PA-UPD-PC-EST-HDT;
        end
      else
        if (PA2REC.PC6ETSDT > PA0BW00.PC6ETSDT)
          PA0BW00.PC6ETSDT = PA2REC.PC6ETSDT; /* Save ets date*/
        end
      end
      ;
    end
    ;
    /* CHECK TO SEE IF VALID FOR SELECTION CRITERIA*/
    ;
    PA0BS-12001();
    ;
    PA0BS-15-IO4980-N1(); /* Fetch DPRODA.VPAITM01 record*/
    ;
  end
  ;
  PA0BS-16-IO4980-C1(); /* Close the DPRODA.VPAITM01 cursor*/
  ;
   /* --------------------------------------------------------------*/
   /* IF DATA IS STILL VALID TO WRITE, CHECK TO MAKE SURE LATEST*/
   /* ETS ISN'T 0.*/
   /* --------------------------------------------------------------*/
  ;
  if (PA0BW00.PA0BW-WRITE-AFRGT-REC-SW == "Y"
   && PA0BM001.PA0BM-ETS-PAST-DT > 0)
    if (PA0BW00.PC6ETSDT == 0 /* LATEST ETS*/
     || PA0BW00.PC6ETSDT > PA0BW00.PA0BW-ETS-PAST-CCYYMMDD)
      PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "N";
    end
  end
  ;
   /* --------------------------------------------------------------*/
   /* If data is still valid to write, obtain AF qty from*/
   /* DPRODA.VPAWRK01 and write the record to temporary storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (PA0BW00.PA0BW-WRITE-AFRGT-REC-SW == "Y") /* Still valid*/
    ;
    /* ==> Get qtys from DPRODA.VPAWRK01*/
    ;
    PA0BW00.PA0BM-AF-TOTAL-QTY = 0;
    PA0BW00.PA0BW-END-PAWRK-CSR-SW = "N";
    ;
    set PACREC empty;
    PACREC.PA1OANBR = PA1REC.PA1OANBR;
    PACREC.PACSEVAL = "*";
    PACREC.PACORDTY = "9";
    PACREC.ZZZSDT = -1;
    PACREC.ZZZSTM = -1;
    ;
    PA0BS-17-IO4950-S2(); /* Declare csr DPRODA.VPAWRK01*/
    PA0BS-18-IO4950-N2(); /* Fetch csr DPRODA.VPAWRK01*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      PA0BW00.PA0BW-END-PAWRK-CSR-SW = "Y";
    end
    ;
    while (PA0BW00.PA0BW-END-PAWRK-CSR-SW == "N") /* Until end of cursor*/
      ;
      if (PACREC.YMTCD == "AF")
        sysVar.arrayIndex = 1;
        while (sysVar.arrayIndex <= 40)
          PA0BW00.PA0BM-AF-TOTAL-QTY = PA0BW00.PA0BM-AF-TOTAL-QTY           + PACREC.PACFLADJ[sysVar.arrayIndex];
          sysVar.arrayIndex = sysVar.arrayIndex + 1;
        end
      end
      ;
      PA0BS-18-IO4950-N2(); /* Fetch csr DPRODA.VPAWRK01*/
      ;
      if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
        PA0BW00.PA0BW-END-PAWRK-CSR-SW = "Y";
      end
    end
    ;
    PA0BS-19-IO4950-C2(); /* Close csr DPRODA.VPAWRK01*/
    ;
    ;
    /* ==> Get short style desc from DPRODG.VSYCLR01*/
    ;
    set PG2REC empty;
    PG2REC.XGPCD = "02";
    PG2REC.SY1STNBR = PA1REC.SY1STNBR;
    PG2REC.SY2CLRID = PA1REC.SY2CLRID;
    PG2REC.XDMCD = PA1REC.XDMCD;
    ;
    PA0BS-08-IO3120-S(); /* Select DPRODG.VSYCLR01*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      PG2REC.SY1SSTNM = "************";
    end
    ;
    ;
    PA0B-121(); /* Save data in display storage*/
    ;
    if (PA0BW00.PA0BW-IDX >= PA0BW00.PA0BW-NBR-MAP-ROWS) /* If page full*/
      PA0BS-04-TA0050-A(); /* Add page to temporary storage queue*/
      PA0BW00.PA0BW-IDX = 0;
    end
  end
end // end PA0BS-120

// CHECK AGAINST SEL CRITERIA
Function PA0BS-12001()
   /* --------------------------------------------------------------*/
   /* --------------------------------------------------------------*/
   /* CHECK AGAINST SELECTION CRITERIA.*/
   /* IF NO CRITERIA ENTERED, ACCEPT RECORD.*/
   /* --------------------------------------------------------------*/
   /* --------------------------------------------------------------*/
  ;
  if (PA0BM001.PA0BM-HDR-FY1FCTYC == " "
   && PA0BM001.XCTCD == " "
   && PA0BM001.PC2CUXID == " ")
    PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "Y";
    return;
  end
  ;
   /* --------------------------------------------------------------*/
   /* Now check to see that the factory/ctry/ets date were rqstd.*/
   /* --------------------------------------------------------------*/
  ;
   /* ==> Check fcty*/
  ;
  if (PA0BM001.PA0BM-HDR-FY1FCTYC > " " /* If specific fcty rqstd*/
  )                                    
    if (PA0BM001.PA0BM-HDR-FY1FCTYC == PA2REC.FY1FCTYC)
      PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "Y";
    else
      PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "N";
      return;
    end
    ;
  end
  ;
   /* ==> Check ctry*/
  ;
  if (PA0BM001.XCTCD > " ") /* Ctry specified*/
    ;
    set FY1REC empty;
    FY1REC.XGPCD = "02";
    FY1REC.FY1FCTYC = PA0BW00.FY1FCTYC;
    ;
    PA0BS-07-IO2810-S(); /* Select DFCTY.VFCTY001*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
     && FY1REC.XCTCD == PA0BM001.XCTCD) /* and countries match*/
      PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "Y";
    else
      PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "N";
      return;
    end
  end
  ;
   /* ==> Check cust xref*/
  ;
  if (PA0BM001.PC2CUXID > " ")
    ;
    if (PA0BM001.PC2CUXID == PA2REC.PC2CUXID) /* Diff xref*/
      PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "Y";
    else
      PA0BW00.PA0BW-WRITE-AFRGT-REC-SW = "N";
      return;
    end
    ;
  end
  ;
end // end PA0BS-12001

// CLOSE 'C1' VPAAFH01,VPAHDR01
Function PA0BS-13-PA1070-C1()
   /* ------------------------------------------------------------*/
   /* Select the requested cursor.*/
   /* ------------------------------------------------------------*/
  ;
  PAFREC.PAF-IO-TASK = "C1"; /* Fetch*/
  ;
  try
    call "PA1070" (PAFREC, SQLCA, VPAAFH01, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S13"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please notify programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE C1 VPAAFH01, VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFH01.VPAAFH01-GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-13-PA1070-C1

// Select 'S1' DPRODA.VPAITM01
Function PA0BS-14-IO4980-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO4980" ("S1", SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      return;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S14"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please notify programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S1\" DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-14-IO4980-S1

// Fetch 'N1' DPRODA.VPAITM01
Function PA0BS-15-IO4980-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO4980" ("N1", SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      PA0BW00.PA0BW-END-PAITM-CSR-SW = "N";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* ROW NOT FOUND*/
      PA0BW00.PA0BW-END-PAITM-CSR-SW = "Y";
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S15"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please notify programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH \"N1\" DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-15-IO4980-N1

// Close 'C1' DPRODA.VPAITM01
Function PA0BS-16-IO4980-C1()
   /* ------------------------------------------------------------*/
   /* Close the requested table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO4980" ("C1", SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      return;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S16"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please notify programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE \"C1\" DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-16-IO4980-C1

// Select 'S2' DPRODA.VPAWRK01
Function PA0BS-17-IO4950-S2()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAWRK01 TABLE.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4950" ("S2", SQLCA, PACREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S17"; /* Module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S2\" DPRODA.VPAWRK01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0BS17"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1GROUP; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
  ;
end // end PA0BS-17-IO4950-S2

// Fetch 'N2' DPRODA.VPAWRK01
Function PA0BS-18-IO4950-N2()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAWRK01 TABLE.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4950" ("N2", SQLCA, PACREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or no row found*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S18"; /* Module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH \"N2\" DPRODA.VPAWRK01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0BS18"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1GROUP; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
  ;
end // end PA0BS-18-IO4950-N2

// Close 'C2' DPRODA.VPAWRK01
Function PA0BS-19-IO4950-C2()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAWRK01 TABLE.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4950" ("C2", SQLCA, PACREC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S19"; /* Module identification*/
  ;
  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE \"C2\" DPRODA.VPAWRK01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0BS19"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1GROUP; /* ===>Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack;
  ;
  ;
end // end PA0BS-19-IO4950-C2

// Select 'S ' DPRODA.VPAAFM01
Function PA0BS-20-IO7110-S()
  ;
   /* ------------------------------------------------------------*/
   /* Select unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO7110" ("S ", SQLCA, VPAAFM01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S20"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT S DPRODA.VPAAFM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFM01.VPAAFM01-GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-20-IO7110-S

// Select 'S' DPRODA.VPAAFA01
Function PA0BS-21-IO7100-S()
   /* ------------------------------------------------------------*/
   /* Select 's' dproda.vpahdr01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO7100" ("S ", SQLCA, VPAAFA01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S21"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please notify programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODA.VPAAFA01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFA01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFA01.VPAAFA01-GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-21-IO7100-S

// Select 'S1' DPRODA.VPAAFM01
Function PA0BS-22-IO7110-S1()
  ;
   /* ------------------------------------------------------------*/
   /* Select a table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO7110" ("S1", SQLCA, VPAAFM01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S22"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT S1 DPRODA.VPAAFM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFM01.VPAAFM01-GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-22-IO7110-S1

// Fetch 'N1' DPRODA.VPAAFM01
Function PA0BS-23-IO7110-N1()
  ;
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO7110" ("N1", SQLCA, VPAAFM01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S23"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH N1 DPRODA.VPAAFM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFM01.VPAAFM01-GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-23-IO7110-N1

// Close 'C1' DPRODA.VPAAFM01
Function PA0BS-24-IO7110-C1()
  ;
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO7110" ("C1", SQLCA, VPAAFM01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S24"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE C1 DPRODA.VPAAFM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAAFM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAAFM01.VPAAFM01-GROUP; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-24-IO7110-C1

// Select 'S' DPRODG.VSUSER01
Function PA0BS-25-IO1200-SA()
   /* ------------------------------------------------------------*/
   /* Select 's' DPRODG.VSUSER01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO1200" ("SA", SQLCA, PG1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  PAWREC.XXXMODID = "S25"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    ;
    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* 'error - please notify programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODG.VSUSER01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUSER01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG1REC.XXXUSER; /* Key field*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end PA0BS-25-IO1200-SA

//*** RECORD=PA0BW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record PA0BW00 type basicRecord
  10 PA0BW-REQUEST-DATA-SW PA0BW-REQUEST-DATA-SW ; 
  10 PA0BW-FMAT-MAP-SW PA0BW-FMAT-MAP-SW ; 
  10 PA0BW-TEMP-STOR-PG-UPDT-SW PA0BW-TEMP-STOR-PG-UPDT-SW ; 
  10 PA0BW-END-AFRGT-CSR-SW PA0BW-END-AFRGT-CSR-SW ; 
  10 PA0BW-END-PAITM-CSR-SW PA0BW-END-PAITM-CSR-SW ; 
  10 PA0BW-END-PAWRK-CSR-SW PA0BW-END-PAWRK-CSR-SW ; 
  10 PA0BW-END-PAAFM-CSR-SW PA0BW-END-PAAFM-CSR-SW ; 
  10 PA0BW-PAITM-EXIST-SW PA0BW-PAITM-EXIST-SW ; 
  10 PA0BW-AFRGT-APRVD-SW PA0BW-AFRGT-APRVD-SW ; 
  10 PA0BW-WRITE-AFRGT-REC-SW PA0BW-WRITE-AFRGT-REC-SW ; 
  10 PA0BW-NBR-MAP-ROWS PA0BW-NBR-MAP-ROWS ; 
  10 PA0BW-MAX-NBR-OF-PA1OANBR PA0BW-MAX-NBR-OF-PA1OANBR ; 
  10 PA0BW-IDX PA0BW-IDX ; 
  10 PA0BW-PAGE-IDX PA0BW-PAGE-IDX ; 
  10 PA0BW-COUNT PA0BW-COUNT ; 
  10 PA0BW-FMAT-MMDDYY PA0BW-FMAT-MMDDYY ; 
    15 PA0BW-FMAT-MM PA0BW-FMAT-MM ; 
    15 PA0BW-FMAT-DD PA0BW-FMAT-DD ; 
    15 PA0BW-FMAT-YY PA0BW-FMAT-YY ; 
  10 PA0BW-CCYYMMDD PA0BW-CCYYMMDD ; 
    15 PA0BW-CCYYMM PA0BW-CCYYMM ; 
      20 PA0BW-CC PA0BW-CC ; 
      20 PA0BW-YYMM PA0BW-YYMM ; 
        25 PA0BW-YY PA0BW-YY ; 
        25 PA0BW-MM PA0BW-MM ; 
    15 PA0BW-DD PA0BW-DD ; 
  10 PA0BW-FROM-BUY-MO-CCYYMMDD PA0BW-FROM-BUY-MO-CCYYMMDD ; 
  10 PA0BW-TO-BUY-MO-CCYYMMDD PA0BW-TO-BUY-MO-CCYYMMDD ; 
  10 PA0BW-ETS-PAST-CCYYMMDD PA0BW-ETS-PAST-CCYYMMDD ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 PC6ETSDT PC6ETSDT ; 
  10 FY1FCTYC FY1FCTYC ; 
  10 PC2CUXID PC2CUXID ; 
  10 PA0BM-AF-TOTAL-QTY PA0BM-AF-TOTAL-QTY ; 
  10 PA0BM-END-AFRGT-RQT-ID PA0BM-END-AFRGT-RQT-ID ; 
end // end PA0BW00

//*** RECORD=PA0BW01 ****
// ------------------------------------------------------------
// Application display storage.
// ------------------------------------------------------------
// 
// ***********************
Record PA0BW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(780) ; 
    10 PA0BM-CURR-BUY-MO PA0BM-CURR-BUY-MO ; 
    10 PA-AFRGT-APVL-MGR PA-AFRGT-APVL-MGR ; 
    10 XPLCD XPLCD ; 
    10 XPLDESC XPLDESC ; 
    10 PA0BM-BEG-AFRGT-RQT-ID PA0BM-BEG-AFRGT-RQT-ID ; 
    10 PA0BM-END-AFRGT-RQT-ID PA0BM-END-AFRGT-RQT-ID ; 
    10 PA0BM-BEG-ORD-ADJ-NBR PA0BM-BEG-ORD-ADJ-NBR ; 
    10 PA0BM-END-ORD-ADJ-NBR PA0BM-END-ORD-ADJ-NBR ; 
    10 PA0BM-BEG-ORD-ADJ-BUY-MO PA0BM-BEG-ORD-ADJ-BUY-MO ; 
    10 PA0BM-END-ORD-ADJ-BUY-MO PA0BM-END-ORD-ADJ-BUY-MO ; 
    10 PA0BM-HDR-AFRGT-APVL-FL PA0BM-HDR-AFRGT-APVL-FL ; 
    10 PA0BM-HDR-AFRGT-CNCL-FL PA0BM-HDR-AFRGT-CNCL-FL ; 
    10 YSMXDV YSMXDV ; 
    10 PA0BM-HDR-NEED-BLTO-FL PA0BM-HDR-NEED-BLTO-FL ; 
    10 PA0BM-ETS-PAST-DT PA0BM-ETS-PAST-DT ; 
    10 PA0BM-HDR-SY1STNBR PA0BM-HDR-SY1STNBR ; 
    10 PA0BM-HDR-SY2CLRID PA0BM-HDR-SY2CLRID ; 
    10 PA0BM-HDR-XDMCD PA0BM-HDR-XDMCD ; 
    10 XCTCD XCTCD ; 
    10 PA0BM-HDR-FY1FCTYC PA0BM-HDR-FY1FCTYC ; 
    10 PC2CUXID PC2CUXID ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 PA0BM-SEL PA0BM-SEL [5] ; 
    10 PA-AFRGT-RQT-ID PA-AFRGT-RQT-ID [5] ; 
    10 PA1OANBR PA1OANBR [5] ; 
    10 YESCD YESCD [5] ; 
    10 PA1HLDFL PA1HLDFL [5] ; 
    10 PA0BM-ITM-FL PA0BM-ITM-FL [5] ; 
    10 PC6ETSDT PC6ETSDT [5] ; 
    10 FY1FCTYC FY1FCTYC [5] ; 
    10 SY1STNBR SY1STNBR [5] ; 
    10 SY2CLRID SY2CLRID [5] ; 
    10 XDMCD XDMCD [5] ; 
    10 SY1SSTNM SY1SSTNM [5] ; 
    10 PA0BM-AF-TOTAL-QTY PA0BM-AF-TOTAL-QTY [5] ; 
    10 ZZZSDT ZZZSDT [5] ; 
    10 PA-AFRGT-APVL-FL PA-AFRGT-APVL-FL [5] ; 
    10 PA-AFRGT-CNCL-FL PA-AFRGT-CNCL-FL [5] ; 
    10 PA-NEED-BLTO-FL PA-NEED-BLTO-FL [5] ; 
    10 PA-RSN-COMNT1 PA-RSN-COMNT1 [5] ; 
    10 XXXPGUID XXXPGUID [5] ; 
    10 PA0BW-SCHEDULER-XXXUSER PA0BW-SCHEDULER-XXXUSER ; 
end // end PA0BW01

//*** RECORD=PAFREC ****
// DB2 TABLE VIEW:      DPRODA.VPAHDR01
//                  AND DPRODA.VPAAFH01
// 
// COPYLIB MEMBER:      DCL00780
//                  AND DPAAFH01
// 
// I/O MODULE:          PA1070
// 
// KEY TO DB2 TABLE:    (NONE)
// 
// 
// MAINTENANCE LOG:
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          02/11/94  JALLE1  New record definition.
// **********************
Record PAFREC type basicRecord
  5 PAFREC-GROUP PAFREC-GROUP ; 
    10 PAF-IO-TASK PAF-IO-TASK ; 
    10 PAF-LO-PA-AFRGT-RQT-ID PAF-LO-PA-AFRGT-RQT-ID ; 
    10 PAF-HI-PA-AFRGT-RQT-ID PAF-HI-PA-AFRGT-RQT-ID ; 
    10 PAF-LO-PA-ORD-ADJ-NBR1 PAF-LO-PA-ORD-ADJ-NBR1 ; 
    10 PAF-LO-PA-ORD-ADJ-NBR2 PAF-LO-PA-ORD-ADJ-NBR2 ; 
    10 PAF-HI-PA-ORD-ADJ-NBR1 PAF-HI-PA-ORD-ADJ-NBR1 ; 
    10 PAF-HI-PA-ORD-ADJ-NBR2 PAF-HI-PA-ORD-ADJ-NBR2 ; 
    10 PAF-LO-PA-ORD-ADJ-BUY-MO PAF-LO-PA-ORD-ADJ-BUY-MO ; 
    10 PAF-HI-PA-ORD-ADJ-BUY-MO PAF-HI-PA-ORD-ADJ-BUY-MO ; 
    10 PA-AFRGT-APVL-FL PA-AFRGT-APVL-FL ; 
    10 PA-AFRGT-CNCL-FL PA-AFRGT-CNCL-FL ; 
    10 YSMXDV YSMXDV ; 
    10 PA-NEED-BLTO-FL PA-NEED-BLTO-FL ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
end // end PAFREC

//*** RECORD=VPAAFC01 ****
// ************** AIR FREIGHT CONTROL RECORD  *****************
// 
// DB2 TABLE VIEW:      DPRODA.VPAAFC01
// 
// COPYLIB MEMBER:      DPAAFC01
// 
// I/O MODULE:
// 
// KEY TO DB2 TABLE:
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 01/18/94   MSMIT2   New record.
// ************************
Record VPAAFC01 type basicRecord
  5 VPAAFC01-GROUP VPAAFC01-GROUP ; 
    10 PA-AFRGT-NXT-ID PA-AFRGT-NXT-ID ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZSTM ZZZSTM ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end VPAAFC01

// NEXT AIR FRIEGHT REQUEST ID
DataItem PA-AFRGT-NXT-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// TOTAL AF QTY
DataItem PA0BM-AF-TOTAL-QTY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// LOW RANGE AF REQ NO
DataItem PA0BM-BEG-AFRGT-RQT-ID num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// FROM BUY MONTH
DataItem PA0BM-BEG-ORD-ADJ-BUY-MO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// LOW RANGE OPEN OA REQ NO
DataItem PA0BM-BEG-ORD-ADJ-NBR num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// CURRENT BUY DATE
DataItem PA0BM-CURR-BUY-MO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// HIGH END AF REQ NO
DataItem PA0BM-END-AFRGT-RQT-ID num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// TO BUY MONTH
DataItem PA0BM-END-ORD-ADJ-BUY-MO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// HIGN END OPEN OA REQ NO
DataItem PA0BM-END-ORD-ADJ-NBR num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// SEARCH FOR ETS PAST THIS DATE
DataItem PA0BM-ETS-PAST-DT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// AIR FREIGHT APPROVAL FLAG
DataItem PA0BM-HDR-AFRGT-APVL-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// AIR FREIGHT CANCEL FLAG
DataItem PA0BM-HDR-AFRGT-CNCL-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FACTORY CODE
DataItem PA0BM-HDR-FY1FCTYC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NEED DEPT RESP FLAG
DataItem PA0BM-HDR-NEED-BLTO-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_STY_NBR
DataItem PA0BM-HDR-SY1STNBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_COLR_CD_ID
DataItem PA0BM-HDR-SY2CLRID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DIMENSION CODE
DataItem PA0BM-HDR-XDMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PA item exists flag
DataItem PA0BM-ITM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SELECT FIELD
DataItem PA0BM-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Air freight was approved sw
DataItem PA0BW-AFRGT-APRVD-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Generic date field CC
DataItem PA0BW-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic date field CCYYMM
DataItem PA0BW-CCYYMM num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic date field CCYYMMDD
DataItem PA0BW-CCYYMMDD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic counter
DataItem PA0BW-COUNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic date field DD
DataItem PA0BW-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// End of air freight csr switch
DataItem PA0BW-END-AFRGT-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of DPRODA.VPAAFM01 switch
DataItem PA0BW-END-PAAFM-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of DPRODA.VPAITM01 switch
DataItem PA0BW-END-PAITM-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of DPRODA.VPAWRK01 switch
DataItem PA0BW-END-PAWRK-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Ets past date CCYYMMDD format
DataItem PA0BW-ETS-PAST-CCYYMMDD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format date field DD
DataItem PA0BW-FMAT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format the map switch
DataItem PA0BW-FMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format date field MM
DataItem PA0BW-FMAT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format date field MMDDYY
DataItem PA0BW-FMAT-MMDDYY num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format date field YY
DataItem PA0BW-FMAT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// From buy month CCYYMMDD
DataItem PA0BW-FROM-BUY-MO-CCYYMMDD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic index
DataItem PA0BW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Max nbr of oa nbrs to pass
DataItem PA0BW-MAX-NBR-OF-PA1OANBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic date field MM
DataItem PA0BW-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Number of rows on map
DataItem PA0BW-NBR-MAP-ROWS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Page index
DataItem PA0BW-PAGE-IDX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DPRODA.VPAITM01 recs exists sw
DataItem PA0BW-PAITM-EXIST-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem PA0BW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// user terminal id
DataItem PA0BW-SCHEDULER-XXXUSER char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Temp storage updated switch
DataItem PA0BW-TEMP-STOR-PG-UPDT-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// To buy month CCYYMMDD
DataItem PA0BW-TO-BUY-MO-CCYYMMDD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Write the afrgt record switch
DataItem PA0BW-WRITE-AFRGT-REC-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Generic date field YY
DataItem PA0BW-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic date field YYMM
DataItem PA0BW-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// High PA-AFRGT-RQT-ID
DataItem PAF-HI-PA-AFRGT-RQT-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// High PA-ORD-ADJ-BUY-MO
DataItem PAF-HI-PA-ORD-ADJ-BUY-MO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// High PA-ORD-ADJ-NBR
DataItem PAF-HI-PA-ORD-ADJ-NBR1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// High PA-ORD-ADJ-NBR
DataItem PAF-HI-PA-ORD-ADJ-NBR2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// IO task
DataItem PAF-IO-TASK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Low PA-AFRGT-RQT-ID
DataItem PAF-LO-PA-AFRGT-RQT-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Low PA-ORD-ADJ-BUY-MO
DataItem PAF-LO-PA-ORD-ADJ-BUY-MO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Low PA-ORD-ADJ-NBR
DataItem PAF-LO-PA-ORD-ADJ-NBR1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Low PA-ORD-ADJ-NBR
DataItem PAF-LO-PA-ORD-ADJ-NBR2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Group level
DataItem PAFREC-GROUP char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record group level
DataItem VPAAFC01-GROUP char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

