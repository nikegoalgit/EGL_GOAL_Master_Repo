package pa0e;
import corpcom2.XX0XW02;
import corpcom2.YSMREC;
import corpcom3.XPPA001;
import corpcom3.XPPA020;
import corpcom3.XPPA100;
import corpcom3.XPTA0P;
import corpcom3.XPXDM01;
import corpcom3.XPXX001;
import corpcom3.XPYES01;
import corpcom3.XPYET01;
import corpcom4.XSPAS01;
import corpcom4.XSPG202;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XX1;
import corpcom7.XX2;
import corpcom7.XXXPGUID;
import corpx1.XDMCD;
import corpx1.XDMTBL;
import corpx2.XNXCD;
import corpy2.YESCD;
import corpy2.YESSDESC;
import corpy2.YESTBL;
import corpy2.YETCD;
import corpy2.YETTBL;
import corpy2.YSMXDV;
import corpz3.ZZZSDT;
import fb.common.FB9REC;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import ku.common.KUCCOID;
import ku.common.KUMSTRID;
import pa.common.*;
import pa.common.PA-AFRGT-RQT-ID;
import pa.common.PA1BUYMO;
import pa.common.PA1CMIND;
import pa.common.PA1HLDFL;
import pa.common.PA1OANBR;
import pa.common.PA1OATXT;
import pa.common.PA1REC;
import pa.common.PA1RQQTY;
import pa.common.PA1YESDT;
import pa.common.PA4REC;
import pa.common.PA7REC;
import pa.common.PA8REC;
import pa.common.PA9REC;
import pa.common.PAWBUYYM;
import pa.common.PAWREC;
import pa.common.PAYREC;
import pa.common.PAYSTGRP;
import pc.common.PC2CUXID;
import pc.common.PC2REC;
import pg.common.PG1REC;
import pg.common.PG1SC4CD;
import pg.common.PG2REC;
import sy.common.SY1STNBR;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TA6REC;
import ta.common.TAEREC;

//*** PROGRAM=PA0E ****
// THIS APPLICATION ALLOWS A USER TO SELECT A LIST OF O/A
// HEADERS BASED ON DATA THAT IS ENTERED AT THE TOP OF MAP ONE.
// 
// THERE IS ONLY ONE SCREEN IN THIS APPLICATION, EXCLUDING THE
// POPUP SCREENS FOR CORPORATE TABLES AND HEADER COMMENTS.
// 
// THE SCREEN ALLOWS THE USERS TO ENTER THREE OR MORE DATA ITEM
// CATEGORIES, AND BE PRESENTED WITH A LIST OF O/A HEADERS THAT
// MEET THEIR ENTERED CRITERIA.  THE USER MAY THEN REQUEST TO
// SEE THE MOST CURRENT COMMENT ASSOICATED WITH AN O/A HEADER,
// OR TO SELECT HEADERS THAT WILL BE SENT TO ANOTHER PROCESS
// FOR FURTHER VIEWING OR MAINTENANCE.
// 
// THE USER MAY EXIT TO ANOTHER APPLICATION AT ANY TIME VIA
// FASTPATH OR PF KEY.
// ------------------------------------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          11/13/89  SCOCHR  NEW APPLICATION
// 17       10/15/90  RSAMUE  sum code tble chg
// 147      10/15/90  RSAMUE  error message part of xdiv prbl
// 0000001  10/17/90  MSMIT2  Add TA0230 to determine if the
//                            user is in the production or test
//                            region.  This logic allows the
//                            correct JCL to be submitted.
// pa#180   11/13/90  MSMIT2  don't allow combined oa's to be
//                            combined again (status 97).
// pa#172   ''    ''  ''  ''  default color code to '   '
//                            instead of '00 '.
// 000002   ''    ''  ''  ''  don't allow pre-advice (type
//                            'PR') to be combined.  make sure
//                            color, dimension, and company
//                            id's match.  Also, don't allow
//                            oa status 70, 71, 75, or 98 to
//                            combined.
// PA#189   12/14/90  MSMIT2  Now that the color field defaults
//                            to blank, treat the blank color
//                            as a wild card.  This allows all
//                            possible colors for that style
//                            to appear on the screen.
// PA#190   12/14/90  MSMIT2  PA0E has been modified to allow
//                            users to pull up their OAs by
//                            entering their userid in the
//                            'ACCOUNT REP' field on the screen
// PA#17    12/18/90  MSMIT2  PA0E has been modified to use
//                            the new DCORP.VSUMCD01 table.
//                            This allows the user to pull up
//                            the OAs by status code type.
// 000003   04/02/91  MSMIT2  Change combine check in PA0ES21
//                            to not check company number.
// PA#229   04/10/91  MSMIT2  Add factory selection to top of
//                            screen.  This also required a
//                            change to IOMOD pa1000.
// PA#230                     Also, blank out the dimension
//                            field (wildcard).
// PA#196   05/22/91  MSMIT2  add hold and related o/a flags.
//                            also add 'hdr stat grp' popup and
//                            pf24 transfer to pa0w.
// 000004   08/27/91  MSMIT2  convert pa210d and pa211d to
//                            cobol 2.  also, change report to
//                            use account rep and factory as
//                            part of selection criteria.
// PA#252   11/06/91  dhales  colleen pollock's changes
//                            to make nil to domestic show up
//                            for sum div code 10.
// PA#252   12/05/91  dhales  added ability to exclude a
//                            particular status or type from
//                            selection criteria.
// 000005   04/07/92  MSMIT2  INITIAL ENTRY INTO SCREEN AND
//                            PF20 TO PRINT CAUSED PROGRAM
//                            PA210D TO ABEND BECAUSE GARBAGE
//                            WAS PLACED IN INPUT CARD.  PROC
//                            PA0E550 WAS CHANGED TO A STATE-
//                            MENT GROUP (PA0ES40) AND ALSO
//                            CALLED FROM PA0E338.
// 000006   04/29/92  dhales  strange error when returning from
//                            pa0p and msg is simultaneously
//                            being sent to terminal -- placed
//                            in abend on sql -805 in pa0es01
// 000007   04/07/92  MSMIT2  INITIAL ENTRY INTO SCREEN AND
// 000008   12/09/92  dhales  pa311 add pfkey to xfer to pa0p
// pa308     2/10/93  dhales  allow pr's and eo's to combine
// pa329     3/23/93  pkhan   change oa range to begin at 1
//                            when header status grp is open
// PA330    05/20/93  MSMIT2  ONLY ALLOW 'OR' OAS TO COMBINE
//                            WITH OTHER 'OR' OAS.
// 000009   06/08/93  MSMIT2  ADD FACTORY CODES.
// 000010   06/11/93  MSMIT2  CLEAR OUT FACOTRY CODES WITH
//                            BLANK BODY OF MAP.
// 000011   06/17/93  MSMIT2  EXTEND THE PO BUY MONTH TO
//                            INCLUDE FY05 OVERRUN O/AS.
// PA300    06/28/93  MSMIT2  ADD PF5 TO TRANSFER TO PA0A.
// PA342    07/26/93  MSMIT2  ADD SORT ORDER FOR STYLE/COLOR
//                            AND DEFAULT DIVISION BASED ON
//                            USER SIGNON.
// 000012   08/03/93  MSMIT2  MOVE SORT ORDER FIELD OVER.
// 000013   08/09/93  MSMIT2  DATABASE CHANGES.
// PA0345   11/02/93  MSMIT2  PRINT REPORT IN CORRECT SORT
//                            ORDER.
// FB322    12/06/93  MSMIT2  RESET PAWREC.XXXMSGNO IN PA0E200
//                            AFTER MOVED TO EZEMNO.
// FB322    12/16/93  MSMIT2  ONLY ALLOW 'PR' OAS TO COMBINE
//                            WITH OTHER 'PR' OAS.
// PA302    02/11/94  PMAINW  DO NOT ALLOW AIR FREIGHT REQUESTS
//                            TO BE COMBINED.
// PA9999   01/24/95  MSMIT2  ALLOW INQUIRY ONLY FOR EUROPEAN
//                            O/AS.
// PA9999   09/24/96  WROBIN  Allow select range to go back
//                            four years instead of two.
// PA2009   07/02/98  MSEVAL  Fixed the bug in the mode of
//                            display of REQ-DT field.Modified
//                            the FACTORIES field to display
//                            3 factory code values,each of 3
//                            character width.
// PA2011   08/20/98  MSEVAL  Fixed the BUY MONTH error in PA0E
//                            screen.
// Y2KFIX   12/10/97  DKENNY  Y2K MODIFICATIONS MADE TO:
//                            PA0EM001, PA0ES02, PA0ES40,
//                            PA0E510, KG0EW02
// Y2KFIX   05/13/98  CSAWKI  Y2K MODIFICATIONS MADE TO:
//                            PA0EM001 - RIGHT JUSTIFY CURR BUY
// TEST     04/10/01  SKATHI  TO TEST BUG FIX
//          07/31/01  GREDDY  FACILITATE OA NUMBER RESET
// *********************
Program PA0E type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FB9REC FB9REC; // record
  FY1REC FY1REC; // record
  PA0EW00 PA0EW00; // record
  PA0EW01 PA0EW01; // record
  PA0EW02 PA0EW02; // record
  PA0EW03 PA0EW03; // record
  PA0EW04 PA0EW04; // record
  PA0EW05 PA0EW05; // record
  PA1REC PA1REC; // record
  PA4REC PA4REC; // record
  PA7REC PA7REC; // record
  PA8REC PA8REC; // record
  PA9REC PA9REC; // record
  PAWREC PAWREC; // record
  PAYREC PAYREC; // record
  PC2REC PC2REC; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  XX0XW02 XX0XW02; // record
  YSMREC YSMREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PA0ET01; // table
  use PA0ET02 {deleteAfterUse = yes}; // table
  use PA0ET11; // table
  use PA0ET12 {deleteAfterUse = yes}; // table
  use PAETBL; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use YESTBL {deleteAfterUse = yes}; // table
  use YETTBL {deleteAfterUse = yes}; // table
  use PA0EM.PA0EM001,  // forms
      PA0EM.XX0XM001,
      PA0EM.XMPAM001,
      PA0EM.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPA001: XPPA001();
     /* -------------------------------------------------------*/
      /* INITIALIZE WORKING STORAGE AND DISPLAY STORAGE*/
     /* -------------------------------------------------------*/

    set SQLCA empty;
    set PA0EW00 empty;
    set PA0EW01 empty;
    set PA0EW02 empty;
    set PA0EW03 empty;
    set PAYREC empty;
    set PG2REC empty;
    set PC2REC empty;
    set TA5REC empty;
    set PA0EM001 initial;

     /* DEFAULT SORT ORDER TO THE ORDER ADJUSTMENT NUMBER*/

    PA0EM001.PA0EM-SORT-ORDER = "1";

    sysVar.arrayIndex = 0;

    if (PAWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PAWREC.XXXMSGNO);
    end
    set PAWREC empty;

    PA0EW02.PA0EWCBS = "Y"; /* GET CURRENT BUY DATE FLAG*/

    PA0EW02.PA0EWRPD = "N"; /* PROCESS LIST FLAG*/

    PA0EW00.PA0EW-OR-COMBINE-FLAG = "X";
    PA0EW00.PA0EW-PR-COMBINE-FLAG = "X";
    PA0E001: PA0E001();

    goto PA0E001;

  end // end main
end // end PA0E

// DEFAULT DIVISION
Function PA0E-00101()
   /* *********************************************************/
   /* *  DEFAULT DIVISION*/
   /* *********************************************************/

  PA0EM001.YSMXDV = " "; /* INIT TO ALL DIVISIONS*/

  if (COMMAREA.CAILVL[1] == "N") /* DEFAULT DIVISION TO ' '*/

    PA0ES-22-IO2640-S();

    if (SQLCA.VAGen_SQLCODE == 0
     && YSMREC.XXXSTAT == "A")
      PA0EM001.YSMXDV = YSMREC.YSMSUMCD;
    end

  end

  PA0EW03.YSMXDV = PA0EM001.YSMXDV;

end // end PA0E-00101

// SETUP JCL FOR JOB SUBMISSION
Function PA0E-38001()
   /* ------------------------------------------------------------*/
   /* T E S T   J C L - SORTED BY STYLE, COLOR, DIMENSION*/
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  XX2 = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1;
                                   /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (XX2 > 0) /* Until end of table*/

    if (PA0ET12.TARTYPE[XX2] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format program parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARTYPE[TA6INDEX] = PA0ET12.TARTYPE[XX2]; /* Type*/

      PA0E383(); /* formats JCL*/

    else
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PA0ET12.TARJCL[XX2]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PA0ET12.TARTYPE[XX2]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PA0ET12.TARJCL[XX2] == "/*EOF") /* End of table*/

      XX2 = 0; /* Indicate end of table*/

    else

      XX2 = XX2 + 1; /* Increment table index*/

    end

  end


  PA0E384(); /* Submit the JCL*/

end // end PA0E-38001

// SETUP JCL FOR JOB SUBMISSION
Function PA0E-38002()
   /* ------------------------------------------------------------*/
   /* P R O D U C T I O N   J C L*/
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  XX2 = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1;
                                   /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (XX2 > 0) /* Until end of table*/

    if (PA0ET02.TARTYPE[XX2] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format program parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARTYPE[TA6INDEX] = PA0ET02.TARTYPE[XX2]; /* Type*/

      PA0E383(); /* formats JCL*/

    else
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PA0ET02.TARJCL[XX2]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PA0ET02.TARTYPE[XX2]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PA0ET02.TARJCL[XX2] == "/*EOF") /* End of table*/

      XX2 = 0; /* Indicate end of table*/

    else

      XX2 = XX2 + 1; /* Increment table index*/

    end

  end


  PA0E384(); /* Submit the JCL*/

end // end PA0E-38002

// VALIDATE SELECTION FIELD
Function PA0E-50001()

   /* VALIDATE SELECTION FIELD*/

  sysVar.arrayIndex = 5; /* MUST EDIT FROM BOTTOM OF SCREEN TO TOP*/

  while (sysVar.arrayIndex > 0)
    if (PA0EM001.PA0EMSEL[sysVar.arrayIndex] != "S"
     && PA0EM001.PA0EMSEL[sysVar.arrayIndex] != " ")
      set PA0EM001.PA0EMSEL[sysVar.arrayIndex] cursor, bold;
      PAWREC.XXXMODID = "510";
      converseLib.validationFailed(13); /* ONLY 'S' VALID FOR SELECT*/
    end
    sysVar.arrayIndex = sysVar.arrayIndex - 1;
  end


   /* ------------- End of process PA0E-51001 ------------------*/

end // end PA0E-50001

// VALIDATE SORT ORDER
Function PA0E-527()
   /* --------------------------------------------------*/
    /* DEFAULT SORT ORDER TO 1 (SORT BY O/A NUMBER)*/
   /* --------------------------------------------------*/

  if (PA0EM001.PA0EM-SORT-ORDER == " ")
    PA0EM001.PA0EM-SORT-ORDER = "1";
    PA0EW03.PA0EW-SORT-ORDER = "1";
    return;
  end

  PA0EW03.PA0EW-SORT-ORDER = PA0EM001.PA0EM-SORT-ORDER;

  if (PA0EM001.PA0EM-SORT-ORDER != "1" /* SORT BY O/A NUMBER*/
   && PA0EM001.PA0EM-SORT-ORDER != "2") /* SORT BY STYLE/COLOR/DIM*/
    set PA0EM001.PA0EM-SORT-ORDER cursor, modified, bold;
    converseLib.validationFailed(290); /* SORT ORDER MUST BE '1' OR '2'*/
  end

end // end PA0E-527

// GET FACTORY CODES
Function PA0E-61101()
   /* ------------------------------------------*/
    /* GET FACTORY CODES*/
   /* ------------------------------------------*/

  PA0ES-07-IO4810-S1();

  PA0ES-08-IO4810-N1();

  if (SQLCA.VAGen_SQLCODE == 0)
    PA0EM001.PA0EM-FY-FCTY-CD1[sysVar.arrayIndex] = PA4REC.FY1FCTYC;
    PA0ES-08-IO4810-N1();
    if (SQLCA.VAGen_SQLCODE == 0)
      PA0EM001.PA0EM-FY-FCTY-CD2[sysVar.arrayIndex] = PA4REC.FY1FCTYC;
      PA0ES-08-IO4810-N1();
      if (SQLCA.VAGen_SQLCODE == 0)
        PA0EM001.PA0EM-FY-FCTY-CD3[sysVar.arrayIndex] = PA4REC.FY1FCTYC;
        PA0ES-08-IO4810-N1();
   /* IF SQLCA.SQLCODE EQ 0;/* TCS CHANGE BEGIN*/
   /* MOVE PA4REC.FY1FCTYC TO PA0EM001.PA0EM-FY-FCTY-CD4(EZETST);*/
   /* PA0ES-08-IO4810-N1;*/
   /* END;/* TCS CHANGE END*/
      end
    end
  end

  PA0ES-09-IO4810-C1();

end // end PA0E-61101

// MAIN PROCESS FRO PA0E
Function PA0E001()
   /* *********************************************************/
   /* *  THIS PROCESS WILL PERFORM ALL PROCESSES NECESSARY*/
   /* *********************************************************/

  if (PA0EW02.PA0EWCBS == "Y")
    PA0EM001.SY2CLRID = "   ";
    PA0EM001.XDMCD = "  ";
    PA0EM001.PA0EMHSG = "OP";
    PA0EM001.PA0EMHGA = "OPEN";

    PA0E-00101(); /* DEFAULT DIVISION*/

    sysVar.arrayIndex = 0;

    while (sysVar.arrayIndex < 5)
      sysVar.arrayIndex = sysVar.arrayIndex + 1;
      PA0ES30();
    end

    PA0ES01();
    PA0ES02();
    XPPA020();
    PA0ES01();
    PA0ES02();
    PA0EW02.PA0EWCBS = "N";
  end

  if (converseVar.eventKey is pa2)
    if (PA0EW02.PA0EWRPD == "N")
      set PA0EM001 initial;

      sysVar.arrayIndex = 0;

      while (sysVar.arrayIndex < 5)
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
        PA0ES30();
      end

      /* DEFAULT THE SORT ORDER TO THE ORDER ADJUSTMENT NUMBER*/

      PA0EM001.PA0EM-SORT-ORDER = "1";

      /* DEFAULT THE DIVISION TO THE USERS DIVISION CODE*/

      PA0E-00101();

      PA0EM001.SY2CLRID = "   ";
      PA0EM001.XDMCD = "  ";
      PA0EM001.PA0EMHSG = "OP";
      PA0EM001.PA0EMHGA = "OPEN";
      set PA0EW01 empty;
      set PA0EW02 empty;
      PA0EW02.PA0EWRPD = "N";
      PA0ES01();
      PA0ES02();
    end
  end

  if (converseVar.validationMsgNum == 6)

    sysVar.arrayIndex = 0;

    while (sysVar.arrayIndex < 5)
      sysVar.arrayIndex = sysVar.arrayIndex + 1;
      PA0ES30();
    end

    PA0EM001.SY2CLRID = "   ";
    PA0EM001.XDMCD = "  ";
    PA0EM001.PA0EMHSG = "OP";
    PA0EM001.PA0EMHGA = "OPEN";
    set PA0EW01 empty;
    set PA0EW02 empty;
    PA0EW02.PA0EWRPD = "N";
     /* PA0ES01;*/
     /* PA0ES02;*/
    set PA0EM001.CATOAP cursor, modified;
  end

  PA0E200(); /* FORMAT AND DISPLAY MAP*/

  PA0E300(); /* CHECK ATTENTION IDENTIFIERS*/

  PA0E400(); /* RESET HIGHLIGHTED FIELDS*/

  PA0E500(); /* VERIFY THE ENTERED DATA*/

  if (converseVar.validationMsgNum == 0)
    PA0E600(); /* PROCESS THE REQUEST SECTION*/

  end
end // end PA0E001

// SETUP EZEDTE
Function PA0E200()
   /* ****************************************************/
   /* FORMAT DATA AND DISPLAY MAP 1*/
   /* ****************************************************/
  converseLib.clearScreen();

  if (COMMAREA.CAMSG > " ")
    PA0EM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    COMMAREA.CAMSG = " ";
  end

  if (XXXMSGNO > 0)
    if (XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(XXXMSGNO);
    end
    PAWREC.XXXMSGNO = 0;
  end

   /* IF ERROR FOR COMBINE PROCESS, HIGHLIGHT SELECTED FIELDS*/

  if (converseVar.validationMsgNum == 141 /* INVALID FOR COMBINE*/
   || converseVar.validationMsgNum == 288 /* MUST BE ALL OVERRUNS TO COMBINE*/
   || converseVar.validationMsgNum == 298 /* CUTOFF DT PAST-CAN'T COMBINE SO*/
   || converseVar.validationMsgNum == 299 /* MUST BE ALL PREADVISE TO COMBINE*/
   || converseVar.validationMsgNum == 320 /* CANNOT COMBINE A/F*/
   || converseVar.validationMsgNum == 341) /* CAN'T COMBINE WITH EUROPEAN O/A*/
    sysVar.arrayIndex = 1;
    while (sysVar.arrayIndex <= 5)
      if (PA0EM001.PA0EMSEL[sysVar.arrayIndex] == "S")
        set PA0EM001.PA0EMSEL[sysVar.arrayIndex] cursor, bold;
        if (converseVar.validationMsgNum == 341)
          if (PA0EM001.PA0EMRQN[sysVar.arrayIndex] > 199999
           && PA0EM001.PA0EMRQN[sysVar.arrayIndex] < 300000)
            set PA0EM001.PA0EMRQN[sysVar.arrayIndex] skip, bold;
          end
        else
          if (converseVar.validationMsgNum != 298)
            set PA0EM001.PA0EMHTY[sysVar.arrayIndex] skip, bold;
            if (converseVar.validationMsgNum == 141 /* INVALID FOR COMBINE*/
             || converseVar.validationMsgNum == 320) /* CANNOT COMBINE A/F*/
              set PA0EM001.PA0EMHST[sysVar.arrayIndex] skip, bold;
              set PA0EM001.PA0EMHFL[sysVar.arrayIndex] skip, bold;
              set PA0EM001.PA0EMBUY[sysVar.arrayIndex] skip, bold;
              set PA0EM001.PA0EMSTY[sysVar.arrayIndex] skip, bold;
              set PA0EM001.PA0EMCLR[sysVar.arrayIndex] skip, bold;
              set PA0EM001.PA0EMDIM[sysVar.arrayIndex] skip, bold;
            end
          end
        end
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1;
    end
     /* RESET PAWREC FIELDS*/
    PAWREC.PAWOANBR = 0;
    sysVar.arrayIndex = 1;

    while (sysVar.arrayIndex <= 25)
      PAWREC.PA1OANBR[sysVar.arrayIndex] = 0;
      sysVar.arrayIndex = sysVar.arrayIndex + 1;
    end

  end

  PA0EM001.PA0EMX1 = PA0EW02.PA0EWX1;
  PA0EM001.PA0EMMTP = PA0EW02.PA0EWMTP;
  PA0EM001.FB8BUYDT = PAWREC.PAWBUYYM;
  PA0EM001.XXXCURDT = VGVar.currentShortGregorianDate;

  converse PA0EM001 ;
end // end PA0E200

// CHECK ATTENTION IDENTIFIERS
Function PA0E300()
   /* IF CANCEL WAS REQUESTED AND A LIST WAS BEING PROCESSED*/
      /* PERFORM THE CANCEL ANY WAY.*/

   /* IF A SCROLL IS REQUESTED, AND NO LIST IS BEING PROCESSED*/
      /* SET AN ERROR MESSAGE AND EZEFLOW*/

   /* IF A FASTPATH TO ANOTHER APPLICATION WITHIN THE SYSTEM*/
      /* IS REQUESTED SETUP PAWREC BEFORE PERFORMING*/
      /* THE COMMON EXIT ROUTINE*/
   /* ----------------------------------------------------------*/

  PA0EM001.VAGen_EZEMSG = " ";

  if (PA0EW02.PA0EWRPD == "Y")
    PA0E302();
  end

  if (converseVar.eventKey is pa2)
    if (PA0EW02.PA0EWRPD == "Y")
      return;
    else
      exit stack;
    end
  end

  if (converseVar.eventKey is pf5)
    PA0EM001.CATOAP = "PA0A";
    PA0ES05();
    PA0ES06();
    PA0E310();
  end

  if (converseVar.eventKey is pf3)
    XSPAS01();
  end

  if (converseVar.eventKey is pf7)
    if (PA0EW02.PA0EWRPD == "Y")
      if (PA0EW02.PA0EWTSP == 1)
        PA0EM001.XXXMODID = "300";
        converseLib.validationFailed(2);
        exit stack;
      end
      if (PA0EW02.PA0EWDHC == "Y")
        PA0EM001.XXXMODID = "300";
        converseLib.validationFailed(14);
        exit stack;
      end
    else
      PA0EM001.XXXMODID = "300";
      converseLib.validationFailed(14);
      exit stack;
    end
    return;
  end

  if (converseVar.eventKey is pf8)
    if (PA0EW02.PA0EWRPD == "Y")
      if (PA0EW02.PA0EWDHC == "Y")
        PA0EM001.XXXMODID = "300";
        converseLib.validationFailed(14);
        exit stack;
      end
    else
      PA0EM001.XXXMODID = "300";
      converseLib.validationFailed(14);
      exit stack;
    end
    return;
  end

  if (converseVar.eventKey is pf13)
    PA0EM001.CATOAP = "PA0P";
    PA0ES05();
    PA0ES06();
    PA0E310();
  end

  if (converseVar.eventKey is pf14)
    PA0EM001.CATOAP = "PA0N";
    PA0ES05();
    PA0ES06();
    PA0E310();
  end

  if (converseVar.eventKey is pf2)
    PA0EWSPN = TA5REC.TA5TSQIX; /* POINTER TO WHERE I WAS*/
    PA0E600(); /* UPDATE SELECTS*/
    PA0E310(); /* SET UP PAWREC*/
    if (sysVar.arrayIndex == 0)
      converseLib.validationFailed(16);
      exit stack;
    end
    PA0E320(); /* CHECK SELECTED TYPES TO BE 'FA' OR 'FR'*/
                    /* ; CALL COMBINE ROUTINE*/
    if (PAWREC.XXXMSGNO > 0)
      TA5REC.TA5TSQIX = PA0EWSPN;
      move PA0EWSPN to PA0EWX1 withV60Compat;
      PA0ES20();
      if (PAWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(PAWREC.XXXMSGNO);
      end
      PAWREC.XXXMSGNO = 0;
      exit stack;
    end

  end


  if (converseVar.eventKey is pf18)
    PA0EM001.CATOAP = "PA0Q";
    PA0ES05();
    PA0ES06();
    PA0E310();
  end

  if (converseVar.eventKey is pf19)
    PA0EM001.CATOAP = "PA0Z";
    PA0ES05();
    PA0ES06();
    PA0E310();
  end

  if (converseVar.eventKey is enter)
    PA0E301();
    COMMAREA.CATOAP = PA0EM001.CATOAP;
    if (PA0EM001.CATOAP > " ")
      PA0ES05();
      PA0ES06();
      PA0E310();
      set PA0EM001.CATOAP cursor, modified, bold;
      PA0EM001.XXXMODID = "300";
      exit stack;
    else
      if (PA0EW02.PA0EWRPD == "Y")
        if (PA0EW02.PA0EWDHC == "Y")
          PA0EW02.PA0EWRPD = "N";
          return;
        end
      end
      return;
    end
  end

  if (converseVar.eventKey is pf20)
    PA0E380();
    return;
  end

  if (converseVar.eventKey is pf24)
    PA0EM001.CATOAP = "PA0W";
    PA0ES05();
    PA0ES06();
    PA0E310();
  end

  if (converseVar.eventKey is pf1
   || converseVar.eventKey is pf2
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf5
   || converseVar.eventKey is pf13
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf18
   || converseVar.eventKey is pf21
   || converseVar.eventKey is pf24)
    XSPAS01();
  end

  if (converseVar.eventKey is pf6)
    PA0E350();
    exit stack;
  end

  PA0EM001.XXXMODID = "300";
  converseLib.validationFailed(4);
  exit stack;
end // end PA0E300

// PERFORM CORP POPUP
Function PA0E301()

  PA0EW02.PA0EWPUR = "N";

   /* ------------------------------------------------------------*/
   /* If requested, display the list of o/a type codes.*/
   /* ------------------------------------------------------------*/

  if (PA0EM001.YETCD == "?") /* o/a type list requested*/
    if (PA0EW02.PA0EWPUR == "N")
      set PA0EM001.YETCD cursor;
    end

    PA0EW02.PA0EWPUR = "Y";

    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "O/A TYPE  "; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPYET01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/

      PA0EM001.YETCD = " ";
    else
      PA0EM001.YETCD = YETTBL.YETCD[XX0XWPIX]; /* Selected code*/
     /* MOVE YETTBL.YETSDESC(XX0XWPIX) TO PA0EM001.YETSDESC; /* SDESCription*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of dimension codes.*/
   /* ------------------------------------------------------------*/

  if (PA0EM001.XDMCD == "?") /* Dimension list requested*/
    if (PA0EW02.PA0EWPUR == "N")
      set PA0EM001.XDMCD cursor;
    end

    PA0EW02.PA0EWPUR = "Y";

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "  DIMENSION"; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXDM01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/

      PA0EM001.XDMCD = "00";
    else
      PA0EM001.XDMCD = XDMTBL.XDMCD[XX0XWPIX];

    end


  end


   /* ------------------------------------------------------------*/
   /* If requested, display the list of o/a STATUS CODE*/
   /* ------------------------------------------------------------*/

  if (PA0EM001.YESCD == "?") /* o/a STATUS LIST REQUESTED*/
    if (PA0EW02.PA0EWPUR == "N")
      set PA0EM001.YESCD cursor;
    end

    PA0EW02.PA0EWPUR = "Y";
    XX0XW02.YESCDIND = "H";

    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "O/A STATUS"; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPYES01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/

      PA0EM001.YESCD = " ";
    else
      PA0EM001.YESCD = YESTBL.YESCD[XX0XWPIX]; /* Selected code*/
      PA0EM001.YESSDESC = YESTBL.YESSDESC[XX0XWPIX]; /* DESCription*/

    end


  end


   /* ------------------------------------------------------------*/
   /* If requested, display the list of header status group codes*/
   /* ------------------------------------------------------------*/

  if (PA0EM001.PA0EMHSG == "?") /* Dimension list requested*/
    if (PA0EW02.PA0EWPUR == "N")
      set PA0EM001.PA0EMHSG cursor;
    end

    PA0EW02.PA0EWPUR = "Y";
    PA0EM001.PA0EMHGA = " ";

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "    HEADER STATUS GROUP CODES"; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPPAE01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/

      PA0EM001.PA0EMHSG = "  ";
    else
      PA0EM001.PA0EMHSG = PAETBL.PA0EWHSG[XX0XWPIX];
      PA0EM001.PA0EMHGA = " ";

    end


  end

   /* ------------------------------------------------------------*/
   /* Indicate that the requested lists have been displayed and*/
   /* that ENTER must be pressed to process any changes.*/
   /* ------------------------------------------------------------*/

  if (PA0EW02.PA0EWPUR == "Y")
    converseLib.validationFailed(45);
    exit stack;
  end

end // end PA0E301

// CHECK DISPLAY STORAGE
Function PA0E302()
   /* -------------------------------------------------*/
    /* CHECK TO SEE IF REQUEST DATA CHANGED SINCE LAST*/
    /* CONVERSE*/
   /* -------------------------------------------------*/

  PA0EW02.PA0EWDHC = "N"; /* DATA HAS CHANGED SWITCH*/

  if (PA0EM001.PA0EMRQL == PA0EW03.PA0EMRQL
   && PA0EM001.PA0EMRQH == PA0EW03.PA0EMRQH
   && PA0EM001.PA0EMBMF == PA0EW03.PA0EMBMF
   && PA0EM001.PA0EMBMT == PA0EW03.PA0EMBMT
   && PA0EM001.YSMXDV == PA0EW03.YSMXDV
   && PA0EM001.PA0EMYS1 == PA0EW03.PA0EMYS1
   && PA0EM001.PA0EMYS2 == PA0EW03.PA0EMYS2
   && PA0EM001.YETCD == PA0EW03.YETCD
   && PA0EM001.PA0EW-XYET == PA0EW03.PA0EW-XYET
   && PA0EM001.PA0EW-XYES == PA0EW03.PA0EW-XYES
   && PA0EM001.PA0EMHSG == PA0EW03.PA0EMHSG
   && PA0EM001.SY1STNBR == PA0EW03.SY1STNBR
   && PA0EM001.SY2CLRID == PA0EW03.SY2CLRID
   && PA0EM001.XDMCD == PA0EW03.XDMCD
   && PA0EM001.YESCD == PA0EW03.YESCD
   && PA0EM001.PA0EMUSR == PA0EW03.PA0EMUSR
   && PA0EM001.PC2CUXID == PA0EW03.PC2CUXID
   && PA0EM001.KUCCOID == PA0EW03.KUCCOID
   && PA0EM001.KUMSTRID == PA0EW03.KUMSTRID
   && PA0EM001.XNXCD == PA0EW03.XNXCD
   && PA0EM001.PA0EMUID == PA0EW03.PA0EMUID
   && PA0EM001.FY1FCTYC == PA0EW03.FY1FCTYC
   && PA0EM001.PA0EM-SORT-ORDER == PA0EW03.PA0EW-SORT-ORDER)

    /* NEXT SENTENCE*/
  else
    PA0EW02.PA0EWDHC = "Y";
  end

end // end PA0E302

// SETUP FOR TRANSFER WITHIN SYS
Function PA0E310()
   /* TRY TO SETUP O/A NUMBERS IN WORKING STORAGE*/
   /* IF NO RECORDS WERE SELECTED, MOVE SPACES TO THE DRIVER*/
   /* IN PAWREC*/
   /* OTHERWISE*/
     /* MOVE MAP 1 CATOAP TO TOAP.*/
   /* ----------------------------------------------------------*/

  sysVar.arrayIndex = 0; /* SETUP INDEX TO LOAD PAWREC*/

  if (PA0EWRPD == "Y")
    PA0EW02.PA0EWCBE = "N";
    PA0EW02.PA0EWX1 = 1; /* TEMP STORAGE PAGE INDEX*/
    while (PA0EW02.PA0EWX1 <= PA0EW02.PA0EWMTP) /* MAX TEMP PAGES STORED*/
      PA0ES20(); /* GET NEXT TEMP STORAGE PAGE*/
      PA0EW02.PA0EWX2 = 0;
      while (PA0EWX2 < 5) /* MAX RECORDS PER PAGE*/
        PA0EWX2 = PA0EWX2 + 1;
        PA0ES21(); /* MOVE SELECTED ITEMS TO PAWREC*/
      end
      PA0EWX1 = PA0EWX1 + 1;
    end
    if (PA0EWX1 != 0)
      PA0EWX1 = PA0EWX1 - 1;
    end
    if (PA0EWTSZ == "Y" /* NOT SAME STYLE/BUY MONTH*/
     || PA0EWCBE == "Y") /* OR COMBINE ERROR*/
      PA0EW01.PA0EMSEL[1] = " ";
      PA0EW01.PA0EMSEL[2] = " ";
      PA0EW01.PA0EMSEL[3] = " ";
      PA0EW01.PA0EMSEL[4] = " ";
      PA0EW01.PA0EMSEL[5] = " ";
    end

  end

  if (sysVar.arrayIndex > 0)
    PAWREC.PAWOAIDX = 1;
    PAWREC.PAWOANBR = PAWREC.PA1OANBR[1];
    PAWREC.PAWDRVR = "PA0E";
  end

  if (converseVar.eventKey is pf2)

    return;
  end

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "PA0A";
    COMMAREA.CAITEM = " ";
  else
    PA0E315();
  end

  if (converseVar.eventKey is pf24)
    COMMAREA.CATOAP = "PA0W";
    COMMAREA.CAITEM = " ";
  else
    PA0E315();
  end

  XSPAS01();

  PA0EM001.XXXMODID = "310";
  exit stack;
end // end PA0E310

// pf-key processing
Function PA0E315()
   /* ------------------------------------------------------------*/
   /* This procedure will determine what the catoap will be*/
   /* based on the pf-key pressed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf5) /* ETS MAINTENANCE OF O/A ITEMS*/
    COMMAREA.CATOAP = "PA0A";
  end

  if (converseVar.eventKey is pf13) /* o/a item select*/
    COMMAREA.CATOAP = "PA0P";
  end

  if (converseVar.eventKey is pf14) /* Historical comments*/
    COMMAREA.CATOAP = "PA0N";
  end

  if (converseVar.eventKey is pf18) /* P.O. Select*/
    COMMAREA.CATOAP = "PA0Q";
  end

  if (converseVar.eventKey is pf19) /* O/A Status maint.*/
    COMMAREA.CATOAP = "PA0Z";
  end

  if (converseVar.eventKey is pf21) /* Header list*/
    COMMAREA.CATOAP = "PA0E";
  end

   /* Setup the leveling for subsequent applications*/

  if (PAWREC.CAFROMAP[1] == " ")
    PAWREC.CAFROMAP[1] = COMMAREA.CACURRAP;
  else
    if (PAWREC.CAFROMAP[2] == " ")
      PAWREC.CAFROMAP[2] = COMMAREA.CACURRAP;
    else
      if (PAWREC.CAFROMAP[3] == " ")
        PAWREC.CAFROMAP[3] = COMMAREA.CACURRAP;
      else
        if (PAWREC.CAFROMAP[4] == " ")
          PAWREC.CAFROMAP[4] = COMMAREA.CACURRAP;
        else
          PAWREC.CAFROMAP[5] = COMMAREA.CACURRAP;
        end
      end
    end
  end


end // end PA0E315

// COMBINE PROCESS SETUP
Function PA0E320()
   /* -----------------------------------------------------*/
    /* THIS PROCESS WILL SETUP FOR ?ALLING THE*/
    /* COMBINE PROCESS PA0R*/
   /* -----------------------------------------------------*/
    /* 1.  CHECK TO SEE IF THE TYPES SELECTED ARE ALL*/
        /* VALID FOR THE COMBINE PROCESS*/
   /* -----------------------------------------------------*/
    /* 2.  CALL PA0R*/
   /* -----------------------------------------------------*/
    /* 3.  CHECK RETURN CODE'S*/
        /* IF PAWREC.XXXMSGNO > 0*/
           /* RECONVERSE MAP ONE.*/
   /* -----------------------------------------------------*/
    /* 4.  TRANSFER TO PA0L*/
   /* -----------------------------------------------------*/

  if (PA0EW02.PA0EWCBE == "Y") /* COMBINE ERROR FLAG SET IN PA0ES21*/
    if (converseVar.validationMsgNum == 288 /* MUST BE OVERRUNS TO COMBINE*/
     || converseVar.validationMsgNum == 299 /* MUST BE PREADVISE TO COMBINE*/
     || converseVar.validationMsgNum == 320 /* CANNOT COMBINE AIR FREIGHT*/
     || converseVar.validationMsgNum == 341) /* CAN'T COMBINE WITH EUROPEAN O/A*/
      PAWREC.XXXMSGNO = converseVar.validationMsgNum;
    else
      PAWREC.XXXMSGNO = 141;
    end
    return;
  end

  if (PA0EW02.PA0EWTSZ == "Y") /* NOT SAME STYLES/BUY MONTH*/
    PAWREC.XXXMSGNO = 141;
    return;
  end

  try
    call "PA0R" (COMMAREA, PAWREC) {isNoRefresh = yes};
  end /* CSP CALLED COMBINE PROCESS*/

  if (PAWREC.XXXMSGNO != 0)
    if (PAWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PAWREC.XXXMSGNO);
    end
    PA0EW02.PA0EWRPD = "N";
    exit stack;
  end

  COMMAREA.CATOAP = "PA0Z";

end // end PA0E320

// SETUP FOR COMMENT POPUP
Function PA0E350()
   /* -----------------------------------------------*/
    /* SETUP AND CALL HEADER POPUP COMMENT*/
   /* -----------------------------------------------*/

  set PA9REC empty;

  sysVar.arrayIndex = 1;

  while (sysVar.arrayIndex <= 5)

    if (PA0EM001.PA0EMSEL[sysVar.arrayIndex] > " ")
      set PA0EM001.PA0EMSEL[sysVar.arrayIndex] cursor;
      PA9REC.PA1OANBR = PA0EM001.PA0EMRQN[sysVar.arrayIndex];
      sysVar.arrayIndex = 10;
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

  if (sysVar.arrayIndex == 6)
    PA0EM001.VAGen_EZEMSG = " PLEASE SELECT A HEADER BEFORE REQUESTING POPUP";
    exit stack;
  end


  sysVar.arrayIndex = 1;

  while (sysVar.arrayIndex <= 5)

    if (PA0EM001.PA0EMSEL[sysVar.arrayIndex] > " ")
      PA9REC.PA1OANBR = PA0EM001.PA0EMRQN[sysVar.arrayIndex];
      PA0EM001.PA0EMSEL[sysVar.arrayIndex] = " ";
      set XMPAM001 empty; /* CLEAR THAT SUCKER OUT FIRST*/
      XMPAM001.XMPAMHDR = "                          HEADER COMMENT";
      XPPA100();

    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

end // end PA0E350

// PRINT LIST OF O/A'S
Function PA0E380()
   /* ------------------------------------------------------------*/
   /* Obtain and/or display the output destination for the user.*/
   /* ------------------------------------------------------------*/

   /* Initialize the work areas and indexes to be used.*/

   /* -----------------------------------------------------*/
   /* Call subroutine to find which environment*/
   /* the program is executing in, production or*/
   /* development.*/
   /* -----------------------------------------------------*/
  set TA3REC empty;
  TA3REC.TA3OPTN = "ASSIGN ";
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000" /* call successful*/
   && TA3REC.TA3RTNCD == 0)          /* good return code*/
  else
    converseLib.validationFailed(8); /* error encountered with print request*/
    exit stack;
  end

  if (TA3REC.TA3RGNID == "03") /* if on production system*/
    if (PA0EM001.PA0EM-SORT-ORDER == "1") /* SORT BY O/A NUMBER*/
      PA0E382(); /* format production jcl*/
    else
      PA0E-38002(); /* SORT BY STYLE, COLOR, DIM*/
    end
  else
    if (PA0EM001.PA0EM-SORT-ORDER == "1") /* SORT BY O/A NUMBER*/
      PA0E381(); /* format test jcl*/
    else
      PA0E-38001(); /* SORT BY STYLE, COLOR, DIM*/
    end
  end


end // end PA0E380

// SETUP JCL FOR JOB SUBMISSION
Function PA0E381()
   /* ------------------------------------------------------------*/
   /* T E S T   J C L*/
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  XX2 = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1;
                                   /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (XX2 > 0) /* Until end of table*/

    if (PA0ET11.TARTYPE[XX2] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format program parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARTYPE[TA6INDEX] = PA0ET11.TARTYPE[XX2]; /* Type*/

      PA0E383(); /* formats JCL*/

    else
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PA0ET11.TARJCL[XX2]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PA0ET11.TARTYPE[XX2]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PA0ET11.TARJCL[XX2] == "/*EOF") /* End of table*/

      XX2 = 0; /* Indicate end of table*/

    else

      XX2 = XX2 + 1; /* Increment table index*/

    end

  end


  PA0E384(); /* Submit the JCL*/

end // end PA0E381

// SETUP JCL FOR JOB SUBMISSION
Function PA0E382()
   /* ------------------------------------------------------------*/
   /* P R O D U C T I O N   J C L*/
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  XX2 = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1;
                                   /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (XX2 > 0) /* Until end of table*/

    if (PA0ET01.TARTYPE[XX2] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format program parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARTYPE[TA6INDEX] = PA0ET01.TARTYPE[XX2]; /* Type*/

      PA0E383(); /* formats JCL*/

    else
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PA0ET01.TARJCL[XX2]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PA0ET01.TARTYPE[XX2]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PA0ET01.TARJCL[XX2] == "/*EOF") /* End of table*/

      XX2 = 0; /* Indicate end of table*/

    else

      XX2 = XX2 + 1; /* Increment table index*/

    end

  end


  PA0E384(); /* Submit the JCL*/

end // end PA0E382

// FORMAT PARM CARDS
Function PA0E383()
   /* ------------------------------------------------------------*/
   /* format the parm card.  also format a comment card which*/
   /* looks like the parm card*/
   /* ------------------------------------------------------------*/

  PA0EW02.PA0EWCMT = "//*"; /* indicate a comment jcl card*/

  PA0ES40();

  PA0EW02.PA0EWOAJ = PA0EW04.PA0EWOAJ;
  TA6REC.TARJCL[TA6INDEX] = PA0EW04.PA0EWOAJ; /* jcl*/
  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
  TA6REC.TARJCL[TA6INDEX] = PA0EW05.PA0EWOAJ; /* jcl*/
  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
  TA6REC.TARJCL[TA6INDEX] = PA0EW02.PA0EWPRR; /* JCL parm comment*/
  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
  PA0EW02.PA0EWOAJ = PA0EW05.PA0EWOAJ;
  TA6REC.TARJCL[TA6INDEX] = PA0EW02.PA0EWPRR; /* JCL parm comment*/
  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

end // end PA0E383

// SUBMIT JCL TO JCL PROC
Function PA0E384()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "Y"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/


  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/


    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    PAWREC.XXXMODID = "184"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end PA0E384

// RESET HIGHLIGHTED FIELDS
Function PA0E400()
   /* -------------------------------------------------*/
    /* RESET HIGHLIGHTED FIELDS*/
   /* -------------------------------------------------*/

  set PA0EM001.CATOAP initialAttributes; /* RESET MAP CATOAP*/
  PA0EM001.XXXMODID = " "; /* MODID ERROR DIAPLAY AREA*/
  PA0EM001.PA0EW-XYDS = " "; /* EXCL STATUS DESCRIPTION*/
  PA0EM001.PA0EMHGA = " "; /* O/A STATUS GROUP DESCRIPTION*/
  PA0EM001.YESSDESC = " "; /* STATUS DESCRIPTION*/
  set PA0EM001.PA0EMRQL initialAttributes; /* REQUEST NUMBER LOW*/
  set PA0EM001.PA0EMRQH initialAttributes; /* REQUEST NUMBER HIGH*/
  set PA0EM001.PA0EMBMF initialAttributes; /* BUY DATE LOW*/
  set PA0EM001.PA0EMBMT initialAttributes; /* BUY DATE HIGH*/
  set PA0EM001.YETCD initialAttributes; /* O/A TYPE CODE*/
  set PA0EM001.PA0EW-XYES initialAttributes; /* EXCLUDE O/A STAT CODE*/
  set PA0EM001.PA0EW-XYET initialAttributes; /* EXCLUDE O/A TYPE CODE*/
  set PA0EM001.PA0EMHSG initialAttributes; /* O/A STATUS GROUP CODE*/
  set PA0EM001.SY1STNBR initialAttributes; /* STYLE NUMBER*/
  set PA0EM001.SY2CLRID initialAttributes; /* COLOR CODE*/
  set PA0EM001.XDMCD initialAttributes; /* DIMENSION CODE*/
  set PA0EM001.YESCD initialAttributes; /* O/A STATUS CODE*/
  set PA0EM001.PA0EMUSR initialAttributes; /* SCHEDULER USERID*/
  set PA0EM001.PC2CUXID initialAttributes; /* CUSTOMER CROSS REFERENCE*/
  set PA0EM001.KUCCOID initialAttributes; /* CUSTOMER NUMBER*/
  set PA0EM001.KUMSTRID initialAttributes; /* STORE NUMBER*/
  set PA0EM001.XNXCD initialAttributes; /* DEPARTMENT CROSS REFERENCE*/
  set PA0EM001.PA0EMUID initialAttributes; /* ACCOUNT REP USERID*/
  set PA0EM001.FY1FCTYC initialAttributes; /* factory selection field*/
  set PA0EM001.PA0EM-SORT-ORDER initialAttributes; /* SORT ORDER*/

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 5)

    if (PA0EM001.PA0EMRQN[sysVar.arrayIndex] != 0)
      set PA0EM001.PA0EMSEL[sysVar.arrayIndex] initialAttributes;
    end

    set PA0EM001.PA0EMHTY[sysVar.arrayIndex] initialAttributes;
    set PA0EM001.PA0EMHST[sysVar.arrayIndex] initialAttributes;
    set PA0EM001.PA0EMHFL[sysVar.arrayIndex] initialAttributes;
    set PA0EM001.PA0EMBUY[sysVar.arrayIndex] initialAttributes;
    set PA0EM001.PA0EMSTY[sysVar.arrayIndex] initialAttributes;
    set PA0EM001.PA0EMCLR[sysVar.arrayIndex] initialAttributes;
    set PA0EM001.PA0EMDIM[sysVar.arrayIndex] initialAttributes;
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end
end // end PA0E400

// VERIFY REQUEST LIST DATA
Function PA0E500()
   /* ****************************************************/
   /* *  THIS PROCESS WILL FIRST CHECK TO SEE IF*/
   /* *  ANY OF THE FIELDS ON THE TOP OF MAP 1 WERE*/
   /* *  CHANGED.  IF SO THE REQUEST TO PROCESS DATA*/
   /* *  SWITCH WILL BE TURNED OFF.*/
   /* *  IF THE TOP OF MAP ONE HAS NOT BEEN CHANGED*/
   /* *     AND THE REQUEST TO PROCESS DATA SWITCH*/
   /* *     EQUAL 'N' THEN THE EDITS WILL TAKE PLACE*/
   /* *     ANYHOW.*/
   /* **/
   /* *  IN EDITING THE TOP OF MAP 1, THE INDIVIDUAL FIELDS*/
   /* *     WILL BE EDITED, AND THE MINIMUM DATA EDIT WILL*/
   /* *     ALSO TAKE PLACE.  THAT IS THE BUY DATE RANGE*/
   /* *     THE O/A NUMBER RANGE AND THE STATUS GROUP CODE.*/
   /* *******************************************************/

  PA0E-50001(); /* VALIDATE SELECTION FIELD*/

  if (PA0EW02.PA0EWRPD == "N")
    PA0E510(); /* PROCESS ENTERED REQUEST*/

  end

end // end PA0E500

// TEST FOR MINIMUM REQUEST DATA
Function PA0E510()
   /* ****************************************************/
   /* *  CHECK TO SEE IF MINIMUM DATA HAS BEEN ENTERED*/
   /* **/
   /* *  PERFORM INDIVIDUAL CHECKS ON EACH FIELD, IF*/
   /* *  MINIMUM DATA REQUIREMENTS ARE MET*/
   /* **/
   /* *  IF NO ERRORS ARE DETECTED,*/
   /* *     FETCH ROWS FROM DPRODA.VPAHDR01 AND STORE*/
   /* *     IN TEMP STORAGE*/
   /* *     MOVE FIRST PAGE TO SCREEN*/
   /* *    SET REQUEST TO PROCESS REQUEST TO 'Y'.*/
   /* ******************************************************/

  set PA0EM001.PA0EMBMF initialAttributes;
  set PA0EM001.PA0EMBMT initialAttributes;
  set PA0EM001.PA0EMHSG initialAttributes;
  set PA0EM001.YESCD initialAttributes;
  set PA0EM001.PA0EMRQL initialAttributes;
  set PA0EM001.PA0EMRQH initialAttributes;
  set PA0EM001.PA0EMBMF initialAttributes;
  set PA0EM001.PA0EMYS1 initialAttributes;
  set PA0EM001.YSMXDV initialAttributes;
  set PA0EM001.PA0EM-SORT-ORDER initialAttributes;

  if (PA0EM001.PA0EMRQH > 0
   && PA0EM001.PA0EMBMT > 0)

    PA0E522(); /* CHECK FACTORY SELECTION CODE*/
    PA0E517(); /* CHECK CUSTOMER NUMBER/STORE/DEPT*/
    PA0E516(); /* CHECK CUSTOMER CROSS REFERENCE*/
    PA0E515(); /* CONVERT SPECIALIST CODE*/
    PA0E514(); /* CHECK STATUS CODE*/
    PA0E518(); /* CHECK DIMENSION CODE*/
    PA0E513(); /* CHECK STYLE/COLOR/DIMENSION*/
    PA0E521(); /* CHECK TO DATE LAST STAT CHANGE*/
    PA0E519(); /* CHECK FROM DATE LAST STAT CHANGE*/
    PA0E520(); /* CHECK DIVISION GROUP CODE*/
    PA0E512(); /* CHECK STATUS GROUP CODE*/
    PA0E524(); /* CHECK exclude status code*/
    if (PA0EM001.PA0EMHSG > " "
     && PA0EM001.YESCD > " ")
      set PA0EM001.PA0EMHSG cursor, bold;
      set PA0EM001.YESCD bold;
      converseLib.validationFailed(140);
    end

    PA0E511(); /* CHECK TYPE CODE*/
    PA0E526(); /* CHECK exclude type code*/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF PA0EM001.PA0EMBMF GT PA0EM001.PA0EMBMT;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
    PA0EW02.PA0EW-WRK-YYMM = PA0EM001.PA0EMBMF;
    if (PA0EW02.PA0EW-WRK-MM > 0)
      if (PA0EW02.PA0EW-WRK-YY > 60)
        PA0EW02.PA0EW-WRK-CC = 19;
      else
        PA0EW02.PA0EW-WRK-CC = 20;
      end
    else
      PA0EW02.PA0EW-WRK-CC = 0;
    end
    PA0EW02.PA0EW-FROM-CCYYMM = PA0EW02.PA0EW-WRK-CCYYMM;
    PA0EW02.PA0EW-WRK-YYMM = PA0EM001.PA0EMBMT;
    if (PA0EW02.PA0EW-WRK-MM > 0)
      if (PA0EW02.PA0EW-WRK-YY > 60)
        PA0EW02.PA0EW-WRK-CC = 19;
      else
        PA0EW02.PA0EW-WRK-CC = 20;
      end
    else
      PA0EW02.PA0EW-WRK-CC = 0;
    end
    PA0EW02.PA0EW-TO-CCYYMM = PA0EW02.PA0EW-WRK-CCYYMM;
    if (PA0EW02.PA0EW-FROM-CCYYMM > PA0EW02.PA0EW-TO-CCYYMM)
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

      converseLib.validationFailed(82);
      set PA0EM001.PA0EMBMF cursor, modified, bold;
      set PA0EM001.PA0EMBMT modified, bold;
      return;
    end

    if (converseVar.validationMsgNum != 82)
      PA0EW02.PA0EWRCK = PAWREC.PAWBUYYM;

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* MOVE PA0EWRCY TO PA0EW02.PA0EWRTL;*/
  /* MOVE PA0EWRCY TO PA0EW02.PA0EWRTH;*/
  /* MOVE PA0EM001.PA0EMBMT TO PA0EW02.PA0EWRCK;*/
  /* PA0EW02.PA0EWRTL = PA0EW02.PA0EWRTL - 4;*/
  /* PA0EW02.PA0EWRTH = PA0EW02.PA0EWRTH + 1;*/
  /* ;*/
  /* IF PA0EWRCM GE 1*/
  /* AND PA0EWRCM LE 12;*/
  /* ; /* NEXT SENTENCE*/
  /* ELSE;*/
  /* MOVE 175 TO EZEMNO;*/
  /* SET PA0EM001.PA0EMBMT CURSOR,MODIFIED,BRIGHT;*/
  /* END;*/
  /* ;*/
  /* IF PA0EWRCY GE PA0EWRTL*/
  /* AND PA0EWRCY LE PA0EWRTH;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
      PA0EW02.PA0EWRTLOW-YY = PA0EW02.PA0EWRCY;
      if (PA0EW02.PA0EWRTLOW-YY > 60)
        PA0EW02.PA0EWRTLOW-CC = 19;
      else
        PA0EW02.PA0EWRTLOW-CC = 20;
      end
      PA0EW02.PA0EWRTHIGH-CCYY = PA0EW02.PA0EWRTLOW-CCYY;
      PA0EW02.PA0EWRCK = PA0EM001.PA0EMBMT;
      PA0EW02.PA0EWBM-TO-YY = PA0EW02.PA0EWRCY;
      if (PA0EW02.PA0EWBM-TO-YY > 60)
        PA0EW02.PA0EWBM-TO-CC = 19;
      else
        PA0EW02.PA0EWBM-TO-CC = 20;
      end
      PA0EW02.PA0EWRTLOW-CCYY = PA0EW02.PA0EWRTLOW-CCYY - 4;
      PA0EW02.PA0EWRTHIGH-CCYY = PA0EW02.PA0EWRTHIGH-CCYY + 1;

      if (PA0EW02.PA0EWRCM >= 1
       && PA0EW02.PA0EWRCM <= 12)
         /* NEXT SENTENCE*/
      else
        converseLib.validationFailed(175);
        set PA0EM001.PA0EMBMT cursor, modified, bold;
      end

      if (PA0EW02.PA0EWBM-TO-CCYY >= PA0EW02.PA0EWRTLOW-CCYY
       && PA0EW02.PA0EWBM-TO-CCYY <= PA0EW02.PA0EWRTHIGH-CCYY
       /**/
       /* ------------------------  Y2K IN END  --------------------------*/
      )
         /* NEXT SENTENCE*/
      else
        converseLib.validationFailed(174);
        set PA0EM001.PA0EMBMT cursor, modified, bold;
      end
    end

    PA0EW02.PA0EWRCK = PA0EM001.PA0EMBMF;
    if (PA0EWRCM >= 1
     && PA0EWRCM <= 12)
       /* NEXT SENTENCE*/
    else
      converseLib.validationFailed(175);
      set PA0EM001.PA0EMBMF cursor, modified, bold;
    end


  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF PA0EWRCY GE PA0EWRTL*/
  /* AND PA0EWRCY LE PA0EWRTH;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
    PA0EW02.PA0EWBM-FROM-YY = PA0EW02.PA0EWRCY;
    if (PA0EW02.PA0EWBM-FROM-YY > 60)
      PA0EW02.PA0EWBM-FROM-CC = 19;
    else
      PA0EW02.PA0EWBM-FROM-CC = 20;
    end
    if (PA0EW02.PA0EWBM-FROM-CCYY >= PA0EW02.PA0EWRTLOW-CCYY
     && PA0EW02.PA0EWBM-FROM-CCYY <= PA0EW02.PA0EWRTHIGH-CCYY
     /**/
     /* ------------------------  Y2K IN END  --------------------------*/
    )
       /* NEXT SENTENCE*/
    else
      converseLib.validationFailed(174);
      set PA0EM001.PA0EMBMF cursor, modified, bold;
    end

    /* greddy - 08/01/01*/
   /* IF PA0EM001.PA0EMRQL GT PA0EM001.PA0EMRQH;*/
   /* MOVE 173 TO EZEMNO;*/
   /* SET PA0EM001.PA0EMRQL CURSOR,MODIFIED,BRIGHT;*/
   /* SET PA0EM001.PA0EMRQH MODIFIED,BRIGHT;*/
   /* EZERTN;*/
   /* END;*/

    if (PA0EM001.PA0EMRQL > 0
     || PA0EM001.PA0EMRQH > 0) /* If either nbr entered*/

      if ((PA0EM001.PA0EMRQL > 0
       && PA0EM001.PA0EMRQH == 0)
       || (PA0EM001.PA0EMRQL > 
      PA0EM001.PA0EMRQH && 
      (PA0EM001.PA0EMRQL < 140000
       || PA0EM001.PA0EMRQH > 139999)))
        set PA0EM001.PA0EMRQL cursor, bold; /* Highlight*/
        set PA0EM001.PA0EMRQH bold; /* Highlight*/
        PAWREC.XXXMODID = "530"; /* Module identification*/
        converseLib.validationFailed(173); /* Rqst nbr must be > from rqst nbr*/
      end
    end

    PA0E-527(); /* EDIT SORT ORDER*/

    if (converseVar.validationMsgNum == 0)
      PA0ES40();
    end
  else
    set PA0EM001.PA0EMRQL cursor, modified, bold;
    set PA0EM001.PA0EMRQH modified, bold;
    set PA0EM001.PA0EMBMF modified, bold;
    set PA0EM001.PA0EMBMT modified, bold;
    converseLib.validationFailed(51);
    exit stack;
  end
end // end PA0E510

// VERIFY O/A TYPE CODE
Function PA0E511()
   /* --------------------------------------------------*/
    /* IF O/A TYPE CODE ENTERED*/
       /* VERIFY AGAINST DCORP.VYETTBL01*/
   /* --------------------------------------------------*/

  if (PA0EM001.YETCD == " ")
    return;
  end

  if (PA0EM001.YETCD in YETTBL.YETCD)
   /* MOVE YETTBL.YETSDESC(EZETST) TO PA0EM001.YETSDESC;*/
  else
    set PA0EM001.YETCD cursor, modified, bold;
    converseLib.validationFailed(39);
  end

  return;
end // end PA0E511

// VERIFY STATUS GROUP CODE
Function PA0E512()
   /* ----------------------------------------------*/
   /* change this member to use new dcorp.vsumcd01-*/
   /* table after pa180 and pa172 in production----*/
   /* ----------------------------------------------*/
   /* ----------------------------------------------*/
   /* ----------------------------------------------*/
   /* STATUS GROUP IS A REQUIRED FIELD*/
   /* IT MUST BE FOUND ON THE SUM CODE TABLE*/
      /* DCORP.VSUMCD01*/
   /* ----------------------------------------------*/

  set YSMREC empty;

  if (PA0EM001.PA0EMHSG == " ")
    return;
  else
    /* ----------------------------------------------*/
     /* In order to find the correct access path*/
     /* to the yes table, PA0E needs to look at*/
     /* the DCORP.VSUMCD01 table.  Based on the*/
     /* the xxx_sum_cd, PA0E must use a specific*/
     /* xxx_sum_id to obtain the access sequence.*/
    /* ----------------------------------------------*/

    YSMREC.YSMTBLPF = "YES";
    YSMREC.YSMSYSPF = "PA";

    if (PA0EM001.PA0EMHSG == "CP" /* if completed status*/
     || PA0EM001.PA0EMHSG == "WC") /* or waiting completion status*/
      YSMREC.YSMSUMID = 1;
    else
      if (PA0EM001.PA0EMHSG == "OP") /* if open status*/
        YSMREC.YSMSUMID = 3;
      else
        if (PA0EM001.PA0EMHSG == "AL") /* if all status*/
          YSMREC.YSMSUMID = 4;
        else
          if (PA0EM001.PA0EMHSG == "HD") /* if hold status*/
            YSMREC.YSMSUMID = 5;
          end
        end
      end
    end

    YSMREC.YSMSUMCD = PA0EM001.PA0EMHSG;
    YSMREC.YSMSRCVL = "****";

    PA0ES10(); /* OPEN SELECT SET FOR SUM CODE*/
    PA0ES11(); /* FETCH SUM CODE RECORD*/

    if (VAGen_SQLCODE == 100)
      set PA0EM001.PA0EMHSG cursor, modified, bold;
      converseLib.validationFailed(49);
    end
  end

  PA0ES12(); /* CLOSE SUM CODE CURSOR*/

end // end PA0E512

// VERIFY STYLE/COLOR/DIMENSION
Function PA0E513()
   /* --------------------------------------------------*/
   /* GET STYLE/COLOR/DIMENSION ROW*/
   /* --------------------------------------------------*/

   /* allow style, color, and dimension to be wild carded*/
   /* in paoe550*/

  if (PA0EM001.SY1STNBR == " "
   || PA0EM001.SY2CLRID == " "
   || PA0EM001.XDMCD == " ")
    return;
  end


  set PG2REC empty;

  PG2REC.SY1STNBR = PA0EM001.SY1STNBR;
  PG2REC.SY2CLRID = PA0EM001.SY2CLRID;
  PG2REC.XDMCD = PA0EM001.XDMCD;
  PG2REC.XGPCD = "02";

  XSPG202();

  if (VAGen_SQLCODE == 0)
    return;
  else
    if (VAGen_SQLCODE == 100)
      converseLib.validationFailed(37);
      set PA0EM001.SY1STNBR cursor, modified, bold;
      set PA0EM001.SY2CLRID modified, bold;
      set PA0EM001.XDMCD modified, bold;
      return;
    else
      converseLib.validationFailed(10);
      set PA0EM001.SY1STNBR cursor, modified, bold;
      set PA0EM001.SY2CLRID modified, bold;
      set PA0EM001.XDMCD modified, bold;
      exit stack;
    end
  end

  return;
end // end PA0E513

// VERIFY O/A STATUS CODE
Function PA0E514()
   /* ---------------------------------------------------*/
    /* VALIDATE O/A STATUS CODE*/
   /* ---------------------------------------------------*/

  if (PA0EM001.YESCD == " ")
    return;
  end

  if (PA0EM001.YESCD in YESTBL.YESCD)
    PA0EM001.YESSDESC = YESTBL.YESSDESC[sysVar.arrayIndex];
  else
    set PA0EM001.YESCD cursor, modified, bold;
    converseLib.validationFailed(21);
  end

  return;
end // end PA0E514

// VERIFY/CONVERT SCHEDULER LOGON
Function PA0E515()
   /* ----------------------------------------------*/
     /* VERIFY AND CONVERT THE SCHEDULER LOGON ID*/
   /* ----------------------------------------------*/

  if (PA0EM001.PA0EMUSR == " ")
    return;
  end

  PG1REC.PG1SC4CD = "**";
  PG1REC.PG1FCTCD = "**";
  PG1REC.XXXUSER = PA0EM001.PA0EMUSR;
  PG1REC.XGPCD = "02";

  try
    call "IO1200" ("SA", SQLCA, PG1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful return to calling process.*/
   /* If data not available, post an error message and return.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return; /* Return to previous process*/

    else
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(38);
        set PA0EM001.PA0EMUSR cursor, modified, bold;
        exit stack;
      end
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0E515 GET SPECIALIST CODE   ";
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUSER01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG1REC.PG1KEY; /* Table key*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/


end // end PA0E515

// VERIFY/CONVERS CUSTOMER XREF
Function PA0E516()
   /* ----------------------------------------------------*/
    /* CHECK AND VERIFY CUST CROSSREFERENCE*/
   /* ----------------------------------------------------*/

  if (PA0EM001.PC2CUXID == " ")
    return;
  end

  set PC2REC empty;

  PC2REC.PC2CUXID = PA0EM001.PC2CUXID;
  PC2REC.XGPCD = "02";

  call "IO3340" ("S ", SQLCA, PC2REC) {isExternal = yes};

   /* ------------------------------------------------------------*/
   /* If successful return to calling process.*/
   /* If data not available, post an error message and return.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;

    else
      if (SQLCA.VAGen_SQLCODE == 100) /* or row not found*/
        converseLib.validationFailed(23);
        set PA0EM001.PC2CUXID cursor, modified, bold;

        return; /* Return to previous process*/

      end
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0E516 SELECT CUST XREF      ";
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC2REC.PC2KEY; /* Table key*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/


end // end PA0E516

// CHECH CUST/STORE/DEPT NUMBER
Function PA0E517()
   /* --------------------------------------------------*/
    /* CHECK CUST/STORE/DEPT TO SEE IF ON XREF TABLE*/
   /* --------------------------------------------------*/

  if (PA0EM001.KUCCOID == 0
   && PA0EM001.KUMSTRID == 0
   && PA0EM001.XNXCD == 0)

    return;

  end

  if (PA0EM001.KUCCOID == 0
   && PA0EM001.KUMSTRID > 0)

    converseLib.validationFailed(24);
    set PA0EM001.KUCCOID cursor, modified, bold;
    set PA0EM001.KUMSTRID modified, bold;
    set PA0EM001.XNXCD modified, bold;

  end

  if (PA0EM001.KUCCOID == 0
   && PA0EM001.XNXCD > 0)

    converseLib.validationFailed(24);
    set PA0EM001.KUCCOID cursor, modified, bold;
    set PA0EM001.KUMSTRID modified, bold;
    set PA0EM001.XNXCD modified, bold;

  end

  PC2REC.KUCCOID = PA0EM001.KUCCOID;
  PC2REC.KUMSTRID = PA0EM001.KUMSTRID;
  PC2REC.XNXCD = PA0EM001.XNXCD;
  PC2REC.XGPCD = "02";

  if (PA0EM001.PA0EMRQL > 199999
   || PA0EM001.PA0EMRQH > 199999)
    PC2REC.PC-PRDCU-APAO-FL = "E"; /* EUROPEAN CUSTOMER ONLY*/
  else
    PC2REC.PC-PRDCU-APAO-FL = " "; /* MVSPROD CUSTOMER*/
  end

  call "IO3340" ("SA", SQLCA, PC2REC) {isExternal = yes};

   /* ------------------------------------------------------------*/
   /* If successful return to calling process.*/
   /* If data not available, post an error message and return.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;

    else
      if (SQLCA.VAGen_SQLCODE == 100) /* or row not found*/
        converseLib.validationFailed(24);
        set PA0EM001.KUCCOID cursor, modified, bold;
        set PA0EM001.KUMSTRID modified, bold;
        set PA0EM001.XNXCD modified, bold;

        return; /* Return to previous process*/

      end
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0E517 SELECT CUST XREF      ";
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC2REC.PC2KEY; /* Table key*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/


end // end PA0E517

// VERIFY DIMENSION CODE
Function PA0E518()
   /* ----------------------------------------------------------*/
   /* VERIFY DIMENSION CODE*/
   /* ----------------------------------------------------------*/

  if (PA0EM001.XDMCD == " ")
    return;
  end

  if (PA0EM001.XDMCD == "99")
    converseLib.validationFailed(27);
    set PA0EM001.XDMCD cursor, modified, bold;
    return;
  end

  if (PA0EM001.XDMCD in XDMTBL.XDMCD)
    return;
  else
    converseLib.validationFailed(27);
    set PA0EM001.XDMCD cursor, modified, bold;
  end
end // end PA0E518

// VERIFY LAST STAT DATE(FROM)
Function PA0E519()
   /* ------------------------------------------------------------*/
   /* CHECK AND SETUP LAST STATUS CHANGE DATE*/
   /* ------------------------------------------------------------*/

  if (PA0EM001.PA0EMYS1 > 0)
    PA0EW02.PA0EWBDO = PA0EM001.PA0EMYS1;

    if (PA0EW02.PA0EWBDM < 1
     || PA0EW02.PA0EWBDM > 12)
      converseLib.validationFailed(175);
      set PA0EM001.PA0EMYS1 cursor, bold;
      return;
    end

    if (PA0EW02.PA0EWBDD < 1
     || PA0EW02.PA0EWBDD > 31)
      converseLib.validationFailed(22);
      set PA0EM001.PA0EMYS1 cursor, bold;
      return;
    end

    if (PA0EW02.PA0EWBDY > 89)
      PA0EW02.PA0EWSDC = 19;
    else
      PA0EW02.PA0EWSDC = 20;
    end

    PA0EWSDM = PA0EW02.PA0EWBDM;
    PA0EWSDY = PA0EW02.PA0EWBDY;
    PA0EWSDD = PA0EW02.PA0EWBDD;
    PA0EWYS1 = PA0EW02.PA0EWYSD;
  end

  PA0EW03.PA0EMYS1 = PA0EM001.PA0EMYS1;
end // end PA0E519

// VERIFY DIV GROUP CODE
Function PA0E520()
   /* -----------------------------------------------------*/
    /* CHECK DIVISION GROPUP CODE*/
   /* -----------------------------------------------------*/

                    /* IF PA0EM001.YSMXDV GT '  ';*/
  if (PA0EM001.YSMXDV != PA0EW03.YSMXDV)
    if (PA0EM001.YSMXDV == "  ")
      PA0EW03.YSMXDV = PA0EM001.YSMXDV;
      PA0EM001.PA0EMHSD = " ";
    else
      if (PA0EM001.YSMXDV == "10")
        PA0EW03.YSMXDV = "10";
        PA0EM001.PA0EMHSD = "DOMESTIC";
      else
        if (PA0EM001.YSMXDV == "20")
          PA0EW03.YSMXDV = "20";
          PA0EM001.PA0EMHSD = "NIL";
        else
          set PA0EM001.YSMXDV cursor, bold;
          PA0EM001.PA0EMHSD = " ";
          converseLib.validationFailed(9);
          return;
        end
      end
    end
  end
end // end PA0E520

// VERIFY LAST STAT DATE (TO)
Function PA0E521()
   /* ------------------------------------------------------------*/
   /* CHECK AND SETUP LAST STATUS CHANGE DATE*/
   /* ------------------------------------------------------------*/

  if (PA0EM001.PA0EMYS2 > 0)
    PA0EW02.PA0EWBDO = PA0EM001.PA0EMYS2;

    if (PA0EW02.PA0EWBDM < 1
     || PA0EW02.PA0EWBDM > 12)
      converseLib.validationFailed(175);
      set PA0EM001.PA0EMYS2 cursor, bold;
      return;
    end

    if (PA0EW02.PA0EWBDD < 1
     || PA0EW02.PA0EWBDD > 31)
      converseLib.validationFailed(22);
      set PA0EM001.PA0EMYS2 cursor, bold;
      return;
    end

    if (PA0EW02.PA0EWBDY > 89)
      PA0EW02.PA0EWSDC = 19;
    else
      PA0EW02.PA0EWSDC = 20;
    end

    PA0EWSDM = PA0EW02.PA0EWBDM;
    PA0EWSDY = PA0EW02.PA0EWBDY;
    PA0EWSDD = PA0EW02.PA0EWBDD;
    PA0EWYS2 = PA0EW02.PA0EWYSD;
  end

  PA0EW03.PA0EMYS2 = PA0EM001.PA0EMYS2;
end // end PA0E521

// VERIFY/CONVERS factory select
Function PA0E522()
   /* ----------------------------------------------------*/
    /* CHECK AND VERIFY FACTORY SELECTION*/
   /* ----------------------------------------------------*/

  if (PA0EM001.FY1FCTYC == "    ")
    return;
  end

  set FY1REC empty;

  FY1REC.FY1FCTYC = PA0EM001.FY1FCTYC;
  FY1REC.XGPCD = "02";

  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* select row*/

   /* ------------------------------------------------------------*/
   /* If successful return to calling process.*/
   /* If data not available, post an error message and return.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;

    else
      if (SQLCA.VAGen_SQLCODE == 100) /* or row not found*/
        converseLib.validationFailed(20); /* factory invalid*/
        set PA0EM001.FY1FCTYC cursor, modified, bold;

        return; /* Return to previous process*/

      end
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0E522 VARIFY FACTORY SELECT ";
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1KEY; /* Table key*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/


end // end PA0E522

// VERIFY O/A STATUS CODE
Function PA0E524()
   /* ---------------------------------------------------*/
    /* VALIDATE O/A STATUS CODE to be excluded*/
   /* ---------------------------------------------------*/

  if (PA0EM001.PA0EW-XYES == " ")
    return;
  end

  if (PA0EM001.PA0EW-XYES in YESTBL.YESCD)
    PA0EM001.PA0EW-XYDS = YESTBL.YESSDESC[sysVar.arrayIndex];
  else
    set PA0EM001.PA0EW-XYES cursor, modified, bold;
    converseLib.validationFailed(21);
  end

  return;
end // end PA0E524

// VERIFY O/A TYPE CODE
Function PA0E526()
   /* --------------------------------------------------*/
    /* IF O/A TYPE CODE to be excluded is entered*/
       /* VERIFY AGAINST DCORP.VYETTBL01*/
   /* --------------------------------------------------*/

  if (PA0EM001.PA0EW-XYET == " ")
    return;
  end

  if (PA0EM001.PA0EW-XYET in YETTBL.YETCD)
    /* next sentence*/
  else
    set PA0EM001.PA0EW-XYET cursor, modified, bold;
    converseLib.validationFailed(39);
  end

  return;
end // end PA0E526

// SETUP DISPALY STORAGE
Function PA0E551()
   /* -------------------------------------------------*/
    /* SETUP DISPLAY STORAGE*/
   /* -------------------------------------------------*/


  PA0EW03.PA0EMRQL = PA0EM001.PA0EMRQL;
  PA0EW03.PA0EMRQH = PA0EM001.PA0EMRQH;
  PA0EW03.PA0EMBMF = PA0EM001.PA0EMBMF;
  PA0EW03.PA0EMBMT = PA0EM001.PA0EMBMT;
  PA0EW03.YETCD = PA0EM001.YETCD;
  PA0EW03.PA0EMHSG = PA0EM001.PA0EMHSG;
  PA0EW03.SY1STNBR = PA0EM001.SY1STNBR;
  PA0EW03.SY2CLRID = PA0EM001.SY2CLRID;
  PA0EW03.XDMCD = PA0EM001.XDMCD;
  PA0EW03.YESCD = PA0EM001.YESCD;
  PA0EW03.PA0EMUSR = PA0EM001.PA0EMUSR;
  PA0EW03.PC2CUXID = PA0EM001.PC2CUXID;
  PA0EW03.KUCCOID = PA0EM001.KUCCOID;
  PA0EW03.KUMSTRID = PA0EM001.KUMSTRID;
  PA0EW03.XNXCD = PA0EM001.XNXCD;
  PA0EW03.PA0EMUID = PA0EM001.PA0EMUID;
  PA0EW03.FY1FCTYC = PA0EM001.FY1FCTYC;
  PA0EW03.PA0EW-XYET = PA0EM001.PA0EW-XYET;
  PA0EW03.PA0EW-XYES = PA0EM001.PA0EW-XYES;
  PA0EW03.PA0EW-SORT-ORDER = PA0EM001.PA0EM-SORT-ORDER;
end // end PA0E551

// PROCESS VALID SELECT
Function PA0E600()
   /* -----------------------------------------------*/
    /* PROCESS SCREEN 1 AND TEMP STORAGE PAGE*/
   /* -----------------------------------------------*/


  if (converseVar.eventKey is pa2)
    PA0ES20();
    PA0E610();
    return;
  end

  sysVar.arrayIndex = 0;

  while (sysVar.arrayIndex < 5)

    sysVar.arrayIndex = sysVar.arrayIndex + 1;

    PA0EW01.PA0EMSEL[sysVar.arrayIndex] = PA0EM001.PA0EMSEL[sysVar.arrayIndex];

  end

  PA0ES05(); /* MOVE SELECTS TO TEMP STORAGE*/
  PA0ES06();

  if (converseVar.eventKey is pf8
   || converseVar.eventKey is pf7
   || converseVar.eventKey is enter)

  else
    return;

  end

  if (converseVar.eventKey is pf7)
    if (TA5REC.TA5TSQIX == 1)
      converseLib.validationFailed(2);
      exit stack;
    else
      PA0EW02.PA0EWX1 = TA5REC.TA5TSQIX - 1;
      PA0ES20();
      PA0E610();
      return;
    end
  end

  if (converseVar.eventKey is pf8)
    if (TA5REC.TA5TSQIX == PA0EW02.PA0EWMTP)
      converseLib.validationFailed(3);
    else
      PA0EW02.PA0EWX1 = TA5REC.TA5TSQIX + 1;
      PA0ES20();
      PA0E610();
      return;
    end
  end

end // end PA0E600

// FILL SCREEN FROM TEMP STORAGE
Function PA0E610()
   /* -------------------------------------------------*/
    /* FILL SCREEN WITH CURRENT TEMP STORAGE PAGE*/
   /* -------------------------------------------------*/

  set PA0EM001.PA0EMSEL[1] cursor;

  sysVar.arrayIndex = 0;

  while (sysVar.arrayIndex < 5)
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
    PA0ES30();
  end

   /* INITIALIZE FACTORIES*/

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 5)
    PA0EM001.PA0EM-FY-FCTY-CD1[sysVar.arrayIndex] = " ";
    PA0EM001.PA0EM-FY-FCTY-CD2[sysVar.arrayIndex] = " ";
    PA0EM001.PA0EM-FY-FCTY-CD3[sysVar.arrayIndex] = " ";
   /* MOVE ' ' TO PA0EM001.PA0EM-FY-FCTY-CD4(EZETST);/* TCS CHANGE*/
    if (PA0EW01.PA1OANBR[sysVar.arrayIndex] > 0)
      PA0E611(); /* FILL MAP*/
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end


end // end PA0E610

// SETUP DETAIL ON MAP 1
Function PA0E611()
   /* -------------------------------------------------*/
    /* MOVE DATE FROM TEMP STORAGE TO MAP 1*/
   /* -------------------------------------------------*/

  PA0EM001.PA0EMRQN[sysVar.arrayIndex] = PA0EW01.PA1OANBR[sysVar.arrayIndex];
  PA0EM001.PA0EMSEL[sysVar.arrayIndex] = PA0EW01.PA0EMSEL[sysVar.arrayIndex];
  set PA0EM001.PA0EMSEL[sysVar.arrayIndex] initialAttributes;
  set PA0EM001.PA0EMQTY[sysVar.arrayIndex] initialAttributes;
  PA0EM001.PA0EMHTY[sysVar.arrayIndex] = PA0EW01.YETCD[sysVar.arrayIndex];
  PA0EM001.PA0EMHST[sysVar.arrayIndex] = PA0EW01.YESCD[sysVar.arrayIndex];
  PA0EM001.PA0EMBUY[sysVar.arrayIndex] = PA0EW01.PA1BUYMO[sysVar.arrayIndex];
  PA0EM001.PA0EMSTY[sysVar.arrayIndex] = PA0EW01.SY1STNBR[sysVar.arrayIndex];
  PA0EM001.PA0EMCLR[sysVar.arrayIndex] = PA0EW01.SY2CLRID[sysVar.arrayIndex];
  PA0EM001.PA0EMDIM[sysVar.arrayIndex] = PA0EW01.XDMCD[sysVar.arrayIndex];
  PA0EM001.PA0EMQTY[sysVar.arrayIndex] = PA0EW01.PA1RQQTY[sysVar.arrayIndex];
  PA0EW02.PA0EWYSD = PA0EW01.PA1YESDT[sysVar.arrayIndex];
  PA0EW02.PA0EWBDY = PA0EW02.PA0EWSDY;
  PA0EW02.PA0EWBDM = PA0EW02.PA0EWSDM;
  PA0EW02.PA0EWBDD = PA0EW02.PA0EWSDD;
  PA0EM001.PA0EMLSC[sysVar.arrayIndex] = PA0EW02.PA0EWBDO;
  PA0EM001.PA0EMRQB[sysVar.arrayIndex] = PA0EW01.XXXPGUID[sysVar.arrayIndex];
  PA0EW02.PA0EWYSD = PA0EW01.ZZZSDT[sysVar.arrayIndex];
  PA0EW02.PA0EWBDY = PA0EW02.PA0EWSDY;
  PA0EW02.PA0EWBDM = PA0EW02.PA0EWSDM;
  PA0EW02.PA0EWBDD = PA0EW02.PA0EWSDD;
  PA0EM001.PA0EMRQD[sysVar.arrayIndex] = PA0EW02.PA0EWBDO;
  PA0EM001.PA1OATXT[sysVar.arrayIndex] = PA0EW01.PA1OATXT[sysVar.arrayIndex];
  PA0EW02.PA0EWCUS = PA0EW01.KUCCOID[sysVar.arrayIndex];
  PA0EW02.PA0EWSTR = PA0EW01.KUMSTRID[sysVar.arrayIndex];
  PA0EW02.PA0EWDEP = PA0EW01.XNXCD[sysVar.arrayIndex];
  PA0EW02.PA0EWPR1 = ".";
  PA0EW02.PA0EWPR2 = ".";

   /* mks 06/04/91: take this code out with table changes!*/
  if (PA0EW01.YESCD[sysVar.arrayIndex] == "02") /* IF STATUS CODE INDICATES ON HOLD*/
    PA0EM001.PA0EMHFL[sysVar.arrayIndex] = "Y";
  else
    if (PA0EW01.PA1HLDFL[sysVar.arrayIndex] == " ")
      PA0EM001.PA0EMHFL[sysVar.arrayIndex] = "N";
    else
      PA0EM001.PA0EMHFL[sysVar.arrayIndex] = PA0EW01.PA1HLDFL[sysVar.arrayIndex];
    end
  end

   /* -------------------------------------------------*/
   /* CHECK TO SEE IF THERE IS AN ENTRY IN THE*/
   /* DPRODA.VPAXRF01 TABLE.  IF THERE IS, SET THE*/
   /* PA0EMRFL FLAG TO "Y".*/
   /* -------------------------------------------------*/

  set PA7REC empty;

  PA0ES13(); /* select DPRODA.VPAXRF01 row*/

  if (VAGen_SQLCODE == 100)
    PA0EM001.PA0EMRFL[sysVar.arrayIndex] = "N";
  else
    if (VAGen_SQLCODE == 0)
      PA0EM001.PA0EMRFL[sysVar.arrayIndex] = "Y";
    end
  end

  set PA0EMDF1[sysVar.arrayIndex] initialAttributes;
  set PA0EMDF2[sysVar.arrayIndex] initialAttributes;
  set PA0EMDF3[sysVar.arrayIndex] initialAttributes;

  if (PA0EW01.PA1YESDT[sysVar.arrayIndex] == 0)
    PA0EW02.PA0EWYSD = PA0EW01.ZZZSDT[sysVar.arrayIndex];
    PA0EW02.PA0EWBDY = PA0EW02.PA0EWSDY;
    PA0EW02.PA0EWBDM = PA0EW02.PA0EWSDM;
    PA0EW02.PA0EWBDD = PA0EW02.PA0EWSDD;
    PA0EM001.PA0EMLSC[sysVar.arrayIndex] = PA0EW02.PA0EWBDO;
  end

  PA0E-61101(); /* GET FACTORY CODES*/

  PA0E612(); /* GET CUSTOMER XREF*/

  PA0EM001.PA0EMXRF[sysVar.arrayIndex] = PC2REC.PC2CUXID;

  PA0E613(); /* GET STYLE DESCRIPTION*/

  PA0EM001.PA0EMSYD[sysVar.arrayIndex] = PG2REC.SY1SSTNM;

  return;
end // end PA0E611

// CONVERT TO CUST XREF
Function PA0E612()
   /* ------------------------------------------*/
    /* CONVERT TO CUST XREF*/
   /* ------------------------------------------*/

  set PC2REC empty;

  if (PA0EW01.KUCCOID[sysVar.arrayIndex] == 0)
    return;
  end



  PC2REC.KUCCOID = PA0EW01.KUCCOID[sysVar.arrayIndex];
  PC2REC.KUMSTRID = PA0EW01.KUMSTRID[sysVar.arrayIndex];
  PC2REC.XNXCD = PA0EW01.XNXCD[sysVar.arrayIndex];
  PC2REC.XGPCD = "02";

  if (PA0EW01.PA1OANBR[sysVar.arrayIndex] > 199999
   && PA0EW01.PA1OANBR[sysVar.arrayIndex] < 300000)
    PC2REC.PC-PRDCU-APAO-FL = "E"; /* EUROPEAN CUSTOMER ONLY*/
  else
    PC2REC.PC-PRDCU-APAO-FL = " "; /* MVSPROD CUSTOMER*/
  end

  try
    call "IO3340" ("SA", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful return to calling process.*/
   /* If data not available, post an error message and return.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;

    else
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0E612 SELECT CUST XREF      ";
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC2REC.PC2KEY; /* Table key*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/


end // end PA0E612

// GET STYLE SHORT NAME
Function PA0E613()
   /* --------------------------------------------------*/
   /* GET STYLE/COLOR/DIMENSION ROW*/
   /* --------------------------------------------------*/

  set PG2REC empty;

  PG2REC.SY1STNBR = PA0EW01.SY1STNBR[sysVar.arrayIndex];
  PG2REC.SY2CLRID = PA0EW01.SY2CLRID[sysVar.arrayIndex];
  PG2REC.XDMCD = PA0EW01.XDMCD[sysVar.arrayIndex];
  PG2REC.XGPCD = "02";

  XSPG202();

  if (VAGen_SQLCODE == 0)
    return;
  else
    converseLib.validationFailed(10);
    exit stack;
  end

  return;
end // end PA0E613

// SELECT SET DPRODA.VFYPA001
Function PA0ES-07-IO4810-S1()
   /* ------------------------------------------------------------*/
   /* SELECT SET DPRODA.VFYPA001.*/
   /* ------------------------------------------------------------*/

   /* ---------- move key values to pa4rec -----*/
  set PA4REC empty;
  PA4REC.PA1OANBR = PA0EM001.PA0EMRQN[sysVar.arrayIndex];
  PA4REC.YESCD = "*";

  try
    call "IO4810" ("S1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S07"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ES07"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ** END OF PA0ES-07-IO4810-S1                              ***/
   /* **                                                        ***/
end // end PA0ES-07-IO4810-S1

// FETCH ONE DPRODA.VFYPA001 ROW
Function PA0ES-08-IO4810-N1()
   /* ------------------------------------------------------------*/
   /* FETCH NEXT DPRODA.VFYPA001.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4810" ("N1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S08"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ES08"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ** END OF PA0ES-08-IO4810-N1                              ***/
   /* **                                                        ***/
end // end PA0ES-08-IO4810-N1

// CLOSE SET DPRODA.VFYPA001
Function PA0ES-09-IO4810-C1()
   /* ------------------------------------------------------------*/
   /* CLOSE SET DPRODA.VFYPA001.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4810" ("C1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S09"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ES09"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ** END OF PA0ES-09-IO4810-C1                              ***/
   /* **                                                        ***/
end // end PA0ES-09-IO4810-C1

// SELECT SET DCORP.VSUMCD01
Function PA0ES-22-IO2640-S()
   /* ------------------------------------------------------------*/
   /* SELECT SET DCORP.VSUMCD01*/
   /* ------------------------------------------------------------*/

  set YSMREC empty;

  YSMTBLPF = "XDV"; /* TABLE PREFIX*/
  YSMSYSPF = "FF"; /* SYSTEM PREFIX*/
  YSMSUMID = 1; /* SUM ID*/
  YSMSRCVL = COMMAREA.XDVCD; /* SOURCE VALUE '01' '02'...*/

  try
    call "IO2640" ("S ", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  PAWREC.XXXMODID = "S22"; /* MODULE ID*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* RESOURCE NOT AVAILABLE*/

    converseLib.validationFailed(11); /**/
    TA1REC.TA1FUNC = "POST"; /* TERMINATION FUNCTION*/

  else

    converseLib.validationFailed(10); /* NOTIFY SYSTEM DEVL*/
    TA1REC.TA1FUNC = "RETN"; /* TERMINATION FUNCTION*/

    converseLib.clearScreen();

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  PAWREC.XXXMODID = "S22"; /* Module identification*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCORP.VSUMCD01";
  TA1REC.TA1PGMNM = "PA0ES22"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ** END OF PA0ES-22-IO2640-S                               ***/
   /* **                                                        ***/
end // end PA0ES-22-IO2640-S

// SETUP O/A/ NUMBER RANGE MAP 1
Function PA0ES01()
   /* ----------------------------------------------------*/
    /* FETCH NEXT O/A NUMBER*/
    /* CALCULATE HIGH REQUEST NUMBER = NEXT O/A - 1*/
    /* CALCULATE LOW  REQUEST NUMBER = NEXT O/A - 2001*/
    /* MOVE BOTH TO MAP 1*/
   /* ----------------------------------------------------*/

  set PA8REC empty;

  try
    call "IO4800" ("S ", SQLCA, PA8REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE != 0) /* Normal return code*/

      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "PA0E515"; /* module name*/
      TA1REC.TA1LOC = "PA0E515 GET SPECIALIST CODE   ";
      TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VSUSER01"; /* Table view name*/
      TA1REC.TA1TBLKE = PG1REC.PG1KEY; /* Table key*/

      if (sysVar.errorCode == "00000000" /* Call successful*/
       && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

        TA1REC.TA1FUNC = "POST"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
                                   /* Error diagnosis routine*/
      else
        if (sysVar.errorCode == "00000000" /* Call successful*/
         && SQLCA.VAGen_SQLCODE == -805)   /* and wrong plan-- dhales*/
                                     /* inserted due to strange error*/
          TA1REC.TA1FUNC = "ABND"; /* Termination function*/
          call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
                                     /* Error diagnosis routine*/
        else
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
          call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

        end
      end

      sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
      SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/
      return;
    end
  end

  if (sysVar.errorCode != "00000000") /* Call successful*/

    TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1LOC = "PA0E515 GET SPECIALIST CODE   ";
    TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSUSER01"; /* Table view name*/
    TA1REC.TA1TBLKE = PG1REC.PG1KEY; /* Table key*/


    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/


    sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
    SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/
    return;
  end

  if (PA8REC.PA8NXTNB < 2002
   || PA0EM001.PA0EMHSG == "OP")
    PA0EM001.PA0EMRQL = 1;
  else
    PA0EM001.PA0EMRQL = PA8REC.PA8NXTNB - 2001;
  end

  if (PA8REC.PA8NXTNB == 1)
    PA0EM001.PA0EMRQH = 99999;
  else
    PA0EM001.PA0EMRQH = PA8REC.PA8NXTNB - 1;
  end

end // end PA0ES01

// SETUP BUY DATE RANGE
Function PA0ES02()
   /* --------------------------------------------*/
    /* SETUP THE BUY DATE RANGE FOR PA0E*/
   /* --------------------------------------------*/

  PA0EW02.PAWBUYYM = PAWREC.PAWBUYYM;

  if (PA0EW02.PA0EWBYM < 11)
    PA0EW02.PA0EWBYM = PA0EW02.PA0EWBYM + 2;
  else

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF PA0EW02.PA0EWBYM = 11;*/
  /* PA0EW02.PA0EWBYY = PA0EW02.PA0EWBYY + 1;*/
  /* MOVE 1 TO PA0EW02.PA0EWBYM;*/
  /* ELSE;*/
  /* IF PA0EW02.PA0EWBYM = 12;*/
  /* PA0EW02.PA0EWBYY = PA0EW02.PA0EWBYY + 1;*/
  /* MOVE 2 TO PA0EW02.PA0EWBYM;*/
  /* END;*/
  /* END;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
    PA0EW02.PA0EWRTLOW-YY = PA0EW02.PA0EWBYY;
    if (PA0EW02.PA0EWBYY > 60)
      PA0EW02.PA0EWRTLOW-CC = 19;
    else
      PA0EW02.PA0EWRTLOW-CC = 20;
    end
    PA0EW02.PA0EWRTLOW-CCYY = PA0EW02.PA0EWRTLOW-CCYY + 1;
    PA0EW02.PA0EWBYY = PA0EW02.PA0EWRTLOW-YY;
    PA0EW02.PA0EWBYM = PA0EW02.PA0EWBYM - 10;
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

  end

  PA0EM001.PA0EMBMT = PA0EW02.PAWBUYYM;

   /* FIND THE FY05 BUY DATE*/

  if (PA0EW02.PA0EWBYM < 5)
    PA0EW02.PA0EWBYM = 5;
    PA0EM001.PA0EMBMT = PA0EW02.PAWBUYYM;
  else

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* PA0EW02.PA0EWBYY = PA0EW02.PA0EWBYY + 1;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
    PA0EW02.PA0EWRTLOW-YY = PA0EW02.PA0EWBYY;
    if (PA0EW02.PA0EWBYY > 60)
      PA0EW02.PA0EWRTLOW-CC = 19;
    else
      PA0EW02.PA0EWRTLOW-CC = 20;
    end
    PA0EW02.PA0EWRTLOW-CCYY = PA0EW02.PA0EWRTLOW-CCYY + 1;
    PA0EW02.PA0EWBYY = PA0EW02.PA0EWRTLOW-YY;
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

  end


  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF PA0EW02.PAWBUYYM > PA0EM001.PA0EMBMT;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  PA0EW02.PA0EWRTLOW-YY = PA0EW02.PA0EWBYY;
  if (PA0EW02.PA0EWBYY > 60)
    PA0EW02.PA0EWRTLOW-CC = 19;
  else
    PA0EW02.PA0EWRTLOW-CC = 20;
  end
  PA0EW02.PA0EW-WRK-YYMM = PA0EM001.PA0EMBMT;
  PA0EW02.PA0EWRTHIGH-YY = PA0EW02.PA0EW-WRK-YY;
  if (PA0EW02.PA0EW-WRK-YY > 60)
    PA0EW02.PA0EWRTHIGH-CC = 19;
  else
    PA0EW02.PA0EWRTHIGH-CC = 20;
  end
  if (PA0EW02.PA0EWRTLOW-CCYY > PA0EW02.PA0EWRTHIGH-CCYY) /* ;*/
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

    PA0EM001.PA0EMBMT = PA0EW02.PAWBUYYM;
  end

  PA0EW02.PAWBUYYM = PAWREC.PAWBUYYM;

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* PA0EW02.PA0EWBYY = PA0EW02.PA0EWBYY - 1;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  PA0EW02.PA0EWRTLOW-YY = PA0EW02.PA0EWBYY;
  if (PA0EW02.PA0EWBYY > 60)
    PA0EW02.PA0EWRTLOW-CC = 19;
  else
    PA0EW02.PA0EWRTLOW-CC = 20;
  end
  PA0EW02.PA0EWRTLOW-CCYY = PA0EW02.PA0EWRTLOW-CCYY - 1;
  PA0EW02.PA0EWBYY = PA0EW02.PA0EWRTLOW-YY;
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

  PA0EM001.PA0EMBMF = PA0EW02.PAWBUYYM;

end // end PA0ES02

// CLEAR TEMP STORAGE
Function PA0ES03()
   /* -------------------------------------------*/
    /* PURGE ANY TEMPORARY STORAGE*/
   /* -------------------------------------------*/

  TA5REC.TA5APPID = "PA0E"; /* APPL ID*/
  TA5REC.TA5FNCCD = "P"; /* SET FUNSTION CODE*/

  call "TA0050" (PA0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* CALL TEMP STORAGE ROUTINE*/

   /* -------------------------------------------*/
    /* IF SUCCESSFUL RETURN TO CALLING ROUTINE*/
   /* -------------------------------------------*/
  if (TA5REC.TA5RTNCD == 0) /* NORMAL RETURN*/
    return;
  end

   /* -------------------------------------------*/
    /* OTHERWISE POST A MESSAGE AND RETURN*/
   /* -------------------------------------------*/

  TA1REC.TA1FUNC = "POST";
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1PGMNM = "PA0ES03";
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1MAP = "PA0EM001";
  SQLCA.SQLCAREC = TA5REC.TA5DATA;

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};

  converseLib.validationFailed(10);
  exit stack;

end // end PA0ES03

// WRITE TEMP STORAGE
Function PA0ES04()
   /* ------------------------------------------------*/
   /* WRITE TEMP STORAGE*/
   /* -----------------------------------------------*/

  if (sysVar.arrayIndex == 5)
    sysVar.arrayIndex = 0;
    PA0EW01.PA0EWTSL = 440; /* PAGE LENGTH*/
    TA5REC.TA5APPID = "PA0E"; /* SET APPLI ID*/
    TA5REC.TA5FNCCD = "A"; /* SET FUNCTION CODE*/

    call "TA0050" (PA0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};


    if (TA5REC.TA5RTNCD == 0)
      PA0EW02.PA0EWMTP = TA5REC.TA5TSQIX; /* MAX NUMBER OF PAGES*/
      set PA0EW01 empty;
      sysVar.arrayIndex = 0;
    else
      TA1REC.TA1FUNC = "POST";
      TA1REC.TA1TYPE = "APPL";
      TA1REC.TA1PGMNM = "PA0ES04";
      TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
      TA1REC.TA1MAP = "PA0EM001";
      SQLCA.SQLCAREC = TA5REC.TA5DATA;

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};

      converseLib.validationFailed(10);
      exit stack;

    end
  end

  if (sysVar.arrayIndex > 0
   && VAGen_SQLCODE == 100)
    sysVar.arrayIndex = 0;
    PA0EW01.PA0EWTSL = 440; /* PAGE LENGTH*/
    TA5REC.TA5APPID = "PA0E"; /* SET APPLI ID*/
    TA5REC.TA5FNCCD = "A"; /* SET FUNCTION CODE*/

    call "TA0050" (PA0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};


    if (TA5REC.TA5RTNCD == 0)
      PA0EW02.PA0EWMTP = TA5REC.TA5TSQIX; /* MAX NUMBER OF PAGES*/
      set PA0EW01 empty;
      return;
    else
      TA1REC.TA1FUNC = "POST";
      TA1REC.TA1TYPE = "APPL";
      TA1REC.TA1PGMNM = "PA0ES04";
      TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
      TA1REC.TA1MAP = "PA0EM001";
      SQLCA.SQLCAREC = TA5REC.TA5DATA;

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};

      converseLib.validationFailed(10);
      exit stack;

    end
  end

  sysVar.arrayIndex = sysVar.arrayIndex + 1;

  PA0EW01.PA0EMSEL[sysVar.arrayIndex] = " ";
  PA0EW01.PA1OANBR[sysVar.arrayIndex] = PA1REC.PA1OANBR;
  PA0EW01.YETCD[sysVar.arrayIndex] = PA1REC.YETCD;
  PA0EW01.YESCD[sysVar.arrayIndex] = PA1REC.YESCD;
  PA0EW01.PA1BUYMO[sysVar.arrayIndex] = PA1REC.PA1BUYMO;
  PA0EW01.SY1STNBR[sysVar.arrayIndex] = PA1REC.SY1STNBR;
  PA0EW01.SY2CLRID[sysVar.arrayIndex] = PA1REC.SY2CLRID;
  PA0EW01.XDMCD[sysVar.arrayIndex] = PA1REC.XDMCD;
  PA0EW01.PA1RQQTY[sysVar.arrayIndex] = PA1REC.PA1RQQTY;
  PA0EW01.PA1YESDT[sysVar.arrayIndex] = PA1REC.PA1YESDT;
  PA0EW01.XXXPGUID[sysVar.arrayIndex] = PA1REC.XXXPGUID;
  PA0EW01.ZZZSDT[sysVar.arrayIndex] = PA1REC.ZZZSDT;
  PA0EW01.KUCCOID[sysVar.arrayIndex] = PA1REC.KUCCOID;
  PA0EW01.KUMSTRID[sysVar.arrayIndex] = PA1REC.KUMSTRID;
  PA0EW01.XNXCD[sysVar.arrayIndex] = PA1REC.XNXCD;
  PA0EW01.PA1HLDFL[sysVar.arrayIndex] = PA1REC.PA1HLDFL;
  PA0EW01.PA1CMIND[sysVar.arrayIndex] = PA1REC.PA1CMIND;
  PA0EW01.PA1OATXT[sysVar.arrayIndex] = PA1REC.PA1OATXT;
  PA0EW01.PA-AFRGT-RQT-ID[sysVar.arrayIndex] = PA1REC.PA-AFRGT-RQT-ID;

  return;

end // end PA0ES04

Function PA0ES05()
   /* -----------------------------------------------*/
    /* MOVE SELECTS TO PA0EW01*/
   /* -----------------------------------------------*/

  sysVar.arrayIndex = 0;

  while (sysVar.arrayIndex < 5)

    sysVar.arrayIndex = sysVar.arrayIndex + 1;

    PA0EW01.PA0EMSEL[sysVar.arrayIndex] = PA0EM001.PA0EMSEL[sysVar.arrayIndex];

  end

end // end PA0ES05

// UPDATE TEMP STORAGE
Function PA0ES06()
   /* ------------------------------------------------*/
   /* UPDATE TEMP STORAGE*/
   /* -----------------------------------------------*/

  if (PA0EWRPD != "Y")
    return;
  end

  PA0EW01.PA0EWTSL = 440; /* PAGE LENGTH*/
  TA5REC.TA5APPID = "PA0E"; /* SET APPLI ID*/
  TA5REC.TA5TSQIX = PA0EW02.PA0EWX1; /* SET PAGE NUMBER*/
  TA5REC.TA5FNCCD = "U"; /* SET FUNCTION CODE*/

  call "TA0050" (PA0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};

  if (TA5REC.TA5RTNCD == 0)
    return;
  else
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1PGMNM = "PA0ES03";
    TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
    TA1REC.TA1MAP = "PA0EM001";
    SQLCA.SQLCAREC = TA5REC.TA5DATA;

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};

    converseLib.validationFailed(10);
    exit stack;

  end

end // end PA0ES06

// SELECT SET FOR SUMCODE TABLE
Function PA0ES10()
   /* -------------------------------------------------*/
    /* SELECT SET FOR SUM CODE TABLE*/
   /* -------------------------------------------------*/

  try
    call "IO2640" ("S1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    else
      if (VAGen_SQLCODE == 100)
        converseLib.validationFailed(49);
        return;
      end

      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1LOC = "PA0ES10 GET GROUP CODE        ";
      TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
      TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
      TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* Table key*/

      if (sysVar.errorCode == "00000000" /* Call successful*/
       && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

        TA1REC.TA1FUNC = "POST"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
                                   /* Error diagnosis routine*/

      else

        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      end

      sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
      SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/
      return;
    end
    return;
  end
  return;

end // end PA0ES10

// FETCH SUMCODE RECORD
Function PA0ES11()
   /* -----------------------------------------------------*/
    /* FETCH SUMCODE ROW*/
   /* -----------------------------------------------------*/


  try
    call "IO2640" ("N1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      PA0EM001.PA0EMHGA = YSMREC.YSMSMDSC;
      return;
    else
      if (VAGen_SQLCODE == 100)
        converseLib.validationFailed(49);
        return;
      end

      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1LOC = "PA0ES11 GET GROUP CODE        ";
      TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
      TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
      TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* Table key*/

      if (sysVar.errorCode == "00000000" /* Call successful*/
       && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

        TA1REC.TA1FUNC = "POST"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
                                   /* Error diagnosis routine*/

      else

        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      end

      sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
      SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/
      exit stack;
    end
    exit stack;
  end
  exit stack;

end // end PA0ES11

// CLOSE SUMCODE CURSOR
Function PA0ES12()
   /* --------------------------------------------*/
    /* CLOSE SUMCODE CURSOR*/
   /* --------------------------------------------*/

  try
    call "IO2640" ("C1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    else
      if (VAGen_SQLCODE == 100)
        return;
      end

      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1LOC = "PA0ES12 GET GROUP CODE        ";
      TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
      TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
      TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* Table key*/

      if (sysVar.errorCode == "00000000" /* Call successful*/
       && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

        TA1REC.TA1FUNC = "POST"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
                                   /* Error diagnosis routine*/

      else

        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      end

      sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
      SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/
      exit stack;
    end
  end

end // end PA0ES12

// SELECT DPRODA.VPARFL01 ROW
Function PA0ES13()
   /* -------------------------------------------------*/
    /* SELECT DPRODA.VPAXRF01 row to determine the*/
    /* PA0ERFL value.*/
   /* -------------------------------------------------*/

  PA7REC.PA7PRNBR = PA0EW01.PA1OANBR[sysVar.arrayIndex]; /* o/a number*/

  try
    call "IO5120" ("SB", SQLCA, PA7REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* related o/a*/
     || SQLCA.VAGen_SQLCODE == 100) /* no related o/as*/
      return;
    else
      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1LOC = "PA0ES13 GET RELATED O/A INFO  ";
      TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VPAXRF01"; /* Table view name*/
      TA1REC.TA1TBLKE = PA7REC.PA7KEY; /* Table key*/

      if (sysVar.errorCode == "00000000" /* Call successful*/
       && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

        TA1REC.TA1FUNC = "POST"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
                                   /* Error diagnosis routine*/

      else

        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      end

      sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
      SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/
      return;
    end
    return;
  end
  return;

end // end PA0ES13

// FETCH O/A HEADERS
Function PA0ES15()
   /* -------------------------------------------------*/
    /* SELECT SET FOR O/A HEADERS*/
   /* -------------------------------------------------*/

  try
    call "PA1000" (PAYREC, SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    else
      if (VAGen_SQLCODE == 100)
        converseLib.validationFailed(15);
        return;
      end
    end
  end

   /* --------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER. -*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.       -*/
   /* --------------------------------------------------------------*/

  PAWREC.XXXMODID = "S15"; /* MODULE ID*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* RESOURCE NOT AVAILABLE*/

    converseLib.validationFailed(11); /**/
    TA1REC.TA1FUNC = "POST"; /* TERMINATION ROUTINE*/

  else

    converseLib.validationFailed(10); /* NOTIFY PROGRAMMING*/
    TA1REC.TA1FUNC = "RETN"; /* TERMINATION ROUTINE*/

    converseLib.clearScreen();

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA1000-PA0ES15 OPEN O/A HDR";
  TA1REC.TA1PGMNO = "PA0ES15"; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PAYREC.PAYKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

end // end PA0ES15

// SELECT O/A HEADERS
Function PA0ES16()
   /* -----------------------------------------------------*/
    /* FETCH O/A HEADER*/
   /* -----------------------------------------------------*/

  if (PA0EM001.FY1FCTYC == "    ")
    if (PA0EM001.PA0EM-SORT-ORDER == "2") /* SORT BY STYLE/COLOR/DIM*/
      if (PA0EM001.YETCD > " ")
        PAYREC.PAYFUNCT = "N5";
      else
        PAYREC.PAYFUNCT = "N7";
      end
    else /* SORT BY ORDER ADJUSTMENT NUMBER;*/
      if (PA0EM001.YETCD > " ")
        PAYREC.PAYFUNCT = "N1";
      else
        PAYREC.PAYFUNCT = "N3";
      end
    end
  else /* SORT BY ORDER ADJUSTMENT NUMBER;*/
    if (PA0EM001.PA0EM-SORT-ORDER == "2") /* SORT BY STYLE/COLOR/DIM*/
      if (PA0EM001.YETCD > " ")
        PAYREC.PAYFUNCT = "N6"; /* if factory selection*/
      else
        PAYREC.PAYFUNCT = "N8";
      end
    else /* SORT BY ORDER ADJUSTMENT NUMBER*/
      if (PA0EM001.YETCD > " ")
        PAYREC.PAYFUNCT = "N2"; /* if factory selection*/
      else
        PAYREC.PAYFUNCT = "N4";
      end
    end
  end

  try
    call "PA1000" (PAYREC, SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    end /* ;*/

  end

   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER-*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.     -*/
   /* ------------------------------------------------------------*/

  PAWREC.XXXMODID = "S16"; /* MODULE IDENTIFICATION*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* RESOURCE UNAVAILABLE*/

    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST"; /* TERMINATION FUNCTION*/

  else

    converseLib.validationFailed(10); /* NOTIFY PROGRAMMING*/
    TA1REC.TA1FUNC = "RETN"; /* TERMINATION FUNCTION*/

    converseLib.clearScreen();

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA1000-PA0ES16 FETCH O/A HDR  ";
  TA1REC.TA1PGMNO = "PA0ES16"; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PAYREC.PAYKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/


end // end PA0ES16

// CLOSE O/A HEADER CURSOR
Function PA0ES17()
   /* --------------------------------------------*/
    /* CLOSE O/A HEADER CURSOR*/
   /* --------------------------------------------*/

  if (PA0EM001.FY1FCTYC == "    ")
    if (PA0EM001.PA0EM-SORT-ORDER == "2") /* SORT BY STYLE/COLOR/DIM*/
      if (PA0EM001.YETCD > " ")
        PAYREC.PAYFUNCT = "C5";
      else
        PAYREC.PAYFUNCT = "C7";
      end
    else /* SORT BY ORDER ADJUSTMENT NUMBER;*/
      if (PA0EM001.YETCD > " ")
        PAYREC.PAYFUNCT = "C1";
      else
        PAYREC.PAYFUNCT = "C3";
      end
    end
  else
    if (PA0EM001.PA0EM-SORT-ORDER == "2") /* SORT BY STYLE/COLOR/DIM*/
      if (PA0EM001.YETCD > " ")
        PAYREC.PAYFUNCT = "C6";
      else
        PAYREC.PAYFUNCT = "C8";
      end
    else /* SORT BY ORDER ADJUSTMENT NUMBER;*/
      if (PA0EM001.YETCD > " ")
        PAYREC.PAYFUNCT = "C2";
      else
        PAYREC.PAYFUNCT = "C4";
      end
    end
  end

  try
    call "PA1000" (PAYREC, SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.     -*/
   /* ------------------------------------------------------------*/

  PAWREC.XXXMODID = "S17"; /* MODULE IDENT*/
  converseLib.validationFailed(10);

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1FUNC = "RETN"; /* TERMINATION FUNCTION*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA1000-PA0ES17 CLOSE O/A HDR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = "PA0ES17"; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* ERROR DIAGNOSIS ROUTINE*/

end // end PA0ES17

// GET TEMP STORAGE PAGE
Function PA0ES20()
   /* ---------------------------------------------*/
    /* OBTAIN TEMP STORAGE PAGE*/
   /* ---------------------------------------------*/

  PA0EW01.PA0EWTSL = 440; /* Temporary storage length*/
  TA5REC.TA5TSQIX = PA0EW02.PA0EWX1; /* MOVE PAGE NUMBER*/
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (PA0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  PA0EM001.XXXMODID = "S20"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1PGMNM = "PA0ES20"; /* Module identification*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1MAP = "PA0EM001"; /* Map name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

end // end PA0ES20

// MOVE SELECTED ITEMS TO PAWREC
Function PA0ES21()
   /* -----------------------------------------------*/
   /* MOVE SELECTED ITEMS TO PAWREC*/
   /* -----------------------------------------------*/

  if (sysVar.arrayIndex >= 25)
    PA0EWX2 = 6;
    return;
  end

  if (PA0EW01.PA0EMSEL[PA0EWX2] != "S")
    return;
  end

  sysVar.arrayIndex = sysVar.arrayIndex + 1;

  PAWREC.PA1OANBR[sysVar.arrayIndex] = PA0EW01.PA1OANBR[PA0EWX2];

  if (converseVar.eventKey not pf2) /* If not doing a combine, exit*/
    return;
  end

  if (PA0EW01.PA1OANBR[PA0EWX2] > 199999
   && PA0EW01.PA1OANBR[PA0EWX2] < 300000)
    converseLib.validationFailed(341); /* CAN'T COMBINE WITH EUROPEAN O/A*/
    PA0EM001.XXXMODID = "S21";
    PA0EWCBE = "Y";
    return;
  end

  if (PA0EW01.PA-AFRGT-RQT-ID[PA0EWX2] > 0) /* If this is an A/f request*/
    converseLib.validationFailed(320); /* cannot combine an air freight OA*/
    PA0EM001.XXXMODID = "S21";
    PA0EWCBE = "Y";
  end

  if (PA0EW01.YETCD[PA0EWX2] == "DA"
   || PA0EW01.YETCD[PA0EWX2] == "DR"
   || PA0EW01.YETCD[PA0EWX2] == "NI"
   || PA0EW01.YETCD[PA0EWX2] == "DN"
   || PA0EW01.YETCD[PA0EWX2] == "EO"
   || PA0EW01.YETCD[PA0EWX2] == "OR"
   || PA0EW01.YETCD[PA0EWX2] == "PR")
    if (PA0EW01.YESCD[PA0EWX2] == "70" /* p.o. updated*/
     || PA0EW01.YESCD[PA0EWX2] == "71" /* p.o. updated - ets errors*/
     || PA0EW01.YESCD[PA0EWX2] == "75" /* factory confirmed receipt*/
     || PA0EW01.YESCD[PA0EWX2] == "97" /* combined*/
     || PA0EW01.YESCD[PA0EWX2] == "98" /* cancelled*/
     || PA0EW01.PA1HLDFL[PA0EWX2] == "Y") /* on hold*/
      PA0EWCBE = "Y";
    else
         /* if this is the first selected record - store the style,*/
            /* color, dimension and buy month*/
      if (sysVar.arrayIndex == 1)
        PA0EW02.PA0EWTZS = PA0EW01.SY1STNBR[PA0EWX2];
        PA0EW02.PA0EWCLR = PA0EW01.SY2CLRID[PA0EWX2];
        PA0EW02.PA0EWDIM = PA0EW01.XDMCD[PA0EWX2];
        PA0EW02.PA0EWTZD = PA0EW01.PA1BUYMO[PA0EWX2];
        PA0EW02.PA0EWTSZ = "N";
      else
        if (PA0EW01.SY1STNBR[PA0EWX2] == PA0EW02.PA0EWTZS
         && PA0EW01.SY2CLRID[PA0EWX2] == PA0EW02.PA0EWCLR
         && PA0EW01.XDMCD[PA0EWX2] == PA0EW02.PA0EWDIM
         && PA0EW01.PA1BUYMO[PA0EWX2] == PA0EW02.PA0EWTZD)
            /* NEXT SENTENCE*/
        else
          PA0EWTSZ = "Y"; /* NOT SAME STYLE/BUY MONTH*/
        end
      end
    end
  else
    PA0EWCBE = "Y"; /* COMBINE ERROR*/
  end

  if (PA0EWTSZ == "Y" /* NOT SAME STYLE/BUY MONTH*/
   || PA0EWCBE == "Y") /* OR COMBINE ERROR*/
    return;
  end

  /* PA330: ONLY ALLOW 'OR' TYPES TO COMBINE WITH 'OR' TYPES*/
  /*  */
  /* FB322: ONLY ALLOW 'PR' TYPES TO COMBINE WITH 'PR' TYPES*/
  /*  */
  if (PA0EW00.PA0EW-OR-COMBINE-FLAG == "X" /* INITAL VALUE*/
   || PA0EW00.PA0EW-PR-COMBINE-FLAG == "X")

    if (PA0EW01.YETCD[PA0EWX2] == "OR")
      PA0EW00.PA0EW-OR-COMBINE-FLAG = "Y";
    else
      PA0EW00.PA0EW-OR-COMBINE-FLAG = "N";
    end

    if (PA0EW01.YETCD[PA0EWX2] == "PR")
      PA0EW00.PA0EW-PR-COMBINE-FLAG = "Y";
    else
      PA0EW00.PA0EW-PR-COMBINE-FLAG = "N";
    end

    return;

  end

  if (PA0EW00.PA0EW-OR-COMBINE-FLAG == "Y")

    if (PA0EW01.YETCD[PA0EWX2] != "OR")
      converseLib.validationFailed(288); /* 'OR' CAN ONLY COMBINE WITH 'OR'*/
      PA0EM001.XXXMODID = "S21";
      PA0EWCBE = "Y";
    end

    return;

  end

  if (PA0EW01.YETCD[PA0EWX2] == "OR")
    converseLib.validationFailed(288); /* 'OR' CAN ONLY COMBINE WITH 'OR'*/
    PA0EM001.XXXMODID = "S21";
    PA0EWCBE = "Y";
    return;
  end

  if (PA0EW00.PA0EW-PR-COMBINE-FLAG == "Y")

    if (PA0EW01.YETCD[PA0EWX2] != "PR")
      converseLib.validationFailed(299); /* 'PR' CAN ONLY COMBINE WITH 'PR'*/
      PA0EM001.XXXMODID = "S21";
      PA0EWCBE = "Y";
    end

    return;

  end

  if (PA0EW01.YETCD[PA0EWX2] == "PR")
    converseLib.validationFailed(299); /* 'PR' CAN ONLY COMBINE WITH 'PR'*/
    PA0EM001.XXXMODID = "S21";
    PA0EWCBE = "Y";
  end

end // end PA0ES21

// CLEAR DISPLAY DATA MAP 1
Function PA0ES30()
   /* GET PA0E615*/
   /* -------------------------------------------------*/
    /* INITIALIZE SELECTION AREA OF MAP 1*/
   /* -------------------------------------------------*/

  PA0EM001.PA0EMRQN[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EMSEL[sysVar.arrayIndex] = " ";
  set PA0EM001.PA0EMSEL[sysVar.arrayIndex] skip, invisible;
  set PA0EM001.PA0EMQTY[sysVar.arrayIndex] skip, invisible;
  PA0EM001.PA0EMHTY[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EMHST[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EMBUY[sysVar.arrayIndex] = 0;
  PA0EM001.PA0EMSTY[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EMCLR[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EMDIM[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EMQTY[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EMLSC[sysVar.arrayIndex] = 0;
  PA0EM001.PA0EMRQB[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EMRQD[sysVar.arrayIndex] = 0;
  PA0EM001.PA1OATXT[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EMHFL[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EMRFL[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EMSYD[sysVar.arrayIndex] = " ";
  PA0EM001.PA1OATXT[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EMXRF[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EM-FY-FCTY-CD1[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EM-FY-FCTY-CD2[sysVar.arrayIndex] = " ";
  PA0EM001.PA0EM-FY-FCTY-CD3[sysVar.arrayIndex] = " ";
   /* MOVE ' ' TO PA0EM001.PA0EM-FY-FCTY-CD4(EZETST);/*TCS CHANGE*/
  set PA0EMDF1[sysVar.arrayIndex] skip, invisible;
  set PA0EMDF2[sysVar.arrayIndex] skip, invisible;
  set PA0EMDF3[sysVar.arrayIndex] skip, invisible;

  return;
end // end PA0ES30

// LOAD PARM INFO TO WS
Function PA0ES40()
   /* -------------------------------------------------------*/
    /* BUILD RECORD FOR CALL TO DPRODA.VPAHDR01*/

    /* OPEN CURSOR FOR HEADER*/

    /* PROCESS FETCHES UNTIL SQLCODE NOT EQUAL 0*/

    /* SET UP MAP FOR FIRST SET OF DATA*/

    /* IF AT LEAST ONE RECORD SELECTED*/
       /* SET UP REQUEST TO PROCESS DATA SWITCH.*/
   /* -------------------------------------------------------*/

  PA0ES03(); /* CLEAR TEMP STORAGE*/

  sysVar.arrayIndex = 0;

  while (sysVar.arrayIndex < 5)
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
    PA0ES30();
  end

  set PA0EW01 empty; /* INITIALIZE TEMP STORAGE WORK RECORD*/
  set PA0EW04 empty; /* PRINT WORK RECORDS*/
  set PA0EW05 empty; /* SECOND PRINT WORK RECORD*/
  set TA5REC empty; /* INITIALIZE TEMP STORAGE RECORD*/
  set PA1REC empty; /* INITIALIZE HEADER RECORD*/

   /* GREDDY - 07/31/01 changes for OA num reset*/
   /* MOVE PA0EM001.PA0EMRQH TO PAYREC.PAYREQHI;*/
   /* MOVE PA0EM001.PA0EMRQH TO PA0EW04.PA0EWDRH;*/
   /* MOVE PA0EM001.PA0EMRQL TO PAYREC.PAYREQLO;*/
   /* MOVE PA0EM001.PA0EMRQL TO PA0EW04.PA0EWDRL;*/

  PA0ES41();

   /* GREDDY - 07/31/01 changes for OA num reset - End*/
  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* MOVE PA0EM001.PA0EMBMF TO PAYREC.PAYBUYLO;*/
  /* PAYREC.PAYBUYLO = PAYREC.PAYBUYLO + 190000;*/
  /* MOVE PAYREC.PAYBUYLO TO PA0EW04.PA0EWDBL;*/
  /* MOVE PA0EM001.PA0EMBMT TO PAYREC.PAYBUYHI;*/
  /* PAYREC.PAYBUYHI = PAYREC.PAYBUYHI + 190000;*/
  /* MOVE PAYREC.PAYBUYHI TO PA0EW04.PA0EWDBH;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  PA0EW02.PA0EW-WRK-YYMM = PA0EM001.PA0EMBMF;
  if (PA0EW02.PA0EW-WRK-YY > 60)
    PA0EW02.PA0EW-WRK-CC = 19;
  else
    PA0EW02.PA0EW-WRK-CC = 20;
  end
  PAYREC.PAYBUYLO = PA0EW02.PA0EW-WRK-CCYYMM;
  PA0EW04.PA0EWDBL = PAYREC.PAYBUYLO;
  PA0EW02.PA0EW-WRK-YYMM = PA0EM001.PA0EMBMT;
  if (PA0EW02.PA0EW-WRK-YY > 60)
    PA0EW02.PA0EW-WRK-CC = 19;
  else
    PA0EW02.PA0EW-WRK-CC = 20;
  end
  PAYREC.PAYBUYHI = PA0EW02.PA0EW-WRK-CCYYMM;
  PA0EW04.PA0EWDBH = PAYREC.PAYBUYHI;
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

  if (PA0EM001.PA0EMYS1 > 0)
    PAYREC.PAYESDT1 = PA0EW02.PA0EWYS1;
    PA0EW04.PA0EWYDL = PA0EW02.PA0EWYS1;
  else
    PAYREC.PAYESDT1 = 0;
    PA0EW04.PA0EWYDL = 0;
  end

  if (PA0EM001.PA0EMYS2 > 0)
    PAYREC.PAYESDT2 = PA0EW02.PA0EWYS2;
    PA0EW04.PA0EWYDH = PA0EW02.PA0EWYS2;
  else
    PAYREC.PAYESDT2 = 999999999;
    PA0EW04.PA0EWYDH = 999999999;
  end

  if (PA0EM001.YSMXDV > "  ")
    PAYREC.YSMXDV = PA0EM001.YSMXDV;
    PA0EW04.YSMXDV = PA0EM001.YSMXDV;
  else
    PAYREC.YSMXDV = "*";
    PA0EW04.YSMXDV = "*";
  end

   /* pa#196: if header status group is 'hd' held*/
   /* get all status types and then check the*/
   /* pa-hld-fl.  if the hold flag = 'y', display*/
   /* record.*/
  if (PA0EM001.PA0EMHSG == "HD")
    PAYREC.PAYSTGRP = "*";
    PA0EW04.PAYSTGRP = PA0EM001.PA0EMHSG;
  else
    if (PA0EM001.PA0EMHSG > " ")
      PAYREC.PAYSTGRP = PA0EM001.PA0EMHSG;
      PA0EW04.PAYSTGRP = PA0EM001.PA0EMHSG;
    else
      PAYREC.PAYSTGRP = "*";
      PA0EW04.PAYSTGRP = "*";
    end
  end

  if (PA0EM001.YETCD > " ")
    PA1REC.YETCD = PA0EM001.YETCD;
    PA0EW05.YETCD = PA0EM001.YETCD;
  else
    PA1REC.YETCD = "*";
    PA0EW05.YETCD = "*";
  end

  if (PA0EM001.SY1STNBR > " ")
    PA1REC.SY1STNBR = PA0EM001.SY1STNBR;
    PA0EW05.SY1STNBR = PA0EM001.SY1STNBR;
  else
    PA1REC.SY1STNBR = "*";
    PA0EW05.SY1STNBR = "*";
  end

  if (PA0EM001.SY2CLRID > " ")
    PA1REC.SY2CLRID = PA0EM001.SY2CLRID;
    PA0EW05.SY2CLRID = PA0EM001.SY2CLRID;
  else
    PA1REC.SY2CLRID = "*";
    PA0EW05.SY2CLRID = "*";
  end

  if (PA0EM001.XDMCD > " ")
    PA1REC.XDMCD = PA0EM001.XDMCD;
    PA0EW05.XDMCD = PA0EM001.XDMCD;
  else
    PA1REC.XDMCD = "*";
    PA0EW05.XDMCD = "*";
  end

  if (PA0EM001.YESCD > " ")
    PA1REC.YESCD = PA0EM001.YESCD;
    PA0EW05.YESCD = PA0EM001.YESCD;
  else
    PA1REC.YESCD = "*";
    PA0EW05.YESCD = "*";
  end

  if (PA0EM001.PA0EMUSR > " ")
    PA1REC.PG1SC4CD = PG1REC.PG1SC4CD;
    PA0EW05.PG1SC4CD = PG1REC.PG1SC4CD;
  else
    PA1REC.PG1SC4CD = "*";
    PA0EW05.PG1SC4CD = "*";
  end

  if (PA0EM001.PC2CUXID > " ")
    PA1REC.KUCCOID = PC2REC.KUCCOID;
    PA0EW05.PA0EWCST = PC2REC.KUCCOID;
    PA1REC.KUMSTRID = PC2REC.KUMSTRID;
    PA0EW05.PA0EWSTR = PC2REC.KUMSTRID;
    PA1REC.XNXCD = PC2REC.XNXCD;
    PA0EW05.PA0EWXNX = PC2REC.XNXCD;
  else
    if (PA0EM001.KUCCOID > 0)
      PA1REC.KUCCOID = PC2REC.KUCCOID;
      PA0EW05.PA0EWCST = PC2REC.KUCCOID;
      PA1REC.KUMSTRID = PC2REC.KUMSTRID;
      PA0EW05.PA0EWSTR = PC2REC.KUMSTRID;
      PA1REC.XNXCD = PC2REC.XNXCD;
      PA0EW05.PA0EWXNX = PC2REC.XNXCD;
    else
      PA1REC.KUCCOID = -1;
      PA0EW05.PA0EWCST = -1;
      PA1REC.KUMSTRID = -1;
      PA0EW05.PA0EWSTR = -1;
      PA1REC.XNXCD = -1;
      PA0EW05.PA0EWXNX = -1;
    end
  end

   /* ACCOUNT REP USER ID*/

  if (PA0EM001.PA0EMUID > " ")
    PA1REC.XXXPGUID = PA0EM001.PA0EMUID;
    PA0EW05.XXXPGUID = PA0EM001.PA0EMUID;
  else
    PA1REC.XXXPGUID = "*";
    PA0EW05.XXXPGUID = "*";
  end

   /* factory code*/

  if (PA0EM001.FY1FCTYC > " ")
    PA0EW05.FY1FCTYC = PA0EM001.FY1FCTYC;
  else
    PA0EW05.FY1FCTYC = "*";
  end

   /* EXCLUDE TYPE*/

  if (PA0EM001.PA0EW-XYET > " ")
    PA0EW05.PA0EW-EXCLUDE-TYPE = PA0EM001.PA0EW-XYET;
  else
    PA0EW05.PA0EW-EXCLUDE-TYPE = "*";
  end

   /* EXCLUDE STATUS*/

  if (PA0EM001.PA0EW-XYES > " ")
    PA0EW05.PA0EW-EXCLUDE-STAT = PA0EM001.PA0EW-XYES;
  else
    PA0EW05.PA0EW-EXCLUDE-STAT = "*";
  end

  set SQLCA empty;


   /* FACTORY SELECTION FIELD*/

   /* if the factory selection code is entered, pa1000 must be*/
   /* called with 's2' as the selection function instead of 's1'*/
   /* 's3' and 's4' functions support selection of 'ni' types when*/
   /* sum div cd is = '10', since 'ni's are really division '20'*/
   /* orders but domestic wants to see them when they select all*/
   /* types.*/
   /*  */
   /* NOTICE: 07/26/93 - ADD SORT ORDER BY STYLE/COLOR/DIMENSION*/

  if (PA0EM001.FY1FCTYC == "    ")
    if (PA0EM001.PA0EM-SORT-ORDER == "2") /* SORT BY STYLE/COLOR/DIM*/
      if (PA0EM001.YETCD > " ")
        PAYREC.PAYFUNCT = "S5";
      else
        PAYREC.PAYFUNCT = "S7";
      end
    else /* * SORT BY ORDER ADJUSTMENT NUMBER*/
      if (PA0EM001.YETCD > " ")
        PAYREC.PAYFUNCT = "S1";
      else
        PAYREC.PAYFUNCT = "S3";
      end
    end
  else
    PAYREC.FY1FCTYC = PA0EM001.FY1FCTYC;
    PA0EW04.FY1FCTYC = PA0EM001.FY1FCTYC;
    if (PA0EM001.PA0EM-SORT-ORDER == "2") /* SORT BY STYLE/COLOR/DIM*/
      if (PA0EM001.YETCD > " ")
        PAYREC.PAYFUNCT = "S6";
      else
        PAYREC.PAYFUNCT = "S8";
      end
    else /* SORT BY ORDER ADJUSTMENT NUMBER*/
      if (PA0EM001.YETCD > " ")
        PAYREC.PAYFUNCT = "S2";
      else
        PAYREC.PAYFUNCT = "S4";
      end
    end
  end

  PA0ES15(); /* SELECT SET FROM DPRODA.VPAHDR01*/

  PA0EW02.PA0EWMTP = 0;
  PA0EW02.PA0EWX1 = 1;
  sysVar.arrayIndex = 0;

  while (SQLCA.VAGen_SQLCODE == 0)

    PA0ES16(); /* fetch record from dproda.vpahdr01*/

     /* if an account rep user id has been entered, keep*/
     /* reading the oa header until the account rep user id*/
     /* equals the oa header user id.*/
    if (PA0EM001.PA0EMUID != "        ")
      while (PA1REC.XXXPGUID != PA0EM001.PA0EMUID
       && VAGen_SQLCODE == 0)
        PA0ES16(); /* FETCH RECORD FROM DPRODA.VpAHDR01*/
      end
    end


     /* if an oa type to be excluded has been entered, keep*/
     /* reading the oa header*/
    if (PA0EM001.PA0EW-XYET != "  ")
      while (PA1REC.YETCD == PA0EM001.PA0EW-XYET
       && VAGen_SQLCODE == 0)
        PA0ES16(); /* FETCH RECORD FROM DPRODA.VpAHDR01*/
      end
    end


     /* if an oa status to be excluded has been entered, keep*/
     /* reading the oa header*/
    if (PA0EM001.PA0EW-XYES != "  ")
      while (PA1REC.YESCD == PA0EM001.PA0EW-XYES
       && VAGen_SQLCODE == 0)
        PA0ES16(); /* FETCH RECORD FROM DPRODA.VpAHDR01*/
      end
    end


     /* if the header status group code is 'hd', keep*/
     /* reading the oa header until the pa-hld-fl = 'y'*/
    if (PA0EM001.PA0EMHSG == "HD")
      while (PA1REC.PA1HLDFL != "Y"
       && VAGen_SQLCODE == 0)
        PA0ES16(); /* FETCH RECORD FROM DPRODA.VpAHDR01*/
      end
    end

    if (VAGen_SQLCODE == 100)
      PA0ES04(); /* WRITE TEMP STORAGE*/
    else
      if (PA0EM001.PA0EMHSG == "  "
       && PA0EM001.YESCD == "  ")
        if (PA1REC.YESCD != "75" /* \*/
         && PA1REC.YESCD != "97" /* |-------> INVALID FOR WILDCARD STATUS*/
         && PA1REC.YESCD != "98") /* /*/
          PA0ES04(); /* WRITE TEMP STORAGE*/
        end
      else
        PA0ES04(); /* WRITE TEMP STORAGE*/
      end
    end
  end

  PA0ES17(); /* CLOSE DPRODA.VPAHDR01*/

  if (PA0EW02.PA0EWMTP == 0)
    set PA0EM001.PA0EMRQL cursor;
    converseLib.validationFailed(15); /* NO DATA WAS SELECTED TO PROCESS*/
    return;
  end

  PA0EW02.PA0EWX1 = 1; /* SETUP PAGE NUMBER FOR SCREEN 1*/
  PA0ES20(); /* GET FIRST TEMP STORAGE PAGE*/
  PA0E610(); /* FILL DATA FROM NEXT PAGE*/
  PA0E551(); /* SETUP DISPLAY STORAGE*/

  PA0EW02.PA0EWRPD = "Y"; /* PROCESS REQUESTED DATA SWITCH*/
end // end PA0ES40

// Set Low and Hi OA numbers
Function PA0ES41()
  if (PA0EM001.PA0EMRQL > 0
   || PA0EM001.PA0EMRQH > 0) /* If either nbr entered*/

    if (PA0EM001.PA0EMRQH > PA0EM001.PA0EMRQL
     && PA0EM001.PA0EMRQH > 139999
     && PA0EM001.PA0EMRQL < 140000)
      if (PA0EM001.PA0EMRQL > 0)
        PAYREC.PAYREQLO = PA0EM001.PA0EMRQL;
        PAYREC.PAYREQLO1 = PA0EM001.PA0EMRQL;
        PAYREC.PAYREQHI = PA0EM001.PA0EMRQH;
        PAYREC.PAYREQHI1 = PA0EM001.PA0EMRQH;
      else
        PAYREC.PAYREQHI = PA0EM001.PA0EMRQH;
        PAYREC.PAYREQHI1 = PA0EM001.PA0EMRQH;
        PAYREC.PAYREQLO = 139999;
        PAYREC.PAYREQLO1 = 139999;
      end
    end

    if (PA0EM001.PA0EMRQH > PA0EM001.PA0EMRQL)
      if (PA0EM001.PA0EMRQL > 139999
       || PA0EM001.PA0EMRQH < 140000)
        PAYREC.PAYREQLO = PA0EM001.PA0EMRQL;
        PAYREC.PAYREQLO1 = PA0EM001.PA0EMRQL;
        PAYREC.PAYREQHI = PA0EM001.PA0EMRQH;
        PAYREC.PAYREQHI1 = PA0EM001.PA0EMRQH;
      end
    end

    if (PA0EM001.PA0EMRQL > PA0EM001.PA0EMRQH
     && PA0EM001.PA0EMRQL > 139999
     && PA0EM001.PA0EMRQH < 140000)
      PAYREC.PAYREQLO = PA0EM001.PA0EMRQL;
      PAYREC.PAYREQLO1 = 1;
      PAYREC.PAYREQHI = 199999;
      PAYREC.PAYREQHI1 = PA0EM001.PA0EMRQH;
    end

  end

  PA0EW04.PA0EWDRH = PAYREC.PAYREQHI;
  PA0EW04.PA0EWDRH1 = PAYREC.PAYREQHI1;
  PA0EW04.PA0EWDRL = PAYREC.PAYREQLO;
  PA0EW04.PA0EWDRL1 = PAYREC.PAYREQLO1;

end // end PA0ES41

// converse pop up window
Function XPPAE01()
   /* ------------------------------------------------------------*/

              /* CONVERSE POP UP WINDOW*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "              SELECT & ENTER          ";
    XX0XM001.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && PAETBL.PA0EWHSG[XX0XWCT1] != "99") /* Or end of data*/
        XX0XM001.XX0XMCD[XX0XWCT2] = PAETBL.PA0EWHSG[XX0XWCT1];
        XX0XM001.XX0XMDES[XX0XWCT2] = PAETBL.PA0EWHGA[XX0XWCT1];
        XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1; /* Save array*/
        if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
          XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
        end
        set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
        XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1; /* Increment screen index*/
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        XX0XM001.XX0XMCD[XX0XWCT2] = PAETBL.PA0EWHSG[XX0XWCT1];
        XX0XM001.XX0XMDES[XX0XWCT2] = PAETBL.PA0EWHGA[XX0XWCT1];
        XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1; /* Save array*/
        set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
        XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1; /* Decrement screen index*/
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end


  converse XX0XM001 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && PAETBL.PA0EWHSG[XX0XWCT1] == "99") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end


end // end XPPAE01

//*** RECORD=PA0EW00 ****
// GENERAL WORK RECORD
// ***********************
Record PA0EW00 type basicRecord
  10 PA0EW-OR-COMBINE-FLAG char(1) ; 
  10 PA0EW-PR-COMBINE-FLAG char(1) ; 
end // end PA0EW00

Record PA0EW01 type basicRecord
  5 PA0EWTSL PA0EWTSL ; 
  5 * char(440) ; 
    10 PA0EWNOT PA0EWNOT [5] ; 
      15 PA0EMSEL PA0EMSEL ; 
      15 PA1OANBR PA1OANBR ; 
      15 YETCD YETCD ; 
      15 YESCD YESCD ; 
      15 PA1BUYMO PA1BUYMO ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
      15 XDMCD XDMCD ; 
      15 PA1RQQTY PA1RQQTY ; 
      15 PA1YESDT PA1YESDT ; 
      15 XXXPGUID XXXPGUID ; 
      15 ZZZSDT ZZZSDT ; 
      15 KUCCOID KUCCOID ; 
      15 KUMSTRID KUMSTRID ; 
      15 XNXCD XNXCD ; 
      15 PA1HLDFL PA1HLDFL ; 
      15 PA1CMIND PA1CMIND ; 
      15 PA1OATXT PA1OATXT ; 
      15 PA-AFRGT-RQT-ID PA-AFRGT-RQT-ID ; 
end // end PA0EW01

//*** RECORD=PA0EW02 ****
// Y2KFIX   12/10/97  DKENNY  Y2K MODIFICATIONS MADE:
//                          Added elements PA0EW-WRK-CCYYMM,
//                          PA0EW-FROM-CCYYMM, PA0EW-TO-CCYYMM,
//                          PA0EWRTLOW-CCYY, PA0EWRTHIGH-CCYY,
//                          PA0EWBM-TO-CCYY and
//                          PA0EWBM-FROM-CCYY for date editing.
// ***********************
Record PA0EW02 type basicRecord
  10 PA0EWRPD PA0EWRPD ; 
  10 PA0EWSPN PA0EWSPN ; 
  10 PA0EWRCK PA0EWRCK ; 
    15 PA0EWRCY PA0EWRCY ; 
    15 PA0EWRCM PA0EWRCM ; 
  10 PA0EWRTL PA0EWRTL ; 
  10 PA0EWRTH PA0EWRTH ; 
  10 PA0EWCBE PA0EWCBE ; 
  10 PA0EWCBS PA0EWCBS ; 
  10 PA0EWPUR PA0EWPUR ; 
  10 PA0EWDHC PA0EWDHC ; 
  10 PA0EWX1 PA0EWX1 ; 
  10 PA0EWX2 PA0EWX2 ; 
  10 PA0EWTSP PA0EWTSP ; 
  10 PA0EWMTP PA0EWMTP ; 
  10 PAWBUYYM PAWBUYYM ; 
    15 PA0EWBYY PA0EWBYY ; 
    15 PA0EWBYM PA0EWBYM ; 
  10 PA0EMCUS PA0EMCUS ; 
    15 PA0EWCUS PA0EWCUS ; 
    15 PA0EWPR1 PA0EWPR1 ; 
    15 PA0EWSTR PA0EWSTR ; 
    15 PA0EWPR2 PA0EWPR2 ; 
    15 PA0EWDEP PA0EWDEP ; 
  10 PA0EWYSD PA0EWYSD ; 
    15 PA0EWSDC PA0EWSDC ; 
    15 PA0EWSDY PA0EWSDY ; 
    15 PA0EWSDM PA0EWSDM ; 
    15 PA0EWSDD PA0EWSDD ; 
  10 PA0EWYS1 PA0EWYS1 ; 
  10 PA0EWYS2 PA0EWYS2 ; 
  10 PA0EWBDO PA0EWBDO ; 
    15 PA0EWBDM PA0EWBDM ; 
    15 PA0EWBDD PA0EWBDD ; 
    15 PA0EWBDY PA0EWBDY ; 
  10 PA0EWPRR PA0EWPRR ; 
  10 PA0EWCMT PA0EWCMT ; 
  10 PA0EWOAJ PA0EWOAJ ; 
  10 PA0EWTZS PA0EWTZS ; 
  10 PA0EWCLR PA0EWCLR ; 
  10 PA0EWDIM PA0EWDIM ; 
  10 PA0EWCMP PA0EWCMP ; 
  10 PA0EWTZD PA0EWTZD ; 
  10 PA0EWTSZ PA0EWTSZ ; 
  10 XX1 XX1 ; 
  10 XX2 XX2 ; 
  10 PA0EW-WRK-CCYYMM PA0EW-WRK-CCYYMM ; 
    15 PA0EW-WRK-CC PA0EW-WRK-CC ; 
    15 PA0EW-WRK-YYMM PA0EW-WRK-YYMM ; 
      20 PA0EW-WRK-YY PA0EW-WRK-YY ; 
      20 PA0EW-WRK-MM PA0EW-WRK-MM ; 
  10 PA0EW-FROM-CCYYMM PA0EW-FROM-CCYYMM ; 
  10 PA0EW-TO-CCYYMM PA0EW-TO-CCYYMM ; 
  10 PA0EWRTLOW-CCYY PA0EWRTLOW-CCYY ; 
    15 PA0EWRTLOW-CC PA0EWRTLOW-CC ; 
    15 PA0EWRTLOW-YY PA0EWRTLOW-YY ; 
  10 PA0EWRTHIGH-CCYY PA0EWRTHIGH-CCYY ; 
    15 PA0EWRTHIGH-CC PA0EWRTHIGH-CC ; 
    15 PA0EWRTHIGH-YY PA0EWRTHIGH-YY ; 
  10 PA0EWBM-TO-CCYY PA0EWBM-TO-CCYY ; 
    15 PA0EWBM-TO-CC PA0EWBM-TO-CC ; 
    15 PA0EWBM-TO-YY PA0EWBM-TO-YY ; 
  10 PA0EWBM-FROM-CCYY PA0EWBM-FROM-CCYY ; 
    15 PA0EWBM-FROM-CC PA0EWBM-FROM-CC ; 
    15 PA0EWBM-FROM-YY PA0EWBM-FROM-YY ; 
end // end PA0EW02

Record PA0EW03 type basicRecord
  5 PA0EW03T PA0EW03T ; 
    10 PA0EMRQL PA0EMRQL ; 
    10 PA0EMRQH PA0EMRQH ; 
    10 PA0EMBMF PA0EMBMF ; 
    10 PA0EMBMT PA0EMBMT ; 
    10 YETCD YETCD ; 
    10 PA0EW-XYET PA0EW-XYET ; 
    10 PA0EMHSG PA0EMHSG ; 
    10 PA0EMHGA PA0EMHGA ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 YESCD YESCD ; 
    10 YESSDESC YESSDESC ; 
    10 PA0EW-XYES PA0EW-XYES ; 
    10 PA0EW-XYDS PA0EW-XYDS ; 
    10 PA0EMUSR PA0EMUSR ; 
    10 PC2CUXID PC2CUXID ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 PA0EMUID PA0EMUID ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 YSMXDV YSMXDV ; 
    10 PA0EMYS1 PA0EMYS1 ; 
    10 PA0EMYS2 PA0EMYS2 ; 
    10 PA0EW-SORT-ORDER PA0EW-SORT-ORDER ; 
end // end PA0EW03

//*** RECORD=PA0EW04 ****
// THIS RECORD IS USED TO PASS DATA TO PRINT PROGRAM PA210D
// ***********************
Record PA0EW04 type basicRecord
  5 PA0EWOAJ PA0EWOAJ ; 
    10 PAYSTGRP PAYSTGRP ; 
    10 PA0EWDRL PA0EWDRL ; 
    10 PA0EWDRH PA0EWDRH ; 
    10 PA0EWDRL1 PA0EWDRL1 ; 
    10 PA0EWDRH1 PA0EWDRH1 ; 
    10 PA0EWDBL PA0EWDBL ; 
    10 PA0EWDBH PA0EWDBH ; 
    10 YSMXDV YSMXDV ; 
    10 PA0EWYDL PA0EWYDL ; 
    10 PA0EWYDH PA0EWYDH ; 
    10 FY1FCTYC FY1FCTYC ; 
end // end PA0EW04

//*** RECORD=PA0EW05 ****
// THIS RECORD IS USED TO PASS DATA TO PRINT PROGRAM PA210D
// ***********************
Record PA0EW05 type basicRecord
  5 PA0EWOAJ PA0EWOAJ ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 YESCD YESCD ; 
    10 YETCD YETCD ; 
    10 PA0EWCST PA0EWCST ; 
    10 PA0EWSTR PA0EWSTR ; 
    10 PA0EWXNX PA0EWXNX ; 
    10 PG1SC4CD PG1SC4CD ; 
    10 XXXPGUID XXXPGUID ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 PA0EW-EXCLUDE-TYPE PA0EW-EXCLUDE-TYPE ; 
    10 PA0EW-EXCLUDE-STAT PA0EW-EXCLUDE-STAT ; 
    10 * char(30) ; 
end // end PA0EW05

// FROM BUY MONTH
DataItem PA0EMBMF num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// TO BUY MONTH
DataItem PA0EMBMT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// CUSTOMER FORFMATTED
DataItem PA0EMCUS char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0EMHGA char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0EMHSG char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// HIGH END REQ NO
DataItem PA0EMRQH num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// LOW RANGE REQ NO
DataItem PA0EMRQL num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// SELECTION FIELD VALUE ' ','S'
DataItem PA0EMSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xxx_pgm_user_id
DataItem PA0EMUID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0EMUSR char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DATE LAST STAT CHANGED FROM
DataItem PA0EMYS1 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// DATE LAST STAT CHANGED TO
DataItem PA0EMYS2 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0EW-EXCLUDE-STAT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0EW-EXCLUDE-TYPE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// buy month from - ccyymm
DataItem PA0EW-FROM-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0EW-SORT-ORDER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// buy month to - ccyymm
DataItem PA0EW-TO-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work cc
DataItem PA0EW-WRK-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work area ccyymm
DataItem PA0EW-WRK-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work mm
DataItem PA0EW-WRK-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work yy
DataItem PA0EW-WRK-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work yymm
DataItem PA0EW-WRK-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// EXCL YES STAT DESC
DataItem PA0EW-XYDS char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// EXCLUDE YES STAT CODE
DataItem PA0EW-XYES char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// EXCLUDE YET TYPE CODE
DataItem PA0EW-XYET char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RECORD LENGTH
DataItem PA0EW03T char(131)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RESTRUCTURE STAT DAY
DataItem PA0EWBDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// RESTRUCTURE STAT MONTH
DataItem PA0EWBDM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// RESTRUCTURE STAT DATE
DataItem PA0EWBDO num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// RESTRUCTURE STAT YEAR
DataItem PA0EWBDY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   buy month from cc
DataItem PA0EWBM-FROM-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buy month from ccyy
DataItem PA0EWBM-FROM-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   buy month from yy
DataItem PA0EWBM-FROM-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   buy month to cc
DataItem PA0EWBM-TO-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buy month to ccyy
DataItem PA0EWBM-TO-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   buy month to yy
DataItem PA0EWBM-TO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// MONTH OF BUT DATE
DataItem PA0EWBYM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// YEAR OF BUY MONTH
DataItem PA0EWBYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ERROR SWITCH FOR COMBINE CHK
DataItem PA0EWCBE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// REQUEST FOR CURRENT BUY DATE
DataItem PA0EWCBS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// identifying color
DataItem PA0EWCLR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// company id
DataItem PA0EWCMP int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// comment, value //*
DataItem PA0EWCMT char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// company id
DataItem PA0EWCST num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// CUSTOMER NUMBER
DataItem PA0EWCUS num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DISPLAY BUYDATE HI
DataItem PA0EWDBH num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DISPLAY BUYDATE LOW
DataItem PA0EWDBL num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DEPARTMENT ID
DataItem PA0EWDEP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DATA HAS CHANGED SWITCH
DataItem PA0EWDHC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dimension code
DataItem PA0EWDIM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DISPLAY REQUEST HI
DataItem PA0EWDRH num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DISPLAY REQUEST HI
DataItem PA0EWDRH1 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DISPLAY REQUEST LOW
DataItem PA0EWDRL num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DISPLAY REQUEST LOW
DataItem PA0EWDRL1 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// MAX NUMBER OF PAGES
DataItem PA0EWMTP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ONE SCREEN WORTH
DataItem PA0EWNOT char(88)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl comment group level
DataItem PA0EWOAJ char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PERIOD
DataItem PA0EWPR1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PERIOD
DataItem PA0EWPR2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl comment group level
DataItem PA0EWPRR char(29)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// POPUP REQUEST FLAG
DataItem PA0EWPUR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SPLIT BUY MONTH INTO YY MM
DataItem PA0EWRCK num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SPLIT MONTH
DataItem PA0EWRCM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SPLIT YEAR
DataItem PA0EWRCY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PROCESS REQUESTED DATA SWITCH
DataItem PA0EWRPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// HI YEAR VALUE
DataItem PA0EWRTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   high year cc
DataItem PA0EWRTHIGH-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// high year ccyy
DataItem PA0EWRTHIGH-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   high year yy
DataItem PA0EWRTHIGH-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// LOW YEAR VALUE
DataItem PA0EWRTL num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   low year cc
DataItem PA0EWRTLOW-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// low year ccyy
DataItem PA0EWRTLOW-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   low year yy
DataItem PA0EWRTLOW-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// STATUS CHANGE CENTURY
DataItem PA0EWSDC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// STATUS CHANGE DAY
DataItem PA0EWSDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// STATUS CHANGE MONTH
DataItem PA0EWSDM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// STATUS CHANGE YEAR
DataItem PA0EWSDY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// HOLD PAGE NMBER FOR PT0R CALL
DataItem PA0EWSPN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// STORE NUMBER
DataItem PA0EWSTR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// TEMPORARY STORAGE PAGE LENGTH
DataItem PA0EWTSL num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CURRENT PAGE INDEX
DataItem PA0EWTSP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ERROR SWITCH
DataItem PA0EWTSZ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PA_ORD_ADJ_BUY_MO
DataItem PA0EWTZD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// style number
DataItem PA0EWTZS char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// INDEX FOR PROCESSING  SCREEN
DataItem PA0EWX1 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ANOTHER SPARE INDEX
DataItem PA0EWX2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nike dept code
DataItem PA0EWXNX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// DISPLAY YES DATE HI
DataItem PA0EWYDH num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DISPLAY YES DATE LOW
DataItem PA0EWYDL num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// HOLD DATE FIELD
DataItem PA0EWYS1 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// HOLD DATE FIELD
DataItem PA0EWYS2 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// STATUS CHANGE COMPUTED
DataItem PA0EWYSD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

