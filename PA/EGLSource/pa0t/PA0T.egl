package pa0t;
import corpcom2.XX0XW01;
import corpcom2.YSMREC;
import corpcom3.XPPA001;
import corpcom3.XPPA210;
import corpcom4.XSEXIT;
import corpcom4.XSPAS01;
import corpcom4.XSPG202;
import corpcom4.XSPG301;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XX1;
import corpcom7.XX2;
import corpcom7.XX3;
import corpcom7.XX4;
import corpcom7.XX5;
import corpx1.XDMCD;
import corpx1.XWHTBL;
import corpx2.XWHCD;
import corpy2.YESTBL;
import corpy2.YETTBL;
import fb.common.FB4REC;
import pa.common.*;
import pa.common.PA1BUYMO;
import pa.common.PA1OANBR;
import pa.common.PA1REC;
import pa.common.PA5REC;
import pa.common.PAJREC;
import pa.common.PAWREC;
import pg.common.PG2REC;
import pg.common.PG3REC;
import pt.common.PT3YYMM;
import pt.common.PT5REC;
import sy.common.SY1STNBR;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TAEREC;

//*** PROGRAM=PA0T ****
// This application is part of the order adjustment sys. It is
// a maintenance screen that shows bottom line availability by
// size/warehouse and for all warehouses combined.  It also
// displays bottom line percent which is the b/l available
// quantity by size divided by total b/l available quantity for
// a warehouse.  The standard region percent is also listed.
// Adjustments to the b/l available quantities may be made
// through this screen.
// 
// To view all sizes, pf10 and pf11 are provided to shift left
// and right.  The number of sizes to be scrolled may be
// entered.  The default is 10.
// 
// The User may exit to any allowed application via fastpath or
// pf keys.
// 
// CONTROL      DATE      NAME    DESCRIPTION OF CHANGE
// -------    --------   ------   ---------------------
// 0000000    03/21/90   scochr   Created.
// 
// pa00028    09/27/90   dhales   changed map for adjustment
//                                line to be blank on zero
// pa00217    03/18/91   MSMIT2   if oa status = '15' allow
//                                read only inquiry.
// pa00225    04/16/91   MSMIT2   PA0T300 changed to check
//                                COMMAREA.CAUSERA for error
//                                message 149.  If it is, set
//                                it to 0 before returning to
//                                PA0P.
// PA307      12/02/92   MSMIT2   DETERMINE CURR B/L WITH
//                                ADJUSTMENTS FROM OPEN O/AS
// PA308                          RESET PA-APPL-BUY-BL-FL ON
//                                DPRODA.VPAHDR01 WHEN BOTTOM
//                                LINE UPDATED.
// PA326      05/06/93   MSMIT2   BRING IN O/AS THAT HAVE
//                                UPDATED PO ON TODAYS DATE.
// PA         06/04/93   MSMIT2   STANDARDIZE PF KEYS.
// PA300      07/12/93   MSMIT2   XSPAS01 CHANGED.
//            07/13/93   MSMIT2   SIZE FIELDS NOT LARGE ENOUGH.
// PA00000    08/09/93   MSMIT2   DATABASE CHANGES.
// PA9999     01/23/95   MSMIT2   ALLOW INQUIRY ONLY FOR EUROPE
//                                O/AS.
// PA9999     09/18/96   RKUDPI   changes to accomodate whse 70
//                                for hockey ftwr and apparel
// ------- -------- ------ --------------------------------
// Y2KFIX  01/08/98 CSAWKI MODIFICATIONS MADE TO: PA0TM001,
//                         PA0TS02, PA0TS03, PA0TS04, PA0TS08,
//                         PA0TS09, PA0TW01, PA0T100, PA0T500,
//                         XSPAS06, XSPAS07 and XSPAS08.
// 
// Y2KFIX  02/11/98 CSAWKI MODIFICATIONS MADE: MAKE  PT5REC
//                         MIRROR DFBASM04
//         09/15/99 SKATHI Regenerated to verify B/L month updt
// *********************
Program PA0T type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FB4REC FB4REC; // record
  PA0TW00 PA0TW00; // record
  PA0TW01 PA0TW01; // record
  PA0TW02 PA0TW02; // record
  PA1REC PA1REC; // record
  PA5REC PA5REC; // record
  PACREC PACREC; // record
  PAJREC PAJREC; // record
  PAKREC PAKREC; // record
  PAWREC PAWREC; // record
  PG2REC PG2REC; // record
  PG3REC PG3REC; // record
  PT5REC PT5REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record
  XX0XW01 XX0XW01; // record
  YSMREC YSMREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XWHTBL {deleteAfterUse = yes}; // table
  use YESTBL; // table
  use YETTBL; // table
  use PA0TM.PA0TM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPA001: XPPA001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    set SQLCA empty;
    set PA0TM001 initial;
    set PA0TW00 empty;
    set PA0TW01 empty;
    set TA1REC empty;
    set TAEREC empty;
    set PA1REC empty;
    set PA5REC empty;

    if (PAWREC.XXXMSGNO == 149 /* CALC ALREADY RUN*/
     || PAWREC.XXXMSGNO == 72) /* STATUS ALLOWS READ ONLY*/
      PA0TW01.PA0TWROS = "Y";
      PAWREC.XXXMSGNO = 0;
    else
      if (PAWREC.XXXMSGNO > 0)
        if (PAWREC.XXXMSGNO == 9999)
          converseLib.validationFailed();
        else
          converseLib.validationFailed(PAWREC.XXXMSGNO);
        end
        PAWREC.XXXMSGNO = 0;
      end
    end


    PA0TM001.PA1OANBR = PAWREC.PAWOANBR;

     /* SET THE MAXIMUM NUMBER OF COLUMNS FOR THE SCREEN*/

    PA0TW00.PA0TW-MAX-COLUMNS = 8;

    goto PA0T001; /* Converse Footwear Menu*/


    PA0T001: PA0T001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the bottom line availibility main process.*/
     /* ------------------------------------------------------------*/

    goto PA0T001; /* PA0T MAIN PROCESS*/


  end // end main
end // end PA0T

// NEW B/L WITH OPEN O/AS
Function PA0T-61001()
   /* ******************************************************/
    /* DETERMINE THE NEW B/L WITH ADJUSTMENTS FROM THE*/
    /* OPEN O/AS.*/
   /* ******************************************************/

  move PA0TW01.PA0TWBL2 to PA0TW01.PA0TW-BL-WITH-OAS1[1] for all;
  move PA0TW01.PA0TWBL4 to PA0TW01.PA0TW-BL-WITH-OAS2[1] for all;
  move PA0TW01.PA0TWBL7 to PA0TW01.PA0TW-BL-WITH-OAS3[1] for all;

  set PA0TW02 empty;

  PA0TW02.PA1OANBR = PA0TM001.PA1OANBR;
  PA0TW02.SY1STNBR = PA0TM001.SY1STNBR;
  PA0TW02.SY2CLRID = PA0TM001.SY2CLRID;
  PA0TW02.XDMCD = PA0TM001.XDMCD;

   /* XX2 KEEPS TRACK OF THE O/A NUMBERS USED TO ADD ADJUSMENTS TO*/
   /* THE CURRENT BOTTOM LINE.*/

  XX2 = 1;

   /* PROCESS WAREHOUSES*/

  PA0TW01.XX4 = 1;
  while (PA0TW01.XX4 <= 3)
    if (PA0TW00.PA0TW-REGION-WHSE[XX4] != " ")
      set PA1REC empty;
      set PA5REC empty;
      PA0TW02.XWHCD = PA0TW00.PA0TW-REGION-WHSE[XX4];

        /* MOVE WAREHOUSE DESC TO MAP*/

      if (PA0TW02.XWHCD in XWHTBL.XWHCD)
        if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          PA0TM001.PA0TM-WHSE-LBL[XX4] = PA0TW02.XWHCD;
          PA0TM001.PA0TM-WHSE-DESC[XX4] = XWHTBL.XWHABRV[sysVar.arrayIndex];
        end
      end

      PA0T-61002();

    end
    PA0TW01.XX4 = PA0TW01.XX4 + 1;
  end

   /* GET THE O/A HEADER RECORD.  THIS IS SO THAT THE HEADER*/
   /* INFORMATION CAN BE USED LATER.*/

  set PA1REC empty;

  PA1REC.PA1OANBR = PA0TM001.PA1OANBR;

  PA0TS-13-IO4830-S(); /* GET O/A HEADER*/

end // end PA0T-61001

// ACCUMULATE B/L SIZES
Function PA0T-61002()
   /* ******************************************************/
    /* ACCUMULATE THE B/L QUANTITIES BY SIZE.*/
   /* ******************************************************/

  PA0TW02.PA0TW-TASK = "S1";

  PA0TS-10-PA1050-S(); /* OPEN O/A TYPE '9' WORK RECORD CURSOR*/

  PA0TW02.PA0TW-TASK = "N1";

  PA0T-61003();

  PA0TW02.PA0TW-TASK = "C1";

  PA0TS-12-PA1050-C();

   /* ******************************************************/
    /* ACCUMULATE THE B/L QUANTITIES BY SIZE FOR O/AS*/
    /* THAT HAVE UPDATED PO TODAY.*/
   /* ******************************************************/

  PA0TW02.PA0TW-TASK = "S2";
  PA0TW02.PA0TW-CURRENT-DATE = XX0XW01.XX0XWDAT; /* PASS CURR DT*/

  PA0TS-10-PA1050-S(); /* OPEN O/A TYPE '9' WORK RECORD CURSOR*/

  PA0TW02.PA0TW-TASK = "N2";

  PA0T-61003();

  PA0TW02.PA0TW-TASK = "C2";

  PA0TS-12-PA1050-C();
end // end PA0T-61002

// ACCUMULATE B/L SIZES
Function PA0T-61003()
   /* ******************************************************/
    /* ACCUMULATE THE B/L QUANTITIES BY SIZE.*/
   /* ******************************************************/

  PA0TS-11-PA1050-N(); /* FETCH FIRST RECORD*/

  while (SQLCA.VAGen_SQLCODE == 0)

     /* IF EUROPEAN O/A, ONLY GET OTHER EUROPEAN O/AS.*/

    if (PA0TM001.PA1OANBR > 199999
     && PA0TM001.PA1OANBR < 300000)
      if (PA5REC.PA1OANBR > 199999
       && PA5REC.PA1OANBR < 300000)
        PA0T-61005(); /* ADD TO B/L*/
      end
    else
      if (PA5REC.PA1OANBR > 199999
       && PA5REC.PA1OANBR < 300000)
           /* NEXT SENTENCE*/
      else
        PA0T-61005(); /* ADD TO B/L*/
      end
    end

    PA0TS-11-PA1050-N(); /* FETCH NEXT RECORD*/

  end

end // end PA0T-61003

// SETUP PG3REC FOR SIZE TRAN
Function PA0T-61004()
   /* *****************************************************/
    /* SETUP PG3REC FOR SIZE TRANSLATION*/
   /* ----------------------------------------------------*/

   /* ANY QUANTITY THAT IS GREATER THAN ZERO, THAT IS STORED*/
   /* FOR DISPLAY MUST BE TRANSLATED ALONG WITH ALL SIZES*/
   /* THAT WERE VALID FOR CURRENT PAR*/
   /* *****************************************************/

  set PG3REC empty;

  PG3REC.SY1STNBR = PA0TM001.SY1STNBR;
  PG3REC.SY2CLRID = PA0TM001.SY2CLRID;
  PG3REC.XDMCD = PA0TM001.XDMCD;
  PG3REC.XGPCD = "02";
  PG3REC.XQACD = "**";
  PG3REC.PG3FUNCD = "IE";
  PG3REC.PG3DATFM = "C";
  PG3REC.PG3XDVCD = "99";

  PA0TWX1 = 0;
  PA0TWX2 = 1;

  while (PA0TWX2 <= 40)

    if (PA0TW01.PA0TWBL2[PA0TWX2] != 0
     || PA0TW01.PA0TWBL4[PA0TWX2] != 0
     || PA0TW01.PA0TWBL7[PA0TWX2] != 0
     || PA0TW01.PA0TWAD2[PA0TWX2] != 0
     || PA0TW01.PA0TWAD4[PA0TWX2] != 0
     || PA0TW01.PA0TWAD7[PA0TWX2] != 0
     || PA0TW01.PA0TW-BL-WITH-OAS1[PA0TWX2] != 0
     || PA0TW01.PA0TW-BL-WITH-OAS2[PA0TWX2] != 0
     || PA0TW01.PA0TW-BL-WITH-OAS3[PA0TWX2] != 0
     || PAJREC.PAJ1WVSZ[PA0TWX2] == "Y")
      PA0TWX1 = PA0TWX1 + 1;
      PG3REC.SY5SZID[PA0TWX1] = PA0TWX2;
    end

    PA0TWX2 = PA0TWX2 + 1;
  end

  XSPG301(); /* CALL SIZE TRANSLATION MODULE*/

  if (sysVar.errorCode != "00000000")
    converseLib.validationFailed(10);
    return;
  end

  if (PG3REC.PG3RETCD > 5)
    converseLib.validationFailed(11);
    return;
  end

end // end PA0T-61004

// ACCUMULATE B/L SIZES
Function PA0T-61005()
   /* ******************************************************/
    /* ACCUMULATE THE B/L QUANTITIES BY SIZE.*/
   /* ******************************************************/

   /* LOAD TO THE MAP THE O/A NUMBER THAT IS BEING ADDED TO THE*/
   /* CURRENT BOTTOM LINE.*/

  PA0TW01.PA0TW-USE-THIS-OA = "Y";
  PA0TW01.XX3 = 1;

  if (PA0TW01.XX2 <= 16)
    while (PA0TW01.XX3 < PA0TW01.XX2
     && PA0TW01.PA0TW-USE-THIS-OA == "Y")
      if (PA0TM001.PA0TM-BL-OA[XX3] == PA5REC.PA1OANBR)
        PA0TW01.PA0TW-USE-THIS-OA = "N";
      end
      PA0TW01.XX3 = PA0TW01.XX3 + 1;
    end
  else
    PA0TW01.PA0TW-USE-THIS-OA = "N";
  end

  if (PA0TW01.PA0TW-USE-THIS-OA == "Y")
    PA0TM001.PA0TM-BL-OA[XX2] = PA5REC.PA1OANBR;
    PA0TW01.XX2 = PA0TW01.XX2 + 1;
  end

  PA0TW01.XX1 = 1;

  while (PA0TW01.XX1 <= 40)

    if (PA5REC.XWHCD != " ")
      if (PA5REC.XWHCD == PA0TW00.PA0TW-REGION-WHSE[1])
        PA0TW-BL-WITH-OAS1[XX1] = PA0TW-BL-WITH-OAS1[XX1]                                  + PA5REC.PA5AJQTY[XX1];
      else
        if (PA5REC.XWHCD == PA0TW00.PA0TW-REGION-WHSE[2])
          PA0TW-BL-WITH-OAS2[XX1] = PA0TW-BL-WITH-OAS2[XX1]                                     + PA5REC.PA5AJQTY[XX1];
        else
          if (PA5REC.XWHCD == PA0TW00.PA0TW-REGION-WHSE[3])
            PA0TW-BL-WITH-OAS3[XX1] = PA0TW-BL-WITH-OAS3[XX1]                                        + PA5REC.PA5AJQTY[XX1];
          end
        end
      end
    end

    PA0TW01.XX1 = PA0TW01.XX1 + 1;

  end

end // end PA0T-61005

// APPLICATION MAIN PROCESS
Function PA0T001()
   /* *************************************************************/
    /* MAIN PROCESS FOR PA0T*/
    /* THIS APPLICATION WILL CREATE OR UPDATE BOTTOM LINE*/
    /* RECORDS FOR CALCULATING ORDER ADJUSTMENTS RECORDS*/
   /* ------------------------------------------------------------*/

   /* 12/19/94: DETERMINE THE VALID WAREHOUSE CODES FOR REGION*/
   /* GET THE WAREHOUSE CODES FROM THE DCORP.VSUMCD01 TABLE.*/
   /* XXX_TBL_PFX = 'XWH', XXX_SYS_PFX = 'FB', XXX_SUM_CD = 1,*/
   /* AND XXX_SUM_CD = REGION CODE.*/
   /*  */
   /* MAKE SURE THAT THE YSMREC STATUS AND XWHTBL STATUS ARE ACTIVE FOR*/
   /* THE WAREHOUSE*/

  set YSMREC empty;

  YSMREC.YSMTBLPF = "XWH";
  YSMREC.YSMSYSPF = "FB";
  YSMREC.YSMSUMID = 1;
  YSMREC.YSMSRCVL = "****";

   /* DETERMINE REGION CODE TO ENTER*/

  if (PA0TM001.PA1OANBR > 199999
   && PA0TM001.PA1OANBR < 300000)
    YSMREC.YSMSUMCD = "02";
  else
    YSMREC.YSMSUMCD = "01";
  end

  PA0TS-15-IO2640-S1();

  PA0TS-16-IO2640-N1();

  PA0TW01.XX5 = 0;
  while (SQLCA.VAGen_SQLCODE == 0)
    if (YSMREC.XXXSTAT == "A") /* ACTIVE WAREHOUSE*/
        /* MAKE SURE THE WAREHOUSE IS ACTIVE ON THE XWHTBL ALSO*/
      if (YSMREC.YSMSRCVL in XWHTBL.XWHCD)
        if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          PA0TW01.XX5 = PA0TW01.XX5 + 1;
          PA0TW00.PA0TW-ALLUSA-WHSE[XX5] = YSMREC.YSMSRCVL;
        end
      end
    end
    PA0TS-16-IO2640-N1();
  end

  PA0TS-17-IO2640-C1();

   /* NUMBER OF VALID USA WHSES*/
  PA0TW01.PA0TNMWH = XX5;
  if (COMMAREA.CAFROMAP != "PA0P")
    PAWREC.XXXMSGNO = 83;
    COMMAREA.CATOAP = "PA0M";
    XSPAS01();
  end

  if (converseVar.eventKey is pf12 /* RESET WAS PRESSED*/
   || converseVar.eventKey is pa2) /* CANCEL*/
    if (PA0TWROS == " ")
      PA0TW01.PA0TWRPD = "N";
    end
  end

  if (PA0TW01.PA0TWRPD == "Y"
   || converseVar.validationMsgNum > 0
   || PAWREC.XXXMSGNO > 0)
     /* NEXT SENTENCE*/
  else
    XX0XS01(); /* GET CURRENT DATE*/
    PA0T100(); /* GET DATA TO DISPLAY*/
  end

  PA0T200(); /* DISPLAY MAP*/

  PA0T300(); /* CHECK ATTENTION IDENTIFIERS*/

end // end PA0T001

// GET DATA TO DISPLAY
Function PA0T100()
   /* ******************************************************/
    /* GET DATA TO DISPLAY*/
   /* ******************************************************/

  set PA1REC empty;
  set SQLCA empty;
  PA0TW01.PA0TWRPD = "N";

  PA0TM001.PA1OANBR = PAWOANBR;
  PA1REC.PA1OANBR = PA0TM001.PA1OANBR;
  PA0TM001.PA0TMSCR = PA0TW00.PA0TW-MAX-COLUMNS;

  PA0TS01(); /* SELECT O/A HEADER UNIQUE*/

  if (VAGen_SQLCODE != 0)
    if (VAGen_SQLCODE == 100)
      converseLib.validationFailed(50);
    end

    return;
  end

  PA0TM001.SY1STNBR = PA1REC.SY1STNBR;
  PA0TM001.SY2CLRID = PA1REC.SY2CLRID;
  PA0TM001.XDMCD = PA1REC.XDMCD;
  PA0TW01.PA1BUYMO = PA1REC.PA1BUYMO;

  set PG2REC empty;

  PG2REC.SY1STNBR = PA1REC.SY1STNBR;
  PG2REC.SY2CLRID = PA1REC.SY2CLRID;
  PG2REC.XDMCD = PA1REC.XDMCD;
  PG2REC.XGPCD = "02";

  XSPG202();

  if (VAGen_SQLCODE != 0)
    if (VAGen_SQLCODE == 100)
      converseLib.validationFailed(26);
    end

    return;
  end

  PA0TM001.SY1SSTNM = PG2REC.SY1SSTNM;
  PA0TM001.SY2CLRAB = PG2REC.SY2CLRAB;

  PA0TW01.PA0TIDX1 = 1;
  PA0TW01.XX5 = 0;
  while (PA0TW01.PA0TIDX1 <= PA0TW01.PA0TNMWH) /* For all valid USA whses*/
    PA0TW01.PA0TIDX2 = 1;
    PA0TW01.PA0TMCHS = "N"; /* Whse valid for style/color flag*/
   /* check ALL the whses from db2 table vsyclr01 OR*/
   /* until a match is found*/
    while (PA0TW01.PA0TIDX2 <= 6 && 
    PA0TW01.PA0TMCHS == "N")
      if (PA0TW00.PA0TW-ALLUSA-WHSE[PA0TIDX1] == PG2REC.XWHCD[PA0TIDX2])
        PA0TW01.XX5 = PA0TW01.XX5 + 1;
        if (PA0TW01.XX5 > 3)
          converseLib.validationFailed(351);
          return;
        else
          PA0TW00.PA0TW-REGION-WHSE[XX5] = PA0TW00.PA0TW-ALLUSA-WHSE[PA0TIDX1];
          PA0TW01.PA0TMCHS = "Y";
        end
      end
      PA0TW01.PA0TIDX2 = PA0TW01.PA0TIDX2 + 1;
    end
    PA0TW01.PA0TIDX1 = PA0TW01.PA0TIDX1 + 1;
  end
  if (PA0TW01.XX5 == 0)
    converseLib.validationFailed(352);
    return;
  end

  set PAJREC empty;
  set PAKREC empty;

  if (PA0TM001.PT3YYMM > 0)

    sysVar.arrayIndex = 1;
    while (sysVar.arrayIndex <= 3)
      PAJREC.PAJ1W-REGION-WHSE[sysVar.arrayIndex] = PA0TW00.PA0TW-REGION-WHSE[sysVar.arrayIndex];
      sysVar.arrayIndex = sysVar.arrayIndex + 1;
    end

    /*  */
    /* *************************** Y2K OUT BEGIN ****************************/
    /*  */
    /* MOVE PA0TM001.PT3YYMM TO PAJREC.PT3YYMM;*/
    /*  */
    /* *************************** Y2K OUT END ******************************/
    /*  */
    /*  */
    /* *************************** Y2K IN BEGIN *****************************/
    /*  */
    if (PA0TM001.PT3YYMM > 0)
      PA0TW01.PA0TW-MYM = PA0TM001.PT3YYMM;
    else
      PAJREC.PT3YYMM = 0;
    end
    /*  */
    if (PA0TW-MMM == 0)
      PAJREC.PT3YYMM = 0;
    else
      PAJREC.PT3YYMM = PA0TM001.PT3YYMM;
    end
    /*  */
    if (PAJREC.PT3YYMM != 0)
      if (PA0TW-MYY > 60)
        PAJREC.PT3YYMM = PAJREC.PT3YYMM + 190000;
      else
        PAJREC.PT3YYMM = PAJREC.PT3YYMM + 200000;
      end
    end
    /*  */
    /*  */
    /* *************************** Y2K IN END **************************** **/
    /*  */

    XPPA210(); /* GET PAR VALID SIZES*/

    if (PAWREC.XXXMSGNO > 0)
      if (PAWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(PAWREC.XXXMSGNO);
      end
      PAWREC.XXXMSGNO = 0;
      return;
    end
  end

  set PA5REC empty;

  PA5REC.PA1OANBR = PA1REC.PA1OANBR;

  PA0TS02(); /* OPEN CURSOR FOR O/A BOTTOM LINE*/

  if (VAGen_SQLCODE != 0)
    return;
  end

  PA0TW01.PA0TW-END-OF-BL-FLAG = "N";

  PA0TS03(); /* FETCH O/A BOTTOM LINE*/

  if (PA0TW01.PA0TW-END-OF-BL-FLAG == "Y")
     /* NO BOTTOM LINE SELECTED*/
    if (PA0TM001.PT3YYMM <= 0)
      PA0T125(); /* GET ALL PRODUCT SIZES*/
      PA0T110(); /* GET STANDARD PCTS*/
    else
      move PAJ1WBL2 to PA0TWBL2[1] for all;
      move PAJ1WBL4 to PA0TWBL4[1] for all;
      move PAJ1WBL7 to PA0TWBL7[1] for all;
      move 0 to PA0TWAD2[1] for all;
      move 0 to PA0TWAD4[1] for all;
      move 0 to PA0TWAD7[1] for all;
      PA0T110(); /* GET REGION PCTS*/
    end
  end

  while (PA0TW01.PA0TW-END-OF-BL-FLAG == "N")
  /*  */
  /* *************************** Y2K IN BEGIN *****************************/
  /*  */
    PA0TW-MYM = PA5REC.PT3YYMM;
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */

    if (PA5REC.XWHCD != " ")
      if (PA5REC.XWHCD == PA0TW00.PA0TW-REGION-WHSE[1])
        PA0TW01.PA0TWRG2 = PA5REC.FB4RGPCT;
        if (PA0TM001.PT3YYMM > 0
         /**/
         /* *************************** Y2K OUT BEGIN ****************************/
         /**/
         /* AND PA5REC.PT3YYMM = PA0TM001.PT3YYMM;*/
         /**/
         /* *************************** Y2K OUT END ******************************/
         /**/
         /* *************************** Y2K IN BEGIN *****************************/
         /**/
         && PA0TW01.PA0TW-MYM == PA0TM001.PT3YYMM)
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */
          move PA5REC.PA5BLQTY to PA0TWBL2[1] for all;
        else
          if (PA0TM001.PT3YYMM == 0)
            move PA5REC.PA5BLQTY to PA0TWBL2[1] for all;
          else
            move PAJ1WBL2 to PA0TWBL2[1] for all;
          end
        end
        move PA5REC.PA5AJQTY to PA0TWAD2[1] for all;
      else
        if (PA5REC.XWHCD == PA0TW00.PA0TW-REGION-WHSE[2])
          PA0TW01.PA0TWRG4 = PA5REC.FB4RGPCT;
          if (PA0TM001.PT3YYMM > 0
           /**/
           /* *************************** Y2K OUT BEGIN ****************************/
           /**/
           /* AND PA5REC.PT3YYMM = PA0TM001.PT3YYMM;*/
           /**/
           /* *************************** Y2K OUT END ******************************/
           /**/
           /* *************************** Y2K IN BEGIN *****************************/
           /**/
           && PA0TW01.PA0TW-MYM == PA0TM001.PT3YYMM)
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */
            move PA5REC.PA5BLQTY to PA0TWBL4[1] for all;
          else
            if (PA0TM001.PT3YYMM == 0)
              move PA5REC.PA5BLQTY to PA0TWBL4[1] for all;
            else
              move PAJ1WBL4 to PA0TWBL4[1] for all;
            end
          end
          move PA5REC.PA5AJQTY to PA0TWAD4[1] for all;
        else
          if (PA5REC.XWHCD == PA0TW00.PA0TW-REGION-WHSE[3])
            PA0TW01.PA0TWRG7 = PA5REC.FB4RGPCT;
            if (PA0TM001.PT3YYMM > 0
             /**/
             /* *************************** Y2K OUT BEGIN ****************************/
             /**/
             /* AND PA5REC.PT3YYMM = PA0TM001.PT3YYMM;*/
             /**/
             /* *************************** Y2K OUT END ******************************/
             /**/
             /**/
             /* *************************** Y2K IN BEGIN *****************************/
             /**/
             && PA0TW01.PA0TW-MYM == PA0TM001.PT3YYMM)
  /*  */
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */
              move PA5REC.PA5BLQTY to PA0TWBL7[1] for all;
            else
              if (PA0TM001.PT3YYMM == 0)
                move PA5REC.PA5BLQTY to PA0TWBL7[1] for all;
              else
                move PAJ1WBL7 to PA0TWBL7[1] for all;
              end
            end
            move PA5REC.PA5AJQTY to PA0TWAD7[1] for all;
          end
        end
      end
    end

    PA0TS03();

  end

  PA0TS04();

  if (converseVar.validationMsgNum == 0)
    PA0T600(); /* SETUP DATA FOR SCREEN ONE*/
  end

  PA0TW01.PA0TWRPD = "Y";
end // end PA0T100

// GET REGIONAL PCTS
Function PA0T110()
   /* *******************************************************/
   /* GET REGIONAL PERCENTS*/
   /* ------------------------------------------------------*/
    /* THIS WILL ONLY HAPPEN IF NO CURRENT BOTTOM LINE*/
    /* IN O/A BOTTOM LINE DATABASE*/

   /* *******************************************************/

  set FB4REC empty;

  FB4REC.SY1STNBR = PA1REC.SY1STNBR;
  FB4REC.SY2CLRID = PA1REC.SY2CLRID;
  FB4REC.XDMCD = PA1REC.XDMCD;
  FB4REC.FB4STDFL = "Y";
  FB4REC.XQACD = "01";
  FB4REC.PC2INSEG = "000";
  FB4REC.XPGCD = "00";
  FB4REC.XUMCD = "01";
  FB4REC.XGPCD = "02";
  FB4REC.FB1INSEQ = -1;
  FB4REC.FB4CRVNB = -1;
  FB4REC.XSACD = "000";

  PA0TS05(); /* OPEN SIZE REGION CURSOR*/

  if (VAGen_SQLCODE != 0)
    return;
  end

  PA0TS06(); /* FETCH SIZE REGION CURSOR*/

  if (VAGen_SQLCODE == 0
   || VAGen_SQLCODE == 100)
     /* NEXT SENTENCE*/
  else
    return;
  end

  while (VAGen_SQLCODE == 0)

    if (FB4REC.XWHCD != " ")
      if (FB4REC.XWHCD == PA0TW00.PA0TW-REGION-WHSE[1])
        PA0TWRG2 = FB4REC.FB4RGPCT;
      else
        if (FB4REC.XWHCD == PA0TW00.PA0TW-REGION-WHSE[2])
          PA0TWRG4 = FB4REC.FB4RGPCT;
        else
          if (FB4REC.XWHCD == PA0TW00.PA0TW-REGION-WHSE[3])
            PA0TWRG7 = FB4REC.FB4RGPCT;
          end
        end
      end
    end

    PA0TS06(); /* FETCH SIZE REGION RECORD*/
  end

  PA0TS07();
end // end PA0T110

// GET DEFAULT SIZES
Function PA0T125()
   /* *****************************************************/
    /* SETUP PG3REC FOR SIZE TRANSLATION*/
   /* ----------------------------------------------------*/

   /* ANY QUANTITY THAT IS GREATER THAN ZERO, THAT IS STORED*/
   /* FOR DISPLAY MUST BE TRANSLATED ALONG WITH ALL SIZES*/
   /* THAT WERE VALID FOR CURRENT PAR*/
   /* *****************************************************/

  set PG3REC empty;

  PG3REC.SY1STNBR = PA1REC.SY1STNBR;
  PG3REC.SY2CLRID = PA1REC.SY2CLRID;
  PG3REC.XDMCD = PA1REC.XDMCD;
  PG3REC.XGPCD = "02";
  PG3REC.XQACD = "**";
  PG3REC.PG3FUNCD = "PC";
  PG3REC.PG3DATFM = "C";
  PG3REC.PG3XDVCD = "99";


  XSPG301(); /* CALL SIZE TRANSLATION MODULE*/

  if (sysVar.errorCode != "00000000")
    converseLib.validationFailed(10);
    return;
  end

  if (PG3REC.PG3RETCD > 5)
    converseLib.validationFailed(11);
    return;
  end

end // end PA0T125

// DISPLAY MAP
Function PA0T200()
   /* ***********************************************************/

  PA0TM001.XXXCURDT = VGVar.currentShortGregorianDate;

  if (converseVar.validationMsgNum > 0)
     /* NEXT SENTENCE*/
  else
    if (PAWREC.XXXMSGNO > 0)
      if (PAWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(PAWREC.XXXMSGNO);
      end
    else
      if (PA0TWROS == "Y")
        set PA0TM001.CATOAP cursor;
        set PA0TM001.PA1OANBR skip;
        set PA0TM001.PT3YYMM skip;
        set PA0TM001.FB4RGPCT[1] skip;
        set PA0TM001.FB4RGPCT[2] skip;
        set PA0TM001.FB4RGPCT[3] skip;
        PA0TW01.XX1 = 1;
        while (PA0TW01.XX1 <= PA0TW00.PA0TW-MAX-COLUMNS)
          if (PA0TM001.SY4IDDSC[XX1] != " ")
            set PA0TM001.SY4IDDSC[XX1] skip;
            set PA0TM001.PA0TMBL1[XX1] skip;
            set PA0TM001.PA0TMBL2[XX1] skip;
            set PA0TM001.PA0TMBL3[XX1] skip;
            set PA0TM001.PA0TMAD1[XX1] skip;
            set PA0TM001.PA0TMAD2[XX1] skip;
            set PA0TM001.PA0TMAD3[XX1] skip;
            set PA0TM001.PA0TMAB1[XX1] skip;
            set PA0TM001.PA0TMAB2[XX1] skip;
            set PA0TM001.PA0TMAB3[XX1] skip;
          else
            set PA0TM001.SY4IDDSC[XX1] skip, invisible;
            set PA0TM001.PA0TMBL1[XX1] skip, invisible;
            set PA0TM001.PA0TMBL2[XX1] skip, invisible;
            set PA0TM001.PA0TMBL3[XX1] skip, invisible;
            set PA0TM001.PA0TMAD1[XX1] skip, invisible;
            set PA0TM001.PA0TMAD2[XX1] skip, invisible;
            set PA0TM001.PA0TMAD3[XX1] skip, invisible;
            set PA0TM001.PA0TMAB1[XX1] skip, invisible;
            set PA0TM001.PA0TMAB2[XX1] skip, invisible;
            set PA0TM001.PA0TMAB3[XX1] skip, invisible;
          end
          PA0TW01.XX1 = PA0TW01.XX1 + 1;
        end
        if (PA0TM001.YESCD < "05")
          converseLib.validationFailed(149); /* calc has been run*/
        else
          converseLib.validationFailed(72); /* status allows read only*/
        end
      end
    end
  end

   /* IF EUROPEAN O/A, ALLOW INQUIRY ONLY*/

  if (PA0TM001.PA1OANBR > 199999
   && PA0TM001.PA1OANBR < 300000)
    set PA0TM001.PT3YYMM skip;
    set PA0TM001.CATOAP cursor;
  end

   /* DARKEN FIELDS FOR BLANK WAREHOUSE*/

  XX1 = 1;
  while (XX1 <= 3)
    if (PA0TM001.PA0TM-WHSE-LBL[XX1] == "  ")
      set PA0TM001.PA0TM-WHSE[XX1] skip, invisible;
      set PA0TM001.PA0TM-STD-REGION[XX1] skip, invisible;
      set PA0TM001.FB4RGPCT[XX1] skip, invisible;
      set PA0TM001.PA0TM-REGION-PCT[XX1] skip, invisible;
      set PA0TM001.PA0TMPCT[XX1] skip, invisible;
      set PA0TM001.PA0TM-CURR-BL[XX1] skip, invisible;
      set PA0TM001.PA0TM-ADJ[XX1] skip, invisible;
      set PA0TM001.PA0TM-ADJ-BL[XX1] skip, invisible;
      if (XX1 == 1)
        set PA0TM001.PA0TMTB1 skip, invisible;
        set PA0TM001.PA0TMTA1 skip, invisible;
        set PA0TM001.PA0TMAT1 skip, invisible;
        XX3 = 1;
        while (XX3 <= PA0TW00.PA0TW-MAX-COLUMNS)
          set PA0TM001.PA0TMBL1[XX3] skip, invisible;
          set PA0TM001.PA0TMAD1[XX3] skip, invisible;
          set PA0TM001.PA0TMAB1[XX3] skip, invisible;
          XX3 = XX3 + 1;
        end
      else
        if (XX1 == 2)
          set PA0TM001.PA0TMTB2 skip, invisible;
          set PA0TM001.PA0TMTA2 skip, invisible;
          set PA0TM001.PA0TMAT2 skip, invisible;
          XX3 = 1;
          while (XX3 <= PA0TW00.PA0TW-MAX-COLUMNS)
            set PA0TM001.PA0TMBL2[XX3] skip, invisible;
            set PA0TM001.PA0TMAD2[XX3] skip, invisible;
            set PA0TM001.PA0TMAB2[XX3] skip, invisible;
            XX3 = XX3 + 1;
          end
        else
          set PA0TM001.PA0TMTB3 skip, invisible;
          set PA0TM001.PA0TMTA3 skip, invisible;
          set PA0TM001.PA0TMAT3 skip, invisible;
          XX3 = 1;
          while (XX3 <= PA0TW00.PA0TW-MAX-COLUMNS)
            set PA0TM001.PA0TMBL3[XX3] skip, invisible;
            set PA0TM001.PA0TMAD3[XX3] skip, invisible;
            set PA0TM001.PA0TMAB3[XX3] skip, invisible;
            XX3 = XX3 + 1;
          end
        end
      end
    else
        /* IF EUROPEAN O/A, ALLOW INQUIRY ONLY*/
      if (PA0TM001.PA1OANBR > 199999
       && PA0TM001.PA1OANBR < 300000)
        set PA0TM001.FB4RGPCT[XX1] skip;
        XX3 = 1;
        while (XX3 <= PA0TW00.PA0TW-MAX-COLUMNS)
          if (XX1 == 1)
            set PA0TM001.PA0TMAD1[XX3] skip;
          else
            if (XX1 == 2)
              set PA0TM001.PA0TMAD2[XX3] skip;
            else
              set PA0TM001.PA0TMAD3[XX3] skip;
            end
          end
          XX3 = XX3 + 1;
        end
      end
    end
    XX1 = XX1 + 1;
  end

  if (PA0TM001.PA1OANBR > 199999
   && PA0TM001.PA1OANBR < 300000)
    set PA0TM001.PA0TM-PF9-LABEL skip, invisible;
    set PA0TM001.PA0TM-PF12-LABEL skip, invisible;
  end

  converse PA0TM001 ;
end // end PA0T200

// CHECK ATTENTION IDENTIFIERS
Function PA0T300()
   /* ***************************************************/

    /* CHECK ATTENTION IDENTIFIERS*/

   /* ***************************************************/

  if (PA0TM001.PT3YYMM is modified)
    if (PA0TM001.PT3YYMM == 0)
      move 0 to PA0TWBL2[1] for all;
      move 0 to PA0TWBL4[1] for all;
      move 0 to PA0TWBL7[1] for all;
      move 0 to PA0TMBL1[1] for all;
      move 0 to PA0TMBL2[1] for all;
      move 0 to PA0TMBL3[1] for all;
    else
      PA0TWRPD = "N";
      exit stack;
    end
  end

  if (PA0TM001.CATOAP > " ") /* FAST PATH*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = PA0TM001.CATOAP; /* TO APPLICATION*/
      COMMAREA.CAITEM = PA0TM001.CAITEM; /* DATA*/
      PAWREC.PAWOANBR = PA0TM001.PA1OANBR;
      XSPAS01(); /* EXIT TO ANOTHER APPLICATION*/
    else
      converseLib.validationFailed(5); /* INVALID KEY*/
    end

    set PA0TM001.CATOAP cursor, modified, bold;
    PAWREC.XXXMODID = "300";
    exit stack;

  end

   /* EUROPEAN O/A ALLOWS INQUIRY ONLY*/

  if (PA0TM001.PA1OANBR > 199999
   && PA0TM001.PA1OANBR < 300000)
    if (converseVar.eventKey is pf12
     || converseVar.eventKey is pf9)
      converseLib.validationFailed(340); /* EUROPEAN O/A ALLOWS INQUIRY ONLY*/
      exit stack;
    end
  end

  if (converseVar.eventKey is pf12
   || converseVar.eventKey is pa2)
    exit stack;
  end

  if (converseVar.eventKey is pf1)
    XSPAS01(); /* COMMON EXIT ROUTINE*/
  end

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "PA0P";

     /* PA#225: since read only is allowed, check*/
     /* to make sure message 149 is not passed*/
     /* back to PA0P in the COMMAREA.CAUSERA*/

    PAWREC.CAUSERA = COMMAREA.CAUSERA;

    if (PAWREC.XXXMSGNO == 149)
      PAWREC.XXXMSGNO = 0;
      COMMAREA.CAUSERA = PAWREC.CAUSERA;
    end

    XSEXIT(); /* COMMON EXIT ROUTINE*/
  end

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "FY0M"; /* PRODUCTION MENU*/
    XSPAS01(); /* COMMON EXIT ROUTINE*/
  end

  if (PA0TW01.PA0TWROS != "Y")
    if (converseVar.eventKey is pf9)
      if (PA0TW01.PA0TWRPD == "N")
        converseLib.validationFailed(4);
        exit stack;
      else
        PA0T310();
        PA0T320();

        PA0T500(); /* UPDATE/ADD RECORDS TO BOTTOM LINE TABLE*/
        COMMAREA.CATOAP = "PA0P";
        XSPAS01(); /* COMMON EXIT*/
        exit stack;
      end
    end
  end

  if (converseVar.eventKey is pf10)
    if (PA0TWX3 <= PA0TW00.PA0TW-MAX-COLUMNS)
      converseLib.validationFailed(33);
      exit stack;
    end
    PA0T310(); /* CHECK ENTERED DATA*/
    PA0T320(); /* UPDATE WORKING STORAGE FROM MAP*/
    PA0TWX3 = PA0TWX3 - PA0TM001.PA0TMSCR - PA0TW00.PA0TW-MAX-COLUMNS;
    PA0T610(); /* MOVE SIZE RELATED DATA TO MAP*/
    PA0T620(); /* COMPUTE BOTTOM LINE PCT*/
    return;
  end

  if (converseVar.eventKey is pf11)
    if (PA0TM001.SY4IDDSC[PA0TW-MAX-COLUMNS] == " ")
      converseLib.validationFailed(32);
      exit stack;
    end
    PA0T310(); /* CHECK ENTERED DATA*/
    PA0T320(); /* UPDATE WORKING STORAGE FROM MAP*/
    PA0T610(); /* MOVE SIZE RELATED DATA TO MAP*/
    PA0T620(); /* COMPUTE BOTTOM LINE PCT*/
    return;
  end

  if (converseVar.eventKey is enter)
    if (PA0TWRPD == "Y")
      PA0T310(); /* CHECK ENTERED DATA*/
      PA0T320();
      PA0TWX3 = 0; /* RESET THE SIZE BUCKET*/
      PA0T610(); /* DETERMINE IF OTHER O/AS FOR BL*/
      PA0T620(); /* COMPUTE BOTTOM LINE PCT*/
    end
    return;
  end

  converseLib.validationFailed(04); /* INVALID KEY PRESSED*/
end // end PA0T300

// CHECK ENTERED DATA FOR ERRORS
Function PA0T310()
   /* *************************************************************/
   /* ADD ALL THREE OF THE ENTERED DATA FOR REGION PERCENT IS*/
   /* TO BE ADDED AND THE TOTAL MUST BE 100 PERCENT*/
   /* *************************************************************/


  if (PA0TM001.FB4RGPCT[3] < 0)
    set PA0TM001.FB4RGPCT[3] cursor, bold;
    converseLib.validationFailed(147);
  end

  if (PA0TM001.FB4RGPCT[2] < 0)
    set PA0TM001.FB4RGPCT[2] cursor, bold;
    converseLib.validationFailed(147);
  end

  if (PA0TM001.FB4RGPCT[1] < 0)
    set PA0TM001.FB4RGPCT[1] cursor, bold;
    converseLib.validationFailed(147);
  end

  if (converseVar.validationMsgNum == 147)
    return;
  end


  PA0TW01.PA0TWPCT = PA0TM001.FB4RGPCT[1];
  PA0TW01.PA0TWPCT = PA0TW01.PA0TWPCT + PA0TM001.FB4RGPCT[2];
  PA0TW01.PA0TWPCT = PA0TW01.PA0TWPCT + PA0TM001.FB4RGPCT[3];

  if (PA0TWPCT != +100)
    converseLib.validationFailed(89);
    set PA0TM001.FB4RGPCT[1] cursor, bold;
    set PA0TM001.FB4RGPCT[2] bold;
    set PA0TM001.FB4RGPCT[3] bold;
    exit stack;
  else
    set PA0TM001.FB4RGPCT[1] initialAttributes;
    set PA0TM001.FB4RGPCT[2] initialAttributes;
    set PA0TM001.FB4RGPCT[3] initialAttributes;
  end



end // end PA0T310

// UPDATE WORKING STORAGE
Function PA0T320()
   /* ****************************************************/
   /* ALL THIS DOES IS FIND THE POINT IN WORKING STORAGE*/
   /* THAT CORRESPONDS TO THE FIRST SIZE ON THE MAP*/
   /* THEN MOVES THE DATA TO WORKING STORAGE FOR THE*/
   /* ADJUSTMENT QUANTITIES*/
   /* ****************************************************/

  move PA0TWX3 to PA0TWX1 withV60Compat;

  PA0TWX1 = PA0TWX1 - PA0TW00.PA0TW-MAX-COLUMNS;

  sysVar.arrayIndex = 1;

  while (sysVar.arrayIndex <= PA0TW00.PA0TW-MAX-COLUMNS)

    PA0TWX1 = PA0TWX1 + 1;

    if (PG3REC.SY5SZID[PA0TWX1] > 0)
      PA0TWX2 = PG3REC.SY5SZID[PA0TWX1];
      PA0TW01.PA0TWAD2[PA0TWX2] = PA0TM001.PA0TMAD1[sysVar.arrayIndex];
      PA0TW01.PA0TWAD4[PA0TWX2] = PA0TM001.PA0TMAD2[sysVar.arrayIndex];
      PA0TW01.PA0TWAD7[PA0TWX2] = PA0TM001.PA0TMAD3[sysVar.arrayIndex];
      PA0TMAB1[sysVar.arrayIndex] = PA0TMBL1[sysVar.arrayIndex] + PA0TMAD1[sysVar.arrayIndex];
      PA0TMAB2[sysVar.arrayIndex] = PA0TMBL2[sysVar.arrayIndex] + PA0TMAD2[sysVar.arrayIndex];
      PA0TMAB3[sysVar.arrayIndex] = PA0TMBL3[sysVar.arrayIndex] + PA0TMAD3[sysVar.arrayIndex];
    end

    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end
end // end PA0T320

// UPDATE/ADD DPRODA.VBOTLN01
Function PA0T500()
   /* ****************************************************/
    /* THIS PROCESS WILL DELETE ANY EXISTING*/
    /* BOTTOM LINE RECORDS AND THEN ADD THE NEW*/
    /* BOTTOM LINE RECORDS CREATED BY USER*/
    /*  */
    /* PA308: UPDATE APPLIED BOTTOM LINE FLAG TO 'N'*/
   /* ****************************************************/

  set PA5REC empty;

  PA5REC.PA1OANBR = PA0TM001.PA1OANBR;

  PA0TS08();

   /* ----------------------------------------------------*/
   /* SET UP FOR BOTTOM LINE INSERTS*/
   /* ----------------------------------------------------*/

  PA5REC.SY1STNBR = PA0TM001.SY1STNBR;
  PA5REC.SY2CLRID = PA0TM001.SY2CLRID;
  PA5REC.XDMCD = PA0TM001.XDMCD;
  PA5REC.XQACD = "01";
  PA5REC.PC2INSEG = "000";
  PA5REC.XPGCD = "00";
  PA5REC.XUMCD = PG2REC.XUMCD;

  /* *************************** Y2K OUT BEGIN ****************************/
  /*  */
  /* MOVE PA0TM001.PT3YYMM TO PA5REC.PT3YYMM;*/
  /*  */
  /* *************************** Y2K OUT END ******************************/
  /*  */
  /*  */
  /*  */
  /* *************************** Y2K IN BEGIN *****************************/
  /*  */
  if (PA0TM001.PT3YYMM > 0)
    PA0TW01.PA0TW-MYM = PA0TM001.PT3YYMM;
  else
    PA5REC.PT3YYMM = 0;
  end
  /*  */
  if (PA0TW-MMM == 0)
    PA5REC.PT3YYMM = 0;
  else
    PA5REC.PT3YYMM = PA0TM001.PT3YYMM;
  end
  /*  */
  if (PA5REC.PT3YYMM != 0)
    if (PA0TW-MYY > 60)
      PA5REC.PT3YYMM = PA5REC.PT3YYMM + 190000;
    else
      PA5REC.PT3YYMM = PA5REC.PT3YYMM + 200000;
    end
  end
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */

  PA5REC.PA1BUYMO = PA0TW01.PA1BUYMO;
  PA5REC.ZZZSDT = XX0XWDAT;

   /* ----------------------------------------------------*/
   /* INSERT FIRST WAREHOUSE*/
   /* ----------------------------------------------------*/

  if (PA0TW00.PA0TW-REGION-WHSE[1] != " ")
    PA5REC.XWHCD = PA0TW00.PA0TW-REGION-WHSE[1];
    PA5REC.FB4RGPCT = PA0TM001.FB4RGPCT[1];
    move PA0TWBL2 to PA5REC.PA5BLQTY[1] for all;
    move PA0TWAD2 to PA5REC.PA5AJQTY[1] for all;

    PA0TS09(); /* ADD BOTTOM LINE RECORD*/
  end

   /* ----------------------------------------------------*/
   /* INSERT SECOND WAREHOUSE*/
   /* ----------------------------------------------------*/

  if (PA0TW00.PA0TW-REGION-WHSE[2] != " ")
    PA5REC.XWHCD = PA0TW00.PA0TW-REGION-WHSE[2];
    PA5REC.FB4RGPCT = PA0TM001.FB4RGPCT[2];
    move PA0TWBL4 to PA5REC.PA5BLQTY[1] for all;
    move PA0TWAD4 to PA5REC.PA5AJQTY[1] for all;

    PA0TS09(); /* ADD BOTTOM LINE RECORD*/
  end

   /* ----------------------------------------------------*/
   /* INSERT THIRD WAREHOUSE*/
   /* ----------------------------------------------------*/

  if (PA0TW00.PA0TW-REGION-WHSE[3] != " ")
    PA5REC.XWHCD = PA0TW00.PA0TW-REGION-WHSE[3];
    PA5REC.FB4RGPCT = PA0TM001.FB4RGPCT[3];
    move PA0TWBL7 to PA5REC.PA5BLQTY[1] for all;
    move PA0TWAD7 to PA5REC.PA5AJQTY[1] for all;

    PA0TS09(); /* ADD BOTTOM LINE RECORD*/
  end

   /* ----------------------------------------------------*/
   /* PA308: UPDATE APPLIED BOTTOM LINE FLAG TO 'N'*/
   /* ----------------------------------------------------*/

  set PA1REC empty;
  PA1REC.PA1OANBR = PA0TM001.PA1OANBR;

  PA0TS-13-IO4830-S();

  PA1REC.PA-APPL-BUY-BTL-FL = "N";
  PA1REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  PA1REC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  PA0TS-14-IO4830-U();


end // end PA0T500

// SETUP MAP ONE DATA
Function PA0T600()
   /* ***********************************************************/
    /* SETUP NON SIZE DATA TO MAP ONE*/
   /* ----------------------------------------------------------*/
   /* THEN EXECUTE THE PROCESS TO MOVE SIZE RELATED DATA*/
   /* ***********************************************************/


  PA0TM001.PA1OANBR = PA1REC.PA1OANBR;
  PA0TM001.SY1STNBR = PA1REC.SY1STNBR;
  PA0TM001.SY2CLRID = PA1REC.SY2CLRID;
  PA0TM001.XDMCD = PA1REC.XDMCD;
  PA0TM001.SY1SSTNM = PG2REC.SY1SSTNM;
  PA0TM001.SY2CLRAB = PG2REC.SY2CLRAB;
  PA0TM001.YETCD = PA1REC.YETCD;

  if (PA1REC.YETCD in YETTBL.YETCD)
    PA0TM001.YETABRV = YETTBL.YETABRV[sysVar.arrayIndex];
  end

  PA0TM001.YESCD = PA1REC.YESCD;

  if (PA1REC.YESCD in YESTBL.YESCD)
    PA0TM001.YESABRV = YESTBL.YESABRV[sysVar.arrayIndex];
  end

  PA0TM001.FB8BUYDT = PAWBUYYM;

  if (PA0TM001.PT3YYMM > 0)
    /* NEXT SENTENCE*/
  else
    if (PA5REC.PT3YYMM > 0)
      PA0TM001.PT3YYMM = PA5REC.PT3YYMM;
    end
  end

  PA0TM001.PA0TMSCR = PA0TW00.PA0TW-MAX-COLUMNS; /* SCROLL AMOUNT*/
  PA0TM001.FB4RGPCT[1] = PA0TWRG2;
  PA0TM001.FB4RGPCT[2] = PA0TWRG4;
  PA0TM001.FB4RGPCT[3] = PA0TWRG7;

  PA0TWX3 = 0;
  PA0TWX4 = 0;

  PA0T610(); /* MOVE SIZE RELATED DATA*/

  PA0T620(); /* COMPUTE BOTTOMLINE PCT*/
end // end PA0T600

// MOVE SIZE RELATED DATA
Function PA0T610()
   /* ******************************************************/
    /* MOVE SIZE RELATED DATA*/
   /* ******************************************************/

  if (converseVar.eventKey is pf11)
    PA0TWX4 = PA0TM001.PA0TMSCR;
    PA0TWX4 = PA0TWX4 - PA0TW00.PA0TW-MAX-COLUMNS;
    PA0TWX3 = PA0TWX3 + PA0TWX4;
  end

  move " " to PA0TM001.SY4IDDSC[1] for all;
  move 0 to PA0TMBL1[1] for all;
  move 0 to PA0TMBL2[1] for all;
  move 0 to PA0TMBL3[1] for all;
  move 0 to PA0TMAD1[1] for all;
  move 0 to PA0TMAD2[1] for all;
  move 0 to PA0TMAD3[1] for all;
  move 0 to PA0TMAB1[1] for all;
  move 0 to PA0TMAB2[1] for all;
  move 0 to PA0TMAB3[1] for all;

   /* PA307: THE CURRENT BOTTOM LINE SHOULD INCLUDE ADJUSTMENTS FROM THE*/
   /* OPEN O/AS.  THIS NEW BOTTOM LINE SHOULD NOT BE USED TO*/
   /* UPDATE DPRODA.VBOTLN01.*/

   /* IF PA0TM001.PT3YYMM NE 0;*/
   /* AND PA0TM001.PT3YYMM NE PA0TW01.PT3YYMM;*/
  PA0T-61001();
  PA0T-61004(); /* DETERMINE SIZE DESCRIPTIONS*/
      /* MOVE PA0TM001.PT3YYMM TO PA0TW01.PT3YYMM;*/
   /* END;*/

  PA0TWX4 = 1;

  while (PA0TWX4 <= PA0TW00.PA0TW-MAX-COLUMNS)

    PA0TWX3 = PA0TWX3 + 1;
    if (PA0TWX3 > 40)
      PA0TWX3 = 40;
    else
      if (PA0TWX3 < 0)
        PA0TWX3 = 1;
      end
    end

    if (PG3REC.SY4IDDSC[PA0TWX3] == " ")
      set PA0TM001.SY4IDDSC[PA0TWX4] skip, invisible;
      set PA0TMBL1[PA0TWX4] skip, invisible;
      set PA0TMBL2[PA0TWX4] skip, invisible;
      set PA0TMBL3[PA0TWX4] skip, invisible;
      set PA0TMAD1[PA0TWX4] skip, invisible;
      set PA0TMAD2[PA0TWX4] skip, invisible;
      set PA0TMAD3[PA0TWX4] skip, invisible;
      set PA0TMAB1[PA0TWX4] skip, invisible;
      set PA0TMAB2[PA0TWX4] skip, invisible;
      set PA0TMAB3[PA0TWX4] skip, invisible;
    else
      set PA0TM001.SY4IDDSC[PA0TWX4] initialAttributes;
      set PA0TMBL1[PA0TWX4] initialAttributes;
      set PA0TMBL2[PA0TWX4] initialAttributes;
      set PA0TMBL3[PA0TWX4] initialAttributes;
      set PA0TMAD1[PA0TWX4] initialAttributes;
      set PA0TMAD2[PA0TWX4] initialAttributes;
      set PA0TMAD3[PA0TWX4] initialAttributes;
      set PA0TMAB1[PA0TWX4] initialAttributes;
      set PA0TMAB2[PA0TWX4] initialAttributes;
      set PA0TMAB3[PA0TWX4] initialAttributes;
      PA0TM001.SY4IDDSC[PA0TWX4] = PG3REC.SY4IDDSC[PA0TWX3];
      PA0TWX1 = PG3REC.SY5SZID[PA0TWX3];

      PA0TMBL1[PA0TWX4] = PA0TW01.PA0TW-BL-WITH-OAS1[PA0TWX1];
      PA0TMAD1[PA0TWX4] = PA0TWAD2[PA0TWX1];
      PA0TMAB1[PA0TWX4] = PA0TMBL1[PA0TWX4] + PA0TMAD1[PA0TWX4];

      PA0TMBL2[PA0TWX4] = PA0TW01.PA0TW-BL-WITH-OAS2[PA0TWX1];
      PA0TMAD2[PA0TWX4] = PA0TWAD4[PA0TWX1];
      PA0TMAB2[PA0TWX4] = PA0TMBL2[PA0TWX4] + PA0TMAD2[PA0TWX4];

      PA0TMBL3[PA0TWX4] = PA0TW01.PA0TW-BL-WITH-OAS3[PA0TWX1];
      PA0TMAD3[PA0TWX4] = PA0TWAD7[PA0TWX1];
      PA0TMAB3[PA0TWX4] = PA0TMBL3[PA0TWX4] + PA0TMAD3[PA0TWX4];

      if (PAJ1WVSZ[PA0TWX1] != "Y")
        set PA0TM001.SY4IDDSC[PA0TWX4] skip, bold;
      end
      if (PA0TWROS == "Y")
        set PA0TMAD1[PA0TWX4] skip;
        set PA0TMAD2[PA0TWX4] skip;
        set PA0TMAD3[PA0TWX4] skip;
      end
    end

    PA0TWX4 = PA0TWX4 + 1;
  end

end // end PA0T610

// COMPUTE BOTTOMLINE PCT
Function PA0T620()
   /* *******************************************************/
   /* 1. COMPUTE TOTAL ADJUSTMENT QTYS*/
   /* 2. COMPUTE TOTAL DIFF BETWEEN ADJUSTMENT AND B/L QTY*/
   /* 3. COMPUTE TRUE ADJUSTED B/L PERCENTAGE*/
   /* *******************************************************/

  PA0TM001.PA0TMPCT[1] = 0;
  PA0TM001.PA0TMPCT[2] = 0;
  PA0TM001.PA0TMPCT[3] = 0;
  PA0TM001.PA0TMTB1 = 0;
  PA0TM001.PA0TMTB2 = 0;
  PA0TM001.PA0TMTB3 = 0;
  PA0TM001.PA0TMTA1 = 0;
  PA0TM001.PA0TMTA2 = 0;
  PA0TM001.PA0TMTA3 = 0;
  PA0TM001.PA0TMAT1 = 0;
  PA0TM001.PA0TMAT2 = 0;
  PA0TM001.PA0TMAT3 = 0;

  sysVar.arrayIndex = 1;

  while (sysVar.arrayIndex <= 40)

    PA0TM001.PA0TMTB1 = PA0TW01.PA0TW-BL-WITH-OAS1[sysVar.arrayIndex] + PA0TMTB1;
    PA0TM001.PA0TMTB2 = PA0TW01.PA0TW-BL-WITH-OAS2[sysVar.arrayIndex] + PA0TMTB2;
    PA0TM001.PA0TMTB3 = PA0TW01.PA0TW-BL-WITH-OAS3[sysVar.arrayIndex] + PA0TMTB3;
    PA0TM001.PA0TMTA1 = PA0TW01.PA0TWAD2[sysVar.arrayIndex] + PA0TMTA1;
    PA0TM001.PA0TMTA2 = PA0TW01.PA0TWAD4[sysVar.arrayIndex] + PA0TMTA2;
    PA0TM001.PA0TMTA3 = PA0TW01.PA0TWAD7[sysVar.arrayIndex] + PA0TMTA3;

    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

  PA0TM001.PA0TMAT1 = PA0TMTB1 + PA0TMTA1;
  PA0TM001.PA0TMAT2 = PA0TMTB2 + PA0TMTA2;
  PA0TM001.PA0TMAT3 = PA0TMTB3 + PA0TMTA3;

  PA0TWTAB = PA0TMAT1 + PA0TMAT2 + PA0TMAT3;

  if (PA0TWTAB > 0)

    PA0TWPCA = PA0TMAT1 / PA0TWTAB;
    PA0TWPCA = PA0TWPCA + .00005;
    PA0TMPCT[1] = PA0TWPCA * 100;
    PA0TWPCA = PA0TMAT2 / PA0TWTAB;
    PA0TWPCA = PA0TWPCA + .00005;
    PA0TMPCT[2] = PA0TWPCA * 100;

    PA0TWPCA = PA0TMAT3 / PA0TWTAB;
    PA0TWPCA = PA0TWPCA + .00005;
    PA0TMPCT[3] = PA0TWPCA * 100;

  end
end // end PA0T620

// OPEN CURSOR O/A BOTTOM LINES
Function PA0TS-10-PA1050-S()
   /* -----------------------------------------------------*/
   /* OPEN CURSOR TO GE THE O/A BOTTOM LINES*/
   /* -----------------------------------------------------*/

  try
    call "PA1050" (PA0TW02, SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    end
  end

  PAWREC.XXXMSGNO = 10;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0TS10 OPEN CURSOR O/A WORK  ";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* Table view name*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/

  exit stack;
end // end PA0TS-10-PA1050-S

// FETCH O/A BOTTOM LINES
Function PA0TS-11-PA1050-N()
   /* -----------------------------------------------------*/
   /* FETCH NEXT O/A BOTTOM LINE RECORD*/
   /* -----------------------------------------------------*/

  try
    call "PA1050" (PA0TW02, SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    end
  end

  PAWREC.XXXMSGNO = 10;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0TS11 FETCH NEXT TYPE 9 WORK";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* Table view name*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/

  exit stack;
end // end PA0TS-11-PA1050-N

// CLOSE O/A BOTTOM LINES
Function PA0TS-12-PA1050-C()
   /* -----------------------------------------------------*/
   /* CLOSE O/A BOTTOM LINE RECORDS*/
   /* -----------------------------------------------------*/

  try
    call "PA1050" (PA0TW02, SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end

  PAWREC.XXXMSGNO = 10;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0TS12 CLOSE O/A TYPE 9 WORK ";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* Table view name*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/

  exit stack;
end // end PA0TS-12-PA1050-C

// SELECT 'S' DPRODA.VPAHDR01
Function PA0TS-13-IO4830-S()
   /* ------------------------------------------------------------*/
   /* Select 's' dproda.vpahdr01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4830" ("S ", SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S13"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODA.VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0TS-13-IO4830-S

// UPDATE DPRODA.VPAHDR01
Function PA0TS-14-IO4830-U()
   /* ------------------------------------------------------------*/
   /* UPDATE DPRODA.VPAHDR01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4830" ("U ", SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end


    /* ------------------------------------------------------------*/
     /* IF ROW NOT FOUND, INDICATE THE DATA WAS UPDATED BY ANOTHER.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100)
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
      PAWREC.XXXMODID = "S14";
      converseLib.validationFailed(12);
      exit stack;
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S14"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DPRODA.VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0TS-14-IO4830-U

// select set dcorp.vsumcd01
Function PA0TS-15-IO2640-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2640" ("S1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  PAWREC.XXXMODID = "S15"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCORP.VSUMCD01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0TS15"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* Formatted error key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/


end // end PA0TS-15-IO2640-S1

// fetch dcorp.vsumcd01 row
Function PA0TS-16-IO2640-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from select for Vsumcd01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2640" ("N1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  PAWREC.XXXMODID = "S16"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT SUM DIV ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0TS16"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* Formatted error key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/


end // end PA0TS-16-IO2640-N1

// close dcorp.vsumcd01
Function PA0TS-17-IO2640-C1()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2640" ("C1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/


  PAWREC.XXXMODID = "S17"; /* Module identification*/
  converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE VSUMCD01 TABLE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0TS17"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP    "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/


end // end PA0TS-17-IO2640-C1

// GET O/A HEADER  UNIQUE
Function PA0TS01()
   /* -------------------------------------------------*/
    /* SELECT SET FOR O/A HEADERS*/
   /* -------------------------------------------------*/


  try
    call "IO4830" ("S ", SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    else

      converseLib.validationFailed(10);
      set PA0TM001.PA1OANBR skip, bold;
      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1LOC = "PA0TS01 GET O/A HEADER        ";
      TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
      TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Table key*/

      if (sysVar.errorCode == "00000000" /* Call successful*/
       && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

        TA1REC.TA1FUNC = "POST"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
                                   /* Error diagnosis routine*/

      else

        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      end

      sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
      SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/
    end
  end

  exit stack;
end // end PA0TS01

// OPEN CURSOR O/A BOTOM LINE
Function PA0TS02()
   /* -----------------------------------------------------*/
   /* OPEN CURSOR O/A BOTTOM LINE*/
   /* -----------------------------------------------------*/


  /* *************************** Y2K OUT BEGIN ****************************/
  /*  */
  /* CALL IO5090 'S1',SQLCA,PA5REC (NONCSP,NOMAPS,REPLY;*/
  /*  */
  /* *************************** Y2K OUT END ******************************/
  /*  */
  /*  */
  /* *************************** Y2K IN BEGIN *****************************/
  /*  */
  try
    call "VBOTLN02" ("S1", SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    end
  end

  PAWREC.XXXMSGNO = 10;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0TS02 DELETE TYPE ONE WORK  ";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* Table view name*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/

  exit stack;
end // end PA0TS02

// FETCH O/A BOTTOM LINE
Function PA0TS03()
   /* -----------------------------------------------------*/
   /* FETCH BOTTOM LINE*/
   /* -----------------------------------------------------*/


  /*  */
  /* *************************** Y2K OUT BEGIN ****************************/
  /*  */
  /* CALL IO5090 'N1',SQLCA,PA5REC (NONCSP,NOMAPS,REPLY;*/
  /*  */
  /* *************************** Y2K OUT END **** *************************/
  /*  */
  /*  */
  /* *************************** Y2K IN BEGIN *****************************/
  /*  */
  try
    call "VBOTLN02" ("N1", SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        PA0TW01.PA0TW-END-OF-BL-FLAG = "Y";
        return;
      end
    end
  end

  PAWREC.XXXMSGNO = 10;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0TS03 FETCH O/A BOTTOMLINE  ";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* Table view name*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/

  exit stack;
end // end PA0TS03

// CLOSE O/A BOTTOM LINE
Function PA0TS04()
   /* -----------------------------------------------------*/
   /* FETCH BOTTOM LINE*/
   /* -----------------------------------------------------*/


  /*  */
  /* *************************** Y2K OUT BEGIN ****************************/
  /*  */
  /* CALL IO5090 'C1',SQLCA,PA5REC (NONCSP,NOMAPS,REPLY;*/
  /*  */
  /* *************************** Y2K OUT END ******************************/
  /*  */
  /*  */
  /* *************************** Y2K IN BEGIN *****************************/
  /*  */
  try
    call "VBOTLN02" ("C1", SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end

  PAWREC.XXXMSGNO = 10;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0TS04 CLOSE O/A BOTTOMLINE  ";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* Table view name*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/

  exit stack;
end // end PA0TS04

// OPEN SIZE REGION CURSOR
Function PA0TS05()
   /* ------------------------------------------------------------*/
   /* Select the set to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3020" ("S4", SQLCA, FB4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  PA0TM001.XXXMODID = "S05"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/


  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET          ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "S05"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCURVE01"; /* Table view name*/
  TA1REC.TA1TBLKE = FB4REC.FB4GROUP; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to display map*/


end // end PA0TS05

// FETCH SIZE REGION CURSOR
Function PA0TS06()
   /* ------------------------------------------------------------*/
   /* FETCH A ROW FROM SIZE/ REGION*/
   /* ------------------------------------------------------------*/

  try
    call "IO3020" ("N4", SQLCA, FB4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || VAGen_SQLCODE == 100)   

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  PA0TM001.XXXMODID = "S06"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/


  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH RECORD        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "S06"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCURVE01"; /* Table view name*/
  TA1REC.TA1TBLKE = FB4REC.FB4GROUP; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to display map*/


end // end PA0TS06

// CLOSE SIZE REGION CURSOR
Function PA0TS07()
   /* ------------------------------------------------------------*/
   /* CLOSE SIZE/ REGION CURSOR*/
   /* ------------------------------------------------------------*/

  try
    call "IO3020" ("C4", SQLCA, FB4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  PA0TM001.XXXMODID = "S07"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/


  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE               ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "S07"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCURVE01"; /* Table view name*/
  TA1REC.TA1TBLKE = FB4REC.FB4GROUP; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to display map*/


end // end PA0TS07

// DELETE BOTTOMLINE RECORDS
Function PA0TS08()
   /* -----------------------------------------------------*/
   /* FETCH BOTTOM LINE*/
   /* -----------------------------------------------------*/


  /*  */
  /* *************************** Y2K OUT BEGIN ****************************/
  /*  */
  /* CALL IO5090 'D ',SQLCA,PA5REC (NONCSP,NOMAPS,REPLY;*/
  /*  */
  /* *************************** Y2K OUT END ******************************/
  /*  */
  /*  */
  /* *************************** Y2K IN BEGIN *****************************/
  /*  */
  try
    call "VBOTLN02" ("D ", SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    end
  end

  PAWREC.XXXMSGNO = 10;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0TS08 DELETE O/A BOTTOMLINE ";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* Table view name*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/

  exit stack;
end // end PA0TS08

// ADD BOTTOMLINE RECORDS
Function PA0TS09()
   /* -----------------------------------------------------*/
   /* ADD BOTTOM LINE ROWS*/
   /* -----------------------------------------------------*/

  /*  */
  /* *************************** Y2K OUT BEGIN ****************************/
  /*  */
  /* CALL IO5090 'A ',SQLCA,PA5REC (NONCSP,NOMAPS,REPLY;*/
  /*  */
  /* *************************** Y2K OUT END ******************************/
  /*  */
  /*  */
  /* *************************** Y2K IN BEGIN *****************************/
  /*  */
  try
    call "VBOTLN02" ("A ", SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end
  /*  */
  /* *************************** Y2K IN END ******************************/
  /*  */

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end

  PAWREC.XXXMSGNO = 10;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0TS09  ADD   O/A BOTTOMLINE ";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* Table view name*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/

  exit stack;
end // end PA0TS09

//*** RECORD=PA0TW00 ****
// MAXIMUM NUMBER OF COLUMNS FOR THE SCREEN
// ***********************
Record PA0TW00 type basicRecord
  10 PA0TW-MAX-COLUMNS PA0TW-MAX-COLUMNS ; 
  10 PA0TW-ALLUSA-WHSE PA0TW-ALLUSA-WHSE [20] ; 
  10 PA0TW-REGION-WHSE PA0TW-REGION-WHSE [3] ; 
end // end PA0TW00

Record PA0TW01 type basicRecord
  10 PA0TWROS PA0TWROS ; 
  10 PA0TMCHS PA0TMCHS ; 
  10 PA0TTMWH PA0TTMWH ; 
  10 PA0TWRPD PA0TWRPD ; 
  10 PA0TWTAB PA0TWTAB ; 
  10 PA0TWPCA PA0TWPCA ; 
  10 PA0TWRG2 PA0TWRG2 ; 
  10 PA0TWRG4 PA0TWRG4 ; 
  10 PA0TWRG7 PA0TWRG7 ; 
  10 PA0TWBL2 PA0TWBL2 [40] ; 
  10 PA0TWBL4 PA0TWBL4 [40] ; 
  10 PA0TWBL7 PA0TWBL7 [40] ; 
  10 PA0TWAD2 PA0TWAD2 [40] ; 
  10 PA0TWAD4 PA0TWAD4 [40] ; 
  10 PA0TWAD7 PA0TWAD7 [40] ; 
  10 PA0TWPCT PA0TWPCT ; 
  10 PA0TNMWH PA0TNMWH ; 
  10 PA0TWYM PA0TWYM ; 
    15 PA0TWYY PA0TWYY ; 
    15 PA0TWMM PA0TWMM ; 
  10 PA0TWX1 PA0TWX1 ; 
  10 PA0TWX2 PA0TWX2 ; 
  10 PA0TWX3 PA0TWX3 ; 
  10 PA0TWX4 PA0TWX4 ; 
  10 PA0TW-BL-WITH-OAS1 PA0TW-BL-WITH-OAS1 [40] ; 
  10 PA0TW-BL-WITH-OAS2 PA0TW-BL-WITH-OAS2 [40] ; 
  10 PA0TW-BL-WITH-OAS3 PA0TW-BL-WITH-OAS3 [40] ; 
  10 PA0TW-USE-THIS-OA PA0TW-USE-THIS-OA ; 
  10 XX1 XX1 ; 
  10 XX2 XX2 ; 
  10 XX3 XX3 ; 
  10 XX4 XX4 ; 
  10 XX5 XX5 ; 
  10 PA0TIDX1 PA0TIDX1 ; 
  10 PA0TIDX2 PA0TIDX2 ; 
  10 PT3YYMM PT3YYMM ; 
  10 PA1BUYMO PA1BUYMO ; 
  10 PA0TW-END-OF-BL-FLAG PA0TW-END-OF-BL-FLAG ; 
  10 PA0TW-MYM PA0TW-MYM ; 
    15 PA0TW-MYY PA0TW-MYY ; 
    15 PA0TW-MMM PA0TW-MMM ; 
  10 * num(1) ; // MM-Y2K
end // end PA0TW01

//*** RECORD=PA0TW02 ****
// ****************** ORDER ADJUSTMENT HEADER *****************
// THIS RECORD IS USED TO PASS PARMS TO PA1050.  THIS IOMOD
// JOINS THE DPRODA.VPAHDR01 AND THE DPRODA.VBOTLN01 TABLES.
// IT RETURNS THE BOTTOM LINE RECORDS FOR ALL OPEN O/AS BY
// WAREHOUSE.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 11/30/92   MSMIT2   New record.
// 05/10/93   MSMIT2   PA0330 - ADD CURRENT DATE TO THIS
//                     RECORD. IOMOD PA1050 NEEDS IT.
// ***********************
Record PA0TW02 type basicRecord
  10 PA0TW-TASK PA0TW-TASK ; 
  10 PA1OANBR PA1OANBR ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 XWHCD XWHCD ; 
  10 PA0TW-CURRENT-DATE PA0TW-CURRENT-DATE ; 
end // end PA0TW02

// index  5
DataItem PA0TIDX1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index  5
DataItem PA0TIDX2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WAREHOUSE FOUND SWITCH
DataItem PA0TMCHS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NUMBER OF ACTIVE USA WHSES
DataItem PA0TNMWH smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WAREHOUSE FOUND SWITCH
DataItem PA0TTMWH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0TW-ALLUSA-WHSE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CURR 02 B/L WITH OPEN O/AS
DataItem PA0TW-BL-WITH-OAS1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CURR 04 B/L WITH OPEN O/AS
DataItem PA0TW-BL-WITH-OAS2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CURR 07 B/L WITH OPEN O/AS
DataItem PA0TW-BL-WITH-OAS3 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CURRENT DATE
DataItem PA0TW-CURRENT-DATE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0TW-END-OF-BL-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0TW-MAX-COLUMNS int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// MM-Y2K
DataItem PA0TW-MMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// YYMM-Y2K
DataItem PA0TW-MYM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// YY-Y2K
DataItem PA0TW-MYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0TW-REGION-WHSE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IO-PASS TASK
DataItem PA0TW-TASK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0TW-USE-THIS-OA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ADJUSTMENTS WHSE 02
DataItem PA0TWAD2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ADJUSTMENTS WHSE 04
DataItem PA0TWAD4 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ADJUSTMENTS WHSE 07
DataItem PA0TWAD7 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// BOTTOMLINE WHSE 02
DataItem PA0TWBL2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// BOTTOMLINE WHSE 04
DataItem PA0TWBL4 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// BOTTOMLINE WHSE 07
DataItem PA0TWBL7 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// BUILD MONTH
DataItem PA0TWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PERCENT WORK AREA
DataItem PA0TWPCA num(8,5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WORK PERCENTAGE
DataItem PA0TWPCT decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// fb-reg-pctFOR WHSE 02
DataItem PA0TWRG2 decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FB-REG-PCT FOR WHSE 04
DataItem PA0TWRG4 decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FB-REG-PCT FOR WHSE 07
DataItem PA0TWRG7 decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// READ ONLY SWITCH
DataItem PA0TWROS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// REQUEST TO PROCESS DATA
DataItem PA0TWRPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TOTAL ADJUSTED BOTTOMLINE
DataItem PA0TWTAB int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// INDEX 1
DataItem PA0TWX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// INDEX 2
DataItem PA0TWX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// INDEX 3
DataItem PA0TWX3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// INDEX 4
DataItem PA0TWX4 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// BUILD DATE FOR XPPAX210
DataItem PA0TWYM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// BUILD YEAR
DataItem PA0TWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

