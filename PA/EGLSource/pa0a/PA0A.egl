package pa0a;
import corpcom1.CAITEM;
import corpcom1.CATOAP;
import corpcom2.XP0CW01;
import corpcom2.XX0XW01;
import corpcom2.YSMREC;
import corpcom3.XPPA001;
import corpcom3.XPPA020;
import corpcom3.XPPA100;
import corpcom4.XSPAS01;
import corpcom4.XSPAS04;
import corpcom4.XSPG202;
import corpcom4.XSPG301;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XX1;
import corpcom7.XX2;
import corpcom7.XX3;
import corpcom7.XX4;
import corpcom7.XX5;
import corpcom7.XX6;
import corpcom7.XX7;
import corpcom7.XX8;
import corpcom7.XX9;
import corpcom7.XXXMODID;
import corpcom7.XXXMSGNO;
import corpcom7.XXXTSPAG;
import corpcom7.ZZZSTM;
import corpx1.XCTTBL;
import corpx1.XDMCD;
import corpx1.XDSCD;
import corpx1.XFRCD;
import corpx1.XWHTBL;
import corpx2.XWHCD;
import corpy2.YESCD;
import corpy2.YESSDESC;
import corpy2.YESTBL;
import corpy2.YETCD;
import corpy2.YETSDESC;
import corpy2.YETTBL;
import corpy2.YMTCD;
import corpy2.YMTTBL;
import corpy2.YTRTBL;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import fb.common.FB-LATE-BK-FL;
import fb.common.FB-LATE-BK-FL-MDT;
import fb.common.FB9REC;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import fy.common.FYBREC;
import op.common.OP1CUOID;
import op.common.OP1NORID;
import op.common.OP1PARTN;
import pa.common.*;
import pa.common.PA0PWAGP;
import pa.common.PA0PWBGP;
import pa.common.PA0PWJGP;
import pa.common.PA1HLDFL;
import pa.common.PA1OANBR;
import pa.common.PA1REC;
import pa.common.PA1RQQTY;
import pa.common.PA2REC;
import pa.common.PA2SZQTY;
import pa.common.PA5REC;
import pa.common.PA9REC;
import pa.common.PACADDRS;
import pa.common.PACADJQT;
import pa.common.PACFBQTY;
import pa.common.PACFLADJ;
import pa.common.PACFPCIT;
import pa.common.PACFPONO;
import pa.common.PACGRPCD;
import pa.common.PACORDTY;
import pa.common.PACREC;
import pa.common.PACSEVAL;
import pa.common.PACWRKQT;
import pa.common.PAWBUYDT;
import pa.common.PAWREC;
import pc.common.PC2CUXID;
import pc.common.PC2INSEG;
import pc.common.PC2REC;
import pc.common.PC3POIDT;
import pc.common.PC3PONBR;
import pc.common.PC3REC;
import pc.common.PC4ORTYP;
import pc.common.PC6ETSDT;
import pc.common.PC6ITMNB;
import pc.common.PC6REC;
import pc.common.PC6RTADT;
import pg.common.PG2REC;
import pg.common.PG3REC;
import pt.common.PT3YYMM;
import sy.common.SY1STNBR;
import sy.common.SY2CLRID;
import sy.common.SY4IDDSC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TA6REC;
import ta.common.TAEREC;
import ta.common.TARREC;

//*** PROGRAM=PA0A ****
// This application is designed to allow users to inquire and
// update the ETS dates on the O/A item records.
// 
// The user may exit to another application at any time VIA
// fastpath or PF key.
// 
// ------------------------------------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// PA0300   06/09/93  MSMIT2  NEW APPLICATION
// 000001   08/09/93  MSMIT2  DATABASE CHANGES - ADD SETUP TIME
//                            TO SCREEN.
// 000002   10/02/93  MSMIT2  CSPV4.1 - SET MAP PAGE. THIS SETS
//                            THE MAP ATTRIBUTES TO NORMAL
//                            AFTER A POPUP.
// PA9999   01/24/95  MSMIT2  EUROPEAN O/AS - INQUIRY ONLY.
// PA0299   10/02/96  RKUDPI  Added/modified code to accomodate
//                            the whse for hockey equipment.
// PA9999   11/12/96  WROBIN  Remove hard error for no whses
//                            found for style/color.
// PA1106   06/30/97  WROBIN  AF Request Drop Dead Date
// PA1267   08/01/97  WROBIN  Remove AF Request Drop Dead Date
// ------- -------- ------ ----------------------------------
// Y2KFIX  01/08/98 CSAWKI MODIFICATIONS MADE TO: PA0AM001,
//                         PA0AM002, PA0AM003, PA0AW00,
//                         PA0AS-11-IO5090-S.
//          07/18/00  GREDDY  FIX PO-ID PO-NBR COUPLING BREAK.
//                            NSC CHANGES.
// 
// *********************
Program PA0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FB9REC FB9REC; // record
  FY1REC FY1REC; // record
  FYBREC FYBREC; // record
  PA0AW00 PA0AW00; // record
  PA0AW01 PA0AW01; // record
  PA0AW02 PA0AW02; // record
  PA0AW03 PA0AW03; // record
  PA0AW04 PA0AW04; // record
  PA0AW05 PA0AW05; // record
  PA0AW06 PA0AW06; // record
  PA0AW07 PA0AW07; // record
  PA1REC PA1REC; // record
  PA2REC PA2REC; // record
  PA4REC PA4REC; // record
  PA5REC PA5REC; // record
  PA9REC PA9REC; // record
  PACREC PACREC; // record
  PACRECR1 PACRECR1 { redefines = PACREC } ; // record
  PAWREC PAWREC; // record
  PC2REC PC2REC; // record
  PC3REC PC3REC; // record
  PC6REC PC6REC; // record
  PG2REC PG2REC; // record
  PG3REC PG3REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  TARREC TARREC; // record
  XP0CW01 XP0CW01; // record
  XX0XW01 XX0XW01; // record
  YSMREC YSMREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PABTBL; // table
  use XCTTBL; // table
  use XWHTBL; // table
  use YESTBL; // table
  use YETTBL; // table
  use YMTTBL; // table
  use YTRTBL; // table
  use PA0AM.PA0AM001,  // forms
      PA0AM.PA0AM002, 
      PA0AM.PA0AM003,
      PA0AM.XMPAM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPA001: XPPA001();
     /* -------------------------------------------------------*/
      /* INITIALIZE WORKING STORAGE AND DISPLAY STORAGE*/
     /* -------------------------------------------------------*/

    set SQLCA empty;
    set PA0AW00 empty; /* working storage*/
    set PA0AW01 empty; /* M001 header display storage*/
    set PA0AW02 empty; /* O/A ITEM RECORDS*/
    set PA0AW03 empty; /* O/A ITEM RECORD*/
    set PA0AW04 empty; /* Temp storage*/
    set PA0AW05 empty; /* MAP 2 WORKING STORAGE*/
    set PA0AW06 empty; /* SAVE TYPE '9' WORK RECORDS*/
    set PA0AW07 empty; /* MAP 3 WORKING STORAGE*/
    set TAEREC empty; /* error diagnosis information*/
    set TA1REC empty; /* error diagnosis parameters*/
    set TA5REC empty; /* temp storage queue area*/
    set XX0XW01 empty; /* date/time subroutine parameters*/

    set PA0AM001 initial; /* clear map m001*/
    set PA0AM002 initial; /* clear map m002- SIZE DETAIL*/

     /* ------------------------------------------------------------*/
     /* INITIALIZE PA0AW00 FLAGS*/
     /* ------------------------------------------------------------*/

    PA0AW00.PA0AW-REQ-FOR-DATA-FLAG = "N";
    PA0AW00.PA0AW-KEY-CHANGED = "N";
    PA0AW00.PA0AW-DB2-ERROR = "N";
    PA0AW00.PA0AW-CONFIRM-MSG-SHOWN = "N";
    PA0AW00.PA0AW-TEMP-PAGE-PRINTED = "N";
    PA0AW00.PA0AW-READ-ONLY = "N";
    PA0AW00.PA0AW-DISPLAY-MAP = "1";

    XPPA020: XPPA020();
    PA0A-001: PA0A-001();
    PA0A-002: PA0A-002();

    goto PA0A-001;

  end // end main
end // end PA0A

// SPECIAL INITIALIZATION
Function PA0A-001()
   /* ------------------------------------------------------------*/
   /* This process will perform any special initialization that*/
   /* is unique to the application.*/
   /* ------------------------------------------------------------*/

  PA0AW00.XXXMODID = PAWREC.XXXMODID;

   /* PAWREC.PAWOANBR cnntains only one oa number*/

  if (PAWREC.PAWOANBR > 0) /* If OA number passed in commarea*/
    if (PAWREC.XXXMSGNO == 0)
      PA0AW00.PA1OANBR = PAWREC.PAWOANBR;
      PA0AW00.PA0AW-REQ-FOR-DATA-FLAG = "Y";
      PA0AW00.PA0AW-KEY-CHANGED = "Y";
    else
      if (PAWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(PAWREC.XXXMSGNO);
      end

    end

  end

  PAWREC.PAWOANBR = 0;
  PAWREC.PAWEXTRA = " ";

   /* 12/19/94: DETERMINE THE VALID WAREHOUSE CODES FROM REGION*/
   /* GET THE WAREHOUSE CODES FROM THE DCORP.VSUMCD01 TABLE.*/
   /* XXX_TBL_PFX = 'XWH', XXX_SYS_PFX = 'FB', XXX_SUM_ID = 1,*/
   /* AND XXX_SUM_CD = REGION.*/
   /*  */
   /* MAKE SURE THE WAREHOUSE HAS ACTIVE STATUS ON YSMREC AND XWHTBL.*/

  set YSMREC empty;

  YSMREC.YSMTBLPF = "XWH";
  YSMREC.YSMSYSPF = "FB";
  YSMREC.YSMSUMID = 1;
  YSMREC.YSMSRCVL = "****";

   /* IF EUROPEAN O/A, DEFAULT REGION TO '02'*/

  if (PA0AW00.PA1OANBR > 199999
   && PA0AW00.PA1OANBR < 300000)
    YSMREC.YSMSUMCD = "02";
  else
    YSMREC.YSMSUMCD = "01";
  end

  PA0AS-18-IO2640-S1();

  PA0AS-19-IO2640-N1();

  PA0AW00.XX4 = 0;
  while (SQLCA.VAGen_SQLCODE == 0)
    if (YSMREC.XXXSTAT == "A") /* ACTIVE WAREHOUSE*/
        /* MAKE SURE THE WAREHOUSE IS ACTIVE ON THE XWHTBL ALSO*/
      if (YSMREC.YSMSRCVL in XWHTBL.XWHCD)
        if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          PA0AW00.XX4 = PA0AW00.XX4 + 1;
          PA0AW00.PA0AW-ALLUSA-WHSE[XX4] = YSMREC.YSMSRCVL;
        end
      end
    end
    PA0AS-19-IO2640-N1();
  end

  PA0AS-20-IO2640-C1();

  PA0AW00.PA0ANMWH = PA0AW00.XX4;

  PA0AW00.PAWBUYDT = PAWREC.PAWBUYDT; /* Current buy date*/

  XX0XS01(); /* Obtain current date*/

end // end PA0A-001

// PROCESS SELECTION
Function PA0A-002()
   /* ------------------------------------------------------------*/

   /* 1) obtain data*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  PA0A-100(); /* Obtain the data to display*/

  PA0A-200(); /* Format and display the map*/

  PA0A-300(); /* Check attention identifier*/

  PA0A-400(); /* Reset fields to normal intensity*/

  PA0A-500(); /* Verify the entered data*/

  PA0A-600(); /* Process valid input request*/


end // end PA0A-002

// OBTAIN THE DATA TO DISPLAY
Function PA0A-100()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set(s) to be formatted*/
   /* Fetch and format the data in the working storage*/
   /* At end of rows, close the selected set cursor.*/
   /* If no data found, display error message and return to*/
   /* previous process.*/
   /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/

   /* IF A DB2 ERROR HAS OCCURRED, EXIT AND DISPLAY THE MAP*/

  if (PA0AW00.PA0AW-DB2-ERROR == "Y"
   && converseVar.validationMsgNum != 0)
    return;
  else
    PA0AW00.PA0AW-DB2-ERROR = "N";
  end

   /* IF SIZE DETAIL MAP REQUESTED, SKIP THIS PROCESSING*/

  if (PA0AW00.PA0AW-DISPLAY-MAP == "2"
   || PA0AW00.PA0AW-DISPLAY-MAP == "3")
    return;
  end

  if (PA0AW00.PA0AW-REQ-FOR-DATA-FLAG == "Y" /* DATA REQUESTED*/
   && converseVar.validationMsgNum == 0)     /* AND NO ERRORS*/
    PA0A-110();
  end

   /* PA0A-120 CLEARS OUT TEMP STORAGE AND GETS FRESH DATA. THIS*/
   /* IS A PROBLEM IF THE USER HAS SELECTED AN ITEM ON THE SCREEN.*/
   /* IN THIS CASE, EXIT WITHOUT OBTAINING THE NEW DATA.*/

  if (PA0AW00.PA1OANBR == 0
   || converseVar.validationMsgNum != 0
   || PA0AW00.PA0AW-KEY-CHANGED == "N")
    return;
  end

  PA0A-120(); /* DISPLAY INFORMATION*/


   /* ------------------ End of Process PA0A-100 -----------------*/

end // end PA0A-100

// OBTAIN HEADER INFORMATION
Function PA0A-110()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set(s) to be formatted*/
   /* Fetch and format the data in the working storage*/
   /* At end of rows, close the selected set cursor.*/
   /* If no data found, display error message and return to*/
   /* previous process.*/
   /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/

  set PA1REC empty; /* Clear header record*/
  set PA0AW01 empty; /* clear 1- MAP*/
  set PA0AW02 empty; /* clear 1- MAP*/

  PA1REC.PA1OANBR = PA0AW00.PA1OANBR;

  PA0AS-01-IO4830-S();

  if (SQLCA.VAGen_SQLCODE == 100) /* OA not found*/
    set PA0AM001.PA1OANBR cursor, bold;
    converseLib.validationFailed(50); /* THIS O/A NUMBER DOES NOT EXIST*/
    PAWREC.XXXMODID = "100";

    set PA0AW01 empty;
    PA0AW00.PA0AW-REQ-FOR-DATA-FLAG = "N";
    PA0AW00.PA0AW-KEY-CHANGED = "N";

      /* PURGE TEMP STORAGE*/

    PA0AS-02-TA0050-P();

    return;

  end

  set PG2REC empty;
  PG2REC.SY1STNBR = PA1REC.SY1STNBR;
  PG2REC.SY2CLRID = PA1REC.SY2CLRID;
  PG2REC.XDMCD = PA1REC.XDMCD;
  PG2REC.XGPCD = "02";

  XSPG202();

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(26);
    PA0AW00.PA0AW-DB2-ERROR = "Y";
    return;
  end

   /* Load OA header information into working storage*/

  PA0AW01.YESCD = PA1REC.YESCD;
  PA0AW01.PA1HLDFL = PA1REC.PA1HLDFL;
  PA0AW01.YETCD = PA1REC.YETCD;
  PA0AW01.SY1STNBR = PA1REC.SY1STNBR;
  PA0AW01.SY2CLRID = PA1REC.SY2CLRID;
  PA0AW01.XDMCD = PA1REC.XDMCD;
  PA0AW01.PA1RQQTY = PA1REC.PA1RQQTY;
  PA0AW01.YESCD = PA1REC.YESCD;
  PA0AW01.PA0AW-OA-ZZ-SDT = PA1REC.ZZZSDT;
  PA0AW01.PA0AW-OA-ZZ-SETUP-HHMM = PA1REC.ZZZSTM;

  if (PA1REC.YESCD in YESTBL.YESCD)
    PA0AW01.YESSDESC = YESTBL.YESSDESC[sysVar.arrayIndex];
  else
    PA0AW01.YESSDESC = " ";
  end

  if (PA1REC.YETCD in YETTBL.YETCD)
    PA0AW01.YETSDESC = YETTBL.YETSDESC[sysVar.arrayIndex];
  else
    PA0AW01.YETSDESC = " ";
  end

   /* DETERMINE WHAT THE MAP PO ID RANGE IS BASED ON THE O/A HEADER*/
   /* BUY MONTH.  IF THE BUY MONTH IS 199201, THE BUY MONTH RANGE*/
   /* IS 19911101.  KEEP IN MIND THE PO ID FOR OVERRURN O/AS HAS*/
   /* THE FORM FY0605.*/

  PA0AW00.PA0AW-PA1BUYMO = PA1REC.PA1BUYMO;
  PA0AW01.PA0AW-PO-ID-DASH1 = "-";
  PA0AW01.PA0AW-PO-ID-DASH2 = "-";

  if (PA1REC.YETCD == "OR"
   || PA1REC.YETCD == "NO")
    PA0AW01.PA0AW-PO-ID-YY = PA0AW00.PA0AW-PA1BUYMO-YY;
    PA0AW01.PA0AW-PO-ID-MM = PA0AW00.PA0AW-PA1BUYMO-MM;
    PA0AW01.PA0AW-PO-ID-BUY-MM = "05";
  else

    PA0AW01.PA0AW-PO-ID-BUY-MM = PA0AW00.PA0AW-PA1BUYMO-MM;

    PA0AW00.PA0AW-CALC-MM = PA0AW00.PA0AW-PA1BUYMO-MM - 2;

    if (PA0AW00.PA0AW-CALC-MM <= 0)
      if (PA0AW00.PA0AW-PA1BUYMO-YY == 0)
        PA0AW00.PA0AW-CALC-YY = 99;
      else
        PA0AW00.PA0AW-CALC-YY = PA0AW00.PA0AW-PA1BUYMO-YY - 1;
      end
      PA0AW01.PA0AW-PO-ID-YY = PA0AW00.PA0AW-CALC-YY;
      PA0AW00.PA0AW-CALC-MM = PA0AW00.PA0AW-CALC-MM + 12;
    else
      PA0AW01.PA0AW-PO-ID-YY = PA0AW00.PA0AW-PA1BUYMO-YY;
    end

    PA0AW01.PA0AW-PO-ID-MM = PA0AW00.PA0AW-CALC-MM;

  end

  PA0AW00.PA0AIDX1 = 1;
  PA0AW00.XX4 = 0;

  while (PA0AW00.PA0AIDX1 <= PA0AW00.PA0ANMWH)
    PA0AW00.PA0AIDX2 = 1;
    PA0AW00.PA0AMCHS = "N";
    while (PA0AW00.PA0AIDX2 <= 6 && 
    PA0AW00.PA0AMCHS == "N")
      if (PA0AW00.PA0AW-ALLUSA-WHSE[PA0AIDX1] == PG2REC.XWHCD[PA0AIDX2])
        PA0AW00.XX4 = PA0AW00.XX4 + 1;
        if (PA0AW00.XX4 > 3)
          converseLib.validationFailed(351);
          PA0AW00.PA0AW-DB2-ERROR = "Y";
          return;
        else
          PA0AW00.PA0AW-REGION-WHSE[XX4] = PA0AW00.PA0AW-ALLUSA-WHSE[PA0AIDX1];
          PA0AW00.PA0AMCHS = "Y";
        end
      end
      PA0AW00.PA0AIDX2 = PA0AW00.PA0AIDX2 + 1;
    end
    PA0AW00.PA0AIDX1 = PA0AW00.PA0AIDX1 + 1;
  end
   /* IF PA0AW00.XX4 = 0;*/
   /* MOVE 352 TO EZEMNO;*/
   /* MOVE 'Y' TO PA0AW00.PA0AW-DB2-ERROR;*/
   /* EZERTN;*/
   /* END;*/

   /* FIND BOTTOM LINE INFORMATION*/

  set PA5REC empty;
  PA5REC.PA1OANBR = PA1REC.PA1OANBR;
  PA5REC.XWHCD = PA0AW00.PA0AW-REGION-WHSE[1];

  PA0AS-11-IO5090-S();

  if (SQLCA.VAGen_SQLCODE == 0)
    PA0AW01.PT3YYMM = PA5REC.PT3YYMM;
    PA0AW01.PA0AW-BL-ZZ-SDT = PA5REC.ZZZSDT;
  else
    PA0AW01.PT3YYMM = 0;
    PA0AW01.PA0AW-BL-ZZ-SDT = 0;
  end

   /* GET THE BACK OUT QUANTITY*/

  set PACREC empty;

  PACREC.PA1OANBR = PA1REC.PA1OANBR;
  PACREC.PACSEVAL = "*";
  PACREC.PACORDTY = "*";
  PACREC.ZZZSDT = -1;
  PACREC.ZZZSTM = -1;

  PA0AS-12-IO4950-S1();

  PA0AS-13-IO4950-N1();

  PA0AW01.PA0AW-TOTAL-ADJUST = 0;

  set PA0AW06 empty;
  PA0AW00.XX2 = 1; /* USED TO LOAD THE TYPE '9' WORK RECORDS.*/

  while (SQLCA.VAGen_SQLCODE == 0)

    PA0A-11001();

    PA0AS-13-IO4950-N1();

  end

  PA0AW00.PA0AW-NUM-TYPE-NINE = PA0AW00.XX2 - 1;

  PA0AS-14-IO4950-C1();

   /* ------------------ End of Process PA0A-110 -----------------*/

end // end PA0A-110

// CALCULATE THE TOTAL ADJ QTY
Function PA0A-11001()
   /* ------------------------------------------------------------*/
   /* CALCULATE THE TOTAL ADJUSTMENT QUANTITY.*/
   /* ------------------------------------------------------------*/

  if (PACREC.PACORDTY == "3") /* BACK OUT QUANTITY*/
    PA0AW01.PA0AW-TOTAL-ADJUST = PA0AW01.PA0AW-TOTAL-ADJUST +                                 PACREC.PACFBQTY;
    return;
  end

   /* SAVE TYPE '9' WORK RECORDS*/

  if (PACREC.PACORDTY == "9"
   && PA0AW00.XX2 <= 100)
    PA0AW06.PACRECG1[XX2] = PACRECR1.PACRECG1;
    PA0AW06.PA0AW-ITEM-MATCHED[XX2] = "N";
    PA0AW00.XX2 = PA0AW00.XX2 + 1;
    return;
  end

  if (PACREC.PACORDTY != "6" /* ORIGINAL PO ITEM*/
   && PACREC.PACORDTY != "7" /* MANUAL ADJUSTMENT ITEM*/
   && PACREC.PACORDTY != "8") /* CALCED ITEM*/
    return;
  end

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 40)
    if (PACREC.PACORDTY == "6")
      PA0AW01.PA0AW-TOTAL-ADJUST = PA0AW01.PA0AW-TOTAL-ADJUST +                                    PACREC.PACFLADJ[sysVar.arrayIndex];
    else
      PA0AW01.PA0AW-TOTAL-ADJUST = PA0AW01.PA0AW-TOTAL-ADJUST +                                    PACREC.PACWRKQT[sysVar.arrayIndex] +                                    PACREC.PACFLADJ[sysVar.arrayIndex];
    end

    sysVar.arrayIndex = sysVar.arrayIndex + 1;

  end

   /* ------------------ End of Process PA0A-11001 ---------------*/

end // end PA0A-11001

// OBTAIN O/A ITEM INFO
Function PA0A-120()
   /* ------------------------------------------------------------*/
   /* CLEAR OUT TEMP STORAGE.*/
   /* ------------------------------------------------------------*/

  PA0AS-02-TA0050-P();

  set PA2REC empty;

  PA2REC.PA1OANBR = PA1REC.PA1OANBR;
  PA2REC.YESCD = "*"; /* ALL STATUS CODES*/

  set PA0AW02 empty;

  PA0AS-04-IO4980-S1();

  PA0AS-05-IO4980-N1();

  if (SQLCA.VAGen_SQLCODE == 0)
    PA0AW01.PA0AW-ITEM-ZZ-SDT = PA2REC.ZZZSDT;
    PA0AW01.PA0AW-ITEM-ZZ-STM = PA2REC.ZZZCHGTM;
  end

  PA0AW00.XX1 = 0; /* TEMP STORAGE INDEX*/

  while (SQLCA.VAGen_SQLCODE == 0)

    if (PA0AW00.XX1 < 12)

      PA0AW00.XX1 = PA0AW00.XX1 + 1;

      PA0A-12001(); /* LOAD O/A INFO INTO WORKING STORAGE*/

    else
         /* MUST WRITE PAGE TO TEMP STORAGE*/

      PA0A-12002();

      PA0A-12001(); /* LOAD O/A INFO INTO WORKING STORAGE*/

    end

    PA0AS-05-IO4980-N1();

  end

  PA0AS-06-IO4980-C1();

   /* WRITE LEFT OVER INFO TO TEMP STORAGE*/

  if (PA0AW00.XX1 > 0)

    PA0A-12002();

  end

   /* ------------------ End of Process PA0A-120 -----------------*/

end // end PA0A-120

// LOAD O/A ITEM INFO TO WS
Function PA0A-12001()
   /* ------------------------------------------------------------*/

  PA0AW02.PA0AW-TYPE[XX1] = "OA";
  PA0AW02.PC3PONBR[XX1] = PA2REC.PC3PONBR;
  PA0AW02.PC6ITMNB[XX1] = PA2REC.PC6ITMNB;
  PA0AW02.XDSCD[XX1] = PA2REC.XDSCD;
  PA0AW02.FY1FCTYC[XX1] = PA2REC.FY1FCTYC;
  PA0AW02.PC3POIDT[XX1] = PA2REC.PC3POIDT;
  PA0AW02.XWHCD[XX1] = PA2REC.XWHCD;
  PA0AW02.PC2CUXID[XX1] = PA2REC.PC2CUXID;
  PA0AW02.PC6RTADT[XX1] = PA2REC.PC6RTADT;
  PA0AW02.PA0AW-OLD-PC-EST-HDT[XX1] = PA2REC.PC6ETSDT;
  PA0AW02.PA0AW-NEW-PC-EST-HDT[XX1] = PA2REC.PA-UPD-PC-EST-HDT;
  PA0AW02.PA0AW-ETS-UPDATED[XX1] = "N"; /* INITIALIZE FLAG*/
  PA0AW02.PC2INSEG[XX1] = PA2REC.PC2INSEG;
  PA0AW02.YMTCD[XX1] = PA2REC.YMTCD;
  PA0AW02.OP1PARTN[XX1] = PA2REC.OP1PARTN;
  PA0AW02.OP1CUOID[XX1] = PA2REC.OP1CUOID;
  PA0AW02.OP1NORID[XX1] = PA2REC.OP1NORID;

  PA0AW00.PA0AW-QUANTITY-GRP = 0;
  PA0AW00.XX2 = 1;
  while (PA0AW00.XX2 <= 40)
    PA0AW00.PA0AW-QTY[XX2] = PA2REC.PA2SZQTY[XX2];
    PA0AW00.XX2 = PA0AW00.XX2 + 1;
  end

  PA0AW02.PA0AW-QUANTITY-GRP[XX1] = PA0AW00.PA0AW-QUANTITY-GRP;

   /* ------------------ End of Process PA0A-12001 ---------------*/

end // end PA0A-12001

// WRITE TEMP STORAGE
Function PA0A-12002()
   /* ------------------------------------------------------------*/
   /* WRITE TO TEMP STOARGE.*/
   /* ------------------------------------------------------------*/

  PA0AW00.PA0AW-MAX-PAGES = PA0AW00.PA0AW-MAX-PAGES + 1;

  PA0AW00.XX2 = 1;
  while (PA0AW00.XX2 <= 12
   && PA0AW00.XX2 <= PA0AW00.XX1)
    PA0AW04.PA0AW-TEMP-STORE-GRP[XX2] = PA0AW02.PA0AW-TEMP-OA-GROUP[XX2];
    PA0AW00.XX2 = PA0AW00.XX2 + 1;
  end

  PA0AS-09-TA0050-A();

  set PA0AW02 empty;

  PA0AW00.XX1 = 1;

   /* ------------------ End of Process PA0A-12002 ---------------*/

end // end PA0A-12002

// Format and display the map
Function PA0A-200()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (PA0AW00.PA0AW-DISPLAY-MAP == "2")
    PA0A-205();
    return;
  end

  if (PA0AW00.PA0AW-DISPLAY-MAP == "3")
    PA0A-207();
    return;
  end

   /* USERS REQUESTED THAT THE HOLD FLAG BE HIGHLIGHTED IF THE O/A*/
   /* IS ON HOLD.*/

  if (PA0AW01.PA1HLDFL == "Y")
    set PA0AM001.PA1HLDFL bold, protect;
  end

  if (converseVar.validationMsgNum == 0  /* No errors*/
   || converseVar.validationMsgNum == 50 /* THIS O/A NUMBER DOES NOT EXIST*/
   || converseVar.validationMsgNum == 223) /* CAN'T SELECT ITEMS IF HEADER CHANGED*/

    PA0A-210(); /* LOAD HEADER INFORMATION*/

    if (converseVar.validationMsgNum == 223) /* CANT SELECT ITEMS IF HEADER CHANGED*/
      set PA0AM001.PA0AM-SELECT[1] cursor;
    end

    if (PA0AW00.PA0AW-MAX-PAGES > 0)

        /* CHECK TO SEE IF PF7 OR PF8 PRESSED.  THIS IS SO THAT EVEN*/
        /* IF THERE ARE ERRORS, PAGING IS ALLOWED.*/

      if (converseVar.eventKey is pf7
       || converseVar.eventKey is pf8)
        PA0AM001.XXXTSPAG = PA0AW00.PA0AW-CURRENT-TS-PAGE;
      end

      PA0A-220(); /* FORMAT DATA IN BODY OF MAP*/

    else /* PROTECT SELECTION FIELD*/

      sysVar.arrayIndex = 1;
      while (sysVar.arrayIndex <= 12)
        set PA0AM001.PA0AM-SELECT[sysVar.arrayIndex] skip, invisible;
        set PA0AM001.PA0AM-NEW-PC-EST-HDT[sysVar.arrayIndex] skip, invisible;
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end

    end

  else

    PAWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/

    if (PA0AW00.PA0AW-DB2-ERROR == "Y")
      PA0A-210(); /* LOAD HEADER INFORMATION*/
    end

    if (converseVar.validationMsgNum == 15) /* NO DATA FOUND TO DISPLAY*/
      PA0A-210(); /* LOAD HEADER INFORMATION*/
      set PA0AM001.XXXLITPG skip, invisible;
      set PA0AM001.XXXTSPAG skip, invisible;
      set PA0AM001.XXXLITOF skip, invisible;
      set PA0AM001.TA5TSQIX skip, invisible;

    else

        /* CHECK TO SEE IF PF7 OR PF8 PRESSED.  THIS IS SO THAT EVEN*/
        /* IF THERE ARE ERRORS, PAGING IS ALLOWED.*/

      if (converseVar.eventKey is pf7
       || converseVar.eventKey is pf8)
        if (converseVar.validationMsgNum != 2 /* NO PREVIOUS PAGES TO DISPLAY*/
         && converseVar.validationMsgNum != 3) /* NO MORE PAGES TO DISPLAY*/
          PA0AM001.XXXTSPAG = PA0AW00.PA0AW-CURRENT-TS-PAGE;
          PA0A-220(); /* FORMAT DATA IN BODY OF MAP*/
        end
      end

      sysVar.arrayIndex = 1;

      while (sysVar.arrayIndex <= 12)
        if (PA0AW04.PA0AW-TYPE[sysVar.arrayIndex] != "OA")
          set PA0AM001.PA0AM-SELECT[sysVar.arrayIndex] skip, invisible;
          set PA0AM001.PA0AM-NEW-PC-EST-HDT[sysVar.arrayIndex] skip, invisible;
        end
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end

    end

  end

  if (PAWREC.XXXMSGNO != 0)

    PA0AM001.XXXMODID = PAWREC.XXXMODID;
    if (PAWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PAWREC.XXXMSGNO);
    end /* Message number*/
    PAWREC.XXXMSGNO = 0;
    set PA0AM001 alarm; /* Indicate sound alarm*/

  end

  if (PA0AM001.PA1OANBR > 199999
   && PA0AM001.PA1OANBR < 300000)
    set PA0AM001.PA0AM-PF9-LABEL skip, invisible;
  end

  converse PA0AM001 ;

  PAWREC.XXXMODID = " "; /* Module id*/
  PA0AW00.XXXMSGNO = 0; /* Reset message number*/

  COMMAREA.CATOAP = PA0AM001.CATOAP; /* To application*/
  COMMAREA.CAITEM = PA0AM001.CAITEM; /* Application data*/

   /* ------------------ end of process PA0A-200 -----------------*/

end // end PA0A-200

// Format and display MAP2
Function PA0A-205()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  converseLib.clearScreen();

  PA0AM002.FB8BUYDT = PAWREC.PAWBUYYM;
  PA0AM002.XXXCURDT = VGVar.currentShortGregorianDate;

  converse PA0AM002 ;

  PAWREC.XXXMODID = " "; /* Module id*/
  PA0AW00.XXXMSGNO = 0; /* Reset message number*/

  COMMAREA.CATOAP = PA0AM002.CATOAP; /* To application*/
  COMMAREA.CAITEM = PA0AM002.CAITEM; /* Application data*/

   /* ------------------ end of process PA0A-205 -----------------*/

end // end PA0A-205

// Format and display MAP3
Function PA0A-207()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  converseLib.clearScreen();

  PA0AM003.FB8BUYDT = PAWREC.PAWBUYYM;
  PA0AM003.XXXCURDT = VGVar.currentShortGregorianDate;

  converse PA0AM003 ;

  PAWREC.XXXMODID = " "; /* Module id*/
  PA0AW00.XXXMSGNO = 0; /* Reset message number*/

  COMMAREA.CATOAP = PA0AM003.CATOAP; /* To application*/
  COMMAREA.CAITEM = PA0AM003.CAITEM; /* Application data*/

   /* ------------------ end of process PA0A-207 -----------------*/

end // end PA0A-207

// FORMAT DATA IN HEADER
Function PA0A-210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set PA0AM001 initial; /* M001 input/output area*/

   /* ------------------------------------------------------------*/
   /* Format the data in the header portion of the map*/
   /* ------------------------------------------------------------*/

  PA0AM001.XXXCURDT = VGVar.currentShortGregorianDate; /* current system date*/
  PA0AM001.PAWBUYYM = PAWREC.PAWBUYYM; /* Current buy date yymm*/

  PA0AM001.XXXTSPAG = PA0AW00.PA0AW-CURRENT-TS-PAGE; /* FROM PAGE*/
  PA0AM001.TA5TSQIX = PA0AW00.PA0AW-MAX-PAGES; /* TO PAGE*/

  if (PA0AW00.PA0AW-CURRENT-TS-PAGE == 0
   && PA0AW00.PA0AW-MAX-PAGES == 0)
    set PA0AM001.XXXLITPG skip, invisible;
    set PA0AM001.XXXTSPAG skip, invisible;
    set PA0AM001.XXXLITOF skip, invisible;
    set PA0AM001.TA5TSQIX skip, invisible;
  end

   /* ------------------------------------------------------------*/
   /* Format the data HEADER INFORMATION*/
   /* ------------------------------------------------------------*/
  PA0AM001.PA1OANBR = PA0AW00.PA1OANBR;

  if (converseVar.validationMsgNum == 50) /* O/A NUMBER DOES NOT EXIST*/
    set PA0AM001.PA1OANBR cursor, bold;
    PA0AW00.PA1OANBR = 0;
  end

  PA0AM001.YESCD = PA0AW01.YESCD;
  PA0AM001.YESSDESC = PA0AW01.YESSDESC;
  PA0AM001.PA1HLDFL = PA0AW01.PA1HLDFL;
  PA0AM001.PC3POIDT = PA0AW01.PA0AW-PC3POIDT;

   /* USERS REQUESTED THAT THE HOLD FLAG BE HIGHLIGHTED IF THE O/A*/
   /* IS ON HOLD.*/

  if (PA0AW01.PA1HLDFL == "Y")
    set PA0AM001.PA1HLDFL bold, protect;
  end

  PA0AM001.YETCD = PA0AW01.YETCD;
  PA0AM001.YETSDESC = PA0AW01.YETSDESC;

  PA0AM001.SY1STNBR = PA0AW01.SY1STNBR;
  PA0AM001.SY2CLRID = PA0AW01.SY2CLRID;
  PA0AM001.XDMCD = PA0AW01.XDMCD;

  PA0AM001.PT3YYMM = PA0AW01.PT3YYMM;

  if (PA0AW01.PA0AW-BL-ZZ-SDT > 0)
    PA0AW00.PA0AW-DATE-CCYYMMDD = PA0AW01.PA0AW-BL-ZZ-SDT;
    PA0AW01.PA0AW-DATE-MM = PA0AW00.PA0AW-DATE-MM;
    PA0AW01.PA0AW-DATE-DASH1 = "-";
    PA0AW01.PA0AW-DATE-DD = PA0AW00.PA0AW-DATE-DD;
    PA0AW01.PA0AW-DATE-DASH2 = "-";
    PA0AW01.PA0AW-DATE-YY = PA0AW00.PA0AW-DATE-YY;
    PA0AM001.PA0AM-BL-ZZ-SDT = PA0AW01.PA0AW-DATE-MMDDYY;
  else
    PA0AM001.PA0AM-BL-ZZ-SDT = " ";
  end

  PA0AM001.PA0AM-TOTAL-ADJ = PA0AW01.PA0AW-TOTAL-ADJUST;
  PA0AM001.PA1RQQTY = PA0AW01.PA1RQQTY;

  if (PA0AW01.PA0AW-OA-ZZ-SDT > 0)
    PA0AW00.PA0AW-DATE-CCYYMMDD = PA0AW01.PA0AW-OA-ZZ-SDT;
    PA0AW01.PA0AW-DATE-MM = PA0AW00.PA0AW-DATE-MM;
    PA0AW01.PA0AW-DATE-DASH1 = "-";
    PA0AW01.PA0AW-DATE-DD = PA0AW00.PA0AW-DATE-DD;
    PA0AW01.PA0AW-DATE-DASH2 = "-";
    PA0AW01.PA0AW-DATE-YY = PA0AW00.PA0AW-DATE-YY;
    PA0AM001.PA0AM-OA-ZZ-SDT = PA0AW01.PA0AW-DATE-MMDDYY;
  else
    PA0AM001.PA0AM-OA-ZZ-SDT = " ";
  end

  if (PA0AW01.PA0AW-OA-ZZ-SETUP-HHMM != 0)
    PA0AW00.PA0AW-TIME = PA0AW01.PA0AW-OA-ZZ-SETUP-HHMM;
    PA0AW00.PA0AW-HH = PA0AW00.PA0AW-HOUR;
    PA0AW00.PA0AW-COLON = ":";
    PA0AW00.PA0AW-MN = PA0AW00.PA0AW-MIN;
    PA0AM001.PA0AM-OA-ZZ-SETUP-HHMM = PA0AW00.PA0AW-HHMM;
  else
    PA0AM001.PA0AM-OA-ZZ-SETUP-HHMM = " ";
  end

  if (PA0AW01.PA0AW-ITEM-ZZ-SDT > 0)
    PA0AW00.PA0AW-DATE-CCYYMMDD = PA0AW01.PA0AW-ITEM-ZZ-SDT;
    PA0AW01.PA0AW-DATE-MM = PA0AW00.PA0AW-DATE-MM;
    PA0AW01.PA0AW-DATE-DASH1 = "-";
    PA0AW01.PA0AW-DATE-DD = PA0AW00.PA0AW-DATE-DD;
    PA0AW01.PA0AW-DATE-DASH2 = "-";
    PA0AW01.PA0AW-DATE-YY = PA0AW00.PA0AW-DATE-YY;
    PA0AM001.PA0AM-ITEM-ZZ-SDT = PA0AW01.PA0AW-DATE-MMDDYY;
  else
    PA0AM001.PA0AM-ITEM-ZZ-SDT = " ";
  end

  if (PA0AW01.PA0AW-ITEM-ZZ-STM != 0)
    PA0AW00.PA0AW-TIME = PA0AW01.PA0AW-ITEM-ZZ-STM;
    PA0AW00.PA0AW-HH = PA0AW00.PA0AW-HOUR;
    PA0AW00.PA0AW-COLON = ":";
    PA0AW00.PA0AW-MN = PA0AW00.PA0AW-MIN;
    PA0AM001.PA0AM-ITEM-ZZ-STM = PA0AW00.PA0AW-HHMM;
  else
    PA0AM001.PA0AM-ITEM-ZZ-STM = " ";
  end

   /* ------------------ End of Process PA0A-210 -----------------*/

end // end PA0A-210

// FORMAT DATA IN BODY OF MAP
Function PA0A-220()
   /* ------------------------------------------------------------*/
   /* Format the data in the body of the map*/
   /* ------------------------------------------------------------*/

   /* RETRIEVE RECORDS FROM TEMP STORAGE*/

  if (PA0AW00.PA0AW-DB2-ERROR == "Y")
    return;
  end

   /* DON'T READ PAST THE END OF TEMP STORAGE*/

  if (PA0AW00.PA0AW-CURRENT-TS-PAGE <= PA0AW00.PA0AW-MAX-PAGES)
    set PA0AW04 empty; /* CLEAR OUT TEMP STORAGE WORK RECORD FIRST*/
    PA0AS-03-TA0050-R(); /* READ 1 PAGE OF TEMP STORAGE*/
  end

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 12)

    if (PA0AW04.PA0AW-TYPE[sysVar.arrayIndex] == "OA")
      PA0AM001.PA0AM-SELECT[sysVar.arrayIndex] = PA0AW04.PA0AW-SELECT[sysVar.arrayIndex];
      PA0AW01.PA0AW-SELECT[sysVar.arrayIndex] = PA0AW04.PA0AW-SELECT[sysVar.arrayIndex];

      PA0AW03.PA0AW-TEMP-OA-GROUP = PA0AW04.PA0AW-TEMP-STORE-GRP[sysVar.arrayIndex];

      if (COMMAREA.CACLVL[1] == "N")
        set PA0AM001.PA0AM-NEW-PC-EST-HDT[sysVar.arrayIndex] protect;
      else
        if (PA0AM001.PA1OANBR > 199999
         && PA0AM001.PA1OANBR < 300000)
          set PA0AM001.PA0AM-NEW-PC-EST-HDT[sysVar.arrayIndex] protect;
        end
      end

      PA0A-221(); /* LOAD INFORMATION TO THE MAP*/

    else
      set PA0AM001.PA0AM-SELECT[sysVar.arrayIndex] skip, invisible;
      set PA0AM001.PA0AM-NEW-PC-EST-HDT[sysVar.arrayIndex] skip, invisible;
    end

    sysVar.arrayIndex = sysVar.arrayIndex + 1;

  end

   /* ------------------ End of Process PA0A-220 -----------------*/

end // end PA0A-220

// LOAD O/A ITEM INFO TO MAP
Function PA0A-221()
   /* **********************************************************************/
   /* MOVE OA INFORMATION TO MAP - THE TEMP STORAGE INFORMATION HAS*/
   /* BEEN LOADED INTO THE WORKING STORAGE RECORD PA0AW03.*/
   /* THESE O/A ITEMS NEED TO BE MATCHED TO THE TYPE '9' WORK RECORDS.*/
   /* THIS IS SO THAT THE ORIGINAL AND ADJUSTED QUANTITIES CAN BE*/
   /* DETERMINED.*/
   /* **********************************************************************/

  PA0AM001.FY1FCTYC[sysVar.arrayIndex] = PA0AW03.FY1FCTYC;
  PA0AM001.XWHCD[sysVar.arrayIndex] = PA0AW03.XWHCD;
  PA0AM001.PC2CUXID[sysVar.arrayIndex] = PA0AW03.PC2CUXID;

  PA0AW00.PA0AW-DATE-CCYYMMDD = PA0AW03.PC6RTADT;
  PA0AW00.PA0AW-MM = PA0AW00.PA0AW-DATE-MM;
  PA0AW00.PA0AW-DD = PA0AW00.PA0AW-DATE-DD;
  PA0AW00.PA0AW-YY = PA0AW00.PA0AW-DATE-YY;
  PA0AM001.PC6RTADT[sysVar.arrayIndex] = PA0AW00.PA0AW-MMDDYY;

  if (PA0AW03.PA0AW-OLD-PC-EST-HDT == 0)
    PA0AM001.PA0AM-OLD-PC-EST-HDT[sysVar.arrayIndex] = " ";
  else
    PA0AW00.PA0AW-DATE-CCYYMMDD = PA0AW03.PA0AW-OLD-PC-EST-HDT;
    PA0AW00.PA0AW-MM = PA0AW00.PA0AW-DATE-MM;
    PA0AW00.PA0AW-DD = PA0AW00.PA0AW-DATE-DD;
    PA0AW00.PA0AW-YY = PA0AW00.PA0AW-DATE-YY;
    PA0AM001.PA0AM-OLD-PC-EST-HDT[sysVar.arrayIndex] = PA0AW00.PA0AW-MMDDYY;
  end

  if (PA0AW03.PA0AW-NEW-PC-EST-HDT == 0)
    PA0AM001.PA0AM-NEW-PC-EST-HDT[sysVar.arrayIndex] = " ";
  else
    PA0AW00.PA0AW-DATE-CCYYMMDD = PA0AW03.PA0AW-NEW-PC-EST-HDT;
    PA0AW00.PA0AW-MM = PA0AW00.PA0AW-DATE-MM;
    PA0AW00.PA0AW-DD = PA0AW00.PA0AW-DATE-DD;
    PA0AW00.PA0AW-YY = PA0AW00.PA0AW-DATE-YY;
    PA0AM001.PA0AM-NEW-PC-EST-HDT[sysVar.arrayIndex] = PA0AW00.PA0AW-MMDDYY;
  end

  PA0AM001.PC2INSEG[sysVar.arrayIndex] = PA0AW03.PC2INSEG;
  PA0AM001.YMTCD[sysVar.arrayIndex] = PA0AW03.YMTCD;

   /* DETERMINE THE CURRENT (ORIGINAL ITEM) QUANTITY AND ADJUSTMENT*/
   /* QUANTITY BY MATCHING THE O/A ITEM RECORD WITH THE TYPE '9'*/
   /* WORK RECORD.*/

  PA0A-22101();

   /* DETERMINE THE TOTAL ITEM QUANTITY*/

  PA0AW00.PA0AW-QUANTITY-GRP = PA0AW03.PA0AW-QUANTITY-GRP;
  PA0AW00.PA0AW-TOTAL-PA2SZQTY = 0;
  PA0AW00.XX1 = 1;
  while (PA0AW00.XX1 <= 40)
    PA0AW00.PA0AW-TOTAL-PA2SZQTY = PA0AW00.PA0AW-TOTAL-PA2SZQTY +                                   PA0AW00.PA0AW-QTY[XX1];
    PA0AW00.XX1 = PA0AW00.XX1 + 1;
  end

  PA0AM001.PA0AM-TOTAL-PA2SZQTY[sysVar.arrayIndex] = PA0AW00.PA0AW-TOTAL-PA2SZQTY;


   /* ------------------ End of Process PA0A-221 -----------------*/

end // end PA0A-221

// FIND TYPE '9' WORK RECS
Function PA0A-22101()
   /* **********************************************************************/
   /* MOVE OA INFORMATION TO MAP - THE TEMP STORAGE INFORMATION HAS*/
   /* BEEN LOADED INTO THE WORKING STORAGE RECORD PA0AW03.*/
   /* THESE O/A ITEMS NEED TO BE MATCHED TO THE TYPE '9' WORK RECORDS*/
   /* STORED IN PA0AW06.  THIS IS SO THAT THE ORIGINAL AND ADJUSTED*/
   /* QUANTITIES CAN BE DETERMINED.*/
   /* **********************************************************************/
   /* ADDED PC-PO-NBR AS A CRITERIA FOR COMPARISON IN THE WHILE LOOP BELOW*/
   /* PC-PO-NBR AND PO-ID WILL NOT BE LOGICALLY SAME HENCEFORTH*/
   /* GREDDY -- 07/18/00 NSC CHANGES.*/
   /* **********************************************************************/

  PA0AW00.XX1 = 1;
  while (PA0AW00.XX1 <= PA0AW00.PA0AW-NUM-TYPE-NINE
   && PA0AW00.XX1 <= 100)

    if (PA0AW06.PA0AW-ITEM-MATCHED[XX1] == "N"
     && PA0AW06.PA1OANBR[XX1] == PA0AW00.PA1OANBR
     && PA0AW06.XDSCD[XX1] == PA0AW03.XDSCD
     && PA0AW06.FY1FCTYC[XX1] == PA0AW03.FY1FCTYC
     && PA0AW06.PC3POIDT[XX1] == PA0AW03.PC3POIDT
     && PA0AW06.PC3PONBR[XX1] == PA0AW03.PC3PONBR
     && PA0AW06.PC6ETSDT[XX1] == PA0AW03.PA0AW-OLD-PC-EST-HDT
     && PA0AW06.PC6RTADT[XX1] == PA0AW03.PC6RTADT
     && PA0AW06.YMTCD[XX1] == PA0AW03.YMTCD
     && PA0AW06.PC2CUXID[XX1] == PA0AW03.PC2CUXID
     && PA0AW06.PC2INSEG[XX1] == PA0AW03.PC2INSEG
     && PA0AW06.XWHCD[XX1] == PA0AW03.XWHCD
     && PA0AW06.OP1PARTN[XX1] == PA0AW03.OP1PARTN
     && PA0AW06.OP1CUOID[XX1] == PA0AW03.OP1CUOID
     && PA0AW06.OP1NORID[XX1] == PA0AW03.OP1NORID)

      PA0AW00.PA0AW-QUANTITY-GRP = PA0AW06.PA0AW-PACWRKQT-GRP[XX1];
      PA0AW00.PA0AW-TOTAL-PACWRKQT = 0;
      PA0AW00.XX3 = 1;
      while (PA0AW00.XX3 <= 40)
        PA0AW00.PA0AW-TOTAL-PACWRKQT = PA0AW00.PA0AW-TOTAL-PACWRKQT +                                         PA0AW00.PA0AW-QTY[XX3];
        PA0AW00.XX3 = PA0AW00.XX3 + 1;
      end

      PA0AW00.PA0AW-QUANTITY-GRP = PA0AW06.PA0AW-PACADJQT-GRP[XX1];
      PA0AW00.PA0AW-TOTAL-PACADJQT = 0;
      PA0AW00.XX3 = 1;
      while (PA0AW00.XX3 <= 40)
        PA0AW00.PA0AW-TOTAL-PACADJQT = PA0AW00.PA0AW-TOTAL-PACADJQT +                                         PA0AW00.PA0AW-QTY[XX3];
        PA0AW00.XX3 = PA0AW00.XX3 + 1;
      end

      PA0AW00.PA0AW-QUANTITY-GRP = PA0AW06.PA0AW-PACFLADJ-GRP[XX1];
      PA0AW00.PA0AW-TOTAL-PACFLADJ = 0;
      PA0AW00.XX3 = 1;
      while (PA0AW00.XX3 <= 40)
        PA0AW00.PA0AW-TOTAL-PACFLADJ = PA0AW00.PA0AW-TOTAL-PACFLADJ +                                         PA0AW00.PA0AW-QTY[XX3];
        PA0AW00.XX3 = PA0AW00.XX3 + 1;
      end

      PA0AM001.PA0AM-TOTAL-PACWRKQT[sysVar.arrayIndex] = PA0AW00.PA0AW-TOTAL-PACWRKQT;
      PA0AM001.PA0AM-TOTAL-PACADJQT[sysVar.arrayIndex] = PA0AW00.PA0AW-TOTAL-PACADJQT;
      PA0AM001.PA0AM-TOTAL-PACFLADJ[sysVar.arrayIndex] = PA0AW00.PA0AW-TOTAL-PACFLADJ;

      PA0AW06.PA0AW-ITEM-MATCHED[XX1] = "Y";

    end

    PA0AW00.XX1 = PA0AW00.XX1 + 1;

  end



   /* ------------------ End of Process PA0A-22101 ---------------*/

end // end PA0A-22101

// CHECK ATTENTION IDENTIFIER
Function PA0A-300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (PA0AW00.PA0AW-DISPLAY-MAP == "2")
    PA0A-305();
    return;
  end

  if (PA0AW00.PA0AW-DISPLAY-MAP == "3")
    PA0A-307();
    return;
  end

   /* IF EUROPEAN O/A, ALLOW INQUIRY ONLY*/

  if (PA0AM001.PA1OANBR > 199999
   && PA0AM001.PA1OANBR < 300000)
    if (converseVar.eventKey is pf9)
      PAWREC.XXXMODID = "300";
      converseLib.validationFailed(339); /* EUROPEAN O/A ALLOWS INQUIRY ONLY*/
      return;
    end
  end


   /* IF PF9 CONFIRMATION LINE DISPLAYED AND PF9 WAS NOT*/
   /* HIT, RESET CONFIRMATION SWITCH*/

  if (PA0AW00.PA0AW-CONFIRM-MSG-SHOWN == "Y"
   && converseVar.eventKey not pf9)
    PA0AW00.PA0AW-CONFIRM-MSG-SHOWN = "N";
  end

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    exit stack; /* Exit to redisplay map*/
  end

  if (PA0AM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      PAWREC.PAWOANBR = PA0AW00.PA1OANBR; /* MOVE IN O/A NUMBER*/
      COMMAREA.CATOAP = PA0AM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = PA0AM001.CAITEM; /* Application data*/
      XSPAS01(); /* Exit to another application*/
    else
      PAWREC.XXXMODID = "300";
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    set PA0AM001.CATOAP cursor, modified, bold; /* Highlight*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    if (converseVar.eventKey is pf3) /* pf3 pressed*/
       /* NEXT SENTENCE*/
    else
      if (converseVar.eventKey is pf1) /* pf1 pressed*/
        COMMAREA.CAITEM = "PA0AM001"; /* move in map name for help*/
      else
        if (converseVar.eventKey is pf5) /* PRODUCTION MENU*/
          COMMAREA.CATOAP = "FY0M";
        else
          COMMAREA.CAITEM = " "; /* clear item field*/
        end
      end
    end

    XSPAS01(); /* Exit to another application*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf12) /* reset screen*/

    if (PAWREC.PAWDRVR == " ") /* IS THERE A LIST OF O/AS?*/

      PA0AM001.CATOAP = "PA0A";
      PA0AW00.PA0AW-REQ-FOR-DATA-FLAG = "N";
      set PA0AM001 initial;
      set PAWREC empty;

      PA0AS-00-FAST-PATH();

      XSPAS01();

    else

      XSPAS04(); /* PROCESS LIST OF O/AS*/

    end

    exit stack;

  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6   /* AND NOT PF6 HEADER INSTRUCTIONS*/
   && converseVar.eventKey not pf7   /* and not PF7 up*/
   && converseVar.eventKey not pf8   /* and not PF8 down*/
   && converseVar.eventKey not pf9   /* and not PF9 accept*/
   && converseVar.eventKey not pf13  /* and not PF13 PA0P*/
   && converseVar.eventKey not pf14  /* and not PF14 PA0N*/
   && converseVar.eventKey not pf16  /* and not PF16 PA0O*/
   && converseVar.eventKey not pf18  /* and not PF18 PA0Q*/
   && converseVar.eventKey not pf19  /* and not PF19 PA0Z*/
   && converseVar.eventKey not pf20  /* and not PF20 ITEM SIZE*/
   && converseVar.eventKey not pf21  /* and not PF21 PA0E*/
   && converseVar.eventKey not pf24) /* and not PF24 WORK SIZE*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf6 /* SHOW HEADER INSTRUCTIONS*/
   && PA0AM001.PA1OANBR != 0)    
    set PA9REC empty;
    PA9REC.PA1OANBR = PA0AM001.PA1OANBR;

    XPPA100();

    if (converseVar.validationMsgNum != 0)
      PAWREC.XXXMODID = "300";
    end

    converseLib.clearScreen();
     /* RESET MAP ATTRIBUTES*/

    exit stack;
  end

  if (converseVar.eventKey is pf9)
    if (PA0AW01.PA1HLDFL == "Y" /* IF O/A ON HOLD*/
     || PA0AW00.PA0AW-READ-ONLY == "Y")
      PAWREC.XXXMODID = "300";
      converseLib.validationFailed(254);
    end
  end

  if (converseVar.eventKey is pf13) /* TRANSFER TO PA0P*/
    PA0AM001.CATOAP = "PA0P";
    PA0AS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end

  if (converseVar.eventKey is pf14) /* TRANSFER TO PA0N*/
    PA0AM001.CATOAP = "PA0N";
    PA0AS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end

  if (converseVar.eventKey is pf16) /* TRANSFER TO PA0O*/
    PA0AM001.CATOAP = "PA0O";
    PA0AS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end

  if (converseVar.eventKey is pf18) /* TRANSFER TO PA0Q*/
    PA0AM001.CATOAP = "PA0Q";
    PA0AS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end

  if (converseVar.eventKey is pf19) /* TRANSFER TO PA0Z*/
    PA0AM001.CATOAP = "PA0Z";
    PA0AS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end

  PA0AW00.PA0AW-DISPLAY-MAP = "1";

  if (converseVar.eventKey is pf20 /* DISPLAY SIZE DETAIL FOR O/A ITEM*/
   && converseVar.validationMsgNum == 0)
    PA0AW00.PA0AW-DISPLAY-MAP = "2";
    PA0AW00.XX7 = 0;
  end

  if (converseVar.eventKey is pf21) /* TRANSFER TO PA0E*/
    PA0AM001.CATOAP = "PA0E";
    PA0AS-00-FAST-PATH();
    XSPAS01();
    exit stack;
  end

  if (converseVar.eventKey is pf24 /* DISPLAY SIZE DETAIL FOR O/A WORK RECS*/
   && converseVar.validationMsgNum == 0)
    PA0AW00.PA0AW-DISPLAY-MAP = "3";
    PA0AW00.XX7 = 0;
  end

   /* ------------------ End of Process PA0A-300 -----------------*/

end // end PA0A-300

// CHECK ATTENTION IDENT MAP2
Function PA0A-305()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2)
    exit stack;
  end

  if (PA0AM002.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      PAWREC.PAWOANBR = PA0AM002.PA1OANBR; /* LOAD O/A NUMBER*/
      COMMAREA.CATOAP = PA0AM002.CATOAP; /* TO application*/
      COMMAREA.CAITEM = PA0AM002.CAITEM; /* Application data*/
      XSPAS01(); /* Exit to another application*/
    else
      PAWREC.XXXMODID = "300";
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    set PA0AM002.CATOAP cursor, modified, bold; /* Highlight*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3) /* or PF3 was pressed*/

    if (converseVar.eventKey is pf3) /* pf3 pressed*/
      PA0AW00.PA0AW-DISPLAY-MAP = "1";

      sysVar.arrayIndex = 1;
      while (sysVar.arrayIndex <= 11)
        PA0AW01.PA0AW-SELECT[sysVar.arrayIndex] = " ";
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end

      exit stack;
    else
      COMMAREA.CAITEM = "PA0AM002"; /* move in map name for help*/
    end

    XSPAS01(); /* Exit to another application*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end


   /* ------------------ End of Process PA0A-305 -----------------*/

end // end PA0A-305

// CHECK ATTENTION IDENT MAP3
Function PA0A-307()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2)
    exit stack;
  end

  if (PA0AM003.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      PAWREC.PAWOANBR = PA0AM003.PA1OANBR; /* LOAD O/A NUMBER*/
      COMMAREA.CATOAP = PA0AM003.CATOAP; /* TO application*/
      COMMAREA.CAITEM = PA0AM003.CAITEM; /* Application data*/
      XSPAS01(); /* Exit to another application*/
    else
      PAWREC.XXXMODID = "300";
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    set PA0AM003.CATOAP cursor, modified, bold; /* Highlight*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3) /* or PF3 was pressed*/

    if (converseVar.eventKey is pf3) /* pf3 pressed*/
      PA0AW00.PA0AW-DISPLAY-MAP = "1";

      sysVar.arrayIndex = 1;
      while (sysVar.arrayIndex <= 11)
        PA0AW01.PA0AW-SELECT[sysVar.arrayIndex] = " ";
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end

      exit stack;
    else
      COMMAREA.CAITEM = "PA0AM003"; /* move in map name for help*/
    end

    XSPAS01(); /* Exit to another application*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    PAWREC.XXXMODID = "300"; /* Module id*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end


   /* ------------------ End of Process PA0A-307 -----------------*/

end // end PA0A-307

// RESET HIGHLIGHTED FIELDS
Function PA0A-400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set PA0AM001.PA1OANBR initialAttributes; /* OA NUMBER*/
  set PA0AM001.PA1HLDFL initialAttributes; /* HOLD FLAG*/
  set PA0AM001.YETCD initialAttributes; /* OA TYPE CODE*/
  set PA0AM001.PA1RQQTY initialAttributes; /* O/A QUANTITY*/

  sysVar.arrayIndex = 1;

  while (sysVar.arrayIndex <= 12)
    set PA0AM001.PA0AM-SELECT[sysVar.arrayIndex] normal;

    if (COMMAREA.CACLVL[1] == "Y")
      set PA0AM001.PA0AM-NEW-PC-EST-HDT[sysVar.arrayIndex] normal;
    else
      set PA0AM001.PA0AM-NEW-PC-EST-HDT[sysVar.arrayIndex] protect;
    end

    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

  set PA0AM001.CATOAP initialAttributes; /* Commarea TO application*/
  set PA0AM001.CAITEM initialAttributes; /* Commarea application data*/

   /* ------------------ end of process PA0A-400 -----------------*/

end // end PA0A-400

// VERIFY THE DATA ENTERED
Function PA0A-500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    PAWREC.XXXMODID = "150"; /* Module identification*/
    set PA0AM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

   /* ------------------------------------------------------------*/
   /* verify request to page forward(pf7) or backwards(pf8), and*/
   /* check modifiable fields*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)

    PA0A-510(); /* verify scroll request*/

    if (converseVar.validationMsgNum == 2 /* NO PREVIOUS PAGES TO DISPLAY*/
     || converseVar.validationMsgNum == 3) /* NO MORE PAGES TO DISPLAY*/
      exit stack;
    end

    PA0A-520(); /* check modifiable fields*/

  end

   /* ------------------------------------------------------------*/
   /* if data loaded, verify modifiable fields*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf9 /* accept update   (pf9)*/
   || converseVar.eventKey is pf20) /* IF SIZE DETAIL REQUESTED*/

    PA0A-520(); /* check modifiable fields*/

  end

   /* DON'T FORGET TO ALLOW PAGING EVEN IF THERE ARE ERRORS*/

  if (converseVar.validationMsgNum != 0)
    if (converseVar.eventKey is pf7
     || converseVar.eventKey is pf8)
         /* NEXT SENTENCE*/
    else
      exit stack; /* display error message*/
    end
  end


end // end PA0A-500

// VERIFY SCROLL REQUEST
Function PA0A-510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && PA0AW00.PA0AW-CURRENT-TS-PAGE < 2)

    PAWREC.XXXMODID = "151"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && PA0AW00.PA0AW-CURRENT-TS-PAGE >= PA0AW00.PA0AW-MAX-PAGES)

    PAWREC.XXXMODID = "151"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end


end // end PA0A-510

// VALIDATE MODIFIABLE DATA
Function PA0A-520()
   /* ------------------------------------------------------------*/
   /* DETERMINE IF KEY FIELD HAS CHANGED ON MAP*/
   /* ------------------------------------------------------------*/

  PA0AW00.PA0AW-KEY-CHANGED = "N";
  PA0AW00.PA0AW-UPDATE-ETS-FLAG = "N";

  if (PA0AM001.PA1OANBR == 0
   && PA0AW00.PA1OANBR != 0)
    set PA0AW01 empty;
    PA0AW00.PA1OANBR = PA0AM001.PA1OANBR;
    PA0AW00.PA0AW-REQ-FOR-DATA-FLAG = "N";
    PA0AW00.PA0AW-KEY-CHANGED = "N";

      /* PURGE TEMP STORAGE*/

    PA0AS-02-TA0050-P();

    PA0AW01.PA0AW-UPDATE-ETS = "N";

    return;

  end

  if (PA0AM001.PA1OANBR == 0
   || PA0AM001.PA1OANBR == PA0AW00.PA1OANBR)

    sysVar.arrayIndex = 12;
    while (sysVar.arrayIndex >= 1)

      if (PA0AM001.PA0AM-NEW-PC-EST-HDT[sysVar.arrayIndex] != 0)

        PA0AW00.PA0AW-MMDDYY = PA0AM001.PA0AM-NEW-PC-EST-HDT[sysVar.arrayIndex];
        PA0AW00.PA0AW-DATE-MM = PA0AW00.PA0AW-MM;
        PA0AW00.PA0AW-DATE-DD = PA0AW00.PA0AW-DD;
        PA0AW00.PA0AW-DATE-YY = PA0AW00.PA0AW-YY;

        if (PA0AW00.PA0AW-DATE-YY < 90)
          PA0AW00.PA0AW-DATE-CCC = 20;
        else
          PA0AW00.PA0AW-DATE-CCC = 19;
        end

        if (PA0AW00.PA0AW-DATE-CCYYMMDD != 
        PA0AW04.PA0AW-NEW-PC-EST-HDT[sysVar.arrayIndex])

          set TA2REC empty;
          TA2REC.TA2GRGAN = PA0AM001.PA0AM-NEW-PC-EST-HDT[sysVar.arrayIndex];
          TA2REC.TA2CENT = PA0AW00.PA0AW-DATE-CCC;

          PA0AS-15-TA0040(); /* CALL DATE VALIDATION ROUTINE*/

          if (TA2REC.TA2RTNCD != 0)
            set PA0AM001.PA0AM-NEW-PC-EST-HDT[sysVar.arrayIndex] cursor, bold;
            converseLib.validationFailed(22);
          else
            PA0AW00.PA0AW-UPDATE-ETS-FLAG = "Y";
            PA0AW04.PA0AW-ETS-UPDATED[sysVar.arrayIndex] = "Y";
            PA0AW04.PA0AW-NEW-PC-EST-HDT[sysVar.arrayIndex] = PA0AW00.PA0AW-DATE-CCYYMMDD;
          end

        end

      end

      sysVar.arrayIndex = sysVar.arrayIndex - 1;

    end

    if (PA0AW00.PA0AW-UPDATE-ETS-FLAG == "Y")
      PA0AS-17-TA0050-U();
    end

  else

      /* PURGE TEMP STORAGE*/

    PA0AS-02-TA0050-P();

    PA0AW00.PA1OANBR = PA0AM001.PA1OANBR;
    PA0AW00.PA0AW-REQ-FOR-DATA-FLAG = "Y";
    PA0AW00.PA0AW-KEY-CHANGED = "Y";
    PA0AW00.PA0AW-READ-ONLY = "N";
    PA0AW00.PA0AW-CONFIRM-MSG-SHOWN = "N";

    return;

  end


   /* ------------- End of process PA0A-520 ----------------------*/

end // end PA0A-520

// PROCESS VALID INPUT REQUEST
Function PA0A-600()
   /* ------------------------------------------------------------*/
   /* process valid input request*/
   /* ------------------------------------------------------------*/

  if (PA0AW00.PA0AW-DISPLAY-MAP == "2")
    PA0A-605();
    return;
  end

  if (PA0AW00.PA0AW-DISPLAY-MAP == "3")
    PA0A-607();
    return;
  end

  if (converseVar.eventKey is pf7) /* SCROLL BACKWARD*/
    PA0AW00.PA0AW-CURRENT-TS-PAGE = PA0AW00.PA0AW-CURRENT-TS-PAGE - 1;
    return;
  end

  if (converseVar.eventKey is pf8) /* SCROLL FORWARD*/
    PA0AW00.PA0AW-CURRENT-TS-PAGE = PA0AW00.PA0AW-CURRENT-TS-PAGE + 1;
    return;
  end

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    return;
  end

  if (PA0AW00.PA0AW-READ-ONLY == "Y"
   || PA0AW00.PA0AW-KEY-CHANGED == "Y") /* KEY FIELDS HAVE BEEN CHANGED*/
    return;
  end

  if (converseVar.eventKey not pf9) /* Pf9 not pressed*/
    return; /* update accepted*/
  end

  if (converseVar.eventKey is pf9
   && COMMAREA.CACLVL[1] == "N")
    return;
  end

  if (PA0AW01.PA0AW-UPDATE-ETS == "N")
    return;
  end

  if (PA0AW00.PA0AW-CONFIRM-MSG-SHOWN == "N") /* AND MESSAGE NOT SHOWN*/

    PAWREC.XXXMODID = "600";
    converseLib.validationFailed(30); /* PRESS PF9 TO ACCEPT OR PA2 TO CANCEL*/
    PA0AW00.PA0AW-CONFIRM-MSG-SHOWN = "Y";
    return;

  end

  if (PA0AW00.PA1OANBR == 0) /* IF O/A DOES NOT EXIST*/

    if (converseVar.validationMsgNum != 0)
      return;
    end

  end

   /* ------------PF9 HAS BEEN HIT------------------------*/
   /* UPDATE DATABASE ROWS HERE*/

   /* -----------------------------------------------------*/
   /* ADD DPRODA.VPACMT01 RECORD*/
   /* -----------------------------------------------------*/

  set PA9REC empty;
  PA9REC.PA1OANBR = PA0AW00.PA1OANBR;
  PA9REC.FY1FCTYC = " ";
  PA9REC.YESCD = "00";
  PA9REC.PA9COMTY = "H";
  PA9REC.PA9COM[1] = "ETS HAS BEEN CHANGED BY PA0A";
  PA9REC.XXXUSER = COMMAREA.CAUSERID;
  PA9REC.ZZZSDT = XX0XW01.XX0XWDAT;
  PA9REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  PA9REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  PA9REC.ZZZCHGCT = 0;

  PA0AS-07-IO4820-A(); /* ADD DPRODA.VPACMT01 RECORD*/

  PAWREC.XXXMODID = "600";
  converseLib.validationFailed(1); /* UPDATE SUCCESSFULLY COMPLETED*/

   /* ------------------------------------------------------*/
   /* UPDATE DPRODA.VPAITM01 RECORD WITH NEW ETS.  THE*/
   /* ENTIRE TEMP STORAGE MUST BE EXAMINED TO DETERMINE*/
   /* THE ETS DATES TO UPDATE.  START WITH THE FIRST PAGE.*/
   /* ------------------------------------------------------*/

  PA0A-610(); /**/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit();

   /* init flags/counters*/

  PA0AW00.PA0AW-REQ-FOR-DATA-FLAG = "N";
  PA0AW00.XXXMODID = "600"; /* Module identification*/
  PAWREC.PAWOANBR = PA0AW00.PA1OANBR;

  converseLib.validationFailed(1); /* UPDATE SUCCESSFUL*/
  PA0AW00.XXXMODID = "600"; /* MODULE IDENTIFICATION*/

  exit stack;

   /* ------------------ END OF PROCESS PA0A-600 -----------------*/
end // end PA0A-600

// DISPLAY DATA ON SCREEN 2
Function PA0A-605()
   /* --------------------------------------------------------*/
    /* GET DATA AND MOVE TO SCREEN 2*/
   /* --------------------------------------------------------*/

  if (PA0AW00.XX7 == 11)
    PAWREC.XXXMODID = "605";
    converseLib.validationFailed(73); /* NO MORE SIZES*/
    return;
  end

  PA0AW00.XX7 = PA0AW00.XX7 + 1;

  while (PA0AM001.PA0AM-SELECT[XX7] == " ")

    if (PA0AW00.XX7 == 11)
      PAWREC.XXXMODID = "605";
      converseLib.validationFailed(73); /* NO MORE SIZE RECORDS SELECTED*/
      return;
    end

    PA0AW00.XX7 = PA0AW00.XX7 + 1;

  end

  if (PA0AM001.PA0AM-SELECT[XX7] == "S")
    PA0A-60501(); /* MOVE DATA TO SCREEN*/
    PA0AM001.PA0AM-SELECT[XX7] = " ";
  end
end // end PA0A-605

// BUILD DATA FOR SCREEN 2
Function PA0A-60501()
   /* -------------------------------------------------*/
   /* FIRST GO THRU SIZE DATA AND BUILD PG3REC FOR*/
   /* CALL TO PG1050*/
   /* --------------------------------------------------*/

   /* REMEMBER THAT PA0AW04 CONTAINS THE TEMP STORAGE INFORMATION*/
   /* FOR THE CURRENT PAGE DISPLAYED ON PA0AM001*/

  set PA0AW05 empty;

  set PG3REC empty;

   /* MOVE THE TEMP STORAGE SELECTED INTO THE WORKING STORAGE.*/

  set PA0AW02 empty;
  PA0AW02.PA0AW-TEMP-OA-GROUP = PA0AW04.PA0AW-TEMP-STORE-GRP[XX7];
  PA0AW05.PA0AW-PA2SZQTY-GRP = PA0AW02.PA0AW-QUANTITY-GRP;

   /* SET UP PG3REC STYLE/COLOR/DIMENSION*/

  PG3REC.SY1STNBR = PA0AM001.SY1STNBR;
  PG3REC.SY2CLRID = PA0AM001.SY2CLRID;
  PG3REC.XDMCD = PA0AM001.XDMCD;

  PA0AW00.XX5 = 1; /* INIT INDEX;*/
  PA0AW00.XX6 = 0; /* INIT INDEX;*/

   /* THIS CODE IS TO DETERMINE THE ACTUAL SIZE LABELS NEEDED*/
   /* TO DISPLAY ON THE MAP.*/

  while (PA0AW00.XX5 <= 40)

    if (PA0AW05.PA2SZQTY[XX5] != 0)
      PA0AW00.XX6 = PA0AW00.XX6 + 1;
      PG3REC.SY5SZID[XX6] = PA0AW00.XX5;
    end
    PA0AW00.XX5 = PA0AW00.XX5 + 1;
  end

  PG3REC.XGPCD = "02";
  PG3REC.XQACD = "01";
  PG3REC.PG3FUNCD = "IE";
  PG3REC.PG3DATFM = "C";
  PG3REC.PG3XDVCD = "99";

  XSPG301(); /* CALL SIZE TRANSLATION ROUTINE*/

  if (sysVar.errorCode != "00000000")
    PAWREC.XXXMODID = "605";
    converseLib.validationFailed(10); /* UNEXPECTED ERROR HAS OCCURRED*/
    return;
  end

  if (PG3REC.PG3RETCD > 5)
    PAWREC.XXXMODID = "605";
    converseLib.validationFailed(11); /* DATA IN USE*/
    return;
  end

  set PA0AM002 initial;

  PA0AW00.XX5 = 1;

  while (PA0AW00.XX5 <= 39)
    set PA0AM002.SY4IDDSC[XX5] skip, invisible;
    set PA0AM002.PA2SZQTY[XX5] skip, invisible;
    PA0AW00.XX5 = PA0AW00.XX5 + 1;
  end

  PA0AM002.PA1OANBR = PA0AM001.PA1OANBR;
  PA0AM002.FY1FCTYC = PA0AM001.FY1FCTYC[XX7];
  PA0AM002.XWHCD = PA0AM001.XWHCD[XX7];

  if (PA0AM001.PC6RTADT[XX7] != 0)
    PA0AW00.PA0AW-MMDDYY = PA0AM001.PC6RTADT[XX7];
    PA0AW05.PA0AW-DATE-MM = PA0AW00.PA0AW-MM;
    PA0AW05.PA0AW-SLASH1 = "/";
    PA0AW05.PA0AW-DATE-DD = PA0AW00.PA0AW-DD;
    PA0AW05.PA0AW-SLASH2 = "/";
    PA0AW05.PA0AW-DATE-YY = PA0AW00.PA0AW-YY;
    PA0AM002.PC6RTADT = PA0AW05.PA0AW-DATE;
  else
    PA0AM002.PC6RTADT = " ";
  end

  if (PA0AM001.PA0AM-OLD-PC-EST-HDT[XX7] != 0)
    PA0AW00.PA0AW-MMDDYY = PA0AM001.PA0AM-OLD-PC-EST-HDT[XX7];
    PA0AW05.PA0AW-DATE-MM = PA0AW00.PA0AW-MM;
    PA0AW05.PA0AW-SLASH1 = "/";
    PA0AW05.PA0AW-DATE-DD = PA0AW00.PA0AW-DD;
    PA0AW05.PA0AW-SLASH2 = "/";
    PA0AW05.PA0AW-DATE-YY = PA0AW00.PA0AW-YY;
    PA0AM002.PC6ETSDT = PA0AW05.PA0AW-DATE;
  else
    PA0AM002.PC6ETSDT = " ";
  end

  PA0AM002.PC2CUXID = PA0AM001.PC2CUXID[XX7];
  PA0AM002.YMTCD = PA0AM001.YMTCD[XX7];

  PA0AM002.PA0AM-RTA-DDD-LBL = "RTA:";


  PA0AM002.PA0AM-TOTAL-PA2SZQTY = PA0AM001.PA0AM-TOTAL-PA2SZQTY[XX7];

  set PA0AM002.PC6RTADT initialAttributes;
  set PA0AM002.PC6ETSDT initialAttributes;

  if (PA0AW02.PC3PONBR != 0)
    PA0AW05.PA0AW-PC3PONBR = PA0AW02.PC3PONBR;
    PA0AW05.PA0AW-PO-NUM-LABEL = "  FOR P.O. NUM ";
    PA0AM002.PA0AM-HEADER = PA0AW05.PA0AW-PO-NUM-LINE;
  else
    PA0AM002.PA0AM-HEADER = " ";
  end

  PA0AW00.XX5 = 1;

  while (PG3REC.SY5SZID[XX5] > 0)
    PA0AW00.XX6 = PG3REC.SY5SZID[XX5];
    PA0AM002.SY4IDDSC[XX5] = PG3REC.SY4IDDSC[XX5];
    PA0AM002.PA2SZQTY[XX5] = PA0AW05.PA2SZQTY[XX6];

    set PA0AM002.SY4IDDSC[XX5] initialAttributes;
    set PA0AM002.PA2SZQTY[XX5] initialAttributes;

    PA0AW00.XX5 = PA0AW00.XX5 + 1;

  end

end // end PA0A-60501

// DISPLAY DATA ON SCREEN 3
Function PA0A-607()
   /* --------------------------------------------------------*/
    /* GET DATA AND MOVE TO SCREEN 3*/
   /* --------------------------------------------------------*/

  if (PA0AW00.XX7 == 11)
    PAWREC.XXXMODID = "605";
    converseLib.validationFailed(73); /* NO MORE SIZES*/
    return;
  end

  PA0AW00.XX7 = PA0AW00.XX7 + 1;

  while (PA0AM001.PA0AM-SELECT[XX7] == " ")

    if (PA0AW00.XX7 == 11)
      PAWREC.XXXMODID = "605";
      converseLib.validationFailed(73); /* NO MORE SIZE RECORDS SELECTED*/
      return;
    end

    PA0AW00.XX7 = PA0AW00.XX7 + 1;

  end

  if (PA0AM001.PA0AM-SELECT[XX7] == "S")
    PA0A-60701(); /* FIND WORK RECORD*/
    if (PA0AW00.PA0AW-MATCH-FOUND == "Y")
      PA0A-60702(); /* MOVE DATA TO SCREEN*/
    end
    PA0AM001.PA0AM-SELECT[XX7] = " ";
  end
end // end PA0A-607

// FIND WORK RECORD
Function PA0A-60701()
   /* -------------------------------------------------*/
   /* FIND TYPE '9' WORK RECORD.*/
   /* --------------------------------------------------*/

   /* MOVE THE TEMP STORAGE SELECTED INTO THE WORKING STORAGE.*/

  set PA0AW02 empty;
  PA0AW02.PA0AW-TEMP-OA-GROUP = PA0AW04.PA0AW-TEMP-STORE-GRP[XX7];

  PA0AW00.PA0AW-MATCH-FOUND = "N";
  PA0AW00.XX1 = 1;

   /* **********************************************************************/
   /* ADDED PC-PO-NBR AS A CRITERIA FOR COMPARISON IN THE WHILE LOOP BELOW*/
   /* PC-PO-NBR AND PO-ID WILL NOT BE LOGICALLY SAME HENCEFORTH*/
   /* GREDDY -- 07/18/00 NSC CHANGES.*/
   /* **********************************************************************/

  while (PA0AW00.XX1 <= PA0AW00.PA0AW-NUM-TYPE-NINE
   && PA0AW00.XX1 <= 100
   && PA0AW00.PA0AW-MATCH-FOUND == "N")
    if (PA0AW06.PA1OANBR[XX1] == PA0AM001.PA1OANBR
     && PA0AW06.XDSCD[XX1] == PA0AW02.XDSCD
     && PA0AW06.FY1FCTYC[XX1] == PA0AW02.FY1FCTYC
     && PA0AW06.PC3POIDT[XX1] == PA0AW02.PC3POIDT
     && PA0AW06.PC3PONBR[XX1] == PA0AW02.PC3PONBR
     && PA0AW06.PC6ETSDT[XX1] == PA0AW02.PA0AW-OLD-PC-EST-HDT
     && PA0AW06.PC6RTADT[XX1] == PA0AW02.PC6RTADT
     && PA0AW06.YMTCD[XX1] == PA0AW02.YMTCD
     && PA0AW06.PC2CUXID[XX1] == PA0AW02.PC2CUXID
     && PA0AW06.PC2INSEG[XX1] == PA0AW02.PC2INSEG
     && PA0AW06.XWHCD[XX1] == PA0AW02.XWHCD
     && PA0AW06.OP1PARTN[XX1] == PA0AW02.OP1PARTN
     && PA0AW06.OP1CUOID[XX1] == PA0AW02.OP1CUOID
     && PA0AW06.OP1NORID[XX1] == PA0AW02.OP1NORID)
      PA0AW00.PA0AW-MATCH-FOUND = "Y";
    else
      PA0AW00.XX1 = PA0AW00.XX1 + 1;
    end

  end


end // end PA0A-60701

// BUILD DATA FOR SCREEN 3
Function PA0A-60702()
   /* -------------------------------------------------*/
   /* FIRST GO THRU SIZE DATA AND BUILD PG3REC FOR*/
   /* CALL TO PG1050*/
   /* --------------------------------------------------*/

   /* REMEMBER THAT PA0AW04 CONTAINS THE TEMP STORAGE INFORMATION*/
   /* FOR THE CURRENT PAGE DISPLAYED ON PA0AM001*/

  set PA0AW07 empty;

  set PG3REC empty;

  PA0AW07.PA0AW-PACWRKQT-GRP = PA0AW06.PA0AW-PACWRKQT-GRP[XX1];
  PA0AW07.PA0AW-PACADJQT-GRP = PA0AW06.PA0AW-PACADJQT-GRP[XX1];
  PA0AW07.PA0AW-PACFLADJ-GRP = PA0AW06.PA0AW-PACFLADJ-GRP[XX1];

   /* SET UP PG3REC STYLE/COLOR/DIMENSION*/

  PG3REC.SY1STNBR = PA0AM001.SY1STNBR;
  PG3REC.SY2CLRID = PA0AM001.SY2CLRID;
  PG3REC.XDMCD = PA0AM001.XDMCD;

  PA0AW00.XX5 = 1; /* INIT INDEX;*/
  PA0AW00.XX6 = 0; /* INIT INDEX;*/

   /* THIS CODE IS TO DETERMINE THE ACTUAL SIZE LABELS NEEDED*/
   /* TO DISPLAY ON THE MAP.*/

  while (PA0AW00.XX5 <= 40)

    if (PA0AW07.PACWRKQT[XX5] != 0)
      PA0AW00.XX6 = PA0AW00.XX6 + 1;
      PG3REC.SY5SZID[XX6] = PA0AW00.XX5;
    else
      if (PA0AW07.PACADJQT[XX5] != 0)
        PA0AW00.XX6 = PA0AW00.XX6 + 1;
        PG3REC.SY5SZID[XX6] = PA0AW00.XX5;
      else
        if (PA0AW07.PACFLADJ[XX5] != 0)
          PA0AW00.XX6 = PA0AW00.XX6 + 1;
          PG3REC.SY5SZID[XX6] = PA0AW00.XX5;
        end
      end
    end
    PA0AW00.XX5 = PA0AW00.XX5 + 1;
  end

  PG3REC.XGPCD = "02";
  PG3REC.XQACD = "01";
  PG3REC.PG3FUNCD = "IE";
  PG3REC.PG3DATFM = "C";
  PG3REC.PG3XDVCD = "99";

  XSPG301(); /* CALL SIZE TRANSLATION ROUTINE*/

  if (sysVar.errorCode != "00000000")
    PAWREC.XXXMODID = "605";
    converseLib.validationFailed(10); /* UNEXPECTED ERROR HAS OCCURRED*/
    return;
  end

  if (PG3REC.PG3RETCD > 5)
    PAWREC.XXXMODID = "605";
    converseLib.validationFailed(11); /* DATA IN USE*/
    return;
  end

  set PA0AM003 initial;

  PA0AW00.XX5 = 1;

  while (PA0AW00.XX5 <= 39)
    set PA0AM003.SY4IDDSC[XX5] skip, invisible;
    set PA0AM003.PACWRKQT[XX5] skip, invisible;
    PA0AW00.XX5 = PA0AW00.XX5 + 1;
  end

  PA0AM003.PA1OANBR = PA0AM001.PA1OANBR;
  PA0AM003.FY1FCTYC = PA0AM001.FY1FCTYC[XX7];
  PA0AM003.XWHCD = PA0AM001.XWHCD[XX7];

  if (PA0AM001.PC6RTADT[XX7] != 0)
    PA0AW00.PA0AW-MMDDYY = PA0AM001.PC6RTADT[XX7];
    PA0AW07.PA0AW-DATE-MM = PA0AW00.PA0AW-MM;
    PA0AW07.PA0AW-SLASH1 = "/";
    PA0AW07.PA0AW-DATE-DD = PA0AW00.PA0AW-DD;
    PA0AW07.PA0AW-SLASH2 = "/";
    PA0AW07.PA0AW-DATE-YY = PA0AW00.PA0AW-YY;
    PA0AM003.PC6RTADT = PA0AW07.PA0AW-DATE;
  else
    PA0AM003.PC6RTADT = " ";
  end

  if (PA0AM001.PA0AM-OLD-PC-EST-HDT[XX7] != 0)
    PA0AW00.PA0AW-MMDDYY = PA0AM001.PA0AM-OLD-PC-EST-HDT[XX7];
    PA0AW07.PA0AW-DATE-MM = PA0AW00.PA0AW-MM;
    PA0AW07.PA0AW-SLASH1 = "/";
    PA0AW07.PA0AW-DATE-DD = PA0AW00.PA0AW-DD;
    PA0AW07.PA0AW-SLASH2 = "/";
    PA0AW07.PA0AW-DATE-YY = PA0AW00.PA0AW-YY;
    PA0AM003.PC6ETSDT = PA0AW07.PA0AW-DATE;
  else
    PA0AM003.PC6ETSDT = " ";
  end

  PA0AM003.PC2CUXID = PA0AM001.PC2CUXID[XX7];
  PA0AM003.YMTCD = PA0AM001.YMTCD[XX7];

  PA0AM003.PA0AM-RTA-DDD-LBL = "RTA:";


  PA0AM003.PA0AM-TOTAL-PACWRKQT = PA0AM001.PA0AM-TOTAL-PACWRKQT[XX7];
  PA0AM003.PA0AM-TOTAL-PACADJQT = PA0AM001.PA0AM-TOTAL-PACADJQT[XX7];
  PA0AM003.PA0AM-TOTAL-PACFLADJ = PA0AM001.PA0AM-TOTAL-PACFLADJ[XX7];

  set PA0AM003.PC6RTADT initialAttributes;
  set PA0AM003.PC6ETSDT initialAttributes;

  if (PA0AW06.PC3PONBR[XX1] > 0)
    PA0AW07.PA0AW-PC3PONBR = PA0AW06.PC3PONBR[XX1];
    PA0AW07.PA0AW-PO-NUM-LABEL = "  FOR P.O. NUM ";
    PA0AM003.PA0AM-HEADER = PA0AW07.PA0AW-PO-NUM-LINE;
  else
    PA0AM003.PA0AM-HEADER = " ";
  end

  PA0AW00.XX5 = 1;

  while (PG3REC.SY5SZID[XX5] > 0)
    PA0AW00.XX6 = PG3REC.SY5SZID[XX5];

    PA0AW00.SY4IDDSC = PG3REC.SY4IDDSC[XX5];
    PA0AM003.SY4IDDSC[XX5] = PA0AW00.PA0AW-SY4IDDSC;

    PA0AM003.PACWRKQT[XX5] = PA0AW07.PACWRKQT[XX6];
    PA0AM003.PACADJQT[XX5] = PA0AW07.PACADJQT[XX6];
    PA0AM003.PACFLADJ[XX5] = PA0AW07.PACFLADJ[XX6];

    set PA0AM003.SY4IDDSC[XX5] initialAttributes;
    set PA0AM003.PACWRKQT[XX5] initialAttributes;
    set PA0AM003.PACADJQT[XX5] initialAttributes;
    set PA0AM003.PACFLADJ[XX5] initialAttributes;

    PA0AW00.XX5 = PA0AW00.XX5 + 1;
  end

end // end PA0A-60702

// UPDATE O/A ITEM RECORDS
Function PA0A-610()

   /* UPDATE O/A ITEM RECORDS*/

   /* READ TEMP STORAGE*/

  PA0AW00.PA0AW-CURRENT-TS-PAGE = 1;
  while (PA0AW00.PA0AW-CURRENT-TS-PAGE <= PA0AW00.PA0AW-MAX-PAGES)

    PA0AS-03-TA0050-R();

    PA0AW00.XX5 = 1;
    while (PA0AW00.XX5 <= 12) /* PAGE LENGTH*/

      if (PA0AW04.PA0AW-ETS-UPDATED[XX5] == "Y")

        PA0AW03.PA0AW-TEMP-OA-GROUP = PA0AW04.PA0AW-TEMP-STORE-GRP[XX5];

            /* SELECT UNIQUE DPRODA.VPAITM01*/

        set PA2REC empty;
        PA2REC.PA1OANBR = PA0AM001.PA1OANBR;
        PA2REC.PC3POIDT = PA0AW03.PC3POIDT;
        PA2REC.FY1FCTYC = PA0AW03.FY1FCTYC;
        PA2REC.PC6RTADT = PA0AW03.PC6RTADT;
        PA2REC.PC6ETSDT = PA0AW03.PA0AW-OLD-PC-EST-HDT;
        PA2REC.YMTCD = PA0AW03.YMTCD;
        PA2REC.XWHCD = PA0AW03.XWHCD;
        PA2REC.PC2CUXID = PA0AW03.PC2CUXID;
        PA2REC.SY1STNBR = PA0AM001.SY1STNBR;
        PA2REC.SY2CLRID = PA0AM001.SY2CLRID;
        PA2REC.XDMCD = PA0AM001.XDMCD;

        PA0AS-16-IO4980-S();


            /* UPDATE DPRODA.VPAITM01*/

        PA2REC.PA-UPD-PC-EST-HDT = PA0AW03.PA0AW-NEW-PC-EST-HDT;
        PA2REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
        PA2REC.ZZZCHGTM = XX0XW01.XX0XWTIM;

        PA0AS-08-IO4980-U();

      end

      PA0AW00.XX5 = PA0AW00.XX5 + 1;

    end

    PA0AW00.PA0AW-CURRENT-TS-PAGE = PA0AW00.PA0AW-CURRENT-TS-PAGE + 1;

  end

   /* RESET CURRENT PAGE TO BE THE FIRST PAGE OF TEMP STORAGE*/

  PA0AW00.PA0AW-CURRENT-TS-PAGE = 1;


   /* ------------------ END OF PROCESS PA0A-610 -----------------*/
end // end PA0A-610

// FAST PATH PF-KEY PROCESSING
Function PA0AS-00-FAST-PATH()
   /* ------------------------------------------------------------*/
   /* This procedure will determine what the catoap will be*/
   /* based on the pf-key pressed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf12)
    PAWREC.PAWOANBR = PA0AW00.PA1OANBR;
  end

  if (converseVar.eventKey is pf12) /* RESET SCREEN*/
    COMMAREA.CATOAP = "PA0A";
  end

  if (converseVar.eventKey is pf13) /* OA ITEM SELECT*/
    COMMAREA.CATOAP = "PA0P";
  end

  if (converseVar.eventKey is pf14) /* HISTORICAL COMMENTS*/
    COMMAREA.CATOAP = "PA0N";
  end

  if (converseVar.eventKey is pf16) /* PA0O*/
    COMMAREA.CATOAP = "PA0O";
  end

  if (converseVar.eventKey is pf18) /**/
    COMMAREA.CATOAP = "PA0Q";
  end

  if (converseVar.eventKey is pf19) /* O/A Status maint.*/
    COMMAREA.CATOAP = "PA0Z";
  end

  if (converseVar.eventKey is pf21) /* Header list*/
    COMMAREA.CATOAP = "PA0E";
  end

   /* Setup the leveling for subsequent applications*/

  if (PAWREC.CAFROMAP[1] == " ")
    PAWREC.CAFROMAP[1] = COMMAREA.CACURRAP;
  else
    if (PAWREC.CAFROMAP[2] == " ")
      PAWREC.CAFROMAP[2] = COMMAREA.CACURRAP;
    else
      if (PAWREC.CAFROMAP[3] == " ")
        PAWREC.CAFROMAP[3] = COMMAREA.CACURRAP;
      else
        if (PAWREC.CAFROMAP[4] == " ")
          PAWREC.CAFROMAP[4] = COMMAREA.CACURRAP;
        else
          PAWREC.CAFROMAP[5] = COMMAREA.CACURRAP;
        end
      end
    end
  end


end // end PA0AS-00-FAST-PATH

// SELECT 'S' DPRODA.VPAHDR01
Function PA0AS-01-IO4830-S()
   /* ------------------------------------------------------------*/
   /* Select 's' dproda.vpahdr01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4830" ("S ", SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S01"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODA.VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0AS-01-IO4830-S

// DELETE TEMP STORAGE
Function PA0AS-02-TA0050-P()
   /* -------------------------------------------*/
    /* PURGE ANY TEMPORARY STORAGE*/
   /* -------------------------------------------*/

  set PA0AW04 empty;

  TA5REC.TA5TSQIX = 0; /* CURRENT PAGE NUMBER;*/
  PA0AW00.PA0AW-MAX-PAGES = 0; /* MAX NUMBER OF PAGES*/

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
      /* NEXT SENTENCE*/
  else
    PA0AW00.PA0AW-CURRENT-TS-PAGE = 1; /* CURRENT TEMP STORE PAGE*/
  end

  TA5REC.TA5APPID = "PA0A"; /* APPL ID*/
  TA5REC.TA5FNCCD = "P"; /* SET FUNCTION CODE*/

  try
    call "TA0050" (PA0AW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* TEMPORARY STORAGE*/

   /* -------------------------------------------*/
    /* IF SUCCESSFUL RETURN TO CALLING ROUTINE*/
   /* -------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && TA5REC.TA5RTNCD == 0)          /* NORMAL RETURN*/

    return;

  end

   /* -------------------------------------------------------*/
    /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* -------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* SUBROUTINE PARAMETERS*/

  PAWREC.XXXMODID = "S02";
  converseLib.validationFailed(10); /* SYSTEM ERROR*/

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* MAP APPLICATION*/
  TA1REC.TA1MAP = "M001";
  SQLCA.SQLCAREC = TA5REC.TA5DATA;

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes};

  exit stack;

end // end PA0AS-02-TA0050-P

// READ TEMP STORAGE
Function PA0AS-03-TA0050-R()
   /* ---------------------------------------------*/
    /* OBTAIN TEMP STORAGE PAGE*/
   /* ---------------------------------------------*/

  PA0AW04.PA0AW-TS-PAGE-LENGTH = 2556; /* TEMP STORAGE PAGE LENGTH*/
  TA5REC.TA5TSQIX = PA0AW00.PA0AW-CURRENT-TS-PAGE;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (PA0AW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  PAWREC.XXXMODID = "S03"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1PGMNM = "PA0AS03"; /* Module identification*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* MAP APPLICATION*/
  TA1REC.TA1MAP = "M001"; /* Map name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

end // end PA0AS-03-TA0050-R

// SELECT SET (S1) PA2REC
Function PA0AS-04-IO4980-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from DPRODA.VPAITM01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4980" ("S1", SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S04"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0AS04"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0AS-04-IO4980-S1 ************/
   /* **                                                        ***/
end // end PA0AS-04-IO4980-S1

// FETCH (N1) PA2REC
Function PA0AS-05-IO4980-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4980" ("N1", SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* END OF SELECTED SET*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S05"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0AS05"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* ===> Table view name*/

  TA1REC.TA1TBLKE = PA2REC.PA2KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ************ END OF PA0AS-05-IO4980-N1 **********************/
   /* **                                                        ***/
end // end PA0AS-05-IO4980-N1

// CLOSE (C1) PA2REC
Function PA0AS-06-IO4980-C1()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4980" ("C1", SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S06"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0AS06"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0AS-06-IO4980-C1 ************/
   /* **                                                        ***/
end // end PA0AS-06-IO4980-C1

// ADD O/A COMMENT RECORD
Function PA0AS-07-IO4820-A()
   /* ---------------------------------------------*/
   /* CALL IO4950 TO ADD WORK RECORDS*/
   /* ---------------------------------------------*/

  try
    call "IO4820" ("A ", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/

  PAWREC.XXXMODID = "S43";

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/

    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();

    converseLib.validationFailed(10); /* SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";

    converseLib.clearScreen();

  end

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0AS07 ADD O/A COMMENT RECORD";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* TABLE KEY*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

end // end PA0AS-07-IO4820-A

// UPDATE DPRODA.VPAITM01
Function PA0AS-08-IO4980-U()
   /* ------------------------------------------------------------*/
   /* UPDATE DPRODA.VPAITM01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4980" ("U ", SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end


    /* ------------------------------------------------------------*/
     /* IF ROW NOT FOUND, INDICATE THE DATA WAS UPDATED BY ANOTHER.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100)
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
      PA0AW00.PA0AW-DB2-ERROR = "Y";
      PAWREC.XXXMODID = "S08";
      converseLib.validationFailed(12);
      exit stack;
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S08"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2KEY; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0AS-08-IO4980-U

// WRITE TEMP STORAGE
Function PA0AS-09-TA0050-A()
   /* ------------------------------------------------*/
   /* WRITE TEMP STORAGE*/
   /* -----------------------------------------------*/

  sysVar.arrayIndex = 0;
  PA0AW04.PA0AW-TS-PAGE-LENGTH = 2556; /* TEMP STORAGE PAGE LENGTH*/
  TA5REC.TA5APPID = "PA0A"; /* SET APPLICATION ID*/
  TA5REC.TA5FNCCD = "A"; /* SET FUNCTION CODE*/

  try
    call "TA0050" (PA0AW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* TEMPORARY STORAGE*/

   /* ----------------------------------------------------------*/
   /* IF SUCCESSFUL, INITIALIZE THE STORAGE AREA AND INDICATORS*/
   /* TO BE USED. RETURN TO THE PREVIOUS PROCESS.*/
   /* ----------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && TA5REC.TA5RTNCD == 0)          /* AND NORMAL RETURN CODE*/

    PA0AW00.PA0AW-MAX-PAGES = TA5REC.TA5TSQIX;

    set PA0AW04 empty;

    sysVar.arrayIndex = 0;

    return;

  end

   /* ----------------------------------------------------------*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ----------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* SUBROUTINE PARAMETERS*/

  PAWREC.XXXMODID = "S09";
  converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1PGMNM = "PA0AS09";
  TA1REC.TA1LOC = "WRITE  TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* MAP APPLICATION*/
  TA1REC.TA1MAP = "M001";

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes};

  exit stack;


end // end PA0AS-09-TA0050-A

// SELECT 'S' DPRODA.VBOTLN01
Function PA0AS-11-IO5090-S()
   /* ------------------------------------------------------------*/
   /* Select 's' DPRODA.VBOTLN01*/
   /* ------------------------------------------------------------*/

  /*  */
  /* *************************** Y2K OUT BEGIN ****************************/
  /*  */
  /* CALL IO5090 'S ',SQLCA,PA5REC (NOMAPS,NONCSP,REPLY;*/
  /*  */
  /* *************************** Y2K OUT END ******************************/
  /*  */
  /*  */
  /* *************************** Y2K IN BEGIN *****************************/
  /*  */
  try
    call "VBOTLN02" ("S ", SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end
  /*  */
  /* *************************** Y2K IN END *******************************/
  /*  */

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S11"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODA.VBOTLN01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA5REC.PA5GRP01; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0AS-11-IO5090-S

// SELECT SET (S1) PACREC
Function PA0AS-12-IO4950-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from DPRODA.VPAWRK01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4950" ("S1", SQLCA, PACREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S12"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET DPRODA.VPAWRK01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0AS12"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK01"; /* Table view name*/
  TA1REC.TA1TBLKE = PACREC.PACGRP01; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0AS-12-IO4950-S1 ************/
   /* **                                                        ***/
end // end PA0AS-12-IO4950-S1

// FETCH (N1) PACREC
Function PA0AS-13-IO4950-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4950" ("N1", SQLCA, PACREC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* END OF SELECTED SET*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S13"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0AS13"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK01"; /* ===> Table view name*/

  TA1REC.TA1TBLKE = PACREC.PACGRP01; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ************ END OF PA0AS-13-IO4980-N1 **********************/
   /* **                                                        ***/
end // end PA0AS-13-IO4950-N1

// CLOSE (C1) PACREC
Function PA0AS-14-IO4950-C1()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4950" ("C1", SQLCA, PACREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S14"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0AS14"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK01"; /* Table view name*/
  TA1REC.TA1TBLKE = PACREC.PACGRP01; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0AS-14-IO4950-C1 ************/
   /* **                                                        ***/
end // end PA0AS-14-IO4950-C1

// CALL DATE VALIDATION ROUTINE
Function PA0AS-15-TA0040()
   /* ------------------------------------------------------------*/
   /* call ta2 date convert  routine*/
   /* ------------------------------------------------------------*/

  TA2REC.TA2GRTYP = "A";
  TA2REC.TA2DTOPT = "GREGJUL";
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* date convert*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    return;

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0AW00.XXXMODID = "S30"; /* Module identification*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "TA0040 DATE CONVERT     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Application name*/
  TA1REC.TA1PGMNM = "PA0AS15"; /* Process name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process PA0AS15 -----------------------*/


end // end PA0AS-15-TA0040

// SELECT 'S' DPRODA.VPAITM01
Function PA0AS-16-IO4980-S()
   /* ------------------------------------------------------------*/
   /* Select 'S' DPRODA.VPAITM01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4980" ("S ", SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S16"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT \"S\" DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2KEY; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0AS-16-IO4980-S

// UPDATE TEMP STORAGE
Function PA0AS-17-TA0050-U()
   /* ------------------------------------------------*/
   /* WRITE TEMP STORAGE*/
   /* -----------------------------------------------*/

  sysVar.arrayIndex = 0;
  PA0AW04.PA0AW-TS-PAGE-LENGTH = 2556; /* TEMP STORAGE PAGE LENGTH*/
  TA5REC.TA5APPID = "PA0A"; /* SET APPLI ID*/
  TA5REC.TA5FNCCD = "U"; /* SET FUNCTION CODE*/

  call "TA0050" (PA0AW04, TA5REC) {isNoRefresh = yes};

   /* ------------------------------------------------*/
   /* IF SUCCESSFUL, RETURN TO THE PREVIOUS PROCESS*/
   /* -----------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && TA5REC.TA5RTNCD == 0)         

    return;

  end

   /* ------------------------------------------------------*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* SUBROUTINE PARAMETERS*/

  PAWREC.XXXMODID = "S17";
  converseLib.validationFailed(10); /* SYSTEM ERROR*/

  PA0AW00.PA0AW-DB2-ERROR = "Y";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE M001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* MAP APPLICATION*/
  TA1REC.TA1MAP = "M001";
  SQLCA.SQLCAREC = TA5REC.TA5DATA;

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes};

  exit stack;

end // end PA0AS-17-TA0050-U

// select set dcorp.vsumcd01
Function PA0AS-18-IO2640-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2640" ("S1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  PAWREC.XXXMODID = "S18"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCORP.VSUMCD01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0AS18"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* Formatted error key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/


end // end PA0AS-18-IO2640-S1

// fetch dcorp.vsumcd01 row
Function PA0AS-19-IO2640-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from select for Vsumcd01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2640" ("N1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  PAWREC.XXXMODID = "S19"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT SUM DIV ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0AS19"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* Formatted error key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/


end // end PA0AS-19-IO2640-N1

// close dcorp.vsumcd01
Function PA0AS-20-IO2640-C1()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2640" ("C1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/


  PAWREC.XXXMODID = "S20"; /* Module identification*/
  converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE VSUMCD01 TABLE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0AS20"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP    "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/


end // end PA0AS-20-IO2640-C1

//*** RECORD=PA0AW00 ****
// Working storage for PA0A - ETS UPDATE
// ***********************
Record PA0AW00 type basicRecord
  10 XXXMSGNO XXXMSGNO ; 
  10 XXXMODID XXXMODID ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 CATOAP CATOAP ; 
  10 CAITEM CAITEM ; 
  10 XX1 XX1 ; 
  10 XX2 XX2 ; 
  10 XX3 XX3 ; 
  10 XX4 XX4 ; 
  10 XX5 XX5 ; 
  10 XX6 XX6 ; 
  10 XX7 XX7 ; 
  10 XX8 XX8 ; 
  10 XX9 XX9 ; 
  10 PA0AIDX1 PA0AIDX1 ; 
  10 PA0AIDX2 PA0AIDX2 ; 
  10 PA1OANBR PA1OANBR ; 
  10 PAWBUYDT PAWBUYDT ; 
  10 PA0AW-DATE-CCYYMMDD PA0AW-DATE-CCYYMMDD ; 
    15 PA0AW-DATE-CCC PA0AW-DATE-CCC ; 
    15 PA0AW-DATE-YY PA0AW-DATE-YY ; 
    15 PA0AW-DATE-MM PA0AW-DATE-MM ; 
    15 PA0AW-DATE-DD PA0AW-DATE-DD ; 
  10 PA0AW-MMDDYY PA0AW-MMDDYY ; 
    15 PA0AW-MM PA0AW-MM ; 
    15 PA0AW-DD PA0AW-DD ; 
    15 PA0AW-YY PA0AW-YY ; 
  10 PA0AW-PA1BUYMO PA0AW-PA1BUYMO ; 
    15 * num(3) ; 
    15 PA0MW-PA1BUYMO-CC PA0MW-PA1BUYMO-CC ; 
    15 PA0AW-PA1BUYMO-YY PA0AW-PA1BUYMO-YY ; 
    15 PA0AW-PA1BUYMO-MM PA0AW-PA1BUYMO-MM ; 
  10 PA0AW-CALC-YY PA0AW-CALC-YY ; 
  10 PA0AW-CALC-MM PA0AW-CALC-MM ; 
  10 PA0AW-QUANTITY-GRP PA0AW-QUANTITY-GRP ; 
    15 PA0AW-QTY PA0AW-QTY [40] ; 
  10 PA0AW-TOTAL-PA2SZQTY PA0AW-TOTAL-PA2SZQTY ; 
  10 PA0AW-TOTAL-PACWRKQT PA0AW-TOTAL-PACWRKQT ; 
  10 PA0AW-TOTAL-PACADJQT PA0AW-TOTAL-PACADJQT ; 
  10 PA0AW-TOTAL-PACFLADJ PA0AW-TOTAL-PACFLADJ ; 
  10 PA0AW-TIME PA0AW-TIME ; 
    15 PA0AW-HOUR PA0AW-HOUR ; 
    15 PA0AW-MIN PA0AW-MIN ; 
  10 PA0AW-HHMM PA0AW-HHMM ; 
    15 PA0AW-HH PA0AW-HH ; 
    15 PA0AW-COLON PA0AW-COLON ; 
    15 PA0AW-MN PA0AW-MN ; 
  10 PA0AW-REQ-FOR-DATA-FLAG PA0AW-REQ-FOR-DATA-FLAG ; 
  10 PA0AW-KEY-CHANGED PA0AW-KEY-CHANGED ; 
  10 PA0AW-DB2-ERROR PA0AW-DB2-ERROR ; 
  10 PA0AW-MAX-PAGES PA0AW-MAX-PAGES ; 
  10 PA0AW-CURRENT-TS-PAGE PA0AW-CURRENT-TS-PAGE ; 
  10 PA0AW-CONFIRM-MSG-SHOWN PA0AW-CONFIRM-MSG-SHOWN ; 
  10 PA0AW-TEMP-PAGE-PRINTED PA0AW-TEMP-PAGE-PRINTED ; 
  10 PA0AW-DISPLAY-MAP PA0AW-DISPLAY-MAP ; 
  10 PA0AW-READ-ONLY PA0AW-READ-ONLY ; 
  10 PA0AW-MATCH-FOUND PA0AW-MATCH-FOUND ; 
  10 SY4IDDSC SY4IDDSC ; 
    15 * char(1) ; 
    15 PA0AW-SY4IDDSC PA0AW-SY4IDDSC ; 
      20 PA0AW-SY4IDDSC1 PA0AW-SY4IDDSC1 ; 
      20 PA0AW-SY4IDDSC2 PA0AW-SY4IDDSC2 ; 
      20 PA0AW-SY4IDDSC3 PA0AW-SY4IDDSC3 ; 
      20 PA0AW-SY4IDDSC4 PA0AW-SY4IDDSC4 ; 
  10 PA0AW-NUM-TYPE-NINE PA0AW-NUM-TYPE-NINE ; 
  10 PA0ANMWH PA0ANMWH ; 
  10 PA0AW-UPDATE-ETS-FLAG PA0AW-UPDATE-ETS-FLAG ; 
  10 PA0AMCHS PA0AMCHS ; 
  10 PA0AW-REGION-WHSE PA0AW-REGION-WHSE [3] ; 
  10 PA0AW-ALLUSA-WHSE PA0AW-ALLUSA-WHSE [20] ; 
end // end PA0AW00

//*** RECORD=PA0AW01 ****
// Working storage for PA0A - ITEM SELECTION
// ***********************
Record PA0AW01 type basicRecord
  10 YESCD YESCD ; 
  10 YESSDESC YESSDESC ; 
  10 PA1HLDFL PA1HLDFL ; 
  10 YETCD YETCD ; 
  10 YETSDESC YETSDESC ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 PT3YYMM PT3YYMM ; 
  10 PA0AW-BL-ZZ-SDT PA0AW-BL-ZZ-SDT ; 
  10 PA1RQQTY PA1RQQTY ; 
  10 PA0AW-SELECT PA0AW-SELECT [12] ; 
  10 PA0AW-OA-ZZ-SDT PA0AW-OA-ZZ-SDT ; 
  10 PA0AW-OA-ZZ-SETUP-HHMM PA0AW-OA-ZZ-SETUP-HHMM ; 
  10 PA0AW-ITEM-ZZ-SDT PA0AW-ITEM-ZZ-SDT ; 
  10 PA0AW-ITEM-ZZ-STM PA0AW-ITEM-ZZ-STM ; 
  10 PA0AW-PC3POIDT PA0AW-PC3POIDT ; 
    15 PA0AW-PO-ID-YY PA0AW-PO-ID-YY ; 
    15 PA0AW-PO-ID-DASH1 PA0AW-PO-ID-DASH1 ; 
    15 PA0AW-PO-ID-MM PA0AW-PO-ID-MM ; 
    15 PA0AW-PO-ID-DASH2 PA0AW-PO-ID-DASH2 ; 
    15 PA0AW-PO-ID-BUY-MM PA0AW-PO-ID-BUY-MM ; 
  10 PA0AW-DATE-MMDDYY PA0AW-DATE-MMDDYY ; 
    15 PA0AW-DATE-MM PA0AW-DATE-MM ; 
    15 PA0AW-DATE-DASH1 PA0AW-DATE-DASH1 ; 
    15 PA0AW-DATE-DD PA0AW-DATE-DD ; 
    15 PA0AW-DATE-DASH2 PA0AW-DATE-DASH2 ; 
    15 PA0AW-DATE-YY PA0AW-DATE-YY ; 
  10 PA0AW-TOTAL-ADJUST PA0AW-TOTAL-ADJUST ; 
  10 PA0AW-UPDATE-ETS PA0AW-UPDATE-ETS ; 
end // end PA0AW01

//*** RECORD=PA0AW02 ****
// THIS RECORD IS USED TO STORE THE OA ITEMS.  THESE ITEMS ARE
// WRITTEN OUT TO TEMP STORAGE.
// 
// KEEP IN MIND THAT THE TEMP STORAGE MAXIMUM LENGTH IS 4092.
// SINCE A TEMP STORAGE PAGE CONTAINS 11 ROWS, THE MAXIMUM
// LENGTH OF THIS WORKING STORAGE GROUP IS 372.
// 
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 06/10/93   MSMIT2   New record.
// ***********************
Record PA0AW02 type basicRecord
  5 PA0AW-TEMP-OA-GROUP PA0AW-TEMP-OA-GROUP [12] ; 
    10 PA0AW-SELECT PA0AW-SELECT ; 
    10 PA0AW-TYPE PA0AW-TYPE ; 
    10 PA0AW-ETS-UPDATED PA0AW-ETS-UPDATED ; 
    10 PC3PONBR PC3PONBR ; 
    10 PC6ITMNB PC6ITMNB ; 
    10 XDSCD XDSCD ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 PC3POIDT PC3POIDT ; 
    10 XWHCD XWHCD ; 
    10 PC2CUXID PC2CUXID ; 
    10 PC4ORTYP PC4ORTYP ; 
    10 PC6RTADT PC6RTADT ; 
    10 PA0AW-OLD-PC-EST-HDT PA0AW-OLD-PC-EST-HDT ; 
    10 PA0AW-NEW-PC-EST-HDT PA0AW-NEW-PC-EST-HDT ; 
    10 PC2INSEG PC2INSEG ; 
    10 YMTCD YMTCD ; 
    10 OP1PARTN OP1PARTN ; 
    10 OP1CUOID OP1CUOID ; 
    10 OP1NORID OP1NORID ; 
    10 PA0AW-QUANTITY-GRP PA0AW-QUANTITY-GRP ; 
    10 * char(1) ; 
end // end PA0AW02

//*** RECORD=PA0AW03 ****
// THIS RECORD IS USED TO STORE A SINGLE O/A ITEM.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 06/10/93   MSMIT2   New record.
// ***********************
Record PA0AW03 type basicRecord
  5 PA0AW-TEMP-OA-GROUP PA0AW-TEMP-OA-GROUP ; 
    10 PA0AW-SELECT PA0AW-SELECT ; 
    10 PA0AW-TYPE PA0AW-TYPE ; 
    10 PA0AW-ETS-UPDATED PA0AW-ETS-UPDATED ; 
    10 PC3PONBR PC3PONBR ; 
    10 PC6ITMNB PC6ITMNB ; 
    10 XDSCD XDSCD ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 PC3POIDT PC3POIDT ; 
    10 XWHCD XWHCD ; 
    10 PC2CUXID PC2CUXID ; 
    10 PC4ORTYP PC4ORTYP ; 
    10 PC6RTADT PC6RTADT ; 
    10 PA0AW-OLD-PC-EST-HDT PA0AW-OLD-PC-EST-HDT ; 
    10 PA0AW-NEW-PC-EST-HDT PA0AW-NEW-PC-EST-HDT ; 
    10 PC2INSEG PC2INSEG ; 
    10 YMTCD YMTCD ; 
    10 OP1PARTN OP1PARTN ; 
    10 OP1CUOID OP1CUOID ; 
    10 OP1NORID OP1NORID ; 
    10 PA0AW-QUANTITY-GRP PA0AW-QUANTITY-GRP ; 
    10 * char(1) ; 
end // end PA0AW03

//*** RECORD=PA0AW04 ****
// THIS RECORD CONTAINS THE 12 RECORDS THAT ARE TO BE PLACED
// INTO/READ OUT OF TEMP STORAGE
// 
// KEEP IN MIND THAT THE TEMP STORAGE MAXIMUM LENGTH IS 4092.
// SINCE A TEMP STORAGE PAGE CONTAINS 11 ROWS, THE MAXIMUM
// LENGTH OF THIS WORKING STORAGE GROUP IS 372.
// 
// ***********************
Record PA0AW04 type basicRecord
  5 PA0AW-TS-PAGE-LENGTH PA0AW-TS-PAGE-LENGTH ; 
  5 * char(2556) ; 
    10 PA0AW-TEMP-STORE-GRP PA0AW-TEMP-STORE-GRP [12] ; 
      15 PA0AW-SELECT PA0AW-SELECT ; 
      15 PA0AW-TYPE PA0AW-TYPE ; 
      15 PA0AW-ETS-UPDATED PA0AW-ETS-UPDATED ; 
      15 * char(32) ; 
      15 PA0AW-NEW-PC-EST-HDT PA0AW-NEW-PC-EST-HDT ; 
      15 * char(173) ; 
end // end PA0AW04

//*** RECORD=PA0AW05 ****
// Working storage for PA0A - USED TO KEEP TRACK OF TOTALS FOR
// MAP2 (DISPLAY O/A SIZE INFORMATION).
// ***********************
Record PA0AW05 type basicRecord
  10 PA0AW-PA2SZQTY-GRP PA0AW-PA2SZQTY-GRP ; 
    15 PA2SZQTY PA2SZQTY [40] ; 
  10 PA0AW-PO-NUM-LINE PA0AW-PO-NUM-LINE ; 
    15 PA0AW-PO-NUM-LABEL PA0AW-PO-NUM-LABEL ; 
    15 PA0AW-PC3PONBR PA0AW-PC3PONBR ; 
    15 * char(2) ; // HEADER FILLER
  10 PA0AW-DATE PA0AW-DATE ; 
    15 PA0AW-DATE-MM PA0AW-DATE-MM ; 
    15 PA0AW-SLASH1 PA0AW-SLASH1 ; 
    15 PA0AW-DATE-DD PA0AW-DATE-DD ; 
    15 PA0AW-SLASH2 PA0AW-SLASH2 ; 
    15 PA0AW-DATE-YY PA0AW-DATE-YY ; 
end // end PA0AW05

//*** RECORD=PA0AW06 ****
// THIS RECORD SAVES THE TYPE '9' WORK RECORDS FOR THE O/A.
// THESE ARE USED LATER TO MATCH TO THE O/A ITEMS.
// ***********************
Record PA0AW06 type basicRecord
  5 * char(569) [100] ; 
    10 PACRECG1 PACRECG1 ; 
      15 PA1OANBR PA1OANBR ; 
      15 PACGRPCD PACGRPCD ; 
      15 PACORDTY PACORDTY ; 
      15 PACSEVAL PACSEVAL ; 
      15 XDSCD XDSCD ; 
      15 PACADDRS PACADDRS ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 PC3POIDT PC3POIDT ; 
      15 PC3PONBR PC3PONBR ; 
      15 PC6ITMNB PC6ITMNB ; 
      15 PACFPONO PACFPONO ; 
      15 PACFPCIT PACFPCIT ; 
      15 PC6ETSDT PC6ETSDT ; 
      15 PC6RTADT PC6RTADT ; 
      15 YMTCD YMTCD ; 
      15 PC2CUXID PC2CUXID ; 
      15 PC2INSEG PC2INSEG ; 
      15 XWHCD XWHCD ; 
      15 OP1PARTN OP1PARTN ; 
      15 OP1CUOID OP1CUOID ; 
      15 OP1NORID OP1NORID ; 
      15 PACFBQTY PACFBQTY ; 
      15 XFRCD XFRCD ; 
      15 FB-LATE-BK-FL FB-LATE-BK-FL ; 
      15 FB-LATE-BK-FL-MDT FB-LATE-BK-FL-MDT ; 
      15 PA0AW-PACWRKQT-GRP PA0AW-PACWRKQT-GRP ; 
      15 PA0AW-PACADJQT-GRP PA0AW-PACADJQT-GRP ; 
      15 PA0AW-PACFLADJ-GRP PA0AW-PACFLADJ-GRP ; 
      15 ZZZSDT ZZZSDT ; 
      15 ZZZSTM ZZZSTM ; 
      15 ZZZCHGDT ZZZCHGDT ; 
      15 ZZZCHGTM ZZZCHGTM ; 
      15 ZZZCHGCT ZZZCHGCT ; 
    10 PA0AW-ITEM-MATCHED PA0AW-ITEM-MATCHED ; 
end // end PA0AW06

//*** RECORD=PA0AW07 ****
// Working storage for PA0A - USED TO KEEP TRACK OF TOTALS FOR
// MAP3 (DISPLAY WORK RECS SIZE INFORMATION)
// ***********************
Record PA0AW07 type basicRecord
  10 PA0AW-PACWRKQT-GRP PA0AW-PACWRKQT-GRP ; 
    15 PACWRKQT PACWRKQT [40] ; 
  10 PA0AW-PACADJQT-GRP PA0AW-PACADJQT-GRP ; 
    15 PACADJQT PACADJQT [40] ; 
  10 PA0AW-PACFLADJ-GRP PA0AW-PACFLADJ-GRP ; 
    15 PACFLADJ PACFLADJ [40] ; 
  10 PA0AW-PO-NUM-LINE PA0AW-PO-NUM-LINE ; 
    15 PA0AW-PO-NUM-LABEL PA0AW-PO-NUM-LABEL ; 
    15 PA0AW-PC3PONBR PA0AW-PC3PONBR ; 
    15 * char(2) ; 
  10 PA0AW-DATE PA0AW-DATE ; 
    15 PA0AW-DATE-MM PA0AW-DATE-MM ; 
    15 PA0AW-SLASH1 PA0AW-SLASH1 ; 
    15 PA0AW-DATE-DD PA0AW-DATE-DD ; 
    15 PA0AW-SLASH2 PA0AW-SLASH2 ; 
    15 PA0AW-DATE-YY PA0AW-DATE-YY ; 
end // end PA0AW07

//*** RECORD=PACRECR1 ****
// ******* Order Adjustments Working OA Items  Table    *******
// 
// DB2 TABLE VIEW:      DPRODA.VPAWRK01
// 
// COPYLIB MEMBER:      DCL00810
// 
// I/O MODULE:          IO4950
// 
// KEY TO DB2 TABLE:    pa1oanbr,           OA NUMBER
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 01/11/88   RSAMUE   New record.
// 06/10/91   MSMIT2   Database changes - see PACREC.  THIS
//                     RECORD IS USED IN PA0P.
// 10/04/91   dhales   Database changes - see PACREC.  THIS
//                     RECORD IS USED IN PA0P.
// ************************
Record PACRECR1 type basicRecord // VAGen Info - redefined PACREC
  5 PACRECG1 PACRECG1 ; 
    10 PA1OANBR PA1OANBR ; 
    10 PACGRPCD PACGRPCD ; 
    10 PACORDTY PACORDTY ; 
    10 PACSEVAL PACSEVAL ; 
    10 XDSCD XDSCD ; 
    10 PACADDRS PACADDRS ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 PC3POIDT PC3POIDT ; 
    10 PC3PONBR PC3PONBR ; 
    10 PC6ITMNB PC6ITMNB ; 
    10 PACFPONO PACFPONO ; 
    10 PACFPCIT PACFPCIT ; 
    10 PC6ETSDT PC6ETSDT ; 
    10 PC6RTADT PC6RTADT ; 
    10 YMTCD YMTCD ; 
    10 PC2CUXID PC2CUXID ; 
    10 PC2INSEG PC2INSEG ; 
    10 XWHCD XWHCD ; 
    10 OP1PARTN OP1PARTN ; 
    10 OP1CUOID OP1CUOID ; 
    10 OP1NORID OP1NORID ; 
    10 PACFBQTY PACFBQTY ; 
    10 XFRCD XFRCD ; 
    10 FB-LATE-BK-FL FB-LATE-BK-FL ; 
    10 FB-LATE-BK-FL-MDT FB-LATE-BK-FL-MDT ; 
    10 PA0PWBGP PA0PWBGP ; 
    10 PA0PWJGP PA0PWJGP ; 
    10 PA0PWAGP PA0PWAGP ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZSTM ZZZSTM ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end PACRECR1

// index  9
DataItem PA0AIDX1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index  9
DataItem PA0AIDX2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AMCHS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0ANMWH int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// VALID WHSE CODES FOR REGION
DataItem PA0AW-ALLUSA-WHSE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-BL-ZZ-SDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-CALC-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-CALC-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-COLON char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-CONFIRM-MSG-SHOWN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-CURRENT-TS-PAGE num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-DATE-CCC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-DATE-CCYYMMDD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-DATE-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-DATE-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-DATE-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-DATE-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-DATE-MMDDYY char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-DATE-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-DB2-ERROR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-DISPLAY-MAP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-ETS-UPDATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-HHMM char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-HOUR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-ITEM-MATCHED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// O/A ITEM SETUP DATE
DataItem PA0AW-ITEM-ZZ-SDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// O/A ITEM SETUP TIME
DataItem PA0AW-ITEM-ZZ-STM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-KEY-CHANGED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-MATCH-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MAX NUMBER OF TEMP PAGES
DataItem PA0AW-MAX-PAGES num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-MIN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-MMDDYY num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-MN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// UPDATED ETS DATE
DataItem PA0AW-NEW-PC-EST-HDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-NUM-TYPE-NINE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// O/A SETUP DATE
DataItem PA0AW-OA-ZZ-SDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// O/A SETUP TIME
DataItem PA0AW-OA-ZZ-SETUP-HHMM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PC_EST_HDT
DataItem PA0AW-OLD-PC-EST-HDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-PA1BUYMO num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-PA1BUYMO-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-PA1BUYMO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-PA2SZQTY-GRP char(160)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PA_ADJ_WRK_QTY(1,40)
DataItem PA0AW-PACADJQT-GRP char(160)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// PA_ADJ_SZ_QTY(1,40)
DataItem PA0AW-PACFLADJ-GRP char(160)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PA_ORD_WRK_QTY(1,40)
DataItem PA0AW-PACWRKQT-GRP char(160)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-PC3POIDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// HEADER PO NUMBER
DataItem PA0AW-PC3PONBR num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-PO-ID-BUY-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-PO-ID-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-PO-ID-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-PO-ID-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-PO-ID-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// HEADER SECTION 1
DataItem PA0AW-PO-NUM-LABEL char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-PO-NUM-LINE char(23)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-QUANTITY-GRP char(160)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-READ-ONLY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VALID WHSE CODES FOR REGION
DataItem PA0AW-REGION-WHSE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-REQ-FOR-DATA-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-SELECT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-SLASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-SLASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-SY4IDDSC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-SY4IDDSC1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-SY4IDDSC2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-SY4IDDSC3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-SY4IDDSC4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-TEMP-OA-GROUP char(213)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-TEMP-PAGE-PRINTED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record group level
DataItem PA0AW-TEMP-STORE-GRP char(213)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-TIME num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-TOTAL-ADJUST int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PA_ADJ_SZ_QTY(1,40)
DataItem PA0AW-TOTAL-PA2SZQTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PA_ADJ_SZ_QTY(1,40)
DataItem PA0AW-TOTAL-PACADJQT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-TOTAL-PACFLADJ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PA_ADJ_SZ_QTY(1,40)
DataItem PA0AW-TOTAL-PACWRKQT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// TEMP STORAGE PAGE LENGTH
DataItem PA0AW-TS-PAGE-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0AW-TYPE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-UPDATE-ETS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-UPDATE-ETS-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0AW-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0MW-PA1BUYMO-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PAC GROUP MOVE
DataItem PACRECG1 char(568)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

