package pa0z;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom2.YSMREC;
import corpcom3.XPPA001;
import corpcom3.XPPA020;
import corpcom3.XPPA100;
import corpcom3.XPXX001;
import corpcom3.XPYES01;
import corpcom4.XSPAS01;
import corpcom4.XSPAS04;
import corpcom4.XSPG202;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XX2;
import corpcom7.XX3;
import corpcom7.XXX1;
import corpcom7.XXXINIT;
import corpcom7.XXXMODID;
import corpcom7.XXXMSGNO;
import corpcom7.XXXPGUID;
import corpcom7.XXXUSER;
import corpcom7.ZZZSTM;
import corpx1.XCTCD;
import corpx1.XDMCD;
import corpx1.XDSCD;
import corpx1.XFRCD;
import corpx2.XNXCD;
import corpx2.XPGCD;
import corpx2.XQACD;
import corpx2.XUMCD;
import corpx2.XWHCD;
import corpy2.YESABRV;
import corpy2.YESCD;
import corpy2.YESTBL;
import corpy2.YETABRV;
import corpy2.YETCD;
import corpy2.YETRLVFL;
import corpy2.YETTBL;
import corpy2.YMTCD;
import corpy2.YSMXDV;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import fb.common.FB-LATE-BK-FL;
import fb.common.FB-LATE-BK-FL-MDT;
import fb.common.FB9REC;
import fb.common.FBHREC;
import fb.common.FBKREC;
import fb.common.FBMREC;
import fy.common.FY1FCTSN;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import ku.common.KUCCOID;
import ku.common.KUMSTRID;
import op.common.OP1CUNDT;
import op.common.OP1CUOID;
import op.common.OP1NORID;
import op.common.OP1PARTN;
import pa.common.*;
import pa.common.PA-AFRGT-RQT-ID;
import pa.common.PA-APPL-BUY-BTL-FL;
import pa.common.PA-UPD-PC-EST-HDT;
import pa.common.PA1BUYMO;
import pa.common.PA1CMIND;
import pa.common.PA1FCRFL;
import pa.common.PA1GROUP;
import pa.common.PA1HLDFL;
import pa.common.PA1INTFL;
import pa.common.PA1KEY;
import pa.common.PA1OANBR;
import pa.common.PA1OATXT;
import pa.common.PA1REC;
import pa.common.PA1RQQTY;
import pa.common.PA1SBFMO;
import pa.common.PA1YESDT;
import pa.common.PA1YESID;
import pa.common.PA1YETBY;
import pa.common.PA1YETDT;
import pa.common.PA2REC;
import pa.common.PA2SZQTY;
import pa.common.PA4FAPVL;
import pa.common.PA4FCTDC;
import pa.common.PA4FCTQT;
import pa.common.PA4REC;
import pa.common.PA5REC;
import pa.common.PA7REC;
import pa.common.PA8REC;
import pa.common.PA9REC;
import pa.common.PACFPCIT;
import pa.common.PACFPONO;
import pa.common.PAEREC;
import pa.common.PAGREC;
import pa.common.PASREC;
import pa.common.PAWBUYDT;
import pa.common.PAWREC;
import pc.common.PC-REL-PLN-REF-NBR;
import pc.common.PC-XCT-ORIG-CD;
import pc.common.PC2CUXID;
import pc.common.PC2INSEG;
import pc.common.PC2NAME;
import pc.common.PC2REC;
import pc.common.PC3POIDT;
import pc.common.PC3PONBR;
import pc.common.PC4ORTYP;
import pc.common.PC6ETSDT;
import pc.common.PC6ITMNB;
import pc.common.PC6RTADT;
import pc.common.PCMREC;
import pc.common.PCYREC;
import pg.common.PG1SC4CD;
import pg.common.PG2REC;
import sy.common.SY1STNBR;
import sy.common.SY1STYNM;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VDRSAT01;
import vv.common.VFRZIT02;
import vv.common.VPAWRK03;

//*** PROGRAM=PA0Z ****
// Note: If this program is changed, check PA1210 to make sure
// corresponding changes need to be made.
// 
// information for each order adjustment.  The user can change
// the status(s) COMMENTS(s)
// 
// Program entry is supported through the main menu, pfkey
// usage and by fastpathing.  Pfkey usage supports a list of
// selected order adjustment numbers for input to this
// application.
// 
// If program entry occurs without a list of order adjustment
// numbers, the cursor is placed on the order adjustment
// number; otherwise, it is placed at the first selection
// field.
// 
// 
// Pressing pf12 displays the next order adjustment from the
// transferred header list; Other pf keys transfer control to
// other 'PA' applications.
// 
// 
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 05/07/91   rsamue   New application.
// 02/14/92   dhales   fix to allow stat 80 go to 05
// 03/12/92   dhales   db changes and fix status 98 to set fcty
//                     status as well
// 04/02/92   dhales   PA248 TO PROCESS LATE BOOK AT HEADER
//                     LEVEL AND ALLOW USER TO CHANGE
// 05/21/92   dhales   correct security for late book flag
// 07/27/92   dhales   add cust xref, set hdr 84 when fcty 84
// 08/12/92   dhales   pa295 allow hdr stat 84 to go to 98
// 10/06/92   dhales   pa291 new hdr stat 06 pre-approved
// 12/09/92   dhales   pa318 add pfkey for pa0p
//  2/23/93   dhales   pa310 add flag to indicate needing ets
//  3/25/93   pkhan    pa328 allow chg fcty sta cd frm 20 to 15
//  4/01/93   pkhan    pa331 allow scheduling to change HDR
//                     stat from 80 to 01
//  4/23/93   pkhan    debug for date changed after changing
//                     factory comment
//  4/30/93   pkhan    in addition to pa328, allow fcty code
//                     change from 19 to 15
//  5/17/93   pkhan    PA334 ALLOW CHG FCTY STA CD FRM 15 TO 00
//  5/25/93   pkhan    PA324 DISPLAY COMMENT DATE
//  6/04/93   MSMIT2   STANDARDIZE PF KEYS.
//  6/25/93   MSMIT2   CHANGED XSPAS04. ADD PF5 TO TRANSFER TO
//                     PA0A.
//  7/13/93   pkhan    pa0337: add change flag no 3 to allow
//                     changes only to hdr comment & hold flg
//  7/14/93   pkhan    pa0338: allow only OA type DM,NM,OR,NO,
//                     SE to change stat to 06
//  7/15/93   pkhan    pa0341: only scty change flag level 4
//                     can change hdr stat from 84 to 01,
//                     and fcty stat from 84 to 00.
//  8/03/93   pkhan    pa9999: make it always add the comment
//                     when hdr stat is changed to '98'.
//  8/06/93   MSMIT2   DATEABASE CHANGES - ADDED SETUP TIME TO
//                     THE MAP.
//  9/14/93   MSMIT2   ABEND IN PA0Z-550 WHEN EMPTY MAP AND
//                     CURSOR ON STY/CLR/DIM FIELD.
// 11/08/93   MSMIT2   DATABASE CHANGES - ADD AIR FREIGHT NUM
//                     TO PA0ZW01 PA1REC LAYOUT.
// 12/02/93   MSMIT2   FB322 - CONSIDER THE FOLLOWING TO BE
//                     ACTIVE BUY STATUS CODES (USE DCORP.
//                     VSUMCD01) FOR DOMESTIC SALES ORDERS FOR
//                     THE CURRENT BUY AND IF THE STATUS
//                     CHANGES FROM/TO THIS GROUP OF CODES AND:
//                     1. BEFORE CUTOFF - RESET THE BUY FLAGS
//                        TO 'N'.
//                     2. AFTER CUTOFF - ERROR.
// 12/16/93   MSMIT2   PA9999: NOT ALWAYS WRITTING COMMENT
//                     RECORDS WHEN HEADER STATUS CHANGED.
// 01/10/94   MSMIT2   PA9999: ALLOW PREAVICES TO BE SET TO
//                     STATUS '06'.
// 01/21/94   MSMIT2   PA9999: PA0Z-515 CHECK FBHREC.FB8BUYDT
//                     AGAINST FB9REC.FB8BUYDT.
// 01/24/94   MSMIT2   PA9999: TAKE OUT EDIT AGAINST BUY DATE
//                     JADKIN.
// 02/08/94   PMAINW   PA302 : DISPLAY A/F NUMBER, DON'T ALLOW
//                             AIFREIGHT RE-WORKS.
// 06/17/94   MSMIT2   ALLOW AIR FREIGHT O/AS TO BE CANCELLED
//                     IF IN STATUS '00' AND THERE ARE NO
//                     ITEMS (AS LONG AS THE O/A DID NOT COME
//                     FROM FORECASTING).
// 12/15/94  pmainw    Handle twenty product lines on vfsctl01.
// 01/24/95  MSMIT2    ALLOW INQUIRY ONLY FOR EUROPEAN O/AS.
// 07/25/95  MSMIT2    IF PRODUCT LINE INVALID FOR SCHEDULER
//                     SKIP FBMREC FLAG RESET (PA0Z-66001).
// 09/05/95  MSMIT2    DON'T ALLOW REWORKS AFTER STATUS '15'.
// 10/30/95  MSMIT2    ALLOW O/AS FROM FORECASTING TO BE COPIED
//                     USING THE '98' TO CANCEL OLD O/A.
// 12/06/95  jcarl1    add byte to qty for wrapfit.
// 09/05/96  SKEOBO    EXPAND FACTORY CODE ON PO NUMBER TO
//                     3 BYTES.
// ------- -------- ------ ----------------------------------
// Y2KFIX  01/07/98 CSAWKI MODIFICATIONS MADE TO:
//                         1) PA0ZS-15-IO5090-S1
//                         2) PA0ZS-16-IO5090-N1
//                         3) PA0ZS-17-IO5090-C1
//                         4) PA0ZS-18-IO5090-A
//                         5) PA0ZM001
// PA1122  03/19/98 WROBIN Stock Transfer type O.A.s
// PA9999  08/19/98 WROBIN Not seting NIL cancel to fystat 96
// PA679            MSEVAL CHANGE OA SYSTEM FOR 'AF's.
// 09/21/99  SKATHI    TO RESET BUY-STATUS INDICATOR TO 'N'
//                     FOR ANY CANCELLED AUTO DRS OA'S .
// 10/11/99  SKATHI    BUG IN VDNORD01 UPDATE SQLCODE VERIFN
//                     FOR ANY CANCELLED AUTO DRS OA'S .
// 02/16/00  SKATHI    TO RESET BUY-STATUS INDICATOR TO 'N'
//                     FOR ANY CANCELLED AUTO DRS OA'S IN
//                     VDRSAT01 TABLE
// 05/08/00  GREDDY    NSC CHANGES W.R.T REL-PLN-NBR
// 07/06/00  GREDDY    Bug during VFRZIT01 add fixed.
// 05/10/01  GREDDY    Allow users to identify forecast overrun
// *********************
Program PA0Z type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FB9REC FB9REC; // record
  FBHREC FBHREC; // record
  FBKREC FBKREC; // record
  FBMREC FBMREC; // record
  FY1REC FY1REC; // record
  PA0ZW00 PA0ZW00; // record
  PA0ZW01 PA0ZW01; // record
  PA0ZW02 PA0ZW02; // record
  PA1REC PA1REC; // record
  PA2REC PA2REC; // record
  PA4REC PA4REC; // record
  PA5REC PA5REC; // record
  PA7REC PA7REC; // record
  PA8REC PA8REC; // record
  PA9REC PA9REC; // record
  PAEREC PAEREC; // record
  PAGREC PAGREC; // record
  PAIREC PAIREC; // record
  PASREC PASREC; // record
  PAWREC PAWREC; // record
  PAYREC PAYREC; // record
  PC2REC PC2REC; // record
  PCMREC PCMREC; // record
  PCYREC PCYREC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VDRSAT01 VDRSAT01; // record
  VFRZIT02 VFRZIT02; // record
  VPAITM03 VPAITM03; // record
  VPAWRK03 VPAWRK03; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record
  YSMREC YSMREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PA0ZT01; // table
  use PAZTBL {deleteAfterUse = yes}; // table
  use YESTBL {deleteAfterUse = yes}; // table
  use YETTBL {deleteAfterUse = yes}; // table
  use PA0ZM.PA0ZM001, // form
  	PA0ZM.XX0XM001,
  	PA0ZM.XMPAM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPA001: XPPA001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    set PA0ZW00 empty;
    set PA0ZW01 empty;
    set PA0ZW02 empty;
    set TA1REC empty;
    set TA5REC empty;
    set SQLCA empty;
    set ERRSQLCA empty;
    set XX0XW01 empty;
    set XX0XW02 empty;
    set PA0ZM001 initial; /* Initialize map1 output area*/
    set XX0XM001 initial; /* Initialize pop-up window area*/

    PA0ZW01.PA0ZW-LIVE-BUY-STAT-CHANGED = "N";
    PA0ZW00.PA0ZW-HDR-STAT-CHNG-FLAG = "N";
    PA0ZW00.PA0ZW-COPY-OA = "N";

    sysVar.arrayIndex = 1;
    while (sysVar.arrayIndex <= 4)
      PA0ZW00.PA0ZW-FCTY-STAT-UPD-FLAG[sysVar.arrayIndex] = "N";
      sysVar.arrayIndex = sysVar.arrayIndex + 1;
    end

    XPPA020: XPPA020();
     /* -------------------- flow section of xppa020 ---------------*/

    if (converseVar.validationMsgNum == 10) /* Error obtaining current buy date*/
      converseLib.clearScreen();
       /* Clear the map*/
    end

    PA0Z-001: PA0Z-001();
     /* no flow*/
    PA0Z-002: PA0Z-002();
     /* ------------------------------------------------------------*/
     /* Flow to converse the Order Adjustment Factory Add process.*/
     /* ------------------------------------------------------------*/

    goto PA0Z-002; /* Converse O/A factory add*/


  end // end main
end // end PA0Z

// Special initialization
Function PA0Z-001()
   /* ------------------------------------------------------------*/
   /* This process will perform any special initializtion that is*/
   /* unique to an application.*/
   /* ------------------------------------------------------------*/

  PA0ZW00.XXXMODID = PAWREC.XXXMODID; /* Message number*/

  PA0ZW00.PA0ZW-RQST-4-DATA-SW = "N"; /* init request for data switch*/

  if (PAWREC.PAWOANBR > 0) /* O/A number exists*/
    PA0ZW00.PA1OANBR = PAWREC.PAWOANBR;
    PAWREC.PAWOANBR = 0;
    PA0ZW00.PA0ZW-RQST-4-DATA-SW = "Y";
                                            /* init request for data switch*/
  end

  PA0ZW00.PAWBUYDT = PAWREC.PAWBUYDT; /* Current buy date*/

  XX0XS01(); /* Obtain current date*/

end // end PA0Z-001

// Process o/a numbers in a list
Function PA0Z-002()
   /* ------------------------------------------------------------*/

   /* 1) obtain data*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  PA0Z-100(); /* Obtain the data to display*/

  PA0Z-200(); /* Format and display the map*/

  PA0Z-300(); /* Check attention identifier*/

  PA0Z-400(); /* Reset fields to normal intensity*/

  PA0Z-500(); /* Verify the entered data*/

  PA0Z-600(); /* Process valid input request*/


end // end PA0Z-002

// Obtain the data to display
Function PA0Z-100()
   /* ------------------------------------------------------------*/
     /* Select and open the cursor for the set(s) to be formatted*/
     /* Fetch and format the data in the working storage*/
     /* At end of rows, close the selected set cursor.*/
     /* If no data found, display error message and return to*/
       /* previous process.*/
     /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/

  if (PA0ZW00.PA0ZW-RQST-4-DATA-SW != "Y") /* Data not requested*/
    return;
  end

  if (converseVar.validationMsgNum == 0
   || converseVar.validationMsgNum == 1) /* SUCCESSFUL UPDATE*/
     /* NEXT SENTENCE*/
  else
    return;
  end

  set PA1REC empty; /* Clear header record*/
  set PA4REC empty; /* Clear factory record*/
  set PA0ZW01 empty; /* Clear display storage HDR*/
  set PA0ZW02 empty; /* Clear display storage FCTY*/
   /* clear page nmbr*/
  PA0ZW00.PA0ZW-NBR-FCTY-PG-DISP = 0;

  PA1REC.PA1OANBR = PA0ZW00.PA1OANBR; /* Move in key fields*/

  PA0Z-120(); /* Select o/a header*/

  if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/

    set PA0ZM001 initial;
    PA0ZM001.PA1OANBR = PA0ZW00.PA1OANBR;
    set PA0ZM001.PA1OANBR cursor, modified, bold;
    set PA0ZM001.PA4FCTQT skip;
    set PA0ZW00 empty;

    PA0ZW00.PA0ZW-RQST-4-DATA-SW = "N"; /* Request for data completed*/
    converseLib.validationFailed(50); /* Error message*/
    PA0ZW00.XXXMODID = "100"; /* Module id*/
    return;

  end


  PA0ZW01.PA1GROUP = PA1REC.PA1GROUP; /* Set up display storage*/
  if (PA1REC.YETCD in YETTBL.YETCD)
    PA0ZW01.YETABRV = YETTBL.YETABRV[sysVar.arrayIndex];
  end /* Retrieve desc*/
  if (PA1REC.YESCD in YESTBL.YESCD)
    PA0ZW01.YESABRV = YESTBL.YESABRV[sysVar.arrayIndex];
  end /* Retrieve desc*/
  PA0ZW01.PA0ZW-INS-COMM-FL = "C"; /* default to current comment*/

  set PG2REC empty; /* Clear the database record*/
  PG2REC.XGPCD = "02"; /* Footwer gpc code*/
  PG2REC.SY1STNBR = PA1REC.SY1STNBR; /* Style number*/
  PG2REC.SY2CLRID = PA1REC.SY2CLRID; /* Color code*/
  PG2REC.XDMCD = PA1REC.XDMCD; /* Dimension*/


  XSPG202(); /* Select style/color row*/


  if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
    PA0ZW00.XXXMSGNO = 26; /* Message number*/
    PA0ZW00.XXXMODID = "100"; /* Module id*/

  else

    PA0ZW01.SY1STYNM = PG2REC.SY1STYNM; /* Style name*/

  end

  if (PA1REC.KUCCOID > 0) /* Customer entered*/
    set PC2REC empty; /* Clear the database record*/
    PC2REC.XGPCD = "02"; /* Footwer gpc code*/
    PC2REC.KUCCOID = PA1REC.KUCCOID; /* Customer*/
    PC2REC.KUMSTRID = PA1REC.KUMSTRID; /* Store*/
    PC2REC.XNXCD = PA1REC.XNXCD; /* Department*/

    if (PA1REC.PA1OANBR > 199999
     && PA1REC.PA1OANBR < 300000)
      PC2REC.PC-PRDCU-APAO-FL = "E"; /* EUROPEAN CUSTOMER ONLY*/
    else
      PC2REC.PC-PRDCU-APAO-FL = " "; /* MVSPROD CUSTOMER*/
    end

    PA0Z-130(); /* Select alternate pc2rec*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      PA0ZW01.PC2CUXID = PC2REC.PC2CUXID; /* Customer xref*/
      PA0ZW01.PC2NAME = PC2REC.PC2NAME; /* Customer Name*/

    else
      if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
        PA0ZW00.XXXMSGNO = 23; /* Message number*/
        PA0ZW00.XXXMODID = "100"; /* Module id*/

      end
    end
  end


   /* ------------------ Get INS/CMT for the O/A Header-----------*/

  set PA9REC empty;
  PA9REC.PA9COMTY = "H"; /* Header Comment*/
  PA9REC.PA1OANBR = PA1REC.PA1OANBR; /* O/A number*/
  PA9REC.YESCD = PA1REC.YESCD; /* most current comment*/


  PA0Z-700(); /* select current  Comments*/

  if (PA9REC.PA9COM[1] > " " /* If any comments exist, save them*/
   || PA9REC.PA9COM[2] > " " 
   || PA9REC.PA9COM[3] > " ")
    PA0ZW01.PA0ZW-HDR-COMM-1 = PA9REC.PA9COM[1]; /* display comment*/
    PA0ZW01.PA0ZW-HDR-COMM-2 = PA9REC.PA9COM[2]; /* lines*/
    PA0ZW01.PA0ZW-HDR-COMM-3 = PA9REC.PA9COM[3];
    PA0ZW01.PA0ZW-HDR-COMM-ZZZSDT = PA9REC.ZZZSDT;
  end


  set PA9REC empty;
  PA9REC.PA9COMTY = "H"; /* Header Comment*/
  PA9REC.PA1OANBR = PA1REC.PA1OANBR; /* O/A number*/
  PA9REC.YESCD = "00"; /* most current comment*/

  PA0Z-700(); /* select header instructions*/

  if (PA9REC.PA9COM[1] > " " /* If any comments exist, save them*/
   || PA9REC.PA9COM[2] > " " 
   || PA9REC.PA9COM[3] > " ")
    PA0ZW01.PA0ZW-HDR-INS-1 = PA9REC.PA9COM[1];
                                                    /* display instructions*/
    PA0ZW01.PA0ZW-HDR-INS-2 = PA9REC.PA9COM[2]; /* lines*/
    PA0ZW01.PA0ZW-HDR-INS-3 = PA9REC.PA9COM[3];
  end



   /* ------------------ Get oa item set up dates ----------------*/

  PA0ZS-01-IO4980-S1(); /* select oa items*/

  PA0ZS-02-IO4980-N1();

  if (SQLCA.VAGen_SQLCODE == 0)
    PA0ZW01.PA0ZW-ITEM-SETUP-DT = PA2REC.ZZZSDT;
    PA0ZW01.PA0ZW-ITEM-SETUP-TIME = PA2REC.ZZZCHGTM;
    PA0ZW01.PA0ZW-ITEMS-EXIST-FL = "Y";
  end

  PA0ZS-03-IO4980-C1();

   /* ------------------ Get the factory o/a rows ----------------*/

  PA4REC.PA1OANBR = PA1REC.PA1OANBR; /* O/A number*/
  PA4REC.YESCD = "*"; /* Status*/

  PA0ZS-99(); /* Select set pa4rec*/

  PA0ZW00.PA0ZW-MAP-INDEX = 1; /* Initialize display line number*/
  PA0ZW00.PA0ZW-CRSR-EOF-SW1 = "N"; /* Initialize end of file switch1*/

  PA0ZS-98(); /* Fetch pa4rec*/

  while (PA0ZW00.PA0ZW-CRSR-EOF-SW1 == "N")
    if (converseVar.validationMsgNum == 0
     || converseVar.validationMsgNum == 1) /* UPDATE SUCCESSFUL*/

      PA0Z-140(); /* Format display storage*/

      PA0ZW00.PA0ZW-MAP-INDEX = PA0ZW00.PA0ZW-MAP-INDEX + 1; /* Incr. index*/

      PA0ZS-98(); /* Fetch pa4rec*/
    end
  end

  PA0ZS-97(); /* Close pa4rec*/

  PA7REC.PA7PRNBR = PA1REC.PA1OANBR; /* O/A number*/

  PA0Z-150(); /* get related oa*/

  PA0ZW00.PA0ZW-NBR-FCTYS-TO-DISP = 1; /* start display at one*/
  PA0ZW00.PA0ZW-RQST-4-DATA-SW = "N"; /* Request for data completed*/


   /* ------------------ End of Process PA0Z-100 ------------------*/

end // end PA0Z-100

// Select unique pa1rec
Function PA0Z-120()
   /* ------------------------------------------------------------*/
   /* Select a unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4830" ("S ", SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
     || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      return;

    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0ZW00.XXXMODID = "120"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0Z-120"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process pa0z-120 -----------------------*/

end // end PA0Z-120

// Select alternate pc2rec
Function PA0Z-130()
   /* ------------------------------------------------------------*/
   /* Select Alternate a unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3340" ("SA", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
     || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      return;

    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0ZW00.XXXMODID = "130"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0Z-130"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
   /* MOVE PA0ZW00.PA0FWCSD TO TA1REC.TA1TBLKE; Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process pa0z-130 -----------------------*/

end // end PA0Z-130

// Format display storage record
Function PA0Z-140()
   /* ------------------------------------------------------------*/
   /* Format the display storage record with the pa4rec data.*/
   /* ------------------------------------------------------------*/

  PA0ZW02.PC3POIDT[PA0ZW-MAP-INDEX] = PA4REC.PC3POIDT; /* po id*/
  PA0ZW02.PA0ZW-PROD-DATE[PA0ZW-MAP-INDEX] = PA4REC.PC3POIDT;
                                                            /* format po id*/
  PA0ZW02.FY1FCTYC[PA0ZW-MAP-INDEX] = PA4REC.FY1FCTYC; /* Factory*/
  PA0ZW02.YESCD[PA0ZW-MAP-INDEX] = PA4REC.YESCD; /* Status code*/
  PA0ZW02.PA4FCTQT[PA0ZW-MAP-INDEX] = PA4REC.PA4FCTQT;
                                                        /* Factory Quantity*/
  PA0ZW02.PA4FCTDC[PA0ZW-MAP-INDEX] = PA4REC.PA4FCTDC;
                                                        /* Factory document*/
  PA0ZW02.PA4FAPVL[PA0ZW-MAP-INDEX] = PA4REC.PA4FAPVL;
                                                       /* Factory rework fl*/
  PA0ZW02.XXXINIT[PA0ZW-MAP-INDEX] = PA4REC.XXXINIT;
                                                       /* Approval initials*/
  PA0ZW02.ZZZCHGCT[PA0ZW-MAP-INDEX] = PA4REC.ZZZCHGCT; /* Change count*/

  PA0ZW00.PA0ZW-NBR-FCTY-PG-DISP = PA0ZW00.PA0ZW-NBR-FCTY-PG-DISP + 1;
                                                  /* nbr of fcty for pg cnt*/



   /* --------- get the most current comment ---------------------*/

  set PA9REC empty;
  PA9REC.PA1OANBR = PA4REC.PA1OANBR;
  PA9REC.FY1FCTYC = PA4REC.FY1FCTYC;
  PA9REC.YESCD = PA4REC.YESCD;
  PA9REC.PA9COMTY = "F";

  PA0Z-700(); /* Select set (s1) pa9rec*/


  PA0ZW02.PA0ZW-FCTY-COMM-1[PA0ZW-MAP-INDEX] = PA9REC.PA9COM[1];
                                                                /* Comments*/
  PA0ZW02.PA0ZW-FCTY-COMM-2[PA0ZW-MAP-INDEX] = PA9REC.PA9COM[2];
  PA0ZW02.PA0ZW-FCTY-COMM-3[PA0ZW-MAP-INDEX] = PA9REC.PA9COM[3];



  FY1REC.XGPCD = "02"; /* Gpc code*/
  FY1REC.FY1FCTYC = PA4REC.FY1FCTYC; /* Factory code*/

  PA0Z-144(); /* Select fy1rec*/

  PA0ZW02.FY1FCTSN[PA0ZW-MAP-INDEX] = FY1REC.FY1FCTSN;
                                                      /* Factory short name*/

   /* ------------------ end of process pa0z-140 ------------------*/

end // end PA0Z-140

// Select fy1rec
Function PA0Z-144()
   /* ------------------------------------------------------------*/
   /* Select a unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
     || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      return;

    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0ZW00.XXXMODID = "144"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE ROW";
  TA1REC.TA1PGMNM = COMMAREA.CACURRAP; /* Application name*/
  TA1REC.TA1PGMNM = "PA0Z-144"; /* Process name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- End of Process PA0Z-144 -----------------------*/

end // end PA0Z-144

// Select vpaxrf01
Function PA0Z-150()
   /* ----------------------------------------------*/
    /* determine if there are any related o/a's*/
   /* ----------------------------------------------*/

  try
    call "IO5120" ("SB", SQLCA, PA7REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0)
      PA0ZW01.PA0ZW-RELATE-OA-FLAG = "Y";
      return;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        PA0ZW01.PA0ZW-RELATE-OA-FLAG = "N";
        return;
      end
    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0Z-150 GET RELATED OA        ";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAXRF01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA7REC.PA7KEY; /* Table key*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/


   /* ------------- End of Process PA0Z-150 -----------------------*/

end // end PA0Z-150

// Format and display the map
Function PA0Z-200()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 1) /* SUCCESSFUL UPDATE*/
    PA0Z-210(); /* Format the map*/
    if (PA0ZM001.PA1OANBR == 0) /* No o/a present*/
      set PA0ZM001.PA1OANBR cursor;
    end

  else
    PA0ZW00.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/

  end

  if (COMMAREA.CACLVL[1] == "Y") /* Can change the world*/
     /* next sentence*/
  else
    if (COMMAREA.CACLVL[2] == "Y") /* Cannot change stat, doc or init*/
      set PA0ZM001.FB-LATE-BK-FL skip; /* late book flag*/
      set PA0ZM001.YESCD[1] skip; /* Protect status fields*/
      set PA0ZM001.YESCD[2] skip;
      set PA0ZM001.PA4FCTDC[1] skip; /* Factory document*/
      set PA0ZM001.PA4FCTDC[2] skip;
      set PA0ZM001.XXXINIT[1] skip; /* Initials*/
      set PA0ZM001.XXXINIT[2] skip;
     /* SET PA0ZM001.PA1HLDFL AUTOSKIP;      /* hold flag*/
     /* SET PA0ZM001.PA0ZW-HDR-STAT-CODE AUTOSKIP;    /* header status*/
    else
      if (COMMAREA.CACLVL[3] == "Y")
        set PA0ZM001.PA1OATXT skip; /* OA DESC*/
        set PA0ZM001.FB-LATE-BK-FL skip; /* late book flag*/
        set PA0ZM001.PA0ZM-HDR-STAT-CODE skip; /* header status*/
        set PA0ZM001.YESCD[1] skip; /* Protect status fields*/
        set PA0ZM001.YESCD[2] skip;
        set PA0ZM001.PA4FCTDC[1] skip; /* Protect factory document*/
        set PA0ZM001.PA4FCTDC[2] skip;
        set PA0ZM001.XXXINIT[1] skip; /* Protect initials*/
        set PA0ZM001.XXXINIT[2] skip;
        set PA0ZM001.PA0ZW-FCTY-COMM-1[1] skip; /* Protect Comments*/
        set PA0ZM001.PA0ZW-FCTY-COMM-2[1] skip;
        set PA0ZM001.PA0ZW-FCTY-COMM-3[1] skip;
        set PA0ZM001.PA0ZW-FCTY-COMM-1[2] skip;
        set PA0ZM001.PA0ZW-FCTY-COMM-2[2] skip;
        set PA0ZM001.PA0ZW-FCTY-COMM-3[2] skip;
      else
        set PA0ZM001.PA1HLDFL skip; /* hold flag*/
        set PA0ZM001.FB-LATE-BK-FL skip; /* late book flag*/
         /* SET PA0ZM001.PA0ZM-HDR-STAT-CODE AUTOSKIP;    /* header status*/
        set PA0ZM001.YESCD[1] skip; /* Protect status fields*/
        set PA0ZM001.YESCD[2] skip;
        set PA0ZM001.PA4FCTDC[1] skip; /* Protect factory document*/
        set PA0ZM001.PA4FCTDC[2] skip;
        set PA0ZM001.XXXINIT[1] skip; /* Protect initials*/
        set PA0ZM001.XXXINIT[2] skip;
        set PA0ZM001.PA0ZW-FCTY-COMM-1[1] skip; /* Protect Comments*/
        set PA0ZM001.PA0ZW-FCTY-COMM-2[1] skip;
        set PA0ZM001.PA0ZW-FCTY-COMM-3[1] skip;
        set PA0ZM001.PA0ZW-FCTY-COMM-1[2] skip;
        set PA0ZM001.PA0ZW-FCTY-COMM-2[2] skip;
        set PA0ZM001.PA0ZW-FCTY-COMM-3[2] skip;
        set PA0ZM001.PA0ZW-HDR-COMM-1 skip;
        set PA0ZM001.PA0ZW-HDR-COMM-2 skip;
        set PA0ZM001.PA0ZW-HDR-COMM-3 skip;
      end
    end
  end


  if (PA0ZW01.YESCD != "00"
   && PA0ZW01.YESCD != "01"
   && PA0ZW01.YESCD != "02"
   && PA0ZW01.YESCD != "05"
   && PA0ZW01.YESCD != "06"
   && PA0ZW01.YESCD != "15"
   && PA0ZW01.YESCD != "10"
   && PA0ZW01.YESCD != "20"
   && PA0ZW01.YESCD != "80"
   && PA0ZW01.YESCD != "84")
    set PA0ZM001.PA0ZM-HDR-STAT-CODE skip; /* header status*/
    set PA0ZM001.FB-LATE-BK-FL skip; /* late book flag*/
    set PA0ZM001.PA1OATXT skip; /* header status*/
    set PA0ZM001.YESCD[1] skip; /* Protect status fields*/
    set PA0ZM001.YESCD[2] skip;
    set PA0ZM001.PA4FCTDC[1] skip; /* Factory document*/
    set PA0ZM001.PA4FCTDC[2] skip;
    set PA0ZM001.XXXINIT[1] skip; /* Initials*/
    set PA0ZM001.XXXINIT[2] skip;

  end


  if (PA0ZM001.FY1FCTYC[2] == "  ") /* autoskip unused fcty*/
    set PA0ZM001.YESCD[2] skip;
    set PA0ZM001.PA4FCTDC[2] skip;
    set PA0ZM001.XXXINIT[2] skip;
    set PA0ZM001.PA0ZW-FCTY-COMM-1[2] skip;
    set PA0ZM001.PA0ZW-FCTY-COMM-2[2] skip;
    set PA0ZM001.PA0ZW-FCTY-COMM-3[2] skip;
  end


  if (PAWREC.XXXMSGNO != 0)

    PA0ZM001.XXXMODID = "200"; /* Module id*/
    if (PAWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PAWREC.XXXMSGNO);
    end /* Message number*/
    PAWREC.XXXMSGNO = 0;
    set PA0ZM001 alarm; /* Indicate sound alarm*/

  end

  if (PA0ZW00.XXXMSGNO != 0)

    PA0ZM001.XXXMODID = PA0ZW00.XXXMODID; /* Module id*/
    if (PA0ZW00.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PA0ZW00.XXXMSGNO);
    end /* Message number*/
    set PA0ZM001 alarm; /* Indicate sound alarm*/

  end

   /* IF EUROPEAN O/A, ALLOW INQUIRY ONLY*/

  if (PA0ZM001.PA1OANBR > 199999
   && PA0ZM001.PA1OANBR < 300000)
    set PA0ZM001.PA1OATXT skip;
    set PA0ZM001.PA0ZM-HDR-STAT-CODE skip;
    set PA0ZM001.PA1HLDFL skip;
    set PA0ZM001.FB-LATE-BK-FL skip;
    set PA0ZM001.PA0ZW-HDR-COMM-1 skip;
    set PA0ZM001.PA0ZW-HDR-COMM-2 skip;
    set PA0ZM001.PA0ZW-HDR-COMM-3 skip;
    set PA0ZM001.YESCD[1] skip;
    set PA0ZM001.YESCD[2] skip;
    set PA0ZM001.PA4FCTDC[1] skip;
    set PA0ZM001.PA4FCTDC[2] skip;
    set PA0ZM001.XXXINIT[1] skip;
    set PA0ZM001.XXXINIT[2] skip;
    set PA0ZM001.PA0ZW-FCTY-COMM-1[1] skip;
    set PA0ZM001.PA0ZW-FCTY-COMM-2[1] skip;
    set PA0ZM001.PA0ZW-FCTY-COMM-3[1] skip;
    set PA0ZM001.PA0ZW-FCTY-COMM-1[2] skip;
    set PA0ZM001.PA0ZW-FCTY-COMM-2[2] skip;
    set PA0ZM001.PA0ZW-FCTY-COMM-3[2] skip;
    set PA0ZM001.PA0ZM-PF9-LABEL skip, invisible;
  end

  converse PA0ZM001 ;

  PA0ZW00.XXXMODID = " "; /* Module id*/
  PA0ZW00.XXXMSGNO = 0; /* Reset message number*/

  COMMAREA.CATOAP = PA0ZM001.CATOAP; /* To application*/
  COMMAREA.CAITEM = PA0ZM001.CAITEM; /* Application data*/

end // end PA0Z-200

// Format the data on the map
Function PA0Z-210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set PA0ZM001 initial; /* M001 input/output area*/

   /* ------------------------------------------------------------*/
   /* Format the data in the header portion of the map*/
   /* ------------------------------------------------------------*/

  PA0ZM001.PAWBUYDT = PAWREC.PAWBUYYM; /* Current buy date*/
   /* ------------------------------------------------------------*/
   /* check for no data present*/
   /* ------------------------------------------------------------*/
  if (PA0ZW01.PA1OANBR == 0) /* no data selected*/
    return;
  end

   /* ; MOVE PA0ZW01.PA1BUYMO TO PA0ZM001.PA1BUYMO; o/a number*/
  PA0ZM001.PA1OANBR = PA0ZW01.PA1OANBR; /* o/a number*/
  PA0ZM001.PA1OATXT = PA0ZW01.PA1OATXT; /* o/a number*/
  PA0ZM001.SY1STNBR = PA0ZW01.SY1STNBR; /* Style number*/
  PA0ZM001.SY1STYNM = PA0ZW01.SY1STYNM; /* Style name*/
  PA0ZM001.SY2CLRID = PA0ZW01.SY2CLRID; /* Color identification*/
  PA0ZM001.XDMCD = PA0ZW01.XDMCD; /* Dimension code*/
  PA0ZM001.YETCD = PA0ZW01.YETCD; /* o/a type code*/
  PA0ZM001.YETABRV = PA0ZW01.YETABRV; /* o/a type abrv*/
  PA0ZM001.XXXPGUID = PA0ZW01.XXXPGUID; /* entered by*/
  PA0ZM001.PA0ZM-ZZ-SDT = PA0ZW01.ZZZSDT; /* entered date*/

  if (PA0ZW01.ZZZSDT != 0)
    PA0ZW00.PA0ZW-TIME = PA0ZW01.ZZZSTM;
    PA0ZW00.PA0ZW-HH = PA0ZW00.PA0ZW-HOUR;
    PA0ZW00.PA0ZW-COLON = ":";
    PA0ZW00.PA0ZW-MN = PA0ZW00.PA0ZW-MIN;
    PA0ZM001.PA0ZM-ZZ-SETUP-HHMM = PA0ZW00.PA0ZW-HHMM;
  else
    PA0ZM001.PA0ZM-ZZ-SETUP-HHMM = " ";
  end

  PA0ZM001.PA0ZM-HDR-STAT-CODE = PA0ZW01.YESCD;
                                   /* o/a header stat code*/
  if (PA0ZW01.YESCD in YESTBL.YESCD)
    PA0ZM001.PA0ZM-TYPE-DESC = YESTBL.YESABRV[sysVar.arrayIndex];
  end
                                   /* o/a stat abrv*/
  PA0ZM001.PA1YESDT = PA0ZW01.PA1YESDT; /* o/a stat chd dte*/
  PA0ZM001.PA1YESID = PA0ZW01.PA1YESID; /* o/a stat chd dte*/
  PA0ZM001.PA1RQQTY = PA0ZW01.PA1RQQTY; /* O/A quantity*/
  PA0ZM001.FB-LATE-BK-FL = PA0ZW01.FB-LATE-BK-FL; /* late book*/
  PA0ZM001.PA-AFRGT-RQT-ID = PA0ZW01.PA-AFRGT-RQT-ID; /* a/f nbr*/
  PA0ZM001.PA0ZW-RELATE-OA-FLAG = PA0ZW01.PA0ZW-RELATE-OA-FLAG;
                                   /* related oa flag*/
  PA0ZM001.KUCCOID = PA0ZW01.KUCCOID; /* Customer*/
  PA0ZM001.KUMSTRID = PA0ZW01.KUMSTRID; /* Store*/
  PA0ZM001.PA1INTFL = PA0ZW01.PA1INTFL; /* need ets flag*/
  PA0ZM001.PA1HLDFL = PA0ZW01.PA1HLDFL; /* hold flag*/
  PA0ZM001.PC2CUXID = PA0ZW01.PC2CUXID; /* customer cross reference*/
  if (PA0ZW01.PA1HLDFL == "Y") /* hold flag*/
    set PA0ZM001.PA1HLDFL bold;
  else
    set PA0ZM001.PA1HLDFL initialAttributes;
  end
   /* MOVE PA0ZW01.XNXCD   TO PA0ZM001.XNXCD   ; Department*/
  PA0ZM001.PA0ZM-ZZ-CHNG-DT = PA0ZW01.PA0ZW-HDR-COMM-ZZZSDT;
  PA0ZM001.PA0ZW-HDR-COMM-1 = PA0ZW01.PA0ZW-HDR-COMM-1;
                                   /* Hdr comments*/
  PA0ZM001.PA0ZW-HDR-COMM-2 = PA0ZW01.PA0ZW-HDR-COMM-2;
                                   /* Hdr comments*/
  PA0ZM001.PA0ZW-HDR-COMM-3 = PA0ZW01.PA0ZW-HDR-COMM-3;
                                   /* Hdr comments*/


  if (PA0ZW01.PA0ZW-ITEMS-EXIST-FL == "Y") /* then  items created*/
    PA0ZM001.PA0ZW-ITEMS-EXIST-FL = PA0ZW01.PA0ZW-ITEMS-EXIST-FL;
    PA0ZM001.PA0ZW-ITEM-SETUP-DT = PA0ZW01.PA0ZW-ITEM-SETUP-DT;
                                   /* set up dte*/
    PA0ZW01.PA0ZW-DISPLAY-HH = PA0ZW01.PA0ZW-ITEM-SETUP-HH;
                                   /* display hour*/
    PA0ZW01.PA0ZW-ITEM-TIME-SEMICOLN = ":"; /* display semicolon*/
    PA0ZW01.PA0ZW-DISPLAY-MM = PA0ZW01.PA0ZW-ITEM-SETUP-MM;
                                   /* display min*/
    PA0ZM001.PA0ZW-DISPLAY-TIME = PA0ZW01.PA0ZW-DISPLAY-TIME;
                                   /* time display*/
   /* GREDDY 05/10/01 - Begin*/
    if (PA0ZW01.PA0ZW-FCSTOR-CHG-FL == "N"
     || PA0ZW01.PA0ZW-FCSTOR-CHG-FL == " ")
      set VPAWRK03 empty;
      VPAWRK03.PA1OANBR = PA0ZM001.PA1OANBR;
      VPAWRK03.PACSEVAL = "*";
      VPAWRK03.PACORDTY = "9";
      VPAWRK03.ZZZSDT = -1;
      VPAWRK03.ZZZSTM = -1;

      PA0ZS-27-VPAWRK-S2();

      PA0ZS-28-VPAWRK-N2();

      if (SQLCA.VAGen_SQLCODE == 0)
        if (VPAWRK03.PACGRPCD == "EXCINV")
          PA0ZM001.PA0ZW-FCST-OR-FL = "Y";
        else
          PA0ZM001.PA0ZW-FCST-OR-FL = "N";
        end
      end

      if (SQLCA.VAGen_SQLCODE == 100)
        PA0ZM001.PA0ZW-FCST-OR-FL = " ";
        set PA0ZM001.PA0ZW-FCST-OR-FL protect;
      end

      PA0ZS-29-VPAWRK-C2();
    else
      PA0ZM001.PA0ZW-FCST-OR-FL = PA0ZW01.PA0ZW-FCST-OR-FL;
    end

  else
    PA0ZM001.PA0ZW-FCST-OR-FL = " ";
    set PA0ZM001.PA0ZW-FCST-OR-FL protect;
  end

  PA0ZW01.PA0ZW-FCST-OR-FL = PA0ZM001.PA0ZW-FCST-OR-FL;
   /* GREDDY 05/10/01 - End*/

   /* ------------------------------------------------------------*/
   /* Format the data in the body of the map*/
   /* ------------------------------------------------------------*/


  XXX1 = 1; /* Initialize index*/
  move PA0ZW-NBR-FCTYS-TO-DISP to XX2 withV60Compat; /* starting fcty*/
  while (XXX1 <= 2 /* max fcty(s) on screen*/
   && PA0ZW02.FY1FCTYC[XXX1] > " ") /* more factories*/

    PA0ZM001.PA0ZW-PROD-YEAR[XXX1] = PA0ZW02.PA0ZW-PROD-YEAR[XX2];
    PA0ZM001.PA0ZW-PROD-MM[XXX1] = PA0ZW02.PA0ZW-PROD-MM[XX2];
    PA0ZM001.PA0ZW-DELIVERY-MONTH[XXX1] = PA0ZW02.PA0ZW-DELIVERY-MONTH[XX2];
    PA0ZM001.FY1FCTYC[XXX1] = PA0ZW02.FY1FCTYC[XX2];
    PA0ZM001.FY1FCTSN[XXX1] = PA0ZW02.FY1FCTSN[XX2];
    PA0ZM001.YESCD[XXX1] = PA0ZW02.YESCD[XX2];
    PA0ZM001.PA4FCTQT[XXX1] = PA0ZW02.PA4FCTQT[XX2];
    PA0ZM001.PA4FCTDC[XXX1] = PA0ZW02.PA4FCTDC[XX2];
    PA0ZM001.PA4FAPVL[XXX1] = PA0ZW02.PA4FAPVL[XX2];
    PA0ZM001.XXXINIT[XXX1] = PA0ZW02.XXXINIT[XX2];
    PA0ZM001.PA0ZW-FCTY-COMM-1[XXX1] = PA0ZW02.PA0ZW-FCTY-COMM-1[XX2];
    PA0ZM001.PA0ZW-FCTY-COMM-2[XXX1] = PA0ZW02.PA0ZW-FCTY-COMM-2[XX2];
    PA0ZM001.PA0ZW-FCTY-COMM-3[XXX1] = PA0ZW02.PA0ZW-FCTY-COMM-3[XX2];

    XXX1 = XXX1 + 1; /* Increment index*/
    XX2 = XX2 + 1; /* Increment index*/

  end

  if (PA0ZW-NBR-FCTYS-TO-DISP > 2)
    PA0ZM001.PA0ZM-FCTY-FROM-DISP = 2;
  else
    PA0ZM001.PA0ZM-FCTY-FROM-DISP = PA0ZW-NBR-FCTYS-TO-DISP;
  end
                                   /* starting fcty*/
  if (PA0ZW00.PA0ZW-NBR-FCTY-PG-DISP > 2)
    PA0ZM001.PA0ZM-FCTY-TO-DISP = 2;
  else
    PA0ZM001.PA0ZM-FCTY-TO-DISP = 1;
  end

   /* ------------------ End of Process PA0Z-210 ------------------*/

end // end PA0Z-210

// Check attention identifier
Function PA0Z-300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    converseLib.clearScreen();
     /* Clear the map fields*/
    PA0ZW00.PA0ZW-RQST-4-DATA-SW = "Y"; /* request data*/
    exit stack; /* Exit to redisplay map*/
  end

  if (PA0ZM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = PA0ZM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = PA0ZM001.CAITEM; /* Application data*/
      PAWREC.PAWOANBR = PA0ZW00.PA1OANBR; /* Current o/a number*/
      XSPAS01(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    set PA0ZM001.CATOAP cursor, modified, bold; /* Highlight*/
    PA0ZW00.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

   /* ALLOW INQUIRY ONLY FOR EUROPEAN O/AS.*/

  if (PA0ZW00.PA1OANBR > 199999
   && PA0ZW00.PA1OANBR < 300000)
    if (converseVar.eventKey is pf9)
      PA0ZW00.XXXMODID = "300"; /* Module id*/
      converseLib.validationFailed(339);
      return;
    end
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* pf3 pressed*/
      PAWREC.PAWOANBR = PA0ZW00.PA1OANBR; /* Current o/a number*/
    else
      if (converseVar.eventKey is pf1) /* pf1 pressed*/
        COMMAREA.CAITEM = "PA0ZM001"; /* move in map name for help*/
      else
        COMMAREA.CAITEM = " "; /* clear item field*/
      end
    end

    XSPAS01(); /* Exit to another application*/
    PA0ZW00.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf5  /* PF5 was pressed*/
   || converseVar.eventKey is pf13 /* PF13 was pressed*/
   || converseVar.eventKey is pf14 /* or PF14 was pressed*/
   || converseVar.eventKey is pf18 /* or PF18 was pressed*/
   || converseVar.eventKey is pf21 /* or PF21 was pressed*/
   || converseVar.eventKey is pf24) /* or PF24 was pressed*/

    COMMAREA.CAITEM = " "; /* Clear item field*/
    PAWREC.PAWOANBR = PA0ZW00.PA1OANBR; /* Current o/a number*/

    PA0ZS-100(); /* setup pf key processing*/
    XSPAS01(); /* Exit to another application*/

    PA0ZW00.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf12) /* Next o/a requested*/
    XSPAS04(); /* Common pf12 key processing*/
    PA0ZW00.PA1OANBR = PAWREC.PAWOANBR;

    if (PA0ZW00.PA1OANBR > 0) /* Current o/a number*/
      PA0ZW00.PA0ZW-RQST-4-DATA-SW = "Y"; /* Request for data*/

    else

      set PA0ZM001 initial;

    end

    exit stack; /* Flow to converse map*/

  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6   /* and not PF6*/
   && converseVar.eventKey not pf7   /* and not PF7*/
   && converseVar.eventKey not pf8   /* and not PF8*/
   && converseVar.eventKey not pf9   /* and not PF9*/
   && converseVar.eventKey not pf20) /* and not PF20*/
    PA0ZW00.XXXMODID = "300"; /* Module id*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end



   /* ------------------ End of Process PA0Z-300 ------------------*/

end // end PA0Z-300

// Reset highlighted fields
Function PA0Z-400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set PA0ZM001.PA1OANBR initialAttributes; /* O/A number*/

  set PA0ZM001.FY1FCTYC[1] initialAttributes;
  set PA0ZM001.FY1FCTYC[2] initialAttributes;

  set PA0ZM001.CATOAP initialAttributes; /* Commarea TO application*/
  set PA0ZM001.CAITEM initialAttributes; /* Commarea application data*/


  if (converseVar.eventKey is enter) /* Enter pressed*/
    if (PA0ZM001.PA0ZM-HDR-STAT-CODE == "?")
      PA0Z-405(); /* header status pop up*/
    end
    if (PA0ZM001.YESCD[1] == "?"
     || PA0ZM001.YESCD[2] == "?")
      PA0Z-410(); /* fatory status pop up*/
    end
  end

  if (converseVar.eventKey is pf6) /* Header instructions requested*/
    if (PA0ZW01.PA1OANBR > 0) /* O/A number entered*/
      set PA9REC empty; /* Clear db2 work record*/
      PA9REC.PA1OANBR = PA0ZW01.PA1OANBR; /* O/A number*/
      XPPA100(); /* Perform pop-up window routine*/
    else
      PA0ZW00.XXXMODID = "400"; /* Module identification*/
      converseLib.validationFailed(40); /* Error message number*/
      set PA0ZM001.PA1OANBR cursor, modified, bold;
    end
    exit stack; /* Flow to converse the map*/
  end

end // end PA0Z-400

// perform ? inquiry routine
Function PA0Z-405()
   /* ------------------------------------------------------------*/
                    /* HEADER  STATUS*/
              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  XPXX001(); /* perform pop-up window initialize*/
  XX0XW02.XX0XWHDR = "           HEADER  STATUS "; /* heading*/
  XX0XW02.YESCDIND = "H"; /* Status type indicator*/

  while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
    XPYES01(); /* perform status code window*/
  end

   /* **********************************************************/
   /* *  If the pass index is greater than zero, use the      **/
   /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
   /* *  type table code and description to the map.          **/
   /* **********************************************************/

  if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
    if (PA0ZM001.PA0ZM-HDR-STAT-CODE == "?")
      PA0ZM001.PA0ZM-HDR-STAT-CODE = YESTBL.YESCD[XX0XWPIX];
      converseLib.clearScreen();
       /* restore the original map*/
      return;
    end


  else
    PA0ZM001.PA0ZM-HDR-STAT-CODE = PA0ZW01.YESCD;
                                                          /* Restore fields*/
  end

  converseLib.clearScreen();
   /* restore the original map*/

  PAWREC.XXXMODID = "405"; /* Module identification*/
  converseLib.validationFailed(45); /* Indicate press ENTER*/

  exit stack; /* Exit to display map*/

   /* ---------------------end of PA0Z-410-------------------------*/
end // end PA0Z-405

// perform ? inquiry routine
Function PA0Z-410()
   /* ------------------------------------------------------------*/
                    /* FACTORY STATUS*/
              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  XPXX001(); /* perform pop-up window initialize*/
  XX0XW02.XX0XWHDR = "           FACTORY STATUS "; /* heading*/
  XX0XW02.YESCDIND = "F"; /* Status type indicator*/

  while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
    XPYES01(); /* perform status code window*/
  end

   /* **********************************************************/
   /* *  If the pass index is greater than zero, use the      **/
   /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
   /* *  type table code and description to the map.          **/
   /* **********************************************************/

  if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
    if (PA0ZM001.YESCD[1] == "?")
      PA0ZM001.YESCD[1] = YESTBL.YESCD[XX0XWPIX]; /* move code*/
      converseLib.clearScreen();
       /* restore the original map*/
      return;
    end

    if (PA0ZM001.YESCD[2] == "?")
      PA0ZM001.YESCD[2] = YESTBL.YESCD[XX0XWPIX]; /* move code*/
      converseLib.clearScreen();
       /* restore the original map*/
      return;
    end

  else
    PA0ZM001.YESCD[1] = PA0ZW02.YESCD[1]; /* Restore fields*/
    PA0ZM001.YESCD[2] = PA0ZW02.YESCD[2]; /* Restore fields*/
  end

  converseLib.clearScreen();
   /* restore the original map*/

  PAWREC.XXXMODID = "410"; /* Module identification*/
  converseLib.validationFailed(45); /* Indicate press ENTER*/

  exit stack; /* Exit to display map*/

   /* ---------------------end of PA0Z-410-------------------------*/
end // end PA0Z-410

// Verify the entered data
Function PA0Z-500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (PA0ZM001.CAITEM > " ") /* Application data was entered*/
    set PA0ZM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    PA0ZW00.XXXMODID = "500"; /* Module identification*/
    exit stack; /* Flow to converse map*/

  end


  if (PA0ZM001.PA1OANBR != PA0ZW00.PA1OANBR) /* O/A number*/
    PA0ZW00.PA1OANBR = PA0ZM001.PA1OANBR; /* O/A number changed*/
    PA0ZW00.PA0ZW-RQST-4-DATA-SW = "Y"; /* Request for data*/
    exit stack; /* Flow to converse map*/

  end


  PA0Z-503(); /* validate pf7,pf8*/


  PA0Z-510(); /* validate oa header changes*/

  if (converseVar.validationMsgNum == 0)
    PA0Z-515(); /* CHECK FOR ACTIVE BUY STATUS*/
  end

  if (converseVar.validationMsgNum == 0)
    PA0ZW01.PA0ZW-HDR-CHNG-FLAG = "Y";
    PA0ZW01.YESCD = PA0ZM001.PA0ZM-HDR-STAT-CODE;
  end

   /* ------------------------------------------------------------*/
   /* Verify the map data with the display storage data.*/

   /* ------------------------------------------------------------*/

  if (PA0ZW01.PA1OATXT != PA0ZM001.PA1OATXT) /* req desc changed*/
    PA0ZW01.PA1OATXT = PA0ZM001.PA1OATXT; /* save new req desc*/
    PA0ZW01.PA0ZW-HDR-CHNG-FLAG = "Y"; /* header modified updt fl*/
  end
   /* ------------------------------------------------------------*/
   /* Save the new request description and comment lines if they*/
   /* changed.*/
   /* ------------------------------------------------------------*/


  if (PA0ZW01.PA0ZW-HDR-COMM-1 != PA0ZM001.PA0ZW-HDR-COMM-1
   /* comment lines changed*/
   || PA0ZW01.PA0ZW-HDR-COMM-2 != PA0ZM001.PA0ZW-HDR-COMM-2
   || PA0ZW01.PA0ZW-HDR-COMM-3 != PA0ZM001.PA0ZW-HDR-COMM-3)

    PA0ZW01.PA0ZW-HDR-COMM-1 = PA0ZM001.PA0ZW-HDR-COMM-1;
                                                        /* save new comment*/
    PA0ZW01.PA0ZW-HDR-COMM-2 = PA0ZM001.PA0ZW-HDR-COMM-2; /* lines*/
    PA0ZW01.PA0ZW-HDR-COMM-3 = PA0ZM001.PA0ZW-HDR-COMM-3;
    PA0ZW01.PA0ZW-HDR-COMM-CHNG-FLAG = "Y"; /* update cmnts*/
  end

  if (converseVar.validationMsgNum != 0) /* error at header level*/
    return; /* return display error*/
  end /* can'nt edit fcty*/

   /* ------------------------------------------------------------*/
    /* validate factory(s)*/
   /* ------------------------------------------------------------*/


  PA0Z-550(); /* validate factory changes*/




   /* ---------------- End of Process PA0Z-500 --------------------*/

end // end PA0Z-500

// Verify scroll request
Function PA0Z-503()
   /* ------------------------------------------------------------*/
   /* Ensure that pages exist to scroll forward or back.*/
   /* Indicate an error for any data that was modified.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && PA0ZW00.PA0ZW-NBR-FCTYS-TO-DISP <= 1) /* and no previous factories*/
    PA0ZW00.XXXMODID = "503"; /* Process name*/
    converseLib.validationFailed(2); /* No previous page to display*/
    exit stack;

  end

  if (converseVar.eventKey is pf8) /* Scroll forward request*/
    if (PA0ZW02.FY1FCTYC[3] == "  "
     || PA0ZW00.PA0ZW-NBR-FCTYS-TO-DISP >= 2)
      PA0ZW00.XXXMODID = "510"; /* Process name*/
      converseLib.validationFailed(3); /* No more pages to display*/
      exit stack;

    end
  end

   /* ------------- End of process pa0z-503 -----------------------*/

end // end PA0Z-503

// Verify O/A Header Data
Function PA0Z-510()
   /* ------------------------------------------------------------*/
   /* Verify the map data with the display storage data.*/


   /* ------------------------------------------------------------*/


   /* -----------------------------------------------------------*/
   /* edit late book flag*/
   /* -----------------------------------------------------------*/

  if (PA0ZM001.FB-LATE-BK-FL != PA0ZW01.FB-LATE-BK-FL) /* late book*/
    if (PA0ZM001.FB-LATE-BK-FL != "Y"
     && PA0ZM001.FB-LATE-BK-FL != "N")

      PAWREC.XXXMODID = "510"; /* Module identification*/
      set PA0ZM001.FB-LATE-BK-FL cursor, bold; /* highlight*/
      converseLib.validationFailed(269); /* indicate must be 'y' or 'n'*/

    else

      PA0ZW01.FB-LATE-BK-FL = PA0ZM001.FB-LATE-BK-FL;
      PA0ZW01.PA0ZW-HDR-CHNG-FLAG = "Y"; /* header modified updt*/

    end
    if (PA0ZM001.FB-LATE-BK-FL == "Y") /**/
      if (PA0ZM001.PA0ZM-HDR-STAT-CODE == "20"
       || PA0ZM001.PA0ZM-HDR-STAT-CODE == "10"
       || PA0ZM001.PA0ZM-HDR-STAT-CODE == "15"
       || PA0ZM001.PA0ZM-HDR-STAT-CODE == "84"
       || PA0ZM001.PA0ZM-HDR-STAT-CODE == "80"
       || PA0ZM001.PA0ZM-HDR-STAT-CODE == "75"
       || PA0ZM001.PA0ZM-HDR-STAT-CODE == "97"
       || PA0ZM001.PA0ZM-HDR-STAT-CODE == "98")

        PAWREC.XXXMODID = "510"; /* Module identification*/
        set PA0ZM001.FB-LATE-BK-FL cursor, bold; /* highlight*/
        converseLib.validationFailed(270); /* indicate invalid status for late bk*/
      end
    end
  end

   /* Greddy - 05/11/01 - Begin*/
   /* -----------------------------------------------------------*/
   /* Edit Fcst overrun flag*/
   /* -----------------------------------------------------------*/

  if (PA0ZM001.PA0ZW-FCST-OR-FL != PA0ZW01.PA0ZW-FCST-OR-FL) /* Fcst OR*/
    if (PA0ZM001.PA0ZW-FCST-OR-FL != "Y"
     && PA0ZM001.PA0ZW-FCST-OR-FL != "N")

      PAWREC.XXXMODID = "510"; /* Module identification*/
      set PA0ZM001.PA0ZW-FCST-OR-FL cursor, bold; /* highlight*/
      converseLib.validationFailed(358); /* indicate must be 'y' or 'n'*/

    else

      PA0ZW01.PA0ZW-FCST-OR-FL = PA0ZM001.PA0ZW-FCST-OR-FL;
      PA0ZW01.PA0ZW-FCSTOR-CHG-FL = "Y"; /* header modified updt*/

    end
  end
   /* Greddy - 05/11/01 - Begin*/

   /* -----------------------------------------------------------*/
   /* edit hold flag*/
   /* -----------------------------------------------------------*/

  if (PA0ZM001.PA1HLDFL != PA0ZW01.PA1HLDFL) /* hold flag*/
    if (PA0ZM001.PA1HLDFL != "Y"
     && PA0ZM001.PA1HLDFL != "N")

      PAWREC.XXXMODID = "510"; /* Module identification*/
      set PA0ZM001.PA1HLDFL cursor, bold; /* highlight*/
      converseLib.validationFailed(275); /* indicate must be 'y' or 'n'*/

    else

      PA0ZW01.PA1HLDFL = PA0ZM001.PA1HLDFL; /* hold flag*/
      PA0ZW01.PA0ZW-HDR-CHNG-FLAG = "Y"; /* header modified updt*/

    end
    if (PA0ZM001.PA1HLDFL == "Y") /**/
      if (PA0ZM001.PA0ZM-HDR-STAT-CODE == "75"
       || PA0ZM001.PA0ZM-HDR-STAT-CODE == "97"
       || PA0ZM001.PA0ZM-HDR-STAT-CODE == "98")

        PAWREC.XXXMODID = "510"; /* Module identification*/
        set PA0ZM001.PA1HLDFL cursor, bold; /* highlight*/
        converseLib.validationFailed(52); /* indicate can't put on hold*/
      else
        if (PA0ZM001.PA0ZW-HDR-COMM-1 == PA0ZW01.PA0ZW-HDR-COMM-1
         /* comment line 1*/
         && PA0ZM001.PA0ZW-HDR-COMM-2 == PA0ZW01.PA0ZW-HDR-COMM-2
         /* comment line 2*/
         && PA0ZM001.PA0ZW-HDR-COMM-3 == PA0ZW01.PA0ZW-HDR-COMM-3)
                                   /* comment line 3*/
          PAWREC.XXXMODID = "510"; /* Module identification*/
          set PA0ZM001.PA0ZW-HDR-COMM-1 cursor, bold; /* highlight*/
          set PA0ZM001.PA0ZW-HDR-COMM-2 bold; /* highlight*/
          set PA0ZM001.PA0ZW-HDR-COMM-3 bold; /* highlight*/
          set PA0ZM001.PA1HLDFL bold; /* highlight*/
          converseLib.validationFailed(183); /* indicate must enter comments*/
        end
      end
    end
  end


   /* ---------------------------------------------------------*/
   /* if the status has changed and current comments have not*/
   /* changed then force current comments to space..*/
   /* ---------------------------------------------------------*/

  if (PA0ZM001.PA0ZM-HDR-STAT-CODE != PA0ZW01.YESCD)
                                   /* status code changed*/
    if (PA0ZM001.PA1HLDFL == "Y") /* HOLD FLAG*/
      PAWREC.XXXMODID = "510"; /* Module identification*/
      set PA0ZM001.PA1HLDFL cursor, bold; /* highlight*/
      converseLib.validationFailed(265); /* cant chg status at this time*/

    end

    /* -------------comments must change------------*/
    if (PA0ZM001.PA0ZW-HDR-COMM-1 == PA0ZW01.PA0ZW-HDR-COMM-1
     /* comment line 1*/
     && PA0ZM001.PA0ZW-HDR-COMM-2 == PA0ZW01.PA0ZW-HDR-COMM-2
     /* comment line 2*/
     && PA0ZM001.PA0ZW-HDR-COMM-3 == PA0ZW01.PA0ZW-HDR-COMM-3)
                                   /* comment line 3*/
      PA0ZM001.PA0ZW-HDR-COMM-1 = " "; /* force change*/
      PA0ZM001.PA0ZW-HDR-COMM-2 = " ";
      PA0ZM001.PA0ZW-HDR-COMM-3 = " ";
    end

    if (converseVar.validationMsgNum == 0)
      PA0ZW00.PA0ZW-HDR-STAT-CHNG-FLAG = "Y";
    end

  else

    return;

  end

  if (PA0ZM001.PA0ZM-HDR-STAT-CODE in YESTBL.YESCD) /* valid yescd*/
    PA0ZM001.PA0ZM-TYPE-DESC = YESTBL.YESDESC[sysVar.arrayIndex];
                                   /* move in description*/
  else
    PA0ZM001.PA0ZM-TYPE-DESC = " "; /* hdr ysedesc*/
    converseLib.validationFailed(58); /* invalid status*/
  end

   /* if this is an airfreight request*/
   /* allow only changes from status '00' to '98'*/
   /* and changes from status '80' to '98', '00'*/
   /* TCS PA679*/
  if (PA0ZM001.PA-AFRGT-RQT-ID > 0 /* air freight request*/
   && (PA0ZW01.YETCD == "DM"       
   || PA0ZW01.YETCD == "NM"))     
   /* TCS PA679*/
    if (PA0ZW01.YESCD != PA0ZM001.PA0ZM-HDR-STAT-CODE)
      if (PA0ZW01.YESCD == "00"
       && PA0ZM001.PA0ZM-HDR-STAT-CODE == "98")
        /* next sentence*/
      else
        if (PA0ZW01.YESCD == "80"
         && (PA0ZM001.PA0ZM-HDR-STAT-CODE == "98"
         || PA0ZM001.PA0ZM-HDR-STAT-CODE == "00"))
          /* next sentence*/
        else

          set PA0ZM001.PA0ZM-HDR-STAT-CODE cursor, bold;
          PA0ZW00.XXXMODID = "510";
          converseLib.validationFailed(316); /* Hdr status change invalid for a/f*/
        end
      end
    end
  else

    PA0Z-520(); /* get pa0zt01  entry*/

  end

   /* allow only level 1 security to change HDR stat to 01*/
  if (PA0ZW01.YESCD != PA0ZM001.PA0ZM-HDR-STAT-CODE
   && PA0ZM001.PA0ZM-HDR-STAT-CODE == "01"
   && COMMAREA.CACLVL[1] != "Y")

    set PA0ZM001.PA0ZM-HDR-STAT-CODE cursor, bold;
    PA0ZW00.XXXMODID = "510";
    converseLib.validationFailed(284);
  end

   /* 06/17/94: ALLOW NON-FORCASTING AIR FREIGHTS TO BE CANCELLED.*/
   /* PA0ZT01 DOES NOT CONTAIN ANY INFORMATION FOR AIR FREIGHTS*/
   /* BECAUSE PA0Z-520 WAS NEVER EXECUTED.*/

   /* TCS PA679*/
  if (PA0ZM001.PA-AFRGT-RQT-ID > 0 /* air freight request*/
   && (PA0ZW01.YETCD == "DM"       
   || PA0ZW01.YETCD == "NM"))     
   /* TCS PA679*/
     /* NEXT SENTENCE*/
  else
    if (PA0ZT01.PAAITMFL[XX2] == "Y") /* Itmes must exist*/
      if (PA0ZW01.PA0ZW-ITEMS-EXIST-FL != "Y") /* No items exist*/
        if (PA1REC.YETCD != "PR") /* prelims no not have to have items*/
          PAWREC.XXXMODID = "500"; /* Module identification*/
          set PA0ZM001.PA0ZM-HDR-STAT-CODE cursor, bold; /* highlight*/
          converseLib.validationFailed(161); /* indicate item's must exist*/
        end
      end
    end
  end

  /* ***************************************************************/
  /* ** if header status is changed to '98', set flag to write out*/
  /* ** comment.  This will keep track of who cancels O/A.*/
  /* ** OA-Cancel Flag set for 'DS' type OA's as they need to be checked*/
  /* ** against the VDNORD01 to see if generated by Auto DRS diversion.*/
  /* ** If so they need to be reset for Buy-status-indicator.*/
  /* ***************************************************************/
  if (PA0ZW01.YESCD != "98"
   && PA0ZM001.PA0ZM-HDR-STAT-CODE == "98")
    PA0ZW01.PA0ZW-HDR-COMM-CHNG-FLAG = "Y";
    if (PA0ZW01.YETCD == "DS")
      PA0ZW01.PA0ZW-ATDRS-OA-CANCEL-FLAG = "Y";
    end
  end

   /* ------------------------------------------------------------*/
   /* Verify that the o/a type can be used with the o/a status.*/
   /* 10/30/95: ALLOW O/AS FROM FORECASTING TO BE COPIED TO NEW*/
   /* O/A.  THIS IS BECAUSE THE REWORK STATUS '01' IS TURNED OFF.*/
   /* ------------------------------------------------------------*/

  if (PA0ZM001.PA0ZM-HDR-STAT-CODE == "98") /* If "to" hdr stat =   '98'*/
    if (PA0ZM001.YETCD in YETTBL.YETCD)
      PA0ZW01.YETRLVFL = YETTBL.YETRLVFL[sysVar.arrayIndex];
    end
    if (PA0ZW01.YETRLVFL == "Y"
     || PA0ZM001.YETCD == "PR") /* IF O/A CAME FROM FORECASTING*/
      if (PA0ZW01.YSMXDV == "20"
       && PA0ZM001.YETCD == "ST")
      else
        PA0Z-51001();
      end
    end
      /* ------------------------------------------------------*/
      /* current factory(s) screen and storage*/
      /* ------------------------------------------------------*/

    XXX1 = 4;
    while (XXX1 >= 1) /* screen display*/

      if (PA0ZW02.FY1FCTYC[XXX1] != " ")
        PA0Z-511(); /* DETERMINE FACTORY STATUS FOR CANCEL*/
      end

      XXX1 = XXX1 - 1;

    end
  end


   /* ------------------------------------------------------------*/
   /* PA0338: only type DM,NM,OR,NO,SE can change stat to 06*/
   /* 01/10/94: INCLUDE PR*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0)
    if (PA0ZM001.PA0ZM-HDR-STAT-CODE == "06") /* PRE-APPROVE*/
      if (PA0ZM001.YETCD == "DM"
       || PA0ZM001.YETCD == "NM"
       || PA0ZM001.YETCD == "OR"
       || PA0ZM001.YETCD == "NO"
       || PA0ZM001.YETCD == "SE"
       || PA0ZM001.YETCD == "PR")

      else
        PAWREC.XXXMODID = "510"; /* Module id*/
        converseLib.validationFailed(58); /* Invalid status change*/
        set PA0ZM001.PA0ZM-HDR-STAT-CODE cursor, bold;
      end
    end
  end


   /* ------------------------------------------------------------*/
   /* only type st can change stat to 20*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0)
    if (PA0ZW01.YESCD != PA0ZM001.PA0ZM-HDR-STAT-CODE)
      if (PA0ZM001.YETCD == "ST")
        if (PA0ZM001.PA0ZM-HDR-STAT-CODE == "00"
         || PA0ZM001.PA0ZM-HDR-STAT-CODE == "20"
         || PA0ZM001.PA0ZM-HDR-STAT-CODE == "98")

        else
          PAWREC.XXXMODID = "510"; /* Module id*/
          converseLib.validationFailed(58); /* Invalid status change*/
          set PA0ZM001.PA0ZM-HDR-STAT-CODE cursor, bold;
        end
      else
        if (PA0ZM001.PA0ZM-HDR-STAT-CODE == "20")
          PAWREC.XXXMODID = "510"; /* Module id*/
          converseLib.validationFailed(58); /* Invalid status change*/
          set PA0ZM001.PA0ZM-HDR-STAT-CODE cursor, bold;
        end
      end
    end
  end


   /* ------------------------------------------------------------*/
   /* pa0341: only change flag level 4 can change hdr stat*/
   /* from 84 to 01.*/
   /* ------------------------------------------------------------*/

  if (PA0ZW01.YESCD == "84")
    if (PA0ZM001.PA0ZM-HDR-STAT-CODE == "01")
      if (COMMAREA.CACLVL[4] != "Y")
        PA0ZW00.XXXMODID = "510";
        converseLib.validationFailed(52); /* user not authorized*/
        set PA0ZM001.PA0ZM-HDR-STAT-CODE cursor, bold;
      end
    end
  end


end // end PA0Z-510

// EDIT O/AS FROM FORECASTING
Function PA0Z-51001()
   /* ------------------------------------------------------------*/
   /* EDIT O/AS FROM FORECASTING.*/
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Verify that the o/a type can be used with the o/a status.*/
   /* 10/30/95: ALLOW O/AS FROM FORECASTING TO BE COPIED TO NEW*/
   /* O/A.  THIS IS BECAUSE THE REWORK STATUS '01' IS TURNED OFF.*/
   /* ------------------------------------------------------------*/

   /* TCS PA679*/
  if (PA0ZM001.YETCD != "PR" /* PR ARE RECONCILED DIFFERENTLY*/
   && PA0ZW01.YESCD > "10")  /* AND O/A WENT TO THE FACTORY*/
    if (COMMAREA.CACLVL[1] == "Y"     /* SECURITY TO MAKE CHANGE*/
     && PA0ZM001.PA-AFRGT-RQT-ID == 0 /* AND NOT AN AIR FREIGHT REQUEST*/
     || (PA0ZM001.PA-AFRGT-RQT-ID > 0 
     && PA0ZW01.YETCD != "NM" && PA0ZW01.YETCD != "DM"))
      /* TCS PA679*/
      PA0ZW00.PA0ZW-COPY-OA = "Y";
    else
      set PA0ZM001.YETCD bold; /* highlight*/
      set PA0ZM001.PA0ZM-HDR-STAT-CODE cursor, bold;
      PA0ZW00.XXXMODID = "510";
      converseLib.validationFailed(52); /* USER NOT AUTHORIZED TO CHANGE TO CODE*/
      return;
    end
  else
    set PA0ZM001.YETCD bold; /* highlight*/
    set PA0ZM001.PA0ZM-HDR-STAT-CODE cursor, bold; /* highlight*/
    PAWREC.XXXMODID = "510"; /* Module id*/
    converseLib.validationFailed(182); /* Indicate invalid status for type*/
    return;
  end

end // end PA0Z-51001

// DETERMINE FCTY STAT FOR CANCEL
Function PA0Z-511()
   /* --------------------------------------------------------*/
   /* DETERMINE THE FACTORY STATUS FOR A CANCEL:*/
   /* 1.  '96' - IN PROCESS CANCEL - NOT VALID FOR AIR FREIGHT*/
   /* 2.  '98' - CANCEL*/
   /* --------------------------------------------------------*/

   /* TCS PA679*/
  if (PA0ZM001.PA-AFRGT-RQT-ID > 0 /* IF AIR FREIGHT REQUEST*/
   && (PA0ZW01.YETCD == "DM" || PA0ZW01.YETCD == "NM")
   || PA0ZW02.YESCD[XXX1] == "00") /* OR REQULAR CANCEL*/
    /* TCS PA679*/
    PA0ZW02.YESCD[XXX1] = "98"; /* set "from" and"to"*/
    PA0ZW02.PA0ZW-FCTY-CHNG-FLAG[XXX1] = "Y"; /**/
    PA0ZW00.PA0ZW-FCTY-STAT-UPD-FLAG[XXX1] = "Y";
    if (XXX1 <= 2)
      PA0ZM001.YESCD[XXX1] = "98"; /* FACTORY STATUS TO 98*/
    end
    return;
  end

  if (PA0ZW02.YESCD[XXX1] == "15" /**/
   || PA0ZW02.YESCD[XXX1] == "20") /**/

    PA0ZW02.YESCD[XXX1] = "96"; /* set "from" and"to"*/
    PA0ZW02.PA0ZW-FCTY-CHNG-FLAG[XXX1] = "Y"; /**/
    PA0ZW00.PA0ZW-FCTY-STAT-UPD-FLAG[XXX1] = "Y";
    if (XXX1 <= 2)
      PA0ZM001.YESCD[XXX1] = "96"; /* IN-PROCESS CANCEL*/
    end

    return;

  end


end // end PA0Z-511

// CHECK FOR ACTIVE BUY STATUS
Function PA0Z-515()
   /* ------------------------------------------------------------*/
   /* FB322 - DOMESTIC SALES ORDERS FOR THE CURRENT BUY CAN BE*/
   /* MOVED TO ANOTHER BUY MONTH.  THE BUY SYSTEM NEEDS TO KNOW*/
   /* IF IT NEEDS TO BUY THESE SALES ORDERS.  IF THE O/A HAS AN*/
   /* ACTIVE BUY STATUS, THE BUY SYSTEM WILL NOT BUY THESE SALES*/
   /* ORDERS.  DCORP.VSUMCD01 IS USED TO DETERMINE IF THE O/A HAS*/
   /* AN ACTIVE BUY STATUS.  THE O/A WILL HAVE TO BE COMPLETED.  IF*/
   /* THE O/A STATUS IS CHANGED FROM/TO THIS GROUP, THE BUY SYSTEM*/
   /* NEEDS TO KNOW THAT THEIR PICTURE HAS CHANGED.  IF IT IS*/
   /* BEFORE THE BUY CUTOFF, RESET THE FLAGS FOR THE BUY SYSTEM.*/
   /* IF IT IS AFTER THE CUTOFF, ERROR.*/
   /*  */
   /* 01/24/94: THE EDIT AGAINST THE BUY CUTOFF DATE CAN NOT BE*/
   /* DONE.  THIS WILL HAVE TO BE HANDLED PROCEDURALLY.  THE*/
   /* OP_ENTR_DT ON THE SALES ORDER CAN'T BE USED BECAUSE THEY*/
   /* MAY ADD QUANTITY TO AN EXISTING SO THAT WAS PICKED UP BY*/
   /* THE BUY SYSTEM.  IN THIS CASE, THEY WOULD WANT TO DO THE*/
   /* O/A FOR THE ADJUSTED AMOUNT.  THE ONLY TIME THAT IS A*/
   /* PROBLEM IS THE DAY AFTER THE CUTOFF BUT BEFORE AUTOLOAD*/
   /* (BEFORE THE POS ARE CREATED).  AT THIS TIME THERE IS NOTHING*/
   /* IN THE SYSTEM TO PREVENT AN SO SCEDULED FOR THE BUY TO BE*/
   /* ADDED TO AN ORDER ADJUSTMENT.*/
   /* ------------------------------------------------------------*/

   /* IF THE STATUS CODE WAS NOT CHANGED, RETURN*/

  if (PA0ZM001.PA0ZM-HDR-STAT-CODE == PA0ZW01.YESCD)
    return;
  end

  set YSMREC empty;

  YSMREC.YSMTBLPF = "YES";
  YSMREC.YSMSYSPF = "PA";
  YSMREC.YSMSUMID = 6;
  YSMREC.YSMSRCVL = PA0ZM001.PA0ZM-HDR-STAT-CODE;

  PA0ZS-10-IO2640-S();

   /* IF MAP STATUS IN ACTIVE BUY LIST AND PRIOR STATUS ALSO IN*/
   /* THE ACTIVE BUY LIST, RETURN.*/
   /* IF MAP STATUS NOT IN ACTIVE BUY LIST AND PRIOR STATUS ALSO*/
   /* NOT IN THE ACTIVE BUY LIST, RETURN.*/

  if (SQLCA.VAGen_SQLCODE == 0)

    set YSMREC empty;

    YSMREC.YSMTBLPF = "YES";
    YSMREC.YSMSYSPF = "PA";
    YSMREC.YSMSUMID = 6;
    YSMREC.YSMSRCVL = PA0ZW01.YESCD;

    PA0ZS-10-IO2640-S();

    if (SQLCA.VAGen_SQLCODE == 0)
      return;
    end

  else

    set YSMREC empty;

    YSMREC.YSMTBLPF = "YES";
    YSMREC.YSMSYSPF = "PA";
    YSMREC.YSMSUMID = 6;
    YSMREC.YSMSRCVL = PA0ZW01.YESCD;

    PA0ZS-10-IO2640-S();

    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    end

  end

   /* PA0ZS-01-IO4980-S1; /* OPEN DPRODA.VPAITM01*/

   /* PA0ZS-02-IO4980-N1; /* FETCH DPRODA.VPAITM01*/

   /* WHILE SQLCA.SQLCODE = 0*/
   /* AND EZEMNO EQ 0;*/
     /* ;*/
     /* IF PA2REC.OP1CUOID NE 0;*/
        /* ;*/
        /* SET FBHREC EMPTY;*/
        /* MOVE PA2REC.OP1PARTN TO FBHREC.OP1PARTN;*/
        /* MOVE PA2REC.OP1CUOID TO FBHREC.OP1CUOID;*/
        /* MOVE PA2REC.OP1NORID TO FBHREC.OP1NORID;*/
        /* MOVE PA2REC.PC2CUXID TO FBHREC.PC2CUXID;*/
        /* MOVE PAWREC.PAWBUYDT TO FBHREC.FB8BUYDT;*/
        /* MOVE PA2REC.SY1STNBR TO FBHREC.SY1STNBR;*/
        /* MOVE PA2REC.SY2CLRID TO FBHREC.SY2CLRID;*/
        /* MOVE PA2REC.XDMCD TO FBHREC.XDMCD;*/
        /* MOVE PA2REC.XQACD TO FBHREC.XQACD;*/
        /* MOVE PA2REC.XPGCD TO FBHREC.XPGCD;*/
        /* MOVE PA2REC.XUMCD TO FBHREC.XUMCD;*/
        /* ;*/
        /* PA0ZS-04-IO4640-SB;/* GET DFBUY.VDNORD01*/
        /* ;*/
        /* IF SQLCA.SQLCODE EQ 0;*/
           /* IF FBHREC.XDVCD NE '02';*/
             /* IF PROCESSING DIVERT SALES ORDER, DETERMINE THE BUY*/
             /* CUSTOFF DATE.  IF THE BUY CUTOFF DATE IS PAST, ERROR.*/
             /* OTHERWISE, UPDATE FLAGS.*/
              /* IF FBHREC.FB8BUYDT NE FB9REC.FB8BUYDT;*/
                 /* IF XX0XW01.XX0XWDAT GT FB9REC.FB9COFDT;*/
                    /* MOVE '515' TO PAWREC.XXXMODID;*/
                    /* SET PA0ZM001.PA0ZM-HDR-STAT-CODE CURSOR,BRIGHT;*/
                    /* MOVE 297 TO EZEMNO;*/
                 /* ELSE;*/
                    /* IF XX0XW01.XX0XWDAT EQ FB9REC.FB9COFDT*/
                    /* AND XX0XW01.XX0XWTIM GE FB9REC.FB9COFTM;*/
                       /* MOVE '515' TO PAWREC.XXXMODID;*/
                       /* SET PA0ZM001.PA0ZM-HDR-STAT-CODE CURSOR,BRIGHT;*/
                       /* MOVE 297 TO EZEMNO;*/
                    /* END;*/
                 /* END;*/
              /* END;*/
           /* END;*/
        /* END;*/
        /* ;*/
     /* END;*/
     /* ;*/
     /* IF EZEMNO EQ 0;*/
        /* PA0ZS-02-IO4980-N1;*/
     /* END;*/
     /* ;*/
   /* END;*/

   /* PA0ZS-03-IO4980-C1; /* CLOSE DPRODA.VPAITM01*/

   /* IF EZEMNO NE 0;*/
     /* EZERTN;*/
   /* END;*/

  PA0ZW01.PA0ZW-LIVE-BUY-STAT-CHANGED = "Y";



end // end PA0Z-515

// Verify entered o/a stat code
Function PA0Z-520()
   /* ------------------------------------------------------------*/
   /* Find the current status and the new status in the table,*/
   /* PA0ZT01.*/
     /* If the o/a status code map field equals one of the*/
     /* changable fields in the PA0ZT01. Set index xx2*/
       /* to the relative position.*/
   /* ------------------------------------------------------------*/

  XX2 = 1; /* Initialize search index*/

  while (PA0ZT01.YESCD[XX2] != "99") /* Not end of table*/

    if (PA0ZW01.YESCD == PA0ZT01.YESCD[XX2] /* current status in table*/
     && PA0ZM001.PA0ZM-HDR-STAT-CODE == PA0ZT01.YESCD1[XX2])
                                   /* and new stat in table*/
      return;

    end
    XX2 = XX2 + 1; /* Increment index*/

  end

  set PA0ZM001.PA0ZM-HDR-STAT-CODE cursor, bold;
                                             /* Row not found at this point*/
  PA0ZW00.XXXMODID = "520"; /* Module id*/
  converseLib.validationFailed(58); /* Indicate invalid status code change*/

end // end PA0Z-520

// Validate Factory data
Function PA0Z-550()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  XXX1 = 2; /* Initilize index*/
  XX3 = PA0ZW00.PA0ZW-NBR-FCTYS-TO-DISP + 1; /* current display storage*/
  while (XXX1 >= 1 /* more rows on map*/
   && XX3 >= 1)

    if (PA0ZW02.FY1FCTYC[XX3] > " ")

      /* ------------------- Validate the Status --------------------*/

      if (PA0ZM001.YESCD[XXX1] != PA0ZW02.YESCD[XX3])
        PA0Z-560();

        if (converseVar.validationMsgNum == 0)
          PA0ZW00.PA0ZW-FCTY-STAT-UPD-FLAG[XX3] = "Y";
        end

        if (PA0ZM001.PA0ZW-FCTY-COMM-1[XXX1] == 
        PA0ZW02.PA0ZW-FCTY-COMM-1[XX3] /* force chg*/
         && PA0ZM001.PA0ZW-FCTY-COMM-2[XXX1] == 
        PA0ZW02.PA0ZW-FCTY-COMM-2[XX3] 
         && PA0ZM001.PA0ZW-FCTY-COMM-3[XXX1] == 
        PA0ZW02.PA0ZW-FCTY-COMM-3[XX3])

          PA0ZM001.PA0ZW-FCTY-COMM-1[XXX1] = " ";
          PA0ZM001.PA0ZW-FCTY-COMM-2[XXX1] = " ";
          PA0ZM001.PA0ZW-FCTY-COMM-3[XXX1] = " ";
        end
      end

      if (PA0ZM001.PA0ZW-FCTY-COMM-1[XXX1] != PA0ZW02.PA0ZW-FCTY-COMM-1[XX3]
      
       || PA0ZM001.PA0ZW-FCTY-COMM-2[XXX1] != 
      PA0ZW02.PA0ZW-FCTY-COMM-2[XX3]
       || PA0ZM001.PA0ZW-FCTY-COMM-3[XXX1] != 
      PA0ZW02.PA0ZW-FCTY-COMM-3[XX3])

        PA0ZW02.PA0ZW-FCTY-COMM-1[XX3] = PA0ZM001.PA0ZW-FCTY-COMM-1[XXX1];
        PA0ZW02.PA0ZW-FCTY-COMM-2[XX3] = PA0ZM001.PA0ZW-FCTY-COMM-2[XXX1];
        PA0ZW02.PA0ZW-FCTY-COMM-3[XX3] = PA0ZM001.PA0ZW-FCTY-COMM-3[XXX1];
        PA0ZW02.PA0ZW-FCTY-COMM-CHG-FLAG[XX3] = "Y"; /* cmt changed*/


      end

      if (PA0ZM001.XXXINIT[XXX1] != PA0ZW02.XXXINIT[XX3])
        PA0ZW02.XXXINIT[XX3] = PA0ZM001.XXXINIT[XXX1];
        PA0ZW02.PA0ZW-FCTY-CHNG-FLAG[XXX1] = "Y";
      end /* ;*/

      if (PA0ZM001.PA4FCTDC[XXX1] != PA0ZW02.PA4FCTDC[XX3])
        PA0ZW02.PA4FCTDC[XX3] = PA0ZM001.PA4FCTDC[XXX1];
        PA0ZW02.PA0ZW-FCTY-CHNG-FLAG[XX3] = "Y";
      end /* ;*/

      if (PA0ZM001.PA4FAPVL[XXX1] != PA0ZW02.PA4FAPVL[XX3])
        PA0Z-570();
      end /* ;*/

    end
    XXX1 = XXX1 - 1;
    XX3 = XX3 - 1;
  end

   /* ----------------------------------------------------------*/
                   /* if one fcty eq 20 and no other fctys*/
                   /* eq 00,15 OR 84, and header status eq 15*/
                    /* then set the hdr status to*/
                    /* 20 ie(po updt)*/
   /* ----------------------------------------------------------*/

  PA0ZW00.PA0ZW-FCTY-UPD-HDR-STAT = "N";
  XX3 = 4; /* Initilize index*/
  while (XX3 >= 1) /* more rows on map*/

    if (PA0ZW02.FY1FCTYC[XX3] > " ")

      if (PA0ZW02.YESCD[XX3] == "00"
       || PA0ZW02.YESCD[XX3] == "15"
       || PA0ZW02.YESCD[XX3] == "84")
        PA0ZW00.PA0ZW-FCTY-UPD-HDR-STAT = "N";
        XX3 = 1; /* stop loop*/
      else
        if (PA0ZW02.YESCD[XX3] == "20"
         || PA0ZW02.YESCD[XX3] == "19")
          PA0ZW00.PA0ZW-FCTY-UPD-HDR-STAT = "Y";
        end
      end
    end

    XX3 = XX3 - 1;
  end

   /* --------------------check whst flag---------------*/

  if (PA0ZW00.PA0ZW-FCTY-UPD-HDR-STAT == "Y") /* FCTY STATUS TO UPDATE HEADER*/
    if (converseVar.validationMsgNum == 0) /* no error*/
      if (PA0ZW01.YESCD == "15" /* fcty docs sent*/
       || PA0ZW01.YESCD == "05" /* spclst is finished and internal oa*/
       || PA0ZW01.YESCD == "06") /* spclst is finished and internal oa*/

        PA0ZM001.PA0ZM-HDR-STAT-CODE = "20"; /* hdr stat map*/
        PA0ZW01.YESCD = "20"; /* hdr stat display storage*/
        PA0ZW01.PA0ZW-HDR-CHNG-FLAG = "Y"; /* hdr stat flag*/
        PA0ZW00.PA0ZW-HDR-STAT-CHNG-FLAG = "Y";

        if (PA0ZW01.PA0ZW-HDR-COMM-CHNG-FLAG != "Y") /* comments not changed*/
          if (PA0ZW01.YESCD in YESTBL.YESCD)
            PA0ZW01.PA0ZW-HDR-COMM-1 = YESTBL.YESDESC[sysVar.arrayIndex];
          end
          PA0ZW01.PA0ZW-HDR-COMM-2 = " ";
          PA0ZW01.PA0ZW-HDR-COMM-3 = " ";
          PA0ZW01.PA0ZW-HDR-COMM-CHNG-FLAG = "Y";
        end
      end
    end
  end


   /* ----------------------------------------------------------*/
                   /* if one fcty eq 84 and no other fctys*/
                   /* eq 15 or 20, and header status eq 15*/
                    /* then set the hdr status to*/
                    /* 00 ie start over*/
   /* ----------------------------------------------------------*/

  if (PA0ZW01.YESCD == "84" /* a factory had DENIED*/
   || PA0ZW01.YESCD == "15") /**/
    PA0ZW00.PA0ZW-FCTY-UPD-HDR-STAT = "N";
    XX3 = 4; /* Initilize index*/
    while (XX3 >= 1) /* more rows on map*/

      if (PA0ZW02.FY1FCTYC[XX3] > " ")

        if (PA0ZW02.YESCD[XX3] != "15"
         && PA0ZW02.YESCD[XX3] != "20")
          PA0ZW00.PA0ZW-FCTY-UPD-HDR-STAT = "N";
          XX3 = 1; /* stop loop*/
        else
          PA0ZW00.PA0ZW-FCTY-UPD-HDR-STAT = "Y";
        end
      end

      XX3 = XX3 - 1;
    end

   /* --------------------check whst flag---------------*/

    if (PA0ZW00.PA0ZW-FCTY-UPD-HDR-STAT == "Y" /* chg header stat*/
     && PA0ZM001.PA0ZM-HDR-STAT-CODE != "15"   
     && PA0ZW01.YESCD != "15")                

      PA0ZM001.PA0ZM-HDR-STAT-CODE = "15"; /* hdr stat map*/
      PA0ZW01.YESCD = "15"; /* hdr stat display storage*/
      PA0ZW01.PA0ZW-HDR-CHNG-FLAG = "Y"; /* hdr CHANGE FLAG*/
      PA0ZW00.PA0ZW-HDR-STAT-CHNG-FLAG = "Y";

    end
  end

   /* ----------------------------------------------------------*/
         /* if header status is 20 and user changes*/
         /* one of the fcty statuses to 15*/
         /* then change header status to 15*/
   /* ----------------------------------------------------------*/

  if (PA0ZW01.YESCD == "20") /* a factory had approved*/
    PA0ZW00.PA0ZW-FCTY-UPD-HDR-STAT = "N";
    XX3 = 4; /* Initilize index*/
    while (XX3 >= 1) /* more rows on map*/

      if (PA0ZW02.FY1FCTYC[XX3] > " ")

        if (PA0ZW02.YESCD[XX3] == "15")
          PA0ZW00.PA0ZW-FCTY-UPD-HDR-STAT = "Y";
          XX3 = 1; /* stop loop*/
        end
      end

      XX3 = XX3 - 1;
    end

   /* --------------------check whst flag---------------*/

    if (PA0ZW00.PA0ZW-FCTY-UPD-HDR-STAT == "Y" /* chg header stat*/
     && PA0ZM001.PA0ZM-HDR-STAT-CODE != "15"   
     && PA0ZW01.YESCD != "15")                

      PA0ZM001.PA0ZM-HDR-STAT-CODE = "15"; /* hdr stat map*/
      PA0ZW01.YESCD = "15"; /* hdr stat display storage*/
      PA0ZW01.PA0ZW-HDR-CHNG-FLAG = "Y"; /* hdr CHANGE FLAG*/
      PA0ZW00.PA0ZW-HDR-STAT-CHNG-FLAG = "Y";

    end
  end

   /* ------------- End of Process PA0Z-550 -----------------------*/

end // end PA0Z-550

// Validate factory status
Function PA0Z-560()
   /* ------------------------------------------------------------*/
   /* Validate factory status(s)*/
   /* ------------------------------------------------------------*/

  if (PA0ZM001.PA0ZM-HDR-STAT-CODE == "10" /* no fcty stat changes*/
   || PA0ZM001.PA0ZM-HDR-STAT-CODE == "75" /* allowed for these*/
   || PA0ZM001.PA0ZM-HDR-STAT-CODE == "97" /* hdr statuses*/
   || PA0ZM001.PA0ZM-HDR-STAT-CODE == "98") /**/
    converseLib.validationFailed(265);
    PA0ZW00.XXXMODID = "560"; /* Module identification*/
    return;
  end


   /* TCS PA679*/
  if (PA0ZM001.PA-AFRGT-RQT-ID > 0 /* if this is an a/f request*/
   && (PA0ZW01.YETCD == "DM" || PA0ZW01.YETCD == "NM"))
    converseLib.validationFailed(315); /* factory status change invalid for a/f*/
    set PA0ZM001.YESCD[XXX1] cursor, modified, bold;
    PA0ZW00.XXXMODID = "560"; /* Module identification*/
    return;
  end

   /* Check if status is valid and active*/

  if (PA0ZM001.YESCD[XXX1] in YESTBL.YESCD /* Valid code*/
   && YESTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status active*/
     /* next sentence*/
  else
    set PA0ZM001.YESCD[XXX1] cursor, modified, bold;
    converseLib.validationFailed(21);
    PA0ZW00.XXXMODID = "560"; /* Module identification*/
    return;
  end

   /* pa0341: only change flag level 4 can change fcty stat from*/
              /* 84 to 00.*/

  if (PA0ZW02.YESCD[XX3] == "84")
    if (PA0ZM001.YESCD[XXX1] == "00")
      if (COMMAREA.CACLVL[4] != "Y")
        PA0ZW00.XXXMODID = "560";
        converseLib.validationFailed(52); /* user not authorized*/
        set PA0ZM001.YESCD[XXX1] cursor, modified, bold;
      end
    end
  end

   /* Check if it's in the allowable status change table*/

  if (PA0ZW02.YESCD[XX3] in PAZTBL.YESCD)
     /* next sentence*/
  else
    set PA0ZM001.YESCD[XXX1] cursor, modified, bold;
    converseLib.validationFailed(21);
    PA0ZW00.XXXMODID = "560"; /* Module identification*/
    return;
  end

   /* Check if the status being changed to is valid*/

  if (PA0ZM001.YESCD[XXX1] == PAZTBL.YESCD1[sysVar.arrayIndex]
   || PA0ZM001.YESCD[XXX1] == PAZTBL.YESCD2[sysVar.arrayIndex]
   || PA0ZM001.YESCD[XXX1] == PAZTBL.YESCD3[sysVar.arrayIndex]
   || PA0ZM001.YESCD[XXX1] == PAZTBL.YESCD4[sysVar.arrayIndex]
   || PA0ZM001.YESCD[XXX1] == PAZTBL.YESCD5[sysVar.arrayIndex])


  else

    set PA0ZM001.YESCD[XXX1] cursor, modified, bold;
    converseLib.validationFailed(21);
    PA0ZW00.XXXMODID = "560"; /* Module identification*/
    return;
  end

  if (PA0ZM001.YESCD[XXX1] != "96"
   && PA0ZM001.YESCD[XXX1] != "98"
   && PA0ZM001.YESCD[XXX1] != "84")
    if (PA0ZW01.PA0ZW-ITEMS-EXIST-FL != "Y") /* no items exist*/
      if (PA1REC.YETCD != "PR") /* pre-advice no need items*/
        PA0ZW00.XXXMODID = "560"; /* module id*/
        converseLib.validationFailed(161); /* items must exist*/
        set PA0ZM001.YESCD[XXX1] cursor, modified, bold;
        return;
      end
    end
  end

  PA0Z-561();

  if (PA0ZM001.YESCD[XXX1] == "96"
   || PA0ZM001.YESCD[XXX1] == "84"
   || PA0ZM001.YESCD[XXX1] == "98")


         /* check comments not changed move in status desc*/

    if (PA0ZM001.PA0ZW-FCTY-COMM-1[XXX1] == PA0ZW02.PA0ZW-FCTY-COMM-1[XX3]
     && PA0ZM001.PA0ZW-FCTY-COMM-2[XXX1] == 
    PA0ZW02.PA0ZW-FCTY-COMM-2[XX3]
    
     && PA0ZM001.PA0ZW-FCTY-COMM-3[XXX1] == 
    PA0ZW02.PA0ZW-FCTY-COMM-3[XX3]
    )

      if (PA0ZM001.YESCD[XXX1] in YESTBL.YESCD)
        PA0ZM001.PA0ZW-FCTY-COMM-1[XXX1] = YESTBL.YESDESC[sysVar.arrayIndex];
      end
      PA0ZM001.PA0ZW-FCTY-COMM-2[XXX1] = " ";
      PA0ZM001.PA0ZW-FCTY-COMM-3[XXX1] = " ";

    end

    if (PA0ZM001.YESCD[XXX1] == "96") /* put oa on hold*/
      PA0ZW01.PA1HLDFL = "Y";
      PA0ZW01.PA0ZW-HDR-CHNG-FLAG = "Y"; /* made change to hdr*/
      /* MOVE '00' TO PA0ZW01.YESCD;*/
    end

    if (PA0ZM001.YESCD[XXX1] == "84") /* put hdr to 84 as well*/
      PA0ZW01.PA0ZW-HDR-CHNG-FLAG = "Y"; /* made change to hdr*/
      PA0ZW01.YESCD = "84";
      PA0ZM001.PA0ZM-HDR-STAT-CODE = "84";
    end


    if (PA0ZW01.PA0ZW-HDR-COMM-CHNG-FLAG != "Y") /* hdr cmts not changed*/
      if (PA0ZM001.YESCD[XXX1] in YESTBL.YESCD)
        PA0ZW01.PA0ZW-HDR-COMM-1 = YESTBL.YESDESC[sysVar.arrayIndex];
      end
      PA0ZW01.PA0ZW-HDR-COMM-2 = " ";
      PA0ZW01.PA0ZW-HDR-COMM-3 = " ";
      PA0ZW01.PA0ZW-HDR-COMM-CHNG-FLAG = "Y"; /* change cmts*/

    end


  end

  if (converseVar.validationMsgNum == 0)
    PA0ZW02.YESCD[XX3] = PA0ZM001.YESCD[XXX1];
    PA0ZW02.PA0ZW-FCTY-CHNG-FLAG[XX3] = "Y"; /* fcty changed*/
  end

   /* ------------- End of Process PA0Z-560 -----------------------*/

end // end PA0Z-560

// Validate factory status
Function PA0Z-561()
   /* ------------------------------------------------------------*/
   /* cross validate header vs fcty status in pa0zt01 table*/
   /* ------------------------------------------------------------*/


  XX2 = 1; /* init loop index*/

  while (PA0ZT01.YESCD[XX2] != "99") /* loop through table*/

    if (PA0ZW01.YESCD == PA0ZT01.YESCD[XX2]) /* when hdr stat found*/
      if (PA0ZM001.YESCD[XXX1] == PAAVST1[XX2] /* & fcty stat found*/
       || PA0ZM001.YESCD[XXX1] == PAAVST2[XX2] /* or ""*/
       || PA0ZM001.YESCD[XXX1] == PAAVST3[XX2] /* or ""*/
       || PA0ZM001.YESCD[XXX1] == PAAVST4[XX2] /* or ""*/
       || PA0ZM001.YESCD[XXX1] == PAAVST5[XX2]) /* or ""*/
        return; /* good ... return*/
      end
    end
    XX2 = XX2 + 1;
  end
   /* if fcty status not found in table...........*/
  set PA0ZM001.YESCD[XXX1] cursor, modified, bold;
  converseLib.validationFailed(21);
  PA0ZW00.XXXMODID = "561"; /* Module identification*/

   /* ------------- End of Process PA0Z-561 -----------------------*/

end // end PA0Z-561

// Validate factory rework ind
Function PA0Z-570()
   /* ------------------------------------------------------------*/
   /* validate factory rework flag.*/

     /* if factory status code is 15 then user may set rework*/
     /* flag to "r" to allow rework.*/

   /* ------------------------------------------------------------*/

  if (PA0ZM001.PA4FAPVL[XXX1] == "R") /* user wants to rework*/
    if (PA0ZM001.YESCD[XXX1] == "15") /* valid status for rework*/
      PA0ZW02.PA0ZW-FCTY-CHNG-FLAG[XX3] = "Y"; /* fcty changed*/
      PA0ZW02.PA4FAPVL[XX3] = PA0ZM001.PA4FAPVL[XXX1]; /* move rework*/
      PA0ZM001.YESCD[XXX1] = "00"; /* set status to 00*/
    else
      set PA0ZM001.PA4FAPVL[XXX1] cursor, modified, bold;
      converseLib.validationFailed(21); /* not valid fcty status for change*/
      PA0ZW00.XXXMODID = "570";
      return;
    end

  else
    set PA0ZM001.PA4FAPVL[XXX1] cursor, modified, bold;
    converseLib.validationFailed(208); /* not valid fcty status for change*/
    PA0ZW00.XXXMODID = "570";
    return;
  end
end // end PA0Z-570

// Process valid input request
Function PA0Z-600()

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    return;
  end

   /* ------------------------------------------------------------*/
   /* If a scroll request, adjust temporary storage page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/
    PA0ZW00.PA0ZW-NBR-FCTYS-TO-DISP = PA0ZW00.PA0ZW-NBR-FCTYS-TO-DISP - 2;
                                                   /* Decrement page number*/
    return;

  end

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/
    PA0ZW00.PA0ZW-NBR-FCTYS-TO-DISP = PA0ZW00.PA0ZW-NBR-FCTYS-TO-DISP + 2;
                                                   /* Increment page number*/
    return;

  end


  if (converseVar.eventKey is enter) /* enter pressed*/
    if (PA0ZM001 is modified) /* if the map changed*/
      PA0ZW00.XXXMSGNO = 30; /* pf9 to update, pa2 clear*/
      return; /* return*/
    else
      return; /* return*/
    end
  end

  if (converseVar.eventKey not pf9) /* Pf9 not pressed*/
    return; /* Get out while the gettins' good*/
  end

   /* ---------------- UPDATE DATABASE ROWS HERE -----------------*/

   /* 10/30/95: COPY O/A FROM FORECASTING*/

  if (PA0ZW00.PA0ZW-COPY-OA == "Y")
    PA0Z-60001(); /* GET NEXT AVAILABLE O/A NUMBER*/
    PA1REC.PA1GROUP = PA0ZW01.PA1GROUP; /* SET O/A INFO BACK TO ORIG*/
    PA0ZW01.PA0ZW-LIVE-BUY-STAT-CHANGED = "Y"; /* RESET BUY FLAGS*/
  end

  XXX1 = 1; /* Initialize index*/
  while (XXX1 <= 4) /* While more rows on page*/

    if (PA0ZW02.FY1FCTYC[XXX1] != " ")

      set PA4REC empty; /* CLEAR DATABASE RECORD*/

      PA4REC.PA1OANBR = PA0ZW01.PA1OANBR;
      PA4REC.FY1FCTYC = PA0ZW02.FY1FCTYC[XXX1];
      PA0Z-620(); /* SELECT UNIQUE PA4REC ROW*/

      if (SQLCA.VAGen_SQLCODE == 100) /* Row deleted*/
        converseLib.validationFailed(54); /* Error message*/
        PA0ZW00.XXXMODID = "600"; /* Module id*/
        set PA0ZM001.FY1FCTYC[XXX1] cursor, modified, bold;
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* Roll back any updates*/
        exit stack; /* Get out while the gettins' good*/
      end

      if (PA0ZW02.PA0ZW-FCTY-CHNG-FLAG[XXX1] == "Y") /* fcty changed*/

        PA4REC.YESCD = PA0ZW02.YESCD[XXX1]; /* Status code*/
        PA4REC.PA4FCTDC = PA0ZW02.PA4FCTDC[XXX1]; /* Document*/
        PA4REC.PA4FAPVL = PA0ZW02.PA4FAPVL[XXX1]; /* rework flag*/
        PA4REC.XXXINIT = PA0ZW02.XXXINIT[XXX1]; /* Initials*/

        XX0XS01(); /* Obtain current time*/
        PA4REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
        PA4REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
        PA4REC.ZZZCHGCT = PA0ZW02.ZZZCHGCT[XXX1];

        PA0Z-630(); /* Update pa4rec row*/

      end

      if (PA0ZW02.PA0ZW-FCTY-COMM-CHG-FLAG[XXX1] == "Y" /* fcty cmnt changed*/
       || PA0ZW00.PA0ZW-FCTY-STAT-UPD-FLAG[XXX1] == "Y")

        set PA9REC empty; /* Clear database record*/

        PA9REC.PA1OANBR = PA0ZW00.PA1OANBR; /* O/A number*/
        PA9REC.FY1FCTYC = PA0ZW02.FY1FCTYC[XXX1]; /* Factory*/
        PA9REC.YESCD = PA0ZW02.YESCD[XXX1]; /* Status*/
        PA9REC.PA9COMTY = "F"; /* Comment type - Factory*/
        PA9REC.PA9COM[1] = PA0ZW02.PA0ZW-FCTY-COMM-1[XXX1];
        PA9REC.PA9COM[2] = PA0ZW02.PA0ZW-FCTY-COMM-2[XXX1];
        PA9REC.PA9COM[3] = PA0ZW02.PA0ZW-FCTY-COMM-3[XXX1];

        PA0Z-640(); /* Add pa9rec row*/

      end

       /* 10/30/95: COPY FACTORY RECORDS FOR NEW O/A*/

      if (PA0ZW00.PA0ZW-COPY-OA == "Y")
        PA4REC.PA1OANBR = PA0ZW00.PA0ZW-NEW-OA;
        PA4REC.YESCD = "00"; /* Status code*/
        PA0ZS-14-IO4810-A(); /* COPY FACTORY RECORD*/
      end

    end
    XXX1 = XXX1 + 1; /* Increment index*/
  end


  if (PA0ZW01.PA0ZW-HDR-CHNG-FLAG == "Y"
   || PA0ZW01.PA0ZW-HOLD-STAT-FLAG == "Y")


    PA1REC.PA1OATXT = PA0ZW01.PA1OATXT; /* DESC*/
    PA1REC.PA1HLDFL = PA0ZW01.PA1HLDFL; /* hold flag*/
    PA1REC.FB-LATE-BK-FL = PA0ZW01.FB-LATE-BK-FL; /* late book*/
    PA1REC.YESCD = PA0ZW01.YESCD; /* status*/
    PA1REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
    PA1REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
    PA1REC.PA1YESDT = XX0XW01.XX0XWDAT; /* Status change date*/
    PA1REC.PA1YESID = COMMAREA.CAUSERID; /* Changed by*/
    PA0Z-650(); /* Update pa1rec*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found for update*/
      PA0ZW00.XXXMSGNO = 61; /* Error message*/
      PA0ZW00.XXXMODID = "600"; /* Module id*/
      set PA0ZM001.FY1FCTYC cursor, modified, bold; /* Set cursor*/
      PA0ZW00.PA0ZW-RQST-4-DATA-SW = "Y"; /* Request for data*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back last change*/
      exit stack; /* Get out while the gettins' good*/

    end
  end

   /* greddy - 05/10/01 - Begin*/
   /* If the forecast overrun flag has changed.*/
  if (PA0ZW01.PA0ZW-FCSTOR-CHG-FL == "Y")

    set VPAWRK03 empty;
    VPAWRK03.PA1OANBR = PA0ZM001.PA1OANBR;
    VPAWRK03.PACSEVAL = "*";
    VPAWRK03.PACORDTY = "9";
    VPAWRK03.ZZZSDT = -1;
    VPAWRK03.ZZZSTM = -1;

    PA0ZS-27-VPAWRK-S2();

    PA0ZS-28-VPAWRK-N2();

    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found for update*/
      PA0ZW00.XXXMSGNO = 10; /* Error message*/
      PA0ZW00.XXXMODID = "600"; /* Module id*/
      return; /* Get out while the gettins' good*/
    end

    while (SQLCA.VAGen_SQLCODE == 0) /* Row found for update*/
      if (PA0ZM001.PA0ZW-FCST-OR-FL == "Y")
        VPAWRK03.PACGRPCD = "EXCINV";
      else
        VPAWRK03.PACGRPCD = " ";
      end

      PA0ZS-41-VPAWRK-U();

      PA0ZS-28-VPAWRK-N2();
    end

    PA0ZS-29-VPAWRK-C2();

    PA0ZW01.PA0ZW-FCSTOR-CHG-FL = "N";
  end

   /* greddy - 05/10/01 - End*/

   /* 10/31/95: DON'T OUTPUT ANOTHER HEADER COMMENT IF ALREADY PRINTED*/
   /* THE COMMENT FOR THE COPY.*/

  if (PA0ZW00.PA0ZW-COPY-OA != "Y")
    if (PA0ZW01.PA0ZW-HDR-COMM-CHNG-FLAG == "Y" /* cmmments changed*/
     || PA0ZW00.PA0ZW-HDR-STAT-CHNG-FLAG == "Y") /* HEADER STATUS CHANGED*/

      set PA9REC empty;
      PA9REC.PA1OANBR = PA1REC.PA1OANBR;
      PA9REC.ZZZSDT = XX0XW01.XX0XWDAT;
      PA9REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* setup change date*/
      PA9REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* setup change time*/
      PA9REC.PA9COMTY = "H";
      PA9REC.XXXUSER = COMMAREA.CAUSERID;

      PA9REC.PA9COM[1] = PA0ZW01.PA0ZW-HDR-COMM-1;
      PA9REC.PA9COM[2] = PA0ZW01.PA0ZW-HDR-COMM-2;
      PA9REC.PA9COM[3] = PA0ZW01.PA0ZW-HDR-COMM-3;

      PA9REC.YESCD = PA0ZW01.YESCD;

      PA0Z-640();

    end
  end

  if (PA0ZW01.PA0ZW-HDR-INS-CHNG-FLAG == "Y") /* header instructions*/


    set PA9REC empty;
    PA9REC.PA1OANBR = PA1REC.PA1OANBR;
    PA9REC.ZZZSDT = XX0XW01.XX0XWDAT;
    PA9REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* setup change date*/
    PA9REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* setup change time*/
    PA9REC.PA9COMTY = "I";
    PA9REC.XXXUSER = COMMAREA.CAUSERID;

    PA9REC.PA9COM[1] = PA0ZW01.PA0ZW-HDR-INS-1;
    PA9REC.PA9COM[2] = PA0ZW01.PA0ZW-HDR-INS-2;
    PA9REC.PA9COM[3] = PA0ZW01.PA0ZW-HDR-INS-3;

    PA9REC.YESCD = "00";

    PA0Z-640();

  end

  if (PA0ZW01.PA0ZW-LIVE-BUY-STAT-CHANGED == "Y")
    PA0Z-660(); /* UPDATE BUY FLAGS IF NECESSARY*/
  end

   /* 10/30/95: COPY REMAINING O/A RECORDS*/

  if (PA0ZW00.PA0ZW-COPY-OA == "Y")
    PA0Z-60002(); /* COPY O/A RECORDS*/
  end

  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit();

  if (PA0ZW00.PA0ZW-COPY-OA == "Y")
    PA0ZM001.PA1OANBR = PA0ZW00.PA0ZW-NEW-OA;
    PA0ZW00.PA1OANBR = PA0ZW00.PA0ZW-NEW-OA;
    PA0ZW01.PA1OANBR = PA0ZW00.PA0ZW-NEW-OA;
  end

  PA0ZW00.PA0ZW-RQST-4-DATA-SW = "Y"; /* Request for data*/
  PA0ZW00.XXXMODID = "600"; /* Module identification*/
  PA0ZW00.XXXMSGNO = 1; /* Update successful message*/
  PA0ZW01.PA0ZW-LIVE-BUY-STAT-CHANGED = "N";
  PA0ZW00.PA0ZW-HDR-STAT-CHNG-FLAG = "N";
  PA0ZW00.PA0ZW-COPY-OA = "N";

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 4)
    PA0ZW00.PA0ZW-FCTY-STAT-UPD-FLAG[sysVar.arrayIndex] = "N";
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end


   /* ------------------ end of process pa0z-600 ------------------*/
end // end PA0Z-600

// GET NEXT AVAILABLE O/A NUMBER
Function PA0Z-60001()
   /* ---------------------------------------------------------*/
   /* UPDATE DPRODA.VPACTL01*/
   /* ---------------------------------------------------------*/
  PA8REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  PA8REC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  PA0ZS-11-IO4800-G(); /* UPDATE DPRODA.VPACTL01*/

  if (SQLCA.VAGen_SQLCODE != 0)
    return;
  end

   /* -----------------------------------------------------*/
   /* ADD NEW DPRODA.VPAHDR01 RECORD*/
   /* -----------------------------------------------------*/

  PA1REC.PA1OANBR = PA8REC.PA8NXTNB;
  PA0ZW00.PA0ZW-NEW-OA = PA8REC.PA8NXTNB;
  PA1REC.YESCD = "00";
  PA1REC.PA1YESID = COMMAREA.CAUSERID;
  PA1REC.PA1YESDT = XX0XW01.XX0XWDAT;
  PA1REC.XXXPGUID = "PA0Z";

  PA0ZS-12-IO4830-A(); /**/

   /* -----------------------------------------------------*/
   /* ADD DPRODA.VPACMT01 FOR NEW RECORD*/
   /* -----------------------------------------------------*/

  set PA9REC empty;
  PA9REC.PA1OANBR = PA1REC.PA1OANBR;
  PA9REC.FY1FCTYC = " ";
  PA9REC.YESCD = "00";
  PA9REC.PA9COMTY = "H";

  PA0ZW00.PA0ZW-COPY-COMMENT1 = "O/A COPIED FROM: ";
  PA0ZW00.PA0ZW-COPY-FROM-OA = PA0ZW01.PA1OANBR;
  PA9REC.PA9COM[1] = PA0ZW00.PA0ZW-COPY-COMMENT;

  PA9REC.XXXUSER = COMMAREA.CAUSERID;
  PA9REC.ZZZSDT = XX0XW01.XX0XWDAT;
  PA9REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  PA9REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  PA9REC.ZZZCHGCT = 0;
  PA0ZS-13-IO4820-A(); /* ADD DPRODA.VPACMT01 RECORD*/

   /* -----------------------------------------------------*/
   /* ADD DPRODA.VPACMT01 FOR OLD RECORD*/
   /* -----------------------------------------------------*/

  set PA9REC empty;
  PA9REC.PA1OANBR = PA0ZM001.PA1OANBR;
  PA9REC.FY1FCTYC = " ";
  PA9REC.YESCD = "98";
  PA9REC.PA9COMTY = "H";

  PA0ZW00.PA0ZW-COPY-COMMENT1 = "O/A COPIED TO:   ";
  PA0ZW00.PA0ZW-COPY-FROM-OA = PA0ZW00.PA0ZW-NEW-OA;
  PA9REC.PA9COM[1] = PA0ZW00.PA0ZW-COPY-COMMENT;

  PA9REC.XXXUSER = COMMAREA.CAUSERID;
  PA9REC.ZZZSDT = XX0XW01.XX0XWDAT;
  PA9REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  PA9REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  PA9REC.ZZZCHGCT = 0;
  PA0ZS-13-IO4820-A(); /* ADD DPRODA.VPACMT01 RECORD*/

  PAWREC.XXXMODID = "600";
  converseLib.validationFailed(1); /* UPDATE SUCCESSFULLY COMPLETED*/

   /* ------------------ END OF PROCESS PA0Z-60001----------------*/
end // end PA0Z-60001

// COPY OTHER O/A RECORDS
Function PA0Z-60002()
   /* ------------------------------------------------------------*/
   /* COPY OTHER O/A RECORDS*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* THIS PROC HAS BEEN MODIFIED TO ACCESS VPAWRK03, VPAITM03,*/
   /* VFRZIT02 AS PART OF NSC CHANGES -- GREDDY 05/08/00*/
   /* ------------------------------------------------------------*/

   /* --------------------------------------------------------*/
   /* COPY DPRODA.VBOTLN01 RECORDS*/
   /* --------------------------------------------------------*/

  set PA5REC empty;
  PA5REC.PA1OANBR = PA0ZM001.PA1OANBR;

  PA0ZS-15-IO5090-S1();

  PA0ZS-16-IO5090-N1();

  while (SQLCA.VAGen_SQLCODE != 100)

    PA5REC.PA1OANBR = PA0ZW00.PA0ZW-NEW-OA;

    PA0ZS-18-IO5090-A(); /* ADD BOTTOM LINE RECORD FOR NEW O/A*/

    PA5REC.PA1OANBR = PA0ZM001.PA1OANBR;
    PA0ZS-16-IO5090-N1();

  end

  PA0ZS-17-IO5090-C1();

   /* --------------------------------------------------------*/
   /* COPY DPRODA.VFRZIT01 RECORDS*/
   /* --------------------------------------------------------*/

   /* SET PAIREC EMPTY;*/
   /* MOVE PA0ZM001.PA1OANBR TO PAIREC.PA1OANBR;*/
  set VFRZIT02 empty;
  VFRZIT02.PA1OANBR = PA0ZM001.PA1OANBR;

   /* PA0ZS-19-IO4960-S1;*/
  PA0ZS-19-VFRZIT-S1();

   /* PA0ZS-20-IO4960-N1;*/
  PA0ZS-20-VFRZIT-N1();

  while (SQLCA.VAGen_SQLCODE != 100)

   /* MOVE PA0ZW00.PA0ZW-NEW-OA TO PAIREC.PA1OANBR;*/
    VFRZIT02.PA1OANBR = PA0ZW00.PA0ZW-NEW-OA;

   /* PA0ZS-22-IO4960-A;/* ADD FROZEN ITEM RECORDS FOR NEW O/A*/
    PA0ZS-22-VFRZIT2-A(); /* ADD FROZEN ITEM RECORDS FOR NEW O/A*/

   /* MOVE PA0ZM001.PA1OANBR TO PAIREC.PA1OANBR;*/
   /* PA0ZS-20-IO4960-N1;*/
    VFRZIT02.PA1OANBR = PA0ZM001.PA1OANBR;
    PA0ZS-20-VFRZIT-N1();

  end

   /* PA0ZS-21-IO4960-C1;*/
  PA0ZS-21-VFRZIT-C1();

   /* --------------------------------------------------------*/
   /* COPY DPRODA.VFRZSZ01 RECORDS*/
   /* --------------------------------------------------------*/

  set PASREC empty;
  PASREC.PA1OANBR = PA0ZM001.PA1OANBR;

  PA0ZS-23-IO4970-S1();

  PA0ZS-24-IO4970-N1();

  while (SQLCA.VAGen_SQLCODE != 100)

    PASREC.PA1OANBR = PA0ZW00.PA0ZW-NEW-OA;

    PA0ZS-26-IO4970-A(); /* ADD FROZEN SIZE RECORDS FOR NEW O/A*/

    PASREC.PA1OANBR = PA0ZM001.PA1OANBR;
    PA0ZS-24-IO4970-N1();

  end

  PA0ZS-25-IO4970-C1();

   /* --------------------------------------------------------*/
   /* COPY DPRODA.VPAWRK01 RECORDS*/
   /* --------------------------------------------------------*/

   /* SET PACREC EMPTY;*/
   /* MOVE PA0ZM001.PA1OANBR TO PACREC.PA1OANBR;*/
   /* MOVE '*' TO PACREC.PACSEVAL;*/
   /* MOVE '*' TO PACREC.PACORDTY;*/
   /* MOVE -1 TO PACREC.ZZZSDT;*/
   /* MOVE -1 TO PACREC.ZZZSTM;*/
  set VPAWRK03 empty;
  VPAWRK03.PA1OANBR = PA0ZM001.PA1OANBR;
  VPAWRK03.PACSEVAL = "*";
  VPAWRK03.PACORDTY = "*";
  VPAWRK03.ZZZSDT = -1;
  VPAWRK03.ZZZSTM = -1;

   /* PA0ZS-27-IO4950-S2;*/
  PA0ZS-27-VPAWRK-S2();

   /* PA0ZS-28-IO4950-N2;*/
  PA0ZS-28-VPAWRK-N2();

  while (SQLCA.VAGen_SQLCODE != 100)

   /* MOVE PA0ZW00.PA0ZW-NEW-OA TO PACREC.PA1OANBR;*/
   /* ;*/
   /* PA0ZS-30-IO4950-A;/* ADD WORK RECORDS FOR NEW O/A*/
   /* ;*/
   /* MOVE PA0ZM001.PA1OANBR TO PACREC.PA1OANBR;*/
   /* PA0ZS-28-IO4950-N2;*/
    VPAWRK03.PA1OANBR = PA0ZW00.PA0ZW-NEW-OA;

    PA0ZS-30-VPAWRK3-A(); /* ADD WORK RECORDS FOR NEW O/A*/

    VPAWRK03.PA1OANBR = PA0ZM001.PA1OANBR;
    PA0ZS-28-VPAWRK-N2();

  end

   /* PA0ZS-29-IO4950-C2;*/
  PA0ZS-29-VPAWRK-C2();

   /* --------------------------------------------------------*/
   /* COPY DPRODA.VPAITM01 RECORDS*/
   /* --------------------------------------------------------*/

   /* SET PA2REC EMPTY;*/
   /* MOVE PA0ZM001.PA1OANBR TO PA2REC.PA1OANBR;*/
   /* MOVE '*' TO PA2REC.YESCD;*/
   /* ;*/
   /* PA0ZS-31-IO4980-S1;*/
   /* ;*/
   /* PA0ZS-32-IO4980-N1;*/
  set VPAITM03 empty;
  VPAITM03.PA1OANBR = PA0ZM001.PA1OANBR;
  VPAITM03.YESCD = "*";

  PA0ZS-31-VPAITM-S1();

  PA0ZS-32-VPAITM-N1();

  while (SQLCA.VAGen_SQLCODE != 100)

   /* MOVE PA0ZW00.PA0ZW-NEW-OA TO PA2REC.PA1OANBR;*/
   /* ;*/
   /* PA0ZS-34-IO4980-A;/* ADD ITEM RECORDS FOR NEW O/A*/
   /* ;*/
   /* MOVE PA0ZM001.PA1OANBR TO PA2REC.PA1OANBR;*/
   /* PA0ZS-32-IO4980-N1;*/
    VPAITM03.PA1OANBR = PA0ZW00.PA0ZW-NEW-OA;

    PA0ZS-34-VPAITM3-A(); /* ADD ITEM RECORDS FOR NEW O/A*/

    VPAITM03.PA1OANBR = PA0ZM001.PA1OANBR;
    PA0ZS-32-VPAITM-N1();

  end

   /* PA0ZS-33-IO4980-C1;*/
  PA0ZS-33-VPAITM-C1();

   /* --------------------------------------------------------*/
   /* COPY DPRODA.VPACUS01 RECORDS*/
   /* --------------------------------------------------------*/

  set PAGREC empty;
  PAGREC.PA1OANBR = PA0ZM001.PA1OANBR;

  PA0ZS-35-IO5140-S1();

  PA0ZS-36-IO5140-N1();

  while (SQLCA.VAGen_SQLCODE != 100)

    PAGREC.PA1OANBR = PA0ZW00.PA0ZW-NEW-OA;

    PA0ZS-38-IO5140-A(); /* ADD VPACUS01 RECORDS FOR NEW O/A*/

    PAGREC.PA1OANBR = PA0ZM001.PA1OANBR;
    PA0ZS-36-IO5140-N1();

  end

  PA0ZS-37-IO5140-C1();

   /* ------------------ END OF PROCESS PA0Z-60002 ---------------*/
end // end PA0Z-60002

// Select pa4rec
Function PA0Z-620()
   /* ------------------------------------------------------------*/
   /* Select a unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4810" ("S ", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
     || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      return;

    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0ZW00.XXXMODID = "620"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Application name*/
  TA1REC.TA1PGMNM = "PA0Z-620"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- End of Process PA0z-620 ----------------------*/

end // end PA0Z-620

// Update pa4rec
Function PA0Z-630()
   /* ------------------------------------------------------------*/
   /* Update the table row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4810" ("U ", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
     || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      return;

    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0ZW00.XXXMODID = "630"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0Z-630"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback any changes*/

  exit stack; /* Flow to converse map*/

   /* ------------- End of Process PA0z-630 -----------------------*/

end // end PA0Z-630

// Add pa9rec
Function PA0Z-640()
   /* ------------------------------------------------------------*/
   /* Add a row to the database.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  XX0XS01(); /* GET CURRENT DATE AND TIME*/

  PA9REC.XXXUSER = COMMAREA.CAUSERID;
  PA9REC.ZZZSDT = XX0XW01.XX0XWDAT;
  PA9REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  PA9REC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  try
    call "IO4820" ("A ", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Row added*/
    return;

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0ZW00.XXXMODID = "640"; /* Module identification*/

  converseLib.validationFailed(10); /* Indicate system error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  converseLib.clearScreen();
   /* Clear screen before redisplay*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "ADD A ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Application name*/
  TA1REC.TA1PGMNM = "PA0Z-640"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback any changes*/

  exit stack; /* Flow to converse map*/

   /* ------------- End of Process PA0z-640 -----------------------*/

end // end PA0Z-640

// Update pa1rec
Function PA0Z-650()
   /* ------------------------------------------------------------*/
   /* Update the table row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4830" ("U ", SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
     && PA0ZW01.PA0ZW-ATDRS-OA-CANCEL-FLAG == "Y")
      PA0Z-65001(); /* RESET BUY-STATUS of SO's*/
    end

    if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
     || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      return;

    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0ZW00.XXXMODID = "650"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0Z-650"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback any changes*/

  exit stack; /* Flow to converse map*/

   /* ------------- End of Process PA0z-650 ----------------------*/

end // end PA0Z-650

// SELECT SO WORK RECS TO RESET
Function PA0Z-65001()

   /* ---------------------------------------------------------*/
   /* SELECT ALL THE SO WORK RECORDS BELONGING TO THE OA TO RESET*/
   /* THEIR BUY STATUS INDICATOR IN VDNORD01*/
   /* ---------------------------------------------------------*/
   /* SET PACREC EMPTY;*/
   /* MOVE PA0ZM001.PA1OANBR TO PACREC.PA1OANBR;*/
   /* MOVE '*' TO PACREC.PACSEVAL;*/
   /* MOVE '*' TO PACREC.PACORDTY;*/
   /* MOVE -1 TO PACREC.ZZZSDT;*/
   /* MOVE -1 TO PACREC.ZZZSTM;*/
  set VPAWRK03 empty;
  VPAWRK03.PA1OANBR = PA0ZM001.PA1OANBR;
  VPAWRK03.PACSEVAL = "*";
  VPAWRK03.PACORDTY = "*";
  VPAWRK03.ZZZSDT = -1;
  VPAWRK03.ZZZSTM = -1;

   /* PA0ZS-27-IO4950-S2;*/
  PA0ZS-27-VPAWRK-S2();

  PA0ZS-28-VPAWRK-N2();

  while (SQLCA.VAGen_SQLCODE != 100)
   /* IF PACREC.OP1CUOID GT 0;*/
    if (VPAWRK03.OP1CUOID > 0)

      set FBHREC empty;
   /* MOVE PACREC.OP1PARTN TO FBHREC.OP1PARTN;*/
   /* MOVE PACREC.OP1CUOID TO FBHREC.OP1CUOID;*/
   /* MOVE PACREC.OP1NORID TO FBHREC.OP1NORID;*/
      FBHREC.OP1PARTN = VPAWRK03.OP1PARTN;
      FBHREC.OP1CUOID = VPAWRK03.OP1CUOID;
      FBHREC.OP1NORID = VPAWRK03.OP1NORID;
      FBHREC.SY1STNBR = PA1REC.SY1STNBR;
      FBHREC.SY2CLRID = PA1REC.SY2CLRID;
      FBHREC.XDMCD = PA1REC.XDMCD;
      FBHREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
      FBHREC.ZZZCHGTM = XX0XW01.XX0XWTIM;

      PA0ZS-39-IO4640-U1();

      set VDRSAT01 empty;
   /* MOVE PACREC.OP1PARTN TO VDRSAT01.OP1PARTN;*/
   /* MOVE PACREC.OP1CUOID TO VDRSAT01.OP1CUOID;*/
   /* MOVE PACREC.OP1NORID TO VDRSAT01.OP1NORID;*/
      VDRSAT01.OP1PARTN = VPAWRK03.OP1PARTN;
      VDRSAT01.OP1CUOID = VPAWRK03.OP1CUOID;
      VDRSAT01.OP1NORID = VPAWRK03.OP1NORID;
      VDRSAT01.SY1STNBR = PA1REC.SY1STNBR;
      VDRSAT01.SY2CLRID = PA1REC.SY2CLRID;
      VDRSAT01.XDMCD = PA1REC.XDMCD;
      VDRSAT01.ZZZCHGDT = XX0XW01.XX0XWDAT;
      VDRSAT01.ZZZCHGTM = XX0XW01.XX0XWTIM;

      PA0ZS-40-VDRSAT-U1();

    end
    PA0ZS-28-VPAWRK-N2();

  end

  PA0ZS-29-VPAWRK-C2();

  PA0ZW01.PA0ZW-ATDRS-OA-CANCEL-FLAG = "N";
end // end PA0Z-65001

// CHECK FOR ACTIVE BUY STATUS
Function PA0Z-660()
   /* ------------------------------------------------------------*/
   /* FB322 - DOMESTIC SALES ORDERS FOR THE CURRENT BUY CAN BE*/
   /* MOVED TO ANOTHER BUY MONTH.  THE BUY SYSTEM NEEDS TO KNOW*/
   /* IF IT NEEDS TO BUY THESE SALES ORDERS.  IF THE O/A HAS AN*/
   /* ACTIVE BUY STATUS ('01','05','06','10','15','20','75','80'),*/
   /* THE BUY SYSTEM WILL NOT BUY THESE SALES ORDERS.  THE O/A WILL*/
   /* HAVE TO BE COMPLETED.  IF THE O/A STATUS IS CHANGED FROM/TO*/
   /* THIS GROUP, THE BUY SYSTEM NEEDS TO KNOW THAT THEIR PICTURE*/
   /* HAS CHANGED.  IF IT IS BEFORE THE BUY CUTOFF, RESET THE FLAGS*/
   /* FOR THE BUY SYSTEM.  IF IT IS AFTER THE CUTOFF, ERROR.*/
   /* ------------------------------------------------------------*/

  PA0ZW01.PA0ZW-BUY-FLAGS-UPDATED = "N";

  PA0ZS-01-IO4980-S1(); /* OPEN DPRODA.VPAITM01*/

  PA0ZS-02-IO4980-N1(); /* FETCH DPRODA.VPAITM01*/

  while (SQLCA.VAGen_SQLCODE == 0
   && PA0ZW01.PA0ZW-BUY-FLAGS-UPDATED == "N")

    if (PA2REC.OP1CUOID != 0)

      set FBHREC empty;
      FBHREC.OP1PARTN = PA2REC.OP1PARTN;
      FBHREC.OP1CUOID = PA2REC.OP1CUOID;
      FBHREC.OP1NORID = PA2REC.OP1NORID;
      FBHREC.PC2CUXID = PA2REC.PC2CUXID;
      FBHREC.FB8BUYDT = PAWREC.PAWBUYDT;
      FBHREC.SY1STNBR = PA2REC.SY1STNBR;
      FBHREC.SY2CLRID = PA2REC.SY2CLRID;
      FBHREC.XDMCD = PA2REC.XDMCD;
      FBHREC.XQACD = PA2REC.XQACD;
      FBHREC.XPGCD = PA2REC.XPGCD;
      FBHREC.XUMCD = PA2REC.XUMCD;

      PA0ZS-04-IO4640-SB(); /* GET DFBUY.VDNORD01*/

      if (SQLCA.VAGen_SQLCODE == 0)
        if (FBHREC.XDVCD != "02")
             /* RESET THE BUY FLAGS ONLY WHEN THE SO IS FROM THE CURRENT*/
             /* BUY MONTH.*/
          if (FBHREC.FB8BUYDT == FB9REC.FB8BUYDT)
            PA0Z-66001();
          end
        end
      end

    end

    PA0ZS-02-IO4980-N1();

  end

  PA0ZS-03-IO4980-C1(); /* CLOSE DPRODA.VPAITM01*/



end // end PA0Z-660

// CHECK AGAINS BUY CUTOFF DATE
Function PA0Z-66001()
   /* ------------------------------------------------------------*/
   /* SET BUY FLAGS TO 'N'*/
   /* ------------------------------------------------------------*/

  PA0ZW01.PA0ZW-BUY-FLAGS-UPDATED = "Y";

   /* UPDATE DFBUY.VDNORD01*/

  FBHREC.FBHDSAFL = "N"; /* FB-DIRSHP-ACPT-FL*/
  FBHREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FBHREC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  PA0ZS-05-IO4640-U(); /* UPDATE DFBUY.VDNORD01*/

   /* SELECT/UPDATE DFBUY.VFQTBS01*/

  set FBKREC empty;
  FBKREC.SY1STNBR = PA2REC.SY1STNBR;
  FBKREC.SY2CLRID = PA2REC.SY2CLRID;
  FBKREC.XDMCD = PA2REC.XDMCD;
  FBKREC.FB8RCTYP = "B";
  FBKREC.FB8BUYDT = PAWREC.PAWBUYDT;

  PA0ZS-06-IO4740-S(); /* SELECT DFBUY.VFQTBS01*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FBKREC.FBKCAFL = "N"; /* FB-CALC-ACPT-FL*/
    FBKREC.FBKFSAFL = "N"; /* FB-FCST-ACPT-FL*/
    FBKREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
    FBKREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
    PA0ZS-07-IO4740-U(); /* UPDATE DFBUY.VFQTBS01*/
  end

   /* SELECT/UPDATE DFBUY.VFSCTL01*/

  set FBMREC empty;
  FBMREC.PG1SC4CD = PA1REC.PG1SC4CD;

  PA0ZS-08-IO4670-S(); /* SELECT DFBUY.VFSCTL01*/

  if (SQLCA.VAGen_SQLCODE == 0)

     /* BASED ON THE PRODUCT LINE CODE, DETERMINE WHICH FLAG TO UPDATE*/

    PA0Z-66002();

      /* 07/25/95: FBMREC FLAGS OCCUR 20 TIMES.*/

    if (sysVar.arrayIndex > 0
     && sysVar.arrayIndex < 21)
      FBMREC.FBMCFFL = "N"; /* FB-CALC-FNSH-FL*/
      FBMREC.FBMFINFL = "N"; /* FB-DIRSHP-FNSH-FL*/
      FBMREC.FBMPAFL[sysVar.arrayIndex] = "N"; /* FB-PRODLN-ACPT-FL*/
      FBMREC.FBMDSLNF[sysVar.arrayIndex] = "N"; /* FB-DRSLN-FNSH-FL*/
      FBMREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
      FBMREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
      PA0ZS-09-IO4670-U(); /* UPDATE DFBUY.VFSCTL01*/
    end

  end

end // end PA0Z-66001

// DETERMINE WHICH VFSCTL01 FLAG
Function PA0Z-66002()
   /* ------------------------------------------------------------*/
   /* BASED ON THE PRODUCT LINE CODE, DETERMINE WHICH FLAG TO*/
   /* SET.*/
   /* ------------------------------------------------------------*/
  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 20)
    if (FBHREC.XPLCD == 
    FBMREC.FBMPCD[sysVar.arrayIndex])
      return;
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end
end // end PA0Z-66002

// Declare cursor dproda.vpacmt01
Function PA0Z-700()
   /* ------------------------------------------------------------*/
   /* Declare and open the cursor for dproda.vpacmt01.*/
   /* ------------------------------------------------------------*/


  try
    call "IO4820" ("S1", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/

      PA0Z-710(); /* fetch comment rows*/
      PA0Z-720(); /* close comment rows*/
      return;

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  PAWREC.XXXMODID = "700"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0Z-700

// Get most current comment
Function PA0Z-710()
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4820" ("N1", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* Normal return code*/

      return;

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  PAWREC.XXXMODID = "150"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0Z-710

// Cls cursor for dproda.vpacmt01
Function PA0Z-720()
   /* ------------------------------------------------------------*/
   /* Close the cursor for dproda.vpacmt01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4820" ("C1", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  PAWREC.XXXMODID = "160"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0Z-720

// OPEN DPRODA.VPAITM01
Function PA0ZS-01-IO4980-S1()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAITM01 TABLE.*/
   /* ------------------------------------------------------------*/

  set PA2REC empty; /* init item  rec*/
  set PAEREC empty; /* init item  rec*/
  PAEREC.PAEFUNC = "S1";
  PA2REC.PA1OANBR = PA1REC.PA1OANBR;
  PA2REC.YESCD = "*";

  try
    call "IO4980" (PAEREC, SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S01"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS01"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0ZS-01-IO4980-S1 **************************/
   /* **                                                        ***/


end // end PA0ZS-01-IO4980-S1

// GET NEXT DPRODA.VPAITM01
Function PA0ZS-02-IO4980-N1()
   /* ------------------------------------------------------------*/
   /* OPEN DPRODA.VPAITM01 TABLE.*/
   /* ------------------------------------------------------------*/

  PAEREC.PAEFUNC = "N1";

  try
    call "IO4980" (PAEREC, SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S02"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS02"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0ZS-02-IO4980-N1 **************************/
   /* **                                                        ***/


end // end PA0ZS-02-IO4980-N1

// CLOSE DPRODA.VPAITM01
Function PA0ZS-03-IO4980-C1()
   /* ------------------------------------------------------------*/
   /* CLOSE DPRODA.VPAITM01 TABLE.*/
   /* ------------------------------------------------------------*/

  PAEREC.PAEFUNC = "C1";

  try
    call "IO4980" (PAEREC, SQLCA, PA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S03"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DPRODA.VPAITM01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS03"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA2REC.PA2KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0ZS-03-IO4980-C1 **************************/
   /* **                                                        ***/


end // end PA0ZS-03-IO4980-C1

// GET DFBUY.VDNORD01
Function PA0ZS-04-IO4640-SB()
   /* ------------------------------------------------------------*/
   /* GET DFBUY.VDNORD01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4640" ("SB", SQLCA, FBHREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S04"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "GET DFBUY.VDNORD01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS04"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDNORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBHREC.FBHGROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0ZS-04-IO4640-SB **************************/
   /* **                                                        ***/


end // end PA0ZS-04-IO4640-SB

// UPDATE DFBUY.VDNORD01
Function PA0ZS-05-IO4640-U()
   /* ------------------------------------------------------------*/
   /* UPDATE DFBUY.VDNORD01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4640" ("U ", SQLCA, FBHREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
    )                           
      return; /* Return to previous process*/

    else
      if (SQLCA.VAGen_SQLCODE == 100)
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
        PAWREC.XXXMODID = "S05";
        converseLib.validationFailed(12); /* DATA UPDATED BY ANOTHER APPLICATION*/
        exit stack;
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S05"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UDPATE DFBUY.VDNORD01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS05"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDNORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBHREC.FBHGROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0ZS-05-IO4640-U  **************************/
   /* **                                                        ***/


end // end PA0ZS-05-IO4640-U

// SELECT DFBUY.VFQTBS01
Function PA0ZS-06-IO4740-S()
   /* ------------------------------------------------------------*/
   /* SELECT DFBUY.VFQTBS01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4740" ("S ", SQLCA, FBKREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S06"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "GET DFBUY.VFQTBS01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS06"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFQTBS01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBKREC.FBKGROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0ZS-06-IO4740-S  **************************/
   /* **                                                        ***/


end // end PA0ZS-06-IO4740-S

// UPDATE DFBUY.VFQTBS01
Function PA0ZS-07-IO4740-U()
   /* ------------------------------------------------------------*/
   /* UPDATE DFBUY.VDNORD01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4740" ("U ", SQLCA, FBKREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
    )                           
      return; /* Return to previous process*/

    else
      if (SQLCA.VAGen_SQLCODE == 100)
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
        PAWREC.XXXMODID = "S07";
        converseLib.validationFailed(12); /* DATA UPDATED BY ANOTHER APPLICATION*/
        exit stack;
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S07"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UDPATE DFBUY.VFQTBS01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS07"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFQTBS01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBKREC.FBKGROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0ZS-07-IO4740-U  **************************/
   /* **                                                        ***/


end // end PA0ZS-07-IO4740-U

// SELECT DFBUY.VFSCTL01
Function PA0ZS-08-IO4670-S()
   /* ------------------------------------------------------------*/
   /* SELECT DFBUY.VFSCTL01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4670" ("S ", SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100)

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S08"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "GET DFBUY.VFSCTL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS08"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBMREC.FBMGROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0ZS-08-IO4670-S  **************************/
   /* **                                                        ***/


end // end PA0ZS-08-IO4670-S

// UPDATE DFBUY.VFSCTL01
Function PA0ZS-09-IO4670-U()
   /* ------------------------------------------------------------*/
   /* UPDATE DFBUY.VFSCTL01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4670" ("U ", SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
    )                           
      return; /* Return to previous process*/

    else
      if (SQLCA.VAGen_SQLCODE == 100)
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
        PAWREC.XXXMODID = "S09";
        converseLib.validationFailed(12); /* DATA UPDATED BY ANOTHER APPLICATION*/
        exit stack;
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S09"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UDPATE DFBUY.VFSCTL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS09"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBMREC.FBMGROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0ZS-09-IO4670-U  **************************/
   /* **                                                        ***/


end // end PA0ZS-09-IO4670-U

// SELECT SET DCORP.VSUMCD01
Function PA0ZS-10-IO2640-S()

   /* ------------------------------------------------------------*/
   /* Select UNIQUE row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2640" ("S ", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* OR NOT FOUND*/

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  PAWREC.XXXMODID = "S10"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "GET UNIQUE DCORP.VSUMCD01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PA0ZS10"; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = YSMREC.YSMGRP; /* Formatted error key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* EXIT TO DISPLAY MAP*/


end // end PA0ZS-10-IO2640-S

// Common pf-key processing
Function PA0ZS-100()
   /* ------------------------------------------------------------*/
   /* This procedure will determine what the catoap will be*/
   /* based on the pf-key pressed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf5) /* TRANSFER TO PA0A*/
    COMMAREA.CATOAP = "PA0A";
  end

  if (converseVar.eventKey is pf13) /* Factory add*/
    COMMAREA.CATOAP = "PA0P";
  end

  if (converseVar.eventKey is pf14) /* Hysterical comments*/
    COMMAREA.CATOAP = "PA0N";
  end

  if (converseVar.eventKey is pf15) /* Factory maintenance*/
    COMMAREA.CATOAP = "PA0F";
  end

  if (converseVar.eventKey is pf16) /* Request maint.*/
    COMMAREA.CATOAP = "PA0B";
  end

  if (converseVar.eventKey is pf17) /* Item list*/
    COMMAREA.CATOAP = "PA0G";
  end

  if (converseVar.eventKey is pf18) /* P.O. Select*/
    COMMAREA.CATOAP = "PA0Q";
  end

  if (converseVar.eventKey is pf19) /* O/A Status maint.*/
    COMMAREA.CATOAP = "PA0L";
  end

  if (converseVar.eventKey is pf21) /* Header list*/
    COMMAREA.CATOAP = "PA0E";
  end

  if (converseVar.eventKey is pf24) /* AIR FREIGHT APPROVAL*/
    COMMAREA.CATOAP = "PA0C";
  end

   /* Setup the leveling for subsequent applications*/

  if (PAWREC.CAFROMAP[1] == " ")
    PAWREC.CAFROMAP[1] = COMMAREA.CACURRAP;
  else
    if (PAWREC.CAFROMAP[2] == " ")
      PAWREC.CAFROMAP[2] = COMMAREA.CACURRAP;
    else
      if (PAWREC.CAFROMAP[3] == " ")
        PAWREC.CAFROMAP[3] = COMMAREA.CACURRAP;
      else
        if (PAWREC.CAFROMAP[4] == " ")
          PAWREC.CAFROMAP[4] = COMMAREA.CACURRAP;
        else
          PAWREC.CAFROMAP[5] = COMMAREA.CACURRAP;
        end
      end
    end
  end


end // end PA0ZS-100

// UPDATE DPRODA.VPACTL01
Function PA0ZS-11-IO4800-G()

   /* ------------------------------------------------------------*/
   /* UPDATE DPRODA.VPACTL01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4800" ("G ", SQLCA, PA8REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end


    /* ------------------------------------------------------------*/
     /* IF ROW NOT FOUND, INDICATE THE DATA WAS UPDATED BY ANOTHER.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100)
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
      PAWREC.XXXMODID = "S11";
      converseLib.validationFailed(12);
      exit stack;
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S11"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DPRODA.VPACTL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA8REC.PA8KEY; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0ZS-11-IO4800-G

// ADD DPRODA.VPAHDR01
Function PA0ZS-12-IO4830-A()

   /* ------------------------------------------------------------*/
   /* UPDATE DPRODA.VPAHDR01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4830" ("A ", SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S12"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* 'resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();

    converseLib.validationFailed(10); /* 'error - please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "ADD DPRODA.VPAHDR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Key field*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end PA0ZS-12-IO4830-A

// ADD O/A COMMENT RECORD
Function PA0ZS-13-IO4820-A()
   /* ---------------------------------------------*/
   /* CALL IO4950 TO ADD WORK RECORDS*/
   /* ---------------------------------------------*/

  try
    call "IO4820" ("A ", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/

  PAWREC.XXXMODID = "S13";

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/

    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();

    converseLib.validationFailed(10); /* SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";

    converseLib.clearScreen();

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "ADD O/A COMMENT RECORD";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* TABLE KEY*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

end // end PA0ZS-13-IO4820-A

// IO4810 ADD FACTORY RECORDS
Function PA0ZS-14-IO4810-A()
   /* ------------------------------------------------------------*/
   /* ADD FACTORY RECORDS*/
   /* ------------------------------------------------------------*/

  try
    call "IO4810" ("A ", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* IF SUCCESSFUL, RETURN TO THE PREVIOUS PROCESS*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/

  PAWREC.XXXMODID = "S14"; /* MODULE IDENTIFICATION*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE NOT AVAILABLE*/

    converseLib.validationFailed(11); /* INDICATE NOT AVAILABLE*/
    TA1REC.TA1FUNC = "POST"; /* TERMINATION FUNCTION*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();

    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN"; /* TERMINATION ROUTINE*/

    converseLib.clearScreen();
     /* CLEAR SCREEN BEFORE DISPLAY*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "S14 ADD FACTORY RECORDS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* TABLE KEY*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* ERROR DIAGNOSIS ROUTINE*/

  exit stack;

end // end PA0ZS-14-IO4810-A

// SELECT SET (S1) PA5REC
Function PA0ZS-15-IO5090-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from DPRODA.VBOTLN01.*/
   /* ------------------------------------------------------------*/

  /* ************************** Y2k OUT BEGIN **********************/
  /*  */
  /* CALL IO5090 'S1',SQLCA,PA5REC (NOMAPS,NONCSP,REPLY; /* Select table set*/
  /*  */
  /* ************************** Y2k OUT END ************************/
  /*  */
  /*  */
  /* ************************** Y2k IN BEGIN ***********************/
  /*  */
  try
    call "VBOTLN02" ("S1", SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  /*  */
  /* ************************** Y2k IN END *************************/
  /*  */

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S15"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET DPRODA.VBOTLN01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS15"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA5REC.PA5GRP01; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0ZS-15-IO5090-S1 ************/
   /* **                                                        ***/
end // end PA0ZS-15-IO5090-S1

// FETCH (N1) PA5REC
Function PA0ZS-16-IO5090-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/
  /*  */
  /* **************************** Y2K OUT BEGIN ********************/
  /*  */
  /* CALL IO5090 'N1',SQLCA,PA5REC (NOMAPS,NONCSP,REPLY; /* Fetch next row*/
  /*  */
  /* **************************** Y2K OUT END **********************/
  /*  */
  /*  */
  /* **************************** Y2K IN BEGIN *********************/
  /*  */
  try
    call "VBOTLN02" ("N1", SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/
  /*  */
  /* **************************** Y2K IN END ***********************/
  /*  */

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S16"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS16"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* ===> Table view name*/

  TA1REC.TA1TBLKE = PA5REC.PA5GRP01; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ************ END OF PA0ZS-16-IO5090-N1 **********************/
   /* **                                                        ***/
end // end PA0ZS-16-IO5090-N1

// CLOSE (C1) PA5REC
Function PA0ZS-17-IO5090-C1()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  /*  */
  /* ************************* Y2K OUT BEGIN ***********************/
  /*  */
  /* CALL IO5090 'C1',SQLCA,PA5REC (NOMAPS,NONCSP,REPLY; /* Close table set*/
  /*  */
  /* ************************* Y2K OUT END *************************/
  /*  */
  /*  */
  /* ************************* Y2K IN BEGIN ************************/
  /*  */
  try
    call "VBOTLN02" ("C1", SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  /*  */
  /* ************************* Y2K IN END *************************/
  /*  */

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S17"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS17"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA5REC.PA5GRP01; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0ZS-17-IO5090-C1 ************/
   /* **                                                        ***/
end // end PA0ZS-17-IO5090-C1

// ADD DPRODA.VBOTLN01 RECORDS
Function PA0ZS-18-IO5090-A()
   /* -----------------------------------------------------*/
   /* ADD BOTTOM LINE ROWS*/
   /* -----------------------------------------------------*/

  /* ************************* Y2K OUT BEGIN ****************/
  /*  */
  /* CALL IO5090 'A ',SQLCA,PA5REC (NONCSP,NOMAPS,REPLY;*/
  /*  */
  /* ************************* Y2K OUT END ******************/
  /*  */
  /*  */
  /* ************************* Y2K IN BEGIN *****************/
  /*  */
  try
    call "VBOTLN02" ("A ", SQLCA, PA5REC) {isNoRefresh = yes, isExternal = yes};
  end
  /*  */
  /* ************************* Y2K IN END *******************/
  /*  */

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end

  PAWREC.XXXMSGNO = 10;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0ZS18  ADD   O/A BOTTOMLINE ";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBOTLN01"; /* Table view name*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  end

  sysVar.errorCode = TA1REC.TA1MAP; /* CSP return code*/
  SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* SQL commarea*/

  exit stack;
end // end PA0ZS-18-IO5090-A

// SELECT SET (S1) PAIREC
Function PA0ZS-19-VFRZIT-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from DPRODA.VFRZIT02.*/
   /* ------------------------------------------------------------*/
   /* THIS SGRP HAS BEEN MODIFIED TO ACCESS VFRZIT02 AS PART OF*/
   /* NSC CHANGES -- GREDDY 05/08/00*/
   /* ------------------------------------------------------------*/

  try
    call "VFRZIT02" ("S1", SQLCA, VFRZIT02) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S19"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET DPRODA.VFRZIT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS19"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRZIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = VFRZIT02.VFRZIT02-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0ZS-19-VFRZIT-S1 ************/
   /* **                                                        ***/
end // end PA0ZS-19-VFRZIT-S1

// FETCH (N1) PAIREC
Function PA0ZS-20-VFRZIT-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/
   /* THIS SGRP HAS BEEN MODIFIED TO ACCESS VFRZIT02 AS PART OF*/
   /* NSC CHANGES -- GREDDY 05/08/00*/
   /* ------------------------------------------------------------*/

  try
    call "VFRZIT02" ("N1", SQLCA, VFRZIT02) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S20"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS20"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VFRZIT02"; /* ===> Table view name*/

  TA1REC.TA1TBLKE = VFRZIT02.VFRZIT02-KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ************ END OF PA0ZS-20-IO4960-N1 **********************/
   /* **                                                        ***/
end // end PA0ZS-20-VFRZIT-N1

// CLOSE (C1) PAIREC
Function PA0ZS-21-VFRZIT-C1()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/
   /* THIS SGRP HAS BEEN MODIFIED TO ACCESS VFRZIT02 AS PART OF*/
   /* NSC CHANGES -- GREDDY 05/08/00*/
   /* ------------------------------------------------------------*/

  try
    call "VFRZIT02" ("C1", SQLCA, VFRZIT02) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S21"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS21"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRZIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = VFRZIT02.VFRZIT02-KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0ZS-21-VFRZIT02-C1 ************/
   /* **                                                        ***/
end // end PA0ZS-21-VFRZIT-C1

// ADD FROZEN ITEM RECORDS
Function PA0ZS-22-VFRZIT2-A()
   /* ------------------------------------------------------------*/
   /* PERFORM ADD FROZEN ITEMS*/
   /* ------------------------------------------------------------*/
   /* THIS SGRP HAS BEEN MODIFIED TO ACCESS VFRZIT02 AS PART OF*/
   /* NSC CHANGES -- GREDDY 05/08/00*/
   /* ------------------------------------------------------------*/

  try
    call "VFRZIT02" ("A ", SQLCA, VFRZIT02) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL COMMAREA*/

  PAWREC.XXXMODID = "S22"; /* MODULE IDENTIFICATION*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE NOT AVAILABLE*/

    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST"; /* TERMINATION FUNCTION*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* ROLLBACK ALL CHANGES*/

    converseLib.validationFailed(10); /* INDICATE SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN"; /* TERMINATION FUNCTION*/

    converseLib.clearScreen();
     /* CLEAR SCREEN BEFORE DISPLAY*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0ZS22 ADD FROZEN ITEM    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRZIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = VFRZIT02.VFRZIT02-KEY; /* TABLE KEY*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

end // end PA0ZS-22-VFRZIT2-A

// SELECT SET (S1) PASREC
Function PA0ZS-23-IO4970-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from DPRODA.VFRZSZ01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4970" ("S1", SQLCA, PASREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S23"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET DPRODA.VFRZSZ01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS23"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRZSZ01"; /* Table view name*/
  TA1REC.TA1TBLKE = PASREC.PC7KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0ZS-23-IO4970-S1 ************/
   /* **                                                        ***/
end // end PA0ZS-23-IO4970-S1

// FETCH (N1) PASREC
Function PA0ZS-24-IO4970-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4970" ("N1", SQLCA, PASREC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S24"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS24"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VFRZSZ01"; /* ===> Table view name*/

  TA1REC.TA1TBLKE = PASREC.PC7KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ************ END OF PA0ZS-24-IO4970-N1 **********************/
   /* **                                                        ***/
end // end PA0ZS-24-IO4970-N1

// CLOSE (C1) PASREC
Function PA0ZS-25-IO4970-C1()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4970" ("C1", SQLCA, PASREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S25"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS25"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRZISZ1"; /* Table view name*/
  TA1REC.TA1TBLKE = PASREC.PC7KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0ZS-25-IO4970-C1 ************/
   /* **                                                        ***/
end // end PA0ZS-25-IO4970-C1

// ADD FROZEN SIZES
Function PA0ZS-26-IO4970-A()
   /* ------------------------------------------------------------*/
   /* ADD FROZEN SIZE RECORDS*/
   /* ------------------------------------------------------------*/

  try
    call "IO4970" ("A ", SQLCA, PASREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* CSP COMMAREA;*/

  PAWREC.XXXMODID = "S26"; /* MODULE IDENTIFICATION*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/

    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();

    converseLib.validationFailed(10); /* SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0ZS26 ADD FROZEN SIZE    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFRZSZ01"; /* Table view name*/
   /* TABLE KEY*/
  TA1REC.TA1TBLKE = PASREC.PC7KEY;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

end // end PA0ZS-26-IO4970-A

// SELECT SET (S2) PACREC
Function PA0ZS-27-VPAWRK-S2()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from DPRODA.VPAWRK03.*/
   /* ------------------------------------------------------------*/
   /* THIS SGRP HAS BEEN MODIFIED TO ACCESS VPAWRK03 AS PART OF*/
   /* NSC CHANGES -- GREDDY 05/08/00*/
   /* ------------------------------------------------------------*/

  try
    call "VPAWRK03" ("S2", SQLCA, VPAWRK03) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S27"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET DPRODA.VPAWRK01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS27"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK03"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAWRK03.VPAWRK03-GROUP; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0ZS-27-VPAWRK-S2 ************/
   /* **                                                        ***/
end // end PA0ZS-27-VPAWRK-S2

// FETCH (N2) PACREC
Function PA0ZS-28-VPAWRK-N2()
   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/
   /* THIS SGRP HAS BEEN MODIFIED TO ACCESS VPAWRK03 AS PART OF*/
   /* NSC CHANGES -- GREDDY 05/08/00*/
   /* ------------------------------------------------------------*/

  try
    call "VPAWRK03" ("N2", SQLCA, VPAWRK03) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S28"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS28"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK03"; /* ===> Table view name*/

  TA1REC.TA1TBLKE = VPAWRK03.VPAWRK03-GROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ************ END OF PA0ZS-28-VPAWRK-N2 **********************/
   /* **                                                        ***/
end // end PA0ZS-28-VPAWRK-N2

// CLOSE (C2) PACREC
Function PA0ZS-29-VPAWRK-C2()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/
   /* THIS SGRP HAS BEEN MODIFIED TO ACCESS VPAWRK03 AS PART OF*/
   /* NSC CHANGES -- GREDDY 05/08/00*/
   /* ------------------------------------------------------------*/

  try
    call "VPAWRK03" ("C2", SQLCA, VPAWRK03) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S29"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS29"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK03"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAWRK03.VPAWRK03-GROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0ZS-29-VPAWRK-C2 ************/
   /* **                                                        ***/
end // end PA0ZS-29-VPAWRK-C2

// ADD DPRODA.VPAWRK03
Function PA0ZS-30-VPAWRK3-A()
   /* ------------------------------------------------------------*/
   /* ADD DPRODA.VPAWRK01 RECORDS*/
   /* ------------------------------------------------------------*/
   /* THIS SGRP HAS BEEN MODIFIED TO ACCESS VPAWRK03 AS PART OF*/
   /* NSC CHANGES -- GREDDY 05/08/00*/
   /* ------------------------------------------------------------*/

  try
    call "VPAWRK03" ("A ", SQLCA, VPAWRK03) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* CSP COMMAREA;*/

  PAWREC.XXXMODID = "S30"; /* MODULE IDENTIFICATION*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/

    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();

    converseLib.validationFailed(10); /* SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0ZS30 ADD FROZEN SIZE    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK03"; /* Table view name*/
   /* TABLE KEY*/
  TA1REC.TA1TBLKE = VPAWRK03.VPAWRK03-GROUP;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

end // end PA0ZS-30-VPAWRK3-A

// SELECT SET (S1) PA2REC
Function PA0ZS-31-VPAITM-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from DPRODA.VPAITM03.*/
   /* ------------------------------------------------------------*/
   /* THIS SGRP HAS BEEN MODIFIED TO ACCESS VPAITM03 AS PART OF*/
   /* NSC CHANGES -- GREDDY 05/08/00*/
   /* ------------------------------------------------------------*/

  try
    call "VPAITM03" ("S1", SQLCA, VPAITM03) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S31"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET DPRODA.VPAITM03";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS31"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM03"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAITM03.VPAITM03-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0ZS-31-VPAITM-S1 ************/
   /* **                                                        ***/
end // end PA0ZS-31-VPAITM-S1

// FETCH (N1) PA2REC
Function PA0ZS-32-VPAITM-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/
   /* THIS SGRP HAS BEEN MODIFIED TO ACCESS VPAITM03 AS PART OF*/
   /* NSC CHANGES -- GREDDY 05/08/00*/
   /* ------------------------------------------------------------*/

  try
    call "VPAITM03" ("N1", SQLCA, VPAITM03) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* END OF SELECTED SET*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S32"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS32"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VPAITM03"; /* ===> Table view name*/

  TA1REC.TA1TBLKE = VPAITM03.VPAITM03-KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ************ END OF PA0ZS-32-VPAITM-N1 **********************/
   /* **                                                        ***/
end // end PA0ZS-32-VPAITM-N1

// CLOSE (C1) PA2REC
Function PA0ZS-33-VPAITM-C1()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/
   /* THIS SGRP HAS BEEN MODIFIED TO ACCESS VPAITM03 AS PART OF*/
   /* NSC CHANGES -- GREDDY 05/08/00*/
   /* ------------------------------------------------------------*/

  try
    call "VPAITM03" ("C1", SQLCA, VPAITM03) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S33"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS33"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM03"; /* Table view name*/
  TA1REC.TA1TBLKE = VPAITM03.VPAITM03-KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0ZS-33-VPAITM-C1 ************/
   /* **                                                        ***/
end // end PA0ZS-33-VPAITM-C1

// ADD DPRODA.VPAITM01
Function PA0ZS-34-VPAITM3-A()
   /* ------------------------------------------------------------*/
   /* ADD DPRODA.VPAITM01 RECORDS*/
   /* ------------------------------------------------------------*/
   /* THIS SGRP HAS BEEN MODIFIED TO ACCESS VPAITM03 AS PART OF*/
   /* NSC CHANGES -- GREDDY 05/08/00*/
   /* ------------------------------------------------------------*/

  try
    call "VPAITM03" ("A ", SQLCA, VPAITM03) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* CSP COMMAREA;*/

  PAWREC.XXXMODID = "S34"; /* MODULE IDENTIFICATION*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/

    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();

    converseLib.validationFailed(10); /* SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0ZS34 ADD FROZEN SIZE    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAITM03"; /* Table view name*/
   /* TABLE KEY*/
  TA1REC.TA1TBLKE = VPAITM03.VPAITM03-KEY;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

end // end PA0ZS-34-VPAITM3-A

// SELECT SET (S1) PAGREC
Function PA0ZS-35-IO5140-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from DPRODA.VPACUS01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO5140" ("S1", SQLCA, PAGREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S35"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET DPRODA.VPACUS01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS35"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACUS01"; /* Table view name*/
  TA1REC.TA1TBLKE = PAGREC.PAGKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0ZS-35-IO5140-S1 ************/
   /* **                                                        ***/
end // end PA0ZS-35-IO5140-S1

// FETCH (N1) PAGREC
Function PA0ZS-36-IO5140-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO5140" ("N1", SQLCA, PAGREC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* END OF SELECTED SET*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S36"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS36"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VPACUS01"; /* ===> Table view name*/

  TA1REC.TA1TBLKE = PAGREC.PAGKEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ************ END OF PA0ZS-36-IO5140-N1 **********************/
   /* **                                                        ***/
end // end PA0ZS-36-IO5140-N1

// CLOSE (C1) PAGREC
Function PA0ZS-37-IO5140-C1()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO5140" ("C1", SQLCA, PAGREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S37"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS37"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACUS01"; /* Table view name*/
  TA1REC.TA1TBLKE = PAGREC.PAGKEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0ZS-37-IO5140-C1 ************/
   /* **                                                        ***/
end // end PA0ZS-37-IO5140-C1

// ADD DPRODA.VPACUS01
Function PA0ZS-38-IO5140-A()
   /* ------------------------------------------------------------*/
   /* ADD DPRODA.VPACUS01 RECORDS*/
   /* ------------------------------------------------------------*/

  try
    call "IO5140" ("A ", SQLCA, PAGREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* IF DATA NOT AVAILABLE, RETURN AN ERROR MESSAGE TO THE USER,*/
   /* OTHERWISE, INDICATE THAT A SYSTEM ERROR HAS OCCURRED.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* CSP COMMAREA;*/

  PAWREC.XXXMODID = "S38"; /* MODULE IDENTIFICATION*/

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* AND RESOURCE UNAVAILABLE*/

    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();

    converseLib.validationFailed(10); /* SYSTEM ERROR*/
    TA1REC.TA1FUNC = "RETN";

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "PA0ZS38 ADD FROZEN SIZE    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
  TA1REC.TA1PGMNO = PAWREC.XXXMODID; /* PROGRAM NUMBER*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACUS01"; /* Table view name*/
   /* TABLE KEY*/
  TA1REC.TA1TBLKE = PAGREC.PAGKEY;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

end // end PA0ZS-38-IO5140-A

// RESET BUYSTATUS IND FOR SO's
Function PA0ZS-39-IO4640-U1()
   /* ------------------------------------------------------------*/
   /* UPDATE DFBUY.VDNORD01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4640" ("U1", SQLCA, FBHREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0   /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100 /* SO NOT FOUND*/
    )                             
      return; /* Return to previous process*/

    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
      PAWREC.XXXMODID = "S39";
      converseLib.validationFailed(12); /* DATA UPDATED BY ANOTHER APPLICATION*/
      exit stack;
    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S39"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UDPATE DFBUY.VDNORD01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS39"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDNORD01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBHREC.FBHGROUP; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0ZS-39-IO4640-U1 **************************/
   /* **                                                        ***/


end // end PA0ZS-39-IO4640-U1

// RESET BUYSTATUS IND FOR SO's
Function PA0ZS-40-VDRSAT-U1()
   /* ------------------------------------------------------------*/
   /* UPDATE DFBUY.VDRSAT01*/
   /* ------------------------------------------------------------*/

  try
    call "VDRSAT01" ("U1", SQLCA, VDRSAT01) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0   /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100 /* SO NOT FOUND*/
    )                             
      return; /* Return to previous process*/

    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* ROLL BACK ALL CHANGES*/
      PAWREC.XXXMODID = "S40";
      converseLib.validationFailed(12); /* DATA UPDATED BY ANOTHER APPLICATION*/
      exit stack;
    end
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PAWREC.XXXMODID = "S40"; /* Module identification*/

  if (sysVar.errorCode == "0000000" /* GOOD RETURN CODE*/
   && SQLCA.VAGen_SQLCODE == -911)  /* RESOURCE UNAVAILABLE*/
    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(10); /* UNEXPECTED ERROR*/
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UDPATE DFBUY.VDRSAT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS40"; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDRSAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VDRSAT01.FBDRSAUT; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

   /* **                                                        ***/
   /* ********* END OF PA0ZS-40-VDRSAT-U1 **************************/
   /* **                                                        ***/


end // end PA0ZS-40-VDRSAT-U1

// update vpawrk03 work table
Function PA0ZS-41-VPAWRK-U()
   /* ------------------------------------------------------------*/
   /* update row, from DPRODA.VPAWRK03*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/


  XX0XS01(); /* Obtain current time*/
  VPAWRK03.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VPAWRK03.ZZZCHGTM = XX0XW01.XX0XWTIM;

  try
    call "VPAWRK03" ("U ", SQLCA, VPAWRK03) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return;

    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PAWREC.XXXMODID = "S41"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE ROW    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS41"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAWRK03"; /* Table view name*/
  TA1REC.TA1TBLKE = PA0ZW01.PA1KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process PA0ZS-41-VPAWRK-U -------------*/

end // end PA0ZS-41-VPAWRK-U

// Close (c1) pa4rec
Function PA0ZS-97()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4810" ("C1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PA0ZW00.XXXMODID = "S03"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS-97"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of pa0z-s97 **********************/
   /* **                                                        ***/
end // end PA0ZS-97

// Fetch (n1) pa4rec
Function PA0ZS-98()
   /* ------------------------------------------------------------*/
   /* Fetch the next row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4810" ("N1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      PA0ZW00.PA0ZW-CRSR-EOF-SW1 = "Y"; /* Set end of data switch*/
      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PA0ZW00.XXXMODID = "S98"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS98"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* ===> Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* ===> Table view name*/

  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0Z-S98 ***********************/
   /* **                                                        ***/
end // end PA0ZS-98

// Select set (s1) pa4rec
Function PA0ZS-99()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4810" ("S1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PA0ZW00.XXXMODID = "S99"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear map before re-display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0ZS-99"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of PA0ZS-99 **********************/
   /* **                                                        ***/
end // end PA0ZS-99

//*** RECORD=PA0ZW00 ****
// Working storage for PA0F - Factory Request Maintenance
// ***********************
Record PA0ZW00 type basicRecord
  10 XXXMSGNO XXXMSGNO ; 
  10 XXXMODID XXXMODID ; 
  10 XXX1 XXX1 ; 
  10 XX2 XX2 ; 
  10 XX3 XX3 ; 
  10 PA1OANBR PA1OANBR ; 
  10 PA0ZW-NBR-FCTYS-TO-DISP PA0ZW-NBR-FCTYS-TO-DISP ; 
  10 PAWBUYDT PAWBUYDT ; 
  10 PA0ZW-RQST-4-DATA-SW PA0ZW-RQST-4-DATA-SW ; 
  10 PA0ZW-CRSR-EOF-SW1 PA0ZW-CRSR-EOF-SW1 ; 
  10 PA0ZW-MAP-INDEX PA0ZW-MAP-INDEX ; 
  10 PA0ZW-NBR-FCTY-PG-DISP PA0ZW-NBR-FCTY-PG-DISP ; 
  10 PA0ZW-HDR-STAT-CHNG-FLAG PA0ZW-HDR-STAT-CHNG-FLAG ; 
  10 PA0ZW-TIME PA0ZW-TIME ; 
    15 PA0ZW-HOUR PA0ZW-HOUR ; 
    15 PA0ZW-MIN PA0ZW-MIN ; 
  10 PA0ZW-HHMM PA0ZW-HHMM ; 
    15 PA0ZW-HH PA0ZW-HH ; 
    15 PA0ZW-COLON PA0ZW-COLON ; 
    15 PA0ZW-MN PA0ZW-MN ; 
  10 PA0ZW-FCTY-UPD-HDR-STAT PA0ZW-FCTY-UPD-HDR-STAT ; 
  10 PA0ZW-FCTY-STAT-UPD-FLAG PA0ZW-FCTY-STAT-UPD-FLAG [4] ; 
  10 PA0ZW-COPY-OA PA0ZW-COPY-OA ; 
  10 PA0ZW-COPY-COMMENT PA0ZW-COPY-COMMENT ; 
    15 PA0ZW-COPY-COMMENT1 PA0ZW-COPY-COMMENT1 ; 
    15 PA0ZW-COPY-FROM-OA PA0ZW-COPY-FROM-OA ; 
    15 * char(34) ; 
  10 PA0ZW-NEW-OA PA0ZW-NEW-OA ; 
end // end PA0ZW00

//*** RECORD=PA0ZW01 ****
// ****************** ORDER ADJUSTMENT HEADER *****************
// *    Dispaly Storage for O/A Header
// ************************************************************
// 
// ***********************
Record PA0ZW01 type basicRecord
  5 PA1GROUP PA1GROUP ; 
    10 YSMXDV YSMXDV ; 
    10 PA1KEY PA1KEY ; 
      15 PA1OANBR PA1OANBR ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 PG1SC4CD PG1SC4CD ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 PA1BUYMO PA1BUYMO ; 
    10 PA1SBFMO PA1SBFMO ; 
    10 PA1OATXT PA1OATXT ; 
    10 YESCD YESCD ; 
    10 PA1YESID PA1YESID ; 
    10 PA1YESDT PA1YESDT ; 
    10 YETCD YETCD ; 
    10 PA1YETBY PA1YETBY ; 
    10 PA1YETDT PA1YETDT ; 
    10 PC4ORTYP PC4ORTYP ; 
    10 PA1RQQTY PA1RQQTY ; 
    10 PA1HLDFL PA1HLDFL ; 
    10 PA1INTFL PA1INTFL ; 
    10 PA1CMIND PA1CMIND ; 
    10 PA1FCRFL PA1FCRFL ; 
    10 FB-LATE-BK-FL FB-LATE-BK-FL ; 
    10 FB-LATE-BK-FL-MDT FB-LATE-BK-FL-MDT ; 
    10 PA-APPL-BUY-BTL-FL PA-APPL-BUY-BTL-FL ; 
    10 XXXPGUID XXXPGUID ; 
    10 PA-AFRGT-RQT-ID PA-AFRGT-RQT-ID ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZSTM ZZZSTM ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
  5 SY1STYNM SY1STYNM ; 
  5 PC2CUXID PC2CUXID ; 
  5 PC2NAME PC2NAME ; 
  5 YESABRV YESABRV ; 
  5 YETABRV YETABRV ; 
  5 XXXUSER XXXUSER ; 
  5 PA0ZW-ITEMS-EXIST-FL PA0ZW-ITEMS-EXIST-FL ; 
  5 PA0ZW-DELETE-ITEMS-FLAG PA0ZW-DELETE-ITEMS-FLAG ; 
  5 PA0ZW-ITEM-SETUP-DT PA0ZW-ITEM-SETUP-DT ; 
  5 PA0ZW-ITEM-SETUP-TIME PA0ZW-ITEM-SETUP-TIME ; 
    10 PA0ZW-ITEM-SETUP-HH PA0ZW-ITEM-SETUP-HH ; 
    10 PA0ZW-ITEM-SETUP-MM PA0ZW-ITEM-SETUP-MM ; 
  5 PA0ZW-DISPLAY-TIME PA0ZW-DISPLAY-TIME ; 
    10 PA0ZW-DISPLAY-HH PA0ZW-DISPLAY-HH ; 
    10 PA0ZW-ITEM-TIME-SEMICOLN PA0ZW-ITEM-TIME-SEMICOLN ; 
    10 PA0ZW-DISPLAY-MM PA0ZW-DISPLAY-MM ; 
  5 PA0ZW-INS-COMM-FL PA0ZW-INS-COMM-FL ; 
  5 PA0ZW-HDR-COMM-1 PA0ZW-HDR-COMM-1 ; 
  5 PA0ZW-HDR-COMM-2 PA0ZW-HDR-COMM-2 ; 
  5 PA0ZW-HDR-COMM-3 PA0ZW-HDR-COMM-3 ; 
  5 PA0ZW-HDR-COMM-ZZZSDT PA0ZW-HDR-COMM-ZZZSDT ; 
  5 PA0ZW-HDR-COMM-CHNG-FLAG PA0ZW-HDR-COMM-CHNG-FLAG ; 
  5 PA0ZW-HDR-INS-1 PA0ZW-HDR-INS-1 ; 
  5 PA0ZW-HDR-INS-2 PA0ZW-HDR-INS-2 ; 
  5 PA0ZW-HDR-INS-3 PA0ZW-HDR-INS-3 ; 
  5 PA0ZW-HDR-INS-CHNG-FLAG PA0ZW-HDR-INS-CHNG-FLAG ; 
  5 PA0ZW-HDR-CHNG-FLAG PA0ZW-HDR-CHNG-FLAG ; 
  5 PA0ZW-HOLD-STAT-FLAG PA0ZW-HOLD-STAT-FLAG ; 
  5 PA0ZW-HDR-COMM-CHNG-CNT PA0ZW-HDR-COMM-CHNG-CNT ; 
  5 PA0ZW-HDR-INS-CHNG-CNT PA0ZW-HDR-INS-CHNG-CNT ; 
  5 PA0ZW-RELATE-OA-FLAG PA0ZW-RELATE-OA-FLAG ; 
  5 PA0ZW-CHNG-TIME PA0ZW-CHNG-TIME ; 
  5 PA0ZW-BUY-FLAGS-UPDATED PA0ZW-BUY-FLAGS-UPDATED ; 
  5 PA0ZW-LIVE-BUY-STAT-CHANGED PA0ZW-LIVE-BUY-STAT-CHANGED ; 
  5 PA0ZW-ATDRS-OA-CANCEL-FLAG PA0ZW-ATDRS-OA-CANCEL-FLAG ; 
  5 YETRLVFL YETRLVFL ; 
  5 PA0ZW-FCST-OR-FL PA0ZW-FCST-OR-FL ; 
  5 PA0ZW-FCSTOR-CHG-FL PA0ZW-FCSTOR-CHG-FL ; 
end // end PA0ZW01

//*** RECORD=PA0ZW02 ****
// Display Storage For Factory and Factory Comment row(s)
// ***********************
Record PA0ZW02 type basicRecord
  5 PA0ZW-WORK-REC-2 PA0ZW-WORK-REC-2 ; 
    10 PA0ZW-DATA-DISPLAY-LINE PA0ZW-DATA-DISPLAY-LINE [4] ; 
      15 PC3POIDT PC3POIDT ; 
      15 PA0ZW-PROD-DATE PA0ZW-PROD-DATE ; 
        20 PA0ZW-PROD-CC PA0ZW-PROD-CC ; 
        20 PA0ZW-PROD-YEAR PA0ZW-PROD-YEAR ; 
        20 PA0ZW-PROD-MM PA0ZW-PROD-MM ; 
        20 PA0ZW-DELIVERY-MONTH PA0ZW-DELIVERY-MONTH ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 FY1FCTSN FY1FCTSN ; 
      15 YESCD YESCD ; 
      15 PA4FCTQT PA4FCTQT ; 
      15 PA4FCTDC PA4FCTDC ; 
      15 PA4FAPVL PA4FAPVL ; 
      15 XXXINIT XXXINIT ; 
      15 PA0ZW-FCTY-COMM-1 PA0ZW-FCTY-COMM-1 ; 
      15 PA0ZW-FCTY-COMM-2 PA0ZW-FCTY-COMM-2 ; 
      15 PA0ZW-FCTY-COMM-3 PA0ZW-FCTY-COMM-3 ; 
      15 PA0ZW-FCTY-COMM-CHG-FLAG PA0ZW-FCTY-COMM-CHG-FLAG ; 
      15 PA0ZW-FCTY-CHNG-CNT PA0ZW-FCTY-CHNG-CNT ; 
      15 PA0ZW-FCTY-CHNG-FLAG PA0ZW-FCTY-CHNG-FLAG ; 
      15 ZZZCHGCT ZZZCHGCT ; 
end // end PA0ZW02

//*** RECORD=VPAITM03 ****
// ****************** ORDER ADJUSTMENT ITEM *******************
// 
// DB2 TABLE VIEW:      dproda.vpaitm03
// 
// COPYLIB MEMBER:      dpaitm03
// 
// I/O MODULE:          vpaitm03
// 
// KEY TO DB2 TABLE:    pa_ord_adj_nbr
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 05/08/00   GREDDY   New record.
// ************************
Record VPAITM03 type basicRecord
  5 VPAITM03-GROUP VPAITM03-GROUP ; 
    10 VPAITM03-KEY VPAITM03-KEY ; 
      15 PA1OANBR PA1OANBR ; 
      15 PC3POIDT PC3POIDT ; 
      15 PC3PONBR PC3PONBR ; 
      15 PC6ITMNB PC6ITMNB ; 
      15 PACFPONO PACFPONO ; 
      15 PACFPCIT PACFPCIT ; 
      15 PC4ORTYP PC4ORTYP ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 XCTCD XCTCD ; 
      15 PC6RTADT PC6RTADT ; 
      15 PC6ETSDT PC6ETSDT ; 
      15 PC-XCT-ORIG-CD PC-XCT-ORIG-CD ; 
      15 PA-UPD-PC-EST-HDT PA-UPD-PC-EST-HDT ; 
      15 YMTCD YMTCD ; 
      15 XWHCD XWHCD ; 
      15 XDSCD XDSCD ; 
      15 PC2CUXID PC2CUXID ; 
      15 OP1PARTN OP1PARTN ; 
      15 OP1CUOID OP1CUOID ; 
      15 OP1NORID OP1NORID ; 
      15 OP1CUNDT OP1CUNDT ; 
      15 YESCD YESCD ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
      15 XDMCD XDMCD ; 
      15 XQACD XQACD ; 
      15 PC2INSEG PC2INSEG ; 
      15 XPGCD XPGCD ; 
      15 PC-REL-PLN-REF-NBR PC-REL-PLN-REF-NBR ; 
      15 XUMCD XUMCD ; 
      15 XFRCD XFRCD ; 
      15 FB-LATE-BK-FL FB-LATE-BK-FL ; 
      15 FB-LATE-BK-FL-MDT FB-LATE-BK-FL-MDT ; 
    10 PA2SZQTY PA2SZQTY [40] ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end VPAITM03

// Auto DRS OA Cancel Flag
DataItem PA0ZW-ATDRS-OA-CANCEL-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// chg time
DataItem PA0ZW-BUY-FLAGS-UPDATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// chg time
DataItem PA0ZW-CHNG-TIME smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0ZW-COLON char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0ZW-COPY-COMMENT char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0ZW-COPY-COMMENT1 char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0ZW-COPY-FROM-OA num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// COPY FORECASTING O/A
DataItem PA0ZW-COPY-OA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Cursor end of file switch 1
DataItem PA0ZW-CRSR-EOF-SW1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Data Display Line
DataItem PA0ZW-DATA-DISPLAY-LINE char(250)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// delete items flag
DataItem PA0ZW-DELETE-ITEMS-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Delevery month
DataItem PA0ZW-DELIVERY-MONTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// item setup hr
DataItem PA0ZW-DISPLAY-HH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// item setup mm
DataItem PA0ZW-DISPLAY-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dispaly time
DataItem PA0ZW-DISPLAY-TIME char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Forecast overrun flag
DataItem PA0ZW-FCST-OR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Forecast overrun flag changed
DataItem PA0ZW-FCSTOR-CHG-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fcty chg count
DataItem PA0ZW-FCTY-CHNG-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// fcty chg flag
DataItem PA0ZW-FCTY-CHNG-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fcty Comment
DataItem PA0ZW-FCTY-COMM-1 char(65)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fcty comment
DataItem PA0ZW-FCTY-COMM-2 char(65)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fcty comment
DataItem PA0ZW-FCTY-COMM-3 char(65)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fcty cmt chg fl
DataItem PA0ZW-FCTY-COMM-CHG-FLAG char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0ZW-FCTY-STAT-UPD-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0ZW-FCTY-UPD-HDR-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hdr chg flag
DataItem PA0ZW-HDR-CHNG-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Header comments
DataItem PA0ZW-HDR-COMM-1 char(65)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Header comments
DataItem PA0ZW-HDR-COMM-2 char(65)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Header commnets
DataItem PA0ZW-HDR-COMM-3 char(65)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// chg count for hrd cmnt
DataItem PA0ZW-HDR-COMM-CHNG-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// header comt chg flag
DataItem PA0ZW-HDR-COMM-CHNG-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ZZ_SDT
DataItem PA0ZW-HDR-COMM-ZZZSDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Header instructions
DataItem PA0ZW-HDR-INS-1 char(65)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hdr ins
DataItem PA0ZW-HDR-INS-2 char(65)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hdr ins
DataItem PA0ZW-HDR-INS-3 char(65)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// chg count for hrd ins
DataItem PA0ZW-HDR-INS-CHNG-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// hdr ins chg fl
DataItem PA0ZW-HDR-INS-CHNG-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// chg hdr stat to '20'
DataItem PA0ZW-HDR-STAT-CHNG-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0ZW-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0ZW-HHMM char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold status flag
DataItem PA0ZW-HOLD-STAT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0ZW-HOUR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ins/cmt ind
DataItem PA0ZW-INS-COMM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// set up date
DataItem PA0ZW-ITEM-SETUP-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// item setup hr
DataItem PA0ZW-ITEM-SETUP-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// item setup mm
DataItem PA0ZW-ITEM-SETUP-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0ZW-ITEM-SETUP-TIME num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// ':'
DataItem PA0ZW-ITEM-TIME-SEMICOLN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// items exist
DataItem PA0ZW-ITEMS-EXIST-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0ZW-LIVE-BUY-STAT-CHANGED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem PA0ZW-MAP-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0ZW-MIN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0ZW-MN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nbr of fctys pg display
DataItem PA0ZW-NBR-FCTY-PG-DISP num(1)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// num of fcty's to dispaly
DataItem PA0ZW-NBR-FCTYS-TO-DISP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NEW O/A COPIED FROM OLD
DataItem PA0ZW-NEW-OA int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Production century
DataItem PA0ZW-PROD-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// P.O. id
DataItem PA0ZW-PROD-DATE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Production month
DataItem PA0ZW-PROD-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Production year
DataItem PA0ZW-PROD-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// related oa flag
DataItem PA0ZW-RELATE-OA-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem PA0ZW-RQST-4-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0ZW-TIME num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Group level for record
DataItem PA0ZW-WORK-REC-2 char(1000)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record group level
DataItem VPAITM03-GROUP char(281)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Key group level
DataItem VPAITM03-KEY char(109)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

