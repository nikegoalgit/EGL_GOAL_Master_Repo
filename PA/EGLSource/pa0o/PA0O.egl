package pa0o;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPPA001;
import corpcom3.XPPA020;
import corpcom3.XPPA100;
import corpcom3.XPXX001;
import corpcom3.XPYES01;
import corpcom4.XSPAS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XX1;
import corpcom7.XXXMODID;
import corpcom7.XXXMSGNO;
import corpx1.XDMCD;
import corpx2.XNXCD;
import corpy2.YESABRV;
import corpy2.YESCD;
import corpy2.YESTBL;
import corpy2.YETABRV;
import corpy2.YETCD;
import corpy2.YETTBL;
import fb.common.FB9REC;
import fy.common.FY1FCTSN;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import ku.common.KUCCOID;
import ku.common.KUMSTRID;
import pa.common.*;
import pa.common.PA1GROUP;
import pa.common.PA1OANBR;
import pa.common.PA1REC;
import pa.common.PA1RQQTY;
import pa.common.PA4GROUP;
import pa.common.PA4REC;
import pa.common.PA9GROUP;
import pa.common.PA9REC;
import pa.common.PABAFYQT;
import pa.common.PABVYBTS;
import pa.common.PAWBUYDT;
import pa.common.PAWREC;
import pc.common.PC2CUXID;
import pc.common.PC2GROUP;
import pc.common.PC2REC;
import pc.common.PC3POIDT;
import pc.common.PC3PONBR;
import sy.common.SY1STNBR;
import sy.common.SY1STYNM;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;

//*** PROGRAM=PA0O ****
//      This program allows the uses to view/maintain factory
// information for order adjustments.  The user can change
// the status of a factory, enter approvals and doc numbers,
// and add comments.
// 
//      The factory maintenance process will be driven by the
// factory code, o/a type and/or P.O. Id.  The o/a type
// will determine edit criteria, such as verifying that a
// changed factory o/a quantity factory doesn't exceed the
// purchase order balance to ship quantity.
// 
//      Program entry is supported through the main menu, pfkey
// usage and by fastpathing. The cursor is placed on the
// factory code on initial entry into this program.
// 
//      After data has been entered/modified, the user must
// press enter to go through the edit logic. Once the data has
// passed the edit criteria, the user 'CONFIRMS' the data by
// pressing pf9.  This wull update the row to the o/a factory
// table, the comments table and the o/a header if changes
// have been made.
// 
//      This application will support the use of pop-up header
// instructions. Pf6 has been assigned for this purpose.
// Pop-up windows for factory statuses have also been
// incorporated into this application.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 12/13/89   GGILRA   New application.
// 06/18/90   GAMEN    Wrote prolog to match program.
//                     Misc. maint. for status checks.
//                     Remove factory code from header comment.
// 
// 10/05/90   MSMIT2   Application changed to reflect the data-
//                     base changes.
// 02/12/91   MSMIT2   DATABASE CHANGES.
// 10/10/91   dhales   DATABASE CHANGES.
//                     pa4rec, changed pa0ow01, pa0ow02
//  2/05/92   dhales   fix so oa changes not allow when on hold
//  3/12/92   dhales   data base change - change length on
//                     pa0ow01 and w02
//  6/09/92   dhales   data base change - change length on
//                     pa0ow01 and w02
//  7/01/92   dhales   pa287 - change header to 84 when fcty
//                     goes to 84 (denied)
// 10/14/92   dhales   DATABASE CHANGES.
//                     pa1rec, changed pa0ow01, pa0ow02
// 02/22/93   dhales   add indicator to show if new ets should
//                     be submitted.   pa310
// 03/29/93   MSMIT2   SHOULD NOT BE LOOKING AT THE DPRODA.
//                     VPACUS01 RECORDS.
// 06/04/93   MSMIT2   STANDARDIZE PFKEYS.
// 06/08/93   pkhan    pa9999: bypass oa stat 75
// 06/24/93   MSMIT2   PASS LIST OF O/AS TO NEW PA0A SCREEN.
// 08/09/93   MSMIT2   DATABASE CHANGES.
// 11/08/93   MSMIT2   DATABASE CHANGES - MAKE SURE THAT THE
//                     AIR FREIGHT NBR BYTES ARE ADDED TO
//                     PA0OW01.
// 01/24/95   MSMIT2   EXCLUDE EUROPEAN O/AS.
// Y2KFIX   12/11/97  DKENNY  Y2K MODIFICATIONS MADE TO:
//                            PA0OM001, PA0O210, PA0O521 and
//                            PA0OW00.
// *********************
Program PA0O type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FB9REC FB9REC; // record
  FY1REC FY1REC; // record
  PA0OW00 PA0OW00; // record
  PA0OW01 PA0OW01; // record
  PA0OW02 PA0OW02; // record
  PA1REC PA1REC; // record
  PA4REC PA4REC; // record
  PA9REC PA9REC; // record
  PAWREC PAWREC; // record
  PC2REC PC2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PA0OT01 {deleteAfterUse = yes}; // table
  use YESTBL {deleteAfterUse = yes}; // table
  use YETTBL {deleteAfterUse = yes}; // table
  use PA0OM.PA0OM001, // form
  		PA0OM.XX0XM001,
  		PA0OM.XMPAM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPA001: XPPA001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    set ERRSQLCA empty; /* Initialize*/
    set FB9REC empty; /* Initialize*/
    set FY1REC empty; /* Initialize*/
    set PAWREC empty; /* Initialize*/
    set PA0OW00 empty; /* Initialize*/
    set PA0OW01 empty; /* Initialize*/
    set PA0OW02 empty; /* Initialize*/
    set PA1REC empty; /* Initialize*/
    set PA4REC empty; /* Initialize*/
    set PA9REC empty; /* Initialize*/
    set PC2REC empty; /* Initialize*/
    set SQLCA empty; /* Initialize*/
    set TA1REC empty; /* Initialize*/
    set TA2REC empty; /* Initialize*/
    set TA5REC empty; /* Initialize*/
    set TAEREC empty; /* Initialize*/
    set XX0XW01 empty; /* Initialize*/
    set XX0XW01 empty; /* Initialize*/
    set PA0OM001 empty; /* Initialize*/

    move " " to PA0OM001.PA0OMSEL[1] for all;
    PA0OW00.PA0OWMPM = 6; /* NUMBER OF LINES PER PAGE*/
    PA0OW00.PA0OWLEN = 3058; /* TEMP STORAGE PAGE LENGTH*/
     /* *************************************************************/
    XPPA020: XPPA020();
     /* -------------------- flow section of xppa020 ---------------*/

    if (converseVar.validationMsgNum == 10) /* Error obtaining current buy date*/
      converseLib.clearScreen();
       /* Clear the map*/
    end

    PA0O001: PA0O001();
     /* no flow*/
    PA0O002: PA0O002();
     /* ------------------------------------------------------------*/
     /* Flow to converse the Order Adjustment Factory Add process.*/
     /* ------------------------------------------------------------*/

    goto PA0O002; /* Converse O/A factory add*/


  end // end main
end // end PA0O

// Special initialization
Function PA0O001()
   /* ------------------------------------------------------------*/
   /* This process will perform any special initializtion that is*/
   /* unique to an application.*/
   /* ------------------------------------------------------------*/

  PA0OW00.XXXMODID = PAWREC.XXXMODID; /* Message number*/

  PA0OW00.PA0OWSWR = "N"; /* init request for data switch*/

  if (PAWREC.PAWOANBR > 0) /* O/A number exists*/
    PA0OW00.PA1OANBR = PAWREC.PAWOANBR;
    PAWREC.PAWOANBR = 0;
    PA0OW00.PA0OWSWR = "Y"; /* init request for data switch*/
  end

  PA0OW00.PAWBUYDT = PAWREC.PAWBUYDT; /* Current buy date*/

  XX0XS01(); /* Obtain current date*/

end // end PA0O001

// Process o/a numbers in a list
Function PA0O002()
   /* ------------------------------------------------------------*/

   /* 1) obtain data*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  PA0O100(); /* Obtain the data to display*/

  PA0O200(); /* Format and display the map*/

  PA0O300(); /* Check attention identifier*/

  PA0O400(); /* Reset fields to normal intensity*/

  PA0O500(); /* Verify the entered data*/

  PA0O600(); /* Process valid input request*/


end // end PA0O002

// Obtain the data to display
Function PA0O100()
   /* ------------------------------------------------------------*/
     /* Purge any existing queue in temporary storage.*/
     /* Select and open the cursor for the set(s) to be formatted*/
     /* Fetch and format the data in the page.*/
     /* If the page is full, add the page to the storage queue.*/
     /* At end of rows, add any partial page to the queue.*/
     /* At end of rows, close the selected set cursor.*/
     /* If no data found, display error message and return to*/
       /* previous process.*/
     /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/

  if (PA0OW00.PA0OWSWR != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0) /* Previous errors exist*/
    return;

  end

  set PA0OM001 initial; /* Clear map*/
  set PA1REC empty; /* Clear the database record*/
  set PA4REC empty; /* Clear the database record*/
  set PA0OW01 empty; /* Clear display storage*/
  PA0OW00.XXXMSGNO = 0; /* CLEAS MESSAGE NUMBER*/

  PA0O110(); /* Purge temp storage*/

  PA0O120(); /* Select Set o/a header/Factory*/

  PA0OW00.PA0OWIXM = 0; /* Initialize display line number*/
  PA0OW00.PA0OWSW1 = "N"; /* Initialize end of file switch1*/

  while (PA0OW00.PA0OWSW1 == "N" /* Until end of set or problem found*/
   && converseVar.validationMsgNum == 0) /* or until a problem was found*/

    PA0O130(); /* Fetch one row*/

    if (SQLCA.VAGen_SQLCODE == 0)

       /* SKIP IF EUROPEAN O/A*/

      if (PA1REC.PA1OANBR > 199999
       && PA1REC.PA1OANBR < 300000)
          /* NEXT SENTENCE*/
      else

        PA0OW00.PA0OWSEL = "Y";

          /* ONLY PROCESS THESE STATUSES IF NON SPECIFIED*/

        if (PA0OW00.YESCD == " ")
          if (PA4REC.YESCD == "15"
           || PA4REC.YESCD == "18"
           || PA4REC.YESCD == "19"
           || PA4REC.YESCD == "20"
           || PA4REC.YESCD == "84"
           || PA4REC.YESCD == "96")

          else
            PA0OW00.PA0OWSEL = "N";
          end
        end

          /* PA9999: BYPASS ANY OA WITH HDR STAT 75*/

        if (PA0OW00.PA0OWSEL == "Y"
         && PA1REC.YESCD != "75")
          PA0OW00.PA0OWIXM = PA0OW00.PA0OWIXM + 1;
          PA0OW01.PA1GROUP[PA0OWIXM] = PA1REC.PA1GROUP;
          PA0OW01.PA4GROUP[PA0OWIXM] = PA4REC.PA4GROUP;
          PA0OW01.PA0OWFND[PA0OWIXM] = "Y"; /* SHOW AS ROW EXISTS*/

          if (PA1REC.KUCCOID != 0) /* IF CUSTOMER NUMBER PRESENT*/
            PA0O131(); /* GET CUSTOMER XREF NUMBER*/
          end

          PA0O132(); /* SELECT-SET COMMENT ROW*/
          PA0O133(); /* FETCH ONE COMMENT ROW*/
          PA0O134(); /* CLOSE-SET COMMENT ROW*/
        end
        if (PA0OW00.PA0OWIXM >= PA0OW00.PA0OWMPM)
                                       /* ; if current line at end of page*/
          PA0O140(); /* Add record to temp storage*/

          set PA0OW01 empty;

          PA0OW00.PA0OWIXM = 0; /* Initialize display line number*/
        end
      end
    else
      PA0OW00.PA0OWSW1 = "Y"; /* END OF DB SWITCH*/
    end

  end

  if (PA0OW00.PA0OWIXM >= 1 /* if some of the page was formatted*/
   && PA0OW01.PA0OWFND[1] == "Y") /* and at least one row found*/
    PA0O140(); /* Add record to temp storage*/
  end

  PA0OW00.PA0OWSWR = "N"; /* Request for data completed*/

  PA0OW00.PA0OWTSP = 1; /* Request first TSQ Page*/

  if (PA0OW00.TA5TSQIX == 0 /* No data to display*/
   && converseVar.validationMsgNum == 0) /* and no previous errors*/

    PA0OM001.XXXMODID = "100"; /* Module identification*/
    converseLib.validationFailed(15); /* Indicate no data to display*/
  end

  TA5REC.TA5TSQIX = 0; /* always get first page from TSQ*/

   /* ------------------ end of process pa0o100 ------------------*/

end // end PA0O100

// Purge temp storage
Function PA0O110()
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "PA0O"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  call "TA0050" (PA0OW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
                                   /* Temporary storage subroutine*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1PGMNM = "PA0O110"; /* Process name*/
    TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
    TA1REC.TA1MAP = "PA0OM001"; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  end

  PA0OW00.PA0OWTSP = 0; /* Reset current page number*/
  PA0OW00.TA5TSQIX = 0; /* Reset highest page number*/

   /* ------------- end of process pa0o110 -----------------------*/

end // end PA0O110

// Select Set data FCTY/HDR
Function PA0O120()
   /* ------------------------------------------------------------*/
   /* Select a unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

   /* ----- format key data for select -----*/

  PA4REC.FY1FCTYC = PA0OW00.FY1FCTYC;

  if (PA0OW00.YESCD != " ")
    PA1REC.YESCD = PA0OW00.YESCD;
    PA4REC.YESCD = PA0OW00.YESCD;
  else
    /* ----- wildcard -----*/
    PA1REC.YESCD = "*";
    PA4REC.YESCD = "*";
  end

  if (PA0OW00.PC3POIDT != 0)
    PA4REC.PC3POIDT = PA0OW00.PC3POIDT;
  else
    /* ----- wildcard -----*/
    PA4REC.PC3POIDT = -1;
  end


  try
    call "PA1030" ("S2", SQLCA, PA4REC, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return;

    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0OW00.XXXMODID = "120"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET ON JOIN OF TBLS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0O120"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process PA0O120 -----------------------*/

end // end PA0O120

// Fetch next row FCTY/HDR
Function PA0O130()
   /* ------------------------------------------------------------*/
   /* Fetch next row from join of header & factory*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  try
    call "PA1030" ("N2", SQLCA, PA4REC, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
     || SQLCA.VAGen_SQLCODE == +100) /* IF END of Rows selected*/
      return; /* Return to calling program*/
    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0OW00.XXXMODID = "130"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0O130"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process PA0O130 -----------------------*/

end // end PA0O130

// Get customer x-ref number
Function PA0O131()
   /* ------------------------------------------------------------*/
   /* Select a unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

   /* ----- format key data for select -----*/

  PC2REC.XGPCD = "02"; /* GPC = '02'/FOOTWEAR*/
  PC2REC.KUCCOID = PA1REC.KUCCOID; /* company number*/
  PC2REC.KUMSTRID = PA1REC.KUMSTRID; /* Store ID*/
  PC2REC.XNXCD = PA1REC.XNXCD; /* Department*/

  if (PA1REC.PA1OANBR > 199999
   && PA1REC.PA1OANBR < 300000)
    PC2REC.PC-PRDCU-APAO-FL = "E"; /* EUROPEAN CUSTOMER ONLY*/
  else
    PC2REC.PC-PRDCU-APAO-FL = " "; /* MVSPROD CUSTOMER*/
  end

  try
    call "IO3340" ("SA", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/

      PA0OW01.PC2GROUP[PA0OWIXM] = PC2REC.PC2GROUP;

      return;

    else
      if (SQLCA.VAGen_SQLCODE == +100)

        PA0OW01.PC2GROUP[PA0OWIXM] = " ";

        return;

      end
    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0OW00.XXXMODID = "131"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0O131"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC2REC.PC2KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process PA0O131 -----------------------*/

end // end PA0O131

// SELECT SET DPRODA.VPACMT01
Function PA0O132()
   /* ------------------------------------------------------------*/
   /* Selectset a cursor.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

   /* ----- format key data for select -----*/

  PA9REC.PA1OANBR = PA4REC.PA1OANBR; /* o/a number*/
  PA9REC.FY1FCTYC = PA4REC.FY1FCTYC; /* Factory code*/
  PA9REC.YESCD = PA4REC.YESCD; /* YES_ADJ_STAT_CD*/
  PA9REC.PA9COMTY = "F"; /* PA_COMNT_TYP_IND*/


  try
    call "IO4820" ("S1", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/

      return;

    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0OW00.XXXMODID = "132"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0O132"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process PA0O132 -----------------------*/

end // end PA0O132

// FETCH one DPRODA.VPACMT01 row
Function PA0O133()
   /* ------------------------------------------------------------*/
   /* FETCH one row from cursor.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  set PA9REC empty; /* CLEAR THE RECORD NEED TO MOVE NO MATTER WHAT*/

  try
    call "IO4820" ("N1", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
     || SQLCA.VAGen_SQLCODE == 100)

      PA0OW01.PA9GROUP[PA0OWIXM] = PA9REC.PA9GROUP;

      return;

    else
    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0OW00.XXXMODID = "133"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH ONE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0O133"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process PA0O133 -----------------------*/

end // end PA0O133

// CLOSE-SET DPRODA.VPACMT01
Function PA0O134()
   /* ------------------------------------------------------------*/
   /* Close a cursor.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/


  try
    call "IO4820" ("C1", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/

      return;

    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0OW00.XXXMODID = "134"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE-SET";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0O134"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process PA0O134 -----------------------*/

end // end PA0O134

// ADD PAGE TO TSQ
Function PA0O140()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/

  PA0OW00.XX1 = 1;
  while (PA0OW00.XX1 <= PA0OW00.PA0OWMPM)
    PA0OW01.PA0OW-SELECT[XX1] = PA0OM001.PA0OMSEL[XX1];
    PA0OW00.XX1 = PA0OW00.XX1 + 1;
  end

  PA0OW01.PA0OWLEN = PA0OW00.PA0OWLEN; /* Temporary storage length*/
  TA5REC.TA5APPID = "PA0O"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  call "TA0050" (PA0OW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
                                   /* Temporary storage subroutine*/

  if (TA5REC.TA5RTNCD == 0) /* everything is a-ok*/
    PA0OW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    PA0OW02.PA0OWGP1 = PA0OW01.PA0OWGP1;
    return;

  end /* error was found*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1PGMNM = "PA0O140"; /* Process name*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1MAP = "PA0OM001"; /* Map 1 name*/
  SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

  converseLib.clearScreen();
   /* Clear screen 1 before redisplay*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  converseLib.validationFailed(10); /* Indicate system error*/


end // end PA0O140

// Format and display the map
Function PA0O200()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No errors*/
    PA0O210(); /* Format the map*/
  else
    PA0OW00.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/

  end


  if (PA0OW00.XXXMSGNO != 0)

    PA0OM001.XXXMODID = PA0OW00.XXXMODID; /* Module id*/
    if (PA0OW00.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PA0OW00.XXXMSGNO);
    end /* Message number*/
    set PA0OM001 alarm; /* Indicate sound alarm*/

  end

  PA0OW00.PA0OWIXM = 1;

  while (PA0OW00.PA0OWIXM <= PA0OW00.PA0OWMPM)
    if (PA0OW01.PA0OWFND[PA0OWIXM] != "Y")
      set PA0OM001.PA0OMSEL[PA0OWIXM] skip, invisible;
      set PA0OM001.PA0OWPID[PA0OWIXM] skip, invisible;
      set PA0OM001.SY1STNBR[PA0OWIXM] skip, invisible;
      set PA0OM001.SY2CLRID[PA0OWIXM] skip, invisible;
      set PA0OM001.XDMCD[PA0OWIXM] skip, invisible;
      set PA0OM001.PA4FCTQT[PA0OWIXM] skip, invisible;
      set PA0OM001.PA0OMSTA[PA0OWIXM] skip, invisible;
      set PA0OM001.XXXUSER[PA0OWIXM] skip, invisible;
      set PA0OM001.ZZZCHGDT[PA0OWIXM] skip, invisible;
      set PA0OM001.XXXINIT[PA0OWIXM] skip, invisible;
      set PA0OM001.PA4FCTDC[PA0OWIXM] skip, invisible;
      set PA0OM001.YETCD[PA0OWIXM] skip, invisible;
      set PA0OM001.PA0OMOAS[PA0OWIXM] skip, invisible;
      set PA0OM001.PC2CUXID[PA0OWIXM] skip, invisible;
      set PA0OM001.PA1OANBR[PA0OWIXM] skip, invisible;
      set PA0OM001.PA9COM[PA0OWIXM] skip, invisible;
    else
      if (COMMAREA.CACLVL[1] != "Y"
       || PA0OW00.PA0OWHST[PA0OWIXM] == "00"
       || PA0OW00.PA0OWHST[PA0OWIXM] == "18"
       || PA0OW00.PA0OWHST[PA0OWIXM] == "75"
       || PA0OW00.PA0OWHST[PA0OWIXM] == "84"
       || PA0OW00.PA0OWHST[PA0OWIXM] == "96"
       || PA0OW00.PA0OWHST[PA0OWIXM] == "98")
         /* if not allowed to update, or either status    -----*/
         /* security                                      -----*/
        set PA0OM001.PA0OMSEL[PA0OWIXM] skip;
        set PA0OM001.PA0OMSTA[PA0OWIXM] skip;
        set PA0OM001.XXXINIT[PA0OWIXM] skip;
        set PA0OM001.PA4FCTDC[PA0OWIXM] skip;
        set PA0OM001.PA9COM[PA0OWIXM] skip;
      end
    end
    PA0OW00.PA0OWIXM = PA0OW00.PA0OWIXM + 1;
  end

  PA0OM001.XXXCURDT = VGVar.currentShortGregorianDate;

  converse PA0OM001 ;

  PA0OW00.XXXMODID = " "; /* Module id*/
  PA0OW00.XXXMSGNO = 0; /* Reset message number*/

  COMMAREA.CATOAP = PA0OM001.CATOAP; /* To application*/
  COMMAREA.CAITEM = PA0OM001.CAITEM; /* Application data*/

end // end PA0O200

// Format the data on the map
Function PA0O210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set PA0OM001 initial; /* M001 input/output area*/

   /* ------------------------------------------------------------*/
   /* Format the data in the header portion of the map*/
   /* ------------------------------------------------------------*/

  PA0OM001.PA0OWBDT = PAWREC.PAWCOFYM; /* Current buy date*/

  PA0OM001.FY1FCTYC = PA0OW00.FY1FCTYC; /* factory code*/
  PA0OM001.FY1FCTSN = PA0OW00.FY1FCTSN; /* factory short name*/

  PA0OM001.YESCD = PA0OW00.YESCD; /* Factory status*/
  PA0OM001.YESSDESC = PA0OW00.YESABRV; /* Factory status short name*/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF PA0OW00.PA0OWPYR GT 0*/
  /* AND PA0OW00.PA0OWPMO GT 0*/
  /* AND PA0OW00.PA0OWDMO GT 0;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  if (PA0OW00.PA0OWPYR > " "
   && PA0OW00.PA0OWPMO > " "
   && PA0OW00.PA0OWDMO > " ")
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

    /* ----- if PO-ID is saved in PA0OW00 -----*/
    PA0OM001.PA0OWPYR = PA0OW00.PA0OWPYR; /* move po-id to map*/
    PA0OM001.PA0OWPMO = PA0OW00.PA0OWPMO;
    PA0OM001.PA0OMBMO = PA0OW00.PA0OWDMO;
  else /* ELSE(PO-ID does not exist)*/
    PA0OM001.PA0OWPYR = " "; /* move blanks tp PO-ID*/
    PA0OM001.PA0OWPMO = " ";
    PA0OM001.PA0OMBMO = " ";
  end


  if (PA0OW00.TA5TSQIX == 0) /* No data to display*/
    return; /* return to previous process*/

  end

  if (PA0OW00.PA0OWTSP != TA5REC.TA5TSQIX) /* if requested page not current*/

    PA0OS01(); /* Get next page for display*/

    PA0OW00.XX1 = 1;
    while (PA0OW00.XX1 <= PA0OW00.PA0OWMPM)
      PA0OM001.PA0OMSEL[XX1] = PA0OW01.PA0OW-SELECT[XX1];
      PA0OW00.XX1 = PA0OW00.XX1 + 1;
    end

  end

   /* ------------------------------------------------------------*/
   /* Format the data in the body of the map*/
   /* ------------------------------------------------------------*/

  PA0OW00.PA0OWIXM = 1; /* Initialize index*/

  while (PA0OW00.PA0OWIXM <= PA0OW00.PA0OWMPM) /* more lines on page*/

    PA1REC.PA1GROUP = PA0OW02.PA1GROUP[PA0OWIXM];
    PA4REC.PA4GROUP = PA0OW02.PA4GROUP[PA0OWIXM];
    PA9REC.PA9GROUP = PA0OW02.PA9GROUP[PA0OWIXM];
    PC2REC.PC2GROUP = PA0OW02.PC2GROUP[PA0OWIXM];

    if (PA0OW02.PA0OWFND[PA0OWIXM] == "Y") /* if data on this row*/
      set PA0OM001.PA0OMSEL[PA0OWIXM] initialAttributes;

      PA0OW00.PA0OWCVN = PA4REC.PC3POIDT;
      PA0OM001.PA0OWPID[PA0OWIXM] = PA0OW00.PA0OWCHC;

      PA0OM001.SY1STNBR[PA0OWIXM] = PA1REC.SY1STNBR;
      PA0OM001.SY2CLRID[PA0OWIXM] = PA1REC.SY2CLRID;
      PA0OM001.XDMCD[PA0OWIXM] = PA1REC.XDMCD;

      PA0OM001.PA4FCTQT[PA0OWIXM] = PA4REC.PA4FCTQT;
      PA0OM001.PA0OMSTA[PA0OWIXM] = PA4REC.YESCD;
      PA0OW00.PA0OWHST[PA0OWIXM] = PA4REC.YESCD;
      PA0OM001.XXXUSER[PA0OWIXM] = PA9REC.XXXUSER;
      PA0OM001.ZZZCHGDT[PA0OWIXM] = PA9REC.ZZZSDT;
      PA0OM001.XXXINIT[PA0OWIXM] = PA4REC.XXXINIT;
      PA0OM001.PA4FCTDC[PA0OWIXM] = PA4REC.PA4FCTDC;
      PA0OM001.YETCD[PA0OWIXM] = PA1REC.YETCD;
      PA0OM001.PA0OMOAS[PA0OWIXM] = PA1REC.YESCD;
      PA0OM001.PA1HLDFL[PA0OWIXM] = PA1REC.PA1HLDFL;
      PA0OM001.PC2CUXID[PA0OWIXM] = PC2REC.PC2CUXID;
      PA0OM001.PA1INTFL[PA0OWIXM] = PA1REC.PA1INTFL;
      PA0OM001.PA1OANBR[PA0OWIXM] = PA4REC.PA1OANBR;
      PA0OM001.PA9COM[PA0OWIXM] = PA9REC.PA9COM[1];

    end

    PA0OW00.PA0OWIXM = PA0OW00.PA0OWIXM + 1; /* Increment index*/

  end

   /* ------------------ end of process PA0O210 ------------------*/

end // end PA0O210

// Check attention identifier
Function PA0O300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    converseLib.clearScreen();
     /* Clear the map fields*/
    PA0OW02.PA0OWGP1 = PA0OW01.PA0OWGP1; /* restore data to last update*/
    exit stack; /* Exit to redisplay map*/
  end

  if (PA0OM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = PA0OM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = PA0OM001.CAITEM; /* Application data*/
      PAWREC.PAWOANBR = PA0OW00.PA1OANBR; /* Current o/a number*/
      XSPAS01(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    set PA0OM001.CATOAP cursor, modified, bold; /* Highlight*/
    PA0OW00.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* pf3 pressed*/
       /* NEXT SENTENCE             ; Common pf3 processing*/
    else
      if (converseVar.eventKey is pf1) /* pf1 pressed*/
        COMMAREA.CAITEM = "PA0OM001"; /* move in map name for help*/
      else
        COMMAREA.CAITEM = " "; /* clear item field*/
      end
    end

    XSPAS01(); /* Exit to another application*/
    PA0OW00.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf5  /* TRANSFER TO PA0A*/
   || converseVar.eventKey is pf14 /* TRANSFER TO PA0N*/
   || converseVar.eventKey is pf19 /* TRANSFER TO PA0Z*/
   || converseVar.eventKey is pf21) /* FACTORY POP-UP*/

    COMMAREA.CAITEM = " "; /* Clear item field*/

    PA0O310(); /* Common pf key processing*/
    XSPAS01(); /* Exit to another application*/

    PA0OW00.XXXMODID = "300"; /* Module id*/
    exit stack; /* Exit to redisplay map*/

  end


  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6   /* and not PF6*/
   && converseVar.eventKey not pf7   /* and not PF7*/
   && converseVar.eventKey not pf8   /* and not PF8*/
   && converseVar.eventKey not pf9)  /* and not PF9*/
   /* AND EZEAID NOT PF20;            /**/
    PA0OW00.PA0OWEPF = "N"; /* Enter pressed flag*/
    PA0OW00.PA0OWDMF = "N"; /* Data modified flag*/
    PA0OW00.XXXMODID = "300"; /* Module id*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end



   /* ------------------ end of process pa0o300 ------------------*/

end // end PA0O300

// pf-key processing
Function PA0O310()
   /* ------------------------------------------------------------*/
   /* This procedure will determine what the catoap will be*/
   /* based on the pf-key pressed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf5) /* ETS MAINTENANCE OF O/A ITEMS - PA0A*/
    /* CURRENT PAGE IS AVAILABLE ON THE SCREEN*/
    sysVar.arrayIndex = 1;

    PA0OW00.PA0OW-CURRENT-PAGE = PA0OW00.PA0OWTSP;

    PA0OW00.PA0OWTSP = 1; /* CURRENT TEMP STORAGE PAGE*/
    while (PA0OW00.PA0OWTSP <= PA0OW00.TA5TSQIX) /* LESS THAN MAX*/

      PA0OS01(); /* READ TEMP STORAGE PAGE*/

      PA0OS02(); /* MOVE SELECT O/AS TO PAWREC*/

      PA0OW00.PA0OWTSP = PA0OW00.PA0OWTSP + 1;

    end
    COMMAREA.CATOAP = "PA0A";
  end

  if (converseVar.eventKey is pf14) /* Hysterical comments*/
    /* CURRENT PAGE IS AVAILABLE ON THE SCREEN*/
    sysVar.arrayIndex = 1;

    PA0OW00.PA0OW-CURRENT-PAGE = PA0OW00.PA0OWTSP;

    PA0OW00.PA0OWTSP = 1; /* CURRENT TEMP STORAGE PAGE*/
    while (PA0OW00.PA0OWTSP <= PA0OW00.TA5TSQIX) /* LESS THAN MAX*/

      PA0OS01(); /* READ TEMP STORAGE PAGE*/

      PA0OS02(); /* MOVE SELECT O/AS TO PAWREC*/

      PA0OW00.PA0OWTSP = PA0OW00.PA0OWTSP + 1;

    end
    COMMAREA.CATOAP = "PA0N";
  end

  if (converseVar.eventKey is pf18) /* P.O. Select*/
    COMMAREA.CATOAP = "PA0Q";
  end

  if (converseVar.eventKey is pf19) /* O/A Status maint.*/
    /* CURRENT PAGE IS AVAILABLE ON THE SCREEN*/
    sysVar.arrayIndex = 1;

    PA0OW00.PA0OW-CURRENT-PAGE = PA0OW00.PA0OWTSP;

    PA0OW00.PA0OWTSP = 1; /* CURRENT TEMP STORAGE PAGE*/
    while (PA0OW00.PA0OWTSP <= PA0OW00.TA5TSQIX) /* LESS THAN MAX*/

      PA0OS01(); /* READ TEMP STORAGE PAGE*/

      PA0OS02(); /* MOVE SELECT O/AS TO PAWREC*/

      PA0OW00.PA0OWTSP = PA0OW00.PA0OWTSP + 1;

    end
    COMMAREA.CATOAP = "PA0Z";
  end

  if (converseVar.eventKey is pf21) /* Header list*/
    COMMAREA.CATOAP = "PA0E";
  end

   /* Setup the leveling for subsequent applications*/

  if (PAWREC.CAFROMAP[1] == " ")
    PAWREC.CAFROMAP[1] = COMMAREA.CACURRAP;
  else
    if (PAWREC.CAFROMAP[2] == " ")
      PAWREC.CAFROMAP[2] = COMMAREA.CACURRAP;
    else
      if (PAWREC.CAFROMAP[3] == " ")
        PAWREC.CAFROMAP[3] = COMMAREA.CACURRAP;
      else
        if (PAWREC.CAFROMAP[4] == " ")
          PAWREC.CAFROMAP[4] = COMMAREA.CACURRAP;
        else
          PAWREC.CAFROMAP[5] = COMMAREA.CACURRAP;
        end
      end
    end
  end


end // end PA0O310

// Reset highlighted fields
Function PA0O400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set PA0OM001.FY1FCTYC initialAttributes; /* RESET FIELD TO DEFINED ATTRIBUTES*/
  set PA0OM001.FY1FCTSN initialAttributes; /* RESET FIELD TO DEFINED ATTRIBUTES*/
  set PA0OM001.YESCD initialAttributes; /* RESET FIELD TO DEFINED ATTRIBUTES*/
  set PA0OM001.YESSDESC initialAttributes; /* RESET FIELD TO DEFINED ATTRIBUTES*/
  set PA0OM001.PA0OWPYR initialAttributes; /* RESET FIELD TO DEFINED ATTRIBUTES*/
  set PA0OM001.PA0OWPMO initialAttributes; /* RESET FIELD TO DEFINED ATTRIBUTES*/
  set PA0OM001.PA0OMBMO initialAttributes; /* RESET FIELD TO DEFINED ATTRIBUTES*/

  PA0OW00.PA0OWIXM = 1; /* Initialize index to 1*/
  while (PA0OW00.PA0OWIXM <= PA0OW00.PA0OWMPM) /* loop thru entire map*/

    set PA0OM001.PA0OMSEL[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.PA0OWPID[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.SY1STNBR[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.SY2CLRID[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.XDMCD[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.PA4FCTQT[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.PA0OMSTA[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.XXXUSER[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.ZZZCHGDT[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.XXXINIT[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.PA4FCTDC[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.YETCD[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.PA0OMOAS[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.PC2CUXID[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.PA1INTFL[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.PA1OANBR[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/
    set PA0OM001.PA9COM[PA0OWIXM] initialAttributes; /* RESET FIELD ATTRIBUTES*/

    PA0OW00.PA0OWIXM = PA0OW00.PA0OWIXM + 1; /* Incriment index by 1*/

  end


  set PA0OM001.CATOAP initialAttributes; /* Commarea TO application*/
  set PA0OM001.CAITEM initialAttributes; /* Commarea application data*/

  if (converseVar.eventKey is pf6) /* Header instructions requested*/
    if ("?" in PA0OM001.PA0OMSEL) /* Selection was made*/
      set PA9REC empty; /* Clear db2 work record*/
      PA9REC.PA1OANBR = PA0OM001.PA1OANBR[sysVar.arrayIndex]; /* O/A number*/
      XPPA100(); /* Perform pop-up window routine*/
    else
      PA0OW00.XXXMODID = "400"; /* Module identification*/
      converseLib.validationFailed(289); /* Error message number*/
      set PA0OM001.PA0OMSEL[1] cursor, modified, bold;
    end
  end

   /* IF EZEAID IS PF20;                /* Factory instructions requested*/
    /* IF 'S' IN PA0OM001.PA0OMSEL;    /* Selection was made*/
      /* SET PA9REC EMPTY;             /* Clear db2 work record*/
      /* MOVE PA0OM001.PA1OANBR(EZETST) TO PA9REC.PA1OANBR; /* O/A number*/
      /* MOVE PA0OW00.FY1FCTYC TO PA9REC.FY1FCTYC; /* Factory*/
      /* PERFORM XPPA200;              /* Perform pop-up window routine*/
    /* ELSE;*/
      /* MOVE '400' TO PA0OW00.XXXMODID;      /* Module identification*/
      /* MOVE 16 TO EZEMNO;            /* Error message number*/
      /* SET PA0OM001.PA0OMSEL(1) CURSOR,MODIFIED,BRIGHT;*/
    /* END;*/
   /* END;*/

   /* ----- look for request for pop-up status window -----*/
  if (converseVar.eventKey is enter) /* Enter pressed*/
    PA0OW00.PA0OWIXM = 1; /* Initialize index to 1*/
    while (PA0OW00.PA0OWIXM <= PA0OW00.PA0OWMPM) /* Until end of map*/
      if (PA0OM001.PA0OMSTA[PA0OWIXM] == "?")
        PA0O410(); /* Perform pop-up window routine*/
      end
      PA0OW00.PA0OWIXM = PA0OW00.PA0OWIXM + 1;
    end
  end

end // end PA0O400

// perform ? inquiry routine
Function PA0O410()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  XPXX001(); /* perform pop-up window initialize*/
  XX0XW02.XX0XWHDR = "           FACTORY STATUS "; /* heading*/

  while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
    XPYES01(); /* perform status code window*/
  end

   /* **********************************************************/
   /* *  If the pass index is greater than zero, use the      **/
   /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
   /* *  type table code and description to the map.          **/
   /* **********************************************************/

  if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
    PA0OM001.PA0OMSTA[PA0OWIXM] = YESTBL.YESCD[XX0XWPIX];
  end



end // end PA0O410

// Verify the entered data
Function PA0O500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (PA0OM001.CAITEM > " ") /* Application data was entered*/
    set PA0OM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    PA0OW00.XXXMODID = "500"; /* Module identification*/
    exit stack; /* Flow to converse map*/

  end

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)

    if (PA0OW00.PA0OWDMF == "Y") /* Data has been modified*/
      converseLib.validationFailed(41); /* Error message*/
      PA0OW00.XXXMODID = "500"; /* Module id*/
      PA0OW00.PA0OWEPF = "N"; /* Reset to nay*/
      exit stack;

    else
      /* ----- if selection criteria changed -----*/
      PA0OW00.PA0OWCHG = "N"; /* INIT changed flag to 'N'*/
      if (PA0OM001.FY1FCTYC != PA0OW00.FY1FCTYC)
        set PA0OM001.FY1FCTYC cursor, bold;
        PA0OW00.PA0OWCHG = "Y"; /* indicate data chaged*/
      end

      if (PA0OM001.YESCD != PA0OW00.YESCD)
        set PA0OM001.YESCD cursor, bold;
        PA0OW00.PA0OWCHG = "Y"; /* indicate data chaged*/
      end

      if (PA0OM001.PA0OWPYR != PA0OW00.PA0OWPYR
       || PA0OM001.PA0OWPMO != PA0OW00.PA0OWPMO
       || PA0OM001.PA0OMBMO != PA0OW00.PA0OWDMO)
        set PA0OM001.PA0OWPYR cursor, bold;
        set PA0OM001.PA0OWPMO bold;
        set PA0OM001.PA0OMBMO bold;
        PA0OW00.PA0OWCHG = "Y"; /* indicate data chaged*/
      end

      if (PA0OW00.PA0OWCHG == "Y") /* IF data was changed*/
        converseLib.validationFailed(41); /* Error message*/
        PA0OW00.XXXMODID = "500"; /* Module id*/
        PA0OW00.PA0OWEPF = "N"; /* Reset to nay*/
        exit stack;

      else

        PA0O510(); /* Verify scroll request*/
        return;

      end
    end
  end

  if (converseVar.eventKey is pf9) /* Pf9 key pressed*/
    PA0OW00.PA0OWIXM = PA0OW00.PA0OWMPM; /* Initialize index*/
    PA0OW00.PA0OWCHG = "N"; /* INIT changed flag to 'N'*/
    while (PA0OW00.PA0OWIXM >= 1)
      PA1REC.PA1GROUP = PA0OW02.PA1GROUP[PA0OWIXM];
      PA4REC.PA4GROUP = PA0OW02.PA4GROUP[PA0OWIXM];
      PA9REC.PA9GROUP = PA0OW02.PA9GROUP[PA0OWIXM];
      PC2REC.PC2GROUP = PA0OW02.PC2GROUP[PA0OWIXM];
      if (PA0OM001.PA0OMSTA[PA0OWIXM] != PA4REC.YESCD) /* STATUS*/
        PA0OW00.PA0OWCHG = "Y"; /* set changed flag to 'Y'*/
        set PA0OM001.PA0OMSTA[PA0OWIXM] cursor, bold;
      end

      if (PA0OM001.XXXINIT[PA0OWIXM] != PA4REC.XXXINIT) /* CHANGED BY*/
        PA0OW00.PA0OWCHG = "Y"; /* set changed flag to 'Y'*/
        set PA0OM001.XXXINIT[PA0OWIXM] cursor, bold;
      end

      if (PA0OM001.PA4FCTDC[PA0OWIXM] != PA4REC.PA4FCTDC) /* Document #*/
        PA0OW00.PA0OWCHG = "Y"; /* set changed flag to 'Y'*/
        set PA0OM001.PA4FCTDC[PA0OWIXM] cursor, bold;
      end

      if (PA0OM001.PA9COM[PA0OWIXM] != PA9REC.PA9COM[1]) /* Factory doc*/
        PA0OW00.PA0OWCHG = "Y"; /* set changed flag to 'Y'*/
        set PA0OM001.PA9COM[PA0OWIXM] cursor, bold;
      end

      PA0OW00.PA0OWIXM = PA0OW00.PA0OWIXM - 1;
    end

    if (PA0OW00.PA0OWCHG == "Y") /* IF data was changed*/

      converseLib.validationFailed(34); /* Error message*/
      PA0OW00.XXXMODID = "500"; /* Module id*/
      exit stack;

    else /* DATA HAS NOT BEEN MODIFIED SINCE 'ENTER'*/
      if (PA0OW01.PA0OWGP1 == PA0OW02.PA0OWGP1)
        /* ----- IF NO DATA HAS BEEN MODIFIED -----*/

        converseLib.validationFailed(81); /* Error message*/
        PA0OW00.XXXMODID = "500"; /* Module id*/
        exit stack;

      end

    end

    return;

  end

  PA0O520(); /* Validate selection criteria*/

  PA0OW00.PA0OWIXM = PA0OW00.PA0OWMPM;
  while (PA0OW00.PA0OWIXM >= 1)

    if (PA0OW01.PA0OWFND[PA0OWIXM] == "Y")
      PA0O530(); /* Validate body of map*/
    end

    PA0OW00.PA0OWIXM = PA0OW00.PA0OWIXM - 1;

  end

   /* ----- if no errors save validated values -----*/
  if (converseVar.validationMsgNum == 0) /* IF no error found*/
    PA0OW00.PA0OWIXM = 1;
    while (PA0OW00.PA0OWIXM <= PA0OW00.PA0OWMPM)
      if (PA0OW01.PA0OWFND[PA0OWIXM] == "Y")
        PA4REC.PA4GROUP = PA0OW02.PA4GROUP[PA0OWIXM];
        PA9REC.PA9GROUP = PA0OW02.PA9GROUP[PA0OWIXM];

        if (PA0OM001.PA0OMSTA[PA0OWIXM] != PA4REC.YESCD
         || PA0OM001.PA4FCTDC[PA0OWIXM] != PA4REC.PA4FCTDC)
          if (PA0OM001.PA9COM[PA0OWIXM] != PA9REC.PA9COM[1])
            PA9REC.PA9COM[1] = PA0OM001.PA9COM[PA0OWIXM];
          else
            PA9REC.PA9COM[1] = " ";
          end
        else
          PA9REC.PA9COM[1] = PA0OM001.PA9COM[PA0OWIXM];
        end

        PA4REC.XXXINIT = PA0OM001.XXXINIT[PA0OWIXM];
        PA4REC.YESCD = PA0OM001.PA0OMSTA[PA0OWIXM];
        PA4REC.PA4FCTDC = PA0OM001.PA4FCTDC[PA0OWIXM];


        PA0OW02.PA4GROUP[PA0OWIXM] = PA4REC.PA4GROUP;
        PA0OW02.PA9GROUP[PA0OWIXM] = PA9REC.PA9GROUP;
      end

      PA0OW00.PA0OWIXM = PA0OW00.PA0OWIXM + 1;
    end
  end

  converseLib.clearScreen();

   /* ---------------- End of process PA0O500 --------------------*/

end // end PA0O500

// Verify scroll request
Function PA0O510()
   /* ------------------------------------------------------------*/
   /* Ensure that pages exist to scroll forward or back.*/
   /* Indicate an error for any data that was modified.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && PA0OW00.PA0OWTSP < 2)       /* and no previous pages*/
    PA0OW00.XXXMODID = "510"; /* Process name*/
    converseLib.validationFailed(2); /* No previous page to display*/
    exit stack;

  end

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && PA0OW00.PA0OWTSP >= PA0OW00.TA5TSQIX) /* and no more pages*/
    PA0OW00.XXXMODID = "510"; /* Process name*/
    converseLib.validationFailed(3); /* No more pages to display*/
    exit stack;

  end

  PA0OW00.PA0OWIXM = PA0OW00.PA0OWMPM; /* Initialize line index*/

  PA0OW00.PA0OW-UPDATE-TS = "N";

  while (PA0OW00.PA0OWIXM > 0) /* Until end of lines*/
    if (PA0OM001.PA0OMSEL[PA0OWIXM] == "?")
      set PA0OM001.PA0OMSEL[PA0OWIXM] cursor, modified, bold; /* Highlight*/
      PA0OW00.XXXMODID = "510"; /* Process name*/
      converseLib.validationFailed(14); /* Modifications not allowed*/

    else
      if (PA0OM001.PA0OMSEL[PA0OWIXM] == "S")
        PA0OW01.PA0OW-SELECT[PA0OWIXM] = PA0OM001.PA0OMSEL[PA0OWIXM];
        PA0OW00.PA0OW-UPDATE-TS = "Y";
      end
    end
    PA0OW00.PA0OWIXM = PA0OW00.PA0OWIXM - 1; /* Decrement line number*/

  end

  if (PA0OW00.PA0OW-UPDATE-TS == "Y")
    PA0OS03();
  end

   /* ------------- End of process PA0O510 -----------------------*/

end // end PA0O510

// Validate selection criteria
Function PA0O520()
   /* *************************************************************/
   /* *****      V A L I D A T E     S E L E C T I O N       ******/
   /* *****                 C R I T E R I A                  ******/
   /* *************************************************************/

  PA0O521(); /* Validate PO-ID*/

  PA0O522(); /* Validate Factory Status*/

  PA0O523(); /* Validate Factory Code*/


end // end PA0O520

// Validate PO-ID
Function PA0O521()

   /* ********** if po-id changed *********/
  if (PA0OM001.PA0OWPYR != PA0OW00.PA0OWPYR
   || PA0OM001.PA0OWPMO != PA0OW00.PA0OWPMO
   || PA0OM001.PA0OMBMO != PA0OW00.PA0OWDMO)

    PA0OW00.PA0OWSWR = "Y"; /* request new data*/

    /* ********** validate PO-ID ***********/
    if (PA0OM001.PA0OWPYR != " "
     || PA0OM001.PA0OWPMO != " "
     || PA0OM001.PA0OMBMO != " ")

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
      PA0OW00.PA0OWPYR-CHAR = PA0OM001.PA0OWPYR;
      PA0OW00.PA0OWPMO-CHAR = PA0OM001.PA0OWPMO;
      PA0OW00.PA0OWDMO-CHAR = PA0OM001.PA0OMBMO;
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/


      /* ----- if any PO-ID data entered, validate -----*/
      PA0OW00.PA0OWCHG = "Y"; /* Initialize flag*/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF PA0OM001.PA0OMBMO LE 0*/
  /* OR PA0OM001.PA0OMBMO GE 13;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
      if (PA0OW00.PA0OWDMO-NBR <= 0
       || PA0OW00.PA0OWDMO-NBR >= 13)
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

        converseLib.validationFailed(79);
        set PA0OM001.PA0OMBMO cursor, bold;
        PA0OW00.XXXMODID = "520";
        PA0OW00.PA0OWCHG = "N"; /* do not change pa0ow00 values*/
      end

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF PA0OM001.PA0OWPMO LE 0*/
  /* OR PA0OM001.PA0OWPMO GE 13;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
      if (PA0OW00.PA0OWPMO-NBR <= 0
       || PA0OW00.PA0OWPMO-NBR >= 13)
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

        converseLib.validationFailed(79);
        set PA0OM001.PA0OWPMO cursor, bold;
        PA0OW00.XXXMODID = "520";
        PA0OW00.PA0OWCHG = "N"; /* do not change pa0ow00 values*/
      end

      /* ----- get beginning & ending years for po-id check -----*/
      set XX0XW01 empty;
      XX0XS01(); /* get system data & time*/

      if (XX0XW01.XX0XWYY == 99)

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF PA0OM001.PA0OWPYR EQ 98*/
  /* OR PA0OM001.PA0OWPYR EQ 00;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
        if (PA0OW00.PA0OWPYR-NBR == 98
         || PA0OW00.PA0OWPYR-NBR == 00)
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

          /* next sentence*/
        else
          converseLib.validationFailed(79);
          set PA0OM001.PA0OWPYR cursor, bold;
          PA0OW00.XXXMODID = "520";
          PA0OW00.PA0OWCHG = "N"; /* do not change pa0ow00 values*/
        end
      else
        if (XX0XW01.XX0XWYY == 00)

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF PA0OM001.PA0OWPYR EQ 99*/
  /* OR PA0OM001.PA0OWPYR EQ 01;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
          if (PA0OW00.PA0OWPYR-NBR == 99
           || PA0OW00.PA0OWPYR-NBR == 01)
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

            /* next sentence*/
          else
            converseLib.validationFailed(79);
            set PA0OM001.PA0OWPYR cursor, bold;
            PA0OW00.XXXMODID = "520";
            PA0OW00.PA0OWCHG = "N"; /* do not change pa0ow00 values*/
          end
        else

          PA0OW00.PA0OWXYY = XX0XW01.XX0XWYY - 1;
          PA0OW00.PA0OWYYY = XX0XW01.XX0XWYY + 1;


  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF PA0OM001.PA0OWPYR LT PA0OW00.PA0OWXYY*/
  /* OR PA0OM001.PA0OWPYR GT PA0OW00.PA0OWYYY;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
          if (PA0OW00.PA0OWPYR-NBR < PA0OW00.PA0OWXYY
           || PA0OW00.PA0OWPYR-NBR > PA0OW00.PA0OWYYY)
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

            converseLib.validationFailed(79);
            set PA0OM001.PA0OWPYR cursor, bold;
            PA0OW00.XXXMODID = "520";
            PA0OW00.PA0OWCHG = "N"; /* do not change pa0ow00 values*/
          end
        end
      end
    else
      PA0OW00.PA0OWPCC = " ";
      PA0OW00.PA0OWPYR = " ";
      PA0OW00.PA0OWPMO = " ";
      PA0OW00.PA0OWDMO = " ";
      PA0OW00.PC3POIDT = 0;
    end
    if (PA0OW00.PA0OWCHG == "Y") /* If change should be made to pa0ow00*/
      if (PA0OM001.PA0OWPMO != " ") /* If po-id not blank*/
        PA0OW00.PA0OWPYR = PA0OM001.PA0OWPYR;
        PA0OW00.PA0OWPMO = PA0OM001.PA0OWPMO;
        PA0OW00.PA0OWDMO = PA0OM001.PA0OMBMO;
        /* ----- use correct century -----*/
        if (PA0OW00.PA0OWPYR <= 75)
          PA0OW00.PA0OWPCC = 20;
        else
          PA0OW00.PA0OWPCC = 19;
        end

        PA0OW00.PC3POIDT = PA0OW00.PA0OWPDT;
      end
    end
  end


end // end PA0O521

// Validate Factory Status
Function PA0O522()
   /* *************************************************************/
   /* ***** V A L I D A T E     F A C T O R Y     S T A T U S *****/
   /* *************************************************************/
  if (PA0OM001.YESCD != PA0OW00.YESCD) /* if selection changed*/
    PA0OW00.PA0OWSWR = "Y"; /* request new data*/

    if (PA0OM001.YESCD == " ")
      PA0OW00.YESCD = " ";
      PA0OW00.YESABRV = " ";
      return; /* return to calling appl*/
    end

    if (PA0OM001.YESCD == "?")

      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "           FACTORY STATUS "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYES01(); /* perform status code window*/
      end

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        PA0OW00.YESCD = YESTBL.YESCD[XX0XWPIX];
        PA0OW00.YESABRV = YESTBL.YESABRV[XX0XWPIX];
        PA0OM001.YESCD = YESTBL.YESCD[XX0XWPIX];
        PA0OM001.YESSDESC = YESTBL.YESABRV[XX0XWPIX];
      end

      return;

    end

    if (PA0OM001.YESCD in YESTBL.YESCD)
      if (YESTBL.XXXSTAT[sysVar.arrayIndex] != "A")
        converseLib.validationFailed(21);
        set PA0OM001.YESCD cursor, bold;
        PA0OW00.XXXMODID = "522";
        PA0OW00.YESABRV = " ";
      else
        PA0OW00.YESCD = YESTBL.YESCD[sysVar.arrayIndex];
        PA0OW00.YESABRV = YESTBL.YESABRV[sysVar.arrayIndex];
      end
    else
      converseLib.validationFailed(21);
      set PA0OM001.YESCD cursor, bold;
      PA0OW00.XXXMODID = "522";
      PA0OW00.YESABRV = " ";
    end
  end

end // end PA0O522

// Validate Factory code
Function PA0O523()
   /* *************************************************************/
   /* *****   V A L I D A T E     F A C T O R Y     C O D E   *****/
   /* *************************************************************/

  if (PA0OM001.FY1FCTYC == " ") /* IF factory code not entered*/
    converseLib.validationFailed(20); /* Factory required*/
    set PA0OM001.FY1FCTYC cursor, bold;
    PA0OW00.XXXMODID = "523";
    PA0OW00.FY1FCTSN = " ";
    return;
  end

  if (PA0OM001.FY1FCTYC != PA0OW00.FY1FCTYC) /* if selection changed*/
    PA0OW00.PA0OWSWR = "Y"; /* request new data*/

     /* *=================**/
     /* *  Build DB keys  **/
     /* *=================**/

    set FY1REC empty; /* Reset rec work area*/

    FY1REC.XGPCD = "02"; /* GPC cd*/
    FY1REC.FY1FCTYC = PA0OM001.FY1FCTYC; /* factory code*/


     /* *===================================**/
     /* *  Select Set from DPRODG.VSYCLR01  **/
     /* *===================================**/

    try
      call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
    end


    /* ------------------------------------------------------------*/
     /* If successful, save style name, then return to calling*/
                    /* process*/
    /* ------------------------------------------------------------*/

    if (sysVar.errorCode == "00000000") /* Call successful*/

      if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

        PA0OW00.FY1FCTYC = FY1REC.FY1FCTYC;
        PA0OW00.FY1FCTSN = FY1REC.FY1FCTSN;

        return; /* Return to calling process*/

      end

      if (SQLCA.VAGen_SQLCODE == 100) /* Style not found*/

        converseLib.validationFailed(20); /* Factory required*/
        set PA0OM001.FY1FCTYC cursor, bold;
        PA0OW00.XXXMODID = "523";
        PA0OM001.FY1FCTSN = " ";
        return; /* Return to calling process*/

      end

    end


    /* ------------------------------------------------------------*/
     /* If data not available, return an error message to the user.*/
     /* Otherwise, indicate that a system error has occurred.*/
    /* ------------------------------------------------------------*/

    if (sysVar.errorCode == "00000000") /* Call successful*/

      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

    end


    TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    PA0OW00.XXXMODID = "523 "; /* Process number*/
    TA1REC.TA1PGMNM = "PA0O523 "; /* Process number*/
    TA1REC.TA1LOC = "FETCH FACTORY TABLE ROW";
    TA1REC.TA1MAP = "PA0OM001"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    exit stack; /* Exit to redisplay map*/

  end


end // end PA0O523

// Validate 'BODY' of map
Function PA0O530()
   /* *************************************************************/
   /* *****  V A L I D A T E     B O D Y     O F     M A P   ******/
   /* *************************************************************/

  PA0O531(); /* Validate comment*/

  PA0O532(); /* Validate document*/

  PA0O533(); /* Validate 'APP'*/

  PA0O534(); /* Validate Factory Status*/

   /* ****************** END OF PROCESS PA0O530 *******************/
end // end PA0O530

// Validate Comment
Function PA0O531()
   /* *************************************************************/
   /* *****         V A L I D A T E     C O M M E N T        ******/
   /* *************************************************************/


  PA4REC.PA4GROUP = PA0OW01.PA4GROUP[PA0OWIXM];
  PA9REC.PA9GROUP = PA0OW01.PA9GROUP[PA0OWIXM];

  if (PA0OM001.PA0OMSTA[PA0OWIXM] != PA4REC.YESCD) /* Status*/
    if (PA0OM001.PA0OMSTA[PA0OWIXM] == "00"
     || PA0OM001.PA0OMSTA[PA0OWIXM] == "84")

      if (PA0OM001.PA9COM[PA0OWIXM] == PA9REC.PA9COM[1]) /* Comments*/

        converseLib.validationFailed(93); /* Error message*/
        set PA0OM001.PA9COM[PA0OWIXM] cursor, bold; /* hightlight field*/
        PA0OW00.XXXMODID = "531"; /* Module id*/
           /* EZEFLO;*/
      end
    end
  end

   /* ****************** END OF PROCESS PA0O531 *******************/
end // end PA0O531

// Validate Document
Function PA0O532()
   /* *************************************************************/
   /* *****        V A L I D A T E     D O C U M E N T       ******/
   /* *************************************************************/

      /* this process is stubbed, due to the fact the document*/
      /* field does not require any validation at this time.*/

   /* ****************** END OF PROCESS PA0O532 *******************/
end // end PA0O532

// Validate 'APP'
Function PA0O533()
   /* *************************************************************/
   /* *****           V A L I D A T E     'A P P'            ******/
   /* *************************************************************/

      /* this process is stubbed, due to the fact the 'APP'*/
      /* field does not require any validation at this time.*/

   /* ****************** END OF PROCESS PA0O533 *******************/
end // end PA0O533

// Validate factory status
Function PA0O534()
   /* *************************************************************/
   /* ***** V A L I D A T E     F A C T O R Y     S T A T U S *****/
   /* *************************************************************/

  if (PA0OM001.PA0OMSTA[PA0OWIXM] == " ")
    converseLib.validationFailed(21);
    set PA0OM001.PA0OMSTA[PA0OWIXM] cursor, bold;
    PA0OW00.XXXMODID = "522";
    return; /* return to calling appl*/
  end

  if (PA0OM001.PA0OMSTA[PA0OWIXM] == "?")

    XPXX001(); /* perform pop-up window initialize*/
    XX0XW02.XX0XWHDR = "           FACTORY STATUS "; /* heading*/

    while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
      XPYES01(); /* perform status code window*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
      PA0OM001.PA0OMSTA[PA0OWIXM] = YESTBL.YESCD[XX0XWPIX];
    end

    return;

  end

  if (PA0OM001.PA0OMSTA[PA0OWIXM] in YESTBL.YESCD)
    if (YESTBL.XXXSTAT[sysVar.arrayIndex] != "A")
      converseLib.validationFailed(21);
      set PA0OM001.PA0OMSTA[PA0OWIXM] cursor, bold;
      PA0OW00.XXXMODID = "522";
    else
      PA0O535(); /* validate that status change okay*/
    end
  else
    converseLib.validationFailed(21);
    set PA0OM001.PA0OMSTA[PA0OWIXM] cursor, bold;
    PA0OW00.XXXMODID = "522";
  end


   /* ****************** END OF PROCESS PA0O534 *******************/
end // end PA0O534

// Validate status change is okay
Function PA0O535()
   /* *************************************************************/
   /* ***** v a l i d a t e     s t a t u s     c h a n g e  ******/
   /* *************************************************************/

  PA4REC.PA4GROUP = PA0OW01.PA4GROUP[PA0OWIXM];

  if (PA0OM001.PA0OMSTA[PA0OWIXM] != PA4REC.YESCD)
    if (PA4REC.YESCD in PA0OT01.YESCD)
      if (PA0OT01.PA0OTYS1[sysVar.arrayIndex] == PA0OM001.PA0OMSTA[PA0OWIXM]
       || PA0OT01.PA0OTYS2[sysVar.arrayIndex] == PA0OM001.PA0OMSTA[PA0OWIXM]
       || PA0OT01.PA0OTYS3[sysVar.arrayIndex] == PA0OM001.PA0OMSTA[PA0OWIXM]
       || PA0OT01.PA0OTYS4[sysVar.arrayIndex] == PA0OM001.PA0OMSTA[PA0OWIXM]
       || PA0OT01.PA0OTYS5[sysVar.arrayIndex] == PA0OM001.PA0OMSTA[PA0OWIXM]
       || PA0OT01.PA0OTYS6[sysVar.arrayIndex] == PA0OM001.PA0OMSTA[PA0OWIXM]
       || PA0OT01.PA0OTYS7[sysVar.arrayIndex] == PA0OM001.PA0OMSTA[PA0OWIXM]
       || PA0OT01.PA0OTYS8[sysVar.arrayIndex] == PA0OM001.PA0OMSTA[PA0OWIXM]
       || PA0OT01.PA0OTYS9[sysVar.arrayIndex] == PA0OM001.PA0OMSTA[PA0OWIXM])
        if (PA0OM001.PA1HLDFL[PA0OWIXM] != "Y") /* oa cannot be on hold*/
             /* NEXT SENTENCE ----- this is okay*/
        else
          converseLib.validationFailed(265);
          set PA0OM001.PA0OMSTA[PA0OWIXM] cursor, bold;
          PA0OW00.XXXMODID = "535";
        end

      else
        converseLib.validationFailed(80);
        set PA0OM001.PA0OMSTA[PA0OWIXM] cursor, bold;
        PA0OW00.XXXMODID = "535";
      end

      if (PA0OM001.PA0OMSTA[PA0OWIXM] == "75"
       && PA0OM001.PA0OMOAS[PA0OWIXM] != "70"
       && PA0OM001.PA0OMOAS[PA0OWIXM] != "71")
        converseLib.validationFailed(80);
        set PA0OM001.PA0OMSTA[PA0OWIXM] cursor, bold;
        PA0OW00.XXXMODID = "535";
      end

    else
      converseLib.validationFailed(80);
      set PA0OM001.PA0OMSTA[PA0OWIXM] cursor, bold;
      PA0OW00.XXXMODID = "535";
    end
  end
end // end PA0O535

// Process valid input request
Function PA0O600()
   /* ------------------------------------------------------------*/
   /* Verify that no table row exists for the requested*/
   /* factory. If found, display a message that the row already*/
   /* exists. If not found then add the row if the data has been*/
   /* confirmed (pf9).*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    return;

  end

   /* ------------------------------------------------------------*/
   /* If a scroll request, adjust temporary storage page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/
    PA0OW00.PA0OWTSP = PA0OW00.PA0OWTSP - 1; /* Decrement page number*/
    return;

  end

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/
    PA0OW00.PA0OWTSP = PA0OW00.PA0OWTSP + 1; /* Increment page number*/
    return;

  end

   /* IF PA0OW00.PA0OWDMF NE 'Y'      ; If data not modified*/
    /* EZERTN                        ; Exit*/
    /* ;*/
   /* END ;*/

  if (converseVar.eventKey is enter) /* enter pressed*/
    if (PA0OW01.PA0OWGP1 != PA0OW02.PA0OWGP1)
      /* ----- DISPLAY 'PRESS PF9' ONLY IF DATA CHANGED -----*/
      PA0OW00.XXXMSGNO = 30; /* Informative message*/
      PA0OW00.PA0OWEPF = "Y"; /* Enter pressed flag*/
    end
    return; /* Get out while the gettins' good*/
  end

  if (converseVar.eventKey not pf9) /* Pf9 not pressed*/
    converseLib.validationFailed(41); /* Error message*/
    PA0OW00.XXXMODID = "600"; /* Module id*/
    PA0OW00.PA0OWEPF = "N"; /* Enter pressed flag*/
    return; /* Get out while the gettins' good*/
  end

   /* ---------------- UPDATE DATABASE ROWS HERE -----------------*/

   /* ----- get system date and time*/
  set XX0XW01 empty;
  XX0XS01();

  PA0OW00.PA0OWIXM = 1; /* Initialize index*/

  while (PA0OW00.PA0OWIXM <= PA0OW00.PA0OWMPM) /* loop thru entire map*/
    if (PA0OW01.PA0OWFND[PA0OWIXM] == "Y") /* if row has data*/
      if (PA0OW01.PA1GROUP[PA0OWIXM] != PA0OW02.PA1GROUP[PA0OWIXM]
       || PA0OW01.PA4GROUP[PA0OWIXM] != PA0OW02.PA4GROUP[PA0OWIXM]
       || PA0OW01.PA9GROUP[PA0OWIXM] != PA0OW02.PA9GROUP[PA0OWIXM]
       || PA0OW01.PC2GROUP[PA0OWIXM] != PA0OW02.PC2GROUP[PA0OWIXM])

        PA0O620(); /* Update logic*/

      end
    end
    PA0OW00.PA0OWIXM = PA0OW00.PA0OWIXM + 1;
  end

  PA0O630(); /* update TSQ record*/


  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit();

   /* MOVE 'Y' TO PA0OW00.PA0OWSWR    ; Request for data*/
  PA0OW00.PA0OWEPF = "N"; /* Enter pressed flag*/
  PA0OW00.PA0OWDMF = "N"; /* Data modified flag*/
  PA0OW00.XXXMODID = "600"; /* Module identification*/
  PA0OW00.XXXMSGNO = 1; /* Update successful message*/

   /* ------------------ end of process pa0f600 ------------------*/
end // end PA0O600

// UPDATE LOGIC
Function PA0O620()
   /* *************************************************************/
   /* *****            U P D A T E     L O G I C             ******/
   /* *************************************************************/

   /* ------------ restore data to records ------------*/
  PA1REC.PA1GROUP = PA0OW01.PA1GROUP[PA0OWIXM];
  PA4REC.PA4GROUP = PA0OW01.PA4GROUP[PA0OWIXM];
  PA9REC.PA9GROUP = PA0OW01.PA9GROUP[PA0OWIXM];
  PC2REC.PC2GROUP = PA0OW01.PC2GROUP[PA0OWIXM];
  PA0OW00.PA0OW20F = "N";
  PA0OW00.PA0OW96F = "N";

  PA0OW00.PA0OWSFY = PA4REC.FY1FCTYC; /* save factory code*/

  if (PA0OM001.PA0OMSTA[PA0OWIXM] != PA4REC.YESCD)

    if (PA0OM001.PA0OMSTA[PA0OWIXM] == "96"
     || PA0OM001.PA0OMSTA[PA0OWIXM] == "98")
      PA0O621();
    end

    if (PA0OM001.PA0OMSTA[PA0OWIXM] == "84")
      PA0O626();
    end

    if (PA0OM001.PA0OMSTA[PA0OWIXM] == "00")
      if (PA4REC.YESCD == "15"
       || PA4REC.YESCD == "19"
       || PA4REC.YESCD == "20")
        PA0O622();
      end
    end

    if (PA0OM001.PA0OMSTA[PA0OWIXM] == "19")
      PA0O623();
    end

    if (PA0OM001.PA0OMSTA[PA0OWIXM] == "20")
      PA0OW00.PA0OW20F = "Y";
      PA0O624();
      /* PERFORM PA0O640;*/
    end

    if (PA0OM001.PA0OMSTA[PA0OWIXM] == "75")
      PA0O625();
    end

    /* IF PA0OM001.PA0OMSTA(PA0OWIXM) EQ '96';*/
      /* MOVE 'Y' TO PA0OW00.PA0OW96F;*/
      /* PERFORM PA0O640;*/
    /* END;*/

    /* ------ restore pa4rec values *********/
    PA4REC.PA4GROUP = PA0OW01.PA4GROUP[PA0OWIXM];

    /* ------ restore new pa2rec values *********/
    PA0OW02.PA1GROUP[PA0OWIXM] = PA1REC.PA1GROUP;

  end

  if (PA0OM001.PA0OMSTA[PA0OWIXM] != PA4REC.YESCD
   || PA0OM001.XXXINIT[PA0OWIXM] != PA4REC.XXXINIT
   || PA0OM001.PA4FCTDC[PA0OWIXM] != PA4REC.PA4FCTDC
   || PA0OM001.PA9COM[PA0OWIXM] != PA9REC.PA9COM[1])

    PA0OS91(); /* UPDATE DPRODA.VFYPA001*/
    PA0OS90(); /* INSERT DPRODA.VPACMT01*/
  end
   /* ------------- end of process PA0O620 -----------------------*/

end // end PA0O620

// UPDATE HDR FOR STAT 96, 98
Function PA0O621()
   /* *************************************************************/
   /* *****     U P D A T E     H E A D E R     R O W       *******/
   /* *************************************************************/

  if (PA0OM001.PA0OMSTA[PA0OWIXM] == "96" /* Factory denied*/
   || PA0OM001.PA0OMSTA[PA0OWIXM] == "98") /* Factory cancelled*/
    PA1REC.PA1HLDFL = "Y"; /* put this oa on hold*/
     /* MOVE '02' TO PA1REC.YESCD;*/

    PA0OS96(); /* UPDATE O/A HEADER ROW*/
  end

  set PA9REC empty;
  PA9REC.PA1OANBR = PA1REC.PA1OANBR;
  PA9REC.YESCD = PA1REC.YESCD;
  PA9REC.PA9COMTY = "H";

  if (PA0OM001.PA0OMSTA[PA0OWIXM] == "98") /* Factory cancelled*/
    PA0OW00.PA0OWFCT = PA4REC.FY1FCTYC;
    if (PA0OM001.PA0OMSTA[PA0OWIXM] in YESTBL.YESCD)
      PA0OW00.PA0OWCOM = YESTBL.YESDESC[sysVar.arrayIndex];
    end
    PA9REC.PA9COM[1] = PA0OW00.PA0OWCMG;
  end

  PA9REC.XXXUSER = "PA0O";

  PA0OS95(); /* INSERT O/A Comment*/

end // end PA0O621

// UPDATE HEADER FOR STATUS '00'
Function PA0O622()
   /* *************************************************************/
   /* *****     U P D A T E     H E A D E R     R O W       *******/
   /* *************************************************************/

  PA1REC.PA1HLDFL = "Y"; /* Put on hold*/
   /* MOVE '02' TO PA1REC.YESCD;        /* Put on hold*/

  PA0OS96(); /* UPDATE O/A HEADER ROW*/

  set PA9REC empty;
  PA9REC.PA1OANBR = PA1REC.PA1OANBR;

  PA9REC.YESCD = PA1REC.YESCD;

  PA9REC.PA9COMTY = "H";

  PA9REC.XXXUSER = "PA0O";

  PA0OS95(); /* INSERT O/A Comment*/

end // end PA0O622

// UPDATE HEADER FOR STATUS '19'
Function PA0O623()
   /* *************************************************************/
   /* *****     U P D A T E     H E A D E R     R O W       *******/
   /* *************************************************************/


  PA0OS94(); /* Select set on factory*/

  PA0OW00.PA0OWSW1 = "N";
  SQLCA.VAGen_SQLCODE = 0;

  while (SQLCA.VAGen_SQLCODE == 0
   && PA0OW00.PA0OWSW1 == "N")

    PA0OS93(); /* get one factory row*/

    if (SQLCA.VAGen_SQLCODE == 0)
      if (PA4REC.FY1FCTYC != PA0OW00.PA0OWSFY) /* if not curr fcty*/
        if (PA4REC.YESCD == "00"
         || PA4REC.YESCD == "15"
         || PA4REC.YESCD == "84"
         || PA4REC.YESCD == "96")
          PA0OW00.PA0OWSW1 = "Y";
        end
      end
    end
  end

  PA0OS92(); /* CLOSE SET on Factory*/


  if (PA0OW00.PA0OWSW1 == "N")
    if (PA1REC.YESCD >= "05") /* current status is ge to 05*/
      PA0OW00.XXXMODID = "623";
      converseLib.validationFailed(80);
      set PA0OM001.PA0OMSTA[PA0OWIXM] cursor, bold;
                                   /* HIghlight the sucker*/
      exit stack; /* Flow to converse map*/

    else
      PA1REC.YESCD = "20";
    end
  else
    return; /* do not update header*/
  end

  PA0OS96(); /* UPDATE O/A HEADER ROW*/

  PA0OW00.PA0OW20F = "Y";
   /* PERFORM PA0O640;*/
  set PA9REC empty;
  PA9REC.PA1OANBR = PA1REC.PA1OANBR;
  PA9REC.YESCD = "20";
  PA9REC.PA9COMTY = "H";

  PA9REC.XXXUSER = "PA0O";

  PA0OS95(); /* INSERT O/A Comment*/

end // end PA0O623

// UPDATE HEADER FOR STATUS '20'
Function PA0O624()
   /* *************************************************************/
   /* *****     U P D A T E     H E A D E R     R O W       *******/
   /* *************************************************************/


  PA0OS94(); /* Select set on factory*/

  PA0OW00.PA0OWSW1 = "N";
  SQLCA.VAGen_SQLCODE = 0;

  while (SQLCA.VAGen_SQLCODE == 0
   && PA0OW00.PA0OWSW1 == "N")

    PA0OS93(); /* get one factory row*/

    if (SQLCA.VAGen_SQLCODE == 0)
      if (PA4REC.FY1FCTYC != PA0OW00.PA0OWSFY) /* if not curr fcty*/
        if (PA4REC.YESCD == "00"
         || PA4REC.YESCD == "15"
         || PA4REC.YESCD == "84"
         || PA4REC.YESCD == "96")
          PA0OW00.PA0OWSW1 = "Y";
        end
      end
    end
  end

  PA0OS92(); /* CLOSE SET on Factory*/

  if (PA0OW00.PA0OWSW1 == "N"
   && PA1REC.YESCD >= "05") /* current status is ge to 05*/
    PA1REC.YESCD = "20";

  else
    return; /* Exit to previous process*/

  end

  PA0OS96(); /* UPDATE O/A HEADER ROW*/

  set PA9REC empty;
  PA9REC.PA1OANBR = PA1REC.PA1OANBR;
  PA9REC.YESCD = "20";
  PA9REC.PA9COMTY = "H";

  PA9REC.XXXUSER = "PA0O";

  PA0OS95(); /* INSERT O/A Comment*/

end // end PA0O624

// UPDATE HEADER FOR STATUS '75'
Function PA0O625()
   /* *************************************************************/
   /* *****     U P D A T E     H E A D E R     R O W       *******/
   /* *************************************************************/


  PA0OS94(); /* Select set on factory*/

  PA0OW00.PA0OWSW1 = "N";
  SQLCA.VAGen_SQLCODE = 0;

  PA0OS93(); /* get one factory row*/

  while (SQLCA.VAGen_SQLCODE == 0
   && PA0OW00.PA0OWSW1 == "N")

    if (SQLCA.VAGen_SQLCODE == 0
     && PA4REC.FY1FCTYC != PA0OW00.PA0OWSFY) /* if not curr fcty*/
      if (PA4REC.YESCD != "18"
       && PA4REC.YESCD != "75"
       && PA4REC.YESCD != "98")
        PA0OW00.PA0OWSW1 = "Y";

      end
    end

    PA0OS93(); /* get one factory row*/

  end

  PA0OS92(); /* CLOSE SET on Factory*/

  if (PA0OW00.PA0OWSW1 == "N")
    PA1REC.YESCD = "75";
  else
    return; /* do not update header*/
  end

  PA0OS96(); /* UPDATE O/A HEADER ROW*/

  set PA9REC empty;
  PA9REC.PA1OANBR = PA1REC.PA1OANBR;
  PA9REC.YESCD = "75";
  PA9REC.PA9COMTY = "H";

  PA9REC.XXXUSER = "PA0O";

  PA0OS95(); /* INSERT O/A Comment*/

end // end PA0O625

// update hdr for stat 84
Function PA0O626()
   /* *************************************************************/
   /* *****     U P D A T E     H E A D E R     R O W       *******/
   /* *************************************************************/

  if (PA1REC.YESCD == "15") /* current status is eq to 15*/
    PA1REC.YESCD = "84";

  else
    return; /* Exit to previous process*/

  end

  PA0OS96(); /* UPDATE O/A HEADER ROW*/

  set PA9REC empty;
  PA9REC.PA1OANBR = PA1REC.PA1OANBR;
  PA9REC.YESCD = "84";
  PA9REC.PA9COMTY = "H";

  PA9REC.XXXUSER = "PA0O";

  PA0OS95(); /* INSERT O/A Comment*/

end // end PA0O626

// update TSQ record
Function PA0O630()
   /* ----- move values from pa0ow02 to pa0ow01 -----*/
  PA0OW01.PA0OWGP1 = PA0OW02.PA0OWGP1;


   /* ------------------------------------------------------------*/
   /* Update the page in temporary storage.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (PA0OW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  PA0OW00.XXXMODID = "630"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = PA0OW00.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "PA0OM001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* --------------- end of process pa0o630 ---------------------*/

end // end PA0O630

// GET TEMP STORAGE PAGE
Function PA0OS01()
   /* ---------------------------------------------*/
    /* OBTAIN TEMP STORAGE PAGE*/
   /* ---------------------------------------------*/

  PA0OW01.PA0OWLEN = PA0OW00.PA0OWLEN; /* Temporary storage length*/
  TA5REC.TA5TSQIX = PA0OW00.PA0OWTSP; /* MOVE PAGE NUMBER*/
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (PA0OW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    PA0OW02.PA0OWGP1 = PA0OW01.PA0OWGP1;

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  PA0OM001.XXXMODID = "S01"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1PGMNM = "PA0OS01"; /* Module identification*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1MAP = "PA0OM001"; /* Map name*/
  SQLCA.SQLCAREC = TA5REC.TA5DATA; /* SUBROUTINE PARMS*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

end // end PA0OS01

// MOVE SELECTED ITEMS TO PAWREC
Function PA0OS02()
   /* -----------------------------------------------*/
   /* MOVE SELECTED ITEMS TO PAWREC*/
   /* -----------------------------------------------*/

  PA0OW00.XX1 = 1;
  while (PA0OW00.XX1 <= PA0OW00.PA0OWMPM)

    if (PA0OW00.PA0OWTSP == PA0OW00.PA0OW-CURRENT-PAGE)
      if (PA0OM001.PA0OMSEL[XX1] == "S")
        PAWREC.PA1OANBR[sysVar.arrayIndex] = PA0OM001.PA1OANBR[XX1];
      end
    else
      if (PA0OW01.PA0OW-SELECT[XX1] == "S")
        PAWREC.PA1OANBR[sysVar.arrayIndex] = PA0OW01.PA1OANBR[XX1];
      end
    end

    if (PAWREC.PA1OANBR[sysVar.arrayIndex] != 0)
      if (PAWREC.PAWOANBR == 0)
        PAWREC.PAWOANBR = PAWREC.PA1OANBR[sysVar.arrayIndex];
        PAWREC.PAWDRVR = "PA0O";
        PAWREC.PAWOAIDX = 1;
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1;
    end

    PA0OW00.XX1 = PA0OW00.XX1 + 1;

  end

end // end PA0OS02

// UPDATE TEMP STORAGE
Function PA0OS03()
   /* ------------------------------------------------*/
   /* UPDATE TEMP STORAGE*/
   /* -----------------------------------------------*/

  PA0OW01.PA0OWLEN = PA0OW00.PA0OWLEN; /* PAGE LENGTH*/
  TA5REC.TA5APPID = "PA0O"; /* SET APPLI ID*/
  TA5REC.TA5TSQIX = PA0OW00.PA0OWTSP; /* SET PAGE NUMBER*/
  TA5REC.TA5FNCCD = "U"; /* SET FUNCTION CODE*/

  call "TA0050" (PA0OW01, TA5REC) {isNoRefresh = yes, isExternal = yes};

  if (TA5REC.TA5RTNCD == 0)
    return;
  else
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1PGMNM = "PA0OS03";
    TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
    TA1REC.TA1MAP = "PA0OM001";
    SQLCA.SQLCAREC = TA5REC.TA5DATA;

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};

    converseLib.validationFailed(10);
    exit stack;

  end

end // end PA0OS03

// INSERT DPRODA.VPACMT01
Function PA0OS90()
   /* *************************************************************/
   /* *****  I N S E R T     A     C O M M E N T     F O R   ******/
   /* *****   T H E     O / A     F A C T O R Y     R O W    ******/
   /* *************************************************************/

   /* ----- see if comments on screen are modified -----*/
  if (PA0OM001.PA9COM[PA0OWIXM] != PA9REC.PA9COM[1]) /* if comment changed*/
    PA0OW00.PA0OWSEL = "Y";
  else /* ELSE(Comment not changed)*/
    PA0OW00.PA0OWSEL = "N";
  end

  set PA9REC empty;

  PA9REC.PA1OANBR = PA4REC.PA1OANBR;
  PA9REC.FY1FCTYC = PA4REC.FY1FCTYC;
  PA9REC.YESCD = PA4REC.YESCD;
  PA9REC.PA9COMTY = "F";

   /* ----- only write new comment if comment was changed by user*/
  if (PA0OW00.PA0OWSEL == "Y")
    PA9REC.PA9COM[1] = PA0OM001.PA9COM[PA0OWIXM];
  else
    PA9REC.PA9COM[1] = " ";
  end

  PA9REC.XXXUSER = COMMAREA.CAUSERID;

  PA0OS95(); /* INSERT COMMENT ROW*/

  PA0OW02.PA9GROUP[PA0OWIXM] = PA9REC.PA9GROUP;

end // end PA0OS90

// UPDATE DPRODA.VFYPA001
Function PA0OS91()
   /* ------------------------------------------------------------*/
   /* Update the table row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  PA4REC.YESCD = PA0OM001.PA0OMSTA[PA0OWIXM];
  PA4REC.XXXINIT = PA0OM001.XXXINIT[PA0OWIXM];
  PA4REC.PA4FCTDC = PA0OM001.PA4FCTDC[PA0OWIXM];

  PA4REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  PA4REC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  try
    call "IO4810" ("U ", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/

      /* ----- restore values of pa4rec to pa0ow02 -----*/
      PA0OW02.PA4GROUP[PA0OWIXM] = PA4REC.PA4GROUP;

      return;
    end

    if (SQLCA.VAGen_SQLCODE == +100)
      converseLib.validationFailed(11);
      TA1REC.TA1FUNC = "POST";
    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0OW00.XXXMODID = "640"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0H640"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback any changes*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process PA00s91 -----------------------*/

end // end PA0OS91

// CLOSE SET DPRODA.VFYPA001
Function PA0OS92()
   /* ------------------------------------------------------------*/
   /* CLOSE SET DPRODA.VFYPA001.*/
   /* ------------------------------------------------------------*/


  try
    call "IO4810" ("C1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PA0OW00.XXXMODID = "S92"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0OS03"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** END OF PA0Os92 ***********************/
   /* **                                                        ***/
end // end PA0OS92

// FETCH ONE DPRODA.VFYPA001 ROW
Function PA0OS93()
   /* ------------------------------------------------------------*/
   /* FETCH NEXT DPRODA.VFYPA001.*/
   /* ------------------------------------------------------------*/


  try
    call "IO4810" ("N1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* and normal return code*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PA0OW00.XXXMODID = "S94"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0OS03"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** END OF PA0Os94 ***********************/
   /* **                                                        ***/
end // end PA0OS93

// SELECT SET DPRODA.VFYPA001
Function PA0OS94()
   /* ------------------------------------------------------------*/
   /* SELECT SET DPRODA.VFYPA001.*/
   /* ------------------------------------------------------------*/

   /* ---------- move key values to pa4rec -----*/
  PA4REC.PA1OANBR = PA1REC.PA1OANBR;
  PA4REC.YESCD = "*";


  try
    call "IO4810" ("S1", SQLCA, PA4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  PA0OW00.XXXMODID = "S94"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0OS03"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPA001"; /* Table view name*/
  TA1REC.TA1TBLKE = PA4REC.PA4KEY; /* ===>Table key*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** END OF PA0OS94 ***********************/
   /* **                                                        ***/
end // end PA0OS94

// INSERT DPRODA.VPACMT01
Function PA0OS95()
   /* ***********************************************/
   /* INSERT ROW FROM DPRODA.VPACMT01*/
   /* ***********************************************/

  PA9REC.ZZZSDT = XX0XW01.XX0XWDAT;
  PA9REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* setup change date*/
  PA9REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* setup change time*/
  PA9REC.ZZZCHGCT = 0; /* initialize change count*/

  try
    call "IO4820" ("A ", SQLCA, PA9REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000"
   && SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/

    return;
  end

   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  converseLib.validationFailed(10);


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "INSERT A COMMENT ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPACMT01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA9REC.PA9KEY; /* Table key*/



end // end PA0OS95

// UPDATE DPRODA.VPAHDR01
Function PA0OS96()
   /* ------------------------------------------------------------*/
   /* Update the table row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  PA1REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  PA1REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  PA1REC.PA1YESDT = XX0XW01.XX0XWDAT;
  PA1REC.PA1YESID = COMMAREA.CAUSERID;

  try
    call "IO4830" ("U ", SQLCA, PA1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/

      /* ----- restore values of pa1rec to pa0ow02 -----*/
      PA0OW02.PA1GROUP[PA0OWIXM] = PA1REC.PA1GROUP;

      return;
    end

    if (SQLCA.VAGen_SQLCODE == +100)
      converseLib.validationFailed(11);
      TA1REC.TA1FUNC = "POST";
    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  PA0OW00.XXXMODID = "640"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Good system return code*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = "PA0OS96"; /* Process name*/
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PA1REC.PA1KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback any changes*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process PA0oS96 -----------------------*/

end // end PA0OS96

//*** RECORD=PA0OW00 ****
// Working storage for PA0O - Factory Maintenance By Factory
// Y2KFIX   12/11/97  DKENNY  Y2K MODIFICATIONS MADE:
//                            Added elements PA0OWPYR-CHAR,
//                            PA0OWPYR-NBR, PA0OWPMO-CHAR,
//                            PA0OWPMO-NBR, PA0OWDMO-CHAR and
//                            PA0OWDMO-NBR.
// ***********************
Record PA0OW00 type basicRecord
  10 XXXMSGNO XXXMSGNO ; 
  10 XXXMODID XXXMODID ; 
  10 PA0OW20F PA0OW20F ; 
  10 PA0OW96F PA0OW96F ; 
  10 PA0OWMPM PA0OWMPM ; 
  10 PA0OWLEN PA0OWLEN ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 PA0OWTSP PA0OWTSP ; 
  10 PA1OANBR PA1OANBR ; 
  10 YETCD YETCD ; 
  10 YETABRV YETABRV ; 
  10 YESCD YESCD ; 
  10 YESABRV YESABRV ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 SY1STYNM SY1STYNM ; 
  10 PC2CUXID PC2CUXID ; 
  10 KUCCOID KUCCOID ; 
  10 KUMSTRID KUMSTRID ; 
  10 XNXCD XNXCD ; 
  10 PA1RQQTY PA1RQQTY ; 
  10 PA0OWRQT PA0OWRQT ; 
  10 PA0OWPID PA0OWPID ; 
    15 PA0OWPYY PA0OWPYY ; 
    15 PA0OWDS1 PA0OWDS1 ; 
    15 PA0OWPPM PA0OWPPM ; 
    15 PA0OWDS2 PA0OWDS2 ; 
    15 PA0OWDPM PA0OWDPM ; 
  10 PA0OWSKY PA0OWSKY ; 
  10 PA0OWSKF PA0OWSKF ; 
  10 * char(1) ; 
  10 PAWBUYDT PAWBUYDT ; 
  10 PA0OWBDT PA0OWBDT ; 
    15 PA0OWBCC PA0OWBCC ; 
    15 PA0OWBYY PA0OWBYY ; 
    15 PA0OWBMM PA0OWBMM ; 
  10 PA0OWPDT PA0OWPDT ; 
    15 PA0OWPCC PA0OWPCC ; 
    15 PA0OWPYR PA0OWPYR ; 
    15 PA0OWPMO PA0OWPMO ; 
    15 PA0OWDMO PA0OWDMO ; 
  10 PC3POIDT PC3POIDT ; 
  10 PC3PONBR PC3PONBR ; 
  10 PA0OWSWR PA0OWSWR ; 
  10 PA0OWSW1 PA0OWSW1 ; 
  10 PA0OWIXM PA0OWIXM ; 
  10 PA0OWEPF PA0OWEPF ; 
  10 PA0OWDMF PA0OWDMF ; 
  10 PA0OWHSF PA0OWHSF ; 
  10 PA0OWUHF PA0OWUHF ; 
  10 PA0OWCHF PA0OWCHF ; 
  10 PA0OWOHF PA0OWOHF ; 
  10 PABAFYQT PABAFYQT ; 
  10 PABVYBTS PABVYBTS ; 
  10 PA0OWAFF PA0OWAFF ; 
  10 PA0OWCSD PA0OWCSD ; 
    15 PA0OWCUS PA0OWCUS ; 
    15 PA0OWSTO PA0OWSTO ; 
    15 PA0OWDEP PA0OWDEP ; 
  10 FY1FCTYC FY1FCTYC ; 
  10 FY1FCTSN FY1FCTSN ; 
  10 PA0OWCVN PA0OWCVN ; 
    15 * num(3) ; 
    15 PA0OWCHC PA0OWCHC ; 
  10 PA0OWXYY PA0OWXYY ; 
  10 PA0OWYYY PA0OWYYY ; 
  10 PA0OWCHG PA0OWCHG ; 
  10 PA0OWSEL PA0OWSEL ; 
  10 PA0OWSFY PA0OWSFY ; 
  10 * char(1) ; 
  10 PA0OWCMG PA0OWCMG ; 
    15 PA0OWFCT PA0OWFCT ; 
    15 * char(1) ; 
    15 PA0OWCOM PA0OWCOM ; 
  10 PA0OWHST PA0OWHST [15] ; 
  10 XX1 XX1 ; 
  10 PA0OW-UPDATE-TS PA0OW-UPDATE-TS ; 
  10 PA0OW-CURRENT-PAGE PA0OW-CURRENT-PAGE ; 
  10 PA0OWPYR-CHAR PA0OWPYR-CHAR ; 
    15 PA0OWPYR-NBR PA0OWPYR-NBR ; 
  10 PA0OWPMO-CHAR PA0OWPMO-CHAR ; 
    15 PA0OWPMO-NBR PA0OWPMO-NBR ; 
  10 PA0OWDMO-CHAR PA0OWDMO-CHAR ; 
    15 PA0OWDMO-NBR PA0OWDMO-NBR ; 
end // end PA0OW00

//*** RECORD=PA0OW01 ****
// Display storage record for PA0F - Factory Request Maint.
// ***********************
Record PA0OW01 type basicRecord
  10 PA0OWGP1 PA0OWGP1 ; 
    15 PA0OWLEN PA0OWLEN ; 
    15 PA0OWGPP PA0OWGPP [6] ; 
      20 PA0OWFND PA0OWFND ; 
      20 PA1GROUP PA1GROUP ; 
        25 * char(2) ; 
        25 PA1OANBR PA1OANBR ; 
        25 * char(129) ; 
      20 PA4GROUP PA4GROUP ; 
      20 PA9GROUP PA9GROUP ; 
      20 PC2GROUP PC2GROUP ; 
      20 PA0OW-SELECT PA0OW-SELECT ; 
end // end PA0OW01

//*** RECORD=PA0OW02 ****
// copy of PA0OW01 - used to find out if values changed since
//                   'ENTER'(verify) pressed.
// table change
// ***********************
Record PA0OW02 type basicRecord
  10 PA0OWGP1 PA0OWGP1 ; 
    15 PA0OWLEN PA0OWLEN ; 
    15 PA0OWGPP PA0OWGPP [6] ; 
      20 PA0OWFND PA0OWFND ; 
      20 PA1GROUP PA1GROUP ; 
      20 PA4GROUP PA4GROUP ; 
      20 PA9GROUP PA9GROUP ; 
      20 PC2GROUP PC2GROUP ; 
      20 PA0OW-SELECT PA0OW-SELECT ; 
end // end PA0OW02

DataItem PA0OW-CURRENT-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PA0OW-SELECT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PA0OW-UPDATE-TS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CHANGE TO STATUS 20?
DataItem PA0OW20F char(1)  {
  align = left, fillCharacter = " ", inputRequired = no
}
end

// CHANGE TO STATUS 96?
DataItem PA0OW96F char(1)  {
  align = left, fillCharacter = " ", inputRequired = no
}
end

// All factories approved flag
DataItem PA0OWAFF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Buy century
DataItem PA0OWBCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Buy date
DataItem PA0OWBDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Buy month
DataItem PA0OWBMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Buy year
DataItem PA0OWBYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// character PO-ID
DataItem PA0OWCHC char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Cancel header flag
DataItem PA0OWCHF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// change switch
DataItem PA0OWCHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// factory/comment group level
DataItem PA0OWCMG char(65)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Comment
DataItem PA0OWCOM char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Customer/Store/Department
DataItem PA0OWCSD num(14)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Customer
DataItem PA0OWCUS num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PO-ID conversion field
DataItem PA0OWCVN num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Department
DataItem PA0OWDEP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data modified flag
DataItem PA0OWDMF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Delevery month
DataItem PA0OWDMO char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Delevery month
DataItem PA0OWDMO-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Delevery month
DataItem PA0OWDMO-NBR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// P.O. id delivery month
DataItem PA0OWDPM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Dash '-'
DataItem PA0OWDS1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Dash '-'
DataItem PA0OWDS2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Enter pressed flag
DataItem PA0OWEPF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Factory code
DataItem PA0OWFCT char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// row exists flag
DataItem PA0OWFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Big group level
DataItem PA0OWGP1 char(3100)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level for occurs
DataItem PA0OWGPP char(516)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold status flag
DataItem PA0OWHSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// HOLD FCTY STATUS
DataItem PA0OWHST char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem PA0OWIXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Temporary storage length
DataItem PA0OWLEN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Max lines per map
DataItem PA0OWMPM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// On hold flag
DataItem PA0OWOHF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Production century
DataItem PA0OWPCC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// P.O. id
DataItem PA0OWPDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// P.O. id
DataItem PA0OWPID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Production month
DataItem PA0OWPMO char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Production month
DataItem PA0OWPMO-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Production month
DataItem PA0OWPMO-NBR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// P.O. id production month
DataItem PA0OWPPM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Production year
DataItem PA0OWPYR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Production year
DataItem PA0OWPYR-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Production year
DataItem PA0OWPYR-NBR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// P.O. id production year
DataItem PA0OWPYY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Remaining o/a quantity
DataItem PA0OWRQT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Select a data base row switch
DataItem PA0OWSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// save the factory code
DataItem PA0OWSFY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Save key flag
DataItem PA0OWSKF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Save Key
DataItem PA0OWSKY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Store
DataItem PA0OWSTO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Cursor end of file switch 1
DataItem PA0OWSW1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem PA0OWSWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current temporary storage page
DataItem PA0OWTSP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Update header flag
DataItem PA0OWUHF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// begin year date
DataItem PA0OWXYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// End year date
DataItem PA0OWYYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

