package da0a;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import da.common.*;
import ta.common.*;
import ww.common.*;
//*** PROGRAM=DA0A ****
// NIKE TABLE HANDLER MENU
// 
// OVERVIEW: This application is the menu used for selecting
//           a Corporate table for maintenance.
//           The application will transfer a user to
//           the requested application based upon their
//           security clearance.
// 
// DATE CREATED: 05/01/96
//       AUTHOR: Leslie Rainey
// 
// MAINTENANCE HISTORY:
// 
//     date     by whom     overview of changes made
//   --------  ----------  ------------------------------------
//   10-03-96  sjohn6      regen to pick up change in sgrp:
//                         XSDAS-PRINT-TABLE
// *********************
Program DA0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "DA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  DA0AW02 DA0AW02; // record
  DAWREC DAWREC; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  XSDAW01 XSDAW01; // record
  XSDAW02 XSDAW02; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use DAWTBL; // table
  use DA0AM.DA0AM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    DA0AP00-DRIVER: DA0AP00-DRIVER();
    exit program;
  end // end main
end // end DA0A

// DRIVER FOR APPLICATION
Function DA0AP00-DRIVER()
  /* **************************************************************/
  /* DRIVER FOR APPLICATION*/
  /* **************************************************************/

  DA0AP10-INITIALIZE(); /* Initialize application*/

  DA0AP20-BUILD-MAP(); /* Build the map*/

  while (DAWREC.DAW-TERM-APPL-FL == "N")
    DA0AP30-MAIN(); /* Process map until ready to exit*/
  end

  DA0AP99-TERMINATE(); /* Terminate the application*/

  /* **************/
  /* ****************** END DA0AP00 *******************************/
  /* **************/
end // end DA0AP00-DRIVER

// INITIALIZE THE APPLICATION
Function DA0AP10-INITIALIZE()
  /* **********************************************************/
  /* This process initializes the program work area and map.*/
  /* because it is the menu program for the DA system is will.*/
  /* also initialize the DA system record.*/
  /* **********************************************************/

  XSENTRY(); /* Check entry security*/

  XSSEGTR(); /* Set segmented transaction id*/

  /* Initialize records*/

  if (DAWREC.DAW-INIT != "INIT")
    set DAWREC empty; /* System record*/
    DAWREC.DAW-INIT = "INIT";
  end

  set DA0AW02 empty; /* Temp storage record*/

  DAWREC.DAW-TERM-APPL-FL = "N";
  DAWREC.DAW-EDIT-ERROR-FL = "N";

  /* Get change date*/

  DAWREC.DAW-SYS-DATE = VGVar.currentShortGregorianDate; /* yymmdd*/
  if (DAWREC.DAW-DATE-COMP-YY > 57)
    DAWREC.DAW-DATE-COMP-CC = 19;
  else
    DAWREC.DAW-DATE-COMP-CC = 20;
  end
  DAWREC.ZZ-CHNG-DT = DAWREC.DAW-DATE-COMP;

  /* Initialize and move standard information to the map*/

  set DA0AM001 initial;
  XSDAS-FMT-DB2-MDCY();
  DA0AM001.DAW-MAP-DATE = DAWREC.DAW-DATE-MDCY;
  DA0AM001.DAW-MAP-TIME = VGVar.currentFormattedTime;

  if (COMMAREA.CAMSG != " "
   && COMMAREA.CAFRMSYS == "DA")
    DA0AM001.DAW-INFO-MESSAGE = COMMAREA.CAMSG; /* commarea message*/
  end

  if (COMMAREA.CAITEM != " ")
    DA0AM001.DAW-MENU-OPTION = COMMAREA.CAITEM; /* fastpath item*/
  end

  /* **************/
  /* ****************** END DA0AP10 ******************************/
  /* **************/
end // end DA0AP10-INITIALIZE

// BUILD THE MAP
Function DA0AP20-BUILD-MAP()
  /* ****************************************************************/
  /* Build temp storage and move first page to the map*/
  /* ****************************************************************/

  DA0AP22-BUILD-TSQ(); /* build temp storage file*/

  if (DAWREC.DAW-CURR-PAGE != DA0AM001.DAW-CURR-PAGE)
    DA0AS-READ-TS-PAGE(); /* read temp storage page*/
    DA0AP71-TSQ-TO-MAP(); /* move page to the map*/
  end

  DA0AP25-SET-ATTR(); /* Set field attributes*/

  /* **************/
  /* ***************** END DA0AP20 **********************************/
  /* **************/
end // end DA0AP20-BUILD-MAP

// BUILD TEMP STORAGE FILE
Function DA0AP22-BUILD-TSQ()
  /* ****************************************************************/
  /* Build temp storage from menu table to allow scrolling*/
  /* ****************************************************************/

  set DA0AW02 empty; /* temp storage record*/
  DAWREC.DAW-ROW-NBR = 0; /* temp storage row subscript*/
  DAWREC.DAW-CURR-PAGE = 0; /* temp storage page(record) number*/
  DAWREC.DAW-MAX-PAGE = 0; /* temp storage max page number*/

  sysVar.arrayIndex = 1;

  while (DAWTBL.XXX-TBL-PFX[sysVar.arrayIndex] != "999") /* until last row*/

    if (DAWTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* only active rows*/
      DAWREC.DAW-ROW-NBR = DAWREC.DAW-ROW-NBR + 1;
      DA0AP221-MOV-TO-TS(); /* move row to temp storage row*/
    end

    if (DAWREC.DAW-ROW-NBR == 28) /* maximum tsq rows per map*/
      DA0AS-ADD-TS-PAGE(); /* write temp storage record when full*/
    end

    sysVar.arrayIndex = sysVar.arrayIndex + 1;

  end

  if (DAWREC.DAW-ROW-NBR > 0 /* rows were moved*/
   || DAWREC.DAW-MAX-PAGE > 0) /* or tsq pages were written*/

    if (DAWREC.DAW-ROW-NBR < 28 /* last page not full*/
     && DAWREC.DAW-ROW-NBR != 0) /* rows exist*/
      DA0AS-ADD-TS-PAGE();
    end

    DA0AM001.DAW-CURR-PAGE = 1; /* page number to read*/
    DAWREC.DAW-CURR-PAGE = 0; /* last page read*/
    DA0AM001.DAW-LAST-PAGE = DAWREC.DAW-MAX-PAGE;

  end

  /* **************/
  /* ***************** END DA0AP22 **********************************/
  /* **************/
end // end DA0AP22-BUILD-TSQ

// MOVE TO TEMP STORAGE PAGE
Function DA0AP221-MOV-TO-TS()
  /* **************************************************************/
  /* Move table row to temp storage*/
  /* **************************************************************/

  DA0AW02.XXX-TBL-PFX[DAW-ROW-NBR] = DAWTBL.XXX-TBL-PFX[sysVar.arrayIndex];
  DA0AW02.DAW-TABLE-DESC[DAW-ROW-NBR] = DAWTBL.DAW-TABLE-DESC[sysVar.arrayIndex];

  /* ***************/
  /* ****************** END DA0AP221 ******************************/
  /* ***************/
end // end DA0AP221-MOV-TO-TS

// SET MAP FIELD ATTRIBUTES
Function DA0AP25-SET-ATTR()
  /* *********************************************************/
  /* Set map field attributes - only show page numbers when*/
  /* there is more than 1 page*/
  /* *********************************************************/

  set DA0AM001.DAW-MENU-OPTION cursor, initialAttributes;

  if (DAW-LAST-PAGE > 1)
    DA0AM001.DAW-PAGE-LIT = "PAGE";
    set DA0AM001.DAW-CURR-PAGE initialAttributes;
    DA0AM001.DAW-OF-LIT = "OF";
    set DA0AM001.DAW-LAST-PAGE initialAttributes;
    DA0AM001.DAW-PF7-LIT = "PF7 = SCROLL BACK";
    DA0AM001.DAW-PF8-LIT = "PF8 = SCROLL FRWD";
  else
    DA0AM001.DAW-PAGE-LIT = " ";
    set DA0AM001.DAW-CURR-PAGE skip, invisible;
    DA0AM001.DAW-OF-LIT = " ";
    set DA0AM001.DAW-LAST-PAGE skip, invisible;
    DA0AM001.DAW-PF7-LIT = " ";
    DA0AM001.DAW-PF8-LIT = " ";
  end

  set DA0AM001.DA0AM-FAST-PATH-OPTION initialAttributes;
  set DA0AM001.DA0AM-FAST-PATH-ITEM initialAttributes;

  /* **************/
  /* ****************** END DA0AP25 **************************/
  /* **************/
end // end DA0AP25-SET-ATTR

// MAIN PROCESS LOOP
Function DA0AP30-MAIN()
  /* **********************************************************/
  /* MAIN PROCESS - Program loops through this process until*/
  /* the user exits with a PF key or transfers to another*/
  /* application. Exit occurs when DA-TERM-APPL = 'y'*/
  /* **********************************************************/

  DA0AP40-CONVERSE(); /* Display the map*/

  converseLib.validationFailed(0);
  VAGen_EZEMSG = " ";
  DA0AM001.DAW-INFO-MESSAGE = " ";
  DAWREC.DAW-EDIT-ERROR-FL = "N";

  DA0AP25-SET-ATTR(); /* Reset field attributes to defined*/

  DA0AP50-PF-KEYS(); /* Edit pf keys*/

  if (DAWREC.DAW-EDIT-ERROR-FL == "N"
   && DAWREC.DAW-TERM-APPL-FL == "N") /* No errors and not ready to exit*/

    DA0AP60-EDIT-MAP(); /* Do all edits*/

    if (DAWREC.DAW-EDIT-ERROR-FL == "N")
      DA0AP70-PROC-MAP(); /* Do any processing needed*/
    end

  end


  /* **************/
  /* ****************** END DA0AP30 *****************************/
  /* **************/
end // end DA0AP30-MAIN

// CONVERSE THE MAP
Function DA0AP40-CONVERSE()
  /* **********************************************************/
  /* CONVERSE MAP1 - TABLE HANDLER MENU*/
  /* **********************************************************/
  converse DA0AM001 ;

  /* **************/
  /* ****************** END DA0AP40 *****************************/
  /* **************/
end // end DA0AP40-CONVERSE

// EDIT PF KEYS
Function DA0AP50-PF-KEYS()
  /* **************************************************************/
  /* Edit the PF keys*/
  /* **************************************************************/

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf9)
    /* valid pf keys for this application*/
  else
    converseLib.validationFailed(001); /* Invalid PF Key*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  if (converseVar.eventKey is pf7)
    if (DA0AM001.DAW-CURR-PAGE != DAWREC.DAW-CURR-PAGE)
      converseLib.validationFailed(002); /* Can't change page number and use*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* PF7 at the same time*/
    end
    if (DA0AM001.DAW-LAST-PAGE <= 1)
      converseLib.validationFailed(001); /* Invalid PF Key*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
    end
    if (DA0AM001.DAW-CURR-PAGE <= 1)
      converseLib.validationFailed(003); /* Can't use PF7 - already at the*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* first page*/
    end
  end

  if (converseVar.eventKey is pf8)
    if (DA0AM001.DAW-CURR-PAGE != DAWREC.DAW-CURR-PAGE)
      converseLib.validationFailed(004); /* Can't change page number and use*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* PF8 at the same time*/
    end
    if (DA0AM001.DAW-LAST-PAGE <= 1)
      converseLib.validationFailed(001); /* Invalid PF Key*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
    end
    if (DA0AM001.DAW-CURR-PAGE >= DAWREC.DAW-MAX-PAGE)
      converseLib.validationFailed(005); /* Can't use PF8 - already at the*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* last page*/
    end
  end

  if (DAWREC.DAW-EDIT-ERROR-FL == "N")
    DA0AP55-HNDL-PFK();
  end

  /* **************/
  /* ****************** END DA0AP50 *******************************/
  /* **************/
end // end DA0AP50-PF-KEYS

// PREPARE TO PROCESS PF KEYS
Function DA0AP55-HNDL-PFK()
  /* ************************************************************/
  /* Process PF Keys- do whatever is needed to handle the pfkey*/
  /* and set the exit flag to 'y' when the pfkey does not*/
  /* require any furthur edits. If the pf key does require editting*/
  /* of anything entered on the map (like fastpath option) the exit*/
  /* flag will be set to 'Y' in the map edit process when there are*/
  /* no errors and there is something in the DA-EXIT-OPTION*/
  /* ************************************************************/

  if (converseVar.eventKey is enter
   && DA0AM001.DA0AM-FAST-PATH-OPTION != " ")
    DAWREC.DAW-EXIT-OPTION = "FAST";
  end

  if (converseVar.eventKey is pf3)
    DAWREC.DAW-EXIT-OPTION = "MENU";
    DAWREC.DAW-TERM-APPL-FL = "Y";
  end

  if (converseVar.eventKey is pf4)
    DAWREC.DAW-EXIT-OPTION = "MENU";
    DAWREC.DAW-TERM-APPL-FL = "Y";
  end

  if (converseVar.eventKey is pf7) /* subtract 1 from the map page number*/
    DA0AM001.DAW-CURR-PAGE = DA0AM001.DAW-CURR-PAGE - 1;
  end

  if (converseVar.eventKey is pf8) /* add 1 to the map page number*/
    DA0AM001.DAW-CURR-PAGE = DA0AM001.DAW-CURR-PAGE + 1;
  end

  /* **************/
  /* ****************** END DA0AP55 *****************************/
  /* **************/
end // end DA0AP55-HNDL-PFK

// EDIT ALL MAP FIELDS
Function DA0AP60-EDIT-MAP()
  /* ***********************************************************/
  /* Edit map fieldsin reverse order*/
  /* ***********************************************************/

  DA0AP61-EDIT-FAST(); /* edit fastpath*/

  DA0AP62-EDIT-PAGE(); /* edit current page number*/

  DA0AP63-EDIT-OPT(); /* edit prefix option*/

  if (DAWREC.DAW-EDIT-ERROR-FL == "Y" /* any errors*/
   && DAWREC.DAW-EXIT-OPTION != " ")  /* don't allow exit from appl*/
    DAWREC.DAW-TERM-APPL-FL = "N";
    DAWREC.DAW-EXIT-OPTION = " "; /* don't allow exit from appl*/
  end

  /* **************/
  /* ****************** END DA0AP60 ****************************/
  /* **************/
end // end DA0AP60-EDIT-MAP

// EDIT FASTPATH OPTION
Function DA0AP61-EDIT-FAST()
  /* ****************************************************************/
  /* Check for combinations of prefix option fastpath option and*/
  /* current page entered. Only one can be entered.*/
  /* ****************************************************************/

  /* if no prefix was selected and fast path was not*/
  /* entered and the page wasn't changed, then ask the*/
  /* user to enter a prefix*/

  if (DA0AM001.DAW-MENU-OPTION == " "
   && DA0AM001.DA0AM-FAST-PATH-OPTION == " "
   && DA0AM001.DAW-CURR-PAGE == DAWREC.DAW-CURR-PAGE
   && converseVar.eventKey is enter)
    DA0AM001.DAW-INFO-MESSAGE = "PLEASE SELECT A TABLE PREFIX";
    set DA0AM001.DAW-MENU-OPTION cursor, bold;
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  /* if prefix selected and fast path entered,*/
  /* then ask the user to erase one*/

  if (DA0AM001.DAW-MENU-OPTION != " "
   && DA0AM001.DA0AM-FAST-PATH-OPTION != " ")
    set DA0AM001.DAW-MENU-OPTION cursor, bold;
    set DA0AM001.DA0AM-FAST-PATH-OPTION bold;
    DA0AM001.DAW-INFO-MESSAGE = "CANNOT ENTER A PREFIX OPTION AND FASTPATH AT THE SAME TIME";
    DA0AM001.VAGen_EZEMSG = "PLEASE ERASE ONE";
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  /* if prefix selected and page number changed*/
  /* then reset page number*/

  if (DA0AM001.DAW-MENU-OPTION != " "
   && DA0AM001.DAW-CURR-PAGE != DAWREC.DAW-CURR-PAGE)
    set DA0AM001.DAW-MENU-OPTION cursor, bold;
    set DA0AM001.DAW-CURR-PAGE bold;
    DA0AM001.VAGen_EZEMSG = "CANNOT ENTER A PREFIX OPTION AND CHANGE PAGE AT THE SAME TIME";
    DA0AM001.DAW-CURR-PAGE = DAWREC.DAW-CURR-PAGE;
    DA0AM001.DAW-INFO-MESSAGE = "PAGE NUMBER HAS BEEN RESET";
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  /* if fastpath entered and page number changed*/
  /* then reset page number*/

  if (DA0AM001.DA0AM-FAST-PATH-OPTION != " "
   && DA0AM001.DAW-CURR-PAGE != DAWREC.DAW-CURR-PAGE)
    set DA0AM001.DA0AM-FAST-PATH-OPTION cursor, bold;
    set DA0AM001.DAW-CURR-PAGE bold;
    DA0AM001.VAGen_EZEMSG = "CANNOT ENTER FASTPATH OPTION AND CHANGE PAGE AT THE SAME TIME";
    DA0AM001.DAW-CURR-PAGE = DAWREC.DAW-CURR-PAGE;
    DA0AM001.DAW-INFO-MESSAGE = "PAGE NUMBER HAS BEEN RESET";
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  /* **************/
  /* ****************** END DA0AP61 *********************************/
  /* **************/
end // end DA0AP61-EDIT-FAST

// EDIT MAP PAGE NUMBER
Function DA0AP62-EDIT-PAGE()
  /* ***********************************************************/
  /* Edit map current page number*/
  /* ***********************************************************/

  if (DA0AM001.DAW-CURR-PAGE == DAWREC.DAW-CURR-PAGE)
    return;
  end

  if (DA0AM001.DAW-CURR-PAGE > DA0AM001.DAW-LAST-PAGE)
    set DA0AM001.DAW-CURR-PAGE cursor, bold;
    converseLib.validationFailed(006); /* page number entered is greater than*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* last page available*/
  end

  if (DA0AM001.DAW-CURR-PAGE == 0)
    set DA0AM001.DAW-CURR-PAGE cursor, bold;
    converseLib.validationFailed(007); /* page number entered is zero - page*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* does not exist*/
  end

  /* **************/
  /* ****************** END DA0AP62 ****************************/
  /* **************/
end // end DA0AP62-EDIT-PAGE

// EDIT MAP PREFIX OPTION
Function DA0AP63-EDIT-OPT()
  /* ***********************************************************/
  /* Edit map prefix option*/
  /* ***********************************************************/

  if (DA0AM001.DAW-MENU-OPTION == " ")
    if (converseVar.eventKey is pf9)
      converseLib.validationFailed(032); /* Table prefix required for print*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* displayed prefix values*/
      set DA0AM001.DAW-MENU-OPTION cursor, bold;
    else
      return;
    end
  end

  if (DA0AM001.DAW-MENU-OPTION in DAWTBL.XXX-TBL-PFX
   && DAWTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    DAWREC.DAW-TO-APPL = DAWTBL.DAW-TO-APPL[sysVar.arrayIndex];
    DAWREC.DAW-MAP-TITLE = DAWTBL.DAW-TABLE-DESC[sysVar.arrayIndex];
    DAWREC.DAW-PRINT-PARM = DAWTBL.DAW-PRINT-PARM[sysVar.arrayIndex];
    DAWREC.XXX-TBL-PFX = DAWTBL.XXX-TBL-PFX[sysVar.arrayIndex];
    if (converseVar.eventKey is enter)
      DAWREC.DAW-EXIT-OPTION = "PRFX";
      DAWREC.DAW-TERM-APPL-FL = "Y";
    end
  else
    converseLib.validationFailed(008); /* invalid table prefix - choose from*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* displayed prefix values*/
    set DA0AM001.DAW-MENU-OPTION cursor, bold;
  end

  /* **************/
  /* ****************** END DA0AP63 ****************************/
  /* **************/
end // end DA0AP63-EDIT-OPT

// DO ANY PROCESSING FOR THE MAP
Function DA0AP70-PROC-MAP()
  /* ****************************************************************/
  /* Do any processes for the map*/
  /* ****************************************************************/

  DAWREC.DAW-PRINTER-ID = DA0AM001.DAW-PRINTER-ID;

  if (DAWREC.DAW-CURR-PAGE != DA0AM001.DAW-CURR-PAGE)
    DA0AS-READ-TS-PAGE();
    DA0AP71-TSQ-TO-MAP();
  end

  if (DAWREC.DAW-EXIT-OPTION == "FAST")
    DAWREC.DAW-TERM-APPL-FL = "Y";
  end

  if (converseVar.eventKey is pf9) /* print the tables*/
    set XSDAW01 empty;
    XSDAW01.XXX-TBL-PFX = DAWREC.XXX-TBL-PFX;
    XSDAS-PRINT-TABLE();
    DA0AM001.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
  end

  /* **************/
  /* ***************** END DA0AP70 **********************************/
  /* **************/
end // end DA0AP70-PROC-MAP

// MOVE TEMP STORAGE PAGE TO MAP
Function DA0AP71-TSQ-TO-MAP()
  /* ************************************************************/
  /* Move temp storage page to map*/
  /* ************************************************************/

  sysVar.arrayIndex = 1;

  while (sysVar.arrayIndex <= 28)
    DA0AM001.XXX-TBL-PFX[sysVar.arrayIndex] = DA0AW02.XXX-TBL-PFX[sysVar.arrayIndex];
    DA0AM001.DAW-TABLE-DESC[sysVar.arrayIndex] = DA0AW02.DAW-TABLE-DESC[sysVar.arrayIndex];
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

  /* **************/
  /* ****************** END DA0AP71 *****************************/
  /* **************/
end // end DA0AP71-TSQ-TO-MAP

// EXIT FROM THE APPLICATION
Function DA0AP99-TERMINATE()
  /* ************************************************************/
  /* Transfer out of the application*/
  /* ************************************************************/

  COMMAREA.CAUSERA = DAWREC.DAWGROUP;

  DA0AS-PURGE-TS-FIL(); /* purge temp storage*/

  if (DAW-EXIT-OPTION == "PRFX") /* transfer to fastpath choice*/
    COMMAREA.CATOAP = DAWREC.DAW-TO-APPL; /* set application*/
    XSEXIT();
  end

  if (DAW-EXIT-OPTION == "MENU") /* return to main menu*/
    XSPF4();
  end

  if (DAW-EXIT-OPTION == "FAST") /* transfer to fastpath choice*/
    COMMAREA.CAITEM = DA0AM001.DA0AM-FAST-PATH-ITEM;
                                                        /* save reqstd item*/
    COMMAREA.CATOAP = DA0AM001.DA0AM-FAST-PATH-OPTION;
                                                         /* set application*/
    XSEXIT();
  end

  if (DAW-EXIT-OPTION == "HELP") /* check for system help*/
    XSPF1(); /* help facility*/
  end

  /* Still here - then XSEXIT didn't allow the transfer so restart*/
  /* the current application and display the error message*/

  if (COMMAREA.CASECRC != 0) /* no message from xsexit*/
    DA0AS-XSEXIT-CAMSG();
  end

  COMMAREA.CAFROMAP = "DA0A";
  sysVar.transferName = "DA0A";
  transfer to program sysVar.transferName passing COMMAREA;

  /* **************/
  /* ****************** END DA0AP99 *****************************/
  /* **************/
end // end DA0AP99-TERMINATE

// ADD TEMP STORAGE PAGE(RECORD)
Function DA0AS-ADD-TS-PAGE()
  /* ************************************************************/
  /* Write temporary storage*/
  /* ************************************************************/

  TA5REC.TA5APPID = "DA0A"; /* appl identification*/
  TA5REC.TA5FNCCD = "A"; /* function code*/
  DA0AW02.DAW-TEMP-STORAGE-LENGTH = 928;

  call "TA0050" (DA0AW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0)
    DAWREC.DAW-MAX-PAGE = TA5REC.TA5TSQIX;
    set DA0AW02 empty; /* Reset for next write*/
    DAWREC.DAW-ROW-NBR = 0;
  else
    TA1REC.TA1LOCAT[1] = "ADD TSQ";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = DA0AW02.XXX-TBL-PFX[1]; /* first row*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    DA0AM001.DAW-INFO-MESSAGE = "TEMPORARY STORAGE FAILURE - CONTACT HELP DESK";
  end

  /* *************************/
  /* ****************** END DA0AS-ADD-TSQ-PAGE ******************/
  /* *************************/
end // end DA0AS-ADD-TS-PAGE

// PURGE TEMP STORAGE FILE
Function DA0AS-PURGE-TS-FIL()
  /* ************************************************************/
  /* Purge temporary storage*/
  /* ************************************************************/

  TA5REC.TA5APPID = "DA0A"; /* appl identification*/
  TA5REC.TA5FNCCD = "P"; /* function code*/

  call "TA0050" (DA0AW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  /* **********************/
  /* ****************** END DA0AS-PURGE-TSQ *********************/
  /* **********************/
end // end DA0AS-PURGE-TS-FIL

// READ TEMP STORAGE PAGE
Function DA0AS-READ-TS-PAGE()
  /* ************************************************************/
  /* Read temporary storage*/
  /* ************************************************************/

  DAWREC.DAW-CURR-PAGE = DA0AM001.DAW-CURR-PAGE;

  set DA0AW02 empty;

  TA5REC.TA5APPID = "DA0A"; /* appl identification*/
  TA5REC.TA5FNCCD = "R"; /* function code*/
  TA5REC.TA5TSQIX = DAWREC.DAW-CURR-PAGE; /* current page*/
  DA0AW02.DAW-TEMP-STORAGE-LENGTH = 928;

  call "TA0050" (DA0AW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0)
     /* NEXT SENTENCE*/
  else
    TA1REC.TA1LOCAT[1] = "READ TSQ";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = DA0AW02.XXX-TBL-PFX[1]; /* first row*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    DA0AM001.DAW-INFO-MESSAGE = "TEMPORARY STORAGE FAILURE - CONTACT HELP DESK";
  end

  /* *************************/
  /* ****************** END DA0AS-READ-TSQ-PAGE ******************/
  /* *************************/
end // end DA0AS-READ-TS-PAGE

// CREATE MESSAGE IF XSEXIT FAILS
Function DA0AS-XSEXIT-CAMSG()
  /* ******************************************************************/
  /* XSEXIT did not allow a transfer so create the appropriate error*/
  /* message depending on the return code.*/
  /* 0   good return code - transfer authorized*/
  /* 3   no rec found - applicaton non-existant*/
  /* 4   no rec found - transfer not authorized*/
  /* 9   unknown file error*/
  /* ******************************************************************/

  if (DAWREC.DAW-EXIT-OPTION == "PRFX")
    DA0AM001.DAW-INFO-MESSAGE = "YOU DO NOT HAVE AUTHORIZATION TO MAINTAIN THE TABLE";
    return;
  end

  if (COMMAREA.CASECRC == 3)
    COMMAREA.CAMSG = "FASTPATH OPTION IS NOT A VALID APPLICATION";
  end

  if (COMMAREA.CASECRC == 4)
    COMMAREA.CAMSG = "FASTPATH OPTION IS NOT AUTHORIZED ";
  end

  if (COMMAREA.CASECRC == 9)
    COMMAREA.CAMSG = "UNKNOWN SECURITY ERROR - CALL HELP DESK";
  end

  if (DAWREC.DAW-EXIT-OPTION == "FAST")
    COMMAREA.CAMSG = "FASTPATH OPTION IS NOT A VALID APPLICATION";
  end
  /* *************************/
  /* ***************** END DA0AS-XSEXIT-CAMSG *************************/
  /* *************************/
end // end DA0AS-XSEXIT-CAMSG

//*** RECORD=DA0AW02 ****
//  /*********************************************************
//  /*   TEMP STORAGE RECORD FOR DA0A
//  /*
//  /* DATE      USERID     DESC. OF CHANGE
//  /* --------  ------     ----------------------------------
//  /* 05/15/96  LRAINE     CREATED RECORD
//  /*
//  /*********************************************************
// ***********************
Record DA0AW02 type basicRecord
  5 DA0AW-TEMP-STORAGE-RECORD char(928) ; // TEMP STORAGE RECORD FOR DA0A
    10 DAW-TEMP-STORAGE-LENGTH DAW-TEMP-STORAGE-LENGTH ; 
    10 DA0AW-TEMP-STORAGE-ROW char(33) [28] ; // DA0A TSQ ROW
      15 XXX-TBL-PFX XXX-TBL-PFX ; 
      15 DAW-TABLE-DESC DAW-TABLE-DESC ; 
end // end DA0AW02

