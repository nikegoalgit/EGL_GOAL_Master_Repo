package da06;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import da.common.*;
import ta.common.*;
import ww.common.*;
//*** PROGRAM=DA06 ****
//   NIKE TABLE OWNERSHIP DETAIL SRCEEN
// 
//   OVERVIEW: This application is used to display the details
//             in corporate table ownership table
// 
//   CSP TABLE: DACTBL
// 
//  DATE CREATED: 08/26/98
//        AUTHOR: Eric Chan
// 
//  MAINTENANCE HISTORY:
// 
//      date      by whom   overview of changes made
//    --------    -------  -----------------------------------
//    08/26/1998  echan    original design
//    06/07/2000  vcowan   chg: dactbl from 15 owner per table
//                         to 30 owner per table
// *********************
Program DA06 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "DA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  DAWREC DAWREC; // record
  WDA1140 WDA1140; // record
  XSDAW01 XSDAW01; // record
  XSDAW02 XSDAW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use DACTBL {deleteAfterUse = yes}; // table
  use DA06M.DA06M001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    DA06P00-DRIVER: DA06P00-DRIVER();
    exit program;
  end // end main
end // end DA06

// DRIVER FOR APPLICATION
Function DA06P00-DRIVER()
  /* **************************************************************/
  /* DRIVER FOR APPLICATION*/
  /* **************************************************************/

  DA06P10-INITIALIZE(); /* Initialize application*/

  DA06P20-BUILD-MAP(); /* Build the map*/

  while (DAWREC.DAW-DONE-WITH-ROW-FL == "N")
    DA06P30-MAIN-MAP(); /* Process map until ready to exit*/
  end

  DA06P99-TERMINATE(); /* Terminate the application*/

  /* **************/
  /* ****************** END DA06P00 *******************************/
  /* **************/
end // end DA06P00-DRIVER

// INITIALIZE THE APPLICATION
Function DA06P10-INITIALIZE()
  /* **********************************************************/
  /* This process initializes the program work area and map.*/
  /* **********************************************************/

  XSENTRY(); /* Check entry security*/

  XSSEGTR(); /* Set segmented transaction id*/

  /* Initialize records*/

  DAWREC.DAWGROUP = COMMAREA.CAUSERA; /* restore system record*/

  DAWREC.DAW-TERM-APPL-FL = "N";

  /* Initialize and move standard information to the map*/

  set DA06M001 initial;
  XSDAS-FMT-DB2-MDCY();
  DA06M001.DAW-MAP-DATE = DAWREC.DAW-DATE-MDCY;
  DA06M001.DAW-MAP-TIME = VGVar.currentFormattedTime;

  if (COMMAREA.CAMSG != " "
   && COMMAREA.CAFRMSYS == "DA")
    DA06M001.DAW-INFO-MESSAGE = COMMAREA.CAMSG; /* commarea message*/
  end

  /* **************/
  /* ****************** END DA06P10 ******************************/
  /* **************/
end // end DA06P10-INITIALIZE

// BUILD MAP 2 - TBLE ROW DETAILS
Function DA06P20-BUILD-MAP()
  /* ****************************************************************/
  /* Build MAP 001*/
  /* ****************************************************************/

  DA06M001.DA-CHNG-USER-ID = sysVar.userID;

  /* *****************************************************************/
  /* inquire on a row selected in DA05*/
  /* *****************************************************************/

  DAWREC.DAW-DONE-WITH-ROW-FL = "N";

  if (DAWREC.XXX-TBL-PFX in DACTBL.XXX-TBL-PFX /* move to map*/
   && DACTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    DA06M001.DAC-TABLE-DESC = DACTBL.DAC-TABLE-DESC[sysVar.arrayIndex];
    DA06M001.DAC-TABLE-NAME = DACTBL.DAC-TABLE-NAME[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-1 = DACTBL.DAC-OWNER-1-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-1-REG = DACTBL.DAC-OWNER-1-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-1-GPC = DACTBL.DAC-OWNER-1-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-2 = DACTBL.DAC-OWNER-2-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-2-REG = DACTBL.DAC-OWNER-2-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-2-GPC = DACTBL.DAC-OWNER-2-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-3 = DACTBL.DAC-OWNER-3-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-3-REG = DACTBL.DAC-OWNER-3-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-3-GPC = DACTBL.DAC-OWNER-3-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-4 = DACTBL.DAC-OWNER-4-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-4-REG = DACTBL.DAC-OWNER-4-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-4-GPC = DACTBL.DAC-OWNER-4-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-5 = DACTBL.DAC-OWNER-5-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-5-REG = DACTBL.DAC-OWNER-5-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-5-GPC = DACTBL.DAC-OWNER-5-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-6 = DACTBL.DAC-OWNER-6-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-6-REG = DACTBL.DAC-OWNER-6-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-6-GPC = DACTBL.DAC-OWNER-6-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-7 = DACTBL.DAC-OWNER-7-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-7-REG = DACTBL.DAC-OWNER-7-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-7-GPC = DACTBL.DAC-OWNER-7-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-8 = DACTBL.DAC-OWNER-8-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-8-REG = DACTBL.DAC-OWNER-8-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-8-GPC = DACTBL.DAC-OWNER-8-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-9 = DACTBL.DAC-OWNER-9-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-9-REG = DACTBL.DAC-OWNER-9-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-9-GPC = DACTBL.DAC-OWNER-9-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-10 = DACTBL.DAC-OWNER-10-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-10-REG = DACTBL.DAC-OWNER-10-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-10-GPC = DACTBL.DAC-OWNER-10-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-11 = DACTBL.DAC-OWNER-11-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-11-REG = DACTBL.DAC-OWNER-11-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-11-GPC = DACTBL.DAC-OWNER-11-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-12 = DACTBL.DAC-OWNER-12-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-12-REG = DACTBL.DAC-OWNER-12-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-12-GPC = DACTBL.DAC-OWNER-12-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-13 = DACTBL.DAC-OWNER-13-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-13-REG = DACTBL.DAC-OWNER-13-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-13-GPC = DACTBL.DAC-OWNER-13-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-14 = DACTBL.DAC-OWNER-14-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-14-REG = DACTBL.DAC-OWNER-14-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-14-GPC = DACTBL.DAC-OWNER-14-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-15 = DACTBL.DAC-OWNER-15-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-15-REG = DACTBL.DAC-OWNER-15-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-15-GPC = DACTBL.DAC-OWNER-15-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-16 = DACTBL.DAC-OWNER-16-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-16-REG = DACTBL.DAC-OWNER-16-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-16-GPC = DACTBL.DAC-OWNER-16-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-17 = DACTBL.DAC-OWNER-17-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-17-REG = DACTBL.DAC-OWNER-17-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-17-GPC = DACTBL.DAC-OWNER-17-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-18 = DACTBL.DAC-OWNER-18-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-18-REG = DACTBL.DAC-OWNER-18-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-18-GPC = DACTBL.DAC-OWNER-18-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-19 = DACTBL.DAC-OWNER-19-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-19-REG = DACTBL.DAC-OWNER-19-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-19-GPC = DACTBL.DAC-OWNER-19-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-20 = DACTBL.DAC-OWNER-20-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-20-REG = DACTBL.DAC-OWNER-20-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-20-GPC = DACTBL.DAC-OWNER-20-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-21 = DACTBL.DAC-OWNER-21-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-21-REG = DACTBL.DAC-OWNER-21-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-21-GPC = DACTBL.DAC-OWNER-21-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-22 = DACTBL.DAC-OWNER-22-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-22-REG = DACTBL.DAC-OWNER-22-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-22-GPC = DACTBL.DAC-OWNER-22-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-23 = DACTBL.DAC-OWNER-23-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-23-REG = DACTBL.DAC-OWNER-23-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-23-GPC = DACTBL.DAC-OWNER-23-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-24 = DACTBL.DAC-OWNER-24-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-24-REG = DACTBL.DAC-OWNER-24-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-24-GPC = DACTBL.DAC-OWNER-24-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-25 = DACTBL.DAC-OWNER-25-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-25-REG = DACTBL.DAC-OWNER-25-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-25-GPC = DACTBL.DAC-OWNER-25-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-26 = DACTBL.DAC-OWNER-26-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-26-REG = DACTBL.DAC-OWNER-26-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-26-GPC = DACTBL.DAC-OWNER-26-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-27 = DACTBL.DAC-OWNER-27-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-27-REG = DACTBL.DAC-OWNER-27-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-27-GPC = DACTBL.DAC-OWNER-27-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-28 = DACTBL.DAC-OWNER-28-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-28-REG = DACTBL.DAC-OWNER-28-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-28-GPC = DACTBL.DAC-OWNER-28-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-29 = DACTBL.DAC-OWNER-29-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-29-REG = DACTBL.DAC-OWNER-29-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-29-GPC = DACTBL.DAC-OWNER-29-GPC[sysVar.arrayIndex];
      /*  */
    DA06M001.DAC-OWNER-30 = DACTBL.DAC-OWNER-30-NAME[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-30-REG = DACTBL.DAC-OWNER-30-REG[sysVar.arrayIndex];
    DA06M001.DAC-OWNER-30-GPC = DACTBL.DAC-OWNER-30-GPC[sysVar.arrayIndex];
      /*  */
  end

  /* **************/
  /* ***************** END DA06P20 **********************************/
  /* **************/
end // end DA06P20-BUILD-MAP

// MAIN PROCESSING LOOP FOR MAP 2
Function DA06P30-MAIN-MAP()
  /* **********************************************************/
  /* MAIN PROCESS - Program loops through this process until*/
  /* the user exits with a PF key or transfers to another*/
  /* application. Exit occurs when DA-TERM-APPL = 'Y' or*/
  /* DA-DONE-WITH-ROW-FL = 'Y'*/
  /* **********************************************************/

  DA06P40-CONVERSE(); /* Display the map*/

  converseLib.validationFailed(0);
  DA06M001.VAGen_EZEMSG = " ";
  DA06M001.DAW-INFO-MESSAGE = " ";
  DAWREC.DAW-EDIT-ERROR-FL = "N";

  DA06P50-PF-KEYS(); /* Edit pf keys*/

  /* **************/
  /* ****************** END DA06P30 *****************************/
  /* **************/
end // end DA06P30-MAIN-MAP

// CONVERSE MAP 002
Function DA06P40-CONVERSE()
  /* **********************************************************/
  /* CONVERSE MAP - TABLE OWNERSHIP DETAILS*/
  /* **********************************************************/
  converse DA06M001 ;

  /* **************/
  /* ****************** END DA06P40 *****************************/
  /* **************/
end // end DA06P40-CONVERSE

// EDIT PF KEYS FOR MAP 2
Function DA06P50-PF-KEYS()
  /* **************************************************************/
  /* Edit the PF keys for MAP 002*/
  /* **************************************************************/

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4)
    /* valid pf keys for this application*/
  else
    converseLib.validationFailed(001); /* Invalid PF Key*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  if (DAWREC.DAW-EDIT-ERROR-FL == "N")
    DA06P55-HNDL-PFK();
  end

  /* **************/
  /* ****************** END DA06P50 *******************************/
  /* **************/
end // end DA06P50-PF-KEYS

// HANDLE PF KEYS FOR MAP 2
Function DA06P55-HNDL-PFK()
  /* ************************************************************/
  /* MAP 002 Process PF Keys - do whatever is needed to handle the*/
  /* pf key and set the DA-DONE-WITH-ROW-FL to 'y' when the pfkey*/
  /* doesn't require any furthur edits or processing.*/
  /* For PF6 and PF10 the DA-DONE-WITH-ROW-FL will be set to 'Y'*/
  /* in DA06P70-PROC-MAP-2.*/
  /* ************************************************************/

  if (converseVar.eventKey is pf3)
    DAWREC.DAW-EXIT-OPTION = "RETN";
    DAWREC.DAW-DONE-WITH-ROW-FL = "Y";
  end

  if (converseVar.eventKey is pf4)
    DAWREC.DAW-EXIT-OPTION = "MENU";
    DAWREC.DAW-DONE-WITH-ROW-FL = "Y";
    DAWREC.DAW-TERM-APPL-FL = "Y";
  end

  /* **************/
  /* ****************** END DA06P55 *****************************/
  /* **************/
end // end DA06P55-HNDL-PFK

// EXIT FROM THE APPLICATION
Function DA06P99-TERMINATE()
  /* ************************************************************/
  /* Transfer out of the application*/
  /* ************************************************************/

  COMMAREA.CAUSERA = DAWREC.DAWGROUP;

  if (DAW-EXIT-OPTION == "RETN") /* return to prior application*/
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    XSEXIT();
  end

  if (DAW-EXIT-OPTION == "MENU") /* return to main menu*/
    XSPF4();
  end

  if (DAW-EXIT-OPTION == "HELP") /* check for system help*/
    XSPF1(); /* help facility*/
  end

  /* Still here - then XSEXIT didn't allow the transfer so restart*/
  /* the current application and display the error message*/

  if (COMMAREA.CASECRC != 0) /* no message from xsexit*/
    XSDAS-XSEXIT-CAMSG();
  end

  COMMAREA.CAFROMAP = "DA06";
  sysVar.transferName = "DA06";
  transfer to program sysVar.transferName passing COMMAREA;

  /* **************/
  /* ****************** END DA06P99 *****************************/
  /* **************/
end // end DA06P99-TERMINATE

