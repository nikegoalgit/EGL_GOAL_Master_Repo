package az0a;
import az.common.*;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import fy.common.*;
import in1.common.*;
import iv.common.*;
import ku.common.*;
import op.common.*;
import pc.common.*;
import pk.common.*;
import sm.common.*;
import sp.common.*;
import sr.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import ti.common.*;
import ts.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=AZ0A ****
//                  maintaince log
// 
//   9/25/97 - VKAKUB            Created.
//  03/09/98 - dkesle            changed bol sub to alpha field
//                               on map
//  11/25/98 - Bruce Harrison    Added lookup for Cust PO
//                               Added stand-alone spur lookup
//                               Removed Carrier comparison
//                               from all paragraphs of AZ1010
// 06/05/01    SBHARA            MODIFIED TO PICK UP WAZ1000
// *********************
Program AZ0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AZ00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AZ0AW01 AZ0AW01; // record
  AZAREC AZAREC; // record
  AZDREC AZDREC; // record
  AZFREC AZFREC; // record
  AZOREC AZOREC; // record
  AZWREC AZWREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUNREC KUNREC; // record
  SQLCA SQLCA; // record
  SR2REC SR2REC; // record
  SRWREC SRWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TF1REC TF1REC; // record
  TF7REC TF7REC; // record
  TIWREC TIWREC; // record
  VAZCTN01 VAZCTN01; // record
  VAZHDR01 VAZHDR01; // record
  VAZORD01 VAZORD01; // record
  WAZ1000 WAZ1000; // record
  WAZ1010 WAZ1010; // record
  XX0XW01 XX0XW01; // record
  XXAZW02 XXAZW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XWHTBL {deleteAfterUse = yes}; // table
  use XAZSTBL {deleteAfterUse = yes}; // table
  use AZ0AM.AZ0AM001,  // forms
      AZ0AM.XXAZM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    AZ0A000: AZ0A000();

    goto AZ0A001; /* mainline process*/

    AZ0A001: AZ0A001();
    goto AZ0A001; /* main process loop*/
  end // end main
end // end AZ0A

// Builds data - Select Criteria
Function AZ0A-BUILD-DATA()

   /* select all the ASNs for criteria entered on AZ0A screen.*/
   /* write to temporary storage record (temp storage 1) for*/
   /* each map full of ASNs*/

  XSAZT1P(); /* purge temp storage to start clean*/

   /* get all the ASNS for the selected criteria*/

  AZ0AS11-SEL-CRIT();

end // end AZ0A-BUILD-DATA

// EDIT MAP FIELDS
Function AZ0A-EDIT-MAP()
  /* ***************************************************************/
  /* CHECK FOR FASTPATH REQUEST                                 **/
  /* ***************************************************************/
  /*  */
  if (AZ0AM001.CATOAP != " ")

    COMMAREA.CATOAP = AZ0AM001.CATOAP;

    COMMAREA.CAITEM = AZ0AM001.CAITEM;

    AZWREC.AZWSYSKE = COMMAREA.CAITEM;

    COMMAREA.CAUSERA = AZWREC.AZWGROUP;

    XSAZT1P(); /* Purge TSQ*/

    XSEXIT(); /* check security/xfer*/

    set AZ0AM001.CATOAP cursor, bold;

    AZ0AM001.CAMSG = COMMAREA.CAMSG; /* security fail*/

    COMMAREA.CATOAP = " ";

    AZWREC.AZWERRFL = "Y";

    return;

  end
  /*  */
  /* ***************************************************************/
  /* Determine if anything was entered on the screen            **/
  /* ***************************************************************/
  /*  */
  AZ0AW01.AZ0AW-VALUE-ENTERED = "N";

  if (AZ0AM001.AZ-ASN-STAT-CD[1] != " "
   || AZ0AM001.AZ-ASN-STAT-CD[2] != " "
   || AZ0AM001.AZ-ASN-STAT-CD[3] != " "
   || AZ0AM001.AZ-ASN-STAT-CD[4] != " "
   || AZ0AM001.AZ-ASN-STAT-CD[5] != " "
   || AZ0AM001.AZ-ASN-STAT-CD[6] != " "
   || AZ0AM001.PK-BILL-OF-LADING != 0
   || AZ0AM001.PK-BOL-SUB-ALPHA != " "
   || AZ0AM001.PK-PICK-SCHED-NBR != 0
   || AZ0AM001.SR-PICK-STAT-FR-DT != 0
   || AZ0AM001.SR-PICK-STAT-TO-DT != 0
   || AZ0AM001.PK-SHPMT-FR-DT != 0
   || AZ0AM001.PK-SHPMT-TO-DT != 0
   || AZ0AM001.AZA-DNSB-DT != 0
   || AZ0AM001.OP-CUST-PO != " "
   || AZ0AM001.CU-CO-ID != 0
   || AZ0AM001.CU-STOR-ID != " "
   || AZ0AM001.XNX-DEPT-ID-XREF != " "
   || AZ0AM001.OP-CUST-ORD-ID != 0
   || AZ0AM001.OP-NIKE-ORD-ID != 0
   || AZ0AM001.TF-CARR-CD != " "
   || AZ0AM001.PK-SHP-SPUR-NBR != 0)

    AZ0AW01.AZ0AW-VALUE-ENTERED = "Y";

  end

  if (AZ0AW01.AZ0AW-VALUE-ENTERED == "N")

    set AZ0AM001.AZ-ASN-STAT-CD[1] bold, cursor;
    converseLib.validationFailed(070);
    exit stack;

  end
  /*  */
  /* ***************************************************************/
  /* CHECK FOR WAREHOUSE                                        **/
  /* ***************************************************************/
  /*  */
  AZ0ASEM-WHSE();

  if (AZWREC.AZWERRFL == "Y")

    return;

  end
  /*  */
  /* ***************************************************************/
  /* EDIT FOR MINIMUM DATA ENTERED                              **/
  /* ***************************************************************/
  /*  */
  if ((AZ0AM001.PK-BILL-OF-LADING == 0
   && AZ0AM001.PK-PICK-SCHED-NBR == 0
   && AZ0AM001.CU-CO-ID == 0
   && AZ0AM001.OP-CUST-ORD-ID == 0
   && AZ0AM001.TF-CARR-CD == " "))

    if (AZ0AM001.AZ-ASN-STAT-CD[1] == "?")
      if ((AZ0AM001.AZ-ASN-STAT-CD[2] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[3] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[4] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[5] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[6] != " "))
        set AZ0AM001.AZ-ASN-STAT-CD[1] bold, cursor;
        converseLib.validationFailed(076);
        exit stack;
      end
    end

    if (AZ0AM001.AZ-ASN-STAT-CD[2] == "?")
      if ((AZ0AM001.AZ-ASN-STAT-CD[1] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[3] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[4] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[5] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[6] != " "))
        set AZ0AM001.AZ-ASN-STAT-CD[2] bold, cursor;
        converseLib.validationFailed(076);
        exit stack;
      end
    end

    if (AZ0AM001.AZ-ASN-STAT-CD[3] == "?")
      if ((AZ0AM001.AZ-ASN-STAT-CD[1] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[2] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[4] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[5] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[6] != " "))
        set AZ0AM001.AZ-ASN-STAT-CD[3] bold, cursor;
        converseLib.validationFailed(076);
        exit stack;
      end
    end

    if (AZ0AM001.AZ-ASN-STAT-CD[4] == "?")
      if ((AZ0AM001.AZ-ASN-STAT-CD[1] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[2] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[3] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[5] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[6] != " "))
        set AZ0AM001.AZ-ASN-STAT-CD[4] bold, cursor;
        converseLib.validationFailed(076);
        exit stack;
      end
    end

    if (AZ0AM001.AZ-ASN-STAT-CD[5] == "?")
      if ((AZ0AM001.AZ-ASN-STAT-CD[1] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[2] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[3] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[4] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[6] != " "))
        set AZ0AM001.AZ-ASN-STAT-CD[5] bold, cursor;
        converseLib.validationFailed(076);
        exit stack;
      end
    end

    if (AZ0AM001.AZ-ASN-STAT-CD[6] == "?")
      if ((AZ0AM001.AZ-ASN-STAT-CD[1] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[2] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[3] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[4] != " "
       || AZ0AM001.AZ-ASN-STAT-CD[5] != " "))
        set AZ0AM001.AZ-ASN-STAT-CD[6] bold, cursor;
        converseLib.validationFailed(076);
        exit stack;
      end

    end
  end
  /*  */
  /* ***************************************************************/
  /* EDIT STATUS CODES                                          **/
  /* ***************************************************************/
  /*  */
  AZWREC.AZWERRFL = "N";

  AZ0ASEM-STAT-CODES();

  if (AZWREC.AZWERRFL == "Y")
    return;
  end
  /*  */
  /* ***************************************************************/
  /* EDIT BOL & BOL SUB                                         **/
  /* ***************************************************************/
  /*  */
  AZ0ASEM-BOL();

  if (AZWREC.AZWERRFL == "Y")
    return;
  end
  /*  */
  /* ***************************************************************/
  /* EDIT STATUS with schedule                                  **/
  /* ***************************************************************/
  /*  */
  AZ0ASEM-SCH();

  if (AZWREC.AZWERRFL == "Y")
    return;
  end
  /*  */
  /* ***************************************************************/
  /* EDIT SHIPMENT, PICKED, AND DNSB DATES                      **/
  /* ***************************************************************/
  /*  */
  AZ0ASEM-DT(); /* Edits being performed elsewhere*/

  if (AZWREC.AZWERRFL == "Y")
    return;
  end
  /*  */
  /* ***************************************************************/
  /* EDIT CUSTOMER, STORE, DEPT                                 **/
  /* ***************************************************************/
  /*  */
  AZ0ASEM-CUST();

  if (AZWREC.AZWERRFL == "Y")
    return;
  end
  /*  */
  /* ***************************************************************/
  /* EDIT CARRIER CODE                                          **/
  /* ***************************************************************/
  /*  */
  AZ0ASEM-CARRCD();

end // end AZ0A-EDIT-MAP

// Get data and load to TS Queue
Function AZ0A-SCAN1()

  AZWREC.AZWTSF1S = 1;

  AZ0AW01.AZ0AW-DATA-OK-FL = "Y";

  AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

  set AZAREC empty;

  AZ0AS-AZ1010-S1();

  AZ0AS-AZ1010-N1();

  if (SQLCA.VAGen_SQLCODE == 0)

    while (AZ0AW01.AZ0AW-WAZ1010-EOF-FL == "N")

      AZ0AS-SAVE-KEY();

      if (AZ0AW01.AZ0AW-DATA-OK-FL == "Y")
        AZ0AS-BLD-TMP-ST();
        AZWREC.AZWTSF1S = AZWREC.AZWTSF1S + 1;
      end
      if (AZWREC.AZWTSF1S > 12)
        XSAZT1A(); /* Write TS queue*/
        set AZAREC empty;
        AZWREC.AZWTSF1S = 1;
      end

      AZ0AS-AZ1010-N1();

      AZ0AS-DROP-N1-DUPS();
      AZ0AS-SAVE-KEY();

    end
    if (AZWREC.AZWTSF1S > 1)
      XSAZT1A(); /* Write last page of TS queue*/
      set AZAREC empty;
    end
    AZ0AS-AZ1010-C1();
  else
    AZ0AS-AZ1010-C1();
    converseLib.validationFailed(073); /* No data for selection*/
    exit stack;
  end
end // end AZ0A-SCAN1

// Get data and load to TS Queue
Function AZ0A-SCAN2()

  AZWREC.AZWTSF1S = 1;

  AZ0AW01.AZ0AW-DATA-OK-FL = "Y";

  AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

  set AZAREC empty;

  AZ0AS-AZ1010-S2();

  AZ0AS-AZ1010-N2();

  if (SQLCA.VAGen_SQLCODE == 0)

    AZ0AS-SAVE-KEY();

    while (AZ0AW01.AZ0AW-WAZ1010-EOF-FL == "N")

      AZ0AW01.AZ0AW-DATA-OK-FL = "Y";

      AZ0A-SCAN2-EDIT();

      if (AZ0AW01.AZ0AW-DATA-OK-FL == "Y")
        AZ0AS-BLD-TMP-ST();
        AZWREC.AZWTSF1S = AZWREC.AZWTSF1S + 1;
      end

      if (AZWREC.AZWTSF1S > 12)
        XSAZT1A(); /* Write TS queue*/
        set AZAREC empty;
        AZWREC.AZWTSF1S = 1;
      end

      AZ0AS-AZ1010-N2();

      AZ0AS-DROP-N2-DUPS();

      AZ0AS-SAVE-KEY();

    end
    if (AZWREC.AZWTSF1S > 1)
      XSAZT1A(); /* Write last page of TS queue*/
      set AZAREC empty;
    end
    AZ0AS-AZ1010-C2();
  else
    AZ0AS-AZ1010-C2();
    converseLib.validationFailed(073); /* No data for selection*/
    exit stack;
  end
end // end AZ0A-SCAN2

Function AZ0A-SCAN2-EDIT()
  if (AZ0AM001.OP-CUST-PO != " ") /* Check Cust Purch Ord*/
    if (AZ0AM001.OP-CUST-PO != WAZ1010.OP-CUST-PO)
      AZ0AW01.AZ0AW-DATA-OK-FL = "N";
    end
  end

  if (AZ0AM001.CU-CO-ID != 0) /* Check Customer*/
    if (AZ0AM001.CU-CO-ID != WAZ1010.CU-CO-ID)
      AZ0AW01.AZ0AW-DATA-OK-FL = "N";
    end
  end

  if (AZ0AW01.AZ0AW-CU-STOR-ID-FL == "Y")
    if (AZ0AW01.CU-STOR-ID != WAZ1010.CU-STOR-ID)
      AZ0AW01.AZ0AW-DATA-OK-FL = "N";
    end
  end

  if (AZ0AW01.AZ0AW-XNX-DEPT-ID-XREF-FL == "Y")
    if (AZ0AW01.XNX-DEPT-ID-XREF != WAZ1010.XNX-DEPT-ID-XREF)
      AZ0AW01.AZ0AW-DATA-OK-FL = "N";
    end
  end

  if (AZ0AM001.OP-CUST-ORD-ID != 0) /* Check Order ID*/
    if (AZ0AM001.OP-CUST-ORD-ID != WAZ1010.OP-CUST-ORD-ID)
      AZ0AW01.AZ0AW-DATA-OK-FL = "N";
    end
  end

  if (AZ0AM001.OP-NIKE-ORD-ID != 0) /* Check Order Sub*/
    if (AZ0AM001.OP-NIKE-ORD-ID != WAZ1010.OP-NIKE-ORD-ID)
      AZ0AW01.AZ0AW-DATA-OK-FL = "N";
    end
  end

end // end AZ0A-SCAN2-EDIT

// Get data and load to TS Queue
Function AZ0A-SCAN3()

  AZWREC.AZWTSF1S = 1;

  AZ0AW01.AZ0AW-DATA-OK-FL = "Y";

  AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

  set AZAREC empty;

  set AZAREC empty;

  AZ0AS-AZ1010-S3();

  AZ0AS-AZ1010-N3();

  if (SQLCA.VAGen_SQLCODE == 0)

    AZ0AS-SAVE-KEY();

    while (AZ0AW01.AZ0AW-WAZ1010-EOF-FL == "N")

      AZ0AW01.AZ0AW-DATA-OK-FL = "Y";

      AZ0A-SCAN3-EDIT();

      if (AZ0AW01.AZ0AW-DATA-OK-FL == "Y")
        AZ0AS-BLD-TMP-ST();
        AZWREC.AZWTSF1S = AZWREC.AZWTSF1S + 1;
      end
      if (AZWREC.AZWTSF1S > 12)
        XSAZT1A(); /* Write TS queue*/

        set AZAREC empty;

        AZWREC.AZWTSF1S = 1;

      end

      AZ0AS-AZ1010-N3();

      AZ0AS-DROP-N3-DUPS();
      AZ0AS-SAVE-KEY();

    end

    if (AZWREC.AZWTSF1S > 1)

      XSAZT1A(); /* Write last page of TS queue*/

      set AZAREC empty;

    end

    AZ0AS-AZ1010-C3();

  else

    AZ0AS-AZ1010-C3();

    converseLib.validationFailed(073); /* No data for selection*/

    exit stack;

  end
end // end AZ0A-SCAN3

Function AZ0A-SCAN3-EDIT()
  if (AZ0AM001.TF-CARR-CD != " ") /* Check Carrier Code*/
    if (AZ0AM001.TF-CARR-CD != WAZ1010.TF-CARR-CD)
      AZ0AW01.AZ0AW-DATA-OK-FL = "N";
    end
  end

  if (AZ0AM001.PK-SHP-SPUR-NBR != 0) /* Check Shipping Spur*/
    if (AZ0AM001.PK-SHP-SPUR-NBR != WAZ1010.PK-SHP-SPUR-NBR)
      AZ0AW01.AZ0AW-DATA-OK-FL = "N";
    end
  end

end // end AZ0A-SCAN3-EDIT

// Get data and load to TS Queue
Function AZ0A-SCAN4()

  AZWREC.AZWTSF1S = 1;

  AZ0AW01.AZ0AW-DATA-OK-FL = "Y";

  AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

  set AZAREC empty;

  AZ0AS-AZ1010-S4();

  AZ0AS-AZ1010-N4();

  if (SQLCA.VAGen_SQLCODE == 0)

    while (AZ0AW01.AZ0AW-WAZ1010-EOF-FL == "N")

      AZ0AS-SAVE-KEY();

      if (AZ0AW01.AZ0AW-DATA-OK-FL == "Y")
        AZ0AS-BLD-TMP-ST();
        AZWREC.AZWTSF1S = AZWREC.AZWTSF1S + 1;
      end
      if (AZWREC.AZWTSF1S > 12)
        XSAZT1A(); /* Write TS queue*/
        set AZAREC empty;
        AZWREC.AZWTSF1S = 1;
      end

      AZ0AS-AZ1010-N4();

      AZ0AS-DROP-N4-DUPS();
      AZ0AS-SAVE-KEY();

    end
    if (AZWREC.AZWTSF1S > 1)
      XSAZT1A(); /* Write last page of TS queue*/
      set AZAREC empty;
    end
    AZ0AS-AZ1010-C4();
  else
    AZ0AS-AZ1010-C4();
    converseLib.validationFailed(073); /* No data for selection*/
    exit stack;
  end
end // end AZ0A-SCAN4

// Get data and load to TS Queue
Function AZ0A-SCAN5()

  AZWREC.AZWTSF1S = 1;

  AZ0AW01.AZ0AW-DATA-OK-FL = "Y";

  AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

  set AZAREC empty;

  AZ0AS-AZ1010-S5();

  AZ0AS-AZ1010-N5();

  if (SQLCA.VAGen_SQLCODE == 0)

    while (AZ0AW01.AZ0AW-WAZ1010-EOF-FL == "N")

      AZ0AS-SAVE-KEY();

      if (AZ0AW01.AZ0AW-DATA-OK-FL == "Y")
        AZ0AS-BLD-TMP-ST();
        AZWREC.AZWTSF1S = AZWREC.AZWTSF1S + 1;
      end
      if (AZWREC.AZWTSF1S > 12)
        XSAZT1A(); /* Write TS queue*/
        set AZAREC empty;
        AZWREC.AZWTSF1S = 1;
      end

      AZ0AS-AZ1010-N5();

      AZ0AS-DROP-N5-DUPS();
      AZ0AS-SAVE-KEY();

    end
    if (AZWREC.AZWTSF1S > 1)
      XSAZT1A(); /* Write last page of TS queue*/
      set AZAREC empty;
    end
    AZ0AS-AZ1010-C5();
  else
    AZ0AS-AZ1010-C5();
    converseLib.validationFailed(073); /* No data for selection*/
    exit stack;
  end
end // end AZ0A-SCAN5

// Get data and load to TS Queue
Function AZ0A-SCAN6()

  AZWREC.AZWTSF1S = 1;

  AZ0AW01.AZ0AW-DATA-OK-FL = "Y";

  AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

  set AZAREC empty;

  AZ0AS-AZ1010-S6();

  AZ0AS-AZ1010-N6();

  if (SQLCA.VAGen_SQLCODE == 0)

    while (AZ0AW01.AZ0AW-WAZ1010-EOF-FL == "N")

      AZ0AS-SAVE-KEY();

      if (AZ0AW01.AZ0AW-DATA-OK-FL == "Y")
        AZ0AS-BLD-TMP-ST();
        AZWREC.AZWTSF1S = AZWREC.AZWTSF1S + 1;
      end

      if (AZWREC.AZWTSF1S > 12)
        XSAZT1A(); /* Write TS queue*/
        set AZAREC empty;
        AZWREC.AZWTSF1S = 1;
      end

      AZ0AS-AZ1010-N6();

      AZ0AS-DROP-N6-DUPS();
      AZ0AS-SAVE-KEY();

    end

    if (AZWREC.AZWTSF1S > 1)
      XSAZT1A(); /* Write last page of TS queue*/
      set AZAREC empty;
    end

    AZ0AS-AZ1010-C6();
  else
    AZ0AS-AZ1010-C6();
    converseLib.validationFailed(073); /* No data for selection*/
    exit stack;
  end
end // end AZ0A-SCAN6

// Get data and load to TS Queue
Function AZ0A-SCAN7()

  AZWREC.AZWTSF1S = 1;

  AZ0AW01.AZ0AW-DATA-OK-FL = "Y";

  AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

  set AZAREC empty;

  AZ0AS-AZ1010-S7();

  AZ0AS-AZ1010-N7();

  if (SQLCA.VAGen_SQLCODE == 0)

    while (AZ0AW01.AZ0AW-WAZ1010-EOF-FL == "N")

      AZ0AS-SAVE-KEY();

      if (AZ0AW01.AZ0AW-DATA-OK-FL == "Y")
        AZ0AS-BLD-TMP-ST();
        AZWREC.AZWTSF1S = AZWREC.AZWTSF1S + 1;
      end

      if (AZWREC.AZWTSF1S > 12)
        XSAZT1A(); /* Write TS queue*/
        set AZAREC empty;
        AZWREC.AZWTSF1S = 1;
      end

      AZ0AS-AZ1010-N7();

      AZ0AS-DROP-N7-DUPS();
      AZ0AS-SAVE-KEY();

    end

    if (AZWREC.AZWTSF1S > 1)
      XSAZT1A(); /* Write last page of TS queue*/
      set AZAREC empty;
    end

    AZ0AS-AZ1010-C7();
  else
    AZ0AS-AZ1010-C7();
    converseLib.validationFailed(073); /* No data for selection*/
    exit stack;
  end
end // end AZ0A-SCAN7

// main execute process
Function AZ0A000()

  set AZWREC empty;

  AZWREC.XWHCD = COMMAREA.XWHCD;

  AZWREC.AZ0AW-M001-XWH-WHSE-CD = COMMAREA.XWHCD;

  set AZ0AM001 empty;

  if (AZWREC.AZWINIT == "AZ0") /* coming in from AZ system*/
    AZ0AM001.CAMSG = AZWREC.CAMSG; /* format map message*/
    AZ0AM001.XWHCD = AZWREC.XWHCD;
  end

  AZWREC.AZWINIT = "AZ0";

  XSENTRY(); /* application entry validation*/

    /* set segmented trans id*/
  CAEZSAP = sysVar.transactionID;
  CAEZSG12 = "AZ";
  CAEZSG4 = "A";
  sysVar.transactionID = CAEZSAP;

  AZ0AS01(); /* initialize AZ0A application*/

  AZ0AS02(); /* build AZ0A map*/

   /* *************************************************************/
end // end AZ0A000

// converse / after process
Function AZ0A001()

  AZWREC.AZWER911 = "Y"; /* set -911 error flag on*/

  if (converseVar.validationMsgNum == 0) /* if no errors*/
    if (AZ0AM001.AZ-ASN-STAT-CD[1] == " "
     && AZ0AM001.AZ-ASN-STAT-CD[2] == " "
     && AZ0AM001.AZ-ASN-STAT-CD[3] == " "
     && AZ0AM001.AZ-ASN-STAT-CD[4] == " "
     && AZ0AM001.AZ-ASN-STAT-CD[5] == " "
     && AZ0AM001.AZ-ASN-STAT-CD[6] == " ")
      AZ0AM001.AZ-ASN-STAT-CD[1] = "* ";
    end
  end

  converseLib.clearScreen();
  
  converseVar.segmentedMode = 1;

  converse AZ0AM001 ;
  AZWREC.AZWERRFL = "N"; /* init error flag*/
  converseLib.validationFailed(0); /* init error msg*/

  if (converseVar.eventKey is enter)

    if (AZ0AM001.CATOAP != " "
    )
      COMMAREA.CATOAP = AZ0AM001.CATOAP;

      COMMAREA.CAITEM = AZ0AM001.CAITEM;

      AZWREC.AZWSYSKE = COMMAREA.CAITEM;

      COMMAREA.CAUSERA = AZWREC.AZWGROUP;

      XSAZT1P();

      XSEXIT();

      set AZ0AM001.CATOAP cursor, bold;

      AZ0AM001.CAMSG = COMMAREA.CAMSG;

      COMMAREA.CATOAP = " ";

      AZWREC.AZWERRFL = "Y";

      return;

    end

  end

  AZ0ASB5();

  if (converseVar.eventKey is enter)

    AZ0A124();

  end

  AZ0AM001.CAMSG = " "; /* init camsg*/

  AZ0ASPF(); /* edit pf keys*/

  AZ0AS04(); /* reset map attributes*/

  AZ0A-EDIT-MAP(); /* edit map*/

   /* update/build temp storage with selected criteria*/

  if (converseVar.eventKey is enter
   && AZWREC.AZWERRFL == "N") /* no errors*/
  /* AZ0ASEL;                       /* selection control*/
    AZ0A-BUILD-DATA(); /* select asn record*/
  end

  if (converseVar.eventKey is enter
   && AZWREC.AZWERRFL == "N")
    COMMAREA.CAUSERA = AZWREC.AZWGROUP; /* transfer data*/
    XSAZP03(); /* transfer to AZ0B*/
  end

end // end AZ0A001

// Check for ? by User
Function AZ0A124()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? STATUS CODE INQUIRY*/

     /* 1) If the user has enter a '?' in the status code*/
        /* field, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  AZ0AW-AZ-ASN-STAT-CD-IDX = 1;
  while (AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX <= 6)
    if (AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] == "?")
      if (AZ0AM001.CATOAP != " ")
        converseLib.validationFailed(062);
        AZWREC.AZWERRFL = "Y"; /* set error flag*/
        set AZ0AM001.CATOAP cursor, bold;
      else
        XPAZ001(); /* perform pop-up window initialize*/
        XXAZW02.XXAZWHDR = "                STATUS    "; /* heading*/

        while (XXAZW02.XXAZWEND == "N") /* until user hits enter*/
          XPAZP01(); /* perform Status code window*/
        end

         /* **********************************************************/
         /* *  If the pass index is greater than zero, use the      **/
         /* *  passed table index 'XX0XWPIX' to move the status     **/
         /* *  code and description to the map.                     **/
         /* **********************************************************/

        if (XXAZW02.XXAZWPIX > 0) /* if user selected a code*/
          AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] = XAZSTBL.XAZSTCD[XXAZWPIX];
        else
          AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] = " ";
        end

        converseLib.clearScreen();
         /* restore the original map*/
        AZWREC.AZWERRFL = "Y"; /* set error flag*/
        set AZ0AM001.PK-BILL-OF-LADING cursor, bold;
      end
    end
    AZ0AW-AZ-ASN-STAT-CD-IDX = AZ0AW-AZ-ASN-STAT-CD-IDX + 1;
  end


end // end AZ0A124

// Close 'C1' - AZ1010
Function AZ0AS-AZ1010-C1()

  set SQLCA empty;

  try
    call "AZ1010" ("C1", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010C1"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-C1   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-C1

// Close 'C2' - AZ1010
Function AZ0AS-AZ1010-C2()

  set SQLCA empty;

  try
    call "AZ1010" ("C2", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010C2"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-C2   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-C2

// Close 'C3' - AZ1010
Function AZ0AS-AZ1010-C3()

  set SQLCA empty;

  try
    call "AZ1010" ("C3", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010C3"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-C3   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-C3

// Close 'C4' - AZ1010
Function AZ0AS-AZ1010-C4()

  set SQLCA empty;

  try
    call "AZ1010" ("C4", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010C4"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-C4   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-C4

// Close 'C5' - AZ1010
Function AZ0AS-AZ1010-C5()

  set SQLCA empty;

  try
    call "AZ1010" ("C5", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010C5"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-C5   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-C5

// Close 'C6' - AZ1010
Function AZ0AS-AZ1010-C6()

  set SQLCA empty;

  try
    call "AZ1010" ("C6", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010C6"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-C6   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-C6

// Close 'C6' - AZ1010
Function AZ0AS-AZ1010-C7()

  set SQLCA empty;

  try
    call "AZ1010" ("C7", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010C7"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-C7   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-C7

// Fetch 'N1' - AZ1010
Function AZ0AS-AZ1010-N1()

  set SQLCA empty;

  try
    call "AZ1010" ("N1", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == +100)

      if (SQLCA.VAGen_SQLCODE == 0
      )
        AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

      else

        if (SQLCA.VAGen_SQLCODE == +100)

          AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "Y";

        end

      end

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "AZ1010N1"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-N1   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-N1

// Fetch 'N2' - AZ1010
Function AZ0AS-AZ1010-N2()

  set SQLCA empty;

  try
    call "AZ1010" ("N2", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == +100)

      if (SQLCA.VAGen_SQLCODE == 0
      )
        AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

      else

        if (SQLCA.VAGen_SQLCODE == +100)

          AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "Y";

        end

      end

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010N2"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-N2   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-N2

// Fetch 'N3' - AZ1010
Function AZ0AS-AZ1010-N3()

  set SQLCA empty;

  try
    call "AZ1010" ("N3", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == +100)

      if (SQLCA.VAGen_SQLCODE == 0
      )
        AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

      else

        if (SQLCA.VAGen_SQLCODE == +100)

          AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "Y";

        end

      end

      return;

    end

  end
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010N3"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-N3   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-N3

// Fetch 'N4' - AZ1010
Function AZ0AS-AZ1010-N4()

  set SQLCA empty;

  try
    call "AZ1010" ("N4", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == +100)

      if (SQLCA.VAGen_SQLCODE == 0
      )
        AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

      else

        if (SQLCA.VAGen_SQLCODE == +100)

          AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "Y";

        end

      end

      return;

    end

  end
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010N4"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-N4   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-N4

// Fetch 'N5' - AZ1010
Function AZ0AS-AZ1010-N5()

  set SQLCA empty;

  try
    call "AZ1010" ("N5", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == +100)

      if (SQLCA.VAGen_SQLCODE == 0
      )
        AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

      else

        if (SQLCA.VAGen_SQLCODE == +100)

          AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "Y";

        end

      end

      return;

    end

  end
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010N5"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-N5   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-N5

// Fetch 'N6' - AZ1010
Function AZ0AS-AZ1010-N6()

  set SQLCA empty;

  try
    call "AZ1010" ("N6", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == +100)

      if (SQLCA.VAGen_SQLCODE == 0
      )
        AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

      else

        if (SQLCA.VAGen_SQLCODE == +100)

          AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "Y";

        end

      end

      return;

    end

  end
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010N6"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-N6   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-N6

// Fetch 'N6' - AZ1010
Function AZ0AS-AZ1010-N7()

  set SQLCA empty;

  try
    call "AZ1010" ("N7", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == +100)

      if (SQLCA.VAGen_SQLCODE == 0
      )
        AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "N";

      else

        if (SQLCA.VAGen_SQLCODE == +100)

          AZ0AW01.AZ0AW-WAZ1010-EOF-FL = "Y";

        end

      end

      return;

    end

  end
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010N7"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-N7   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-N7

// Select 's1' - AZ1010
Function AZ0AS-AZ1010-S1()

  set SQLCA empty;

  try
    call "AZ1010" ("S1", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010S1"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-S1   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-S1

// Select 's2' - AZ1010
Function AZ0AS-AZ1010-S2()

  set SQLCA empty;

  try
    call "AZ1010" ("S2", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010S2"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-S2   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-S2

// Select 's3' - AZ1010
Function AZ0AS-AZ1010-S3()

  set SQLCA empty;

  try
    call "AZ1010" ("S3", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010S3"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-S3   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-S3

// Select 's4' - AZ1010
Function AZ0AS-AZ1010-S4()

  set SQLCA empty;

  try
    call "AZ1010" ("S4", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010S4"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-S4   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-S4

// Select 's5' - AZ1010
Function AZ0AS-AZ1010-S5()

  set SQLCA empty;

  try
    call "AZ1010" ("S5", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010S5"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-S5   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-S5

// Select 's6' - AZ1010
Function AZ0AS-AZ1010-S6()

  set SQLCA empty;

  try
    call "AZ1010" ("S6", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010S6"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-S6   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-S6

// Select 's6' - AZ1010
Function AZ0AS-AZ1010-S7()

  set SQLCA empty;

  try
    call "AZ1010" ("S7", SQLCA, WAZ1010) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SRWREC.XXXERRID = "WAZ1010S6"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(134); /* Data in use by another appl*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(124); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SRWREC.XXXERRID; /* Process name*/
  TA1REC.TA1LOC = "AZ0AS-AZ1010-S7   "; /* Description*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit do display map*/


end // end AZ0AS-AZ1010-S7

// build azf1 - ASNs
Function AZ0AS-BLD-TMP-ST()

   /* Load temp storage 1 - azf1*/

  AZAREC.AZAMSEL[AZWTSF1S] = " ";

  AZAREC.PK-BILL-OF-LADING[AZWTSF1S] = WAZ1010.PK-BILL-OF-LADING;

  AZAREC.PK-BOL-SUB-NBR[AZWTSF1S] = WAZ1010.PK-BOL-SUB-NBR;

  AZAREC.AZ0AW-EDITED-BOL[AZWTSF1S] = WAZ1010.PK-BILL-OF-LADING;

  AZAREC.AZ0AW-EDITED-PERIOD[AZWTSF1S] = ".";

  AZAREC.AZ0AW-EDITED-SUB[AZWTSF1S] = WAZ1010.PK-BOL-SUB-NBR;

  AZAREC.SR-PICK-STAT-DT[AZWTSF1S] = WAZ1010.AZ0AW-PICK-STAT-FR-DT;

  AZAREC.PK-SHPMT-RLSD-DATE[AZWTSF1S] = WAZ1010.AZ0AW-SHPMT-RLSD-FR-DT;

  AZAREC.OP-DNT-SHIP-BFR-DT[AZWTSF1S] = WAZ1010.AZ0AW-DNSB-DT;

  AZAREC.SR-STOP-ORD-SHP-FL[AZWTSF1S] = WAZ1010.SR-STOP-ORD-SHP-FL;

  AZAREC.TF-CARR-CD[AZWTSF1S] = WAZ1010.TF-CARR-CD;

  AZWREC.AZW-NON-FREIGHT-CARR-FL = "N";

  set TF7REC empty;

  TF7REC.TF7CARCD = WAZ1010.TF-CARR-CD;

  AZ0AS-VCARR002-SU();

  if (TF7REC.TF7FCARF == "N")

    AZWREC.AZW-NON-FREIGHT-CARR-FL = "Y";

  end

  AZAREC.SR-PICK-STAT-FL[AZWTSF1S] = WAZ1010.SR-PICK-STAT-FL;

  AZ0AS11-SREC-STAT(); /* Call AZ1000, Determine status*/

  AZWREC.AZWDT8 = 0; /* Set default to 0*/

  if (WAZ1010.AZ-ASN-STAT-CD[1] == "RE")

    AZWREC.AZWDT8 = WAZ1010.AZ0AW-PICK-STAT-FR-DT;

    if (AZWREC.AZW-NON-FREIGHT-CARR-FL == "Y")

      AZWREC.AZW-STAT-OK-TO-RLSE-ALL-FL = "Y";

    end

  else

    if (WAZ1010.AZ-ASN-STAT-CD[1] == "HD")

      AZWREC.AZWDT8 = WAZ1010.AZ0AW-DNSB-DT;

      if (AZWREC.AZW-NON-FREIGHT-CARR-FL == "Y")

        AZWREC.AZW-STAT-OK-TO-RLSE-ALL-FL = "Y";

      end

    else

      if (WAZ1010.AZ-ASN-STAT-CD[1] == "ST"
       || WAZ1010.AZ-ASN-STAT-CD[1] == "RL")

        AZWREC.AZWDT8 = WAZ1010.AZ0AW-SHPMT-RLSD-FR-DT;

      end

    end

  end

  XSAZDCM(); /* convert azWREC.AZWDT8 to MMDDYY FORMAT*/

  AZAREC.AZASHPDT[AZWTSF1S] = AZWREC.AZWDT6;

  AZAREC.AZ-ASN-STAT-CD[AZWTSF1S] = WAZ1010.AZ-ASN-STAT-CD;

  AZAREC.PK-SHP-SPUR-NBR[AZWTSF1S] = WAZ1010.PK-SHP-SPUR-NBR;

  if (WAZ1010.CU-DISTCTR-CO-ID != 0)

    AZAREC.CU-CO-ID[AZWTSF1S] = WAZ1010.CU-DISTCTR-CO-ID;

  else

    AZAREC.CU-CO-ID[AZWTSF1S] = WAZ1010.CU-CO-ID;

  end

  AZAREC.SR-TOT-NBR-CARTONS[AZWTSF1S] = WAZ1010.SR-TOT-NBR-CARTONS;

  AZAREC.AZ-TOT-SHPMT-WT[AZWTSF1S] = WAZ1010.AZ-TOT-SHPMT-WT;

end // end AZ0AS-BLD-TMP-ST

// Edit Ship Dates
Function AZ0AS-DB2-DT()
  if (AZ0AW01.AZ0AW-MAP-YY > 50
  )
    AZ0AW01.AZ0AW-NUM-CC = 19;

  else
    AZ0AW01.AZ0AW-NUM-CC = 20;

  end

  AZ0AW01.AZ0AW-NUM-MM = AZ0AW01.AZ0AW-MAP-MM;
  AZ0AW01.AZ0AW-NUM-DD = AZ0AW01.AZ0AW-MAP-DD;
  AZ0AW01.AZ0AW-NUM-YY = AZ0AW01.AZ0AW-MAP-YY;
  AZ0AW01.AZ0AW-NUM-FILLER = 0;
end // end AZ0AS-DB2-DT

// drop duplicates
Function AZ0AS-DROP-N1-DUPS()
  AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "Y";

  while (AZ0AW01.AZ0AW-REPEAT-LOOP-FL != "N")

    if ((WAZ1010.PK-BILL-OF-LADING
     == AZ0AW01.AZ0AW-SAVED-BILL-OF-LADING
     && WAZ1010.PK-BOL-SUB-NBR
     == AZ0AW01.AZ0AW-SAVED-BOL-SUB-NBR)
     && AZ0AW01.AZ0AW-WAZ1010-EOF-FL != "Y")

      AZ0AS-AZ1010-N1();

    else

      AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "N";

    end

  end

end // end AZ0AS-DROP-N1-DUPS

// Edit Ship Dates
Function AZ0AS-DROP-N2-DUPS()
  AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "Y";

  while (AZ0AW01.AZ0AW-REPEAT-LOOP-FL != "N")

    if ((WAZ1010.PK-BILL-OF-LADING
     == AZ0AW01.AZ0AW-SAVED-BILL-OF-LADING
     && WAZ1010.PK-BOL-SUB-NBR
     == AZ0AW01.AZ0AW-SAVED-BOL-SUB-NBR)
     && AZ0AW01.AZ0AW-WAZ1010-EOF-FL != "Y")

      AZ0AS-AZ1010-N2();

    else

      AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "N";

    end

  end

end // end AZ0AS-DROP-N2-DUPS

// Edit Ship Dates
Function AZ0AS-DROP-N3-DUPS()
  AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "Y";

  while (AZ0AW01.AZ0AW-REPEAT-LOOP-FL != "N")

    if ((WAZ1010.PK-BILL-OF-LADING
     == AZ0AW01.AZ0AW-SAVED-BILL-OF-LADING
     && WAZ1010.PK-BOL-SUB-NBR
     == AZ0AW01.AZ0AW-SAVED-BOL-SUB-NBR)
     && AZ0AW01.AZ0AW-WAZ1010-EOF-FL != "Y")

      AZ0AS-AZ1010-N3();

    else

      AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "N";

    end

  end

end // end AZ0AS-DROP-N3-DUPS

// Edit Ship Dates
Function AZ0AS-DROP-N4-DUPS()
  AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "Y";

  while (AZ0AW01.AZ0AW-REPEAT-LOOP-FL != "N")

    if ((WAZ1010.PK-BILL-OF-LADING
     == AZ0AW01.AZ0AW-SAVED-BILL-OF-LADING
     && WAZ1010.PK-BOL-SUB-NBR
     == AZ0AW01.AZ0AW-SAVED-BOL-SUB-NBR)
     && AZ0AW01.AZ0AW-WAZ1010-EOF-FL != "Y")

      AZ0AS-AZ1010-N4();

    else

      AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "N";

    end

  end

end // end AZ0AS-DROP-N4-DUPS

// Edit Ship Dates
Function AZ0AS-DROP-N5-DUPS()
  AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "Y";

  while (AZ0AW01.AZ0AW-REPEAT-LOOP-FL != "N")

    if ((WAZ1010.PK-BILL-OF-LADING
     == AZ0AW01.AZ0AW-SAVED-BILL-OF-LADING
     && WAZ1010.PK-BOL-SUB-NBR
     == AZ0AW01.AZ0AW-SAVED-BOL-SUB-NBR)
     && AZ0AW01.AZ0AW-WAZ1010-EOF-FL != "Y")

      AZ0AS-AZ1010-N5();

    else

      AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "N";

    end

  end

end // end AZ0AS-DROP-N5-DUPS

// Edit Ship Dates
Function AZ0AS-DROP-N6-DUPS()
  AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "Y";

  while (AZ0AW01.AZ0AW-REPEAT-LOOP-FL != "N")

    if ((WAZ1010.PK-BILL-OF-LADING
     == AZ0AW01.AZ0AW-SAVED-BILL-OF-LADING
     && WAZ1010.PK-BOL-SUB-NBR
     == AZ0AW01.AZ0AW-SAVED-BOL-SUB-NBR)
     && AZ0AW01.AZ0AW-WAZ1010-EOF-FL != "Y")

      AZ0AS-AZ1010-N6();

    else

      AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "N";

    end

  end

end // end AZ0AS-DROP-N6-DUPS

// Edit Ship Dates
Function AZ0AS-DROP-N7-DUPS()
  AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "Y";

  while (AZ0AW01.AZ0AW-REPEAT-LOOP-FL != "N")

    if ((WAZ1010.PK-BILL-OF-LADING
     == AZ0AW01.AZ0AW-SAVED-BILL-OF-LADING
     && WAZ1010.PK-BOL-SUB-NBR
     == AZ0AW01.AZ0AW-SAVED-BOL-SUB-NBR)
     && AZ0AW01.AZ0AW-WAZ1010-EOF-FL != "Y")

      AZ0AS-AZ1010-N7();

    else

      AZ0AW01.AZ0AW-REPEAT-LOOP-FL = "N";

    end

  end

end // end AZ0AS-DROP-N7-DUPS

Function AZ0AS-IO0280-SN()
end // end AZ0AS-IO0280-SN

Function AZ0AS-IO0280-SS()
end // end AZ0AS-IO0280-SS

Function AZ0AS-IO0860-S()
end // end AZ0AS-IO0860-S

// SAVE DISTCTR, AND PICK DATE
Function AZ0AS-SAVE-KEY()
  AZ0AW01.AZ0AW-SAVED-BILL-OF-LADING = WAZ1010.PK-BILL-OF-LADING;

  AZ0AW01.AZ0AW-SAVED-BOL-SUB-NBR = WAZ1010.PK-BOL-SUB-NBR;

  AZ0AW01.AZ0AW-SAVED-DISTCTR-CO-ID = WAZ1010.CU-DISTCTR-CO-ID;

  AZ0AW01.AZ0AW-SAVED-CU-CO-ID = WAZ1010.CU-CO-ID;

end // end AZ0AS-SAVE-KEY

// Select Unique - VCARR002 Table
Function AZ0AS-VCARR002-SU()

   /* ----------------------------------------------------------------*/
   /* Select the VCARR002 Table to retrieve Carrier type*/
   /* ----------------------------------------------------------------*/

  set SQLCA empty;

  try
    call "VCARR002" ("S ", SQLCA, TF7REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to previous process*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return; /* SQL code 100 indicate other*/
    end /* Selection Criteria*/
  end
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(061); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(057); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMAP = "AZ0A"; /* Program application*/
  TA1REC.TA1LOCAT[1] = "AZ0AS-VCARR002-SU"; /* Program number*/
  TA1REC.TA1LOCAT[2] = "SELECT UNIQUE TABLE ROWS";
  TA1REC.TA1DBASE = "DPICK   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCARR002"; /* Table view name*/
  TA1REC.TA1TBLKE = TF7REC.TF7KEYS; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

end // end AZ0AS-VCARR002-SU

// INITIALIZE AZ0A APPLICATION
Function AZ0AS01()

  if (COMMAREA.CAFROMAP == "AZ0B")

    AZWREC.AZWGROUP = COMMAREA.CAUSERA; /* Restore work record*/

  end

  if (AZWREC.AZ0AW-M001-XWH-WHSE-CD == " ")

    AZWREC.AZ0AW-M001-XWH-WHSE-CD = COMMAREA.XWHCD;

  end

  set VAZHDR01 empty;
  set VAZORD01 empty;
  set VAZCTN01 empty;
  set AZAREC empty;
  set AZFREC empty;
  set SQLCA empty;
  set ERRSQLCA empty;
  set TAEREC empty;
  set TA1REC empty;
  set TA2REC empty;
  set TA5REC empty;
  set AZ0AW01 empty;

  AZWREC.AZWCDATE = VGVar.currentShortGregorianDate; /* current date*/

  set XX0XW01 empty;
  XX0XS01();
  AZWREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  AZWREC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  TA1REC.TA1MAP = "AZ0AM001"; /* format ta1rec w/ map name*/

  AZWREC.AZW-RELEASE-ALL-FL = "N";

end // end AZ0AS01

// BUILD AZ0A MAP
Function AZ0AS02()

  AZ0AS03(); /* move fields to map*/

  AZ0AS04(); /* reset field attributes*/


end // end AZ0AS02

// MOVE FIELDS TO MAP
Function AZ0AS03()
  AZ0AM001.AZ0AMPRC = "AZ0A000";

  AZ0AM001.AZWCDATE = AZWREC.AZWCDATE;

  AZ0AM001.XWHCD = AZWREC.AZ0AW-M001-XWH-WHSE-CD;

  AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX = 1;
  while (AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX <= 6)
    AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] = AZWREC.AZ0AW-M001-AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX];
    AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX = AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX + 1;
  end

  AZ0AM001.PK-BILL-OF-LADING = AZWREC.AZ0AW-M001-PK-BILL-OF-LADING;

  AZ0AM001.PK-BOL-SUB-ALPHA = AZWREC.AZ0AW-M001-PK-BOL-SUB-NBR;

  AZ0AM001.PK-PICK-SCHED-NBR = AZWREC.AZ0AW-M001-PK-PICK-SCHED-NBR;

  AZ0AM001.SR-PICK-STAT-FR-DT = AZWREC.AZ0AW-M001-SR-PICK-STAT-FR-DT;

  AZ0AM001.SR-PICK-STAT-TO-DT = AZWREC.AZ0AW-M001-SR-PICK-STAT-TO-DT;

  AZ0AM001.PK-SHPMT-FR-DT = AZWREC.AZ0AW-M001-PK-SHPMT-FR-DT;

  AZ0AM001.PK-SHPMT-TO-DT = AZWREC.AZ0AW-M001-PK-SHPMT-TO-DT;

  AZ0AM001.AZA-DNSB-DT = AZWREC.AZ0AW-M001-AZA-DNSB-DT;

  AZ0AM001.TF-CARR-CD = AZWREC.AZ0AW-M001-TF-CARR-CD;

  AZ0AM001.PK-SHP-SPUR-NBR = AZWREC.AZ0AW-M001-PK-SHP-SPUR-NBR;

  AZ0AM001.OP-CUST-PO = AZWREC.AZ0AW-M001-OP-CUST-PO;

  AZ0AM001.CU-CO-ID = AZWREC.AZ0AW-M001-CU-CO-ID;

  AZ0AM001.CU-STOR-ID = AZWREC.AZ0AW-M001-CU-STOR-ID;

  AZ0AM001.XNX-DEPT-ID-XREF = AZWREC.AZ0AW-M001-XNX-DEPT-ID-XREF;

  AZ0AM001.OP-CUST-ORD-ID = AZWREC.AZ0AW-M001-OP-CUST-ORD-ID;

  AZ0AM001.OP-NIKE-ORD-ID = AZWREC.AZ0AW-M001-OP-NIKE-ORD-ID;

end // end AZ0AS03

// RESET ALL MAP FIELD ATTRIBUTES
Function AZ0AS04()

  set AZ0AM001.XWHCD initialAttributes;
  set AZ0AM001.AZ-ASN-STAT-CD[1] initialAttributes;
  set AZ0AM001.AZ-ASN-STAT-CD[2] initialAttributes;
  set AZ0AM001.AZ-ASN-STAT-CD[3] initialAttributes;
  set AZ0AM001.AZ-ASN-STAT-CD[4] initialAttributes;
  set AZ0AM001.AZ-ASN-STAT-CD[5] initialAttributes;
  set AZ0AM001.AZ-ASN-STAT-CD[6] initialAttributes;
  set AZ0AM001.PK-BILL-OF-LADING initialAttributes;
  set AZ0AM001.PK-BOL-SUB-ALPHA initialAttributes;
  set AZ0AM001.PK-PICK-SCHED-NBR initialAttributes;
  set AZ0AM001.SR-PICK-STAT-FR-DT initialAttributes;
  set AZ0AM001.SR-PICK-STAT-TO-DT initialAttributes;
  set AZ0AM001.PK-SHPMT-FR-DT initialAttributes;
  set AZ0AM001.PK-SHPMT-TO-DT initialAttributes;
  set AZ0AM001.AZA-DNSB-DT initialAttributes;
  set AZ0AM001.TF-CARR-CD initialAttributes;
  set AZ0AM001.PK-SHP-SPUR-NBR initialAttributes;
  set AZ0AM001.OP-CUST-PO initialAttributes;
  set AZ0AM001.CU-CO-ID initialAttributes;
  set AZ0AM001.CU-STOR-ID initialAttributes;
  set AZ0AM001.XNX-DEPT-ID-XREF initialAttributes;
  set AZ0AM001.OP-CUST-ORD-ID initialAttributes;
  set AZ0AM001.OP-NIKE-ORD-ID initialAttributes;

   /* If transferred in from SR0G (Balance Schedule) protect certain*/
   /* fields from being enterable*/

  if (COMMAREA.CAFROMAP == "SR0G")
    set AZ0AM001.PK-BILL-OF-LADING skip, noHighLight;
    set AZ0AM001.PK-BOL-SUB-ALPHA skip, noHighLight;
    set AZ0AM001.SR-PICK-STAT-FR-DT skip, noHighLight;
    set AZ0AM001.SR-PICK-STAT-TO-DT skip, noHighLight;
    set AZ0AM001.PK-SHPMT-FR-DT skip, noHighLight;
    set AZ0AM001.PK-SHPMT-TO-DT skip, noHighLight;
    set AZ0AM001.AZA-DNSB-DT skip, noHighLight;
    set AZ0AM001.TF-CARR-CD skip, noHighLight;
    set AZ0AM001.PK-SHP-SPUR-NBR skip, noHighLight;
    set AZ0AM001.OP-CUST-PO skip, noHighLight;
    set AZ0AM001.CU-CO-ID skip, noHighLight;
    set AZ0AM001.CU-STOR-ID skip, noHighLight;
    set AZ0AM001.XNX-DEPT-ID-XREF skip, noHighLight;
    set AZ0AM001.OP-CUST-ORD-ID skip, noHighLight;
    set AZ0AM001.OP-NIKE-ORD-ID skip, noHighLight;
  end

end // end AZ0AS04

// Select data - from Criteria
Function AZ0AS11-SEL-CRIT()
   /* -----------------------------------------------------------------*/
   /* Determine hierarchy of Selection Criteria by evaluating*/
   /* screen data entered.*/
   /* -----------------------------------------------------------------*/

  set WAZ1010 empty;

  /* -------------------------------------------------------------------*/
  /* Move map fields to WAZ1010 passing record*/
  /* -------------------------------------------------------------------*/

  WAZ1010.XWH-WHSE-CD = AZ0AM001.XWHCD;

  AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX = 1;

  while (AZ0AW-AZ-ASN-STAT-CD-IDX <= 6)

    WAZ1010.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] = AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX];

    AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX = AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX + 1;

  end

  if (AZ0AM001.PK-BILL-OF-LADING == 0
  )
    WAZ1010.PK-BILL-OF-LADING = -1;

  else
    WAZ1010.PK-BILL-OF-LADING = AZ0AM001.PK-BILL-OF-LADING;

  end

  if (AZ0AW01.AZ0AW-PK-BOL-SUB-NBR-FL == "Y")

    WAZ1010.PK-BOL-SUB-NBR = AZ0AW01.AZ0AW-PK-BOL-SUB-NBR-WK-NUM;

  else

    WAZ1010.PK-BOL-SUB-NBR = -1;

  end

  if (AZ0AM001.PK-PICK-SCHED-NBR == 0)

    WAZ1010.PK-PICK-SCHED-NBR = -1;

  else

    WAZ1010.PK-PICK-SCHED-NBR = AZ0AM001.PK-PICK-SCHED-NBR;

  end

  if (AZ0AM001.SR-PICK-STAT-FR-DT == 0
   && AZ0AM001.SR-PICK-STAT-TO-DT == 0)

    WAZ1010.AZ0AW-PICK-STAT-FR-DT = 0;

    WAZ1010.AZ0AW-PICK-STAT-TO-DT = +21001231;

  else

    if (AZ0AM001.SR-PICK-STAT-FR-DT > 0
     && AZ0AM001.SR-PICK-STAT-TO-DT == 0)

      AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.SR-PICK-STAT-FR-DT;

      AZ0AS-DB2-DT();

      WAZ1010.AZ0AW-PICK-STAT-FR-DT = AZ0AW01.AZ0AW-NUM-DATE;

      WAZ1010.AZ0AW-PICK-STAT-TO-DT = AZ0AW01.AZ0AW-NUM-DATE;

    else

      AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.SR-PICK-STAT-FR-DT;

      AZ0AS-DB2-DT();

      WAZ1010.AZ0AW-PICK-STAT-FR-DT = AZ0AW01.AZ0AW-NUM-DATE;

      AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.SR-PICK-STAT-TO-DT;

      AZ0AS-DB2-DT();

      WAZ1010.AZ0AW-PICK-STAT-TO-DT = AZ0AW01.AZ0AW-NUM-DATE;

    end

  end

  if (AZ0AM001.PK-SHPMT-FR-DT == 0
   && AZ0AM001.PK-SHPMT-TO-DT == 0)

    WAZ1010.AZ0AW-SHPMT-RLSD-FR-DT = 0;

    WAZ1010.AZ0AW-SHPMT-RLSD-TO-DT = +21001231;

  else

    if (AZ0AM001.PK-SHPMT-FR-DT > 0
     && AZ0AM001.PK-SHPMT-TO-DT == 0)

      AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.PK-SHPMT-FR-DT;

      AZ0AS-DB2-DT();

      WAZ1010.AZ0AW-SHPMT-RLSD-FR-DT = AZ0AW01.AZ0AW-NUM-DATE;

      WAZ1010.AZ0AW-SHPMT-RLSD-TO-DT = WAZ1010.AZ0AW-SHPMT-RLSD-FR-DT;

    else

      AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.PK-SHPMT-FR-DT;

      AZ0AS-DB2-DT();

      WAZ1010.AZ0AW-SHPMT-RLSD-FR-DT = AZ0AW01.AZ0AW-NUM-DATE;

      AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.PK-SHPMT-TO-DT;

      AZ0AS-DB2-DT();

      WAZ1010.AZ0AW-SHPMT-RLSD-TO-DT = AZ0AW01.AZ0AW-NUM-DATE;

    end

  end

  if (AZ0AM001.AZA-DNSB-DT == 0)

    WAZ1010.AZ0AW-DNSB-DT = -1;

  else

    AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.AZA-DNSB-DT;

    AZ0AS-DB2-DT();
    WAZ1010.AZ0AW-DNSB-DT = AZ0AW01.AZ0AW-NUM-DATE;

  end

  if (AZ0AM001.TF-CARR-CD == "    ")

    WAZ1010.TF-CARR-CD = "****";

  else

    WAZ1010.TF-CARR-CD = AZ0AM001.TF-CARR-CD;

  end

  if (AZ0AM001.PK-SHP-SPUR-NBR == 0)

    WAZ1010.PK-SHP-SPUR-NBR = -1;

  else

    WAZ1010.PK-SHP-SPUR-NBR = AZ0AM001.PK-SHP-SPUR-NBR;

  end

  /* <====== 25 SPACES ======>*/
  if (AZ0AM001.OP-CUST-PO == "                         ")

  /* <====== 25 *'S    ======>*/
    WAZ1010.OP-CUST-PO = "*************************";

  else

    WAZ1010.OP-CUST-PO = AZ0AM001.OP-CUST-PO;

  end

  if (AZ0AM001.CU-CO-ID > 0)

    WAZ1010.CU-CO-ID = AZ0AM001.CU-CO-ID;

  else

    WAZ1010.CU-CO-ID = -1;

  end

  if (AZ0AW01.AZ0AW-CU-STOR-ID-FL == "Y")

    WAZ1010.CU-STOR-ID = AZ0AW01.AZ0AW-CU-STOR-ID-WK-NUM;

  else

    WAZ1010.CU-STOR-ID = -1;

  end

  if (AZ0AW01.AZ0AW-XNX-DEPT-ID-XREF-FL == "Y")

    WAZ1010.XNX-DEPT-ID-XREF = AZ0AW01.AZ0AW-XNX-DEPT-ID-WK-NUM;

  else

    WAZ1010.XNX-DEPT-ID-XREF = -1;

  end

  if (AZ0AM001.OP-CUST-ORD-ID == 0)

    WAZ1010.OP-CUST-ORD-ID = -1;

  else

    WAZ1010.OP-CUST-ORD-ID = AZ0AM001.OP-CUST-ORD-ID;

  end

  if (AZ0AW01.AZ0AW-OP-NIKE-ORD-ID-FL == "Y")

    WAZ1010.OP-NIKE-ORD-ID = AZ0AW01.AZ0AW-OP-NIKE-ORD-ID-WK-NUM;

  else

    WAZ1010.OP-NIKE-ORD-ID = -1;

  end

  /* -------------------------------------------------------------------*/
  /* Determine which scan to execute to retrieve AZ/SR data*/
  /* -------------------------------------------------------------------*/

  AZWREC.AZW-NON-FREIGHT-CARR-FL = "N";

  AZWREC.AZW-STAT-OK-TO-RLSE-ALL-FL = "N";

  if (AZ0AM001.PK-BILL-OF-LADING != 0)
    AZ0A-SCAN1();
  else
    if (AZ0AM001.PK-PICK-SCHED-NBR != 0)
      AZ0A-SCAN2();
    else
      if (AZ0AM001.CU-CO-ID != 0)
        AZ0A-SCAN3();
      else
        if (AZ0AM001.OP-CUST-ORD-ID != 0)
          AZ0A-SCAN4();
        else
          if (AZ0AM001.OP-CUST-PO != " ")
            AZ0A-SCAN7();
          else
            if (AZ0AM001.TF-CARR-CD != " ")
              AZ0A-SCAN5();
            else
              AZ0A-SCAN6();
            end
          end
        end
      end
    end
  end

end // end AZ0AS11-SEL-CRIT

// Call Subroutine - AZ1000
Function AZ0AS11-SREC-STAT()
  set WAZ1000 empty;

  WAZ1000.WAZ1000-XWH-WHSE-CD = AZWREC.XWHCD;

  WAZ1000.WAZ1000-PK-BILL-OF-LADING = AZAREC.PK-BILL-OF-LADING;

  WAZ1000.WAZ1000-PK-BOL-SUB-NBR = AZAREC.PK-BOL-SUB-NBR;

  WAZ1000.WAZ1000-RETURN-CODE = 99;

  call "AZ1000" (SQLCA, WAZ1000) {isNoRefresh = yes, isExternal = yes};

  if (WAZ1000.WAZ1000-RETURN-CODE == 0)

    if (WAZ1000.WAZ1000-SR-PICK-STAT-FL == "Y")

      AZAREC.SR-PICK-STAT-FL[AZWTSF1S] = "Y";

    end

    if (WAZ1000.WAZ1000-SR-STOP-ORD-SHP-FL == "Y")

      AZAREC.SR-STOP-ORD-SHP-FL[AZWTSF1S] = "Y"; /* stop shipment*/

    end

  else

    TA1REC.TA1LOCAT[2] = "AZ1000"; /* i/o mod name*/

    TA1REC.TA1LOCAT[3] = "AZ0AS11-SREC-STAT "; /* statement group*/

    TA1REC.TA1LOCAT[4] = WAZ1000.WAZ1000-RETURN-CODE;

    TAEREC.TAEDESC1 = "BAD RETURN FROM AZ1000 - RETURN CODE = ";

    TAEREC.TAEDESC2 = WAZ1000.WAZ1000-RETURN-CODE;

    TA1REC.TA1TBLKE = WAZ1000.WAZ1000-PASSING-INFO;

    XSAZENR(); /* appl retn - go to main menu*/

  end

end // end AZ0AS11-SREC-STAT

// format azwrec for AZ0B usage
Function AZ0ASB5()
    /* FORMAT AZWREC FIELDS FOR AZ0B USAGE ONLY*/
    /* (These fields will hold the original selection criteria*/
    /* from AZ0A to be used in AZ0B map headings. The unique*/
    /* criteria is needed when AZ0B is used over and over.)*/

  AZWREC.XWHCD = AZ0AM001.XWHCD; /* warehouse code*/
  AZWREC.AZ0AW-M001-XWH-WHSE-CD = AZ0AM001.XWHCD; /* warehouse code*/

  AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX = 1;

  while (AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX <= 6
   && AZWREC.AZWERRFL != "Y")

    AZ0AW01.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] = AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX];

    AZWREC.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] = AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX];

    AZWREC.AZ0AW-M001-AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] = AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX];

    AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX = AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX + 1;

  end

  AZWREC.PK-PICK-SCHED-NBR = AZ0AM001.PK-PICK-SCHED-NBR;
  AZWREC.AZ0AW-M001-PK-PICK-SCHED-NBR = AZ0AM001.PK-PICK-SCHED-NBR;

  AZWREC.AZ0AW-M001-SR-PICK-STAT-FR-DT = AZ0AM001.SR-PICK-STAT-FR-DT;

  if (AZ0AM001.SR-PICK-STAT-FR-DT > 0)
    AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.SR-PICK-STAT-FR-DT;

    AZ0AS-DB2-DT();

    AZWREC.SR-PICK-STAT-DT-LO = AZ0AW01.AZ0AW-NUM-DATE;

  else

    AZWREC.SR-PICK-STAT-DT-LO = 0;

  end

  AZWREC.AZ0AW-M001-SR-PICK-STAT-TO-DT = AZ0AM001.SR-PICK-STAT-TO-DT;

  if (AZ0AM001.SR-PICK-STAT-TO-DT > 0)

    AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.SR-PICK-STAT-TO-DT;

    AZ0AS-DB2-DT();

    AZWREC.SR-PICK-STAT-DT-HI = AZ0AW01.AZ0AW-NUM-DATE;

  else

    AZWREC.SR-PICK-STAT-DT-HI = 0;

  end

  AZWREC.AZ0AW-M001-PK-SHPMT-FR-DT = AZ0AM001.PK-SHPMT-FR-DT;

  if (AZ0AM001.PK-SHPMT-FR-DT > 0)

    AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.PK-SHPMT-FR-DT;

    AZ0AS-DB2-DT();

    AZWREC.PK-SHPMNT-RLSD-DT-LO = AZ0AW01.AZ0AW-NUM-DATE;

  else

    AZWREC.PK-SHPMNT-RLSD-DT-LO = 0;

  end

  AZWREC.AZ0AW-M001-PK-SHPMT-TO-DT = AZ0AM001.PK-SHPMT-TO-DT;

  if (AZ0AM001.PK-SHPMT-TO-DT > 0)

    AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.PK-SHPMT-TO-DT;

    AZ0AS-DB2-DT();

    AZWREC.PK-SHPMNT-RLSD-DT-HI = AZ0AW01.AZ0AW-NUM-DATE;

  else

    AZWREC.PK-SHPMNT-RLSD-DT-HI = 0;

  end

  AZWREC.AZ0AW-M001-AZA-DNSB-DT = AZ0AM001.AZA-DNSB-DT;

  if (AZ0AM001.AZA-DNSB-DT > 0)

    AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.AZA-DNSB-DT;

    AZ0AS-DB2-DT();

    AZWREC.OP-DNT-SHIP-BFR-DT = AZ0AW01.AZ0AW-NUM-DATE;

  else

    AZWREC.OP-DNT-SHIP-BFR-DT = 0;

  end

  AZWREC.CU-CO-ID = AZ0AM001.CU-CO-ID;
  AZWREC.AZ0AW-M001-CU-CO-ID = AZ0AM001.CU-CO-ID;

  AZWREC.AZWSELPO = AZ0AM001.OP-CUST-PO; /* format po number*/
  AZWREC.AZ0AW-M001-OP-CUST-PO = AZ0AM001.OP-CUST-PO;

  AZWREC.AZWORDID = AZ0AM001.OP-CUST-ORD-ID; /* cust order id*/
  AZWREC.AZ0AW-M001-OP-CUST-ORD-ID = AZ0AM001.OP-CUST-ORD-ID;
  AZWREC.OP-CUST-ORD-ID = AZ0AM001.OP-CUST-ORD-ID;

  AZWREC.AZWORDP = "."; /* cust ord/nike ord seperator*/

  AZWREC.AZWNKORD = AZ0AM001.OP-NIKE-ORD-ID; /* nike order*/
  AZWREC.OP-NIKE-ORD-ID = AZ0AM001.OP-NIKE-ORD-ID;
  AZWREC.AZ0AW-M001-OP-NIKE-ORD-ID = AZ0AM001.OP-NIKE-ORD-ID;

  AZWREC.TF-CARR-CD = AZ0AM001.TF-CARR-CD; /* carrier code*/
  AZWREC.AZ0AW-M001-TF-CARR-CD = AZ0AM001.TF-CARR-CD; /* carrier code*/

  AZWREC.PK-SHP-SPUR-NBR = AZ0AM001.PK-SHP-SPUR-NBR; /* spur  code*/
  AZWREC.AZ0AW-M001-PK-SHP-SPUR-NBR = AZ0AM001.PK-SHP-SPUR-NBR;

  AZWREC.AZW-SEL-BOL-NO = AZ0AM001.PK-BILL-OF-LADING;
  AZWREC.AZ0AW-M001-PK-BILL-OF-LADING = AZ0AM001.PK-BILL-OF-LADING;

  AZWREC.PK-BOL-SUB-NBR = AZ0AW01.AZ0AW-PK-BOL-SUB-NBR-WK-NUM;
  AZWREC.AZ0AW-M001-PK-BOL-SUB-NBR = AZ0AM001.PK-BOL-SUB-ALPHA;

end // end AZ0ASB5

// Edit BOL/SUB Combo
Function AZ0ASEM-BOL()

   /* ------------------------------------------------------------*/
   /* Check BOL & BOL SUB combination criteria*/
   /* ------------------------------------------------------------*/

      /* When BOL Sub is requested, BOL is required*/

  if (AZ0AM001.PK-BOL-SUB-ALPHA != " ") /* BOL Sub entered*/
    if (AZ0AM001.PK-BILL-OF-LADING == 0) /* BOL is not entered*/
      converseLib.validationFailed(13); /* Bill of Lading required*/
      AZWREC.AZWERRFL = "Y"; /* set error*/
      set AZ0AM001.PK-BILL-OF-LADING cursor, modified, bold;
    end
  end

  AZ0AW01.AZ0AW-PK-BOL-SUB-NBR-FL = "N";

  if (AZ0AM001.PK-BOL-SUB-ALPHA > " ")

    AZ0AW01.AZ0AW-PK-BOL-SUB-NBR-FL = "Y";

    AZ0AW01.AZ0AW-PK-BOL-SUB-NBR-IN-CHA = AZ0AM001.PK-BOL-SUB-ALPHA;

    AZ0AW01.AZ0AW-PK-BOL-SUB-NBR-IN-NUM = AZ0AM001.PK-BOL-SUB-ALPHA;

    AZ0AW01.AZ0AW-WORK-IDX = 1;

    while ((AZ0AW-WORK-IDX <= 4))

      if (AZ0AW01.AZ0AW-PK-BOL-SUB-NBR-IN-CBYT[AZ0AW-WORK-IDX] not numeric)

        AZ0AW01.AZ0AW-PK-BOL-SUB-NBR-WK-BYTE[AZ0AW-WORK-IDX] = 0;

      else

        AZ0AW01.AZ0AW-PK-BOL-SUB-NBR-WK-BYTE[AZ0AW-WORK-IDX] = AZ0AW01.AZ0AW-PK-BOL-SUB-NBR-IN-NBYT[AZ0AW-WORK-IDX];

      end

      AZ0AW01.AZ0AW-WORK-IDX = AZ0AW01.AZ0AW-WORK-IDX + 1;

    end /* WHILE (AZ0AW-WORK-IDX LE 4)*/

  end

end // end AZ0ASEM-BOL

// Edit DNSB with Carrier Code
Function AZ0ASEM-CARRCD()
  if (AZ0AM001.TF-CARR-CD != " ")

    set TF1REC empty;

    TF1REC.TF1CARCD = AZ0AM001.TF-CARR-CD;

    AZ0AS-IO0860-S();

    if (SQLCA.VAGen_SQLCODE != 0)
      SRWREC.XXXERRID = "CARRCD";
      converseLib.validationFailed(5);
      set AZ0AM001.TF-CARR-CD cursor, bold;
    end

  end

end // end AZ0ASEM-CARRCD

// Edit Customer,Store,Dept
Function AZ0ASEM-CUST()
  if (AZ0AM001.CU-CO-ID == 0)
    if (AZ0AM001.CU-STOR-ID > " "
     || AZ0AM001.XNX-DEPT-ID-XREF > " ")
      TIWREC.XXX-MSG-LOC-ID = "CUSTEDIT";
      converseLib.validationFailed(07); /* Customer required*/
      AZWREC.AZWERRFL = "Y"; /* set error*/
      set AZ0AM001.CU-CO-ID cursor, modified, bold;
      exit stack;
    end
  end

  KUNREC.XGPCD = "**";

  KUNREC.KUCCOID = AZ0AM001.CU-CO-ID;

  AZ0AW01.AZ0AW-CU-STOR-ID-FL = "N";

  if (AZ0AM001.CU-STOR-ID > " ")

    AZ0AW01.AZ0AW-CU-STOR-ID-FL = "Y";

    AZ0AW01.AZ0AW-CU-STOR-ID-IN-CHA = AZ0AM001.CU-STOR-ID;

    AZ0AW01.AZ0AW-CU-STOR-ID-IN-NUM = AZ0AM001.CU-STOR-ID;

    AZ0AW01.AZ0AW-WORK-IDX = 1;

    while ((AZ0AW-WORK-IDX <= 4))

      if (AZ0AW01.AZ0AW-CU-STOR-ID-IN-CBYT[AZ0AW-WORK-IDX] not numeric)

        AZ0AW01.AZ0AW-CU-STOR-ID-WK-BYTE[AZ0AW-WORK-IDX] = 0;

      else

        AZ0AW01.AZ0AW-CU-STOR-ID-WK-BYTE[AZ0AW-WORK-IDX] = AZ0AW01.AZ0AW-CU-STOR-ID-IN-NBYT[AZ0AW-WORK-IDX];

      end

      AZ0AW01.AZ0AW-WORK-IDX = AZ0AW01.AZ0AW-WORK-IDX + 1;

    end /* WHILE (AZ0AW-WORK-IDX LE 4)*/

    AZ0AW01.CU-STOR-ID = AZ0AW01.AZ0AW-CU-STOR-ID-WK-NUM;

    AZWREC.CU-STOR-ID = AZ0AW01.AZ0AW-CU-STOR-ID-WK-NUM;

  else

    AZ0AW01.CU-STOR-ID = 0;

    AZWREC.CU-STOR-ID = 0;

  end

  AZ0AW01.AZ0AW-XNX-DEPT-ID-XREF-FL = "N";

  if (AZ0AM001.XNX-DEPT-ID-XREF > " ")

    AZ0AW01.AZ0AW-XNX-DEPT-ID-XREF-FL = "Y";

    AZ0AW01.AZ0AW-XNX-DEPT-ID-IN-CHA = AZ0AM001.XNX-DEPT-ID-XREF;

    AZ0AW01.AZ0AW-XNX-DEPT-ID-IN-NUM = AZ0AM001.XNX-DEPT-ID-XREF;

    AZ0AW01.AZ0AW-WORK-IDX = 1;

    while ((AZ0AW-WORK-IDX <= 4))

      if (AZ0AW01.AZ0AW-XNX-DEPT-ID-IN-CBYT[AZ0AW-WORK-IDX] not numeric)

        AZ0AW01.AZ0AW-XNX-DEPT-ID-WK-BYTE[AZ0AW-WORK-IDX] = 0;

      else

        AZ0AW01.AZ0AW-XNX-DEPT-ID-WK-BYTE[AZ0AW-WORK-IDX] = AZ0AW01.AZ0AW-XNX-DEPT-ID-IN-NBYT[AZ0AW-WORK-IDX];

      end

      AZ0AW01.AZ0AW-WORK-IDX = AZ0AW01.AZ0AW-WORK-IDX + 1;

    end /* WHILE (AZ0AW-WORK-IDX LE 4)*/

    AZ0AW01.XNX-DEPT-ID-XREF = AZ0AW01.AZ0AW-XNX-DEPT-ID-WK-NUM;

    AZWREC.XNX-DEPT-ID-XREF = AZ0AW01.AZ0AW-XNX-DEPT-ID-WK-NUM;

  else

    AZ0AW01.XNX-DEPT-ID-XREF = 0;

    AZWREC.XNX-DEPT-ID-XREF = 0;

  end

  if (AZ0AW01.AZ0AW-CU-STOR-ID-FL == "Y")

    KUNREC.KUMSTRID = AZ0AW01.AZ0AW-CU-STOR-ID-WK-NUM;

  else
    KUNREC.KUMSTRID = -1;

  end

  if (AZ0AW01.AZ0AW-XNX-DEPT-ID-XREF-FL == "Y")

    KUNREC.XNXCD = AZ0AW01.AZ0AW-XNX-DEPT-ID-WK-NUM;

  else
    KUNREC.XNXCD = -1;

  end

  AZ0AS-IO0280-SS();

  AZ0AS-IO0280-SN();

  if (SQLCA.VAGen_SQLCODE == 100)

    TIWREC.XXX-MSG-LOC-ID = "CUSTEDIT";

    converseLib.validationFailed(71);

    set AZ0AM001.XNX-DEPT-ID-XREF bold;

    set AZ0AM001.CU-STOR-ID bold;

    set AZ0AM001.CU-CO-ID cursor, bold;

    exit stack;

  end

end // end AZ0ASEM-CUST

// Edit Ship Dates
Function AZ0ASEM-DT()
  /* ***************************************************************/
  /* EDIT DO NOT SHIP BEFORE DATE                               **/
  /* ***************************************************************/
  /*  */
  if (AZ0AM001.AZA-DNSB-DT != 0) /* no don't ship before date*/
    AZWREC.AZWDT6 = AZ0AM001.AZA-DNSB-DT; /* format azwrec MMDDYY*/
    AZ0ASVD(); /* validate date*/
    if (TA2REC.TA2RTNCD == 0) /* good return*/
      /* next sentence*/
    else
      converseLib.validationFailed(059); /* DNSB Date is Invalid*/
      AZWREC.AZWERRFL = "Y";
      set AZ0AM001.AZA-DNSB-DT cursor, bold;
    end
  end
  /*  */
  /* ***************************************************************/
  /* EDIT "FROM" SHIPMENT DATE                                  **/
  /* ***************************************************************/
  /*  */
  if (AZ0AM001.PK-SHPMT-FR-DT > 0)
    AZWREC.AZWDT6 = AZ0AM001.PK-SHPMT-FR-DT;
    AZ0ASVD(); /* validate date*/
    if (TA2REC.TA2RTNCD == 0) /* good return*/
      AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.PK-SHPMT-FR-DT;
      AZ0AS-DB2-DT();
      AZFREC.AZF-SHIP-DT-LO = AZ0AW01.AZ0AW-NUM-DATE;
    else
      converseLib.validationFailed(006);
      AZWREC.AZWERRFL = "Y";
      set AZ0AM001.PK-SHPMT-FR-DT cursor, bold;
      return;
    end
  end
  /*  */
  /* ***************************************************************/
  /* EDIT "TO" SHIPMENT DATE                                    **/
  /* ***************************************************************/
  /*  */
  if (AZ0AM001.PK-SHPMT-TO-DT == 0) /* no end ship date entered*/
    if (AZ0AM001.PK-SHPMT-FR-DT != 0)
      AZ0AM001.PK-SHPMT-TO-DT = AZ0AM001.PK-SHPMT-FR-DT;
      AZFREC.AZF-SHIP-DT-HI = AZ0AW01.AZ0AW-NUM-DATE;
    end
  else
    AZWREC.AZWDT6 = AZ0AM001.PK-SHPMT-TO-DT; /* format azwrec MMDDYY*/
    AZ0ASVD(); /* validate date*/
    if (TA2REC.TA2RTNCD == 0) /* good return*/
      AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.PK-SHPMT-TO-DT;
      AZ0AS-DB2-DT();
      AZFREC.AZF-SHIP-DT-HI = AZ0AW01.AZ0AW-NUM-DATE;
    else
      converseLib.validationFailed(006);
      AZWREC.AZWERRFL = "Y";
      set AZ0AM001.PK-SHPMT-TO-DT cursor, bold;
      return;
    end
  end
  /*  */
  /* ***************************************************************/
  /* EDIT SHIPMENT DATE RANGE                                   **/
  /* ***************************************************************/
  /*  */
  if (AZFREC.AZF-SHIP-DT-HI >= AZFREC.AZF-SHIP-DT-LO)
     /* next sentence*/
  else
    converseLib.validationFailed(016); /* ending date must be > or = to*/
                                   /* beginning date*/
    AZWREC.AZWERRFL = "Y"; /* set error flag*/
    set AZ0AM001.PK-SHPMT-TO-DT cursor, bold;
    return;
  end
  /*  */
  /* ***************************************************************/
  /* EDIT "FROM" PICKED DATE                                    **/
  /* ***************************************************************/
  /*  */
  /* AZWREC.SR-PICK-STAT-DT-LO*/
  /*  */
  if (AZ0AM001.SR-PICK-STAT-FR-DT > 0)
    AZWREC.AZWDT6 = AZ0AM001.SR-PICK-STAT-FR-DT;
    AZ0ASVD(); /* validate date*/
    if (TA2REC.TA2RTNCD == 0) /* good return*/
      AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.SR-PICK-STAT-FR-DT;
      AZ0AS-DB2-DT();
      AZWREC.SR-PICK-STAT-DT-LO = AZ0AW01.AZ0AW-NUM-DATE;
    else
      converseLib.validationFailed(006);
      AZWREC.AZWERRFL = "Y";
      set AZ0AM001.SR-PICK-STAT-FR-DT cursor, bold;
      return;
    end
  end
  /*  */
  /* ***************************************************************/
  /* EDIT "TO" PICKED DATE                                      **/
  /* ***************************************************************/
  /*  */
  if (AZ0AM001.SR-PICK-STAT-TO-DT == 0)
    if (AZ0AM001.SR-PICK-STAT-FR-DT != 0)
      AZ0AM001.SR-PICK-STAT-TO-DT = AZ0AM001.SR-PICK-STAT-FR-DT;
    end
  else
    AZWREC.AZWDT6 = AZ0AM001.SR-PICK-STAT-TO-DT;
    AZ0ASVD(); /* validate date*/
    if (TA2REC.TA2RTNCD == 0) /* good return*/
      AZ0AW01.AZ0AW-MAP-DATE = AZ0AM001.SR-PICK-STAT-TO-DT;
      AZ0AS-DB2-DT();
      AZWREC.SR-PICK-STAT-DT-HI = AZ0AW01.AZ0AW-NUM-DATE;
    else
      converseLib.validationFailed(006);
      AZWREC.AZWERRFL = "Y";
      set AZ0AM001.SR-PICK-STAT-FR-DT cursor, bold;
      return;
    end
  end
  /*  */
  /* ***************************************************************/
  /* EDIT PICKED DATE RANGE                                     **/
  /* ***************************************************************/
  /*  */
  if (AZWREC.SR-PICK-STAT-DT-HI >= AZWREC.SR-PICK-STAT-DT-LO)
     /* next sentence*/
  else
    converseLib.validationFailed(016); /* ending date must be > or = to*/
                                   /* beginning date*/
    AZWREC.AZWERRFL = "Y"; /* set error flag*/
    set AZ0AM001.SR-PICK-STAT-TO-DT cursor, bold;
    return;
  end

end // end AZ0ASEM-DT

// Edit schedule
Function AZ0ASEM-SCH()

   /* Edit for required selection criteria, when Schedule is present*/
   /* Ship Date cannot be entered & Status codes SENT or ALL cannot*/
   /* be entered*/

  if (AZ0AM001.PK-PICK-SCHED-NBR != 0)
    if (AZ0AM001.AZ-ASN-STAT-CD == "ST")
      converseLib.validationFailed(58);
      set AZ0AM001.AZ-ASN-STAT-CD cursor, modified, bold;
      AZWREC.AZWERRFL = "Y";
    else
      if (AZ0AM001.PK-SHPMT-FR-DT != 0 || 
      AZ0AM001.PK-SHPMT-TO-DT != 0)
        converseLib.validationFailed(52);
        set AZ0AM001.PK-SHPMT-FR-DT cursor, modified, bold;
        AZWREC.AZWERRFL = "Y";
      end
    end
  end

end // end AZ0ASEM-SCH

// Edit Status Codes
Function AZ0ASEM-STAT-CODES()

  /* Edit STATUS codes*/

  AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX = 1;

  while (AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX <= 6
   && AZWREC.AZWERRFL != "Y")

    if (AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] != "  "
     && AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] != "HD"
     && AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] != "RE"
     && AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] != "RL"
     && AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] != "ST"
     && AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] != "XL"
     && AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] != "NS"
     && AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] != "* "
     && AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] != "? ")

      converseLib.validationFailed(38); /* Not a valid status code*/

      set AZ0AM001.AZ-ASN-STAT-CD[AZ0AW-AZ-ASN-STAT-CD-IDX] cursor, modified, bold;

      AZWREC.AZWERRFL = "Y";

      return;

    end

    AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX = AZ0AW01.AZ0AW-AZ-ASN-STAT-CD-IDX + 1;

  end
  /*  */
  /* *********************************************************************/
  /* **/
  /* when no key fields entered and specific status codes             **/
  /* entered, corresponding dates must also be entered                **/
  /* **/
  /* *********************************************************************/
  /*  */
  if (AZ0AM001.PK-BILL-OF-LADING == 0
   && AZ0AM001.PK-PICK-SCHED-NBR == 0
   && AZ0AM001.TF-CARR-CD == " "
   && AZ0AM001.CU-CO-ID == 0
   && AZ0AM001.OP-CUST-ORD-ID == 0)

    if (AZ0AM001.PK-SHPMT-FR-DT > 0
     || AZ0AM001.PK-SHPMT-TO-DT > 0)

      if ((AZ0AM001.AZ-ASN-STAT-CD[1] != "ST"
       && AZ0AM001.AZ-ASN-STAT-CD[1] != "RL"
       && AZ0AM001.AZ-ASN-STAT-CD[1] != "  "
       && AZ0AM001.AZ-ASN-STAT-CD[1] != "* ")
       && (AZ0AM001.AZ-ASN-STAT-CD[2] != "ST"
       && AZ0AM001.AZ-ASN-STAT-CD[2] != "RL"
       && AZ0AM001.AZ-ASN-STAT-CD[2] != "  "
       && AZ0AM001.AZ-ASN-STAT-CD[2] != "* ")
       && (AZ0AM001.AZ-ASN-STAT-CD[3] != "ST"
       && AZ0AM001.AZ-ASN-STAT-CD[3] != "RL"
       && AZ0AM001.AZ-ASN-STAT-CD[3] != "  "
       && AZ0AM001.AZ-ASN-STAT-CD[3] != "* ")
       && (AZ0AM001.AZ-ASN-STAT-CD[4] != "ST"
       && AZ0AM001.AZ-ASN-STAT-CD[4] != "RL"
       && AZ0AM001.AZ-ASN-STAT-CD[4] != "  "
       && AZ0AM001.AZ-ASN-STAT-CD[4] != "* ")
       && (AZ0AM001.AZ-ASN-STAT-CD[5] != "ST"
       && AZ0AM001.AZ-ASN-STAT-CD[5] != "RL"
       && AZ0AM001.AZ-ASN-STAT-CD[5] != "  "
       && AZ0AM001.AZ-ASN-STAT-CD[5] != "* ")
       && (AZ0AM001.AZ-ASN-STAT-CD[6] != "ST"
       && AZ0AM001.AZ-ASN-STAT-CD[6] != "RL"
       && AZ0AM001.AZ-ASN-STAT-CD[6] != "  "
       && AZ0AM001.AZ-ASN-STAT-CD[6] != "* "))

        converseLib.validationFailed(50); /* Only valid with 'ST' status*/

        set AZ0AM001.PK-SHPMT-FR-DT cursor, modified, bold;

        AZWREC.AZWERRFL = "Y";

        return;

      end

    end

    if (AZ0AM001.SR-PICK-STAT-FR-DT > 0
     || AZ0AM001.SR-PICK-STAT-TO-DT > 0)

      if ((AZ0AM001.AZ-ASN-STAT-CD[1] == "NS"
       || AZ0AM001.AZ-ASN-STAT-CD[1] == "  ")
       && (AZ0AM001.AZ-ASN-STAT-CD[2] == "NS"
       || AZ0AM001.AZ-ASN-STAT-CD[2] == "  ")
       && (AZ0AM001.AZ-ASN-STAT-CD[3] == "NS"
       || AZ0AM001.AZ-ASN-STAT-CD[3] == "  ")
       && (AZ0AM001.AZ-ASN-STAT-CD[4] == "NS"
       || AZ0AM001.AZ-ASN-STAT-CD[4] == "  ")
       && (AZ0AM001.AZ-ASN-STAT-CD[5] == "NS"
       || AZ0AM001.AZ-ASN-STAT-CD[5] == "  ")
       && (AZ0AM001.AZ-ASN-STAT-CD[6] == "NS"
       || AZ0AM001.AZ-ASN-STAT-CD[6] == "  "))

        converseLib.validationFailed(50); /* Only valid with 'ST' status*/

        set AZ0AM001.PK-SHPMT-FR-DT cursor, modified, bold;

        AZWREC.AZWERRFL = "Y";

        return;

      end

    end

    if (AZ0AM001.AZA-DNSB-DT > 0)

      if ((AZ0AM001.AZ-ASN-STAT-CD[1] != "HD"
       && AZ0AM001.AZ-ASN-STAT-CD[1] != "  ")
       && (AZ0AM001.AZ-ASN-STAT-CD[2] != "HD"
       && AZ0AM001.AZ-ASN-STAT-CD[2] != "  ")
       && (AZ0AM001.AZ-ASN-STAT-CD[3] != "HD"
       && AZ0AM001.AZ-ASN-STAT-CD[3] != "  ")
       && (AZ0AM001.AZ-ASN-STAT-CD[4] != "HD"
       && AZ0AM001.AZ-ASN-STAT-CD[4] != "  ")
       && (AZ0AM001.AZ-ASN-STAT-CD[5] != "HD"
       && AZ0AM001.AZ-ASN-STAT-CD[5] != "  ")
       && (AZ0AM001.AZ-ASN-STAT-CD[6] != "HD"
       && AZ0AM001.AZ-ASN-STAT-CD[6] != "  "))

        converseLib.validationFailed(50); /* Only valid with 'ST' status*/

        set AZ0AM001.AZA-DNSB-DT cursor, modified, bold;

        AZWREC.AZWERRFL = "Y";

        return;

      end

    end

  end

  if (AZ0AM001.AZ-ASN-STAT-CD[1] == "  "
   && AZ0AM001.AZ-ASN-STAT-CD[2] == "  "
   && AZ0AM001.AZ-ASN-STAT-CD[3] == "  "
   && AZ0AM001.AZ-ASN-STAT-CD[4] == "  "
   && AZ0AM001.AZ-ASN-STAT-CD[5] == "  "
   && AZ0AM001.AZ-ASN-STAT-CD[6] == "  ")

    AZ0AM001.AZ-ASN-STAT-CD[1] = "* ";
    AZ0AW01.AZ-ASN-STAT-CD[1] = "* ";

  end

end // end AZ0ASEM-STAT-CODES

// Edit Warehouse
Function AZ0ASEM-WHSE()

   /* ------------------------------------------------------------*/
   /* This process will validate the warehouse code passed in the*/
   /* ASN work record and obtain the warehouse abbreviation.*/
   /* If the warehouse code is not valid, an error number is*/
   /* returned in EZEMNO and warehouse abbreviation is spaces.*/
   /* If the code is valid, EZEMNO remains unchanged.*/
   /* ------------------------------------------------------------*/

  if (AZWREC.XWHABRV != " " /* Current warehouse code is valid and*/
   && AZ0AM001.XWHCD == AZWREC.AZWXWHCD)
                                   /* warehouse code has not changed*/

    return; /* Return to caller*/

  end
  AZWREC.XWHCD = AZ0AM001.XWHCD;

  AZWREC.AZWXWHCD = AZWREC.XWHCD; /* Save current warehouse code*/
  AZWREC.XWHABRV = " "; /* Clear warehouse abbreviation*/
  AZWREC.XWTCD = " "; /* Clear warehouse type code*/
  AZWREC.XWHSTKLF = " "; /* Clear warehouse stock locate flag*/

  if (AZWREC.XWHCD == "  ") /* Warehouse code not entered*/

    converseLib.validationFailed(4); /* Indicate warehouse code required*/
    set AZ0AM001.XWHCD cursor, modified, bold;
    AZWREC.AZWERRFL = "Y"; /* set error*/
    AZWREC.XWHABRV = " "; /* Clear warehouse abbreviation*/
    return; /* Return to caller*/

  end

  if (AZWREC.XWHCD in XWHTBL.XWHCD)
    AZWREC.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
  end

  if (sysVar.arrayIndex == 0) /* Table entry not found*/

    converseLib.validationFailed(2); /* warehouse not found*/
    set AZ0AM001.XWHCD cursor, modified, bold;
    AZWREC.AZWERRFL = "Y"; /* set error*/
    AZWREC.XWHABRV = " "; /* Clear warehouse abbreviation*/
    return; /* Return to caller*/

  end

  if (XWHTBL.XXXSTAT[sysVar.arrayIndex] != "A") /* Not active warehouse status*/

    AZWREC.XWHABRV = " "; /* Clear warehouse abbreviation*/
    AZWREC.XWTCD = " "; /* Clear warehouse type code*/
    AZWREC.XWHSTKLF = " "; /* Clear warehouse stock locate flag*/
    converseLib.validationFailed(3); /* Indicate inactive warehouse*/
    set AZ0AM001.XWHCD cursor, modified, bold;
    AZWREC.AZWERRFL = "Y"; /* set error*/
    AZWREC.XWHABRV = " "; /* Clear warehouse abbreviation*/
    return; /* Return to caller*/
  else
    if (XWHTBL.XWTCD[sysVar.arrayIndex] == "01" && 
    XWHTBL.XWHSTKLF[sysVar.arrayIndex] == "Y")
      /* next sentence*/
    else
      converseLib.validationFailed(060); /* Warehouse restricted from screen*/
      set AZ0AM001.XWHCD cursor, modified, bold;
      AZWREC.AZWERRFL = "Y"; /* set error*/
      AZWREC.XWHABRV = " "; /* Clear warehouse abbreviation*/
      return; /* Return to caller*/
    end
  end

end // end AZ0ASEM-WHSE

// edit pfkeys for AZ0A
Function AZ0ASPF()

  if (converseVar.eventKey is enter)
    return;
  end

  if (AZ0AM001.CATOAP != " ") /* if fastpath entered*/
    set AZ0AM001.CATOAP cursor, bold; /* and pf key pressed*/
    AZWREC.AZWERRFL = "Y";
    converseLib.validationFailed(064);
    exit stack;
  end

   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set AZWREC empty; /* M001 display area*/
    set AZ0AM001 empty;
    COMMAREA.CATOAP = "AZ0A";
    XSEXIT();

  end

  COMMAREA.CAUSERA = AZWREC.AZWGROUP;

  if (converseVar.eventKey is pf3) /* exit to SR menu - SR0A*/

    XSAZT1P(); /* Purge TSQ*/

    COMMAREA.CATOAP = "SR0A"; /* SR main menu*/
    XSEXIT(); /* pass control to exit routine*/

  end

  if (converseVar.eventKey is pf4) /* exit to master menu*/
    XSAZP04();
  end

  converseLib.validationFailed(1); /* invalid pfkey*/
  AZWREC.AZWERRFL = "Y"; /* set error flag*/

  if (converseVar.eventKey is pf1) /* HELP key was pressed*/
    converseLib.validationFailed(029); /* help information is not available*/
  end

  if (converseVar.eventKey is pakey) /* PA key was pressed*/
    converseLib.clearScreen();
     /* clear screen before display*/
  end


end // end AZ0ASPF

// VALIDIATE DATE
Function AZ0ASVD()

  XSAZDED();

  if (TA2REC.TA2RTNCD == 0) /* good return*/
    XSAZDMC();
  end


end // end AZ0ASVD

// Initialization - pop up window
Function XPAZ001()
   /* ------------------------------------------------------------*/

           /* INITIALIZATION PROCESS FOR POP UP WINDOWS*/

      /* Initialize fields on map and in working storage.*/

   /* ------------------------------------------------------------*/

     /* ***********************************************/
     /* ******  Initialize appropriate fields   *******/
     /* ***********************************************/

  set XXAZM001 initial; /* Clear the map area*/
  set XXAZW02 empty; /* clear working storage*/
  XXAZW02.XXAZWCT1 = 1; /* Table index*/
  XXAZW02.XXAZWCT2 = 1; /* Screen index*/
  XXAZW02.XXAZWSIX = 0; /* End of first page save index*/
  XXAZW02.XXAZWPIX = 0; /* Initialize pass index to zero*/
  XXAZW02.XXAZWFFL = "Y"; /* first time thru flag*/
  XXAZW02.XXAZWERR = "N"; /* Scroll error flag to no*/
  XXAZW02.XXAZWEND = "N"; /* End of pop up window session flag*/


end // end XPAZ001

// converse pop up window
Function XPAZP01()
   /* ------------------------------------------------------------*/

              /* CONVERSE POP UP WINDOW*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XXAZW02.XXAZWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XXAZW02.XXAZWFFL == "N") /* if not the first time through*/
      XXAZW02.XXAZWCT1 = XXAZW02.XXAZWINX[7] + 1; /* set up scroll pf8*/
    end

    set XXAZM001 initial; /* Clear map output area*/
    XXAZM001.XXAZMHDR = XXAZW02.XXAZWHDR; /* Place heading on map*/
    XXAZM001.XXAZMTR1 = "     SELECT & ENTER     ";
    XXAZM001.XXAZMTR2 = "  PF7:BACK      PF8:FRWD";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XXAZW02.XXAZWFFL == "Y")    /* Or it is the first time thru*/
      XXAZW02.XXAZWCT2 = 1; /* Set up screen index*/
      while (XXAZW02.XXAZWCT2 <= 7
       && XAZSTBL.XAZSTCD[XXAZWCT1] != "99") /* Or end of data*/
        XXAZM001.XXAZMCD[XXAZWCT2] = XAZSTBL.XAZSTCD[XXAZWCT1];
        XXAZM001.XXAZMDES[XXAZWCT2] = XAZSTBL.XAZSTDESC[XXAZWCT1];
        XXAZW02.XXAZWINX[XXAZWCT2] = XXAZW02.XXAZWCT1;
                                   /* Save array*/
        if (XXAZW02.XXAZWFFL == "Y") /* If first time thru*/
          XXAZW02.XXAZWSIX = XXAZW02.XXAZWCT1; /* Save last index*/
        end
        set XXAZM001.XXAZMSEL[XXAZWCT2] normal; /* Set selects to normal*/
        XXAZW02.XXAZWCT2 = XXAZW02.XXAZWCT2 + 1;
                                   /* Increment screen index*/
        XXAZW02.XXAZWCT1 = XXAZW02.XXAZWCT1 + 1; /* Increment table index*/
      end
      XXAZW02.XXAZWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XXAZW02.XXAZWCT1 = XXAZW02.XXAZWINX[1] - 1; /* Set up table index*/
      XXAZW02.XXAZWCT2 = 7; /* Set up screen index*/
      while (XXAZW02.XXAZWCT2 >= 1) /* Load from the bottom up*/
        XXAZM001.XXAZMCD[XXAZWCT2] = XAZSTBL.XAZSTCD[XXAZWCT1];
        XXAZM001.XXAZMDES[XXAZWCT2] = XAZSTBL.XAZSTDESC[XXAZWCT1];
        XXAZW02.XXAZWINX[XXAZWCT2] = XXAZW02.XXAZWCT1;
                                   /* Save array*/
        set XXAZM001.XXAZMSEL[XXAZWCT2] normal; /* Set select visible*/
        XXAZW02.XXAZWCT2 = XXAZW02.XXAZWCT2 - 1;
                                   /* Decrement screen index*/
        XXAZW02.XXAZWCT1 = XXAZW02.XXAZWCT1 - 1; /* Decrement table index*/
      end
      if (XXAZW02.XXAZWCT1 < 1) /* If the table index was decremented*/
        XXAZW02.XXAZWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end


  converse XXAZM001 ;

  XXAZW02.XXAZWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XXAZW02.XXAZWCT2 = 1; /* Screen index*/
  while (XXAZW02.XXAZWCT2 <= 7 /* Set all fields with data to normal*/
   && XXAZM001.XXAZMCD[XXAZWCT2] != " ")
    set XXAZM001.XXAZMSEL[XXAZWCT2] normal;
    XXAZW02.XXAZWCT2 = XXAZW02.XXAZWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && XAZSTBL.XAZSTCD[XXAZWCT1] == "99") /* And end of table*/
    XXAZW02.XXAZWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XXAZW02.XXAZWINX[1] <= XXAZW02.XXAZWSIX)
      XXAZW02.XXAZWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XXAZW02.XXAZWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XXAZW02.XXAZWCT2 = 1; /* Screen index*/
        while (XXAZW02.XXAZWCT2 <= 7) /* Until end of screen data*/
          if (XXAZM001.XXAZMSEL[XXAZWCT2] == "S") /* Check for selection*/
            XXAZW02.XXAZWPIX = XXAZW02.XXAZWINX[XXAZWCT2];
            XXAZW02.XXAZWCT2 = 11; /* End loop*/
          end
          XXAZW02.XXAZWCT2 = XXAZW02.XXAZWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XXAZW02.XXAZWERR = "Y"; /* set error flag*/
        end
      end
    end
  end


end // end XPAZP01

// map to db date convert
Function XSAZDED()
   /* Edit MMDDYY date*/

   /* move the map date to AZWREC.AZWDT6 before entering*/
   /* this routine*/
   /* the calling stmt grp must handle the return code*/
   /* processing*/

  set TA2REC empty;
  TA2REC.TA2GRGA = AZWREC.AZWDT6;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "A";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

end // end XSAZDED

// MMDDYY To Comp - no validate
Function XSAZDMC()
    /* convert MMDDYY date to comp (DB2 date)*/



   /* the calling stmt group must move the MMDDYY date*/
   /* to AZWREC.AZWDT6 before entering this routine*/

  if (AZWREC.AZWDT6 == 0)
    AZWREC.AZWDT8 = 0;
    return;
  end


  AZWREC.AZWDT8Y = AZWREC.AZWDT6Y;
  AZWREC.AZWDT8M = AZWREC.AZWDT6M;
  AZWREC.AZWDT8D = AZWREC.AZWDT6D;

  if (AZWREC.AZWDT6Y <= 57)
    AZWREC.AZWDT8C = 20;
  else
    AZWREC.AZWDT8C = 19;
  end

   /* the calling stmt group needs to move*/
   /* AZWREC.AZWDT8 to the comp date field.*/

end // end XSAZDMC

// write temp storage 1 - ASNs
Function XSAZT1A()

   /* write temporary storage 1*/

  TA5REC.TA5APPID = "AZF1"; /* appl identification*/
  TA5REC.TA5FNCCD = "A"; /* function code*/
  AZAREC.AZATSLEN = 796; /* length of record*/

  call "TA0050" (AZAREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0)
    AZWREC.AZWTSF1M = TA5REC.TA5TSQIX;
  else
    TA1REC.TA1LOCAT[1] = "ADD TS1";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    XSAZENP(); /* post, no rollback, non db2 diags*/

  end
end // end XSAZT1A

//*** RECORD=AZ0AW01 ****
// customer order inquiry common working storage area. These
// work areas are designated for internal application use only.
// ***********************
Record AZ0AW01 type basicRecord
  10 AZ0AW-SRORD-FOUND-FL AZ0AW-SRORD-FOUND-FL ; 
  10 AZ0AW-AZHDR-FOUND-FL AZ0AW-AZHDR-FOUND-FL ; 
  10 AZ0AW-AZORD-FOUND-FL AZ0AW-AZORD-FOUND-FL ; 
  10 AZ0AW-AZCTN-FOUND-FL AZ0AW-AZCTN-FOUND-FL ; 
  10 * char(1) ; 
  10 AZ0AW-ORD-SEL AZ0AW-ORD-SEL ; 
  10 AZ0AW-SRORD-SEL AZ0AW-SRORD-SEL ; 
  10 AZ0AW-HDR-SEL AZ0AW-HDR-SEL ; 
  10 AZ0AW-CTN-SEL AZ0AW-CTN-SEL ; 
  10 * char(1) ; 
  10 AZ0AW-SRORD-EOF AZ0AW-SRORD-EOF ; 
  10 AZ0AW-AZORD-EOF AZ0AW-AZORD-EOF ; 
  10 AZ0AW-AZHDR-EOF AZ0AW-AZHDR-EOF ; 
  10 AZ0AW-AZCTN-EOF AZ0AW-AZCTN-EOF ; 
  10 * char(1) ; 
  10 AZ0AW-PREV-BOL AZ0AW-PREV-BOL ; 
  10 AZ0AW-PREV-BOL-SUB AZ0AW-PREV-BOL-SUB ; 
  10 * char(1) ; 
  10 AZ0AW-ERR-KEY AZ0AW-ERR-KEY ; 
    15 AZ0AW-LIT1 AZ0AW-LIT1 ; 
    15 AZ0AW-WHS AZ0AW-WHS ; 
    15 AZ0AW-LIT2 AZ0AW-LIT2 ; 
    15 AZ0AW-SCH AZ0AW-SCH ; 
    15 AZ0AW-LIT3 AZ0AW-LIT3 ; 
    15 AZ0AW-NBR AZ0AW-NBR ; 
    15 * char(1) ; 
    15 AZ0AW-SUB-NBR AZ0AW-SUB-NBR ; 
  10 * char(1) ; 
  10 AZ0AW-VALUE-ENTERED AZ0AW-VALUE-ENTERED ; 
  10 AZ0AW-PK-BOL-SUB-ALPHA AZ0AW-PK-BOL-SUB-ALPHA ; 
    15 AZ0AW-PK-BOL-SUB-NUM AZ0AW-PK-BOL-SUB-NUM ; 
  10 * char(1) ; 
  10 AZ0AW-AZ-ASN-STAT-CD-IDX AZ0AW-AZ-ASN-STAT-CD-IDX ; 
  10 AZ0AW-WAZ1010-EOF-FL AZ0AW-WAZ1010-EOF-FL ; 
  10 AZ0AW-DATA-OK-FL AZ0AW-DATA-OK-FL ; 
  10 AZ0AW-BOL-SUB-IN-CHA AZ0AW-BOL-SUB-IN-CHA ; 
  10 AZ0AW-BOL-SUB-IN-CBYT AZ0AW-BOL-SUB-IN-CBYT ; 
  10 AZ0AW-BOL-SUB-IN-NUM AZ0AW-BOL-SUB-IN-NUM ; 
  10 AZ0AW-BOL-SUB-IN-NBYT AZ0AW-BOL-SUB-IN-NBYT ; 
  10 AZ0AW-BOL-SUB-WK-NUM AZ0AW-BOL-SUB-WK-NUM ; 
  10 AZ0AW-BOL-SUB-WK-BYTE AZ0AW-BOL-SUB-WK-BYTE ; 
  10 AZ0AW-CU-STOR-ID-IN-CHA AZ0AW-CU-STOR-ID-IN-CHA ; 
    15 AZ0AW-CU-STOR-ID-IN-CBYT AZ0AW-CU-STOR-ID-IN-CBYT [4] ; 
  10 AZ0AW-CU-STOR-ID-IN-NUM AZ0AW-CU-STOR-ID-IN-NUM ; 
    15 AZ0AW-CU-STOR-ID-IN-NBYT AZ0AW-CU-STOR-ID-IN-NBYT [4] ; 
  10 AZ0AW-CU-STOR-ID-WK-NUM AZ0AW-CU-STOR-ID-WK-NUM ; 
    15 AZ0AW-CU-STOR-ID-WK-BYTE AZ0AW-CU-STOR-ID-WK-BYTE [4] ; 
  10 AZ0AW-XNX-DEPT-ID-IN-CHA AZ0AW-XNX-DEPT-ID-IN-CHA ; 
    15 AZ0AW-XNX-DEPT-ID-IN-CBYT AZ0AW-XNX-DEPT-ID-IN-CBYT [4] ; 
  10 AZ0AW-XNX-DEPT-ID-IN-NUM AZ0AW-XNX-DEPT-ID-IN-NUM ; 
    15 AZ0AW-XNX-DEPT-ID-IN-NBYT AZ0AW-XNX-DEPT-ID-IN-NBYT [4] ; 
  10 AZ0AW-XNX-DEPT-ID-WK-NUM AZ0AW-XNX-DEPT-ID-WK-NUM ; 
    15 AZ0AW-XNX-DEPT-ID-WK-BYTE AZ0AW-XNX-DEPT-ID-WK-BYTE [4] ; 
  10 AZ0AW-PK-BOL-SUB-NBR-IN-CHA AZ0AW-PK-BOL-SUB-NBR-IN-CHA ; 
    15 AZ0AW-PK-BOL-SUB-NBR-IN-CBYT AZ0AW-PK-BOL-SUB-NBR-IN-CBYT [4] ; 
  10 AZ0AW-PK-BOL-SUB-NBR-IN-NUM AZ0AW-PK-BOL-SUB-NBR-IN-NUM ; 
    15 AZ0AW-PK-BOL-SUB-NBR-IN-NBYT AZ0AW-PK-BOL-SUB-NBR-IN-NBYT [4] ; 
  10 AZ0AW-PK-BOL-SUB-NBR-WK-NUM AZ0AW-PK-BOL-SUB-NBR-WK-NUM ; 
    15 AZ0AW-PK-BOL-SUB-NBR-WK-BYTE AZ0AW-PK-BOL-SUB-NBR-WK-BYTE [4] ; 
  10 AZ0AW-OP-NIKE-ORD-ID-IN-CHA AZ0AW-OP-NIKE-ORD-ID-IN-CHA ; 
    15 AZ0AW-OP-NIKE-ORD-ID-IN-CBYT AZ0AW-OP-NIKE-ORD-ID-IN-CBYT [4] ; 
  10 AZ0AW-OP-NIKE-ORD-ID-IN-NUM AZ0AW-OP-NIKE-ORD-ID-IN-NUM ; 
    15 AZ0AW-OP-NIKE-ORD-ID-IN-NBYT AZ0AW-OP-NIKE-ORD-ID-IN-NBYT [4] ; 
  10 AZ0AW-OP-NIKE-ORD-ID-WK-NUM AZ0AW-OP-NIKE-ORD-ID-WK-NUM ; 
    15 AZ0AW-OP-NIKE-ORD-ID-WK-BYTE AZ0AW-OP-NIKE-ORD-ID-WK-BYTE [4] ; 
  10 AZ0AW-CU-STOR-ID-FL AZ0AW-CU-STOR-ID-FL ; 
  10 AZ0AW-PK-BOL-SUB-NBR-FL AZ0AW-PK-BOL-SUB-NBR-FL ; 
  10 AZ0AW-OP-NIKE-ORD-ID-FL AZ0AW-OP-NIKE-ORD-ID-FL ; 
  10 AZ0AW-XNX-DEPT-ID-XREF-FL AZ0AW-XNX-DEPT-ID-XREF-FL ; 
  10 AZ0AW-WORK-IDX AZ0AW-WORK-IDX ; 
  10 PK-BOL-SUB-NBR PK-BOL-SUB-NBR ; 
  10 OP-NIKE-ORD-ID OP-NIKE-ORD-ID ; 
  10 CU-STOR-ID CU-STOR-ID ; 
  10 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
  10 AZ0AW-NUM-DATE AZ0AW-NUM-DATE ; 
    15 AZ0AW-NUM-FILLER AZ0AW-NUM-FILLER ; 
    15 AZ0AW-NUM-CC AZ0AW-NUM-CC ; 
    15 AZ0AW-NUM-YY AZ0AW-NUM-YY ; 
    15 AZ0AW-NUM-MM AZ0AW-NUM-MM ; 
    15 AZ0AW-NUM-DD AZ0AW-NUM-DD ; 
  10 AZ0AW-CHA-DATE AZ0AW-CHA-DATE ; 
    15 AZ0AW-CHA-MM AZ0AW-CHA-MM ; 
    15 AZ0AW-CHA-SLASH1 AZ0AW-CHA-SLASH1 ; 
    15 AZ0AW-CHA-DD AZ0AW-CHA-DD ; 
    15 AZ0AW-CHA-SLASH2 AZ0AW-CHA-SLASH2 ; 
    15 AZ0AW-CHA-YY AZ0AW-CHA-YY ; 
  10 AZ0AW-MAP-DATE AZ0AW-MAP-DATE ; 
    15 AZ0AW-MAP-MM AZ0AW-MAP-MM ; 
    15 AZ0AW-MAP-DD AZ0AW-MAP-DD ; 
    15 AZ0AW-MAP-YY AZ0AW-MAP-YY ; 
  10 AZ0AW-SAVED-BILL-OF-LADING AZ0AW-SAVED-BILL-OF-LADING ; 
  10 AZ0AW-SAVED-BOL-SUB-NBR AZ0AW-SAVED-BOL-SUB-NBR ; 
  10 AZ0AW-SAVED-DISTCTR-CO-ID AZ0AW-SAVED-DISTCTR-CO-ID ; 
  10 AZ0AW-SAVED-CU-CO-ID AZ0AW-SAVED-CU-CO-ID ; 
  10 SR-PICK-STAT-DT-LO SR-PICK-STAT-DT-LO ; 
  10 SR-PICK-STAT-DT-HI SR-PICK-STAT-DT-HI ; 
  10 AZ0AW-REPEAT-LOOP-FL AZ0AW-REPEAT-LOOP-FL ; 
  10 AZ-ASN-STAT-CD AZ-ASN-STAT-CD [6] ; 
end // end AZ0AW01

//*** RECORD=WAZ1010 ****
// *     Temporary storage record used to hold selected ASN
// *     for the 'AZ' - Advance Shipment Notice System.
// *
// *     Csp record: AZAREC
// *
// *      file name: AZF1
// *
// *      Data from: DSHIP.VAZHDR01
// *
// *      Loaded in: AZ0A - AZ0AS11
// *
// *   Displayed in: AZ0B
// *
// *      system statement groups: XSAZT1P - purge
// *                               XSAZT1A - add/insert
// *                               XSAZT1R - read
// *                               XSAZT1U - update
// *
// *
// *
// ***********************
Record WAZ1010 type basicRecord
  5 WAZ1010-REC WAZ1010-REC ; 
    10 XWH-WHSE-CD XWH-WHSE-CD ; 
    10 AZ-ASN-STAT-CD AZ-ASN-STAT-CD [6] ; 
    10 PK-BILL-OF-LADING PK-BILL-OF-LADING ; 
    10 PK-BOL-SUB-NBR PK-BOL-SUB-NBR ; 
    10 PK-PICK-SCHED-NBR PK-PICK-SCHED-NBR ; 
    10 AZ0AW-PICK-STAT-FR-DT AZ0AW-PICK-STAT-FR-DT ; 
    10 AZ0AW-PICK-STAT-TO-DT AZ0AW-PICK-STAT-TO-DT ; 
    10 AZ0AW-SHPMT-RLSD-FR-DT AZ0AW-SHPMT-RLSD-FR-DT ; 
    10 AZ0AW-SHPMT-RLSD-TO-DT AZ0AW-SHPMT-RLSD-TO-DT ; 
    10 AZ0AW-DNSB-DT AZ0AW-DNSB-DT ; 
    10 TF-CARR-CD TF-CARR-CD ; 
    10 PK-SHP-SPUR-NBR PK-SHP-SPUR-NBR ; 
    10 CU-DISTCTR-CO-ID CU-DISTCTR-CO-ID ; 
    10 CU-DISTCTR-STOR-ID CU-DISTCTR-STOR-ID ; 
    10 CU-CO-ID CU-CO-ID ; 
    10 CU-STOR-ID CU-STOR-ID ; 
    10 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
    10 OP-CUST-PO OP-CUST-PO ; 
    10 OP-CUST-ORD-ID OP-CUST-ORD-ID ; 
    10 OP-NIKE-ORD-ID OP-NIKE-ORD-ID ; 
    10 SR-TOT-NBR-CARTONS SR-TOT-NBR-CARTONS ; 
    10 AZ-TOT-SHPMT-WT AZ-TOT-SHPMT-WT ; 
    10 SR-STOP-ORD-SHP-FL SR-STOP-ORD-SHP-FL ; 
    10 SR-PICK-STAT-FL SR-PICK-STAT-FL ; 
end // end WAZ1010

//*** RECORD=XXAZW02 ****
// ************************************************************
// 
//         ***** POP UP WINDOW WORKING RECORD *****
// 
// ************************************************************
// 
// Overview :
//            This record is the working record used by
//            the CSP pop up window processes - xpxx001
//            and xp???01. ( Where ??? is the table name
//            associated with the pop-up window process.)
// 
// Maintenance History :
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          03-25-88  CEPPLE  Created
//          03-30-89  jvande  replaced xtvcd with xgpcd.
//          07-25-89  mchris  added xwhcd.
//          08/01/89  SPOPA   Added YPGFFFL field.
// ************************************************************
// ***********************
Record XXAZW02 type basicRecord
  10 XXAZWCT1 XXAZWCT1 ; 
  10 XXAZWCT2 XXAZWCT2 ; 
  10 XXAZWSIX XXAZWSIX ; 
  10 XXAZWPIX XXAZWPIX ; 
  10 XXAZWINX XXAZWINX [10] ; 
  10 XXAZWEND XXAZWEND ; 
  10 XXAZWFFL XXAZWFFL ; 
  10 XXAZWERR XXAZWERR ; 
  10 XXAZWHDR XXAZWHDR ; 
  10 XSTCD XSTCD ; 
  10 XXAZWNUM XXAZWNUM ; 
    15 XXAZWCHA XXAZWCHA ; 
end // end XXAZW02

DataItem AZ0AW-AZ-ASN-STAT-CD-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-AZCTN-EOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// AZCTN Data Processed
DataItem AZ0AW-AZCTN-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-AZHDR-EOF char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// AZHDR Data Processed
DataItem AZ0AW-AZHDR-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-AZORD-EOF char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// AZORD Data Processed
DataItem AZ0AW-AZORD-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-BOL-SUB-IN-CBYT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-BOL-SUB-IN-CHA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-BOL-SUB-IN-NBYT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-BOL-SUB-IN-NUM char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-BOL-SUB-WK-BYTE num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-BOL-SUB-WK-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-CHA-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-CHA-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-CHA-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-CHA-SLASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-CHA-SLASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-CHA-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-CTN-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-CU-STOR-ID-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-CU-STOR-ID-IN-CBYT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-CU-STOR-ID-IN-CHA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-CU-STOR-ID-IN-NBYT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-CU-STOR-ID-IN-NUM char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-CU-STOR-ID-WK-BYTE num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-CU-STOR-ID-WK-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-DATA-OK-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-DNSB-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-ERR-KEY char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-HDR-SEL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-LIT1 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-LIT2 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-LIT3 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-MAP-DATE num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-MAP-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-MAP-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-MAP-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-NBR num(13)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-NUM-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-NUM-DATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-NUM-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-NUM-FILLER num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-NUM-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-NUM-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end
DataItem AZ0AW-OP-NIKE-ORD-ID-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-OP-NIKE-ORD-ID-IN-CBYT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-OP-NIKE-ORD-ID-IN-CHA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-OP-NIKE-ORD-ID-IN-NBYT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-OP-NIKE-ORD-ID-IN-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-OP-NIKE-ORD-ID-WK-BYTE num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-OP-NIKE-ORD-ID-WK-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-ORD-SEL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PC_CU_IN_SEG_CD
DataItem AZ0AW-PICK-STAT-FR-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PC_CU_IN_SEG_CD
DataItem AZ0AW-PICK-STAT-TO-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-PK-BOL-SUB-ALPHA char(4)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-PK-BOL-SUB-NBR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-PK-BOL-SUB-NBR-IN-CBYT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-PK-BOL-SUB-NBR-IN-CHA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-PK-BOL-SUB-NBR-IN-NBYT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-PK-BOL-SUB-NBR-IN-NUM char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-PK-BOL-SUB-NBR-WK-BYTE num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-PK-BOL-SUB-NBR-WK-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-PK-BOL-SUB-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-PREV-BOL decimal(13)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-PREV-BOL-SUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-REPEAT-LOOP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-SAVED-BILL-OF-LADING decimal(13)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-SAVED-BOL-SUB-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-SAVED-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-SAVED-DISTCTR-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-SCH num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Shipment Release Date
DataItem AZ0AW-SHPMT-RLSD-FR-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Shipment Release Date
DataItem AZ0AW-SHPMT-RLSD-TO-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-SRORD-EOF char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SRORD Data Processed
DataItem AZ0AW-SRORD-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-SRORD-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-SUB-NBR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-VALUE-ENTERED char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-WAZ1010-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-WHS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-WORK-IDX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-XNX-DEPT-ID-IN-CBYT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-XNX-DEPT-ID-IN-CHA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-XNX-DEPT-ID-IN-NBYT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-XNX-DEPT-ID-IN-NUM char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AZ0AW-XNX-DEPT-ID-WK-BYTE num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-XNX-DEPT-ID-WK-NUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AZ0AW-XNX-DEPT-ID-XREF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem WAZ1010-REC char(109)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// num-to-cha conversion
DataItem XXAZWCHA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table counter
DataItem XXAZWCT1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// screen counter
DataItem XXAZWCT2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// flag
DataItem XXAZWEND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// scroll error flag
DataItem XXAZWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first time thru flag
DataItem XXAZWFFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen header
DataItem XXAZWHDR char(39)  {
  align = left, fillCharacter = " ", inputRequired = no
}
end

// counter link screen/table
DataItem XXAZWINX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// bin-to-num conversion
DataItem XXAZWNUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// passed index table location
DataItem XXAZWPIX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// end of first page save index
DataItem XXAZWSIX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

