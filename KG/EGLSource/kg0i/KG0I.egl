package kg0i;

import corpcom2.XX0XW01;
import corpcom2.XX0XWZDD;
import corpcom2.XX0XWZMM;
import corpcom2.XX0XWZYY;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.*;
import corpcom6.SQLCA;
import corpx1.XDMTBL;
import corpx1.XDVTBL;
import corpx1.XGPTBL;
import corpx1.XNXTBL;
import corpx1.XOBTBL;
import corpy2.YSBTBL;
import ku.common.KU5REC;
import ku.common.KUCREC;
import ku.common.KUJREC;
import ku.common.KUMREC;
import sy.common.SY1REC;
import sy.common.SY2REC;
import ta.common.TA1REC;
//*** PROGRAM=KG0I ****
// ************************************************************
// *           Sales Management Application
// * ----------------------------------------------------------
// *
// * This appplication will return assign a Sales Rep according
// * to entered Comapny and Product parameters.  KU1350 IO Mod
// * is used to determine the appropriate sales rep assignment.
// *
// * ----------------------------------------------------------
// *
// *                 Maintenance History
// * ----------------------------------------------------------
// * 11/03/97 kclar1 - fixed miscellaneous bugs and added date
// *                   and base order type
// ************************************************************
// * 12/26/95 CHELLM Created.
// *
// *
// *********************
Program KG0I type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CU00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KG0IW01 KG0IW01; // record
  KU5REC KU5REC; // record
  KUCREC KUCREC; // record
  KUJREC KUJREC; // record
  KUMREC KUMREC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  TA1REC TA1REC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use YSBTBL {deleteAfterUse = yes}; // table
  use XDVTBL {deleteAfterUse = yes}; // table
  use XNXTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use XOBTBL {deleteAfterUse = yes}; // table
  use KG0IM.KG0IM100 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KG0I-ENTRY: KG0I-ENTRY();
    goto KG0I-CONVERSE;
    KG0I-CONVERSE: KG0I-CONVERSE();
    goto KG0I-CONVERSE;
  end // end main
end // end KG0I

// conversc map
Function KG0I-CONVERSE()
  ;
  KG0IW01.KG0IW-ERROR-FL = "N";
  ;
  converse KG0IM100 ;
  ;
  ;
  KG0I-PROCESS-KEYS();
  ;
  if (KG0IW01.KG0IW-ERROR-FL == "N")
    KG0I-READ-COMPANY();
  end
  ;
  if (KG0IW01.KG0IW-ERROR-FL == "N")
    KG0I-READ-STORE();
  end
  ;
  if (KG0IW01.KG0IW-ERROR-FL == "N")
    KG0I-GET-DESC();
  end
  ;
  if (KG0IW01.KG0IW-ERROR-FL == "N")
    KG0I-READ-STYLE();
  end
  ;
  if (KG0IW01.KG0IW-ERROR-FL == "N")
    KG0I-READ-COLOR();
  end
  ;
  if (KG0IW01.KG0IW-ERROR-FL == "N")
    KG0IS-CALL-KU1350();
  end
  ;
end // end KG0I-CONVERSE

Function KG0I-ENTRY()
  ;
  XSENTRY();
  ;
  XSSEGTR();
  ;
  set KG0IW01 empty;
  set SQLCA empty;
  set KUCREC empty;
  set KUMREC empty;
  set SY1REC empty;
  set SY2REC empty;
  set TA1REC empty;
  set KG0IM100 initial;
  ;
  XX0XS01(); /* convert system date to ccyymmdd*/
                                   /* format*/
  ;
  KG0IW01.XX0XWZMM = XX0XW01.XX0XWZMM;
  KG0IW-SLASH1 = "/";
  KG0IW01.XX0XWZDD = XX0XW01.XX0XWZDD;
  KG0IW-SLASH2 = "/";
  KG0IW01.XX0XWZYY = XX0XW01.XX0XWZYY;
  KG0IM-ORD-RCD-DT = XX0XW01.XX0XWDAT;
  ;
  KG0IM100.KG0IMDTE = KG0IW01.KG0IW-DATE;
  ;
  KG0IM100.XDMCD = "00"; /* dimension code*/
  ;
  KG0IM100.XDVCD = "01"; /* division code*/
  ;
  KG0IM100.XOBCD = "**"; /* base order type code*/
end // end KG0I-ENTRY

// read company
Function KG0I-GET-DESC()
  ;
   /* *************************************************/
   /* get division description*/
   /* *************************************************/
  ;
  if (KG0IM100.XDVCD in XDVTBL.XDVCD)
    set KG0IM100.XDVCD initialAttributes;
    KG0IM100.XDVDESC = XDVTBL.XDVDESC[sysVar.arrayIndex];
  else
    set KG0IM100.XDVCD cursor, bold;
    KG0IM100.XDVDESC = "NOT FOUND ";
  end
  ;
  ;
   /* *************************************************/
   /* get gpc description*/
   /* *************************************************/
  ;
  if (KG0IM100.XGPCD in XGPTBL.XGPCD)
    set KG0IM100.XGPCD initialAttributes;
    KG0IM100.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
  else
    set KG0IM100.XGPCD cursor, bold;
    KG0IM100.XGPDESC = "NOT FOUND ";
  end
  ;
  ;
   /* *************************************************/
   /* get dim description*/
   /* *************************************************/
  ;
  if (KG0IM100.XDMCD in XDMTBL.XDMCD)
    set KG0IM100.XDMCD initialAttributes;
    KG0IM100.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  else
    set KG0IM100.XDMCD cursor, bold;
    KG0IM100.XDMDESC = "NOT FOUND ";
  end
  ;
  ;
   /* *************************************************/
   /* get department description*/
   /* *************************************************/
  ;
  if (KG0IM100.XNXCD in XNXTBL.XNXCD)
    set KG0IM100.XNXCD initialAttributes;
    KG0IM100.XNXDESC = XNXTBL.XNXDESC[sysVar.arrayIndex];
  else
    set KG0IM100.XNXCD cursor, bold;
    KG0IM100.XNXDESC = "NOT FOUND";
  end
  ;
   /* *************************************************/
   /* get base order type description*/
   /* *************************************************/
  ;
  if (KG0IM100.XOBCD in XOBTBL.XOBCD)
    set KG0IM100.XOBCD initialAttributes;
    KG0IM100.XOBDESC = XOBTBL.XOBDESC[sysVar.arrayIndex];
  else
    if (KG0IM100.XOBCD == "**")
      KG0IM100.XOBDESC = "GLOBAL   ";
    else
      set KG0IM100.XOBCD cursor, bold;
      KG0IM100.XOBDESC = "NOT FOUND";
    end
  end
  ;
  ;
end // end KG0I-GET-DESC

Function KG0I-PROCESS-KEYS()
  if (converseVar.eventKey is pa2)
    COMMAREA.CATOAP = "KG0I";
    COMMAREA.CAFROMAP = "KG0I";
    XSEXIT();
    KG0IM100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KG0IW01.KG0IW-ERROR-FL = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    COMMAREA.CAFROMAP = "KG0I";
    XSEXIT();
    KG0IM100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KG0IW01.KG0IW-ERROR-FL = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is enter)
    if (KG0IM100.CATOAP > " ")
      COMMAREA.CATOAP = KG0IM100.CATOAP;
      COMMAREA.CAITEM = KG0IM100.CAITEM;
      CAFROMAP = "KG0I";
      XSEXIT();
      converseLib.validationFailed(40);
      KG0IW01.KG0IW-ERROR-FL = "Y";
    else
      set KG0IM100.CATOAP initialAttributes;
    end
    return;
  end
  ;
  converseLib.validationFailed(03);
  KG0IW01.KG0IW-ERROR-FL = "Y";
  ;
end // end KG0I-PROCESS-KEYS

// edit dim & color codes
Function KG0I-READ-COLOR()
   /* ***********************************/
   /* get product  color description*/
   /* ***********************************/
  ;
  ;
  ;
  SY2REC.XGPCD = KG0IM100.XGPCD; /* move gpc to sy2rec*/
  SY2REC.SY1STNBR = KG0IM100.SY1STNBR; /* move style to sy2*/
  SY2REC.SY2CLRID = KG0IM100.SY2CLRID; /* move color to sy2*/
  SY2REC.XDMCD = KG0IM100.XDMCD; /* move dimension*/
  if (KG0IM100.XDMCD == "  ")
    SY2REC.XDMCD = "00"; /* move dimension*/
  end
  ;
  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes}; /* call io module*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if found*/
    set KG0IM100.SY2CLRID normal; /* set to normal*/
    set KG0IM100.XDMCD normal; /* next sentence*/
    KG0IM100.SY2CLRDS = SY2REC.SY2CLRDS;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* if not found*/
      KG0IW01.KG0IW-ERROR-FL = "Y";
      converseLib.validationFailed(106); /* set error*/
      KG0IM100.SY2CLRDS = " ";
      set KG0IM100.SY2CLRID cursor, modified, bold; /* set cursor*/
      set KG0IM100.XDMCD modified, bold; /* set bright*/
    else
      TA1REC.TA1TYPE = "DB2"; /* db2 error.*/
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1PGMNM = "KG0I-GET-COLOR";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1TBLKE = SY2KEY;
      TA1REC.TA1LOC = "READING DB2 TBL DPROD.VCOLOR01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end
  ;
  ;
end // end KG0I-READ-COLOR

// read company
Function KG0I-READ-COMPANY()
  ;
   /* *************************************************/
   /* get company record   kucrec*/
   /* *************************************************/
  ;
  set SQLCA empty;
  ;
  KUCREC.KUCCOID = KG0IM100.KUCCOID;
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* read cmpny01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    set KG0IM100.KUCCOID initialAttributes, cursor;
    KG0IM100.KUCCONM = KUCREC.KUCCONM;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(25); /* company not found*/
      KG0IW01.KG0IW-ERROR-FL = "Y"; /* set error message.*/
      set KG0IM100.KUCCOID cursor, bold;
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1PGMNM = "KG0I-GET-COMPANY";
      TA1REC.TA1LOC = "READING DB2 CMPNY01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
end // end KG0I-READ-COMPANY

// read store record
Function KG0I-READ-STORE()
  ;
  ;
   /* *************************************************************/
   /* *****       r e a d    s t o r e    r e c o r d        ******/
   /* *************************************************************/
  ;
  ;
  set KUMREC empty; /* initialize store record*/
  set SQLCA empty;
  ;
   /* ******** move keys to record  *************/
  KUMREC.KUCCOID = KG0IM100.KUCCOID;
  KUMREC.KUMSTRID = KG0IM100.KUMSTRID;
  ;
  ;
  call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes};
                                 /* ;call io mod to get store rec*/
  if (SQLCA.VAGen_SQLCODE == 0) /* if return code okay*/
    KG0IM100.KUMSTRNM = KUMREC.KUMSTRNM;
    set KG0IM100.KUMSTRID normal;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* if return code = "not found"*/
      converseLib.validationFailed(26); /* error "store does not exist"*/
      set KG0IM100.KUMSTRID cursor, bold; /* highlight errors{*/
      KG0IW01.KG0IW-ERROR-FL = "Y";
    else /* else(return code not 100)*/
      /* **********************  call error routine  *****************/
      TA1REC.TA1TYPE = "DB2 "; /* move error type to error record*/
      TA1REC.TA1FUNC = "RETN"; /* move function to error record*/
      TA1REC.TA1MAP = "KG0IM100";
      TA1REC.TA1DBASE = "DCUST   "; /* move database name to error rec*/
      TA1REC.TA1TBLVU = "VSTORE01"; /* move table view to error record*/
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4(); /* return to main menu*/
    end /* end of "if" statement*/
  end /* end of "if" statement*/
  ;
  ;
  ;
  ;
  ;
end // end KG0I-READ-STORE

// edit gpc & style codes
Function KG0I-READ-STYLE()
   /* ************************************/
   /* get product style recored*/
   /* ************************************/
  ;
  set SQLCA empty;
  set SY1REC empty;
  ;
  SY1REC.XGPCD = KG0IM100.XGPCD; /* move gpc to sy1rec*/
  SY1REC.SY1STNBR = KG0IM100.SY1STNBR; /* move style to sy1rec*/
  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
                                   /* call io module*/
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if valid style & gpc*/
    set KG0IM100.XGPCD normal; /* set to normal*/
    set KG0IM100.SY1STNBR normal; /* next sentence.*/
    KG0IM100.SY1STYNM = SY1REC.SY1STYNM;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
                                   /* if invalid style/gpc*/
      KG0IW01.KG0IW-ERROR-FL = "Y";
      converseLib.validationFailed(104); /* set error msg*/
      set KG0IM100.XGPCD cursor, modified, bold; /* set cursor*/
      set KG0IM100.SY1STNBR modified, bold; /* set bright*/
    else
      TA1REC.TA1TYPE = "DB2"; /* db2 error.*/
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1PGMNM = "KG0I-GET-STYLE";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1TBLKE = SY1KEY;
      TA1REC.TA1LOC = "READING DB2 TBL DPROD.VSTYLE01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end
  ;
  ;
end // end KG0I-READ-STYLE

// get sales rep from vcurep01
Function KG0IS-CALL-KU1350()
                         /* KG0I-call-ku1350*/
      /* ------------------------------------------------------*/
   /* This statement accesses the customer/*/
   /* rep table (vcurep01) via nikeboth pgm ku1350 to get the correct*/
   /* rep and sales agency for the entered customer and product parameters*/
  ;
  ;
  set SQLCA empty;
  set KU5REC empty;
  ;
  KU5REC.KU5-CALLING-PROGRAM-ID = "KG0I"; /* prepare key for*/
  KU5REC.KU5-CONV-DEPT-FLAG = "N"; /* call to ku1350*/
  KU5REC.KU5-READ-SA-FLAG = "N";
  KU5REC.KUCCOID = KG0IM100.KUCCOID;
  KU5REC.KUMSTRID = KG0IM100.KUMSTRID;
  KU5REC.XDVCD = KG0IM100.XDVCD;
  KU5REC.XNXCD = KG0IM100.XNXCD;
  KU5REC.XGPCD = KG0IM100.XGPCD;
  KU5REC.OP1ORCDT = KG0IM100.KG0IM-ORD-RCD-DT;
  KU5REC.XOBCD = KG0IM100.XOBCD;
  KU5REC.SY1STNBR = SY2REC.SY1STNBR;
  KU5REC.SY2CLRID = SY2REC.SY2CLRID;
  KU5REC.XDMCD = SY2REC.XDMCD;
  KU5REC.XPCCD = SY2REC.XPCCD;
  KU5REC.XPLCD = SY2REC.XPLCD;
  KU5REC.XGACD = SY1REC.XGACD;
  ;
  ;
  call "KU1350" (KU5REC) {isNoRefresh = yes, isExternal = yes}; /* get best choice rep*/
  ;
  if (KU5REC.KU5-READ-STATUS == "00")
    KG0IM100.SM4REPID = KU5REC.SM4REPID;
    KG0IM100.SM1AGYID = KU5REC.SM1AGYID;
    KG0IM100.YSBCD = KU5REC.YSBCD; /* good rep found*/
    if (KU5REC.YSBCD in YSBTBL.YSBCD)
      KG0IM100.YSBDESC = YSBTBL.YSBDESC[sysVar.arrayIndex];
    end
  else
    KG0IM100.SM4REPID = 0;
    KG0IM100.SM1AGYID = "    ";
    KG0IM100.YSBCD = "    ";
    KG0IM100.YSBDESC = "    ";
    KG0IW01.KG0IW-ERROR-FL = "Y"; /* no rep found*/
    converseLib.validationFailed(18);
    return;
  end
  ;
end // end KG0IS-CALL-KU1350

//*** RECORD=KG0IW01 ****
// this record contains work fields used entirely within KG0I.
// ************************************************************
// *                Maintenance Log
// ************************************************************
// *
// *  26-DEC-1995       CHELLM    Created.
// *
// *
// *
// ***********************
Record KG0IW01 type basicRecord
  10 KG0IW-ERROR-FL KG0IW-ERROR-FL ; 
  10 KG0IW-DATE KG0IW-DATE ; 
    15 XX0XWZMM XX0XWZMM ; 
    15 KG0IW-SLASH1 KG0IW-SLASH1 ; 
    15 XX0XWZDD XX0XWZDD ; 
    15 KG0IW-SLASH2 KG0IW-SLASH2 ; 
    15 XX0XWZYY XX0XWZYY ; 
end // end KG0IW01

DataItem KG0IW-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag
DataItem KG0IW-ERROR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KG0IW-SLASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KG0IW-SLASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

