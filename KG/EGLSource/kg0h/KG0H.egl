package kg0h;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPXGB01;
import corpcom3.XPXSU01;
import corpcom3.XPXX001;
import corpcom3.XPYLA01;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.CU-HANG-STY-NBR;
import corpcom5.CU-HANG-XGP-CD;
import corpcom6.SQLCA;
import corpcom7.XXXSTAT;
import corpx1.XDZ-DATA-DIST-CD;
import corpx1.XGBABRV;
import corpx1.XGBCD;
import corpx1.XGBTBL;
import corpx1.XGPCD;
import corpx1.XGPTBL;
import corpx1.XNXTBL;
import corpx1.XSUTBL;
import corpx2.XNXCD;
import corpx2.XNXDESC;
import corpx2.XSUABRV;
import corpx2.XSUCD;
import corpx2.XSUKEY;
import corpy2.YLACD;
import corpy2.YLATBL;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import kl.common.KIZTBL;
import ku.common.KUCCONM;
import ku.common.KUCREC;
import ku.common.KUISKUID;
import ku.common.KUKREC;
import ku.common.KUMSTRID;
import ku.common.KUZREC;
import sy.common.SY1REC;
import sy.common.SY1SSTNM;
import ta.common.TA1REC;
import ta.common.TA2REC;
//*** PROGRAM=KG0H ****
// ------------  kg0h - maintenance product processing --------
// 
// overview:  this application performs maintenance on the
//            dcust.vcuxsu02
// 
// date written: 11/91
// author:       Colin Hellmer
// 
// ************************************************************
// *              maintenance history log                     *
// ************************************************************
//  11/27/91  dsalzw  fixed misc bugs
//  12/10/91  chellm  added edit error for style not found.
//  01/15/92  chellm  Fixed misc bugs (security, YLA Desc)
//  02/27/92  chellm  Fixed status code problem
//  10/31/93  chellm  CSP 4.1 Conversion
//  03/11/94  chellm  Database Changes
//                    Added xdz-data-dist-cd
//  11/19/97  VRAMAC  Y2K MODIFICATIONS MADE TO:
//                    REGEN THE APPLICATION TO PICK UP NEW
//                    COPY OF XX0XS01
//  08/27/98  OVAZQU  Use vcuxsu02 instead of vcuxsu01 so the
//                    program can reference new store-id field
//                    on table.
// *********************
Program KG0H type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CU00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KG0HW01 KG0HW01; // record
  KG0HW02 KG0HW02; // record
  KUCREC KUCREC; // record
  KUKREC KUKREC; // record
  KUZREC KUZREC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  VCUXSU02 VCUXSU02; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KIZTBL; // table
  use XSUTBL; // table
  use XGPTBL; // table
  use XGBTBL; // table
  use XNXTBL; // table
  use YLATBL; // table
  use KG0HM.KG0HM100, // form
  		KG0HM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KG0H-000: KG0H-000();
    goto KG0H-100; /* converse maintenance screen*/
    ;
    KG0H-100: KG0H-100();
    ;
    goto KG0H-100; /* maintenance screen*/
    ;
  end // end main
end // end KG0H

// init processing
Function KG0H-000()
   /* *********************************************/
    /* initialization of variables              **/
   /* *********************************************/
  ;
  XSENTRY();
  ;
  XSSEGTR(); /* set segmented transaction id*/
  ;
  set KG0HM100 initial; /* sales resp screen*/
  set KG0HW01 empty; /* working storage*/
  set KG0HW02 empty;
  set VCUXSU02 empty;
  set SY1REC empty;
  set KUCREC empty;
  set KUKREC empty;
  set TA1REC empty;
  set TA2REC empty;
  set SQLCA empty;
  ;
  KG0HW01.KG0HW-CA-COMPANY = 0;
  KG0HW01.KG0HW-CA-DEPARTMENT = 0;
  ;
  KG0HW-OVRFLW-MSG = "WORKING STORAGE IS FULL, ONLY 100 ROWS DISPLAYED";
  KG0HW01.KG0HW-ERROR-FL = "N"; /* set error flag*/
  ;
  ;
   /* ****************************/
   /* check fast path entry*/
   /* ****************************/
  ;
  ;
  KG0HW01.KG0HW-CAUSERA = COMMAREA.CAUSERA; /* key from add menu*/
  if (COMMAREA.CAITEM != " ")
    KG0HW01.KG0HW-CAUSERA = COMMAREA.CAITEM; /* key from fastpath*/
  end
  ;
  if (KG0HW01.KG0HW-CA-CO-CHAR is numeric)
    KG0HM100.KUISKUID = KG0HW01.KG0HW-CA-COMPANY;
    KG0HW02.KUISKUID = KG0HW01.KG0HW-CA-COMPANY;
  else
    KG0HM100.KUISKUID = 0;
    KG0HW01.KG0HW-CA-COMPANY = 0;
    KG0HW02.KUISKUID = 0;
  end
  ;
  if (KG0HW01.KG0HW-CA-STOR-CHAR is numeric)
    KG0HM100.KUMSTRID = KG0HW01.KG0HW-CA-STORE;
    KG0HW02.KUMSTRID = KG0HW01.KG0HW-CA-STORE;
  else
    KG0HM100.KUMSTRID = 0;
    KG0HW02.KUMSTRID = 0;
  end
  ;
  if (KG0HW01.KG0HW-CA-DP-CHAR is numeric)
    KG0HM100.XNXCD = KG0HW01.KG0HW-CA-DEPARTMENT;
    KG0HW02.XNXCD = KG0HW01.KG0HW-CA-DEPARTMENT;
  else
    KG0HM100.XNXCD = 0;
    KG0HW01.KG0HW-CA-DEPARTMENT = 0;
    KG0HW02.XNXCD = 0;
  end
  ;
  ;
  ;
  XX0XS01(); /* get todays date*/
  ;
  ;
  if (KG0HM100.KUISKUID > 0) /* if a company is available*/
    KG0H-110(); /* get company info*/
    if (KG0HW01.KG0HW-ERROR-FL == "N") /* if good company*/
      KG0H-200(); /* build first screen*/
    end
  end
  ;
  ;
  ;
  KG0H-300(); /* set up security*/
  ;
end // end KG0H-000

// converse the screen
Function KG0H-100()
   /* ***********************************************/
   /* this process will control maintenance       **/
   /* processing for KG0HM100.                    **/
                                  /* **/
   /* steps:                                      **/
   /* -- present the screen                       **/
   /* -- edit special keys                        **/
   /* -- edit the screen user entry               **/
                                  /* **/
   /* ***********************************************/
  ;
  KG0HW01.KG0HW-ERROR-FL = "N"; /* set error flag*/
  KG0HM100.KG0HM-MESSAGE = KG0HW01.KG0HW-MESSAGE; /* message number*/
  ;
  if (KG0HW-GET-NEW-CMPNY-FL == "Y")
    KG0H-110(); /* get cmpny info*/
    if (KG0HW01.KG0HW-ERROR-FL == "N") /* if valid company*/
      KG0H-200(); /* build new screen*/
      KG0H-300(); /* set security*/
    end
  end
  ;
  ;
  if (COMMAREA.XWHCD == "51")
    set KG0HM100.KG0HM-KUMSTRID-TITLE initialAttributes;
    set KG0HM100.KUMSTRID normal;
  else
    KG0HM100.KUMSTRID = 0;
    set KG0HM100.KG0HM-KUMSTRID-TITLE invisible, skip;
    set KG0HM100.KUMSTRID invisible, skip, noHighLight;
  end
  ;
   /*  */
  converse KG0HM100 ;
  ;
  KG0HW01.KG0HW-ERROR-FL = "N"; /* set error flag*/
  KG0HW-GET-NEW-CMPNY-FL = "N";
  KG0HW01.KG0HW-MESSAGE = " ";
  KG0HM100.KG0HM-MESSAGE = " ";
  ;
  ;
  KG0H-400(); /* edit special keys*/
  ;
  if (KG0HW01.KG0HW-ERROR-FL == "N")
    KG0H-405(); /* edit company info*/
  end
  ;
  if (KG0HW01.KG0HW-ERROR-FL == "N"
   && KG0HW-GET-NEW-CMPNY-FL == "N")
    KG0H-420(); /* edit screen*/
  end
  ;
  if (KG0HW01.KG0HW-ERROR-FL == "N"
   && KG0HW-GET-NEW-CMPNY-FL == "N")
    KG0H-700(); /* edit page counter*/
  end
  ;
  KG0H-300(); /* set security*/
  ;
end // end KG0H-100

// format company data
Function KG0H-110()
   /* *********************************************************/
   /* *  kg0h110 - format company data*/
   /* *********************************************************/
  ;
   /* *****  format company data*/
  set KUCREC empty; /* clear out company record*/
  set KUKREC empty; /* clear out parent record*/
  ;
  KG0HW01.KUISKUID = KG0HM100.KUISKUID; /* save top of map data*/
  KG0HW01.KUMSTRID = KG0HM100.KUMSTRID;
  KG0HW01.XNXCD = KG0HM100.XNXCD;
  set KG0HM100 initial;
  KG0HM100.KUISKUID = KG0HW01.KUISKUID; /* restore map data*/
  KG0HM100.XNXCD = KG0HW01.XNXCD;
  KG0HM100.KUMSTRID = KG0HW01.KUMSTRID;
  set KG0HM100.KUISKUID normal;
  set KG0HM100.XNXCD normal;
  ;
  KUCREC.KUCCOID = KG0HM100.KUISKUID; /* set company key*/
  KG0H-120(); /* read vcmpny01*/
  ;
  if (KG0HW01.KG0HW-ERROR-FL != "Y") /* no errors found?*/
    KG0HM100.KUCCONM = KG0HW02.KUCCONM;
  else
    set KG0HM100.KUISKUID cursor, bold;
    return;
  end
  ;
  ;
   /* ********************************************************/
     /* get department description*/
   /* ********************************************************/
  if (KG0HM100.XNXCD in XNXTBL.XNXCD)
    KG0HM100.XNXDESC = XNXTBL.XNXDESC[sysVar.arrayIndex];
  else
    set KG0HM100.XNXCD cursor, bold;
    return;
  end
  ;
  ;
  KG0HW02.KUISKUID = KG0HM100.KUISKUID; /* save new map data*/
  KG0HW02.KUMSTRID = KG0HM100.KUMSTRID;
  KG0HW02.XNXCD = KG0HM100.XNXCD;
  ;
  ;
end // end KG0H-110

// read company information
Function KG0H-120()
   /* *************************************************/
   /* kg0h120 - get company record   kucrec*/
   /* *************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* read cmpny01*/
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    set KG0HM100.KUISKUID initialAttributes;
    KG0HM100.KUCCONM = KUCREC.KUCCONM;
    KG0HW02.KUCCONM = KUCREC.KUCCONM;
    KG0HW02.KUISKUID = KUCREC.KUCCOID;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      if (KUCREC.KUCCOID == 0)
        set KG0HM100.KUISKUID initialAttributes;
        KG0HM100.KUCCONM = "GENERIC COMPANY";
      else
        KG0H-130(); /* read parent*/
      end
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1TBLKE = KG0HW01.KG0HW-CAUSERA;
      TA1REC.TA1PGMNM = "KG0H120";
      TA1REC.TA1LOC = "READING DB2 CMPNY01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end
  ;
  ;
end // end KG0H-120

// read parent information
Function KG0H-130()
   /* *************************************************/
   /* kg0h130 - get parent record   kukrec*/
   /* *************************************************/
  ;
  set SQLCA empty;
  ;
  KUKREC.KUKPCOID = KG0HM100.KUISKUID;
  call "IO0030" ("S ", SQLCA, KUKREC) {isNoRefresh = yes, isExternal = yes}; /* read cmpny01*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* MOVE 'Y' TO KG0HW01.KG0HWUPM;   /* set updt to yes*/
    set KG0HM100.KUISKUID initialAttributes;
    KG0HM100.KUCCONM = KUKREC.KUKPCONM;
    KG0HW02.KUCCONM = KUKREC.KUKPCONM;
    KG0HW02.KUISKUID = KUKREC.KUKPCOID;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      /* MOVE 'N' TO KG0HW01.KG0HWUPM;        /* set updt to no*/
      KG0HW01.KG0HW-ERROR-FL = "Y";
      converseLib.validationFailed(25);
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VPARNT01";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1TBLKE = KG0HW01.KG0HW-CAUSERA;
      TA1REC.TA1PGMNM = "KG0H130";
      TA1REC.TA1LOC = "READING DB2 PARNT01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end
  ;
  ;
end // end KG0H-130

// build first screen
Function KG0H-200()
   /* **********************************************/
   /* * this process will load all rows into      **/
   /* *   1. working storage                      **/
   /* *   2. build first screen                   **/
   /* **********************************************/
  ;
  KG0HW01.KG0HW-EOF = "N";
  KG0HW01.KG0HW-MESSAGE = " ";
  ;
  KG0H-210(); /* get all rows*/
  ;
  KG0HW02.KG0HW-TEMP-IX = 0; /* init temp table index*/
  KG0HW02.KG0HW-CURR-IX = 0; /* init current table index*/
  KG0HW02.KG0HW-PREV-IX = 0; /* init previoustable index*/
  KG0HW01.KG0HW-SCRN-CURR-IX = 0; /* init current screen index*/
  KG0HW01.KG0HW-CURR-PAGE = 1; /* current page*/
  ;
  if (KG0HW01.KG0HW-ERROR-FL == "N") /* no errors*/
    KG0H-260(); /* prepare first screen*/
    KG0HW02.KG0HW-CURR-IX = KG0HW02.KG0HW-TEMP-IX;
                                                     /* current table index*/
  end
  ;
end // end KG0H-200

// select rows
Function KG0H-210()
   /* ***************************************/
   /* Select all rows*/
   /* ***************************************/
  ;
  set VCUXSU02 empty;
  set KG0HW02 empty; /* empty ws-table*/
  ;
  KG0HW01.KG0HW-COUNTER = 0; /* nbr of rows*/
  KG0HW02.KUISKUID = KG0HM100.KUISKUID;
  KG0HW02.KUMSTRID = KG0HM100.KUMSTRID;
  KG0HW02.KUCCONM = KG0HM100.KUCCONM;
  KG0HW02.XNXCD = KG0HM100.XNXCD;
  KG0HW02.XNXDESC = KG0HM100.XNXDESC;
  ;
  VCUXSU02.KUISKUID = KG0HM100.KUISKUID;
  VCUXSU02.KUMSTRID = KG0HM100.KUMSTRID;
  VCUXSU02.XNXCD = KG0HM100.XNXCD;
  ;
  KG0H-220(); /* declare cursor*/
  ;
  KG0H-230(); /* get first row*/
  ;
  if (KG0HW01.KG0HW-EOF == "Y")
    KG0H-240(); /* close cursor*/
    KG0HW01.KG0HW-ERROR-FL = "Y";
    converseLib.validationFailed(39); /* no rows found*/
    return;
  end
  ;
  ;
  ;
   /* ***************************************/
   /* * load row into ws-table             **/
   /* ***************************************/
  ;
  while (KG0HW01.KG0HW-EOF == "N" /* while there are rows to process*/
   && KG0HW01.KG0HW-COUNTER < 200) /* array is full*/
    ;
    KG0HW01.KG0HW-COUNTER = KG0HW01.KG0HW-COUNTER + 1;
                                   /* add 1 to total rows*/
    ;
    KG0H-250(); /* load ws-table*/
    ;
    KG0H-230(); /* get next row*/
  end
  ;
  KG0H-240(); /* close cursor*/
  ;
  KG0HW02.KG0HW-BOTTOM = KG0HW02.KG0HW-CURR-IX; /* bottom of ws-table*/
  ;
  KG0HW01.KG0HW-TOT-PAGE = KG0HW02.KG0HW-BOTTOM / 13;
  ;
  KG0HW01.KG0HW-REMAINDER = KG0HW02.KG0HW-BOTTOM % 13;
  ;
  if (KG0HW01.KG0HW-REMAINDER > 0)
    KG0HW01.KG0HW-TOT-PAGE = KG0HW01.KG0HW-TOT-PAGE + 1;
  end
  ;
  ;
  if (KG0HW01.KG0HW-COUNTER == 200) /* array is full*/
    KG0HW01.KG0HW-MESSAGE = KG0HW01.KG0HW-OVRFLW-MSG; /* set message*/
  end
  ;
  ;
end // end KG0H-210

// declare select cursor
Function KG0H-220()
   /* *******************************************/
   /* declare select cursor*/
   /* *******************************************/
  ;
  ;
  set SQLCA empty;
  ;
  call "VCUXSU02" ("S1", SQLCA, VCUXSU02) {isNoRefresh = yes, isExternal = yes}; /* all sub-ords for ord*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUXSU02";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KG0H220";
    TA1REC.TA1LOC = "DECLARE CURSOR ON VCUXSU02";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
  ;
end // end KG0H-220

// fetch next row
Function KG0H-230()
   /* *******************************************/
   /* fetch next row*/
   /* *******************************************/
  ;
  call "VCUXSU02" ("N1", SQLCA, VCUXSU02) {isNoRefresh = yes, isExternal = yes}; /* read*/
  ;
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KG0HW01.KG0HW-EOF = "Y"; /* set end-of-file flag to 'yes'*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCUXSU02";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1PGMNM = "KG0H230";
      TA1REC.TA1LOC = "FETCH ROW ON VCUXSU02";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end
  ;
  ;
end // end KG0H-230

// close cursor
Function KG0H-240()
   /* *******************************************/
   /* close cursor*/
   /* *******************************************/
  ;
  ;
  call "VCUXSU02" ("C1", SQLCA, VCUXSU02) {isNoRefresh = yes, isExternal = yes}; /* all sub-ords for ord*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUXSU02";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KG0H240";
    TA1REC.TA1LOC = "CLOSE CURSOR ON VCUXSU02";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
  ;
end // end KG0H-240

// load ws-table
Function KG0H-250()
   /* ***************************************/
   /* * load all rows into ws-table        **/
   /* ***************************************/
  ;
  KG0HW02.KG0HW-CURR-IX = KG0HW02.KG0HW-CURR-IX + 1; /* add 1 to index table*/
  ;
  KG0HW02.KG0HW-OPTION[KG0HW-CURR-IX] = " ";
  ;
  KG0HW02.XSUCD[KG0HW-CURR-IX] = VCUXSU02.XSUCD;
  if (VCUXSU02.XSUCD == "**")
    KG0HW02.XSUABRV[KG0HW-CURR-IX] = "WILD  ";
  else
    KG0HW01.XSUCD = VCUXSU02.XSUCD;
    KG0HW01.XGPCD = VCUXSU02.XGPCD;
    if (KG0HW01.XSUKEY in XSUTBL.XSUKEY)
      KG0HW02.XSUABRV[KG0HW-CURR-IX] = XSUTBL.XSUABRV[sysVar.arrayIndex];
    else
      KG0HW02.XSUABRV[KG0HW-CURR-IX] = "     ";
    end
  end
  ;
  KG0HW02.XGPCD[KG0HW-CURR-IX] = VCUXSU02.XGPCD;
  ;
  KG0HW02.XGBCD[KG0HW-CURR-IX] = VCUXSU02.XGBCD;
  if (VCUXSU02.XGBCD == "**")
    KG0HW02.XGBABRV[KG0HW-CURR-IX] = "WILD  ";
  else
    if (VCUXSU02.XGBCD in XGBTBL.XGBCD)
      KG0HW02.XGBABRV[KG0HW-CURR-IX] = XGBTBL.XGBABRV[sysVar.arrayIndex];
    else
      KG0HW02.XGBABRV[KG0HW-CURR-IX] = "     ";
    end
  end
  ;
  KG0HW02.CU-HANG-STY-NBR[KG0HW-CURR-IX] = VCUXSU02.CU-HANG-STY-NBR;
  ;
  KG0HW02.CU-HANG-XGP-CD[KG0HW-CURR-IX] = VCUXSU02.CU-HANG-XGP-CD;
  ;
  if (VCUXSU02.CU-HANG-STY-NBR != " ")
    SY1REC.XGPCD = VCUXSU02.CU-HANG-XGP-CD;
    SY1REC.SY1STNBR = VCUXSU02.CU-HANG-STY-NBR;
    set SQLCA empty;
    ;
    call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      KG0HW02.SY1SSTNM[KG0HW-CURR-IX] = SY1REC.SY1SSTNM;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        KG0HW02.SY1SSTNM[KG0HW-CURR-IX] = "          ";
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "ABND";
        TA1REC.TA1DBASE = "DPROD";
        TA1REC.TA1TBLVU = "VSTYLE01";
        TA1REC.TA1MAP = " ";
        TA1REC.TA1PGMNM = "KG0H250";
        TA1REC.TA1LOC = "SELECTING SHORT STY NAME  ";
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
    end
  else
    KG0HW02.SY1SSTNM[KG0HW-CURR-IX] = " ";
  end
  ;
  ;
  if (VCUXSU02.YLACD[1] != " ")
    KG0HW02.KG0HW-YLACD1[KG0HW-CURR-IX] = VCUXSU02.YLACD[1];
    if (VCUXSU02.YLACD[1] == "**")
      KG0HW02.KG0HW-YLA-ABRV1[KG0HW-CURR-IX] = "WILD  ";
    else
      if (VCUXSU02.YLACD[1] in YLATBL.YLACD)
        KG0HW02.KG0HW-YLA-ABRV1[KG0HW-CURR-IX] = YLATBL.YLAABRV[sysVar.arrayIndex];
      else
        KG0HW02.KG0HW-YLA-ABRV1[KG0HW-CURR-IX] = "     ";
      end
    end
  end
  ;
  if (VCUXSU02.YLACD[2] != " ")
    KG0HW02.KG0HW-YLACD2[KG0HW-CURR-IX] = VCUXSU02.YLACD[2];
    if (VCUXSU02.YLACD[2] == "**")
      KG0HW02.KG0HW-YLA-ABRV2[KG0HW-CURR-IX] = "WILD  ";
    else
      if (VCUXSU02.YLACD[2] in YLATBL.YLACD)
        KG0HW02.KG0HW-YLA-ABRV2[KG0HW-CURR-IX] = YLATBL.YLAABRV[sysVar.arrayIndex];
      else
        KG0HW02.KG0HW-YLA-ABRV2[KG0HW-CURR-IX] = "     ";
      end
    end
  end
  ;
  ;
  ;
end // end KG0H-250

// prepare first screen
Function KG0H-260()
   /* *********************************************/
   /* *  prepare the first screen to be displayed**/
   /* *********************************************/
  ;
  set KG0HM100 initial; /* reset screen*/
  ;
   /* ******************************/
   /* move ws data to screen*/
   /* ******************************/
  ;
  KG0HM100.KG0HM-DATE = VGVar.currentShortGregorianDate; /* prepare date*/
  ;
  ;
  KG0HM100.KG0HM-CURR-PAGE = KG0HW01.KG0HW-CURR-PAGE;
                                   /* set current page*/
  KG0HM100.KG0HM-TOT-PAGE = KG0HW01.KG0HW-TOT-PAGE; /* set total page*/
  ;
  KG0HM100.KUISKUID = KG0HW02.KUISKUID; /* company id*/
  KG0HM100.KUCCONM = KG0HW02.KUCCONM; /* company name*/
  KG0HM100.KUMSTRID = KG0HW02.KUMSTRID; /* store id*/
  KG0HM100.XNXCD = KG0HW02.XNXCD; /* department id*/
  KG0HM100.XNXDESC = KG0HW02.XNXDESC; /* department name*/
  ;
  KG0HW01.KG0HW-SCRN-TOP = 0; /* init screen top*/
  ;
  while (KG0HW01.KG0HW-SCRN-TOP < 13
   && KG0HW02.KG0HW-TEMP-IX < KG0HW02.KG0HW-BOTTOM)
    KG0HW01.KG0HW-SCRN-TOP = KG0HW01.KG0HW-SCRN-TOP + 1;
    KG0HW02.KG0HW-TEMP-IX = KG0HW02.KG0HW-TEMP-IX + 1;
    if (KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] == "X")
      set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] skip, bold;
    else
      set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] initialAttributes;
    end
    KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX];
    ;
    KG0HM100.XSUCD[KG0HW-SCRN-TOP] = KG0HW02.XSUCD[KG0HW-TEMP-IX];
    KG0HM100.XSUABRV[KG0HW-SCRN-TOP] = KG0HW02.XSUABRV[KG0HW-TEMP-IX];
    ;
    KG0HM100.XGPCD[KG0HW-SCRN-TOP] = KG0HW02.XGPCD[KG0HW-TEMP-IX];
    ;
    KG0HM100.XGBCD[KG0HW-SCRN-TOP] = KG0HW02.XGBCD[KG0HW-TEMP-IX];
    KG0HM100.XGBABRV[KG0HW-SCRN-TOP] = KG0HW02.XGBABRV[KG0HW-TEMP-IX];
    ;
    KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] = KG0HW02.CU-HANG-XGP-CD[KG0HW-TEMP-IX];
    ;
    KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP] = KG0HW02.CU-HANG-STY-NBR[KG0HW-TEMP-IX];
    ;
    KG0HM100.SY1SSTNM[KG0HW-SCRN-TOP] = KG0HW02.SY1SSTNM[KG0HW-TEMP-IX];
    ;
    KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-YLACD1[KG0HW-TEMP-IX];
    ;
    KG0HM100.KG0HM-YLA-ABRV1[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-YLA-ABRV1[KG0HW-TEMP-IX];
    ;
    KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-YLACD2[KG0HW-TEMP-IX];
    ;
    KG0HM100.KG0HM-YLA-ABRV2[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-YLA-ABRV2[KG0HW-TEMP-IX];
    ;
     /* set added field to define; skip existing rows*/
    set KG0HM100.XSUCD[KG0HW-SCRN-TOP] skip;
    set KG0HM100.XGPCD[KG0HW-SCRN-TOP] skip;
    set KG0HM100.XGBCD[KG0HW-SCRN-TOP] skip;
  end
  ;
  KG0HW01.KG0HW-SCRN-CURR-IX = KG0HW01.KG0HW-SCRN-TOP;
                                   /* current screen index*/
  if (KG0HW02.KG0HW-TEMP-IX == KG0HW02.KG0HW-BOTTOM
   && KG0HW01.KG0HW-ERROR-FL == "N"
   && converseVar.validationMsgNum == 0)
    converseLib.validationFailed(39); /* last record display*/
  end
  ;
  ;
  while (KG0HW01.KG0HW-SCRN-TOP < 13)
    KG0HW01.KG0HW-SCRN-TOP = KG0HW01.KG0HW-SCRN-TOP + 1;
    set KG0HM100.XSUCD[KG0HW-SCRN-TOP] initialAttributes;
    set KG0HM100.XGPCD[KG0HW-SCRN-TOP] initialAttributes;
    set KG0HM100.XGBCD[KG0HW-SCRN-TOP] initialAttributes;
    set KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] initialAttributes;
    set KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP] initialAttributes;
    set KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] initialAttributes;
    set KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] initialAttributes;
  end
  ;
  ;
end // end KG0H-260

// set security for update
Function KG0H-300()
   /* ***************************************/
   /* * set security for screen            **/
   /* ***************************************/
  ;
  KG0HW01.KG0HW-SCRN-TOP = 0;
  ;
  while (KG0HW01.KG0HW-SCRN-TOP < 13)
    KG0HW01.KG0HW-SCRN-TOP = KG0HW01.KG0HW-SCRN-TOP + 1;
    if (COMMAREA.CAADDFL == "Y" /* security for add*/
     || COMMAREA.CADELFL == "Y") /* security for delete*/
      if (KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] == "C")
        set KG0HM100.XSUCD[KG0HW-SCRN-TOP] skip;
        set KG0HM100.XGPCD[KG0HW-SCRN-TOP] skip;
        set KG0HM100.XGBCD[KG0HW-SCRN-TOP] skip;
      end
    else
      if (COMMAREA.CACHGFL == "Y") /* security for change*/
        set KG0HM100.XSUCD[KG0HW-SCRN-TOP] skip;
        set KG0HM100.XGPCD[KG0HW-SCRN-TOP] skip;
        set KG0HM100.XGBCD[KG0HW-SCRN-TOP] skip;
      else
        set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] skip, invisible;
        set KG0HM100.XSUCD[KG0HW-SCRN-TOP] skip;
        set KG0HM100.XGPCD[KG0HW-SCRN-TOP] skip;
        set KG0HM100.XGBCD[KG0HW-SCRN-TOP] skip;
        set KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] skip;
        set KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP] skip;
        set KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] skip;
        set KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] skip;
      end
    end
  end
  ;
  ;
  if (KG0HW01.KG0HW-ERROR-FL == "Y") /* if errors*/
       /* next sentence*/
  else
    if (COMMAREA.CACHGFL == "Y") /* placement cursor*/
      set KG0HM100.KG0HM-OPTION[1] cursor;
    else
      set KG0HM100.KUISKUID cursor;
    end
  end
  ;
end // end KG0H-300

// pfkey processing for kg0hm100
Function KG0H-400()
   /* ************************************************/
    /* edit pfkeys and special keys                **/
   /* ************************************************/
  ;
   /* ***********************************/
        /* pa2 edit*/
   /* ***********************************/
  if (converseVar.eventKey is pa2) /* refresh the screen*/
    KG0H-200();
    return;
  end
  ;
  ;
   /* ***********************************/
        /* enter key edit*/
   /* ***********************************/
  if (converseVar.eventKey is enter)
    if (KG0HM100.CATOAP > " ") /* fast path*/
      if ("A" in KG0HW02.KG0HW-OPTION /* is there any updates pending*/
       || "D" in KG0HW02.KG0HW-OPTION)
        KG0HW01.KG0HW-ERROR-FL = "Y"; /* error message set*/
        converseLib.validationFailed(46); /* can not fast path while updates*/
                                   /* pending*/
        set KG0HM100.CATOAP cursor, bold;
        return;
      end
                                   /* key from curr screen*/
      KG0HW01.KG0HW-CA-COMPANY = KG0HM100.KUISKUID;
      KG0HW01.KG0HW-CA-STORE = KG0HM100.KUMSTRID;
      KG0HW01.KG0HW-CA-DEPARTMENT = KG0HM100.XNXCD;
      COMMAREA.CAUSERA = KG0HW01.KG0HW-CAUSERA;
      COMMAREA.CATOAP = KG0HM100.CATOAP;
      COMMAREA.CAITEM = KG0HM100.CAITEM;
      COMMAREA.CAFROMAP = "KG0H";
      XSEXIT();
      ;
      converseLib.validationFailed(48); /* invalid fast path*/
      KG0HW01.KG0HW-ERROR-FL = "Y";
      set KG0HM100.CATOAP cursor, bold;
    else
      set KG0HM100.CATOAP initialAttributes;
    end
    return;
  else
    if (KG0HM100.CATOAP > " ")
      KG0HW01.KG0HW-ERROR-FL = "Y";
      converseLib.validationFailed(48); /* can not fast path and use pf keys*/
      set KG0HM100.CATOAP cursor, bold;
      return;
    else
      set KG0HM100.CATOAP modified;
    end
  end
  ;
  ;
   /* ***********************************/
     /* pfkeys edit*/
   /* ***********************************/
  if ("D" in KG0HW02.KG0HW-OPTION /* if updates pending*/
   || "A" in KG0HW02.KG0HW-OPTION)
    if (converseVar.eventKey is pf1 /* help screens*/
     || converseVar.eventKey is pf3 /* exit screen*/
     || converseVar.eventKey is pf4) /* goal menu screen*/
      KG0HW01.KG0HW-ERROR-FL = "Y";
      converseLib.validationFailed(47);
      return;
    end
  end
  ;
  ;
   /* ***********************************/
     /* pf1 edit*/
   /* ***********************************/
  if (converseVar.eventKey is pf1) /* help screens*/
    COMMAREA.CACURRAP = "KG0H";
    XSPF1();
    KG0HM100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KG0HW01.KG0HW-ERROR-FL = "Y";
    return;
  end
  ;
  ;
   /* ***********************************/
     /* pf3 edit*/
   /* ***********************************/
  if (converseVar.eventKey is pf3) /* back to company update*/
    COMMAREA.CAITEM = " ";
    KG0HW01.KG0HW-CA-COMPANY = KG0HM100.KUISKUID;
    KG0HW01.KG0HW-CA-STORE = KG0HM100.KUMSTRID;
    KG0HW01.KG0HW-CA-DEPARTMENT = KG0HM100.XNXCD;
    COMMAREA.CAUSERA = KG0HW01.KG0HW-CAUSERA; /* key from curr screen*/
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    COMMAREA.CAFROMAP = "KG0H";
    XSEXIT();
    ;
    KG0HM100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KG0HW01.KG0HW-ERROR-FL = "Y";
    return;
  end
  ;
  ;
   /* ***********************************/
     /* pf4 edit*/
   /* ***********************************/
  if (converseVar.eventKey is pf4) /* back to goal menu*/
    COMMAREA.CAFROMAP = "KG0H";
    XSPF4();
  end
  ;
  ;
   /* ***********************************/
     /* pf5 edit*/
   /* ***********************************/
  if (converseVar.eventKey is pf5)
    KG0H-750(); /* display xsu popup*/
    return;
  end
  ;
  ;
   /* ***********************************/
     /* pf6 edit*/
   /* ***********************************/
  if (converseVar.eventKey is pf6)
    KG0H-760(); /* display xgb popup*/
    return;
  end
  ;
  ;
   /* ***********************************/
     /* pf7 edit*/
   /* ***********************************/
  if (converseVar.eventKey is pf7)
    KG0H-410(); /* scroll up*/
    return;
  end
  ;
  ;
   /* ***********************************/
     /* pf8 edit*/
   /* ***********************************/
  if (converseVar.eventKey is pf8)
    KG0H-440(); /* scroll down*/
    return;
  end
  ;
  ;
   /* ***********************************/
     /* pf9 edit*/
   /* ***********************************/
  if (converseVar.eventKey is pf9)
    KG0H-770(); /* display yla popup*/
    return;
  end
  ;
  ;
   /* ***********************************/
     /* pf12 edit*/
   /* ***********************************/
  if (converseVar.eventKey is pf12)
    KG0H-600(); /* update database*/
    return;
  end
  ;
  ;
  KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error flag*/
  converseLib.validationFailed(3); /* invalid key*/
  ;
  ;
end // end KG0H-400

// check for new company
Function KG0H-405()
   /* *********************************************************/
   /* *  kg0h405 - check for new company/department*/
   /* *********************************************************/
  ;
  if (KG0HM100.KUISKUID != KG0HW02.KUISKUID
   || KG0HM100.KUMSTRID != KG0HW02.KUMSTRID
   || KG0HM100.XNXCD != KG0HW02.XNXCD)
    KG0HW-GET-NEW-CMPNY-FL = "Y";
  end
  ;
  ;
end // end KG0H-405

// scroll up
Function KG0H-410()
   /* *********************************************************/
          /* scrolling up and editing takes place*/
   /* *********************************************************/
  ;
  ;
  if (KG0HW02.KG0HW-PREV-IX == 0 /* at the top of the screen*/
   && converseVar.validationMsgNum == 0)
    converseLib.validationFailed(38); /* can not scroll up*/
    KG0HW01.KG0HW-ERROR-FL = "Y";
    return;
  end
  ;
  KG0H-420(); /* edit current screen*/
  ;
  if (KG0HW01.KG0HW-ERROR-FL == "N")
    KG0HW02.KG0HW-CURR-IX = KG0HW02.KG0HW-PREV-IX;
                                   /* current eq  previous*/
    KG0HW01.KG0HW-SCRN-TOP = 13;
    ;
    while (KG0HW01.KG0HW-SCRN-TOP >= 1 /* load the screen with the ws table*/
     && KG0HW02.KG0HW-PREV-IX >= 1)
      if (KG0HW02.KG0HW-OPTION[KG0HW-PREV-IX] == "X")
        set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] skip, bold;
      else
        set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] initialAttributes;
      end
      KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-OPTION[KG0HW-PREV-IX];
      KG0HM100.XSUCD[KG0HW-SCRN-TOP] = KG0HW02.XSUCD[KG0HW-PREV-IX];
      KG0HM100.XGPCD[KG0HW-SCRN-TOP] = KG0HW02.XGPCD[KG0HW-PREV-IX];
      KG0HM100.XSUABRV[KG0HW-SCRN-TOP] = KG0HW02.XSUABRV[KG0HW-PREV-IX];
      KG0HM100.XGBCD[KG0HW-SCRN-TOP] = KG0HW02.XGBCD[KG0HW-PREV-IX];
      KG0HM100.XGBABRV[KG0HW-SCRN-TOP] = KG0HW02.XGBABRV[KG0HW-PREV-IX];
      KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] = KG0HW02.CU-HANG-XGP-CD[KG0HW-PREV-IX];
      KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP] = KG0HW02.CU-HANG-STY-NBR[KG0HW-PREV-IX];
      KG0HM100.SY1SSTNM[KG0HW-SCRN-TOP] = KG0HW02.SY1SSTNM[KG0HW-PREV-IX];
      KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-YLACD1[KG0HW-PREV-IX];
      KG0HM100.KG0HM-YLA-ABRV1[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-YLA-ABRV1[KG0HW-PREV-IX];
      KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-YLACD2[KG0HW-PREV-IX];
      KG0HM100.KG0HM-YLA-ABRV2[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-YLA-ABRV2[KG0HW-PREV-IX];
      /* IF KG0HW02.KG0HW-OPTION(KG0HW-PREV-IX) EQ 'A';*/
      /* SET KG0HM100.XSUCD(KG0HW-SCRN-TOP) DEFINED;*/
      /* SET KG0HM100.XGBCD(KG0HW-SCRN-TOP) DEFINED;*/
       /* SET KG0HM100.CU-HANG-XGP-CD(KG0HW-SCRN-TOP) DEFINED;*/
       /* SET KG0HM100.CU-HANG-STY-NBR(KG0HW-SCRN-TOP) DEFINED;*/
       /* SET KG0HM100.KG0HM-YLACD1(KG0HW-SCRN-TOP) DEFINED;*/
       /* SET KG0HM100.KG0HM-YLACD2(KG0HW-SCRN-TOP) DEFINED;*/
      /* ELSE;*/
      set KG0HM100.XSUCD[KG0HW-SCRN-TOP] skip;
      set KG0HM100.XGPCD[KG0HW-SCRN-TOP] skip;
      set KG0HM100.XGBCD[KG0HW-SCRN-TOP] skip;
       /* SET KG0HM100.CU-HANG-XGP-CD(KG0HW-SCRN-TOP) AUTOSKIP;*/
       /* SET KG0HM100.CU-HANG-STY-NBR(KG0HW-SCRN-TOP) AUTOSKIP;*/
       /* SET KG0HM100.KG0HM-YLACD1(KG0HW-SCRN-TOP) AUTOSKIP;*/
       /* SET KG0HM100.KG0HM-YLACD2(KG0HW-SCRN-TOP) AUTOSKIP;*/
      /* END;*/
      KG0HW01.KG0HW-SCRN-TOP = KG0HW01.KG0HW-SCRN-TOP - 1;
      KG0HW02.KG0HW-PREV-IX = KG0HW02.KG0HW-PREV-IX - 1;
    end
    ;
    ;
    KG0HW01.KG0HW-ERROR-FL = "Y"; /* reconverse the screen*/
    ;
    KG0HW01.KG0HW-CURR-PAGE = KG0HW01.KG0HW-CURR-PAGE - 1;
    KG0HM100.KG0HM-CURR-PAGE = KG0HW01.KG0HW-CURR-PAGE;
    ;
    if (KG0HW02.KG0HW-PREV-IX < 1)
      KG0HW02.KG0HW-PREV-IX = 0;
    end
    ;
  end
  ;
  ;
end // end KG0H-410

// edit screen kg0hm100
Function KG0H-420()
   /* ***************************************/
   /* edit screen*/
   /* ***************************************/
  ;
  KG0HW01.KG0HW-SCRN-TOP = 0; /* set screen index*/
  KG0HW02.KG0HW-TEMP-IX = KG0HW02.KG0HW-PREV-IX;
                                   /* temp ws-table index*/
  ;
  while (KG0HW01.KG0HW-SCRN-TOP < 13) /* go thru the screen*/
    KG0HW01.KG0HW-SCRN-TOP = KG0HW01.KG0HW-SCRN-TOP + 1;
                                   /* increment screen index*/
    KG0HW02.KG0HW-TEMP-IX = KG0HW02.KG0HW-TEMP-IX + 1;
                                   /* increment table index*/
    ;
    /* ***************************************/
     /* check for valid options             **/
    /* ***************************************/
    ;
    if (KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] == "A"
     || KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] == "C"
     || KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] == "D"
     || KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] == "X"
     || KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] == " ")
      ;
      if (KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] == "X") /* if screen & ws*/
        if (KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] == "X") /* both have 'x'*/
           /* next sentence                          no error*/
        else
          KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error flag*/
          converseLib.validationFailed(40); /* invalid options*/
          set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] cursor, bold;
        end
      end /* of 'x' option*/
      ;
     /* ***************************************/
      /* check for delete options            **/
     /* ***************************************/
      ;
      if (KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] == "D") /* if delete*/
        if (KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] == "D" /* ws must be 'd'*/
         || KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] == " ") /* or ' '*/
          if (COMMAREA.CADELFL == "Y")
            KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] = KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP];
            set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] initialAttributes;
          else
            KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error flag*/
            converseLib.validationFailed(40); /* invalid options*/
            set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] cursor, bold;
          end
        else
          KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error flag*/
          converseLib.validationFailed(40); /* invalid options*/
          set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] cursor, bold;
        end
      end /* of 'd' option*/
      ;
     /* ***************************************/
      /* check for add options             **/
     /* ***************************************/
      ;
      if (KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] == "A") /* if adding*/
        if (KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] == "A"
         || KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] == " ")
          if (COMMAREA.CAADDFL == "Y")
            KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] = KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP];
            set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] initialAttributes;
            KG0H-430(); /* edit new fields*/
          else
            KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error flag*/
            converseLib.validationFailed(40); /* invalid options*/
            set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] cursor, bold;
          end
        else
          KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error flag*/
          converseLib.validationFailed(40); /* invalid options*/
          set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] cursor, bold;
        end
      end /* of 'a' option*/
      ;
     /* ***************************************/
      /* check for update options          **/
     /* ***************************************/
      ;
      if (KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] == "C") /* if updating*/
        if (KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] == "C"
         || KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] == " ")
          KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] = KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP];
          set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] initialAttributes;
          KG0H-430(); /* edit new fields*/
        else
          KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error flag*/
          converseLib.validationFailed(40); /* invalid options*/
          set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] cursor, bold;
        end
      end /* of 'c' option*/
      ;
      if (KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] == " ") /* if blank*/
        if (KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] == "A")
          KG0H-435(); /* space out added fields*/
        end
        KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] = KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP];
        set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] initialAttributes;
      end /* of ' ' option*/
      ;
      ;
    else /* not a valid option*/
      KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error flag*/
      converseLib.validationFailed(40); /* invalid options*/
      set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] cursor, bold;
    end
    ;
  end /* of while loop*/
  ;
  ;
  if ("D" in KG0HW02.KG0HW-OPTION /* if any order has been*/
   || "A" in KG0HW02.KG0HW-OPTION /* marked for update*/
   || "C" in KG0HW02.KG0HW-OPTION) /* marked for update*/
    if (KG0HW01.KG0HW-ERROR-FL == "N") /* and no erroes*/
      converseLib.validationFailed(277); /* no changes marked*/
    end
  end
  ;
end // end KG0H-420

// edit add new row
Function KG0H-430()
   /* ***************************************/
   /* * edit add new row                   **/
   /* ***************************************/
  ;
  set KG0HM100.XSUCD[KG0HW-SCRN-TOP] initialAttributes;
  set KG0HM100.XGPCD[KG0HW-SCRN-TOP] initialAttributes;
  set KG0HM100.XGBCD[KG0HW-SCRN-TOP] initialAttributes;
  set KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] initialAttributes;
  set KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP] initialAttributes;
  set KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] initialAttributes;
  set KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] initialAttributes;
  ;
  ;
  if (KG0HM100.XGPCD[KG0HW-SCRN-TOP] in XGPTBL.XGPCD)
      /* next sentence*/
  else
    if (KG0HM100.XGPCD[KG0HW-SCRN-TOP] == " ")
      converseLib.validationFailed(5); /* required field missing*/
    else
      converseLib.validationFailed(413); /* set message invalid gpc*/
    end
    ;
    set KG0HM100.XGPCD[KG0HW-SCRN-TOP] bold;
    KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error*/
    return;
  end
  ;
  if (KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] != " ")
    if (KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] in XGPTBL.XGPCD
     && KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] == "04")
        /* next sentence*/
    else
      set KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] bold;
      KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error*/
      converseLib.validationFailed(416); /* set message invalid gpc*/
      return;
    end
  end
  ;
  ;
  if (KG0HM100.XSUCD[KG0HW-SCRN-TOP] == "**")
    KG0HM100.XSUABRV[KG0HW-SCRN-TOP] = "WILD  ";
  else
    KG0HW01.XSUCD = KG0HM100.XSUCD[KG0HW-SCRN-TOP];
    if (KG0HW01.XSUCD in XSUTBL.XSUCD)
      KG0HW01.XGPCD = KG0HM100.XGPCD[KG0HW-SCRN-TOP];
      if (KG0HW01.XSUKEY in XSUTBL.XSUKEY)
        KG0HM100.XSUABRV[KG0HW-SCRN-TOP] = XSUTBL.XSUABRV[sysVar.arrayIndex];
      else
        if (KG0HM100.XSUCD[KG0HW-SCRN-TOP] == "  ")
          converseLib.validationFailed(5); /* required field missing*/
        else
          converseLib.validationFailed(411); /* set message invalid combo*/
          KG0HM100.XSUABRV[KG0HW-SCRN-TOP] = "     ";
        end
        set KG0HM100.XSUCD[KG0HW-SCRN-TOP] cursor, bold;
        set KG0HM100.XGPCD[KG0HW-SCRN-TOP] bold;
        KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error*/
      end
    else
      KG0HM100.XSUABRV[KG0HW-SCRN-TOP] = "     ";
      set KG0HM100.XSUCD[KG0HW-SCRN-TOP] cursor, bold;
      set KG0HM100.XGPCD[KG0HW-SCRN-TOP] bold;
      KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error*/
      converseLib.validationFailed(412); /* set message invalid xsu*/
    end
  end
  ;
  ;
  if (KG0HM100.XGBCD[KG0HW-SCRN-TOP] == "**")
    KG0HM100.XGBABRV[KG0HW-SCRN-TOP] = "WILD  ";
  else
    if (KG0HM100.XGBCD[KG0HW-SCRN-TOP] in XGBTBL.XGBCD)
      KG0HM100.XGBABRV[KG0HW-SCRN-TOP] = XGBTBL.XGBABRV[sysVar.arrayIndex];
    else
      KG0HM100.XGBABRV[KG0HW-SCRN-TOP] = "     ";
      set KG0HM100.XGBCD[KG0HW-SCRN-TOP] cursor, bold;
      KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error*/
      converseLib.validationFailed(17); /* set message*/
    end
  end
  ;
  ;
  if (KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] == " "
   && KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] != " ")
    KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] = KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP];
    KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] = " ";
    KG0HM100.KG0HM-YLA-ABRV2[KG0HW-SCRN-TOP] = " ";
  end
  ;
  ;
  if (KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] == " "
   && KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] == " "
   && KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP] == " ")
    ;
    set KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP] cursor, bold;
    set KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] bold;
    KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error*/
    converseLib.validationFailed(414); /* set message*/
  end
  ;
  ;
  if (KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP] != " "
   || KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] != " ")
    SY1REC.XGPCD = KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP];
    SY1REC.SY1STNBR = KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP];
    set SQLCA empty;
    ;
    call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      KG0HM100.SY1SSTNM[KG0HW-SCRN-TOP] = SY1REC.SY1SSTNM;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        set KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP] cursor, bold;
        KG0HM100.SY1SSTNM[KG0HW-SCRN-TOP] = " ";
        KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error*/
        converseLib.validationFailed(415); /* set message*/
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "ABND";
        TA1REC.TA1DBASE = "DPROD";
        TA1REC.TA1TBLVU = "VSTYLE01";
        TA1REC.TA1MAP = " ";
        TA1REC.TA1PGMNM = "KG0H430";
        TA1REC.TA1LOC = "SELECTING SHORT STY NAME  ";
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
    end
  else
    KG0HM100.SY1SSTNM[KG0HW-SCRN-TOP] = " ";
  end
  ;
  ;
  if (KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] != " ")
    if (KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] in YLATBL.YLACD)
      KG0HM100.KG0HM-YLA-ABRV1[KG0HW-SCRN-TOP] = YLATBL.YLAABRV[sysVar.arrayIndex];
    else
      KG0HM100.KG0HM-YLA-ABRV1[KG0HW-SCRN-TOP] = "     ";
      set KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] cursor, bold;
      KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error*/
      converseLib.validationFailed(17); /* set message*/
    end
  else
    KG0HM100.KG0HM-YLA-ABRV1[KG0HW-SCRN-TOP] = "  ";
  end
  ;
  ;
  if (KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] != " ")
    if (KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] in YLATBL.YLACD)
      KG0HM100.KG0HM-YLA-ABRV2[KG0HW-SCRN-TOP] = YLATBL.YLAABRV[sysVar.arrayIndex];
    else
      KG0HM100.KG0HM-YLA-ABRV2[KG0HW-SCRN-TOP] = "     ";
      set KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] cursor, bold;
      KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error*/
      converseLib.validationFailed(17); /* set message*/
    end
  else
    KG0HM100.KG0HM-YLA-ABRV2[KG0HW-SCRN-TOP] = "  ";
  end
  ;
  ;
   /* ************************************************/
   /* * FOR ADDS, CHECK THE DB FOR LIKE RECORDS*/
   /* ************************************************/
  if (KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] == "A"
   && KG0HW01.KG0HW-ERROR-FL == "N") /* no other errors*/
    ;
    set SQLCA empty;
    VCUXSU02.KUISKUID = KG0HM100.KUISKUID;
    VCUXSU02.KUMSTRID = KG0HM100.KUMSTRID;
    VCUXSU02.XNXCD = KG0HM100.XNXCD;
    VCUXSU02.XGPCD = KG0HM100.XGPCD[KG0HW-SCRN-TOP];
    VCUXSU02.XSUCD = KG0HM100.XSUCD[KG0HW-SCRN-TOP];
    VCUXSU02.XGBCD = KG0HM100.XGBCD[KG0HW-SCRN-TOP];
    ;
    call "VCUXSU02" ("S ", SQLCA, VCUXSU02) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error flag*/
      converseLib.validationFailed(108); /* invalid options*/
      set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] cursor, bold;
      ;
      return;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
         /* next sentence*/
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "ABND";
        TA1REC.TA1DBASE = "DCUST";
        TA1REC.TA1TBLVU = "VCUXSU02";
        TA1REC.TA1MAP = " ";
        TA1REC.TA1PGMNM = "KG0H430";
        TA1REC.TA1LOC = "SELECT ROW ON VCUXSU02";
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
    end
  end
  ;
  ;
  KG0H-431(); /* check for duplicates*/
  ;
  ;
  if (KG0HW01.KG0HW-ERROR-FL == "N") /* no errors*/
     /* move map into working storage*/
    KG0HW02.XGPCD[KG0HW-TEMP-IX] = KG0HM100.XGPCD[KG0HW-SCRN-TOP];
    KG0HW02.XSUCD[KG0HW-TEMP-IX] = KG0HM100.XSUCD[KG0HW-SCRN-TOP];
    KG0HW02.XSUABRV[KG0HW-TEMP-IX] = KG0HM100.XSUABRV[KG0HW-SCRN-TOP];
    KG0HW02.XGBCD[KG0HW-TEMP-IX] = KG0HM100.XGBCD[KG0HW-SCRN-TOP];
    KG0HW02.XGBABRV[KG0HW-TEMP-IX] = KG0HM100.XGBABRV[KG0HW-SCRN-TOP];
    KG0HW02.CU-HANG-XGP-CD[KG0HW-TEMP-IX] = KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP];
    KG0HW02.CU-HANG-STY-NBR[KG0HW-TEMP-IX] = KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP];
    KG0HW02.SY1SSTNM[KG0HW-TEMP-IX] = KG0HM100.SY1SSTNM[KG0HW-SCRN-TOP];
    KG0HW02.KG0HW-YLACD1[KG0HW-TEMP-IX] = KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP];
    KG0HW02.KG0HW-YLA-ABRV1[KG0HW-TEMP-IX] = KG0HM100.KG0HM-YLA-ABRV1[KG0HW-SCRN-TOP];
    KG0HW02.KG0HW-YLACD2[KG0HW-TEMP-IX] = KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP];
    KG0HW02.KG0HW-YLA-ABRV2[KG0HW-TEMP-IX] = KG0HM100.KG0HM-YLA-ABRV2[KG0HW-SCRN-TOP];
    KG0HW02.XXXSTAT[KG0HW-TEMP-IX] = "A";
    ;
    if (KG0HW02.KG0HW-TEMP-IX > KG0HW02.KG0HW-BOTTOM) /* if more on screen*/
      /* ***************************************/
      /* * new row added - recalculate bottom **/
      /* ***************************************/
      KG0HW02.KG0HW-CURR-IX = KG0HW02.KG0HW-CURR-IX + 1;
      KG0HW02.KG0HW-BOTTOM = KG0HW02.KG0HW-CURR-IX;
                                   /* bottom of ws-table*/
      KG0HW01.KG0HW-TOT-PAGE = KG0HW02.KG0HW-BOTTOM / 13;
      KG0HW01.KG0HW-REMAINDER = KG0HW02.KG0HW-BOTTOM % 13;
      if (KG0HW01.KG0HW-REMAINDER > 0)
        KG0HW01.KG0HW-TOT-PAGE = KG0HW01.KG0HW-TOT-PAGE + 1;
      end
      KG0HM100.KG0HM-TOT-PAGE = KG0HW01.KG0HW-TOT-PAGE;
    end /* end recalculate bottom*/
    ;
    if (KG0HM100.KG0HM-TOT-PAGE == 1 /* if first row added for*/
     && KG0HM100.KG0HM-CURR-PAGE == 0) /* new company*/
      KG0HW01.KG0HW-CURR-PAGE = 1; /* set up initial page number*/
      KG0HM100.KG0HM-CURR-PAGE = 1;
    end
  end
  ;
  ;
end // end KG0H-430

// check for dups
Function KG0H-431()
   /* ********************************************/
   /* * check for duplicate row*/
   /* ********************************************/
  ;
  KG0HW02.KG0HW-EDIT-IX = 0; /* prepare table index*/
  ;
  while (KG0HW02.KG0HW-EDIT-IX < KG0HW02.KG0HW-BOTTOM)
    KG0HW02.KG0HW-EDIT-IX = KG0HW02.KG0HW-EDIT-IX + 1; /**/
    ;
    if (KG0HM100.XGPCD[KG0HW-SCRN-TOP] == KG0HW02.XGPCD[KG0HW-EDIT-IX]
     && KG0HM100.XSUCD[KG0HW-SCRN-TOP] == KG0HW02.XSUCD[KG0HW-EDIT-IX]
     && KG0HM100.XGBCD[KG0HW-SCRN-TOP] == KG0HW02.XGBCD[KG0HW-EDIT-IX]
     && KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] == "A")
      if (KG0HW02.KG0HW-EDIT-IX == KG0HW02.KG0HW-TEMP-IX) /**/
       /* next sentence*/
      else
        set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] cursor, bold;
        KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error*/
        converseLib.validationFailed(108); /* set message*/
      end
    end
    ;
  end
  ;
  ;
end // end KG0H-431

// clear empty lines
Function KG0H-435()
   /* ***************************************/
   /* space out add on screen*/
   /* ***************************************/
  ;
   /* space out add*/
  KG0HM100.XGPCD[KG0HW-SCRN-TOP] = " ";
  KG0HM100.XSUCD[KG0HW-SCRN-TOP] = " ";
  KG0HM100.XSUABRV[KG0HW-SCRN-TOP] = " ";
  KG0HM100.XGBCD[KG0HW-SCRN-TOP] = " ";
  KG0HM100.XGBABRV[KG0HW-SCRN-TOP] = " ";
  KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] = " ";
  KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP] = " ";
  KG0HM100.SY1SSTNM[KG0HW-SCRN-TOP] = " ";
  KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] = " ";
  KG0HM100.KG0HM-YLA-ABRV1[KG0HW-SCRN-TOP] = " ";
  KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] = " ";
  KG0HM100.KG0HM-YLA-ABRV2[KG0HW-SCRN-TOP] = " ";
  KG0HW02.KG0HW-SCRN-ROW[KG0HW-TEMP-IX] = " ";
  ;
   /* *****************************************/
   /* * new row removed - recalculate bottom **/
   /* *****************************************/
  ;
  KG0HW02.KG0HW-CURR-IX = KG0HW02.KG0HW-CURR-IX - 1;
  ;
  KG0HW02.KG0HW-BOTTOM = KG0HW02.KG0HW-CURR-IX; /* bottom of ws-table*/
  ;
  KG0HW01.KG0HW-TOT-PAGE = KG0HW02.KG0HW-BOTTOM / 16;
  ;
  KG0HW01.KG0HW-REMAINDER = KG0HW02.KG0HW-BOTTOM % 16;
  ;
  if (KG0HW01.KG0HW-REMAINDER > 0)
    KG0HW01.KG0HW-TOT-PAGE = KG0HW01.KG0HW-TOT-PAGE + 1;
  end
  ;
  KG0HM100.KG0HM-TOT-PAGE = KG0HW01.KG0HW-TOT-PAGE;
  ;
  ;
end // end KG0H-435

// scroll down
Function KG0H-440()
   /* *********************************************************/
          /* scrolling down and editing takes place*/
   /* *********************************************************/
  ;
  if (KG0HW01.KG0HW-REMAINDER > 0) /* spaces on the page*/
    if (KG0HW02.KG0HW-CURR-IX == KG0HW02.KG0HW-BOTTOM /* at the bottom*/
     && converseVar.validationMsgNum == 0)           
      converseLib.validationFailed(39); /* end of data*/
      KG0HW01.KG0HW-ERROR-FL = "Y";
      return;
    end
  else
    if (KG0HW01.KG0HW-CURR-PAGE > KG0HW01.KG0HW-TOT-PAGE
     /* allow one page past*/
     && converseVar.validationMsgNum == 0) /* if no space on page*/
      converseLib.validationFailed(39); /* end of data*/
      KG0HW01.KG0HW-ERROR-FL = "Y";
      return;
    end
  end
  ;
  KG0H-420(); /* edit current screen*/
  ;
  if (KG0HW01.KG0HW-ERROR-FL == "N")
    KG0HW01.KG0HW-SCRN-TOP = 0;
    KG0HW02.KG0HW-PREV-IX = KG0HW02.KG0HW-CURR-IX;
    ;
    while (KG0HW01.KG0HW-SCRN-TOP < 13 /* load the screen with the ws table*/
     && KG0HW02.KG0HW-CURR-IX < KG0HW02.KG0HW-BOTTOM)
      KG0HW01.KG0HW-SCRN-TOP = KG0HW01.KG0HW-SCRN-TOP + 1;
      KG0HW02.KG0HW-CURR-IX = KG0HW02.KG0HW-CURR-IX + 1;
      if (KG0HW02.KG0HW-OPTION[KG0HW-CURR-IX] == "X")
                                   /* orders already updated*/
        set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] skip, bold;
      else
        set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] initialAttributes;
      end
      KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-OPTION[KG0HW-CURR-IX];
      KG0HM100.XGPCD[KG0HW-SCRN-TOP] = KG0HW02.XGPCD[KG0HW-CURR-IX];
      KG0HM100.XSUCD[KG0HW-SCRN-TOP] = KG0HW02.XSUCD[KG0HW-CURR-IX];
      KG0HM100.XSUABRV[KG0HW-SCRN-TOP] = KG0HW02.XSUABRV[KG0HW-CURR-IX];
      KG0HM100.XGBCD[KG0HW-SCRN-TOP] = KG0HW02.XGBCD[KG0HW-CURR-IX];
      KG0HM100.XGBABRV[KG0HW-SCRN-TOP] = KG0HW02.XGBABRV[KG0HW-CURR-IX];
      KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] = KG0HW02.CU-HANG-XGP-CD[KG0HW-CURR-IX];
      KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP] = KG0HW02.CU-HANG-STY-NBR[KG0HW-CURR-IX];
      KG0HM100.SY1SSTNM[KG0HW-SCRN-TOP] = KG0HW02.SY1SSTNM[KG0HW-CURR-IX];
      KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-YLACD1[KG0HW-CURR-IX];
      KG0HM100.KG0HM-YLA-ABRV1[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-YLA-ABRV1[KG0HW-CURR-IX];
      KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-YLACD2[KG0HW-CURR-IX];
      KG0HM100.KG0HM-YLA-ABRV2[KG0HW-SCRN-TOP] = KG0HW02.KG0HW-YLA-ABRV2[KG0HW-CURR-IX];
      set KG0HM100.XGPCD[KG0HW-SCRN-TOP] skip;
      set KG0HM100.XSUCD[KG0HW-SCRN-TOP] skip;
      set KG0HM100.XGBCD[KG0HW-SCRN-TOP] skip;
      /* END;*/
    end
    ;
    KG0HW01.KG0HW-SCRN-CURR-IX = KG0HW01.KG0HW-SCRN-TOP;
                                   /* reset current screen index*/
    if (KG0HW02.KG0HW-CURR-IX == KG0HW02.KG0HW-BOTTOM
     && KG0HW01.KG0HW-ERROR-FL == "N"
     && converseVar.validationMsgNum == 0)
      converseLib.validationFailed(39); /* last record displayed*/
    end
    ;
    ;
    while (KG0HW01.KG0HW-SCRN-TOP < 13)
      KG0HW01.KG0HW-SCRN-TOP = KG0HW01.KG0HW-SCRN-TOP + 1;
      KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] = " ";
      KG0HM100.XGPCD[KG0HW-SCRN-TOP] = " ";
      KG0HM100.XSUCD[KG0HW-SCRN-TOP] = " ";
      KG0HM100.XSUABRV[KG0HW-SCRN-TOP] = " ";
      KG0HM100.XGBCD[KG0HW-SCRN-TOP] = " ";
      KG0HM100.XGBABRV[KG0HW-SCRN-TOP] = " ";
      KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] = " ";
      KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP] = " ";
      KG0HM100.SY1SSTNM[KG0HW-SCRN-TOP] = " ";
      KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] = " ";
      KG0HM100.KG0HM-YLA-ABRV1[KG0HW-SCRN-TOP] = " ";
      KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] = " ";
      KG0HM100.KG0HM-YLA-ABRV2[KG0HW-SCRN-TOP] = " ";
      set KG0HM100.KG0HM-OPTION[KG0HW-SCRN-TOP] initialAttributes;
      set KG0HM100.XGPCD[KG0HW-SCRN-TOP] initialAttributes;
      set KG0HM100.XSUCD[KG0HW-SCRN-TOP] initialAttributes;
      set KG0HM100.XGBCD[KG0HW-SCRN-TOP] initialAttributes;
      set KG0HM100.CU-HANG-XGP-CD[KG0HW-SCRN-TOP] initialAttributes;
      set KG0HM100.CU-HANG-STY-NBR[KG0HW-SCRN-TOP] initialAttributes;
      set KG0HM100.KG0HM-YLACD1[KG0HW-SCRN-TOP] initialAttributes;
      set KG0HM100.KG0HM-YLACD2[KG0HW-SCRN-TOP] initialAttributes;
    end
    ;
    ;
    KG0HW01.KG0HW-ERROR-FL = "Y"; /* reconverse the screen*/
    ;
    KG0HW01.KG0HW-CURR-PAGE = KG0HW01.KG0HW-CURR-PAGE + 1;
    KG0HM100.KG0HM-CURR-PAGE = KG0HW01.KG0HW-CURR-PAGE;
    ;
  end
  ;
  ;
end // end KG0H-440

// update database with changes
Function KG0H-600()
   /* ****************************************/
   /* this process updates the records that**/
   /* have been selected                   **/
   /* ****************************************/
  ;
  KG0H-420(); /* edit current screen*/
  ;
  if (KG0HW01.KG0HW-ERROR-FL == "Y")
    return;
  end
  ;
  ;
  if ("D" in KG0HW02.KG0HW-OPTION /* if any order has been*/
   || "A" in KG0HW02.KG0HW-OPTION /* marked for delete,add*/
   || "C" in KG0HW02.KG0HW-OPTION) /* or change*/
    /* next sentence*/
  else
    KG0HW01.KG0HW-ERROR-FL = "Y"; /* set error message*/
    converseLib.validationFailed(280); /* no changes marked*/
    return;
  end
  ;
  KG0HW02.KG0HW-TEMP-IX = 0; /* prepare table index*/
  ;
  while (KG0HW02.KG0HW-TEMP-IX < KG0HW02.KG0HW-BOTTOM)
    KG0HW02.KG0HW-TEMP-IX = KG0HW02.KG0HW-TEMP-IX + 1; /* add to the index*/
    ;
    if (KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] == "C")
      KG0H-610(); /* update row*/
      if (KG0HW01.KG0HW-ERROR-FL == "N")
        KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] = "X";
      end
    else
      if (KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] == "A")
        KG0H-640(); /* add row*/
        if (KG0HW01.KG0HW-ERROR-FL == "N")
          KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] = "X";
        end
      else
        if (KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] == "D")
          KG0H-645(); /* delete row*/
          if (KG0HW01.KG0HW-ERROR-FL == "N")
            KG0HW02.KG0HW-OPTION[KG0HW-TEMP-IX] = "X";
          end
        end
      end
    end
  end
  ;
  if (KG0HW01.KG0HW-ERROR-FL == "N")
    converseLib.validationFailed(029); /* updates ok message*/
  end
  ;
  KG0HW02.KG0HW-TEMP-IX = KG0HW02.KG0HW-PREV-IX;
  KG0H-260(); /* update screen display*/
  ;
end // end KG0H-600

// prepare row for update
Function KG0H-610()
  ;
   /* ***************************************/
   /* this process prepares for an update  **/
   /* ***************************************/
  ;
  KG0H-620(); /* get row*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    KG0HW01.KG0HW-ERROR-FL = "Y";
    converseLib.validationFailed(228); /* not updated due to deadlocks*/
    return;
  end
  ;
   /* ****************************************/
   /* this process updates the databases   **/
   /* ****************************************/
  ;
  TA2REC.TA2DTOPT = "GETDATE"; /* get current date for*/
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* update all records*/
  ;
   /* ****************************/
   /* create audit trail record*/
   /* ****************************/
  ;
  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "B"; /* blank-add, b-before, a-after*/
  ;
  KG0H-800(); /* write audit trail after image*/
  ;
  ;
  KG0H-630(); /* update row*/
  ;
  ;
   /* ****************************/
   /* create audit trail record*/
   /* ****************************/
  ;
  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "A"; /* blank-add, b-before, a-after*/
  ;
  ;
  KG0H-800(); /* write audit trail after image*/
  ;
  if (KG0HW01.KG0HW-ERROR-FL == "N")
     /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* reset changes*/
  end
  ;
  ;
end // end KG0H-610

// read row for update
Function KG0H-620()
   /* ********************************************/
   /* * read unique row*/
   /* ********************************************/
  ;
  set SQLCA empty;
  ;
  VCUXSU02.KUISKUID = KG0HW02.KUISKUID;
  VCUXSU02.KUMSTRID = KG0HW02.KUMSTRID;
  VCUXSU02.XNXCD = KG0HW02.XNXCD;
  VCUXSU02.XGPCD = KG0HW02.XGPCD[KG0HW-TEMP-IX];
  VCUXSU02.XSUCD = KG0HW02.XSUCD[KG0HW-TEMP-IX];
  VCUXSU02.XGBCD = KG0HW02.XGBCD[KG0HW-TEMP-IX];
  ;
  call "VCUXSU02" ("S ", SQLCA, VCUXSU02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUXSU02";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KG0H620";
    TA1REC.TA1LOC = "SELECT ROW ON VCUXSU02";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
  ;
end // end KG0H-620

// update row
Function KG0H-630()
   /* ********************************************/
   /* *      update row*/
   /* ********************************************/
  ;
  set SQLCA empty;
  ;
  VCUXSU02.KUISKUID = KG0HW02.KUISKUID;
  VCUXSU02.KUMSTRID = KG0HW02.KUMSTRID;
  VCUXSU02.XNXCD = KG0HW02.XNXCD;
  VCUXSU02.XGPCD = KG0HW02.XGPCD[KG0HW-TEMP-IX];
  VCUXSU02.XSUCD = KG0HW02.XSUCD[KG0HW-TEMP-IX];
  VCUXSU02.XGBCD = KG0HW02.XGBCD[KG0HW-TEMP-IX];
  VCUXSU02.CU-HANG-XGP-CD = KG0HW02.CU-HANG-XGP-CD[KG0HW-TEMP-IX];
  VCUXSU02.CU-HANG-STY-NBR = KG0HW02.CU-HANG-STY-NBR[KG0HW-TEMP-IX];
  VCUXSU02.YLACD[1] = KG0HW02.KG0HW-YLACD1[KG0HW-TEMP-IX];
  VCUXSU02.YLACD[2] = KG0HW02.KG0HW-YLACD2[KG0HW-TEMP-IX];
  VCUXSU02.XXXSTAT = "A";
  ;
  VCUXSU02.ZZZCHGDT = TA2REC.TA2GRGGN;
  VCUXSU02.ZZZCHGTM = TA2REC.TA2TIMHM;
  ;
  call "VCUXSU02" ("U ", SQLCA, VCUXSU02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUXSU02";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KG0H630";
    TA1REC.TA1LOC = "SELECT ROW ON VCUXSU02";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
  ;
end // end KG0H-630

// add row
Function KG0H-640()
   /* ********************************************/
   /* * add row*/
   /* ********************************************/
  ;
  TA2REC.TA2DTOPT = "GETDATE"; /* get current date for*/
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* update all records*/
  ;
  ;
  set SQLCA empty;
  ;
  VCUXSU02.XGPCD = KG0HW02.XGPCD[KG0HW-TEMP-IX];
  VCUXSU02.XSUCD = KG0HW02.XSUCD[KG0HW-TEMP-IX];
  VCUXSU02.XGBCD = KG0HW02.XGBCD[KG0HW-TEMP-IX];
  VCUXSU02.CU-HANG-XGP-CD = KG0HW02.CU-HANG-XGP-CD[KG0HW-TEMP-IX];
  VCUXSU02.CU-HANG-STY-NBR = KG0HW02.CU-HANG-STY-NBR[KG0HW-TEMP-IX];
  VCUXSU02.YLACD[1] = KG0HW02.KG0HW-YLACD1[KG0HW-TEMP-IX];
  VCUXSU02.YLACD[2] = KG0HW02.KG0HW-YLACD2[KG0HW-TEMP-IX];
  VCUXSU02.XDZ-DATA-DIST-CD = KUCREC.XDZ-DATA-DIST-CD;
  VCUXSU02.XXXSTAT = KG0HW02.XXXSTAT[KG0HW-TEMP-IX];
  ;
  VCUXSU02.ZZZSDT = TA2REC.TA2GRGGN;
  VCUXSU02.ZZZCHGDT = TA2REC.TA2GRGGN;
  VCUXSU02.ZZZCHGTM = TA2REC.TA2TIMHM;
  ;
  call "VCUXSU02" ("A ", SQLCA, VCUXSU02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUXSU02";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KG0H640";
    TA1REC.TA1LOC = "ADD ROW ON VCUXSU02";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
   /* ****************************/
   /* create audit trail record*/
   /* ****************************/
  ;
  set KUZREC empty;
  KUZREC.KUZTYPE = "A"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = " "; /* blank-add, b-before, a-after*/
  ;
  KG0H-800(); /* write audit trail after image*/
  ;
  ;
end // end KG0H-640

// delete row
Function KG0H-645()
   /* ********************************************/
   /* * select the vcuxsu row to be deleted*/
   /* ********************************************/
  ;
  set SQLCA empty;
  set VCUXSU02 empty;
  VCUXSU02.KUISKUID = KG0HW02.KUISKUID;
  VCUXSU02.KUMSTRID = KG0HW02.KUMSTRID;
  VCUXSU02.XNXCD = KG0HW02.XNXCD;
  VCUXSU02.XGPCD = KG0HW02.XGPCD[KG0HW-TEMP-IX];
  VCUXSU02.XSUCD = KG0HW02.XSUCD[KG0HW-TEMP-IX];
  VCUXSU02.XGBCD = KG0HW02.XGBCD[KG0HW-TEMP-IX];
  ;
  call "VCUXSU02" ("S ", SQLCA, VCUXSU02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUXSU02";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KG0B-645";
    TA1REC.TA1LOC = "SEL CUXSU ROW FOR DEL ";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
   /* ****************************/
   /* create audit trail record*/
   /* ****************************/
  ;
  set KUZREC empty;
  KUZREC.KUZTYPE = "D"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "B"; /* blank-add, b-before, a-after*/
  ;
  KG0H-800(); /* write audit trail after image*/
  ;
  ;
   /* ********************************************/
   /* * delete vcuxsu row*/
   /* ********************************************/
  ;
  set SQLCA empty;
  set VCUXSU02 empty;
  VCUXSU02.KUISKUID = KG0HW02.KUISKUID;
  VCUXSU02.KUMSTRID = KG0HW02.KUMSTRID;
  VCUXSU02.XNXCD = KG0HW02.XNXCD;
  VCUXSU02.XGPCD = KG0HW02.XGPCD[KG0HW-TEMP-IX];
  VCUXSU02.XSUCD = KG0HW02.XSUCD[KG0HW-TEMP-IX];
  VCUXSU02.XGBCD = KG0HW02.XGBCD[KG0HW-TEMP-IX];
  ;
  call "VCUXSU02" ("D ", SQLCA, VCUXSU02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUXSU02";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KG0B-645";
    TA1REC.TA1LOC = "DELETE ROW ON VCUXSU02";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
  ;
end // end KG0H-645

// process page rolling
Function KG0H-700()
   /* *********************************/
    /* edit the page counter*/
   /* *********************************/
  ;
  set KG0HM100.KG0HM-CURR-PAGE modified;
  ;
  if (KG0HW01.KG0HW-CURR-PAGE == KG0HM100.KG0HM-CURR-PAGE)
    if (KG0HW02.KG0HW-CURR-IX == KG0HW02.KG0HW-BOTTOM
     && KG0HW01.KG0HW-ERROR-FL == "N"
     && converseVar.validationMsgNum == 0)
      converseLib.validationFailed(39); /* last record displayed*/
    end
    return;
  end
  ;
  if (KG0HM100.KG0HM-CURR-PAGE == 0
   || KG0HM100.KG0HM-CURR-PAGE > KG0HW01.KG0HW-TOT-PAGE)
    KG0HW01.KG0HW-ERROR-FL = "Y"; /* invalid page number*/
    converseLib.validationFailed(379); /* invalid page number*/
    set KG0HM100.KG0HM-CURR-PAGE cursor, bold;
    return;
  end
  ;
  KG0HW01.KG0HW-CURR-PAGE = KG0HM100.KG0HM-CURR-PAGE;
                                                      /* reset current page*/
  KG0HW02.KG0HW-CURR-IX = KG0HW01.KG0HW-CURR-PAGE * 13;
                                               /* reset current table index*/
  ;
  if (KG0HW02.KG0HW-CURR-IX > KG0HW02.KG0HW-BOTTOM)
    KG0HW02.KG0HW-CURR-IX = KG0HW02.KG0HW-BOTTOM;
  end
  ;
  KG0HW02.KG0HW-PREV-IX = KG0HW01.KG0HW-CURR-PAGE * 13;
  KG0HW02.KG0HW-PREV-IX = KG0HW02.KG0HW-PREV-IX - 13;
  ;
  KG0HW02.KG0HW-TEMP-IX = KG0HW02.KG0HW-PREV-IX; /* prepare temp index*/
  ;
  KG0H-260(); /* prepare the screen for display*/
  ;
end // end KG0H-700

// windowing routine
Function KG0H-750()
   /* ***************************************/
   /* * km0h750 - pop up window for xsucd*/
   /* ***************************************/
  ;
  XPXX001(); /* perform pop-up screen initialization*/
  XX0XW02.XX0XWHDR = "VALID SILHOUETTE CODES    ";
  ;
  while (XX0XW02.XX0XWEND == "N")
    XPXSU01(); /* perform xsucd pop up window*/
    ;
  end
  ;
  converseLib.clearScreen();
   /* reset screen*/
  ;
  ;
  ;
end // end KG0H-750

// windowing routine
Function KG0H-760()
   /* ***************************************/
   /* * km0h760 - pop up window for xgbcd*/
   /* ***************************************/
  ;
  XPXX001(); /* perform pop-up screen initialization*/
  XX0XW02.XX0XWHDR = "VALID BASE GENDER CODES   ";
  ;
  while (XX0XW02.XX0XWEND == "N")
    XPXGB01(); /* perform xgbcd pop up window*/
    ;
  end
  ;
  converseLib.clearScreen();
   /* reset screen*/
  ;
  ;
  ;
end // end KG0H-760

// windowing routine
Function KG0H-770()
   /* ***************************************/
   /* * km0h760 - pop up window for ylacd*/
   /* ***************************************/
  ;
  XPXX001(); /* perform pop-up screen initialization*/
  XX0XW02.XX0XWHDR = "VALID LABEL ATTACH CODES  ";
  ;
  while (XX0XW02.XX0XWEND == "N")
    XPYLA01(); /* perform ylacd pop up window*/
    ;
  end
  ;
  converseLib.clearScreen();
   /* reset screen*/
  ;
  ;
  ;
end // end KG0H-770

// prepare company for update
Function KG0H-800()
   /* *************************************************/
   /* create audit trail*/
   /* *************************************************/
  ;
   /* convert csp time/date format to db2 time/date stamp format*/
  XX0XS01();
  ;
  ;
   /* ****************************/
   /* prepare before look audit*/
   /* ****************************/
  ;
  KUZREC.XXXTBLNM = "VCUXSU01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = KUCREC.KUCCOID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = VCUXSU02.VCUXSU02-GROUP;
  ;
  ;
  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KG0H   ";
    TA1REC.TA1LOCAT[1] = "KG0H-800 ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCUXSU02 ";
    TA1REC.TA1MAP = "KG0HM100";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCUXSU02";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
  ;
  ;
  call "IO0500" ("A ", SQLCA, KUZREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUAUD01";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KG0H-800";
    TA1REC.TA1LOC = "ADD DB2 DCUST.VCUAUD01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
  ;
  ;
  ;
end // end KG0H-800

Record KG0HW01 type basicRecord
  10 KUISKUID KUISKUID ; 
  10 KUMSTRID KUMSTRID ; 
  10 XNXCD XNXCD ; 
  10 XSUKEY XSUKEY ; 
    15 XSUCD XSUCD ; 
    15 XGPCD XGPCD ; 
  10 KG0HW-ERROR-FL KG0HW-ERROR-FL ; 
  10 KG0HW-EOF KG0HW-EOF ; 
  10 KG0HW-CURR-PAGE KG0HW-CURR-PAGE ; 
  10 KG0HW-TOT-PAGE KG0HW-TOT-PAGE ; 
  10 KG0HW-REMAINDER KG0HW-REMAINDER ; 
  10 KG0HW-COUNTER KG0HW-COUNTER ; 
  10 KG0HW-SCRN-TOP KG0HW-SCRN-TOP ; 
  10 KG0HW-SCRN-CURR-IX KG0HW-SCRN-CURR-IX ; 
  10 KG0HW-MESSAGE KG0HW-MESSAGE ; 
  10 KG0HW-GET-NEW-CMPNY-FL KG0HW-GET-NEW-CMPNY-FL ; 
  10 KG0HW-OVRFLW-MSG KG0HW-OVRFLW-MSG ; 
  10 * char(1) ; 
  10 KG0HW-CAUSERA KG0HW-CAUSERA ; 
    15 KG0HW-CA-COMPANY KG0HW-CA-COMPANY ; 
      20 KG0HW-CA-CO-CHAR KG0HW-CA-CO-CHAR ; 
    15 * char(4) ; // filler
    15 KG0HW-CA-DEPARTMENT KG0HW-CA-DEPARTMENT ; 
      20 KG0HW-CA-DP-CHAR KG0HW-CA-DP-CHAR ; 
    15 * char(4) ; // filler
    15 KG0HW-CA-STORE KG0HW-CA-STORE ; 
      20 KG0HW-CA-STOR-CHAR KG0HW-CA-STOR-CHAR ; 
    15 * char(5) ; // filler
end // end KG0HW01

//*** RECORD=KG0HW02 ****
// date created:    11/15/91
// 
// maintanence log:
//   who       when     why
// --------- --------  ---------------------------------------
// 
// ***********************
Record KG0HW02 type basicRecord
  5 KUISKUID KUISKUID ; 
  5 KUCCONM KUCCONM ; 
  5 KUMSTRID KUMSTRID ; 
  5 XNXCD XNXCD ; 
  5 XNXDESC XNXDESC ; 
  5 KG0HW-GROUP2 KG0HW-GROUP2 ; 
    10 KG0HW-TEMP-IX KG0HW-TEMP-IX ; 
    10 KG0HW-EDIT-IX KG0HW-EDIT-IX ; 
    10 KG0HW-CURR-IX KG0HW-CURR-IX ; 
    10 KG0HW-PREV-IX KG0HW-PREV-IX ; 
    10 KG0HW-BOTTOM KG0HW-BOTTOM ; 
    10 KG0HW-SCRN-ROW KG0HW-SCRN-ROW [200] ; 
      15 KG0HW-OPTION KG0HW-OPTION ; 
      15 XGPCD XGPCD ; 
      15 XSUCD XSUCD ; 
      15 XSUABRV XSUABRV ; 
      15 XGBCD XGBCD ; 
      15 XGBABRV XGBABRV ; 
      15 CU-HANG-XGP-CD CU-HANG-XGP-CD ; 
      15 CU-HANG-STY-NBR CU-HANG-STY-NBR ; 
      15 SY1SSTNM SY1SSTNM ; 
      15 KG0HW-YLACD1 KG0HW-YLACD1 ; 
      15 KG0HW-YLA-ABRV1 KG0HW-YLA-ABRV1 ; 
      15 KG0HW-YLACD2 KG0HW-YLACD2 ; 
      15 KG0HW-YLA-ABRV2 KG0HW-YLA-ABRV2 ; 
      15 XXXSTAT XXXSTAT ; 
end // end KG0HW02

//*** RECORD=VCUXSU02 ****
// This is the CSP Working Storage format for the Specisl
// Product Processing table.  It contains imformation about
// customer hangers and labels for specific products.
// 
// db2 table:        dcust.vcuxsu02
// 
// dclgen:           dcuxsu02
// 
// i/o mod:          vcuxsu02
// 
// key to table:     kuiskuid-   cu-sku-id
//                   xnxcd-      xnx-dept-id-xref
//                   xsucd-      xsu-silh-cd
//                   xgbcd-      xgb-base-xga-cd
// 
// date created:     08/27/98
// 
// maintanence log:
//   who       when     why
// --------- --------  ---------------------------------------
// OVAZQU    08/27/98  cloned from VCUXSU01
// ************************
Record VCUXSU02 type basicRecord
  5 VCUXSU02-GROUP VCUXSU02-GROUP ; 
    10 KUISKUID KUISKUID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 XGPCD XGPCD ; 
    10 XSUCD XSUCD ; 
    10 XGBCD XGBCD ; 
    10 CU-HANG-XGP-CD CU-HANG-XGP-CD ; 
    10 CU-HANG-STY-NBR CU-HANG-STY-NBR ; 
    10 YLACD YLACD [2] ; 
    10 XDZ-DATA-DIST-CD XDZ-DATA-DIST-CD ; 
    10 XXXSTAT XXXSTAT ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end VCUXSU02

// table index
DataItem KG0HW-BOTTOM num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cu-cusku-id
DataItem KG0HW-CA-CO-CHAR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cu-cusku-id
DataItem KG0HW-CA-COMPANY num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// xnx-dept-id-xref
DataItem KG0HW-CA-DEPARTMENT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// xnx-dept-id-xref
DataItem KG0HW-CA-DP-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cu-stor-id
DataItem KG0HW-CA-STOR-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cu-stor-id
DataItem KG0HW-CA-STORE num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// user area
DataItem KG0HW-CAUSERA char(24)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// counter
DataItem KG0HW-COUNTER num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current index
DataItem KG0HW-CURR-IX num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// page counter
DataItem KG0HW-CURR-PAGE num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// edit index
DataItem KG0HW-EDIT-IX num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// end of file
DataItem KG0HW-EOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag
DataItem KG0HW-ERROR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// get new company flag
DataItem KG0HW-GET-NEW-CMPNY-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KG0HW-GROUP2 char(12045)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// application error message
DataItem KG0HW-MESSAGE char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// option, 'a' & 'd'
DataItem KG0HW-OPTION char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MSG- too many rows
DataItem KG0HW-OVRFLW-MSG char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// previous index
DataItem KG0HW-PREV-IX num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// reminder
DataItem KG0HW-REMAINDER num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen current index
DataItem KG0HW-SCRN-CURR-IX num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// one row on screen
DataItem KG0HW-SCRN-ROW char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen top
DataItem KG0HW-SCRN-TOP num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temp index
DataItem KG0HW-TEMP-IX num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// total number of pages
DataItem KG0HW-TOT-PAGE num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// YLA_LABL_ATCH_ABRV
DataItem KG0HW-YLA-ABRV1 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// YLA_LABL_ATCH_ABRV
DataItem KG0HW-YLA-ABRV2 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// YLA_LABL_ATCH_CD
DataItem KG0HW-YLACD1 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// YLA_LABL_ATCH_CD
DataItem KG0HW-YLACD2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cuxsu record group field
DataItem VCUXSU02-GROUP char(41)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

