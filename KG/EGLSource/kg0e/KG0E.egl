package kg0e;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPXX001;
import corpcom3.XPYLA01;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.*;
import corpcom6.SQLCA;
import corpx1.XATCD;
import corpx1.XATTBL;
import corpx1.XAUTBL;
import corpx1.XDMCD;
import corpx1.XGPCD;
import corpx1.XNXTBL;
import corpx2.XNX-DEPT-ID-XREF;
import corpx2.XQACD;
import corpy2.YLATBL;
import kl.common.KIZTBL;
import ku.common.KUIGRP;
import ku.common.KUIPRDID;
import ku.common.KUKREC;
import ku.common.KUZREC;
import pk.common.PK6REC;
import pk.common.PKLREC;
import pk.common.PKNREC;
import pw.common.PWRREC;
import sy.common.SY1REC;
import sy.common.SY1STNBR;
import sy.common.SY2CLRID;
import sy.common.SY2REC;
import sy.common.SY3REC;
import sy.common.SY4IDDSC;
import sy.common.SY4REC;
import sy.common.SY5SZID;
import sy.common.SYPREC;
import ta.common.TA1REC;
import vv.common.VCMPNY02;
import vv.common.VCUCPX01;
import xa.common.XA0AW02;
//*** PROGRAM=KG0E ****
// ----------------  kg0e - chg/inq cusku information ---------
// 
// overview:  this application performs add, change, delete and
//            inquiry on the customer sku (product) information
// 
// date written: 04/91
// author:       Dianne Salzwedel
// 
// ************************************************************
// *              maintenance history log                     *
// ************************************************************
// * 05/01/91  DSALZW  created
// * 05/30/91  DSALZW  users not allowed update for parent id
// * 06/09/91  DSALZW  db changes
// * 07/12/91  JHEMME  dtl-10 chg added empty temp (kg0e510/820
// * 07/25/91  dsalzw  fix map attributes
// * 07/17/92  JHEMME  chk vpkcus01 vs vcmpny01 for cole-haan
// *                   (kg0e110/120/121-new/130)
// * 10/16/92  CHELLM  DB Changes.  Increased cu-prod-nm to 30x
// * 10/19/92  CHELLM  increase temp storage size to accomodate
// *                   new cu-prod-nm length (x30).
// * 01/21/93  CHELLM  Replaced select first with select unique
//                    in IO5790 when editing Nike prod id.
// *                   (KG0E675).
// * 10/01/93  CHELLM  CSP 4.1 Conversion.
// * 01/03/94  CHELLM  Correct the changes to multiple rows of
// *                   data when changing the nike product id
// * 03/11/94  CHELLM  Database Changes:
// *                   Added XDZ-DATA-DIST-CD.
// * 05/27/94  CHELLM  Remove duplicate customer product ID
// *                   edit.
// * 09/21/94  CHELLM  Update XGP code in audit trail record.
// *
// * 05/16/95  RMORGA  Update both DCUST.VCUCPX01 and
// *                               DCUST.VCUSKU01.
// * 09/16/95  ALUFT   Added cursors 5,6,7,8 for specific
// *                   selection of DB2 data.
// * 03/16/96  kclar1  removed update to dcust.vcusku01
// *
// * 10/05/97  kclar1  changed prompts on kg0e
// *
// *Y2KFIX   11/24/97  DKENNY  Y2K MODIFICATIONS MADE TO:
// *                   KG0EM200, KG0E410, KG0E600, KG0E625,
// *                   KG0E695, KG0E815, KG0EW01
// * 01/20/00  JNARAS  CHANGED THE MAP KG0EM200 TO REDUCE THE
// *                   LENGTH OF THE FIELDS   RETAIL PRICE ,
// *                   SPECIAL PRICE & SUGG RETAIL PRICE TO 6
// *                   FROM 13.(6 INCLUDES 9(3)V99.)
// *********************
Program KG0E type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CU00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KG0EW01 KG0EW01; // record
  KG0EW02 KG0EW02; // record
  KG0EW04 KG0EW04; // record
  KUKREC KUKREC; // record
  KUZREC KUZREC; // record
  PK6REC PK6REC; // record
  PKLREC PKLREC; // record
  PKNREC PKNREC; // record
  PWRREC PWRREC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY3REC SY3REC; // record
  SY4REC SY4REC; // record
  SYPREC SYPREC; // record
  TA1REC TA1REC; // record
  VCMPNY02 VCMPNY02; // record
  VCUCPX01 VCUCPX01; // record
  XA0AW02 XA0AW02; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KIZTBL {deleteAfterUse = yes}; // table
  use XATTBL {deleteAfterUse = yes}; // table
  use XAUTBL {deleteAfterUse = yes}; // table
  use XNXTBL {deleteAfterUse = yes}; // table
  use YLATBL {deleteAfterUse = yes}; // table
  use KG0EM.KG0EM100,  // forms
      KG0EM.KG0EM200,
      KG0EM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KG0E000: KG0E000();
    goto KG0E100; /* converse CUSKU maint screen*/

    KG0E100: KG0E100();

    goto KG0E100; /* cusku maint screen*/

  end // end main
end // end KG0E


// init cusku screen
Function KG0E000()
   /* *********************************************/
    /* initialization of variables used in the  **/
    /* processing of the cusku screen           **/
   /* *********************************************/

  XSENTRY();

  XSSEGTR(); /* set segmented transaction id*/

  set KG0EM100 initial; /* cusku maintenance screen*/
  set KG0EM200 initial; /* cusku maintenance screen*/
  set KG0EW01 empty; /* working storage 1*/
  set KG0EW02 empty; /* working storage 2*/
  set KG0EW04 empty; /* temporary storage definition*/
  set SQLCA empty;
  set TA1REC empty;
  set VCMPNY02 empty; /* company record*/
   /* ET KUIREC EMPTY;                 /* cusku record*/
  set VCUCPX01 empty; /* cucpx record*/
  set KUKREC empty; /* parent record*/
  set KUZREC empty; /* audit record*/
  set PK6REC empty; /**/
  set PKLREC empty; /* picking carton*/
  set PWRREC empty; /* picking label*/
  set SY1REC empty; /* style one*/
  set SY2REC empty; /* style two*/
  set SY3REC empty; /* style three*/
  set SY4REC empty; /* style four*/
  set SYPREC empty; /* style subroutine*/
  set XX0XW01 empty;
  set XX0XW02 empty;
  set XA0AW02 empty;

  KG0EW01.KG0EWMD1 = "N"; /* init cusku update flag*/
  KG0EW01.KG0EWEFL = "N"; /* init ready to update flag*/
  KG0EW01.KG0EWERR = "N"; /* error flag*/
  KG0EW01.KG0EWSIZ = 694; /* size of temp storage*/
  KG0EW01.KG0EWMAX = 11; /* nbr of occurs + 1*/
  KG0EW01.KG0EW-FILLER-1 = "/"; /* Used for pretty date edit*/
  KG0EW01.KG0EW-FILLER-2 = "/"; /* Used for pretty date edit*/
   /* **** footnote: looping thru add has a hard*/
   /* ****           coded (max - 1) - kg0e820*/

   /* ****************************/
   /* check fast path entry*/
   /* ****************************/
   /* The company info is keyed in because it takes too long*/
   /* to display all product xref for one company*/
   /* ****************************/
  KG0EW01.KG0EWUSR = COMMAREA.CAUSERA; /* key from add menu*/
  if (COMMAREA.CAITEM != " ")
    KG0EW01.KG0EWUSR = COMMAREA.CAITEM; /* key from fastpath*/
    if (KG0EW01.KG0EWCNO-CHAR is numeric)
      KG0EM100.KUISKUID = KG0EW01.KG0EWCNO;
    else
      KG0EM100.KUISKUID = 0;
      KG0EW01.KG0EWCNO = 0;
    end
    if (KG0EW01.KG0EWDNO-CHAR is numeric)
      KG0EM100.XNXCD = KG0EW01.KG0EWDNO;
    else
      KG0EM100.XNXCD = 0;
      KG0EW01.KG0EWDNO = 0;
    end
  else
    KG0EM100.KUISKUID = 0; /* key from chg menu*/
    KG0EW01.KG0EWCNO = 0; /* key from chg menu*/
    KG0EM100.XNXCD = 0;
    KG0EW01.KG0EWDNO = 0;
  end

  XX0XS01(); /* get todays date*/


  if (KG0EM100.KUISKUID > 0) /* if a company is available*/
    KG0E110(); /* build temp storage*/
  end

end // end KG0E000

// converse selection screen
Function KG0E100()
   /* *******************************************/
   /* kg0e100 - converse selection screen*/
   /* *******************************************/


  KG0EM100.KG0EMDAT = VGVar.currentShortGregorianDate; /* set screen date*/


  converse KG0EM100 ;

  KG0EW01.KG0EWERR = "N";
  KG0EM100.VAGen_EZEMSG = " ";

  set KG0EM100.KG0EMPG1 initialAttributes;
  set KG0EM100.KUISKUID cursor, initialAttributes;
  set KG0EM100.XNXCD initialAttributes;


  KG0E300(); /* edit pfkeys and screen*/


  if (KG0EW01.KG0EWERR == "N") /* no errors*/
    if (KG0EM100.KG0EMPG1 != KG0EW01.KG0EWPGC) /* change in page#*/
      if (KG0EM100.KG0EMPG1 > KG0EW01.KG0EWPGT /* greater than max*/
       || KG0EM100.KG0EMPG1 < 1)               /* or less than 1*/
        converseLib.validationFailed(379); /* "invalid page" msg*/
        set KG0EM100.KG0EMPG1 cursor, bold;
        KG0EW01.KG0EWERR = "Y";
      else /* load requested page*/
        KG0EW01.KG0EWDIX = KG0EM100.KG0EMPG1;
        KG0EW01.KG0EWPGC = KG0EM100.KG0EMPG1;
        KG0E270();
      end
    else
      if (converseVar.eventKey is enter)
         /* check for second screen*/
        KG0E400();
      end
    end
  end


end // end KG0E100

// build company & temp storage
Function KG0E110()
   /* *********************************************************/
   /* *  kg0e110 - build company & temp storage*/
   /* *********************************************************/

   /* --------------------------------------------------------*/
   /* format company data*/
   /* --------------------------------------------------------*/

  set VCMPNY02 empty; /* clear out company record*/
  set PK6REC empty; /* clear out picking company record*/
  set KUKREC empty; /* clear out parent record*/
  set KG0EM100.KUISKUID normal; /* set original attributes*/

  KG0EW01.KG0EWCID = 0;
  KG0EW01.KG0EWFND = "N"; /* reset company found flag*/

  if (KG0EM100.KUISKUID == 0) /* generic company?*/
    KG0EM100.KUCCONM = "GENERIC COMPANY";
    set KG0EM100.KUISKUID initialAttributes;
  else

    if (COMMAREA.CADLVL[1] == "N") /* IF Nike or NIL user....*/
      VCMPNY02.KUCCOID = KG0EM100.KUISKUID; /* set company key*/
      KG0E120(); /* read vcmpny01*/
    end

    if (COMMAREA.CADLVL[1] == "Y") /* IF Cole-Haan user....*/
      PK6REC.KUCCOID = KG0EM100.KUISKUID; /* set company key*/
           /* identify a Cole-Haan cu-co-id as*/
           /* 5 digit nbr prefixed with 80 for the Nike nbr*/
      if (PK6REC.KUCCOID < 100000)
        PK6REC.KUCCOID = PK6REC.KUCCOID + 8000000;
      end
      KG0E121(); /* read vpkcus01*/
    end

    if (KG0EW01.KG0EWFND == "N") /* not found?*/
      set KG0EM100.KUISKUID cursor, bold;
      converseLib.validationFailed(25); /* cuskuid not found anywhere*/
      return;
    end
  end

   /* --------------------------------------------------------*/
   /* check for maintenance authority*/
   /* --------------------------------------------------------*/

  KG0EW01.KG0EWUPM = "Y"; /* set update to yes*/

  if (VCMPNY02.XAUCD in XAUTBL.XAUCD)
    if (XAUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      KG0EW01.XATCD = XAUTBL.XATCD[sysVar.arrayIndex];
    else
      KG0EW01.XATCD = " ";
    end
  else
    KG0EW01.XATCD = " ";
  end

  if (KG0EW01.XATCD == "08" /* edit for cole haan user*/
   || PK6REC.XAUCD == "90")
    if (COMMAREA.CADLVL[1] == "Y")
      /* next sentence*/
    else
      converseLib.validationFailed(272); /* not authorized to maint this acct*/
      KG0EW01.KG0EWUPM = "N"; /* update flag= n*/
      KG0EW01.KG0EWERR = "Y"; /* AUTHORIZATION ERROR*/
      return; /* return to screen without building*/
                                   /* details*/
    end
  else
    if (KG0EW01.XATCD == "03") /* edit for nil user*/
      if (COMMAREA.CADLVL[2] == "Y")
        /* next sentence*/
      else
        converseLib.validationFailed(272); /* not authorized to maint this acct*/
        KG0EW01.KG0EWUPM = "N"; /* update flag = n*/
      end
    else
      if (COMMAREA.CADLVL[1] == "Y"
       || COMMAREA.CADLVL[2] == "Y")
        converseLib.validationFailed(272); /* not authorized to maint this acct*/
        KG0EW01.KG0EWUPM = "N"; /* update flag = n*/
      end
    end
  end

   /* --------------------------------------------------------*/
   /* load cucpx data*/
   /* --------------------------------------------------------*/

  KG0E150(); /* load all cucpx*/
  if (KG0EW01.KG0EWERR == "Y") /* error loading cusku*/
    return;
  end

  KG0EW01.KG0EWDIX = 1; /* start at the top*/

   /* --------------------------------------------------------*/
   /* ***** test to see if we need to look for a starting point*/
   /* 9/6/95 ALUFT - this is no longer necessary with enhanced*/
   /* DB2 selection options...*/
   /* --------------------------------------------------------*/

  if (KG0EM100.KG0EMPRD == " "
   && KG0EM100.KG0EMXGP == " "
   && KG0EM100.KG0EMSY1 == " "
   && KG0EM100.KG0EMSY2 == " "
   && KG0EM100.KG0EMXDM == " ")
    KG0EW01.KUIPRDID = " "; /* clear out ws*/
    KG0EW01.KG0EWNPR = " ";
  else
    KG0EW01.KUIPRDID = KG0EM100.KG0EMPRD; /* build prod id*/
    KG0EW01.XGPCD = KG0EM100.KG0EMXGP; /* build group level*/
    KG0EW01.SY1STNBR = KG0EM100.KG0EMSY1;
    KG0EW01.SY2CLRID = KG0EM100.KG0EMSY2;
    KG0EW01.XDMCD = KG0EM100.KG0EMXDM;
  /* PERFORM KG0E250; /* find starting point - no more as of 9/6/95 ALUFT*/
  end

  KG0E270(); /* move cusku to the screen*/

end // end KG0E110

// read company information
Function KG0E120()
   /* *************************************************/
   /* kg0e120 - get company record   vcmpny02*/
   /* *************************************************/

  set SQLCA empty;

  call "IO0240" ("S ", SQLCA, VCMPNY02) {isNoRefresh = yes, isExternal = yes}; /* read VCMPNY01*/

  if (SQLCA.VAGen_SQLCODE == 0)
    KG0EW01.KG0EWFND = "Y"; /* company found*/
    KG0EM100.KUCCONM = VCMPNY02.KUCCONM;
    KG0EM100.KUISKUID = VCMPNY02.KUCCOID;
    set KG0EM100.KUISKUID initialAttributes;
    KUKREC.KUKPCOID = VCMPNY02.KUKPCOID;
    KG0E130(); /* read parent VPARNT01*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KG0EM100.KUCCONM = " ";
      KUKREC.KUKPCOID = KG0EM100.KUISKUID;
      KG0E130(); /* read parent VPARNT01*/
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1MAP = " ";
      KG0EW01.KG0EWCID = VCMPNY02.KUCCOID;
      TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
      TA1REC.TA1PGMNM = "KG0E120";
      TA1REC.TA1LOC = "READING DB2 CMPNY01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end

end // end KG0E120

// read picking company
Function KG0E121()
   /* *************************************************/
   /* kg0e121 - get picking customer record   pk6rec*/
   /* *************************************************/

  set SQLCA empty;
  call "IO1830" ("S1", SQLCA, PK6REC) {isNoRefresh = yes, isExternal = yes}; /* read company set*/

  if (SQLCA.VAGen_SQLCODE == 0)
    set SQLCA empty;
    call "IO1830" ("N1", SQLCA, PK6REC) {isNoRefresh = yes, isExternal = yes}; /* use the 1st record*/
    if (SQLCA.VAGen_SQLCODE == 0)
      KG0EW01.KG0EWFND = "Y"; /* Company found*/
      KG0EM100.KUCCONM = PK6REC.KUCCONM;
      KG0EM200.KUCCONM = PK6REC.KUCCONM;
      VCMPNY02.XAUCD = PK6REC.XAUCD;
      set KG0EM100.KUISKUID initialAttributes;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        KG0EW01.KG0EWFND = "N"; /* Company found*/
        /* next sentence*/
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "ABND";
        TA1REC.TA1DBASE = "DPICK";
        TA1REC.TA1TBLVU = "VPKCUS01";
        TA1REC.TA1MAP = " ";
        KG0EW01.KG0EWCID = PK6REC.KUCCOID;
        TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
        TA1REC.TA1PGMNM = "KG0E121";
        TA1REC.TA1LOC = "READING DB2 PKCUS";
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
    end
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DPICK";
    TA1REC.TA1TBLVU = "VPKCUS01";
    TA1REC.TA1MAP = " ";
    KG0EW01.KG0EWCID = PK6REC.KUCCOID;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    TA1REC.TA1PGMNM = "KG0E121";
    TA1REC.TA1LOC = "OPENING DB2 PKCUS";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end

  set SQLCA empty;
  call "IO1830" ("C1", SQLCA, PK6REC) {isNoRefresh = yes, isExternal = yes}; /* close company set*/

  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DPICK";
    TA1REC.TA1TBLVU = "VPKCUS01";
    TA1REC.TA1MAP = " ";
    KG0EW01.KG0EWCID = PK6REC.KUCCOID;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    TA1REC.TA1PGMNM = "KG0E121";
    TA1REC.TA1LOC = "CLOSING DB2 PKCUS";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end

end // end KG0E121

// read parent information
Function KG0E130()
   /* *************************************************/
   /* kg0e130 - get parent record   KUKREC*/
   /* *************************************************/

  set SQLCA empty;

  call "IO0030" ("S ", SQLCA, KUKREC) {isNoRefresh = yes, isExternal = yes}; /* read VPARNT01*/

  if (SQLCA.VAGen_SQLCODE == 0)
    KG0EW01.KG0EWFND = "Y"; /* PARENT found*/
    set KG0EM100.KUISKUID initialAttributes;
    KG0EM100.KUKPCONM = KUKREC.KUKPCONM;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KG0EM100.KUKPCONM = "NOT FOUND";
      /* next sentence*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VPARNT01";
      TA1REC.TA1MAP = " ";
      KG0EW01.KG0EWCID = KUKREC.KUKPCOID;
      TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
      TA1REC.TA1PGMNM = "KG0E130";
      TA1REC.TA1LOC = "READING DB2 PARNT01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end

end // end KG0E130

// build cucpx temp storage
Function KG0E150()
   /* **************************************************/
   /* * kg0e150 - load all cucpx for a company*/
   /* **************************************************/

  KG0E155(); /* purge temp work file*/
  if (KG0EW01.KG0EWERR == "Y") /* error in purge*/
    return;
  end

  set SQLCA empty;
   /* ET KUIREC EMPTY;*/
  set VCUCPX01 empty;

  KG0EW01.KG0EWEND = "N"; /* set end-cucpx flag to 'n'*/

  if (COMMAREA.CADLVL[1] == "Y") /* If Cole-Haan user*/
    VCUCPX01.CU-CUSKU-ID = PK6REC.KUCCOID; /* use DPICK company ID*/
  else
    VCUCPX01.CU-CUSKU-ID = KG0EM100.KUISKUID;
  end

  KG0ES-SET-SCAN-IND(); /* determine select criteria for DB2*/
                                   /* cursor*/

  if (KG0EW01.KG0EW-SCAN-IND == 1)
    KG0ES-VCUCPX01-S1();
  end
  if (KG0EW01.KG0EW-SCAN-IND == 3)
    KG0ES-VCUCPX01-S3();
  end
  if (KG0EW01.KG0EW-SCAN-IND == 5)
    KG0ES-VCUCPX01-S5();
  end
  if (KG0EW01.KG0EW-SCAN-IND == 6)
    KG0ES-VCUCPX01-S6();
  end
  if (KG0EW01.KG0EW-SCAN-IND == 7)
    KG0ES-VCUCPX01-S7();
  end
  if (KG0EW01.KG0EW-SCAN-IND == 8)
    KG0ES-VCUCPX01-S8();
  end

               /* loop/save cucpx by the screenfull*/
  KG0EW01.KG0EWDIX = 0;

  while (KG0EW01.KG0EWEND == "N") /* not end of cusku*/
    set KG0EW04 empty;
    KG0EW01.KG0EWCNT = 1;

    if (KG0EW01.KG0EW-SCAN-IND == 1)
      while (KG0EW01.KG0EWCNT < KG0EW01.KG0EWMAX /* nbr of occurs*/
       && KG0EW01.KG0EWEND == "N") /* not end of cusku*/
        KG0ES-VCUCPX01-N1();
        if (KG0EW01.KG0EWEND != "Y")
          KG0E200(); /* move cucpx to ws*/
        end /* of IF*/
      end /* of WHILE*/
    else
      if (KG0EW01.KG0EW-SCAN-IND == 3)
        while (KG0EW01.KG0EWCNT < KG0EW01.KG0EWMAX /* nbr of occurs*/
         && KG0EW01.KG0EWEND == "N") /* not end of cusku*/
          KG0ES-VCUCPX01-N3();
          if (KG0EW01.KG0EWEND != "Y")
            KG0E200(); /* move cucpx to ws*/
          end /* of IF*/
        end /* of WHILE*/
      else
        if (KG0EW01.KG0EW-SCAN-IND == 5)
          while (KG0EW01.KG0EWCNT < KG0EW01.KG0EWMAX /* nbr of occurs*/
           && KG0EW01.KG0EWEND == "N") /* not end of cusku*/
            KG0ES-VCUCPX01-N5();
            if (KG0EW01.KG0EWEND != "Y")
              KG0E200(); /* move cucpx to ws*/
            end /* of IF*/
          end /* of WHILE*/
        else
          if (KG0EW01.KG0EW-SCAN-IND == 6)
            while (KG0EW01.KG0EWCNT < KG0EW01.KG0EWMAX /* nbr of occurs*/
             && KG0EW01.KG0EWEND == "N") /* not end of cusku*/
              KG0ES-VCUCPX01-N6();
              if (KG0EW01.KG0EWEND != "Y")
                KG0E200(); /* move cucpx to ws*/
              end /* of IF*/
            end /* of WHILE*/
          else
            if (KG0EW01.KG0EW-SCAN-IND == 7)
              while (KG0EW01.KG0EWCNT < KG0EW01.KG0EWMAX /* nbr of occurs*/
               && KG0EW01.KG0EWEND == "N") /* not end of cusku*/
                KG0ES-VCUCPX01-N7();
                if (KG0EW01.KG0EWEND != "Y")
                  KG0E200(); /* move cucpx to ws*/
                end /* of IF*/
              end /* of WHILE*/
            else
              if (KG0EW01.KG0EW-SCAN-IND == 8)
                while (KG0EW01.KG0EWCNT < KG0EW01.KG0EWMAX /* nbr of occurs*/
                 && KG0EW01.KG0EWEND == "N") /* not end of cusku*/
                  KG0ES-VCUCPX01-N8();
                  if (KG0EW01.KG0EWEND != "Y")
                    KG0E200(); /* move cucpx to ws*/
                  end /* of IF*/
                end /* of IF*/
              end /* of IF*/
            end /* of IF*/
          end /* of IF*/
        end /* of IF*/
      end /* of WHILE*/
    end /* of WHILE*/


    if (KG0EW01.KG0EWCNT > 1 /* you have records*/
     || COMMAREA.CACHGFL == "Y") /* or 'add' security*/
      KG0E240(); /* write stores to temp storage*/
    end
  end

  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value

  KG0EW01.KG0EWCID = KG0EM100.KUISKUID; /* set key*/
  KG0EW01.KG0EWDID = KG0EM100.XNXCD; /* *** save Dept Cross reference*/
  KG0EW01.KG0EWPRD = KG0EM100.KG0EMPRD; /* save Prod ID*/
  KG0EW01.XGPCD = KG0EM100.KG0EMXGP; /* *** save NIKE GPC code*/
  KG0EW01.SY1STNBR = KG0EM100.KG0EMSY1; /* save NIKE Style number*/
  KG0EW01.SY2CLRID = KG0EM100.KG0EMSY2; /* save NIKE Style Color Code*/
  KG0EW01.XDMCD = KG0EM100.KG0EMXDM; /* *** save NIKE Dimension Code*/

  KG0EW01.KG0EWPGT = KG0EW01.KG0EWDIX; /* total pg remains constant*/
  KG0EM100.KG0EMPG2 = KG0EW01.KG0EWDIX; /* total nbr of pages*/


end // end KG0E150

// purge temp storage
Function KG0E155()
   /* ***************************************/
   /* * kg0e155 - purge temp storage*/
   /* ***************************************/

  KG0EW02.KG0EW2CT = 0;
  KG0EW02.KG0EW2AP = "KW04";
  KG0EW02.KG0EW2RC = 0;
  KG0EW02.KG0EW2FC = "P"; /* purge temp work file*/

  set KG0EW04 empty;
  KG0EW04.KG0EW4LG = KG0EW01.KG0EWSIZ;

  call "TA0050" (KG0EW04, KG0EW02) {isNoRefresh = yes, isExternal = yes};

  if (KG0EW02.KG0EW2RC != 0) /* error encountered*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(228);
  end


end // end KG0E155

// move vcucpx values to ws
Function KG0E200()
   /* **********************************************/
   /* * kg0e200 - move cucpx vales to temp storage*/
   /* **********************************************/

  KG0EW04.KG0EWSEL[KG0EWCNT] = " ";

  KG0EW04.XNX-DEPT-ID-XREF[KG0EWCNT] = VCUCPX01.XNX-DEPT-ID-XREF;
  KG0EW04.CU-CUST-PROD-ID[KG0EWCNT] = VCUCPX01.CU-CUST-PROD-ID;
  KG0EW04.CU-PROD-SNM[KG0EWCNT] = VCUCPX01.CU-PROD-SNM;

  if (VCUCPX01.CU-PROD-XREF-EDT > 0)
    KG0EW01.KG0EW-EDT = VCUCPX01.CU-PROD-XREF-EDT;
    move KG0EW-DAY to KG0EW-MAP1-DAY withV60Compat;
    move KG0EW-MONTH to KG0EW-MAP1-MONTH withV60Compat;
    move KG0EW-YEAR to KG0EW-MAP1-YEAR withV60Compat;
    KG0EW04.KG0EW-FORMATED-DATE[KG0EWCNT] = KG0EW-MAP1-DATE;
  else
    KG0EW-MAP1-DAY = 00;
    KG0EW-MAP1-MONTH = 00;
    KG0EW-MAP1-YEAR = 00;
    KG0EW04.KG0EW-FORMATED-DATE[KG0EWCNT] = KG0EW-MAP1-DATE;
  end

  KG0EW04.XGPCD[KG0EWCNT] = VCUCPX01.XGPCD;
  KG0EW04.SY1STNBR[KG0EWCNT] = VCUCPX01.SY1STNBR;
  KG0EW04.SY2CLRID[KG0EWCNT] = VCUCPX01.SY2CLRID;
  KG0EW04.XDMCD[KG0EWCNT] = VCUCPX01.XDMCD;
  KG0EW04.XQACD[KG0EWCNT] = VCUCPX01.XQACD;

  if (VCUCPX01.SY5SZID == 0)
    KG0EW01.SY4IDDSC = " ";
    KG0EW01.SY5SZID = 0;
    KG0EW04.SY4IDDSC[KG0EWCNT] = KG0EW01.SY4IDDSC;
    KG0EW04.SY5SZID[KG0EWCNT] = KG0EW01.SY5SZID;
  else
    KG0E205(); /* translate size to desc*/
    KG0EW04.SY4IDDSC[KG0EWCNT] = KG0EW01.SY4IDDSC;
    KG0EW04.SY5SZID[KG0EWCNT] = KG0EW01.SY5SZID;
  end

  KG0E210(); /* set more info flag*/

  KG0EW01.KG0EWCNT = KG0EW01.KG0EWCNT + 1;


end // end KG0E200

// translate size id to desc
Function KG0E205()
   /* *************************************************/
   /* kg0e205 - translate size id to size description*/
   /* *************************************************/

  set SYPREC empty;
  set SQLCA empty;

  SYPREC.SYPFC = "IE";
  SYPREC.SYPCMPSW = "C";
  SYPREC.XGPCD = VCUCPX01.XGPCD;
  SYPREC.SY1STNBR = VCUCPX01.SY1STNBR;
  SYPREC.SY2CLRID = VCUCPX01.SY2CLRID;
  SYPREC.XDMCD = VCUCPX01.XDMCD;
  SYPREC.XQACD = "**";
  SYPREC.SY5SZID[1] = VCUCPX01.SY5SZID;
  KG0EW01.SY5SZID = VCUCPX01.SY5SZID;

  call "SY1120" (SQLCA, SYPREC) {isNoRefresh = yes, isExternal = yes}; /* translate*/

  if (SYPREC.SYPRC != 0)
    KG0EM200.SY4IDDSC = "ERROR";
    KG0EW01.SY4IDDSC = "ERROR";
    return;
  end

   /* ----- look for size description ----------------*/

  KG0EW01.KG0EWSCT = 0; /* move 0 to counter*/
  KG0EW01.KG0EWIND = 1; /* move 1 to index*/
  KG0EW01.KG0EWSWT = 1; /* move n to switch*/

  while (KG0EW01.KG0EWIND < 41) /* search thru possible*/

    KG0EW01.KG0EWSCT = KG0EW01.KG0EWSCT + 1; /* increment counter.*/

    if (VCUCPX01.SY5SZID == SYPREC.SY5SZID[KG0EWSCT])
      KG0EW01.KG0EWSWT = "Y"; /* if match,*/
      KG0EW01.KG0EWIND = 41; /* set switch & exit.*/
    end

    KG0EW01.KG0EWIND = KG0EW01.KG0EWIND + 1; /* increment index.*/
  end /* while loop*/


  if (KG0EW01.KG0EWSWT == "N")
                                   /* if size not found*/
    KG0EW01.SY4IDDSC = "NT FND";
  else
    KG0EW01.SY4IDDSC = SYPREC.SY4IDDSC[KG0EWSCT];
  end


end // end KG0E205

// set more info flag
Function KG0E210()
   /* *******************************************/
   /* * kg0e210 - set more info flag*/
   /* *******************************************/

  KG0EW04.KG0EWINF[KG0EWCNT] = " ";

  if (VCUCPX01.CU-PROD-SNM == " "
   && VCUCPX01.CU-SUGG-RTL-PRC == 0
   && VCUCPX01.CU-CUST-SPCL-PRC == 0
   && VCUCPX01.CU-SPCL-PRC-EDT == 0
   && VCUCPX01.CU-HANG-XGP-CD == " "
   && VCUCPX01.CU-HANG-STY-NBR == " "
   && VCUCPX01.PK-LABL-CD1 == " "
   && VCUCPX01.PK-LABL-CD2 == " "
   && VCUCPX01.YLA-LABL-ATCH-CD1 == " "
   && VCUCPX01.YLA-LABL-ATCH-CD2 == " "
   && VCUCPX01.CU-HANG-CRTN-CLS == " "
   && VCUCPX01.CU-VEND-CLS-ID == " "
   && VCUCPX01.CU-SKU-COMNT1 == " "
   && VCUCPX01.CU-SKU-COMNT2 == " "
   && VCUCPX01.CU-SKU-COMNT3 == " "
   && VCUCPX01.XXX-STAT == "A"
  ) /* next sentence*/
  else
    KG0EW04.KG0EWINF[KG0EWCNT] = "Y";
  end


end // end KG0E210

// write info to temp storage
Function KG0E240()
   /* ************************************************/
   /* * kg0e240 - write info to temporary storage*/
   /* ************************************************/

  set KG0EW02 empty;
  KG0EW02.KG0EW2RC = 0; /* return code*/
  KG0EW02.KG0EW2FC = "A";
  KG0EW02.KG0EW2AP = "KW04";
  KG0EW01.KG0EWDIX = KG0EW01.KG0EWDIX + 1;
  KG0EW02.KG0EW2CT = KG0EW01.KG0EWDIX;
  KG0EW04.KG0EW4LG = KG0EW01.KG0EWSIZ;

  call "TA0050" (KG0EW04, KG0EW02) {isNoRefresh = yes, isExternal = yes};

  if (KG0EW02.KG0EW2RC != 0)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    KG0EW01.KG0EWEND = "Y";
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(228);
  end


end // end KG0E240

// read temp storage
Function KG0E260()
   /* ************************************/
   /* *kg0e260 - read cusku temp stoarge*/
   /* ************************************/

  KG0EW02.KG0EW2RC = 0;
  KG0EW02.KG0EW2CT = KG0EW01.KG0EWDIX;
  KG0EW02.KG0EW2FC = "R";
  KG0EW02.KG0EW2AP = "KW04";
  KG0EW04.KG0EW4LG = KG0EW01.KG0EWSIZ;
  call "TA0050" (KG0EW04, KG0EW02) {isNoRefresh = yes, isExternal = yes};

  if (KG0EW02.KG0EW2RC == 0)
    /* next sentence*/
  else
    if (KG0EW02.KG0EW2RC == 7 /* end of data*/
     || KG0EW02.KG0EW2RC == 4) /* no temp storage records*/
      converseLib.validationFailed(206);
      KG0EW01.KG0EWERR = "Y";
      KG0EW01.KG0EWEND = "Y";
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.commit();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      converseLib.validationFailed(228);
      KG0EW01.KG0EWERR = "Y";
      KG0EW01.KG0EWEND = "Y";
    end
  end


end // end KG0E260

// move temp storage to screen1
Function KG0E270()
   /* ******************************************/
   /* * kg0e270 - move temp storage to screen*/
   /* ******************************************/

  KG0EW01.KG0EWCNT = 1; /* counter for screen*/

  KG0EW01.KG0EWPGC = KG0EW01.KG0EWDIX;
  KG0EM100.KG0EMPG1 = KG0EW01.KG0EWPGC;

  KG0E260(); /* read store temp storage*/

  while (KG0EW01.KG0EWCNT < KG0EW01.KG0EWMAX)
    if (KG0EW04.XGPCD[KG0EWCNT] == " ")
      set KG0EM100.KG0EMSEL[KG0EWCNT] initialAttributes;
      KG0EM100.KG0EMSEL[KG0EWCNT] = " ";
      KG0EM100.XNX-DEPT-ID-XREF[KG0EWCNT] = 0;
      KG0EM100.CU-CUST-PROD-ID[KG0EWCNT] = " ";
      KG0EM100.CU-PROD-SNM[KG0EWCNT] = " ";
      KG0EM100.KG0EM-CU-PROD-XREF-EDT[KG0EWCNT] = " ";
      KG0EM100.XGPCD[KG0EWCNT] = " ";
      KG0EM100.SY1STNBR[KG0EWCNT] = " ";
      KG0EM100.SY2CLRID[KG0EWCNT] = " ";
      KG0EM100.XDMCD[KG0EWCNT] = " ";
      KG0EM100.SY4IDDSC[KG0EWCNT] = " ";
      KG0EM100.KG0EMINF[KG0EWCNT] = " ";

      if (converseVar.validationMsgNum == 0) /* no previous message*/
        converseLib.validationFailed(206); /* "end of data" msg*/
      end
    else
      if (KG0EW04.KG0EWSEL[KG0EWCNT] == "X") /* if row deleted, skip it*/
        set KG0EM100.KG0EMSEL[KG0EWCNT] skip;
      else
        set KG0EM100.KG0EMSEL[KG0EWCNT] initialAttributes;
      end
      KG0EM100.XNX-DEPT-ID-XREF[KG0EWCNT] = KG0EW04.XNX-DEPT-ID-XREF[KG0EWCNT];
      KG0EM100.CU-CUST-PROD-ID[KG0EWCNT] = KG0EW04.CU-CUST-PROD-ID[KG0EWCNT];
      KG0EM100.CU-PROD-SNM[KG0EWCNT] = KG0EW04.CU-PROD-SNM[KG0EWCNT];
      KG0EM100.KG0EM-CU-PROD-XREF-EDT[KG0EWCNT] = KG0EW04.KG0EW-FORMATED-DATE[KG0EWCNT];
      KG0EM100.KG0EMSEL[KG0EWCNT] = KG0EW04.KG0EWSEL[KG0EWCNT];
      KG0EM100.XGPCD[KG0EWCNT] = KG0EW04.XGPCD[KG0EWCNT];
      KG0EM100.SY1STNBR[KG0EWCNT] = KG0EW04.SY1STNBR[KG0EWCNT];
      KG0EM100.SY2CLRID[KG0EWCNT] = KG0EW04.SY2CLRID[KG0EWCNT];
      KG0EM100.XDMCD[KG0EWCNT] = KG0EW04.XDMCD[KG0EWCNT];
      KG0EM100.SY4IDDSC[KG0EWCNT] = KG0EW04.SY4IDDSC[KG0EWCNT];
      KG0EM100.KG0EMINF[KG0EWCNT] = KG0EW04.KG0EWINF[KG0EWCNT];

    end

    KG0EW01.KG0EWCNT = KG0EW01.KG0EWCNT + 1;
  end

  set KG0EM100.KUISKUID cursor;


end // end KG0E270

// process pfkeys - scrn 1
Function KG0E300()
   /* ************************************************/
   /* kg0e300 - process pfkeys for scroll screen*/
   /* ************************************************/


   /* **************************************/
   /* edit pa2 key*/
   /* **************************************/

  if (converseVar.eventKey is pa2)
    KG0E110(); /* refresh the screen*/
    KG0EW01.KG0EWERR = "Y"; /* set error flag to display screen*/
    KG0EW01.KG0EWMD1 = "N";
    KG0EW01.KG0EWEFL = "N";
    return;
  end

   /* **************************************/
   /* edit pf3 key*/
   /* **************************************/

  if (converseVar.eventKey is pf3) /* back to from application*/
    if (KG0EW01.KG0EWPGT != 0) /* cusku data is available*/
      KG0E155(); /* purge cusku temp storage*/
    end
    KG0EW01.KG0EWCNO = KG0EM100.KUISKUID;
    KG0EW01.KG0EWDNO = KG0EM100.XNXCD;
    COMMAREA.CAUSERA = KG0EW01.KG0EWUSR;
    COMMAREA.CAITEM = " ";
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    COMMAREA.CAFROMAP = "KG0E";
    XSEXIT();
    KG0EM100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KG0EW01.KG0EWERR = "Y";
    return;
  end

   /* **************************************/
   /* edit pf4 key*/
   /* **************************************/

  if (converseVar.eventKey is pf4) /* back to goal menu*/
    if (KG0EW01.KG0EWPGT != 0) /* cusku data is available*/
      KG0E155(); /* purge cusku temp storage*/
    end
    COMMAREA.CAFROMAP = "KG0E";
    XSPF4();
    KG0EM100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KG0EW01.KG0EWERR = "Y";
    return;
  end


   /* **************************************/
   /* edit pf1 key*/
   /* **************************************/

  if (converseVar.eventKey is pf1) /* help system*/
    if (KG0EW01.KG0EWPGT != 0) /* cusku data is available*/
      KG0E155(); /* purge cusku temp storage*/
    end
    XSPF1();
    KG0EM100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KG0EW01.KG0EWERR = "Y";
    return;
  end


   /* **************************************/
   /* edit screen*/
   /* **************************************/

  KG0E310(); /* edit screen*/
  if (KG0EW01.KG0EWERR == "Y") /* return for screen errors*/
    return;
  end


   /* **************************************/
   /* edit enter  key*/
   /* **************************************/

  if (converseVar.eventKey is enter)
    if (KG0EM100.CATOAP > " ") /* test for fast path*/
      if (KG0EW01.KG0EWPGT != 0) /* cusku data is available*/
        KG0E155(); /* purge cusku temp storage*/
      end
      COMMAREA.CATOAP = KG0EM100.CATOAP;
      if (KG0EM100.CAITEM == " ")
        KG0EW01.KG0EWCID = KG0EM100.KUISKUID;
        COMMAREA.CAUSERA = KG0EW01.KG0EWUSR;
      else
        COMMAREA.CAITEM = KG0EM100.CAITEM;
      end
      COMMAREA.CAFROMAP = "KG0E";
      XSEXIT();
      KG0EM100.VAGen_EZEMSG = COMMAREA.CAMSG;
      KG0EW01.KG0EWERR = "Y";
      set KG0EM100.CATOAP cursor, bold;
    else /* edit screen*/
      return;
    end
  end

   /* **************************************/
   /* test for fastpath except on <enter>*/
   /* **************************************/

  if (KG0EM100.CATOAP > " ")
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(90); /* "fast path / pf keys" msg*/
    set KG0EM100.CATOAP cursor, bold;
    return;
  else
    set KG0EM100.CATOAP modified;
  end



   /* **************************************/
   /* edit pf7 key    (page up for cusku)*/
   /* **************************************/

  if (converseVar.eventKey is pf7) /* scroll backwards for cusku*/
    KG0E340();
    return;
  end

   /* **************************************/
   /* edit pf8 key  (page down for cusku)*/
   /* **************************************/

  if (converseVar.eventKey is pf8) /* scroll forwards for cusku*/
    KG0E350();
    return;
  end


   /* **************************************/
   /* edit invalid key*/
   /* **************************************/

  if (KG0EW01.KG0EWERR == "N")
    converseLib.validationFailed(003); /* invalid pf key message*/
    KG0EW01.KG0EWERR = "Y";
  end


end // end KG0E300

// edit selection screen
Function KG0E310()
   /* ******************************/
   /* kg0e310 - edit scroll screen*/
   /* ******************************/

   /* ******* edit for company changes*/
  set KG0EM100.KUISKUID initialAttributes;
  set KG0EM100.XNXCD initialAttributes;
  set KG0EM100.KG0EMXGP initialAttributes;
  if (KG0EM100.KUISKUID == KG0EW01.KG0EWCID
   && KG0EM100.XNXCD == KG0EW01.KG0EWDID
   /* ********AND KG0EM100.KUISKUID NE 0;*/
   && KG0EM100.KG0EMPRD == KG0EW01.KG0EWPRD
   && KG0EM100.KG0EMXGP == KG0EW01.XGPCD
   && KG0EM100.KG0EMSY1 == KG0EW01.SY1STNBR
   && KG0EM100.KG0EMSY2 == KG0EW01.SY2CLRID
   && KG0EM100.KG0EMXDM == KG0EW01.XDMCD)
    /* next sentence*/
  else
    if (KG0EM100.KG0EMXGP > " " /* If any part of NIKE Prod is entered,*/
     || KG0EM100.KG0EMSY1 > " " /* it takes precedence over Customer Prd*/
     || KG0EM100.KG0EMSY2 > " " 
     || KG0EM100.KG0EMXDM > " ")
      KG0EM100.KG0EMPRD = " "; /* Space out NIKE Prod*/
    end
    if (KG0EM100.KG0EMSY1 > " " /* NIKE Style number is entered*/
     && KG0EM100.KG0EMXGP == " ") /* but GPC code is spaces*/
      converseLib.validationFailed(103); /* set error msg*/
      set KG0EM100.KG0EMXGP cursor, modified, bold; /* set cursor*/
    else
      KG0E110(); /* refresh screen*/
    end

    KG0EW01.KG0EWERR = "Y"; /* set error flag*/
    KG0EW01.KG0EWEFL = "N"; /* set update flag*/
    KG0EW01.KG0EWMD1 = "N"; /* set update flag*/
    return;
  end


   /* ******* edit for starting pt changes*/
  if (KG0EM100.KG0EMPRD == KG0EW01.KUIPRDID
   && KG0EM100.KG0EMXGP == KG0EW01.XGPCD
   && KG0EM100.KG0EMSY1 == KG0EW01.SY1STNBR
   && KG0EM100.KG0EMSY2 == KG0EW01.SY2CLRID
   && KG0EM100.KG0EMXDM == KG0EW01.XDMCD)
     /* next sentence      ; no changes in starting point*/
  else
    KG0EW01.KUIPRDID = KG0EM100.KG0EMPRD; /* build prod id*/
    KG0EW01.XGPCD = KG0EM100.KG0EMXGP; /* build group level*/
    KG0EW01.SY1STNBR = KG0EM100.KG0EMSY1;
    KG0EW01.SY2CLRID = KG0EM100.KG0EMSY2;
    KG0EW01.XDMCD = KG0EM100.KG0EMXDM;
  /* PERFORM KG0E250; /* find starting point - no more as of 9/6/95 ALUFT*/
    KG0E270(); /* move cusku to the screen*/
    KG0EW01.KG0EWERR = "Y"; /* set error flag*/
    KG0EW01.KG0EWEFL = "N"; /* set update flag*/
    KG0EW01.KG0EWMD1 = "N"; /* set update flag*/
    return;
  end


   /* ******* edit for select fields*/
  KG0EW01.KG0EWCNT = 1;
  KG0EW01.KG0EWCHG = "N";


  while (KG0EW01.KG0EWCNT < KG0EW01.KG0EWMAX) /* nbr of occurs*/

    if (KG0EM100.KG0EMSEL[KG0EWCNT] == KG0EW04.KG0EWSEL[KG0EWCNT])
      set KG0EM100.KG0EMSEL[KG0EWCNT] initialAttributes;
    else
      if (KG0EM100.KG0EMSEL[KG0EWCNT] == "A"
       || KG0EM100.KG0EMSEL[KG0EWCNT] == "C"
       || KG0EM100.KG0EMSEL[KG0EWCNT] == "D"
       || KG0EM100.KG0EMSEL[KG0EWCNT] == "I"
       || KG0EM100.KG0EMSEL[KG0EWCNT] == "S"
       || KG0EM100.KG0EMSEL[KG0EWCNT] == " ")
        KG0E320(); /* edit select value*/
      else
        set KG0EM100.KG0EMSEL[KG0EWCNT] cursor, bold;
        KG0EW01.KG0EWERR = "Y";
        converseLib.validationFailed(402); /* invalid select value*/
      end
    end

    KG0EW01.KG0EWCNT = KG0EW01.KG0EWCNT + 1;

  end /* of while*/


  if (KG0EW01.KG0EWERR == "N" /* rewrite temp*/
   && KG0EW01.KG0EWCHG == "Y")
    KG0E330();
  end


end // end KG0E310

// edit select values
Function KG0E320()
   /* ******************************/
   /* kg0e320 - edit select values*/
   /* ******************************/


  if (KG0EM100.KG0EMSEL[KG0EWCNT] == " ") /* user spaced out request*/
    set KG0EM100.KG0EMSEL[KG0EWCNT] initialAttributes;
    KG0EW01.KG0EWCHG = "Y"; /* rewrite temp*/
    return;
  end


  if (KG0EM100.KG0EMSEL[KG0EWCNT] == "I"
   || KG0EM100.KG0EMSEL[KG0EWCNT] == "S")
    if (KG0EM100.XGPCD[KG0EWCNT] == " ")
      set KG0EM100.KG0EMSEL[KG0EWCNT] cursor, bold;
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(390); /* can not use opt on blank line*/
    else
      KG0EW04.KG0EWSEL[KG0EWCNT] = KG0EM100.KG0EMSEL[KG0EWCNT];
      set KG0EM100.KG0EMSEL[KG0EWCNT] initialAttributes;
      KG0EW01.KG0EWCHG = "Y"; /* rewrite temp*/
    end
    return;
  end


  if (KG0EM100.KG0EMSEL[KG0EWCNT] == "A"
   || KG0EM100.KG0EMSEL[KG0EWCNT] == "C"
   || KG0EM100.KG0EMSEL[KG0EWCNT] == "D")
    if (COMMAREA.CACLVL[1] == "Y" /* user has security*/
     && KG0EW01.KG0EWUPM == "Y")  /* and correct xle*/
       /* next sentence*/
    else
      set KG0EM100.KG0EMSEL[KG0EWCNT] cursor, bold;
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(401); /* no security for user*/
      return;
    end
  end


  if (KG0EM100.KG0EMSEL[KG0EWCNT] == "A")
    if (KG0EM100.XGPCD[KG0EWCNT] == " ")
      KG0EW04.KG0EWSEL[KG0EWCNT] = KG0EM100.KG0EMSEL[KG0EWCNT];
      set KG0EM100.KG0EMSEL[KG0EWCNT] initialAttributes;
      KG0EW01.KG0EWCHG = "Y"; /* rewrite temp*/
    else
      set KG0EM100.KG0EMSEL[KG0EWCNT] cursor, bold;
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(389); /* must be on blank line*/
    end
  end


  if (KG0EM100.KG0EMSEL[KG0EWCNT] == "C"
   || KG0EM100.KG0EMSEL[KG0EWCNT] == "D")
    if (KG0EM100.XGPCD[KG0EWCNT] == " ")
      set KG0EM100.KG0EMSEL[KG0EWCNT] cursor, bold;
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(390); /* can't be on blank line*/
    else
      KG0EW04.KG0EWSEL[KG0EWCNT] = KG0EM100.KG0EMSEL[KG0EWCNT];
      set KG0EM100.KG0EMSEL[KG0EWCNT] initialAttributes;
      KG0EW01.KG0EWCHG = "Y"; /* rewrite temp*/
    end
  end


end // end KG0E320

// rewrite temp storage
Function KG0E330()
   /* **********************************/
   /* * kg0e330 - rewrite temp storage*/
   /* **********************************/

  set KG0EW02 empty;
  KG0EW02.KG0EW2RC = 0; /* return code*/
  KG0EW02.KG0EW2FC = "U";
  KG0EW02.KG0EW2AP = "KW04";
  KG0EW02.KG0EW2CT = KG0EW01.KG0EWDIX;
  KG0EW04.KG0EW4LG = KG0EW01.KG0EWSIZ;
  call "TA0050" (KG0EW04, KG0EW02) {isNoRefresh = yes, isExternal = yes};
  if (KG0EW02.KG0EW2RC != 0)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    KG0EW01.KG0EWEND = "Y";
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(228);
  end


end // end KG0E330

// scroll page up
Function KG0E340()
   /* *******************************/
   /* * kg0e340 - scroll page up*/
   /* *******************************/

  if (KG0EW01.KG0EWDIX > 1)
    KG0EW01.KG0EWDIX = KG0EW01.KG0EWDIX - 1;
    KG0EW01.KG0EWPGC = KG0EW01.KG0EWPGC - 1;
    KG0EM100.KG0EMPG1 = KG0EW01.KG0EWPGC;
    KG0E270(); /* move cusku to screen*/
  else
    converseLib.validationFailed(208); /* at begining of data*/
  end


end // end KG0E340

// scroll page down
Function KG0E350()
   /* *******************************/
   /* kg0e350 - scroll page down*/
   /* *******************************/

  if (KG0EW01.KG0EWDIX >= KG0EW01.KG0EWPGT) /* if at end of cusku*/
    if (COMMAREA.CACLVL[1] == "Y") /* empty screen for adds*/
      KG0E355();
    else
      converseLib.validationFailed(206);
    end
  else
    KG0EW01.KG0EWDIX = KG0EW01.KG0EWDIX + 1;
    KG0EW01.KG0EWPGC = KG0EW01.KG0EWPGC + 1; /* page counter*/
    KG0EM100.KG0EMPG1 = KG0EW01.KG0EWPGC;
    KG0E270(); /* move cusku to screen*/
  end


end // end KG0E350

// scroll to empty screen
Function KG0E355()
   /* ****************************************/
   /* kg0e355 - scroll to an empty screen*/
   /* ****************************************/

  if (KG0EW04.XGPCD[1] > " " /* if all rows*/
   && KG0EW04.XGPCD[2] > " " /* are full*/
   && KG0EW04.XGPCD[3] > " " 
   && KG0EW04.XGPCD[4] > " " 
   && KG0EW04.XGPCD[5] > " " 
   && KG0EW04.XGPCD[6] > " " 
   && KG0EW04.XGPCD[7] > " " 
   && KG0EW04.XGPCD[8] > " " 
   && KG0EW04.XGPCD[9] > " " 
   && KG0EW04.XGPCD[10] > " ")
    set KG0EW04 empty;
    KG0EW01.KG0EWPGT = KG0EW01.KG0EWPGT + 1; /* page counter*/
    KG0EW01.KG0EWPGC = KG0EW01.KG0EWPGC + 1;
    KG0EM100.KG0EMPG2 = KG0EW01.KG0EWPGT;
    KG0EM100.KG0EMPG1 = KG0EW01.KG0EWPGC;
    KG0E240(); /* create empty temp storage*/
    KG0E270(); /* move empty cusku to screen*/
  else
    converseLib.validationFailed(206);
  end


end // end KG0E355

// process detail screen
Function KG0E400()
   /* *************************************************/
   /* kg0e400 - process detail screen*/
   /* *************************************************/


  KG0EW01.KG0EWRTN = "N"; /* return to first screen*/
  KG0EW01.KG0EWEND = "N"; /* end second screen*/
  KG0EW01.KG0EWDIX = 1; /* cusku index*/
  while (KG0EW01.KG0EWDIX <= KG0EW01.KG0EWPGT)

    KG0E260(); /* read cusku temp storage*/
    KG0EW01.KG0EWCHG = "N"; /* rewrite temp storage*/

    KG0EW01.KG0EWCNT = 1; /* counter for screen*/
    while (KG0EW01.KG0EWCNT < KG0EW01.KG0EWMAX)
      if (KG0EW04.KG0EWSEL[KG0EWCNT] == " "
       || KG0EW04.KG0EWSEL[KG0EWCNT] == "X")
         /* next sentence*/
      else
        if (KG0EW01.KG0EWEND == "Y") /* if users have pressed pf3*/
          KG0EW04.KG0EWSEL[KG0EWCNT] = " "; /* clear select values*/
          KG0EW01.KG0EWCHG = "Y"; /* rewrite temp*/
          KG0EW01.KG0EWRTN = "Y"; /* chgs, return to first screen*/
        else
          KG0E410(); /* display second screen*/
          KG0EW01.KG0EWCHG = "Y"; /* rewrite temp*/
          KG0EW01.KG0EWRTN = "Y"; /* chgs, return to first screen*/
        end

      end

      KG0EW01.KG0EWCNT = KG0EW01.KG0EWCNT + 1;
    end /* while loop - max*/

    if (KG0EW01.KG0EWCHG == "Y") /* if changes*/
      KG0E330(); /* rewrite temp storage*/
      KG0EW01.KG0EWCHG = "N";
    end /* of while*/

    KG0EW01.KG0EWDIX = KG0EW01.KG0EWDIX + 1;
  end /* while loop - temp storage*/


   /* ******* return to page from which 2nd screen was invoked *************/
  if (KG0EW01.KG0EWRTN == "Y")
    KG0EW01.KG0EWDIX = KG0EW01.KG0EWPGC; /* return to proper page*/
    KG0E270(); /* move cusku to the screen*/
  end /* of while*/


end // end KG0E400

// build second screen
Function KG0E410()
   /* ***********************************/
   /* kg0e410 - build detail screen*/
   /* ***********************************/

  KG0EW01.KG0EWERR = "N"; /* set error to no*/
  KG0EW01.KG0EWMD1 = "N"; /* set modified to no*/

   /* *********** read cusku *********************/
  set VCUCPX01 empty;

  if (COMMAREA.CADLVL[1] == "Y") /* If Cole Haan user*/
    VCUCPX01.CU-CUSKU-ID = PK6REC.KUCCOID; /* use DPICK cust nbr*/
  else
    VCUCPX01.CU-CUSKU-ID = KG0EM100.KUISKUID; /* set key*/
  end

  VCUCPX01.XNX-DEPT-ID-XREF = KG0EM100.XNX-DEPT-ID-XREF[KG0EWCNT];

  if (KG0EW04.KG0EWSEL[KG0EWCNT] == "A")
    CU-PROD-XREF-EDT = 0;
  else
    /* move effective date*/
    KG0EW01.KG0EW-MAP1-DATE = KG0EW04.KG0EW-FORMATED-DATE[KG0EWCNT];
    KG0EW01.KG0EW-MONTH = KG0EW01.KG0EW-MAP1-MONTH;
    KG0EW01.KG0EW-DAY = KG0EW01.KG0EW-MAP1-DAY;
    KG0EW01.KG0EW-YEAR = KG0EW01.KG0EW-MAP1-YEAR;
  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KG0EW-YEAR NE 0;*/
  /* IF KG0EW01.KG0EW-YEAR GE 90;*/
  /* MOVE 19 TO KG0EW01.KG0EW-CENTURY;*/
  /* ELSE;*/
  /* MOVE 20 TO KG0EW01.KG0EW-CENTURY;*/
  /* END;*/
  /* END;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/
  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
    if (KG0EW01.KG0EW-YYMMDD > 0) /* insure that YYMMDD value > zero*/
      if (KG0EW01.KG0EW-YEAR > 60)
        KG0EW01.KG0EW-CENTURY = 19;
      else
        KG0EW01.KG0EW-CENTURY = 20;
      end
    else
      KG0EW01.KG0EW-CENTURY = 0;
    end
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/
    VCUCPX01.CU-PROD-XREF-EDT = KG0EW01.KG0EW-EDT;
  end

  VCUCPX01.CU-CUST-PROD-ID = KG0EW04.CU-CUST-PROD-ID[KG0EWCNT];
  VCUCPX01.XGPCD = KG0EW04.XGPCD[KG0EWCNT];
  VCUCPX01.SY1STNBR = KG0EW04.SY1STNBR[KG0EWCNT];
  VCUCPX01.SY2CLRID = KG0EW04.SY2CLRID[KG0EWCNT];
  VCUCPX01.XDMCD = KG0EW04.XDMCD[KG0EWCNT];
  VCUCPX01.XQACD = KG0EW04.XQACD[KG0EWCNT];
  VCUCPX01.SY5SZID = KG0EW04.SY5SZID[KG0EWCNT];

  KG0ES-VCUCPX01-SB(); /* read vcucpx01*/

  KG0E430(); /* format cusku01 to map kg0em200*/

  KG0EW01.KG0EWDON = "N"; /* done flag*/
  while (KG0EW01.KG0EWDON == "N")
    KG0E500(); /* converse screen 2*/
  end


end // end KG0E410

// move cucpx to screen 2
Function KG0E430()
   /* ********************************/
   /* kg0e430 - move cucpx to screen*/
   /* ********************************/

  if (KG0EW04.KG0EWSEL[KG0EWCNT] == "I" /* inquiry mode*/
   || KG0EW04.KG0EWSEL[KG0EWCNT] == "S" /* inquiry mode*/
   || KG0EW04.KG0EWSEL[KG0EWCNT] == "D" /* delete mode*/
   || KG0EW01.KG0EWERR == "Y")          /* no product found - ??*/
    KG0E450(); /* set fields protected*/
  else
    KG0E440(); /* set fields defined*/
  end

  if (KG0EW04.KG0EWSEL[KG0EWCNT] == "A")
    KG0EM200.KG0EMTTL = "ADD";
  else
    if (KG0EW04.KG0EWSEL[KG0EWCNT] == "C")
      KG0EM200.KG0EMTTL = "CHANGE";
    else
      if (KG0EW04.KG0EWSEL[KG0EWCNT] == "D")
        KG0EM200.KG0EMTTL = "DELETE";
      else
        KG0EM200.KG0EMTTL = "INQUIRY";
      end
    end
  end

  KG0EM200.KUISKUID = KG0EM100.KUISKUID; /* customer id*/
  KG0EM200.KUCCONM = KG0EM100.KUCCONM; /* customer name*/
  KG0EM200.XNXCD = VCUCPX01.XNX-DEPT-ID-XREF;
  if (KG0EM200.XNXCD in XNXTBL.XNXCD)
    KG0EM200.XNXDESC = XNXTBL.XNXDESC[sysVar.arrayIndex];
  end /* department descript*/

  KG0EW01.KG0EW-EDT = VCUCPX01.CU-PROD-XREF-EDT; /* special price effective dt*/
  KG0EM200.KG0EM-CU-XREF-EDT-MM = KG0EW01.KG0EW-MONTH;
  KG0EM200.KG0EM-CU-XREF-EDT-DD = KG0EW01.KG0EW-DAY;
  KG0EM200.KG0EM-CU-XREF-EDT-YY = KG0EW01.KG0EW-YEAR;

  KG0EM200.CU-CUST-PROD-ID = VCUCPX01.CU-CUST-PROD-ID;
  KG0EM200.CU-PROD-NM = VCUCPX01.CU-PROD-NM; /* prod name*/
  KG0EM200.CU-PROD-SNM = VCUCPX01.CU-PROD-SNM; /* prod short name*/
  KG0EM200.CU-PROD-COLR-NM = VCUCPX01.CU-PROD-COLR-NM; /* color name*/
  KG0EM200.CU-PROD-SZ-ID = VCUCPX01.CU-PROD-SZ-ID; /* cust size id*/
  KG0EM200.CU-PROD-SZ-NM = VCUCPX01.CU-PROD-SZ-NM; /* cust size name*/

  KG0EM200.XGPCD = VCUCPX01.XGPCD; /* gpc code*/
  KG0EM200.SY1STNBR = VCUCPX01.SY1STNBR; /* style number*/
  KG0EM200.SY2CLRID = VCUCPX01.SY2CLRID; /* color id*/
  KG0EM200.XDMCD = VCUCPX01.XDMCD; /* dimension code*/
  KG0EM200.XQACD = VCUCPX01.XQACD; /* quality code*/
  KG0EM200.SY4IDDSC = KG0EW04.SY4IDDSC[KG0EWCNT]; /* size description*/

  KG0EM200.CU-CUST-RTL-PRC = VCUCPX01.CU-CUST-RTL-PRC; /* retail price*/
  KG0EM200.CU-CUST-SPCL-PRC = VCUCPX01.CU-CUST-SPCL-PRC; /* special price*/
  KG0EM200.CU-SUGG-RTL-PRC = VCUCPX01.CU-SUGG-RTL-PRC; /* suggested retail price*/

  KG0EW01.KG0EWDAT = VCUCPX01.CU-SPCL-PRC-EDT;

  KG0EM200.KG0EMPMM = KG0EW01.KG0EWPMM; /* effective month*/
  KG0EM200.KG0EMPDD = KG0EW01.KG0EWPDD; /* effective day*/
  KG0EM200.KG0EMPYY = KG0EW01.KG0EWPYY; /* effective year*/

  KG0EM200.KUIHAGPC = VCUCPX01.CU-HANG-XGP-CD; /* hanger gpc*/
  KG0EM200.KUIHASTY = VCUCPX01.CU-HANG-STY-NBR; /* hanger style*/
  KG0EM200.KUIHAPCC = VCUCPX01.CU-HANG-CRTN-CLS; /* cust hang carton*/
  KG0EM200.PWRLBCD[1] = VCUCPX01.PK-LABL-CD1; /* label code 1*/
  KG0EM200.PWRLBCD[2] = VCUCPX01.PK-LABL-CD2; /* label code 2*/
  KG0EM200.YLACD[1] = VCUCPX01.YLA-LABL-ATCH-CD1; /* label attach code 1*/
  KG0EM200.YLACD[2] = VCUCPX01.YLA-LABL-ATCH-CD2; /* label attach code 2*/

  KG0EM200.CU-VEND-CLS-ID = VCUCPX01.CU-VEND-CLS-ID; /* vender class id*/
  KG0EM200.XXXSTAT = VCUCPX01.XXX-STAT; /* status*/
  KG0EM200.KUICMNT[1] = VCUCPX01.CU-SKU-COMNT1; /* cusku comment 1*/
  KG0EM200.KUICMNT[2] = VCUCPX01.CU-SKU-COMNT2; /* cusku comment 2*/
  KG0EM200.KUICMNT[3] = VCUCPX01.CU-SKU-COMNT3; /* cusku comment 3*/

   /* ***** get label abrv from the picking label table*/
  if (KG0EM200.PWRLBCD[1] != " ")
    set PWRREC empty;
    PWRREC.PWRLBCD = KG0EM200.PWRLBCD[1];
    KG0E460(); /* read picking label table*/
    if (KG0EW01.KG0EWLBL == "Y")
      KG0EM200.PWRLBABR[1] = PWRREC.PWRLBABR;
    else
      KG0EM200.PWRLBABR[1] = " ";
    end
  else
    KG0EM200.PWRLBABR[1] = " "; /* label abrv*/
  end

  if (KG0EM200.PWRLBCD[2] != " ")
    set PWRREC empty;
    PWRREC.PWRLBCD = KG0EM200.PWRLBCD[2];
    KG0E460(); /* read picking label table*/
    if (KG0EW01.KG0EWLBL == "Y")
      KG0EM200.PWRLBABR[2] = PWRREC.PWRLBABR;
    else
      KG0EM200.PWRLBABR[2] = " ";
    end
  else
    KG0EM200.PWRLBABR[2] = " "; /* label abrv*/
  end

   /* ***** get label attachment abrv from the table*/
  if (KG0EM200.YLACD[1] != " ")
    if (KG0EM200.YLACD[1] in YLATBL.YLACD)
      KG0EM200.YLAABRV[1] = YLATBL.YLAABRV[sysVar.arrayIndex];
    end /* attachment abrv*/
  else
    KG0EM200.YLAABRV[1] = " "; /* attachment abrv*/
  end

  if (KG0EM200.YLACD[2] != " ")
    if (KG0EM200.YLACD[2] in YLATBL.YLACD)
      KG0EM200.YLAABRV[2] = YLATBL.YLAABRV[sysVar.arrayIndex];
    end /* attachment abrv*/
  else
    KG0EM200.YLAABRV[2] = " "; /* attachment abrv*/
  end


end // end KG0E430

// set fields to update mode
Function KG0E440()
   /* ***************************************/
   /* kg0e440 - set fields to update mode*/
   /* ***************************************/

  set KG0EM200.KG0EMTTL initialAttributes;

  set KG0EM200.KUISKUID skip; /* company id*/

  if (KG0EW04.KG0EWSEL[KG0EWCNT] == "A")
    set KG0EM200.XNXCD cursor, initialAttributes; /* dept id*/
    set KG0EM200.KG0EM-CU-XREF-EDT-MM initialAttributes;
    set KG0EM200.KG0EM-CU-XREF-EDT-DD initialAttributes;
    set KG0EM200.KG0EM-CU-XREF-EDT-YY initialAttributes;
    set KG0EM200.CU-CUST-PROD-ID initialAttributes; /* customer prod id*/
  else
    set KG0EM200.XNXCD skip; /* dept id*/
    set KG0EM200.KG0EM-CU-XREF-EDT-MM skip;
    set KG0EM200.KG0EM-CU-XREF-EDT-DD skip;
    set KG0EM200.KG0EM-CU-XREF-EDT-YY skip;
    set KG0EM200.CU-CUST-PROD-ID cursor, initialAttributes; /* customer prod id*/
  end

  set KG0EM200.CU-PROD-NM initialAttributes; /* prod name*/
  set KG0EM200.CU-PROD-SNM initialAttributes; /* prod short name*/
  set KG0EM200.CU-PROD-COLR-NM initialAttributes; /* customer color name*/
  set KG0EM200.CU-PROD-SZ-ID initialAttributes; /* customer product size id*/
  set KG0EM200.CU-PROD-SZ-NM initialAttributes; /* customer product size name*/
  set KG0EM200.XGPCD initialAttributes; /* gpc code*/
  set KG0EM200.SY1STNBR initialAttributes; /* style number*/
  set KG0EM200.SY2CLRID initialAttributes; /* color id*/
  set KG0EM200.XDMCD initialAttributes; /* dimension code*/
  set KG0EM200.XQACD initialAttributes; /* quality code*/
  set KG0EM200.SY4IDDSC initialAttributes; /* size desc*/
  set KG0EM200.CU-CUST-RTL-PRC initialAttributes; /* retail price*/
  set KG0EM200.CU-CUST-SPCL-PRC initialAttributes; /* special price*/
  set KG0EM200.CU-SUGG-RTL-PRC initialAttributes; /* suggested retail price*/
  set KG0EM200.CU-VEND-CLS-ID initialAttributes; /* vender class id*/
  set KG0EM200.KG0EMPMM initialAttributes; /* effective month*/
  set KG0EM200.KG0EMPDD initialAttributes; /* effective day*/
  set KG0EM200.KG0EMPYY initialAttributes; /* effective year*/
  set KG0EM200.KUIHAGPC initialAttributes; /* hanger gpc*/
  set KG0EM200.KUIHASTY initialAttributes; /* hanger style*/
  set KG0EM200.PWRLBCD[1] initialAttributes; /* label code*/
  set KG0EM200.PWRLBCD[2] initialAttributes; /* label code*/
  set KG0EM200.YLACD[1] initialAttributes; /* label attach code*/
  set KG0EM200.YLACD[2] initialAttributes; /* label attach code*/
  set KG0EM200.KUIHAPCC initialAttributes; /* cust hang carton*/
  set KG0EM200.KUICMNT[1] initialAttributes; /* cusku comment 1*/
  set KG0EM200.KUICMNT[2] initialAttributes; /* cusku comment 2*/
  set KG0EM200.KUICMNT[3] initialAttributes; /* cusku comment 3*/
  set KG0EM200.XXXSTAT initialAttributes; /* status*/

  if (KG0EW04.KG0EWSEL[KG0EWCNT] == "C") /* if in change mode protect key*/
    set KG0EM200.XGPCD skip; /* gpc code*/
    set KG0EM200.SY1STNBR skip; /* style number*/
    set KG0EM200.SY2CLRID skip; /* color id*/
    set KG0EM200.XDMCD skip; /* dimension code*/
    set KG0EM200.XQACD skip; /* quality code*/
    set KG0EM200.SY4IDDSC skip; /* size desc*/
  end


end // end KG0E440

// set fields for inquiry mode
Function KG0E450()
   /* ***********************************/
   /* kg0e450 - set fields for inquiry*/
   /* ***********************************/

  set KG0EM200.KG0EMTTL skip;

  set KG0EM200.CATOAP cursor, initialAttributes;

  set KG0EM200.KUISKUID skip; /* company id*/
  set KG0EM200.XNXCD skip; /* dept id*/

  set KG0EM200.KG0EM-CU-XREF-EDT-MM skip; /* / effective xref date*/
  set KG0EM200.KG0EM-CU-XREF-EDT-DD skip; /* / effective xref date*/
  set KG0EM200.KG0EM-CU-XREF-EDT-YY skip; /* / effective xref date*/
  set KG0EM200.CU-CUST-PROD-ID cursor, skip; /* customer prod id*/
  set KG0EM200.CU-PROD-NM skip; /* prod name*/
  set KG0EM200.CU-PROD-SNM skip; /* prod short name*/
  set KG0EM200.CU-PROD-COLR-NM skip; /* customer color name*/
  set KG0EM200.CU-PROD-SZ-ID skip; /* customer product size id*/
  set KG0EM200.CU-PROD-SZ-NM skip; /* customer product size name*/
  set KG0EM200.XGPCD skip; /* gpc code*/
  set KG0EM200.SY1STNBR skip; /* style number*/
  set KG0EM200.SY2CLRID skip; /* color id*/
  set KG0EM200.XDMCD skip; /* dimension code*/
  set KG0EM200.XQACD skip; /* dimension code*/
  set KG0EM200.SY4IDDSC skip; /* size desc*/
  set KG0EM200.CU-CUST-RTL-PRC skip; /* retail price*/
  set KG0EM200.CU-CUST-SPCL-PRC skip; /* special price*/
  set KG0EM200.CU-SUGG-RTL-PRC skip; /* suggested retail price*/
  set KG0EM200.KG0EMPMM skip; /* effective month*/
  set KG0EM200.KG0EMPDD skip; /* effective day*/
  set KG0EM200.KG0EMPYY skip; /* effective year*/
  set KG0EM200.KUIHAGPC skip; /* hanger gpc*/
  set KG0EM200.KUIHASTY skip; /* hanger style*/
  set KG0EM200.PWRLBCD[1] skip; /* label code*/
  set KG0EM200.PWRLBCD[2] skip; /* label code*/
  set KG0EM200.YLACD[1] skip; /* label attach code*/
  set KG0EM200.YLACD[2] skip; /* label attach code*/
  set KG0EM200.KUIHAPCC skip; /* cust hang carton*/
  set KG0EM200.CU-VEND-CLS-ID skip; /* vender class id*/
  set KG0EM200.XXXSTAT skip; /* status*/
  set KG0EM200.KUICMNT[1] skip; /* cusku comment 1*/
  set KG0EM200.KUICMNT[2] skip; /* cusku comment 2*/
  set KG0EM200.KUICMNT[3] skip; /* cusku comment 3*/


end // end KG0E450

// read picking labels
Function KG0E460()
   /* *************************************************/
   /* kg0e - read picking labels*/
   /* *************************************************/

  set SQLCA empty;

  call "IO5750" ("S ", SQLCA, PWRREC) {isNoRefresh = yes, isExternal = yes}; /* read cmpny01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    KG0EW01.KG0EWLBL = "Y";
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KG0EW01.KG0EWLBL = "N";
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DPICK";
      TA1REC.TA1TBLVU = "VZLABL01";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1TBLKE = PWRREC.PWRLBCD;
      TA1REC.TA1PGMNM = "KG0E460";
      TA1REC.TA1LOC = "READING DB2 ZLABL01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0E460

// converse detail screen
Function KG0E500()
   /* *******************************************/
   /* kg0e500 - converse detail screen         **/
   /* *******************************************/

  KG0EM200.KG0EMDAT = VGVar.currentShortGregorianDate; /* set screen date*/


  converse KG0EM200 ;


  KG0EW01.KG0EWERR = "N"; /* init error flag*/
  KG0EM200.VAGen_EZEMSG = " ";

  KG0E510(); /* edit pf and special keys*/


  if (KG0EW01.KG0EWERR == "N" /* no errors*/
   && KG0EW01.KG0EWEND == "N") /* not pf3*/
    if (KG0EW04.KG0EWSEL[KG0EWCNT] == "I"
     || KG0EW04.KG0EWSEL[KG0EWCNT] == "S")
      KG0EW01.KG0EWDON = "Y"; /* done with inq*/
      KG0EW04.KG0EWSEL[KG0EWCNT] = " ";
    else
      if (KG0EW04.KG0EWSEL[KG0EWCNT] == "A"
       || KG0EW04.KG0EWSEL[KG0EWCNT] == "C"
       || KG0EW04.KG0EWSEL[KG0EWCNT] == "D")
        if (KG0EW01.KG0EWMD1 == "Y")
          converseLib.validationFailed(277); /* good edit*/
          KG0EW01.KG0EWEFL = "Y"; /* setup update flag*/
        end
      end
    end
  end


end // end KG0E500

// process pfkeys - scrn 2
Function KG0E510()
   /* ********************************************/
   /* kg0e510 - process pfkeys for detail screen*/
   /* ********************************************/

   /* **************************************/
   /* edit pa2 key*/
   /* **************************************/

  if (converseVar.eventKey is pa2)
    KG0ES-VCUCPX01-SB(); /* reread the cusku*/
    KG0E430(); /* rebuild the screen*/
    KG0EW01.KG0EWERR = "Y"; /* set error flagto display screen*/
    KG0EW01.KG0EWMD1 = "N";
    KG0EW01.KG0EWEFL = "N";
    return;
  end

   /* **************************************/
   /* edit pf3 key*/
   /* **************************************/

  if (converseVar.eventKey is pf3) /* back to from application*/
    if (KG0EW01.KG0EWMD1 == "Y")
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(367); /* can not with update pending*/
      set KG0EM200.CU-CUST-PROD-ID cursor, initialAttributes;
    else
       /* return back to select screen*/
      KG0EW04.KG0EWSEL[KG0EWCNT] = " "; /* blank select*/
      KG0EW01.KG0EWEND = "Y"; /* end processing*/
      KG0EW01.KG0EWDON = "Y"; /* set done flag*/
    end
    return;
  end

   /* **************************************/
   /* edit pf9 key*/
   /* **************************************/

  if (converseVar.eventKey is pf9) /* back to from application*/
     /* skip to next selected product*/
    KG0EW01.KG0EWDON = "Y"; /* set done flag*/
    KG0EW04.KG0EWSEL[KG0EWCNT] = " "; /* blank select*/
    return;
  end

   /* **************************************/
   /* edit screen changes*/
   /* **************************************/

  KG0E530();
  if (KG0EW01.KG0EWERR == "Y")
    return;
  end


   /* **************************************/
   /* edit enter  key*/
   /* **************************************/

  if (converseVar.eventKey is enter)
    if (KG0EM200.CATOAP > " ") /* fast path*/
      if (KG0EW01.KG0EWMD1 == "Y")
        KG0EW01.KG0EWERR = "Y";
        converseLib.validationFailed(47); /* can not with update pending*/
        set KG0EM200.CATOAP cursor, bold;
        return;
      end
      COMMAREA.CATOAP = KG0EM200.CATOAP;
      if (KG0EM200.CAITEM == " ")
        KG0EW01.KG0EWCNO = KG0EM200.KUISKUID;
        KG0EW01.KG0EWDNO = KG0EM200.XNXCD;
        COMMAREA.CAUSERA = KG0EW01.KG0EWUSR;
      else
        COMMAREA.CAITEM = KG0EM200.CAITEM;
      end
      COMMAREA.CAFROMAP = "KG0E";
      XSEXIT();
      KG0EM200.VAGen_EZEMSG = COMMAREA.CAMSG;
      KG0EW01.KG0EWERR = "Y";
      set KG0EM200.CATOAP cursor, bold;
    else
      set KG0EM100.CATOAP initialAttributes;
    end
    return;
  end

   /* **************************************/
   /* test for fastpath except on <enter>*/
   /* **************************************/

  if (KG0EM200.CATOAP > " ")
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(90); /* can not fast path and use pf keys*/
    set KG0EM200.CATOAP cursor, bold;
    return;
  else
    set KG0EM200.CATOAP initialAttributes;
  end


   /* **************************************/
   /* edit pf12 key*/
   /* **************************************/

  if (converseVar.eventKey is pf12) /* update key*/

    if (KG0EW01.KG0EWMD1 == "Y" /* if cusku data updated*/
     && KG0EW01.KG0EWERR == "N") /* and no errors*/
      if (KG0EW04.KG0EWSEL[KG0EWCNT] == "A")
         /* don't reset done flag - stay in loop until pf3*/
        KG0E805(); /* process cucpx add*/
         /* start next empty add screen*/
        KG0EW01.KG0EWCNT = KG0EWCNT + 1; /* look at next row*/
       /* SET KUIREC EMPTY;  delete old table*/
        set VCUCPX01 empty;
        KG0EW04.KG0EWSEL[KG0EWCNT] = "A";
        KG0E430();
      else
        if (KG0EW04.KG0EWSEL[KG0EWCNT] == "D")
          KG0E855(); /* process cucpx delete*/
          KG0EW01.KG0EWDON = "Y"; /* set done flag*/
          KG0EW04.KG0EWSEL[KG0EWCNT] = "X";
        else
          KG0E875(); /* process cucpx update*/
          KG0EW01.KG0EWDON = "Y"; /* set done flag*/
          KG0EW04.KG0EWSEL[KG0EWCNT] = " ";
        end
      end
    end

    if (KG0EW01.KG0EWERR == "N") /* no errors*/
      converseLib.validationFailed(29); /* all updates ok*/
      KG0EW01.KG0EWERR = "Y"; /* set error flag*/
      KG0EW01.KG0EWEFL = "N"; /* updates ok set =n*/
      KG0EW01.KG0EWMD1 = "N"; /* reset cusku update*/
    else
      KG0EW01.KG0EWEFL = "N"; /* reset update ok flag*/
    end

  end

  if (converseVar.eventKey is pf12 /* update key*/
   && KG0EW01.KG0EWEFL == "N"      /* edits not ok*/
   && KG0EW01.KG0EWERR == "N")     /* error flag*/
    KG0EW01.KG0EWERR = "Y"; /* error flag*/
    converseLib.validationFailed(280); /* can pf12 without pressing enter*/
  end


   /* **************************************/
   /* edit invalid key*/
   /* **************************************/

  if (KG0EW01.KG0EWERR == "N")
    converseLib.validationFailed(003); /* invalid pf key message*/
    KG0EW01.KG0EWERR = "Y";
  end


end // end KG0E510

// edit detail screen info
Function KG0E530()
   /* *************************************/
   /* kg0e530 - edit detail screen info*/
   /* *************************************/

  if (KG0EW04.KG0EWSEL[KG0EWCNT] == "I"
   || KG0EW04.KG0EWSEL[KG0EWCNT] == "S"
   || KG0EW04.KG0EWSEL[KG0EWCNT] == "D"
   || KG0EW04.KG0EWSEL[KG0EWCNT] == "X")
    KG0EW01.KG0EWMD1 = "Y"; /* yes, screen was displayed*/
    return;
  end


  KG0E550(); /* show pop-up windows*/


  KG0E600(); /* edit screen*/


end // end KG0E530

// show pop-up windows
Function KG0E550()
   /* ***********************************/
   /* *kg0e550 - show pop-up windows*/
   /* ***********************************/


   /* ****  Packing codes table  ***********/
  if (KG0EM200.YLACD[1] == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPYLA01();
    end
    set KG0EM200.YLACD[1] cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KG0EM200.YLACD[1] = YLATBL.YLACD[XX0XWPIX];
    end
  end

  if (KG0EM200.YLACD[2] == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPYLA01();
    end
    set KG0EM200.YLACD[2] cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KG0EM200.YLACD[2] = YLATBL.YLACD[XX0XWPIX];
    end
  end


  converseLib.clearScreen();


end // end KG0E550

// edit cucpx data
Function KG0E600()
   /* ***********************************************************/
   /* kg0e600 - edit cusku detail data*/
   /* ***********************************************************/

   /* **********************************************/
   /* ****     check for any changes            ****/
   /* **********************************************/

  /* ------------------------  Y2K OUT BEGIN  -----------------------*/
  /*  */
  /* IF KG0EM200.KG0EM-CU-XREF-EDT-MM NE 0*/
  /* OR KG0EM200.KG0EM-CU-XREF-EDT-DD NE 0*/
  /* OR KG0EM200.KG0EM-CU-XREF-EDT-YY NE 0;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/
  /* ------------------------  Y2K IN BEGIN  ------------------------*/
  /*  */
  if (KG0EM200.KG0EM-CU-XREF-EDT-MM != 0
   || KG0EM200.KG0EM-CU-XREF-EDT-DD != 0)
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/
   /* effective date*/
    KG0EW01.KG0EW-EDT = VCUCPX01.CU-PROD-XREF-EDT;

    if (KG0EM200.KG0EM-CU-XREF-EDT-MM != KG0EW01.KG0EW-MONTH
     || KG0EM200.KG0EM-CU-XREF-EDT-DD != KG0EW01.KG0EW-DAY
     || KG0EM200.KG0EM-CU-XREF-EDT-YY != KG0EW01.KG0EW-YEAR)
      KG0EW01.KG0EWMD1 = "Y"; /* cusku01 modified*/
    end
  else
    if (VCUCPX01.CU-PROD-XREF-EDT != 0)

      KG0EW01.KG0EWMD1 = "Y"; /* cusku01 modified*/
    end
  end

  if (KG0EM200.CU-CUST-PROD-ID                       
   != VCUCPX01.CU-CUST-PROD-ID                       /* product id*/
   || KG0EM200.CU-PROD-NM != VCUCPX01.CU-PROD-NM     /* product name*/
   || KG0EM200.CU-PROD-SNM != VCUCPX01.CU-PROD-SNM   /* prod short name*/
   || KG0EM200.CU-PROD-COLR-NM                       
   != VCUCPX01.CU-PROD-COLR-NM                       /* color name*/
   || KG0EM200.CU-PROD-SZ-ID                         
   != VCUCPX01.CU-PROD-SZ-ID                         /* customer product size id*/
   || KG0EM200.CU-PROD-SZ-NM                         
   != VCUCPX01.CU-PROD-SZ-NM                         /* customer product size name*/
   || KG0EM200.XGPCD != VCUCPX01.XGPCD               /* gpc code*/
   || KG0EM200.SY1STNBR != VCUCPX01.SY1STNBR         /* style number*/
   || KG0EM200.SY2CLRID != VCUCPX01.SY2CLRID         /* color id*/
   || KG0EM200.XDMCD != VCUCPX01.XDMCD               /* dimension code*/
   || KG0EM200.XQACD != VCUCPX01.XQACD               /* quality code*/
   || KG0EM200.CU-CUST-RTL-PRC                       
   != VCUCPX01.CU-CUST-RTL-PRC                       /* retail price*/
   || KG0EM200.CU-CUST-SPCL-PRC                      
   != VCUCPX01.CU-CUST-SPCL-PRC                      /* special price*/
   || KG0EM200.CU-SUGG-RTL-PRC                       
   != VCUCPX01.CU-SUGG-RTL-PRC                       /* suggested retail price*/
   || KG0EM200.KG0EMPMM != KG0EW01.KG0EWPMM          /* effective month*/
   || KG0EM200.KG0EMPDD != KG0EW01.KG0EWPDD          /* effective day*/
   || KG0EM200.KG0EMPYY != KG0EW01.KG0EWPYY          /* effective year*/
   || KG0EM200.KUIHAGPC != VCUCPX01.CU-HANG-XGP-CD   /* hanger gpc*/
   || KG0EM200.KUIHASTY != VCUCPX01.CU-HANG-STY-NBR  /* hanger style*/
   || KG0EM200.KUIHAPCC != VCUCPX01.CU-HANG-CRTN-CLS /* hang carton class*/
   || KG0EM200.PWRLBCD[1] != VCUCPX01.PK-LABL-CD1    /* label code 1*/
   || KG0EM200.PWRLBCD[2] != VCUCPX01.PK-LABL-CD2    /* label code 2*/
   || KG0EM200.YLACD[1]                              
   != VCUCPX01.YLA-LABL-ATCH-CD1                     /* label attach code 1*/
   || KG0EM200.YLACD[2]                              
   != VCUCPX01.YLA-LABL-ATCH-CD2                     /* label attach code 2*/
   || KG0EM200.CU-VEND-CLS-ID                        
   != VCUCPX01.CU-VEND-CLS-ID                        /* customer vnder class id*/
   || KG0EM200.KUICMNT[1] != VCUCPX01.CU-SKU-COMNT1  /* cusku comment 1*/
   || KG0EM200.KUICMNT[2] != VCUCPX01.CU-SKU-COMNT2  /* cusku comment 2*/
   || KG0EM200.KUICMNT[3] != VCUCPX01.CU-SKU-COMNT3  /* cusku comment 3*/
   || KG0EM200.XXXSTAT != VCUCPX01.XXX-STAT)         /* status*/
    KG0EW01.KG0EWMD1 = "Y"; /* cusku01 modified*/
  end

  if (KG0EW01.KG0EWMD1 == "Y")
    /* NEXT SENTENCE*/
  else
    return;
  end

   /* *****************************************/
    /* edit hanger carton*/
   /* *****************************************/

  KG0E605();

   /* *****************************************/
    /* edit label codes & attachment codes*/
   /* *****************************************/

  KG0E610();

   /* *****************************************/
    /* edit hanger gpc and style*/
   /* *****************************************/

  KG0E615();

   /* *****************************************/
    /* edit retail prices & effective date*/
   /* *****************************************/

  KG0E620();

   /* *****************************************/
    /* edit nike product id (required)*/
   /* *****************************************/

  KG0E650();

   /* ****************************************************/
   /* *****     edit status indicator               ******/
   /* ****************************************************/

  if (KG0EM200.XXXSTAT != " ")
    if (KG0EM200.XXXSTAT == "I"
     || KG0EM200.XXXSTAT == "A")
      set KG0EM200.XXXSTAT initialAttributes;
    else
      converseLib.validationFailed(162);
      KG0EW01.KG0EWERR = "Y"; /* set error flag*/
      set KG0EM200.XXXSTAT cursor, modified, bold;
    end
  else
    KG0EM200.XXXSTAT = "A";
    set KG0EM200.XXXSTAT initialAttributes;
  end

   /* *****************************************/
    /* edit key changes*/
   /* *****************************************/
  if (KG0EW04.KG0EWSEL[KG0EWCNT] == "C")
    KG0E690();
  end

   /* *****************************************/
    /* edit for valid effective date*/
   /* *****************************************/

  /* ------------------------  Y2K OUT BEGIN  -----------------------*/
  /*  */
  /* IF KG0EM200.KG0EM-CU-XREF-EDT-MM NE 0*/
  /* OR KG0EM200.KG0EM-CU-XREF-EDT-DD NE 0*/
  /* OR KG0EM200.KG0EM-CU-XREF-EDT-YY NE 0;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/
  /* ------------------------  Y2K IN BEGIN  ------------------------*/
  /*  */
  if (KG0EM200.KG0EM-CU-XREF-EDT-MM != 0
   || KG0EM200.KG0EM-CU-XREF-EDT-DD != 0)
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/
    KG0E695();
  end


end // end KG0E600

// edit hanger carton
Function KG0E605()
   /* *******************************/
   /* kg0e605 - edit hanger carton*/
   /* *******************************/

  if (KG0EM200.KUIHAPCC == " ")
    return;
  end


  if (KG0EM200.KUIHAGPC == " " /* if gpc code spaces*/
   && KG0EM200.KUIHASTY == " ") /* if style nbr spaces*/
    KG0EW01.KG0EWERR = "Y"; /* set error*/
    converseLib.validationFailed(21);
    set KG0EM200.KUIHAPCC cursor, modified, bold;
  end


  set SQLCA empty;
  set PKLREC empty;

  PKLREC.PKLCTNCD = KG0EM200.KUIHAPCC;
  PKLREC.XXXSTAT = "A";

  call "IO4730" ("S ", SQLCA, PKLREC) {isNoRefresh = yes, isExternal = yes}; /* read carton*/
  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KG0EW01.KG0EWERR = "Y"; /* set error*/
      converseLib.validationFailed(17);
      set KG0EM200.KUIHAPCC cursor, modified, bold;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DPICK";
      TA1REC.TA1TBLVU = "VCRTN001";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1TBLKE = PKLREC.PKLCTNCD;
      TA1REC.TA1PGMNM = "KG0E605";
      TA1REC.TA1LOC = "READING DB2 VCRTN001";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0E605

// edit label & attach codes
Function KG0E610()
   /* *********************************************/
   /* kg0e610 - edit label codes & attach codes*/
   /* *********************************************/

   /* ***********************************************************/
   /* ------- edit attachment code 2 ---------*/
   /* ***********************************************************/
  if (KG0EM200.YLACD[2] != VCUCPX01.YLA-LABL-ATCH-CD2)
    if (KG0EM200.YLACD[2] == " ")
      KG0EM200.YLAABRV[2] = " ";
      set KG0EM200.YLACD[2] initialAttributes;
    else
      if (KG0EM200.YLACD[2] in YLATBL.YLACD)
        if (YLATBL.XXXSTAT[sysVar.arrayIndex] == "A")
          KG0EM200.YLAABRV[2] = YLATBL.YLAABRV[sysVar.arrayIndex];
          set KG0EM200.YLACD[2] initialAttributes;
        else
          converseLib.validationFailed(71);
          KG0EW01.KG0EWERR = "Y"; /* set error flag*/
          set KG0EM200.YLACD[2] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(17);
        KG0EW01.KG0EWERR = "Y"; /* set error flag*/
        set KG0EM200.YLACD[2] cursor, modified, bold;
      end
    end
  else
    if (KG0EM200.YLACD[2] == " ")
      KG0EM200.YLAABRV[2] = " ";
    end
  end

   /* ***********************************************************/
   /* ------- edit label code 2 ---------*/
   /* ***********************************************************/
  if (KG0EM200.PWRLBCD[2] != VCUCPX01.PK-LABL-CD2)
    if (KG0EM200.PWRLBCD[2] == " ")
      set KG0EM200.PWRLBCD[2] initialAttributes;
      KG0EM200.PWRLBABR[2] = " ";
    else
      PWRREC.PWRLBCD = KG0EM200.PWRLBCD[2];
      KG0E460(); /* read picking labels*/
      if (KG0EW01.KG0EWLBL == "Y")
        if (PWRREC.XXXSTAT == "A")
          set KG0EM200.PWRLBCD[2] initialAttributes;
          KG0EM200.PWRLBABR[1] = PWRREC.PWRLBABR;
        else
          converseLib.validationFailed(71);
          KG0EW01.KG0EWERR = "Y"; /* set error flag*/
          set KG0EM200.PWRLBCD[2] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(17);
        KG0EW01.KG0EWERR = "Y"; /* set error flag*/
        set KG0EM200.PWRLBCD[2] cursor, modified, bold;
      end
    end
  else
    if (KG0EM200.PWRLBCD[2] == " ")
      KG0EM200.PWRLBABR[2] = " ";
    end
  end

   /* ***********************************************************/
   /* ----- edit combination of label & attachment codes ---*/
   /* ***********************************************************/
  if (KG0EM200.YLACD[2] == " ")
    /* next sentence*/
  else
    if (KG0EM200.PWRLBCD[2] == " ")
      converseLib.validationFailed(5); /* req field*/
      KG0EW01.KG0EWERR = "Y"; /* set error flag*/
      set KG0EM200.PWRLBCD[2] cursor, modified, bold;
    end
  end

   /* ***********************************************************/
   /* ------- edit attachment code 1 ---------*/
   /* ***********************************************************/
  if (KG0EM200.YLACD[1] != VCUCPX01.YLA-LABL-ATCH-CD1)
    if (KG0EM200.YLACD[1] == " ")
      KG0EM200.YLAABRV[1] = " ";
      set KG0EM200.YLACD[1] initialAttributes;
    else
      if (KG0EM200.YLACD[1] in YLATBL.YLACD)
        if (YLATBL.XXXSTAT[sysVar.arrayIndex] == "A")
          KG0EM200.YLAABRV[1] = YLATBL.YLAABRV[sysVar.arrayIndex];
          set KG0EM200.YLACD[1] initialAttributes;
        else
          converseLib.validationFailed(71);
          KG0EW01.KG0EWERR = "Y"; /* set error flag*/
          set KG0EM200.YLACD[1] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(17);
        KG0EW01.KG0EWERR = "Y"; /* set error flag*/
        set KG0EM200.YLACD[1] cursor, modified, bold;
      end
    end
  else
    if (KG0EM200.YLACD[1] == " ")
      KG0EM200.YLAABRV[1] = " ";
    end
  end

   /* ***********************************************************/
   /* ------- edit label code 1 ---------*/
   /* ***********************************************************/
  if (KG0EM200.PWRLBCD[1] != VCUCPX01.PK-LABL-CD1)
    if (KG0EM200.PWRLBCD[1] == " ")
      set KG0EM200.PWRLBCD[1] initialAttributes;
      KG0EM200.PWRLBABR[1] = " ";
    else
      PWRREC.PWRLBCD = KG0EM200.PWRLBCD[1];
      KG0E460(); /* read picking labels*/
      if (KG0EW01.KG0EWLBL == "Y")
        if (PWRREC.XXXSTAT == "A")
          set KG0EM200.PWRLBCD[1] initialAttributes;
          KG0EM200.PWRLBABR[1] = PWRREC.PWRLBABR;
        else
          converseLib.validationFailed(71);
          KG0EW01.KG0EWERR = "Y"; /* set error flag*/
          set KG0EM200.PWRLBCD[1] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(17);
        KG0EW01.KG0EWERR = "Y"; /* set error flag*/
        set KG0EM200.PWRLBCD[1] cursor, modified, bold;
      end
    end
  else
    if (KG0EM200.PWRLBCD[1] == " ")
      KG0EM200.PWRLBABR[1] = " ";
    end
  end

   /* ***********************************************************/
   /* ----- edit combination of label & attachment codes ---*/
   /* ***********************************************************/
  if (KG0EM200.YLACD[1] == " ")
    /* next sentence*/
  else
    if (KG0EM200.PWRLBCD[1] == " ")
      converseLib.validationFailed(5); /* req field*/
      KG0EW01.KG0EWERR = "Y"; /* set error flag*/
      set KG0EM200.PWRLBCD[1] cursor, modified, bold;
    end
  end


end // end KG0E610

// edit hanger product id
Function KG0E615()
   /* ***************************************/
   /* kg0e615 -  edit hanger gpc and style*/
   /* ***************************************/

  if (KG0EM200.KUIHAGPC == " ") /* if gpc code spaces*/
    if (KG0EM200.KUIHASTY == " ") /* if style nbr spaces*/
       /* next sentence            ; optional field not entered*/
    else
      KG0EW01.KG0EWERR = "Y"; /* set error*/
      converseLib.validationFailed(103);
      set KG0EM200.KUIHAGPC cursor, modified, bold;
    end
  else
    if (KG0EM200.KUIHASTY == " ") /* if style nbr spaces*/
      KG0EW01.KG0EWERR = "Y"; /* set error*/
      converseLib.validationFailed(102);
      set KG0EM200.KUIHASTY cursor, modified, bold;
    end
  end


  if (KG0EM200.KUIHAGPC == " "
   || KG0EM200.KUIHASTY == " ")
    return;
  end


  SQLCA.VAGen_SQLCODE = 0;
  SY1REC.XGPCD = KG0EM200.KUIHAGPC; /* move gpc to sy1rec*/
  SY1REC.SY1STNBR = KG0EM200.KUIHASTY; /* move style to sy1rec*/
  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
                                   /* call io module*/

  if (SQLCA.VAGen_SQLCODE == 0) /* if valid style & gpc*/
    set KG0EM200.KUIHAGPC initialAttributes;
    set KG0EM200.KUIHASTY initialAttributes;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
                                   /* if invalid style/gpc*/
      KG0EW01.KG0EWERR = "Y"; /* set error*/
      converseLib.validationFailed(104);
      set KG0EM200.KUIHAGPC cursor, modified, bold; /* set cursor*/
      set KG0EM200.KUIHASTY modified, bold; /* set bright*/
    else
      TA1REC.TA1TYPE = "DB2"; /* db2 error.*/
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1PGMNM = "KG0E615";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1TBLKE = SY1KEY;
      TA1REC.TA1LOC = "READING DB2 TBL DPROD.VSTYLE01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0E615

// edit retail prices & eff dt
Function KG0E620()
   /* ****************************************/
   /* kg0e620 - edit retail prices & eff dt*/
   /* ****************************************/

  if (KG0EM200.CU-CUST-SPCL-PRC > 0)
    if (KG0EM200.KG0EMPMM == 0
     && KG0EM200.KG0EMPDD == 0
     && KG0EM200.KG0EMPYY == 0)
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(5);
      set KG0EM200.KG0EMPMM cursor, modified, bold;
      set KG0EM200.KG0EMPDD modified, bold;
      set KG0EM200.KG0EMPYY modified, bold;
    else
      KG0E625(); /* edit date*/
    end
  else
    if (KG0EM200.KG0EMPMM == 0
     && KG0EM200.KG0EMPDD == 0
     && KG0EM200.KG0EMPYY == 0)
       /* next sentence              ; no price & no date*/
    else
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(5);
      set KG0EM200.CU-CUST-SPCL-PRC cursor, modified, bold;
    end
  end

  if (KG0EM200.CU-CUST-RTL-PRC == 0
   && KG0EM200.CU-CUST-SPCL-PRC == 0)
    /* next sentence*/
  else
    if (KG0EM200.CU-CUST-RTL-PRC == KG0EM200.CU-CUST-SPCL-PRC)
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(404);
      set KG0EM200.CU-CUST-RTL-PRC cursor, modified, bold;
      set KG0EM200.CU-CUST-SPCL-PRC modified, bold;
    end
  end


end // end KG0E620

// edit for valid date
Function KG0E625()
   /* ***************************************/
   /* kg0e625 - edit valid effective date*/
   /* ***************************************/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KG0EM200.KG0EMPYY GT 0;*/
  /* ;/* next sentence*/
  /* ELSE;*/
  /* MOVE 'Y' TO KG0EW01.KG0EWERR;*/
  /* MOVE 19 TO EZEMNO;*/
  /* SET KG0EM200.KG0EMPYY CURSOR,MODIFIED,BRIGHT;*/
  /* END;*/
  /*  */
  /* -----------------------  Y2K OUT END  --------------------------*/

  if (KG0EM200.KG0EMPDD >= 1
   && KG0EM200.KG0EMPDD <= 31)
    /* next sentence*/
  else
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(53);
    set KG0EM200.KG0EMPDD cursor, modified, bold;
  end

  if (KG0EM200.KG0EMPMM >= 1
   && KG0EM200.KG0EMPMM <= 12)
    /* next sentence*/
  else
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(52);
    set KG0EM200.KG0EMPMM cursor, modified, bold;
  end

end // end KG0E625

// edit NIKE product id
Function KG0E650()
   /* **************************************/
   /* kg0e650 -  edit valid NIKE product*/
   /* **************************************/

   /* ---------- edit dimension and color codes*/
  KG0E655();


   /* ---------- edit style and gpc codes*/
  KG0E660();


   /* ---------- edit size description*/
  KG0E665();


   /* ---------- Edit for Cole-Haan Product*/
   /* ---------- if the user is Cole-Haan*/
  if (COMMAREA.CADLVL[1] == "Y")
    KG0E662(); /* edit cole-haan product on*/
                                   /* dpick.vpksty01*/
  end


   /* ---------- edit for duplicate NIKE product*/
  if (KG0EW01.KG0EWERR == "Y") /* edit after valid screen*/

  else
    KG0E670();
  end


end // end KG0E650

// edit dim & color codes
Function KG0E655()
   /* ***********************************/
   /* kg0e655 - edit dimension & color*/
   /* ***********************************/

  if (KG0EM200.XDMCD == " ")
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(136);
    set KG0EM200.XDMCD cursor, modified, bold;
  end

  if (KG0EM200.SY2CLRID == " ") /* if color nbr spaces*/
    converseLib.validationFailed(105); /* set error msg*/
    KG0EW01.KG0EWERR = "Y";
    set KG0EM200.SY2CLRID cursor, modified, bold; /* set cursor*/
  end

  if (KG0EM200.XDMCD == " "
   || KG0EM200.SY2CLRID == " ")
    return;
  end


  SY2REC.XGPCD = KG0EM200.XGPCD; /* move gpc to sy2rec*/
  SY2REC.SY1STNBR = KG0EM200.SY1STNBR; /* move style to sy2*/
  SY2REC.SY2CLRID = KG0EM200.SY2CLRID; /* move color to sy2*/
  SY2REC.XDMCD = KG0EM200.XDMCD; /* move dimension*/

  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes}; /* call io module*/

  if (SQLCA.VAGen_SQLCODE == 0) /* if found*/
    set KG0EM200.SY2CLRID normal; /* set to normal*/
    set KG0EM200.XDMCD normal; /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* if not found*/
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(106); /* set error*/
      set KG0EM200.SY2CLRID cursor, modified, bold; /* set cursor*/
      set KG0EM200.XDMCD modified, bold; /* set bright*/
    else
      TA1REC.TA1TYPE = "DB2"; /* db2 error.*/
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1PGMNM = "KG0E655";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1TBLKE = SY2KEY;
      TA1REC.TA1LOC = "READING DB2 TBL DPROD.VCOLOR01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0E655

// edit gpc & style codes
Function KG0E660()
   /* ************************************/
   /* kg0e660 -  edit gpc & style codes*/
   /* ************************************/

  if (KG0EM200.XQACD == "01"
   || KG0EM200.XQACD == "02"
   || KG0EM200.XQACD == "03")
    /* next sentance*/
  else
    if (KG0EM200.XQACD == " ")
      KG0EM200.XQACD = "01";
    else /* invalid quality code*/
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(17); /* set error msg*/
      set KG0EM200.XQACD cursor, modified, bold; /* set cursor*/
    end
  end

  if (KG0EM200.SY1STNBR == " ") /* if style nbr spaces*/
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(102); /* set error msg*/
    set KG0EM200.SY1STNBR cursor, modified, bold; /* set cursor*/
  end

  if (KG0EM200.XGPCD == " ") /* if gpc code spaces*/
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(103); /* set error msg*/
    set KG0EM200.XGPCD cursor, modified, bold; /* set cursor*/
  end

  if (KG0EM200.XGPCD == " "
   || KG0EM200.SY1STNBR == " ")
    return;
  end

  SQLCA.VAGen_SQLCODE = 0;
  SY1REC.XGPCD = KG0EM200.XGPCD; /* move gpc to sy1rec*/
  SY1REC.SY1STNBR = KG0EM200.SY1STNBR; /* move style to sy1rec*/
  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
                                   /* call io module*/


  if (SQLCA.VAGen_SQLCODE == 0) /* if valid style & gpc*/
    set KG0EM200.XGPCD normal; /* set to normal*/
    set KG0EM200.SY1STNBR normal; /* next sentence.*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
                                   /* if invalid style/gpc*/
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(104); /* set error msg*/
      set KG0EM200.XGPCD cursor, modified, bold; /* set cursor*/
      set KG0EM200.SY1STNBR modified, bold; /* set bright*/
    else
      TA1REC.TA1TYPE = "DB2"; /* db2 error.*/
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1PGMNM = "KG0E660";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1TBLKE = SY1KEY;
      TA1REC.TA1LOC = "READING DB2 TBL DPROD.VSTYLE01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0E660

// Edit Cole-Haan product
Function KG0E662()
   /* ************************************/
   /* kg0e662 -  Edit Cole-Haan Product*/
   /* ************************************/

  if (KG0EM200.SY1STNBR == " ") /* if style nbr spaces*/
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(102); /* set error msg*/
    set KG0EM200.SY1STNBR cursor, modified, bold; /* set cursor*/
  end

  if (KG0EM200.XGPCD == " ") /* if gpc code spaces*/
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(103); /* set error msg*/
    set KG0EM200.XGPCD cursor, modified, bold; /* set cursor*/
  end

  if (KG0EM200.XGPCD == " "
   || KG0EM200.SY1STNBR == " ")
    return;
  end

  SQLCA.VAGen_SQLCODE = 0;
  PKNREC.XGPCD = KG0EM200.XGPCD; /* move gpc to pknrec*/
  PKNREC.SY1STNBR = KG0EM200.SY1STNBR; /* move style to pknrec*/
  PKNREC.SY2CLRID = KG0EM200.SY2CLRID; /* move color to pknrec*/
  PKNREC.XDMCD = KG0EM200.XDMCD; /* move dim to pknrec*/
  call "IO1810" ("S ", SQLCA, PKNREC) {isNoRefresh = yes, isExternal = yes};
                                   /* call io module*/


  if (SQLCA.VAGen_SQLCODE == 0) /* if valid style & gpc*/
    KG0EW01.KG0EWERR = "N";
    converseLib.validationFailed(0);
    set KG0EM200.XGPCD normal; /* set to normal*/
    set KG0EM200.SY1STNBR normal;
    set KG0EM200.SY2CLRID normal;
    set KG0EM200.XDMCD normal;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
                                   /* if invalid C-H product*/
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(104); /* set error msg*/
      set KG0EM200.XGPCD cursor, modified, bold; /* set cursor*/
      set KG0EM200.SY1STNBR modified, bold; /* set bright*/
      set KG0EM200.SY2CLRID modified, bold; /* set bright*/
      set KG0EM200.XDMCD cursor, modified, bold; /* set bright*/
    else
      TA1REC.TA1TYPE = "DB2"; /* db2 error.*/
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1PGMNM = "KG0E662";
      TA1REC.TA1DBASE = "DPICK";
      TA1REC.TA1TBLVU = "VPKSTY01";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1TBLKE = SY1KEY;
      TA1REC.TA1LOC = "READING DB2 TBL DPICK.VPKSTY01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end

   /* Ensure Cole-Haan customers only have cole-haan product*/

  if (KG0EW01.KG0EWERR == "N")
    if (PKNREC.XBCCD == "08") /* If C-H product*/
                                  /* next sentence*/
    else
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(449); /* must be a cole haan product*/
      set KG0EM200.SY1STNBR cursor, modified, bold; /* set cursor*/
    end
  end

end // end KG0E662

// edit size id
Function KG0E665()
   /* *********************************/
   /* kg0e665 - edit valid size id*/
   /* *********************************/

  if (KG0EM200.SY4IDDSC == " ") /* if size nbr blank*/
    KG0EW01.SY4IDDSC = " ";
    KG0EW01.SY5SZID = 0;
    set KG0EM200.SY4IDDSC initialAttributes;
    return; /* exit.*/
  end


  set SYPREC empty;
  set SQLCA empty;

  SYPREC.SYPFC = "PC";
  SYPREC.SYPCMPSW = "C";
  SYPREC.XGPCD = KG0EM200.XGPCD;
  SYPREC.SY1STNBR = KG0EM200.SY1STNBR;
  SYPREC.SY2CLRID = KG0EM200.SY2CLRID;
  SYPREC.XDMCD = KG0EM200.XDMCD;
  SYPREC.XQACD = "**";
  SYPREC.SY4IDDSC[1] = KG0EM200.SY4IDDSC;

  call "SY1120" (SQLCA, SYPREC) {isNoRefresh = yes, isExternal = yes}; /* translate*/

  if (SYPREC.SYPRC != 0)
    KG0EW01.SY4IDDSC = " ";
    KG0EW01.SY5SZID = 0;
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(107); /* set error*/
    set KG0EM200.SY4IDDSC cursor, modified, bold; /* set cursor*/
    return;
  end

   /* ----- look for size description ----------------*/

  KG0EW01.KG0EWSCT = 0; /* move 0 to counter*/
  KG0EW01.KG0EWIND = 1; /* move 1 to index*/
  KG0EW01.KG0EWSWT = "N"; /* move n to switch*/

  while (KG0EW01.KG0EWIND < 41) /* search thru possible*/

    KG0EW01.KG0EWSCT = KG0EW01.KG0EWSCT + 1; /* increment counter.*/

    if (KG0EM200.SY4IDDSC == SYPREC.SY4IDDSC[KG0EWSCT])
      KG0EW01.KG0EWSWT = "Y"; /* if match,*/
      KG0EW01.KG0EWIND = 41; /* set switch & exit.*/
    end

    KG0EW01.KG0EWIND = KG0EW01.KG0EWIND + 1; /* increment index.*/
  end /* while loop*/


  if (KG0EW01.KG0EWSWT == "N")
                                   /* if size not found*/
    KG0EW01.SY4IDDSC = " ";
    KG0EW01.SY5SZID = 0;
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(107); /* set error*/
    set KG0EM200.SY4IDDSC cursor, modified, bold; /* set cursor*/
  else
    set KG0EM200.SY4IDDSC initialAttributes;
    KG0EM200.SY4IDDSC = SYPREC.SY4IDDSC[KG0EWSCT];
    KG0EW01.SY4IDDSC = SYPREC.SY4IDDSC[KG0EWSCT];
    KG0EW01.SY5SZID = SYPREC.SY5SZID[KG0EWSCT];
  end


end // end KG0E665

// check for dup NIKE product
Function KG0E670()
   /* *********************************************/
   /* kg0e670 - check for duplicate NIKE product*/
   /* *********************************************/

  set VCUCPX01 empty;

  if (COMMAREA.CADLVL[1] == "Y") /* If Cole Haan user*/
    VCUCPX01.CU-CUSKU-ID = PK6REC.KUCCOID; /* use DPICK Cust Nbr*/
  else
    VCUCPX01.CU-CUSKU-ID = KG0EM200.KUISKUID; /* use Nike Cust Nbr*/
  end

   /* Initialize the WS date field before moving values to it*/
  KG0EW01.KG0EW-EDT = 0;

  KG0EW01.KG0EW-MONTH = KG0EM200.KG0EM-CU-XREF-EDT-MM;
  KG0EW01.KG0EW-DAY = KG0EM200.KG0EM-CU-XREF-EDT-DD;
  KG0EW01.KG0EW-YEAR = KG0EM200.KG0EM-CU-XREF-EDT-YY;
   /* Move century only if field is valid*/
  if (KG0EW01.KG0EW-EDT > 0)
    if (KG0EW01.KG0EW-YEAR > 70)
      KG0EW01.KG0EW-CENTURY = 019; /* set century*/
    else
      KG0EW01.KG0EW-CENTURY = 020; /* set century*/
    end
  end

  VCUCPX01.CU-PROD-XREF-EDT = KG0EW01.KG0EW-EDT;

  VCUCPX01.XNX-DEPT-ID-XREF = KG0EM200.XNXCD;
  VCUCPX01.XGPCD = KG0EM200.XGPCD;
  VCUCPX01.SY1STNBR = KG0EM200.SY1STNBR;
  VCUCPX01.SY2CLRID = KG0EM200.SY2CLRID;
  VCUCPX01.XDMCD = KG0EM200.XDMCD;
  VCUCPX01.XQACD = KG0EM200.XQACD;
  VCUCPX01.SY5SZID = KG0EW01.SY5SZID;

  KG0ES-VCUCPX01-XB(); /* read by NIKE product*/

  if (SQLCA.VAGen_SQLCODE == 100) /* no match was found*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == 0) /* a match was found*/
    if (KG0EW04.KG0EWSEL[KG0EWCNT] == "A") /* if adding*/
      KG0EW01.KG0EWERR = "Y";
      converseLib.validationFailed(108);
      set KG0EM200.XGPCD cursor, bold;
      set KG0EM200.KG0EM-CU-XREF-EDT-MM bold;
      set KG0EM200.KG0EM-CU-XREF-EDT-DD bold;
      set KG0EM200.KG0EM-CU-XREF-EDT-YY bold;
      set KG0EM200.SY1STNBR bold;
      set KG0EM200.SY2CLRID bold;
      set KG0EM200.XDMCD bold;
      set KG0EM200.XQACD bold;
      set KG0EM200.SY4IDDSC bold;
    else /* ; if change*/
      if (KG0EW04.CU-CUST-PROD-ID[KG0EWCNT] == VCUCPX01.CU-CUST-PROD-ID)
         /* next sentence             ; should be same cust product*/
      else
        KG0EW01.KG0EWERR = "Y";
        converseLib.validationFailed(108);
        set KG0EM200.KG0EM-CU-XREF-EDT-MM bold;
        set KG0EM200.KG0EM-CU-XREF-EDT-DD bold;
        set KG0EM200.KG0EM-CU-XREF-EDT-YY bold;
        set KG0EM200.XGPCD cursor, bold;
        set KG0EM200.SY1STNBR bold;
        set KG0EM200.SY2CLRID bold;
        set KG0EM200.XDMCD bold;
        set KG0EM200.XQACD bold;
        set KG0EM200.SY4IDDSC bold;
      end
    end
  end


end // end KG0E670

// edit for cucpx key changes
Function KG0E690()
   /* ****************************************/
   /* kg0e690 - edit for cucpx key changes*/
   /* ****************************************/

  if (KG0EW01.KG0EWERR == "Y")
    return;
  end

  set KG0EM200.CU-CUST-PROD-ID initialAttributes;

   /* ---------- edit for change in product keys*/
  if (KG0EM200.XGPCD != KG0EW04.XGPCD[KG0EWCNT]
   || KG0EM200.SY1STNBR != KG0EW04.SY1STNBR[KG0EWCNT]
   || KG0EM200.SY2CLRID != KG0EW04.SY2CLRID[KG0EWCNT]
   || KG0EM200.XDMCD != KG0EW04.XDMCD[KG0EWCNT]
   || KG0EM200.XQACD != KG0EW04.XQACD[KG0EWCNT]
   || KG0EW01.SY5SZID != KG0EW04.SY5SZID[KG0EWCNT])
    KG0EW01.KG0EWERR = "Y"; /* set error*/
    converseLib.validationFailed(465);
    set KG0EM200.XGPCD cursor, bold;
    set KG0EM200.SY1STNBR bold;
    set KG0EM200.SY2CLRID bold;
    set KG0EM200.XDMCD bold;
    set KG0EM200.XQACD bold;
    set KG0EM200.SY4IDDSC bold;
    return;
  end


end // end KG0E690

// Check for valid EDT
Function KG0E695()
   /* ******************************************/
   /* kg0e695 - check for valid effective date*/
   /* ******************************************/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KG0EM200.KG0EM-CU-XREF-EDT-YY GT 0;*/
  /* ;/* next sentence*/
  /* ELSE;*/
  /* MOVE 'Y' TO KG0EW01.KG0EWERR;*/
  /* MOVE 19 TO EZEMNO;*/
  /* SET KG0EM200.KG0EM-CU-XREF-EDT-YY CURSOR,MODIFIED,BRIGHT;*/
  /* END;*/
  /*  */
  /* -----------------------  Y2K OUT END  --------------------------*/

  if (KG0EM200.KG0EM-CU-XREF-EDT-DD >= 0
   && KG0EM200.KG0EM-CU-XREF-EDT-DD <= 31)
    /* next sentence*/
  else
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(53);
    set KG0EM200.KG0EM-CU-XREF-EDT-DD cursor, modified, bold;
  end

  if (KG0EM200.KG0EM-CU-XREF-EDT-MM >= 0
   && KG0EM200.KG0EM-CU-XREF-EDT-MM <= 12)
    /* next sentence*/
  else
    KG0EW01.KG0EWERR = "Y";
    converseLib.validationFailed(52);
    set KG0EM200.KG0EM-CU-XREF-EDT-MM cursor, modified, bold;
  end


end // end KG0E695

// Audit trail-add cucpx
Function KG0E805()
   /* *******************************/
   /* kg0e805 - Audit trail-Add cucpx*/
   /* *******************************/

   /* convert csp time/date format to db2 time/date stamp format*/
  XX0XS01();

  KG0E815(); /* format cucpx general data update*/

   /* ****************************/
   /* prepare add audit trail*/
   /* ****************************/

  set KUZREC empty;
  KUZREC.KUZTYPE = "A"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = " "; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCUCPX01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = VCUCPX01.CU-CUSKU-ID;
  KUZREC.XNXCD = VCUCPX01.XNX-DEPT-ID-XREF;
  KUZREC.XGPCD = VCUCPX01.XGPCD;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = VCUCPX01.VCUCPX01-GRP;

  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KG0E   ";
    TA1REC.TA1LOCAT[1] = "KG0E805  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCUCPX01 ";
    TA1REC.TA1MAP = "KG0EM000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCUCPX01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end

  KG0E830(); /* add audit image for vcucpx01*/

  KG0ES-VCUCPX01-ADD(); /* add VCUCPX01 product*/

   /* ERFORM KG0E900;                 /* Move cucpx to cusku*/

   /* G0ES-VCUSKU01-XB;               /* Try to select cusku*/

   /* F SQLCA.SQLCODE EQ 100;         /* This record doesn't exist*/
   /* PERFORM KG0E800;               /* Add record to vcusku01*/
   /* LSE;*/
   /* PERFORM KG0E910;               /* Update vcusku with latest vcucpx*/
   /* ND;*/


end // end KG0E805

// Format vcucpx01 record
Function KG0E815()
   /* **************************************/
   /* kg0e815 - move screen data to cucpx*/
   /* **************************************/

  if (COMMAREA.CADLVL[1] == "Y") /* If Cole Haan user*/
    VCUCPX01.CU-CUSKU-ID = PK6REC.KUCCOID; /* Use DPICK Company #*/
  else
    VCUCPX01.CU-CUSKU-ID = KG0EM200.KUISKUID; /* company id*/
  end

  VCUCPX01.XNX-DEPT-ID-XREF = KG0EM200.XNXCD; /* dept id*/

   /* move effective date if it exists, else move zero*/
  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KG0EM200.KG0EM-CU-XREF-EDT-MM EQ 0;*/
  /* MOVE 0 TO KG0EW01.KG0EW-EDT;   /* set date to zero*/
  /* ELSE;*/
  /* MOVE KG0EM200.KG0EM-CU-XREF-EDT-MM TO KG0EW01.KG0EW-MONTH;*/
  /* MOVE KG0EM200.KG0EM-CU-XREF-EDT-DD TO KG0EW01.KG0EW-DAY;*/
  /* MOVE KG0EM200.KG0EM-CU-XREF-EDT-YY TO KG0EW01.KG0EW-YEAR;*/
  /* IF KG0EM200.KG0EM-CU-XREF-EDT-YY > 0;*/
  /* IF KG0EM200.KG0EM-CU-XREF-EDT-YY GT 80;*/
  /* MOVE 019 TO KG0EW01.KG0EW-CENTURY;/* set century*/
  /* ELSE;*/
  /* MOVE 020 TO KG0EW01.KG0EW-CENTURY;/* set century*/
  /* END;*/
  /* END;*/
  /* END;*/
  /*  */
  /* -----------------------  Y2K OUT END  --------------------------*/
  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  KG0EW01.KG0EW-MONTH = KG0EM200.KG0EM-CU-XREF-EDT-MM;
  KG0EW01.KG0EW-DAY = KG0EM200.KG0EM-CU-XREF-EDT-DD;
  KG0EW01.KG0EW-YEAR = KG0EM200.KG0EM-CU-XREF-EDT-YY;
  if (KG0EW01.KG0EW-YYMMDD > 0)
    if (KG0EM200.KG0EM-CU-XREF-EDT-YY > 60)
      KG0EW01.KG0EW-CENTURY = 019; /* set century*/
    else
      KG0EW01.KG0EW-CENTURY = 020; /* set century*/
    end
  else
    KG0EW01.KG0EW-CENTURY = 0; /* set century*/
  end
  /*  */
  /* -----------------------  Y2K IN END  ---------------------------*/

  VCUCPX01.CU-PROD-XREF-EDT = KG0EW01.KG0EW-EDT; /* product xref effective date*/

  VCUCPX01.CU-CUST-PROD-ID = KG0EM200.CU-CUST-PROD-ID; /* product id*/
  VCUCPX01.CU-PROD-NM = KG0EM200.CU-PROD-NM; /* product name*/
  VCUCPX01.CU-PROD-SNM = KG0EM200.CU-PROD-SNM; /* product short name*/
  VCUCPX01.CU-PROD-COLR-NM = KG0EM200.CU-PROD-COLR-NM; /* cust product color name*/
  VCUCPX01.CU-PROD-SZ-ID = KG0EM200.CU-PROD-SZ-ID; /* Cust size id*/
  VCUCPX01.CU-PROD-SZ-NM = KG0EM200.CU-PROD-SZ-NM; /* Cust size name*/

  VCUCPX01.XGPCD = KG0EM200.XGPCD; /* gpc code*/
  VCUCPX01.SY1STNBR = KG0EM200.SY1STNBR; /* style number*/
  VCUCPX01.SY2CLRID = KG0EM200.SY2CLRID; /* color id*/
  VCUCPX01.XDMCD = KG0EM200.XDMCD; /* dimension code*/
  VCUCPX01.XQACD = KG0EM200.XQACD; /* quality code*/

  if (KG0EM200.SY4IDDSC == " ")
    VCUCPX01.SY5SZID = 0; /* size id*/
  else
    VCUCPX01.SY5SZID = KG0EW01.SY5SZID; /* size id*/
  end

  VCUCPX01.CU-CUST-RTL-PRC = KG0EM200.CU-CUST-RTL-PRC; /* retail price*/
  VCUCPX01.CU-CUST-SPCL-PRC = KG0EM200.CU-CUST-SPCL-PRC; /* special price*/
  VCUCPX01.CU-SUGG-RTL-PRC = KG0EM200.CU-SUGG-RTL-PRC; /* suggested retail price*/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KG0EM200.KG0EMPMM EQ 0;*/
  /* MOVE 0 TO VCUCPX01.CU-SPCL-PRC-EDT;/* special price effective date*/
  /* ELSE;*/
  /* MOVE KG0EM200.KG0EMPMM TO KG0EW01.KG0EWPMM;/* effective month*/
  /* MOVE KG0EM200.KG0EMPDD TO KG0EW01.KG0EWPDD;/* effective day*/
  /* MOVE KG0EM200.KG0EMPYY TO KG0EW01.KG0EWPYY;/* effective year*/
  /* IF KG0EM200.KG0EMPYY > 0;      /* effective year*/
  /* IF KG0EM200.KG0EMPYY < 80;   /* effective year*/
  /* MOVE 020 TO KG0EW01.KG0EWPCC;/* set century*/
  /* ELSE;*/
  /* MOVE 019 TO KG0EW01.KG0EWPCC;/* set century*/
  /* END;*/
  /* END;*/
  /* MOVE KG0EW01.KG0EWDAT*/
  /* TO VCUCPX01.CU-SPCL-PRC-EDT; /* special price effective date*/
  /* END;*/
  /*  */
  /* -----------------------  Y2K OUT END  --------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  KG0EW01.KG0EWPMM = KG0EM200.KG0EMPMM; /* effective month*/
  KG0EW01.KG0EWPDD = KG0EM200.KG0EMPDD; /* effective day*/
  KG0EW01.KG0EWPYY = KG0EM200.KG0EMPYY; /* effective year*/
  if (KG0EW01.KG0EWPYYMMDD > 0) /* effective yymmdd*/
    if (KG0EM200.KG0EMPYY > 60) /* effective year*/
      KG0EW01.KG0EWPCC = 019; /* set century*/
    else
      KG0EW01.KG0EWPCC = 020; /* set century*/
    end
  else
    KG0EW01.KG0EWPCC = 0; /* set century*/
  end
  VCUCPX01.CU-SPCL-PRC-EDT = KG0EW01.KG0EWDAT; /* special price effective date*/
  /*  */
  /* -----------------------  Y2K IN END  ---------------------------*/

  VCUCPX01.CU-HANG-XGP-CD = KG0EM200.KUIHAGPC; /* hanger gpc*/
  VCUCPX01.CU-HANG-STY-NBR = KG0EM200.KUIHASTY; /* hanger style*/
  VCUCPX01.PK-LABL-CD1 = KG0EM200.PWRLBCD[1]; /* label code1*/
  VCUCPX01.PK-LABL-CD2 = KG0EM200.PWRLBCD[2]; /* label code2*/
  VCUCPX01.YLA-LABL-ATCH-CD1 = KG0EM200.YLACD[1]; /* label attach code1*/
  VCUCPX01.YLA-LABL-ATCH-CD2 = KG0EM200.YLACD[2]; /* label attach code2*/
  VCUCPX01.CU-HANG-CRTN-CLS = KG0EM200.KUIHAPCC; /* cust hang carton*/
  VCUCPX01.CU-SKU-COMNT1 = KG0EM200.KUICMNT[1]; /* cusku comment 1*/
  VCUCPX01.CU-SKU-COMNT2 = KG0EM200.KUICMNT[2]; /* cusku comment 2*/
  VCUCPX01.CU-SKU-COMNT3 = KG0EM200.KUICMNT[3]; /* cusku comment 3*/
  VCUCPX01.CU-VEND-CLS-ID = KG0EM200.CU-VEND-CLS-ID; /* vender class*/
  VCUCPX01.XXX-STAT = KG0EM200.XXXSTAT; /* status*/

  VCUCPX01.XDZ-DATA-DIST-CD = "US";

  VCUCPX01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* stamp chg date*/
  VCUCPX01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* stamp chg time*/

  KG0E820(); /* rebuild temp storage*/


end // end KG0E815

// update info in temp storage
Function KG0E820()
   /* *****************************************/
   /* kg0e820 - update info in temp storage*/
   /* *****************************************/

  KG0EW04.XNX-DEPT-ID-XREF[KG0EWCNT] = KG0EM200.XNXCD; /* department xref ids*/
  KG0EW04.CU-CUST-PROD-ID[KG0EWCNT] = KG0EM200.CU-CUST-PROD-ID; /* product id*/
  KG0EW04.CU-PROD-SNM[KG0EWCNT] = KG0EM200.CU-PROD-SNM; /* prod name*/
  KG0EW04.XGPCD[KG0EWCNT] = KG0EM200.XGPCD; /* gpc code*/
  KG0EW04.SY1STNBR[KG0EWCNT] = KG0EM200.SY1STNBR; /* style number*/
  KG0EW04.SY2CLRID[KG0EWCNT] = KG0EM200.SY2CLRID; /* color id*/
  KG0EW04.XDMCD[KG0EWCNT] = KG0EM200.XDMCD; /* dimension code*/
  KG0EW04.XQACD[KG0EWCNT] = KG0EM200.XQACD; /* quality code*/
  KG0EW04.SY4IDDSC[KG0EWCNT] = KG0EM200.SY4IDDSC; /* size desc*/

   /* ------- moving from map 02 ---------------------------------*/

  KG0EW01.KG0EW-MAP1-MONTH = KG0EM200.KG0EM-CU-XREF-EDT-MM;
  KG0EW01.KG0EW-MAP1-DAY = KG0EM200.KG0EM-CU-XREF-EDT-DD;
  KG0EW01.KG0EW-MAP1-YEAR = KG0EM200.KG0EM-CU-XREF-EDT-YY;

  KG0EW04.KG0EW-FORMATED-DATE[KG0EWCNT] = KG0EW01.KG0EW-MAP1-DATE;

  if (KG0EM200.SY4IDDSC == " ")
    KG0EW04.SY5SZID[KG0EWCNT] = 0; /* size id*/
  else
    KG0EW04.SY5SZID[KG0EWCNT] = KG0EW01.SY5SZID; /* size id*/
  end

  KG0E210();

  if (KG0EW04.KG0EWSEL[KG0EWCNT] == "A") /* add mode*/
    KG0EW04.KG0EWSEL[KG0EWCNT] = " ";
    if (KG0EW01.KG0EWCNT == 10) /* need a new empty page*/
      KG0E330(); /* save page with updates*/
      set KG0EW04 empty;
      KG0EW01.KG0EWPGT = KG0EW01.KG0EWPGT + 1; /* page counter*/
      KG0EM100.KG0EMPG2 = KG0EW01.KG0EWPGT;
      KG0E240(); /* create empty temp storage*/
      KG0EW01.KG0EWCNT = 0;
    end
  else
    if (KG0EW01.KG0EWCNT == 10) /* save page with updates*/
      KG0E330(); /* rewrite temp storage*/
    end
  end


end // end KG0E820

// write audit record
Function KG0E830()
   /* ********************************/
   /* kg0e830 - write audit record*/
   /* ********************************/

  set SQLCA empty;

  call "IO0500" ("A ", SQLCA, KUZREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUAUD01";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KG0E830";
    TA1REC.TA1LOC = "ADD DB2 DCUST.VCUAUD01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0E830

// Audit trail-del cucpx01
Function KG0E855()
   /* **********************************/
   /* kg0e855 - Audit trail-del cucpx*/
   /* **********************************/

   /* convert csp time/date format to db2 time/date stamp format*/
  XX0XS01();

   /* ****************************/
   /* prepare delete audit trail*/
   /* ****************************/

  set KUZREC empty;
  KUZREC.KUZTYPE = "D"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = " "; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCUCPX01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = VCUCPX01.CU-CUSKU-ID;
  KUZREC.XNXCD = VCUCPX01.XNX-DEPT-ID-XREF;
  KUZREC.XGPCD = VCUCPX01.XGPCD;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = VCUCPX01.VCUCPX01-GRP;

  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KG0E   ";
    TA1REC.TA1LOCAT[1] = "KG0E850  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCUCPX01 ";
    TA1REC.TA1MAP = "KG0EM000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCUCPX01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end

  KG0E830(); /* add audit image for cucpx01*/

  KG0ES-VCUCPX01-DEL(); /* delete VCUCPX01 product*/

end // end KG0E855

// Audit trail-update cucpx
Function KG0E875()
   /* ************************************/
   /* kg0e875 - Audit trail-update cucpx*/
   /* ************************************/

   /* convert csp time/date format to db2 time/date stamp format*/
  XX0XS01();

   /* ****************************/
   /* prepare before look audit*/
   /* ****************************/

  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "B"; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCUCPX01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = VCUCPX01.CU-CUSKU-ID;
  KUZREC.XNXCD = VCUCPX01.XNX-DEPT-ID-XREF;
  KUZREC.XGPCD = VCUCPX01.XGPCD;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = VCUCPX01.VCUCPX01-GRP;

  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KG0E   ";
    TA1REC.TA1LOCAT[1] = "KG0E870  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCUCPX01 ";
    TA1REC.TA1MAP = "KG0EM000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCUCPX01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end

  KG0E830(); /* add audit before image for cusku*/

  KG0E815(); /* format cucpx general data update*/

  KG0ES-VCUCPX01-UP1(); /* update vcucpx01*/

   /* ****************************/
   /* format after look audit*/
   /* ****************************/

  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "A"; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCUCPX01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = VCUCPX01.CU-CUSKU-ID;
  KUZREC.XNXCD = VCUCPX01.XNX-DEPT-ID-XREF;
  KUZREC.XGPCD = VCUCPX01.XGPCD;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = VCUCPX01.VCUCPX01-GRP;

  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KG0E   ";
    TA1REC.TA1LOCAT[1] = "KG0E870  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCUCPX01 ";
    TA1REC.TA1MAP = "KG0EM000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCUCPX01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end

  KG0E830(); /* write audit trail after image*/

  set VCUCPX01 empty; /* set cust/prod xref empty*/

end // end KG0E875

// Determine DB2 select by screen
Function KG0ES-SET-SCAN-IND()
   /* **************************************************/
   /* kg0es-set-scan-ind - determine which cursor to use in DB2*/
   /* call based on key data entered by user on screen*/
   /* **************************************************/

  KG0EW-SCAN-IND = 0;

                                   /* NIKE Prod is entered*/
  if (KG0EM100.KG0EMXGP > " "
   || KG0EM100.KG0EMSY1 > " "
   || KG0EM100.KG0EMSY2 > " "
   || KG0EM100.KG0EMXDM > " ")
    KG0EM100.KG0EMPRD = " "; /* NIKE Prod has priority over Cust Prod*/
    VCUCPX01.XGPCD = KG0EM100.KG0EMXGP; /* Move NIKE prod*/
    VCUCPX01.SY1STNBR = KG0EM100.KG0EMSY1; /* to DB2 record for*/
    VCUCPX01.SY2CLRID = KG0EM100.KG0EMSY2; /* select cursor.*/
    VCUCPX01.XDMCD = KG0EM100.KG0EMXDM;

    if (KG0EM100.XNXCD == 0) /* Dept XREF is not entered- scan for*/
                                   /* all depts*/
      KG0EW-SCAN-IND = 6;
    else /* Dept XREF is entered - scan for one*/
                                   /* dept only*/
      VCUCPX01.XNX-DEPT-ID-XREF = KG0EM100.XNXCD; /* Move dept XREF*/
      KG0EW-SCAN-IND = 8;
    end
  else /* NIKE Prod is not entered*/

    if (KG0EM100.KG0EMPRD > " ") /* Cust Prod is entered*/
      VCUCPX01.CU-CUST-PROD-ID = KG0EM100.KG0EMPRD;

      if (KG0EM100.XNXCD == 0) /* Dept XREF is not entered- scan for*/
                                   /* all depts*/
        KG0EW-SCAN-IND = 5;
      else /* Dept XREF is entered - scan for one*/
                                   /* dept only*/
        VCUCPX01.XNX-DEPT-ID-XREF = KG0EM100.XNXCD; /* Move dept XREF*/
        KG0EW-SCAN-IND = 7;
      end
    else /* Cust Prod is not entered*/

      if (KG0EM100.XNXCD == 0) /* Dept XREF is not entered- scan for*/
                                   /* all depts*/
        KG0EW-SCAN-IND = 3;
      else /* Dept XREF is entered - scan for one*/
                                   /* dept only*/
        VCUCPX01.XNX-DEPT-ID-XREF = KG0EM100.XNXCD; /* Move dept XREF*/
        KG0EW-SCAN-IND = 1;
      end
    end
  end

end // end KG0ES-SET-SCAN-IND

// Add record to VCUCPX01
Function KG0ES-VCUCPX01-ADD()
   /* *****************************/
   /* kg0es-vcucpx01-add - add cucpx record*/
   /* *****************************/

  set SQLCA empty;

  VCUCPX01.ZZZSDT = XX0XW01.XX0XWDAT; /* stamp setup date*/
  VCUCPX01.ZZZSTM = XX0XW01.XX0XWTIM; /* stamp setup time*/

  call "VCUCPX01" ("A ", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(403); /* cusku upt since last request msg*/
      KG0EW01.KG0EWERR = "Y"; /* set error msg*/
      KG0ES-VCUCPX01-SB(); /* refresh the screen*/
      return;
    else
      KG0EW01.KG0EWSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KG0EW01.KG0EWSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCUCPX01";
      TA1REC.TA1MAP = " ";
      KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
      KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
      TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
      TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-ADD";
      TA1REC.TA1LOC = "ADD    DB2 DCUST.VCUCPX01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0ES-VCUCPX01-ADD

// Close CUCPX01 scan1 by CU PROD
Function KG0ES-VCUCPX01-C1()
   /* *********************************************/
   /* * kg0es-vcucpx01-c1 - close cucpx by customer product*/
   /* *********************************************/

  call "VCUCPX01" ("C1", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-C1";
    TA1REC.TA1LOC = "CLOSE CURSOR VCUCPX01-C1";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUCPX01";
    KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
    KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0ES-VCUCPX01-C1

// Close CUCPX01 scan3 by CU PROD
Function KG0ES-VCUCPX01-C3()
   /* ******************************************************/
   /* * kg0es-vcucpx01-c3 - close cucpx by customer product*/
   /* ******************************************************/

  call "VCUCPX01" ("C3", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-C3";
    TA1REC.TA1LOC = "CLOSE CURSOR VCUCPX01-C3";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUCPX01";
    KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
    KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0ES-VCUCPX01-C3

// Close CUCPX01 scan5 by CU PROD
Function KG0ES-VCUCPX01-C5()
   /* ************************************************/
   /* * kg0es-vcucpx01-c5 - close cusku by cust prod*/
   /* ************************************************/

  call "VCUCPX01" ("C5", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-C5";
    TA1REC.TA1LOC = "CLOSE CURSOR VCUCPX01-C5";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUCPX01";
    KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
    KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0ES-VCUCPX01-C5

// Close CUCPX01 scan6 by NIKE
Function KG0ES-VCUCPX01-C6()
   /* ************************************************/
   /* * kg0es-vcucpx01-c6 - close cusku by nike prod*/
   /* ************************************************/

  call "VCUCPX01" ("C6", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-C6";
    TA1REC.TA1LOC = "CLOSE CURSOR VCUCPX01-C6";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUCPX01";
    KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
    KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0ES-VCUCPX01-C6

// Close CUCPX01 scan7 by CU PROD
Function KG0ES-VCUCPX01-C7()
   /* *********************************************/
   /* * kg0es-vcucpx01-c7 - close cucpx by customer product*/
   /* *********************************************/

  call "VCUCPX01" ("C7", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-C7";
    TA1REC.TA1LOC = "CLOSE CURSOR VCUCPX01-C7";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUCPX01";
    KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
    KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0ES-VCUCPX01-C7

// Close CUCPX01 scan8 by NIKE
Function KG0ES-VCUCPX01-C8()
   /* ************************************************/
   /* * kg0es-vcucpx01-c8 - close cusku by nike prod*/
   /* ************************************************/

  call "VCUCPX01" ("C8", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-C8";
    TA1REC.TA1LOC = "CLOSE CURSOR VCUCPX01-C6";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUCPX01";
    KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
    KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0ES-VCUCPX01-C8

// Delete VCUCPX01
Function KG0ES-VCUCPX01-DEL()
   /* *********************************/
   /* kg0es-vcucpx01-del - delete cucpx record*/
   /* *********************************/

  set SQLCA empty;

  call "VCUCPX01" ("D ", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(403); /* cusku upt since last request msg*/
      KG0EW01.KG0EWERR = "Y"; /* set error msg*/
      KG0ES-VCUCPX01-SB(); /* refresh the screen*/
      return;
    else
      KG0EW01.KG0EWSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KG0EW01.KG0EWSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCUCPX01";
      TA1REC.TA1MAP = " ";
      KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
      KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
      TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
      TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-DEL";
      TA1REC.TA1LOC = "ADD    DB2 DCUST.VCUCPX01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0ES-VCUCPX01-DEL

// Get next CUCPX01 scan1
Function KG0ES-VCUCPX01-N1()
   /* *******************************************/
   /* * kg0es-vcucpx01-n1 - select next by customer product*/
   /* *******************************************/

  call "VCUCPX01" ("N1", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KG0EW01.KG0EWEND = "Y";
      KG0ES-VCUCPX01-C1(); /* close dept cursor*/
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-N1";
      TA1REC.TA1LOC = "FETCH NEXT VCUCPX01-N1";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCUCPX01";
      KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
      KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
      TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0ES-VCUCPX01-N1

// Get next CUCPX01 scan3
Function KG0ES-VCUCPX01-N3()
   /* *********************************************************/
   /* * kg0es-vcucpx01-n3 - select next scan-3 by CUST product*/
   /* *********************************************************/

  call "VCUCPX01" ("N3", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KG0EW01.KG0EWEND = "Y";
      KG0ES-VCUCPX01-C3(); /* close dept cursor*/
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-N3";
      TA1REC.TA1LOC = "FETCH NEXT VCUCPX01-N3";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCUCPX01";
      KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
      KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
      TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0ES-VCUCPX01-N3

// Get next CUCPX01 scan5
Function KG0ES-VCUCPX01-N5()
   /* *********************************************************/
   /* * kg0es-vcucpx01-n5 - select next scan-5 by CUST product*/
   /* *********************************************************/

  call "VCUCPX01" ("N5", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KG0EW01.KG0EWEND = "Y";
      KG0ES-VCUCPX01-C5(); /* close dept cursor*/
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-N5";
      TA1REC.TA1LOC = "FETCH NEXT VCUCPX01-N5";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCUCPX01";
      KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
      KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
      TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0ES-VCUCPX01-N5

// Get next CUCPX01 scan6
Function KG0ES-VCUCPX01-N6()
   /* *********************************************************/
   /* * kg0es-vcucpx01-n6 - select next scan-6 by NIKE product*/
   /* *********************************************************/

  call "VCUCPX01" ("N6", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KG0EW01.KG0EWEND = "Y";
      KG0ES-VCUCPX01-C6(); /* close dept cursor*/
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-N6";
      TA1REC.TA1LOC = "FETCH NEXT VCUCPX01-N6";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCUCPX01";
      KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
      KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
      TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0ES-VCUCPX01-N6

// Get next CUCPX01 scan7
Function KG0ES-VCUCPX01-N7()
   /* *******************************************/
   /* * kg0es-vcucpx01-n7 - select next by customer product*/
   /* *******************************************/

  call "VCUCPX01" ("N7", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KG0EW01.KG0EWEND = "Y";
      KG0ES-VCUCPX01-C7(); /* close dept cursor*/
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-N7";
      TA1REC.TA1LOC = "FETCH NEXT VCUCPX01-N7";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCUCPX01";
      KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
      KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
      TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0ES-VCUCPX01-N7

// Get next CUCPX01 scan8
Function KG0ES-VCUCPX01-N8()
   /* *******************************************/
   /* * kg0es-vcucpx01-n8 - select next by NIKE product*/
   /* *******************************************/

  call "VCUCPX01" ("N8", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KG0EW01.KG0EWEND = "Y";
      KG0ES-VCUCPX01-C8(); /* close dept cursor*/
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-N8";
      TA1REC.TA1LOC = "FETCH NEXT VCUCPX01-N8";
      TA1REC.TA1MAP = " ";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCUCPX01";
      KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
      KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
      TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0ES-VCUCPX01-N8

// Select CUCPX01 scan1
Function KG0ES-VCUCPX01-S1()
   /* **************************************************/
   /* * kg0es-vcucpx01-s1 - select info by customer product*/
   /* **************************************************/

  call "VCUCPX01" ("S1", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes}; /* read vcucpx01*/
  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUCPX01";
    TA1REC.TA1MAP = " ";
    KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
    KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-S1";
    TA1REC.TA1LOC = "SCAN1   DB2 CUCPX01-S1";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0ES-VCUCPX01-S1

// Select CUCPX01 scan3
Function KG0ES-VCUCPX01-S3()
   /* **************************************************/
   /* * kg0es-vcucpx01-s3 - select info by cu-cusku-id*/
   /* *                     order by customer product*/
   /* **************************************************/

  call "VCUCPX01" ("S3", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes}; /* read vcucpx01*/
  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUCPX01";
    TA1REC.TA1MAP = " ";
    KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-S3";
    TA1REC.TA1LOC = "SCAN3   DB2 CUCPX01-S3";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0ES-VCUCPX01-S3

// Select CUCPX01 scan5
Function KG0ES-VCUCPX01-S5()
   /* **************************************************/
   /* * kg0es-vcucpx01-s5 - select info by cu-cusku-id*/
   /* *                     order by customer product*/
   /* **************************************************/

  call "VCUCPX01" ("S5", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes}; /* read vcucpx01*/
  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUCPX01";
    TA1REC.TA1MAP = " ";
    KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-S5";
    TA1REC.TA1LOC = "SCAN5   DB2 CUCPX01-S5";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0ES-VCUCPX01-S5

// Select CUCPX01 scan6
Function KG0ES-VCUCPX01-S6()
   /* **************************************************/
   /* * kg0es-vcucpx01-s6 - select info by cu-cusku-id*/
   /* *                     order by NIKE product*/
   /* **************************************************/

  call "VCUCPX01" ("S6", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes}; /* read vcucpx01*/
  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUCPX01";
    TA1REC.TA1MAP = " ";
    KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-S6";
    TA1REC.TA1LOC = "SCAN6   DB2 CUCPX01-S6";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0ES-VCUCPX01-S6

// Select CUCPX01 scan7
Function KG0ES-VCUCPX01-S7()
   /* **************************************************/
   /* * kg0es-vcucpx01-s7 - select info by customer product*/
   /* **************************************************/

  call "VCUCPX01" ("S7", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes}; /* read vcucpx01*/
  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUCPX01";
    TA1REC.TA1MAP = " ";
    KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
    KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-S7";
    TA1REC.TA1LOC = "SCAN7   DB2 CUCPX01-S7";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0ES-VCUCPX01-S7

// Select CUCPX01 scan8
Function KG0ES-VCUCPX01-S8()
   /* **************************************************/
   /* * kg0es-vcucpx01-s8 - select info by NIKE product*/
   /* **************************************************/


  call "VCUCPX01" ("S8", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes}; /* read cucpx01*/
  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUCPX01";
    TA1REC.TA1MAP = " ";
    KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
    KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-S8";
    TA1REC.TA1LOC = "SCAN8 DB2 CUCPX01-S8";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0ES-VCUCPX01-S8

// Select 'B' from VCUCPX01
Function KG0ES-VCUCPX01-SB()
   /* ************************************************************/
   /* kg0es-vcucpx01-sb - select cucpx product for detail screen*/
   /* ************************************************************/

  set SQLCA empty;

  call "VCUCPX01" ("SB", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes}; /* read cusku01*/
  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      if (KG0EW04.KG0EWSEL[KG0EWCNT] == "A")
         /* next sentence*/
      else
        KG0EW01.KG0EWERR = "Y";
        KG0EW04.KG0EWSEL[KG0EWCNT] = "X";
        converseLib.validationFailed(403);
      end
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCUCPX01";
      TA1REC.TA1MAP = " ";
      KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
      KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
      TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
      TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-SB";
      TA1REC.TA1LOC = "READING DB2 CUCPX01-SB";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0ES-VCUCPX01-SB

// Update VCUCPX01 via cust prod
Function KG0ES-VCUCPX01-UP1()
   /* **************************************************/
   /* kg0es-vcucpx01-up1 - update cucpx by customer product id*/
   /* **************************************************/

  set SQLCA empty;

  call "VCUCPX01" ("U ", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(403); /* cusku upt since last request msg*/
      KG0EW01.KG0EWERR = "Y"; /* set error msg*/
      KG0ES-VCUCPX01-SB(); /* refresh the screen*/
      return;
    else
      KG0EW01.KG0EWSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KG0EW01.KG0EWSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCUCPX01";
      TA1REC.TA1MAP = " ";
      KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
      KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
      TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
      TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-UP1";
      TA1REC.TA1LOC = "UPDATE DB2 DCUST.VCUCPX01-U1";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end


end // end KG0ES-VCUCPX01-UP1

// Select vcucpx01 via XB
Function KG0ES-VCUCPX01-XB()
   /* *************************************************/
   /* kg0es-vcucpx01-xb - select NIKE product via 'xb'*/
   /* *************************************************/

  set SQLCA empty;

  call "VCUCPX01" ("XB", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
     /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1PGMNM = "KG0ES-VCUCPX01-XB";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUCPX01";
    TA1REC.TA1MAP = " ";
    KG0EW01.KG0EWCID = VCUCPX01.CU-CUSKU-ID;
    KG0EW01.KG0EWDID = VCUCPX01.XNX-DEPT-ID-XREF;
    TA1REC.TA1TBLKE = KG0EW01.KG0EWKEY;
    TA1REC.TA1LOC = "READING DB2 TBL DCUST.VCUCPX01-XB";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KG0ES-VCUCPX01-XB

//*** RECORD=KG0EW01 ****
// this record contains work fields used entirely within KG0E.
// * Y2KFIX   11/24/97  DKENNY  Y2K MODIFICATIONS MADE TO ADD
// *                            KG0EWPYYMMDD AND KG0EW-YYMMDD
// *                            FIELDS FOR CHECK OF DATE > 0
// *                            PRIOR TO ADDING CENTURY VALUE.
// ***********************
Record KG0EW01 type basicRecord
  10 KG0EWSIZ KG0EWSIZ ; 
  10 KG0EW-SCAN-IND KG0EW-SCAN-IND ; 
  10 KG0EWMAX KG0EWMAX ; 
  10 KG0EWPGC KG0EWPGC ; 
  10 KG0EWPGT KG0EWPGT ; 
  10 KG0EWDIX KG0EWDIX ; 
  10 KG0EWCNT KG0EWCNT ; 
  10 KG0EWEND KG0EWEND ; 
  10 KG0EW-CUSKU-UPDATED KG0EW-CUSKU-UPDATED ; 
  10 KG0EW-ADD-CUSKU KG0EW-ADD-CUSKU ; 
  10 KG0EWFND KG0EWFND ; 
  10 KG0EWDON KG0EWDON ; 
  10 KG0EWUPM KG0EWUPM ; 
  10 KG0EWACC KG0EWACC ; 
  10 KG0EWRTN KG0EWRTN ; 
  10 KG0EWCHG KG0EWCHG ; 
  10 KG0EWUSR KG0EWUSR ; 
    15 KG0EWCNO KG0EWCNO ; 
      20 KG0EWCNO-CHAR KG0EWCNO-CHAR ; 
    15 KG0EWDNO KG0EWDNO ; 
      20 KG0EWDNO-CHAR KG0EWDNO-CHAR ; 
    15 * char(15) ; 
  10 KG0EWKEY KG0EWKEY ; 
    15 KG0EWCID KG0EWCID ; 
    15 KG0EWDID KG0EWDID ; 
  10 KG0EWERR KG0EWERR ; 
  10 KG0EWLBL KG0EWLBL ; 
  10 KG0EWMD1 KG0EWMD1 ; 
  10 KG0EWEFL KG0EWEFL ; 
  10 KG0EWDAT KG0EWDAT ; 
    15 KG0EWPCC KG0EWPCC ; 
    15 KG0EWPYYMMDD KG0EWPYYMMDD ; 
      20 KG0EWPYY KG0EWPYY ; 
      20 KG0EWPMM KG0EWPMM ; 
      20 KG0EWPDD KG0EWPDD ; 
  10 KG0EW-EDT KG0EW-EDT ; 
    15 KG0EW-CENTURY KG0EW-CENTURY ; 
    15 KG0EW-YYMMDD KG0EW-YYMMDD ; 
      20 KG0EW-YEAR KG0EW-YEAR ; 
      20 KG0EW-MONTH KG0EW-MONTH ; 
      20 KG0EW-DAY KG0EW-DAY ; 
  10 KG0EW-MAP1-DATE KG0EW-MAP1-DATE ; 
    15 KG0EW-MAP1-MONTH KG0EW-MAP1-MONTH ; 
    15 KG0EW-FILLER-1 KG0EW-FILLER-1 ; 
    15 KG0EW-MAP1-DAY KG0EW-MAP1-DAY ; 
    15 KG0EW-FILLER-2 KG0EW-FILLER-2 ; 
    15 KG0EW-MAP1-YEAR KG0EW-MAP1-YEAR ; 
  10 KG0EWSCT KG0EWSCT ; 
  10 KG0EWIND KG0EWIND ; 
  10 KG0EWSWT KG0EWSWT ; 
  10 KG0EWSQL KG0EWSQL ; 
  10 KG0EWPRD KG0EWPRD ; 
  10 KUIPRDID KUIPRDID ; 
  10 KG0EWNPR KG0EWNPR ; 
    15 XGPCD XGPCD ; 
    15 SY1STNBR SY1STNBR ; 
    15 SY2CLRID SY2CLRID ; 
    15 XDMCD XDMCD ; 
    15 XQACD XQACD ; 
  10 XATCD XATCD ; 
  10 SY4IDDSC SY4IDDSC ; 
  10 SY5SZID SY5SZID ; 
  10 KUIGRP KUIGRP ; 
end // end KG0EW01

//*** RECORD=KG0EW02 ****
// working storage record for parm to ta0050 (temp storage)
// ***********************
Record KG0EW02 type basicRecord
  10 KG0EW2AP KG0EW2AP ; 
  10 KG0EW2CT KG0EW2CT ; 
  10 KG0EW2FC KG0EW2FC ; 
  10 KG0EW2RC KG0EW2RC ; 
end // end KG0EW02

//*** RECORD=KG0EW04 ****
// working storage rec for editing against the screen
// ;
// the following fields (KG0CW01) are used for processing
//  1) KG0CWRIN - misc looping thru the table
//  2) KG0CWRMR - last full position on the table
//  3) KG0CWRIX - last rep on the screen
//  4) KG0CWRCT - counter used to match the screen counter
//                of KG0CWCNT
//  5) KG0CWRPL - holding field when replacing a rep with a
// new rep
// ;
// ***********************
Record KG0EW04 type basicRecord
  3 KG0EW4GR KG0EW4GR ; 
    10 KG0EW4LG KG0EW4LG ; 
    10 KG0EWGRP KG0EWGRP [10] ; 
      15 KG0EWSEL KG0EWSEL ; 
      15 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
      15 CU-CUST-PROD-ID CU-CUST-PROD-ID ; 
      15 CU-PROD-SNM CU-PROD-SNM ; 
      15 KG0EW-FORMATED-DATE KG0EW-FORMATED-DATE ; 
      15 KG0EWNPR KG0EWNPR ; 
        20 XGPCD XGPCD ; 
        20 SY1STNBR SY1STNBR ; 
        20 SY2CLRID SY2CLRID ; 
        20 XDMCD XDMCD ; 
        20 XQACD XQACD ; 
      15 SY4IDDSC SY4IDDSC ; 
      15 SY5SZID SY5SZID ; 
      15 KG0EWINF KG0EWINF ; 
end // end KG0EW04

// Need to add new vcusku01 row
DataItem KG0EW-ADD-CUSKU char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws effective century
DataItem KG0EW-CENTURY num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// vcusku01 has been updated
DataItem KG0EW-CUSKU-UPDATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws effective day
DataItem KG0EW-DAY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws effective date
DataItem KG0EW-EDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws effective month
DataItem KG0EW-FILLER-1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws effective month
DataItem KG0EW-FILLER-2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// formated cu-prod-xref-edt
DataItem KG0EW-FORMATED-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws effective date
DataItem KG0EW-MAP1-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws effective year
DataItem KG0EW-MAP1-DAY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws effective year
DataItem KG0EW-MAP1-MONTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws effective day
DataItem KG0EW-MAP1-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws effective month
DataItem KG0EW-MONTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DB2 cursor indicator
DataItem KG0EW-SCAN-IND num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws effective year
DataItem KG0EW-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws effective yymmdd
DataItem KG0EW-YYMMDD num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// application
DataItem KG0EW2AP char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// count
DataItem KG0EW2CT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// function
DataItem KG0EW2FC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// return code
DataItem KG0EW2RC num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group level for w04
DataItem KG0EW4GR char(694)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RECORD LENGTH
DataItem KG0EW4LG num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// how to update cusku(key)
DataItem KG0EWACC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// rewrite temp storage
DataItem KG0EWCHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current company id
DataItem KG0EWCID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   company number
DataItem KG0EWCNO num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   company number
DataItem KG0EWCNO-CHAR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen detail counter
DataItem KG0EWCNT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// spcl ws effective date
DataItem KG0EWDAT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current dept id
DataItem KG0EWDID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temp storage index
DataItem KG0EWDIX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   dept number
DataItem KG0EWDNO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   dept number
DataItem KG0EWDNO-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// second scrn done flag
DataItem KG0EWDON char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen updated flag
DataItem KG0EWEFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of cusku flag
DataItem KG0EWEND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag
DataItem KG0EWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// match found flag
DataItem KG0EWFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// grp level for w04
DataItem KG0EWGRP char(69)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// size number index
DataItem KG0EWIND smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// more information flag
DataItem KG0EWINF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work key
DataItem KG0EWKEY char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// label found flag
DataItem KG0EWLBL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// max nbr of occurrences
DataItem KG0EWMAX num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// vcusku01 modified flag
DataItem KG0EWMD1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level for NIKE product
DataItem KG0EWNPR char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// spcl effective century
DataItem KG0EWPCC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// spcl effective day
DataItem KG0EWPDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// page counter
DataItem KG0EWPGC num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// total nbr of pages
DataItem KG0EWPGT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// spcl effective month
DataItem KG0EWPMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem KG0EWPRD char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// spcl effective year
DataItem KG0EWPYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// spcl effective yymmdd
DataItem KG0EWPYYMMDD num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// return to proper page, 1st scr
DataItem KG0EWRTN char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// size position
DataItem KG0EWSCT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// select second scrn
DataItem KG0EWSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// size of temp storage
DataItem KG0EWSIZ num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save area for sqlca/reset
DataItem KG0EWSQL char(136)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// size switch
DataItem KG0EWSWT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update/inquiry flag
DataItem KG0EWUPM char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reformat area for causera
DataItem KG0EWUSR char(24)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

