package pf0j;

import corpcom3.XPPF002;
import corpcom3.XPPF010;
import corpcom3.XPPF030;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom6.UT2REC;
import pf.common.PFEREC;
import pf.common.PFWREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
//*** PROGRAM=PF0J ****
// PF0J: Profitability Run Requests
// 
// Overview:
//   This application submits jobs to batch which trigger
//   other jobs in batch.  The jobs that this application
//   submits contain a single step which creates a file.
//   The existence of this file triggers ESP to submit a
//   batch job.
//     The options and jobs they submit are:
//       1 - On-request summaries
//       2 - Summaries from summaries
//       3 - Billing cutoff summaries
//           (Was second close summaries)
//       4 - First close summaries
//       5 - Final (PF) close summaries
//           (Was third close summaries)
//       6 - Weekly summaries
//       7 - Quarterly summaries
//       8 - Print summaries
//       9 - Customer Balance Report by Brand
//      10 - Customer Balance Report by GPC
//      11 - Current Actual Balance Report
//           (was GPC YIS balance report)
//      12 - Prior Year Balance Report
//      13 - Budget Balance Report
// 
//     The valid summary statuses are:
//      ' ' - Sum attr exists but summary does not.
//      'O' - First summary-in-process status.
//      'I' - Second summary-in-process status.
//      'N' - 'Normal' status. Sum attr AND summary exist.
//      'H' - Hold summary. Don't auto delete an existing sum
//            or don't create a sum if just the attr exists.
//      'D' - For On-Request cycle sums, delete the sum and the
//            attr if both exist, or just delete the attr.
//            For other cycle sums, delete the sum but keep
//            the attr.
// 
// Maintenance History:
//   date      by              description of change
// --------  ------  -----------------------------------------
//  1-27-89  DCassi  Original transfer to production.
//  2-14-89  dbrock  commented out the call to PF0J950,
//                   in PF0J100, to prevent the PFESTIND from
//                   being set to an 'I'.
//  3-08-89  DCassi  Added new options 2, 3, 4, and 5.
//  3-15-89  DCassi  Added new option 8.
//  3-23-89  DCassi  Change the status to 'O' for ALL create
//                   sum from sum rows rather than just 3.
// 10-17-89  DCassi  When changing the status from ' ' to 'O'
//                   for third close immediate summaries,
//                   change up to 9 summaries rather than just
//                   up to 3, in process PF0J500.
// 11-06-89  DCassi  For 1st, 2nd, & 3rd close immediate
//                   summary creates, select status 'N' as well
//                   as status ' ' summaries to be updated to
//                   status 'o' (in process).  (J300,J400,J500)
// 11-21-89  TGriff  Change option 8 to 'Current Actual Balance
//                   Report' and add options 9 (Prior Year
//                   Balance Report) and 10 (Budget Balance
//                   Report).  Includes new tables PF0JT09, 11.
// 03-16-90  DCassi  When changing the status from ' ' to 'O',
//                   change up to 10 summaries for On-request
//                   cycle and up to 20 for the standard
//                   summaries.
//  4-04-90  CVo     Added 'W'eekly and 'Q'uarterly Summaries.
//                   Renamed cycles second close to billing
//                   cutoff and third close to final close.
//  5-01-90  DCassi  Changed the map, and file names in PF0JT12
//                   and PF0JT13 tables.
// 12-14-90  DCassi  Changed PF0JT04 and PF0JT13 jobcards so
//                   comment was not over 20 characters.
//  2-20-91  DCassi  Corrected Billing Cutoff status 'n' chg to
//                   'o' logic, increasing maximum number
//                   processed from 3 to 20, in PF0J400.
//  9-04-91  MKamin  Replaced option 9 Balance Verification
//                   with Customer Balance Report by Brand.
//  9-20-91  MKamin  Inserted option 10, Customer Balance
//                   Report by GPC, and moved the others down.
//  3-15-93  MKamin  Made changes to JCL tables for online
//                   submitted jobs, due to change in the
//                   scheduling package from UCC7 to ESP.
// *********************
Program PF0J type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  PF0JW01 PF0JW01; // record
  PF0JW90 PF0JW90; // record
  PFEREC PFEREC; // record
  PFWREC PFWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  UT2REC UT2REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PF0JT01 {deleteAfterUse = yes}; // table
  use PF0JT02 {deleteAfterUse = yes}; // table
  use PF0JT03 {deleteAfterUse = yes}; // table
  use PF0JT04 {deleteAfterUse = yes}; // table
  use PF0JT05 {deleteAfterUse = yes}; // table
  use PF0JT06 {deleteAfterUse = yes}; // table
  use PF0JT07 {deleteAfterUse = yes}; // table
  use PF0JT08 {deleteAfterUse = yes}; // table
  use PF0JT09 {deleteAfterUse = yes}; // table
  use PF0JT11 {deleteAfterUse = yes}; // table
  use PF0JT12 {deleteAfterUse = yes}; // table
  use PF0JT13 {deleteAfterUse = yes}; // table
  use PF0JT14 {deleteAfterUse = yes}; // table
  use PF0JM.PF0JM001 // form
   {
    pfKeyEquate = yes
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    PF0J000: PF0J000();
  end // end main
end // end PF0J

// PF0J mainline logic
Function PF0J000()
  PF0J001(); /* initialization*/
  ;
  while (PFWREC.PFWEOAF == "N") /* while application is active*/
    ;
    PF0J050(); /* converse screen*/
    ;
  end
  ;
  XPPF002(); /* exit*/
  ;
  ;
  if (PFWREC.PFWMSG != " ") /* in case of reject from exit*/
    COMMAREA.CAMSG = PFWREC.PFWMSG; /* save message*/
  end
  COMMAREA.CATOAP = "PF0A"; /* xfer to main PF menu*/
  XSEXIT();
end // end PF0J000

// initialization
Function PF0J001()
  XSENTRY(); /* security checking*/
  ;
  XSSEGTR(); /* set cics start trans id for segm*/
                                   /* trans*/
  ;
  set PF0JM001 initial; /* clear screen*/
  set PFWREC empty; /* clear general PF working storage*/
  set PF0JW01 empty; /* clear PF0J working storage*/
  set PFEREC empty; /* clear vsumat01 i/o record*/
  set UT2REC empty; /* clear ut0220 enque/deque reader rec*/
  set SQLCA empty; /* clear sql comm area record*/
  set ERRSQLCA empty; /* clear sql error record*/
  set TA1REC empty; /* clear error diag routine record*/
  set TA2REC empty; /* clear date routine record*/
  ;
  PFWREC.PFWEOAF = "N"; /* set end of appl flag*/
  PFWREC.PFWERRF = "N"; /* set error flag*/
  ;
  PF0JM001.XXXCURDT = VGVar.currentShortGregorianDate; /* set screen date*/
end // end PF0J001

// converse screen
Function PF0J050()
   /* -----------------------------------------------------------;*/
     /* Refresh screen counts                                   ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J810(); /* determine screen counts*/
  ;
  ;
  if (PFWREC.PFWMSG != " ") /* display incoming msg*/
    PF0JM001.VAGen_EZEMSG = PFWREC.PFWMSG;
  end
  ;
  converse PF0JM001 ;
  ;
  set PF0JM001.PF0JMSEL cursor, initialAttributes;
  set PF0JM001.PF0JMCRS initialAttributes;
  set PF0JM001.PF0JMIMS initialAttributes;
  set PF0JM001.PF0JMOVS initialAttributes;
  set PF0JM001.CATOAP initialAttributes;
  set PF0JM001.CAITEM initialAttributes;
  ;
  PFWREC.PFWERRF = "N"; /* reset error flag*/
  PFWREC.PFWMSG = " "; /* clear message line*/
  PF0JM001.VAGen_EZEMSG = " ";
  ;
  ;
   /* -----------------------------------------------------------;*/
     /* Check for Fastpath                                      ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J051(); /* check for fastpath*/
  ;
  if (PFWREC.PFWERRF == "Y")
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
     /* Check for PF and PA keys                                ;*/
   /* -----------------------------------------------------------;*/
  ;
  if (converseVar.eventKey is enter)
      /* no action*/
  else
    ;
    PF0J052(); /* process PF & PA keys*/
    ;
    if (PFWREC.PFWERRF == "Y" /* if error returned from check*/
     || PFWREC.PFWEOAF == "Y") /* or end of application*/
      PFWERRF = "Y";
      return; /* exit this routine*/
    end
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
     /* Edit run option selection field                         ;*/
   /* -----------------------------------------------------------;*/
  ;
  if (PF0JM001.PF0JMSEL < 1
   || PF0JM001.PF0JMSEL > 13)
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(284); /* please enter 1 through 13 for sel*/
    PFWREC.PFWERRF = "Y";
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
     /* Perform run option                                      ;*/
   /* -----------------------------------------------------------;*/
  ;
  if (PF0JM001.PF0JMSEL == 1)
    ;
    PF0J100(); /* process on-request sum req*/
    ;
  else
    if (PF0JM001.PF0JMSEL == 2)
      ;
      PF0J200(); /* process create sums from sums*/
      ;
    else
      if (PF0JM001.PF0JMSEL == 3)
        ;
        PF0J400(); /* process billing cutoff sum req*/
        ;
      else
        if (PF0JM001.PF0JMSEL == 4)
          ;
          PF0J300(); /* process first close sum req*/
          ;
        else
          if (PF0JM001.PF0JMSEL == 5)
            ;
            PF0J500(); /* process final (PF) close sum*/
            ;
          else
            if (PF0JM001.PF0JMSEL == 6)
              ;
              PF0J120(); /* process weekly Sum req*/
              ;
            else
              if (PF0JM001.PF0JMSEL == 7)
                ;
                PF0J130(); /* process quarterly Sum req*/
                ;
              else
                if (PF0JM001.PF0JMSEL == 8)
                  ;
                  PF0J600(); /* process print summaries req*/
                  ;
                else
                  if (PF0JM001.PF0JMSEL == 9)
                    ;
                    PF0J700(); /* process brand balance rept*/
                    ;
                  else
                    if (PF0JM001.PF0JMSEL == 10)
                      ;
                      PF0J710(); /* process gpc balance rept*/
                      ;
                    else
                      if (PF0JM001.PF0JMSEL == 11)
                        ;
                        PF0J800(); /* process current dtl bal rpt*/
                        ;
                      else
                        if (PF0JM001.PF0JMSEL == 12)
                          ;
                          PF0J900(); /* process prior year bal rept*/
                          ;
                        else
                          if (PF0JM001.PF0JMSEL == 13)
                            ;
                            PF0J110(); /* process budget bal rpt*/
                            ;
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  PF0JM001.PF0JMSEL = 0;
end // end PF0J050

// check for fastpath
Function PF0J051()
   /* -----------------------------------------------------------;*/
     /* Check for fastpath exit request.  Fastpath out is only  ;*/
     /* allowed if no data has been entered anywhere else on    ;*/
     /* the screen.  If other data has been entered, put cursor ;*/
     /* on the bad field and send an error message.  Do not     ;*/
     /* allow fastpath back into same application.              ;*/
   /* -----------------------------------------------------------;*/
  ;
  ;
  if (PF0JM001.CATOAP != " " /* if fastpath*/
   || PF0JM001.CAITEM != " ")
    if (PF0JM001.CATOAP == "PF0J") /* if fastpath into same appl*/
      set PF0JM001.CATOAP cursor, bold;
      converseLib.validationFailed(10); /* cannot transfer to requested screen*/
      PFWREC.PFWERRF = "Y";
    end
    if (PF0JM001.PF0JMSEL is modified)
      set PF0JM001.PF0JMSEL cursor, bold;
      converseLib.validationFailed(2); /* do not enter data if using fastpath option*/
      PFWREC.PFWERRF = "Y";
    end
    if (converseVar.eventKey not enter)
      converseLib.validationFailed(190); /* must press enter when using fastpath*/
      PFWREC.PFWERRF = "Y";
    end
    ;
    if (PFWREC.PFWERRF == "Y") /* if any errors occured*/
      return; /* return*/
    else /* else*/
      COMMAREA.CATOAP = PF0JM001.CATOAP; /* allow fastpath*/
      COMMAREA.CAITEM = PF0JM001.CAITEM;
      PFWREC.PFWEOAF = "Y";
      PFWREC.PFWERRF = "Y";
      return;
    end
  end
end // end PF0J051

// process PF & PA keys
Function PF0J052()
  if (converseVar.eventKey is pf1) /* help*/
    XSPF1();
    PFWREC.PFWMSG = COMMAREA.CAMSG; /* result of bad pass*/
    PFWREC.PFWERRF = "Y"; /* set error flag*/
    return;
  end
  ;
  if (converseVar.eventKey is pf3) /* if pf3 exit key pressed*/
    COMMAREA.CATOAP = "PF0A"; /* return to main profit menu*/
    XSEXIT();
    PFWREC.PFWMSG = COMMAREA.CAMSG; /* result of bad pass*/
    PFWREC.PFWERRF = "Y"; /* set error flag*/
    return;
  end
  ;
  if (converseVar.eventKey is pf4) /* return to main system menu*/
    XSPF4();
    PFWREC.PFWMSG = COMMAREA.CAMSG; /* result of bad pass*/
    PFWREC.PFWERRF = "Y"; /* set error flag*/
    return;
  end
  ;
  if (converseVar.eventKey is pa2) /* cancel key*/
    PF0JM001.PF0JMSEL = 0; /* clear selection*/
    PFWREC.PFWMSG = " ";
    converseLib.validationFailed(189); /* pa2 pressed; screen changes aborted*/
    PFWREC.PFWERRF = "Y"; /* signal error*/
    return;
  end
  ;
  converseLib.validationFailed(1); /* fall through error - invalid pfkey*/
  PFWREC.PFWERRF = "Y"; /* signal error*/
end // end PF0J052

// process on-request sum req
Function PF0J100()
   /* -----------------------------------------------------------;*/
      /* Get current screen counts and check for summary        ;*/
      /* requests in process.                                   ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J810(); /* determine screen counts*/
  ;
  if (PF0JM001.PF0JMCRS > 0) /* if any summaries are currently in process*/
    set PF0JM001.PF0JMCRS skip, bold;
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(254); /* cannot run request; summary requests are*/
    PFWREC.PFWERRF = "Y"; /* currently in process*/
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* For up to ten summaries, select a summary to be        ;*/
      /* processed and update that summary to 'o' - in process. ;*/
      /* There are two 'in process' statuses.  'o' is the first ;*/
      /* and 'i' is the second.                                 ;*/
   /* -----------------------------------------------------------;*/
  ;
  PFEREC.PFESTIND = " "; /* not yet processed status indicator*/
  PFEREC.PFEPRIND = "1"; /* immediate priority indicator*/
  ;
  PF0J930(); /* vsumat01 select scan 3*/
  ;
  if (PFWREC.PFWERRF == "Y")
    return;
  end
  ;
  PFWREC.PFWSUB = 0; /* set subscript*/
  SQLCA.VAGen_SQLCODE = 0;
  while (SQLCA.VAGen_SQLCODE == 0 /* loop until row not found (+100 code)*/
   && PFWREC.PFWSUB < 10       /* or 10 have been processed*/
   && PFWREC.PFWERRF == "N") /* or an error has occured*/
    ;
    PF0J940(); /* vsumat01 select next 3*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && PFWREC.PFWERRF == "N"  
     && PFEREC.PFESRCNM == " " /* must not be a sum of a sum*/
     && PFEREC.PFECYCIN == "O") /* must be on-request cycle*/
      ;
       /* chg status from ' ' (not yet processed) to 'o' (in process)*/
      PFEREC.PFESTIND = "O";
      ;
      PF0J950(); /* vsumat01 update*/
      ;
      PFWREC.PFWSUB = PFWREC.PFWSUB + 1; /* increment subscript*/
    end
  end
  ;
  PF0J960(); /* vsumat01 close scan 3*/
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* Issue error message if no create summary vsumat01      ;*/
      /* rows found.                                            ;*/
   /* -----------------------------------------------------------;*/
  ;
  if (PFWREC.PFWSUB == 0)
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(289); /* no immed priority on-request sum*/
                                   /* requests exist*/
    PFWREC.PFWERRF = "Y";
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* Create a job to process all the summaries marked as    ;*/
      /* 'in process' above.                                    ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J970(); /* open the internal reader*/
  ;
  PFWREC.PFWTBLX = 1; /* set table index*/
  while (PF0JT01.PF0JTJCL[PFWTBLX] != "###END OF TABLE###"
   && PFWREC.PFWERRF == "N")
    PF0JW90.PF0JWJCL = PF0JT01.PF0JTJCL[PFWTBLX]; /* jcl card*/
    ;
    PF0J980(); /* add row to internal reader*/
    ;
    PFWREC.PFWTBLX = PFWREC.PFWTBLX + 1; /* increment table index*/
  end
  ;
  PF0J990(); /* close the internal reader*/
  ;
  converseLib.validationFailed(255);
                                   /* on-request summary requests submitted*/
end // end PF0J100

// process prior year bal req
Function PF0J110()
   /* -----------------------------------------------------------;*/
      /* Submit the trigger job.                                ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J970(); /* open the internal reader*/
  ;
  PFWREC.PFWTBLX = 1; /* set table index*/
  while (PF0JT11.PF0JTJCL[PFWTBLX] != "###END OF TABLE###"
   && PFWREC.PFWERRF == "N")
    PF0JW90.PF0JWJCL = PF0JT11.PF0JTJCL[PFWTBLX]; /* jcl card*/
    ;
    PF0J980(); /* add row to internal reader*/
    ;
    PFWREC.PFWTBLX = PFWREC.PFWTBLX + 1; /* increment table index*/
  end
  ;
  PF0J990(); /* close the internal reader*/
  ;
  converseLib.validationFailed(309);
                                   /* Budget balance report quest submitted*/
end // end PF0J110

// process weekly sum req
Function PF0J120()
   /* -----------------------------------------------------------;*/
      /* Get current screen counts and check for summary        ;*/
      /* requests in process.                                   ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J810(); /* determine screen counts*/
  ;
  if (PF0JM001.PF0JMCRS > 0) /* if any summaries are currently in*/
    set PF0JM001.PF0JMCRS skip, bold;
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(254); /* cannot run request; summary requests*/
    PFWREC.PFWERRF = "Y"; /* currently in process*/
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* For up to twenty summaries, select a summary to be     ;*/
      /* processed and update that summary to 'o' - in process. ;*/
      /* There are two 'in process' statuses.  'o' is the first ;*/
      /* and 'i' is the second.                                 ;*/
   /* -----------------------------------------------------------;*/
  ;
   /* process status ' ' summaries*/
  ;
  PFEREC.PFESTIND = " "; /* not yet processed status indicator*/
  PFEREC.PFEPRIND = "1"; /* immediate priority indicator*/
  ;
  PF0J930(); /* vsumat01 select scan 3*/
  ;
  if (PFWREC.PFWERRF == "Y")
    return;
  end
  ;
  PFWREC.PFWSUB = 0; /* set subscript*/
  SQLCA.VAGen_SQLCODE = 0;
  while (SQLCA.VAGen_SQLCODE == 0 /* loop until row not found (+100 code)*/
   && PFWREC.PFWSUB < 20       /* or 20 have been processed*/
   && PFWREC.PFWERRF == "N") /* or an error has occured*/
    ;
    PF0J940(); /* vsumat01 select next 3*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && PFWREC.PFWERRF == "N"
     && PFEREC.PFESRCNM == " ") /* must not be a sum of a sum*/
      if (PFEREC.PFECYCIN == "W") /* must be weekly summary*/
        ;
         /* chg status from ' ' (not yet processed) to 'o' (in process)*/
        PFEREC.PFESTIND = "O";
        ;
        PF0J950(); /* vsumat01 update*/
        ;
        PFWREC.PFWSUB = PFWREC.PFWSUB + 1; /* increment subscript*/
      end
    end
  end
  ;
  PF0J960(); /* vsumat01 close scan 3*/
  ;
  ;
   /* process status 'n' summaries*/
  ;
  PFEREC.PFESTIND = "N"; /* 'normal' status indicator*/
  PFEREC.PFEPRIND = "1"; /* immediate priority indicator*/
  ;
  PF0J930(); /* vsumat01 select scan 3*/
  ;
  if (PFWREC.PFWERRF == "Y")
    return;
  end
  ;
   /* don't re-set subscript PFWREC.PFWSUB*/
  SQLCA.VAGen_SQLCODE = 0;
  while (SQLCA.VAGen_SQLCODE == 0 /* loop until row not found (+100 code)*/
   && PFWREC.PFWSUB < 20       /* or 20 have been processed*/
   && PFWREC.PFWERRF == "N") /* or an error has occured*/
    ;
    PF0J940(); /* vsumat01 select next 3*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && PFWREC.PFWERRF == "N"
     && PFEREC.PFESRCNM == " ") /* must not be a sum of a sum*/
      if (PFEREC.PFECYCIN == "W") /* must be weekly summary*/
        ;
         /* chg status from ' ' (not yet processed) to 'o' (in process)*/
        PFEREC.PFESTIND = "O";
        ;
        PF0J950(); /* vsumat01 update*/
        ;
        PFWREC.PFWSUB = PFWREC.PFWSUB + 1; /* increment subscript*/
      end
    end
  end
  ;
  PF0J960(); /* vsumat01 close scan 3*/
  ;
   /* -----------------------------------------------------------;*/
      /* Issue error message if no weekly summary vsumat01      ;*/
      /* rows found.                                            ;*/
   /* -----------------------------------------------------------;*/
  ;
  if (PFWREC.PFWSUB == 0)
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(348); /* no immed priority weekly summary*/
    PFWREC.PFWERRF = "Y"; /* requests exist*/
    return;
  end
  ;
   /* -----------------------------------------------------------;*/
      /* Create a job to process all the summaries marked as    ;*/
      /* 'in process' above.                                    ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J970(); /* open the internal reader*/
  ;
  PFWREC.PFWTBLX = 1; /* set table index*/
  while (PF0JT12.PF0JTJCL[PFWTBLX] != "###END OF TABLE###"
   && PFWREC.PFWERRF == "N")
    PF0JW90.PF0JWJCL = PF0JT12.PF0JTJCL[PFWTBLX]; /* jcl card*/
    ;
    PF0J980(); /* add row to internal reader*/
    ;
    PFWREC.PFWTBLX = PFWREC.PFWTBLX + 1; /* increment table index*/
  end
  ;
  PF0J990(); /* close the internal reader*/
  ;
  converseLib.validationFailed(346); /* weekly summary request submited*/
  ;
end // end PF0J120

// process quarterly sum req
Function PF0J130()
   /* -----------------------------------------------------------;*/
      /* Get current screen counts and check for summary        ;*/
      /* requests in process.                                   ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J810(); /* determine screen counts*/
  ;
  if (PF0JM001.PF0JMCRS > 0) /* if any summaries are currently in process*/
    set PF0JM001.PF0JMCRS skip, bold;
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(254); /* cannot run request; summary requests are*/
    PFWREC.PFWERRF = "Y"; /* currently in process*/
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* For up to twenty summaries, select a summary to be     ;*/
      /* processed and update that summary to 'o' - in process. ;*/
      /* There are two 'in process' statuses.  'o' is the first ;*/
      /* and 'i' is the second.                                 ;*/
   /* -----------------------------------------------------------;*/
  ;
   /* process status ' ' summaries*/
  ;
  PFEREC.PFESTIND = " "; /* not yet processed status indicator*/
  PFEREC.PFEPRIND = "1"; /* immediate priority indicator*/
  ;
  PF0J930(); /* vsumat01 select scan 3*/
  ;
  if (PFWREC.PFWERRF == "Y")
    return;
  end
  ;
  PFWREC.PFWSUB = 0; /* set subscript*/
  SQLCA.VAGen_SQLCODE = 0;
  while (SQLCA.VAGen_SQLCODE == 0 /* loop until row not found (+100 code)*/
   && PFWREC.PFWSUB < 20       /* or 20 have been processed*/
   && PFWREC.PFWERRF == "N") /* or an error has occured*/
    ;
    PF0J940(); /* vsumat01 select next 3*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && PFWREC.PFWERRF == "N"
     && PFEREC.PFESRCNM == " ") /* must not be a sum of a sum*/
      if (PFEREC.PFECYCIN == "Q") /* must be quarterly summary*/
        ;
         /* chg status from ' ' (not yet processed) to 'o' (in process)*/
        PFEREC.PFESTIND = "O";
        ;
        PF0J950(); /* vsumat01 update*/
        ;
        PFWREC.PFWSUB = PFWREC.PFWSUB + 1; /* increment subscript*/
      end
    end
  end
  ;
  PF0J960(); /* vsumat01 close scan 3*/
  ;
  ;
   /* process status 'n' summaries*/
  ;
  PFEREC.PFESTIND = "N"; /* 'normal' status indicator*/
  PFEREC.PFEPRIND = "1"; /* immediate priority indicator*/
  ;
  PF0J930(); /* vsumat01 select scan 3*/
  ;
  if (PFWREC.PFWERRF == "Y")
    return;
  end
  ;
   /* don't re-set subscript PFWREC.PFWSUB*/
  SQLCA.VAGen_SQLCODE = 0;
  while (SQLCA.VAGen_SQLCODE == 0 /* loop until row not found (+100 code)*/
   && PFWREC.PFWSUB < 20       /* or 20 have been processed*/
   && PFWREC.PFWERRF == "N") /* or an error has occured*/
    ;
    PF0J940(); /* vsumat01 select next 3*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && PFWREC.PFWERRF == "N"
     && PFEREC.PFESRCNM == " ") /* must not be a sum of a sum*/
      if (PFEREC.PFECYCIN == "Q") /* must be quarterly summary*/
        ;
         /* chg status from ' ' (not yet processed) to 'o' (in process)*/
        PFEREC.PFESTIND = "O";
        ;
        PF0J950(); /* vsumat01 update*/
        ;
        PFWREC.PFWSUB = PFWREC.PFWSUB + 1; /* increment subscript*/
      end
    end
  end
  ;
  PF0J960(); /* vsumat01 close scan 3*/
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* Issue error message if no quarterly summary vsumat01   ;*/
      /* rows found.                                            ;*/
   /* -----------------------------------------------------------;*/
  ;
  if (PFWREC.PFWSUB == 0)
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(349); /* no immed priority quarterly summary*/
    PFWREC.PFWERRF = "Y"; /* requests exist*/
    return;
  end
  ;
   /* -----------------------------------------------------------;*/
      /* Create a job to process all the summaries marked as    ;*/
      /* 'in process' above.                                    ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J970(); /* open the internal reader*/
  ;
  PFWREC.PFWTBLX = 1; /* set table index*/
  while (PF0JT13.PF0JTJCL[PFWTBLX] != "###END OF TABLE###"
   && PFWREC.PFWERRF == "N")
    PF0JW90.PF0JWJCL = PF0JT13.PF0JTJCL[PFWTBLX]; /* jcl card*/
    ;
    PF0J980(); /* add row to internal reader*/
    ;
    PFWREC.PFWTBLX = PFWREC.PFWTBLX + 1; /* increment table index*/
  end
  ;
  PF0J990(); /* close the internal reader*/
  ;
  converseLib.validationFailed(347); /* quarterly summary request submited*/
  ;
end // end PF0J130

// process create sums from sums
Function PF0J200()
   /* -----------------------------------------------------------;*/
      /* Get current screen counts and check for summary        ;*/
      /* requests in process.                                   ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J810(); /* determine screen counts*/
  ;
  if (PF0JM001.PF0JMCRS > 0) /* if any summaries are currently in process*/
    set PF0JM001.PF0JMCRS skip, bold;
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(254); /* cannot run request; summary requests are*/
    PFWREC.PFWERRF = "Y"; /* currently in process*/
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* Select ALL the create summary from summary rows        ;*/
      /* and update each summary to 'o' - in process.           ;*/
      /* There are two 'in process' statuses.  'o' is the first ;*/
      /* and 'i' is the second.                                 ;*/
   /* -----------------------------------------------------------;*/
  ;
  PFEREC.PFESTIND = " "; /* not yet processed status indicator*/
  PFEREC.PFEPRIND = "1"; /* immediate priority indicator*/
  ;
  PF0J930(); /* vsumat01 select scan 3*/
  ;
  if (PFWREC.PFWERRF == "Y")
    return;
  end
  ;
  PFWREC.PFWSUB = 0; /* set subscript*/
  SQLCA.VAGen_SQLCODE = 0;
  while (SQLCA.VAGen_SQLCODE == 0 /* loop until row not found (+100 code)*/
   && PFWREC.PFWERRF == "N") /* or an error has occured*/
    ;
    PF0J940(); /* vsumat01 select next 3*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && PFWREC.PFWERRF == "N"  
     && PFEREC.PFESRCNM != " " /* must be a sum of a sum*/
     && PFEREC.PFECYCIN == "O") /* must be on-request cycle*/
      ;
       /* chg status from ' ' (not yet processed) to 'o' (in process)*/
      PFEREC.PFESTIND = "O";
      ;
      PF0J950(); /* vsumat01 update*/
      ;
      PFWREC.PFWSUB = PFWREC.PFWSUB + 1; /* increment subscript*/
    end
  end
  ;
  PF0J960(); /* vsumat01 close scan 3*/
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* Issue error message if no create summary from summary  ;*/
      /* vsumat01 rows found.                                   ;*/
   /* -----------------------------------------------------------;*/
  ;
  if (PFWREC.PFWSUB == 0)
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(290); /* no immed prcsing create sum from sum*/
                                   /* reqs exist*/
    PFWREC.PFWERRF = "Y";
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* Create a job to process all the summaries marked as    ;*/
      /* 'in process' above.                                    ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J970(); /* open the internal reader*/
  ;
  PFWREC.PFWTBLX = 1; /* set table index*/
  while (PF0JT02.PF0JTJCL[PFWTBLX] != "###END OF TABLE###"
   && PFWREC.PFWERRF == "N")
    PF0JW90.PF0JWJCL = PF0JT02.PF0JTJCL[PFWTBLX]; /* jcl card*/
    ;
    PF0J980(); /* add row to internal reader*/
    ;
    PFWREC.PFWTBLX = PFWREC.PFWTBLX + 1; /* increment table index*/
  end
  ;
  PF0J990(); /* close the internal reader*/
  ;
  converseLib.validationFailed(285); /* create summaries from summaries request submitted*/
end // end PF0J200

// process first close sum req
Function PF0J300()
   /* -----------------------------------------------------------;*/
      /* Get current screen counts and check for summary        ;*/
      /* requests in process.                                   ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J810(); /* determine screen counts*/
  ;
  if (PF0JM001.PF0JMCRS > 0) /* if any summaries are currently in process*/
    set PF0JM001.PF0JMCRS skip, bold;
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(254); /* cannot run request; summary requests are*/
    PFWREC.PFWERRF = "Y"; /* currently in process*/
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* For up to twenty summaries, select a summary to be     ;*/
      /* processed and update that summary to 'o' - in process. ;*/
      /* There are two 'in process' statuses.  'o' is the first ;*/
      /* and 'i' is the second.                                 ;*/
   /* -----------------------------------------------------------;*/
  ;
   /* process status ' ' summaries*/
  ;
  PFEREC.PFESTIND = " "; /* not yet processed status indicator*/
  PFEREC.PFEPRIND = "1"; /* immediate priority indicator*/
  ;
  PF0J930(); /* vsumat01 select scan 3*/
  ;
  if (PFWREC.PFWERRF == "Y")
    return;
  end
  ;
  PFWREC.PFWSUB = 0; /* set subscript*/
  SQLCA.VAGen_SQLCODE = 0;
  while (SQLCA.VAGen_SQLCODE == 0 /* loop until row not found (+100 code)*/
   && PFWREC.PFWSUB < 20       /* or 20 have been processed*/
   && PFWREC.PFWERRF == "N") /* or an error has occured*/
    ;
    PF0J940(); /* vsumat01 select next 3*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && PFWREC.PFWERRF == "N"
     && PFEREC.PFESRCNM == " ") /* must not be a sum of a sum*/
      if (PFEREC.PFECYCIN == "F") /* must be first close cycle*/
         /* chg status from ' ' (not yet processed) to 'o' (in process)*/
        PFEREC.PFESTIND = "O";
        ;
        PF0J950(); /* vsumat01 update*/
        ;
        PFWREC.PFWSUB = PFWREC.PFWSUB + 1; /* increment subscript*/
      end
    end
  end
  ;
  PF0J960(); /* vsumat01 close scan 3*/
  ;
  ;
   /* process status 'n' summaries*/
  ;
  PFEREC.PFESTIND = "N"; /* 'normal' status indicator*/
  PFEREC.PFEPRIND = "1"; /* immediate priority indicator*/
  ;
  PF0J930(); /* vsumat01 select scan 3*/
  ;
  if (PFWREC.PFWERRF == "Y")
    return;
  end
  ;
   /* don't re-set subscript PFWREC.PFWSUB*/
  SQLCA.VAGen_SQLCODE = 0;
  while (SQLCA.VAGen_SQLCODE == 0 /* loop until row not found (+100 code)*/
   && PFWREC.PFWSUB < 20       /* or 20 have been processed*/
   && PFWREC.PFWERRF == "N") /* or an error has occured*/
    ;
    PF0J940(); /* vsumat01 select next 3*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && PFWREC.PFWERRF == "N"
     && PFEREC.PFESRCNM == " ") /* must not be a sum of a sum*/
      if (PFEREC.PFECYCIN == "F") /* must be first close cycle*/
         /* chg status from ' ' (not yet processed) to 'o' (in process)*/
        PFEREC.PFESTIND = "O";
        ;
        PF0J950(); /* vsumat01 update*/
        ;
        PFWREC.PFWSUB = PFWREC.PFWSUB + 1; /* increment subscript*/
      end
    end
  end
  ;
  PF0J960(); /* vsumat01 close scan 3*/
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* Issue error message if no first close summary vsumat01 ;*/
      /* rows found.                                            ;*/
   /* -----------------------------------------------------------;*/
  ;
  if (PFWREC.PFWSUB == 0)
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(291); /* no immed priority first close*/
    PFWREC.PFWERRF = "Y"; /* requests exist*/
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* Create a job to process all the summaries marked as    ;*/
      /* 'in process' above.                                    ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J970(); /* open the internal reader*/
  ;
  PFWREC.PFWTBLX = 1; /* set table index*/
  while (PF0JT03.PF0JTJCL[PFWTBLX] != "###END OF TABLE###"
   && PFWREC.PFWERRF == "N")
    PF0JW90.PF0JWJCL = PF0JT03.PF0JTJCL[PFWTBLX]; /* jcl card*/
    ;
    PF0J980(); /* add row to internal reader*/
    ;
    PFWREC.PFWTBLX = PFWREC.PFWTBLX + 1; /* increment table index*/
  end
  ;
  PF0J990(); /* close the internal reader*/
  ;
  converseLib.validationFailed(286); /* first close requests submitted*/
end // end PF0J300

// process billing cutoff sum req
Function PF0J400()
   /* -----------------------------------------------------------;*/
      /* Get current screen counts and check for summary        ;*/
      /* requests in process.                                   ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J810(); /* determine screen counts*/
  ;
  if (PF0JM001.PF0JMCRS > 0) /* if any summaries are currently in process*/
    set PF0JM001.PF0JMCRS skip, bold;
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(254); /* cannot run request; summary requests are*/
    PFWREC.PFWERRF = "Y"; /* currently in process*/
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* For up to twenty summaries, select a summary to be     ;*/
      /* processed and update that summary to 'o' - in process. ;*/
      /* There are two 'in process' statuses.  'o' is the first ;*/
      /* and 'i' is the second.                                 ;*/
   /* -----------------------------------------------------------;*/
  ;
   /* process status ' ' summaries*/
  ;
  PFEREC.PFESTIND = " "; /* not yet processed status indicator*/
  PFEREC.PFEPRIND = "1"; /* immediate priority indicator*/
  ;
  PF0J930(); /* vsumat01 select scan 3*/
  ;
  if (PFWREC.PFWERRF == "Y")
    return;
  end
  ;
  PFWREC.PFWSUB = 0; /* set subscript*/
  SQLCA.VAGen_SQLCODE = 0;
  while (SQLCA.VAGen_SQLCODE == 0 /* loop until row not found (+100 code)*/
   && PFWREC.PFWSUB < 20       /* or 20 have been processed*/
   && PFWREC.PFWERRF == "N") /* or an error has occured*/
    ;
    PF0J940(); /* vsumat01 select next 3*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && PFWREC.PFWERRF == "N"
     && PFEREC.PFESRCNM == " ") /* must not be a sum of a sum*/
      if (PFEREC.PFECYCIN == "B") /* must be billing cutoff cycle*/
         /* chg status from ' ' (not yet processed) to 'o' (in process)*/
        PFEREC.PFESTIND = "O";
        ;
        PF0J950(); /* vsumat01 update*/
        ;
        PFWREC.PFWSUB = PFWREC.PFWSUB + 1; /* increment subscript*/
      end
    end
  end
  ;
  PF0J960(); /* vsumat01 close scan 3*/
  ;
  ;
   /* process status 'n' summaries*/
  ;
  PFEREC.PFESTIND = "N"; /* 'normal' status indicator*/
  PFEREC.PFEPRIND = "1"; /* immediate priority indicator*/
  ;
  PF0J930(); /* vsumat01 select scan 3*/
  ;
  if (PFWREC.PFWERRF == "Y")
    return;
  end
  ;
   /* don't reset subscript PFWREC.PFWSUB because only 20*/
   /* TOTAL may be processed.*/
  ;
  SQLCA.VAGen_SQLCODE = 0;
  while (SQLCA.VAGen_SQLCODE == 0 /* loop until row not found (+100 code)*/
   && PFWREC.PFWSUB < 20       /* or 20 have been processed*/
   && PFWREC.PFWERRF == "N") /* or an error has occured*/
    ;
    PF0J940(); /* vsumat01 select next 3*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && PFWREC.PFWERRF == "N"
     && PFEREC.PFESRCNM == " ") /* must not be a sum of a sum*/
      if (PFEREC.PFECYCIN == "B") /* must be billing cutoff cycle*/
         /* chg status from ' ' (not yet processed) to 'o' (in process)*/
        PFEREC.PFESTIND = "O";
        ;
        PF0J950(); /* vsumat01 update*/
        ;
        PFWREC.PFWSUB = PFWREC.PFWSUB + 1; /* increment subscript*/
      end
    end
  end
  ;
  PF0J960(); /* vsumat01 close scan 3*/
  ;
  ;
   /* -----------------------------------------------------------;*/
     /* Issue error message if no billing cutoff summary        ;*/
     /* vsumat01 rows found.                                    ;*/
   /* -----------------------------------------------------------;*/
  ;
  if (PFWREC.PFWSUB == 0)
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(292); /* no immed priority billing cutoff*/
    PFWREC.PFWERRF = "Y"; /* requests exist*/
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* Create a job to process all the summaries marked as    ;*/
      /* 'in process' above.                                    ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J970(); /* open the internal reader*/
  ;
  PFWREC.PFWTBLX = 1; /* set table index*/
  while (PF0JT04.PF0JTJCL[PFWTBLX] != "###END OF TABLE###"
   && PFWREC.PFWERRF == "N")
    PF0JW90.PF0JWJCL = PF0JT04.PF0JTJCL[PFWTBLX]; /* jcl card*/
    ;
    PF0J980(); /* add row to internal reader*/
    ;
    PFWREC.PFWTBLX = PFWREC.PFWTBLX + 1; /* increment table index*/
  end
  ;
  PF0J990(); /* close the internal reader*/
  ;
  converseLib.validationFailed(287); /* billing cutoff requests submitted*/
end // end PF0J400

// process final close sum req
Function PF0J500()
   /* -----------------------------------------------------------;*/
      /* Get current screen counts and check for summary        ;*/
      /* requests in process.                                   ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J810(); /* determine screen counts*/
  ;
  if (PF0JM001.PF0JMCRS > 0) /* if any summaries are currently in process*/
    set PF0JM001.PF0JMCRS skip, bold;
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(254); /* cannot run request; summary requests are*/
    PFWREC.PFWERRF = "Y"; /* currently in process*/
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* For up to twenty summaries, select a summary to be     ;*/
      /* processed and update that summary to 'o' - in process. ;*/
      /* There are two 'in process' statuses.  'o' is the first ;*/
      /* and 'i' is the second.                                 ;*/
   /* -----------------------------------------------------------;*/
  ;
   /* process status ' ' summaries*/
  ;
  PFEREC.PFESTIND = " "; /* not yet processed status indicator*/
  PFEREC.PFEPRIND = "1"; /* immediate priority indicator*/
  ;
  PF0J930(); /* vsumat01 select scan 3*/
  ;
  if (PFWREC.PFWERRF == "Y")
    return;
  end
  ;
  PFWREC.PFWSUB = 0; /* set subscript*/
  SQLCA.VAGen_SQLCODE = 0;
  while (SQLCA.VAGen_SQLCODE == 0 /* loop until row not found (+100 code)*/
   && PFWREC.PFWSUB < 20       /* or 20 have been processed*/
   && PFWREC.PFWERRF == "N") /* or an error has occured*/
    ;
    PF0J940(); /* vsumat01 select next 3*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && PFWREC.PFWERRF == "N"
     && PFEREC.PFESRCNM == " ") /* must not be a sum of a sum*/
      if (PFEREC.PFECYCIN == "P") /* must be final (pf) close cycle*/
         /* chg status from ' ' (not yet processed) to 'o' (in process)*/
        PFEREC.PFESTIND = "O";
        ;
        PF0J950(); /* vsumat01 update*/
        ;
        PFWREC.PFWSUB = PFWREC.PFWSUB + 1; /* increment subscript*/
      end
    end
  end
  ;
  PF0J960(); /* vsumat01 close scan 3*/
  ;
  ;
   /* process status 'n' summaries*/
  ;
  PFEREC.PFESTIND = "N"; /* 'normal' status indicator*/
  PFEREC.PFEPRIND = "1"; /* immediate priority indicator*/
  ;
  PF0J930(); /* vsumat01 select scan 3*/
  ;
  if (PFWREC.PFWERRF == "Y")
    return;
  end
  ;
   /* don't reset subscript PFWREC.PFWSUB*/
  SQLCA.VAGen_SQLCODE = 0;
  while (SQLCA.VAGen_SQLCODE == 0 /* loop until row not found (+100 code)*/
   && PFWREC.PFWSUB < 20       /* or 20 have been processed*/
   && PFWREC.PFWERRF == "N") /* or an error has occured*/
    ;
    PF0J940(); /* vsumat01 select next 3*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && PFWREC.PFWERRF == "N"
     && PFEREC.PFESRCNM == " ") /* must not be a sum of a sum*/
      if (PFEREC.PFECYCIN == "P") /* must be final (pf) close cycle*/
         /* chg status from ' ' (not yet processed) to 'o' (in process)*/
        PFEREC.PFESTIND = "O";
        ;
        PF0J950(); /* vsumat01 update*/
        ;
        PFWREC.PFWSUB = PFWREC.PFWSUB + 1; /* increment subscript*/
      end
    end
  end
  ;
  PF0J960(); /* vsumat01 close scan 3*/
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* Issue error message if no final close summary vsumat01 ;*/
      /* rows found.                                            ;*/
   /* -----------------------------------------------------------;*/
  ;
  if (PFWREC.PFWSUB == 0)
    set PF0JM001.PF0JMSEL cursor, bold;
    converseLib.validationFailed(293); /* no immed priority third close or all*/
    PFWREC.PFWERRF = "Y"; /* close requests exist*/
    return;
  end
  ;
  ;
   /* -----------------------------------------------------------;*/
      /* Create a job to process all the summaries marked as    ;*/
      /* 'in process' above.                                    ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J970(); /* open the internal reader*/
  ;
  PFWREC.PFWTBLX = 1; /* set table index*/
  while (PF0JT05.PF0JTJCL[PFWTBLX] != "###END OF TABLE###"
   && PFWREC.PFWERRF == "N")
    PF0JW90.PF0JWJCL = PF0JT05.PF0JTJCL[PFWTBLX]; /* jcl card*/
    ;
    PF0J980(); /* add row to internal reader*/
    ;
    PFWREC.PFWTBLX = PFWREC.PFWTBLX + 1; /* increment table index*/
  end
  ;
  PF0J990(); /* close the internal reader*/
  ;
  converseLib.validationFailed(288); /* final close requests submitted*/
end // end PF0J500

// process print summaries req
Function PF0J600()
   /* -----------------------------------------------------------;*/
      /* Submit the trigger job.                                ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J970(); /* open the internal reader*/
  ;
  PFWREC.PFWTBLX = 1; /* set table index*/
  while (PF0JT06.PF0JTJCL[PFWTBLX] != "###END OF TABLE###"
   && PFWREC.PFWERRF == "N")
    PF0JW90.PF0JWJCL = PF0JT06.PF0JTJCL[PFWTBLX]; /* jcl card*/
    ;
    PF0J980(); /* add row to internal reader*/
    ;
    PFWREC.PFWTBLX = PFWREC.PFWTBLX + 1; /* increment table index*/
  end
  ;
  PF0J990(); /* close the internal reader*/
  ;
  converseLib.validationFailed(256); /* print summaries request submitted*/
end // end PF0J600

// process xbc brand bal report
Function PF0J700()
   /* -----------------------------------------------------------;*/
      /* Submit the trigger job.                                ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J970(); /* open the internal reader*/
  ;
  PFWREC.PFWTBLX = 1; /* set table index*/
  while (PF0JT07.PF0JTJCL[PFWTBLX] != "###END OF TABLE###"
   && PFWREC.PFWERRF == "N")
    PF0JW90.PF0JWJCL = PF0JT07.PF0JTJCL[PFWTBLX]; /* jcl card*/
    ;
    PF0J980(); /* add row to internal reader*/
    ;
    PFWREC.PFWTBLX = PFWREC.PFWTBLX + 1; /* increment table index*/
  end
  ;
  PF0J990(); /* close the internal reader*/
  ;
  converseLib.validationFailed(257);
                                   /* brand bal. rept request submitted*/
end // end PF0J700

// process GPC bal report
Function PF0J710()
   /* -----------------------------------------------------------;*/
      /* Submit the trigger job.                                ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J970(); /* open the internal reader*/
  ;
  PFWREC.PFWTBLX = 1; /* set table index*/
  while (PF0JT14.PF0JTJCL[PFWTBLX] != "###END OF TABLE###"
   && PFWREC.PFWERRF == "N")
    PF0JW90.PF0JWJCL = PF0JT14.PF0JTJCL[PFWTBLX]; /* jcl card*/
    ;
    PF0J980(); /* add row to internal reader*/
    ;
    PFWREC.PFWTBLX = PFWREC.PFWTBLX + 1; /* increment table index*/
  end
  ;
  PF0J990(); /* close the internal reader*/
  ;
  converseLib.validationFailed(311);
                                   /* GPC balance rept request submitted*/
end // end PF0J710

// process gpc yis bal report
Function PF0J800()
   /* -----------------------------------------------------------;*/
      /* Submit the trigger job.                                ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J970(); /* open the internal reader*/
  ;
  PFWREC.PFWTBLX = 1; /* set table index*/
  while (PF0JT08.PF0JTJCL[PFWTBLX] != "###END OF TABLE###"
   && PFWREC.PFWERRF == "N")
    PF0JW90.PF0JWJCL = PF0JT08.PF0JTJCL[PFWTBLX]; /* jcl card*/
    ;
    PF0J980(); /* add row to internal reader*/
    ;
    PFWREC.PFWTBLX = PFWREC.PFWTBLX + 1; /* increment table index*/
  end
  ;
  PF0J990(); /* close the internal reader*/
  ;
  converseLib.validationFailed(306);
                                   /* Cur Dtl balance rpt request submitted*/
end // end PF0J800

// determine screen counts
Function PF0J810()
   /* -----------------------------------------------------------;*/
     /* Call vsumat01 i/o module to count the number of         ;*/
     /* summaries currently in process, set up for immediate    ;*/
     /* processing, and set up for overnight processing.        ;*/
     /* Each select next 2 call will return a particular unique ;*/
     /* combination of values for the status and priority       ;*/
     /* indicator fields, and a count of how many rows have     ;*/
     /* that combination of fields.  The counts are added to    ;*/
     /* the appropriate screen count.                           ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0JM001.PF0JMCRS = 0; /* currently processing summaries*/
  PF0JM001.PF0JMIMS = 0; /* immediate processing summaries*/
  PF0JM001.PF0JMOVS = 0; /* overnight processing summaries*/
  ;
  set PF0JW01 empty;
  PF0JW01.PF0JWAC1 = " "; /* status ind = not yet processed*/
  PF0JW01.PF0JWAC2 = "O"; /* status ind = initial in process*/
  PF0JW01.PF0JWAC3 = "I"; /* status ind = in process*/
  ;
  PF0JW01.PF0JWPR1 = "1"; /* priority ind = immediate priority*/
  PF0JW01.PF0JWPR2 = "2"; /* priority ind = overnight priority*/
  PF0JW01.PF0JWPR3 = "2"; /* priority ind = overnight priority*/
  ;
  PF0JW01.PF0JWSQL = "S2"; /* select scan 2 sql i/o task*/
  ;
  PF0J910(); /* vsumat01 i/o*/
  ;
  while (SQLCA.VAGen_SQLCODE == 0)
    PF0JW01.PF0JWSQL = "N2"; /* select next 2 sql i/o task*/
    ;
    PF0J910(); /* vsumat01 i/o*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && PF0JW01.PF0JWIND >= 0) /* count return code indicator*/
      if (PFEREC.PFESTIND == "O" /* initial in process status*/
       || PFEREC.PFESTIND == "I") /* in process status*/
        PF0JM001.PF0JMCRS = PF0JM001.PF0JMCRS + PF0JW01.PF0JWCNT;
      end
      if (PFEREC.PFESTIND == " " /* not yet processed status*/
       && PFEREC.PFEPRIND == "1") /* immediate priority*/
        PF0JM001.PF0JMIMS = PF0JM001.PF0JMIMS + PF0JW01.PF0JWCNT;
      end
      if (PFEREC.PFESTIND == " " /* not yet processed status*/
       && PFEREC.PFEPRIND == "2") /* overnight priority*/
        PF0JM001.PF0JMOVS = PF0JM001.PF0JMOVS + PF0JW01.PF0JWCNT;
      end
    end
  end
  ;
  PF0JW01.PF0JWSQL = "C2"; /* close scan 2 sql i/o task*/
  ;
  PF0J910(); /* vsumat01 i/o*/
end // end PF0J810

// process prior year bal req
Function PF0J900()
   /* -----------------------------------------------------------;*/
      /* Submit the trigger job.                                ;*/
   /* -----------------------------------------------------------;*/
  ;
  PF0J970(); /* open the internal reader*/
  ;
  PFWREC.PFWTBLX = 1; /* set table index*/
  while (PF0JT09.PF0JTJCL[PFWTBLX] != "###END OF TABLE###"
   && PFWREC.PFWERRF == "N")
    PF0JW90.PF0JWJCL = PF0JT09.PF0JTJCL[PFWTBLX]; /* jcl card*/
    ;
    PF0J980(); /* add row to internal reader*/
    ;
    PFWREC.PFWTBLX = PFWREC.PFWTBLX + 1; /* increment table index*/
  end
  ;
  PF0J990(); /* close the internal reader*/
  ;
  converseLib.validationFailed(352); /* Prior year balance request submitted*/
end // end PF0J900

// vsumat01 select scan 2
Function PF0J910()
   /* -----------------------------------------------------------;*/
     /* Call vsumat01 i/o module with the parameters passed     ;*/
     /* in the pf0jw01 working storage area.                    ;*/
   /* -----------------------------------------------------------;*/
  ;
  call "IO2770" (PF0JW01, SQLCA, PFEREC) {isNoRefresh = yes, isExternal = yes};
                                   /* vsumat01 select scan 2*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* if call ok*/
     /* this is okay*/
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* if row not found*/
       /* this is okay - handle later*/
    else
      if (SQLCA.VAGen_SQLCODE == -911) /* if table page busy*/
        converseLib.validationFailed(114); /* data base was busy, please retry*/
        PFWREC.PFWERRF = "Y";
      else /* fatal db2 error, transfer to ta*/
        TA1REC.TA1LOCAT[2] = " ";
        PFWREC.PFWHKEY = PF0JW01.PF0JWGRP;
        PFWREC.PFWCPROC = "PF0J910"; /* pass calling process*/
        TA1REC.TA1LOCAT[4] = "IO2770"; /* pass i/o module name*/
        TA1REC.TA1DBASE = "DPROFT";
        TA1REC.TA1TBLVU = "VSUMAT01";
        XPPF010(); /* abend routine*/
      end
    end
  end
end // end PF0J910

// vsumat01 select scan 3
Function PF0J930()
  call "IO2770" ("S3", SQLCA, PFEREC) {isNoRefresh = yes, isExternal = yes}; /* vsumat01 select scan 3*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* if call ok*/
     /* this is okay*/
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* if row not found*/
       /* this is okay - handle later*/
    else
      if (SQLCA.VAGen_SQLCODE == -911) /* if table page busy*/
        converseLib.validationFailed(114); /* data base was busy, please retry*/
        PFWREC.PFWERRF = "Y";
      else /* fatal db2 error, transfer to ta*/
        TA1REC.TA1LOCAT[2] = " ";
        PFWREC.PFWHKEY = PFEREC.PFESTIND;
        PFWREC.PFWCPROC = "PF0J930"; /* pass calling process*/
        TA1REC.TA1LOCAT[4] = "IO2770"; /* pass i/o module name*/
        TA1REC.TA1DBASE = "DPROFT";
        TA1REC.TA1TBLVU = "VSUMAT01";
        XPPF010(); /* abend routine*/
      end
    end
  end
end // end PF0J930

// vsumat01 select next 3
Function PF0J940()
  call "IO2770" ("N3", SQLCA, PFEREC) {isNoRefresh = yes, isExternal = yes}; /* vsumat01 select next 3*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* if call ok*/
     /* this is okay*/
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* if row not found*/
       /* this is okay - handle later*/
    else
      if (SQLCA.VAGen_SQLCODE == -911) /* if table page busy*/
        converseLib.validationFailed(114); /* data base was busy, please retry*/
        PFWREC.PFWERRF = "Y";
      else /* fatal db2 error, transfer to ta*/
        TA1REC.TA1LOCAT[2] = " ";
        PFWREC.PFWHKEY = PFEREC.PFESTIND;
        PFWREC.PFWCPROC = "PF0J940"; /* pass calling process*/
        TA1REC.TA1LOCAT[4] = "IO2770"; /* pass i/o module name*/
        TA1REC.TA1DBASE = "DPROFT";
        TA1REC.TA1TBLVU = "VSUMAT01";
        XPPF010(); /* abend routine*/
      end
    end
  end
end // end PF0J940

// vsumat01 update
Function PF0J950()
  XPPF030(); /* ta0040 date/time call routine*/
  ;
  PFEREC.ZZZCHGDT = TA2REC.TA2GRGGN; /* move system date*/
  PFEREC.ZZZCHGTM = TA2REC.TA2TIMHM; /* move system time*/
  ;
  call "IO2770" ("U ", SQLCA, PFEREC) {isNoRefresh = yes, isExternal = yes}; /* vsumat01 update*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* if call ok*/
     /* this is okay*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* if table page busy*/
      converseLib.validationFailed(114); /* data base was busy, please retry*/
      PFWREC.PFWERRF = "Y";
    else /* fatal db2 error, transfer to ta*/
      TA1REC.TA1LOCAT[2] = " ";
      PFWREC.PFWHKEY = PFEREC.PFESUMNM;
      PFWREC.PFWCPROC = "PF0J950"; /* pass calling process*/
      TA1REC.TA1LOCAT[4] = "IO2770"; /* pass i/o module name*/
      TA1REC.TA1DBASE = "DPROFT";
      TA1REC.TA1TBLVU = "VSUMAT01";
      XPPF010(); /* abend routine*/
    end
  end
end // end PF0J950

// vsumat01 close scan 3
Function PF0J960()
  call "IO2770" ("C3", SQLCA, PFEREC) {isNoRefresh = yes, isExternal = yes}; /* vsumat01 close scan 3*/
  ;
  if (SQLCA.VAGen_SQLCODE == +0) /* if call ok*/
     /* this is okay*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* if table page busy*/
      converseLib.validationFailed(114); /* data base was busy, please retry*/
      PFWREC.PFWERRF = "Y";
    else /* fatal db2 error, transfer to ta*/
      TA1REC.TA1LOCAT[2] = " ";
      PFWREC.PFWHKEY = PFEREC.PFESTIND;
      PFWREC.PFWCPROC = "PF0J960"; /* pass calling process*/
      TA1REC.TA1LOCAT[4] = "IO2770"; /* pass i/o module name*/
      TA1REC.TA1DBASE = "DPROFT";
      TA1REC.TA1TBLVU = "VSUMAT01";
      XPPF010(); /* abend routine*/
    end
  end
end // end PF0J960

// open the internal reader
Function PF0J970()
   /* -----------------------------------------------------------;*/
     /* Enque the Internal Reader queue for job submission.     ;*/
   /* -----------------------------------------------------------;*/
  ;
  set UT2REC empty; /* Initialize subroutine parameters*/
  ;
  UT2REC.UT2FUNCT = "E"; /* Subroutine function*/
  UT2REC.UT2RSCLN = 8; /* Resource identification length*/
  UT2REC.UT2RSCID = "INTR"; /* Resource identification*/
  ;
  call "UT0220" (UT2REC) {isNoRefresh = yes, isExternal = yes}; /* Enque reader*/
  ;
  if (UT2REC.UT2RETCD != 0) /* Non-zero return code*/
    converseLib.validationFailed(114); /* database was busy; please retry*/
    PFWREC.PFWERRF = "Y";
  end
end // end PF0J970

// add row to internal reader
Function PF0J980()
  try
    add PF0JW90 ;
  end
  ;
  if (sysVar.errorCode != "00000000") /* Non-zero return code*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "PF0J980 "; /* Process name*/
    TA1REC.TA1LOC = "WRITE JCL TO INTERNAL READER";
    TA1REC.TA1MAP = sysVar.errorCode; /* Return code*/
    SQLCA.SQLCAREC = PF0JW90.PF0JWJCL; /* Error information*/
    ;
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    ;
    converseLib.validationFailed(114); /* Indicate system error*/
    PFWREC.PFWERRF = "Y";
  end
end // end PF0J980

// close the internal reader
Function PF0J990()
   /* -----------------------------------------------------------;*/
     /* Deque the Internal Reader queue after job submission.   ;*/
   /* -----------------------------------------------------------;*/
  set UT2REC empty; /* Initialize subroutine parameters*/
  ;
  UT2REC.UT2FUNCT = "D"; /* Subroutine function*/
  UT2REC.UT2RSCLN = 8; /* Resource identification length*/
  UT2REC.UT2RSCID = "INTR"; /* Resource identification*/
  ;
  call "UT0220" (UT2REC) {isNoRefresh = yes, isExternal = yes}; /* Enque reader*/
  ;
  if (UT2REC.UT2RETCD != 0) /* Non-zero return code*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1PGMNM = "PF0J990"; /* Process name*/
    TA1REC.TA1LOC = "DEQUE THE SYSTEM INTERNAL READER";
    SQLCA.SQLCAREC = UT2REC.UT2GRPLV; /* Error information*/
    ;
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    ;
    converseLib.validationFailed(114); /* database was busy; please retry*/
    PFWREC.PFWERRF = "Y";
  end
end // end PF0J990

//*** RECORD=PF0JW01 ****
// This record contains the working storage area that is
// passed to and from the DPROFT.VSUMAT01 io module (IO2770).
// It is passed in addition to PFEREC.  It contains the IO
// task (eg: 's2', 'n2, 'c2'), the search keys, and the
// returned row count.
// ***********************
Record PF0JW01 type basicRecord
  5 PF0JWGRP PF0JWGRP ; 
    10 PF0JWSQL PF0JWSQL ; 
    10 PF0JWAC1 PF0JWAC1 ; 
    10 PF0JWAC2 PF0JWAC2 ; 
    10 PF0JWAC3 PF0JWAC3 ; 
    10 PF0JWPR1 PF0JWPR1 ; 
    10 PF0JWPR2 PF0JWPR2 ; 
    10 PF0JWPR3 PF0JWPR3 ; 
    10 PF0JWCNT PF0JWCNT ; 
    10 PF0JWIND PF0JWIND ; 
end // end PF0JW01

//*** RECORD=PF0JW90 ****
// System internal reader queue (INTR) record definition.
// ***********************
Record PF0JW90 type serialRecord  {
  fileName = "INTR"
  }
  10 PF0JWJCL PF0JWJCL ; 
end // end PF0JW90

// activity status ind key
DataItem PF0JWAC1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// activity status ind key
DataItem PF0JWAC2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// activity status ind key
DataItem PF0JWAC3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// returned row count
DataItem PF0JWCNT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record group level
DataItem PF0JWGRP char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// indicator for db item
DataItem PF0JWIND smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// jcl card image for reader
DataItem PF0JWJCL char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// priority indicator key
DataItem PF0JWPR1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// priority indicator key
DataItem PF0JWPR2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// priority indicator key
DataItem PF0JWPR3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sql selection - IO task
DataItem PF0JWSQL char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

