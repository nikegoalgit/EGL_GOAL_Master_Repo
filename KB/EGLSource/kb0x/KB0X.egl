package kb0x;

import corpcom3.XPKB002;
import corpcom3.XPKB031;
import corpcom3.XPKB050;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpy2.YSBTBL;
import kb.common.*;
import ku.common.KUGREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
//*** PROGRAM=KB0X ****
// KB0X - Temporary Screen Used to Add YSB codes to BXREF.
// *********************
Program KB0X type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "KB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KBKREC KBKREC; // record
  KBWREC KBWREC; // record
  KBXREC KBXREC; // record
  KUGREC KUGREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use YSBTBL; // table
  use KB0XM.KB0XM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KB0X-001: KB0X-001();
    goto KB0X-005;
    KB0X-005: KB0X-005();
    goto KB0X-005;
    KB0X-010: KB0X-010();
    KB0X-050: KB0X-050();
    KB0X-070: KB0X-070();
    KB0X-080: KB0X-080();
  end // end main
end // end KB0X

// Add YSB - Initialize
Function KB0X-001()


  XSENTRY(); /* ; check security*/
  XSSEGTR(); /* ; get seg tranid*/

  set KB0XM001 initial; /* ; init map*/

  XPKB031(); /* ; get current date*/

  XPKB002(); /* ; initialize kbwrec*/



end // end KB0X-001

// Add YSB - Mainline
Function KB0X-005()

  KB0X-080(); /* ; send/receive kb0xM001*/

  KBWREC.KBWERRFL = "N"; /* ; reset error flag*/

  KB0X-010(); /* ; edit pfkeys*/

  if (KBWREC.KBWERRFL == "N") /* ; no errors exist*/

    KB0X-050(); /* ; edit map*/

    if (KBWREC.KBWERRFL == "N") /* ; still no errors*/
      KB0X-070(); /* ; update routine*/
    end
  end



end // end KB0X-005

// Edit PFKEYS
Function KB0X-010()


  if (converseVar.eventKey is pf3 /* ; prev screen requested*/
   || converseVar.eventKey is pf4) /* ; buyer menu*/
    COMMAREA.CATOAP = "KB0M"; /* ; xfer to buyer menu*/

    XSEXIT();

    KB0XM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    COMMAREA.CAMSG = " ";
  else
    if (converseVar.eventKey is enter)
      /* next sentence*/
    else
      converseLib.validationFailed(7); /* ; invalid pfkey*/
      KBWREC.KBWERRFL = "Y"; /* ; set error flag on*/
    end
  end


end // end KB0X-010

// Edit KB0XM001
Function KB0X-050()


  if (KB0XM001.YSBCD == " ") /* ; ysb not entered*/
    KBWREC.KBWERRFL = "Y"; /* ; set error flag on*/
    set KB0XM001.YSBCD bold, cursor;
    converseLib.validationFailed(180); /* ; ysb is required*/
  end

  if (KB0XM001.KUCCOID == 0) /* ; company not entered*/
    KBWREC.KBWERRFL = "Y"; /* ; set error flag on*/
    set KB0XM001.KUCCOID bold, cursor;
    converseLib.validationFailed(30); /* ; company is required*/
  end

  if (KB0XM001.KBABUYID == 0) /* ; buyer not entered*/
    KBWREC.KBWERRFL = "Y"; /* ; set error flag on*/
    set KB0XM001.KBABUYID bold, cursor;
    converseLib.validationFailed(65); /* ; buyer id is required*/
  end

  if (KBWREC.KBWERRFL == "N") /* no errors*/
    if (KB0XM001.YSBCD in YSBTBL.YSBCD)
      KB0XM001.YSBDESC = YSBTBL.YSBDESC[sysVar.arrayIndex]; /* get ysb desc*/
    else
      KB0XM001.YSBDESC = "UNKNOWN";
    end
  end

end // end KB0X-050

// Update Routine
Function KB0X-070()


  set KBXREC empty;
  set KBKREC empty;
  set KUGREC empty;

   /* set up parameters for pass record*/

  KBKREC.KBK-TASK = "U "; /* ; set io-pass task*/

  KBXREC.KBABUYID = KB0XM001.KBABUYID; /* ; set buyer id*/

  KBXREC.KUCCOID = KB0XM001.KUCCOID; /* set company id*/
  KBXREC.KUMSTRID = KB0XM001.KUMSTRID; /* set store id*/
  KBXREC.XNXCD = KB0XM001.XNXCD; /* set department id*/
  KBXREC.YSBCD = KB0XM001.YSBCD; /* ; set ysb code*/


  XPKB050(); /* call kb1000*/

  if (SQLCA.VAGen_SQLCODE == 0) /* ; good update*/
    converseLib.validationFailed(88);
    set KB0XM001.KBABUYID cursor;
  else
    converseLib.validationFailed(181); /* ; unsuccessful update*/
    set KB0XM001.KBABUYID cursor, bold;
  end


end // end KB0X-070

// Send/Receive KB0XM001
Function KB0X-080()
  converse KB0XM001 ;

  KBWREC.XXXMAPNM = "KB0XM001";

  set KB0XM001.KBABUYID cursor, normal;
  set KB0XM001.KUCCOID normal;
  set KB0XM001.KUMSTRID normal;
  set KB0XM001.XNXCD normal;
  set KB0XM001.YSBCD normal;

end // end KB0X-080

