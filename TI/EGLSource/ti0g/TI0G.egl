package ti0g;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import sy.common.*;
import ta.common.*;
import ti.common.*;
import vv.common.*;
//*** PROGRAM=TI0G ****
// This application allows a user to inquire on rows
// in a DB2 table.
// 
// The application will fill the screen initially with all rows
// from the table.  The user may then scroll within the
// selected
// set.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      10/08/96  jbuch1  New application.
//          01/22/97  bchan1  Fixed zz_sdt on insert row.
// *********************
Program TI0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TI00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TI0GW00 TI0GW00; // record
  TI0GW01 TI0GW01; // record
  TI0GW02 TI0GW02; // record
  TI0GWCA1 TI0GWCA1; // record
  TI0GWM01 TI0GWM01; // record
  TIWREC TIWREC; // record
  VTOPCD01 VTOPCD01; // record
  VTOXCD01 VTOXCD01; // record
  VTSPXM01 VTSPXM01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use TI0GM.TI0GM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTI-00000: XPTI-00000();
    if (COMMAREA.CAFRMSYS == "GD")

      TI0GWCA1.TI0GWCA1-REC = COMMAREA.CA-USER-WORKAREA-2K-B;

      TI0GW00.TI0GW00-REC = TI0GWCA1.TI0GWCA1-TI0GW00;

      TI0GW01.TI0GW01-REC = TI0GWCA1.TI0GWCA1-TI0GW01;

      TI0GW02.TI0GW02-REC = TI0GWCA1.TI0GWCA1-TI0GW02;

      TI0GWM01.TI0GWM01-REC = TI0GWCA1.TI0GWCA1-TI0GWM01;

      TI0GM001.XXX-MSG-LOC-ID = TI0GWM01.XXX-MSG-LOC-ID;

      TI0GM001.XXX-CURR-DT = TI0GWM01.XXX-CURR-DT;

      TI0GM001.XXX-CURR-PAGE-DESC = TI0GWM01.XXX-CURR-PAGE-DESC;

      TI0GM001.XXX-CURR-PAGE-NBR = TI0GWM01.XXX-CURR-PAGE-NBR;

      TI0GM001.XXX-HI-PAGE-DESC = TI0GWM01.XXX-HI-PAGE-DESC;

      TI0GM001.XXX-HI-PAGE-NBR = TI0GWM01.XXX-HI-PAGE-NBR;

      TI0GW00.XXX-INX-FLD-NBR = 1;

      TI0GW00.XXX-INX-LMT-NBR = 13;

      while (TI0GW00.XXX-INX-FLD-NBR <= TI0GW00.XXX-INX-LMT-NBR)

        TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TI0GWM01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];

        TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] = TI0GWM01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR];

        TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] = TI0GWM01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR];

        if (TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] > " "
         || TI0GW01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] > " "
         || TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] > " "
         || TI0GW01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] > " "
         || TI0GW01.XXX-STAT[XXX-INX-FLD-NBR] > " ")

          set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] protect, noHighLight, blue;
          set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] protect, noHighLight, blue;
        else

          set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] initialAttributes;

          set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] initialAttributes;

        end

        TI0GM001.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] = TI0GWM01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR];

        TI0GM001.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] = TI0GWM01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR];

        TI0GM001.XXX-STAT[XXX-INX-FLD-NBR] = TI0GWM01.XXX-STAT[XXX-INX-FLD-NBR];

        TI0GW00.XXX-INX-FLD-NBR = TI0GW00.XXX-INX-FLD-NBR + 1;

      end

      TI0GW00.XXX-INX-LMT-NBR = 12;

      TI0GM001.CATOAP = TI0GWM01.CATOAP;

      TI0GM001.CAITEM = TI0GWM01.CAITEM;

      TIWREC.CAUSERA = COMMAREA.CAUSERA;

      TIWREC.XXX-MSG-LOC-ID = TI0GWCA1.XXX-MSG-LOC-ID;

      TIWREC.XXX-MSG-NBR = TI0GWCA1.XXX-MSG-NBR;

      TIWREC.TI-CUTK-XMIT-CD = TI0GWCA1.TI-CUTK-XMIT-CD;

      TI0GW00.XXX-RQT-DATA-FL = "N";

      TI0GW00.XXX-MAP-FMAT-FL = "N";

    else

      set TI0GM001 initial;
      set TIWREC empty;
      set TI0GW00 empty; /* M002 display storage*/
      set TI0GW01 empty; /* M002 display storage*/
      set TI0GW02 empty; /* M002 display storage*/
      set SQLCA empty; /* SQL communication area*/
      set TAEREC empty; /* Error diagnosis information*/
      set TA1REC empty; /* Error diagnosis parameters*/
      set TA5REC empty; /* Temporary storage parameters*/
      set XX0XW01 empty; /* Date/time subroutine parameters*/

      TI0GW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
      TI0GW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

      TI0GW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

      TI0GW00.XXX-TEMP-STG-LNTH = 1024; /* Temporary storage length*/
      TI0GW00.XXX-INX-LMT-NBR = 12; /* Number of lines on a page*/

    end

    goto TI0G-00000; /* Converse the main process*/
    TI0G-00000: TI0G-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TI0G-00000; /* Converse the main process*/


  end // end main
end // end TI0G

// Determine which map to display
Function TI0G-00000()
  /* -----------------------------------------------------*/
  /* drive the application*/
  /* -----------------------------------------------------*/

  TI0G-10000(); /* Display map 1*/

  exit stack; /* Exit to display map*/


end // end TI0G-00000

// Main process to display a map
Function TI0G-10000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TI0G-11000(); /* Obtain the data to display*/

  TI0G-12000(); /* Format and display the map*/

  TI0G-13000(); /* Check attention identifier*/

  TI0G-14000(); /* Verify the entered data*/

  TI0G-15000(); /* Process valid input request*/


end // end TI0G-10000

// Obtain the data to display
Function TI0G-11000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (TI0GW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* ------------------------------------------------------------*/

  if (TIWREC.XXX-MSG-NBR == 0) /* No message to display*/
    TI0GW00.XXX-CURR-PAGE-NBR = 1; /* Page number to display*/
  end

   /* ------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key fields.*/
   /* ------------------------------------------------------------*/

  TI0GS-TA0050-P(); /* Purge any temporary storage*/

  TI0GW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/


   /* ------------------------------------------------------------*/
   /* Select the information to display in the map heading.*/
   /* ------------------------------------------------------------*/


   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* ------------------------------------------------------------*/

  /* MOVE 'AD' TO VTSPXM01.TI-CUTK-SPLR-CD;*/
  TI0GS-VTSPXM01-SS(); /* Select set and open cursor*/

   /* ------------------------------------------------------------*/
   /* Fetch and format the data into pages until end of cursor.*/
   /* ------------------------------------------------------------*/

  TI0GW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

  TI0GW00.TI0GW-EOF-FL = "N"; /* End of cursor flag*/

  while (TI0GW00.TI0GW-EOF-FL == "N") /* Until end of cursor*/

    TI0GS-VTSPXM01-SN(); /* Fetch next row in cursor*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (TI0GW00.TI0GW-EOF-FL == "N") /* Not end of cursor*/

      TI0GW00.TI0GW-INIT-LKUP-IND = "Y";
      TI0GS-VTOPCD01-S(); /* Select supplier abbrev.*/
      TI0GS-VTOXCD01-S(); /* Select Xmit abbrev.*/
      TI0GW00.TI0GW-INIT-LKUP-IND = "N";
      /* ------------------------------------------------------------*/
      /* If first line on subsequent page, save heading information.*/
      /* ------------------------------------------------------------*/

      if (TI0GW00.XXX-HI-PAGE-NBR > 0 /* Not the first page*/
       && TI0GW00.XXX-INX-FLD-NBR == 1) /* and first line on page*/


      end

      /* ------------------------------------------------------------*/
      /* Save the data from the table row in display storage.*/
      /* ------------------------------------------------------------*/

      TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] = VTSPXM01.TI-CUTK-SPLR-CD;
      TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] = VTSPXM01.TI-CUTK-XMIT-CD;
      TI0GW01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] = VTOPCD01.TI-CUTK-SPLR-ABRV;
      TI0GW01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] = VTOXCD01.TI-CUTK-XMIT-ABRV;
      TI0GW01.XXX-STAT[XXX-INX-FLD-NBR] = VTSPXM01.XXX-STAT;
      TI0GW01.ZZ-SDT[XXX-INX-FLD-NBR] = VTSPXM01.ZZ-SDT;
      TI0GW01.ZZ-CHNG-DT[XXX-INX-FLD-NBR] = VTSPXM01.ZZ-CHNG-DT;
      TI0GW01.ZZ-CHNG-HHMM[XXX-INX-FLD-NBR] = VTSPXM01.ZZ-CHNG-HHMM;
      TI0GW01.ZZ-CHNG-CNT[XXX-INX-FLD-NBR] = VTSPXM01.ZZ-CHNG-CNT;

      /* ------------------------------------------------------------*/
      /* Increment the line index to the next row in display storage.*/
      /* ------------------------------------------------------------*/

      TI0GW00.XXX-INX-FLD-NBR = TI0GW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (TI0GW00.XXX-INX-FLD-NBR > TI0GW00.XXX-INX-LMT-NBR) /* Page is full*/

      TI0GS-TA0050-A(); /* Add page to temporary storage*/

      TI0GW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to the queue.*/
   /* ------------------------------------------------------------*/

  if (TI0GW00.XXX-INX-FLD-NBR > 1) /* Page was formatted*/
    TI0GS-TA0050-A(); /* Add page to temporary storage*/
  end

   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/

  TI0GS-VTSPXM01-CS(); /* Close selected set cursor*/

   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/

  if (TI0GW00.XXX-HI-PAGE-NBR == 0) /* No pages formatted*/

    TIWREC.XXX-MSG-LOC-ID = "11000"; /* Message location*/
    converseLib.validationFailed(18); /* No data was found to display*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  TI0GW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end TI0G-11000

// Format and converse the map
Function TI0G-12000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    TIWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (TI0GW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    TI0G-12100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TI0GM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  if (TI0GWM01.CATOAP > " ")
    TI0GM001.CATOAP = TI0GWM01.CATOAP;
  else
    TI0GM001.CATOAP = COMMAREA.CATOAP;
  end

  if (TI0GWM01.CAITEM > " ")
    TI0GM001.CAITEM = TI0GWM01.CAITEM;
  else
    TI0GM001.CAITEM = COMMAREA.CAITEM;
  end

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (TIWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (TIWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (TIWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(TIWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      TI0GM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    TI0GM001.XXX-MSG-LOC-ID = TIWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set TI0GM001 alarm; /* Indicate sound alarm*/

  end

  converse TI0GM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TIWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  TIWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = TI0GM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TI0GM001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/


  TI0GW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (TI0GW00.XXX-INX-FLD-NBR <= TI0GW00.XXX-INX-LMT-NBR)
                                   /* Until end of screen*/
    if (TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] > " "
     || TI0GM001.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] > " "
     || TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] > " "
     || TI0GM001.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] > " "
     || TI0GM001.XXX-STAT[XXX-INX-FLD-NBR] > " ")
                                   /* or end of formatted lines*/
      set TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;
      set TI0GM001.XXX-STAT[XXX-INX-FLD-NBR] normal;

      if (TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] > " "
       || TI0GW01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] > " "
       || TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] > " "
       || TI0GW01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] > " "
       || TI0GW01.XXX-STAT[XXX-INX-FLD-NBR] > " ")
        set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] protect, noHighLight, blue;
        set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] protect, noHighLight, blue;
      else
        set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] initialAttributes;
        set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] initialAttributes;
      end
    else
      set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] initialAttributes;
      set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] initialAttributes;
    end

    TI0GW00.XXX-INX-FLD-NBR = TI0GW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

  set TI0GM001.CATOAP normal; /* TO application*/
  set TI0GM001.CAITEM normal; /* Application data*/


end // end TI0G-12000

// Format the data in the map
Function TI0G-12100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set TI0GM001 initial; /* M001 input/output area*/

  TI0GW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (TI0GW00.XXX-HI-PAGE-NBR > 0) /* Pages were formatted*/

    if (TI0GW00.XXX-CURR-PAGE-NBR != TA5REC.TA5TSQIX)
                                   /* Desired page not current*/

      /* ------------------------------------------------------------*/
      /* If the current page has been changed, update the page in*/
      /* storage before obtaining the next one to display.*/
      /* ------------------------------------------------------------*/

      if (TI0GW00.XXX-PAGE-UPD-FL == "Y") /* Current page was changed*/

        TI0GS-TA0050-U(); /* Update temporary storage page*/

        TI0GW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

      end

      /* ------------------------------------------------------------*/
      /* If the desired page number is greater than the highest page*/
      /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/

      if (TI0GW00.XXX-CURR-PAGE-NBR > TI0GW00.XXX-HI-PAGE-NBR)
                                   /* Desired greater highest*/
        TI0GW00.XXX-CURR-PAGE-NBR = TI0GW00.XXX-HI-PAGE-NBR;
                                   /* Default to highest*/
      end

      TI0GS-TA0050-R(); /* Read temporary storage page*/

    end

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    TI0GM001.XXX-CURR-PAGE-DESC = "PAGE";

    set TI0GM001.XXX-CURR-PAGE-DESC skip; /* "PAGE" literal*/

    TI0GM001.XXX-CURR-PAGE-NBR = TI0GW00.XXX-CURR-PAGE-NBR;

    TI0GM001.XXX-HI-PAGE-DESC = "OF";

    set TI0GM001.XXX-HI-PAGE-DESC skip; /* "OF" literal*/

    TI0GM001.XXX-HI-PAGE-NBR = TI0GW00.XXX-HI-PAGE-NBR;

  end

   /* ------------------------------------------------------------*/
   /* If code is missing, position the cursor on that field.*/
   /* ------------------------------------------------------------*/

   /* END;*/

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  TI0GW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (TI0GW00.XXX-INX-FLD-NBR <= TI0GW00.XXX-INX-LMT-NBR)
                                   /* Until screen is full*/
                                  /* AND*/

    TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TI0GW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];
    TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] = TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR];
    TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] = TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR];

    if (TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] > " "
     || TI0GW01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] > " "
     || TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] > " "
     || TI0GW01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] > " "
     || TI0GW01.XXX-STAT[XXX-INX-FLD-NBR] > " ")
      set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] protect, noHighLight, blue;
      set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] protect, noHighLight, blue;
    else
      set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] initialAttributes;
      set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] initialAttributes;
    end

    TI0GM001.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] = TI0GW01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR];
    TI0GM001.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] = TI0GW01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR];
    TI0GM001.XXX-STAT[XXX-INX-FLD-NBR] = TI0GW01.XXX-STAT[XXX-INX-FLD-NBR];

    TI0GW00.XXX-INX-FLD-NBR = TI0GW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end


end // end TI0G-12100

// Check attention identifier
Function TI0G-13000()
  if (converseVar.eventKey is pf3 /* END*/
   || converseVar.eventKey is pf4) /* MAIN*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "TI0M"; /* System Menu*/
    end

    if (converseVar.eventKey is pf4) /* PF3 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* System Menu*/
    end

    TI0GS-TA0050-P(); /* Purge any temporary storage*/

    XSTIS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (TI0GW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set TI0GW01 empty; /* M001 display storage*/
    end

    TI0GW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TI0GW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack;

  end

  if (TI0GM001.CATOAP > " "        /* FAST PATH was requested*/
   && converseVar.eventKey not pf1 /* HELP*/
   && converseVar.eventKey not pf5 /* REFRESH SCREEN*/
   && converseVar.eventKey not pf6) /* REFRESH LINE*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      TI0GS-TA0050-P(); /* Purge any temporary storage*/

      XSTIS-EXIT(); /* Exit to another application*/

      set TI0GM001.CATOAP cursor, bold; /* Highlight*/

    else

      TIWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack;

  end

  if (converseVar.eventKey not enter /* EDIT AND POST THE CHANGE OR THE ADD*/
   && converseVar.eventKey not pf1   /* HELP*/
   && converseVar.eventKey not pf7   /* SCROLL UP*/
   && converseVar.eventKey not pf8   /* SCROLL DOWN*/
   && converseVar.eventKey not pf5   /* REFRESH SCREEN*/
   && converseVar.eventKey not pf6)  /* REFRESH LINE*/

    TIWREC.XXX-MSG-LOC-ID = "13000";
    converseLib.validationFailed(4);

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end
end // end TI0G-13000

// Verify data that was entered
Function TI0G-14000()
  if (converseVar.eventKey is pf1
   || converseVar.eventKey is pf5
   || converseVar.eventKey is pf6)

    return;

  end
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (TI0GM001.CAITEM > " ") /* Application data was entered*/

    TIWREC.XXX-MSG-LOC-ID = "14000"; /* Message location*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    set TI0GM001.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll requested, determine if any other field changed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    TI0G-14100(); /* Highlight other changed fields*/

    /* ------------------------------------------------------------*/
    /* Determine whether a valid request to scroll was entered.*/
    /* ------------------------------------------------------------*/
    if (converseVar.validationMsgNum == 0)
      TI0G-14200(); /* Verify scroll request*/
    end
  else

    if (TI0GW00.XXX-HI-PAGE-NBR > 0)

      TI0GW00.XXX-INX-FLD-NBR = 13;

      while (TI0GW00.XXX-INX-FLD-NBR > 0)

        TI0G-14400();

        TI0GW00.XXX-INX-FLD-NBR = TI0GW00.XXX-INX-FLD-NBR - 1;

      end

    end


  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end TI0G-14000

// Highlight other changed fields
Function TI0G-14100()
   /* ------------------------------------------------------------*/
   /* If a modifiable field was changed, indicate that field may*/
   /* not be changed when key is changed or a pf key is pressed.*/
   /* ------------------------------------------------------------*/

  TI0GW00.XXX-INX-FLD-NBR = TI0GW00.XXX-INX-LMT-NBR; /* Line index*/
  TI0GW-ROW-CHANGED-FL = "N";

  while (TI0GW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

    if (TI0GM001.XXX-STAT[XXX-INX-FLD-NBR]
     != TI0GW01.XXX-STAT[XXX-INX-FLD-NBR])
      TI0GW-ROW-CHANGED-FL = "Y";
      set TI0GM001.XXX-STAT[XXX-INX-FLD-NBR] cursor, bold;
    end
    if (TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR]
     != TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR])
      TI0GW-ROW-CHANGED-FL = "Y";
      set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] cursor, bold;
    end
    if (TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR]
     != TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR])
      TI0GW-ROW-CHANGED-FL = "Y";
      set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] cursor, bold;
    end
    if (TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
    TI0GW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])
      TI0GW-ROW-CHANGED-FL = "Y";
      set TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
    end
    if (TI0GW-ROW-CHANGED-FL == "Y")
      TIWREC.XXX-MSG-LOC-ID = "14100"; /* Message location*/
      converseLib.validationFailed(51); /* Field may not change*/
    end

    TI0GW00.XXX-INX-FLD-NBR = TI0GW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

  end


end // end TI0G-14100

// Verify scroll request
Function TI0G-14200()
   /* ------------------------------------------------------------*/
   /* Indicate key fields may not change when scroll is requested.*/
   /* ------------------------------------------------------------*/





   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && TI0GW00.XXX-CURR-PAGE-NBR < 2) /* and no previous pages*/

    TIWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && TI0GW00.XXX-CURR-PAGE-NBR >= TI0GW00.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/
    if (TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-LMT-NBR] > " ")
  /* Something on last line of current pg*/
      set TI0GW01 empty;
      TI0GW00.XXX-HI-PAGE-NBR = TI0GW00.XXX-HI-PAGE-NBR + 1;
      TI0GS-TA0050-A();

    else
      TIWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
      converseLib.validationFailed(3); /* No more pages to display*/

    end
  end


end // end TI0G-14200

// Verify data in the line
Function TI0G-14400()
  if (TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != " "
   && TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "A"
   && TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "C")
    TIWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
    converseLib.validationFailed(40); /* Only "A" or "C" may be entered*/
    set TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
    return; /* Return to previous process*/
  end
  /*  */
  /* -------------------------------------------------------------*/
  /* Determine if row has changed. If action changed with no row*/
  /* changes, return error message.*/
  /* -------------------------------------------------------------*/
  TI0GW-ROW-CHANGED-FL = "N";
  if (TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR]
   != TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR]
   || TI0GM001.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR]
   != TI0GW01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR]
   || TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR]
   != TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR]
   || TI0GM001.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR]
   != TI0GW01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR]
   || TI0GM001.XXX-STAT[XXX-INX-FLD-NBR]
   != TI0GW01.XXX-STAT[XXX-INX-FLD-NBR])
    TI0GW-ROW-CHANGED-FL = "Y";
  else
    if (TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != " ")
      converseLib.validationFailed(46);
      set TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] bold, cursor;
      return;
    end
  end

  /* -------------------------------------------------------------*/
  /* See if row changed with no action.*/
  /* -------------------------------------------------------------*/
  if (TI0GW-ROW-CHANGED-FL == "Y")
    if (TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == " "
    ) /* User changed line and didn't enter*/
                                   /* action*/
      TIWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
      converseLib.validationFailed(41); /* Action code missing/refresh*/
      set TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
      return; /* Return to previous process*/
    end
  end

  /* -------------------------------------------------------------*/
  /* See if User is attempting to change key fields.*/
  /* -------------------------------------------------------------*/
  if (TI0GW-ROW-CHANGED-FL == "Y")
    if (TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR]
     != TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR]
     || TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR]
     != TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR])
      if (TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C")
        if (TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] == " "
         && TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] == " ")
          converseLib.validationFailed(75); /* Cannot change key fields*/
          set TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
        else
          converseLib.validationFailed(45); /* Cannot change key fields*/
          set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] cursor, bold;
          set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] bold;
        end
        TIWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
        return; /* Return to previous process*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* Determine if user is duplicating data on another row of the*/
   /* current screen.*/
   /* ------------------------------------------------------------*/
  if (TI0GW-ROW-CHANGED-FL == "Y")
    TI0GW-INX-FLD-NBR = 1;
    while (TI0GW-INX-FLD-NBR < XXX-INX-FLD-NBR)
      if (TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] == 
      TI0GM001.TI-CUTK-SPLR-CD[TI0GW-INX-FLD-NBR]
       && TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] == 
      TI0GM001.TI-CUTK-XMIT-CD[TI0GW-INX-FLD-NBR])
        TIWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
        converseLib.validationFailed(44); /* Line is already on screen*/
        set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] bold, cursor;
        set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] bold;
        return; /* Return to previous process*/
      end
      TI0GW-INX-FLD-NBR = TI0GW-INX-FLD-NBR + 1;
    end
  end

   /* ------------------------------------------------------------*/
   /* If selection entered was "A", determine if user is attempting*/
   /* to add to existing data on the screen.*/
   /* ------------------------------------------------------------*/
  if (TI0GW-ROW-CHANGED-FL == "Y")
    if (TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A")
      if (TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] != " "
       || TI0GW01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] != " "
       || TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] != " "
       || TI0GW01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] != " "
       || TI0GW01.XXX-STAT[XXX-INX-FLD-NBR] != " ")
        TIWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
        converseLib.validationFailed(39); /* Only add to blank line at end*/
        set TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
        return; /* Return to previous process*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* If selection entered was "C", determine if user is attempting*/
   /* change a blank line.*/
   /* ------------------------------------------------------------*/
  if (TI0GW-ROW-CHANGED-FL == "Y")
    if (TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C")
      if (TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] == " "
       && TI0GW01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] == " "
       && TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] == " "
       && TI0GW01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] == " "
       && TI0GW01.XXX-STAT[XXX-INX-FLD-NBR] == " ")
        TIWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
        converseLib.validationFailed(42); /* Only Change existing line/refresh*/
        set TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
        return; /* Return to previous process*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate entered detail.*/
   /* ------------------------------------------------------------*/
  if (TI0GW-ROW-CHANGED-FL == "Y")
    TI0G-14450();
    if (converseVar.validationMsgNum == 0)
      TI0GW00.XXX-PAGE-UPD-FL = "Y";
    end
  end

end // end TI0G-14400

// Verify entered line detail
Function TI0G-14450()
  /* -------------------------------------------------------------*/
  /* Determine if status code is valid.  It may be blank for*/
  /* Add because of below default. Otherwise must be 'A' or 'I'.*/
  /* -------------------------------------------------------------*/
  if (TI0GM001.XXX-STAT[XXX-INX-FLD-NBR] != " "
   && TI0GM001.XXX-STAT[XXX-INX-FLD-NBR] != "A"
   && TI0GM001.XXX-STAT[XXX-INX-FLD-NBR] != "I")
    TIWREC.XXX-MSG-LOC-ID = "14450"; /* Message location*/
    converseLib.validationFailed(43); /* Only "A" or "I" may be entered*/
    set TI0GM001.XXX-STAT[XXX-INX-FLD-NBR] cursor, bold;
    return;
  end
  /*  */
  /* -------------------------------------------------------------*/
  /* Determine if supplier code has changed. If so, validate and*/
  /* return supplier abbreviation.*/
  /* -------------------------------------------------------------*/
  if (TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR]
   != TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR]
   || TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A")
    VTSPXM01.TI-CUTK-SPLR-CD = TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR];
    TI0GS-VTOPCD01-S();
    if (converseVar.validationMsgNum == 0)
      TI0GM001.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] = VTOPCD01.TI-CUTK-SPLR-ABRV;
    else
      return;
    end
  end

  /* -------------------------------------------------------------*/
  /* Determine if method code has changed. If so, validate and*/
  /* return method abbreviation.*/
  /* -------------------------------------------------------------*/
  if (TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR]
   != TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR]
   || TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A")
    VTSPXM01.TI-CUTK-XMIT-CD = TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR];
    TI0GS-VTOXCD01-S();
    if (converseVar.validationMsgNum == 0)
      TI0GM001.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] = VTOXCD01.TI-CUTK-XMIT-ABRV;
    else
      return;
    end
  end

end // end TI0G-14450

// Process valid input request
Function TI0G-15000()
  set TI0GWM01 empty;
  if (converseVar.eventKey is pf5) /* pag*/

    TI0GW00.XXX-MAP-FMAT-FL = "Y";

    TI0GW00.XXX-RQT-DATA-FL = "N";

    COMMAREA.CATOAP = " ";

    COMMAREA.CAITEM = " ";

    exit stack;

  end

  if (converseVar.eventKey is pf6) /* Line refresh request*/

    TI0GW00.XXX-INX-FLD-NBR = 1;

    TI0GW00.XXX-INX-LMT-NBR = 13;

    while (TI0GW00.XXX-INX-FLD-NBR <= TI0GW00.XXX-INX-LMT-NBR)

      if (TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] is cursor)
        TI0GS-RFR-LN();
      end

      if (TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] is cursor)
        TI0GS-RFR-LN();
      end

      if (TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] is cursor)
        TI0GS-RFR-LN();
      end

      if (TI0GM001.XXX-STAT[XXX-INX-FLD-NBR] is cursor)
        TI0GS-RFR-LN();
      end

      TI0GW00.XXX-INX-FLD-NBR = TI0GW00.XXX-INX-FLD-NBR + 1;

    end

    TI0GW00.XXX-INX-LMT-NBR = 12;

    return;

  end

  if (converseVar.eventKey is pf1)

    TI0GWM01.XXX-MSG-LOC-ID = TI0GM001.XXX-MSG-LOC-ID;

    TI0GWM01.XXX-CURR-DT = TI0GM001.XXX-CURR-DT;

    TI0GWM01.XXX-CURR-PAGE-DESC = TI0GM001.XXX-CURR-PAGE-DESC;

    TI0GWM01.XXX-CURR-PAGE-NBR = TI0GM001.XXX-CURR-PAGE-NBR;

    TI0GWM01.XXX-HI-PAGE-DESC = TI0GM001.XXX-HI-PAGE-DESC;

    TI0GWM01.XXX-HI-PAGE-NBR = TI0GM001.XXX-HI-PAGE-NBR;

    TI0GW00.XXX-INX-FLD-NBR = 1;

    TI0GW00.XXX-INX-LMT-NBR = 13;

    while (TI0GW00.XXX-INX-FLD-NBR <= TI0GW00.XXX-INX-LMT-NBR)

      TI0GWM01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];

      TI0GWM01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] = TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR];

      TI0GWM01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] = TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR];

      TI0GWM01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] = TI0GM001.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR];

      TI0GWM01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] = TI0GM001.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR];

      TI0GWM01.XXX-STAT[XXX-INX-FLD-NBR] = TI0GM001.XXX-STAT[XXX-INX-FLD-NBR];

      TI0GW00.XXX-INX-FLD-NBR = TI0GW00.XXX-INX-FLD-NBR + 1;

    end

    TI0GWM01.CATOAP = TI0GM001.CATOAP;

    TI0GWM01.CAITEM = TI0GM001.CAITEM;

    TI0GW00.XXX-INX-LMT-NBR = 12;

    TIWREC.XXX-MSG-LOC-ID = "10000";

    TIWREC.XXX-MSG-NBR = 0;

    TIWREC.TI-CUTK-XMIT-CD = " ";
    COMMAREA.CAUSERA = TIWREC.CAUSERA;

    TI0GW00.XXX-MAP-FMAT-FL = "Y";

    TI0GWCA1.TI0GWCA1-TI0GW00 = TI0GW00.TI0GW00-REC;

    TI0GWCA1.TI0GWCA1-TI0GW01 = TI0GW01.TI0GW01-REC;

    TI0GWCA1.TI0GWCA1-TI0GW02 = TI0GW02.TI0GW02-REC;

    TI0GWCA1.TI0GWCA1-TI0GWM01 = TI0GWM01.TI0GWM01-REC;

    TI0GWCA1.XXX-MSG-LOC-ID = TIWREC.XXX-MSG-LOC-ID;

    TI0GWCA1.XXX-MSG-NBR = TIWREC.XXX-MSG-NBR;

    TI0GWCA1.TI-CUTK-XMIT-CD = TIWREC.TI-CUTK-XMIT-CD;

    COMMAREA.CA-USER-WORKAREA-2K-B = TI0GWCA1.TI0GWCA1-REC;
    COMMAREA.CAFROMAP = "TI0G";

    COMMAREA.CACURRAP = "TI0G";

    COMMAREA.CATOAP = "GD01";

    COMMAREA.CAITEM = "TI0GM001";

    XSTIS-EXIT();

    set TI0GM001.CATOAP cursor, bold;

    TI0GW00.XXX-MAP-DSP-CD = "1";

    TIWREC.XXX-MSG-LOC-ID = "15000";
    converseLib.validationFailed(78);

    exit stack;

  end

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    TI0GW00.XXX-CURR-PAGE-NBR = TI0GW00.XXX-CURR-PAGE-NBR - 1;

    TI0GW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    TI0GW00.XXX-CURR-PAGE-NBR = TI0GW00.XXX-CURR-PAGE-NBR + 1;

    TI0GW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

  /* -------------------------------------------------------*/
  /* Obtain current time and date*/
  /* -------------------------------------------------------*/
  XX0XS01();
  VTSPXM01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* Change date*/
  VTSPXM01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* Change time*/

  /* -------------------------------------------------------*/
  /* if page has changed, update the database.*/
  /* -------------------------------------------------------*/
  if (TI0GW00.XXX-PAGE-UPD-FL == "Y")
    if (converseVar.validationMsgNum == 0)
      TI0GW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/
      TI0GW-UPDATES-MADE-FL = "N";
      TI0GW00.XXX-INX-LMT-NBR = 13;
      while (TI0GW00.XXX-INX-FLD-NBR <= TI0GW00.XXX-INX-LMT-NBR)
                                   /* Until end of lines*/
        if (TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != " ")
          VTSPXM01.TI-CUTK-SPLR-CD = TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR];
          VTSPXM01.TI-CUTK-XMIT-CD = TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR];
          VTSPXM01.XXX-STAT = TI0GM001.XXX-STAT[XXX-INX-FLD-NBR];
          VTSPXM01.ZZ-SDT = TI0GW01.ZZ-SDT[XXX-INX-FLD-NBR];
          VTSPXM01.ZZ-CHNG-CNT = TI0GW01.ZZ-CHNG-CNT[XXX-INX-FLD-NBR];
          if (TI0GM001.XXX-STAT[XXX-INX-FLD-NBR] == " ")
            VTSPXM01.XXX-STAT = "A";
          end
          if (TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A")
            if (VTSPXM01.ZZ-SDT <= 0)
              VTSPXM01.ZZ-SDT = XX0XW01.XX0XWDAT; /* Setup date*/
            end
            TI0GS-VTSPXM01-A();
            TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] = VTSPXM01.TI-CUTK-SPLR-CD;
            TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] = VTSPXM01.TI-CUTK-XMIT-CD;
            TI0GW01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] = TI0GM001.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR];
            TI0GW01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] = TI0GM001.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR];
            TI0GW01.XXX-STAT[XXX-INX-FLD-NBR] = VTSPXM01.XXX-STAT;
            TI0GW01.ZZ-SDT[XXX-INX-FLD-NBR] = VTSPXM01.ZZ-SDT;
            TI0GW01.ZZ-CHNG-DT[XXX-INX-FLD-NBR] = VTSPXM01.ZZ-CHNG-DT;
            TI0GW01.ZZ-CHNG-HHMM[XXX-INX-FLD-NBR] = VTSPXM01.ZZ-CHNG-HHMM;
            TI0GW01.ZZ-CHNG-CNT[XXX-INX-FLD-NBR] = VTSPXM01.ZZ-CHNG-CNT;
            TI0GW-UPDATES-MADE-FL = "Y";
          else
            if (TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C")
              TI0GS-VTSPXM01-C();
              TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] = VTSPXM01.TI-CUTK-SPLR-CD;
              TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] = VTSPXM01.TI-CUTK-XMIT-CD;
              TI0GW01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] = TI0GM001.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR];
              TI0GW01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] = TI0GM001.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR];
              TI0GW01.XXX-STAT[XXX-INX-FLD-NBR] = VTSPXM01.XXX-STAT;
              TI0GW01.ZZ-SDT[XXX-INX-FLD-NBR] = VTSPXM01.ZZ-SDT;
              TI0GW01.ZZ-CHNG-DT[XXX-INX-FLD-NBR] = VTSPXM01.ZZ-CHNG-DT;
              TI0GW01.ZZ-CHNG-HHMM[XXX-INX-FLD-NBR] = VTSPXM01.ZZ-CHNG-HHMM;
              TI0GW01.ZZ-CHNG-CNT[XXX-INX-FLD-NBR] = VTSPXM01.ZZ-CHNG-CNT;
              TI0GW-UPDATES-MADE-FL = "Y";
            end
          end
        end
        TI0GW00.XXX-INX-FLD-NBR = TI0GW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/
      end

  /* --------------------------------------------------------------*/
  /* Send success message and update the map.*/
  /* --------------------------------------------------------------*/
      if (TI0GW-UPDATES-MADE-FL == "Y")
        converseLib.validationFailed(47);
        move TI0GW01 to TI0GM001 withV60Compat;
        set TI0GM001.XXX-LN-SEL-IND[1] cursor;
        TI0GW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/
        while (TI0GW00.XXX-INX-FLD-NBR <= TI0GW00.XXX-INX-LMT-NBR)
                                     /* Until end of lines*/
          if (TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] > " "
           || TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] > " "
           || TI0GW01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] > " "
           || TI0GW01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] > " "
           || TI0GW01.XXX-STAT[XXX-INX-FLD-NBR] > " ")
            set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] protect, noHighLight, blue;
            set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] protect, noHighLight, blue;
          end
          TI0GW00.XXX-INX-FLD-NBR = TI0GW00.XXX-INX-FLD-NBR + 1;
                                     /* Increment line index*/
        end
      end
      TI0GW00.XXX-INX-LMT-NBR = 12;
    end
  end

end // end TI0G-15000

// Refresh the line cursor is on
Function TI0GS-RFR-LN()
  TI0GW-CRSR-ON-LN-FL = "Y";
  TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TI0GW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];
  set TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;
  TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] = TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR];
  TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] = TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR];

  if (TI0GW01.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] > " "
   || TI0GW01.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] > " "
   || TI0GW01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] > " "
   || TI0GW01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] > " "
   || TI0GW01.XXX-STAT[XXX-INX-FLD-NBR] > " ")
    set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] protect, noHighLight, blue;
    set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] protect, noHighLight, blue;
  else
    set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] initialAttributes;
    set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] initialAttributes;
  end

  TI0GM001.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR] = TI0GW01.TI-CUTK-SPLR-ABRV[XXX-INX-FLD-NBR];
  TI0GM001.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR] = TI0GW01.TI-CUTK-XMIT-ABRV[XXX-INX-FLD-NBR];
  TI0GM001.XXX-STAT[XXX-INX-FLD-NBR] = TI0GW01.XXX-STAT[XXX-INX-FLD-NBR];
  set TI0GM001.XXX-STAT[XXX-INX-FLD-NBR] normal;
end // end TI0GS-RFR-LN

// Add page to temporary storage
Function TI0GS-TA0050-A()
   /* ------------------------------------------------------------*/
   /* Add the next page to the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TI0GW01.XXX-TEMP-STG-LNTH = TI0GW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (TI0GW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set TI0GW01 empty; /* M001 display storage*/

    TI0GW00.XXX-HI-PAGE-NBR = TA5REC.TA5TSQIX; /* Highest page number*/

    TA5REC.TA5TSQIX = 0; /* Clear last page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TIWREC.XXX-MSG-LOC-ID = "TA0050A"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0GS-TA0050-A

// Purge any temporary storage
Function TI0GS-TA0050-P()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set TI0GW01 empty; /* M001 display storage*/

  TI0GW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

  TA5REC.TA5TSQIX = 0; /* Displayed page number*/
  TI0GW00.XXX-HI-PAGE-NBR = 0; /* Highest page number*/

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (TI0GW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Purge storage*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TIWREC.XXX-MSG-LOC-ID = "TA0050P"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0GS-TA0050-P

// Read temporary storage page
Function TI0GS-TA0050-R()
   /* ------------------------------------------------------------*/
   /* Read the next page from the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TI0GW01.XXX-TEMP-STG-LNTH = TI0GW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = TI0GW00.XXX-CURR-PAGE-NBR; /* Page number*/

  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (TI0GW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Read page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TIWREC.XXX-MSG-LOC-ID = "TA0050R"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "READ TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0GS-TA0050-R

// Update temporary storage page
Function TI0GS-TA0050-U()
   /* ------------------------------------------------------------*/
   /* Update the page in the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (TI0GW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TIWREC.XXX-MSG-LOC-ID = "TA0050U"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0GS-TA0050-U

// Get supplier code
Function TI0GS-VTOPCD01-S()
   /* ------------------------------------------------------------*/
   /* Select the supplier abbreviation from the supplier table.*/
   /* ------------------------------------------------------------*/

  VTOPCD01.TI-CUTK-SPLR-CD = VTSPXM01.TI-CUTK-SPLR-CD;
  try
    call "VTOPCD01" ("S ", SQLCA, VTOPCD01) {isNoRefresh = yes, isExternal = yes};
  end /* Select code;*/
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      if (TI0GW00.TI0GW-INIT-LKUP-IND != "Y") /* This is only a validation*/
                                   /* and a 100 should not cause abend.*/
        converseLib.validationFailed(037);
        set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] bold, cursor;

        exit stack; /* Return error to screen.*/
      end
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available  return an error message to the user*/
   /* only if the initial-indicator is not "y".*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VTOPCD01-S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "GET ASSOCIATED SUPPLIER "; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTOPCD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0GS-VTOPCD01-S

// Get Xmit code
Function TI0GS-VTOXCD01-S()
   /* ------------------------------------------------------------*/
   /* Select the method abbreviation from the method table.*/
   /* ------------------------------------------------------------*/

  VTOXCD01.TI-CUTK-XMIT-CD = VTSPXM01.TI-CUTK-XMIT-CD;
  try
    call "VTOXCD01" ("S ", SQLCA, VTOXCD01) {isNoRefresh = yes, isExternal = yes};
  end /* Select code;*/
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If not found, abend if initial load.  Otherwise give error*/
    /* message and ezeflo.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      if (TI0GW00.TI0GW-INIT-LKUP-IND != "Y") /* This is only a validation*/
                                   /* A 100 should not cause abend.*/
        converseLib.validationFailed(038);
        set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] bold, cursor;

        exit stack; /* Return error to screen.*/
      end
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available  return an error message to the user*/
   /* only if the initial-indicator is not "y".*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VTOXCD01-S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "GET ASSOCIATED METHOD "; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTOXCD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0GS-VTOXCD01-S

// Add row to VTSPXM01
Function TI0GS-VTSPXM01-A()
   /* ------------------------------------------------------------*/
   /* Add the requested row to the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VTSPXM01" ("A ", SQLCA, VTSPXM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* If user entered a duplicate row, send error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VTSPXM01SS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    if (SQLCA.VAGen_SQLCODE == -803) /* Duplicate row.*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      converseLib.validationFailed(16); /* Already a row with key vals*/
      set TI0GM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] bold, cursor;
      set TI0GM001.TI-CUTK-XMIT-CD[XXX-INX-FLD-NBR] bold;
      set TI0GM001.TI-CUTK-SPLR-CD[XXX-INX-FLD-NBR] bold;
      exit stack;
    else

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/

      converseLib.validationFailed(10); /* Unexpected error occurred*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before display*/

    end
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTIPCD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0GS-VTSPXM01-A

// Change row in VTSPXM01
Function TI0GS-VTSPXM01-C()
   /* ------------------------------------------------------------*/
   /* Add the requested row to the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VTSPXM01" ("U ", SQLCA, VTSPXM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VTSPXM01SS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTIPCD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0GS-VTSPXM01-C

// Close selected set cursor
Function TI0GS-VTSPXM01-CS()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "VTSPXM01" ("C1", SQLCA, VTSPXM01) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VTSPXM01CS"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0GS-VTSPXM01-CS

// Fetch next row in cursor
Function TI0GS-VTSPXM01-SN()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VTSPXM01" ("N1", SQLCA, VTSPXM01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next ro;*/
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      TI0GW00.TI0GW-EOF-FL = "Y"; /* End of cursor*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VTSPXM01SN"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0GS-VTSPXM01-SN

// Select set and open cursor
Function TI0GS-VTSPXM01-SS()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VTSPXM01" ("S1", SQLCA, VTSPXM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VTSPXM01SS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTIPCD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0GS-VTSPXM01-SS

//*** RECORD=TI0GW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record TI0GW00 type basicRecord
  5 TI0GW00-REC TI0GW00-REC ; 
    10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
    10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
    10 XXX-MAP-DSP-CD XXX-MAP-DSP-CD ; 
    10 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
    10 XXX-INX-LMT-NBR XXX-INX-LMT-NBR ; 
    10 XXX-INX-FLD-NBR XXX-INX-FLD-NBR ; 
    10 TI0GW-INX-FLD-NBR smallint ; // Index for map fields
    10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
    10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
    10 XXX-PAGE-UPD-FL XXX-PAGE-UPD-FL ; 
    10 TI0GW-EOF-FL char(1) ; // end of cursor
    10 TI0GW-INIT-LKUP-IND char(1) ; // initial lookup indicator
    10 TI0GW-ROW-CHANGED-FL char(1) ; // row has change flag
    10 TI0GW-UPDATES-MADE-FL char(1) ; // row has change flag
    10 TI0GW-CRSR-ON-LN-FL char(1) ; // row has change flag
end // end TI0GW00

//*** RECORD=TI0GW01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record TI0GW01 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 TI0GW01-REC char(396) ; 
    10 TI0GM-SRCH-1 char(3) ; 
    10 TI0GM-SRCH-2 char(3) ; 
    10 XXX-LN-SEL-IND XXX-LN-SEL-IND [13] ; 
    10 TI-CUTK-SPLR-CD TI-CUTK-SPLR-CD [13] ; 
    10 TI-CUTK-XMIT-CD TI-CUTK-XMIT-CD [13] ; 
    10 TI-CUTK-SPLR-ABRV TI-CUTK-SPLR-ABRV [13] ; 
    10 TI-CUTK-XMIT-ABRV TI-CUTK-XMIT-ABRV [13] ; 
    10 XXX-STAT XXX-STAT [13] ; 
    10 ZZ-SDT ZZ-SDT [13] ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT [13] ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM [13] ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT [13] ; 
end // end TI0GW01

//*** RECORD=TI0GW02 ****
// ------------------------
// Map 002 display storage.
// ------------------------
// ***********************
Record TI0GW02 type basicRecord
  5 TI0GW02-REC TI0GW02-REC ; 
    10 TI-CUTK-SPLR-CD TI-CUTK-SPLR-CD ; 
    10 TI-CUTK-XMIT-CD TI-CUTK-XMIT-CD ; 
    10 TI-CUTK-SPLR-ABRV TI-CUTK-SPLR-ABRV ; 
    10 TI-CUTK-XMIT-ABRV TI-CUTK-XMIT-ABRV ; 
    10 XXX-STAT XXX-STAT ; 
    10 SY-STY-COLR-DESC SY-STY-COLR-DESC ; 
    10 XPC-PROD-CAT-CD XPC-PROD-CAT-CD ; 
end // end TI0GW02

//*** RECORD=TI0GWCA1 ****
// ------------------------------------------------------------
// TI0F application working storage.
// ------------------------------------------------------------
// ************************
Record TI0GWCA1 type basicRecord
  5 TI0GWCA1-REC char(2048) ; 
    10 TI0GWCA1-TI0GW00 TI0GWCA1-TI0GW00 ; 
    10 TI0GWCA1-TI0GW01 TI0GWCA1-TI0GW01 ; 
    10 TI0GWCA1-TI0GW02 TI0GWCA1-TI0GW02 ; 
    10 TI0GWCA1-TI0GWM01 TI0GWCA1-TI0GWM01 ; 
    10 XXX-MSG-LOC-ID XXX-MSG-LOC-ID ; 
    10 XXX-MSG-NBR XXX-MSG-NBR ; 
    10 TI-CUTK-XMIT-CD TI-CUTK-XMIT-CD ; 
    10 * char(1284) ; 
end // end TI0GWCA1

//*** RECORD=TI0GWM01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ************************
Record TI0GWM01 type basicRecord
  5 TI0GWM01-REC char(284) ; 
    10 XXX-MSG-LOC-ID XXX-MSG-LOC-ID ; 
    10 XXX-CURR-DT XXX-CURR-DT ; 
    10 XXX-CURR-PAGE-DESC XXX-CURR-PAGE-DESC ; 
    10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
    10 XXX-HI-PAGE-DESC XXX-HI-PAGE-DESC ; 
    10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
    10 XXX-LN-SEL-IND XXX-LN-SEL-IND [13] ; 
    10 TI-CUTK-SPLR-CD TI-CUTK-SPLR-CD [13] ; 
    10 TI-CUTK-XMIT-CD TI-CUTK-XMIT-CD [13] ; 
    10 TI-CUTK-SPLR-ABRV TI-CUTK-SPLR-ABRV [13] ; 
    10 TI-CUTK-XMIT-ABRV TI-CUTK-XMIT-ABRV [13] ; 
    10 XXX-STAT XXX-STAT [13] ; 
    10 CATOAP CATOAP ; 
    10 CAITEM CAITEM ; 
end // end TI0GWM01

DataItem TI0GW00-REC char(23)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0GW02-REC char(49)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0GWCA1-TI0GW00 char(23)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0GWCA1-TI0GW01 char(396)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0GWCA1-TI0GW02 char(49)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0GWCA1-TI0GWM01 char(284)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

