package ti0m;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import ta.common.*;
import ti.common.*;
//*** PROGRAM=TI0M ****
// ------------------------------------------------------------
//            CUSTOMER SPECIFIED TICKETING MENU
// ------------------------------------------------------------
// 
// OVERVIEW: THIS APPLICATION IS THE MAIN MENU INTO THE
//           CUSTOMER SPECIFIED TICKETING SYSTEM FOR INQUIRY
//           AND UPDATE.  THIS APPLICATION WILL TRANSFER A USER
//           TO ANOTHER APPLICATION BASED UPON THEIR SECURITY
//           CLEARANCE.
// 
// 
// MAINTENANCE HISTORY:
// 
//    DATE      BY WHOM     OVERVIEW OF CHANGES MADE
//  --------  ------------ ------------------------------------
//  01/03/97  BCHAN1       Cloned AV0M
//  06/27/97  BJOHN7       map updated
// 
// *********************
Program TI0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TI00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  TIWREC TIWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use TI0MT {deleteAfterUse = yes}; // table
  use TI0MM.TI0MM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTI-00000: XPTI-00000();
     /* ------------------------------------------------------------*/
     /* THIS IS TEMPORARY!!!! REMOVE ONCE ALL TI MODS FIXED!!!!!*/
     /* ------------------------------------------------------------*/

    set TIWREC empty; /* Clear TIWREC temporarily*/

     /* ------------------------------------------------------------*/

     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set TI0MM001 initial; /* M001 display storage*/

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map*/
     /* ------------------------------------------------------------*/

    goto TI0M001; /* Flow to main process*/


    TI0M001: TI0M001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map*/
     /* ------------------------------------------------------------*/

    goto TI0M001; /* Flow to main process*/


  end // end main
end // end TI0M

// Main process to display a map
Function TI0M001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TI0M200(); /* Format and display the map*/

  TI0M300(); /* Check attention identifier*/

  TI0M400(); /* Reset fields to normal intensity*/

  TI0M500(); /* Verify the data that was entered*/

  TI0M600(); /* Process valid input request*/


end // end TI0M001

// Format and converse the map
Function TI0M200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    TIWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TI0MM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  TI0MM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  TI0MM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (TIWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (TIWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (TIWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(TIWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      TI0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    TI0MM001.XXX-MSG-LOC-ID = "200"; /* Module identification*/

    set TI0MM001 alarm; /* Indicate sound alarm*/

  end

  converse TI0MM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  set TIWREC empty; /* System work record area*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = TI0MM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TI0MM001.CAITEM; /* Application data*/


end // end TI0M200

// Check attention identifier
Function TI0M300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set TI0MM001 initial; /* M001 input/output*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      TI0MS-01(); /* Exit to another application*/

      set TI0MM001.CATOAP cursor, bold; /* Highlight*/

    else

      TIWREC.XXX-MSG-LOC-ID = "300"; /* Module identification*/
      converseLib.validationFailed(5); /* Indicate PF key not valid*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP or exit to the Production Menu was requested,*/
   /* exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "TI0MM001"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
    end

    TI0MS-01(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    TIWREC.XXX-MSG-LOC-ID = "300"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    exit stack; /* Exit to display map*/

  end


end // end TI0M300

// Reset highlighted fields
Function TI0M400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TI0MM001.TI0MMSEL initialAttributes; /* Menu selection*/
  set TI0MM001.CATOAP initialAttributes; /* FAST PATH to application*/
  set TI0MM001.CAITEM initialAttributes; /* FAST PATH application data*/


end // end TI0M400

// Verify data that was entered
Function TI0M500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    TIWREC.XXX-MSG-LOC-ID = "500"; /* Module identification*/
    set TI0MM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Indicate only with FAST PATH*/

  end

   /* ------------------------------------------------------------*/
   /* Verify any menu selection that was entered.*/
   /* ------------------------------------------------------------*/

  if (TI0MM001.TI0MMSEL > 0) /* Menu selection was entered*/

    if (TI0MM001.TI0MMSEL in TI0MT.TI0MMSEL) /* Selection in table*/

      COMMAREA.CATOAP = TI0MT.CATOAP[sysVar.arrayIndex]; /* TO application*/

    else

      /* ------------------------------------------------------------*/
       /* If not found, indicate selection is invalid.*/
      /* ------------------------------------------------------------*/

      TIWREC.XXX-MSG-LOC-ID = "500"; /* Module identification*/
      set TI0MM001.TI0MMSEL cursor, bold; /* Highlight*/
      converseLib.validationFailed(9); /* Indicate invalid selection*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Exit to display the map if any error was found.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end TI0M500

// Process valid input request
Function TI0M600()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* ------------------------------------------------------------*/

  if (TI0MM001.TI0MMSEL > 0) /* Menu selection was entered*/

    TI0MS-01(); /* Exit to another application*/

    /* ------------------------------------------------------------*/
     /* If the transfer failed, display the returned error message.*/
    /* ------------------------------------------------------------*/

    set TI0MM001.TI0MMSEL cursor, bold; /* Highlight*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Clear map input/output area.*/
   /* ------------------------------------------------------------*/

  set TI0MM001 initial; /* M001 input/output*/


end // end TI0M600

// Exit to another application
Function TI0MS-01()
   /* ------------------------------------------------------------*/
   /* Set the application to be invoked for PF1 or PF4.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    COMMAREA.CATOAP = "GD01"; /* Indicate Goal Documentation*/
  end

  if (converseVar.eventKey is pf4) /* PF4 was pressed*/
    COMMAREA.CATOAP = "MN0M"; /* Indicate Master Menu*/
  end

   /* ------------------------------------------------------------*/
   /* Save the application user area in the COMMAREA.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CATOSYS == COMMAREA.CACURSYS) /* Same system*/

    COMMAREA.CAUSERA = TIWREC.CAUSERA; /* Save user area*/
  else
    COMMAREA.CAUSERA = " "; /* Clear user area*/

  end

   /* ------------------------------------------------------------*/
   /* Transfer control to the specified application.*/
   /* ------------------------------------------------------------*/

  XSEXIT(); /* Exit to another application*/

   /* ------------------------------------------------------------*/
   /* Reestablish the COMMAREA application and item fields.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CAEZSG3 = "0"; /* Force zero third character*/
  COMMAREA.CACURRAP = COMMAREA.CAEZSAP; /* CURR application*/

  if (converseVar.eventKey is pfkey) /* PF key was pressed*/

    COMMAREA.CATOAP = " "; /* Clear TO application*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = " "; /* Clear map name from item*/
    end

  end


end // end TI0MS-01

