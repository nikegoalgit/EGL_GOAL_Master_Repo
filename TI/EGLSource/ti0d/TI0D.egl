package ti0d;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ku.common.*;
import ta.common.*;
import ti.common.*;
import vv.common.*;
//*** PROGRAM=TI0D ****
// This application allows a user to inquire and maintain rows
// in a DB2 table.
// 
// There are two different screens that may be displayed.
// 
// The first screen displayed to the user allows specification
// of the search criteria to be used to list the rows in the
// table.  The list is displayed and the user may page backward
// and forward to view the information.
// 
// When a line is selected on the screen, the second screen is
// displayed, showing all information for that table row.
// 
// If the user has sufficient security to change the data, the
// modifiable fields remain unprotected.  Otherwise, they are
// protected from modification by the user.
// 
// If any data is modified, it is verified and, if complete and
// correct, the table row is updated with the changed data.
// The screen is redisplayed to the user, indicating that the
// update is completed.
// 
// If more that one line was selected on the first screen, the
// next selection is displayed when the user presses the ENTER
// key without making any change to the displayed data.
// 
// When the user exits the second screen (either via PF3 key or
// after all selections have been viewed) the first screen is
// redisplayed, indicating the selections that were viewed.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      06/30/93  xxxxxx  New application.
// NEW      06/30/93  bharri  Added flags for price ticketing
//                            and caselot ticketing to be
//                            handled as separately.  This
//                            required the addition of 2 new
//                            flags on TOREQ and a means to
//                            update them.
// NEW      03/01/99  snaidu  The logic added above for price
//                            and caselot ticketing was
//                            incorrectly inserting the flags
//                            into the table. The flag values
//                            were getting swapped on insertion
//                            into the table. Also, there was
//                            no edit check for the values
//                            enetered on the screen. Corrected
//                            TI0D for the above errors
// *********************
Program TI0D type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TI00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KUCREC KUCREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TI0DW00 TI0DW00; // record
  TI0DW01 TI0DW01; // record
  TI0DW02 TI0DW02; // record
  TI0DWCA1 TI0DWCA1; // record
  TI0DWM01 TI0DWM01; // record
  TI0DWM02 TI0DWM02; // record
  TIWREC TIWREC; // record
  VSTORE02 VSTORE02; // record
  VTOREQ01 VTOREQ01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XHDTBL {deleteAfterUse = yes}; // table
  use XOBTBL {deleteAfterUse = yes}; // table
  use XLBTBL {deleteAfterUse = yes}; // table
  use XGPTBL; // table
  use XNXTBL {deleteAfterUse = yes}; // table
  use XDSTBL {deleteAfterUse = yes}; // table
  use TI0DM.TI0DM001,  // forms
      TI0DM.TI0DM002
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTI-00000: XPTI-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    TI0DW00.XXX-INX-LMT-NBR = 13;

    if (COMMAREA.CAFRMSYS == "GD")

      TI0DWCA1.TI0DWCA1-REC = COMMAREA.CA-USER-WORKAREA-2K-B;

      TI0DW00.TI0DW00-REC = TI0DWCA1.TI0DWCA1-TI0DW00;

      TI0DW01.TI0DW01-REC = TI0DWCA1.TI0DWCA1-TI0DW01;

      TI0DW02.TI0DW02-REC = TI0DWCA1.TI0DWCA1-TI0DW02;

      TI0DWM01.TI0DWM01-REC = TI0DWCA1.TI0DWCA1-TI0DWM01;

      TI0DWM02.TI0DWM02-REC = TI0DWCA1.TI0DWCA1-TI0DWM02;

      TA5REC.TA5DATA = TI0DWCA1.TI0DWCA1-TA5REC;

      COMMAREA.CAADD = TI0DWCA1.TI0DWCA1-CAADD;
      COMMAREA.CACHG = TI0DWCA1.TI0DWCA1-CACHG;
      COMMAREA.CADEL = TI0DWCA1.TI0DWCA1-CADEL;
      COMMAREA.CAINQ = TI0DWCA1.TI0DWCA1-CAINQ;

      TIWREC.CAUSERA = COMMAREA.CAUSERA;

      TIWREC.XXX-MSG-LOC-ID = TI0DWCA1.XXX-MSG-LOC-ID;

      TIWREC.XXX-MSG-NBR = TI0DWCA1.XXX-MSG-NBR;

      TIWREC.TI-CUTK-XMIT-CD = TI0DWCA1.TI-CUTK-XMIT-CD;

      if (TI0DW00.XXX-MAP-DSP-CD == "1")
        TIWREC.XGP-GPC-CD = TI0DWM01.TI0DM-XGP-GPC-CD; /* GPC code*/
        TI0DM001.XXX-MSG-LOC-ID = TI0DWM01.XXX-MSG-LOC-ID;
        TI0DM001.XXX-CURR-DT = TI0DWM01.XXX-CURR-DT;
        TI0DM001.XXX-CURR-PAGE-DESC = TI0DWM01.XXX-CURR-PAGE-DESC;
        TI0DM001.XXX-CURR-PAGE-NBR = TI0DWM01.XXX-CURR-PAGE-NBR;
        TI0DM001.XXX-HI-PAGE-DESC = TI0DWM01.XXX-HI-PAGE-DESC;
        TI0DM001.XXX-HI-PAGE-NBR = TI0DWM01.XXX-HI-PAGE-NBR;
        TI0DM001.TI0DM-XGP-GPC-CD = TI0DWM01.TI0DM-XGP-GPC-CD;
        TI0DM001.TI0DM-CU-CO-ID = TI0DWM01.TI0DM-CU-CO-ID;
        TI0DW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

        while (TI0DW00.XXX-INX-FLD-NBR <= TI0DW00.XXX-INX-LMT-NBR)

          TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TI0DWM01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];
          TI0DM001.XGP-GPC-CD[XXX-INX-FLD-NBR] = TI0DWM01.XGP-GPC-CD[XXX-INX-FLD-NBR];
          TI0DM001.CU-STOR-ID[XXX-INX-FLD-NBR] = TI0DWM01.CU-STOR-ID[XXX-INX-FLD-NBR];
          TI0DM001.XNX-DEPT-ID-XREF[XXX-INX-FLD-NBR] = TI0DWM01.XNX-DEPT-ID-XREF[XXX-INX-FLD-NBR];
          TI0DM001.TI-CUST-NEED-BDT[XXX-INX-FLD-NBR] = TI0DWM01.TI-CUST-NEED-BDT[XXX-INX-FLD-NBR];
          TI0DM001.XXX-STAT[XXX-INX-FLD-NBR] = TI0DWM01.XXX-STAT[XXX-INX-FLD-NBR];
          TI0DM001.CU-CO-ID[XXX-INX-FLD-NBR] = TI0DWM01.CU-CO-ID[XXX-INX-FLD-NBR];
          TI0DM001.CU-CO-NM[XXX-INX-FLD-NBR] = TI0DWM01.CU-CO-NM[XXX-INX-FLD-NBR];

          set TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] initialAttributes;
          set TI0DM001.XGP-GPC-CD[XXX-INX-FLD-NBR] initialAttributes;
          set TI0DM001.XNX-DEPT-ID-XREF[XXX-INX-FLD-NBR] initialAttributes;
          set TI0DM001.TI-CUST-NEED-BDT[XXX-INX-FLD-NBR] initialAttributes;
          set TI0DM001.XXX-STAT[XXX-INX-FLD-NBR] initialAttributes;
          set TI0DM001.CU-CO-ID[XXX-INX-FLD-NBR] initialAttributes;
          set TI0DM001.CU-CO-NM[XXX-INX-FLD-NBR] initialAttributes;

          TI0DW00.XXX-INX-FLD-NBR = TI0DW00.XXX-INX-FLD-NBR + 1;

        end
      end

      TI0DW00.XXX-RQT-DATA-FL = "N";

      TI0DW00.XXX-MAP-FMAT-FL = "N";

      if (TI0DW00.XXX-MAP-DSP-CD == "2")
        TI0DM002.XXX-MSG-LOC-ID = TI0DWM02.XXX-MSG-LOC-ID;
        TI0DM002.XGP-GPC-CD = TI0DWM02.XGP-GPC-CD;
        TI0DM002.CU-CO-ID = TI0DWM02.CU-CO-ID;
        TI0DM002.CU-CO-NM = TI0DWM02.CU-CO-NM;
        TI0DM002.CU-STOR-ID = TI0DWM02.CU-STOR-ID;
        TI0DM002.XNX-DEPT-ID-XREF = TI0DWM02.XNX-DEPT-ID-XREF;
        TI0DM002.TI-CUST-NEED-BDT = TI0DWM02.TI-CUST-NEED-BDT;
        TI0DM002.XHD-HNDL-CD1 = TI0DWM02.XHD-HNDL-CD1;
        TI0DM002.XHD-HNDL-CD2 = TI0DWM02.XHD-HNDL-CD2;
        TI0DM002.XHD-HNDL-CD3 = TI0DWM02.XHD-HNDL-CD3;
        TI0DM002.XOB-BASE-OT-CD1 = TI0DWM02.XOB-BASE-OT-CD1;
        TI0DM002.XOB-BASE-OT-CD2 = TI0DWM02.XOB-BASE-OT-CD2;
        TI0DM002.XOB-BASE-OT-CD3 = TI0DWM02.XOB-BASE-OT-CD3;
        TI0DM002.XDS-DIR-SHIP-CD1 = TI0DWM02.XDS-DIR-SHIP-CD1;
        TI0DM002.XDS-DIR-SHIP-CD2 = TI0DWM02.XDS-DIR-SHIP-CD2;
        TI0DM002.XDS-DIR-SHIP-CD3 = TI0DWM02.XDS-DIR-SHIP-CD3;
        TI0DM002.XXX-STAT = TI0DWM02.XXX-STAT;
        TI0DM002.CATOAP = TI0DWM02.CATOAP;
        TI0DM002.CAITEM = TI0DWM02.CAITEM;
        TI0DW00.XXX-INX-FLD-NBR = TI0DWCA1.TI0EWCA1-SAVE-INX-FLD-NBR;
      end

    else
      set TI0DM001 initial; /* M001 input/output*/
      set TI0DM002 initial; /* M002 input/output*/
      set TI0DW00 empty; /* Working storage*/
      set TI0DW01 empty; /* M001 display storage*/
      set TI0DW02 empty; /* M002 display storage*/
      set TI0DWM01 empty; /* M001 display storage*/
      set TI0DWM02 empty; /* M002 display storage*/
      set SQLCA empty; /* SQL communication area*/
      set TAEREC empty; /* Error diagnosis information*/
      set TA1REC empty; /* Error diagnosis parameters*/
      set TA5REC empty; /* Temporary storage parameters*/
      set XX0XW01 empty; /* Date/time subroutine parameters*/
      TI0DWCA1.XXX-LN-SEL-IND = " ";

      TI0DW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
      TI0DW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

      TI0DW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

    end

    TI0DW00.XXX-INX-LMT-NBR = 13;

    TI0DW00.XXX-TEMP-STG-LNTH = 698; /* Temporary storage length*/

    VGVar.handleHardIOErrors = 1; /* Return all file errors*/
    converseVar.commitOnConverse = 1; /* Commit on every converse*/

     /* ------------------------------------------------------------*/
     /* Initialize any fields passed from another application.*/
     /* ------------------------------------------------------------*/

    /* MOVE TIWREC.XGP-GPC-CD TO TI0DW01.TI0DM-XGP-GPC-CD;/* GPC code*/

    if (COMMAREA.CAITEM > " ") /* Data was passed*/

      TI0DM001.TI0DM-XGP-GPC-CD = TIWREC.XGP-GPC-CD; /* GPC code*/
      TI0DM001.TI0DM-CU-CO-ID = COMMAREA.CAITEM; /* Customer*/

      COMMAREA.CAITEM = " "; /* Clear passed data*/

      TI0DW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    end

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TI0D-00000; /* Converse the main process*/


    TI0D-00000: TI0D-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TI0D-00000; /* Converse the main process*/


  end // end main
end // end TI0D

// Determine which map to display
Function TI0D-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the map that was requested.*/
   /* 2) Otherwise, indicate error and exit to System Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (TI0DW00.XXX-MAP-DSP-CD == "1") /* Map 1 was requested*/

    TI0DWCA1.XXX-LN-SEL-IND = " ";

    TI0D-10000(); /* Display map 1*/

    exit stack; /* Exit to display map*/

  end

  if (TI0DW00.XXX-MAP-DSP-CD == "2") /* Map 2 was requested*/

    TI0D-20000(); /* Display map 2*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Write the error to the Error Diagnosis Reporting Facility.*/
   /* ------------------------------------------------------------*/

  TIWREC.XXX-MSG-LOC-ID = "00000"; /* Message location*/
  TIWREC.XXX-MSG-NBR = 10; /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "INVALID MAP NUMBER REQUESTED"; /* Description*/
  TA1REC.TA1MAPNO = TI0DW00.XXX-MAP-DSP-CD; /* Map requested*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

   /* ------------------------------------------------------------*/
   /* Exit to display the application system menu.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CATOAP = "TI0M"; /* System Menu*/

  XSTIS-EXIT(); /* Exit to another application*/

   /* ------------------------------------------------------------*/
   /* Abnormally terminate the transaction if the exit failed.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1FUNC = "ABND"; /* Termination function*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/


end // end TI0D-00000

// Main process to display a map
Function TI0D-10000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TI0D-11000(); /* Obtain the data to display*/

  TI0D-12000(); /* Format and display the map*/

  TI0D-13000(); /* Check attention identifier*/

  TI0D-14000(); /* Verify the entered data*/

  TI0D-15000(); /* Process valid input request*/


end // end TI0D-10000

// Obtain the data to display
Function TI0D-11000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (TI0DW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* ------------------------------------------------------------*/

  if (TIWREC.XXX-MSG-NBR == 0) /* No message to display*/
    TI0DW00.XXX-CURR-PAGE-NBR = 1; /* Page number to display*/
  end

   /* ------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key fields.*/
   /* ------------------------------------------------------------*/

  TI0DS-TA0050-P(); /* Purge any temporary storage*/

  TI0DW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  TI0DW01.TI0DM-XGP-GPC-CD = TI0DM001.TI0DM-XGP-GPC-CD; /* GPC code*/
  TI0DW01.TI0DM-CU-CO-ID = TI0DM001.TI0DM-CU-CO-ID; /* Customer*/
  if (converseVar.eventKey is enter)
    TI0DW00.TI0DM-XGP-GPC-CD = TI0DM001.TI0DM-XGP-GPC-CD; /* GPC code*/
    TI0DW00.TI0DM-CU-CO-ID = TI0DM001.TI0DM-CU-CO-ID; /* Customer*/
  end

   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* ------------------------------------------------------------*/

  set VTOREQ01 empty; /* Clear row storage area*/

  if (converseVar.eventKey is pf5)
    VTOREQ01.XGP-GPC-CD = TI0DW00.TI0DM-XGP-GPC-CD; /* GPC code*/
    VTOREQ01.CU-CO-ID = TI0DW00.TI0DM-CU-CO-ID; /* Customer*/
    TI0DW01.TI0DM-XGP-GPC-CD = TI0DW00.TI0DM-XGP-GPC-CD; /* GPC code*/
    TI0DW01.TI0DM-CU-CO-ID = TI0DW00.TI0DM-CU-CO-ID; /* Customer*/
  else
    VTOREQ01.XGP-GPC-CD = TI0DW01.TI0DM-XGP-GPC-CD; /* GPC code*/
    VTOREQ01.CU-CO-ID = TI0DW01.TI0DM-CU-CO-ID; /* Customer*/
  end

  TI0DS-VTOREQ01-SS(); /* Select set and open cursor*/

   /* ------------------------------------------------------------*/
   /* Fetch and format the data into pages until end of cursor.*/
   /* ------------------------------------------------------------*/

  TI0DW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

  TI0DW00.TI0DW-COREQ-EOF-FL = "N"; /* End of cursor flag*/

  while (TI0DW00.TI0DW-COREQ-EOF-FL == "N") /* Until end of cursor*/

    TI0DS-VTOREQ01-SN(); /* Fetch next row in cursor*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (TI0DW00.TI0DW-COREQ-EOF-FL == "N") /* Not end of cursor*/

      /* ------------------------------------------------------------*/
      /* If first line on subsequent page, save heading information.*/
      /* ------------------------------------------------------------*/

      if (TI0DW00.XXX-HI-PAGE-NBR > 0 /* Not the first page*/
       && TI0DW00.XXX-INX-FLD-NBR == 1) /* and first line on page*/

        TI0DW01.TI0DM-XGP-GPC-CD = VTOREQ01.XGP-GPC-CD; /* GPC code*/
        TI0DW01.TI0DM-CU-CO-ID = VTOREQ01.CU-CO-ID; /* Customer*/

      end

      /* ------------------------------------------------------------*/
      /* Save the data from the table row in display storage.*/
      /* ------------------------------------------------------------*/

      TI0DW01.XGP-GPC-CD[XXX-INX-FLD-NBR] = VTOREQ01.XGP-GPC-CD; /* GPC code*/
      TI0DW01.CU-STOR-ID[XXX-INX-FLD-NBR] = VTOREQ01.CU-STOR-ID; /* GPC code*/
      TI0DW01.XNX-DEPT-ID-XREF[XXX-INX-FLD-NBR] = VTOREQ01.XNX-DEPT-ID-XREF; /* GPC code*/
      TI0DW01.TI-CUST-NEED-BDT[XXX-INX-FLD-NBR] = VTOREQ01.TI-CUST-NEED-BDT; /* GPC code*/

      TI0DW01.XXX-STAT[XXX-INX-FLD-NBR] = VTOREQ01.XXX-STAT; /* GPC code*/

      TI0DW01.CU-CO-ID[XXX-INX-FLD-NBR] = VTOREQ01.CU-CO-ID;

      KUCREC.KUCCOID = VTOREQ01.CU-CO-ID;
      TI0DS-VCMPNY01-S();
      TI0DW01.CU-CO-NM[XXX-INX-FLD-NBR] = KUCREC.KUCCONM;

      /* ------------------------------------------------------------*/
      /* Increment the line index to the next row in display storage.*/
      /* ------------------------------------------------------------*/

      TI0DW00.XXX-INX-FLD-NBR = TI0DW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (TI0DW00.XXX-INX-FLD-NBR > TI0DW00.XXX-INX-LMT-NBR) /* Page is full*/

      TI0DS-TA0050-A(); /* Add page to temporary storage*/

      TI0DW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to the queue.*/
   /* ------------------------------------------------------------*/

  if (TI0DW00.XXX-INX-FLD-NBR > 1) /* Page was formatted*/
    TI0DS-TA0050-A(); /* Add page to temporary storage*/
  end

   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/

  TI0DS-VTOREQ01-CS(); /* Close selected set cursor*/

   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/

  if (TI0DW00.XXX-HI-PAGE-NBR == 0) /* No pages formatted*/

    TIWREC.XXX-MSG-LOC-ID = "11000"; /* Message location*/
    converseLib.validationFailed(18); /* No data was found to display*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  TI0DW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end TI0D-11000

// Format and converse the map
Function TI0D-12000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    TIWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (TI0DW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    TI0D-12100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TI0DM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  TI0DM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  TI0DM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (TIWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (TIWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (TIWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(TIWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      TI0DM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    TI0DM001.XXX-MSG-LOC-ID = TIWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set TI0DM001 alarm; /* Indicate sound alarm*/

  end

  converse TI0DM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TIWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  TIWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = TI0DM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TI0DM001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TI0DM001.TI0DM-XGP-GPC-CD normal; /* GPC code*/
  set TI0DM001.TI0DM-CU-CO-ID normal; /* Customer*/

  TI0DW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (TI0DW00.XXX-INX-FLD-NBR <= TI0DW00.XXX-INX-LMT-NBR
   /* Until end of screen*/
   && TI0DM001.XGP-GPC-CD[XXX-INX-FLD-NBR] > " ")
                                   /* or end of formatted lines*/

    set TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;
                                   /* Select indicator*/

    TI0DW00.XXX-INX-FLD-NBR = TI0DW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

  set TI0DM001.CATOAP normal; /* TO application*/
  set TI0DM001.CAITEM normal; /* Application data*/


end // end TI0D-12000

// Format the data in the map
Function TI0D-12100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set TI0DM001 initial; /* M001 input/output area*/

  TI0DW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (TI0DW00.XXX-HI-PAGE-NBR > 0) /* Pages were formatted*/

    if (TI0DW00.XXX-CURR-PAGE-NBR != TA5REC.TA5TSQIX)
                                   /* Desired page not current*/

      /* ------------------------------------------------------------*/
      /* If the current page has been changed, update the page in*/
      /* storage before obtaining the next one to display.*/
      /* ------------------------------------------------------------*/

      if (TI0DW00.XXX-PAGE-UPD-FL == "Y") /* Current page was changed*/

        TI0DS-TA0050-U(); /* Update temporary storage page*/

        TI0DW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

      end

      /* ------------------------------------------------------------*/
      /* If the desired page number is greater than the highest page*/
      /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/

      if (TI0DW00.XXX-CURR-PAGE-NBR > TI0DW00.XXX-HI-PAGE-NBR)
                                   /* Desired greater highest*/
        TI0DW00.XXX-CURR-PAGE-NBR = TI0DW00.XXX-HI-PAGE-NBR;
                                   /* Default to highest*/
      end

      TI0DS-TA0050-R(); /* Read temporary storage page*/

    end

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set TI0DM001.XXX-CURR-PAGE-DESC skip; /* "PAGE" literal*/
    TI0DM001.XXX-CURR-PAGE-NBR = TI0DW00.XXX-CURR-PAGE-NBR;
                                   /* Current page*/
    set TI0DM001.XXX-HI-PAGE-DESC skip; /* "OF" literal*/
    TI0DM001.XXX-HI-PAGE-NBR = TI0DW00.XXX-HI-PAGE-NBR;
                                   /* Highest page*/

  end

   /* ------------------------------------------------------------*/
   /* If GPC code is missing, position the cursor on that field.*/
   /* ------------------------------------------------------------*/

  if (TI0DW01.TI0DM-XGP-GPC-CD <= " ") /* GPC code missing*/
    set TI0DM001.TI0DM-XGP-GPC-CD cursor; /* Position cursor*/
  end

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  TI0DM001.TI0DM-XGP-GPC-CD = TI0DW01.TI0DM-XGP-GPC-CD; /* GPC code*/
  TI0DM001.TI0DM-CU-CO-ID = TI0DW01.TI0DM-CU-CO-ID; /* Customer*/

  TI0DW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (TI0DW00.XXX-INX-FLD-NBR <= TI0DW00.XXX-INX-LMT-NBR
   /* Until screen is full*/
   && TI0DW01.XGP-GPC-CD[XXX-INX-FLD-NBR] > " ") /* or end of data*/

    if (TI0DW00.XXX-INX-FLD-NBR == 1) /* First select field*/

      set TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, normal;
    else
      set TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;

    end

    TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TI0DW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];
    TI0DM001.XGP-GPC-CD[XXX-INX-FLD-NBR] = TI0DW01.XGP-GPC-CD[XXX-INX-FLD-NBR];
    TI0DM001.CU-STOR-ID[XXX-INX-FLD-NBR] = TI0DW01.CU-STOR-ID[XXX-INX-FLD-NBR];
    TI0DM001.XNX-DEPT-ID-XREF[XXX-INX-FLD-NBR] = TI0DW01.XNX-DEPT-ID-XREF[XXX-INX-FLD-NBR];
    TI0DM001.TI-CUST-NEED-BDT[XXX-INX-FLD-NBR] = TI0DW01.TI-CUST-NEED-BDT[XXX-INX-FLD-NBR];
    TI0DM001.XXX-STAT[XXX-INX-FLD-NBR] = TI0DW01.XXX-STAT[XXX-INX-FLD-NBR];
    TI0DM001.CU-CO-ID[XXX-INX-FLD-NBR] = TI0DW01.CU-CO-ID[XXX-INX-FLD-NBR];
    TI0DM001.CU-CO-NM[XXX-INX-FLD-NBR] = TI0DW01.CU-CO-NM[XXX-INX-FLD-NBR];

    TI0DW00.XXX-INX-FLD-NBR = TI0DW00.XXX-INX-FLD-NBR + 1;
                                 /* Increment line index*/

  end


end // end TI0D-12100

// Check attention identifier
Function TI0D-13000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (TI0DW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set TI0DW01 empty; /* M001 display storage*/
    end

    TI0DW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TI0DW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (TI0DM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      TI0DS-TA0050-P(); /* Purge any temporary storage*/

      XSTIS-EXIT(); /* Exit to another application*/

      set TI0DM001.CATOAP cursor, bold; /* Highlight*/

    else

      TIWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/


    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "TI0M"; /* System Menu*/
    end

    if (converseVar.eventKey is pf4) /* PF3 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* System Menu*/
    end

    TI0DS-TA0050-P(); /* Purge any temporary storage*/

    XSTIS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf5   /* and PF5 was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf1)  /* and PF1 was not pressed*/

    TIWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end TI0D-13000

// Verify data that was entered
Function TI0D-14000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (TI0DM001.CAITEM > " ") /* Application data was entered*/

    TIWREC.XXX-MSG-LOC-ID = "14000"; /* Message location*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    set TI0DM001.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll requested, determine if any other field changed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    TI0D-14100(); /* Highlight other changed fields*/

    /* ------------------------------------------------------------*/
    /* Determine whether a valid request to scroll was entered.*/
    /* ------------------------------------------------------------*/

    TI0D-14200(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* If key field changed, determine if any other field changed.*/
    /* ------------------------------------------------------------*/

    if (TI0DM001.TI0DM-XGP-GPC-CD != TI0DW01.TI0DM-XGP-GPC-CD /* GPC*/
     || TI0DM001.TI0DM-CU-CO-ID != TI0DW01.TI0DM-CU-CO-ID)   
                                   /* or Customer changed*/

      TI0D-14100(); /* Highlight other changed fields*/

      /* ------------------------------------------------------------*/
      /* Determine if all the required key fields were entered.*/
      /* ------------------------------------------------------------*/

      TI0D-14300(); /* Check for required key fields*/

    else

      /* ------------------------------------------------------------*/
      /* Otherwise, verify any modifiable data that was changed.*/
      /* ------------------------------------------------------------*/

      if (TI0DW00.XXX-HI-PAGE-NBR > 0) /* Page was formatted*/

        TI0DW00.XXX-INX-FLD-NBR = TI0DW00.XXX-INX-LMT-NBR;
                                   /* Line index*/

        while (TI0DW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

          TI0D-14400(); /* Verify data in the line*/

          TI0DW00.XXX-INX-FLD-NBR = TI0DW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

        end

      end

    end

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end TI0D-14000

// Highlight other changed fields
Function TI0D-14100()
   /* ------------------------------------------------------------*/
   /* If a modifiable field was changed, indicate that field may*/
   /* not be changed when key is changed or a pf key is pressed.*/
   /* ------------------------------------------------------------*/

  TI0DW00.XXX-INX-FLD-NBR = TI0DW00.XXX-INX-LMT-NBR; /* Line index*/

  while (TI0DW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

    if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
    TI0DW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])
      if (TI0DW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "V")
  /* CONTINUE*/
      else
        TIWREC.XXX-MSG-LOC-ID = "14100"; /* Message location*/
        converseLib.validationFailed(14); /* Field may not change*/
        set TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
      end
    end

    TI0DW00.XXX-INX-FLD-NBR = TI0DW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

  end


end // end TI0D-14100

// Verify scroll request
Function TI0D-14200()
   /* ------------------------------------------------------------*/
   /* Indicate key fields may not change when scroll is requested.*/
   /* ------------------------------------------------------------*/

  if (TI0DM001.TI0DM-CU-CO-ID != TI0DW01.TI0DM-CU-CO-ID) /* Customer chgd*/

    TIWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(14); /* Field may not change*/
    set TI0DM001.TI0DM-CU-CO-ID cursor, bold; /* Highlight*/

  end

  if (TI0DM001.TI0DM-XGP-GPC-CD != TI0DW01.TI0DM-XGP-GPC-CD) /* GPC changed*/

    TIWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(14); /* Field may not change*/
    set TI0DM001.TI0DM-XGP-GPC-CD cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && TI0DW00.XXX-CURR-PAGE-NBR < 2) /* and no previous pages*/

    TIWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && TI0DW00.XXX-CURR-PAGE-NBR >= TI0DW00.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/

    TIWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end


end // end TI0D-14200

// Check for required key fields
Function TI0D-14300()
   /* ------------------------------------------------------------*/
   /* Verify that a customer was entered.*/
   /* ------------------------------------------------------------*/

  if (TI0DM001.TI0DM-CU-CO-ID <= " ") /* Customer not entered*/

    TIWREC.XXX-MSG-LOC-ID = "14300"; /* Message location*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    set TI0DM001.TI0DM-CU-CO-ID cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Verify the General Product Class code.*/
   /* ------------------------------------------------------------*/

  if (TI0DM001.TI0DM-XGP-GPC-CD in XGPTBL.XGPCD /* Code in table*/
   && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/

     /* NEXT SENTENCE*/

  else

    /* ------------------------------------------------------------*/
    /* If not found or inactive, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/

    TIWREC.XXX-MSG-LOC-ID = "14300"; /* Message location*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    set TI0DM001.TI0DM-XGP-GPC-CD cursor, bold; /* Highlight*/

  end


end // end TI0D-14300

// Verify data in the line
Function TI0D-14400()
   /* ------------------------------------------------------------*/
   /* If selection was entered and is not an 'S', 'A', or 'C'*/
   /* display error.*/
   /* ------------------------------------------------------------*/

  if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR]
   != TI0DW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])
    if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "S"
     && TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "A"
     && TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "C"
     && TI0DW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "V")
      TIWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
      converseLib.validationFailed(78); /* Only valid action may be entered*/
      set TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* If selection was entered and is 'A', check for add authority*/
   /* ------------------------------------------------------------*/

  if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR]
   != TI0DW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])
    if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A")
      if (COMMAREA.CAADDFL != "Y")
        TIWREC.XXX-MSG-LOC-ID = "14400";
        converseLib.validationFailed(79);
        set TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
        return;
      else
        if (TI0DM001.TI0DM-XGP-GPC-CD == "02"
         && COMMAREA.CAALVL[1] == "N")
          TIWREC.XXX-MSG-LOC-ID = "14400";
          converseLib.validationFailed(103);
          set TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
          return;
        else
          if (TI0DM001.TI0DM-XGP-GPC-CD == "03"
           && COMMAREA.CAALVL[2] == "N")
            TIWREC.XXX-MSG-LOC-ID = "14400";
            converseLib.validationFailed(104);
            set TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
            return;
          end
        end
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* If selection was entered and is 'A', check for add authority*/
   /* ------------------------------------------------------------*/

  if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR]
   != TI0DW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])
    if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C")
      if (COMMAREA.CACHGFL != "Y")
        TIWREC.XXX-MSG-LOC-ID = "14400";
        converseLib.validationFailed(63);
        set TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
        return;
      else
        if (TI0DM001.TI0DM-XGP-GPC-CD == "02"
         && COMMAREA.CACLVL[1] == "N")
          TIWREC.XXX-MSG-LOC-ID = "14400";
          converseLib.validationFailed(64);
          set TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
          return;
        else
          if (TI0DM001.TI0DM-XGP-GPC-CD == "03"
           && COMMAREA.CACLVL[2] == "N")
            TIWREC.XXX-MSG-LOC-ID = "14400";
            converseLib.validationFailed(65);
            set TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
            return;
          end
        end
      end
    end
  end
end // end TI0D-14400

// Process valid input request
Function TI0D-15000()
   /* ------------------------------------------------------------*/
   /* Save any work record fields that may have been modified.*/
   /* ------------------------------------------------------------*/

  TIWREC.XGP-GPC-CD = TI0DM001.TI0DM-XGP-GPC-CD; /* GPC code*/

   /* ------------------------------------------------------------*/
   /* If the key fields changed, request the data to display.*/
   /* ------------------------------------------------------------*/

  if (TI0DM001.TI0DM-XGP-GPC-CD != TI0DW01.TI0DM-XGP-GPC-CD /* GPC changed*/
   || TI0DM001.TI0DM-CU-CO-ID != TI0DW01.TI0DM-CU-CO-ID     
   || converseVar.eventKey is pf5)                          /* User requested refresh list*/

    TI0DW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey is pf1)

    TI0DWM01.XXX-MSG-LOC-ID = TI0DM001.XXX-MSG-LOC-ID;

    TI0DWM01.XXX-CURR-DT = TI0DM001.XXX-CURR-DT;

    TI0DWM01.XXX-CURR-PAGE-DESC = TI0DM001.XXX-CURR-PAGE-DESC;

    TI0DWM01.XXX-CURR-PAGE-NBR = TI0DM001.XXX-CURR-PAGE-NBR;

    TI0DWM01.XXX-HI-PAGE-DESC = TI0DM001.XXX-HI-PAGE-DESC;

    TI0DWM01.XXX-HI-PAGE-NBR = TI0DM001.XXX-HI-PAGE-NBR;

    TI0DWCA1.TI0EWCA1-SAVE-INX-FLD-NBR = TI0DW00.XXX-INX-FLD-NBR;

    TI0DWM01.TI0DM-XGP-GPC-CD = TI0DM001.TI0DM-XGP-GPC-CD;

    TI0DWM01.TI0DM-CU-CO-ID = TI0DM001.TI0DM-CU-CO-ID;

    TI0DW00.XXX-INX-FLD-NBR = 1;

    while (TI0DW00.XXX-INX-FLD-NBR <= TI0DW00.XXX-INX-LMT-NBR)

      TI0DWM01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];

      TI0DWM01.XGP-GPC-CD[XXX-INX-FLD-NBR] = TI0DM001.XGP-GPC-CD[XXX-INX-FLD-NBR];

      TI0DWM01.CU-STOR-ID[XXX-INX-FLD-NBR] = TI0DM001.CU-STOR-ID[XXX-INX-FLD-NBR];

      TI0DWM01.XNX-DEPT-ID-XREF[XXX-INX-FLD-NBR] = TI0DM001.XNX-DEPT-ID-XREF[XXX-INX-FLD-NBR];

      TI0DWM01.TI-CUST-NEED-BDT[XXX-INX-FLD-NBR] = TI0DM001.TI-CUST-NEED-BDT[XXX-INX-FLD-NBR];

      TI0DWM01.XXX-STAT[XXX-INX-FLD-NBR] = TI0DM001.XXX-STAT[XXX-INX-FLD-NBR];

      TI0DWM01.CU-CO-ID[XXX-INX-FLD-NBR] = TI0DM001.CU-CO-ID[XXX-INX-FLD-NBR];

      TI0DWM01.CU-CO-NM[XXX-INX-FLD-NBR] = TI0DM001.CU-CO-NM[XXX-INX-FLD-NBR];

      TI0DW00.XXX-INX-FLD-NBR = TI0DW00.XXX-INX-FLD-NBR + 1;

    end

    TI0DWM01.CATOAP = TI0DM001.CATOAP;

    TI0DWM01.CAITEM = TI0DM001.CAITEM;

    TIWREC.XXX-MSG-LOC-ID = "10000";

    TIWREC.XXX-MSG-NBR = 0;

    TIWREC.TI-CUTK-XMIT-CD = " ";
    COMMAREA.CAUSERA = TIWREC.CAUSERA;

    TI0DW00.XXX-MAP-FMAT-FL = "Y";

    TI0DWCA1.TI0DWCA1-TI0DW00 = TI0DW00.TI0DW00-REC;

    TI0DWCA1.TI0DWCA1-TI0DW01 = TI0DW01.TI0DW01-REC;

    TI0DWCA1.TI0DWCA1-TI0DW02 = TI0DW02.TI0DW02-REC;

    TI0DWCA1.TI0DWCA1-TI0DWM01 = TI0DWM01.TI0DWM01-REC;

    TI0DWCA1.TI0DWCA1-TA5REC = TA5REC.TA5DATA;

    TI0DWCA1.TI0DWCA1-CAADD = COMMAREA.CAADD;
    TI0DWCA1.TI0DWCA1-CACHG = COMMAREA.CACHG;
    TI0DWCA1.TI0DWCA1-CADEL = COMMAREA.CADEL;
    TI0DWCA1.TI0DWCA1-CAINQ = COMMAREA.CAINQ;

    TI0DWCA1.XXX-MSG-LOC-ID = TIWREC.XXX-MSG-LOC-ID;

    TI0DWCA1.XXX-MSG-NBR = TIWREC.XXX-MSG-NBR;

    TI0DWCA1.TI-CUTK-XMIT-CD = TIWREC.TI-CUTK-XMIT-CD;

    COMMAREA.CA-USER-WORKAREA-2K-B = TI0DWCA1.TI0DWCA1-REC;
    COMMAREA.CAFROMAP = "TI0D";

    COMMAREA.CACURRAP = "TI0D";

    COMMAREA.CATOAP = "GD01";

    COMMAREA.CAITEM = "TI0DM001";

    XSTIS-EXIT();

    set TI0DM001.CATOAP cursor, bold;

    TI0DW00.XXX-MAP-DSP-CD = "1";

    TIWREC.XXX-MSG-LOC-ID = "15000";
    converseLib.validationFailed(78);

    exit stack;

  end

   /* ------------------------------------------------------------*/
   /* If scroll backward was requested, decrement the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    TI0DW00.XXX-CURR-PAGE-NBR = TI0DW00.XXX-CURR-PAGE-NBR - 1;
                                   /* Decrement page number*/

    TI0DW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, increment the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    TI0DW00.XXX-CURR-PAGE-NBR = TI0DW00.XXX-CURR-PAGE-NBR + 1;
                                   /* Increment page number*/

    TI0DW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Save any field that was changed in the map display storage.*/
   /* ------------------------------------------------------------*/

  TI0DW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (TI0DW00.XXX-INX-FLD-NBR <= TI0DW00.XXX-INX-LMT-NBR)
                                   /* Until end of lines*/

    if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
    TI0DW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])

      TI0DW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];

      TI0DW00.XXX-PAGE-UPD-FL = "Y"; /* Page update flag*/

    end

    TI0DW00.XXX-INX-FLD-NBR = TI0DW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

   /* ------------------------------------------------------------*/
   /* If a line was selected, format the key fields and indicate*/
   /* that map 002 is to be displayed.*/
   /* ------------------------------------------------------------*/

  if ("S" in TI0DW01.XXX-LN-SEL-IND /* Line was selected*/
   || "A" in TI0DW01.XXX-LN-SEL-IND /* Line was selected*/
   || "C" in TI0DW01.XXX-LN-SEL-IND) /* Line was selected*/

    TI0DW00.XXX-INX-FLD-NBR = sysVar.arrayIndex; /* Map line index*/

    TI0DM002.XGP-GPC-CD = TI0DW01.XGP-GPC-CD[XXX-INX-FLD-NBR]; /**/
    TI0DM002.CU-STOR-ID = TI0DW01.CU-STOR-ID[XXX-INX-FLD-NBR]; /**/
    TI0DM002.XNX-DEPT-ID-XREF = TI0DW01.XNX-DEPT-ID-XREF[XXX-INX-FLD-NBR]; /**/
    TI0DM002.TI-CUST-NEED-BDT = TI0DW01.TI-CUST-NEED-BDT[XXX-INX-FLD-NBR]; /**/
    TI0DM002.XXX-STAT = TI0DW01.XXX-STAT[XXX-INX-FLD-NBR]; /**/
    TI0DM002.CU-CO-ID = TI0DW01.CU-CO-ID[XXX-INX-FLD-NBR];
    TI0DM002.CU-CO-NM = TI0DW01.CU-CO-NM[XXX-INX-FLD-NBR];

    TI0DW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
    TI0DW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/

  end


end // end TI0D-15000

// Main process to display a map
Function TI0D-20000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TI0D-21000(); /* Obtain the data to display*/

  TI0D-22000(); /* Format and display the map*/

  TI0D-23000(); /* Check attention identifier*/

  TI0D-24000(); /* Verify the entered data*/

  TI0D-25000(); /* Process valid input request*/


end // end TI0D-20000

// Obtain the data to display
Function TI0D-21000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (TI0DW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Clear the map display storage area and save the key fields.*/
   /* ------------------------------------------------------------*/

  set TI0DW02 empty; /* M002 display storage*/

  TI0DW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  TI0DW02.XGP-GPC-CD = TI0DM002.XGP-GPC-CD; /* GPC*/
  TI0DW02.CU-CO-ID = TI0DM002.CU-CO-ID; /* Customer*/
  TI0DW02.CU-CO-NM = TI0DM002.CU-CO-NM; /* Customer name*/
  TI0DW02.CU-STOR-ID = TI0DM002.CU-STOR-ID; /* Label Code*/
  TI0DW02.XNX-DEPT-ID-XREF = TI0DM002.XNX-DEPT-ID-XREF;
  TI0DW02.TI-CUST-NEED-BDT = TI0DM002.TI-CUST-NEED-BDT;

   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/

  set VTOREQ01 empty; /* Clear row storage area*/

  VTOREQ01.XGP-GPC-CD = TI0DW02.XGP-GPC-CD; /* GPC code*/
  VTOREQ01.CU-STOR-ID = TI0DW02.CU-STOR-ID; /* GPC code*/
  VTOREQ01.XNX-DEPT-ID-XREF = TI0DW02.XNX-DEPT-ID-XREF; /* GPC code*/
  VTOREQ01.TI-CUST-NEED-BDT = TI0DW02.TI-CUST-NEED-BDT; /* GPC code*/
  VTOREQ01.CU-CO-ID = TI0DW02.CU-CO-ID; /* Customer*/

  TI0DS-VTOREQ01-S(); /* Select the table row*/

   /* ------------------------------------------------------------*/
   /* Save the data from the table row in display storage.*/
   /* ------------------------------------------------------------*/

  TI0DW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

    TI0DW02.TI-CUST-NEED-BDT = VTOREQ01.TI-CUST-NEED-BDT;

    TI0DW02.TI-CUST-NEED-EDT = VTOREQ01.TI-CUST-NEED-EDT;

    TI0DW02.CU-CO-ID = VTOREQ01.CU-CO-ID;

    TI0DW02.XOB-BASE-OT-CD1 = VTOREQ01.XOB-BASE-OT-CD1;

    TI0DW02.XOB-BASE-OT-CD2 = VTOREQ01.XOB-BASE-OT-CD2;

    TI0DW02.XOB-BASE-OT-CD3 = VTOREQ01.XOB-BASE-OT-CD3;

    TI0DW02.XDS-DIR-SHIP-CD1 = VTOREQ01.XDS-DIR-SHIP-CD1;

    TI0DW02.XDS-DIR-SHIP-CD2 = VTOREQ01.XDS-DIR-SHIP-CD2;

    TI0DW02.XDS-DIR-SHIP-CD3 = VTOREQ01.XDS-DIR-SHIP-CD3;

    TI0DW02.XHD-HNDL-CD1 = VTOREQ01.XHD-HNDL-CD1;

    TI0DW02.XHD-HNDL-CD2 = VTOREQ01.XHD-HNDL-CD2;

    TI0DW02.XHD-HNDL-CD3 = VTOREQ01.XHD-HNDL-CD3;

    TI0DW02.TI-CUTK-CASELOT-FL = VTOREQ01.TI-CUTK-CASELOT-FL;

    TI0DW02.TI-CUTK-PRC-TKT-FL = VTOREQ01.TI-CUTK-PRC-TKT-FL;

    TI0DW02.XXX-STAT = VTOREQ01.XXX-STAT;

    TI0DW02.ZZ-CHNG-CNT = VTOREQ01.ZZ-CHNG-CNT;

  else

    TIWREC.XXX-MSG-LOC-ID = "21000"; /* Message location*/
    converseLib.validationFailed(18); /* No data was found to display*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  /* MOVE 'N' TO TI0DW00.XXX-RQT-DATA-FL;/* Request for data flag*/


end // end TI0D-21000

// Format and converse the map
Function TI0D-22000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    TIWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (TI0DW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    TI0D-22100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Determine whether to protect any of the modifiable fields.*/
   /* ------------------------------------------------------------*/

  TI0D-22200(); /* Check change authorization*/


   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TI0DM002.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  TI0DM002.CATOAP = COMMAREA.CATOAP; /* TO application*/
  TI0DM002.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (TIWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (TIWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (TIWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(TIWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      TI0DM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    TI0DM002.XXX-MSG-LOC-ID = TIWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set TI0DM002 alarm; /* Indicate sound alarm*/

  end

  converse TI0DM002 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TIWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  TIWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = TI0DM002.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TI0DM002.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TI0DM002.XGP-GPC-CD normal; /**/
  set TI0DM002.CU-CO-ID normal; /**/
  set TI0DM002.CU-STOR-ID normal; /**/
  set TI0DM002.XNX-DEPT-ID-XREF normal; /**/
  set TI0DM002.TI-CUST-NEED-BDT normal; /**/
  set TI0DM002.XXX-STAT normal; /**/
  set TI0DM002.XHD-HNDL-CD1 normal; /**/
  set TI0DM002.XHD-HNDL-CD2 normal; /**/
  set TI0DM002.XHD-HNDL-CD3 normal; /**/
  set TI0DM002.XOB-BASE-OT-CD1 normal; /**/
  set TI0DM002.XOB-BASE-OT-CD2 normal; /**/
  set TI0DM002.XOB-BASE-OT-CD3 normal; /**/
  set TI0DM002.XDS-DIR-SHIP-CD1 normal; /**/
  set TI0DM002.XDS-DIR-SHIP-CD2 normal; /**/
  set TI0DM002.XDS-DIR-SHIP-CD3 normal; /**/
  set TI0DM002.CATOAP normal; /* TO application*/
  set TI0DM002.CAITEM normal; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Change the selection indicator to show the line was viewed.*/
   /* ------------------------------------------------------------*/

  TI0DW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = "V";
end // end TI0D-22000

// Format the data in the map
Function TI0D-22100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set TI0DM002 initial; /* M002 input/output area*/

  TI0DW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  TI0DM002.XGP-GPC-CD = TI0DW02.XGP-GPC-CD;
  TI0DM002.CU-CO-ID = TI0DW02.CU-CO-ID;
  TI0DM002.CU-CO-NM = TI0DW02.CU-CO-NM;
  TI0DM002.CU-STOR-ID = TI0DW02.CU-STOR-ID;
  TI0DM002.XNX-DEPT-ID-XREF = TI0DW02.XNX-DEPT-ID-XREF;
  TI0DM002.TI-CUST-NEED-BDT = TI0DW02.TI-CUST-NEED-BDT;
  TI0DM002.TI-CUST-NEED-EDT = TI0DW02.TI-CUST-NEED-EDT;
  TI0DM002.XHD-HNDL-CD1 = TI0DW02.XHD-HNDL-CD1;
  TI0DM002.XHD-HNDL-CD2 = TI0DW02.XHD-HNDL-CD2;
  TI0DM002.XHD-HNDL-CD3 = TI0DW02.XHD-HNDL-CD3;
  TI0DM002.XOB-BASE-OT-CD1 = TI0DW02.XOB-BASE-OT-CD1;
  TI0DM002.XOB-BASE-OT-CD2 = TI0DW02.XOB-BASE-OT-CD2;
  TI0DM002.XOB-BASE-OT-CD3 = TI0DW02.XOB-BASE-OT-CD3;
  TI0DM002.XDS-DIR-SHIP-CD1 = TI0DW02.XDS-DIR-SHIP-CD1;
  TI0DM002.XDS-DIR-SHIP-CD2 = TI0DW02.XDS-DIR-SHIP-CD2;
  TI0DM002.XDS-DIR-SHIP-CD3 = TI0DW02.XDS-DIR-SHIP-CD3;
  TI0DM002.TI-CUTK-CASELOT-FL = TI0DW02.TI-CUTK-CASELOT-FL;
  TI0DM002.TI-CUTK-PRC-TKT-FL = TI0DW02.TI-CUTK-PRC-TKT-FL;
  TI0DM002.XXX-STAT = TI0DW02.XXX-STAT;
  /* IF TI0DM002.CU-STOR-ID GT -1;*/
  /* SET VSTORE02 EMPTY;*/
  /* MOVE TI0DM002.CU-CO-ID TO VSTORE02.CU-CO-ID;*/
  /* MOVE TI0DM002.CU-STOR-ID TO VSTORE02.CU-STOR-ID;*/
  /* TI0DS-VSTORE02-S;*/
  /* IF SQLCA.SQLCODE EQ 0;*/
  /* MOVE VSTORE02.CU-STOR-NM TO TI0DM002.CU-STOR-NM;*/
  /* END;*/
  /* END;*/

end // end TI0D-22100

// Check change authorization
Function TI0D-22200()
   /* ------------------------------------------------------------*/
   /* If requested data was found and the user is authorized to*/
   /* change data on the screen, set cursor and protect fields*/
   /* as appropriate*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* set up for add in case change requested for blank row*/
   /* ------------------------------------------------------------*/
  if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C")
    if (TI0DM002.XGP-GPC-CD == " ")
      TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = "A";
    end
  end
   /* ------------------------------------------------------------*/
   /* ADD Requested.*/
   /* ------------------------------------------------------------*/
  if (TI0DW00.XXX-RQT-DATA-FL == "N" /* Requested data was found*/
   && COMMAREA.CAADDFL == "Y"        /* and user authorized to change*/
   && (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A"
   || TI0DWCA1.XXX-LN-SEL-IND == "A"))
    if (TI0DWCA1.XXX-LN-SEL-IND == "A")
      TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TI0DWCA1.XXX-LN-SEL-IND;
    end
    if (converseVar.validationMsgNum == 0 || converseVar.validationMsgNum == 18)
      if (TI0DM002.XGP-GPC-CD > " ")
        set TI0DM002.CU-CO-ID cursor;
      else
        set TI0DM002.XGP-GPC-CD cursor;
      end
      TI0DM002.CU-CO-ID = 0;
      TI0DW02.CU-CO-ID = 0;
      TI0DM002.CU-CO-NM = " ";
      TI0DW02.CU-CO-NM = " ";
      TI0DM002.CU-STOR-ID = 0;
      TI0DW02.CU-STOR-ID = 0;
      TI0DM002.XNX-DEPT-ID-XREF = 0;
      TI0DW02.XNX-DEPT-ID-XREF = 0;
      TI0DM002.TI-CUST-NEED-BDT = 0;
      TI0DW02.TI-CUST-NEED-BDT = 0;
    end
    return;
  end

   /* ------------------------------------------------------------*/
   /* CHANGE REQUESTED.*/
   /* ------------------------------------------------------------*/
  if (TI0DW00.XXX-RQT-DATA-FL == "N" /* Requested data was found*/
   && COMMAREA.CACHGFL == "Y"        /* and user authorized to change*/
   && (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C"
   || TI0DWCA1.XXX-LN-SEL-IND == "C"))
    if (TI0DWCA1.XXX-LN-SEL-IND == "C")
      TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TI0DWCA1.XXX-LN-SEL-IND;
    end
    set TI0DM002.CU-CO-ID skip;
    set TI0DM002.CU-STOR-ID skip;
    set TI0DM002.XNX-DEPT-ID-XREF skip;
    set TI0DM002.XGP-GPC-CD skip;
    set TI0DM002.TI-CUST-NEED-BDT skip;
    if (converseVar.validationMsgNum == 0)
      set TI0DM002.XXX-STAT cursor;
    end
    return;
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, protect the modifiable fields on the screen.*/
   /* ------------------------------------------------------------*/

  set TI0DM002.CU-CO-ID skip; /**/
  set TI0DM002.CU-STOR-ID skip; /**/
  set TI0DM002.XNX-DEPT-ID-XREF skip; /**/
  set TI0DM002.XGP-GPC-CD skip; /**/
  set TI0DM002.XHD-HNDL-CD1 skip; /**/
  set TI0DM002.XHD-HNDL-CD2 skip; /**/
  set TI0DM002.XHD-HNDL-CD3 skip; /**/
  set TI0DM002.XOB-BASE-OT-CD1 skip;
  set TI0DM002.XOB-BASE-OT-CD2 skip;
  set TI0DM002.XOB-BASE-OT-CD3 skip;
  set TI0DM002.XDS-DIR-SHIP-CD1 skip;
  set TI0DM002.XDS-DIR-SHIP-CD2 skip;
  set TI0DM002.XDS-DIR-SHIP-CD3 skip;
  set TI0DM002.TI-CUST-NEED-BDT skip; /**/
  set TI0DM002.TI-CUST-NEED-EDT skip; /**/
  set TI0DM002.TI-CUTK-CASELOT-FL skip; /**/
  set TI0DM002.TI-CUTK-PRC-TKT-FL skip; /**/
  set TI0DM002.XXX-STAT skip; /**/

end // end TI0D-22200

// Check attention identifier
Function TI0D-23000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (TI0DW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set TI0DW02 empty; /* M002 display storage*/
    end

    TI0DW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TI0DW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If REFRESH was requested, copy W02 back to M002.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf5) /* PA2 was pressed*/

    move TI0DW02 to TI0DM002 withV60Compat; /* ;/* Refresh the map*/

    converseLib.validationFailed(49); /* Screen has been refreshed*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      TI0DS-TA0050-P(); /* Purge any temporary storage*/

      XSTIS-EXIT(); /* Exit to another application*/

      set TI0DM001.CATOAP cursor, bold; /* Highlight*/

      TI0DW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

    else

      TIWREC.XXX-MSG-LOC-ID = "23000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  /* IF EZEAID IS PF1                 /* PF1 was pressed*/
  /* OR EZEAID IS PF3               /* or PF3 was pressed*/
  if (converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

  /* IF EZEAID IS PF1;              /* PF1 was pressed*/
  /* MOVE 'TI0DM002' TO COMMAREA.CAITEM;/* Application find code*/
  /* END;*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      TI0DW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
      TI0DW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

      exit stack; /* Exit to display map*/

    end

    TI0DS-TA0050-P(); /* Purge any temporary storage*/

    XSTIS-EXIT(); /* Exit to another application*/

    TI0DW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

    exit stack; /* Exit to display map*/

  end

  if (converseVar.eventKey is pf1)

    TI0DWM02.XXX-MSG-LOC-ID = TI0DM002.XXX-MSG-LOC-ID;
    TI0DWM02.XGP-GPC-CD = TI0DM002.XGP-GPC-CD;
    TI0DWM02.CU-CO-ID = TI0DM002.CU-CO-ID;
    TI0DWM02.CU-CO-NM = TI0DM002.CU-CO-NM;
    TI0DWM02.CU-STOR-ID = TI0DM002.CU-STOR-ID;
    TI0DWM02.XNX-DEPT-ID-XREF = TI0DM002.XNX-DEPT-ID-XREF;
    TI0DWM02.TI-CUST-NEED-BDT = TI0DM002.TI-CUST-NEED-BDT;
    TI0DWM02.XHD-HNDL-CD1 = TI0DM002.XHD-HNDL-CD1;
    TI0DWM02.XHD-HNDL-CD2 = TI0DM002.XHD-HNDL-CD2;
    TI0DWM02.XHD-HNDL-CD3 = TI0DM002.XHD-HNDL-CD3;
    TI0DWM02.XOB-BASE-OT-CD1 = TI0DM002.XOB-BASE-OT-CD1;
    TI0DWM02.XOB-BASE-OT-CD2 = TI0DM002.XOB-BASE-OT-CD2;
    TI0DWM02.XOB-BASE-OT-CD3 = TI0DM002.XOB-BASE-OT-CD3;
    TI0DWM02.XDS-DIR-SHIP-CD1 = TI0DM002.XDS-DIR-SHIP-CD1;
    TI0DWM02.XDS-DIR-SHIP-CD2 = TI0DM002.XDS-DIR-SHIP-CD2;
    TI0DWM02.XDS-DIR-SHIP-CD3 = TI0DM002.XDS-DIR-SHIP-CD3;
    TI0DWM02.XXX-STAT = TI0DM002.XXX-STAT;
    TI0DWM02.CATOAP = TI0DM002.CATOAP;
    TI0DWM02.CAITEM = TI0DM002.CAITEM;

    TIWREC.XXX-MSG-LOC-ID = "10000";

    TIWREC.XXX-MSG-NBR = 0;

    COMMAREA.CAUSERA = TIWREC.CAUSERA;

    TI0DW00.XXX-MAP-FMAT-FL = "Y";

    TI0DWCA1.TI0DWCA1-TI0DW00 = TI0DW00.TI0DW00-REC;

    TI0DWCA1.TI0DWCA1-TI0DW01 = TI0DW01.TI0DW01-REC;

    TI0DWCA1.TI0DWCA1-TI0DW02 = TI0DW02.TI0DW02-REC;

    TI0DWCA1.TI0DWCA1-TI0DWM02 = TI0DWM02.TI0DWM02-REC;

    TI0DWCA1.TI0DWCA1-TA5REC = TA5REC.TA5DATA;

    TI0DWCA1.TI0DWCA1-CAADD = COMMAREA.CAADD;
    TI0DWCA1.TI0DWCA1-CACHG = COMMAREA.CACHG;
    TI0DWCA1.TI0DWCA1-CADEL = COMMAREA.CADEL;
    TI0DWCA1.TI0DWCA1-CAINQ = COMMAREA.CAINQ;

    TI0DWCA1.TI0EWCA1-SAVE-INX-FLD-NBR = TI0DW00.XXX-INX-FLD-NBR;

    TI0DWCA1.XXX-LN-SEL-IND = TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];

    TI0DWCA1.XXX-MSG-LOC-ID = TIWREC.XXX-MSG-LOC-ID;

    TI0DWCA1.XXX-MSG-NBR = TIWREC.XXX-MSG-NBR;

    TI0DWCA1.TI-CUTK-XMIT-CD = TIWREC.TI-CUTK-XMIT-CD;

    COMMAREA.CA-USER-WORKAREA-2K-B = TI0DWCA1.TI0DWCA1-REC;
    COMMAREA.CAFROMAP = "TI0D";

    COMMAREA.CACURRAP = "TI0D";

    COMMAREA.CATOAP = "GD01";

    COMMAREA.CAITEM = "TI0DM002";

    XSTIS-EXIT();

    set TI0DM002.CATOAP cursor, bold;

    TI0DW00.XXX-MAP-DSP-CD = "1";

    TIWREC.XXX-MSG-LOC-ID = "23000";
    converseLib.validationFailed(78);

    exit stack;

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf12) /* and PF12 was not pressed*/

    TIWREC.XXX-MSG-LOC-ID = "23000"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end TI0D-23000

// Verify data that was entered
Function TI0D-24000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    TIWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    set TI0DM002.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If changed, verify the entered code.*/
   /* ------------------------------------------------------------*/
  if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A"
   || TI0DWCA1.XXX-LN-SEL-IND == "A"
   || TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C"
   || TI0DWCA1.XXX-LN-SEL-IND == "C")
    TI0D-24100();
  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* If EDIT requested, indicate edit completed and no errors.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf12) /* PF12 was pressed*/

    TIWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
    converseLib.validationFailed(17); /* Edit completed and no errors*/

    exit stack; /* Exit to display map*/

  end


end // end TI0D-24000

// Verify entered values
Function TI0D-24100()
   /* ------------------------------------------------------------*/
   /* Put validation edits here.*/
   /* ------------------------------------------------------------*/

  TI0DS-EDT-CUTKT-FL(); /* Edit price and caselot tkt flags*/
  TI0DS-EDT-HDL-CD(); /* Edit all 3 special handling codes*/
  TI0DS-EDT-SHIP-CD(); /* Edit all 3 ship codes*/
  TI0DS-EDT-OT(); /* Edit all 3 order types codes*/
  TI0DS-EDT-STAT-CD(); /* Edit status code*/
  TI0DS-EDT-NEED-DT(); /* Edit customer beginning need date*/
  TI0DS-EDT-NEED-EDT(); /* Edit customer ending need date*/
  TI0DS-EDT-DEPT(); /* Edit dept id*/
  TI0DS-EDT-STORE(); /* Edit store id*/
  TI0DS-EDT-COMPANY(); /* Edit company code*/
  TI0DS-EDT-GPC(); /* Edit GPC code*/
  if (converseVar.validationMsgNum > 0) /* If failed any edit checks,*/
    exit stack; /* return screen to user*/
  end
end // end TI0D-24100

// Process valid input request
Function TI0D-25000()
   /* ------------------------------------------------------------*/
   /* If no modifiable data changed, search for next selection.*/
   /* ------------------------------------------------------------*/

  if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C"
   || TI0DWCA1.XXX-LN-SEL-IND == "C"
   || TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "S"
   || TI0DWCA1.XXX-LN-SEL-IND == "S")
    if (TI0DM002.XXX-STAT == TI0DW02.XXX-STAT
     && TI0DM002.XHD-HNDL-CD1 == TI0DW02.XHD-HNDL-CD1
     && TI0DM002.XHD-HNDL-CD2 == TI0DW02.XHD-HNDL-CD2
     && TI0DM002.XHD-HNDL-CD3 == TI0DW02.XHD-HNDL-CD3
     && TI0DM002.TI-CUTK-CASELOT-FL == TI0DW02.TI-CUTK-CASELOT-FL
     && TI0DM002.TI-CUTK-PRC-TKT-FL == TI0DW02.TI-CUTK-PRC-TKT-FL
     && TI0DM002.XOB-BASE-OT-CD1 == TI0DW02.XOB-BASE-OT-CD1
     && TI0DM002.XOB-BASE-OT-CD2 == TI0DW02.XOB-BASE-OT-CD2
     && TI0DM002.XOB-BASE-OT-CD3 == TI0DW02.XOB-BASE-OT-CD3
     && TI0DM002.XDS-DIR-SHIP-CD1 == TI0DW02.XDS-DIR-SHIP-CD1
     && TI0DM002.XDS-DIR-SHIP-CD2 == TI0DW02.XDS-DIR-SHIP-CD2
     && TI0DM002.XDS-DIR-SHIP-CD3 == TI0DW02.XDS-DIR-SHIP-CD3
     && TI0DM002.TI-CUST-NEED-BDT == TI0DW02.TI-CUST-NEED-BDT
     && TI0DM002.TI-CUST-NEED-EDT == TI0DW02.TI-CUST-NEED-EDT)

      TI0D-25100(); /* Search for next selection*/

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Obtain the current date and time.*/
   /* ------------------------------------------------------------*/

  XX0XS01(); /* Obtain date and time*/

   /* ------------------------------------------------------------*/
   /* Update the changed data in the table row.*/
   /* ------------------------------------------------------------*/


  VTOREQ01.CU-CO-ID = TI0DM002.CU-CO-ID; /**/
  VTOREQ01.TI-CUST-NEED-BDT = TI0DM002.TI-CUST-NEED-BDT; /**/
  VTOREQ01.TI-CUST-NEED-EDT = TI0DM002.TI-CUST-NEED-EDT; /**/
  VTOREQ01.CU-STOR-ID = TI0DM002.CU-STOR-ID; /**/
  VTOREQ01.XNX-DEPT-ID-XREF = TI0DM002.XNX-DEPT-ID-XREF; /**/
  VTOREQ01.XGP-GPC-CD = TI0DM002.XGP-GPC-CD; /**/
  VTOREQ01.XHD-HNDL-CD1 = TI0DM002.XHD-HNDL-CD1;
  VTOREQ01.XHD-HNDL-CD2 = TI0DM002.XHD-HNDL-CD2;
  VTOREQ01.XHD-HNDL-CD3 = TI0DM002.XHD-HNDL-CD3;
  VTOREQ01.TI-CUTK-CASELOT-FL = TI0DM002.TI-CUTK-CASELOT-FL;
  VTOREQ01.TI-CUTK-PRC-TKT-FL = TI0DM002.TI-CUTK-PRC-TKT-FL;
  VTOREQ01.XOB-BASE-OT-CD1 = TI0DM002.XOB-BASE-OT-CD1;
  VTOREQ01.XOB-BASE-OT-CD2 = TI0DM002.XOB-BASE-OT-CD2;
  VTOREQ01.XOB-BASE-OT-CD3 = TI0DM002.XOB-BASE-OT-CD3;
  VTOREQ01.XDS-DIR-SHIP-CD1 = TI0DM002.XDS-DIR-SHIP-CD1;
  VTOREQ01.XDS-DIR-SHIP-CD2 = TI0DM002.XDS-DIR-SHIP-CD2;
  VTOREQ01.XDS-DIR-SHIP-CD3 = TI0DM002.XDS-DIR-SHIP-CD3;
  VTOREQ01.XXX-STAT = TI0DM002.XXX-STAT; /**/
  VTOREQ01.ZZ-CHNG-CNT = TI0DW02.ZZ-CHNG-CNT;

  VTOREQ01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* Change date*/
  VTOREQ01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* Change time*/

  if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C"
   || TI0DWCA1.XXX-LN-SEL-IND == "C")
    TI0DS-VTOREQ01-U(); /* Update the table row*/
  else
    TI0DS-VTOREQ01-A(); /* Add the table row*/
  end

   /* ------------------------------------------------------------*/
   /* Commit all changes and refresh the data to be displayed.*/
   /* ------------------------------------------------------------*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit(); /* Commit all changes*/

  TIWREC.XXX-MSG-LOC-ID = "25000"; /* Message location*/
  TIWREC.XXX-MSG-NBR = 1; /* Table update was completed*/

  TI0DW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

end // end TI0D-25000

// Search for next selection
Function TI0D-25100()
   /* ------------------------------------------------------------*/
   /* Determine if another line was selected for viewing.*/
   /* ------------------------------------------------------------*/

  if ("S" in TI0DW01.XXX-LN-SEL-IND from XXX-INX-FLD-NBR) /* Line was selected*/

    TI0DW00.XXX-INX-FLD-NBR = sysVar.arrayIndex; /* Map line index*/

    TI0DM002.XGP-GPC-CD = TI0DW01.XGP-GPC-CD[XXX-INX-FLD-NBR];
    TI0DM002.CU-STOR-ID = TI0DW01.CU-STOR-ID[XXX-INX-FLD-NBR];
    TI0DM002.TI-CUST-NEED-BDT = TI0DW01.TI-CUST-NEED-BDT[XXX-INX-FLD-NBR];
    TI0DM002.XXX-STAT = TI0DW01.XXX-STAT[XXX-INX-FLD-NBR];
                                   /* GPC code*/
    TI0DM002.CU-CO-ID = TI0DW01.CU-CO-ID[XXX-INX-FLD-NBR];
                                   /* Customer*/
    TI0DW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

  else

    TI0DW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    TI0DW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

  end


end // end TI0D-25100

// CALL DATE VALIDATION ROUTINE
Function TI0DS-1-TA0040()
   /* ------------------------------------------------------------*/
   /* call ta2 date convert  routine*/
   /* ------------------------------------------------------------*/

  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2DTOPT = "GREGJUL";
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* date convert*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    return;

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "TA0040 DATE CONVERT     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Application name*/
  TA1REC.TA1PGMNM = "TI0DS1"; /* Process name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process TI0DS1 -----------------------*/


end // end TI0DS-1-TA0040

Function TI0DS-EDT-COMPANY()
  /* ------------------------------------------------*/
  /* Validate company, pull in company name.*/
  /* ------------------------------------------------*/
  if (TI0DM002.CU-CO-ID == 0)
    converseLib.validationFailed(89);
    set TI0DM002.CU-CO-ID bold, cursor;
  else
    KUCREC.KUCCOID = TI0DM002.CU-CO-ID;
    TI0DS-VCMPNY01-S();
    if (SQLCA.VAGen_SQLCODE == 0)
      TI0DM002.CU-CO-NM = KUCREC.KUCCONM;
    else
      converseLib.validationFailed(31);
      set TI0DM002.CU-CO-ID bold, cursor;
    end
  end
end // end TI0DS-EDT-COMPANY

Function TI0DS-EDT-CUTKT-FL()
  /* ----------------------------------------------------------------*/
  /* Edit price and caselot ticketing flags*/
  /* ----------------------------------------------------------------*/
  /*  */
  if (TI0DM002.TI-CUTK-CASELOT-FL != "Y"
   && TI0DM002.TI-CUTK-CASELOT-FL != "N")
    converseLib.validationFailed(107); /* Only y and n are valid flag values*/
    set TI0DM002.TI-CUTK-CASELOT-FL bold, cursor;
  end
  if (TI0DM002.TI-CUTK-PRC-TKT-FL != "Y"
   && TI0DM002.TI-CUTK-PRC-TKT-FL != "N")
    converseLib.validationFailed(107); /* Only y and n are valid flag values*/
    set TI0DM002.TI-CUTK-PRC-TKT-FL bold, cursor;
  end
end // end TI0DS-EDT-CUTKT-FL

// edit dept id
Function TI0DS-EDT-DEPT()
  if (TI0DM002.XNX-DEPT-ID-XREF == 0)
    converseLib.validationFailed(91);
    set TI0DM002.XNX-DEPT-ID-XREF bold, cursor;
  else
    if (TI0DM002.CU-STOR-ID == -1)
     /* continue*/
    else
      if (TI0DM002.XNX-DEPT-ID-XREF in XNXTBL.XNXCD
       && XNXTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
        TI0DM002.XNXDESC = XNXTBL.XNXDESC;
      else
        converseLib.validationFailed(92);
        set TI0DM002.XNX-DEPT-ID-XREF bold, cursor;
      end
    end
  end
end // end TI0DS-EDT-DEPT

Function TI0DS-EDT-GPC()
  /* -----------------------------------------------------------*/
  /* Edit GPC code.*/
  /* -----------------------------------------------------------*/
  if (TI0DM002.XGP-GPC-CD == " ")
    set TI0DM002.XGP-GPC-CD bold, cursor;
    converseLib.validationFailed(27);
  else
    if (TI0DM002.XGP-GPC-CD in XGPTBL.XGPCD)
      if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A"
       || TI0DWCA1.XXX-LN-SEL-IND == "A")
        if (TI0DM002.XGP-GPC-CD == "03")
          if (COMMAREA.CAALVL[2] == "N") /* FOR GPC CODE 03*/
            set TI0DM002.XGP-GPC-CD bold, cursor;
            converseLib.validationFailed(65);
          end
        else
          if (TI0DM002.XGP-GPC-CD == "02")
            if (COMMAREA.CAALVL[1] == "N") /* FOR GPC CODE 02*/
              set TI0DM002.XGP-GPC-CD bold, cursor;
              converseLib.validationFailed(64);
            end
          end
        end
      end

      if (TI0DM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C"
       || TI0DWCA1.XXX-LN-SEL-IND == "C")
        if (TI0DM002.XGP-GPC-CD == "03")
          if (COMMAREA.CACLVL[2] == "N") /* FOR GPC CODE 03*/
            set TI0DM002.XGP-GPC-CD bold, cursor;
            converseLib.validationFailed(65);
          end
        else
          if (TI0DM002.XGP-GPC-CD == "02")
            if (COMMAREA.CACLVL[1] == "N") /* FOR GPC CODE 02*/
              set TI0DM002.XGP-GPC-CD bold, cursor;
              converseLib.validationFailed(64);
            end
          end
        end
      end

    else
      set TI0DM002.XGP-GPC-CD bold, cursor;
      converseLib.validationFailed(28);
    end
  end
end // end TI0DS-EDT-GPC

Function TI0DS-EDT-HDL-CD()
  /* ----------------------------------------------------------------*/
  /* Edit handling codes.*/
  /* ----------------------------------------------------------------*/
  if (TI0DM002.XHD-HNDL-CD3 == " "
   && TI0DM002.XHD-HNDL-CD2 == " "
   && TI0DM002.XHD-HNDL-CD1 == " ")
    set TI0DM002.XHD-HNDL-CD1 bold, cursor;
    converseLib.validationFailed(101); /* Must have at least 1 spcl hndl cd*/
  else
    TI0DW00.XGPCD = TI0DM002.XGP-GPC-CD;
    if (TI0DM002.XHD-HNDL-CD3 > " ")
      TI0DW00.XHDCD = TI0DM002.XHD-HNDL-CD3;
      if (TI0DW00.XHDKEY in XHDTBL.XHDKEY
       && XHDTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
       /* NEXT SENTENCE*/
      else
        set TI0DM002.XGP-GPC-CD bold;
        set TI0DM002.XHD-HNDL-CD3 bold, cursor;
        converseLib.validationFailed(30); /* Invalid combination of GPC and HNDL*/
                                   /* cd*/
      end
    end
    if (TI0DM002.XHD-HNDL-CD2 > " ")
      TI0DW00.XHDCD = TI0DM002.XHD-HNDL-CD2;
      if (TI0DW00.XHDKEY in XHDTBL.XHDKEY
       && XHDTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
       /* NEXT SENTENCE*/
      else
        set TI0DM002.XGP-GPC-CD bold;
        set TI0DM002.XHD-HNDL-CD2 bold, cursor;
        converseLib.validationFailed(30); /* Invalid combination of GPC and HNDL*/
                                   /* cd*/
      end
    end
    if (TI0DM002.XHD-HNDL-CD1 > " ")
      TI0DW00.XHDCD = TI0DM002.XHD-HNDL-CD1;
      if (TI0DW00.XHDKEY in XHDTBL.XHDKEY
       && XHDTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    /* NEXT SENTENCE*/
      else
        set TI0DM002.XGP-GPC-CD bold;
        set TI0DM002.XHD-HNDL-CD1 bold, cursor;
        converseLib.validationFailed(30);
      end
    end
    if ((converseVar.validationMsgNum != 30 && converseVar.validationMsgNum != 102)
     && ((TI0DM002.XHD-HNDL-CD1 != " "
     && TI0DM002.XHD-HNDL-CD2 != " ")
     || (TI0DM002.XHD-HNDL-CD1 != " "
     && TI0DM002.XHD-HNDL-CD3 != " ")
     || (TI0DM002.XHD-HNDL-CD2 != " "
     && TI0DM002.XHD-HNDL-CD3 != " ")))
      if (TI0DM002.XHD-HNDL-CD1 == TI0DM002.XHD-HNDL-CD2
       || TI0DM002.XHD-HNDL-CD1 == TI0DM002.XHD-HNDL-CD3
       || TI0DM002.XHD-HNDL-CD2 == TI0DM002.XHD-HNDL-CD3)
        converseLib.validationFailed(102); /* only one of each handling code*/
        set TI0DM002.XHD-HNDL-CD1 cursor, bold;
      end
    end
  end
end // end TI0DS-EDT-HDL-CD

Function TI0DS-EDT-NEED-DT()
  /* ----------------------------------------------------------------*/
  /* edit customer need-by date*/
  /* ----------------------------------------------------------------*/
  if (TI0DM002.TI-CUST-NEED-BDT == 0)
    converseLib.validationFailed(93); /* must enter date*/
    set TI0DM002.TI-CUST-NEED-BDT cursor, bold;
  else
    set TA2REC empty;
    TA2REC.TA2GRGGN = TI0DM002.TI-CUST-NEED-BDT;

    TI0DS-1-TA0040(); /* CALL DATE VALIDATION ROUTINE*/

    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(94); /* Invalid date entered*/
      set TI0DM002.TI-CUST-NEED-BDT cursor, bold;
    end
  end
end // end TI0DS-EDT-NEED-DT

Function TI0DS-EDT-NEED-EDT()
  /* ----------------------------------------------------------------*/
  /* edit customer need-by date*/
  /* ----------------------------------------------------------------*/
  if (TI0DM002.TI-CUST-NEED-EDT > 0)
    set TA2REC empty;
    TA2REC.TA2GRGGN = TI0DM002.TI-CUST-NEED-EDT;

    TI0DS-1-TA0040(); /* CALL DATE VALIDATION ROUTINE*/

    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(94); /* Invalid date entered*/
      set TI0DM002.TI-CUST-NEED-EDT cursor, bold;
    end
  end
end // end TI0DS-EDT-NEED-EDT

// edit order type
Function TI0DS-EDT-OT()
  if (TI0DM002.XOB-BASE-OT-CD1 == " "
   && TI0DM002.XOB-BASE-OT-CD2 == " "
   && TI0DM002.XOB-BASE-OT-CD3 == " ")
    set TI0DM002.XOB-BASE-OT-CD1 bold, cursor;
    converseLib.validationFailed(96); /* Must have at least 1 order type*/
  else
    if (TI0DM002.XOB-BASE-OT-CD3 != " ")
      if (TI0DM002.XOB-BASE-OT-CD3 in XOBTBL.XOBCD
       && XOBTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      /* CONTINUE*/
      else
   /* MOVE 82 TO EZEMNO;         /* INVALID ORDER TYPE*/
        converseLib.validationFailed(106); /* INVALID ORDER TYPE*/
        set TI0DM002.XOB-BASE-OT-CD3 cursor, bold;
      end
    end
    if (TI0DM002.XOB-BASE-OT-CD2 != " ")
      if (TI0DM002.XOB-BASE-OT-CD2 in XOBTBL.XOBCD
       && XOBTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      /* CONTINUE*/
      else
   /* MOVE 82 TO EZEMNO;         /* INVALID ORDER TYPE*/
        converseLib.validationFailed(106); /* INVALID ORDER TYPE*/
        set TI0DM002.XOB-BASE-OT-CD2 cursor, bold;
      end
    end
    if (TI0DM002.XOB-BASE-OT-CD1 != " ")
      if (TI0DM002.XOB-BASE-OT-CD1 in XOBTBL.XOBCD
       && XOBTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      /* CONTINUE*/
      else
   /* MOVE 82 TO EZEMNO;         /* INVALID ORDER TYPE*/
        converseLib.validationFailed(106); /* INVALID ORDER TYPE*/
        set TI0DM002.XOB-BASE-OT-CD1 cursor, bold;
      end
    end
   /* IF (EZEMNO NE 82 AND EZEMNO NE 96)*/
    if ((converseVar.validationMsgNum != 106 && converseVar.validationMsgNum != 96)
     && ((TI0DM002.XOB-BASE-OT-CD1 != " "
     && TI0DM002.XOB-BASE-OT-CD2 != " ")
     || (TI0DM002.XOB-BASE-OT-CD1 != " "
     && TI0DM002.XOB-BASE-OT-CD3 != " ")
     || (TI0DM002.XOB-BASE-OT-CD2 != " "
     && TI0DM002.XOB-BASE-OT-CD3 != " ")))
      if (TI0DM002.XOB-BASE-OT-CD1 == TI0DM002.XOB-BASE-OT-CD2
       || TI0DM002.XOB-BASE-OT-CD1 == TI0DM002.XOB-BASE-OT-CD3
       || TI0DM002.XOB-BASE-OT-CD2 == TI0DM002.XOB-BASE-OT-CD3)
        converseLib.validationFailed(97); /* ONLY ONE OF EACH ORDER TYPE*/
        set TI0DM002.XOB-BASE-OT-CD1 cursor, bold;
      end
    end
  end
end // end TI0DS-EDT-OT

// edit order type
Function TI0DS-EDT-SHIP-CD()
  /* ----------------------------------------------------------------*/
  /* Edit ship codes.*/
  /* ----------------------------------------------------------------*/
  if (TI0DM002.XDS-DIR-SHIP-CD1 == " "
   && TI0DM002.XDS-DIR-SHIP-CD2 == " "
   && TI0DM002.XDS-DIR-SHIP-CD3 == " ")
    set TI0DM002.XDS-DIR-SHIP-CD1 bold, cursor;
    converseLib.validationFailed(98); /* Must have at least 1 order type*/
  else
    if (TI0DM002.XDS-DIR-SHIP-CD3 != " ")
      if (TI0DM002.XDS-DIR-SHIP-CD3 in XDSTBL.XDSCD
       && XDSTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      /* CONTINUE*/
      else
        converseLib.validationFailed(99); /* INVALID ORDER TYPE*/
        set TI0DM002.XDS-DIR-SHIP-CD3 cursor, bold;
      end
    end
    if (TI0DM002.XDS-DIR-SHIP-CD2 != " ")
      if (TI0DM002.XDS-DIR-SHIP-CD2 in XDSTBL.XDSCD
       && XDSTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      /* CONTINUE*/
      else
        converseLib.validationFailed(99); /* INVALID ORDER TYPE*/
        set TI0DM002.XDS-DIR-SHIP-CD2 cursor, bold;
      end
    end
    if (TI0DM002.XDS-DIR-SHIP-CD1 != " ")
      if (TI0DM002.XDS-DIR-SHIP-CD1 in XDSTBL.XDSCD
       && XDSTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      /* CONTINUE*/
      else
        converseLib.validationFailed(99); /* INVALID ORDER TYPE*/
        set TI0DM002.XDS-DIR-SHIP-CD1 cursor, bold;
      end
    end
    if ((converseVar.validationMsgNum != 99 && converseVar.validationMsgNum != 98)
     && ((TI0DM002.XDS-DIR-SHIP-CD1 != " "
     && TI0DM002.XDS-DIR-SHIP-CD2 != " ")
     || (TI0DM002.XDS-DIR-SHIP-CD1 != " "
     && TI0DM002.XDS-DIR-SHIP-CD3 != " ")
     || (TI0DM002.XDS-DIR-SHIP-CD2 != " "
     && TI0DM002.XDS-DIR-SHIP-CD3 != " ")))
      if (TI0DM002.XDS-DIR-SHIP-CD1 == TI0DM002.XDS-DIR-SHIP-CD2
       || TI0DM002.XDS-DIR-SHIP-CD1 == TI0DM002.XDS-DIR-SHIP-CD3
       || TI0DM002.XDS-DIR-SHIP-CD2 == TI0DM002.XDS-DIR-SHIP-CD3)
        converseLib.validationFailed(100); /* ONLY ONE OF EACH ORDER TYPE*/
        set TI0DM002.XDS-DIR-SHIP-CD1 cursor, bold;
      end
    end
  end
end // end TI0DS-EDT-SHIP-CD

Function TI0DS-EDT-STAT-CD()
  /* ----------------------------------------------------------------*/
  /* Edit Status.*/
  /* ----------------------------------------------------------------*/
  /*  */
  if (TI0DM002.XXX-STAT == " ")
    converseLib.validationFailed(95); /* must enter status code*/
    set TI0DM002.XXX-STAT bold, cursor;
  else
    if (TI0DM002.XXX-STAT != "A"
     && TI0DM002.XXX-STAT != "I")
      converseLib.validationFailed(43); /* Only A and I are valid stat codes*/
      set TI0DM002.XXX-STAT bold, cursor;
    end
  end
end // end TI0DS-EDT-STAT-CD

// edit store id
Function TI0DS-EDT-STORE()
  if (TI0DM002.CU-STOR-ID == 0)
   /* MOVE 88 TO EZEMNO;*/
    converseLib.validationFailed(105);
    set TI0DM002.CU-STOR-ID bold, cursor;
  else
    if (TI0DM002.CU-STOR-ID == -1)
  /* CONTINUE*/
    else
      set VTOREQ01 empty;
      VSTORE02.CU-CO-ID = TI0DM002.CU-CO-ID;
      VSTORE02.CU-STOR-ID = TI0DM002.CU-STOR-ID;
      TI0DS-VSTORE02-S();
      if (SQLCA.VAGen_SQLCODE == 0)
        TI0DM002.CU-STOR-NM = VSTORE02.CU-STOR-NM;
      end
      if (SQLCA.VAGen_SQLCODE != 0) /* Normal return code*/
        converseLib.validationFailed(90);
        set TI0DM002.CU-STOR-ID bold, cursor;
      end
    end
  end
end // end TI0DS-EDT-STORE

// Add page to temporary storage
Function TI0DS-TA0050-A()
   /* ------------------------------------------------------------*/
   /* Add the next page to the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TI0DW01.XXX-TEMP-STG-LNTH = TI0DW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (TI0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set TI0DW01 empty; /* M001 display storage*/

    TI0DW00.XXX-HI-PAGE-NBR = TA5REC.TA5TSQIX; /* Highest page number*/

    TA5REC.TA5TSQIX = 0; /* Clear last page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TIWREC.XXX-MSG-LOC-ID = "TA0050A"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0DS-TA0050-A

// Purge any temporary storage
Function TI0DS-TA0050-P()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set TI0DW01 empty; /* M001 display storage*/

  TI0DW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

  TA5REC.TA5TSQIX = 0; /* Displayed page number*/
  TI0DW00.XXX-HI-PAGE-NBR = 0; /* Highest page number*/

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (TI0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Purge storage*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TIWREC.XXX-MSG-LOC-ID = "TA0050P"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0DS-TA0050-P

// Read temporary storage page
Function TI0DS-TA0050-R()
   /* ------------------------------------------------------------*/
   /* Read the next page from the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TI0DW01.XXX-TEMP-STG-LNTH = TI0DW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = TI0DW00.XXX-CURR-PAGE-NBR; /* Page number*/

  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (TI0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Read page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TIWREC.XXX-MSG-LOC-ID = "TA0050R"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "READ TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0DS-TA0050-R

// Update temporary storage page
Function TI0DS-TA0050-U()
   /* ------------------------------------------------------------*/
   /* Update the page in the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TI0DW01.XXX-TEMP-STG-LNTH = TI0DW00.XXX-TEMP-STG-LNTH;

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (TI0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TIWREC.XXX-MSG-LOC-ID = "TA0050U"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0DS-TA0050-U

// Select the company name
Function TI0DS-VCMPNY01-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0   /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100 /* Not found*/
    )                             
      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TIWREC.XXX-MSG-LOC-ID = "IO0240S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTOREQ01"; /* Table view name*/
  TA1REC.TA1TBLKE = TI0DW00.TOREQKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0DS-VCMPNY01-S

// Select the table row
Function TI0DS-VSTORE02-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VSTORE02" ("S ", SQLCA, VSTORE02) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VSTORE02S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DCUST    "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSTORE02"; /* Table view name*/
  TA1REC.TA1TBLKE = TI0DW00.TOREQKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0DS-VSTORE02-S

// Update the table row
Function TI0DS-VTOREQ01-A()
   /* ------------------------------------------------------------*/
   /* Add the specified row in the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VTOREQ01" ("A ", SQLCA, VTOREQ01) {isNoRefresh = yes, isExternal = yes};
  end /* Update row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VTOREQ01U"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else
    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == -803)   /* and resource not available*/

      converseLib.validationFailed(16); /* Data in use by another*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/

      converseLib.validationFailed(10); /* Unexpected error occurred*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before display*/

    end
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTOREQ01"; /* Table view name*/
  TA1REC.TA1TBLKE = TI0DW00.TOREQKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0DS-VTOREQ01-A

// Close selected set cursor
Function TI0DS-VTOREQ01-CS()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "VTOREQ01" ("C1", SQLCA, VTOREQ01) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VTOREQ01CS"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTOREQ01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0DS-VTOREQ01-CS

// Select the table row
Function TI0DS-VTOREQ01-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VTOREQ01" ("S ", SQLCA, VTOREQ01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VTOREQ01S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTOREQ01"; /* Table view name*/
  TA1REC.TA1TBLKE = TI0DW00.TOREQKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0DS-VTOREQ01-S

// Fetch next row in cursor
Function TI0DS-VTOREQ01-SN()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VTOREQ01" ("N1", SQLCA, VTOREQ01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch*/
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      TI0DW00.TI0DW-COREQ-EOF-FL = "Y"; /* End of cursor*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VTOREQ01SN"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTOREQ01"; /* Table view name*/
  TA1REC.TA1TBLKE = TI0DW00.TOREQKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0DS-VTOREQ01-SN

// Select set and open cursor
Function TI0DS-VTOREQ01-SS()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VTOREQ01" ("S1", SQLCA, VTOREQ01) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VTOREQ01SS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTOREQ01"; /* Table view name*/
  TA1REC.TA1TBLKE = TI0DW00.TOREQKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0DS-VTOREQ01-SS

// Update the table row
Function TI0DS-VTOREQ01-U()
   /* ------------------------------------------------------------*/
   /* Update the specified row in the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VTOREQ01" ("U ", SQLCA, VTOREQ01) {isNoRefresh = yes, isExternal = yes};
  end /* Update row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If row not found, indicate the data was updated by another.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/

      TI0DW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

      TIWREC.XXX-MSG-LOC-ID = "VTOREQ01U"; /* Message location*/
      TIWREC.XXX-MSG-NBR = 12; /* Data was updated by another*/

      exit stack; /* Exit to display map*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VTOREQ01U"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTOREQ01"; /* Table view name*/
  TA1REC.TA1TBLKE = TI0DW00.TOREQKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0DS-VTOREQ01-U

//*** RECORD=TI0DW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record TI0DW00 type basicRecord
  5 TI0DW00-REC TI0DW00-REC ; 
    10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
    10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
    10 XXX-MAP-DSP-CD XXX-MAP-DSP-CD ; 
    10 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
    10 XXX-INX-LMT-NBR XXX-INX-LMT-NBR ; 
    10 XXX-INX-FLD-NBR XXX-INX-FLD-NBR ; 
    10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
    10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
    10 XXX-PAGE-UPD-FL XXX-PAGE-UPD-FL ; 
    10 TI0DW-COREQ-EOF-FL TI0DW-COREQ-EOF-FL ; 
    10 XHDKEY XHDKEY ; 
      15 XHDCD XHDCD ; 
      15 XGPCD XGPCD ; 
    10 TI0DM-XGP-GPC-CD TI0DM-XGP-GPC-CD ; 
    10 TI0DM-CU-CO-ID TI0DM-CU-CO-ID ; 
    10 TOREQKEY TOREQKEY ; 
      15 CU-CO-ID CU-CO-ID ; 
      15 XGP-GPC-CD XGP-GPC-CD ; 
      15 CU-STOR-ID CU-STOR-ID ; 
      15 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
      15 TI-CUST-NEED-BDT TI-CUST-NEED-BDT ; 
end // end TI0DW00

//*** RECORD=TI0DW01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record TI0DW01 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 TI0DW01-REC char(604) ; 
    10 TI0DM-XGP-GPC-CD TI0DM-XGP-GPC-CD ; 
    10 TI0DM-CU-CO-ID TI0DM-CU-CO-ID ; 
    10 XXX-LN-SEL-IND XXX-LN-SEL-IND [13] ; 
    10 CU-CO-ID CU-CO-ID [13] ; 
    10 CU-CO-NM CU-CO-NM [13] ; 
    10 XGP-GPC-CD XGP-GPC-CD [13] ; 
    10 CU-STOR-ID CU-STOR-ID [13] ; 
    10 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF [13] ; 
    10 TI-CUST-NEED-BDT TI-CUST-NEED-BDT [13] ; 
    10 XXX-STAT XXX-STAT [13] ; 
end // end TI0DW01

//*** RECORD=TI0DW02 ****
// ------------------------
// Map 002 display storage.
// ------------------------
// ***********************
Record TI0DW02 type basicRecord
  5 TI0DW02-REC TI0DW02-REC ; 
    10 XGP-GPC-CD XGP-GPC-CD ; 
    10 CU-CO-ID CU-CO-ID ; 
    10 CU-CO-NM CU-CO-NM ; 
    10 CU-STOR-ID CU-STOR-ID ; 
    10 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
    10 TI-CUST-NEED-BDT TI-CUST-NEED-BDT ; 
    10 TI-CUST-NEED-EDT TI-CUST-NEED-EDT ; 
    10 XXX-STAT XXX-STAT ; 
    10 XHD-HNDL-CD1 XHD-HNDL-CD1 ; 
    10 XHD-HNDL-CD2 XHD-HNDL-CD2 ; 
    10 XHD-HNDL-CD3 XHD-HNDL-CD3 ; 
    10 XDS-DIR-SHIP-CD1 XDS-DIR-SHIP-CD1 ; 
    10 XDS-DIR-SHIP-CD2 XDS-DIR-SHIP-CD2 ; 
    10 XDS-DIR-SHIP-CD3 XDS-DIR-SHIP-CD3 ; 
    10 XOB-BASE-OT-CD1 XOB-BASE-OT-CD1 ; 
    10 XOB-BASE-OT-CD2 XOB-BASE-OT-CD2 ; 
    10 XOB-BASE-OT-CD3 XOB-BASE-OT-CD3 ; 
    10 TI-CUTK-PRC-TKT-FL TI-CUTK-PRC-TKT-FL ; 
    10 TI-CUTK-CASELOT-FL TI-CUTK-CASELOT-FL ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end TI0DW02

//*** RECORD=TI0DWCA1 ****
// ------------------------------------------------------------
// TI0F application working storage.
// ------------------------------------------------------------
// ************************
Record TI0DWCA1 type basicRecord
  5 TI0DWCA1-REC TI0DWCA1-REC ; 
    10 TI0DWCA1-TI0DW00 TI0DWCA1-TI0DW00 ; 
    10 TI0DWCA1-TI0DW01 TI0DWCA1-TI0DW01 ; 
    10 TI0DWCA1-TI0DW02 TI0DWCA1-TI0DW02 ; 
    10 TI0DWCA1-TI0DWM01 TI0DWCA1-TI0DWM01 ; 
    10 TI0DWCA1-TI0DWM02 TI0DWCA1-TI0DWM02 ; 
    10 TI0DWCA1-TA5REC TI0DWCA1-TA5REC ; 
    10 TI0DWCA1-CAADD TI0DWCA1-CAADD ; 
    10 TI0DWCA1-CACHG TI0DWCA1-CACHG ; 
    10 TI0DWCA1-CADEL TI0DWCA1-CADEL ; 
    10 TI0DWCA1-CAINQ TI0DWCA1-CAINQ ; 
    10 XXX-MSG-LOC-ID XXX-MSG-LOC-ID ; 
    10 XXX-MSG-NBR XXX-MSG-NBR ; 
    10 TI-CUTK-XMIT-CD TI-CUTK-XMIT-CD ; 
    10 TI0EWCA1-SAVE-INX-FLD-NBR TI0EWCA1-SAVE-INX-FLD-NBR ; 
    10 XXX-LN-SEL-IND XXX-LN-SEL-IND ; 
    10 * char(689) ; 
end // end TI0DWCA1

//*** RECORD=TI0DWM01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ************************
Record TI0DWM01 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 TI0DWM01-REC TI0DWM01-REC ; 
    10 XXX-MSG-LOC-ID XXX-MSG-LOC-ID ; 
    10 XXX-CURR-DT XXX-CURR-DT ; 
    10 XXX-CURR-PAGE-DESC XXX-CURR-PAGE-DESC ; 
    10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
    10 XXX-HI-PAGE-DESC XXX-HI-PAGE-DESC ; 
    10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
    10 TI0DM-XGP-GPC-CD TI0DM-XGP-GPC-CD ; 
    10 TI0DM-CU-CO-ID TI0DM-CU-CO-ID ; 
    10 XXX-LN-SEL-IND XXX-LN-SEL-IND [13] ; 
    10 CU-CO-ID CU-CO-ID [13] ; 
    10 CU-CO-NM CU-CO-NM [13] ; 
    10 XGP-GPC-CD XGP-GPC-CD [13] ; 
    10 CU-STOR-ID CU-STOR-ID [13] ; 
    10 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF [13] ; 
    10 TI-CUST-NEED-BDT TI-CUST-NEED-BDT [13] ; 
    10 XXX-STAT XXX-STAT [13] ; 
    10 CATOAP CATOAP ; 
    10 CAITEM CAITEM ; 
end // end TI0DWM01

//*** RECORD=TI0DWM02 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ************************
Record TI0DWM02 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 TI0DWM02-REC TI0DWM02-REC ; 
    10 XXX-MSG-LOC-ID XXX-MSG-LOC-ID ; 
    10 XXX-CURR-DT XXX-CURR-DT ; 
    10 CU-CO-ID CU-CO-ID ; 
    10 CU-CO-NM CU-CO-NM ; 
    10 XGP-GPC-CD XGP-GPC-CD ; 
    10 CU-STOR-ID CU-STOR-ID ; 
    10 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
    10 TI-CUST-NEED-BDT TI-CUST-NEED-BDT ; 
    10 XOB-BASE-OT-CD1 XOB-BASE-OT-CD1 ; 
    10 XOB-BASE-OT-CD2 XOB-BASE-OT-CD2 ; 
    10 XOB-BASE-OT-CD3 XOB-BASE-OT-CD3 ; 
    10 XDS-DIR-SHIP-CD1 XDS-DIR-SHIP-CD1 ; 
    10 XDS-DIR-SHIP-CD2 XDS-DIR-SHIP-CD2 ; 
    10 XDS-DIR-SHIP-CD3 XDS-DIR-SHIP-CD3 ; 
    10 XHD-HNDL-CD1 XHD-HNDL-CD1 ; 
    10 XHD-HNDL-CD2 XHD-HNDL-CD2 ; 
    10 XHD-HNDL-CD3 XHD-HNDL-CD3 ; 
    10 XXX-STAT XXX-STAT ; 
    10 CATOAP CATOAP ; 
    10 CAITEM CAITEM ; 
end // end TI0DWM02

//*** RECORD=VTOREQ01 ****
// record layout for vtoreq01
// ************************
Record VTOREQ01 type basicRecord
  5 VTOREQ01-REC VTOREQ01-REC ; 
    10 CU-CO-ID CU-CO-ID ; 
    10 CU-STOR-ID CU-STOR-ID ; 
    10 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
    10 XGP-GPC-CD XGP-GPC-CD ; 
    10 XOB-BASE-OT-CD1 XOB-BASE-OT-CD1 ; 
    10 XOB-BASE-OT-CD2 XOB-BASE-OT-CD2 ; 
    10 XOB-BASE-OT-CD3 XOB-BASE-OT-CD3 ; 
    10 XDS-DIR-SHIP-CD1 XDS-DIR-SHIP-CD1 ; 
    10 XDS-DIR-SHIP-CD2 XDS-DIR-SHIP-CD2 ; 
    10 XDS-DIR-SHIP-CD3 XDS-DIR-SHIP-CD3 ; 
    10 XHD-HNDL-CD1 XHD-HNDL-CD1 ; 
    10 XHD-HNDL-CD2 XHD-HNDL-CD2 ; 
    10 XHD-HNDL-CD3 XHD-HNDL-CD3 ; 
    10 TI-CUTK-PRC-TKT-FL TI-CUTK-PRC-TKT-FL ; 
    10 TI-CUTK-CASELOT-FL TI-CUTK-CASELOT-FL ; 
    10 TI-CUST-NEED-BDT TI-CUST-NEED-BDT ; 
    10 TI-CUST-NEED-EDT TI-CUST-NEED-EDT ; 
    10 XXX-STAT XXX-STAT ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VTOREQ01

DataItem TI-CUST-NEED-BDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CUST-NEED-EDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CUTK-CASELOT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CUTK-PRC-TKT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// customer company id
DataItem TI0DM-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// XGP_GPC_CD
DataItem TI0DM-XGP-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DW-COREQ-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DW00-REC char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DW02-REC char(81)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DWCA1-CAADD char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DWCA1-CACHG char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DWCA1-CADEL char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DWCA1-CAINQ char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DWCA1-REC char(2236)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DWCA1-TA5REC char(10)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DWCA1-TI0DW00 char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DWCA1-TI0DW01 char(604)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DWCA1-TI0DW02 char(75)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DWCA1-TI0DWM01 char(654)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DWCA1-TI0DWM02 char(103)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DWM01-REC char(654)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0DWM02-REC char(103)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem TI0EWCA1-SAVE-INX-FLD-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem TOREQKEY char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem VTOREQ01-REC char(51)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XDS-DIR-SHIP-CD1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XDS-DIR-SHIP-CD2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XDS-DIR-SHIP-CD3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XOB-BASE-OT-CD1 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XOB-BASE-OT-CD2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XOB-BASE-OT-CD3 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

