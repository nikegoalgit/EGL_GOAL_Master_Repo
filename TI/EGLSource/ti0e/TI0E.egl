package ti0e;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import ku.common.*;
import pg.common.*;
import pk.common.*;
import sy.common.*;
import ta.common.*;
import ti.common.*;
//*** PROGRAM=TI0E ****
// This application allows a user to inquire and maintain rows
// in a DB2 table.
// 
// There are two different screens that may be displayed.
// 
// The first screen displayed to the user allows specification
// of the search criteria to be used to list the rows in the
// table.  The list is displayed and the user may page backward
// and forward to view the information.
// 
// When a line is selected on the screen, the second screen is
// displayed, showing all information for that table row.
// 
// If the user has sufficient security to change the data, the
// modifiable fields remain unprotected.  Otherwise, they are
// protected from modification by the user.
// 
// If any data is modified, it is verified and, if complete and
// correct, the table row is updated with the changed data.
// The screen is redisplayed to the user, indicating that the
// update is completed.
// 
// If more that one line was selected on the first screen, the
// next selection is displayed when the user presses the ENTER
// key without making any change to the displayed data.
// 
// When the user exits the second screen (either via PF3 key or
// after all selections have been viewed) the first screen is
// redisplayed, indicating the selections that were viewed.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      06/30/93  xxxxxx  New application.
// *********************
Program TI0E type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TI00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KUCREC KUCREC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TI0EW00 TI0EW00; // record
  TI0EW01 TI0EW01; // record
  TI0EW02 TI0EW02; // record
  TIWREC TIWREC; // record
  VCOREQ02 VCOREQ02; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XHDTBL {deleteAfterUse = yes}; // table
  use XLBTBL {deleteAfterUse = yes}; // table
  use XGPTBL; // table
  use TI0EM.TI0EM001,  // forms
      TI0EM.TI0EM002
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTI-00000: XPTI-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set TI0EM001 initial; /* M001 input/output*/
    set TI0EM002 initial; /* M002 input/output*/
    set TI0EW00 empty; /* Working storage*/
    set TI0EW01 empty; /* M001 display storage*/
    set TI0EW02 empty; /* M002 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    TI0EW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TI0EW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    TI0EW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

    TI0EW00.XXX-TEMP-STG-LNTH = 698; /* Temporary storage length*/
    TI0EW00.XXX-INX-LMT-NBR = 13; /* Number of lines on a page*/

     /* ------------------------------------------------------------*/
     /* Initialize any fields passed from another application.*/
     /* ------------------------------------------------------------*/

    TI0EW01.TI0EM-XGP-GPC-CD = TIWREC.XGP-GPC-CD; /* GPC code*/

    if (COMMAREA.CAITEM > " ") /* Data was passed*/

      TI0EM001.TI0EM-XGP-GPC-CD = TIWREC.XGP-GPC-CD; /* GPC code*/
      TI0EM001.TI0EM-CU-CO-ID = COMMAREA.CAITEM; /* Customer*/

      COMMAREA.CAITEM = " "; /* Clear passed data*/
      TI0EW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
    end

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TI0E-00000; /* Converse the main process*/


    TI0E-00000: TI0E-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TI0E-00000; /* Converse the main process*/


  end // end main
end // end TI0E

// Determine which map to display
Function TI0E-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the map that was requested.*/
   /* 2) Otherwise, indicate error and exit to System Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (TI0EW00.XXX-MAP-DSP-CD == "1") /* Map 1 was requested*/

    TI0E-10000(); /* Display map 1*/

    exit stack; /* Exit to display map*/

  end

  if (TI0EW00.XXX-MAP-DSP-CD == "2") /* Map 2 was requested*/

    TI0E-20000(); /* Display map 2*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Write the error to the Error Diagnosis Reporting Facility.*/
   /* ------------------------------------------------------------*/

  TIWREC.XXX-MSG-LOC-ID = "00000"; /* Message location*/
  TIWREC.XXX-MSG-NBR = 10; /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "INVALID MAP NUMBER REQUESTED"; /* Description*/
  TA1REC.TA1MAPNO = TI0EW00.XXX-MAP-DSP-CD; /* Map requested*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

   /* ------------------------------------------------------------*/
   /* Exit to display the application system menu.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CATOAP = "TI0M"; /* System Menu*/

  XSTIS-EXIT(); /* Exit to another application*/

   /* ------------------------------------------------------------*/
   /* Abnormally terminate the transaction if the exit failed.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1FUNC = "ABND"; /* Termination function*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/


end // end TI0E-00000

// Main process to display a map
Function TI0E-10000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TI0E-11000(); /* Obtain the data to display*/

  TI0E-12000(); /* Format and display the map*/

  TI0E-13000(); /* Check attention identifier*/

  TI0E-14000(); /* Verify the entered data*/

  TI0E-15000(); /* Process valid input request*/


end // end TI0E-10000

// Obtain the data to display
Function TI0E-11000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/
  if (TI0EW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* ------------------------------------------------------------*/
  if (TIWREC.XXX-MSG-NBR == 0) /* No message to display*/
    TI0EW00.XXX-CURR-PAGE-NBR = 1; /* Page number to display*/
  end

   /* ------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key fields.*/
   /* ------------------------------------------------------------*/
  TI0ES-TA0050-P(); /* Purge any temporary storage*/

  TI0EW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  TI0EW01.TI0EM-XGP-GPC-CD = TI0EM001.TI0EM-XGP-GPC-CD; /* GPC code*/
  TI0EW01.TI0EM-CU-CO-ID = TI0EM001.TI0EM-CU-CO-ID; /* Customer*/

   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* ------------------------------------------------------------*/
  set VCOREQ02 empty; /* Clear row storage area*/

  VCOREQ02.XGP-GPC-CD = TI0EW01.TI0EM-XGP-GPC-CD; /* GPC code*/
  VCOREQ02.CU-CO-ID = TI0EW01.TI0EM-CU-CO-ID; /* Customer*/

  TI0ES-VCOREQ02-SS(); /* Select set and open cursor*/

   /* ------------------------------------------------------------*/
   /* Fetch and format the data into pages until end of cursor.*/
   /* ------------------------------------------------------------*/
  TI0EW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

  TI0EW00.TI0EW-COREQ-EOF-FL = "N"; /* End of cursor flag*/

  while (TI0EW00.TI0EW-COREQ-EOF-FL == "N") /* Until end of cursor*/

    TI0ES-VCOREQ02-SN(); /* Fetch next row in cursor*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/
    if (TI0EW00.TI0EW-COREQ-EOF-FL == "N") /* Not end of cursor*/

      /* ------------------------------------------------------------*/
      /* If first line on subsequent page, save heading information.*/
      /* ------------------------------------------------------------*/
      if (TI0EW00.XXX-HI-PAGE-NBR > 0 /* Not the first page*/
       && TI0EW00.XXX-INX-FLD-NBR == 1) /* and first line on page*/

        TI0EW01.TI0EM-XGP-GPC-CD = VCOREQ02.XGP-GPC-CD; /* GPC code*/
        TI0EW01.TI0EM-CU-CO-ID = VCOREQ02.CU-CO-ID; /* Customer*/
      end

      /* ------------------------------------------------------------*/
      /* Save the data from the table row in display storage.*/
      /* ------------------------------------------------------------*/
      TI0EW01.XGP-GPC-CD[XXX-INX-FLD-NBR] = VCOREQ02.XGP-GPC-CD; /* GPC code*/
      TI0EW01.PK-LABL-CD[XXX-INX-FLD-NBR] = VCOREQ02.PK-LABL-CD; /* GPC code*/
      TI0EW01.TI-CO-REQ-EDT[XXX-INX-FLD-NBR] = VCOREQ02.TI-CO-REQ-EDT; /* GPC code*/
      TI0EW01.XXX-STAT[XXX-INX-FLD-NBR] = VCOREQ02.XXX-STAT; /* GPC code*/
      TI0EW01.CU-CO-ID[XXX-INX-FLD-NBR] = VCOREQ02.CU-CO-ID;

      KUCREC.KUCCOID = VCOREQ02.CU-CO-ID;
      TI0ES-VCMPNY01-S();
      TI0EW01.CU-CO-NM[XXX-INX-FLD-NBR] = KUCREC.KUCCONM;

      TI0EW00.XXX-INX-FLD-NBR = TI0EW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/
    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/
    if (TI0EW00.XXX-INX-FLD-NBR > TI0EW00.XXX-INX-LMT-NBR) /* Page is full*/

      TI0ES-TA0050-A(); /* Add page to temporary storage*/

      TI0EW00.XXX-INX-FLD-NBR = 1; /* Display line index*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to the queue.*/
   /* ------------------------------------------------------------*/
  if (TI0EW00.XXX-INX-FLD-NBR > 1) /* Page was formatted*/
    TI0ES-TA0050-A(); /* Add page to temporary storage*/
  end

   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/
  TI0ES-VCOREQ02-CS(); /* Close selected set cursor*/

   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/
  if (TI0EW00.XXX-HI-PAGE-NBR == 0) /* No pages formatted*/

    TIWREC.XXX-MSG-LOC-ID = "11000"; /* Message location*/
    converseLib.validationFailed(18); /* No data was found to display*/

    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/
  TI0EW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end TI0E-11000

// Format and converse the map
Function TI0E-12000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    TIWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (TI0EW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    TI0E-12100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TI0EM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  TI0EM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  TI0EM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (TIWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (TIWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (TIWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(TIWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      TI0EM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    TI0EM001.XXX-MSG-LOC-ID = TIWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set TI0EM001 alarm; /* Indicate sound alarm*/

  end

  converse TI0EM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TIWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  TIWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = TI0EM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TI0EM001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TI0EM001.TI0EM-XGP-GPC-CD normal; /* GPC code*/
  set TI0EM001.TI0EM-CU-CO-ID normal; /* Customer*/

  TI0EW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (TI0EW00.XXX-INX-FLD-NBR <= TI0EW00.XXX-INX-LMT-NBR
   /* Until end of screen*/
   && TI0EM001.XGP-GPC-CD[XXX-INX-FLD-NBR] > " ")
                                   /* or end of formatted lines*/

    set TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;
                                   /* Select indicator*/

    TI0EW00.XXX-INX-FLD-NBR = TI0EW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

  set TI0EM001.CATOAP normal; /* TO application*/
  set TI0EM001.CAITEM normal; /* Application data*/


end // end TI0E-12000

// Format the data in the map
Function TI0E-12100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set TI0EM001 initial; /* M001 input/output area*/

  TI0EW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (TI0EW00.XXX-HI-PAGE-NBR > 0) /* Pages were formatted*/

    if (TI0EW00.XXX-CURR-PAGE-NBR != TA5REC.TA5TSQIX)
                                   /* Desired page not current*/

      /* ------------------------------------------------------------*/
      /* If the current page has been changed, update the page in*/
      /* storage before obtaining the next one to display.*/
      /* ------------------------------------------------------------*/

      if (TI0EW00.XXX-PAGE-UPD-FL == "Y") /* Current page was changed*/

        TI0ES-TA0050-U(); /* Update temporary storage page*/

        TI0EW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

      end

      /* ------------------------------------------------------------*/
      /* If the desired page number is greater than the highest page*/
      /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/

      if (TI0EW00.XXX-CURR-PAGE-NBR > TI0EW00.XXX-HI-PAGE-NBR)
                                   /* Desired greater highest*/
        TI0EW00.XXX-CURR-PAGE-NBR = TI0EW00.XXX-HI-PAGE-NBR;
                                   /* Default to highest*/
      end

      TI0ES-TA0050-R(); /* Read temporary storage page*/

    end

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set TI0EM001.XXX-CURR-PAGE-DESC skip; /* "PAGE" literal*/
    TI0EM001.XXX-CURR-PAGE-NBR = TI0EW00.XXX-CURR-PAGE-NBR;
                                   /* Current page*/
    set TI0EM001.XXX-HI-PAGE-DESC skip; /* "OF" literal*/
    TI0EM001.XXX-HI-PAGE-NBR = TI0EW00.XXX-HI-PAGE-NBR;
                                   /* Highest page*/

  end

   /* ------------------------------------------------------------*/
   /* If GPC code is missing, position the cursor on that field.*/
   /* ------------------------------------------------------------*/

  if (TI0EW01.TI0EM-XGP-GPC-CD <= " ") /* GPC code missing*/
    set TI0EM001.TI0EM-XGP-GPC-CD cursor; /* Position cursor*/
  end

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  TI0EM001.TI0EM-XGP-GPC-CD = TI0EW01.TI0EM-XGP-GPC-CD; /* GPC code*/
  TI0EM001.TI0EM-CU-CO-ID = TI0EW01.TI0EM-CU-CO-ID; /* Customer*/

  TI0EW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (TI0EW00.XXX-INX-FLD-NBR <= TI0EW00.XXX-INX-LMT-NBR
   /* Until screen is full*/
   && TI0EW01.XGP-GPC-CD[XXX-INX-FLD-NBR] > " ") /* or end of data*/

    if (TI0EW00.XXX-INX-FLD-NBR == 1) /* First select field*/

      set TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, normal;
    else
      set TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;

    end

    TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TI0EW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];
    TI0EM001.XGP-GPC-CD[XXX-INX-FLD-NBR] = TI0EW01.XGP-GPC-CD[XXX-INX-FLD-NBR];
    TI0EM001.PK-LABL-CD[XXX-INX-FLD-NBR] = TI0EW01.PK-LABL-CD[XXX-INX-FLD-NBR];
    TI0EM001.TI-CO-REQ-EDT[XXX-INX-FLD-NBR] = TI0EW01.TI-CO-REQ-EDT[XXX-INX-FLD-NBR];
    TI0EM001.XXX-STAT[XXX-INX-FLD-NBR] = TI0EW01.XXX-STAT[XXX-INX-FLD-NBR];
    TI0EM001.CU-CO-ID[XXX-INX-FLD-NBR] = TI0EW01.CU-CO-ID[XXX-INX-FLD-NBR];
    TI0EM001.CU-CO-NM[XXX-INX-FLD-NBR] = TI0EW01.CU-CO-NM[XXX-INX-FLD-NBR];

    TI0EW00.XXX-INX-FLD-NBR = TI0EW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end


end // end TI0E-12100

// Check attention identifier
Function TI0E-13000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (TI0EW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set TI0EW01 empty; /* M001 display storage*/
    end

    TI0EW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TI0EW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (TI0EM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      TI0ES-TA0050-P(); /* Purge any temporary storage*/

      XSTIS-EXIT(); /* Exit to another application*/

      set TI0EM001.CATOAP cursor, bold; /* Highlight*/

    else

      TIWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "TI0EM001"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "TI0M"; /* System Menu*/
    end

    if (converseVar.eventKey is pf4) /* PF3 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* System Menu*/
    end

    TI0ES-TA0050-P(); /* Purge any temporary storage*/

    XSTIS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf5   /* and PF5 was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8)  /* and PF8 was not pressed*/

    TIWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end TI0E-13000

// Verify data that was entered
Function TI0E-14000()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (TI0EM001.CAITEM > " ") /* Application data was entered*/

    TIWREC.XXX-MSG-LOC-ID = "14000"; /* Message location*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    set TI0EM001.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll requested, determine if any other field changed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    TI0E-14100(); /* Highlight other changed fields*/

    /* ------------------------------------------------------------*/
    /* Determine whether a valid request to scroll was entered.*/
    /* ------------------------------------------------------------*/

    TI0E-14200(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* If key field changed, determine if any other field changed.*/
    /* ------------------------------------------------------------*/

    if (TI0EM001.TI0EM-XGP-GPC-CD != TI0EW01.TI0EM-XGP-GPC-CD /* GPC*/
     || TI0EM001.TI0EM-CU-CO-ID != TI0EW01.TI0EM-CU-CO-ID)   
                                   /* or Customer changed*/

      TI0E-14100(); /* Highlight other changed fields*/

      /* ------------------------------------------------------------*/
      /* Determine if all the required key fields were entered.*/
      /* ------------------------------------------------------------*/

      TI0E-14300(); /* Check for required key fields*/

    else

      /* ------------------------------------------------------------*/
      /* Otherwise, verify any modifiable data that was changed.*/
      /* ------------------------------------------------------------*/

      if (TI0EW00.XXX-HI-PAGE-NBR > 0) /* Page was formatted*/

        TI0EW00.XXX-INX-FLD-NBR = TI0EW00.XXX-INX-LMT-NBR;
                                   /* Line index*/

        while (TI0EW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

          TI0E-14400(); /* Verify data in the line*/

          TI0EW00.XXX-INX-FLD-NBR = TI0EW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

        end

      end

    end

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end TI0E-14000

// Highlight other changed fields
Function TI0E-14100()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* If a modifiable field was changed, indicate that field may*/
   /* not be changed when key is changed or a pf key is pressed.*/
   /* ------------------------------------------------------------*/

  TI0EW00.XXX-INX-FLD-NBR = TI0EW00.XXX-INX-LMT-NBR; /* Line index*/

  while (TI0EW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

    if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
    TI0EW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])

      TIWREC.XXX-MSG-LOC-ID = "14100"; /* Message location*/
      converseLib.validationFailed(14); /* Field may not change*/
      set TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/

    end

    TI0EW00.XXX-INX-FLD-NBR = TI0EW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

  end


end // end TI0E-14100

// Verify scroll request
Function TI0E-14200()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Indicate key fields may not change when scroll is requested.*/
   /* ------------------------------------------------------------*/

  if (TI0EM001.TI0EM-CU-CO-ID != TI0EW01.TI0EM-CU-CO-ID) /* Customer chgd*/

    TIWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(14); /* Field may not change*/
    set TI0EM001.TI0EM-CU-CO-ID cursor, bold; /* Highlight*/

  end

  if (TI0EM001.TI0EM-XGP-GPC-CD != TI0EW01.TI0EM-XGP-GPC-CD) /* GPC changed*/

    TIWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(14); /* Field may not change*/
    set TI0EM001.TI0EM-XGP-GPC-CD cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && TI0EW00.XXX-CURR-PAGE-NBR < 2) /* and no previous pages*/

    TIWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && TI0EW00.XXX-CURR-PAGE-NBR >= TI0EW00.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/

    TIWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end


end // end TI0E-14200

// Check for required key fields
Function TI0E-14300()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Verify that a customer was entered.*/
   /* ------------------------------------------------------------*/

  if (TI0EM001.TI0EM-CU-CO-ID <= " ") /* Customer not entered*/

    TIWREC.XXX-MSG-LOC-ID = "14300"; /* Message location*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    set TI0EM001.TI0EM-CU-CO-ID cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Verify the General Product Class code.*/
   /* ------------------------------------------------------------*/

  if (TI0EM001.TI0EM-XGP-GPC-CD in XGPTBL.XGPCD /* Code in table*/
   && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/

     /* NEXT SENTENCE*/

  else

    /* ------------------------------------------------------------*/
    /* If not found or inactive, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/

    TIWREC.XXX-MSG-LOC-ID = "14300"; /* Message location*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    set TI0EM001.TI0EM-XGP-GPC-CD cursor, bold; /* Highlight*/

  end


end // end TI0E-14300

// Verify data in the line
Function TI0E-14400()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* If selection was entered and is not an 'S', 'A', or 'C'*/
   /* display error.*/
   /* ------------------------------------------------------------*/

  if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
  TI0EW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR]) /* Selection entered*/
    if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "S"
     /* and is not an "S"*/
     && TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "A"
     /* and is not an "A"*/
     && TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "C"
     /* and is not a "C"*/
    )
      TIWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
      converseLib.validationFailed(78); /* Only valid action may be entered*/
      set TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/

      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* If selection was entered and is not an 'S', 'A', or 'C'*/
   /* display error.*/
   /* ------------------------------------------------------------*/

  if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
  TI0EW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR]) /* Selection entered*/
    if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "S"
     /* and is not an "S"*/
     && TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "A"
     /* and is not an "A"*/
     && TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "C"
     /* and is not a "C"*/
    )
      TIWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
      converseLib.validationFailed(78); /* Only valid action may be entered*/
      set TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/

      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* If selection was entered and is 'A', check for add authority*/
   /* ------------------------------------------------------------*/

  if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
  TI0EW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR]) /* Selection entered*/
    if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A"
     && COMMAREA.CAADDFL != "Y")
                                   /* and user not authorized for add*/
      TIWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
      converseLib.validationFailed(79); /* userid not authorized for add*/
      set TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/

      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* If selection was entered and is 'C', check for add authority*/
   /* ------------------------------------------------------------*/

  if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
  TI0EW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR]) /* Selection entered*/
    if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C"
     && COMMAREA.CACHGFL != "Y")
                                   /* and user not authorized for change*/
      TIWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
      converseLib.validationFailed(80); /* userid not authorized for change*/
      set TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/

      return;
    end
  end


end // end TI0E-14400

// Process valid input request
Function TI0E-15000()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Save any work record fields that may have been modified.*/
   /* ------------------------------------------------------------*/

  TIWREC.XGP-GPC-CD = TI0EM001.TI0EM-XGP-GPC-CD; /* GPC code*/

   /* ------------------------------------------------------------*/
   /* If the key fields changed, request the data to display.*/
   /* ------------------------------------------------------------*/

  if (TI0EM001.TI0EM-XGP-GPC-CD != TI0EW01.TI0EM-XGP-GPC-CD /* GPC changed*/
   || TI0EM001.TI0EM-CU-CO-ID != TI0EW01.TI0EM-CU-CO-ID     
   || converseVar.eventKey is pf5)                          /* User requested refresh list*/

    TI0EW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll backward was requested, decrement the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    TI0EW00.XXX-CURR-PAGE-NBR = TI0EW00.XXX-CURR-PAGE-NBR - 1;
                                   /* Decrement page number*/

    TI0EW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, increment the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    TI0EW00.XXX-CURR-PAGE-NBR = TI0EW00.XXX-CURR-PAGE-NBR + 1;
                                   /* Increment page number*/

    TI0EW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Save any field that was changed in the map display storage.*/
   /* ------------------------------------------------------------*/

  TI0EW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (TI0EW00.XXX-INX-FLD-NBR <= TI0EW00.XXX-INX-LMT-NBR)
                                   /* Until end of lines*/

    if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
    TI0EW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])

      TI0EW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];

      TI0EW00.XXX-PAGE-UPD-FL = "Y"; /* Page update flag*/

    end

    TI0EW00.XXX-INX-FLD-NBR = TI0EW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

   /* ------------------------------------------------------------*/
   /* If a line was selected, format the key fields and indicate*/
   /* that map 002 is to be displayed.*/
   /* ------------------------------------------------------------*/

  if ("S" in TI0EW01.XXX-LN-SEL-IND /* Line was selected*/
   || "A" in TI0EW01.XXX-LN-SEL-IND /* Line was selected*/
   || "C" in TI0EW01.XXX-LN-SEL-IND) /* Line was selected*/

    TI0EW00.XXX-INX-FLD-NBR = sysVar.arrayIndex; /* Map line index*/

    TI0EM002.XGP-GPC-CD = TI0EW01.XGP-GPC-CD[XXX-INX-FLD-NBR]; /**/
    TI0EM002.PK-LABL-CD = TI0EW01.PK-LABL-CD[XXX-INX-FLD-NBR]; /**/
    TI0EM002.TI-CO-REQ-EDT = TI0EW01.TI-CO-REQ-EDT[XXX-INX-FLD-NBR]; /**/
    TI0EM002.XXX-STAT = TI0EW01.XXX-STAT[XXX-INX-FLD-NBR]; /**/
    TI0EM002.CU-CO-ID = TI0EW01.CU-CO-ID[XXX-INX-FLD-NBR];
    TI0EM002.CU-CO-NM = TI0EW01.CU-CO-NM[XXX-INX-FLD-NBR];

    TI0EW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
    TI0EW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/

  end


end // end TI0E-15000

// Main process to display a map
Function TI0E-20000()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TI0E-21000(); /* Obtain the data to display*/

  TI0E-22000(); /* Format and display the map*/

  TI0E-23000(); /* Check attention identifier*/

  TI0E-24000(); /* Verify the entered data*/

  TI0E-25000(); /* Process valid input request*/


end // end TI0E-20000

// Obtain the data to display
Function TI0E-21000()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (TI0EW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* Clear the map display storage area and save the key fields.*/
   /* ------------------------------------------------------------*/

  set TI0EW02 empty; /* M002 display storage*/

  TI0EW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  TI0EW02.XGP-GPC-CD = TI0EM002.XGP-GPC-CD; /* GPC*/
  TI0EW02.CU-CO-ID = TI0EM002.CU-CO-ID; /* Customer*/
  TI0EW02.CU-CO-NM = TI0EM002.CU-CO-NM; /* Customer name*/
  TI0EW02.PK-LABL-CD = TI0EM002.PK-LABL-CD; /* Label Code*/
  TI0EW02.TI-CO-REQ-EDT = TI0EM002.TI-CO-REQ-EDT; /* EFF DATE*/

   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/

  set VCOREQ02 empty; /* Clear row storage area*/

  VCOREQ02.XGP-GPC-CD = TI0EW02.XGP-GPC-CD; /* GPC code*/
  VCOREQ02.PK-LABL-CD = TI0EW02.PK-LABL-CD; /* GPC code*/
  VCOREQ02.TI-CO-REQ-EDT = TI0EW02.TI-CO-REQ-EDT; /* GPC code*/
  VCOREQ02.CU-CO-ID = TI0EW02.CU-CO-ID; /* Customer*/

  TI0ES-VCOREQ02-S(); /* Select the table row*/

   /* ------------------------------------------------------------*/
   /* Save the data from the table row in display storage.*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

    TI0EW02.TI-CO-REQ-EDT = VCOREQ02.TI-CO-REQ-EDT; /**/
    TI0EW02.CU-CO-ID = VCOREQ02.CU-CO-ID; /**/
    TI0EW02.SY-STY-NBR = VCOREQ02.SY-STY-NBR; /**/
    TI0EW02.XHD-HNDL-CD1 = VCOREQ02.XHD-HNDL-CD1; /**/
    TI0EW02.XHD-HNDL-CD2 = VCOREQ02.XHD-HNDL-CD2; /**/
    TI0EW02.XHD-HNDL-CD3 = VCOREQ02.XHD-HNDL-CD3; /**/
    TI0EW02.XHD-HNDL-CD4 = VCOREQ02.XHD-HNDL-CD4; /**/
    TI0EW02.XHD-HNDL-CD5 = VCOREQ02.XHD-HNDL-CD5; /**/
    TI0EW02.CU-CUSKU-ID = VCOREQ02.CU-CUSKU-ID; /**/
    TI0EW02.TI-CO-REQ-XDT = VCOREQ02.TI-CO-REQ-XDT; /**/
    TI0EW02.TI-UPC-REQ-FL = VCOREQ02.TI-UPC-REQ-FL; /**/
    TI0EW02.XXX-STAT = VCOREQ02.XXX-STAT; /**/
    TI0EW02.TI-CU-BUY-SESN-FL = VCOREQ02.TI-CU-BUY-SESN-FL; /**/
    TI0EW02.TI-CUST-PROD-ID-FL = VCOREQ02.TI-CUST-PROD-ID-FL; /**/
    TI0EW02.TI-CU-PROD-NM-FL = VCOREQ02.TI-CU-PROD-NM-FL; /**/
    TI0EW02.TI-CU-PROD-SNM-FL = VCOREQ02.TI-CU-PROD-SNM-FL; /**/
    TI0EW02.TI-CU-COLR-NM-FL = VCOREQ02.TI-CU-COLR-NM-FL; /**/
    TI0EW02.TI-CU-SZ-ID-FL = VCOREQ02.TI-CU-SZ-ID-FL; /**/
    TI0EW02.TI-CU-SZ-NM-FL = VCOREQ02.TI-CU-SZ-NM-FL; /**/
    TI0EW02.TI-VEND-CLS-ID-FL = VCOREQ02.TI-VEND-CLS-ID-FL; /**/
    TI0EW02.TI-CU-CO-NM-FL = VCOREQ02.TI-CU-CO-NM-FL; /**/
    TI0EW02.TI-SY-STY-NBR-FL = VCOREQ02.TI-SY-STY-NBR-FL; /**/
    TI0EW02.TI-SY-COLR-CD-FL = VCOREQ02.TI-SY-COLR-CD-FL; /**/
    TI0EW02.TI-XDM-DIM-CD-FL = VCOREQ02.TI-XDM-DIM-CD-FL; /**/
    TI0EW02.TI-CU-DEPT-SELF-FL = VCOREQ02.TI-CU-DEPT-SELF-FL; /**/
    TI0EW02.TI-CU-CDTY-GRP-FL = VCOREQ02.TI-CU-CDTY-GRP-FL; /**/
    TI0EW02.TI-CU-COST-CD-FL = VCOREQ02.TI-CU-COST-CD-FL; /**/
    TI0EW02.TI-SKU-COMNT1-FL = VCOREQ02.TI-SKU-COMNT1-FL; /**/
    TI0EW02.TI-SKU-COMNT2-FL = VCOREQ02.TI-SKU-COMNT2-FL; /**/
    TI0EW02.TI-SKU-COMNT3-FL = VCOREQ02.TI-SKU-COMNT3-FL; /**/
    TI0EW02.TI-DCMS-LABL-CD-FL = VCOREQ02.TI-DCMS-LABL-CD-FL; /**/
    TI0EW02.TI-CU-RTL-PRC-FL = VCOREQ02.TI-CU-RTL-PRC-FL; /**/
    TI0EW02.TI-SUGG-RTL-PRC-FL = VCOREQ02.TI-SUGG-RTL-PRC-FL; /**/
    TI0EW02.TI-CU-SPCL-PRC-FL = VCOREQ02.TI-CU-SPCL-PRC-FL; /**/
    TI0EW02.TI-SPCL-PRC-EDT-FL = VCOREQ02.TI-SPCL-PRC-EDT-FL; /**/
    TI0EW02.TI-CU-SIZE-PRC-FL = VCOREQ02.TI-CU-SIZE-PRC-FL; /**/
    TI0EW02.TI-CU-POS-PRC-FL = VCOREQ02.TI-CU-POS-PRC-FL; /**/
    TI0EW02.TI-CU-NEG-PRC-FL = VCOREQ02.TI-CU-NEG-PRC-FL; /**/
    TI0EW02.TI-CU-POS-PRC-PCT = VCOREQ02.TI-CU-POS-PRC-PCT; /**/
    TI0EW02.TI-CU-NEG-PRC-PCT = VCOREQ02.TI-CU-NEG-PRC-PCT; /**/

  else

    TIWREC.XXX-MSG-LOC-ID = "21000"; /* Message location*/
    converseLib.validationFailed(18); /* No data was found to display*/

    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  TI0EW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end TI0E-21000

// Format and converse the map
Function TI0E-22000()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    TIWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (TI0EW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    TI0E-22100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Determine whether to protect any of the modifiable fields.*/
   /* ------------------------------------------------------------*/

  TI0E-22200(); /* Check change authorization*/


   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TI0EM002.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  TI0EM002.CATOAP = COMMAREA.CATOAP; /* TO application*/
  TI0EM002.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (TIWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (TIWREC.XXX-MSG-NBR != 0) /* Message to display*/
      if (TIWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(TIWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      TI0EM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
    end

    TI0EM002.XXX-MSG-LOC-ID = TIWREC.XXX-MSG-LOC-ID;

    set TI0EM002 alarm; /* Indicate sound alarm*/
  end


  converse TI0EM002 ;


   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TIWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  TIWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = TI0EM002.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TI0EM002.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TI0EM002.SY-STY-NBR normal; /**/
  set TI0EM002.XHD-HNDL-CD1 normal; /**/
  set TI0EM002.XHD-HNDL-CD2 normal; /**/
  set TI0EM002.XHD-HNDL-CD3 normal; /**/
  set TI0EM002.XHD-HNDL-CD4 normal; /**/
  set TI0EM002.XHD-HNDL-CD5 normal; /**/
  set TI0EM002.CU-CUSKU-ID normal; /**/
  set TI0EM002.TI-CO-REQ-XDT normal; /**/
  set TI0EM002.TI-UPC-REQ-FL normal; /**/
  set TI0EM002.XXX-STAT normal; /**/
  set TI0EM002.TI-CU-BUY-SESN-FL normal; /**/
  set TI0EM002.TI-CUST-PROD-ID-FL normal; /**/
  set TI0EM002.TI-CU-PROD-NM-FL normal; /**/
  set TI0EM002.TI-CU-PROD-SNM-FL normal; /**/
  set TI0EM002.TI-CU-COLR-NM-FL normal; /**/
  set TI0EM002.TI-CU-SZ-ID-FL normal; /**/
  set TI0EM002.TI-CU-SZ-NM-FL normal; /**/
  set TI0EM002.TI-VEND-CLS-ID-FL normal; /**/
  set TI0EM002.TI-CU-CO-NM-FL normal; /**/
  set TI0EM002.TI-SY-STY-NBR-FL normal; /**/
  set TI0EM002.TI-SY-COLR-CD-FL normal; /**/
  set TI0EM002.TI-XDM-DIM-CD-FL normal; /**/
  set TI0EM002.TI-CU-DEPT-SELF-FL normal; /**/
  set TI0EM002.TI-CU-CDTY-GRP-FL normal; /**/
  set TI0EM002.TI-CU-COST-CD-FL normal; /**/
  set TI0EM002.TI-SKU-COMNT1-FL normal; /**/
  set TI0EM002.TI-SKU-COMNT2-FL normal; /**/
  set TI0EM002.TI-SKU-COMNT3-FL normal; /**/
  set TI0EM002.TI-DCMS-LABL-CD-FL normal; /**/
  set TI0EM002.TI-CU-RTL-PRC-FL normal; /**/
  set TI0EM002.TI-SUGG-RTL-PRC-FL normal; /**/
  set TI0EM002.TI-CU-SPCL-PRC-FL normal; /**/
  set TI0EM002.TI-SPCL-PRC-EDT-FL normal; /**/
  set TI0EM002.TI-CU-SIZE-PRC-FL normal; /**/
  set TI0EM002.TI-CU-POS-PRC-FL normal; /**/
  set TI0EM002.TI-CU-NEG-PRC-FL normal; /**/
  set TI0EM002.TI-CU-POS-PRC-PCT normal; /**/
  set TI0EM002.TI-CU-NEG-PRC-PCT normal; /**/
  set TI0EM002.CATOAP normal; /* TO application*/
  set TI0EM002.CAITEM normal; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Change the selection indicator to show the line was viewed.*/
   /* ------------------------------------------------------------*/

  TI0EW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = "V";
                                   /* Select indicator*/


end // end TI0E-22000

// Format the data in the map
Function TI0E-22100()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set TI0EM002 initial; /* M002 input/output area*/

  TI0EW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  TI0EM002.XGP-GPC-CD = TI0EW02.XGP-GPC-CD;
  TI0EM002.CU-CO-ID = TI0EW02.CU-CO-ID;
  TI0EM002.CU-CO-NM = TI0EW02.CU-CO-NM;
  TI0EM002.SY-STY-NBR = TI0EW02.SY-STY-NBR;
  TI0EM002.PK-LABL-CD = TI0EW02.PK-LABL-CD;
  TI0EM002.TI-CO-REQ-EDT = TI0EW02.TI-CO-REQ-EDT;
  TI0EM002.XHD-HNDL-CD1 = TI0EW02.XHD-HNDL-CD1;
  TI0EM002.XHD-HNDL-CD2 = TI0EW02.XHD-HNDL-CD2;
  TI0EM002.XHD-HNDL-CD3 = TI0EW02.XHD-HNDL-CD3;
  TI0EM002.XHD-HNDL-CD4 = TI0EW02.XHD-HNDL-CD4;
  TI0EM002.XHD-HNDL-CD5 = TI0EW02.XHD-HNDL-CD5;
  TI0EM002.CU-CUSKU-ID = TI0EW02.CU-CUSKU-ID;
  TI0EM002.TI-CO-REQ-XDT = TI0EW02.TI-CO-REQ-XDT;
  TI0EM002.TI-UPC-REQ-FL = TI0EW02.TI-UPC-REQ-FL;
  TI0EM002.XXX-STAT = TI0EW02.XXX-STAT;
  TI0EM002.TI-CU-BUY-SESN-FL = TI0EW02.TI-CU-BUY-SESN-FL;
  TI0EM002.TI-CUST-PROD-ID-FL = TI0EW02.TI-CUST-PROD-ID-FL;
  TI0EM002.TI-CU-PROD-NM-FL = TI0EW02.TI-CU-PROD-NM-FL;
  TI0EM002.TI-CU-PROD-SNM-FL = TI0EW02.TI-CU-PROD-SNM-FL;
  TI0EM002.TI-CU-COLR-NM-FL = TI0EW02.TI-CU-COLR-NM-FL;
  TI0EM002.TI-CU-SZ-ID-FL = TI0EW02.TI-CU-SZ-ID-FL;
  TI0EM002.TI-CU-SZ-NM-FL = TI0EW02.TI-CU-SZ-NM-FL;
  TI0EM002.TI-VEND-CLS-ID-FL = TI0EW02.TI-VEND-CLS-ID-FL;
  TI0EM002.TI-CU-CO-NM-FL = TI0EW02.TI-CU-CO-NM-FL;
  TI0EM002.TI-SY-STY-NBR-FL = TI0EW02.TI-SY-STY-NBR-FL;
  TI0EM002.TI-SY-COLR-CD-FL = TI0EW02.TI-SY-COLR-CD-FL;
  TI0EM002.TI-XDM-DIM-CD-FL = TI0EW02.TI-XDM-DIM-CD-FL;
  TI0EM002.TI-CU-DEPT-SELF-FL = TI0EW02.TI-CU-DEPT-SELF-FL;
  TI0EM002.TI-CU-CDTY-GRP-FL = TI0EW02.TI-CU-CDTY-GRP-FL;
  TI0EM002.TI-CU-COST-CD-FL = TI0EW02.TI-CU-COST-CD-FL;
  TI0EM002.TI-SKU-COMNT1-FL = TI0EW02.TI-SKU-COMNT1-FL;
  TI0EM002.TI-SKU-COMNT2-FL = TI0EW02.TI-SKU-COMNT2-FL;
  TI0EM002.TI-SKU-COMNT3-FL = TI0EW02.TI-SKU-COMNT3-FL;
  TI0EM002.TI-DCMS-LABL-CD-FL = TI0EW02.TI-DCMS-LABL-CD-FL;
  TI0EM002.TI-CU-RTL-PRC-FL = TI0EW02.TI-CU-RTL-PRC-FL;
  TI0EM002.TI-SUGG-RTL-PRC-FL = TI0EW02.TI-SUGG-RTL-PRC-FL;
  TI0EM002.TI-CU-SPCL-PRC-FL = TI0EW02.TI-CU-SPCL-PRC-FL;
  TI0EM002.TI-SPCL-PRC-EDT-FL = TI0EW02.TI-SPCL-PRC-EDT-FL;
  TI0EM002.TI-CU-SIZE-PRC-FL = TI0EW02.TI-CU-SIZE-PRC-FL;
  TI0EM002.TI-CU-POS-PRC-FL = TI0EW02.TI-CU-POS-PRC-FL;
  TI0EM002.TI-CU-NEG-PRC-FL = TI0EW02.TI-CU-NEG-PRC-FL;
  TI0EM002.TI-CU-POS-PRC-PCT = TI0EW02.TI-CU-POS-PRC-PCT;
  TI0EM002.TI-CU-NEG-PRC-PCT = TI0EW02.TI-CU-NEG-PRC-PCT;

end // end TI0E-22100

// Check change authorization
Function TI0E-22200()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* If requested data was found and the user is authorized to*/
   /* change data on the screen, set cursor and protect fields*/
   /* as appropriate*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* ADD Requested.*/
   /* ------------------------------------------------------------*/
  if (TI0EW00.XXX-RQT-DATA-FL == "N" /* Requested data was found*/
   && COMMAREA.CACHGFL == "Y"        /* and user authorized to change*/
   && TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A")
    if (converseVar.validationMsgNum == 0)
      set TI0EM002.CU-CO-ID cursor;
      TI0EM002.CU-CO-ID = 0;
      TI0EW02.CU-CO-ID = 0;
      TI0EW02.CU-CO-NM = " ";
      TI0EM002.CU-CO-NM = " ";
      TI0EM002.CU-CUSKU-ID = 0;
      TI0EM002.PK-LABL-CD = " ";
      TI0EW02.PK-LABL-CD = " ";
      TI0EM002.TI-CO-REQ-EDT = 0;
      TI0EW02.TI-CO-REQ-EDT = 0;
      TI0EM002.TI-CO-REQ-XDT = 99991231;
    end
    return;
  end

   /* ------------------------------------------------------------*/
   /* CHANGE REQUESTED.*/
   /* ------------------------------------------------------------*/
  if (TI0EW00.XXX-RQT-DATA-FL == "N" /* Requested data was found*/
   && COMMAREA.CACHGFL == "Y"        /* and user authorized to change*/
   && TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C")
    set TI0EM002.CU-CO-ID skip;
    set TI0EM002.PK-LABL-CD skip;
    set TI0EM002.XGP-GPC-CD skip;
    set TI0EM002.TI-CO-REQ-EDT skip;
    if (converseVar.validationMsgNum == 0)
      set TI0EM002.TI-CO-REQ-XDT cursor;
    end
    return;
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, protect the modifiable fields on the screen.*/
   /* ------------------------------------------------------------*/

  set TI0EM002.CU-CO-ID skip; /**/
  set TI0EM002.PK-LABL-CD skip; /**/
  set TI0EM002.XGP-GPC-CD skip; /**/
  set TI0EM002.SY-STY-NBR skip;
  set TI0EM002.XHD-HNDL-CD1 skip; /**/
  set TI0EM002.XHD-HNDL-CD2 skip; /**/
  set TI0EM002.XHD-HNDL-CD3 skip; /**/
  set TI0EM002.XHD-HNDL-CD4 skip; /**/
  set TI0EM002.XHD-HNDL-CD5 skip; /**/
  set TI0EM002.CU-CUSKU-ID skip; /**/
  set TI0EM002.TI-CO-REQ-EDT skip; /**/
  set TI0EM002.TI-CO-REQ-XDT skip; /**/
  set TI0EM002.TI-UPC-REQ-FL skip; /**/
  set TI0EM002.XXX-STAT skip; /**/
  set TI0EM002.TI-CU-BUY-SESN-FL skip; /**/
  set TI0EM002.TI-CUST-PROD-ID-FL skip; /**/
  set TI0EM002.TI-CU-PROD-NM-FL skip; /**/
  set TI0EM002.TI-CU-PROD-SNM-FL skip; /**/
  set TI0EM002.TI-CU-COLR-NM-FL skip; /**/
  set TI0EM002.TI-CU-SZ-ID-FL skip; /**/
  set TI0EM002.TI-CU-SZ-NM-FL skip; /**/
  set TI0EM002.TI-VEND-CLS-ID-FL skip; /**/
  set TI0EM002.TI-CU-CO-NM-FL skip; /**/
  set TI0EM002.TI-SY-STY-NBR-FL skip; /**/
  set TI0EM002.TI-SY-COLR-CD-FL skip; /**/
  set TI0EM002.TI-XDM-DIM-CD-FL skip; /**/
  set TI0EM002.TI-CU-DEPT-SELF-FL skip; /**/
  set TI0EM002.TI-CU-CDTY-GRP-FL skip; /**/
  set TI0EM002.TI-CU-COST-CD-FL skip; /**/
  set TI0EM002.TI-SKU-COMNT1-FL skip; /**/
  set TI0EM002.TI-SKU-COMNT2-FL skip; /**/
  set TI0EM002.TI-SKU-COMNT3-FL skip; /**/
  set TI0EM002.TI-DCMS-LABL-CD-FL skip; /**/
  set TI0EM002.TI-CU-RTL-PRC-FL skip; /**/
  set TI0EM002.TI-SUGG-RTL-PRC-FL skip; /**/
  set TI0EM002.TI-CU-SPCL-PRC-FL skip; /**/
  set TI0EM002.TI-SPCL-PRC-EDT-FL skip; /**/
  set TI0EM002.TI-CU-SIZE-PRC-FL skip; /**/
  set TI0EM002.TI-CU-POS-PRC-FL skip; /**/
  set TI0EM002.TI-CU-NEG-PRC-FL skip; /**/
  set TI0EM002.TI-CU-POS-PRC-PCT skip; /**/
  set TI0EM002.TI-CU-NEG-PRC-PCT skip; /**/

end // end TI0E-22200

// Check attention identifier
Function TI0E-23000()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (TI0EW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set TI0EW02 empty; /* M002 display storage*/
    end

    TI0EW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TI0EW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If REFRESH was requested, copy W02 back to M002.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf5) /* PA2 was pressed*/

    move TI0EW02 to TI0EM002 withV60Compat; /* ;/* Refresh the map*/

    converseLib.validationFailed(49); /* Screen has been refreshed*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      TI0ES-TA0050-P(); /* Purge any temporary storage*/

      XSTIS-EXIT(); /* Exit to another application*/

      set TI0EM001.CATOAP cursor, bold; /* Highlight*/

      TI0EW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

    else

      TIWREC.XXX-MSG-LOC-ID = "23000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "TI0EM002"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      TI0EW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
      TI0EW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

      exit stack; /* Exit to display map*/

    end

    TI0ES-TA0050-P(); /* Purge any temporary storage*/

    XSTIS-EXIT(); /* Exit to another application*/

    TI0EW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf12) /* and PF12 was not pressed*/

    TIWREC.XXX-MSG-LOC-ID = "23000"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end TI0E-23000

// Verify data that was entered
Function TI0E-24000()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    TIWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    set TI0EM002.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If changed, verify the entered code.*/
   /* ------------------------------------------------------------*/
  if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A"
   || TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C")
    TI0E-24100();
  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* If EDIT requested, indicate edit completed and no errors.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf12) /* PF12 was pressed*/

    TIWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
    converseLib.validationFailed(17); /* Edit completed and no errors*/

    exit stack; /* Exit to display map*/

  end


end // end TI0E-24000

// Verify entered values
Function TI0E-24100()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Put validation edits here.*/
   /* ------------------------------------------------------------*/

  TI0ES-EDT-PRC-PCT(); /* Edit price variance percents*/
  TI0ES-EDT-PRC-FL(); /* Edit pricing flags*/
  TI0ES-EDT-CD-FL(); /* Verify edit code and ID flags*/
  TI0ES-EDT-CUSKU(); /* Edit CUSKU ID (xref id)*/
  TI0ES-EDT-HDL-CD(); /* Edit all 5 special handling codes*/
  TI0ES-EDT-STAT-CD(); /* Edit status code*/
  TI0ES-EDT-REQ-DTS(); /* Edit Requirement begin and end dates*/
  TI0ES-EDT-LBL-CD(); /* Edit label code*/
  TI0ES-EDT-COMPANY(); /* Edit company code*/
  TI0ES-EDT-GPC(); /* Edit GPC code*/
  TI0ES-EDT-STY-NBR(); /* Edit style number*/
  if (converseVar.validationMsgNum > 0) /* If failed any edit checks, return*/
                                   /* screen to user*/
    exit stack;
  end

end // end TI0E-24100

// Process valid input request
Function TI0E-25000()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* If no modifiable data changed, search for next selection.*/
   /* ------------------------------------------------------------*/

  if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C"
   || TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "S")
    if (TI0EM002.TI-UPC-REQ-FL == TI0EW02.TI-UPC-REQ-FL
     && TI0EM002.XXX-STAT == TI0EW02.XXX-STAT
     && TI0EM002.XHD-HNDL-CD1 == TI0EW02.XHD-HNDL-CD1
     && TI0EM002.XHD-HNDL-CD2 == TI0EW02.XHD-HNDL-CD2
     && TI0EM002.XHD-HNDL-CD3 == TI0EW02.XHD-HNDL-CD3
     && TI0EM002.XHD-HNDL-CD4 == TI0EW02.XHD-HNDL-CD4
     && TI0EM002.XHD-HNDL-CD5 == TI0EW02.XHD-HNDL-CD5
     && TI0EM002.CU-CUSKU-ID == TI0EW02.CU-CUSKU-ID
     && TI0EM002.SY-STY-NBR == TI0EW02.SY-STY-NBR
     && TI0EM002.TI-CO-REQ-EDT == TI0EW02.TI-CO-REQ-EDT
     && TI0EM002.TI-CO-REQ-XDT == TI0EW02.TI-CO-REQ-XDT
     && TI0EM002.TI-CU-BUY-SESN-FL == TI0EW02.TI-CU-BUY-SESN-FL
     && TI0EM002.TI-CUST-PROD-ID-FL == TI0EW02.TI-CUST-PROD-ID-FL
     && TI0EM002.TI-CU-PROD-NM-FL == TI0EW02.TI-CU-PROD-NM-FL
     && TI0EM002.TI-CU-PROD-SNM-FL == TI0EW02.TI-CU-PROD-SNM-FL
     && TI0EM002.TI-CU-COLR-NM-FL == TI0EW02.TI-CU-COLR-NM-FL
     && TI0EM002.TI-CU-SZ-ID-FL == TI0EW02.TI-CU-SZ-ID-FL
     && TI0EM002.TI-CU-SZ-NM-FL == TI0EW02.TI-CU-SZ-NM-FL
     && TI0EM002.TI-VEND-CLS-ID-FL == TI0EW02.TI-VEND-CLS-ID-FL
     && TI0EM002.TI-CU-CO-NM-FL == TI0EW02.TI-CU-CO-NM-FL
     && TI0EM002.TI-SY-STY-NBR-FL == TI0EW02.TI-SY-STY-NBR-FL
     && TI0EM002.TI-SY-COLR-CD-FL == TI0EW02.TI-SY-COLR-CD-FL
     && TI0EM002.TI-XDM-DIM-CD-FL == TI0EW02.TI-XDM-DIM-CD-FL
     && TI0EM002.TI-CU-DEPT-SELF-FL == TI0EW02.TI-CU-DEPT-SELF-FL
     && TI0EM002.TI-CU-CDTY-GRP-FL == TI0EW02.TI-CU-CDTY-GRP-FL
     && TI0EM002.TI-CU-COST-CD-FL == TI0EW02.TI-CU-COST-CD-FL
     && TI0EM002.TI-SKU-COMNT1-FL == TI0EW02.TI-SKU-COMNT1-FL
     && TI0EM002.TI-SKU-COMNT2-FL == TI0EW02.TI-SKU-COMNT2-FL
     && TI0EM002.TI-SKU-COMNT3-FL == TI0EW02.TI-SKU-COMNT3-FL
     && TI0EM002.TI-DCMS-LABL-CD-FL == TI0EW02.TI-DCMS-LABL-CD-FL
     && TI0EM002.TI-CU-RTL-PRC-FL == TI0EW02.TI-CU-RTL-PRC-FL
     && TI0EM002.TI-SUGG-RTL-PRC-FL == TI0EW02.TI-SUGG-RTL-PRC-FL
     && TI0EM002.TI-CU-SPCL-PRC-FL == TI0EW02.TI-CU-SPCL-PRC-FL
     && TI0EM002.TI-SPCL-PRC-EDT-FL == TI0EW02.TI-SPCL-PRC-EDT-FL
     && TI0EM002.TI-CU-SIZE-PRC-FL == TI0EW02.TI-CU-SIZE-PRC-FL
     && TI0EM002.TI-CU-POS-PRC-FL == TI0EW02.TI-CU-POS-PRC-FL
     && TI0EM002.TI-CU-NEG-PRC-FL == TI0EW02.TI-CU-NEG-PRC-FL
     && TI0EM002.TI-CU-POS-PRC-PCT == TI0EW02.TI-CU-POS-PRC-PCT
     && TI0EM002.TI-CU-NEG-PRC-PCT == TI0EW02.TI-CU-NEG-PRC-PCT
    )
      TI0E-25100(); /* Search for next selection*/

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Obtain the current date and time.*/
   /* ------------------------------------------------------------*/

  XX0XS01(); /* Obtain date and time*/

   /* ------------------------------------------------------------*/
   /* Update the changed data in the table row.*/
   /* ------------------------------------------------------------*/


  VCOREQ02.CU-CO-ID = TI0EM002.CU-CO-ID; /**/
  VCOREQ02.SY-STY-NBR = TI0EM002.SY-STY-NBR; /**/
  VCOREQ02.TI-CO-REQ-EDT = TI0EM002.TI-CO-REQ-EDT; /**/
  VCOREQ02.PK-LABL-CD = TI0EM002.PK-LABL-CD; /**/
  VCOREQ02.XGP-GPC-CD = TI0EM002.XGP-GPC-CD; /**/
  VCOREQ02.TI-UPC-REQ-FL = TI0EM002.TI-UPC-REQ-FL; /**/
  VCOREQ02.XXX-STAT = TI0EM002.XXX-STAT; /**/
  VCOREQ02.XHD-HNDL-CD1 = TI0EM002.XHD-HNDL-CD1; /**/
  VCOREQ02.XHD-HNDL-CD2 = TI0EM002.XHD-HNDL-CD2; /**/
  VCOREQ02.XHD-HNDL-CD3 = TI0EM002.XHD-HNDL-CD3; /**/
  VCOREQ02.XHD-HNDL-CD4 = TI0EM002.XHD-HNDL-CD4; /**/
  VCOREQ02.XHD-HNDL-CD5 = TI0EM002.XHD-HNDL-CD5; /**/
  VCOREQ02.CU-CUSKU-ID = TI0EM002.CU-CUSKU-ID; /**/
  VCOREQ02.TI-CO-REQ-XDT = TI0EM002.TI-CO-REQ-XDT; /**/
  VCOREQ02.TI-CU-BUY-SESN-FL = TI0EM002.TI-CU-BUY-SESN-FL; /**/
  VCOREQ02.TI-CUST-PROD-ID-FL = TI0EM002.TI-CUST-PROD-ID-FL; /**/
  VCOREQ02.TI-CU-PROD-NM-FL = TI0EM002.TI-CU-PROD-NM-FL; /**/
  VCOREQ02.TI-CU-PROD-SNM-FL = TI0EM002.TI-CU-PROD-SNM-FL; /**/
  VCOREQ02.TI-CU-COLR-NM-FL = TI0EM002.TI-CU-COLR-NM-FL; /**/
  VCOREQ02.TI-CU-SZ-ID-FL = TI0EM002.TI-CU-SZ-ID-FL; /**/
  VCOREQ02.TI-CU-SZ-NM-FL = TI0EM002.TI-CU-SZ-NM-FL; /**/
  VCOREQ02.TI-VEND-CLS-ID-FL = TI0EM002.TI-VEND-CLS-ID-FL; /**/
  VCOREQ02.TI-CU-CO-NM-FL = TI0EM002.TI-CU-CO-NM-FL; /**/
  VCOREQ02.TI-SY-STY-NBR-FL = TI0EM002.TI-SY-STY-NBR-FL; /**/
  VCOREQ02.TI-SY-COLR-CD-FL = TI0EM002.TI-SY-COLR-CD-FL; /**/
  VCOREQ02.TI-XDM-DIM-CD-FL = TI0EM002.TI-XDM-DIM-CD-FL; /**/
  VCOREQ02.TI-CU-DEPT-SELF-FL = TI0EM002.TI-CU-DEPT-SELF-FL; /**/
  VCOREQ02.TI-CU-CDTY-GRP-FL = TI0EM002.TI-CU-CDTY-GRP-FL; /**/
  VCOREQ02.TI-CU-COST-CD-FL = TI0EM002.TI-CU-COST-CD-FL; /**/
  VCOREQ02.TI-SKU-COMNT1-FL = TI0EM002.TI-SKU-COMNT1-FL; /**/
  VCOREQ02.TI-SKU-COMNT2-FL = TI0EM002.TI-SKU-COMNT2-FL; /**/
  VCOREQ02.TI-SKU-COMNT3-FL = TI0EM002.TI-SKU-COMNT3-FL; /**/
  VCOREQ02.TI-DCMS-LABL-CD-FL = TI0EM002.TI-DCMS-LABL-CD-FL; /**/
  VCOREQ02.TI-CU-RTL-PRC-FL = TI0EM002.TI-CU-RTL-PRC-FL; /**/
  VCOREQ02.TI-SUGG-RTL-PRC-FL = TI0EM002.TI-SUGG-RTL-PRC-FL; /**/
  VCOREQ02.TI-CU-SPCL-PRC-FL = TI0EM002.TI-CU-SPCL-PRC-FL; /**/
  VCOREQ02.TI-SPCL-PRC-EDT-FL = TI0EM002.TI-SPCL-PRC-EDT-FL; /**/
  VCOREQ02.TI-CU-SIZE-PRC-FL = TI0EM002.TI-CU-SIZE-PRC-FL; /**/
  VCOREQ02.TI-CU-POS-PRC-FL = TI0EM002.TI-CU-POS-PRC-FL; /**/
  VCOREQ02.TI-CU-NEG-PRC-FL = TI0EM002.TI-CU-NEG-PRC-FL; /**/
  VCOREQ02.TI-CU-POS-PRC-PCT = TI0EM002.TI-CU-POS-PRC-PCT; /**/
  VCOREQ02.TI-CU-NEG-PRC-PCT = TI0EM002.TI-CU-NEG-PRC-PCT; /**/

  VCOREQ02.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* Change date*/
  VCOREQ02.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* Change time*/

  if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C")
    TI0ES-VCOREQ02-U(); /* Update the table row*/
  else
    VCOREQ02.ZZ-SDT = XX0XW01.XX0XWDAT; /* Set up date*/
    TI0ES-VCOREQ02-A(); /* Add the table row*/
  end

   /* ------------------------------------------------------------*/
   /* Commit all changes and refresh the data to be displayed.*/
   /* ------------------------------------------------------------*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit(); /* Commit all changes*/

  TIWREC.XXX-MSG-LOC-ID = "25000"; /* Message location*/
  TIWREC.XXX-MSG-NBR = 1; /* Table update was completed*/

  TI0EW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/


end // end TI0E-25000

// Search for next selection
Function TI0E-25100()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Determine if another line was selected for viewing.*/
   /* ------------------------------------------------------------*/

  if ("S" in TI0EW01.XXX-LN-SEL-IND from XXX-INX-FLD-NBR) /* Line was selected*/

    TI0EW00.XXX-INX-FLD-NBR = sysVar.arrayIndex; /* Map line index*/

    TI0EM002.XGP-GPC-CD = TI0EW01.XGP-GPC-CD[XXX-INX-FLD-NBR];
    TI0EM002.PK-LABL-CD = TI0EW01.PK-LABL-CD[XXX-INX-FLD-NBR];
    TI0EM002.TI-CO-REQ-EDT = TI0EW01.TI-CO-REQ-EDT[XXX-INX-FLD-NBR];
    TI0EM002.XXX-STAT = TI0EW01.XXX-STAT[XXX-INX-FLD-NBR];
                                   /* GPC code*/
    TI0EM002.CU-CO-ID = TI0EW01.CU-CO-ID[XXX-INX-FLD-NBR];
                                   /* Customer*/
    TI0EW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

  else

    TI0EW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    TI0EW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

  end


end // end TI0E-25100

// CALL DATE VALIDATION ROUTINE
Function TI0ES-1-TA0040()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* call ta2 date convert  routine*/
   /* ------------------------------------------------------------*/

  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2DTOPT = "GREGJUL";
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* date convert*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    return;

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "TA0040 DATE CONVERT     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Application name*/
  TA1REC.TA1PGMNM = "TI0ES1"; /* Process name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

   /* ------------- end of process TI0ES1 -----------------------*/


end // end TI0ES-1-TA0040

// Verify edit code and ID flags
Function TI0ES-EDT-CD-FL()
  /* ----------------------------------------------------------------*/
  /* ----------------------------------------------------------------*/
  /* Verify edit code and ID flags.*/
  /* ----------------------------------------------------------------*/

  if (TI0EM002.TI-SKU-COMNT3-FL != "Y"
   && TI0EM002.TI-SKU-COMNT3-FL != "N")
    set TI0EM002.TI-SKU-COMNT3-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-SKU-COMNT2-FL != "Y"
   && TI0EM002.TI-SKU-COMNT2-FL != "N")
    set TI0EM002.TI-SKU-COMNT2-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-SKU-COMNT1-FL != "Y"
   && TI0EM002.TI-SKU-COMNT1-FL != "N")
    set TI0EM002.TI-SKU-COMNT1-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-DCMS-LABL-CD-FL != "Y"
   && TI0EM002.TI-DCMS-LABL-CD-FL != "N")
    set TI0EM002.TI-DCMS-LABL-CD-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-CU-COST-CD-FL != "Y"
   && TI0EM002.TI-CU-COST-CD-FL != "N")
    set TI0EM002.TI-CU-COST-CD-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-CU-CDTY-GRP-FL != "Y"
   && TI0EM002.TI-CU-CDTY-GRP-FL != "N")
    set TI0EM002.TI-CU-CDTY-GRP-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-CU-DEPT-SELF-FL != "Y"
   && TI0EM002.TI-CU-DEPT-SELF-FL != "N")
    set TI0EM002.TI-CU-DEPT-SELF-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-XDM-DIM-CD-FL != "Y"
   && TI0EM002.TI-XDM-DIM-CD-FL != "N")
    set TI0EM002.TI-XDM-DIM-CD-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-SY-COLR-CD-FL != "Y"
   && TI0EM002.TI-SY-COLR-CD-FL != "N")
    set TI0EM002.TI-SY-COLR-CD-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-SY-STY-NBR-FL != "Y"
   && TI0EM002.TI-SY-STY-NBR-FL != "N")
    set TI0EM002.TI-SY-STY-NBR-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-CU-CO-NM-FL != "Y"
   && TI0EM002.TI-CU-CO-NM-FL != "N")
    set TI0EM002.TI-CU-CO-NM-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-VEND-CLS-ID-FL != "Y"
   && TI0EM002.TI-VEND-CLS-ID-FL != "N")
    set TI0EM002.TI-VEND-CLS-ID-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-CU-SZ-NM-FL != "Y"
   && TI0EM002.TI-CU-SZ-NM-FL != "N")
    set TI0EM002.TI-CU-SZ-NM-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-CU-SZ-ID-FL != "Y"
   && TI0EM002.TI-CU-SZ-ID-FL != "N")
    set TI0EM002.TI-CU-SZ-ID-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-CU-COLR-NM-FL != "Y"
   && TI0EM002.TI-CU-COLR-NM-FL != "N")
    set TI0EM002.TI-CU-COLR-NM-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-CU-PROD-SNM-FL != "Y"
   && TI0EM002.TI-CU-PROD-SNM-FL != "N")
    set TI0EM002.TI-CU-PROD-SNM-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-CU-PROD-NM-FL != "Y"
   && TI0EM002.TI-CU-PROD-NM-FL != "N")
    set TI0EM002.TI-CU-PROD-NM-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-CUST-PROD-ID-FL != "Y"
   && TI0EM002.TI-CUST-PROD-ID-FL != "N")
    set TI0EM002.TI-CUST-PROD-ID-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-CU-BUY-SESN-FL != "Y"
   && TI0EM002.TI-CU-BUY-SESN-FL != "N")
    set TI0EM002.TI-CU-BUY-SESN-FL bold, cursor;
    converseLib.validationFailed(83);
  end

  if (TI0EM002.TI-UPC-REQ-FL != "Y"
   && TI0EM002.TI-UPC-REQ-FL != "N")
    set TI0EM002.TI-UPC-REQ-FL bold, cursor;
    converseLib.validationFailed(83);
  end

end // end TI0ES-EDT-CD-FL

Function TI0ES-EDT-COMPANY()
  /* ------------------------------------------------*/
  /* ------------------------------------------------*/
  /* Validate company, pull in company name.*/
  /* ------------------------------------------------*/
  if (TI0EM002.CU-CO-ID == " ")
    converseLib.validationFailed(89);
  else
    KUCREC.KUCCOID = TI0EM002.CU-CO-ID;
    TI0ES-VCMPNY01-S();
    if (SQLCA.VAGen_SQLCODE == 0)
      TI0EM002.CU-CO-NM = KUCREC.KUCCONM;
    else
      converseLib.validationFailed(31);
      set TI0EM002.CU-CO-ID bold, cursor;
    end
  end
end // end TI0ES-EDT-COMPANY

Function TI0ES-EDT-CUSKU()
  /* ----------------------------------------------------------------*/
  /* ----------------------------------------------------------------*/
  /* Verify CU SKU ID (XREF ID).*/
  /* ----------------------------------------------------------------*/

  if (TI0EM002.CU-CUSKU-ID <= 0)
    set TI0EM002.CU-CUSKU-ID bold, cursor;
    converseLib.validationFailed(84);
  end
end // end TI0ES-EDT-CUSKU

Function TI0ES-EDT-GPC()
  /* -----------------------------------------------------------*/
  /* -----------------------------------------------------------*/
  /* Edit GPC code.*/
  /* -----------------------------------------------------------*/
  if (TI0EM002.XGP-GPC-CD == " ")
    set TI0EM002.XGP-GPC-CD bold, cursor;
    converseLib.validationFailed(27);
  else
    if (TI0EM002.XGP-GPC-CD in XGPTBL.XGPCD)
      /* NEXT SENTENCE*/
    else
      converseLib.validationFailed(28);
    end
  end
end // end TI0ES-EDT-GPC

Function TI0ES-EDT-HDL-CD()
  /* ----------------------------------------------------------------*/
  /* ----------------------------------------------------------------*/
  /* Edit handling codes.*/
  /* 1.  There must be as least 1 special handling code.*/
  /* 2.  The special handling code must exist on the XHD table*/
  /* with a GPC matching the one on map 2.*/
  /* ----------------------------------------------------------------*/

  if (TI0EM002.XHD-HNDL-CD5 == " "
   && TI0EM002.XHD-HNDL-CD4 == " "
   && TI0EM002.XHD-HNDL-CD3 == " "
   && TI0EM002.XHD-HNDL-CD2 == " "
   && TI0EM002.XHD-HNDL-CD1 == " ")
    set TI0EM002.XHD-HNDL-CD1 bold, cursor;
    converseLib.validationFailed(86); /* Must have at least 1 spcl hndl cd*/
  end
  /*  */
  TI0EW00.XGPCD = TI0EM002.XGP-GPC-CD;
  if (TI0EM002.XHD-HNDL-CD5 > " ")
    TI0EW00.XHDCD = TI0EM002.XHD-HNDL-CD5;
    if (TI0EW00.XHDKEY in XHDTBL.XHDKEY
     && XHDTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
  /* NEXT SENTENCE*/
    else
      set TI0EM002.XGP-GPC-CD bold;
      set TI0EM002.XHD-HNDL-CD5 bold, cursor;
      converseLib.validationFailed(85); /* Invalid combination of GPC and HNDL cd*/
    end
  end
  /*  */
  if (TI0EM002.XHD-HNDL-CD4 > " ")
    TI0EW00.XHDCD = TI0EM002.XHD-HNDL-CD4;
    if (TI0EW00.XHDKEY in XHDTBL.XHDKEY
     && XHDTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
  /* NEXT SENTENCE*/
    else
      set TI0EM002.XGP-GPC-CD bold;
      set TI0EM002.XHD-HNDL-CD4 bold, cursor;
      converseLib.validationFailed(85);
    end
  end
  /*  */
  if (TI0EM002.XHD-HNDL-CD3 > " ")
    TI0EW00.XHDCD = TI0EM002.XHD-HNDL-CD3;
    if (TI0EW00.XHDKEY in XHDTBL.XHDKEY
     && XHDTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
  /* NEXT SENTENCE*/
    else
      set TI0EM002.XGP-GPC-CD bold;
      set TI0EM002.XHD-HNDL-CD3 bold, cursor;
      converseLib.validationFailed(85); /* Invalid combination of GPC and HNDL cd*/
    end
  end
  /*  */
  if (TI0EM002.XHD-HNDL-CD2 > " ")
    TI0EW00.XHDCD = TI0EM002.XHD-HNDL-CD2;
    if (TI0EW00.XHDKEY in XHDTBL.XHDKEY
     && XHDTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
  /* NEXT SENTENCE*/
    else
      set TI0EM002.XGP-GPC-CD bold;
      set TI0EM002.XHD-HNDL-CD2 bold, cursor;
      converseLib.validationFailed(85); /* Invalid combination of GPC and HNDL cd*/
    end
  end
  /*  */
  if (TI0EM002.XHD-HNDL-CD1 > " ")
    TI0EW00.XHDCD = TI0EM002.XHD-HNDL-CD1;
    if (TI0EW00.XHDKEY in XHDTBL.XHDKEY
     && XHDTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
  /* NEXT SENTENCE*/
    else
      set TI0EM002.XGP-GPC-CD bold;
      set TI0EM002.XHD-HNDL-CD1 bold, cursor;
      converseLib.validationFailed(85); /* Invalid combination of GPC and HNDL cd*/
    end
  end
  /*  */
end // end TI0ES-EDT-HDL-CD

Function TI0ES-EDT-LBL-CD()
  /* --------------------------------------------------------------*/
  /* --------------------------------------------------------------*/
  /* Currently no edit for label code.*/
  /* --------------------------------------------------------------*/
end // end TI0ES-EDT-LBL-CD

// Edit pricing flags
Function TI0ES-EDT-PRC-FL()
  /* ----------------------------------------------------------------*/
  /* ----------------------------------------------------------------*/
  /* Edit price variance and requirement flags.*/
  /* ----------------------------------------------------------------*/

  if (TI0EM002.TI-CU-NEG-PRC-FL != "Y"
   && TI0EM002.TI-CU-NEG-PRC-FL != "N")
    set TI0EM002.TI-CU-NEG-PRC-FL bold, cursor;
    converseLib.validationFailed(82);
  end

  if (TI0EM002.TI-CU-POS-PRC-FL != "Y"
   && TI0EM002.TI-CU-POS-PRC-FL != "N")
    set TI0EM002.TI-CU-POS-PRC-FL bold, cursor;
    converseLib.validationFailed(82);
  end

  if (TI0EM002.TI-CU-SIZE-PRC-FL != "Y"
   && TI0EM002.TI-CU-SIZE-PRC-FL != "N")
    set TI0EM002.TI-CU-SIZE-PRC-FL bold, cursor;
    converseLib.validationFailed(82);
  end

  if (TI0EM002.TI-SPCL-PRC-EDT-FL != "Y"
   && TI0EM002.TI-SPCL-PRC-EDT-FL != "N")
    set TI0EM002.TI-SPCL-PRC-EDT-FL bold, cursor;
    converseLib.validationFailed(82);
  end

  if (TI0EM002.TI-CU-SPCL-PRC-FL != "Y"
   && TI0EM002.TI-CU-SPCL-PRC-FL != "N")
    set TI0EM002.TI-CU-SPCL-PRC-FL bold, cursor;
    converseLib.validationFailed(82);
  end

  if (TI0EM002.TI-SUGG-RTL-PRC-FL != "Y"
   && TI0EM002.TI-SUGG-RTL-PRC-FL != "N")
    set TI0EM002.TI-SUGG-RTL-PRC-FL bold, cursor;
    converseLib.validationFailed(82);
  end

  if (TI0EM002.TI-CU-RTL-PRC-FL != "Y"
   && TI0EM002.TI-CU-RTL-PRC-FL != "N")
    set TI0EM002.TI-CU-RTL-PRC-FL bold, cursor;
    converseLib.validationFailed(82);
  end

end // end TI0ES-EDT-PRC-FL

// Edit price variance percentage
Function TI0ES-EDT-PRC-PCT()
  /* ----------------------------------------------------------------*/
  /* ----------------------------------------------------------------*/
  /* Edit price variance percentages*/
  /* ----------------------------------------------------------------*/

  if (TI0EM002.TI-CU-NEG-PRC-PCT < 0
   || TI0EM002.TI-CU-NEG-PRC-PCT > 200)
    set TI0EM002.TI-CU-NEG-PRC-PCT bold, cursor;
    converseLib.validationFailed(81);
  end

  if (TI0EM002.TI-CU-POS-PRC-PCT < 0
   || TI0EM002.TI-CU-POS-PRC-PCT > 200)
    set TI0EM002.TI-CU-POS-PRC-PCT bold, cursor;
    converseLib.validationFailed(81);
  end
end // end TI0ES-EDT-PRC-PCT

Function TI0ES-EDT-REQ-DTS()
  /* ----------------------------------------------------------------*/
  /* ----------------------------------------------------------------*/
  /* EDIT DATES*/
  /* 1.  Call TA0030 for validation of dates.*/
  /* 2.  Check for overlap of new record to an existing record*/
  /* based on Account, GPC, Label code, and Begin Need Date*/
  /* (TI-CO-REQ-EDT).*/
  /* 3.  Expiration date must be < effective date*/
  /* ----------------------------------------------------------------*/
  set TA2REC empty;

  if (TI0EM002.TI-CO-REQ-XDT != 99991231)
    TA2REC.TA2GRGGN = TI0EM002.TI-CO-REQ-XDT;

    TI0ES-1-TA0040(); /* CALL DATE VALIDATION ROUTINE*/

    if (TA2REC.TA2RTNCD != 0)
      set TI0EM002.TI-CO-REQ-XDT cursor, bold;
      converseLib.validationFailed(87); /* Invalid date entered*/
    end
  end

  set TA2REC empty;
  TA2REC.TA2GRGGN = TI0EM002.TI-CO-REQ-EDT;

  TI0ES-1-TA0040(); /* CALL DATE VALIDATION ROUTINE*/

  if (TA2REC.TA2RTNCD != 0)
    set TI0EM002.TI-CO-REQ-EDT cursor, bold;
    converseLib.validationFailed(87); /* Invalid date entered*/
  end

  if (converseVar.validationMsgNum == 0)
    VCOREQ02.XGP-GPC-CD = TI0EM002.XGP-GPC-CD;
    VCOREQ02.CU-CO-ID = TI0EM002.CU-CO-ID;
    VCOREQ02.PK-LABL-CD = TI0EM002.PK-LABL-CD;
    VCOREQ02.TI-CO-REQ-EDT = TI0EM002.TI-CO-REQ-EDT;
    VCOREQ02.TI-CO-REQ-XDT = TI0EM002.TI-CO-REQ-XDT;

    TI0ES-VCOREQ02-E();

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == -811)
      set TI0EM002.TI-CO-REQ-EDT bold, cursor;
      set TI0EM002.TI-CO-REQ-XDT bold;
      converseLib.validationFailed(88);
    end
  end

end // end TI0ES-EDT-REQ-DTS

Function TI0ES-EDT-STAT-CD()
  /* ----------------------------------------------------------------*/
  /* ----------------------------------------------------------------*/
  /* Edit Status.*/
  /* ----------------------------------------------------------------*/
  /*  */
  if (TI0EM002.XXX-STAT != "A"
   && TI0EM002.XXX-STAT != "I")
    set TI0EM002.XXX-STAT bold, cursor;
    converseLib.validationFailed(43); /* Only A and I are valid stat codes*/
  end
end // end TI0ES-EDT-STAT-CD

Function TI0ES-EDT-STY-NBR()
  set SY1REC empty;
  SY1REC.XGPCD = "04";
  SY1REC.SY1STNBR = TI0EM002.SY-STY-NBR;

  TI0ES-VSTYLE01-S();

  if (SQLCA.VAGen_SQLCODE == 100)
    set TI0EM002.SY-STY-NBR cursor, bold;
    converseLib.validationFailed(59);
  end
end // end TI0ES-EDT-STY-NBR

// Add page to temporary storage
Function TI0ES-TA0050-A()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Add the next page to the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TI0EW01.XXX-TEMP-STG-LNTH = TI0EW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (TI0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set TI0EW01 empty; /* M001 display storage*/

    TI0EW00.XXX-HI-PAGE-NBR = TA5REC.TA5TSQIX; /* Highest page number*/

    TA5REC.TA5TSQIX = 0; /* Clear last page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TIWREC.XXX-MSG-LOC-ID = "TA0050A"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0ES-TA0050-A

// Purge any temporary storage
Function TI0ES-TA0050-P()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set TI0EW01 empty; /* M001 display storage*/

  TI0EW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

  TA5REC.TA5TSQIX = 0; /* Displayed page number*/
  TI0EW00.XXX-HI-PAGE-NBR = 0; /* Highest page number*/

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (TI0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Purge storage*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TIWREC.XXX-MSG-LOC-ID = "TA0050P"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0ES-TA0050-P

// Read temporary storage page
Function TI0ES-TA0050-R()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Read the next page from the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TI0EW01.XXX-TEMP-STG-LNTH = TI0EW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = TI0EW00.XXX-CURR-PAGE-NBR; /* Page number*/

  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (TI0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Read page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TIWREC.XXX-MSG-LOC-ID = "TA0050R"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "READ TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0ES-TA0050-R

// Update temporary storage page
Function TI0ES-TA0050-U()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Update the page in the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (TI0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TIWREC.XXX-MSG-LOC-ID = "TA0050U"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0ES-TA0050-U

// Select the company name
Function TI0ES-VCMPNY01-S()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0   /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100 /* Not found*/
    )                             
      return; /* Return to previous process*/
    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TIWREC.XXX-MSG-LOC-ID = "IO0240S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DCUST   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCMPNY01"; /* Table view name*/
  TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0ES-VCMPNY01-S

// Update the table row
Function TI0ES-VCOREQ02-A()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Add the specified row in the table.*/
   /* ------------------------------------------------------------*/

  try
    call "TI9950" ("A ", SQLCA, VCOREQ02) {isNoRefresh = yes, isExternal = yes};
  end /* Add row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VCOREQ02U"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOREQ02"; /* Table view name*/
  TA1REC.TA1TBLKE = VCOREQ02.COREQKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0ES-VCOREQ02-A

// Close selected set cursor
Function TI0ES-VCOREQ02-CS()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "TI9950" ("C1", SQLCA, VCOREQ02) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VCOREQ02CS"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOREQ02"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0ES-VCOREQ02-CS

// Attempt to find duplicate row.
Function TI0ES-VCOREQ02-E()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Attempt to find a match or overlap with row user is adding.*/
   /* ------------------------------------------------------------*/

  if (TI0EM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A")
                                  /* If adding a row*/
    VCOREQ02.ZZ-CHNG-DT = 0; /* Zero out chg dt and tm so overlap*/
    VCOREQ02.ZZ-CHNG-HHMM = 0; /* checking works.*/
  end

  try
    call "TI9950" ("E ", SQLCA, VCOREQ02) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0   /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100 /* or row not found*/
     || SQLCA.VAGen_SQLCODE == -811) /* or multiple row found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VCOREQ02-E"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOREQ02"; /* Table view name*/
  TA1REC.TA1TBLKE = VCOREQ02.COREQKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0ES-VCOREQ02-E

// Select the table row
Function TI0ES-VCOREQ02-S()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "TI9950" ("S ", SQLCA, VCOREQ02) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VCOREQ02S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOREQ02"; /* Table view name*/
  TA1REC.TA1TBLKE = VCOREQ02.COREQKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0ES-VCOREQ02-S

// Fetch next row in cursor
Function TI0ES-VCOREQ02-SN()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "TI9950" ("N1", SQLCA, VCOREQ02) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/
    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      TI0EW00.TI0EW-COREQ-EOF-FL = "Y"; /* End of cursor*/

      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VCOREQ02SN"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOREQ02"; /* Table view name*/
  TA1REC.TA1TBLKE = VCOREQ02.COREQKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0ES-VCOREQ02-SN

// Select set and open cursor
Function TI0ES-VCOREQ02-SS()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "TI9950" ("S1", SQLCA, VCOREQ02) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VCOREQ02SS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOREQ02"; /* Table view name*/
  TA1REC.TA1TBLKE = VCOREQ02.COREQKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0ES-VCOREQ02-SS

// Update the table row
Function TI0ES-VCOREQ02-U()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Update the specified row in the table.*/
   /* ------------------------------------------------------------*/

  try
    call "TI9950" ("U ", SQLCA, VCOREQ02) {isNoRefresh = yes, isExternal = yes};
  end /* Update row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If row not found, indicate the data was updated by another.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/

      TI0EW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

      TIWREC.XXX-MSG-LOC-ID = "VCOREQ02U"; /* Message location*/
      TIWREC.XXX-MSG-NBR = 12; /* Data was updated by another*/

      exit stack; /* Exit to display map*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TIWREC.XXX-MSG-LOC-ID = "VCOREQ02U"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOREQ02"; /* Table view name*/
  TA1REC.TA1TBLKE = VCOREQ02.COREQKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0ES-VCOREQ02-U

// Select the style
Function TI0ES-VSTYLE01-S()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0   /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100 /* Not found*/
    )                             
      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TIWREC.XXX-MSG-LOC-ID = "IO0120S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TIWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSTYLE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY1REC.SY1KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TI0ES-VSTYLE01-S

//*** RECORD=TI0EW00 ****
// ----------------------------
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record TI0EW00 type basicRecord
  10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 XXX-MAP-DSP-CD XXX-MAP-DSP-CD ; 
  10 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  10 XXX-INX-LMT-NBR XXX-INX-LMT-NBR ; 
  10 XXX-INX-FLD-NBR XXX-INX-FLD-NBR ; 
  10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
  10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
  10 XXX-PAGE-UPD-FL XXX-PAGE-UPD-FL ; 
  10 TI0EW-COREQ-EOF-FL TI0EW-COREQ-EOF-FL ; 
  10 XHDKEY XHDKEY ; 
    15 XHDCD XHDCD ; 
    15 XGPCD XGPCD ; 
end // end TI0EW00

//*** RECORD=TI0EW01 ****
// ------------------------
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record TI0EW01 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 * char(681) ; 
    10 TI0EM-XGP-GPC-CD TI0EM-XGP-GPC-CD ; 
    10 TI0EM-CU-CO-ID TI0EM-CU-CO-ID ; 
    10 XXX-LN-SEL-IND XXX-LN-SEL-IND [15] ; 
    10 XGP-GPC-CD XGP-GPC-CD [15] ; 
    10 CU-CO-ID CU-CO-ID [15] ; 
    10 CU-CO-NM CU-CO-NM [15] ; 
    10 PK-LABL-CD PK-LABL-CD [15] ; 
    10 TI-CO-REQ-EDT TI-CO-REQ-EDT [15] ; 
    10 XXX-STAT XXX-STAT [15] ; 
end // end TI0EW01

//*** RECORD=TI0EW02 ****
// ------------------------
// ------------------------
// Map 002 display storage.
// ------------------------
// ***********************
Record TI0EW02 type basicRecord
  10 XGP-GPC-CD XGP-GPC-CD ; 
  10 CU-CO-ID CU-CO-ID ; 
  10 CU-CO-NM CU-CO-NM ; 
  10 PK-LABL-CD PK-LABL-CD ; 
  10 TI-CO-REQ-EDT TI-CO-REQ-EDT ; 
  10 TI-UPC-REQ-FL TI-UPC-REQ-FL ; 
  10 XXX-STAT XXX-STAT ; 
  10 XHD-HNDL-CD1 XHD-HNDL-CD1 ; 
  10 XHD-HNDL-CD2 XHD-HNDL-CD2 ; 
  10 XHD-HNDL-CD3 XHD-HNDL-CD3 ; 
  10 XHD-HNDL-CD4 XHD-HNDL-CD4 ; 
  10 XHD-HNDL-CD5 XHD-HNDL-CD5 ; 
  10 CU-CUSKU-ID CU-CUSKU-ID ; 
  10 SY-STY-NBR SY-STY-NBR ; 
  10 TI-CO-REQ-XDT TI-CO-REQ-XDT ; 
  10 TI-CU-BUY-SESN-FL TI-CU-BUY-SESN-FL ; 
  10 TI-CUST-PROD-ID-FL TI-CUST-PROD-ID-FL ; 
  10 TI-CU-PROD-NM-FL TI-CU-PROD-NM-FL ; 
  10 TI-CU-PROD-SNM-FL TI-CU-PROD-SNM-FL ; 
  10 TI-CU-COLR-NM-FL TI-CU-COLR-NM-FL ; 
  10 TI-CU-SZ-ID-FL TI-CU-SZ-ID-FL ; 
  10 TI-CU-SZ-NM-FL TI-CU-SZ-NM-FL ; 
  10 TI-VEND-CLS-ID-FL TI-VEND-CLS-ID-FL ; 
  10 TI-CU-CO-NM-FL TI-CU-CO-NM-FL ; 
  10 TI-SY-STY-NBR-FL TI-SY-STY-NBR-FL ; 
  10 TI-SY-COLR-CD-FL TI-SY-COLR-CD-FL ; 
  10 TI-XDM-DIM-CD-FL TI-XDM-DIM-CD-FL ; 
  10 TI-CU-DEPT-SELF-FL TI-CU-DEPT-SELF-FL ; 
  10 TI-CU-CDTY-GRP-FL TI-CU-CDTY-GRP-FL ; 
  10 TI-CU-COST-CD-FL TI-CU-COST-CD-FL ; 
  10 TI-SKU-COMNT1-FL TI-SKU-COMNT1-FL ; 
  10 TI-SKU-COMNT2-FL TI-SKU-COMNT2-FL ; 
  10 TI-SKU-COMNT3-FL TI-SKU-COMNT3-FL ; 
  10 TI-DCMS-LABL-CD-FL TI-DCMS-LABL-CD-FL ; 
  10 TI-CU-RTL-PRC-FL TI-CU-RTL-PRC-FL ; 
  10 TI-SUGG-RTL-PRC-FL TI-SUGG-RTL-PRC-FL ; 
  10 TI-CU-SPCL-PRC-FL TI-CU-SPCL-PRC-FL ; 
  10 TI-SPCL-PRC-EDT-FL TI-SPCL-PRC-EDT-FL ; 
  10 TI-CU-SIZE-PRC-FL TI-CU-SIZE-PRC-FL ; 
  10 TI-CU-POS-PRC-FL TI-CU-POS-PRC-FL ; 
  10 TI-CU-NEG-PRC-FL TI-CU-NEG-PRC-FL ; 
  10 TI-CU-POS-PRC-PCT TI-CU-POS-PRC-PCT ; 
  10 TI-CU-NEG-PRC-PCT TI-CU-NEG-PRC-PCT ; 
  10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
  10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
end // end TI0EW02

Record VCOREQ02 type basicRecord
  5 VCOREQ02-REC VCOREQ02-REC ; 
    10 COREQKEY COREQKEY ; 
      20 CU-CO-ID CU-CO-ID ; 
      20 XGP-GPC-CD XGP-GPC-CD ; 
      20 PK-LABL-CD PK-LABL-CD ; 
      20 TI-CO-REQ-EDT TI-CO-REQ-EDT ; 
    10 TI-CO-REQ-XDT TI-CO-REQ-XDT ; 
    10 CU-CUSKU-ID CU-CUSKU-ID ; 
    10 SY-STY-NBR SY-STY-NBR ; 
    10 XHD-HNDL-CD1 XHD-HNDL-CD1 ; 
    10 XHD-HNDL-CD2 XHD-HNDL-CD2 ; 
    10 XHD-HNDL-CD3 XHD-HNDL-CD3 ; 
    10 XHD-HNDL-CD4 XHD-HNDL-CD4 ; 
    10 XHD-HNDL-CD5 XHD-HNDL-CD5 ; 
    10 TI-UPC-REQ-FL TI-UPC-REQ-FL ; 
    10 TI-CU-BUY-SESN-FL TI-CU-BUY-SESN-FL ; 
    10 TI-CU-BUY-SESN-CD TI-CU-BUY-SESN-CD ; 
    10 TI-CUST-PROD-ID-FL TI-CUST-PROD-ID-FL ; 
    10 TI-CU-PROD-NM-FL TI-CU-PROD-NM-FL ; 
    10 TI-CU-PDNM-SRC-CD TI-CU-PDNM-SRC-CD ; 
    10 TI-CU-PROD-SNM-FL TI-CU-PROD-SNM-FL ; 
    10 TI-CU-PDSNM-SRC-CD TI-CU-PDSNM-SRC-CD ; 
    10 TI-CU-COLR-NM-FL TI-CU-COLR-NM-FL ; 
    10 TI-CU-COLR-NM-CD TI-CU-COLR-NM-CD ; 
    10 TI-CU-SZ-ID-FL TI-CU-SZ-ID-FL ; 
    10 TI-CU-SZ-ID-SRC-CD TI-CU-SZ-ID-SRC-CD ; 
    10 TI-CU-SZ-NM-FL TI-CU-SZ-NM-FL ; 
    10 TI-CU-SZ-NM-SRC-CD TI-CU-SZ-NM-SRC-CD ; 
    10 TI-CU-RTL-PRC-FL TI-CU-RTL-PRC-FL ; 
    10 TI-CU-SPCL-PRC-FL TI-CU-SPCL-PRC-FL ; 
    10 TI-SPCL-PRC-EDT-FL TI-SPCL-PRC-EDT-FL ; 
    10 TI-SUGG-RTL-PRC-FL TI-SUGG-RTL-PRC-FL ; 
    10 TI-VEND-CLS-ID-FL TI-VEND-CLS-ID-FL ; 
    10 TI-SKU-COMNT1-FL TI-SKU-COMNT1-FL ; 
    10 TI-SKU-COMNT2-FL TI-SKU-COMNT2-FL ; 
    10 TI-SKU-COMNT3-FL TI-SKU-COMNT3-FL ; 
    10 TI-CU-POS-PRC-PCT TI-CU-POS-PRC-PCT ; 
    10 TI-CU-POS-PRC-FL TI-CU-POS-PRC-FL ; 
    10 TI-CU-NEG-PRC-PCT TI-CU-NEG-PRC-PCT ; 
    10 TI-CU-NEG-PRC-FL TI-CU-NEG-PRC-FL ; 
    10 TI-CU-SIZE-PRC-FL TI-CU-SIZE-PRC-FL ; 
    10 TI-CUTK-CFM-PRT-FL TI-CUTK-CFM-PRT-FL ; 
    10 TI-CUTK-CFM-BEG-DT TI-CUTK-CFM-BEG-DT ; 
    10 TI-CU-CO-NM-FL TI-CU-CO-NM-FL ; 
    10 TI-SY-STY-NBR-FL TI-SY-STY-NBR-FL ; 
    10 TI-SY-COLR-CD-FL TI-SY-COLR-CD-FL ; 
    10 TI-XDM-DIM-CD-FL TI-XDM-DIM-CD-FL ; 
    10 TI-CU-DEPT-SELF-FL TI-CU-DEPT-SELF-FL ; 
    10 TI-CU-CDTY-GRP-FL TI-CU-CDTY-GRP-FL ; 
    10 TI-CU-COST-CD-FL TI-CU-COST-CD-FL ; 
    10 XXX-STAT XXX-STAT ; 
    10 TI-DCMS-LABL-CD-FL TI-DCMS-LABL-CD-FL ; 
    10 TI-LABL-STK-CD TI-LABL-STK-CD ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VCOREQ02

DataItem COREQKEY char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ZZ_SDT
DataItem TI-CO-REQ-EDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ZZ_SDT
DataItem TI-CO-REQ-XDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TI-CU-BUY-SESN-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-BUY-SESN-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-CDTY-GRP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-CO-NM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-COLR-NM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-COLR-NM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-COST-CD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-DEPT-SELF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-NEG-PRC-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-NEG-PRC-PCT decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TI-CU-PDNM-SRC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-PDSNM-SRC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-POS-PRC-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-POS-PRC-PCT decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TI-CU-PROD-NM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-PROD-SNM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-RTL-PRC-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-SIZE-PRC-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-SPCL-PRC-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-SZ-ID-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-SZ-ID-SRC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-SZ-NM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CU-SZ-NM-SRC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CUST-PROD-ID-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-CUTK-CFM-BEG-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TI-CUTK-CFM-PRT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DEFAULT LABEL CODE FLAG
DataItem TI-DCMS-LABL-CD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-LABL-STK-CD char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-SKU-COMNT1-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-SKU-COMNT2-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-SKU-COMNT3-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-SPCL-PRC-EDT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-SUGG-RTL-PRC-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-SY-COLR-CD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-SY-STY-NBR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-UPC-REQ-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-VEND-CLS-ID-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI-XDM-DIM-CD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// customer company id
DataItem TI0EM-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// XGP_GPC_CD
DataItem TI0EM-XGP-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TI0EW-COREQ-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem VCOREQ02-REC char(111)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

