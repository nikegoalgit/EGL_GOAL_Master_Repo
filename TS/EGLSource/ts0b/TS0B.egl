package ts0b;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import in1.common.*;
import ku.common.*;
import ni.common.*;
import op.common.*;
import pc.common.*;
import pv.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=TS0B ****
// This program allows users to inquire/maintain existing
// rows in the craft table.  The user will specify what carrier
// they currently want to work on.  The database will return
// 0 to N rows based upon the the carrier selected by the user.
// This program will format the screen with the craft informa-
// tion returned from the data base.
// 
// This program allows adding and changing of craft table rows:
// 
//    The user may add nes craft rows by pressing PF13 from
//    the inquiry screen (blank or filled with rows).  This
//    will position them in an add screen.  Craft rows can then
//    added (if entries pass edit criteria) by pressing ENTER.
//    The user may continue adding or exit to the inquiry
//    screen.  (If a craft already exists on an add, a message
//    will appear to that effect: 'this row already exists').
// 
//    A user can select one or more rows for change and hit
//    PF14.  The user will then be positioned in a change
//    screen where they can make their changes to non-key
//    fields and hit ENTER to cycle to the next row selected
//    for change or PF3 to return to the browse screen.
// 
// Upon initial entry, the table is read and columns from the
// selected rows are formatted and saved in temporary storage,
// one display page per queue record.
// 
// The records are retrieved from temporary storage one at a
// time, for display to the user.  The user may page forward
// and backward, to view the rows that were selected.
// 
// The user may exit to any allowed application via FAST PATH
// or PF key at any time.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 12/04/87   cepple   New application.
// 11/07/96   JCARL1   Remove alarm from message display.
// y2kfix     oricha   Y2K modifications:  xx0xs01 replaces
//                     ezedte and ezetim for ts0b360, ts0b252
//                     and xpts001 flow.
// 09/02/99   npulug   Added craft-name in the map ts0bm001
//                     to allow user to enter craft name
//                     using which the corresponding page
//                     where the craft name is stored is
//                     displayed on the screen with the
//                     cursor positioned on that craft-nbr
//                     Added TS0BW03 recd, TS0BW1522,TS0BW1521
//                     TS0B1523,TS0B1524 Procs and
//                     modified TS0B160,TS0B152,TS0BW01
//                     and TS0BM001 map.
// *********************
Program TS0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TS00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TS0BW01 TS0BW01; // record
  TS0BW02 TS0BW02; // record
  TS0BW03 TS0BW03; // record
  TS5REC TS5REC; // record
  TSAREC TSAREC; // record
  TSWREC TSWREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use YMTTBL {deleteAfterUse = yes}; // table
  use TS0BM.TS0BM001,  // forms
      TS0BM.TS0BM002, 
      TS0BM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTS001: XPTS001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    set TS0BW01 empty; /* Initialize working storage*/
    set TS0BW02 empty; /* Initialize temporary storage*/
    set TSAREC empty; /* Initialize records used*/
    set TS5REC empty;
    set TSWREC empty;
    set TA1REC empty;
    set TA5REC empty;
    set SQLCA empty;
    set ERRSQLCA empty;
    set XX0XW01 empty;
    set TS0BM001 initial; /* Initialize map1 output area*/
    set TS0BM002 initial; /* Initialize map2 output area*/

     /* ------------  y2k out begin ---------------------------*/
      /* using xx0xs01 for date process now to replace this*/
     /* MOVE 19 TO TS0BW01.TS0BWCEN;      /* Initialize working century*/
     /* ------------  y2k end begin ---------------------------*/

    TS0BW01.TS0BWMAP = "1"; /* Indicate map to be displayed*/
    TS0BW01.TS0BWMFL = "N"; /* Iitialize message flag*/
    TS0BW01.TS0BWPSW = "N"; /* Iitialize problem switch*/
    TS0BW01.TS0BWSPG = 0; /* Set save page to 0*/

    if (COMMAREA.CAITEM == " ") /* If commarea item not requested*/
      TS0BW01.TS0BWSWR = "N"; /* Set request for data to no*/
    else
      TS0BW01.TS0BWSWR = "Y"; /* Set request for data to yes*/
      TS0BM001.TSACARCD = COMMAREA.CAITEM; /* Set change save key*/
      TSAREC.TSACARCD = COMMAREA.CAITEM; /* Set record key*/
    end

    goto TS0B001; /* Converse Location Inquiry/Main.*/


    TS0B001: TS0B001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    goto TS0B001; /* Converse Location Inquiry/Main.*/


  end // end main
end // end TS0B

// Craft Inquiry/Maintenance
Function TS0B001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display maps.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the first map.*/
      /* Otherwise, if specified, display the second map.*/
      /* Otherwise, indicate error and exit to Master Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (TS0BW01.TS0BWMAP == "1") /* Map 1 was requested*/
    TS0B100(); /* Display map 1*/
  else
    if (TS0BW01.TS0BWMAP == "2" /* Map 2 was requested*/
     && TS0BW01.TS0BWFSW == "A") /* and ADD function*/
      TS0B200(); /* Display Location Add Map*/
    else
      if (TS0BW01.TS0BWMAP == "2" /* Map 2 was selected*/
       && TS0BW01.TS0BWFSW == "C") /* and CHANGE function*/

        TS0BW01.TS0BWSPG = 0; /* Set save page to zero*/
        TS0BW01.TS0BWCSK = " "; /* Clear delete save key*/
        TS0BW01.TS0BWSPG = TS0BW01.TS0BWTSP; /* Save page number*/
        TS0BW01.TS0BWIXM = 1; /* Initialize index*/
        TS0BW01.TS0BWSIX = 99; /* INITIALIZE SAVE INDEX*/

        while (TS0BW01.TS0BWIXM <= 14 /* Until end of page*/
         && TS0BW01.TS0BWMAP != "1") /* and not map 1*/
          if (TS0BM001.TS0BMSEL[TS0BWIXM] == "S") /* If line selected*/
            TS0B300(); /* Display Location Delete Map*/
            if (TS0BW01.TS0BWIXM <= TS0BW01.TS0BWSIX) /* Update save index*/
              TS0BW01.TS0BWSIX = TS0BW01.TS0BWIXM;
            end
          end
          TS0BW01.TS0BWIXM = TS0BW01.TS0BWIXM + 1; /* Increment index*/
        end
        TS0BW01.TS0BWSIX = TS0BW01.TS0BWSIX - 1; /* Decrement save index*/
        TS0BW01.TS0BWMAP = "1"; /* set map to location inquiry*/
      else
        TA1REC.TA1TYPE = "APPL"; /* Type of error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        TA1REC.TA1PGMNM = "TS0B001 "; /* Process name*/
        TA1REC.TA1LOC = "MAIN APPLICATION PROCESS";
        TA1REC.TA1MAP = TS0BW01.TS0BWMAP; /* Map name*/
        SQLCA.SQLCAREC = "MAP NUMBER REQUESTED IS INVALID";

        call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
        XSPF4(); /* Exit to Master Menu*/
      end
    end
  end


end // end TS0B001

// Craft inquiry/main. map
Function TS0B100()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (TS0BW01.TS0BWSWR == "Y") /* The request for data is yes*/
    TS0B110(); /* Obtain the data to display*/
  end

  TS0B120(); /* Format and display the map*/

  TS0B130(); /* Check attention identifier*/

  TS0B140(); /* Reset fields to normal intensity*/

  TS0B150(); /* Verify the entered data*/

  TS0B160(); /* Process valid input request*/


end // end TS0B100

// Obtain the data to display
Function TS0B110()
   /* ------------------------------------------------------------*/
   /* If data was requested, select carrier table row.*/
   /* If carrier does not exist, set error message.*/
   /* Purge any existing queue in temporary storage.*/
   /* Select and open the cursor for the set to be formatted.*/
   /* Fetch and format the data in the page.*/
   /* If the page is full, add the page to the storage queue.*/
   /* At end of rows, add any partial page to the queue.*/
   /* At end of rows, close the selected set cursor.*/
   /* If no data found, display error message and return to*/
      /* previous process.*/
   /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/

  TS0B111(); /* Select carrier table row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* Carrier was not found*/
    converseLib.validationFailed(21); /* No data found to display*/
    TS0BW01.TSACARNM = " "; /* Clear carrier name field*/
    set TS0BM001 initial; /* Clear map output area*/
    TS0BW01.TS0BWPSW = "N"; /* Override problem switch*/
    TS0BW01.TSACARCD = TSAREC.TSACARCD; /* Save code*/
    TS0BM001.TSACARCD = TS0BW01.TSACARCD; /* Move in carr code*/
    TS0BM001.XXXPRCNM = "TS0B110"; /* Process name*/
    TS0B112(); /* Purge any temporary storage*/
  else
    if (SQLCA.VAGen_SQLCODE == 0) /* Carrier was not found*/
      TS0BW01.TSACARCD = TSAREC.TSACARCD; /* Save code*/
      TS0BW01.TSACARNM = TSAREC.TSACARNM; /* Save description*/
      TS0B112(); /* Purge any temporary storage*/

      set TS5REC empty; /* Clear craft record*/
      TS5REC.TSACARCD = TS0BW01.TSACARCD; /* Set craft record search*/

      TS0B113(); /* Select set and open the cursor*/
      if (SQLCA.VAGen_SQLCODE == 0) /* No errors were found*/
        set TS0BW02 empty; /* Clear temporary storage record*/
        set TS5REC empty; /* Clear craft record*/
        TS5REC.TSACARCD = TS0BM001.TSACARCD; /* Set craft*/
        TS0BW01.TS0BWIXM = 1;
                                   /* Initialize display line number*/
        TS0BW01.TS0BWSWC = "N"; /* Initialize end of file switch*/
        TS0BW01.TS0BWPSW = "N"; /* Init problem found switch*/
        while (TS0BW01.TS0BWSWC == "N" /* Until end of set or problem found*/
         && TS0BW01.TS0BWPSW == "N") /* or until a problem was found*/
          TS0B114(); /* Obtain data and format page*/
          if (TS0BW01.TS0BWIXM > 14) /* Page is full*/
            TS0B115(); /* Add page to temporary storage*/
          end
        end
        if (TS0BW01.TS0BWSWC == "Y") /* end of set was found*/
          if (TS0BW01.TS0BWIXM > 1) /* and some of the page was formatted*/
            TS0B115(); /* Add page to temporary storage*/
          end
          TS0BW01.TS0BWTSP = 1; /* Initialize page number*/
          TS0BW01.TS0BWSWR = "N"; /* Request for data completed*/
          TS0B116(); /* Close the selected set cursor*/
        end
      end
    end

    if (TS0BW01.TA5TSQIX == 0) /* No data to display*/
      TS0BM001.XXXPRCNM = "TS0B110"; /* Process name*/
      converseLib.validationFailed(21); /* Indicate no data to display*/
      TS0BW01.TS0BWPSW = "N"; /* Override problem*/
    end
  end


end // end TS0B110

// Select craft table row
Function TS0B111()
   /* ------------------------------------------------------------*/
   /* This module select a table row from the Carrier table.*/
   /* It will return a system error if an unexpected return*/
     /* code is received.*/
   /* ------------------------------------------------------------*/

  call "IO2340" ("S ", SQLCA, TSAREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   && SQLCA.VAGen_SQLCODE != 100) /* handled in previous process*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0B111"; /* Process name*/
    TA1REC.TA1LOC = "SELECT TABLE ROW";
    TA1REC.TA1MAP = "TS0BM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VTSCAR01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0BW01.TS0BWPSW = "Y"; /* Indicate Problem*/
    TS0BM001.XXXPRCNM = "TS0B111"; /* Process name*/
  end


end // end TS0B111

// Purge any temporary storage
Function TS0B112()
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "TS0B"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  call "TA0050" (TS0BW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* Temporary storage subr*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0B111"; /* Process name*/
    TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
    TA1REC.TA1MAP = "TS0BM001"; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  end

  TS0BW01.TS0BWTSP = 0; /* Reset current page number*/
  TS0BW01.TA5TSQIX = 0; /* Reset highest page number*/


end // end TS0B112

// Select set
Function TS0B113()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "IO2330" ("SS", SQLCA, TS5REC) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0B112"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0BM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCRAFT01"; /* Table view name*/
    TA1REC.TA1TBLKE = TS5REC.TS5KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0BM001.XXXPRCNM = "TS0B112"; /* Process name*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/

  end


end // end TS0B113

// Fetch next row and format
Function TS0B114()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/

  call "IO2330" ("SN", SQLCA, TS5REC) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    TS0BW01.TS0BWSWC = "Y"; /* end of set found*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0B114"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      TA1REC.TA1MAP = "TS0BM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCRAFT01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0BM001.XXXPRCNM = "TS0B114"; /* Process name*/

    else
      TS0BW02.TS5CRAFT[TS0BWIXM] = TS5REC.TS5CRAFT; /* Save data*/
      TS0BW02.TS5NAME[TS0BWIXM] = TS5REC.TS5NAME;
      TS0BW02.TS5SHNM[TS0BWIXM] = TS5REC.TS5SHNM;
      TS0BW02.YMTCD[TS0BWIXM] = TS5REC.YMTCD;
      TS0BW02.TS5LEASE[TS0BWIXM] = TS5REC.TS5LEASE;

      TS0BW01.TS0BWIXM = TS0BW01.TS0BWIXM + 1; /* Increment line index*/
    end
  end



end // end TS0B114

// Add page to temporary storage
Function TS0B115()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/

  TS0BW02.TS0BWLEN = 700; /* Temporary storage length*/
  TA5REC.TA5APPID = "TS0B"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  call "TA0050" (TS0BW02, TA5REC) {isNoRefresh = yes}; /* Temporary storage subroutine*/

  if (TA5REC.TA5RTNCD == 0) /* everything is a-ok*/
    TS0BW01.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TS0BW01.TS0BWIXM = 1; /* Reset display line number*/
    set TS0BW02 empty; /* Clear temporary storage record*/
  else /* error was found*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "TS0B114"; /* Process name*/
    TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
    TA1REC.TA1MAP = "TS0BM001"; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

    TS0BM001.XXXPRCNM = "TS0B115"; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    TS0BW01.TS0BWPSW = "Y"; /* indicate problem has been found*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end


end // end TS0B115

// Close selected set cursor
Function TS0B116()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  call "IO2330" ("CS", SQLCA, TS5REC) {isNoRefresh = yes, isExternal = yes}; /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "TS0B116"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0BM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCRAFT01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0BM001.XXXPRCNM = "TS0B115"; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end


end // end TS0B116

// Format and display the map
Function TS0B120()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (TS0BW01.TS0BWPSW == "N") /* No error message to display*/
    set TS0BM001 initial; /* Clear map output area*/
    TS0BM001.TSACARCD = TS0BW01.TSACARCD;
    TS0BM001.TSACARNM = TS0BW01.TSACARNM;

    if (TS0BW01.TS0BWFSW == "C" /* If coming back from change*/
     && TS0BW01.TS0BWSIX > 0    /* and save index is GT 0*/
     && TS0BW01.TS0BWSIX != 99) /* and save index has been set*/
      set TS0BM001.TS0BMSEL[TS0BWSIX] cursor; /* Set cursor position*/
      TS0BW01.TS0BWSIX = 0; /* Reset save index*/
    end

    TS0B121(); /* Format the selected data*/
  end

  /* EZEMNO NE 0;                   /* No error message to display*/
  /* SET TS0BM001 ALARM;             /* Indicate sound alarm*/
  /* END;*/

  if (TS0BM001.TS5CRAFT[1] == " ") /* If no data on page*/
    set TS0BM001.TSACARCD cursor; /* set cursor to top field*/
  end

  if (TS0BW01.TS0BWMFL == "Y") /* If message flag is yes*/
    converseLib.validationFailed(44); /* Indicate update was successful*/
    TS0BM001.XXXPRCNM = "TS0B120"; /* Process name*/
    TS0BW01.TS0BWMFL = "N"; /* Reset message flag*/
  end

  TS0BM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  converse TS0BM001 ;

  TS0BW01.TS0BWPSW = "N"; /* Reset problem switch*/

end // end TS0B120

// Format the selected data
Function TS0B121()
   /* ------------------------------------------------------------*/
   /* Obtain the next page from temporary storage.*/
   /* Format the plan location data in the map.*/
   /* ------------------------------------------------------------*/

  TS0BW01.TS0BWDFL = "N"; /* Initialize delete flag*/

  if (TS0BW01.TS0BWCSK != " ") /* If delete save key set*/
    TS0BW01.TS0BWTSP = 1; /* Initialize search page*/
  end

  if (TS0BW01.TS0BWSPG > TS0BW01.TA5TSQIX) /* If save page was deleted*/
    TS0BW01.TS0BWSPG = TS0BW01.TS0BWSPG - 1; /* decrement save page*/
  end

  if (TS0BW01.TS0BWSPG > 0) /* If save page was set*/
    TS0BW01.TS0BWTSP = TS0BW01.TS0BWSPG; /* Move in new page*/
    TS0BW01.TS0BWSPG = 0; /* Reset save page*/
  end

  if (COMMAREA.CAADDFL == "Y") /* If user can perform add*/
    set TS0BM001.TS0BMADD skip; /* Display add PF Key*/
  end

  if (COMMAREA.CACHGFL == "Y") /* If user can perform delete*/
    set TS0BM001.TS0BMCHG skip; /* Display change PF Key*/
  end

  if (TS0BW01.TA5TSQIX == 0) /* if no data to display*/

    /* Do not format page*/

  else

    while (TS0BW01.TS0BWDFL == "N") /* While delete save key not found*/
      TS0B122(); /* Obtain temporary storage page*/
      TS0B123(); /* locate page with key*/
    end

    if (TS0BW01.TS0BWTSP != TA5REC.TA5TSQIX) /* Desired page not current*/
      TS0B122(); /* Obtain temporary storage page*/
    end

    set TS0BM001.TS0BMPGL skip; /* Display "PAGE" literal*/
    set TS0BM001.TS0BMOFL skip; /* Display "OF" literal*/

    TS0BM001.TS0BWTSP = TS0BW01.TS0BWTSP; /* Current page number*/
    set TS0BM001.TS0BWTSP skip; /* Display number*/
    TS0BM001.TA5TSQIX = TS0BW01.TA5TSQIX; /* Highest page number*/
    set TS0BM001.TA5TSQIX skip; /* Display number*/

    TS0BW01.TS0BWIXM = 1; /* Initialize line index*/
    while (TS0BW01.TS0BWIXM <= 14 /* Until end of lines*/
     && TS0BW02.TS5CRAFT[TS0BWIXM] != " ") /* or last line of data*/

      set TS0BM001.TS0BMSEL[TS0BWIXM] normal; /* Display select flag*/

      TS0BM001.TS5CRAFT[TS0BWIXM] = TS0BW02.TS5CRAFT[TS0BWIXM];
      TS0BM001.TS5NAME[TS0BWIXM] = TS0BW02.TS5NAME[TS0BWIXM];
      TS0BM001.TS5SHNM[TS0BWIXM] = TS0BW02.TS5SHNM[TS0BWIXM];
      TS0BM001.YMTCD[TS0BWIXM] = TS0BW02.YMTCD[TS0BWIXM];
      TS0BM001.TS5LEASE[TS0BWIXM] = TS0BW02.TS5LEASE[TS0BWIXM];

      TS0BW01.TS0BWIXM = TS0BW01.TS0BWIXM + 1; /* Increment line index*/

    end
  end


end // end TS0B121

// Read temporary storage page
Function TS0B122()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/

  TS0BW02.TS0BWLEN = 700; /* Temporary storage length*/
  TA5REC.TA5APPID = "TS0B"; /* Application identification*/
  TA5REC.TA5TSQIX = TS0BW01.TS0BWTSP; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  call "TA0050" (TS0BW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* Temporary storage subr*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "TS0B123"; /* Process name*/
    TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
    TA1REC.TA1MAP = "TS0BM001"; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0BM001.XXXPRCNM = "TS0B123"; /* Process name*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate Problem*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    exit stack; /* Exit to redisplay map*/

  end


end // end TS0B122

// Locate change save key
Function TS0B123()
   /* ------------------------------------------------------------*/
   /* Locate the page in which the key is less than or*/
   /* equal to the Change Save Key.*/
   /* ------------------------------------------------------------*/

  if (TS0BW01.TS0BWCSK == " ") /* No location code entered*/
    TS0BW01.TS0BWDFL = "Y"; /* Indicate key found*/
  else

    TS0BW01.TS0BWIXM = 1; /* Initialize index*/

    while (TS0BW01.TS0BWIXM <= 14) /* Until key is found*/
      if (TS0BW02.TS5CRAFT[TS0BWIXM] == " " /* no more crafts*/
       || TS0BW02.TS5CRAFT[TS0BWIXM] == TS0BW01.TS0BWCSK)
        if (TS0BW01.TS0BWIXM <= 0) /* Key not on page*/
          if (TS0BW01.TS0BWTSP == 1) /* first page*/
            TS0BW01.TS0BWIXM = 1; /* Reset index*/
          else
            TS0BW01.TS0BWIXM = 14; /* Index to last entry*/
            TS0BW01.TS0BWTSP = TS0BW01.TS0BWTSP - 1; /* decrement page*/
          end
        end
        set TS0BM001.TS0BMSEL[TS0BWIXM] cursor; /* Initial cursor*/
        TS0BW01.TS0BWDFL = "Y"; /* Indicate page was found*/
        TS0BW01.TS0BWCSK = " "; /* Reset starting carrier*/
        return; /* Return to previous process*/
      end
      TS0BW01.TS0BWIXM = TS0BW01.TS0BWIXM + 1; /* Increment index*/
    end

    if (TS0BW01.TS0BWTSP == TS0BW01.TA5TSQIX) /* Last page*/
      TS0BW01.TS0BWIXM = 14; /* Set index to last entry*/
      set TS0BM001.TS0BMSEL[TS0BWIXM] cursor; /* Initial cursor*/
      TS0BW01.TS0BWDFL = "Y"; /* Indicate page was found*/
      TS0BW01.TS0BWCSK = " "; /* Reset starting carrier*/
    else
      TS0BW01.TS0BWTSP = TS0BW01.TS0BWTSP + 1; /* Increment page*/
    end
  end


end // end TS0B123

// Check attention identifier
Function TS0B130()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set TS0BM001 initial; /* Clear the map fields*/
    TS0BW01.TS0BWSWR = "N"; /* Set request for data = n*/
    set TS0BW02 empty; /* Clear temporary storage*/

    TS0BW01.TSACARCD = " "; /* Reset screen keys*/
    TS0BW01.TSACARNM = " ";
    TS0BW01.TA5TSQIX = 0; /* Reset page numbers*/
    TS0BW01.TS0BWTSP = 0;

    exit stack; /* Exit to redisplay map*/
  end

  if (TS0BM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      TS0B112(); /* Purge any temporary storage*/
      set TS5REC empty; /* Clear record*/
      COMMAREA.CATOAP = TS0BM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = TS0BM001.CAITEM; /* Application data*/
      XSTSS01(); /* Exit to another application*/

      TS5REC.TSACARCD = TS0BW01.TSACARCD; /* Reset load keys*/

      TS0BW01.TS0BWSWR = "Y"; /* Set request for data switch*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      TS0BM001.XXXPRCNM = "TS0B130"; /* PROCESS NAME*/
    end
    set TS0BM001.CATOAP cursor, modified, bold; /* Highlight*/
    TS0BM001.XXXPRCNM = "TS0B130"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    COMMAREA.CATOAP = "TS0C"; /* set to Carrier application*/
    COMMAREA.CAITEM = TS0BM001.TSACARCD; /* move in item*/
    TS0B112(); /* Purge any temporary storage*/
    XSTSS01(); /* Exit to another application*/
    TS0BM001.XXXPRCNM = "TS0B130"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "TS0BM001"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* Clear item*/
    end

    TS0B112(); /* Purge any temporary storage*/
    XSTSS01(); /* Exit to another application*/
    TS0BM001.XXXPRCNM = "TS0B130"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf13  /* and PF13 was not pressed*/
   && converseVar.eventKey not pf14) /* and PF14 was not pressed*/

    TS0BM001.XXXPRCNM = "TS0B130"; /* Process name*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf13 /* PF13 was pressed*/
   && COMMAREA.CAADDFL == "N")     /* and user add not authorized*/
    TS0BM001.XXXPRCNM = "TS0B130"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf14 /* PF14 was pressed*/
   && COMMAREA.CACHGFL == "N")     /* and user chg not authorized*/
    TS0BM001.XXXPRCNM = "TS0B130"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    exit stack; /* Exit to redisplay map*/
  end

end // end TS0B130

// Reset highlighted fields
Function TS0B140()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TS0BM001.TSACARCD initialAttributes; /* Carrier code*/

  TS0BW01.TS0BWIXM = 1; /* Initialize line index*/

  while (TS0BW01.TS0BWIXM <= 14 /* Until end of lines*/
   && TS0BM001.TS5CRAFT[TS0BWIXM] != " ") /* and location exists*/
    set TS0BM001.TS0BMSEL[TS0BWIXM] normal; /* Reset select flag*/
    TS0BW01.TS0BWIXM = TS0BW01.TS0BWIXM + 1; /* Increment line index*/
  end

  set TS0BM001.CATOAP initialAttributes; /* Commarea TO application*/
  set TS0BM001.CAITEM initialAttributes; /* Commarea application data*/


end // end TS0B140

// Verify the entered data
Function TS0B150()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Determine whether a valid request to scroll was entered.*/
   /* If not a scroll request, verify any changed data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (TS0BM001.CAITEM > " ") /* Application data was entered*/
    set TS0BM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    TS0BM001.XXXPRCNM = "TS0B150"; /* Process name*/
  end

  if (converseVar.eventKey is pf13) /* If add screen requested*/

      /* Return to previous process*/

  else

    if (converseVar.eventKey is pf7 /* Scroll back request*/
     || converseVar.eventKey is pf8) /* or scroll forward request*/
      TS0B151(); /* Verify scroll request*/
    else
      TS0B152(); /* Verify any changed data*/
    end

    if (TS0BW01.TS0BWPSW == "Y") /* Errors were found*/
      exit stack; /* Exit to redisplay map*/
    end
  end


end // end TS0B150

// Verify scroll request
Function TS0B151()
   /* ------------------------------------------------------------*/
   /* Ensure that pages exist to scroll forward or back.*/
   /* Indicate an error for any data that was modified.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && TS0BW01.TS0BWTSP < 2)       /* and no previous pages*/
    TS0BM001.XXXPRCNM = "TS0B151"; /* Process name*/
    converseLib.validationFailed(2); /* No previous page to display*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
  end

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && TS0BW01.TS0BWTSP >= TS0BW01.TA5TSQIX) /* and no more pages*/
    TS0BM001.XXXPRCNM = "TS0B151"; /* Process name*/
    converseLib.validationFailed(3); /* No more pages to display*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
  end

  TS0BW01.TS0BWIXM = 14; /* Initialize line index*/

  while (TS0BW01.TS0BWIXM > 0) /* Until end of lines*/
    if (TS0BM001.TS0BMSEL[TS0BWIXM] != TS0BW02.TS0BMSEL[TS0BWIXM])
      set TS0BM001.TS0BMSEL[TS0BWIXM] cursor, modified, bold; /* Highlight*/
      TS0BM001.XXXPRCNM = "TS0B151"; /* Process name*/
      converseLib.validationFailed(14); /* Modifications not allowed*/
      TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    end
    TS0BW01.TS0BWIXM = TS0BW01.TS0BWIXM - 1; /* Decrement line number*/
  end


end // end TS0B151

// Verify any changed data
Function TS0B152()
   /* ------------------------------------------------------------*/
   /* Return to the previous process if no data was changed.*/
   /* Verify the data that was changed.*/
   /* ------------------------------------------------------------*/

  TS0BW01.TS0BWSFL = "N"; /* Initialize selection flag*/
  TS0BW01.TS0BWIXM = 14; /* Initialize index*/

  while (TS0BW01.TS0BWIXM > 0) /* Until end of lines*/
    if (TS0BM001.TS0BMSEL[TS0BWIXM] != " ") /* If selection is not blank*/
      TS0BW01.TS0BWSFL = "Y"; /* Initialize selection flag*/
      if (TS0BM001.TS0BMSEL[TS0BWIXM] == "S") /* Save the key*/
         /* Next sentence*/
      else
        converseLib.validationFailed(13); /* Error message and highlight*/
        TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
        TS0BM001.XXXPRCNM = "TS0B152"; /* Process name*/
        set TS0BM001.TS0BMSEL[TS0BWIXM] cursor, modified, bold;
        TS0BW01.TS0BWSWR = "N"; /* Set request for data*/
      end
    end
    TS0BW01.TS0BWIXM = TS0BW01.TS0BWIXM - 1; /* Increment line index*/
  end

  if (TS0BM001.TSACARCD == " " /* If select line is blank*/
   && TS0BM001.TS5CRAFT[1] != " ")
    TS0B112(); /* Purge temporary storage*/
    TS0BW01.TS0BWSWR = "N"; /* Set request for data to no*/
    TS0BW01.TSACARCD = " "; /* Reset working storage values*/
    TS0BW01.TSACARNM = " ";
  else
    if (TS0BM001.TSACARCD == " " /* If no data exists*/
     && TS0BM001.TS5CRAFT[1] == " ")
      converseLib.validationFailed(34); /* Set error message 'enter data'*/
      TS0BW01.TS0BWSWR = "N"; /* Set request for data to no*/
      TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
      TS0BM001.XXXPRCNM = "TS0B152"; /* Process name*/
    else
      if (TS0BM001.TSACARCD == TS0BW01.TSACARCD /* If no new data entered*/
       && TS0BW01.TS0BWSFL == "N")             

         /* Continue on*/

        TS0BW01.TS0BFLAG = "N";
        TS0BW01.TS0BNFFL = "N";
        if (TS0BM001.TSACRAFT != " ")
          set TS0BW03 empty;
          TS0BW01.TS0BCRNME = TS0BM001.TSACRAFT;
          TS0B1521();
          TS0BW03.TS0BNAME = TS0BW01.TS0BCRNME;
          TS0BW03.TS0BCARCD = TS0BM001.TSACARCD;
          TS0B1522();
          TS0B1523();
          TS0B1524();
          TS0BW01.TS0BFLAG = "Y";
        end
      else
        if (TS0BM001.TSACARCD == TS0BW01.TSACARCD /* Selection entered*/
         && TS0BM001.TS5CRAFT[1] != " "           
         && TS0BW01.TS0BWSFL == "Y")             

           /* keep going*/

        else
          TSAREC.TSACARCD = TS0BM001.TSACARCD; /* move flds to rec*/
          TS0BW01.TS0BWSWR = "Y";
        end
      end
    end
  end


end // end TS0B152

// Process wildcard Craft name
Function TS0B1521()
   /* ------------------------------------------------------------*/

       /* Process wildcard craft name*/

   /* 1) Process craft name*/
      /* . Check to see if any thing other than spaces exist in*/
        /* the field.  If not then fill the field with '%'s.*/
      /* . If something was entered, then determine if the user*/
        /* entered an '*'.  If they did, then fill the remainder*/
        /* of the field with '%'s for iomod LIKE usage.*/

   /* ------------------------------------------------------------*/

   /* *************************************************************/
    /* Process craft name*/
   /* *************************************************************/
  TS0BW01.TS0BWCFL = "N"; /* Initialize character found to no*/
  TS0BW01.TS0BWIXM = 1; /* Set counter*/
  while (TS0BW01.TS0BWIXM <= 30
   && TS0BW01.TS0BWCFL == "N")
    if (TS0BW01.TS0BWCRN[TS0BWIXM] != " ") /* If something other than ' '*/
      TS0BW01.TS0BWCFL = "Y"; /* Indicate exists*/
    end
    TS0BW01.TS0BWIXM = TS0BW01.TS0BWIXM + 1;
  end

  if (TS0BW01.TS0BWCFL == "Y") /* If the field is not blanks*/
    TS0BW01.TS0BWIXM = 1; /* Set counter*/
    while (TS0BW01.TS0BWIXM <= 30)
      if (TS0BW01.TS0BWCRN[TS0BWIXM] == "*") /* If '*' found*/
        if (TS0BW01.TS0BWIXM == 1)
          TS0BW01.TS0BWIXM = 30; /* End loop*/
          converseLib.validationFailed(413); /* Wild card valid only at the end*/
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
          TS0BM001.XXXPRCNM = "TS0B1521"; /* Process name*/
          exit stack;
        else
          move "%" to TS0BW01.TS0BWCRN[TS0BWIXM] for all; /* Fill remaining*/
          TS0BW01.TS0BWIXM = 30; /* End loop*/
        end
      else
        if (TS0BW01.TS0BWCRN[TS0BWIXM] == " ")
          TS0BW01.TS0BWCRN[TS0BWIXM] = "%"; /* Fill with %*/
        end
      end
      TS0BW01.TS0BWIXM = TS0BW01.TS0BWIXM + 1;
    end
  end


end // end TS0B1521

// Open cursor for craft-nbr
Function TS0B1522()
   /* ------------------------------------------------------------*/
   /* Select the rows corresponding to the craft name   entered*/
   /* in the map from the database*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "IO2330" ("S2", SQLCA, TS0BW03) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
  )                           
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0B1522"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0BM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCRAFT01"; /* Table view name*/
    TA1REC.TA1TBLKE = TS0BW03.TS0BCARCD; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0BM001.XXXPRCNM = "TS0B1522"; /* Process name*/

    return; /* Return to previous process*/

  end


end // end TS0B1522

// Fetch craft-nbr
Function TS0B1523()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/

  call "IO2330" ("N2", SQLCA, TS0BW03) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE == 0)
    TS0BW01.TS0BWCSK = TS0BW03.TS0BCRAFT;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      TS0BW01.TS0BNFFL = "Y";
    else
      if (SQLCA.VAGen_SQLCODE != 0 /* unexpected return code*/
       && SQLCA.VAGen_SQLCODE != 100)
        if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
          converseLib.validationFailed(11); /* Indicate not available*/
          TA1REC.TA1FUNC = "POST"; /* Termination function*/
        else
          converseLib.validationFailed(10); /* Indicate system error*/
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
        end

        TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/

        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
        TA1REC.TA1PGMNM = "TS0B1523"; /* Process name*/
        TA1REC.TA1LOC = "FETCH FIRST SELECTED TBLE ROW";
        TA1REC.TA1MAP = "TS0BM001"; /* Map name*/
        TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
        TA1REC.TA1TBLVU = "VCRAFT01"; /* Table view name*/

        call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

        TS0BM001.XXXPRCNM = "TS0B1523"; /* Process name*/

      end
    end
  end



end // end TS0B1523

// Close cursor on craft table
Function TS0B1524()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  call "IO2330" ("C2", SQLCA, TS0BW03) {isNoRefresh = yes, isExternal = yes}; /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "TS0B1524"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0BM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCRAFT01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0BM001.XXXPRCNM = "TS0B1524"; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end


end // end TS0B1524

// Process valid input request
Function TS0B160()
   /* ------------------------------------------------------------*/
   /* If a scroll request, adjust temporary storage page number.*/
   /* Update any changed data.*/
   /* ------------------------------------------------------------*/

  TS0BW01.TS0BWCSK = " "; /* Initialize change save key*/
  TS0BW01.TS0BWIFL = "N"; /* Set inquiry flag*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/
    TS0BW01.TS0BWTSP = TS0BW01.TS0BWTSP - 1; /* Decrement page number*/
  else
    if (converseVar.eventKey is pf8) /* Scroll forward requested*/
      TS0BW01.TS0BWTSP = TS0BW01.TS0BWTSP + 1; /* Increment page number*/
    else
      if (converseVar.eventKey is pf13 /* PF13 was pressed*/
       && TS0BM001.TSACARCD != " ")    /* Carrier code is entered*/
        set TSAREC empty; /* Empty select record*/
        TSAREC.TSACARCD = TS0BM001.TSACARCD; /* Move carrier code*/
        TS0B111(); /* Select code to see if exists*/
        if (SQLCA.VAGen_SQLCODE == 100) /* If row not found*/
          converseLib.validationFailed(39); /* No data found to display*/
          TS0BW01.TSACARNM = " "; /* Clear carrier name field*/
          TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
          TS0BM001.XXXPRCNM = "TS0B110"; /* Process name*/
        else
          if (SQLCA.VAGen_SQLCODE == 0) /* Carrier was not found*/
            TS0BM001.TSACARNM = TSAREC.TSACARNM; /* Save name*/
            TS0BW01.TS0BWMAP = "2"; /* Select Map #2*/
            TS0BW01.TS0BWFSW = "A"; /* Select add function*/
            converseLib.validationFailed(0); /* Clear error message field*/
          end
        end
      else
        if (converseVar.eventKey is pf13 /* PF13 was pressed*/
         && TS0BM001.TSACARCD == " ")    /* Carrier code is entered*/
          converseLib.validationFailed(34); /* Data must be entered*/
        else
          if (converseVar.eventKey is pf14 /* PF14 was pressed*/
           && TS0BW01.TS0BWSFL == "Y")     /* and selection was made*/
            TS0BW01.TS0BWMAP = "2"; /* Select Map #2*/
            TS0BW01.TS0BWFSW = "C"; /* Select change function*/
            converseLib.validationFailed(0); /* Clear error message field*/
          else
            if (converseVar.eventKey is pf14 /* PF14 was pressed*/
             && TS0BW01.TS0BWSFL == "N")     /* and selection was not made*/
              converseLib.validationFailed(53); /* error message*/
              TS0BW01.TS0BWPSW = "Y"; /* error message*/
            else
              if (converseVar.eventKey is enter         /* enter was pressed*/
               && TS0BW01.TS0BWSFL == "Y"               /* and selection was made*/
               && TS0BM001.TSACARCD == TS0BW01.TSACARCD /* cd not chged*/
               && TS0BM001.TSACARCD != " ")             /* Carrier code not ' '*/
                TS0BW01.TS0BWMAP = "2"; /* Select Map #2*/
                TS0BW01.TS0BWFSW = "C"; /* Select change function*/
                TS0BW01.TS0BWIFL = "Y"; /* Set inquiry flag*/
                converseLib.validationFailed(0); /* Clear error message field*/
              else
                if (converseVar.eventKey is enter /* enter was pressed*/
                 && TS0BW01.TS0BWSFL == "N"       /* and selection was made*/
                 && TS0BM001.TSACARCD == TS0BW01.TSACARCD
                 /* cd not chged*/
                 && TS0BM001.TSACARCD != " "      /* Carrier code not ' '*/
                 && TS0BW01.TS0BFLAG == "N")     
                  converseLib.validationFailed(34); /* error message*/
                  TS0BW01.TS0BWPSW = "Y"; /* error message*/
                  set TS0BM001.TS0BMSEL[1] cursor;
                else
                  if (converseVar.eventKey is enter /* enter was pressed*/
                   && TS0BW01.TS0BWSFL == "N"       /* and selection was made*/
                   && TS0BM001.TSACARCD == TS0BW01.TSACARCD
                   /* cd not chged*/
                   && TS0BM001.TSACARCD != " "      /* Carrier code not ' '*/
                   && TS0BW01.TS0BFLAG == "Y")     
                    if (TS0BW01.TS0BNFFL == "Y")
                      TS0BW01.TS0BWPSW = "Y";
                      converseLib.validationFailed(038);
                      set TS0BM001.TS0BMSEL[1] cursor;
                    end
                    TS0BW01.TS0BNFFL = "N";
                    TS0BW01.TS0BWCSK = TS0BW03.TS0BCRAFT;
                  else
                    TS0BW01.TSACARCD = TS0BM001.TSACARCD; /* save code*/
                  end
                end
              end
            end
          end
        end
      end
    end
  end


end // end TS0B160

// Location maintenance add map
Function TS0B200()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TS0B210(); /* Format and display the map*/

  TS0B220(); /* Check attention identifier*/

  TS0B230(); /* Reset fields to normal intensity*/

  TS0B240(); /* Verify the entered data*/

  TS0B250(); /* Process valid input request*/


end // end TS0B200

// Format and display the map
Function TS0B210()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (TS0BW01.TS0BWPSW == "N") /* No errors*/
    set TS0BM002 initial; /* Clear map output area*/
    TS0BM002.TS0BMMSG = "PLEASE ENTER NEW CRAFT";
    TS0BM002.TS0BMFUN = " ADD  "; /* Set ADD title to map*/
    TS0BM002.XXXSTAT = "A"; /* default status to active*/
    TS0BM002.TS0BMSTD = "ACTIVE"; /* status description*/
    TS0BM002.TS5LEASE = "N"; /* default charter to no*/
  end

  TS0BM002.TSACARCD = TS0BM001.TSACARCD; /* Move values to map*/
  TS0BM002.TSACARNM = TS0BM001.TSACARNM;
  set TS0BM002.XXXSTAT protect; /* protect status*/
  set TS0BM002.TS5LEASE protect; /* protect charter*/

  TS0BM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  TS0BM002.ZZZSDT = VGVar.currentShortGregorianDate; /* Creation date*/
  TS0BM002.ZZZCHGDT = VGVar.currentShortGregorianDate; /* Modification date (Init.)*/

  if (TS0BW01.TS0BWPSW == "Y") /* error message to display*/
    TS0BM002.TS0BMMSG = " "; /* clear message field*/
  /* SET TS0BM002 ALARM;             /* Indicate sound alarm*/
  end

  if (TS0BW01.TS0BWMFL == "Y") /* If add was successful*/
    converseLib.validationFailed(44); /* display a message*/
    TS0BM002.TS0BMMSG = " "; /* clear message field*/
    TS0BM002.XXXPRCNM = "TS0B210"; /* Process name*/
    TS0BW01.TS0BWMFL = "N"; /* Reset message flag*/
  end

  converse TS0BM002 ;

  TS0BW01.TS0BWPSW = "N"; /* Reset problem switch*/

  TS0B211(); /* Check for ? inquiry by user*/


end // end TS0B210

// Check for ? inquiry by user
Function TS0B211()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (TS0BM002.YMTCD == "?") /* if any ? entered*/

    if (TS0BM002.YMTCD == "?") /* if ? in mode code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                MODE CODE "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYMT01(); /* perform mode code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        TS0BM002.YMTCD = YMTTBL.YMTCD[XX0XWPIX]; /* move code*/
        TS0BM002.YMTDESC = YMTTBL.YMTDESC[XX0XWPIX]; /* move name*/
      else
        TS0BM002.YMTCD = " "; /* clear fields*/
        TS0BM002.YMTDESC = " ";
      end
    end

    converseLib.clearScreen();
     /* restore the original map*/

    TS0BW01.TS0BWPSW = "Y"; /* bypass exit by indicating fake error*/

  end


end // end TS0B211

// Check attention identifier
Function TS0B220()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set TS0BM002 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (TS0BM002.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = TS0BM002.CATOAP; /* TO application*/
      COMMAREA.CAITEM = TS0BM002.CAITEM; /* Application data*/
      XSTSS01(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    set TS0BM002.CATOAP cursor, modified, bold; /* Highlight*/
    TS0BM002.XXXPRCNM = "TS0B220"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    TS0BW01.TS0BWMAP = "1"; /* Move to map 1*/
    TS0BW01.TS0BWMFL = "N"; /* Reset message flag*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "TS0BM002"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    TS0B112(); /* Purge temporary storage*/
    XSTSS01(); /* Exit to another application*/
    TS0BM002.XXXPRCNM = "TS0B220"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    TS0BM002.XXXPRCNM = "TS0B220"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end


end // end TS0B220

// Reset highlighted fields
Function TS0B230()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TS0BM002.CATOAP initialAttributes; /* Commarea TO application*/
  set TS0BM002.CAITEM initialAttributes; /* Commarea application data*/
  set TS0BM002.TS5CRAFT initialAttributes; /* Commarea application data*/
  set TS0BM002.TS5NAME initialAttributes; /* Commarea application data*/
  set TS0BM002.TS5SHNM initialAttributes; /* Commarea application data*/
  set TS0BM002.XXXSTAT initialAttributes; /* Commarea application data*/
  set TS0BM002.YMTCD initialAttributes; /* Commarea application data*/
  set TS0BM002.TS5LEASE initialAttributes; /* Commarea application data*/


end // end TS0B230

// Verify the entered data
Function TS0B240()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  TS0BW01.TS0BWDEF = "N"; /* Initialize data entered flag*/

  if (TS0BM002.CAITEM > " ") /* Application data was entered*/
    set TS0BM002.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    TS0BM002.XXXPRCNM = "TS0B240"; /* Process name*/
  end

  if (converseVar.eventKey is enter /* If ENTER was pressed*/
   && TS0BM002.TS5CRAFT == " "      /* and no data was entered*/
   && TS0BM002.TS5NAME == " "       
   && TS0BM002.TS5SHNM == " "       
   && TS0BM002.XXXSTAT == " "       
   && TS0BM002.YMTCD == " "         
   && TS0BM002.TS5LEASE == " ")    
    exit stack; /* Exit to redisplay map*/
  else
    TS0B241(); /* Validate input data*/
  end


end // end TS0B240

// Validate any input data
Function TS0B241()
   /* ------------------------------------------------------------*/
   /* Validate any input data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  TS0BW01.TS0BWDEF = "Y"; /* Data has been entered*/

  if (TS0BM002.TS5LEASE != "Y" /* If invalid charter status*/
   && TS0BM002.TS5LEASE != "N")
    converseLib.validationFailed(46); /* error message*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    TS0BM002.XXXPRCNM = "TS0B241"; /* Process name*/
    TS0BM002.TS0BMMSG = "PLEASE CORRECT FIELDS IN ERROR";
    set TS0BM002.TS5LEASE cursor, modified, bold; /* highlight field*/
  end

  if (TS0BM002.YMTCD == " ") /* If mode is entered*/
    converseLib.validationFailed(42); /* Display error message*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    TS0BM002.XXXPRCNM = "TS0B241"; /* Process name*/
    TS0BM002.TS0BMMSG = "PLEASE CORRECT FIELDS IN ERROR";
    TS0BM002.YMTDESC = " "; /* Clear description*/
    set TS0BM002.YMTCD cursor, modified, bold; /* highlight field*/
  else
    sysVar.arrayIndex = 0; /* Initialize ezetst*/
    if (TS0BM002.YMTCD in YMTTBL.YMTCD) /* Check valid mode*/
    end

    if (sysVar.arrayIndex == 0) /* Not in table*/
      converseLib.validationFailed(42); /* Display error message*/
      TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
      TS0BM002.XXXPRCNM = "TS0B241"; /* Process name*/
      TS0BM002.TS0BMMSG = "PLEASE CORRECT FIELDS IN ERROR";
      TS0BM002.YMTDESC = " "; /* Clear description*/
      set TS0BM002.YMTCD cursor, modified, bold; /* highlight field*/
    else /* Move description to table*/
      TS0BM002.YMTDESC = YMTTBL.YMTDESC[sysVar.arrayIndex];
    end
  end

  if (TS0BM002.XXXSTAT == "A") /* If status is active*/
    TS0BM002.TS0BMSTD = "ACTIVE"; /* Move active literal*/
  else

    if (TS0BM002.XXXSTAT == "I") /* If status is inactive*/
      TS0BM002.TS0BMSTD = "INACTIVE"; /* Move inactive literal*/
    else
      set TS0BM002.XXXSTAT cursor, modified, bold; /* highlight field*/
      converseLib.validationFailed(36); /* Status is missing or invalid*/
      TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
      TS0BM002.XXXPRCNM = "TS0B241"; /* Process name*/
      TS0BM002.TS0BMMSG = "PLEASE CORRECT FIELDS IN ERROR";
      TS0BM002.TS0BMSTD = " "; /* Reset desc field*/
    end

  end

  if (TS0BM002.TS5SHNM == " ") /* If short name is missing*/
    set TS0BM002.TS5SHNM cursor, modified, bold; /* highlight field*/
    converseLib.validationFailed(47); /* error message*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    TS0BM002.XXXPRCNM = "TS0B241"; /* Process name*/
    TS0BM002.TS0BMMSG = "PLEASE CORRECT FIELDS IN ERROR";
  end

  if (TS0BM002.TS5NAME == " ") /* If name is missing*/
    set TS0BM002.TS5NAME cursor, modified, bold; /* highlight field*/
    converseLib.validationFailed(38); /* error message*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    TS0BM002.XXXPRCNM = "TS0B241"; /* Process name*/
    TS0BM002.TS0BMMSG = "PLEASE CORRECT FIELDS IN ERROR";
  end

  if (TS0BM002.TS5CRAFT == " ") /* If craft code is missing*/
    set TS0BM002.TS5CRAFT cursor, modified, bold; /* highlight field*/
    converseLib.validationFailed(48); /* error message*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    TS0BM002.XXXPRCNM = "TS0B241"; /* Process name*/
    TS0BM002.TS0BMMSG = "PLEASE CORRECT FIELDS IN ERROR";
  end


end // end TS0B241

// Process valid input request
Function TS0B250()
   /* ------------------------------------------------------------*/
   /* Verify that no table row exists for the location.*/
   /* If found then display message that this row exists in*/
     /* either active or inactive status.*/
   /* If not found then add the row.*/
   /* ------------------------------------------------------------*/

  set TS5REC empty; /* clear record*/

  TS5REC.TSACARCD = TS0BM002.TSACARCD; /* carrier code*/
  TS5REC.TS5CRAFT = TS0BM002.TS5CRAFT; /* craft code*/

  if (converseVar.eventKey is enter /* Enter was pressed*/
   && TS0BW01.TS0BWDEF == "Y"       /* and data was entered*/
   && converseVar.validationMsgNum == 0) /* and no errors*/
    TS0B251(); /* Select  table row*/
    if (SQLCA.VAGen_SQLCODE != 100) /* If row exists*/
      if (TS5REC.XXXSTAT == "A") /* Row exists in active status*/
        converseLib.validationFailed(32);
        TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
        TS0BM002.XXXPRCNM = "TS0B250"; /* Process name*/
        set TS0BM002.TS5CRAFT cursor, modified, bold; /* Set cursor*/
      else
        if (TS5REC.XXXSTAT == "I") /* Row exists in inactive status*/
          converseLib.validationFailed(33);
          TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
          TS0BM002.XXXPRCNM = "TS0B250"; /* Process name*/
          set TS0BM002.TS5CRAFT cursor, modified, bold; /* Set cursor*/
        end
      end
    end

    if (TS0BW01.TS0BWPSW == "N") /* No errors exist*/
      TS0B252(); /* Add the new table row*/
      TS0BW01.TS0BWCSK = TS0BM002.TS5CRAFT; /* Save csk key*/
      TS0BW01.TS0BWMFL = "Y"; /* Set message flag to yes*/
    end
  end

  if (TS0BW01.TS0BWPSW == "N") /* No errors exist*/
    set TS5REC empty; /* Clear record*/
    TS0BW01.TSACARCD = " "; /* Reset screen keys*/
    TSAREC.TSACARCD = TS0BM002.TSACARCD; /* Set screen load keys*/
    TS0BW01.TS0BWSWR = "Y"; /* Set request for data switch*/
    set TS0BM002 initial; /* Clear map*/
  end


end // end TS0B250

// Select craft table row
Function TS0B251()
   /* ------------------------------------------------------------*/
   /* This module select a table row from the location table.*/
   /* It will return a system error if an unexpected return*/
     /* code is received.*/
   /* ------------------------------------------------------------*/

  call "IO2330" ("S ", SQLCA, TS5REC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   && SQLCA.VAGen_SQLCODE != 100) /* handled in previous process*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0B251"; /* Process name*/
    TA1REC.TA1LOC = "SELECT TABLE ROW";
    TA1REC.TA1MAP = "TS0BM002"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCRAFT01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0BW01.TS0BWPSW = "Y"; /* Indicate Problem*/
    TS0BM001.XXXPRCNM = "TS0B251"; /* Process name*/
  end


end // end TS0B251

// Add craft table row
Function TS0B252()
   /* ------------------------------------------------------------*/
   /* This module adds a location table row.*/
   /* It will return and document system errors if unexpected*/
     /* return codes are found.*/
   /* ------------------------------------------------------------*/

  TS5REC.TSACARCD = TS0BM002.TSACARCD; /* Carrier code*/
  TS5REC.TS5CRAFT = TS0BM002.TS5CRAFT; /* Craft code*/
  TS5REC.TS5NAME = TS0BM002.TS5NAME; /* Craft name*/
  TS5REC.TS5SHNM = TS0BM002.TS5SHNM; /* Craftshort name*/
  TS5REC.TS5LEASE = TS0BM002.TS5LEASE; /* Lease*/
  TS5REC.YMTCD = TS0BM002.YMTCD; /* Mode code*/
  TS5REC.XXXSTAT = TS0BM002.XXXSTAT; /* Status*/

   /* ---------------y2k out begin ---------------*/
   /* MOVE EZEDTE TO TS0BW01.TS0BWYMD;  /* Working change date*/
   /* MOVE TS0BW01.TS0BWDTE TO TS5REC.ZZZCHGDT;*/
   /* MOVE TS0BW01.TS0BWDTE TO TS5REC.ZZZSDT; /* Set up date*/
   /* XX0XS01;                          /* obtain current time*/
   /* MOVE XX0XW01.XX0XWTIM TO TS5REC.ZZZCHGTM;*/
   /* ---------------y2k out end -----------------*/

   /* ---------------y2k in begin ----------------*/
  XX0XS01();
  TS5REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  TS5REC.ZZZSDT = XX0XW01.XX0XWDAT;
  TS5REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
   /* ---------------y2k in end ------------------*/

  call "IO2330" ("A ", SQLCA, TS5REC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0B252"; /* Process name*/
    TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
    TA1REC.TA1MAP = "TS0BM002"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCRAFT01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0BM001.XXXPRCNM = "TS0B252"; /* Process name*/
  end


end // end TS0B252

// Location Main. Delete Map
Function TS0B300()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TS0B310(); /* Obtain the data to display*/

  TS0B320(); /* Format and display the map*/

  TS0B330(); /* Check attention identifier*/

  TS0B340(); /* Reset Highlighted fields*/

  TS0B350(); /* Verify the entered data*/

  TS0B360(); /* Process valid input request*/


end // end TS0B300

// Obtain the data to display
Function TS0B310()
   /* ------------------------------------------------------------*/
   /* Obtain data to be displayed on delete map from selected*/
     /* row on location inquiry map.*/
   /* ------------------------------------------------------------*/

  if (TS0BW01.TS0BWPSW == "N" /* No errors*/
   || TS0BW01.TS0BWURF == "Y") /* or update reload flag is yes*/
    TS5REC.TSACARCD = TS0BM001.TSACARCD; /* Carrier code*/
    TS5REC.TS5CRAFT = TS0BM001.TS5CRAFT[TS0BWIXM]; /* Craft code*/
    TS0BW01.TS0BWCSK = TS0BM001.TS5CRAFT[TS0BWIXM]; /* Save key*/
    TS0B251(); /* Select data for map*/
  end


end // end TS0B310

// Format and display the map
Function TS0B320()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (TS0BW01.TS0BWPSW == "N") /* No error*/
    set TS0BM002 initial; /* Clear map output area*/
    set TS0BM002.TS5NAME cursor; /* set cursor*/
    TS0BM002.TS0BMFUN = "CHANGE"; /* Move change literal to map*/
    TS0BM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    TS0BM002.TSACARCD = TS5REC.TSACARCD; /* Move selected fields*/
    TS0BM002.TSACARNM = TS0BM001.TSACARNM; /* to map*/
    TS0BM002.TS5CRAFT = TS5REC.TS5CRAFT;
    TS0BM002.TS5NAME = TS5REC.TS5NAME;
    TS0BM002.TS5SHNM = TS5REC.TS5SHNM;

    TS0BM002.XXXSTAT = TS5REC.XXXSTAT;
    if (TS5REC.XXXSTAT == "A") /* Active-inactive literals*/
      TS0BM002.TS0BMSTD = "ACTIVE";
    else
      TS0BM002.TS0BMSTD = "INACTIVE";
    end

    TS0BM002.YMTCD = TS5REC.YMTCD;
    if (TS5REC.YMTCD in YMTTBL.YMTCD)
      TS0BM002.YMTDESC = YMTTBL.YMTDESC[sysVar.arrayIndex];
    end
    TS0BM002.TS5LEASE = TS5REC.TS5LEASE;
    TS0BM002.ZZZSDT = TS5REC.ZZZSDT;
    TS0BM002.ZZZCHGDT = TS5REC.ZZZCHGDT;

    TS0BM002.TS0BMMSG = "PLEASE ENTER YOUR CHANGES"; /* message*/

  end

  if (COMMAREA.CACHGFL == "N" /* if only inquire capabilities*/
   || TS0BW01.TS0BWIFL == "Y") /* or inquiry flag is set*/
    TS0BM002.TS0BMFUN = "INQUIRE"; /* Move inquire literal to map*/
    TS0BM002.TS0BMMSG = " "; /* clear message*/
    set TS0BM002.TS5CRAFT protect; /* set all fields non-modifiable*/
    set TS0BM002.TS5NAME protect;
    set TS0BM002.TS5SHNM protect;
    set TS0BM002.YMTCD protect;
    set TS0BM002.XXXSTAT protect;
    set TS0BM002.TS5LEASE protect;
    set TS0BM002.CATOAP cursor;
  end

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    TS0BM002.TS0BMMSG = " "; /* clear message*/
    set TS0BM002 alarm;
  end

  set TS0BM002.TS5CRAFT protect; /* set craft field protected*/

  converse TS0BM002 ;

  TS0BW01.TS0BWPSW = "N"; /* Initialize problem switch*/

  TS0B211(); /* Check for ? inquiry by user*/


end // end TS0B320

// Check attention identifier
Function TS0B330()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set TS0BM002 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (TS0BM002.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = TS0BM002.CATOAP; /* TO application*/
      COMMAREA.CAITEM = TS0BM002.CAITEM; /* Application data*/
      XSTSS01(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    set TS0BM002.CATOAP cursor, modified, bold; /* Highlight*/
    TS0BM002.XXXPRCNM = "TS0B330"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    TS0BW01.TS0BWMAP = "1"; /* Move to map 1*/
    TS0BW01.TS0BWMFL = "N"; /* Reset message flag*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "TS0BM002"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    TS0B112(); /* Purge temporary storage*/
    XSTSS01(); /* Exit to another application*/
    TS0BM002.XXXPRCNM = "TS0B330"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    TS0BM002.XXXPRCNM = "TS0B330"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end



end // end TS0B330

// Reset highlighted fields
Function TS0B340()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TS0BM002.CATOAP initialAttributes; /* Commarea TO application*/
  set TS0BM002.CAITEM initialAttributes; /* Commarea application data*/
  set TS0BM002.TS5CRAFT initialAttributes; /* Commarea application data*/
  set TS0BM002.TS5NAME initialAttributes; /* Commarea application data*/
  set TS0BM002.TS5SHNM initialAttributes; /* Commarea application data*/
  set TS0BM002.XXXSTAT initialAttributes; /* Commarea application data*/
  set TS0BM002.YMTCD initialAttributes; /* Commarea application data*/
  set TS0BM002.TS5LEASE initialAttributes; /* Commarea application data*/


end // end TS0B340

// Verify the entered data
Function TS0B350()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  TS0BW01.TS0BWDEF = "N"; /* Initialize data entered flag*/

  if (TS0BM002.CAITEM > " ") /* Application data was entered*/
    set TS0BM002.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    TS0BM002.XXXPRCNM = "TS0B240"; /* Process name*/
  end

  if (converseVar.eventKey is enter        /* If ENTER was pressed*/
   && TS0BM002.TS5CRAFT == TS5REC.TS5CRAFT /* and no data changed*/
   && TS0BM002.TS5NAME == TS5REC.TS5NAME   
   && TS0BM002.TS5SHNM == TS5REC.TS5SHNM   
   && TS0BM002.XXXSTAT == TS5REC.XXXSTAT   
   && TS0BM002.YMTCD == TS5REC.YMTCD       
   && TS0BM002.TS5LEASE == TS5REC.TS5LEASE)

     /* Go on to next selection*/

  else
    TS0B351(); /* Validate input data*/
  end



end // end TS0B350

// Validate any input data
Function TS0B351()
   /* ------------------------------------------------------------*/
   /* Validate any input data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  TS0BW01.TS0BWDEF = "Y"; /* Data has been entered*/

  if (TS0BM002.TS5LEASE != "Y" /* If invalid charter status*/
   && TS0BM002.TS5LEASE != "N")
    converseLib.validationFailed(46); /* error message*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    TS0BM002.XXXPRCNM = "TS0B351"; /* Process name*/
    TS0BM002.TS0BMMSG = "PLEASE CORRECT FIELDS IN ERROR";
    set TS0BM002.TS5LEASE cursor, modified, bold; /* highlight field*/
  end

  if (TS0BM002.YMTCD == " ") /* If mode is entered*/
    converseLib.validationFailed(42); /* Display error message*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    TS0BM002.XXXPRCNM = "TS0B351"; /* Process name*/
    TS0BM002.TS0BMMSG = "PLEASE CORRECT FIELDS IN ERROR";
    TS0BM002.YMTDESC = " "; /* Clear description field*/
    set TS0BM002.YMTCD cursor, modified, bold; /* highlight field*/
  else
    sysVar.arrayIndex = 0; /* Initialize ezetst*/
    if (TS0BM002.YMTCD in YMTTBL.YMTCD) /* Check valid mode*/
    end

    if (sysVar.arrayIndex == 0) /* Not in table*/
      converseLib.validationFailed(42); /* Display error message*/
      TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
      TS0BM002.XXXPRCNM = "TS0B351"; /* Process name*/
      TS0BM002.TS0BMMSG = "PLEASE CORRECT FIELDS IN ERROR";
      TS0BM002.YMTDESC = " "; /* Clear description field*/
      set TS0BM002.YMTCD cursor, modified, bold; /* highlight field*/
    else /* Move description to table*/
      TS0BM002.YMTDESC = YMTTBL.YMTDESC[sysVar.arrayIndex];
    end
  end

  if (TS0BM002.XXXSTAT == "A") /* If status is active*/
    TS0BM002.TS0BMSTD = "ACTIVE"; /* Move active literal*/
  else

    if (TS0BM002.XXXSTAT == "I") /* If status is inactive*/
      TS0BM002.TS0BMSTD = "INACTIVE"; /* Move inactive literal*/
    else
      set TS0BM002.XXXSTAT cursor, modified, bold; /* highlight field*/
      converseLib.validationFailed(36); /* Status is missing or invalid*/
      TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
      TS0BM002.XXXPRCNM = "TS0B351"; /* Process name*/
      TS0BM002.TS0BMMSG = "PLEASE CORRECT FIELDS IN ERROR";
      TS0BM002.TS0BMSTD = " "; /* Reset desc field*/
    end

  end

  if (TS0BM002.TS5SHNM == " ") /* If short name is missing*/
    set TS0BM002.TS5SHNM cursor, modified, bold; /* highlight field*/
    converseLib.validationFailed(47); /* error message*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    TS0BM002.XXXPRCNM = "TS0B351"; /* Process name*/
    TS0BM002.TS0BMMSG = "PLEASE CORRECT FIELDS IN ERROR";
  end

  if (TS0BM002.TS5NAME == " ") /* If name is missing*/
    set TS0BM002.TS5NAME cursor, modified, bold; /* highlight field*/
    converseLib.validationFailed(38); /* error message*/
    TS0BW01.TS0BWPSW = "Y"; /* Indicate problem*/
    TS0BM002.XXXPRCNM = "TS0B351"; /* Process name*/
    TS0BM002.TS0BMMSG = "PLEASE CORRECT FIELDS IN ERROR";
  end


end // end TS0B351

// Process valid input request
Function TS0B360()
   /* ------------------------------------------------------------*/
   /* Update any changed data.*/
   /* ------------------------------------------------------------*/

  if (TS0BW01.TS0BWPSW == "Y") /* errors occurred*/
    exit stack;
  else
    if (converseVar.eventKey is enter /* ENTER was pressed*/
     && TS0BW01.TS0BWPSW == "N"       /* and no errors*/
     && TS0BW01.TS0BWDEF == "Y")      /* and data was entered*/

      TS5REC.TSACARCD = TS0BM002.TSACARCD;
      TS5REC.TS5CRAFT = TS0BM002.TS5CRAFT;
      TS5REC.TS5NAME = TS0BM002.TS5NAME;
      TS5REC.TS5SHNM = TS0BM002.TS5SHNM;
      TS5REC.TS5LEASE = TS0BM002.TS5LEASE;
      TS5REC.YMTCD = TS0BM002.YMTCD;
      TS5REC.XXXSTAT = TS0BM002.XXXSTAT;
      TS5REC.YMTCD = TS0BM002.YMTCD;

   /* --------------  y2k out begin ---------------*/
     /* MOVE EZETIM TO TS0BW01.TS0BWTM1;*/
     /* MOVE TS0BW01.TS0BWHR1 TO TS0BW01.TS0BWHR3;*/
     /* MOVE TS0BW01.TS0BWMN1 TO TS0BW01.TS0BWMN3;*/
     /* MOVE TS0BW01.TS0BWTM3 TO TS5REC.ZZZCHGTM;*/
     /* MOVE EZEDTE TO TS0BW01.TS0BWYMD;     /* Change the date*/
     /* MOVE TS0BW01.TS0BWDTE TO TS5REC.ZZZCHGDT;*/
   /* --------------  y2k out end -----------------*/

   /* --------------  y2k in  begin ---------------*/
      XX0XS01();
      TS5REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
      TS5REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
   /* --------------  y2k in end ------------------*/

      TS0B361(); /* Update table*/

      TS0BW01.TS0BWURF = "N"; /* Initialize upd reload flag*/
      if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.commit();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
         /* commit the update*/
        TS0BW01.TS0BWCSK = TS0BM002.TS5CRAFT; /* Set change save key*/
        TS0BW01.TS0BWMFL = "Y"; /* Set message flag to yes*/
        TS0BW01.TS0BWSWR = "Y"; /* Set request for data switch*/
        TS0BM001.TS0BMSEL[TS0BWIXM] = " "; /* Set blank to select*/
        set TS0BM002 initial; /* Clear map area*/
      else
        if (SQLCA.VAGen_SQLCODE == 100) /* row was not found*/
          converseLib.validationFailed(12); /* update error occured*/
          TS0BW01.TS0BWURF = "Y"; /* Set update reload flag*/
          TS0BW01.TS0BWSWR = "Y"; /* Set request for data switch*/
          exit stack; /* exit to redisplay map*/
        end
      end

      if (TS0BW01.TS0BWPSW == "N") /* IF no errors occured*/
        TS5REC.TSACARCD = TS0BW01.TSACARCD; /* Move map fields to*/
      else
        exit stack; /* Exit to redisplay map*/
      end
    end
  end


end // end TS0B360

// Updated selected row
Function TS0B361()
   /* ------------------------------------------------------------*/
   /* Update the location row to the inactive status.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  call "IO2330" ("U ", SQLCA, TS5REC) {isNoRefresh = yes, isExternal = yes}; /* Update row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    TS0BW01.TS0BWSWC = "Y"; /* Indicate end of file*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TS0BW01.TS0BWPSW = "Y"; /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TS0BW01.TS0BWPSW = "Y"; /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0B361"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      TA1REC.TA1MAP = "TS0BM002"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCRAFT01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0BM001.XXXPRCNM = "TS0B361"; /* Process name*/

    end
  end


end // end TS0B361

//*** RECORD=TS0BW01 ****
// Working storage for TS0O - Location Inquiry/Maintenance
// ***********************
Record TS0BW01 type basicRecord
  10 TS0BWIXM TS0BWIXM ; 
  10 TS0BWSIX TS0BWSIX ; 
  10 TS0BWSPG TS0BWSPG ; 
  10 TS0BWSWC TS0BWSWC ; 
  10 TS0BWPSW TS0BWPSW ; 
  10 TS0BWSWR TS0BWSWR ; 
  10 TS0BWTSP TS0BWTSP ; 
  10 TS0BWMAP TS0BWMAP ; 
  10 TS0BWFSW TS0BWFSW ; 
  10 TS0BWCSK TS0BWCSK ; 
  10 TSACARCD TSACARCD ; 
  10 TSACARNM TSACARNM ; 
  10 TS0BWDFL TS0BWDFL ; 
  10 TS0BWSFL TS0BWSFL ; 
  10 TS0BWMFL TS0BWMFL ; 
  10 TS0BWURF TS0BWURF ; 
  10 TS0BWDEF TS0BWDEF ; 
  10 TS0BWIFL TS0BWIFL ; 
  10 TS0BWDTE TS0BWDTE ; 
    15 TS0BWCEN TS0BWCEN ; 
    15 TS0BWYMD TS0BWYMD ; 
  10 TS0BWTM1 TS0BWTM1 ; 
    15 TS0BWHR1 TS0BWHR1 ; 
    15 TS0BWC1 TS0BWC1 ; 
    15 TS0BWMN1 TS0BWMN1 ; 
    15 TS0BWC2 TS0BWC2 ; 
    15 TS0BWSEC TS0BWSEC ; 
  10 TS0BWTM2 TS0BWTM2 ; 
    15 TS0BWHR2 TS0BWHR2 ; 
    15 TS0BWCOL TS0BWCOL ; 
    15 TS0BWMN2 TS0BWMN2 ; 
  10 TS0BWTM3 TS0BWTM3 ; 
    15 TS0BWHR3 TS0BWHR3 ; 
    15 TS0BWMN3 TS0BWMN3 ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 TS0BWCFL TS0BWCFL ; 
  10 TS0BCRNME TS0BCRNME ; 
    15 TS0BWCRN TS0BWCRN [30] ; 
  10 TS0BFLAG TS0BFLAG ; 
  10 TS0BNFFL TS0BNFFL ; 
end // end TS0BW01

//*** RECORD=TS0BW02 ****
// Temporary storage record for TS0O - Location Inquiry/Maint.
// ***********************
Record TS0BW02 type basicRecord
  10 TS0BWLEN TS0BWLEN ; 
  10 TS0BWLIN TS0BWLIN [14] ; 
    15 TS0BMSEL TS0BMSEL ; 
    15 TS5CRAFT TS5CRAFT ; 
    15 TS5NAME TS5NAME ; 
    15 TS5SHNM TS5SHNM ; 
    15 YMTCD YMTCD ; 
    15 TS5LEASE TS5LEASE ; 
end // end TS0BW02

//*** RECORD=TS0BW03 ****
// ************ TRANSPORTATION CARRIER CRAFT TABLE ************
// 
// DB2 TABLE VIEW:      DTRANS.VCRAFT01
// 
// COPYLIB MEMBER:      DCL00420
// 
// I/O MODULE:          IO2330
// 
// KEY TO DB2 TABLE:    TSACARCD
//                      TS5CRAFT
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 11/20/87   SPOPA    New record.
// ***********************
Record TS0BW03 type basicRecord
  5 TS0BW03-GROUP TS0BW03-GROUP ; 
    10 TS0BCARCD TS0BCARCD ; 
    10 TS0BCRAFT TS0BCRAFT ; 
    10 TS0BNAME TS0BNAME ; 
    10 TS0BSHNM TS0BSHNM ; 
    10 TS0BLEASE TS0BLEASE ; 
    10 YMTCD YMTCD ; 
    10 XXXSTAT XXXSTAT ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end TS0BW03

// TS_CARR_CD
DataItem TS0BCARCD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TS_CRAFT_NBR
DataItem TS0BCRAFT char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TS0BCRNME char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TS0BFLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TS_CRAFT_LEASE_FL
DataItem TS0BLEASE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Line selection tag
DataItem TS0BMSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TS_CRAFT_NM
DataItem TS0BNAME char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TS0BNFFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TS_CRAFT_SH_NM
DataItem TS0BSHNM char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record group level
DataItem TS0BW03-GROUP char(66)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Colon 1
DataItem TS0BWC1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Colon 2
DataItem TS0BWC2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Working century
DataItem TS0BWCEN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem TS0BWCFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Colon
DataItem TS0BWCOL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TS0BWCRN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Change Save Key
DataItem TS0BWCSK char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Data Entered Flag
DataItem TS0BWDEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Delete flag
DataItem TS0BWDFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Working date
DataItem TS0BWDTE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Add/delete function switch
DataItem TS0BWFSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hour1
DataItem TS0BWHR1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Hour2
DataItem TS0BWHR2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Hour3
DataItem TS0BWHR3 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Inquiry flag
DataItem TS0BWIFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem TS0BWIXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Temporary storage length
DataItem TS0BWLEN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data Display Line
DataItem TS0BWLIN char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be displayed
DataItem TS0BWMAP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Message flag
DataItem TS0BWMFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Minute1
DataItem TS0BWMN1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Minute2
DataItem TS0BWMN2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Minute3
DataItem TS0BWMN3 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Problem switch
DataItem TS0BWPSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Second1
DataItem TS0BWSEC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Selection flag
DataItem TS0BWSFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Save index
DataItem TS0BWSIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Save page
DataItem TS0BWSPG num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Cursor end of file switch
DataItem TS0BWSWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem TS0BWSWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Time1
DataItem TS0BWTM1 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Time2
DataItem TS0BWTM2 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Time3
DataItem TS0BWTM3 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current temporary storage page
DataItem TS0BWTSP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Update reload flag
DataItem TS0BWURF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Working year month day
DataItem TS0BWYMD num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

