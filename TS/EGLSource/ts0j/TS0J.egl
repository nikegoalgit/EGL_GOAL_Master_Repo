package ts0j;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import in1.common.*;
import ku.common.*;
import ni.common.*;
import op.common.*;
import pc.common.*;
import pk.common.*;
import pv.common.*;
import sl.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=TS0J ****
// This application controls access to the transportation
// shipments maintenance/inquiry processes.  A menu is
// presented to the user for selection fo 8 options dealing
// with a shipment.  The user must either enter the nike
// shipment id or the BOL/CARR/CRAFT/SHIP when selecting
// one of the 8 options.
// 
// Options 1 thru 5 will inquire against or maintain different
// parts of a shipment.  Option 6 activates a tentative
// shipment and all associated detail.  Option 7 cycles to
// the next inquiry shipment.
// 
// In order to be able to cycle through to the next inquiry
// shipment (option 7), you had to have selected 1 or multiple
// (up to 10) shipments from a shipment inquiry screen and then
// pressed PF12 to bring you to this application where you can
// one by one maintain or inquire against the up to 10
// shipments selected prior to entering this application.
// 
// 
// CONTROL   DATE   NAME   DESCRIPTION OF CHANGE
// ------- -------- ------ ------------------------------------
//         05/31/88 cepple New application.
// TS#016  11/12/90 kstokk Fix clear problem when option 6
//                         selected.
//         03/11/91 kstokk Increase max carton table lines from
//                         2500 to 7500.
// TS#185  03/26/91 dhuffm Add duplicate shipment option.
// TS#000  04/09/91 SFORD  Table Changes "TSOREC" extended bol
//                         to length of 16
// TS#204  07/09/91 dhuffm Add comment to original shphdr when
//                         duplicate shipment option used.
// TS#184  09/26/91 SFORD  Modified application to handle
//                         linkage between TS02 and TS0V due
//                         due to re-write of applications.
// TS#000  10/09/91 KSTOKK Chg transfer to TS02 to TS0V.
// TS#232  12/11/91 SFORD  Combine shipment enhancement.
// TS#292  12/02/92 TGIEBE Fix packing list database record
//                         creation when shipment status = "TN"
//                         during a duplicate shipment request.
// TS#000  08/13/93 SFORD  Table Changes "TSFREC" TSFTCHG name
//                         change
// TS#000  11/08/93 NMASTE Table Changes
// TS#335  01/06/94 RCHINI Changed processing for cancel a
//                         shipment.  Delete tenative shipments
//                         and cancel all other shipment types.
//                         The shipment header will remain on
//                         a canceled shipment.  The YSS code
//                         is to 'CX'.  Options 2, 3, 4, 5, and
//                         9 have been disabled for a canceled
//                         shipment.
// TS#000  03/09/94 SFORD  Table Changes 03/11/94
// TS#000  10/18/96 DKESLE Caused warning message to be dis-
//                         played for every shipment cancel
// TS#000  10/22/96 jcarl1 Fixed truncation bug in duplicate
//                         option for comment field of ship id.
// TS#000  11/07/96 JCARL1 Remove beeps from message display.
// TS#000  12/19/96 JCARL1 Increased limit on cplhd delete
//                         array.  Fixed delete logic on cplit.
// TS#000  01/22/97 LWILS2 Replaced record TSIREC with VCPLHD03
//                         changed all the tsirec fields to the
//                         corresponding vcplhd03 fields.
// TS#000  06/10/97 RKRISH Added new process for updating
//                         Vplaux01 rows when a Change is made
//                         to the Cplit rows. This was done for
//                         option 7 and 9 of the TS0J screen.
// TS#000  03/12/98 smann2 Change message when shipemt is
//                         dupliacted ( See proc : Ts0J633)
// TS#000  03/23/98 smann2 Change Ts0JWTXT format in Ts0JW01
// TS1759  08/03/98 smann2 Apply edits before deleting a
//                         Shipment ( see TS0J650, Ts0J660)
//                         ( Not for Tentative shipemnts )
//                         ( Currently ignore check on FYPO)
// TS1512  09/27/98 VPULUG use new view VCPLHD04 in option:9
//                         ( Duplicate shipment)
//                         refer processes : TS0JS23, Ts0JS24
//                         Ts0JS25 and TS0J635 )
// TS2432  08/20/99 AMOHAI Add new PROC TS0JS99 to call TS4200,
//                         modified TS0J621, TS0J622 and
//                         TS0J623 to take backup of rows to be
//                         deleted from the SHPHDR / CPLHDR /
//                         CNTNR tables
// TS#000  04/05/01 SVENK1 Prompt users and not allow them to
//                         access/maintain USA & CANADA
//                         destination shipments.
// TS#000  12/11/01 bnagar Changed Online security access for
//                         US related shipments.
//                         Opt:3,5,7,9 disabled for US-related
//                         shipments.
//                         changed Proc: TS0J600
// TS#000  12/18/01 MLATHA Change IN PROC TS0J510
// *********************
Program TS0J type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TS00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TS0JW01 TS0JW01; // record
  TS0JW02 TS0JW02; // record
  TS0JW03 TS0JW03; // record
  TSCREC TSCREC; // record
  TSFREC TSFREC; // record
  TSGREC TSGREC; // record
  TSHREC TSHREC; // record
  TSIREC TSIREC; // record
  TSNREC TSNREC; // record
  TSOREC TSOREC; // record
  TSQREC TSQREC; // record
  TSRREC TSRREC; // record
  TSSREC TSSREC; // record
  TSWREC TSWREC; // record
  VCPLHD03 VCPLHD03; // record
  VCPLHD04 VCPLHD04; // record
  VFYPO002 VFYPO002; // record
  VPLAUX01 VPLAUX01; // record
  WTS4201 WTS4201; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use YSSTBL {deleteAfterUse = yes}; // table
  use TS0JM.TS0JM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTS001: XPTS001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    set TSFREC empty; /* Initialize record storage*/
    set VFYPO002 empty;
    set TSHREC empty;
    set TSOREC empty;
    set TSIREC empty;
    set VCPLHD03 empty;
    set VCPLHD04 empty;
    set TSQREC empty;
    set TSGREC empty;
    set TSNREC empty;
    set TSSREC empty;
    set TSRREC empty;
    set TA1REC empty;
    set TAEREC empty;
    set TA2REC empty;
    set TA5REC empty;
    set SQLCA empty;
    set ERRSQLCA empty;
    set TS0JW01 empty;
    set TS0JW02 empty;
    set TS0JW03 empty;
    set XX0XW01 empty;
    set TS0JM001 initial; /* Initialize map1 output area*/

    TS0JW01.TS0JWMAP = "1"; /* Indicate map to be displayed*/
    TS0JW01.TS0JWPSW = "N"; /* Initialize problem switch*/
    TS0JW01.TS0JWWFL = "N"; /* Set warning flag*/
    TS0JW01.TS0JWFFL = "Y"; /* Set first time thru flag*/
    TS0JW01.TS0JMMSG = "PRESS ENTER TO CONFIRM, PA2 TO ABORT";
    TS0JW01.TS0JWMX1 = 9999; /* Set maximum cpl ws table lines*/
    TS0JW01.TS0JWMX2 = 9999; /* Set maximum carton table lines*/
    TS0JW01.TS0JWMX3 = 10; /* Set maximum passed shp numbers*/

    goto TS0J001; /* Special initialization (TS0J)*/


    TS0J001: TS0J001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the Shipment Build Maintenance*/
     /* ------------------------------------------------------------*/

    goto TS0J002; /* Converse Shipment Build Maintenance*/


    TS0J002: TS0J002();
     /* ------------------------------------------------------------*/
       /* Flow to converse Shipment Maintenance Build.*/
     /* ------------------------------------------------------------*/


    goto TS0J002; /* converse shipment maintenance build*/


  end // end main
end // end TS0J

// Select from DTRANS.VTSLOC01
Function TS0J-51010()
   /* ------------------------------------------------------------*/

                 /* SELECT FROM DTRANS.VTSLOC01*/

   /* This module select a table row from the location table.*/
   /* It will return a system error if an unexpected return*/
     /* code is received.*/
   /* ------------------------------------------------------------*/

  set TSCREC empty;
  TSCREC.TSCLOCCD = TSFREC.TSEDEST;

  call "IO2350" ("S ", SQLCA, TSCREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   && SQLCA.VAGen_SQLCODE != 100)
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0J-51010"; /* Process name*/
    TA1REC.TA1LOC = "SELECT TABLE ROW";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VTSLOC01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/


    TS0JW01.TS0JWPSW = "Y"; /* indicate problem*/
    TS0JM001.XXXPRCNM = "TS0J-51010"; /* Process name*/
  end


end // end TS0J-51010

// update canceled shipment hdr
Function TS0J-62310()
   /* ------------------------------------------------------------*/

                 /* Set comments indicator to 'Y'es.*/
                 /* Set charges, kilograms, CBMs to zeros*/
                 /* in dtrans.vshphd01 for canceled shipment.*/
   /* ------------------------------------------------------------*/

  TSFREC.TSFTXTID = "Y"; /* move yes to comments indicator*/
  TSFREC.TS-TOT-COLL-SCHG = 0; /* set collect shipping charges to zero*/
  TSFREC.TS-TOT-PPD-SCHG = 0; /* set prepaid shipping charges to zero*/
  TSFREC.TSFTKG = 0; /* set kilograms to zeros*/
  TSFREC.TSFTCBM = 0; /* set CBMs to zeros*/
  TSFREC.TSFOKG = 0; /* set original kg charge to zero*/
  TSFREC.TSFOFRGT = 0; /* set original freight charge to zero*/
  TSFREC.TS-FRGT-CRCY-CD = " "; /* set frgt crcy code to spaces*/
  TSFREC.TSFOHNDL = 0; /* set original handling chg to zero*/
  TSFREC.TS-ORIG-CRCY-CD = " "; /* set frgt crcy code to spaces*/
  TSFREC.TSFOINLD = 0; /* set orig inland charge to zero*/
  TSFREC.TSFOCAF = 0; /* set orig-caf to zero*/
  TSFREC.TSFOBAF = 0; /* set orig-baf to zero*/
  TSFREC.TSFOMISC = 0; /* set orig misc charge to zero*/
  TSFREC.TSFDHNDL = 0; /* set dest handling chg to zero*/
  TSFREC.TS-DEST-CRCY-CD = " "; /* set dest crcy code to spaces*/
  TSFREC.TSFDINLD = 0; /* set dest inland charge to zero*/
  TSFREC.TSFDMISC = 0; /* set dest misc charge to zero*/
  TSFREC.TSFINFEE = 0; /* set informal fee to zero*/
  TSFREC.TSFFRFEE = 0; /* set formal fee to zero*/
  TSFREC.XXX-USER-ID = COMMAREA.CAUSERID; /* move user id*/

   /* set yss-shp-stat-cd to canceled*/

  TSFREC.YSSCD = "CX";

   /* *******************************************/
   /* *********** get current date **************/
   /* ************ and time *********************/
   /* *******************************************/

  XX0XS01();
  TSFREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  TSFREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

  TSNREC.TSNFNC = "U "; /* move in selection*/
  call "IO2540" (TSNREC, SQLCA, TSFREC) {isNoRefresh = yes, isExternal = yes}; /* update table row*/

  if (SQLCA.VAGen_SQLCODE == 0) /* if good return code*/
    TSRREC.TSRSEQNB = 1;
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "J-62310"; /* Process name*/
    TA1REC.TA1LOC = "UPDATE TABLE ROW";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSHPHD01"; /* Table view name*/
    TA1REC.TA1TBLKE = TSFREC.TSFKEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "J-62310"; /* Process name*/
  end


end // end TS0J-62310

// Update comment text - VTSTXT01
Function TS0J-62320()
   /* ------------------------------------------------------------*/

        /* Add a comment in the dtrans.vtstxt01 table for*/
        /* to indicate the person who canceled the shipment*/
        /* and when the shipment was canceled.*/

   /* The following logic is used to determine which text to add:*/

   /* 1.  No comments found.*/
   /* Create text number 1 for shipment canceled by.*/
   /* 2.  One comment found.*/
   /* Create text number 2 for shipment canceled by.*/
   /* 3.  Two comments found.*/
   /* Delete the current text number 2.*/
   /* Create text number 2 for shipment canceled by.*/

   /* ------------------------------------------------------------*/

  TS0JW01.TS0JW-CANCELED-BY-TXT1 = "CANCELED BY ";
  TS0JW01.TS0JW-CANCELED-BY-USERID = COMMAREA.CAUSERID;
  TS0JW01.TS0JW-CANCELED-BY-TXT2 = " ON ";
  TS0JW01.TS0JW-CANCELED-BY-DT-YY = XX0XW01.XX0XWYY;
  TS0JW01.TS0JW-CANCELED-BY-DT-MM = XX0XW01.XX0XWMM;
  TS0JW01.TS0JW-CANCELED-BY-DT-DD = XX0XW01.XX0XWDD;
  TS0JW01.TS0JW-CANCELED-BY-DT-SLASH1 = "/";
  TS0JW01.TS0JW-CANCELED-BY-DT-SLASH2 = "/";

  TSRREC.TSRTEXT = TS0JW01.TS0JW-CANCELED-BY-TXT; /* move text to rec*/

  TSRREC.TSFSHPID = TSFREC.TSFSHPID; /* move ship id to text key*/

   /* *******************************************/
   /* *********** get current date **************/
   /* ************ and time *********************/
   /* *******************************************/

  TSRREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* change date*/
  TSRREC.ZZZSDT = XX0XW01.XX0XWDAT; /* Set up date*/
  TSRREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  TSRREC.ZZZCHGCT = 0; /* Change count*/

   /* If 2 comments were found, delete the 2nd comment*/

  if (TS0JW01.TS0JW-TS-TXT-IND == "2" /* if 2 text rows exist*/
  )                                  
    TS0JW01.TS0JWIXM = 2; /* move 2 to index for sequence number*/

    TS0JS18(); /* delete text row number 2*/

  end

  if (TS0JW01.TS0JW-TS-TXT-IND == " ") /* if no text exists*/
    TSRREC.TSRSEQNB = 1; /* move 1 to sequence number*/
  end

  if (TS0JW01.TS0JW-TS-TXT-IND == "1" /* if 1 row of text was found*/
   || TS0JW01.TS0JW-TS-TXT-IND == "2") /* or 2 rows of text were found*/
    TSRREC.TSRSEQNB = 2; /* move 2 to sequence number*/
  end

  call "IO2690" ("A ", SQLCA, TSRREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* if good return code*/
   || SQLCA.VAGen_SQLCODE == 100)
      /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "J-62320"; /* Process name*/
    TA1REC.TA1LOC = "ADD TABLE ROW";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VTSTXT01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    TS0JM001.XXXPRCNM = "J-62320"; /* Process name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    exit stack;

  end

end // end TS0J-62320

// Count the nbr of VTSTX01 rows
Function TS0J-62330()
   /* ------------------------------------------------------------*/

              /* Count the number of comments for the shipment*/

    /* If any errors occur in the process of selecting,*/
    /* fetching, deleting, and closing the database table rows,*/
    /* the errors will be handled in the appropriate statement*/
    /* group and 'EZEFLO' will be used to exit and display the*/
    /* map.*/

   /* ------------------------------------------------------------*/

  TS0JW01.TS0JWSW1 = "N"; /* set up end of set switches*/
  TS0JW01.TS0JW-TS-TXT-IND = " "; /* initialize text indicator*/

  TS0J-62331(); /* select the set of VTSTXT01 rows*/

  while (TS0JW01.TS0JWSW1 == "N") /* while not end of set text*/
    TS0J-62332(); /* fetch the text row*/
  end

  TS0J-62333(); /* close the selected set of text rows*/


end // end TS0J-62330

// Select set for VTSTXT01
Function TS0J-62331()
   /* ------------------------------------------------------------*/

            /* SELECT SET OF SHIPMENT TEXT - VTSTXT01 ROWS*/

       /* Select the set of table rows.*/

   /* ------------------------------------------------------------*/

  TSRREC.TSFSHPID = TSWREC.TSFSHPID; /* move in id*/

  call "IO2690" ("S1", SQLCA, TSRREC) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "J-62331"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VTSTXT01"; /* Table view name*/
    TA1REC.TA1TBLKE = TSRREC.TSRKEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "J-62331"; /* Process name*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0J-62331

// Fetch cursor for VTSTXT01
Function TS0J-62332()
   /* ------------------------------------------------------------*/

            /* FETCH THE VTSTXT01 ROW*/

   /* Fetch the next row from the selected set of rows.*/

   /* ------------------------------------------------------------*/

  call "IO2690" ("N1", SQLCA, TSRREC) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE == 0) /* if row found*/

    if (TSRREC.TSRSEQNB == 1) /* if comment nbr 1*/
      TS0JW01.TS0JW-TS-TXT-IND = "1"; /* set indicator to 1*/
    end

    if (TSRREC.TSRSEQNB == 2) /* if comment nbr 2*/
      TS0JW01.TS0JW-TS-TXT-IND = "2"; /* set indicator to 2*/
    end

  end

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    TS0JW01.TS0JWSW1 = "Y"; /* end of set found*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "J-62332"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VTSTXT01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JM001.XXXPRCNM = "J-62332"; /* Process name*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0J-62332

// Close cursor for VTSTXT01
Function TS0J-62333()
   /* ------------------------------------------------------------*/

            /* CLOSE THE SELECTED SET OF VTSTXT01*/

   /* Close the selected set of table rows.*/

   /* ------------------------------------------------------------*/

  call "IO2690" ("C1", SQLCA, TSRREC) {isNoRefresh = yes, isExternal = yes}; /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "J-62333"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VTSTXT01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "J-62333"; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if errors occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0J-62333

// Special initialization (TS0J)
Function TS0J001()
   /* ------------------------------------------------------------*/

                /* INITIALIZATION (TS0J)*/

   /* This special initialization process is required by*/
   /* TS0J to determine whether the entry into this application*/
   /* is from the shipment maint process. This process determines*/
   /* whether the user has come from TS0X, TS0Y, TS0Z, TS01, or*/
   /* TS02.*/

   /* 1) If the user has come from within shipment maintenance;*/
      /* a) Move the tswrec fields to the map.*/
   /* 2) Else if the user has come from shipment inquiry;*/
      /* a) Check for inquiry flag and set request for data to*/
         /* yes.*/

   /* ------------------------------------------------------------*/

  if (COMMAREA.CAFROMAP == "TS0X" /* If comming from another*/
   || COMMAREA.CAFROMAP == "TS0Y" /* shipment maint application*/
   || COMMAREA.CAFROMAP == "TS0Z" 
   || COMMAREA.CAFROMAP == "TS01" 
   || COMMAREA.CAFROMAP == "TS02" 
   || COMMAREA.CAFROMAP == "TS0I" 
   || COMMAREA.CAFROMAP == "TS0T")

    TS0JW01.TSFSHPID = TSWREC.TSFSHPID; /* move in map fields*/
    TS0JW01.TSFBOL = TSWREC.TSFBOL;
    TS0JW01.TSACARCD = TSWREC.TSACARCD;
    TS0JW01.TS5CRAFT = TSWREC.TS5CRAFT;
    TS0JW01.TSFSHPNB = TSWREC.TSFSHPNB;

  else
    if (TSWREC.TSWINQFL == "Y") /* if inquiry selected flag is yes*/
      TS0JW01.TS0JWSWR = "Y"; /* set request for data to yes*/
    else
      TS0JM001.TS0JMMSG = TS0JW01.TS0JWMSG; /* set message*/
    end
  end


end // end TS0J001

// Shipment Maintenance Menu
Function TS0J002()
   /* ------------------------------------------------------------*/

               /* SHIPMENT HEADER ADD MAIN MAP*/

   /* This is the process used to display the shipment*/
   /* header add main map.*/
   /* Processing always returns to the top of this process and*/
   /* falls through to subordinate processes until an error is*/
   /* found or a valid request is processed. Sequence is as*/
   /* follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (TS0JW01.TS0JWSWR == "Y") /* If request for data is yes*/
    TS0J100(); /* Obtain the data to display*/
  end

  TS0J200(); /* Format and display the map*/

  TS0J300(); /* Check attention identifier*/

  TS0J400(); /* Reset fields to normal intensity*/

  TS0J500(); /* Verify the entered data*/

  if (converseVar.eventKey is enter /* If enter is pressed and no errors*/
   && TS0JW01.TS0JWPSW == "N")     
    TS0J600(); /* Process valid input request*/
  end


end // end TS0J002

// Obtain the data to display
Function TS0J100()
   /* ------------------------------------------------------------*/

               /* OBTAIN THE DATA TO DISPLAY*/

     /* If the inquiry flag was set and the entry application*/
     /* to this application was a shipment inquiry;*/

     /* 1) Get the next shipment header information from the*/
        /* shipment information array passed from the shipment*/
        /* inquiry application.*/

     /* 2) Select the header to see if it has not already been*/
        /* deleted by another user.*/
        /* a) if found, move the information to the map*/
        /* b) else, move the information to the map and indicate*/
           /* a message informing the user that the shipment*/
           /* has been deleted already.*/

   /* ------------------------------------------------------------*/

  TS0JW01.TS0JWSWR = "N"; /* request for data switch reset*/
  TS0JW01.TS0JWEFL = "N"; /* set end flag*/
  while (TSWREC.TSWSHPOS <= TS0JW01.TS0JWMX3 /* Until end of array*/
   && TS0JW01.TS0JWEFL == "N") /* and end flag not set*/
    if (TSWREC.TSWSHPID[TSWSHPOS] > 0) /* if data exists*/
      TS0JW01.TS0JWEFL = "Y"; /* end the loop*/
    else
      TSWREC.TSWSHPOS = TSWREC.TSWSHPOS + 1; /* increment counter*/
    end
  end

  if (TSWREC.TSWSHPOS <= TS0JW01.TS0JWMX3) /* if shp position is valid*/
    set TSFREC empty; /* empty the csp record*/
    TSFREC.TSFSHPID = TSWREC.TSWSHPID[TSWSHPOS]; /* move in key*/
    TS0J110(); /* select the shipment*/
    if (SQLCA.VAGen_SQLCODE == 0) /* if shipment is found*/
      TS0JW01.YSSCD = TSFREC.YSSCD; /* save the shipment fields*/
      TS0JW01.TSFSHPID = TSFREC.TSFSHPID;
      TS0JW01.TSFBOL = TSFREC.TSFBOL;
      TS0JW01.TSACARCD = TSFREC.TSACARCD;
      TS0JW01.TS5CRAFT = TSFREC.TS5CRAFT;
      TS0JW01.TSFSHPNB = TSFREC.TSFSHPNB;
      TSWREC.TSEORIG = TSFREC.TSEORIG;
      TSWREC.TSEDEST = TSFREC.TSEDEST;
      TSWREC.XWHCD = TSFREC.XWHCD;
      TSWREC.XGPCD = TSFREC.XGPCD;
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* if shipment is not found*/
        converseLib.validationFailed(137); /* shipment already deleted*/
        TS0JM001.XXXPRCNM = "TS0J100"; /* process name*/
        TS0JW01.TS0JWPSW = "Y"; /* indicate error*/
        TS0JW01.YSSCD = " "; /* clear the shipment status code*/
      end
    end
  else
    TSWREC.TSWINQFL = "N"; /* set inquiry flag to no*/
    converseLib.validationFailed(152); /* Display error message*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
    TS0JW01.TS0JWSWR = "N"; /* set request for data to no*/
    TS0JM001.XXXPRCNM = "TS0J100"; /* Process name*/
    set TS0JM001.TS0JMOPT cursor, modified, bold; /* highlight field*/
    TSWREC.TSWADDMO = " "; /* clear option to pass*/
  end


end // end TS0J100

// Select from DTRANS.VSHPHD01
Function TS0J110()
   /* ------------------------------------------------------------*/

                 /* SELECT FROM DTRANS.VSHPHD01*/

   /* Select the unique table row from the database.*/
   /* It will return a system error if an unexpected return*/
     /* code is received.*/
   /* ------------------------------------------------------------*/

  TSNREC.TSNFNC = "S "; /* move in selection*/
  call "IO2540" (TSNREC, SQLCA, TSFREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* if good return code*/
   || SQLCA.VAGen_SQLCODE == 100)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0J110"; /* Process name*/
    TA1REC.TA1LOC = "SELECT UNIQUE TABLE ROW";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSHPHD01"; /* Table view name*/
    TA1REC.TA1TBLKE = TSFREC.TSFKEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0J110"; /* Process name*/
  end


end // end TS0J110

// Format and display the map
Function TS0J200()
   /* ------------------------------------------------------------*/

               /* FORMAT AND DISPLAY THE MAP*/

   /* If no error to display:*/
     /* 1) Clear the map.*/
     /* 2) If inquiry flag is yes, move in the array fields*/

   /* Indicate sound audible alarm for any error.*/

   /* ------------------------------------------------------------*/

  if (TS0JW01.TS0JWPSW == "N" /* if no errors*/
   && TS0JW01.TS0JWWFL == "N") /* and no warnings*/

    TS0JM001.TSNBEGDT = TS0JW01.TS0JWBDT; /* set dates*/
    TS0JM001.TSNENDDT = TS0JW01.TS0JWEDT;

    if (TSWREC.TSWINQFL == "Y") /* if inquiry flag is yes*/

      if (TS0JW01.YSSCD == " ") /* if shp stat code is blank*/
         /* continue on*/
      else
        TS0JW01.YSSDELFL = " "; /* set del flag blank*/
        if (TS0JW01.YSSCD in YSSTBL.YSSCD)
          TS0JW01.YSSDELFL = YSSTBL.YSSDELFL[sysVar.arrayIndex];
        end
        if (TS0JW01.YSSDELFL == "N") /* if del flag indicate no deletions*/
          set TS0JM001.TS0JMDEL skip, invisible; /* darken delete select*/
          set TS0JM001.TS0JMDUP skip, invisible; /* darken duplicate select*/
        end
      end

    end

    TS0JM001.TSFSHPID = TS0JW01.TSFSHPID; /* move fields*/
    TS0JM001.TSFBOL = TS0JW01.TSFBOL;
    TS0JM001.TSACARCD = TS0JW01.TSACARCD;
    TS0JM001.TS5CRAFT = TS0JW01.TS5CRAFT;
    TS0JM001.TSFSHPNB = TS0JW01.TSFSHPNB;

  end

  if (COMMAREA.CADELFL == "N") /* if user has no delete authority*/
    set TS0JM001.TS0JMDEL skip, invisible; /* darken the delete selection*/
    set TS0JM001.TS0JMDUP skip, invisible; /* darken the dup selection*/
  end

  if (TS0JW01.TS0JWFFL == "Y") /* first time thru*/
    TS0JW01.TS0JWFFL = "N"; /* set flag to no*/

    if (TS0JW01.TS0JWBDT == " ") /* if beginning date is blank*/
      XX0XS01(); /* call date routine*/
      TS0JW01.TS0JWBEG = XX0XW01.XX0XWDAT; /* save beg ccyymmdd*/
      TS0JW01.TS0JWMYY = XX0XW01.XX0XWYY; /* set date to mmddyy*/
      TS0JW01.TS0JWMMM = XX0XW01.XX0XWMM;
      TS0JW01.TS0JWMDD = XX0XW01.XX0XWDD;
    end

    if (TS0JW01.TS0JWEDT == " ") /* if beginning date is blank*/
      set TA2REC empty; /* clear record*/
      TA2REC.TA2DTOPT = "GETDATE"; /* move in option field*/
      TA2REC.TA2GRGA = TS0JM001.TSNBEGDT; /* begn date*/
      TA2REC.TA2DYAOD = -9; /* subtr -9 days from todays date*/

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* call date routine*/

      if (TA2REC.TA2RTNCD == 0) /* if no errors from call*/
        TS0JW01.TS0JWBEG = TA2REC.TA2GRGGN; /* save end ccyymmdd*/
        TS0JM001.TSNBEGDT = TA2REC.TA2GRGA; /* move end date*/
        TS0JW01.TS0JWBDT = TA2REC.TA2GRGA; /* save date*/
      end
    end

    if (TS0JW01.TS0JWEDT == " ") /* if beginning date is blank*/
      set TA2REC empty; /* clear record*/
      TA2REC.TA2DTOPT = "GETDATE"; /* move in option field*/
      TA2REC.TA2GRGA = TS0JM001.TSNBEGDT; /* begn date*/
      TA2REC.TA2DYAOD = 22; /* add 22 days to todays date*/

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* call date routine*/

      if (TA2REC.TA2RTNCD == 0) /* if no errors from call*/
        TS0JW01.TS0JWEND = TA2REC.TA2GRGGN; /* save end ccyymmdd*/
        TS0JM001.TSNENDDT = TA2REC.TA2GRGA; /* move end date*/
        TS0JW01.TS0JWEDT = TA2REC.TA2GRGA; /* save date*/
      end
    end

  end

  /* IF EZEMNO NE 0;                   /* Error message to display*/
  /* SET TS0JM001 ALARM;             /* Indicate sound alarm*/
  /* END;*/

  TS0JM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  converse TS0JM001 ;

  TS0JW01.TS0JWPSW = "N"; /* Reset error switch*/
  TS0JM001.TS0JMMSG = " "; /* Reset message line*/


end // end TS0J200

// Check attention identifier
Function TS0J300()
   /* ------------------------------------------------------------*/

                /* CHECK THE ATTENTION IDENTIFIER*/

   /* 1) If PA2 pressed, refresh the screen for the user*/
   /* 2) If fast path request, exit to requested application.*/
   /* 3) If PF3 pressed, exit to transportation menu.*/
   /* 4) If PF1 or PF4 pressed, transfer to HELP or main menu.*/
   /* 5) If any AI pressed other than ENTER indicate PF/PA key*/
      /* error.*/
   /* If any errors occur in transfers or keys pressed then*/
      /* exit to redisplay the map.*/

   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set TS0JM001 initial; /* clear the map*/
    if (TSWREC.TSWINQFL == "Y") /* if inquiry flag is yes*/
      TS0JW01.TS0JWSWR = "Y"; /* set request for data to yes*/
    end
    if (TS0JW01.TS0JWWFL == "Y") /* if warning flag is yes*/
      TS0JW01.TS0JWWFL = "N"; /* Reset any warnings*/

      TS0JW01.TSFSHPID = 0; /* Clear save fields*/
      TS0JW01.TSFBOL = " ";
      TS0JW01.TSACARCD = " ";
      TS0JW01.TS5CRAFT = " ";
      TS0JW01.TSFSHPNB = " ";

    end
    exit stack; /* Exit to redisplay map*/
  end


  if (TS0JM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter /* ENTER was pressed*/
     && TS0JM001.CATOAP != "TS0X"     /* Not fast path to ts0x*/
     && TS0JM001.CATOAP != "TS0Y"     /* Not fast path to ts0y*/
     && TS0JM001.CATOAP != "TS0Z"     /* Not fast path to ts0z*/
     && TS0JM001.CATOAP != "TS01"     /* Not fast path to ts01*/
     && TS0JM001.CATOAP != "TS02")    /* Not fast path to ts02*/
      set TSWREC empty;
      COMMAREA.CAUSERA = TSWREC.CAUSERA; /* clear pass record*/
      COMMAREA.CATOAP = TS0JM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = TS0JM001.CAITEM; /* Application data*/
      XSTSS01(); /* Exit to another application*/
    else
      if (TS0JM001.CATOAP == "TS0X" /* ts0x*/
       || TS0JM001.CATOAP == "TS0Y" /* ts0y*/
       || TS0JM001.CATOAP == "TS0Z" /* ts0z*/
       || TS0JM001.CATOAP == "TS01" /* ts01*/
       || TS0JM001.CATOAP == "TS02") /* ts02*/
        converseLib.validationFailed(6); /* Invalid transfer*/
      else
        converseLib.validationFailed(5); /* Indicate PF key not valid*/
      end
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
    end
    set TS0JM001.CATOAP cursor, modified, bold; /* Highlight*/
    TS0JM001.XXXPRCNM = "TS0J300"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    if (TSWREC.TSWFRAPP != " ") /* if an application exist to go to*/
      COMMAREA.CATOAP = TSWREC.TSWFRAPP; /* set to previous inquiry*/
    else
      set TSWREC empty;
      COMMAREA.CATOAP = "TS0A"; /* set to main menu*/
    end
    COMMAREA.CAUSERA = TSWREC.CAUSERA; /* clear pass record*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    XSTSS01(); /* Exit to another application*/
    TS0JM001.XXXPRCNM = "TS0J300"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "TS0JM001"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    XSTSS01(); /* Exit to another application*/
    TS0JM001.XXXPRCNM = "TS0J300"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    TS0JM001.XXXPRCNM = "TS0J300"; /* Process name*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end


end // end TS0J300

// Reset highlighted fields
Function TS0J400()
   /* ------------------------------------------------------------*/

              /* RESET HIGHLIGHTED FIELDS*/

   /* Reset field attributes to normal intensity.*/

   /* ------------------------------------------------------------*/

  set TS0JM001.TS0JMOPT initialAttributes; /* reset all map fields*/
  set TS0JM001.TSFSHPID initialAttributes;
  set TS0JM001.TSFBOL initialAttributes;
  set TS0JM001.TSACARCD initialAttributes;
  set TS0JM001.TS5CRAFT initialAttributes;
  set TS0JM001.TSFSHPNB initialAttributes;
  set TS0JM001.TSNBEGDT initialAttributes;
  set TS0JM001.TSNENDDT initialAttributes;
  set TS0JM001.CATOAP initialAttributes;
  set TS0JM001.CAITEM initialAttributes;


end // end TS0J400

// Verify the entered data
Function TS0J500()
   /* ------------------------------------------------------------*/

                  /* VERIFY THE ENTERED DATA*/

       /* 1) Check for valid caitem entry.*/
       /* 2) If option 6 picked and no inquiry shipments, then*/
          /* indicate error.*/
       /* 3) If any data was changed, edit the entered data.*/
       /* 4) If option 7 is entered and the user does not have*/
          /* delete abilities or the shipment has a non delete*/
          /* status code - indicate an error.*/
       /* 5) If the order has been canceled, options 2, 3, 4, 5*/
          /* 7, and 9 will not be allowed.*/

   /* ------------------------------------------------------------*/

  if (TS0JM001.CAITEM > " ") /* Application data was entered*/
    set TS0JM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
    TS0JM001.XXXPRCNM = "TS0J500"; /* Process name*/
  end

  if (TS0JM001.TS0JMOPT == "6") /* if option 6 entered*/
    if (TSWREC.TSWINQFL == "Y") /* if inq eq yes*/
       /* continue on*/
    else
      converseLib.validationFailed(152); /* Display error message*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
      TS0JM001.XXXPRCNM = "TS0J500"; /* Process name*/
      set TS0JM001.TS0JMOPT cursor, modified, bold; /* highlight field*/
      TSWREC.TSWADDMO = " "; /* clear option to pass*/
    end
  end

  if (TS0JW01.TS0JWPSW == "N") /* if no errors so far*/
    if (TSWREC.TSWINQFL == "Y" /* if inq yes and no data changed*/
     && TS0JM001.TSFSHPID == TS0JW01.TSFSHPID
     && TS0JM001.TSFBOL == TS0JW01.TSFBOL
     && TS0JM001.TSACARCD == TS0JW01.TSACARCD
     && TS0JM001.TS5CRAFT == TS0JW01.TS5CRAFT
     && TS0JM001.TSFSHPNB == TS0JW01.TSFSHPNB)
       /* continue on and do not perform the edits*/
      TS0J510(); /* verify all the entered shipment data*/
    else
      TS0J510(); /* verify all the entered shipment data*/
    end

    if (TS0JM001.TS0JMOPT != "1" /* if option entered not valid*/
     && TS0JM001.TS0JMOPT != "2" 
     && TS0JM001.TS0JMOPT != "3" 
     && TS0JM001.TS0JMOPT != "4" 
     && TS0JM001.TS0JMOPT != "5" 
     && TS0JM001.TS0JMOPT != "6" 
     && TS0JM001.TS0JMOPT != "7" 
     && TS0JM001.TS0JMOPT != "9")
      converseLib.validationFailed(09); /* Display error message*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
      TS0JM001.XXXPRCNM = "TS0J500"; /* Process name*/
      set TS0JM001.TS0JMOPT cursor, modified, bold; /* highlight field*/
      TSWREC.TSWADDMO = " "; /* clear option to pass*/
    else
      TSWREC.TSWADDMO = TS0JM001.TS0JMOPT; /* save option to pass*/
    end

    if (TS0JM001.TS0JMOPT == "2" /* if option 2 entered*/
     && TSFREC.YSSCD == "CX")    /* and canceled shipment*/
      converseLib.validationFailed(401); /* option invalid for canceled shpmnt*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
      TS0JM001.XXXPRCNM = "TS0J500"; /* Process name*/
      set TS0JM001.TS0JMOPT cursor, modified, bold; /* highlight field*/
      TSWREC.TSWADDMO = " "; /* clear option to pass*/
    end

    if (TS0JM001.TS0JMOPT == "3") /* if option 3 entered*/
      if (COMMAREA.CAADDFL == "N" /* if add flag is no*/
       || COMMAREA.CACHGFL == "N") /* or change flag is no*/
        converseLib.validationFailed(09); /* Display error message*/
        TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
        TS0JM001.XXXPRCNM = "TS0J500"; /* Process name*/
        set TS0JM001.TS0JMOPT cursor, modified, bold; /* highlight field*/
        TSWREC.TSWADDMO = " "; /* clear option to pass*/
      end
    end

    if (TS0JM001.TS0JMOPT == "3" /* if option 3 entered*/
     && TSFREC.YSSCD == "CX")    /* and canceled shipment*/
      converseLib.validationFailed(401); /* option invalid for canceled shpmnt*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
      TS0JM001.XXXPRCNM = "TS0J500"; /* Process name*/
      set TS0JM001.TS0JMOPT cursor, modified, bold; /* highlight field*/
      TSWREC.TSWADDMO = " "; /* clear option to pass*/
    end

    if (TS0JM001.TS0JMOPT == "4" /* if option 4 entered*/
     && TSFREC.YSSCD == "CX")    /* and canceled shipment*/
      converseLib.validationFailed(401); /* option invalid for canceled shpmnt*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
      TS0JM001.XXXPRCNM = "TS0J500"; /* Process name*/
      set TS0JM001.TS0JMOPT cursor, modified, bold; /* highlight field*/
      TSWREC.TSWADDMO = " "; /* clear option to pass*/
    end

    if (TS0JM001.TS0JMOPT == "5" /* if option 5 entered*/
     && TSFREC.YSSCD == "TN")    /* if shipment is tentative*/
      converseLib.validationFailed(268); /* option invalid for tentative*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
      TS0JM001.XXXPRCNM = "TS0J500"; /* Process name*/
      set TS0JM001.TS0JMOPT cursor, modified, bold; /* highlight field*/
      TSWREC.TSWADDMO = " "; /* clear option to pass*/
    end

    if (TS0JM001.TS0JMOPT == "5" /* if option 5 entered*/
     && TSFREC.YSSCD == "CX")    /* and canceled shipment*/
      converseLib.validationFailed(401); /* option invalid for canceled shpmnt*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
      TS0JM001.XXXPRCNM = "TS0J500"; /* Process name*/
      set TS0JM001.TS0JMOPT cursor, modified, bold; /* highlight field*/
      TSWREC.TSWADDMO = " "; /* clear option to pass*/
    end

    if (TS0JM001.TS0JMOPT == "7") /* if option 7 entered*/
      if (TS0JW01.YSSDELFL == "N" /* if del flag is no*/
       || COMMAREA.CADELFL == "N")
                                   /* or user has no delete security*/
        converseLib.validationFailed(09); /* Display error message*/
        TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
        TS0JM001.XXXPRCNM = "TS0J500"; /* Process name*/
        set TS0JM001.TS0JMOPT cursor, modified, bold; /* highlight field*/
        TSWREC.TSWADDMO = " "; /* clear option to pass*/
      end
      if (TSFREC.YSSCD == "CX") /* and canceled shipment*/
        converseLib.validationFailed(402); /* option invalid for canceled shpmnt*/
        TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
        TS0JM001.XXXPRCNM = "TS0J500"; /* Process name*/
        set TS0JM001.TS0JMOPT cursor, modified, bold; /* highlight field*/
        TSWREC.TSWADDMO = " "; /* clear option to pass*/
      end
    end

    if (TS0JM001.TS0JMOPT == "9") /* if option 9 entered*/
      if (TS0JW01.YSSDELFL == "N" /* if del flag is no*/
       || COMMAREA.CADELFL == "N")
                                   /* or user has no delete security*/
        converseLib.validationFailed(09); /* Display error message*/
        TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
        TS0JM001.XXXPRCNM = "TS0J500"; /* Process name*/
        set TS0JM001.TS0JMOPT cursor, modified, bold; /* highlight field*/
        TSWREC.TSWADDMO = " "; /* clear option to pass*/
      end
    end

    if (TS0JM001.TS0JMOPT == "9" /* if option 9 entered*/
     && TSFREC.YSSCD == "CX")    /* and canceled shipment*/
      converseLib.validationFailed(401); /* option invalid for canceled shpmnt*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
      TS0JM001.XXXPRCNM = "TS0J500"; /* Process name*/
      set TS0JM001.TS0JMOPT cursor, modified, bold; /* highlight field*/
      TSWREC.TSWADDMO = " "; /* clear option to pass*/
    end
  end


end // end TS0J500

// Verify the shipment data
Function TS0J510()
   /* ------------------------------------------------------------*/

                /* VERIFY THE SHIPMENT DATA*/

       /* 1) If shipment id has not been entered check to see if*/
          /* any of the othe keys have been entered. If they have*/
          /* then verify their entry.*/
       /* 2) Shipment BOL/carr/craft/shpnb and dates must be*/
          /* entered if shipment id has not been entered*/
          /* (verify on the shphd table)*/
          /* **  shipment status cannot be 'ip'*/

   /* ------------------------------------------------------------*/

  if (TS0JM001.TSFSHPID <= 0) /* if shpid missing or invalid*/
    if (TS0JM001.TSFBOL != " " /* if any other keys entered*/
     || TS0JM001.TSACARCD != " "
     || TS0JM001.TS5CRAFT != " "
     || TS0JM001.TSFSHPNB != " ")
      TS0J511(); /* edit grouping 1*/
      TS0J512(); /* edit grouping 2*/
      if (TS0JW01.TS0JWPSW == "N") /* if no errors thus far*/
        TS0J513(); /* check for date span errors*/
      end
      if (TS0JW01.TS0JWPSW == "N") /* if no errors thus far*/
        TS0J514(); /* Select the shipment for validity*/
      end

   /* SVENK1 CHANGE BEGIN*/
   /* XX0XS01;                   /* call date routine*/
   /* PERFORM TS0J-51010;        /* select the dest location*/
   /* IF (TSCREC.XCTCD = 'USA' OR/* usa destination shps*/
   /* TSCREC.XCTCD = 'CANA') AND/* canada destination shps*/
   /* XX0XW01.XX0XWDAT GE 20051113;/* date after US GOLIVE date*/
   /* MOVE 452 TO EZEMNO;      /* no access to USA/Canada shp*/
   /* MOVE 'TS0J510' TO TS0JM001.XXXPRCNM;/* process name*/
   /* MOVE 'Y' TO TS0JW01.TS0JWPSW;/* set error switch*/
   /* SET TS0JM001.TSFSHPID CURSOR,MODIFIED,BRIGHT;/* highlighted fi*/
   /* SET TS0JM001.TSFBOL MODIFIED,BRIGHT;*/
   /* SET TS0JM001.TSACARCD MODIFIED,BRIGHT;*/
   /* SET TS0JM001.TS5CRAFT MODIFIED,BRIGHT;*/
   /* SET TS0JM001.TSFSHPNB MODIFIED,BRIGHT;*/
   /* EZERTN;*/
   /* END;*/
   /* SVENK1 CHANGE END*/

    else
      converseLib.validationFailed(59); /* invalid shipment*/
      TS0JM001.XXXPRCNM = "TS0J510"; /* process name*/
      TS0JW01.TS0JWPSW = "Y"; /* set error switch*/
      set TS0JM001.TSFSHPID cursor, modified, bold; /* highlighted fields*/
      set TS0JM001.TSFBOL modified, bold;
      set TS0JM001.TSACARCD modified, bold;
      set TS0JM001.TS5CRAFT modified, bold;
      set TS0JM001.TSFSHPNB modified, bold;
    end
  else
    TSFREC.TSFSHPID = TS0JM001.TSFSHPID; /* move in key field*/
    TS0J110(); /* select the shp hd row*/
    if (SQLCA.VAGen_SQLCODE == 0) /* if selection was valid*/
      if (TSFREC.YSSCD == "IP") /* if shipment is in process*/
        TS0JW01.TSFSHPID = 0; /* set save id clear*/
        converseLib.validationFailed(59); /* set invalid shipment error*/
        TS0JM001.XXXPRCNM = "TS0J510"; /* process name*/
        TS0JW01.TS0JWPSW = "Y"; /* indicate error*/
        set TS0JM001.TSFSHPID cursor, modified, bold;
      else
   /* SVENK1 CHANGE BEGIN*/
   /* ;*/
   /* XX0XS01;                   /* call date routine*/
   /* PERFORM TS0J-51010;        /* select the dest location*/
   /* IF (TSCREC.XCTCD = 'USA' OR/* usa destination shps*/
   /* TSCREC.XCTCD = 'CANA') AND/* canada destination shps*/
   /* XX0XW01.XX0XWDAT GE 20051113;/* date after US GOLIVE date*/
   /* MOVE 452 TO EZEMNO;      /* no access to USA/Canada shp*/
   /* MOVE 'TS0J510' TO TS0JM001.XXXPRCNM;/* process name*/
   /* MOVE 'Y' TO TS0JW01.TS0JWPSW;/* set error switch*/
   /* SET TS0JM001.TSFSHPID CURSOR,MODIFIED,BRIGHT;/* highlighted fi*/
   /* SET TS0JM001.TSFBOL MODIFIED,BRIGHT;*/
   /* SET TS0JM001.TSACARCD MODIFIED,BRIGHT;*/
   /* SET TS0JM001.TS5CRAFT MODIFIED,BRIGHT;*/
   /* SET TS0JM001.TSFSHPNB MODIFIED,BRIGHT;*/
   /* ;*/
   /* EZERTN;*/
   /* ;*/
   /* END;*/
   /* SVENK1 CHANGE END*/

         /* Select the cpl headers without detail for this shipment*/
        TS0JS20(); /* select the set w/o detail*/
        if (SQLCA.VAGen_SQLCODE == 0) /* if select ok*/
          TS0JS21(); /* fetch the row*/
          if (SQLCA.VAGen_SQLCODE == 0) /* if fetch was successful*/
             /* continue on*/
          else
            if (SQLCA.VAGen_SQLCODE == 100 /* if none found*/
             && TS0JM001.TS0JMOPT == "5")  /* and option 5 is picked*/
   /* mlatha CHANGE begin*/
              TS0J-51010(); /* select the dest location*/
              if ((TSCREC.XCTCD == "USA" ||  /* usa destination shps*/
              TSCREC.XCTCD == "CANA"))       /* canada destination shps*/
                converseLib.validationFailed(452); /* no access to USA/Canada shp*/
              else
                converseLib.validationFailed(159); /* option invalid for shipment*/
              end
   /* mlatha CHANGE end*/
              TS0JW01.TS0JWPSW = "Y"; /* set error switch*/
              TS0JM001.XXXPRCNM = "TS0J514"; /* process name*/
              set TS0JM001.TS0JMOPT cursor, modified, bold;
            end
          end
          TS0JS22(); /* close the selected set*/
        end

        TS0JW01.TSFBOL = TSFREC.TSFBOL; /* save valid fields*/
        TS0JM001.TSFBOL = TSFREC.TSFBOL;
        TS0JW01.TSACARCD = TSFREC.TSACARCD;
        TS0JM001.TSACARCD = TSFREC.TSACARCD;
        TS0JW01.TS5CRAFT = TSFREC.TS5CRAFT;
        TS0JM001.TS5CRAFT = TSFREC.TS5CRAFT;
        TS0JW01.TSFSHPNB = TSFREC.TSFSHPNB;
        TS0JM001.TSFSHPNB = TSFREC.TSFSHPNB;
        TSWREC.XGPCD = TSFREC.XGPCD;
      end
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* if selection was not valid*/
        TS0JW01.TSFSHPID = 0; /* set save id clear*/
        converseLib.validationFailed(59); /* set invalid shipment error*/
        TS0JM001.XXXPRCNM = "TS0J510"; /* process name*/
        TS0JW01.TS0JWPSW = "Y"; /* indicate error*/
        set TS0JM001.TSFSHPID cursor, modified, bold;
      end
    end
  end


end // end TS0J510

// Edit grouping 1
Function TS0J511()
   /* ------------------------------------------------------------*/

                    /* EDIT GROUPING 1*/

       /* Edits;*/
         /* 1) End date*/
         /* 2) Shipment number*/
         /* 3) Begin date*/

   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
     /* check valid end date entered*/
   /* ------------------------------------------------------------*/

  if (TS0JM001.TSNENDDT != " ") /* if date entered*/
    set TA2REC empty; /* Clear working record*/
    TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
    TA2REC.TA2GRTYP = "A"; /* move date type to record*/
    TA2REC.TA2GRGA = TS0JM001.TSNENDDT; /* move date*/
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
    if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
      TS0JW01.TS0JWEND = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      TS0JW01.TS0JWEDT = TA2REC.TA2GRGA; /* save date in mmddyy*/
    else /* Invalid date entered*/
      converseLib.validationFailed(57); /* Error message*/
      TS0JW01.TS0JWPSW = "Y"; /* indicate problem*/
      TS0JM001.XXXPRCNM = "TS0J511"; /* Process name*/
      set TS0JM001.TSNENDDT cursor, modified, bold;
    end
  else
    converseLib.validationFailed(57); /* Error message*/
    TS0JW01.TS0JWPSW = "Y"; /* indicate problem*/
    TS0JM001.XXXPRCNM = "TS0J511"; /* Process name*/
    set TS0JM001.TSNENDDT cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
     /* check that shipment number is entered*/
   /* ------------------------------------------------------------*/

  if (TS0JM001.TSFSHPNB == " ") /* if ship number is missing*/
    converseLib.validationFailed(85); /* Error message*/
    TS0JW01.TS0JWPSW = "Y"; /* indicate problem*/
    TS0JM001.XXXPRCNM = "TS0J511"; /* Process name*/
    set TS0JM001.TSFSHPNB cursor, modified, bold;
  else
    TS0JW01.TSFSHPNB = TS0JM001.TSFSHPNB; /* save value*/
  end

   /* ------------------------------------------------------------*/
     /* check valid beg date entered*/
   /* ------------------------------------------------------------*/

  if (TS0JM001.TSNBEGDT != " ") /* if date entered*/
    set TA2REC empty; /* Clear working record*/
    TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
    TA2REC.TA2GRTYP = "A"; /* move date type to record*/
    TA2REC.TA2GRGA = TS0JM001.TSNBEGDT; /* move date*/
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
    if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
      TS0JW01.TS0JWBEG = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      TS0JW01.TS0JWBDT = TA2REC.TA2GRGA; /* save date in mmddyy*/
    else /* Invalid date entered*/
      converseLib.validationFailed(57); /* Error message*/
      TS0JW01.TS0JWPSW = "Y"; /* indicate problem*/
      TS0JM001.XXXPRCNM = "TS0J511"; /* Process name*/
      set TS0JM001.TSNBEGDT cursor, modified, bold;
    end
  else
    converseLib.validationFailed(57); /* Error message*/
    TS0JW01.TS0JWPSW = "Y"; /* indicate problem*/
    TS0JM001.XXXPRCNM = "TS0J511"; /* Process name*/
    set TS0JM001.TSNBEGDT cursor, modified, bold;
  end


end // end TS0J511

// Edit grouping 2
Function TS0J512()
   /* ------------------------------------------------------------*/

                    /* EDIT GROUPING 1*/

       /* Edits;*/
         /* 1) Craft*/
         /* 2) Carrier*/
         /* 3) Bill of Lading*/

   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
     /* check that craft number is entered*/
   /* ------------------------------------------------------------*/

  if (TS0JM001.TS5CRAFT == " ") /* if craft number is missing*/
    converseLib.validationFailed(48); /* Error message*/
    TS0JW01.TS0JWPSW = "Y"; /* indicate problem*/
    TS0JM001.XXXPRCNM = "TS0J512"; /* Process name*/
    set TS0JM001.TS5CRAFT cursor, modified, bold;
  else
    TS0JW01.TS5CRAFT = TS0JM001.TS5CRAFT; /* save value*/
  end

   /* ------------------------------------------------------------*/
     /* check that carrier number is entered*/
   /* ------------------------------------------------------------*/

  if (TS0JM001.TSACARCD == " ") /* if carr number is missing*/
    converseLib.validationFailed(39); /* Error message*/
    TS0JW01.TS0JWPSW = "Y"; /* indicate problem*/
    TS0JM001.XXXPRCNM = "TS0J512"; /* Process name*/
    set TS0JM001.TSACARCD cursor, modified, bold;
  else
    TS0JW01.TSACARCD = TS0JM001.TSACARCD; /* save value*/
  end

   /* ------------------------------------------------------------*/
     /* check that bol number is entered*/
   /* ------------------------------------------------------------*/

  if (TS0JM001.TSFBOL == " ") /* if bol number is missing*/
    converseLib.validationFailed(84); /* Error message*/
    TS0JW01.TS0JWPSW = "Y"; /* indicate problem*/
    TS0JM001.XXXPRCNM = "TS0J512"; /* Process name*/
    set TS0JM001.TSFBOL cursor, modified, bold;
  else
    TS0JW01.TSFBOL = TS0JM001.TSFBOL; /* save value*/
  end


end // end TS0J512

// Check date span error
Function TS0J513()
   /* ------------------------------------------------------------*/

            /* CHECK DATE SPAN AND OVERLAP*/

   /* 1) Check that end date is >= begin date.*/
   /* 2) Check that not > 31 days between begin and end dates.*/

   /* Each of these checks will only be performed if the previous*/
      /* check has been successfully completed with no errors.*/

   /* ------------------------------------------------------------*/

  if (TS0JW01.TS0JWEND < TS0JW01.TS0JWBEG) /* if end date LT beg date*/
    TS0JW01.TS0JWPSW = "Y"; /* indicate error*/
    converseLib.validationFailed(58); /* error 'must be >=' message*/
    TS0JM001.XXXPRCNM = "TS0J513"; /* process name*/
    set TS0JM001.TSNENDDT cursor, modified, bold;
  end

  if (TS0JW01.TS0JWPSW == "N") /* if no errors*/

     /* check date span < 32 for ETA dates*/

    set TA2REC empty; /* clear record*/
    TA2REC.TA2DTOPT = "DAYSDIFF"; /* move in option field*/
    TA2REC.TA2DBDFN = TS0JW01.TS0JWBEG; /* begn date*/
    TA2REC.TA2DBDTN = TS0JW01.TS0JWEND; /* to date*/

    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* call date routine*/

    if (TA2REC.TA2RTNCD == 0) /* if no errors from call*/
      if (TA2REC.TA2DBDDN >= 32) /* if diff between dates > 30*/
        TS0JW01.TS0JWPSW = "Y"; /* indicate error*/
        converseLib.validationFailed(68); /* error 'range too large'*/
        TS0JM001.XXXPRCNM = "TS0J513"; /* process name*/
        set TS0JM001.TSNBEGDT cursor, modified, bold;
        set TS0JM001.TSNENDDT modified, bold;
      end
    end
  end


end // end TS0J513

// Select shipment for validity
Function TS0J514()
   /* ------------------------------------------------------------*/

            /* SELECT THE SHIPMENT FOR VALIDITY*/

       /* 1) Select the set of shipments*/

   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
     /* If no errors, then select the shipment for validity*/
       /* **  This is a select set, so if more than one shipment*/
           /* is returned, then an error is set and the user is*/
           /* instructed to enter thru an inquiry application.*/
   /* ------------------------------------------------------------*/

  TSFREC.TSFBOL = TS0JW01.TSFBOL; /* move in keys for select*/
  TSFREC.TSACARCD = TS0JW01.TSACARCD;
  TSFREC.TS5CRAFT = TS0JW01.TS5CRAFT;
  TSFREC.TSFSHPNB = TS0JW01.TSFSHPNB;
  TSNREC.TSNBEGDT = TS0JW01.TS0JWBEG; /* move in dates*/
  TSNREC.TSNENDDT = TS0JW01.TS0JWEND;

  TS0JS01(); /* select the set*/
  TS0JW01.TS0JWIXM = 0; /* set index*/
  TS0JW01.TS0JWSWC = "N"; /* set end of fetch switch*/
  while (TS0JW01.TS0JWSWC == "N") /* while rows exist to fetch*/
    TS0JS02(); /* fetch the row*/
    if (SQLCA.VAGen_SQLCODE == 0) /* if fetch was successful*/
      TS0JW01.TS0JWIXM = TS0JW01.TS0JWIXM + 1; /* increment index*/
    end
  end
  TS0JS03(); /* close the selected set*/

  if (TS0JW01.TS0JWIXM == 1) /* if only one row returned from fetch*/
    if (TSFREC.YSSCD == "IP") /* if the shipment is 'in-process'*/
      converseLib.validationFailed(59); /* set invalid shipment error*/
      TS0JW01.TS0JWPSW = "Y"; /* set error switch*/
      TS0JM001.XXXPRCNM = "TS0J514"; /* process name*/
      set TS0JM001.TSFBOL cursor, modified, bold; /* highlight fields*/
      set TS0JM001.TSACARCD modified, bold;
      set TS0JM001.TS5CRAFT modified, bold;
      set TS0JM001.TSFSHPNB modified, bold;
      set TS0JM001.TSNBEGDT modified, bold;
      set TS0JM001.TSNENDDT modified, bold;
      TS0JW01.TSFBOL = " "; /* clear save fields*/
      TS0JW01.TSACARCD = " ";
      TS0JW01.TS5CRAFT = " ";
      TS0JW01.TSFSHPNB = " ";
    else
       /* Select the cpl headers without detail for this shipment*/

      TS0JS20(); /* select the set w/o detail*/
      if (SQLCA.VAGen_SQLCODE == 0) /* if select ok*/
        TS0JS21(); /* fetch the row*/
        if (SQLCA.VAGen_SQLCODE == 0) /* if fetch was successful*/
           /* continue on*/
        else
          if (SQLCA.VAGen_SQLCODE == 100 /* if none found*/
           && TS0JM001.TS0JMOPT == "5")  /* and option 5 is picked*/
            converseLib.validationFailed(159); /* option invalid for shipment*/
            TS0JW01.TS0JWPSW = "Y"; /* set error switch*/
            TS0JM001.XXXPRCNM = "TS0J514"; /* process name*/
            set TS0JM001.TS0JMOPT cursor, modified, bold;
          end
        end
        TS0JS22(); /* close the selected set*/
      end

      TSWREC.XGPCD = TSFREC.XGPCD; /* save the gpc code*/
      TS0JM001.TSFSHPID = TSFREC.TSFSHPID; /* move shipid to map*/
      TS0JM001.TSFBOL = TSFREC.TSFBOL;
      TS0JM001.TSACARCD = TSFREC.TSACARCD;
      TS0JM001.TS5CRAFT = TSFREC.TS5CRAFT;
      TS0JM001.TSFSHPNB = TSFREC.TSFSHPNB;
      TS0JW01.TSFSHPID = TSFREC.TSFSHPID; /* save shipid*/
      TS0JW01.TSFBOL = TSFREC.TSFBOL;
      TS0JW01.TSACARCD = TSFREC.TSACARCD;
      TS0JW01.TS5CRAFT = TSFREC.TS5CRAFT;
      TS0JW01.TSFSHPNB = TSFREC.TSFSHPNB;
    end
  else
    if (TS0JW01.TS0JWIXM == 0) /* if no rows returned from fetch*/
      converseLib.validationFailed(59); /* set invalid shipment error*/
      TS0JW01.TS0JWPSW = "Y"; /* set error switch*/
      TS0JM001.XXXPRCNM = "TS0J514"; /* process name*/
      set TS0JM001.TSFBOL cursor, modified, bold; /* highlight fields*/
      set TS0JM001.TSACARCD modified, bold;
      set TS0JM001.TS5CRAFT modified, bold;
      set TS0JM001.TSFSHPNB modified, bold;
      set TS0JM001.TSNBEGDT modified, bold;
      set TS0JM001.TSNENDDT modified, bold;
      TS0JW01.TSFBOL = " "; /* clear save fields*/
      TS0JW01.TSACARCD = " ";
      TS0JW01.TS5CRAFT = " ";
      TS0JW01.TSFSHPNB = " ";
    else
      converseLib.validationFailed(151); /* set invalid shipment error*/
      TS0JW01.TS0JWPSW = "Y"; /* set error switch*/
      TS0JM001.XXXPRCNM = "TS0J514"; /* process name*/
      set TS0JM001.TSFBOL cursor; /* set cursor*/
      TS0JW01.TSFBOL = " "; /* clear save fields*/
      TS0JW01.TSACARCD = " ";
      TS0JW01.TS5CRAFT = " ";
      TS0JW01.TSFSHPNB = " ";
    end
  end


end // end TS0J514

// Process valid input request
Function TS0J600()
   /* ------------------------------------------------------------*/

             /* PROCESS VALID INPUT REQUESTS*/

   /* 1) If option 1 is picked, move TS0X to current application.*/
   /* 2) If option 2 is picked, move TS0Y to current application.*/
   /* 3) If option 3 is picked, move TS0Z to current application.*/
   /* 4) If option 4 is picked, move TS01 to current application.*/
   /* 5) If option 5 is picked, move TS0V to current application.*/
   /* 6) If option 6 is picked, cycle to the next shipment in*/
      /* the pass shipment array.*/
   /* 7) If option 7 is picked, give a delete warning and if the*/
      /* warning has already been given, delete the shipment.*/
   /* 8) If option 9 is picked, give a duplicate warning and if*/
      /* the warning has already been given, duplicate the*/
      /* shipment.*/
   /* ------------------------------------------------------------*/

  TSWREC.TSFSHPID = TS0JM001.TSFSHPID; /* move in data*/
  TSWREC.TSFBOL = TS0JM001.TSFBOL;
  TSWREC.TSACARCD = TS0JM001.TSACARCD;
  TSWREC.TS5CRAFT = TS0JM001.TS5CRAFT;
  TSWREC.TSFSHPNB = TS0JM001.TSFSHPNB;
  TSWREC.TSEDEST = TSFREC.TSEDEST;
  TSWREC.XWHCD = TSFREC.XWHCD;
  TSWREC.YSSCD = TSFREC.YSSCD;
  if (TSFREC.YSTCD == "DD") /* If domestic shipment*/
    TSWREC.TSWDOMFL = "Y"; /* set domestic flag*/
  else
    TSWREC.TSWDOMFL = "N";
  end
   /* bnagar change begin - 12/11/01*/
  if ((TS0JM001.TS0JMOPT == "3" ||  /* if option 3 picked*/
  TS0JM001.TS0JMOPT == "5" ||       /* if option 5 picked*/
  TS0JM001.TS0JMOPT == "7" ||       /* if option 7 picked*/
  TS0JM001.TS0JMOPT == "9"))        /* if option 9 picked*/
    TS0J-51010(); /* select the dest location*/
    if ((TSCREC.XCTCD == "USA" ||  /* usa destination shps*/
    TSCREC.XCTCD == "CANA" ||      /* canada destination shps*/
    TSCREC.XCTCD == "GUAM" ||      
    TSCREC.XCTCD == "USVI" ||      
    TSCREC.XCTCD == "PUER" ||      
    TSCREC.XCTCD == "JAMA" ||      
    TSCREC.XCTCD == "BAHA" ||      
    TSCREC.XCTCD == "SAIP"))       /**/
      converseLib.validationFailed(452); /* no access to USA/Canada shp*/
      TS0JM001.XXXPRCNM = "TS0J600"; /* process name*/
      TS0JW01.TS0JWPSW = "Y"; /* set error switch*/
      set TS0JM001.TSFSHPID cursor, modified, bold; /* highlighted fi*/
      set TS0JM001.TSFBOL protect, bold;
      set TS0JM001.TSACARCD protect, bold;
      set TS0JM001.TS5CRAFT protect, bold;
      set TS0JM001.TSFSHPNB protect, bold;
      return;
    end
  end
   /* bnagar change end   - 12/11/01*/
  if (TS0JM001.TS0JMOPT == "1") /* if option 1 picked*/
    COMMAREA.CATOAP = "TS0X"; /* Go to TS0X*/
  else
    if (TS0JM001.TS0JMOPT == "2") /* if option 2 picked*/
      COMMAREA.CATOAP = "TS0Y"; /* Go to TS0Y*/
    else
      if (TS0JM001.TS0JMOPT == "3") /* if option 3 picked*/
        COMMAREA.CATOAP = "TS0Z"; /* Go to TS0Z*/
      else
        if (TS0JM001.TS0JMOPT == "4") /* if option 4 picked*/
          COMMAREA.CATOAP = "TS01"; /* Go to TS01*/
        else
          if (TS0JM001.TS0JMOPT == "5") /* if option 5 picked*/
            COMMAREA.CATOAP = "TS0V"; /* Go to TS0V*/
          else
            if (TS0JM001.TS0JMOPT == "6") /* if option 6 picked*/
              TSWREC.TSWSHPOS = TSWREC.TSWSHPOS + 1;
              TS0JM001.TS0JMOPT = " "; /* move space to option field*/
              TS0JW01.TS0JWSWR = "Y"; /* request data*/
            else
              if (TS0JM001.TS0JMOPT == "7") /* if option 7 picked*/
                if (TS0JW01.TS0JWWFL == "N") /* if no warning set*/
                  TS0JM001.TS0JMMSG = TS0JW01.TS0JMMSG;
                  TS0JW01.TS0JWWFL = "Y"; /* set warn flag*/
                else
                  if (TSFREC.YSSCD != "TN") /* / If not Tentatives*/
                    TS0J650(); /* Check for Receipts*/
                  end
                  TS0J620(); /* delete the shipment*/
                  TS0JM001.TS0JMOPT = " ";
                                   /* move space to option field*/
                  TS0JW01.TS0JWWFL = "N"; /* reset warn flag*/
                  if (TSWREC.TSWINQFL == "Y") /* if inquiry flag set*/
                    TSWREC.TSWSHPOS = TSWREC.TSWSHPOS + 1;
                    TS0JW01.TS0JWSWR = "Y"; /* request data*/
                  end
                  if (TSFREC.YSSCD == "TN") /* if tenative shipment*/
                    set TS0JM001 initial; /* clear the map*/
                    TS0JW01.TSFSHPID = 0; /* clear ws fields*/
                    TS0JW01.TSFBOL = " ";
                    TS0JW01.TSACARCD = " ";
                    TS0JW01.TS5CRAFT = " ";
                    TS0JW01.TSFSHPNB = " ";
                  end
                end
              else
                if (TS0JM001.TS0JMOPT == "9") /* if option 9 picked*/
                  if (TS0JW01.TS0JWWFL == "N") /* if no warning set*/
                    TS0JM001.TS0JMMSG = TS0JW01.TS0JMMSG;
                    TS0JW01.TS0JWWFL = "Y"; /* set warn flag*/
                  else
                    TS0J630(); /* duplicate the shipment*/
                    if (TSWREC.TSWINQFL == "Y") /* if inquiry flag set*/
                      TSWREC.TSWSHPID[TSWSHPOS] = TSFREC.TSFSHPID;
                    end
                    TS0JM001.TS0JMOPT = " "; /* set option blank*/
                    TS0JW01.TS0JWWFL = "N"; /* reset warn flag*/
                  end
                end
              end
            end
          end
        end
      end
    end
  end


  if (TS0JM001.TS0JMOPT == "1" /* if option 1 picked*/
   || TS0JM001.TS0JMOPT == "2" /* or option 2 picked*/
   || TS0JM001.TS0JMOPT == "3" /* or option 3 picked*/
   || TS0JM001.TS0JMOPT == "4" /* or option 4 picked*/
   || TS0JM001.TS0JMOPT == "5") /* or option 5 picked*/
    COMMAREA.CAUSERA = TSWREC.CAUSERA; /* move pass data*/

    XSTSS01(); /* transfer to application*/

    TS0JW01.TS0JWPSW = "Y"; /* if trans fails then error*/
    TS0JM001.XXXPRCNM = "TS0J600"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end


end // end TS0J600

// Delete entire shipment
Function TS0J620()
   /* ------------------------------------------------------------*/

                  /* DELETE ENTIRE SHIPMENT*/

      /* 1) Delete the container packing list.*/
      /* 2) Delete the shipment containers.*/
      /* 3) Delete the shipment header.*/

   /* ------------------------------------------------------------*/

  TS0J621(); /* delete the container packing lists*/

  TS0J622(); /* delete the containers*/

  if (TS0JW01.TS0JWPSW == "N") /* if all other deletes are ok*/
    TS0J623(); /* delete the shipment header*/
  end

end // end TS0J620

// Delete cntnr packlst & vplaux
Function TS0J621()
   /* ------------------------------------------------------------*/

              /* DELETE THE CONTAINER PACKING LIST*/

      /* 1) Select the set of container packing list rows.*/
      /* 2) Fetch all container packing list row keys into ws.*/
      /* 3) While container packing list rows exist in ws.*/
         /* a) get the container packing list.*/
         /* b) if the detail flag is set to 'yes'.*/
              /* i) select the set of cartons*/
             /* ii) while cartons exist to fetch*/
                 /* - fetch the carton*/
                 /* - delete the carton*/
            /* iii) close the selected set of cartons*/
         /* c) take backup of container packing list.*/
         /* d) delete the container packing list.*/
      /* 4) Close the selected set of container packing lists.*/

    /* If any errors occur in the process of selecting,*/
    /* fetching, deleting, and closing the database table rows,*/
    /* the errors will be handled in the appropriate statement*/
    /* group and 'EZEFLO' will be used to exit and display the*/
    /* map.*/

   /* ------------------------------------------------------------*/

  TS0JW01.TS0JWSW1 = "N"; /* set up end of set switches*/
  TS0JW01.TS0JWSW2 = "N";

  TS0JS04(); /* select the set of container packing*/
                                   /* lists*/

  TS0JW01.TS0JWIXM = 1; /* initialize counter*/
  while (TS0JW01.TS0JWSW1 == "N") /* while not end of set cpl*/
    TS0JS05(); /* fetch the cpl row*/
    TS0JW01.TS0JWIXM = TS0JW01.TS0JWIXM + 1; /* increment counter*/
  end
  TS0JW01.TS0JWLM1 = TS0JW01.TS0JWIXM - 1;

  TS0JS06(); /* close the selected set of container*/
                                   /* pack list rows*/

  TS0JW01.TS0JWIXM = 1; /* initialize counter*/
  while (TS0JW02.TSFSHPID[TS0JWIXM] > 0 /* while not end of set cpl*/
   && TS0JW01.TS0JWIXM <= TS0JW01.TS0JWLM1) /* and less than limit*/
    if (TS0JW02.TSIDETFL[TS0JWIXM] == "Y") /* if carton detail exists*/

      TS0JS07(); /* select the set of cartons*/

      TS0JW01.TS0JWIXW = 1; /* initialize counter*/
      TS0JW01.TS0JWSW2 = "N"; /* initialize flag*/
      while (TS0JW01.TS0JWSW2 == "N") /* while not end of set cartons*/
        TS0JS08(); /* fetch the carton row*/
        TS0JW01.TS0JWIXW = TS0JW01.TS0JWIXW + 1; /* increment counter*/
      end
      TS0JW01.TS0JWLM2 = TS0JW01.TS0JWIXW - 1;

      TS0JS10(); /* close the selected carton set*/

      TS0JW01.TS0JWIXW = 1; /* initialize counter*/
      while (TS0JW03.TSIPLNBR[TS0JWIXW] > 0 /* while not end of cartons*/
       && TS0JW01.TS0JWIXW <= TS0JW01.TS0JWLM2) /* and less than limit*/
        TS0JS09(); /* delete the carton*/
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.commit();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
         /* commit db deletions*/
        TS0JW01.TS0JWIXW = TS0JW01.TS0JWIXW + 1; /* increment counter*/
      end

    end
    /* **************** TCS changes begin  here *********************/

    /* call TS4200 to take backup before deleting VCPLHD03 rows*/

    set WTS4201 empty;
    WTS4201.TS4201-DELETE-TYP = "D2";
    TS0JS99(); /* call TS4200 to take backup*/

    /* **************** TCS changes end    here *********************/
    TS0JS11(); /* delete the container pack list row*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* commit db deletions*/
    set TS0JW03 empty; /* clear WS for cartons*/
    TS0JW01.TS0JWIXM = TS0JW01.TS0JWIXM + 1; /* increment counter*/
  end

  TS0J625(); /* delete vplaux01 rows*/
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value

end // end TS0J621

// Delete the containers
Function TS0J622()
   /* ------------------------------------------------------------*/

                 /* DELETE THE CONTAINERS*/

      /* 1) Select the set of container rows.*/
      /* 2) While container rows exist to fetch.*/
         /* a) fetch the container.*/
         /* b) take backup of container.*/
         /* c) delete the container.*/
      /* 3) Close the selected set of containers.*/

    /* If any errors occur in the process of selecting,*/
    /* fetching, deleting, and closing the database table rows,*/
    /* the errors will be handled in the appropriate statement*/
    /* group and 'EZEFLO' will be used to exit and display the*/
    /* map.*/

   /* ------------------------------------------------------------*/

  TS0JW01.TS0JWSW1 = "N"; /* set up end of set switch*/

  TS0JS12(); /* select the set of containers*/

  TS0JS13(); /* fetch the first container*/

  while (TS0JW01.TS0JWSW1 == "N") /* while not end of set containers*/
    /* **************** TCS changes begin  here *********************/

    /* call TS4200 to take backup before deleting VCNTNR01 rows*/

    set WTS4201 empty;
    WTS4201.TS4201-DELETE-TYP = "D3";
    TS0JS99(); /* call TS4200 to take backup*/

    /* **************** TCS changes end    here *********************/
    TS0JS14(); /* delete the container row*/
    TS0JS13(); /* fetch the next container row*/
  end

  TS0JS15(); /* close the selected set of container rows*/

  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* commit all db deletions*/


end // end TS0J622

// Delete the shpmnt header tbls
Function TS0J623()
   /* ------------------------------------------------------------*/

                /* DELETE THE SHIPMENT HEADER*/

         /* 1) Select the shipment header.*/
         /* 2) If shipment header address indicator is yes,*/
            /* delete the address row.*/
         /* 3) If shipment header text indicator is yes,*/
            /* delete the text rows.*/
         /* 4) Put the shipment header into a canceled status.*/

   /* ------------------------------------------------------------*/

  TS0JS16(); /* select the shipment*/

  if (TSFREC.TSFADRID == "Y") /* if address exists*/
    TS0JS17(); /* delete the address*/
  end

  if (TSFREC.YSSCD == "TN") /* if tenative, delete shipment header*/

    if (TSFREC.TSFTXTID == "Y") /* if text exists*/
      TS0JW01.TS0JWIXM = 1; /* set index*/
      while (TS0JW01.TS0JWIXM <= 2) /* until end of text lines*/
        TS0JS18(); /* delete the text*/
        TS0JW01.TS0JWIXM = TS0JW01.TS0JWIXM + 1; /* increment*/
      end
    end

    /* **************** TCS changes begin  here *********************/

    /* call TS4200 to take backup before deleting VSHPHD01 row*/

    set WTS4201 empty;
    WTS4201.TS4201-DELETE-TYP = "D4";
    TS0JS99(); /* call TS4200 to take backup*/

    /* **************** TCS changes end    here *********************/
    TS0JS19(); /* delete the shipment header*/

  else

    TS0J-62310(); /* update the shipment header*/
    TS0J-62330(); /* determine which text to update*/
    TS0J-62320(); /* update shipment text*/

  end


end // end TS0J623

// Delete the Vplaux01 rows
Function TS0J625()
   /* ------------------------------------------------------------*/

                /* DELETE THE vplaux01 rows*/

         /* 1) Delete the vplaux01 rows.*/

   /* ------------------------------------------------------------*/

  VPLAUX01.TS-NIKE-SHP-ID = TSWREC.TSFSHPID;
  VPLAUX01.TS-NIKE-PL-NBR = TSWREC.TSIPLNBR;

  call "VPLAUX01" ("D1", SQLCA, VPLAUX01) {isNoRefresh = yes, isExternal = yes}; /* Update row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0J625"; /* Process name*/
      TA1REC.TA1LOC = "DELETE THE TABLE ROW ";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VPLAUX01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JW01.TS0JWPSW = "Y"; /* Indicate not available*/
      TS0JM001.XXXPRCNM = "TS0J625"; /* Process name*/

    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occured*/
    exit stack; /* exit to redisplay the map*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* commit db deletion*/
  end


end // end TS0J625

// Duplicate entire shipment
Function TS0J630()

                  /* DUPLICATE ENTIRE SHIPMENT*/

       /* 1) Obtain the next available nike ship id.*/
       /* 2) Select shipment header to be copied and add new*/
          /* shipment header.*/
       /* 3) Select the set of containers to be copied and*/
          /* add new container.*/
       /* 4) Select the set of packing lists to be copied*/
          /* and add new packing lists.*/
       /* 5) Select the set of packing list items to be copied*/
          /* and add new packing list items.*/
       /* 6) Select the set of Vplaux  rows  to be copied*/
          /* and add new Vplaux  rows.*/

   /* ------------------------------------------------------------*/

  TS0J631(); /* obtain next nike ship id*/

  TS0J632(); /* add shipment header*/

  TS0J633(); /* add comment line to new shipment*/

  TS0J640(); /* add comment line to old shipment*/
  TSFREC.TSFSHPID = TS0JW01.TSFSHPID; /* move in new shpid*/

  TS0JS12(); /* select set of container rows*/
  TS0JW01.TS0JWSW1 = "N"; /* end of fetch switch*/
  while (TS0JW01.TS0JWSW1 == "N") /* while containers exist*/
    TS0JS13(); /* fetch next container row*/
    TS0J634(); /* add new container row*/
  end
  TS0JS15(); /* close container cursor*/

  TS0JS23(); /* select set of cplhd rows*/
  TS0JW01.TS0JWSW1 = "N"; /* end of fetch switch*/
  while (TS0JW01.TS0JWSW1 == "N") /* while cplhd rows exist*/
    TS0JS24(); /* fetch next cplhd row*/
    TS0J635(); /* add new cplhd row*/
  end
  TS0JS25(); /* close cplhd cursor*/

  TS0JS29(); /* select set of vplaux rows*/
  TS0JW01.TS0JWSW1 = "N"; /* end of fetch switch*/
  while (TS0JW01.TS0JWSW1 == "N") /* while vplaux rows exist*/
    TS0JS30(); /* fetch next vplaux row*/
    if (SQLCA.VAGen_SQLCODE != 100)
      VPLAUX01.TS-NIKE-SHP-ID = TS0JW01.TSFSHPID; /* move in new shpid*/
      TS0J637(); /* add new vplaux01 row*/
    end
  end
  TS0JS31(); /* close vplaux cursor*/
  TS0JS26(); /* select set of cplit rows*/
  TS0JW01.TS0JWSW1 = "N"; /* end of fetch switch*/
  while (TS0JW01.TS0JWSW1 == "N") /* while cplit rows exist*/
    TS0JS27(); /* fetch next cplit row*/
    TS0J636(); /* add new cplit row*/
  end
  TS0JS28(); /* close cplit cursor*/

  if (TS0JW01.TS0JWPSW == "N") /* if all adds are OK*/
    converseLib.validationFailed(44); /* data base update successful*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* reset all db modifications*/
    converseLib.validationFailed(11); /* data in use - try again*/
  end

end // end TS0J630

// Get next Nike shipment id
Function TS0J631()
   /* ------------------------------------------------------------*/

               /* SELECT NEXT NIKE SHIPMENT NUMBER*/

   /* Select the shipment Number.*/
   /* If any error, indicate a system error.*/

   /* ------------------------------------------------------------*/

   /* *******************************************/
   /* *********** get current date **************/
   /* ************ and time *********************/
   /* *******************************************/

  XX0XS01();
  TSQREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* move in change date*/
  TSQREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* move in change time*/

  call "IO2530" ("G ", SQLCA, TSQREC) {isNoRefresh = yes, isExternal = yes}; /* Update row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    converseLib.validationFailed(09); /* Indicate not available*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate not available*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TS0JW01.TS0JWPSW = "Y"; /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TS0JW01.TS0JWPSW = "Y"; /* Indicate not available*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      end
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0J631"; /* Process name*/
      TA1REC.TA1LOC = "SELECT A TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VTSCTL01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JM001.XXXPRCNM = "TS0J631"; /* Process name*/

    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if errors occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0J631

// Add the shipment header row
Function TS0J632()
   /* ------------------------------------------------------------*/

                    /* ADD TO DTRANS.VSHPHD01*/

   /* This module adds a table row to the shipment header*/
   /* table.*/
   /* It will return a system error if an unexpected return*/
     /* code is received.*/
   /* ------------------------------------------------------------*/

  TSFREC.TSFSHPID = TSQREC.TSQNBRNX; /* move in new ship id*/
  TSFREC.XGPCD = TSWREC.XGPCD; /* move in gpc code*/
  TSFREC.TSFRECPT = 0; /* last receipt date*/
  TSFREC.TSFCCLDT = 0; /* customs clear date*/
  TSFREC.TS-TOT-PPD-SCHG = 0; /* total ship charges pre-paid*/
  TSFREC.TS-TOT-COLL-SCHG = 0; /* total ship charges collect*/
  if (TSFREC.TS5CRAFT == "AFRT") /* if air freight;*/
    TSFREC.TSFTKG = .01; /* move .01 to total kg*/
  else
    TSFREC.TSFTKG = 0; /* move 0 to total kg*/
  end
  TSFREC.TSFTCBM = 0; /* total cbm*/
  TSFREC.XRECD = "  "; /* receipt exception code*/
  TSFREC.TSFTXTID = "Y"; /* text exists flag*/

  if (TSFREC.TSFCHGFL == " ") /* if charges entered flag blank*/
    TSFREC.TSFCHGFL = "N"; /* default to no*/
  end

   /* *******************************************/
   /* *********** get current date **************/
   /* ************ and time *********************/
   /* *******************************************/

  XX0XS01();
  TS0JW01.TS0JWCDT = XX0XW01.XX0XWDAT; /* save current date ccyymmdd*/

  TSFREC.ZZZCHGDT = TS0JW01.TS0JWCDT; /* change date*/
  TSFREC.ZZZSDT = TS0JW01.TS0JWCDT; /* Set up date*/
  TSFREC.TS-ADVN-SHP-DT = TS0JW01.TS0JWCDT;
  TSFREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  TSFREC.ZZZSTM = XX0XW01.XX0XWTIM; /* Set up time*/
  TSFREC.ZZZCHGCT = 0; /* Change count*/
  TSFREC.XXX-USER-ID = COMMAREA.CAUSERID;

  call "IO2540" ("A ", SQLCA, TSFREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* if good return code*/
   || SQLCA.VAGen_SQLCODE == 100)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0J632"; /* Process name*/
    TA1REC.TA1LOC = "ADD TABLE ROW";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSHPHD01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    TS0JM001.XXXPRCNM = "TS0J632"; /* Process name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    exit stack;

  end

end // end TS0J632

// Add comment to dtrans.vtstxt01
Function TS0J633()
   /* ------------------------------------------------------------*/

        /* Add a comment in the dtrans.vtstxt01 table for*/
          /* the new nike ship id*/

   /* ------------------------------------------------------------*/

  TSRREC.TSFSHPID = TSFREC.TSFSHPID; /* move in shpid*/
  TS0JW01.TSFSHPID = TSFREC.TSFSHPID; /* move in shpid*/
  TSRREC.TSRSEQNB = 1; /* set seq nmbr to 1*/
  TS0JW01.TS0JWTX1 = "DUPLICATE OF";
  TS0JW01.TS0JWTX2 = " ";
  TS0JW01.TS0JWTX3 = TSWREC.TSFSHPID; /* old ship id*/
  TS0JW01.TS0JWTX4 = " BY USER ";
  TS0JW01.TS0JWTX5 = COMMAREA.CAUSERID; /* userid*/
  TS0JW01.TS0JWTX6 = " ";
  TSRREC.TSRTEXT = TS0JW01.TS0JWTXT;

   /* *******************************************/
   /* *********** get current date **************/
   /* ************ and time *********************/
   /* *******************************************/

  TSRREC.ZZZCHGDT = TS0JW01.TS0JWCDT; /* change date*/
  TSRREC.ZZZSDT = TS0JW01.TS0JWCDT; /* Set up date*/
  TSRREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  TSRREC.ZZZCHGCT = 0; /* Change count*/

  call "IO2690" ("A ", SQLCA, TSRREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* if good return code*/
   || SQLCA.VAGen_SQLCODE == 100)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0J633"; /* Process name*/
    TA1REC.TA1LOC = "ADD TABLE ROW";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VTSTXT01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    TS0JM001.XXXPRCNM = "TS0J633"; /* Process name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    exit stack;

  end

end // end TS0J633

// Add container row
Function TS0J634()
   /* ------------------------------------------------------------*/

                    /* ADD CONTAINER ROW*/

    /* 1) Move in appropriate fields to TSHREC*/
    /* 2) Add the container row*/

   /* ------------------------------------------------------------*/

  if (TS0JW01.TS0JWSW1 == "Y") /* if end of set*/
     /* next sentence*/
  else

    TSHREC.TSFSHPID = TSFREC.TSFSHPID; /* Nike shipment number*/
    TSHREC.TSHRCTDT = 0; /* container receipt date*/
    TSHREC.TSHTCBM = .01; /* container cbm*/
    TSHREC.TSHTKG = 0; /* container kg*/
    TSHREC.SL1RCRNO = 0; /* RCV report number*/
    TSHREC.XRECD = "  "; /* receipt exception code*/

    /* *******************************************/
    /* *********** get current date **************/
    /* ************ and time *********************/
    /* *******************************************/

    XX0XS01();
    TSHREC.ZZZSDT = XX0XW01.XX0XWDAT; /* move in set up date*/
    TSHREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* container change date*/
    TSHREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* move in change time*/
    TSHREC.ZZZCHGCT = 0; /* initialize change count*/
    TSHREC.XXX-USER-ID = COMMAREA.CAUSERID;

    call "IO2590" ("A ", SQLCA, TSHREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

    if (SQLCA.VAGen_SQLCODE == 0) /* if good return code*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == -911 /* Resource not available*/
       || SQLCA.VAGen_SQLCODE == -904)
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0J634"; /* Process name*/
      TA1REC.TA1LOC = "ADD TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCNTNR01"; /* Table view name*/
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
      TS0JM001.XXXPRCNM = "TS0J634"; /* Process name*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      exit stack;
    end
  end

end // end TS0J634

// Add packing list row
Function TS0J635()
   /* ------------------------------------------------------------*/

                    /* ADD CPLHD ROW*/

    /* 1) Move in appropriate fields to vcplhd04*/
    /* 2) Add the cplhd row*/

   /* ------------------------------------------------------------*/

  if (TS0JW01.TS0JWSW1 == "Y") /* if end of set*/
     /* next sentence*/
  else

    VCPLHD04.TS-NIKE-SHP-ID = TSFREC.TSFSHPID; /* Nike shipment number*/

    if (TSFREC.YSSCD == "TN")
      VCPLHD04.TS-CPL-STAT-CD = "TN"; /* tenative shipment status*/
    else
      VCPLHD04.TS-CPL-STAT-CD = "ER"; /* cplhd status*/
    end

    VCPLHD04.TS-PL-QTOT-RCV = 0; /* receive quantity*/
    VCPLHD04.TS-CPL-QTOT-RCV1 = 0; /* receive quantity*/
    VCPLHD04.TS-CPL-QTOT-RCV2 = 0; /* receive quantity*/
    VCPLHD04.TS-CPL-QTOT-RCV3 = 0; /* receive quantity*/
    VCPLHD04.TS-CPL-QTOT-RCV4 = 0; /* receive quantity*/
    VCPLHD04.TS-CPL-QTOT-RCV5 = 0; /* receive quantity*/
    VCPLHD04.TS-CPL-QTOT-RCV6 = 0; /* receive quantity*/
    VCPLHD04.TS-CPL-QTOT-RCV7 = 0; /* receive quantity*/
    VCPLHD04.TS-CPL-QTOT-RCV8 = 0; /* receive quantity*/
    VCPLHD04.TS-PL-QTOT-RSRV = 0; /* reserve quantity*/
    VCPLHD04.TS-CPL-QTOT-RSRV1 = 0; /* reserve quantity*/
    VCPLHD04.TS-CPL-QTOT-RSRV2 = 0; /* reserve quantity*/
    VCPLHD04.TS-CPL-QTOT-RSRV3 = 0; /* reserve quantity*/
    VCPLHD04.TS-CPL-QTOT-RSRV4 = 0; /* reserve quantity*/
    VCPLHD04.TS-CPL-QTOT-RSRV5 = 0; /* reserve quantity*/
    VCPLHD04.TS-CPL-QTOT-RSRV6 = 0; /* reserve quantity*/
    VCPLHD04.TS-CPL-QTOT-RSRV7 = 0; /* reserve quantity*/
    VCPLHD04.TS-CPL-QTOT-RSRV8 = 0; /* reserve quantity*/
    VCPLHD04.TS-PL-TOT-CBM = 0; /* total cbm*/
    VCPLHD04.TS-CPL-TOT-CBM1 = 0; /* total cbm1*/
    VCPLHD04.TS-CPL-TOT-CBM2 = 0; /* total cbm2*/
    VCPLHD04.TS-CPL-TOT-CBM3 = 0; /* total cbm3*/
    VCPLHD04.TS-CPL-TOT-CBM4 = 0; /* total cbm4*/
    VCPLHD04.TS-CPL-TOT-CBM5 = 0; /* total cbm5*/
    VCPLHD04.TS-CPL-TOT-CBM6 = 0; /* total cbm6*/
    VCPLHD04.TS-CPL-TOT-CBM7 = 0; /* total cbm7*/
    VCPLHD04.TS-CPL-TOT-CBM8 = 0; /* total cbm8*/
    VCPLHD04.TS-PL-TOT-KG = 0; /* total kg*/
    VCPLHD04.TS-CPL-TOT-KG1 = 0; /* total kg1*/
    VCPLHD04.TS-CPL-TOT-KG2 = 0; /* total kg2*/
    VCPLHD04.TS-CPL-TOT-KG3 = 0; /* total kg3*/
    VCPLHD04.TS-CPL-TOT-KG4 = 0; /* total kg4*/
    VCPLHD04.TS-CPL-TOT-KG5 = 0; /* total kg5*/
    VCPLHD04.TS-CPL-TOT-KG6 = 0; /* total kg6*/
    VCPLHD04.TS-CPL-TOT-KG7 = 0; /* total kg7*/
    VCPLHD04.TS-CPL-TOT-KG8 = 0; /* total kg8*/
    VCPLHD04.XRE-RCPT-XCEP-CD = "  "; /* receipt exception code*/

    /* *******************************************/
    /* *********** get current date **************/
    /* ************ and time *********************/
    /* *******************************************/

    XX0XS01();
    VCPLHD04.ZZ-SDT = XX0XW01.XX0XWDAT; /* move in set up date*/
    VCPLHD04.ZZ-SETUP-HHMM = XX0XW01.XX0XWTIM; /* move in change time*/
    VCPLHD04.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* cplhd change date*/
    VCPLHD04.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* move in change time*/
    VCPLHD04.ZZ-CHNG-CNT = 0; /* initialize change count*/
    VCPLHD04.XXX-USER-ID = COMMAREA.CAUSERID;

    call "VCPLHD04" ("A ", SQLCA, VCPLHD04) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

    if (SQLCA.VAGen_SQLCODE == 0) /* if good return code*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == -911 /* Resource not available*/
       || SQLCA.VAGen_SQLCODE == -904)
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0J635"; /* Process name*/
      TA1REC.TA1LOC = "ADD TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCPLHD04"; /* Table view name*/
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
      TS0JM001.XXXPRCNM = "TS0J635"; /* Process name*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      exit stack;
    end
  end

end // end TS0J635

// Add packing list item row
Function TS0J636()
   /* ------------------------------------------------------------*/

                    /* ADD CPLIT ROWS*/

    /* 1) Move in appropriate fields to TSOREC*/
    /* 2) Add the cplhd row*/

   /* ------------------------------------------------------------*/

  if (TS0JW01.TS0JWSW1 == "Y") /* if end of set*/
     /* next sentence*/
  else
    TSOREC.TSFSHPID = TSFREC.TSFSHPID; /* Nike shipment number*/

    /* *******************************************/
    /* *********** get current date **************/
    /* ************ and time *********************/
    /* *******************************************/

    XX0XS01();
    TSOREC.ZZZSDT = XX0XW01.XX0XWDAT; /* move in set up date*/
    TSOREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* cplit change date*/
    TSOREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* move in change time*/
    TSOREC.ZZZCHGCT = 0; /* initialize change count*/

    call "IO2580" ("A ", SQLCA, TSOREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

    if (SQLCA.VAGen_SQLCODE == 0) /* if good return code*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == -911 /* Resource not available*/
       || SQLCA.VAGen_SQLCODE == -904)
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0J636"; /* Process name*/
      TA1REC.TA1LOC = "ADD TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCPLIT01"; /* Table view name*/
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
      TS0JM001.XXXPRCNM = "TS0J636"; /* Process name*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      exit stack;
    end
  end

end // end TS0J636

// Insert (A ) Row       VPLAUX01
Function TS0J637()
   /* ------------------------------------------------------------*/

                     /* ADD VPLAUX01 ROWS*/

       /* Add the AUXILLARY rows to DTRANS.VPLAUX01*/

   /* ------------------------------------------------------------*/


  call "VPLAUX01" ("A1", SQLCA, VPLAUX01) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE == 0) /* if good return code*/
    /* ======== NEXT SENTENCE =============>*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0J637"; /* Process name*/
    TA1REC.TA1LOC = "ADD TABLE ROW";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPLAUX01"; /* Table view name*/
    TA1REC.TA1TBLKE = TSOREC.TSOKEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0J637"; /* Process name*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* ===> roll back all D.B Changes*/

    exit stack; /* ===> Exit to re-display map*/

  end

   /* **                                                        ***/
   /* ********************** End of TS0-63420 *********************/
end // end TS0J637

// Duplicate entire shipment
Function TS0J640()

                  /* ADD COMMENT TO OLD SHIP ID*/

       /* 1) Obtain dtrans.vtstxt01 row.*/
       /* 2) If dtrans.vtstxt01 exists, check for line 2 text.*/
       /* 3) If line 2 text, add to end of line (if blank).*/
       /* 4) Select the dtrans.vshphd01 for old ship id.*/
       /* 5) Check text flag indicator and set to 'Y'.*/

   /* ------------------------------------------------------------*/

  TSFREC.TSFSHPID = TS0JW01.TS0JWTX3; /* old shp id*/
  TS0J110(); /* obtain shphd information*/

  if (TSFREC.TSFTXTID == "Y") /* if text already exists*/
    TS0J641(); /* check for line 2 text*/
    if (SQLCA.VAGen_SQLCODE == 100) /* if no line 2 text*/
      TSRREC.TSRSEQNB = 2; /* add new line 2 text*/
    else
      if (SQLCA.VAGen_SQLCODE == 0)
        TS0J642(); /* check length of line 2 text*/
      end
    end
  else
    TS0J643(); /* update text flag*/
  end
  if (TSFREC.TSFTXTID == "Y") /* if comment will fit*/
    TS0J644(); /* add comment line to dtrans.vtstxt01*/
  end


end // end TS0J640

// Check for line 2 text
Function TS0J641()
   /* ------------------------------------------------------------*/

        /* Check line 2 text in dtrans.vtstxt01 table.*/

   /* ------------------------------------------------------------*/

  TSRREC.TSFSHPID = TSFREC.TSFSHPID; /* move in shpid*/
  TSRREC.TSRSEQNB = 2; /* set sequence number to 2*/

  call "IO2690" ("S ", SQLCA, TSRREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* if good return code*/
   || SQLCA.VAGen_SQLCODE == 100)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0J641"; /* Process name*/
    TA1REC.TA1LOC = "GET TABLE ROW";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VTSTXT01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    TS0JM001.XXXPRCNM = "TS0J641"; /* Process name*/
    exit stack;

  end

end // end TS0J641

// Check for length of line 2 txt
Function TS0J642()
   /* ------------------------------------------------------------*/

             /* Check for length of line 2 text.*/
             /* Update line 2 text if info fits.*/
   /* ------------------------------------------------------------*/

  TS0JW01.TS0JWCHK = TSRREC.TSRTEXT; /* length check field*/
  if (TS0JW01.TS0JWCH2 > " ") /* if more than 30 char.*/
    TSFREC.TSFTXTID = "N"; /* set no to update*/
  else
    TS0JW01.TS0JWOT1 = "DUPLICATE IS ";
    TS0JW01.TS0JWOT2 = TS0JW01.TSFSHPID;
    TS0JW01.TS0JWOT3 = " BY ";
    TS0JW01.TS0JWOT4 = COMMAREA.CAUSERID;
    TS0JW01.TS0JWCH2 = TS0JW01.TS0JWOTX;
    TSRREC.TSRTEXT = TS0JW01.TS0JWCHK;
    TSRREC.TSFSHPID = TSFREC.TSFSHPID; /* move in shpid*/
    TSRREC.TSRSEQNB = 2; /* set sequence number to 2*/

    /* *******************************************/
    /* *********** get current date **************/
    /* ************ and time *********************/
    /* *******************************************/

    TSRREC.ZZZCHGDT = TS0JW01.TS0JWCDT; /* change date*/
    TSRREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

    call "IO2690" ("U ", SQLCA, TSRREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

    if (SQLCA.VAGen_SQLCODE == 0) /* if good return code*/
      TSFREC.TSFTXTID = "N"; /* set no to add new row*/
    else
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0J642"; /* Process name*/
      TA1REC.TA1LOC = "UPD TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VTSTXT01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
      TS0JM001.XXXPRCNM = "TS0J642"; /* Process name*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      exit stack;

    end
  end


end // end TS0J642

// Update text flag in shphd
Function TS0J643()
   /* ------------------------------------------------------------*/

                 /* UPDATE TEXT FLAG IN DTRANS.VSHPHD01*/

   /* ------------------------------------------------------------*/

  TSFREC.TSFSHPID = TS0JW01.TS0JWTX3;
  TSFREC.TSFTXTID = "Y";

   /* *******************************************/
   /* *********** get current date **************/
   /* ************ and time *********************/
   /* *******************************************/

  TSFREC.ZZZCHGDT = TS0JW01.TS0JWCDT; /* change date*/
  TSFREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

  TSNREC.TSNFNC = "U "; /* move in selection*/
  call "IO2540" (TSNREC, SQLCA, TSFREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE == 0) /* if good return code*/
    TSRREC.TSRSEQNB = 1;
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0J643"; /* Process name*/
    TA1REC.TA1LOC = "UPDATE TABLE ROW";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSHPHD01"; /* Table view name*/
    TA1REC.TA1TBLKE = TSFREC.TSFKEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0J643"; /* Process name*/
  end


end // end TS0J643

// Add comment to dtrans.vtstxt01
Function TS0J644()
   /* ------------------------------------------------------------*/

        /* Add a comment in the dtrans.vtstxt01 table for*/
          /* the old nike ship id*/

   /* ------------------------------------------------------------*/

  TSRREC.TSFSHPID = TS0JW01.TS0JWTX3; /* move in shpid*/
  TS0JW01.TS0JWOT1 = "DUPLICATE IS ";
  TS0JW01.TS0JWOT2 = TS0JW01.TSFSHPID; /* new ship id*/
  TS0JW01.TS0JWOT3 = " BY ";
  TS0JW01.TS0JWOT4 = COMMAREA.CAUSERID; /* userid*/
  TSRREC.TSRTEXT = TS0JW01.TS0JWOTX;

   /* *******************************************/
   /* *********** get current date **************/
   /* ************ and time *********************/
   /* *******************************************/

  TSRREC.ZZZCHGDT = TS0JW01.TS0JWCDT; /* change date*/
  TSRREC.ZZZSDT = TS0JW01.TS0JWCDT; /* Set up date*/
  TSRREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  TSRREC.ZZZCHGCT = 0; /* Change count*/

  call "IO2690" ("A ", SQLCA, TSRREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* if good return code*/
   || SQLCA.VAGen_SQLCODE == 100)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0J644"; /* Process name*/
    TA1REC.TA1LOC = "ADD TABLE ROW";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VTSTXT01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    TS0JM001.XXXPRCNM = "TS0J644"; /* Process name*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    exit stack;

  end

end // end TS0J644

// Delete cntnr packlst & vplaux
Function TS0J650()
   /* ------------------------------------------------------------*/

              /* Check for Receipts*/

      /* 1) Select the set of container packing list rows.*/
      /* 2) Fetch all container packing list row keys into ws.*/
      /* 3) While container packing list rows exist in ws.*/
         /* a) Check status is 'RC'*/
   /* ------------------------------------------------------------*/

  TS0J651(); /* Get ware house code from SHPHD*/

  TS0JW01.TS0JWSW1 = "N"; /* set up end of set switches*/
  TS0JW01.TS0JWRCFL = "N"; /* status 'RC' flag*/

  TS0JS04(); /* select the set of container packing*/
                                   /* lists*/

  while (TS0JW01.TS0JWSW1 == "N") /* while not end of set cpl*/
    TS0JS32(); /* fetch the cpl row*/
    if (TS0JW01.TS0JWRCFL == "Y")
      converseLib.validationFailed(429); /* 'RC' already created*/
      TS0JS06(); /* close the selected set*/
      exit stack;
    else
      TS0J660();

  /* ****************************************************************/
  /* Ignore record existance in VFYPO002 until PB0B is modified to*/
  /* have TS-NIKE-SHIP-ID /CONTAINER NUMBER on it*/
  /* ****************************************************************/

  /* IF TS0JW01.FYPOWRDF EQ 'Y';*/
  /* MOVE 430 TO EZEMNO;    /* VFYPO002 records exists*/
  /* TS0JS06;               /* close the selected set*/
  /* EZEFLO;*/
  /* END;*/
    end
  end

  TS0JS06(); /* close the selected set of container*/
                                   /* pack list rows*/


end // end TS0J650

// Get warehouse code
Function TS0J651()
   /* ------------------------------------------------------------*/

           /* Get ware House code using nike ship id*/

   /* ------------------------------------------------------------*/

  TSFREC.TSFSHPID = TSWREC.TSFSHPID; /* nike ship id*/

  call "IO2540" ("S ", SQLCA, TSFREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0J651"; /* Process name*/
    TA1REC.TA1LOC = "GET WARE HOUSE  USING NIKE SHIP ID";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSHPHD01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0J651"; /* Process name*/

    exit stack; /* ===> exit to re-display map*/

  end

  return;

   /* **                                                        ***/
   /* ********************** End of TS0J651 ********************/
end // end TS0J651

// Process FYPO002 data
Function TS0J660()

   /* ------------------------------------------------------------*/
   /* Obtain the receiving data for the destination.*/
   /* Load data from the VCPLHD03  to VFYPO002*/
   /* ------------------------------------------------------------*/

  TS0JW01.FYPOWRDF = "N"; /* Set Received data flag to yes*/

  set VFYPO002 empty;

  VFYPO002.XGPCD = VCPLHD03.XGP-GPC-CD;
  VFYPO002.PC3PONBR = VCPLHD03.PC-PO-NBR; /* PO number*/
  VFYPO002.SY1STNBR = VCPLHD03.SY-STY-NBR; /* Style number*/
  VFYPO002.SY2CLRID = VCPLHD03.SY-COLR-CD-ID; /* Color code*/
  VFYPO002.XDMCD = VCPLHD03.XDM-DIM-CD; /* Dimension code*/
  VFYPO002.XPGCD = VCPLHD03.XPG-PKG-TYP-CD; /* Package code*/

  VFYPO002.XOWCD = VCPLHD03.XOW-OWN-GRP-CD; /* Owner Group*/
  VFYPO002.PC2INSEG = VCPLHD03.PC-CU-IN-SEG-CD; /* I-SEG-CD*/
  VFYPO002.XUMCD = VCPLHD03.XUM-UOM-CD; /* Unit of measure*/
  VFYPO002.XQACD = VCPLHD03.XQA-QUAL-CD; /* Quality code*/
  VFYPO002.XWHCD = TSFREC.XWHCD; /* warehouse code*/
  VFYPO002.PC2CUXID = VCPLHD03.PC-PRDCU-ID; /* Customer*/
  VFYPO002.YMTCD = "*"; /* Mode code*/
  VFYPO002.OP1PARTN = VCPLHD03.OP-ORD-PART-CHAR; /* Part char*/
  VFYPO002.OP1CUOID = VCPLHD03.OP-CUST-ORD-ID; /* Cust ord*/
  VFYPO002.OP1NORID = VCPLHD03.OP-NIKE-ORD-ID; /* Nike ord*/



  TS0JW01.FYPOWRCF = "N"; /* Cursor not at end*/

  TS0JS33(); /* Open received cursor*/

   /* ------------------------------------------------------------*/
   /* Check any receipt Record present*/
   /* ------------------------------------------------------------*/

  TS0JS34(); /* Fetch received row*/

  if (TS0JW01.FYPOWRCF != "Y") /* If atleast one record exist*/

    TS0JW01.FYPOWRDF = "Y"; /* set Received data flag to yes*/

  end

  TS0JS35(); /* Close received cursor*/


end // end TS0J660

// Select set of shipment hdrs
Function TS0JS01()
   /* ------------------------------------------------------------*/

            /* SELECT SET FROM DTRANS.VSHPHD01*/

       /* Select the set of table rows.*/

   /* ------------------------------------------------------------*/

  TSNREC.TSNFNC = "S5"; /* move selection to pass record*/
  call "IO2540" (TSNREC, SQLCA, TSFREC) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0JS01"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSHPHD01"; /* Table view name*/
    TA1REC.TA1TBLKE = TSFREC.TSFKEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0JS01"; /* Process name*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS01

// Fetch the shp header rows
Function TS0JS02()
   /* ------------------------------------------------------------*/

            /* FETCH THE CONTAINER PACKING LIST ROW*/

   /* Fetch the next row from the selected set of rows.*/

   /* ------------------------------------------------------------*/

  TSNREC.TSNFNC = "N5"; /* move selection to pass record*/
  call "IO2540" (TSNREC, SQLCA, TSFREC) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    TS0JW01.TS0JWSWC = "Y"; /* end of set found*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS02"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VSHPHD01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JM001.XXXPRCNM = "TS0JS02"; /* Process name*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS02

// Close selected set of shphds
Function TS0JS03()
   /* ------------------------------------------------------------*/

            /* CLOSE THE SELECTED FROM DTRANS.VSHPHD01*/

   /* Close the selected set of table rows.*/

   /* ------------------------------------------------------------*/

  TSNREC.TSNFNC = "C5"; /* move selection to pass record*/
  call "IO2540" (TSNREC, SQLCA, TSFREC) {isNoRefresh = yes, isExternal = yes}; /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "TS0FS03"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSHPHD01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0JS03"; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if errors occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS03

// Select set of cont pack list
Function TS0JS04()
   /* ------------------------------------------------------------*/

            /* SELECT SET OF CONTAINER PACKING LIST ROWS*/

       /* Select the set of table rows.*/

   /* ------------------------------------------------------------*/

  VCPLHD03.TS-NIKE-SHP-ID = TSWREC.TSFSHPID; /* move in id*/

  TSGREC.TSNFNC = "S1"; /* move selection to pass record*/
  call "VCPLHD03" (TSGREC, SQLCA, VCPLHD03) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0JS04"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCPLHD01"; /* Table view name*/
    TA1REC.TA1TBLKE = VCPLHD03.VCPLHD03-KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0JS04"; /* Process name*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS04

// Fetch the cont pack list row
Function TS0JS05()
   /* ------------------------------------------------------------*/

            /* FETCH THE CONTAINER PACKING LIST ROW*/

   /* Fetch the next row from the selected set of rows.*/

   /* ------------------------------------------------------------*/

  TSGREC.TSNFNC = "N1"; /* move selection to pass record*/
  call "VCPLHD03" (TSGREC, SQLCA, VCPLHD03) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    TS0JW01.TS0JWSW1 = "Y"; /* end of set found*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS05"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCPLHD01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JM001.XXXPRCNM = "TS0JS05"; /* Process name*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
    else

      TS0JW02.TSFSHPID[TS0JWIXM] = VCPLHD03.TS-NIKE-SHP-ID; /* save key*/
      TS0JW02.TSIPLNBR[TS0JWIXM] = VCPLHD03.TS-NIKE-PL-NBR;
      TS0JW02.TSIDETFL[TS0JWIXM] = VCPLHD03.TS-DET-FL;

    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS05

// Close the selected set of CPL
Function TS0JS06()
   /* ------------------------------------------------------------*/

            /* CLOSE THE SELECTED SET OF CARTONS*/

   /* Close the selected set of table rows.*/

   /* ------------------------------------------------------------*/

  TSGREC.TSNFNC = "C1"; /* move selection to pass record*/
  call "VCPLHD03" (TSGREC, SQLCA, VCPLHD03) {isNoRefresh = yes, isExternal = yes}; /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "TS0JS06"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCPLHD01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0JS06"; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if errors occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS06

// Select set of cartons
Function TS0JS07()
   /* ------------------------------------------------------------*/

                   /* SELECT SET OF CARTONS*/

       /* Select the set of table rows.*/

   /* ------------------------------------------------------------*/

  TSOREC.TSFSHPID = TS0JW02.TSFSHPID[TS0JWIXM]; /* move in id*/
  TSOREC.TSIPLNBR = TS0JW02.TSIPLNBR[TS0JWIXM]; /* move in pl*/

  call "IO2580" ("S2", SQLCA, TSOREC) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0JS07"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCPLIT01"; /* Table view name*/
    TA1REC.TA1TBLKE = TSOREC.TSOKEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0JS07"; /* Process name*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS07

// Fetch carton row
Function TS0JS08()
   /* ------------------------------------------------------------*/

                 /* FETCH THE CARTON ROW*/

   /* Fetch the next row from the selected set of rows.*/

   /* ------------------------------------------------------------*/

  call "IO2580" ("N2", SQLCA, TSOREC) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    TS0JW01.TS0JWSW2 = "Y"; /* end of set found*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS08"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCPLIT01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JM001.XXXPRCNM = "TS0JS08"; /* Process name*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
    else
      TS0JW03.TSIPLNBR[TS0JWIXW] = TSOREC.TSIPLNBR;
      TS0JW03.TSHNKCN[TS0JWIXW] = TSOREC.TSHNKCN;
      TS0JW03.TSOFRCRT[TS0JWIXW] = TSOREC.TSOFRCRT;
      TS0JW03.SY5SZID[TS0JWIXW] = TSOREC.SY5SZID;
    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS08

// Delete the carton row
Function TS0JS09()
   /* ------------------------------------------------------------*/

                   /* DELETE THE CARTON ROW*/

         /* Delete the table row.*/

   /* ------------------------------------------------------------*/

  TSOREC.TSFSHPID = TSWREC.TSFSHPID; /* move in keys*/
  TSOREC.TSIPLNBR = TS0JW03.TSIPLNBR[TS0JWIXW];
  TSOREC.TSHNKCN = TS0JW03.TSHNKCN[TS0JWIXW];
  TSOREC.TSOFRCRT = TS0JW03.TSOFRCRT[TS0JWIXW];
  TSOREC.SY5SZID = TS0JW03.SY5SZID[TS0JWIXW];

  call "IO2580" ("D ", SQLCA, TSOREC) {isNoRefresh = yes, isExternal = yes}; /* Update row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
     /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end
      TS0JW01.TS0JWPSW = "Y"; /* Indicate not available*/
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS09"; /* Process name*/
      TA1REC.TA1LOC = "DELETE THE TABLE ROW ";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCPLIT01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate not available*/

      TS0JM001.XXXPRCNM = "TS0JS09"; /* Process name*/

    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occured*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* reset all db changes*/
    exit stack; /* exit to redisplay the map*/
  end



end // end TS0JS09

// Close the selected of cartons
Function TS0JS10()
   /* ------------------------------------------------------------*/

            /* CLOSE THE SELECTED SET OF CARTONS*/

   /* Close the selected set of table rows.*/

   /* ------------------------------------------------------------*/

  call "IO2580" ("C2", SQLCA, TSOREC) {isNoRefresh = yes, isExternal = yes}; /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "TS0JS10"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0IM002"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCPLIT01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0JS10"; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS10

// Delete the cont pack list row
Function TS0JS11()
   /* ------------------------------------------------------------*/

            /* DELETE THE CONTAINER PACKING LIST ROW*/

         /* Delete the table row.*/

   /* ------------------------------------------------------------*/

  VCPLHD03.TS-NIKE-SHP-ID = TS0JW02.TSFSHPID[TS0JWIXM]; /* move keys*/
  VCPLHD03.TS-NIKE-PL-NBR = TS0JW02.TSIPLNBR[TS0JWIXM];

  TSGREC.TSNFNC = "D "; /* move selection to pass record*/
  call "VCPLHD03" (TSGREC, SQLCA, VCPLHD03) {isNoRefresh = yes, isExternal = yes}; /* Update row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS11"; /* Process name*/
      TA1REC.TA1LOC = "DELETE THE TABLE ROW ";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCPLHD01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate not available*/

      TS0JM001.XXXPRCNM = "TS0JS11"; /* Process name*/

    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occured*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* reset any db changes*/
    exit stack; /* exit to redisplay the map*/
  end



end // end TS0JS11

// Select set of containers
Function TS0JS12()
   /* ------------------------------------------------------------*/

                   /* SELECT SET OF CONTAINERS*/

       /* Select the set of table rows.*/

   /* ------------------------------------------------------------*/

  TSHREC.TSFSHPID = TSWREC.TSFSHPID; /* move in id*/

  call "IO2590" ("S1", SQLCA, TSHREC) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0JS12"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCNTNR01"; /* Table view name*/
    TA1REC.TA1TBLKE = TSHREC.TSHKEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0JS12"; /* Process name*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS12

// Fetch container
Function TS0JS13()
   /* ------------------------------------------------------------*/

                  /* FETCH THE CONTAINER*/

   /* Fetch the next row from the selected set of rows.*/

   /* ------------------------------------------------------------*/

  call "IO2590" ("N1", SQLCA, TSHREC) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    TS0JW01.TS0JWSW1 = "Y"; /* end of set found*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS13"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCNTNR01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JM001.XXXPRCNM = "TS0JS13"; /* Process name*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS13

// Delete the container row
Function TS0JS14()
   /* ------------------------------------------------------------*/

            /* DELETE THE CONTAINER PACKING LIST ROW*/

         /* Delete the table row.*/

   /* ------------------------------------------------------------*/

  call "IO2590" ("D ", SQLCA, TSHREC) {isNoRefresh = yes, isExternal = yes}; /* Update row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
     /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS14"; /* Process name*/
      TA1REC.TA1LOC = "DELETE THE TABLE ROW ";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCNTNR01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate not available*/

      TS0JM001.XXXPRCNM = "TS0JS14"; /* Process name*/

    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occured*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* reset any db changes*/
    exit stack; /* exit to redisplay the map*/
  end



end // end TS0JS14

// Close the selected cont set
Function TS0JS15()
   /* ------------------------------------------------------------*/

            /* CLOSE THE SELECTED SET OF CONTAINERS*/

   /* Close the selected set of table rows.*/

   /* ------------------------------------------------------------*/

  call "IO2590" ("C1", SQLCA, TSHREC) {isNoRefresh = yes, isExternal = yes}; /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "TS0JS15"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0IM002"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCNTNR01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0JS15"; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if errors occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS15

// Select the shipment header
Function TS0JS16()
   /* ------------------------------------------------------------*/

                /* SELECT THE SHIPMENT HEADER*/

         /* 1) Select the shipment header.*/

   /* ------------------------------------------------------------*/

  set TSFREC empty; /* Clear record*/

  TSFREC.TSFSHPID = TSWREC.TSFSHPID; /* move ship id to record*/

  call "IO2540" ("S ", SQLCA, TSFREC) {isNoRefresh = yes, isExternal = yes}; /* Update row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS16"; /* Process name*/
      TA1REC.TA1LOC = "SELECT THE TABLE ROW ";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VSHPHD01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JW01.TS0JWPSW = "Y"; /* Indicate not available*/
      TS0JM001.XXXPRCNM = "TS0JS16"; /* Process name*/

    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occured*/
    exit stack; /* exit to redisplay the map*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* commit db deletion*/
  end


end // end TS0JS16

// Delete the shipment address
Function TS0JS17()
   /* ------------------------------------------------------------*/

                /* DELETE THE SHIPMENT ADDRESS*/

         /* 1) Delete the shipment address.*/

   /* ------------------------------------------------------------*/

  TSSREC.TSFSHPID = TSWREC.TSFSHPID; /* move ship id to record*/

  call "IO2700" ("D ", SQLCA, TSSREC) {isNoRefresh = yes, isExternal = yes}; /* Update row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS17"; /* Process name*/
      TA1REC.TA1LOC = "DELETE THE TABLE ROW ";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VTSADR01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JW01.TS0JWPSW = "Y"; /* Indicate not available*/
      TS0JM001.XXXPRCNM = "TS0JS17"; /* Process name*/

    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occured*/
    exit stack; /* exit to redisplay the map*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* commit db deletion*/
  end


end // end TS0JS17

// Delete the shipment text
Function TS0JS18()
   /* ------------------------------------------------------------*/

                /* DELETE THE SHIPMENT TEXT*/

         /* 1) Delete the shipment text.*/

   /* ------------------------------------------------------------*/

  TSRREC.TSFSHPID = TSWREC.TSFSHPID; /* move ship id to record*/
  TSRREC.TSRSEQNB = TS0JW01.TS0JWIXM; /* move sequence number*/

  call "IO2690" ("D ", SQLCA, TSRREC) {isNoRefresh = yes, isExternal = yes}; /* Update row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS18"; /* Process name*/
      TA1REC.TA1LOC = "DELETE THE TABLE ROW ";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VTSTXT01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JW01.TS0JWPSW = "Y"; /* Indicate not available*/
      TS0JM001.XXXPRCNM = "TS0JS18"; /* Process name*/

    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occured*/
    exit stack; /* exit to redisplay the map*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* commit db deletion*/
  end


end // end TS0JS18

// Delete the shipment header
Function TS0JS19()
   /* ------------------------------------------------------------*/

                /* DELETE THE SHIPMENT HEADER*/

         /* 1) Delete the shipment header.*/

   /* ------------------------------------------------------------*/

  TSFREC.TSFSHPID = TSWREC.TSFSHPID; /* move ship id to record*/

  call "IO2540" ("D ", SQLCA, TSFREC) {isNoRefresh = yes, isExternal = yes}; /* Update row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS19"; /* Process name*/
      TA1REC.TA1LOC = "DELETE THE TABLE ROW ";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VSHPHD01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JW01.TS0JWPSW = "Y"; /* Indicate not available*/
      TS0JM001.XXXPRCNM = "TS0JS19"; /* Process name*/

    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occured*/
    exit stack; /* exit to redisplay the map*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* commit db deletion*/
  end


end // end TS0JS19

// Select set cplhd w/o detail
Function TS0JS20()
   /* ------------------------------------------------------------*/

                /* SELECT SET OF CPL TABLE ROWS*/

   /* ------------------------------------------------------------*/

  VCPLHD03.TS-NIKE-SHP-ID = TSFREC.TSFSHPID; /* Move in id*/

  TSGREC.TSNFNC = "S2"; /* Move selection to pass record*/
  call "VCPLHD03" (TSGREC, SQLCA, VCPLHD03) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911 /* Resource not available*/
     || SQLCA.VAGen_SQLCODE == -904)
      TS0JW01.TS0JWPSW = "Y"; /* Try again*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0JS20"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCPLHD01"; /* Table view name*/
    TA1REC.TA1TBLKE = VCPLHD03.VCPLHD03-KEY; /* Table key*/
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  end


end // end TS0JS20

// Fetch the cplhd w/o detail
Function TS0JS21()
   /* ------------------------------------------------------------*/

              /* FETCH SET SINGLE CPL TABLE ROW*/

      /* Fetch the next row from the selected set of rows,*/

   /* ------------------------------------------------------------*/

  TSGREC.TSNFNC = "N2"; /* Move selection to pass record*/
  call "VCPLHD03" (TSGREC, SQLCA, VCPLHD03) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE == 100 /* If valid code*/
   || SQLCA.VAGen_SQLCODE == 0) 
     /* continue on*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911 /* Resource not available*/
       || SQLCA.VAGen_SQLCODE == -904)
        TS0JW01.TS0JWPSW = "Y"; /* Try again*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      end
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS21"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCPLHD01"; /* Table view name*/
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    end
  end


end // end TS0JS21

// Close the cplhd set w/o detail
Function TS0JS22()
   /* ------------------------------------------------------------*/

              /* CLOSE SELECTED SET OF CPL ROWS*/

   /* ------------------------------------------------------------*/

  TSGREC.TSNFNC = "C2"; /* Move selection to pass record*/
  call "VCPLHD03" (TSGREC, SQLCA, VCPLHD03) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "TS0JS22"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE CURSOR";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCPLHD01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  end


end // end TS0JS22

// Select set dtrans.vcplhd01
Function TS0JS23()
   /* ------------------------------------------------------------*/

                /* SELECT SET OF CPL TABLE ROWS*/

   /* ------------------------------------------------------------*/

  VCPLHD04.TS-NIKE-SHP-ID = TSWREC.TSFSHPID; /* Move in id*/

  TSGREC.TSNFNC = "S1"; /* Move selection to pass record*/
  call "VCPLHD04" (TSGREC, SQLCA, VCPLHD04) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911 /* Resource not available*/
     || SQLCA.VAGen_SQLCODE == -904)
      TS0JW01.TS0JWPSW = "Y"; /* Try again*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0JS23"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCPLHD04"; /* Table view name*/
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  end


end // end TS0JS23

// Fetch the dtrans.vcplhd01
Function TS0JS24()
   /* ------------------------------------------------------------*/

              /* FETCH SET SINGLE CPL TABLE ROW*/

      /* Fetch the next row from the selected set of rows,*/

   /* ------------------------------------------------------------*/

  TSGREC.TSNFNC = "N1"; /* Move selection to pass record*/
  call "VCPLHD04" (TSGREC, SQLCA, VCPLHD04) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE == 100) /* If valid code*/
    TS0JW01.TS0JWSW1 = "Y"; /* Set end of file switch*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911 /* Resource not available*/
       || SQLCA.VAGen_SQLCODE == -904)
        TS0JW01.TS0JWPSW = "Y"; /* Try again*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      end
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS24"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCPLHD04"; /* Table view name*/
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    end
  end


end // end TS0JS24

// Close the dtrans.vcplhd01
Function TS0JS25()
   /* ------------------------------------------------------------*/

              /* CLOSE SELECTED SET OF CPL ROWS*/

   /* ------------------------------------------------------------*/

  TSGREC.TSNFNC = "C1"; /* Move selection to pass record*/
  call "VCPLHD04" (TSGREC, SQLCA, VCPLHD04) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "TS0JS25"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE CURSOR";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCPLHD01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  end


end // end TS0JS25

// Select set of cartons
Function TS0JS26()
   /* ------------------------------------------------------------*/

                   /* SELECT SET OF CARTONS*/

       /* Select the set of table rows.*/

   /* ------------------------------------------------------------*/

  TSOREC.TSFSHPID = TSWREC.TSFSHPID; /* move in id*/

  call "IO2580" ("S1", SQLCA, TSOREC) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0JS26"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCPLIT01"; /* Table view name*/
    TA1REC.TA1TBLKE = TSOREC.TSOKEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0JS26"; /* Process name*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS26

// Fetch carton row
Function TS0JS27()
   /* ------------------------------------------------------------*/

                 /* FETCH THE CARTON ROW*/

   /* Fetch the next row from the selected set of rows.*/

   /* ------------------------------------------------------------*/

  call "IO2580" ("N1", SQLCA, TSOREC) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    TS0JW01.TS0JWSW1 = "Y"; /* end of set found*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS27"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCPLIT01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JM001.XXXPRCNM = "TS0JS27"; /* Process name*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS27

// Close the selected of cartons
Function TS0JS28()
   /* ------------------------------------------------------------*/

            /* CLOSE THE SELECTED SET OF CARTONS*/

   /* Close the selected set of table rows.*/

   /* ------------------------------------------------------------*/

  call "IO2580" ("C1", SQLCA, TSOREC) {isNoRefresh = yes, isExternal = yes}; /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "TS0JS28"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCPLIT01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0JS28"; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS28

// Select set of vplaux01
Function TS0JS29()
   /* ------------------------------------------------------------*/

                   /* SELECT SET OF VPLAUX01 ROWS*/

       /* Select the set of table rows.*/

   /* ------------------------------------------------------------*/

  VPLAUX01.TS-NIKE-SHP-ID = TSWREC.TSFSHPID; /* move in id*/

  call "VPLAUX01" ("S3", SQLCA, VPLAUX01) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "TS0JS29"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPLAUX01"; /* Table view name*/
    TA1REC.TA1TBLKE = TSOREC.TSOKEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0JS29"; /* Process name*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS29

// Fetch vplaux01 row
Function TS0JS30()
   /* ------------------------------------------------------------*/

                 /* FETCH THE VPLAUX01 ROW*/

   /* Fetch the next row from the selected set of rows.*/

   /* ------------------------------------------------------------*/

  call "VPLAUX01" ("N3", SQLCA, VPLAUX01) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    TS0JW01.TS0JWSW1 = "Y"; /* end of set found*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS30"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VPLAUX01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JM001.XXXPRCNM = "TS0JS30"; /* Process name*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS30

// Close the selected of vplaux01
Function TS0JS31()
   /* ------------------------------------------------------------*/

            /* CLOSE THE SELECTED SET OF VPLAUX01 ROWS*/

   /* Close the selected set of table rows.*/

   /* ------------------------------------------------------------*/

  call "VPLAUX01" ("C3", SQLCA, VPLAUX01) {isNoRefresh = yes, isExternal = yes}; /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "TS0JS31"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPLAUX01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TS0JM001.XXXPRCNM = "TS0JS31"; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS31

// Fetch the cont pack list row
Function TS0JS32()
   /* ------------------------------------------------------------*/

            /* FETCH THE CONTAINER PACKING LIST ROW*/

   /* Fetch the next row from the selected set of rows.*/

   /* ------------------------------------------------------------*/

  TSGREC.TSNFNC = "N1"; /* move selection to pass record*/
  call "VCPLHD03" (TSGREC, SQLCA, VCPLHD03) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/
  if (SQLCA.VAGen_SQLCODE == 0)
    if (VCPLHD03.TS-CPL-STAT-CD == "RC")
      TS0JW01.TS0JWRCFL = "Y";
    end
  end
  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    TS0JW01.TS0JWSW1 = "Y"; /* end of set found*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS32"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCPLHD01"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      TS0JM001.XXXPRCNM = "TS0JS32"; /* Process name*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate problem*/
    else

    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occurred*/
    exit stack; /* exit to redisplay the map*/
  end


end // end TS0JS32

// Open received cursor
Function TS0JS33()

   /* ------------------------------------------------------------*/
   /* Declare cursor for VFYPO002*/
   /* ------------------------------------------------------------*/

  TS0JW01.FYPOWRCF = "N"; /* Set Received cursor flag to no*/


  try
    call "VFYPO002" ("SI", SQLCA, VFYPO002) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "TS0JS33"; /* Process name*/
  TA1REC.TA1LOC = "DECLARE CURSOR          ";
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPO002"; /* Table view name*/
  TA1REC.TA1TBLKE = VFYPO002.VFYPO002-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  TS0JM001.XXXPRCNM = "TS0JS33";
  exit stack;

end // end TS0JS33

// Fetch received row
Function TS0JS34()

   /* ------------------------------------------------------------*/
   /* If row not found return to previous process.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  try
    call "VFYPO002" ("NI", SQLCA, VFYPO002) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return;
    end
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      TS0JW01.FYPOWRCF = "Y"; /* Indicate cursor at EOF*/
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "TS0JS34"; /* Process name*/
  TA1REC.TA1LOC = "FETCH ROW               ";
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPO002"; /* Table view name*/
  TA1REC.TA1TBLKE = VFYPO002.VFYPO002-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  TS0JM001.XXXPRCNM = "TS0JS34";
  exit stack;

end // end TS0JS34

// Close received cursor
Function TS0JS35()

   /* ------------------------------------------------------------*/
   /* Close cursor for VFYPO002*/
   /* ------------------------------------------------------------*/

  try
    call "VFYPO002" ("CI", SQLCA, VFYPO002) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "TS0JS35"; /* Process name*/
  TA1REC.TA1LOC = "CLOSE CURSOR            ";
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYPO002"; /* Table view name*/
  TA1REC.TA1TBLKE = VFYPO002.VFYPO002-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  TS0JM001.XXXPRCNM = "TS0JS35";
  exit stack;

end // end TS0JS35

// Backup before delete
Function TS0JS99()
   /* ------------------------------------------------------------*/

   /* This PROC will call TS4200 NIKEBOTH PGM to take backup of the*/

   /* rows get deleted from CPLHDR / CNTNR / SHPHDR tables.*/

   /* ------------------------------------------------------------*/
   /* **************** TCS changes begin here   *******************/

  if (WTS4201.TS4201-DELETE-TYP == "D2")
    WTS4201.TS4201-NIKE-SHP-ID = TS0JW02.TSFSHPID[TS0JWIXM];
    WTS4201.TS4201-NIKE-PL-NBR = TS0JW02.TSIPLNBR[TS0JWIXM];
  end

  if (WTS4201.TS4201-DELETE-TYP == "D3")
    WTS4201.TS4201-NIKE-SHP-ID = TSHREC.TSFSHPID;
    WTS4201.TS4201-NIKE-CNTNR-NBR = TSHREC.TSHNKCN;
  end

  if (WTS4201.TS4201-DELETE-TYP == "D4")
    WTS4201.TS4201-NIKE-SHP-ID = TSWREC.TSFSHPID;
  end

  call "TS4200" (WTS4201) {isNoRefresh = yes, isExternal = yes}; /* Take backup before deletion*/

  if (WTS4201.TS4201-RETURN-CODE == "00") /* if good return code*/
    if (WTS4201.TS4201-SQLCODE == 0 /* if normal*/
     || WTS4201.TS4201-SQLCODE == 100) /* if no row found*/
         /* ========== NEXT SENTENCE =======>*/
    end
  else
    if (WTS4201.TS4201-SQLCODE != 0 /* Unexpected return code*/
     || WTS4201.TS4201-SQLCODE != 100) /* if no row found*/
      if (WTS4201.TS4201-SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      if (WTS4201.TS4201-RETURN-CODE == "01")
        converseLib.validationFailed(01);
      end

      if (WTS4201.TS4201-RETURN-CODE == "02")
        converseLib.validationFailed(02);
      end

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "TS0JS99"; /* Process name*/
      TA1REC.TA1MAP = "TS0JM001"; /* Map name*/
      TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/

      if (WTS4201.TS4201-DELETE-TYP == "D2")
        TA1REC.TA1TBLVU = "VCPLHD04"; /* Table view name*/
        TA1REC.TA1LOC = "TS0JS11 CALL TS4200"; /* Calling proc*/
      end

      if (WTS4201.TS4201-DELETE-TYP == "D3")
        TA1REC.TA1TBLVU = "VCNTNR01"; /* Table view name*/
        TA1REC.TA1LOC = "TS0JS14 CALL TS4200"; /* Calling proc*/
      end

      if (WTS4201.TS4201-DELETE-TYP == "D4")
        TA1REC.TA1TBLVU = "VSHPHD01"; /* Table view name*/
        TA1REC.TA1LOC = "TS0JS19 CALL TS4200"; /* Calling proc*/
      end

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
      TS0JW01.TS0JWPSW = "Y"; /* Indicate not available*/

      TS0JM001.XXXPRCNM = "TS0JS11"; /* Process name*/

    end
  end

  if (TS0JW01.TS0JWPSW == "Y") /* if error occured*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* reset any db changes*/
    exit stack; /* exit to redisplay the map*/
  end
   /* **************** TCS changes end   here   *******************/

end // end TS0JS99

//*** RECORD=TS0JW01 ****
// Working storage for TS0i - Shipment add menu
// ***********************
Record TS0JW01 type basicRecord
  10 TS0JWMAP TS0JWMAP ; 
  10 TS0JWMSG TS0JWMSG ; 
    15 TS0JWML1 TS0JWML1 ; 
    15 TS0JWML2 TS0JWML2 ; 
  10 TS0JWPSW TS0JWPSW ; 
  10 TS0JWSW1 TS0JWSW1 ; 
  10 TS0JWSW2 TS0JWSW2 ; 
  10 TS0JWRCFL TS0JWRCFL ; 
  10 TS0JWSWC TS0JWSWC ; 
  10 TS0JWSWR TS0JWSWR ; 
  10 TS0JWEFL TS0JWEFL ; 
  10 TS0JWFFL TS0JWFFL ; 
  10 TS0JWWFL TS0JWWFL ; 
  10 TS0JMMSG TS0JMMSG ; 
  10 TS0JWIXM TS0JWIXM ; 
  10 TS0JWIXW TS0JWIXW ; 
  10 TS0JWWK1 TS0JWWK1 ; 
  10 TS0JWMX1 TS0JWMX1 ; 
  10 TS0JWMX2 TS0JWMX2 ; 
  10 TS0JWMX3 TS0JWMX3 ; 
  10 TS0JWLM1 TS0JWLM1 ; 
  10 TS0JWLM2 TS0JWLM2 ; 
  10 TS0JWBDT TS0JWBDT ; 
  10 TS0JWBEG TS0JWBEG ; 
  10 TS0JWEDT TS0JWEDT ; 
  10 TS0JWEND TS0JWEND ; 
  10 TS0JWMDT TS0JWMDT ; 
    15 TS0JWMMM TS0JWMMM ; 
    15 TS0JWMDD TS0JWMDD ; 
    15 TS0JWMYY TS0JWMYY ; 
  10 TS0JWCDT TS0JWCDT ; 
  10 TSFSHPID TSFSHPID ; 
  10 TSFBOL TSFBOL ; 
  10 TSACARCD TSACARCD ; 
  10 TS5CRAFT TS5CRAFT ; 
  10 TSFSHPNB TSFSHPNB ; 
  10 YSSCD YSSCD ; 
  10 YSSDELFL YSSDELFL ; 
  10 TS0JWTXT TS0JWTXT ; 
    15 TS0JWTX1 TS0JWTX1 ; 
    15 TS0JWTX2 TS0JWTX2 ; 
    15 TS0JWTX3 TS0JWTX3 ; 
    15 TS0JWTX4 TS0JWTX4 ; 
    15 TS0JWTX5 TS0JWTX5 ; 
    15 TS0JWTX6 TS0JWTX6 ; 
  10 TS0JWOTX TS0JWOTX ; 
    15 TS0JWOT1 TS0JWOT1 ; 
    15 TS0JWOT2 TS0JWOT2 ; 
    15 TS0JWOT3 TS0JWOT3 ; 
    15 TS0JWOT4 TS0JWOT4 ; 
  10 TS0JW-CANCELED-BY-TXT TS0JW-CANCELED-BY-TXT ; 
    15 TS0JW-CANCELED-BY-TXT1 TS0JW-CANCELED-BY-TXT1 ; 
    15 TS0JW-CANCELED-BY-USERID TS0JW-CANCELED-BY-USERID ; 
    15 TS0JW-CANCELED-BY-TXT2 TS0JW-CANCELED-BY-TXT2 ; 
    15 TS0JW-CANCELED-BY-DT TS0JW-CANCELED-BY-DT ; 
      20 TS0JW-CANCELED-BY-DT-MM TS0JW-CANCELED-BY-DT-MM ; 
      20 TS0JW-CANCELED-BY-DT-SLASH1 TS0JW-CANCELED-BY-DT-SLASH1 ; 
      20 TS0JW-CANCELED-BY-DT-DD TS0JW-CANCELED-BY-DT-DD ; 
      20 TS0JW-CANCELED-BY-DT-SLASH2 TS0JW-CANCELED-BY-DT-SLASH2 ; 
      20 TS0JW-CANCELED-BY-DT-YY TS0JW-CANCELED-BY-DT-YY ; 
  10 TS0JW-TS-TXT-IND TS0JW-TS-TXT-IND ; 
  10 TS0JWCHK TS0JWCHK ; 
    15 TS0JWCH1 TS0JWCH1 ; 
    15 TS0JWCH2 TS0JWCH2 ; 
  10 FYPOWRCF FYPOWRCF ; 
  10 FYPOWRDF FYPOWRDF ; 
end // end TS0JW01

//*** RECORD=TS0JW02 ****
// Working storage for TS0i - Container packing list keys
// ***********************
Record TS0JW02 type basicRecord
  10 TS0JWLN2 TS0JWLN2 [9999] ; 
    15 TSFSHPID TSFSHPID ; 
    15 TSIPLNBR TSIPLNBR ; 
    15 TSIDETFL TSIDETFL ; 
end // end TS0JW02

//*** RECORD=TS0JW03 ****
// Working storage for TS0J - Carton keys
// ***********************
Record TS0JW03 type basicRecord
  10 TS0JWLN3 TS0JWLN3 [9999] ; 
    15 TSIPLNBR TSIPLNBR ; 
    15 TSHNKCN TSHNKCN ; 
    15 TSOFRCRT TSOFRCRT ; 
    15 SY5SZID SY5SZID ; 
end // end TS0JW03

DataItem FYPOWRCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FYPOWRDF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map instruction line
DataItem TS0JMMSG char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// canceled by date
DataItem TS0JW-CANCELED-BY-DT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// canceled by day
DataItem TS0JW-CANCELED-BY-DT-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// canceled by month
DataItem TS0JW-CANCELED-BY-DT-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// slash 1
DataItem TS0JW-CANCELED-BY-DT-SLASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// slash 2
DataItem TS0JW-CANCELED-BY-DT-SLASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// canceled by year
DataItem TS0JW-CANCELED-BY-DT-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// canceled by info message
DataItem TS0JW-CANCELED-BY-TXT char(32)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// canceled by constant 1
DataItem TS0JW-CANCELED-BY-TXT1 char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// canceled by constant 2
DataItem TS0JW-CANCELED-BY-TXT2 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// canceled by user id
DataItem TS0JW-CANCELED-BY-USERID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// text indicator
DataItem TS0JW-TS-TXT-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map begin parm date
DataItem TS0JWBDT char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// full begin parm date
DataItem TS0JWBEG int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date ccyymmdd
DataItem TS0JWCDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// check area 1
DataItem TS0JWCH1 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// check area 2
DataItem TS0JWCH2 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// text line 2 check area
DataItem TS0JWCHK char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map end parm date
DataItem TS0JWEDT char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end flag for loops #1
DataItem TS0JWEFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// full end parm date
DataItem TS0JWEND int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// First time through flag
DataItem TS0JWFFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working index 1
DataItem TS0JWIXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// working index 2
DataItem TS0JWIXW smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// number of cplhd rows
DataItem TS0JWLM1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// number of cplit rows
DataItem TS0JWLM2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working storage line
DataItem TS0JWLN2 char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working storage line
DataItem TS0JWLN3 char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be displayed
DataItem TS0JWMAP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working map day
DataItem TS0JWMDD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working map date mmddyy
DataItem TS0JWMDT char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// message line 1
DataItem TS0JWML1 char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// message line 2
DataItem TS0JWML2 char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working map month
DataItem TS0JWMMM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Predefined message
DataItem TS0JWMSG char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// max-table-lines
DataItem TS0JWMX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// max-carton-lines
DataItem TS0JWMX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// max passed array shpids
DataItem TS0JWMX3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working map year
DataItem TS0JWMYY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first 13 characters
DataItem TS0JWOT1 char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// second 07 characters
DataItem TS0JWOT2 num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// third 4 characters
DataItem TS0JWOT3 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fourth 06 characters
DataItem TS0JWOT4 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// text line 2
DataItem TS0JWOTX char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// problem switch
DataItem TS0JWPSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// flag for shipment received
DataItem TS0JWRCFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of fetch switch #1
DataItem TS0JWSW1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of fetch switch #2
DataItem TS0JWSW2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of fetch switch
DataItem TS0JWSWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem TS0JWSWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first 25 characters
DataItem TS0JWTX1 char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// second 13 characters
DataItem TS0JWTX2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// third 7 characters
DataItem TS0JWTX3 num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// fourth 9 characters
DataItem TS0JWTX4 char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// last 6 characters
DataItem TS0JWTX5 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// last 6 characters
DataItem TS0JWTX6 char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// tsrtext
DataItem TS0JWTXT char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Warning flag
DataItem TS0JWWFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working storage num 1
DataItem TS0JWWK1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

