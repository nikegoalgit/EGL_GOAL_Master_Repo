package ts0a;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import in1.common.*;
import ku.common.*;
import ni.common.*;
import op.common.*;
import pc.common.*;
import pv.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=TS0A ****
// This application displays the "TRANSPORTATION MASTER MENU".
// It provides entry to the subordinate applications.
// 
// control    date    name    description of change
// -------  -------- ------  ----------------------------------
//          10/28/87 SPOPA   New application.
//          07/20/90 CEPPLE  Change option 1 description on map
//                           to carrier/bill of lading/cntnr.
//          12/08/93 NMASTE  #17 -- Carrier Contract Inq/Maint
//          04/28/94 MSMIT2  #18 -- Footwear Air Freight info
//          11/07/96 JCARL1  Remove alarm from msg display.
//          06/11/98 JGUIDO  Add TR0E(PO resend) option #33
//          07/23/98 BCHELL  Add TR0F(PO download) option #34
//          08/19/98 RVEMPA  Add TR0G(CORP table download)
//                           option #35
// *********************
Program TS0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TS00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  TSWREC TSWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use TS0AT {deleteAfterUse = yes}; // table
  use TS0AM.TS0AM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTS001: XPTS001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the TRANSPORTATION Master Menu.*/
     /* ------------------------------------------------------------*/

     /* ------------------------------------------------------------*/
     /* When this menu is displayed it is essentially starting the*/
      /* transportation process again so reset the pass record.*/
     /* ------------------------------------------------------------*/
    set TSWREC empty;

    goto TS0A001; /* Converse the Master Menu*/


    TS0A001: TS0A001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the TRANSPORTATION Master Menu.*/
     /* ------------------------------------------------------------*/

    goto TS0A001; /* Converse the Master Menu*/


  end // end main
end // end TS0A

// TRANSPORTATION Master Menu
Function TS0A001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TS0A100(); /* Format and display the map*/

  TS0A200(); /* Check attention identifier*/

  TS0A300(); /* Reset fields to normal intensity*/

  TS0A400(); /* Verify the data that was entered*/

  TS0A500(); /* Process valid input request*/


end // end TS0A001

// Format and display the map
Function TS0A100()
   /* ------------------------------------------------------------*/
   /* If no error to display, format the map output area.*/
   /* Indicate sound audible alarm for any error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message*/

    set TS0AM001 initial; /* Clear map output area*/

    TS0AM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

    TS0AM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
    COMMAREA.CAITEM = " "; /* Clear application data*/

  /* E;*/
  /* ;*/
  /* SET TS0AM001 ALARM;             /* Indicate sound alarm*/

  end

  converse TS0AM001 ;


end // end TS0A100

// Check attention identifier
Function TS0A200()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set TS0AM001 initial; /* Clear the map fields*/

    exit stack; /* Exit to redisplay map*/

  end

  if (TS0AM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      COMMAREA.CATOAP = TS0AM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = TS0AM001.CAITEM; /* Application data*/

      XSTSS01(); /* Exit to another application*/

    else

      converseLib.validationFailed(5); /* Indicate PF key not valid*/

    end

    set TS0AM001.CATOAP cursor, modified, bold; /* Highlight*/

    TS0AM001.XXXPRCNM = "TS0A200"; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "TS0AM001"; /* Move map name for help*/
    end

    XSTSS01(); /* Exit to another application*/

    TS0AM001.XXXPRCNM = "TS0A200"; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    TS0AM001.XXXPRCNM = "TS0A200"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end


end // end TS0A200

// Reset highlighted fields
Function TS0A300()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TS0AM001.TS0AMSEL initialAttributes; /* Menu selection*/
  set TS0AM001.CATOAP initialAttributes; /* FAST PATH to application*/
  set TS0AM001.CAITEM initialAttributes; /* FAST PATH application data*/


end // end TS0A300

// Verify data that was entered
Function TS0A400()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Verify the menu selection that was entered.*/
   /* Exit to redisplay the map if any error was found.*/
   /* ------------------------------------------------------------*/

  if (TS0AM001.CAITEM > " ") /* Application data was entered*/

    set TS0AM001.CAITEM cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(7); /* Indicate enter only with FAST PATH*/
    TS0AM001.XXXPRCNM = "TS0A400"; /* Process name*/

  end

  if (TS0AM001.TS0AMSEL > 0) /* Menu selection was entered*/

    TS0A410(); /* Verify the menu selection*/

  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end


end // end TS0A400

// Verify the menu selection
Function TS0A410()
   /* ------------------------------------------------------------*/
   /* Verify the menu selection against the selection table.*/
   /* Return an error message if the selection is not found.*/
   /* ------------------------------------------------------------*/

  if (TS0AM001.TS0AMSEL in TS0AT.TS0AMSEL)
    return;
  end /* Verify selection*/

  set TS0AM001.TS0AMSEL cursor, modified, bold; /* Highlight*/

  converseLib.validationFailed(9); /* Indicate invalid selection*/
  TS0AM001.XXXPRCNM = "TS0A410"; /* Process name*/


end // end TS0A410

// Process valid input request
Function TS0A500()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* If the request failed, display the returned error message.*/
   /* ------------------------------------------------------------*/

  if (TS0AM001.TS0AMSEL > 0) /* Menu selection was entered*/

    COMMAREA.CATOAP = TS0AT.CATOAP[sysVar.arrayIndex]; /* TO application*/

    XSTSS01(); /* Exit to another application*/

    set TS0AM001.TS0AMSEL cursor, modified, bold; /* Highlight*/

    TS0AM001.XXXPRCNM = "TS0A520"; /* Process name*/

  end


end // end TS0A500

