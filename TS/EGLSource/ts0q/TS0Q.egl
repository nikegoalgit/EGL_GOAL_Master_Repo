package ts0q;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import in1.common.*;
import ku.common.*;
import ni.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import pv.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=TS0Q ****
// TS0Q - NIL PACK LIST COUNTRY OF ORIGIN MAINTENANCE
// 
// THIS PROGRAM WILL ALLOW THE USERS TO INQUIRE AND MAINTAIN
// NIL PACK LIST COUNTRY OF ORIGIN DATABASE.  THE PURPOSE OF
// THIS DATABASE IS TO SUPPLY OTHER APPLICATIONS COUNTRY OF
// ORIGIN BASED ON WAREHOUSE, GPC, STYLE AND COLOR.
// 
// THE USER CAN TRANSFER OUT OF THIS APPLICATION BY USING ONE
// OF THE PF KEYS DISPLAYED AT THE BOTTOM OF THE MAP, OR BY
// ENTERING FAST-PATH INFORMATION (ALSO AT THE BOTTOM OF THE
// MAP).
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      05/15/92  DCHIAN  NEW APPLICATION.
// TS#0     10/29/92  DCHIAN  INCREASE WORK TABLE SIZE.
// TS43     12/02/92  DCHIAN  ALLOW GPC 1 & 7, REMOVE GPC FROM
//                            DETAIL AND DEFAULT FROM HEADING.
// TS48     01/26/93  DCHIAN  CHECK VNLCOR IF ROW EXIST BEFORE
//                            INSERTING TABLE ROW.
// TS8901   03/04/94  HKEMPE  Generate/Compile to pick up revsd
//                            COMMAREA, TSWREC, XCTTBL, XWHTBL.
// main     01/23/97pcole   change default whse to 9
// *********************
Program TS0Q type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TS00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  TS0QW01 TS0QW01; // record
  TS0QW02 TS0QW02; // record
  TSWREC TSWREC; // record
  VNLCOR01 VNLCOR01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XWHTBL; // table
  use XGPTBL; // table
  use XCTTBL; // table
  use TS0QM.TS0QM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTS001: XPTS001();
     /* ------------------------------------------------------------*/
     /* INITIALIZE WORKING STORAGE AND DISPLAY STORAGE AREAS.*/
     /* ------------------------------------------------------------*/

    set TS0QM001 initial; /* CLEAR THE MAP*/
    set TS0QW01 empty; /* INITIALIZE WORKING STORAGE*/
    set TS0QW02 empty; /* INITIALIZE WORKING STORAGE TBL*/
    set VNLCOR01 empty; /* INITIALIZE NIL P/L CTRY OF ORIG TBL*/
    set SQLCA empty; /* SQL COMMUNICATION AREA*/
    set TAEREC empty; /* ERROR DIAGNOSIS INFORMATION*/
    set TA1REC empty; /* ERROR DIAGNOSIS PARAMETERS*/

    TS0QW01.TS0QW-FIRST-TIME = "Y";
    TS0QW01.XWHCD = "09"; /* CURRENTLY FOR WHSE ONLY*/
    TS0QW01.XGPCD = "02"; /* CURRENTLY FOOTWEAR SALESMAN SAMPLE*/

     /* ------------------------------------------------------------*/
     /* FLOW TO CONVERSE THE MAIN PROCESS USED TO DISPLAY A MAP.*/
     /* ------------------------------------------------------------*/

    goto TS0Q-001; /* Converse the main process*/

    TS0Q-001: TS0Q-001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TS0Q-001; /* Converse the main process*/


  end // end main
end // end TS0Q

// Inquire/maintain a table row
Function TS0Q-001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TS0Q-100(); /* Obtain the data to display*/

  TS0Q-200(); /* Format and display the map*/

  TS0Q-300(); /* Check attention identifier*/

  TS0Q-400(); /* Reset fields to normal intensity*/

  TS0Q-500(); /* Verify the entered data*/

  TS0Q-600(); /* Process valid input request*/


end // end TS0Q-001

// Obtain the data to display
Function TS0Q-100()
   /* --------------------------------------------------------------------*/
   /* OBTAIN DATA TO DISPLAY AND STORE IN W/S TABLE*/
   /* --------------------------------------------------------------------*/

   /* --------------------------------------------------------------------*/
   /* IF DATA WAS REQUESTED, EZEMNO IS 0, OBTAIN DATA,*/
   /* ELSE RETURN TO PREVIOUS PROCESS.*/
   /* --------------------------------------------------------------------*/

  if (TS0QW01.TS0QW-FIRST-TIME == "Y")
    if (converseVar.validationMsgNum == 0)
       /* NEXT SENTENCE*/
    end
  else
    return; /* RETURN TO PREVIOUS PROCESS(TS0Q-001)*/
  end


   /* --------------------------------------------------------------------*/
   /* SELECT ON THE NIL PACK LIST COUNTRY OF ORIGIN TABLE*/
   /* --------------------------------------------------------------------*/

  VNLCOR01.XWHCD = TS0QW01.XWHCD;
  VNLCOR01.XGPCD = TS0QW01.XGPCD;

  if (TS0QW01.SY1STNBR == " ")
    VNLCOR01.SY1STNBR = "*";
  else
    VNLCOR01.SY1STNBR = TS0QW01.SY1STNBR;
  end

  if (TS0QW01.SY2CLRID == " ")
    VNLCOR01.SY2CLRID = "*";
  else
    VNLCOR01.SY2CLRID = TS0QW01.SY2CLRID;
  end

  if (TS0QW01.XCTCD == " ")
    VNLCOR01.XCTCD = "*";
  else
    VNLCOR01.XCTCD = TS0QW01.XCTCD;
  end

  call "IO0650" ("S1", SQLCA, VNLCOR01) {isNoRefresh = yes, isExternal = yes}; /* SELECT ROWS*/

  if (SQLCA.VAGen_SQLCODE == 0)
    /* NEXT SENTENCE*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(11); /* CONTENTION FOR DATA BASE RESOURCE*/
      return;
    else
      converseLib.validationFailed(10); /* FATAL ERROR*/
      TA1REC.TA1PGMNO = "TS0Q"; /* MODULE ID*/
      TA1REC.TA1TYPE = "DB2"; /* TYPE OF ERROR*/
      TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
      TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* PROGRAM APPLICATION*/
      TA1REC.TA1DBASE = "DTRANS  "; /* DATABASE NAME*/
      TA1REC.TA1TBLVU = "VNLCOR01"; /* TABLE VIEW NAME*/
      TA1REC.TA1TBLKE = VNLCOR01.VNLCOR01-KEY; /* TABLE KEY*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC;
      call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* ERROR DIAG RTN*/
      return;
    end
  end

   /* --------------------------------------------------------------------*/
   /* LOAD WORKING STORAGE TABLE UNTIL END OF NIL P/L CTRY OF ORIG TBL*/
   /* --------------------------------------------------------------------*/

  TS0QW01.TS0QW-NDX = 1;
  while (SQLCA.VAGen_SQLCODE == 0)
    TS0Q-110();
  end

   /* --------------------------------------------------------------------*/
   /* CLOSE ORDER LOCATION TABLE*/
   /* --------------------------------------------------------------------*/

  call "IO0650" ("C1", SQLCA, VNLCOR01) {isNoRefresh = yes, isExternal = yes};

end // end TS0Q-100

// Select the requested table row
Function TS0Q-110()
   /* ------------------------------------------------------------*/
   /* READ NIL P/L CTRY ORIG TBL AND LOAD INTO W/S TABLE*/
   /* ------------------------------------------------------------*/

  call "IO0650" ("N1", SQLCA, VNLCOR01) {isNoRefresh = yes, isExternal = yes}; /* GET EACH ROW*/

  if (SQLCA.VAGen_SQLCODE == 0)
   /* NEXT SENTENCE*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(11); /* CONTENTION FOR DATA BASE RESOURCE*/
      return;
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* END OF FILE*/
        TS0QW01.TS0QW-TOT-REC-READ = TS0QW01.TS0QW-NDX;
        TS0QW01.TS0QW-TOT-REC-READ = TS0QW01.TS0QW-TOT-REC-READ - 1;
        return;
      else
        converseLib.validationFailed(10); /* FATAL ERROR*/
        TA1REC.TA1PGMNO = "TS0Q";
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1LOC = "GET NEXT TABLE ROW";
        TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
        TA1REC.TA1DBASE = "DTRANS  ";
        TA1REC.TA1TBLVU = "VNLCOR01";
        TA1REC.TA1TBLKE = VNLCOR01.VNLCOR01-KEY;
        TAEREC.SQLCAREC = SQLCA.SQLCAREC;
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
        return;
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* LOAD INTO W/S TABLE AND ALSO CHECK FOR TABLE OVERFLOW*/
   /* ------------------------------------------------------------*/

  if (TS0QW01.TS0QW-NDX < 1201)
    TS0QW02.XWHCD[TS0QW-NDX] = VNLCOR01.XWHCD;
    TS0QW02.SY1STNBR[TS0QW-NDX] = VNLCOR01.SY1STNBR;
    TS0QW02.SY2CLRID[TS0QW-NDX] = VNLCOR01.SY2CLRID;
    TS0QW02.XCTCD[TS0QW-NDX] = VNLCOR01.XCTCD;
    TS0QW02.ZZZCHGDT[TS0QW-NDX] = VNLCOR01.ZZZCHGDT;
    TS0QW02.ZZZCHGCT[TS0QW-NDX] = VNLCOR01.ZZZCHGCT;
  else
    converseLib.validationFailed(342); /* INTERNAL TABLE OVERFLOW*/
    return;
  end

  TS0QW01.TS0QW-NDX = TS0QW01.TS0QW-NDX + 1;

end // end TS0Q-110

// Format and converse the map
Function TS0Q-200()
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  if (TS0QW01.TS0QW-FIRST-TIME == "Y")
    TS0QW01.TS0QW-FIRST-TIME = "N";
    TS0QM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    TS0QM001.XWHCD = TS0QW01.XWHCD;
    TS0QM001.XGPCD = TS0QW01.XGPCD;
    TS0QM001.SY1STNBR = TS0QW01.SY1STNBR;
    TS0QM001.SY2CLRID = TS0QW01.SY2CLRID;
    TS0QM001.XCTCD = TS0QW01.XCTCD;
    if (TS0QW01.TS0QW-TOT-REC-READ > 0)
      TS0QW01.TS0QW-NDX = 1;
      TS0QW01.TS0QW-NX2 = 1;
      TS0QW01.TS0QW-BAS = 1;
      TS0QW01.TS0QW-END = 24;
      TS0QW01.TS0QW-BLD-MAP-SW = "Y";
      while (TS0QW01.TS0QW-BLD-MAP-SW == "Y")
        TS0Q-210();
      end
    else
      converseLib.validationFailed(21); /* NO ROW WERE FOUND TO DISPLAY*/
    end
  end

  converse TS0QM001 ;

  converseLib.validationFailed(0);

end // end TS0Q-200

// Format the display data
Function TS0Q-210()
   /* ------------------------------------------------------------*/
   /* Format the map key fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  if (TS0QW01.TS0QW-NDX > TS0QW01.TS0QW-TOT-REC-READ
   || TS0QW01.TS0QW-NDX > TS0QW01.TS0QW-END)
    TS0QW01.TS0QW-BLD-MAP-SW = "N";
    return;
  else
    TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] = TS0QW02.SY1STNBR[TS0QW-NDX];
    TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] = TS0QW02.SY2CLRID[TS0QW-NDX];
    TS0QM001.TS0QM-XCTCD[TS0QW-NX2] = TS0QW02.XCTCD[TS0QW-NDX];
    TS0QM001.TS0QM-ZZZCHGDT[TS0QW-NX2] = TS0QW02.ZZZCHGDT[TS0QW-NDX];
  end

  TS0QW01.TS0QW-NDX = TS0QW01.TS0QW-NDX + 1;
  TS0QW01.TS0QW-NX2 = TS0QW01.TS0QW-NX2 + 1;
end // end TS0Q-210

// Check attention identifier
Function TS0Q-300()
   /* ------------------------------------------------------------*/
   /* CHECK PF KEYS/USER INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1
   || converseVar.eventKey is pa2
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is enter)
     /* NEXT SENTENCE*/
  else
    converseLib.validationFailed(4); /* INVALID PF KEY*/
    return; /* EXIT TO REDISPLAY MAP*/
  end

   /* ------------------------------------------------------------*/
   /* HAS KEY FIELDS BEEN MODIFIED, VALIDATE AND OBTAIN DATA*/
   /* ------------------------------------------------------------*/

  if (TS0QM001.XWHCD is modified
   || TS0QM001.XGPCD is modified
   || TS0QM001.SY1STNBR is modified
   || TS0QM001.SY2CLRID is modified
   || TS0QM001.XCTCD is modified)
    if (TS0QM001.XWHCD in XWHTBL.XWHCD)
      TS0QW01.XWHCD = TS0QM001.XWHCD;
      TS0QW01.XGPCD = TS0QM001.XGPCD;
      TS0QW01.SY1STNBR = TS0QM001.SY1STNBR;
      TS0QW01.SY2CLRID = TS0QM001.SY2CLRID;
      TS0QW01.XCTCD = TS0QM001.XCTCD;
      set TS0QM001 initial;
      set TS0QW02 empty;
      TS0QW01.TS0QW-FIRST-TIME = "Y";
      exit stack;
    else
      converseLib.validationFailed(82); /* WAREHOUSE CODE IS INVALID*/
      set TS0QM001.XWHCD cursor, modified, bold;
      exit stack;
    end
  end

   /* ------------------------------------------------------------*/
   /* TRANSFER TO REQUESTED APPLICATION VIA FAST PATH*/
   /* ------------------------------------------------------------*/

  if (TS0QM001.CATOAP is modified)
    TS0Q-310();
  end

   /* ------------------------------------------------------------*/
   /* GO TO HELP APPLICATION*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1)
    XSPF1();
    TS0QM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    return;
  end

   /* ------------------------------------------------------------*/
   /* CANCEL*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2)
    set TS0QM001 initial;
    TS0QM001.XXXCURDT = VGVar.currentShortGregorianDate;
    TS0QM001.XWHCD = TS0QW01.XWHCD;
    TS0QM001.XGPCD = TS0QW01.XGPCD;
    TS0QM001.SY1STNBR = TS0QW01.SY1STNBR;
    TS0QM001.SY2CLRID = TS0QW01.SY2CLRID;
    TS0QM001.XCTCD = TS0QW01.XCTCD;
    TS0QW01.TS0QW-NDX = 1;
    TS0QW01.TS0QW-NX2 = 1;
    TS0QW01.TS0QW-YES-NO-SW = "N";
    while (TS0QW01.TS0QW-YES-NO-SW == "N")
      TS0Q-320(); /* REFRESH SCREEN*/
    end
    return;
  end

   /* ------------------------------------------------------------*/
   /* GO TO NIL PACK LIST MENU*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf3)
    set TSWREC empty;
    TSWREC.XWHCD = TS0QM001.XWHCD;
    COMMAREA.CAFROMAP = "TS0Q";
    COMMAREA.CATOAP = "TS03";
    XSEXIT(); /* GO TO PICK MASTER MENU*/
    TS0QM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    return;
  end

   /* ------------------------------------------------------------*/
   /* MOVES COMMON TO ALL TRANSFERS*/
   /* ------------------------------------------------------------*/

  TSWREC.XWHCD = TS0QM001.XWHCD;
  COMMAREA.CAFROMAP = "TS0Q";

   /* ------------------------------------------------------------*/
   /* GO TO MASTER MENU*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf4)
    XSPF4();
    TS0QM001.VAGen_EZEMSG = COMMAREA.CAMSG;
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR FORWARD AND BACKWARD PAGING*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7
   && TS0QW01.TS0QW-BAS == 1)
    converseLib.validationFailed(2);
  end


  if (converseVar.eventKey is pf8
   && TS0QW01.TS0QW-END >= TS0QW01.TS0QW-TOT-REC-READ)
    converseLib.validationFailed(3);
  end



  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    if (TS0QW01.TS0QW-TOT-REC-READ < 25)
       /* NEXT SENTENCE*/
    else
      if (converseVar.eventKey is pf8 /* PAGE FORWARD*/
       && TS0QW01.TS0QW-END < TS0QW01.TS0QW-TOT-REC-READ)
        TS0QW01.TS0QW-END = TS0QW01.TS0QW-END + 24;
        TS0QW01.TS0QW-BAS = TS0QW01.TS0QW-BAS + 24;
        TS0QW01.TS0QW-NDX = 1;
        TS0QW01.TS0QW-NX2 = 1;
        TS0QW01.TS0QW-YES-NO-SW = "N";
        while (TS0QW01.TS0QW-YES-NO-SW == "N")
          TS0Q-330();
        end
      else
        if (converseVar.eventKey is pf7 /* PAGE BACKWARD*/
         && TS0QW01.TS0QW-BAS > 1)     
          TS0QW01.TS0QW-END = TS0QW01.TS0QW-END - 24;
          TS0QW01.TS0QW-BAS = TS0QW01.TS0QW-BAS - 24;
          if (TS0QW01.TS0QW-BAS < 1)
            TS0QW01.TS0QW-END = 24;
            TS0QW01.TS0QW-NDX = 1;
            TS0QW01.TS0QW-NX2 = 1;
            TS0QW01.TS0QW-BAS = 1;
            TS0QW01.TS0QW-YES-NO-SW = "N";
            while (TS0QW01.TS0QW-YES-NO-SW == "N")
              TS0Q-330();
            end
          else
            TS0QW01.TS0QW-NDX = 1;
            TS0QW01.TS0QW-NX2 = 1;
            TS0QW01.TS0QW-YES-NO-SW = "N";
            while (TS0QW01.TS0QW-YES-NO-SW == "N")
              TS0Q-330();
            end
          end
        end
      end
    end
  end
end // end TS0Q-300

// VALIDATE FAST PATH ROUTINE
Function TS0Q-310()
   /* ---------------------------------------------------------------------*/
   /* CHECK FAST PATH IS VALIDATE*/
   /* ---------------------------------------------------------------------*/

  if (converseVar.eventKey is enter)
    if (TS0QM001.CATOAP == COMMAREA.CACURRAP)
      set TS0QM001.CATOAP cursor, modified, bold;
      converseLib.validationFailed(337); /* INVALID FAST PATH OPTION*/
      return;
    else
      COMMAREA.CATOAP = TS0QM001.CATOAP; /* TO APPLICATION*/
      COMMAREA.CAITEM = TS0QM001.CAITEM; /* APPLICATION DATA*/
      XSEXIT(); /* TRANSTER TO REQ APPL*/
      TS0QM001.CATOAP = COMMAREA.CATOAP; /* TO APPLICATION*/
      set TS0QM001.CATOAP cursor, bold; /* HIGHLIGHT TO APPL*/
      TS0QM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* RETURN ERROR MSG*/
      converseLib.validationFailed(); /* FORCE ALARM TO SOUND*/
      COMMAREA.CATOAP = " "; /* CLEAR APPLICATION*/
      exit stack;
    end
  end

end // end TS0Q-310

// REFRESH MAP SCREEN
Function TS0Q-320()
   /* -------------------------------------------------------------------*/
   /* REFRESH SCREEN*/
   /* -------------------------------------------------------------------*/

  if (TS0QW01.TS0QW-NDX > TS0QW01.TS0QW-END)
    TS0QW01.TS0QW-YES-NO-SW = "Y";
  else
    if (TS0QW01.TS0QW-NDX >= TS0QW01.TS0QW-BAS)
      TS0QM001.TS0QM-ACT[TS0QW-NX2] = " ";
      TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] = TS0QW02.SY1STNBR[TS0QW-NDX];
      TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] = TS0QW02.SY2CLRID[TS0QW-NDX];
      TS0QM001.TS0QM-XCTCD[TS0QW-NX2] = TS0QW02.XCTCD[TS0QW-NDX];
      TS0QM001.TS0QM-ZZZCHGDT[TS0QW-NX2] = TS0QW02.ZZZCHGDT[TS0QW-NDX];
      TS0QW01.TS0QW-NX2 = TS0QW01.TS0QW-NX2 + 1;
    end
  end


  TS0QW01.TS0QW-NDX = TS0QW01.TS0QW-NDX + 1;

end // end TS0Q-320

// PAGING FORWARD OR BACKWARD
Function TS0Q-330()
   /* --------------------------------------------------------------------*/
   /* PAGING FORWARD OR BACKWARD*/
   /* --------------------------------------------------------------------*/

  if (TS0QW01.TS0QW-NDX > TS0QW01.TS0QW-END)
    TS0QW01.TS0QW-YES-NO-SW = "Y";
  else
    if (TS0QW01.TS0QW-NDX >= TS0QW01.TS0QW-BAS)
      TS0QM001.TS0QM-ACT[TS0QW-NX2] = TS0QW02.TS0QW-ACT[TS0QW-NDX];
      TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] = TS0QW02.SY1STNBR[TS0QW-NDX];
      TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] = TS0QW02.SY2CLRID[TS0QW-NDX];
      TS0QM001.TS0QM-XCTCD[TS0QW-NX2] = TS0QW02.XCTCD[TS0QW-NDX];
      TS0QM001.TS0QM-ZZZCHGDT[TS0QW-NX2] = TS0QW02.ZZZCHGDT[TS0QW-NDX];
      set TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] normal;
      set TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] normal;
      set TS0QM001.TS0QM-XCTCD[TS0QW-NX2] normal;
      set TS0QM001.TS0QM-ZZZCHGDT[TS0QW-NX2] normal;
      TS0QW01.TS0QW-NX2 = TS0QW01.TS0QW-NX2 + 1;
    end
  end


  TS0QW01.TS0QW-NDX = TS0QW01.TS0QW-NDX + 1;

end // end TS0Q-330

// Reset highlighted fields
Function TS0Q-400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  TS0QW01.TS0QW-NX2 = 1;
  while (TS0QW01.TS0QW-NX2 <= 24)
    set TS0QM001.TS0QM-ACT[TS0QW-NX2] initialAttributes;
    set TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] initialAttributes;
    set TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] initialAttributes;
    set TS0QM001.TS0QM-XCTCD[TS0QW-NX2] initialAttributes;
    set TS0QM001.TS0QM-ZZZCHGDT[TS0QW-NX2] initialAttributes;
    TS0QW01.TS0QW-NX2 = TS0QW01.TS0QW-NX2 + 1;
  end


  set TS0QM001.CATOAP initialAttributes;
  set TS0QM001.CAITEM initialAttributes;


end // end TS0Q-400

Function TS0Q-500()
   /* -------------------------------------------------------------------*/
    /* IF EZEAID IS ENTER - EDIT LINE ITEMS*/
    /* TS0QW-UPD-REQ-SW, IF ACTION IS A, C, D SET TO 'Y'.*/
   /* -------------------------------------------------------------------*/

  TS0QW01.TS0QW-UPD-REQ-SW = "N";

  if (converseVar.eventKey is enter)
    TS0QW01.TS0QW-NX2 = 24;
    TS0QW01.TS0QW-YES-NO-SW = "N";
    while (TS0QW01.TS0QW-YES-NO-SW == "N")
      TS0Q-510();
    end
  end

end // end TS0Q-500

// EDIT LINE ITEMS ON MAP
Function TS0Q-510()
   /* --------------------------------------------------------------------*/
   /* EDIT LINE ITEMS*/
   /* --------------------------------------------------------------------*/

  TS0QW01.TS0QW-ACT-ERR-SW = "N"; /* ACTION FIELD HAD ERRORS FLAG*/
  TS0QW01.TS0QW-GPC-SYCLR-ERR-SW = "N"; /* GPC, STYCLR HAD ERR FLG*/
  TS0QW01.TS0QW-CTRY-ERR-SW = "N"; /* CTRY OF ORIG HAD ERRORS FLAG*/


  if (TS0QW01.TS0QW-NX2 < 1) /* NO MORE ITEMS ON SCREEN*/
    TS0QW01.TS0QW-YES-NO-SW = "Y"; /* TO CHECK, RETURN*/
    return;
  end

   /* --------------------------------------------------------------------*/
   /* CALCULATE INTERNAL TABLE INDEX TO BE ON SAME LINE ITEM AS MAP*/
   /* REGARDLESS WHAT PAGE OF MAP IT IS ON*/
   /* --------------------------------------------------------------------*/

  if (TS0QW01.TS0QW-BAS == 0)
    TS0QW01.TS0QW-BAS = 1;
    TS0QW01.TS0QW-END = 24;
  end

  TS0QW01.TS0QW-NDX = TS0QW01.TS0QW-NX2 + TS0QW01.TS0QW-BAS - 1;

   /* --------------------------------------------------------------------*/
   /* IF ACTION CODE IS NOT 'A', 'C', 'D' OR ' ' THIS IS AN ERROR*/
   /* --------------------------------------------------------------------*/

  if (TS0QM001.TS0QM-ACT[TS0QW-NX2] == "A")
    TS0Q-520();
  else
    if (TS0QM001.TS0QM-ACT[TS0QW-NX2] == "C")
      TS0Q-530();
    else
      if (TS0QM001.TS0QM-ACT[TS0QW-NX2] == "D")
        TS0Q-540();
      else
        if (TS0QM001.TS0QM-ACT[TS0QW-NX2] == " ")
          TS0Q-550();
        else
          set TS0QM001.TS0QM-ACT[TS0QW-NX2] cursor, bold;
          TS0QW01.TS0QW-ACT-ERR-SW = "Y";
          converseLib.validationFailed(338);
        end
      end
    end
  end

   /* --------------------------------------------------------------------*/
   /* RESET FIELDS - MULTIPLY PASS UNTIL ERRORS ARE CORRECTED*/
   /* --------------------------------------------------------------------*/

  if (TS0QW01.TS0QW-ACT-ERR-SW == "N")
    set TS0QM001.TS0QM-ACT[TS0QW-NX2] normal;
  end

  if (TS0QW01.TS0QW-GPC-SYCLR-ERR-SW == "N")
    set TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] normal;
    set TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] normal;
  end

  if (TS0QW01.TS0QW-CTRY-ERR-SW == "N")
    set TS0QM001.TS0QM-XCTCD[TS0QW-NX2] normal;
  end

  TS0QW01.TS0QW-NX2 = TS0QW01.TS0QW-NX2 - 1; /* DECREMENT MAP INDEX*/

end // end TS0Q-510

// EDIT ACTION CODE 'A' LINE ITEM
Function TS0Q-520()
   /* --------------------------------------------------------------------*/
   /* ACTION CODE IS 'A' FOR ADD, EDIT FOR ERRORS*/
   /* --------------------------------------------------------------------*/

  TS0QW01.TS0QW-UPD-REQ-SW = "Y";

   /* ---------------------------------------*/
   /* CHECK IF COUNTRY CODE IS VALID*/
   /* ---------------------------------------*/

  if (TS0QM001.TS0QM-XCTCD[TS0QW-NX2] in XCTTBL.XCTCD)
     /* NEXT SENTENCE*/
  else
    converseLib.validationFailed(29);
    set TS0QM001.TS0QM-XCTCD[TS0QW-NX2] cursor, bold;
    TS0QW01.TS0QW-CTRY-ERR-SW = "Y";
  end

   /* ---------------------------------------*/
   /* VERIFY GPC/STYLE/COLOR*/
   /* ---------------------------------------*/

  TS0Q-560();

   /* ---------------------------------------*/
   /* CHECK FOR DUPLICATES*/
   /* ---------------------------------------*/

  TS0QW01.TS0QW-NDX = 1;
  while (TS0QW01.TS0QW-NDX <= TS0QW01.TS0QW-TOT-REC-READ)
    TS0Q-570();
  end

end // end TS0Q-520

// EDIT ACTION CODE 'C' LINE ITEM
Function TS0Q-530()

   /* ------------------------------------------------------------------*/
   /* ACTION CODE IS 'C' FOR CHANGE, EDIT FOR ERRORS*/
   /* ------------------------------------------------------------------*/

  TS0QW01.TS0QW-UPD-REQ-SW = "Y";

   /* ------------------------------------------------------------------*/
   /* GPC/SYTLE/COLOR CANNOT BE MODIFIED, ONLY COUNTRY CODE IS ALLOWED*/
   /* ------------------------------------------------------------------*/

  if (TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] != TS0QW02.SY1STNBR[TS0QW-NDX]
   || TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] != TS0QW02.SY2CLRID[TS0QW-NDX])
    converseLib.validationFailed(339);
    TS0QW01.TS0QW-GPC-SYCLR-ERR-SW = "Y";
    set TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] bold;
    set TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] bold;
  end

   /* ------------------------------------------------------------------*/
   /* IF COUNTRY CODE HAS CHANGED, VERIFY COUNTRY CODE*/
   /* IF COUNTRY CODE HAS NOT CHANGED, WHY IS ACTION CODE 'C' ENTERED*/
   /* ------------------------------------------------------------------*/

  if (TS0QM001.TS0QM-XCTCD[TS0QW-NX2] != TS0QW02.XCTCD[TS0QW-NDX])
    if (TS0QM001.TS0QM-XCTCD[TS0QW-NX2] in XCTTBL.XCTCD)
       /* NEXT SENTENCE*/
    else
      converseLib.validationFailed(29);
      TS0QW01.TS0QW-CTRY-ERR-SW = "Y";
      set TS0QM001.TS0QM-XCTCD[TS0QW-NX2] cursor, bold;
    end
  else
    converseLib.validationFailed(343);
    TS0QW01.TS0QW-CTRY-ERR-SW = "Y";
    set TS0QM001.TS0QM-XCTCD[TS0QW-NX2] cursor, bold;
  end

end // end TS0Q-530

// EDIT ACTION CODE 'D' LINE ITEM
Function TS0Q-540()

   /* ---------------------------------------------------------------------*/
   /* ACTION CODE 'D' FOR DELETE, EDIT FOR ERROR*/
   /* ---------------------------------------------------------------------*/

  TS0QW01.TS0QW-UPD-REQ-SW = "Y";

   /* -------------------------------------------------*/
   /* IF ANY FIELD HAS BEEN MODIFIED, THIS IS AN ERROR*/
   /* -------------------------------------------------*/

  if (TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] != TS0QW02.SY1STNBR[TS0QW-NDX]
   || TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] != TS0QW02.SY2CLRID[TS0QW-NDX]
   || TS0QM001.TS0QM-XCTCD[TS0QW-NX2] != TS0QW02.XCTCD[TS0QW-NDX])
    converseLib.validationFailed(344);
    TS0QW01.TS0QW-ACT-ERR-SW = "Y";
    set TS0QM001.TS0QM-ACT[TS0QW-NX2] cursor, bold;
  end

end // end TS0Q-540

// EDIT ACTION CODE ' ' LINE ITEM
Function TS0Q-550()
   /* ------------------------------------------------------------------*/
   /* ACTION CODE IS ' ', ALL FIELDS MUST REMAIN THE SAME, ELSE ERROR*/
   /* ------------------------------------------------------------------*/

  if (TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] != TS0QW02.SY1STNBR[TS0QW-NDX]
   || TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] != TS0QW02.SY2CLRID[TS0QW-NDX]
   || TS0QM001.TS0QM-XCTCD[TS0QW-NX2] != TS0QW02.XCTCD[TS0QW-NDX])
    converseLib.validationFailed(345);
    TS0QW-ACT-ERR-SW = "Y";
    set TS0QM001.TS0QM-ACT[TS0QW-NX2] cursor, bold;
  end

end // end TS0Q-550

// VERIFY GPC/STYLE/COLOR
Function TS0Q-560()
   /* --------------------------------------------------------------------*/
   /* VERIFY THAT GPC, STYLE AND COLOR IS ON DPRODG.VSYCLR01 TABLE*/
   /* --------------------------------------------------------------------*/

  set PG2REC empty;
  PG2REC.XGPCD = TS0QM001.XGPCD;
  PG2REC.SY1STNBR = TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2];
  PG2REC.SY2CLRID = TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2];
  PG2REC.XDMCD = "00";

  call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes}; /* SELECT UNIQUE ROW*/

  if (SQLCA.VAGen_SQLCODE == 0)
     /* NEXT SENTENCE*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(11); /* IN USE*/
      TS0QW01.TS0QW-GPC-SYCLR-ERR-SW = "Y"; /* GPC/STY/CLR ERROR*/
      set TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] modified, bold;
      set TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] modified, bold;
      return;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(341); /* GPC/STY/CLR NOT IN TABLE*/
        TS0QW01.TS0QW-GPC-SYCLR-ERR-SW = "Y"; /* GPC/STY/CLR ERROR*/
        set TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] modified, bold;
        set TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] modified, bold;
        return;
      else
        converseLib.validationFailed(29); /* FATAL ERROR*/
        TS0QW01.TS0QW-GPC-SYCLR-ERR-SW = "Y"; /* GPC/STY/LOC ERROR*/
        set TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] modified, bold;
        set TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] modified, bold;
        TA1REC.TA1PGMNO = "TS0Q";
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1LOC = "SELECT UNIQUE OF TABLE ROW";
        TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
        TA1REC.TA1DBASE = "DPRODG  ";
        TA1REC.TA1TBLVU = "VSYCLR01";
        TA1REC.TA1TBLKE = PG2REC.PG2KEY;
        TAEREC.SQLCAREC = SQLCA.SQLCAREC;
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
        return;
      end
    end
  end
end // end TS0Q-560

// CHECK FOR DUPLICATES FOR ADD
Function TS0Q-570()

   /* ---------------------------------------------------------------------*/
   /* ACTION 'A' (ADD), CHECK FOR DUPLICATES*/
   /* ---------------------------------------------------------------------*/

  if (TS0QW02.SY1STNBR[TS0QW-NDX] == TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2]
   && TS0QW02.SY2CLRID[TS0QW-NDX] == TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2])
    converseLib.validationFailed(340);
    TS0QW01.TS0QW-GPC-SYCLR-ERR-SW = "Y";
    set TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] bold;
    set TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] bold;
    TS0QW01.TS0QW-NDX = TS0QW01.TS0QW-TOT-REC-READ + 1;
  end

   /* ---------------------------------------------------------------------*/
   /* ALSO CHECK FOR DUPLICATES ON OTHER ELEMENTS OF THE MAP*/
   /* ---------------------------------------------------------------------*/

  if (TS0QW01.TS0QW-NDX <= 24
   && TS0QW01.TS0QW-NDX != TS0QW01.TS0QW-NX2)
    if (TS0QM001.TS0QM-SY1STNBR[TS0QW-NDX] == 
    TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2]
     && TS0QM001.TS0QM-SY2CLRID[TS0QW-NDX] == 
    TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2])
      converseLib.validationFailed(340);
      TS0QW01.TS0QW-GPC-SYCLR-ERR-SW = "Y";
      set TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2] bold;
      set TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2] bold;
      TS0QW01.TS0QW-NDX = TS0QW01.TS0QW-TOT-REC-READ + 1;
    end
  end


  TS0QW01.TS0QW-NDX = TS0QW01.TS0QW-NDX + 1; /* INCREMENT W/S TBL INDEX*/

end // end TS0Q-570

// Process valid input request
Function TS0Q-600()

   /* --------------------------------------------------------------------*/
                                  /* IF UPDATE IS REQUESTED AND*/
                                   /* COMMAREA.CACHGFL = 'N', USER NOT*/
                                   /* AUTHORIZED*/
   /* WITH UPDATE CAPABILITIES.*/
   /* --------------------------------------------------------------------*/

  if (TS0QW01.TS0QW-UPD-REQ-SW == "Y")
    if (COMMAREA.CACHGFL == "N")
      converseLib.validationFailed(208);
      return;
    end
  end

   /* --------------------------------------------------------------------*/
   /* IF UPDATES WERE REQUESTED, UPDATE NIL P/L LIST CTRY OF ORIG TABLE*/
   /* THIS PROCESS IS PERFORMED 24 TIMES VARYING THE INDEX (TS0QW-NX2)*/
   /* FROM 1 TO 24. IF UPDATES WERE SUCCESSFUL CLEAR THE MAP AND W/S*/
   /* AND RELOAD THE MAP AND W/S.*/
   /* --------------------------------------------------------------------*/

  if (TS0QW01.TS0QW-UPD-REQ-SW == "Y" /* UPDATE IS REQUEST*/
   && converseVar.validationMsgNum == 0) /* AND NO ERROR, DO UPDATE*/
    TS0QW01.TS0QW-NDX = 1;
    TS0QW01.TS0QW-NX2 = 1;
    TS0QW01.TS0QW-UPD-ERR-SW = "N";
    while (TS0QW01.TS0QW-NX2 <= 24
     && TS0QW01.TS0QW-UPD-ERR-SW == "N")
      TS0Q-610();
    end
    if (TS0QW01.TS0QW-UPD-ERR-SW == "N") /* UPDATE SUCCESSFUL*/
      set TS0QM001 initial;
      set TS0QW02 empty;
      TS0QW01.TS0QW-FIRST-TIME = "Y";
    end
  end

   /* --------------------------------------------------------------------*/
   /* UPDATE NOT REQUESTED, POSITION CURSOR TO 1ST ORDER ITEM*/
   /* --------------------------------------------------------------------*/

  if (TS0QW01.TS0QW-UPD-REQ-SW == "N"
   && converseVar.validationMsgNum == 0)
    set TS0QM001.TS0QM-ACT[1] cursor;
  end

   /* ------------------------------------------------------------*/
   /* Commit all changes to protected resources.*/
   /* ------------------------------------------------------------*/


  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit(); /* Commit all changes*/


end // end TS0Q-600

// DETERMINE UPDATE ACTION
Function TS0Q-610()

   /* --------------------------------------------------------------------*/
   /* DETERMINE UPDATE ACTION - ADD/CHANGE/DELETE*/
   /* --------------------------------------------------------------------*/

  set VNLCOR01 empty;

  if (TS0QM001.TS0QM-ACT[TS0QW-NX2] == "D")
    TS0Q-620(); /* DELETE COUNTRY OF ORIGIN ROW*/
  else
    if (TS0QM001.TS0QM-ACT[TS0QW-NX2] == "C")
      TS0Q-630(); /* CHANGE COUNTRY OF ORIGIN ROW*/
    else
      if (TS0QM001.TS0QM-ACT[TS0QW-NX2] == "A")
        TS0Q-650(); /* CHECK IF TABLE ROW EXIST*/
        if (SQLCA.VAGen_SQLCODE == 100) /* TABLE ROW DOES NOT EXIST*/
          TS0Q-640(); /* ADD COUNTRY OF ORIGIN ROW*/
        end
      end
    end
  end


  TS0QW01.TS0QW-NX2 = TS0QW01.TS0QW-NX2 + 1; /* INCREMENT MAP INDEX*/

end // end TS0Q-610

// DELETE COUNTRY OF ORIGIN ROW
Function TS0Q-620()

   /* ---------------------------------------------------------------------*/
   /* DELETE COUNTRY OF ORIGIN ROW*/
   /* ---------------------------------------------------------------------*/

  VNLCOR01.XWHCD = TS0QM001.XWHCD;
  VNLCOR01.XGPCD = TS0QM001.XGPCD;
  VNLCOR01.SY1STNBR = TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2];
  VNLCOR01.SY2CLRID = TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2];

  call "IO0650" ("D ", SQLCA, VNLCOR01) {isNoRefresh = yes, isExternal = yes}; /* DELETE UNIQUE ROW*/

  if (SQLCA.VAGen_SQLCODE == 0)
    converseLib.validationFailed(44); /* TABLE UPDATE SUCESSFUL*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(11); /* CONTENTION FOR DATABASE RESOURCE*/
      TS0QW01.TS0QW-UPD-ERR-SW = "Y";
      return;
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* NO RECORD FOUND, DELETED BY ANOTHER USER*/
        return;
      else
        converseLib.validationFailed(10); /* FATAL ERROR*/
        TS0QW01.TS0QW-UPD-ERR-SW = "Y";
        TA1REC.TA1PGMNO = "TS0Q";
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1LOC = "DELETE UNIQUE TABLE ROW";
        TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
        TA1REC.TA1DBASE = "DTRANS  ";
        TA1REC.TA1TBLVU = "VNLCOR01";
        TA1REC.TA1TBLKE = VNLCOR01.VNLCOR01-KEY;
        TAEREC.SQLCAREC = SQLCA.SQLCAREC;
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
        return;
      end
    end
  end

end // end TS0Q-620

// CHANNGE COUNTRY OF ORIGIN ROW
Function TS0Q-630()

   /* --------------------------------------------------------------------*/
   /* CHANGE NIL PACK LIST COUNTRY OF ORIGIN*/
   /* --------------------------------------------------------------------*/

  VNLCOR01.XWHCD = TS0QM001.XWHCD;
  VNLCOR01.XGPCD = TS0QM001.XGPCD;
  VNLCOR01.SY1STNBR = TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2];
  VNLCOR01.SY2CLRID = TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2];
  VNLCOR01.XCTCD = TS0QM001.TS0QM-XCTCD[TS0QW-NX2];

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  VNLCOR01.ZZZCHGDT = TA2REC.TA2GRGGN;
  VNLCOR01.ZZZCHGTM = TA2REC.TA2TIMHM;

  TS0QW01.TS0QW-NDX = TS0QW01.TS0QW-NX2 + TS0QW01.TS0QW-BAS - 1;
  VNLCOR01.ZZZCHGCT = TS0QW02.ZZZCHGCT[TS0QW-NDX];

  call "IO0650" ("U ", SQLCA, VNLCOR01) {isNoRefresh = yes, isExternal = yes}; /* CHANGE UNIQUE ROW*/
  if (SQLCA.VAGen_SQLCODE == 0)
    converseLib.validationFailed(44); /* DB UPDATE SUCCESSFUL*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(11); /* CONTENTION FOR DATABASE RESOURCE*/
      TS0QW01.TS0QW-UPD-ERR-SW = "Y";
      return;
    else
      converseLib.validationFailed(10); /* FATAL ERROR*/
      TS0QW01.TS0QW-UPD-ERR-SW = "Y";
      TA1REC.TA1PGMNO = "TS0Q";
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1LOC = "CHANGE UNIQUE TABLE ROW";
      TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
      TA1REC.TA1DBASE = "DTRANS  ";
      TA1REC.TA1TBLVU = "VNLCOR01";
      TA1REC.TA1TBLKE = VNLCOR01.VNLCOR01-KEY;
      TAEREC.SQLCAREC = SQLCA.SQLCAREC;
      call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
      return;
    end
  end

end // end TS0Q-630

// ADD COUNTRY OF ORIGIN ROW
Function TS0Q-640()

   /* --------------------------------------------------------------------*/
   /* ADD NIL PACK LIST COUNTRY OF ORIGIN ROW*/
   /* --------------------------------------------------------------------*/

  VNLCOR01.XWHCD = TS0QM001.XWHCD;
  VNLCOR01.XGPCD = TS0QM001.XGPCD;
  VNLCOR01.SY1STNBR = TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2];
  VNLCOR01.SY2CLRID = TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2];
  VNLCOR01.XCTCD = TS0QM001.TS0QM-XCTCD[TS0QW-NX2];

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  VNLCOR01.ZZZSDT = TA2REC.TA2GRGGN;
  VNLCOR01.ZZZCHGDT = TA2REC.TA2GRGGN;
  VNLCOR01.ZZZCHGTM = TA2REC.TA2TIMHM;

  call "IO0650" ("A ", SQLCA, VNLCOR01) {isNoRefresh = yes, isExternal = yes}; /* ADD UNIQUE ROW*/

  if (SQLCA.VAGen_SQLCODE == 0)
    converseLib.validationFailed(44); /* TABLE UPDATE SUCCESSFUL*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(11); /* CONTENTION FOR DATABASE RESOURCE*/
      TS0QW01.TS0QW-UPD-ERR-SW = "Y";
      return;
    else
      converseLib.validationFailed(10); /* FATAL ERROR*/
      TS0QW01.TS0QW-UPD-ERR-SW = "Y";
      TA1REC.TA1PGMNO = "TS0Q";
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1LOC = "ADD UNIQUE TABLE ROW";
      TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
      TA1REC.TA1DBASE = "DTRANS  ";
      TA1REC.TA1TBLVU = "VNLCOR01";
      TA1REC.TA1TBLKE = VNLCOR01.VNLCOR01-KEY;
      TAEREC.SQLCAREC = SQLCA.SQLCAREC;
      call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
      return;
    end
  end
end // end TS0Q-640

Function TS0Q-650()

   /* ---------------------------------------------------------------------*/
   /* SELECT UNIQUE TABLE ROW ON DTRANS.VNLCOR01*/
   /* ---------------------------------------------------------------------*/

  VNLCOR01.XWHCD = TS0QM001.XWHCD;
  VNLCOR01.XGPCD = TS0QM001.XGPCD;
  VNLCOR01.SY1STNBR = TS0QM001.TS0QM-SY1STNBR[TS0QW-NX2];
  VNLCOR01.SY2CLRID = TS0QM001.TS0QM-SY2CLRID[TS0QW-NX2];

  call "IO0650" ("S ", SQLCA, VNLCOR01) {isNoRefresh = yes, isExternal = yes}; /* SELECT UNIQUE ROW*/

  if (SQLCA.VAGen_SQLCODE == 0) /* TABLE ROW FOUND, BYPASS*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* TABLE ROW NOT FOUND, WILL INSERT*/
      return;
    else
      if (SQLCA.VAGen_SQLCODE == -811) /* MORE THAN ONE TABLE ROW FOUND, BYPASS*/
        return;
      else
        if (SQLCA.VAGen_SQLCODE == -911) /* CONTENTION FOR DATABASE RESOURCE*/
          converseLib.validationFailed(11);
          TS0QW01.TS0QW-UPD-ERR-SW = "Y";
          return;
        else
          converseLib.validationFailed(10);
          TS0QW01.TS0QW-UPD-ERR-SW = "Y";
          TA1REC.TA1PGMNO = "TS0Q";
          TA1REC.TA1TYPE = "DB2";
          TA1REC.TA1LOC = "SELECT UNIQUE TABLE ROW";
          TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
          TA1REC.TA1DBASE = "DTRANS  ";
          TA1REC.TA1TBLVU = "VNLCOR01";
          TA1REC.TA1TBLKE = VNLCOR01.VNLCOR01-KEY;
          TAEREC.SQLCAREC = SQLCA.SQLCAREC;
          call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
          return;
        end
      end
    end
  end
end // end TS0Q-650

//*** RECORD=TS0QW01 ****
// -----------------------------------
// WORKING STORAGE RECORD FOR TS0QM001
// -----------------------------------
// ***********************
Record TS0QW01 type basicRecord
  3 TS0QW-TS0QW01-GROUP TS0QW-TS0QW01-GROUP ; 
    5 TS0QW-FIRST-TIME TS0QW-FIRST-TIME ; 
    5 TS0QW-BLD-MAP-SW TS0QW-BLD-MAP-SW ; 
    5 TS0QW-YES-NO-SW TS0QW-YES-NO-SW ; 
    5 TS0QW-UPD-REQ-SW TS0QW-UPD-REQ-SW ; 
    5 TS0QW-UPD-ERR-SW TS0QW-UPD-ERR-SW ; 
    5 TS0QW-ACT-ERR-SW TS0QW-ACT-ERR-SW ; 
    5 TS0QW-GPC-SYCLR-ERR-SW TS0QW-GPC-SYCLR-ERR-SW ; 
    5 TS0QW-CTRY-ERR-SW TS0QW-CTRY-ERR-SW ; 
    5 TS0QW-BAS TS0QW-BAS ; 
    5 TS0QW-END TS0QW-END ; 
    5 TS0QW-NDX TS0QW-NDX ; 
    5 TS0QW-NX2 TS0QW-NX2 ; 
    5 TS0QW-TOT-REC-READ TS0QW-TOT-REC-READ ; 
    5 XWHCD XWHCD ; 
    5 XGPCD XGPCD ; 
    5 SY1STNBR SY1STNBR ; 
    5 SY2CLRID SY2CLRID ; 
    5 XCTCD XCTCD ; 
end // end TS0QW01

//*** RECORD=TS0QW02 ****
// -----------------------------------------
// WORKING STORAGE TABLE RECORD FOR TS0QM001
// -----------------------------------------
// ***********************
Record TS0QW02 type basicRecord
  3 TS0QW-TS0QW02-GROUP TS0QW-TS0QW02-GROUP ; 
    5 TS0QW-CTRY-ORIG-TABLE TS0QW-CTRY-ORIG-TABLE ; 
      10 TS0QW-ACT TS0QW-ACT [1200] ; 
      10 XWHCD XWHCD [1200] ; 
      10 SY1STNBR SY1STNBR [1200] ; 
      10 SY2CLRID SY2CLRID [1200] ; 
      10 XCTCD XCTCD [1200] ; 
      10 ZZZCHGDT ZZZCHGDT [1200] ; 
      10 ZZZCHGCT ZZZCHGCT [1200] ; 
end // end TS0QW02

//*** RECORD=VNLCOR01 ****
// ;-----------------------------------------------------------
// ;----- NIL PACK LIST COUNTRY OF ORIGIN RECORD --------------
// ;----- CSP RECORD NAME IS VNLCOR01            --------------
// ;----- DATABASE  NAME IS DTRANS.VNLCOR01      --------------
// ;----- THE I/O MODULE IS IO0650         --------------------
// ;----- DCLGEN IS DCL01054               --------------------
// ;----- CREATED 05-15-92                 --------------------
// ;----- AUTHOR: DING CHIANG              --------------------
// ;-----------------------------------------------------------
// ************************
Record VNLCOR01 type basicRecord
  5 VNLCOR01-GROUP VNLCOR01-GROUP ; 
    10 VNLCOR01-KEY VNLCOR01-KEY ; 
      15 XWHCD XWHCD ; 
      15 XGPCD XGPCD ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
    10 XCTCD XCTCD ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end VNLCOR01

// action field
DataItem TS0QW-ACT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// action error switch
DataItem TS0QW-ACT-ERR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// base index (used for paging)
DataItem TS0QW-BAS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// build map switch
DataItem TS0QW-BLD-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// country code error switch
DataItem TS0QW-CTRY-ERR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// country of origin table
DataItem TS0QW-CTRY-ORIG-TABLE char(26400)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end index (used for paging)
DataItem TS0QW-END smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// first time or start from top
DataItem TS0QW-FIRST-TIME char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gpc/style/color error switch
DataItem TS0QW-GPC-SYCLR-ERR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working storage table index
DataItem TS0QW-NDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// map table index
DataItem TS0QW-NX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// total records read
DataItem TS0QW-TOT-REC-READ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// TS0QW02 group level
DataItem TS0QW-TS0QW01-GROUP char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TS0QW02 group level
DataItem TS0QW-TS0QW02-GROUP char(26400)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update errors switch
DataItem TS0QW-UPD-ERR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update request switch
DataItem TS0QW-UPD-REQ-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// common switch
DataItem TS0QW-YES-NO-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem VNLCOR01-GROUP char(29)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem VNLCOR01-KEY char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

