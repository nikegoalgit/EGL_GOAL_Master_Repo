package ts03;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import fy.common.*;
import in1.common.*;
import ku.common.*;
import ni.common.*;
import ob.common.*;
import op.common.*;
import pc.common.*;
import pv.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=TS03 ****
// This application displays the Transportation Main Menu.
// It provides entry to the subordinate applications.
// 
// --------  ------  ---------------------------------
//   DATE     NAME   DESCRIPTION OF CHANGE
// --------  ------  ---------------------------------
// 10/23/89  mwalto  New application.
// 06/11/91  rvakel  Regenned for table changes.
// 05/20/92  dchian  Add new selection, Country of Origin Maint
// 01/18/94  hkempe  Changed to allow for a nine digit order
//                   nbr - TS03M001.
// 03/04/94  hkempe  Generate/Compile to pick up revised
//                   COMMAREA, TSWREC, KUCREC, OP1REC.
// 03/31/94  hkempe  Rename TSOCRTNB to TS-PL-CRTN-NBR in
//                   TS03M001.
// *********************
Program TS03 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TS00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KUCREC KUCREC; // record
  OP1REC OP1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record
  TS03W00 TS03W00; // record
  TS03W01 TS03W01; // record
  TSWREC TSWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use TS03T; // table
  use YSSTBL; // table
  use TS03M.TS03M001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTS001: XPTS001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set TS03M001 initial; /* M001 input/output*/
    set TS03W00 empty; /* Working storage*/
    set TS03W01 empty; /* M001 display storage*/

    TS03W00.TS03WSWF = "Y"; /* Format the map switch*/
    TS03W00.TS03WSWR = "N"; /* Request for data switch*/

     /* ------------------------------------------------------------*/
     /* If appl not entered throught NIL system, clear tswrec.*/
     /* ------------------------------------------------------------*/

     /* ------------------------------------------------------------*/
     /* Users request that no passed data be formatted.  Following*/
     /* code has been commented out.                    jab 2/27/90*/
     /* ------------------------------------------------------------*/
     /* IF COMMAREA.CAFROMAP EQ 'TS04';*/
      /* OR COMMAREA.CAFROMAP EQ 'TS05';*/
      /* OR COMMAREA.CAFROMAP EQ 'TS06';*/
      /* OR COMMAREA.CAFROMAP EQ 'TS07';*/

     /* ------------------------------------------------------------*/
     /* If data was passed in the COMMAREA, use as the initial key.*/
     /* ------------------------------------------------------------*/


     /* ------------------------------------------------------------*/
     /* format passed data fields based on previous select method*/
     /* ------------------------------------------------------------*/
     /* IF TSWREC.TSWPLFLG NE 'O';  selected data by cust or shipid*/
        /* MOVE 0 TO TSWREC.OP1CUOID;*/
        /* MOVE 0 TO TSWREC.OP1NORID;*/
      /* ELSE                        ; data selected data by order*/
        /* MOVE 0 TO TSWREC.KUCCOID;*/
        /* MOVE 0 TO TSWREC.TSWSHPID;*/
      /* END ;*/
      /* ;*/
      /* IF TSWREC.KUCCOID GT 0        ; custmer was passed*/
        /* MOVE TSWREC.KUCCOID TO TS03M001.KUCCOID; cu-co-id*/
        /* MOVE 'Y' TO TS03W00.TS03WSWR   ; Request for data switch*/
      /* END ;*/

      /* IF TSWREC.OP1CUOID GT 0       ; order number was passed*/
      /* MOVE TSWREC.OP1CUOID TO TS03M001.OP1CUOID; op-cust-ord-id*/
      /* MOVE 'Y' TO TS03W00.TS03WSWR     ; Request for data switch*/
      /* END ;*/
      /* ;*/
      /* IF TSWREC.OP1NORID GT 0       ; order number was passed*/
      /* MOVE TSWREC.OP1NORID TO TS03M001.OP1NORID; op-nike-ord-id*/
      /* MOVE 'Y' TO TS03W00.TS03WSWR     ; Request for data switch*/
      /* END ;*/

     /* IF TSWREC.TSOCRTNB GT 0       ; carton number was passed*/
       /* MOVE TSWREC.TSOCRTNB TO TS03M001.TSOCRTNB; ts-crtn-nbr*/
       /* MOVE 'Y' TO TS03W00.TS03WSWR  ;Request for data switch*/
     /* END ;*/

     /* IF TSWREC.YSSCD NE ' '        ; status was passed*/
      /* MOVE TSWREC.YSSCD TO TS03M001.YSSCD; yss-shp-stat-cd*/
      /* MOVE 'Y' TO TS03W00.TS03WSWR  ; Request for data switch*/
     /* END ;*/

     /* ELSE ;*/
      /* tswrec will always be cleared regardless.  jab 2/27/90*/
    set TSWREC empty;

     /* END ;*/

    TS03M001.TSWIVPFL = "N"; /* default value*/
    TS03M001.YSSCD = "IP"; /* default value*/
    TSWREC.TSWIVPFL = "N"; /* default value*/
    TSWREC.YSSCD = "IP"; /* default value*/

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TS03001; /* Converse the main process*/


    TS03001: TS03001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the Transportation main menu*/
     /* ------------------------------------------------------------*/

    goto TS03001; /* Converse the main process*/


  end // end main
end // end TS03

// Transportation Main Menu
Function TS03001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TS03100(); /* Obtain the data to display*/

  TS03200(); /* Format and display the map*/

  TS03300(); /* Check attention identifier*/

  TS03400(); /* Reset fields to normal intensity*/

  TS03500(); /* Verify the data that was entered*/

  TS03600(); /* Process valid input request*/


end // end TS03001

// Obtain the data to display
Function TS03100()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (TS03W00.TS03WSWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If no error was found, indicate request for data complete.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error was found*/
    TS03W00.TS03WSWR = "N"; /* Request for data switch*/
  end


end // end TS03100

// Format and converse the map
Function TS03200()
   /* ------------------------------------------------------------*/
   /* If no error was found, format the map output area.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error found*/

    if (TS03W00.TS03WSWF == "Y") /* Map must be formatted*/
      TS03210(); /* Format the data on the map*/
    end

  else

    TSWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/

  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TS03M001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  TS03M001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  TS03M001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (TSWREC.XXXMSGNO != 0) /* Message to display*/

    TS03M001.XXXMODID = TSWREC.XXXMODID; /* Module identification*/
    if (TSWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(TSWREC.XXXMSGNO);
    end /* Message number*/

    set TS03M001 alarm; /* Indicate sound alarm*/

  end

  converse TS03M001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TSWREC.XXXMODID = " "; /* Module identification*/
  TSWREC.XXXMSGNO = 0; /* Message number*/

  COMMAREA.CATOAP = TS03M001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TS03M001.CAITEM; /* Application data*/


end // end TS03200

// Format the display data
Function TS03210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set TS03M001 initial; /* ts03M001 input/output area*/

  TS03W00.TS03WSWF = "N"; /* Format the map switch*/

   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/

  TS03M001.KUCCOID = TSWREC.KUCCOID; /* cu-co-id*/
  TS03M001.OP1CUOID = TSWREC.OP1CUOID; /* op-cust-ord-id*/
  TS03M001.OP1NORID = TSWREC.OP1NORID; /* op-nike-ord-id*/
  TS03M001.TS-PL-CRTN-NBR = TSWREC.TSOCRTNB; /* ts-pl-crtn-nbr*/
  TS03M001.YSSCD = TSWREC.YSSCD; /* yss-shp-stat-cd*/
  TS03M001.TSWIVPFL = TSWREC.TSWIVPFL; /* invoiced p/l flag*/


end // end TS03210

// Check attention identifier
Function TS03300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (TS03W00.TS03WSWR == "Y") /* Request for data*/
      set TS03W01 empty; /* TS03M001 display storage*/
    end

    TS03W00.TS03WSWF = "Y"; /* Format the map switch*/
    TS03W00.TS03WSWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (TS03M001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      XSTSS02(); /* Exit to another application*/

      set TS03M001.CATOAP cursor, bold; /* Highlight*/

    else

      TSWREC.XXXMODID = "300"; /* Module identification*/
      converseLib.validationFailed(5); /* PF key not valid with fast path*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "TS03M001"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
    end

    XSTSS02(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    TSWREC.XXXMODID = "300"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end TS03300

// Reset highlighted fields
Function TS03400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TS03M001.KUCCOID initialAttributes; /* customer company id*/
  set TS03M001.OP1CUOID initialAttributes; /* op-cust-ord-id*/
  set TS03M001.OP1NORID initialAttributes; /* op-nike-ord-id*/
  set TS03M001.TS-PL-CRTN-NBR initialAttributes; /* ts-pl-crtn-nbr*/
  set TS03M001.YSSCD initialAttributes; /* yss-shp-stat-cd*/
  set TS03M001.TS03MSEL initialAttributes; /* Menu selection*/
  set TS03M001.CATOAP initialAttributes; /* FAST PATH to application*/
  set TS03M001.CAITEM initialAttributes; /* FAST PATH application data*/


end // end TS03400

// Verify data that was entered
Function TS03500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/
    TSWREC.XXXMODID = "500"; /* Module identification*/
    set TS03M001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Indicate only with FAST PATH*/
  end

   /* ------------------------------------------------------------*/
   /* Verify any menu selection that was entered.*/
   /* ------------------------------------------------------------*/

  if (TS03M001.TS03MSEL > 0) /* Menu selection was entered*/
    if (TS03M001.TS03MSEL in TS03T.TS03MSEL) /* Selection in table*/
       /* NEXT SENTENCE*/
    else
       /* If not found, indicate selection is invalid.*/
      TSWREC.XXXMODID = "500"; /* Module identification*/
      set TS03M001.TS03MSEL cursor, bold; /* Highlight*/
      converseLib.validationFailed(9); /* Indicate invalid selection*/
    end
  else
    TSWREC.XXXMODID = "500"; /* Module identification*/
    set TS03M001.TS03MSEL cursor, bold; /* Highlight*/
    converseLib.validationFailed(35); /* Indicate must be entered*/
  end

   /* ------------------------------------------------------------*/
   /* The Carton Number is defaulted if not entered*/
   /* ------------------------------------------------------------*/

  if (TS03M001.TS03MSEL == 4 /* if carton detail*/
   && TS03M001.TS-PL-CRTN-NBR == 0) /* and no ctn nbr entered*/

    TS03M001.TS-PL-CRTN-NBR = 1; /* default to one*/

  end

   /* ------------------------------------------------------------*/
   /* Verify the packing list invoiced status flag.*/
   /* ------------------------------------------------------------*/
  if (TS03M001.TSWIVPFL != "N"
   && TS03M001.TSWIVPFL != "Y")
    converseLib.validationFailed(46); /* must be 'Y' or 'N'*/
    set TS03M001.TSWIVPFL cursor, bold;
    return; /* return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* verify customer and order number not entered together*/
   /* ------------------------------------------------------------*/

  if (TS03M001.KUCCOID > 0 /* customer number entered*/
   && TS03M001.OP1CUOID > 0) /* and order number entered*/
    converseLib.validationFailed(183); /* cant enter both*/
    return; /* return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* Verify the Order number*/
   /* ------------------------------------------------------------*/

  if (TS03M001.OP1CUOID > 0 /* op-cust-ord-id  entered*/
   && TS03M001.OP1NORID > 0) /* op-nike-ord-id  entered*/

    TS03510(); /* verify the order number*/

  else

    if (TS03M001.OP1CUOID > 0 /* order number entered*/
     && TS03M001.OP1NORID == 0) /* and no sub order number*/

      TS03M001.OP1NORID = 1; /* default order to one*/
      TS03510(); /* verify the order number*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Verify the Status Code*/
   /* ------------------------------------------------------------*/

  if (TS03M001.YSSCD != " ") /* ship status code entered*/
    TS03520(); /* verify the Status Code*/
  end

   /* ------------------------------------------------------------*/
   /* Verify the Customer number*/
   /* ------------------------------------------------------------*/

  if (TS03M001.KUCCOID > 0) /* customer number entered*/
    TS03530(); /* verify the customer number*/
  end

   /* ------------------------------------------------------------*/
   /* Exit to display the map if any error was found.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end TS03500

// Verify Order nbr entered
Function TS03510()
   /* ------------------------------------------------------------*/
          /* Verify the Order Number*/
   /* ------------------------------------------------------------*/

  set OP1REC empty; /* initialize record area*/

  TS03W01.TS03WORD = TS03M001.OP1CUOID; /* cust ord id*/
  OP1REC.OP1CUOID = TS03M001.OP1CUOID; /* cust ord id*/
  OP1REC.OP1NORID = TS03M001.OP1NORID; /* nike ord id*/
  OP1REC.OP1PARTN = TS03W01.TS03WPRT; /* part char*/

  try
    call "IO0430" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};
  end /* select row*/

   /* ------------------------------------------------------------*/
   /* if successful of not found, return to the previous process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* normal return code*/
      return; /* return to previous process*/
    end
    if (SQLCA.VAGen_SQLCODE == 100) /* order not fount*/
      set TS03M001.OP1CUOID cursor, bold;
      set TS03M001.OP1NORID bold;
      converseLib.validationFailed(173); /* order nbr invalid or missing*/
      exit stack; /* exit to display map*/
    end
  end

   /* ------------------------------------------------------------*/
   /* if data not available, return an error message to the user,*/
   /* otherwise indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sqlcommarea*/

  TS03M001.XXXMODID = "510"; /* module identification*/

  if (sysVar.errorCode == "00000000" /* call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11);
    TA1REC.TA1FUNC = "POST"; /* termination function*/

  else

    converseLib.validationFailed(10);
    TA1REC.TA1FUNC = "RETN"; /* termination function*/

    converseLib.clearScreen();
     /* clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2"; /* type of error*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* prg appl*/
  TA1REC.TA1PGMNO = TS03M001.XXXMODID; /* prg number*/
  TA1REC.TA1DBASE = "DORDER"; /* data base name*/
  TA1REC.TA1TBLVU = "VORHDR01"; /* table view name*/
  TA1REC.TA1TBLKE = OP1REC.OP1KEY; /* table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis routine*/

  exit stack; /* exit to display map*/


end // end TS03510

// Verify Status Code entered
Function TS03520()
   /* ------------------------------------------------------------*/
                 /* Verify the Status Code*/
   /* ------------------------------------------------------------*/

  if (TS03M001.YSSCD in YSSTBL.YSSCD) /* status code found in table*/
     /* next sentence*/
  else
    set TS03M001.YSSCD cursor, bold; /* highlight*/
    converseLib.validationFailed(36); /* status is missing or invalid*/
  end


end // end TS03520

// Verify Customer nbr entered
Function TS03530()
   /* ------------------------------------------------------------*/
                 /* Verify the Customer Number*/
   /* ------------------------------------------------------------*/

  set KUCREC empty; /* initialize record area*/

  KUCREC.KUCCOID = TS03M001.KUCCOID; /* customer number*/

  try
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  end /* select row*/

  if (sysVar.errorCode == "00000000") /* call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* customer exists*/
      return;
    end
    if (SQLCA.VAGen_SQLCODE == 100) /* customer doesn't exist*/
      set TS03M001.KUCCOID cursor, bold;
      converseLib.validationFailed(161); /* cust nbr invalid or missing*/
      exit stack; /* exit to display map*/
    end
  end

   /* ------------------------------------------------------------*/
   /* if data not available, return an error message to the user,*/
   /* otherwise, indicate that a system error has occurred*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  TS03M001.XXXMODID = "530"; /* module identification*/

  if (sysVar.errorCode == "00000000" /* call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* termination function*/

  else

    converseLib.validationFailed(10); /* indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* termination function*/

    converseLib.clearScreen();
     /* clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2"; /* type of error*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* prg appl*/
  TA1REC.TA1PGMAP = TS03M001.XXXMODID; /* pgm number*/
  TA1REC.TA1DBASE = "DCUST"; /* data base name*/
  TA1REC.TA1TBLVU = "VCMPNY01"; /* table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis routine*/

  exit stack; /* exit to display map*/


end // end TS03530

// Process valid input request
Function TS03600()
   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display.*/
   /* ------------------------------------------------------------*/

  TS03W00.TS03WSWF = "Y"; /* Format the map switch*/

   /* ------------------------------------------------------------*/
   /* Update the modifiable data in the COMMAREA.*/
   /* ------------------------------------------------------------*/

  set TSWREC empty;

  TSWREC.KUCCOID = TS03M001.KUCCOID; /* cu-co-id*/
  TSWREC.OP1CUOID = TS03M001.OP1CUOID; /* op-cust-ord-id*/
  TSWREC.OP1NORID = TS03M001.OP1NORID; /* op-cust-ord-id*/
  TSWREC.TSOCRTNB = TS03M001.TS-PL-CRTN-NBR; /* ts-pl-crtn-nbr*/
  TSWREC.YSSCD = TS03M001.YSSCD; /* yss-shp-stat-cd*/
  TSWREC.TSWIVPFL = TS03M001.TSWIVPFL; /* invoiced packing list flag*/

   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* ------------------------------------------------------------*/

  if (TS03M001.TS03MSEL > 0               /* Menu selection was entered*/
   && TS03M001.TS03MSEL in TS03T.TS03MSEL /* search selection table*/
   && converseVar.validationMsgNum == 0)  /* no errors detected*/

    COMMAREA.CATOAP = TS03T.CATOAP[sysVar.arrayIndex]; /* to application*/

    XSTSS02(); /* Exit to another application*/

    /* ------------------------------------------------------------*/
     /* If the request failed, display the returned error message.*/
    /* ------------------------------------------------------------*/

    COMMAREA.CATOAP = " "; /* TO application*/

    set TS03M001.TS03MSEL cursor, bold; /* Highlight*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If the customer, order number, or carton number has*/
   /* changed, indicate that data is requested.*/
   /* ------------------------------------------------------------*/

  if (TS03M001.KUCCOID != TS03W01.TS03WCOI) /* customer changed*/
    TS03W00.TS03WSWR = "Y"; /* Request for data switch*/
  end

  if (TS03M001.OP1CUOID != TS03W01.TS03WORD) /* order nbr changed*/
    TS03W00.TS03WSWR = "Y"; /* Request for data switch*/
  end

  if (TS03M001.OP1NORID != TS03W01.TS03WNOR) /* order nbr changed*/
    TS03W00.TS03WSWR = "Y"; /* Request for data switch*/
  end

  if (TS03M001.TS-PL-CRTN-NBR != TS03W01.TS03WCTN) /* carton nbr changed*/
    TS03W00.TS03WSWR = "Y"; /* Request for data switch*/
  end

  if (TS03M001.YSSCD != TS03W01.TS03WSSC) /* ship status code changed*/
    TS03W00.TS03WSWR = "Y"; /* Request for data switch*/
  end


end // end TS03600

//*** RECORD=TS03W00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record TS03W00 type basicRecord
  10 TS03WSWF TS03WSWF ; 
  10 TS03WSWR TS03WSWR ; 
end // end TS03W00

//*** RECORD=TS03W01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record TS03W01 type basicRecord
  10 TS03WCOI TS03WCOI ; 
  10 TS03WORD TS03WORD ; 
    15 * char(8) ; 
    15 TS03WPRT TS03WPRT ; 
  10 TS03WNOR TS03WNOR ; 
  10 TS03WCTN TS03WCTN ; 
  10 TS03WSSC TS03WSSC ; 
end // end TS03W01

// customer company id
DataItem TS03WCOI int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// ts-crtn-nbr
DataItem TS03WCTN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-nike-ord-id
DataItem TS03WNOR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-cust-ord-id
DataItem TS03WORD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-ord-part-char
DataItem TS03WPRT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ship status code
DataItem TS03WSSC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem TS03WSWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem TS03WSWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

