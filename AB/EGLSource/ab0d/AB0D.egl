package ab0d;
import ab.common.*;
import af.common.*;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import ku.common.*;
import pc.common.*;
import pg.common.*;
import pw.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=AB0D ****
// This application is a prototype for the Apparel Forecast/Buy
// system.  It will display multiple rows from a DB2 table for
// the user to view and/or modify.
// 
// Upon initial entry, the table is read and columns from the
// selected rows are formatted and saved in temporary storage,
// one display page per queue record.
// 
// The records are retrieved from temporary storage one at a
// time, for display to the user.  The user may page forward
// and backward, to view the rows that were selected.
// 
// The user may exit to any allowed application via FAST PATH
// or PF key at any time.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 06/28/88   userid   New application.
// 08/15/90   cross    fix to totals and pf7, pf8
// 12/10/92   RCHINI   Corrected multiple factory display
//                     message.  IO mod IO3560 needed a new
//                     select set to determine if a product is
//                     multiply sourced between factories.
// 04-28-94   LREIN    obtain 'corp look' owner group (**)
// 02-22-96   KJ       USE TS LGSH QTY FOR BLANKS
// 07-08-96   KJ       VAFCLR02 CHANGES
// Y2KFIX   01/23/98  KSUMME  Y2K MODIFICATIONS MADE TO:
//                 AB0DM001, AB0D017, AB0D031
//                 XPAB001 (FLOW), AB0DW04
//      GLOBAL CHANGES TO:  AB3REC, AB4REC, AB5REC, ABWREC,
//             AFEREC, XP1REC, XPAB020, XSABSMO
// Y2KFIX   02/11/98  TTHAN1  Y2K ADDITIONAL MODIFICATIONS TO
//                    AB0D031.
// *********************
Program AB0D type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AB0DW00 AB0DW00; // record
  AB0DW02 AB0DW02; // record
  AB0DW03 AB0DW03; // record
  AB0DW04 AB0DW04; // record
  AB0DW05 AB0DW05; // record
  AB2REC AB2REC; // record
  AB3REC AB3REC; // record
  AB4REC AB4REC; // record
  AB5REC AB5REC; // record
  ABWREC ABWREC; // record
  AFEREC AFEREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FY1REC FY1REC; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VAFCLR02 VAFCLR02; // record
  XP1REC XP1REC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSETBL {deleteAfterUse = yes}; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use XSUTBL {deleteAfterUse = yes}; // table
  use XPCTBL {deleteAfterUse = yes}; // table
  use XGATBL {deleteAfterUse = yes}; // table
  use AB0DM.AB0DM001,  // forms
      AB0DM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAB001: XPAB001();

     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Apparel Buy Prototype process.*/
     /* ------------------------------------------------------------*/

    set ABWREC empty; /* Initialize working storage*/
    set AB0DW00 empty; /* Initialize working storage*/
    set AB0DW02 empty; /* Initialize working storage*/
    set AB0DW03 empty; /* Initialize working storage*/
    set AB0DW04 empty; /* Initialize working storage*/
    set SQLCA empty; /* Initialize working storage*/
    set ERRSQLCA empty; /* Initialize working storage*/
    set TA1REC empty; /* Initialize working storage*/
    set TA5REC empty; /* Initialize working storage*/
    set AB2REC empty; /* Initialize rec*/
    set XX0XW01 empty; /* Initialize working storage*/
    set XX0XW02 empty; /* Initialize working storage*/
    set AB0DM001 initial; /* Initialize map output area*/
    ABWREC.ABWAPPL = "AB0D"; /* Initialize appl ID for this appl*/
    ABWREC.ABWPRCSN = "0000"; /* Initialize process number to zero*/
    move " " to AB0DM001.AB0DMSTS[1] for all;
    AB0DW00.AB0DWSZM = sysVar.arrayIndex; /* set index maximum for screen array*/
    move " " to AB0DW03.XSECD[1] for all;
    AB0DW00.AB0DWSZT = sysVar.arrayIndex; /* set index max for internal table*/

     /* if returning from ab0q and in middle of list*/
    if (XP1REC.XP1MISC2 == "DQ")
      AB0DW00.AB0DWSDQ = XP1REC.SY1STNBR; /* save style position*/
      XP1REC.SY1STNBR = " ";
    end

    ABWREC.ABWMAP = "1"; /* Indicate map to be displayed*/
    ABWREC.ABWSWR = "Y"; /* Indicate request for data*/
     /* --------------------Y2K OUT BEGIN----------------------*/
     /*  */
     /* MOVE +738 TO ABWREC.ABWTSL;       /* set the tsq size*/
     /*  */
     /* --------------------Y2K OUT END------------------------*/
     /* --------------------Y2K OUT BEGIN----------------------*/
     /*  */
    ABWREC.ABWTSL = +762; /* set the tsq size*/
     /*  */
     /* --------------------Y2K OUT END------------------------*/

    goto AB0D001; /* Converse Apparel Buy Prototype*/


    AB0D001: AB0D001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    goto AB0D001; /* Converse Transportation Prototype*/


  end // end main
end // end AB0D

// Choose which map to display
Function AB0D001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display maps.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the first map.*/
      /* Otherwise, if specified, display the second map.*/
      /* Otherwise, indicate error and exit to Master Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/


  ABWREC.ABWPRCSN = "M001"; /* Indicate map # 1*/
  ABWREC.XXXMAPNM = ABWREC.ABWERLOC; /* Move map name to afwrec*/
  ABWREC.ABWPRCSN = "0000"; /* Re-Initialize process name*/

  AB0D002(); /* Display map 1*/


end // end AB0D001

// Driver process for 100 map
Function AB0D002()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  AB0D003(); /* Obtain the data to display*/

  AB0D007(); /* Format and display the map*/

  AB0D027(); /* Check attention identifier*/

  AB0D028(); /* Reset fields to normal intensity*/

  AB0D029(); /* Verify the entered data*/

  AB0D043(); /* Process valid input request*/


end // end AB0D002

// Obtain the data to display
Function AB0D003()
   /* ------------------------------------------------------------*/
   /* If data was not requested, return to the previous process.*/
   /* Purge any existing queue in temporary storage.*/
   /* Select and open the cursor for the set to be formatted.*/
   /* Fetch and format the data in the page.*/
   /* If the page is full, add the page to the storage queue.*/
   /* At end of rows, add any partial page to the queue.*/
   /* At end of rows, close the selected set cursor.*/
   /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/


  if (ABWREC.ABWSWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0)
    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  set AB0DW03 empty;

  AB0D004(); /* Select set and open the cursor*/

  if (converseVar.validationMsgNum == 0) /* No errors were found*/

    ABWREC.ABWSWC = "N"; /* Initialize end of file switch*/
    ABWREC.ABWIDX1 = 0; /* Initialize display line number*/

    set AB0DW02 empty; /* Clear temporary storage record*/
    set AB0DW03 empty; /* Clear temporary storage record*/
    set AB0DW04 empty;

    while (ABWREC.ABWSWC == "N" /* Until cursor end of file*/
     && ABWREC.ABWIDX1 < AB0DW00.AB0DWSZT) /* array size*/

      AB0D005(); /* Obtain data and format page*/

      if (converseVar.validationMsgNum != 0) /* Errors were found*/
        ABWREC.ABWSWC = "Y"; /* Force end of file*/
      end

    end

  end

  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    AB0D006(); /* Close the selected set cursor*/
  end


  if (converseVar.validationMsgNum == 0) /* No errors were found*/

    ABWREC.ABWIDX2 = 1; /* Initialize loop index*/
    while (ABWREC.ABWIDX2 <= AB0DW03.AB0DWMX3) /* Process all styles*/
      AB0DS01(); /* Check colors per style stored*/
      ABWREC.ABWIDX2 = ABWREC.ABWIDX2 + 1; /* Loop through*/
    end

    AB0DW03.AB0DWIX3 = 1; /* Set page number to first style*/

    AB0DW00.AB0DWVSD = "F"; /* Indicate forward search*/
    ABWREC.ABWIDX2 = AB0DW03.AB0DWIX3; /* Set search start point*/

    AB0DS05(); /* Get next/prev valid style*/

    if (ABWREC.ABWIDX2 == 0) /* No valid current style found*/
      ABWREC.ABWPRCSN = "003"; /* Process number*/
      AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
      converseLib.validationFailed(5); /* Indicate no data to display*/
    else
      AB0DW03.AB0DWIX3 = ABWREC.ABWIDX2; /* Set current style*/
    end

    ABWREC.ABWSWR = "N"; /* Request for data completed*/
    AB0DW00.SY1STNBR = " ";

  end


end // end AB0D003

// Open cursor for VABSTY01
Function AB0D004()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  if (XP1REC.SY1STNBR != " ")
    AB2REC.SY1STNBR = XP1REC.SY1STNBR; /* style code*/
  else
    AB2REC.SY1STNBR = "******"; /* style code*/
  end
  AB2REC.XWHCD = "**"; /* warehouse code*/
   /* ***********************/
   /* ***  factory code*/
   /* ***********************/
  if (XP1REC.FY1FCTYC != " ")
    AB2REC.FY1FCTYC = XP1REC.FY1FCTYC; /* factory code*/
  else
    AB2REC.FY1FCTYC = "****"; /* factory code*/
  end
   /* ****************************/
   /* ***  select all P O types*/
   /* ****************************/
  AB2REC.PC4ORTYP = "**"; /* PO type*/

   /* ***********************/
   /* ***  select all customer id's*/
   /* ***********************/
  AB2REC.PC2CUXID = "*****";
   /* ***********************************/
   /* ****   sched/avail-specialist code*/
   /* ***********************************/
  if (XP1REC.PG1SC4CD != " ")
    AB2REC.PG1SC4CD = XP1REC.PG1SC4CD; /* sched/avail-specialist code*/
  else
    AB2REC.PG1SC4CD = "**"; /* sched/avail-specialist code*/
  end
   /* ******************/
   /* ****  gender age*/
   /* ******************/
  if (XP1REC.XGACD == "  " /* gender age*/
   || XP1REC.SY1STNBR != " ") /* style number*/
    AB2REC.XGACD = "**"; /* gender age*/
  else
    AB2REC.XGACD = XP1REC.XGACD; /* gender age*/
  end
   /* ******************************/
   /* *****    product category*/
   /* ******************************/
  if (XP1REC.XPCCD == " "
   || XP1REC.SY1STNBR != " ") /* style number*/
    AB2REC.XPCCD = "**"; /* product category*/
  else
    AB2REC.XPCCD = XP1REC.XPCCD; /* product category*/
  end
   /* ******************************/
   /* *****    silhouette*/
   /* ******************************/
  if (XP1REC.XSUCD == " "
   || XP1REC.SY1STNBR != " ") /* style number*/
    AB2REC.XSUCD = "**"; /* silhouette code*/
  else
    AB2REC.XSUCD = XP1REC.XSUCD; /* silhouette code*/
  end
   /* ******************************/
  AB2REC.XQTCD[1] = "***"; /* quota category code*/
  AB2REC.XQTCD[2] = "***"; /* quota category code*/
   /* *******************************************/
   /* ***** choose all factory frgn flag values*/
   /* *******************************************/
  AB2REC.FY1FRGN = "*"; /* fy fcty prgn fl*/
  AB2REC.FY6FOCD = "**";
  AB2REC.AB6BKFNI = "*";
  AB2REC.XSECD = XP1REC.XSECD;
  AB2REC.XSNYR = XP1REC.XSNYR;
  try
    call "IO3560" ("S1", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* no sql errors*/
    return; /* return*/
  end
  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* post error and continue process*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "112 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSTY01"; /* Table view name*/
  TA1REC.TA1TBLKE = AB2REC.AB2KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* process name*/
  ABWREC.ABWSWR = "Y";
  exit stack; /* Return to previous process*/



end // end AB0D004

// Fetch next row and format
Function AB0D005()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the internal  array display line.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3560" ("N1", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch the next row*/
   /* ****************************************************/

  if (sysVar.errorCode == "00000000") /* successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* no sql errors*/
      if (AB2REC.XOWCD != "00")
        return;
      end
      ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Increment line index*/
      /* --------------------------*/
      /* -- Save data to display*/
      /* --------------------------*/
      AB0DW03.SY1STNBR[ABWIDX1] = AB2REC.SY1STNBR; /* style number*/
      AB0DW03.XDMCD[ABWIDX1] = AB2REC.XDMCD; /* dimension code*/
      AB0DW03.XWHCD[ABWIDX1] = AB2REC.XWHCD; /* warehouse code*/
      AB0DW03.XDVCD[ABWIDX1] = AB2REC.XDVCD; /* division code*/
      AB0DW03.XSECD[ABWIDX1] = AB2REC.XSECD; /* season code*/
      AB0DW03.XSNYR[ABWIDX1] = AB2REC.XSNYR; /* season year range*/
      AB0DW03.FY1FCTYC[ABWIDX1] = AB2REC.FY1FCTYC; /* factory code*/
      AB0DW03.PC4ORTYP[ABWIDX1] = AB2REC.PC4ORTYP; /* p.o. type*/
      AB0DW03.PC2CUXID[ABWIDX1] = AB2REC.PC2CUXID; /* cust x-ref code*/
      AB0DW03.AB6BKFNI[ABWIDX1] = AB2REC.AB6BKFNI; /* blnk fnsh ind*/
      return; /* return*/
    end
    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      ABWREC.ABWSWC = "Y"; /* Indicate end of file*/
      AB0DW03.AB0DWMX3 = ABWREC.ABWIDX1;

      return; /* Return to previous process*/

    end
  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "113 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSTY01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ABWREC.ABWSWR = "Y";

  exit stack; /* Return to previous process*/

end // end AB0D005

// Close cursor for VABSTY01
Function AB0D006()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3560" ("C1", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "115 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VABSTY01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end


end // end AB0D006

// Format and display the map
Function AB0D007()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AB0DM001 alarm; /* Indicate sound alarm*/
  end

  if (converseVar.validationMsgNum == 0 /* No error message to display*/
   || ABWREC.ABWFIRST == " ")           /* or first time through*/
    if (ABWREC.ABWFIRST == " ") /* First time through*/
      /* *************************************************************/
      AB0DM001.XXXUSER = XP1REC.XXXUSER;
      AB0DM001.XSECD = XP1REC.XSECD;
      AB0DM001.XSNYR = XP1REC.XSNYR;
      AB0DM001.AB3BUYMO = XP1REC.XP1CBYMO;
      AB0DM001.XGACD = XP1REC.XGACD;
      AB0DM001.XGAABRV = XP1REC.XGAABRV;
      AB0DM001.XPCCD = XP1REC.XPCCD;
      AB0DM001.XPCABRV = XP1REC.XPCABRV;
      AB0DM001.XSUCD = XP1REC.XSUCD;
      AB0DM001.XSUABRV = XP1REC.XSUABRV;
      AB0DM001.FY1FCTYC = XP1REC.FY1FCTYC;
      AB0DM001.SY1STNBR = XP1REC.SY1STNBR;
      AB0DM001.SY1STYNM = XP1REC.SY1STYNM;
      /* *************************************************************/

      if (COMMAREA.CAITEM > " ") /* Application data exists*/

        AB0DM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
        set AB0DM001.CAITEM modified; /* Set MDT on*/
        COMMAREA.CAITEM = " "; /* Clear application data*/

      end

    else

      /* SET AB0DM001 CLEAR          ; Clear map output area*/

    end

    ABWREC.ABWFIRST = "N"; /* turn 'first time through' OFF*/

    AB0DM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

    if (converseVar.validationMsgNum == 0) /* No error message to display*/
      AB0D008(); /* Format the data on the page*/
    end

    if (converseVar.validationMsgNum == 0) /* No error message to display*/
      if (ABWREC.ABWNMO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(ABWREC.ABWNMO);
      end /* Information message number*/
    end

  end

  if (converseVar.validationMsgNum == 9999)
    converseLib.validationFailed(0); /* Information message number*/
  end
  ABWREC.ABWNMO = 0; /* Reset information message number*/

  if (converseVar.validationMsgNum != 0) /* With message to display*/
    set AB0DM001 alarm; /* Sound alarm*/
  end



   /* *==============================**/
   /* * Check security authorization **/
   /* *==============================**/

  if (COMMAREA.CACLVL[1] == "N" /* No data changes allowed*/
   && COMMAREA.CACLVL[2] == "Y") /* May change Scheduler cd*/

               /* (User has Inquiry Profile)*/

    if (converseVar.validationMsgNum == 0 /* No errors found*/
     || converseVar.validationMsgNum == 5) /* No data found to display*/
      set AB0DM001.XXXUSER cursor; /* Position cursor at userid fld*/
    end

    if (AB0DW03.AB0DWMX3 == 0) /* No data to display*/

      ABWREC.ABWIX2 = 1; /* Initialize loop index*/
      while (ABWREC.ABWIX2 <= 12) /* Protect map dtl flds*/
        set AB0DM001.AB0DMBQY[ABWIX2] skip, invisible;
        ABWREC.ABWIX2 = ABWREC.ABWIX2 + 1; /* Loop through*/
      end

    else

      ABWREC.ABWIX2 = 1; /* Initialize loop index*/
      while (ABWREC.ABWIX2 <= 12) /* Protect map dtl flds*/
        set AB0DM001.AB0DMBQY[ABWIX2] skip;
        ABWREC.ABWIX2 = ABWREC.ABWIX2 + 1; /* Loop through*/
      end

    end

  else

                /* (User has Scheduler Profile)*/

    if (COMMAREA.CACLVL[1] == "Y" /* Data changes allowed*/
     && COMMAREA.CACLVL[2] == "N") /* May not change Scheduler cd*/

      set AB0DM001.XXXUSER skip; /* Protect userid fld*/

      if (converseVar.validationMsgNum == 5 /* No data found to display*/
       || ABWREC.ABWSWU == " ")             /* First time security chk*/
        set AB0DM001.XPCCD cursor; /* Cursor position*/
      else
        if (converseVar.validationMsgNum == 0) /* No errors found*/
          set AB0DM001.AB0DMBQY[1] cursor; /* Cursor position*/
        end
      end

    else

                  /* (User has Supervisory Profile)*/

      if (COMMAREA.CACLVL[1] == "Y" /* Data changes allowed*/
       && COMMAREA.CACLVL[2] == "Y") /* May change Scheduler cd*/

        if (converseVar.validationMsgNum == 5 /* No data found to display*/
         || ABWREC.ABWSWU == " ")             /* First time security chk*/
          set AB0DM001.XXXUSER cursor; /* Position cursor*/
        else
          if (converseVar.validationMsgNum == 0) /* No errors found*/
            set AB0DM001.AB0DMBQY[1] cursor; /* Cursor position*/
          end
        end

      end
    end
  end


  ABWREC.ABWSWU = "N"; /* Set security chk ind*/


  converse AB0DM001 ;


end // end AB0D007

// Format the selected data
Function AB0D008()
   /* ------------------------------------------------------------*/
   /* Obtain the next page from temporary storage.*/
   /* Format the plan sequence data in the map.*/
   /* ------------------------------------------------------------*/

  if (AB0DW03.AB0DWMX3 == 0) /* No data to display*/

    ABWREC.ABWPRCSN = "121 "; /* Process number*/
    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(005); /* Indicate no data to display*/
    ABWREC.ABWIXM = 1; /* Initialize line index*/
    while (ABWREC.ABWIXM <= AB0DW00.AB0DWSZM) /* Until end of lines*/
      AB0D009(); /* clear fields*/
      AB0D010(); /* protect fields*/
      ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
    end

    AB0DM001.AB0DMTQY = 0;
    AB0DM001.AB0DMBLP = 0;
    AB0DM001.AB0DMLST = 0;
    AB0DM001.AB0DMBLT = 0;
    AB0DM001.AB0DMNBT = 0;
    AB0DM001.AB0DMNBM = " ";
    return; /* Return to previous process*/

  end

              /* (Process scroll request)*/

  if (converseVar.eventKey is pf7 /* page backward requested*/
   || converseVar.eventKey is pf8) /* page forward requested*/

    if (ABWREC.ABWTSP != ABWREC.TA5TSQIX /* desired page not current*/
     || AB0DW04.AB0DWMX4 <= 0)           /* no data in ab0dw04 record*/
      AB0D026(); /* obtain TSQ page*/
    end


    if (AB0DW00.AB0DWMFS > 1)
      set AB0DM001.AB0DMTIL initialAttributes;
    else
      set AB0DM001.AB0DMTIL skip, invisible;
    end


    set AB0DM001.XXXUSER cursor;

    AB0DM001.AB0DMBLP = AB0DW03.AB0DWTTQ;
    AB0DM001.AB0DMTQY = AB0DW03.AB0DWTRQ;
    AB0DM001.AB0DMLST = AB0DW03.AB0DWLST;
    AB0DM001.AB0DMBLT = AB0DW03.AB0DWBLT;
    AB0DM001.AB0DMNBT = AB0DW03.AB0DWNBT;
    if (AB0DW00.AB3BUYMO > 0)
       /* format next buy month, then re-format buy mth*/
      XP1REC.XP1BUYMO = AB0DW00.AB3BUYMO;
      XP1REC.XP1CBYYY = XP1REC.XP1BUYYY;
      XP1REC.XP1CBYMM = XP1REC.XP1BUYMM;
      AB0DM001.AB0DMNBM = XP1REC.XP1CBYMO; /* next buy mth*/
      XP1REC.XP1BUYMO = XP1REC.AB3BUYMO;
      XP1REC.XP1CBYYY = XP1REC.XP1BUYYY;
      XP1REC.XP1CBYMM = XP1REC.XP1BUYMM;
    else
      AB0DM001.AB0DMNBM = " "; /* next buy mth*/
    end

    /* ***** code added by Grant Gilray 9/19/89 ******/
    /* --- factory-cd should be the same for all entries ---*/
    /* --- so showing only the first should be okay      ---*/
    AB0DM001.AB0DMFCT = AB0DW04.FY1FCTYC[1];
    /* ***********************************************/
    ABWREC.ABWIXM = 1; /* Initialize line index*/
    ABWREC.ABWIDX1 = 1; /* Initialize line index*/

    while (ABWREC.ABWIXM <= AB0DW04.AB0DWMX4) /* Until end of lines*/
      AB0DM001.AB0DMSTY[ABWIXM] = AB0DW04.SY1BSTNB[ABWIDX1];
      AB0DM001.AB0DMCLS[ABWIXM] = AB0DW04.SY2BCLCD[ABWIDX1];
      AB0DM001.AB0DMSY2[ABWIXM] = AB0DW04.SY1STNBR[ABWIDX1];
      AB0DM001.AB0DMCL2[ABWIXM] = AB0DW04.SY2CLRID[ABWIDX1];
      AB0DM001.AB0DMCLP[ABWIXM] = AB0DW04.AB5BUYPC[ABWIDX1];
      AB0DM001.AB0DMBQY[ABWIXM] = AB0DW04.AB5ACTBY[ABWIDX1];
      set AB0DM001.AB0DMBQY[ABWIXM] initialAttributes;
      AB0DM001.AB0DMLSH[ABWIXM] = AB0DW04.AF5LGSHQ[ABWIDX1];
      AB0DM001.AB0DMBLA[ABWIXM] = AB0DW04.AF5BLAQ[ABWIDX1];

      ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
      ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Increment line index*/

    end


    while (ABWREC.ABWIXM <= AB0DW00.AB0DWSZM) /* Until end of lines*/
      AB0D009(); /* clear fields*/
      AB0D010(); /* protect fields*/
      ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
    end


    return; /* return to calling process*/


  end



  if (XP1REC.XP1MISC2 == "DQ")
    XP1REC.XP1MISC2 = " ";
    ABWREC.ABWIDX2 = AB0DW03.AB0DWIX3; /* Set search point*/
    AB0DS06(); /* find style position in list*/
    AB0DW03.AB0DWIX3 = ABWREC.ABWIDX2; /* Set curr style*/
  else
    if (converseVar.eventKey is pf19) /* Previous valid style requested*/
      AB0DW00.AB0DWVSD = "B";
                                   /* Indicate backward style search*/
    else
      AB0DW00.AB0DWVSD = "F"; /* Indicate forward style search*/
    end


    ABWREC.ABWIDX2 = AB0DW03.AB0DWIX3; /* Set search point*/

    AB0DS05(); /* Get next/prev valid style*/

    if (ABWREC.ABWIDX2 == 0) /* No valid style found*/

      ABWREC.ABWPRCSN = "008"; /* Process number*/
      AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

      if (converseVar.eventKey is pf19) /* Previous style requested*/
        AB0DW03.AB0DWIX3 = AB0DW03.AB0DWWXS; /* Restore curr style*/
        ABWREC.ABWNMO = 46; /* Indicate no prev style*/
      else
        if (converseVar.eventKey is pf20) /* Next style requested*/
          AB0DW03.AB0DWIX3 = AB0DW03.AB0DWWXS; /* Restore curr style*/
          ABWREC.ABWNMO = 47; /* Indicate no next style*/
        else
          ABWREC.ABWNMO = 5; /* Indicate no data to display*/
        end
      end

    else

      AB0DW03.AB0DWIX3 = ABWREC.ABWIDX2; /* Set curr style*/

    end
  end

  AB0D011(); /* Process for new style*/

  if (ABWREC.TA5TSQIX == 0) /* No data to display*/

    ABWREC.ABWIXM = 1; /* Initialize line index*/
    while (ABWREC.ABWIXM <= AB0DW00.AB0DWSZM) /* Until end of lines*/
      AB0D009(); /* clear fields*/
      AB0D010(); /* protect fields*/
      ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
    end
    AB0DM001.AB0DMTQY = 0;
    AB0DM001.AB0DMBLP = 0;
    AB0DM001.AB0DMLST = 0;
    AB0DM001.AB0DMBLT = 0;
    AB0DM001.AB0DMNBT = 0;
    AB0DM001.AB0DMNBM = " ";
    ABWREC.ABWPRCSN = "121 "; /* Process number*/
    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(005); /* Indicate no data to display*/

    return; /* Return to previous process*/

  end
  if (ABWREC.ABWTSP != ABWREC.TA5TSQIX /* desired page not current*/
   || AB0DW04.AB0DWMX4 <= 0)           /* no data contained in ab0dw04record*/
    AB0D026(); /* obtain temporary storage page;*/
  end


  if (AB0DW00.AB0DWMFS > 1)
    set AB0DM001.AB0DMTIL initialAttributes;
  else
    set AB0DM001.AB0DMTIL skip, invisible;
  end


  set AB0DM001.XXXUSER cursor;

  AB0DM001.AB0DMBLP = AB0DW03.AB0DWTTQ;
  AB0DM001.AB0DMTQY = AB0DW03.AB0DWTRQ;
  AB0DM001.AB0DMLST = AB0DW03.AB0DWLST;
  AB0DM001.AB0DMBLT = AB0DW03.AB0DWBLT;
  AB0DM001.AB0DMNBT = AB0DW03.AB0DWNBT;
  if (AB0DW00.AB3BUYMO > 0)
     /* format next buy month, then re-format buy mth*/
    XP1REC.XP1BUYMO = AB0DW00.AB3BUYMO;
    XP1REC.XP1CBYYY = XP1REC.XP1BUYYY;
    XP1REC.XP1CBYMM = XP1REC.XP1BUYMM;
    AB0DM001.AB0DMNBM = XP1REC.XP1CBYMO; /* next buy mth*/
    XP1REC.XP1BUYMO = XP1REC.AB3BUYMO;
    XP1REC.XP1CBYYY = XP1REC.XP1BUYYY;
    XP1REC.XP1CBYMM = XP1REC.XP1BUYMM;
  else
    AB0DM001.AB0DMNBM = " "; /* next buy mth*/
  end

   /* ***** code added by Grant Gilray 9/19/89 ******/
   /* --- factory-cd should be the same for all entries ---*/
   /* --- so showing only the first should be okay      ---*/
  AB0DM001.AB0DMFCT = AB0DW04.FY1FCTYC[1];
   /* ***********************************************/
  ABWREC.ABWIXM = 1; /* Initialize line index*/
  ABWREC.ABWIDX1 = 1; /* Initialize line index*/

  while (ABWREC.ABWIXM <= AB0DW04.AB0DWMX4) /* Until end of lines*/
    AB0DM001.AB0DMSTY[ABWIXM] = AB0DW04.SY1BSTNB[ABWIDX1];
    AB0DM001.AB0DMCLS[ABWIXM] = AB0DW04.SY2BCLCD[ABWIDX1];
    AB0DM001.AB0DMSY2[ABWIXM] = AB0DW04.SY1STNBR[ABWIDX1];
    AB0DM001.AB0DMCL2[ABWIXM] = AB0DW04.SY2CLRID[ABWIDX1];
    AB0DM001.AB0DMCLP[ABWIXM] = AB0DW04.AB5BUYPC[ABWIDX1];
    AB0DM001.AB0DMBQY[ABWIXM] = AB0DW04.AB5ACTBY[ABWIDX1];
    set AB0DM001.AB0DMBQY[ABWIXM] initialAttributes;
    AB0DM001.AB0DMLSH[ABWIXM] = AB0DW04.AF5LGSHQ[ABWIDX1];
    AB0DM001.AB0DMBLA[ABWIXM] = AB0DW04.AF5BLAQ[ABWIDX1];

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
    ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Increment line index*/

  end


  while (ABWREC.ABWIXM <= AB0DW00.AB0DWSZM) /* Until end of lines*/
    AB0D009(); /* clear fields*/
    AB0D010(); /* protect fields*/
    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
  end

end // end AB0D008

// clear lower map fields
Function AB0D009()
  AB0DM001.AB0DMSTY[ABWIXM] = " ";
  AB0DM001.AB0DMCLS[ABWIXM] = " ";
  AB0DM001.AB0DMSY2[ABWIXM] = " ";
  AB0DM001.AB0DMCL2[ABWIXM] = " ";
  AB0DM001.AB0DMCLP[ABWIXM] = 0;
  AB0DM001.AB0DMBQY[ABWIXM] = 0;
  AB0DM001.AB0DMLSH[ABWIXM] = 0;
  AB0DM001.AB0DMBLA[ABWIXM] = 0;

end // end AB0D009

// protect lower map fields
Function AB0D010()
  set AB0DM001.AB0DMSTS[ABWIXM] initialAttributes; /* set attrs to defaults*/
  set AB0DM001.AB0DMSTY[ABWIXM] initialAttributes;
  set AB0DM001.AB0DMCLS[ABWIXM] initialAttributes;
  set AB0DM001.AB0DMSY2[ABWIXM] initialAttributes;
  set AB0DM001.AB0DMCL2[ABWIXM] initialAttributes;
  set AB0DM001.AB0DMCLP[ABWIXM] initialAttributes;
  set AB0DM001.AB0DMBQY[ABWIXM] skip, invisible;
  set AB0DM001.AB0DMLSH[ABWIXM] initialAttributes;
  set AB0DM001.AB0DMBLA[ABWIXM] initialAttributes;

end // end AB0D010

// create new tsq data for new sy
Function AB0D011()
   /* ------------------------------------------------------------*/
   /* create new tsq data for style change*/
   /* ------------------------------------------------------------*/
  AB0D012(); /* Purge any temporary storage*/

  AB0D013(); /* Select set and open the cursor*/

  if (converseVar.validationMsgNum == 0) /* No errors were found*/

    ABWREC.ABWSWC = "N"; /* Initialize end of file switch*/

    set AB0DW04 empty; /* Clear temporary storage record*/
    AB0DW03.AB0DWTTQ = 0; /* Clear Buy Plan totals*/
    AB0DW03.AB0DWTRQ = 0; /* Clear Running ttl totals*/
    AB0DW03.AB0DWLST = 0; /* Clear long/short total*/
    AB0DW03.AB0DWBLT = 0; /* Clear Bla total*/
    AB0DW03.AB0DWNBT = 0; /* Clear next buy total*/
    AB0DW04.AB0DWMX4 = 0; /* Initialize tsq array number*/

    while (ABWREC.ABWSWC == "N") /* Until cursor end of file*/

      AB0D014(); /* Obtain data and format page*/

      if (AB0DW04.AB0DWMX4 >= AB0DW00.AB0DWSZM) /* Page is full*/
        AB0D018(); /* Add page to temporary storage*/
      end

      if (converseVar.validationMsgNum != 0) /* Errors were found*/
        ABWREC.ABWSWC = "Y"; /* Force end of file*/
      end

    end

  end

  if (converseVar.validationMsgNum == 0 /* No errors were found*/
   && AB0DW04.AB0DWMX4 > 0)             /* Page contains data to be written*/
    AB0D018(); /* Add page to temporary storage*/
  end

  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    AB0D019(); /* Close the selected set cursor*/
  end

  ABWREC.ABWTSP = 1; /* use first page*/
  set AB2REC empty; /* Clear temporary storage record*/

  AB0D020(); /* Select set and open the cursor*/

  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    ABWREC.ABWSWC = "N"; /* Initialize end of file switch*/
    ABWREC.ABWIDX4 = 0; /* Initialize tsq array number*/
    while (ABWREC.ABWSWC == "N") /* Until cursor end of file*/

      AB0D021(); /* Obtain data and format page*/

      if (converseVar.validationMsgNum != 0) /* Errors were found*/
        ABWREC.ABWSWC = "Y"; /* Force end of file*/
      end
    end
  end

  if (converseVar.validationMsgNum == 0) /* No errors were found*/

    if (ABWREC.ABWIDX4 > 0)
      AB0DW00.AB0DWMFS = ABWREC.ABWIDX4;
    else
      AB0DW00.AB0DWMFS = 0;
    end
    AB0D050(); /* Close the selected set cursor*/

  end

  AB0D022(); /* process for next buy month quantity*/
end // end AB0D011

// Purge any temporary storage
Function AB0D012()
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = ABWREC.ABWAPPL; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  call "TA0050" (AB0DW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* Temporary storage*/
                                         /* ; subroutine*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    ABWREC.ABWPRCSN = "111 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  end

  ABWREC.ABWTSP = 0; /* Reset current page number*/
  ABWREC.TA5TSQIX = 0; /* Reset highest page number*/


end // end AB0D012

// Open cursor for VBCOLR01
Function AB0D013()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  AB0DW03.AB0DWLST = 0; /* init total*/
  AB0DW03.AB0DWBLT = 0; /* init total*/
  set AB5REC empty;
  AB5REC.SY1STNBR = AB0DW03.SY1STNBR[AB0DWIX3]; /* style number*/
  AB5REC.XDMCD = AB0DW03.XDMCD[AB0DWIX3]; /* dimension code*/
  AB5REC.XWHCD = AB0DW03.XWHCD[AB0DWIX3]; /* warehouse code*/
  AB5REC.XDVCD = AB0DW03.XDVCD[AB0DWIX3]; /* division code*/
  AB5REC.XSECD = AB0DW03.XSECD[AB0DWIX3]; /* season code*/
  AB5REC.XSNYR = AB0DW03.XSNYR[AB0DWIX3]; /* season year range*/
  AB5REC.FY1FCTYC = AB0DW03.FY1FCTYC[AB0DWIX3]; /* factory code*/
  AB5REC.PC4ORTYP = AB0DW03.PC4ORTYP[AB0DWIX3]; /* p.o. type*/
  AB5REC.PC2CUXID = AB0DW03.PC2CUXID[AB0DWIX3]; /* cust x-ref code*/
  AB5REC.AB3BUYMO = XP1REC.XP1BUYMO; /* cust x-ref code*/

  try
    call "IO3580" ("S1", SQLCA, AB5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "122 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VBCOLR01"; /* Table view name*/
    TA1REC.TA1TBLKE = AB5REC.AB5KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    return; /* Return to previous process*/

  end


end // end AB0D013

// Fetch row & process VBCOLR01
Function AB0D014()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3580" ("N1", SQLCA, AB5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch the next row*/
   /* ****************************************************/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

    ABWREC.ABWSWC = "Y"; /* Indicate end of file*/

    return; /* Return to previous process*/

  end

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "123 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VBCOLR01"; /* Table view name*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    return; /* Return to previous process*/

  end
  AB0DW04.AB0DWMX4 = AB0DW04.AB0DWMX4 + 1; /* Increment line index*/
   /* Save data to display*/
  AB0DW04.AB5BUYPC[AB0DWMX4] = AB5REC.AB5BUYPC;
  AB0DW04.AB5ACTBY[AB0DWMX4] = AB5REC.AB5ACTBY;
  AB0DW04.SY1STNBR[AB0DWMX4] = AB5REC.SY1STNBR;
  AB0DW04.SY2CLRID[AB0DWMX4] = AB5REC.SY2CLRID;
  AB0DW04.FY1FCTYC[AB0DWMX4] = AB5REC.FY1FCTYC;
  AB0DW04.PC4ORTYP[AB0DWMX4] = AB5REC.PC4ORTYP;
  AB0DW04.PC2CUXID[AB0DWMX4] = AB5REC.PC2CUXID;
  AB0DW04.XDMCD[AB0DWMX4] = AB5REC.XDMCD;
  AB0DW04.XWHCD[AB0DWMX4] = AB5REC.XWHCD;
  AB0DW04.XDVCD[AB0DWMX4] = AB5REC.XDVCD;
  AB0DW04.XSECD[AB0DWMX4] = AB5REC.XSECD;
  AB0DW04.XSNYR[AB0DWMX4] = AB5REC.XSNYR;
  AB0DW04.AB3BUYMO[AB0DWMX4] = AB5REC.AB3BUYMO;
  AB0DW04.ZZZCHGCT[AB0DWMX4] = AB5REC.ZZZCHGCT;
  AB0DW03.AB0DWTRQ = AB0DW03.AB0DWTRQ + AB5REC.AB5ACTBY;

  AB0D015(); /* obtain blank style.color row*/

  AB0D016(); /* obtain long/short bla fields*/

  AB0D017(); /* obtain bla adjustment amounts*/

end // end AB0D014

// obtain blank style row
Function AB0D015()
  set PG2REC empty;
  PG2REC.XGPCD = XP1REC.XGPCD;
  PG2REC.SY1STNBR = AB0DW04.SY1STNBR[AB0DWMX4];
  PG2REC.SY2CLRID = AB0DW04.SY2CLRID[AB0DWMX4];
  PG2REC.XDMCD = AB0DW04.XDMCD[AB0DWMX4];

  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch the next row*/
   /* ****************************************************/

  if (sysVar.errorCode == "00000000" /* ok  return code*/
   && SQLCA.VAGen_SQLCODE == 0)      /* not found sql code*/
    AB0DW04.SY1BSTNB[AB0DWMX4] = PG2REC.SY1BSTNB;
    AB0DW04.SY2BCLCD[AB0DWMX4] = PG2REC.SY2BCLCD;

  else
    if (sysVar.errorCode == "00000000" /* ok  return code*/
     && SQLCA.VAGen_SQLCODE == 100)    /* not found sql code*/
      AB0DW04.SY1BSTNB[AB0DWMX4] = " ";
      AB0DW04.SY2BCLCD[AB0DWMX4] = " ";

    else
      if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

        if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

          converseLib.validationFailed(11); /* Indicate not available*/
          TA1REC.TA1FUNC = "POST"; /* Termination function*/

        else

          converseLib.validationFailed(10); /* Indicate system error*/
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/

          converseLib.clearScreen();
           /* Clear screen before redisplay*/

        end

        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
        ABWREC.ABWPRCSN = "23A "; /* Process number*/
        TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
        TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
        TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
        TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
        TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/

        try
          call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
        end /* Error diag. routine*/

        AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

        exit stack; /* Return to previous process*/

      end
    end
  end

end // end AB0D015

// obtain long/short bla fields
Function AB0D016()
  set VAFCLR02 empty;
  VAFCLR02.XSECD = AB0DW04.XSECD[AB0DWMX4];
  VAFCLR02.XSNYR = AB0DW04.XSNYR[AB0DWMX4];
  VAFCLR02.SY1STNBR = AB0DW04.SY1STNBR[AB0DWMX4];
  VAFCLR02.SY2CLRID = AB0DW04.SY2CLRID[AB0DWMX4];
  VAFCLR02.XDMCD = AB0DW04.XDMCD[AB0DWMX4];
  VAFCLR02.XDVCD = AB0DW04.XDVCD[AB0DWMX4];
  if (AB0DW03.AB6BKFNI == "B")
    VAFCLR02.XOWCD = "**"; /* default to corp look*/
  else
    VAFCLR02.XOWCD = "00"; /* default to corp look*/
  end

  try
    call "VAFCLR02" ("S ", SQLCA, VAFCLR02) {isNoRefresh = yes, isExternal = yes};
  end /* SELECT*/
   /* ****************************************************/

  if (sysVar.errorCode == "00000000" /* ok  return code*/
   && SQLCA.VAGen_SQLCODE == 0)      /* not found sql code*/
    if (VAFCLR02.PG2SCRFL == "B")
      AB0DW04.AF5LGSHQ[AB0DWMX4] = VAFCLR02.AF-LGSH-TS-QTY;
      AB0DW03.AB0DWLST = AB0DW03.AB0DWLST + VAFCLR02.AF-LGSH-TS-QTY;
    else
      AB0DW04.AF5LGSHQ[AB0DWMX4] = VAFCLR02.AF5LGSHQ;
      AB0DW03.AB0DWLST = AB0DW03.AB0DWLST + VAFCLR02.AF5LGSHQ;
    end
    AB0DW04.AF5BLAQ[AB0DWMX4] = VAFCLR02.AF5BLAQ;
    AB0DW03.AB0DWBLT = AB0DW03.AB0DWBLT + VAFCLR02.AF5BLAQ; /* build total*/

  else
    if (sysVar.errorCode == "00000000" /* ok  return code*/
     && SQLCA.VAGen_SQLCODE == 100)    /* not found sql code*/
      AB0DW04.AF5LGSHQ[AB0DWMX4] = 0;
      AB0DW04.AF5BLAQ[AB0DWMX4] = 0;

    else
      if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

        if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

          converseLib.validationFailed(11); /* Indicate not available*/
          TA1REC.TA1FUNC = "POST"; /* Termination function*/

        else

          converseLib.validationFailed(10); /* Indicate system error*/
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/

          converseLib.clearScreen();
           /* Clear screen before redisplay*/

        end

        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
        ABWREC.ABWPRCSN = "23B "; /* Process number*/
        TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
        TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
        TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
        TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
        TA1REC.TA1TBLVU = "VAFCLR01"; /* Table view name*/

        try
          call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
        end
                                   /* Error diag. routine*/

        AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

        exit stack; /* Return to previous process*/

      end
    end
  end

end // end AB0D016

// obtain BLA adjustment amounts
Function AB0D017()
  set AFEREC empty;
  AFEREC.XSECD = AB0DW04.XSECD[AB0DWMX4];
  AFEREC.XSNYR = AB0DW04.XSNYR[AB0DWMX4];
  AFEREC.SY1STNBR = AB0DW04.SY1STNBR[AB0DWMX4];
  AFEREC.SY2CLRID = AB0DW04.SY2CLRID[AB0DWMX4];
  AFEREC.XDMCD = AB0DW04.XDMCD[AB0DWMX4];
  AFEREC.XDVCD = AB0DW04.XDVCD[AB0DWMX4];
  AFEREC.XWHCD = AB0DW04.XWHCD[AB0DWMX4];
   /* ------------------Y2K OUT BEGIN--------------------*/
   /*  */
   /* MOVE +9999 TO AFEREC.AFBNDTPR;*/
   /*  */
   /* ------------------Y2K OUT END----------------------*/
   /* ------------------Y2K IN BEGIN--------------------*/
   /*  */
  AFEREC.AFBNDTPR = +999999;
   /*  */
   /* ------------------Y2K IN END----------------------*/
  AFEREC.YSMSUMCD = "  ";
  AFEREC.AFEADJT = "2";
  move 0 to AFEREC.AFEADJQ[1] for all;
  AB0DW00.AB0DWSZ1 = sysVar.arrayIndex;

   /* ------------------Y2K OUT BEGIN-----------------------*/
   /*  */
   /* CALL IO3140 'S ',SQLCA,AFEREC (NOMAPS,NONCSP,REPLY; /* Fetch next row*/
   /*  */
   /* ------------------Y2K OUT END-------------------------*/
   /* ------------------Y2K IN BEGIN-----------------------*/
   /*  */
  try
    call "VDMANA02" ("S ", SQLCA, AFEREC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/
   /*  */
   /* ------------------Y2K IN END-------------------------*/
   /* ****************************************************/

  if (sysVar.errorCode == "00000000" /* ok  return code*/
   && SQLCA.VAGen_SQLCODE == 0)      /* not found sql code*/
    ABWREC.ABWIDX2 = 1;
    while (ABWREC.ABWIDX2 <= AB0DW00.AB0DWSZ1)
      AB0DW00.AB0DWAJQ = AFEREC.AFEADJQ[ABWIDX2];
      AB0DW04.AF5BLAQ[AB0DWMX4] = AB0DW04.AF5BLAQ[AB0DWMX4] + AB0DWAJQ;
      AB0DW03.AB0DWBLT = AB0DW03.AB0DWBLT + AB0DWAJQ; /* adjust total also*/
    end
    return; /* Return to previous process*/

  else
    if (sysVar.errorCode == "00000000" /* ok  return code*/
     && SQLCA.VAGen_SQLCODE == 100)    /* not found sql code*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

        if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

          converseLib.validationFailed(11); /* Indicate not available*/
          TA1REC.TA1FUNC = "POST"; /* Termination function*/

        else

          converseLib.validationFailed(10); /* Indicate system error*/
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/

          converseLib.clearScreen();
           /* Clear screen before redisplay*/

        end

        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
        ABWREC.ABWPRCSN = "23C "; /* Process number*/
        TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
        TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
        TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
        TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
        TA1REC.TA1TBLVU = "VDMANA01"; /* Table view name*/

        try
          call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
        end /* Error diag. routine*/

        AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

        exit stack; /* Return to previous process*/

      end
    end
  end

end // end AB0D017

// Add page to temporary storage
Function AB0D018()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/

  AB0DW04.AB0DWLEN = ABWREC.ABWTSL; /* Temporary storage length*/
  TA5REC.TA5APPID = ABWREC.ABWAPPL; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (AB0DW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
                                    /* ;subroutine*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "115 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end

  ABWREC.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/

  set AB0DW04 empty; /* Clear temporary storage record*/


end // end AB0D018

// Close cursor for VBCOLR01
Function AB0D019()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3580" ("C1", SQLCA, AB5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "125 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VBCOLR01"; /* Table view name*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end


end // end AB0D019

// Create set & open cursor - S6
Function AB0D020()

   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  AB2REC.SY1STNBR = AB0DW03.SY1STNBR[AB0DWIX3]; /* style*/
  AB2REC.XDMCD = "00"; /* dimension code*/
  AB2REC.XSECD = XP1REC.XSECD;
  AB2REC.XSNYR = XP1REC.XSNYR;

  try
    call "IO3560" ("S6", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* no sql errors*/
    return; /* return*/
  end
  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* post error and continue process*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "21B "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBPLAN01"; /* Table view name*/
  TA1REC.TA1TBLKE = AB2REC.AB2KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* process name*/
  ABWREC.ABWSWR = "Y";
  exit stack; /* Return to previous process*/




end // end AB0D020

// obtain next row & process - N6
Function AB0D021()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the internal  array display line.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3560" ("N6", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch the next row*/
   /* ****************************************************/

  if (sysVar.errorCode == "00000000") /* successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* no sql errors*/
      ABWREC.ABWIDX4 = ABWREC.ABWIDX4 + 1; /* Increment line index*/
      return; /* return*/
    end
    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      ABWREC.ABWSWC = "Y"; /* Indicate end of file*/
      return; /* Return to previous process*/
    end
  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "21C "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBPLAN01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  ABWREC.ABWSWR = "Y";

  exit stack; /* Return to previous process*/

end // end AB0D021

// process for next month quantit
Function AB0D022()
   /* ------------------------------------------------------------*/
   /* determine next month quantity*/
   /* ------------------------------------------------------------*/
  set AB4REC empty;
  move 0 to AB0DW05.AB4SMBQT[1] for all; /* Initialize next month qtys*/
  AB0DW00.AB3BUYMO = 0; /* Initialize next buy mth to save*/

  AB0D023(); /* Select set and open the cursor*/

  if (converseVar.validationMsgNum == 0) /* No errors were found*/

    ABWREC.ABWSWC = "N"; /* Initialize end of file switch*/

    while (ABWREC.ABWSWC == "N") /* Until cursor end of file*/

      AB0D024(); /* Obtain data and format page*/

      if (converseVar.validationMsgNum != 0) /* Errors were found*/
        ABWREC.ABWSWC = "Y"; /* Force end of file*/
      end

    end

  end


  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    AB0D025(); /* Close the selected set cursor*/
  end

end // end AB0D022

// open vbplan01 cursor
Function AB0D023()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  AB0DW03.AB0DWNBT = 0; /* init total*/
  set AB4REC empty;
  AB4REC.SY1STNBR = AB0DW03.SY1STNBR[AB0DWIX3]; /* style number*/
  AB4REC.XDMCD = AB0DW03.XDMCD[AB0DWIX3]; /* dimension code*/
  AB4REC.XWHCD = AB0DW03.XWHCD[AB0DWIX3]; /* warehouse code*/
  AB4REC.XDVCD = AB0DW03.XDVCD[AB0DWIX3]; /* division code*/
  AB4REC.XSECD = AB0DW03.XSECD[AB0DWIX3]; /* season code*/
  AB4REC.XSNYR = AB0DW03.XSNYR[AB0DWIX3]; /* season year range*/
  AB4REC.XOWCD = "00"; /* owner group code*/
  AB4REC.FY1FCTYC = "*"; /* factory code*/
  AB4REC.PC4ORTYP = AB0DW03.PC4ORTYP[AB0DWIX3]; /* PO type*/
  AB4REC.PC2CUXID = AB0DW03.PC2CUXID[AB0DWIX3]; /* Cust xref id*/

  try
    call "IO3570" ("S1", SQLCA, AB4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "29A "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VBPLAN01"; /* Table view name*/
    TA1REC.TA1TBLKE = AB4REC.AB4KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    return; /* Return to previous process*/

  end


end // end AB0D023

// fetch & process vbplan01 row
Function AB0D024()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3570" ("N1", SQLCA, AB4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    ABWREC.ABWSWC = "Y"; /* Indicate end of file*/
    return; /* Return to previous process*/
  end

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "29B "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VBPLAN01"; /* Table view name*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    return; /* Return to previous process*/
  end

  if (AB4REC.XOWCD != "00")
    return;
  end

  if (AB4REC.AB3BUYMO > XP1REC.XP1BUYMO)
    if (AB4REC.AB3BUYST == "B" /* stat must be b, s*/
     || AB4REC.AB3BUYST == "S")
      if (AB0DW00.AB3BUYMO == 0)
        AB0DW00.AB3BUYMO = AB4REC.AB3BUYMO;
        AB0DW03.AB0DWNBT = AB0DW03.AB0DWNBT + AB4REC.AB4SMBQT;
                                   /* build total*/
      else
        if (AB4REC.AB3BUYMO == AB0DW00.AB3BUYMO)
          AB0DW03.AB0DWNBT = AB0DW03.AB0DWNBT + AB4REC.AB4SMBQT;
                                   /* build total*/
        else
          ABWREC.ABWSWC = "Y"; /* Force end of file*/
        end
      end
    end
  else
    if (AB4REC.AB3BUYMO == XP1REC.XP1BUYMO
     && AB4REC.FY1FCTYC == AB0DW03.FY1FCTYC[AB0DWIX3]) /* fcty must match*/
      if (AB4REC.AB3BUYST == "B" /* stat must be b, t, c, z*/
       || AB4REC.AB3BUYST == "T" 
       || AB4REC.AB3BUYST == "C" 
       || AB4REC.AB3BUYST == "Z")
        AB0DW03.AB0DWTTQ = AB4REC.AB4SMBQT;
        AB0DW03.ZZZCHGCT[AB0DWIX3] = AB4REC.ZZZCHGCT;
      end
    end
  end
end // end AB0D024

// close vbplan01 cursor
Function AB0D025()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3570" ("C1", SQLCA, AB4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "125 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VBPLAN01"; /* Table view name*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end


end // end AB0D025

// obtain tsq record
Function AB0D026()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/

  AB0DW04.AB0DWLEN = ABWREC.ABWTSL; /* Temporary storage length*/
  TA5REC.TA5APPID = ABWREC.ABWAPPL; /* Application identification*/
  TA5REC.TA5TSQIX = ABWREC.ABWTSP; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (AB0DW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
                                    /* ;subroutine*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "21F "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    exit stack; /* Exit to redisplay map*/

  end


end // end AB0D026

// Check attention identifier
Function AB0D027()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    converseLib.clearScreen();
     /* Clear the map fields*/

    converseLib.validationFailed(); /* bypass all processing.*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf10) /* pf10 was pressed*/

    if (XP1REC.SY1STNBR == " ")
      XP1REC.XP1MISC2 = "DQ"; /* set ab0d-ab0q flag*/
      XP1REC.SY1STNBR = AB0DM001.AB0DMSY2[1]; /* send specific style*/
    end
    AB0D012(); /* Purge any temporary storage*/

    COMMAREA.CATOAP = "AB0Q"; /* TO application*/
    COMMAREA.CAITEM = AB0DM001.CAITEM; /* Application data*/

    XSABS01(); /* Exit to another application*/

    ABWREC.ABWPRCSN = "130 "; /* Process number*/
    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end
  if (AB0DM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      AB0D012(); /* Purge any temporary storage*/

      COMMAREA.CATOAP = AB0DM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = AB0DM001.CAITEM; /* Application data*/

      XSABS01(); /* Exit to another application*/

    else

      converseLib.validationFailed(5); /* Indicate PF key not valid*/

    end

    set AB0DM001.CATOAP cursor, modified, bold; /* Highlight*/

    ABWREC.ABWPRCSN = "130 "; /* Process number*/
    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    AB0D012(); /* Purge any temporary storage*/

    XSABS01(); /* Exit to another application*/

    ABWREC.ABWPRCSN = "130 "; /* Process number*/
    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "AB0F";

    AB0D012(); /* Purge any temporary storage*/

    XSABS01(); /* Exit to another application*/
    ABWREC.ABWPRCSN = "130 "; /* Process number*/
    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end


  if (converseVar.eventKey is pf16) /* Activate Inquiry Mode*/

    if (COMMAREA.CACLVL[1] == "Y" /* Profile is scheduler*/
     && COMMAREA.CACLVL[2] == "N")

      ABWREC.ABWINQF = "Y"; /* Indicate inquiry mode activated*/
      set AB0DM001.XXXUSER initialAttributes; /* Unprotect Sched cd fld*/
      COMMAREA.CACLVL[1] = "N"; /* Cannot update dtl flds*/
      COMMAREA.CACLVL[2] = "Y"; /* May change Sched cd fld*/
      ABWREC.ABWNMO = 67; /* Indicate message*/
      exit stack; /* Exit to redisplay map*/

    else

      converseLib.validationFailed(4); /* Indicate invalid function*/
      exit stack; /* Exit to redisplay map*/

    end

  end


  if (converseVar.eventKey is pf17) /* Deactivate Inquiry Mode*/

    if (ABWREC.ABWINQF == "Y") /* Inquiry mode activated*/

      ABWREC.ABWINQF = " "; /* Reset inquiry mode flag*/
      ABWREC.ABWNMO = 68; /* Indicate message*/
      set AB0DM001.XXXUSER skip; /* Protect Sched cd fld*/
      AB0DM001.XXXUSER = COMMAREA.CAUSERID; /* Restore orig userid*/
      COMMAREA.CACLVL[1] = "Y"; /* Can update dtl flds*/
      COMMAREA.CACLVL[2] = "N"; /* Cannot change Sched cd fld*/

    else

      converseLib.validationFailed(4); /* Indicate invalid function*/
      exit stack; /* Exit to redisplay map*/

    end

  end



  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf5   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf10  /* and PF10 was not pressed*/
   && converseVar.eventKey not pf16  /* and PF16 was not pressed*/
   && converseVar.eventKey not pf17  /* and PF17 was not pressed*/
   && converseVar.eventKey not pf19  /* and PF19 was not pressed*/
   && converseVar.eventKey not pf20) /* and PF20 was not pressed*/

    ABWREC.ABWPRCSN = "130 "; /* Process number*/
    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end


end // end AB0D027

// Reset highlighted fields
Function AB0D028()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to defined intensity.*/
   /* ------------------------------------------------------------*/

  ABWREC.ABWIXM = 1; /* Initialize line index*/

  while (ABWREC.ABWIXM <= AB0DWSZM) /* Until end of lines*/

    if (AB0DM001.AB0DMSTY[ABWIXM] > " " /* Line was...*/
     || AB0DM001.AB0DMSY2[ABWIXM] > " ") /* ...formatted*/
      set AB0DM001.AB0DMSTS[ABWIXM] initialAttributes; /* set attributes to defaults*/
      set AB0DM001.AB0DMSTY[ABWIXM] initialAttributes;
      set AB0DM001.AB0DMCLS[ABWIXM] initialAttributes;
      set AB0DM001.AB0DMSY2[ABWIXM] initialAttributes;
      set AB0DM001.AB0DMCL2[ABWIXM] initialAttributes;
      set AB0DM001.AB0DMCLP[ABWIXM] initialAttributes;
      set AB0DM001.AB0DMBQY[ABWIXM] initialAttributes;
      set AB0DM001.AB0DMLSH[ABWIXM] initialAttributes;
      set AB0DM001.AB0DMBLA[ABWIXM] initialAttributes;
    else
      AB0D010();
    end

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/

  end
   /* *************************************************************/
  set AB0DM001.XXXUSER initialAttributes;
  set AB0DM001.XSECD initialAttributes;
  set AB0DM001.XSNYR initialAttributes;
  set AB0DM001.AB3BUYMO initialAttributes;
  set AB0DM001.XGACD initialAttributes;
  set AB0DM001.XGAABRV initialAttributes;
  set AB0DM001.XPCCD initialAttributes;
  set AB0DM001.XPCABRV initialAttributes;
  set AB0DM001.XSUCD initialAttributes;
  set AB0DM001.XSUABRV initialAttributes;
  set AB0DM001.FY1FCTYC initialAttributes;
  set AB0DM001.SY1STNBR initialAttributes;
  set AB0DM001.SY1STYNM initialAttributes;

  set AB0DM001.CATOAP initialAttributes; /* Commarea TO application*/
  set AB0DM001.CAITEM initialAttributes; /* Commarea application data*/

  set AB0DM001.AB0DMTIL skip, invisible;

end // end AB0D028

// Verify the entered data
Function AB0D029()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Determine whether a valid request to scroll was entered.*/
   /* If not a scroll request, verify any changed data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (AB0DM001.CAITEM > " ") /* Application data was entered*/

    set AB0DM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    ABWREC.ABWPRCSN = "150 "; /* Process number*/
    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  end

  if (converseVar.eventKey is pf7  /* Scroll back request*/
   || converseVar.eventKey is pf8  /* or scroll forward request*/
   || converseVar.eventKey is pf19 /* Scroll back request (new style)*/
   || converseVar.eventKey is pf20)
                                   /* or scroll forward request (new style)*/
    AB0D030(); /* Verify scroll request*/
  else
    AB0D031(); /* Verify selection criteria*/
    if (ABWREC.ABWSWR == "N") /* If new selection criteria entered*/
      AB0D042(); /* Verify any changed data*/
    end
    if (ABWREC.ABWSWR == "Y") /* If new selection criteria entered*/
      exit stack; /* Go back to start of appl*/
    end
  end

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to redisplay map*/
  end


end // end AB0D029

// Verify scroll request
Function AB0D030()
   /* ------------------------------------------------------------*/
   /* Ensure that pages exist to scroll forward or back.*/
   /* Indicate an error for any data that was modified.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && ABWREC.ABWTSP < 2)          /* and no previous pages*/

    ABWREC.ABWPRCSN = "151 "; /* Process number*/
    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && ABWREC.ABWTSP >= ABWREC.TA5TSQIX) /* and no more pages*/

    ABWREC.ABWPRCSN = "151 "; /* Process number*/
    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end

  if (converseVar.eventKey is pf19 /* Scroll back request*/
   && AB0DW03.AB0DWIX3 < 2)        /* and no previous pages*/

    ABWREC.ABWPRCSN = "151 "; /* Process number*/
    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(46); /* No previous page to display*/

  end

  if (converseVar.eventKey is pf20 /* Scroll forward request*/
   && AB0DW03.AB0DWIX3 >= AB0DW03.AB0DWMX3) /* and no more pages*/

    ABWREC.ABWPRCSN = "151 "; /* Process number*/
    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(47); /* No more pages to display*/

  end


end // end AB0D030

// Edit selection criteria
Function AB0D031()
   /* ============================================================*/
   /* ===== E D I T    S E L E C T I O N    C R I T E R I A  =====*/
   /* =====                                                  =====*/
   /* ===== Compare selection criteria on screen to data on  =====*/
   /* ===== working storatge record, if any has changed,     =====*/
   /* ===== validate all selection criteria fields and turn  =====*/
   /* ===== on switch which allows later processing to purge =====*/
   /* ===== temporary storage and re-load it with newly      =====*/
   /* ===== selected data.                                   =====*/
   /* ============================================================*/

  ABWREC.ABWSWR = "N"; /* initialize switch to 'OFF'*/
  XP1REC.XP1MNO = 0;

   /* *************************************************************/
  if (AB0DM001.SY1STNBR != XP1REC.SY1STNBR)
    XP1REC.SY1STNBR = AB0DM001.SY1STNBR;
    ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
  end

  if (AB0DM001.XSUCD != XP1REC.XSUCD)
    XP1REC.XSUCD = AB0DM001.XSUCD;
    ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
  end

  if (AB0DM001.XGACD != XP1REC.XGACD)
    XP1REC.XGACD = AB0DM001.XGACD;
    ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
  end

  if (AB0DM001.FY1FCTYC != XP1REC.FY1FCTYC)
    XP1REC.FY1FCTYC = AB0DM001.FY1FCTYC;
    ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
  end

  if (AB0DM001.XPCCD != XP1REC.XPCCD)
    XP1REC.XPCCD = AB0DM001.XPCCD;
    ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
  end

  if (AB0DM001.AB3BUYMO != XP1REC.XP1CBYMO
   || AB0DM001.AB3BUYMO == " ")
    XP1REC.XP1CBYMO = AB0DM001.AB3BUYMO;
    XP1REC.XP1BUYMM = XP1REC.XP1CBYMM;
    XP1REC.XP1BUYYY = XP1REC.XP1CBYYY;
    /* ----------------Y2K IN BEGIN-------------------*/
    /*  */
    if (XP1REC.XP1BUYMM > 00
     && XP1REC.XP1BUYMM < 13)
      if (XP1REC.XP1BUYYY > 60)
        XP1REC.XP1BUYCC = 19;
      else
        XP1REC.XP1BUYCC = 20;
      end
    else
      XP1REC.XP1BUYMO = 0;
    end
    /*  */
    /* ----------------Y2K IN END---------------------*/
    XP1REC.AB3BUYMO = XP1REC.XP1BUYMO;
    ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
  end

  AB0DW00.AB0DWDT2 = XP1REC.XSNYR;
  if (AB0DM001.XSNYR != AB0DW00.AB0DWYY2)
    XP1REC.XSNYR = AB0DM001.XSNYR;
    ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
  end

  if (AB0DM001.XSECD != XP1REC.XSECD)
    XP1REC.XSECD = AB0DM001.XSECD;
    ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
  end

  if (AB0DM001.XXXUSER != XP1REC.XXXUSER)
    XP1REC.XXXUSER = AB0DM001.XXXUSER;
    ABWREC.ABWSWR = "Y"; /* Turn 'ON' switch to re-select*/
  end

   /* *************************************************************/

  if (ABWREC.ABWSWR == "Y") /* if any selection criteria changed*/
    /* ============================================================*/
    /* ===       Put in edits of selection criteria HERE        ===*/
    /* ===  (If any errors found turn re-select switch 'OFF')   ===*/
    /* ============================================================*/
    AB0D032(); /* edit style number*/
    AB0D036(); /* edit xsucd*/
    AB0D037(); /* edit xgacd*/
    AB0D038(); /* edit factory code*/
    AB0D039(); /* edit xpccd*/
    AB0D041(); /* edit scheduler/name*/
    AB0D040(); /* edit xsecd/xsntbl/buy table*/
    ABWREC.ABWIXM = 1; /* Initialize line index*/
    while (ABWREC.ABWIXM <= AB0DW00.AB0DWSZM) /* Until end of lines*/
      AB0D009(); /* clear fields*/
      AB0D010(); /* protect fields*/
      ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
    end

    AB0DM001.AB0DMTQY = 0;
    AB0DM001.AB0DMBLP = 0;
    AB0DM001.AB0DMLST = 0;
    AB0DM001.AB0DMBLT = 0;
    AB0DM001.AB0DMNBT = 0;
    set AB0DW03 empty;
    AB0D012();
  end
  if (XP1REC.XP1MNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(XP1REC.XP1MNO);
  end
  converseLib.clearScreen();

   /* ====================== END OF PROCESS ======================*/
end // end AB0D031

// Edit style number
Function AB0D032()
  if (XP1REC.SY1STNBR == " ") /* XP1REC Field eq spaces*/
    AB0DW00.SY1STNBR = " "; /* Space out specific style wk*/
    AB0DM001.SY1STYNM = " "; /* Space out desc*/
    XP1REC.SY1STYNM = " "; /* Space out desc*/
    return; /* Return to calling process*/
  end


  if (XP1REC.SY1STNBR == "?") /* Pop-up window requested*/
    XP1REC.SY1STNBR = " "; /* Space out wk storage*/
    XP1REC.SY1STYNM = " "; /* Space out desc*/
    AB0DM001.SY1STYNM = " "; /* Space out desc*/
    set AB0DM001.SY1STNBR cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 42; /* Indicate pop-up not available*/
    ABWREC.ABWPRCSN = "52A "; /* Process number*/
    return; /* Return to calling process*/
  end



   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


   /* *==================================**/
   /* *  Check Style in DPRODG.VSYCLR01  **/
   /* *==================================**/

  AB0D033(); /* Select set style*/

  AB0D034(); /* Validate style*/

  AB0D035(); /* Close style cursor*/



end // end AB0D032

// select set style cursor
Function AB0D033()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/

  set PG2REC empty; /* Reset rec work area*/

  PG2REC.XGPCD = XP1REC.XGPCD; /* GPC cd*/
  PG2REC.SY1STNBR = XP1REC.SY1STNBR; /* Style no.*/


   /* *===================================**/
   /* *  Select Set from DPRODG.VSYCLR01  **/
   /* *===================================**/

  try
    call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to calling process*/

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "52B "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to redisplay map*/



end // end AB0D033

// process style row
Function AB0D034()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call and validate.*/
   /* For validation purposes only one (1) valid row retrieved*/
     /* will be enough to satisfy the existence check.*/
   /* ------------------------------------------------------------*/


  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/
      XP1REC.SY1STYNM = PG2REC.SY1STYNM; /* move style desc*/
      AB0DM001.SY1STYNM = PG2REC.SY1STYNM; /* move style desc*/
      return; /* Return to calling process*/

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      XP1REC.SY1STNBR = " "; /* Space out wk storage*/
      XP1REC.SY1STYNM = " "; /* Space out desc*/
      AB0DM001.SY1STYNM = " "; /* Space out desc*/
      set AB0DM001.SY1STNBR cursor, bold; /* Highlight field*/
      XP1REC.XP1MNO = 38; /* Indicate error message*/
      ABWREC.ABWPRCSN = "52C "; /* Process number*/
      return; /* Exit to calling rtn*/

    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "52C "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to redisplay map*/



end // end AB0D034

// close style cursor
Function AB0D035()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


  try
    call "IO3120" ("CS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close set*/


   /* ------------------------------------------------------------*/
   /* If successful, return to calling process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to calling process*/

  end


   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  ABWREC.ABWPRCSN = "52D "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  converseLib.validationFailed(10); /* Indicate system error*/

  converseLib.clearScreen();
   /* Clear screen before redisplay*/



end // end AB0D035

// Edit Silhouette
Function AB0D036()
  if (XP1REC.XSUCD == " ") /* XP1REC field eq spaces*/
    AB0DM001.XSUABRV = " "; /* Space out desc*/
    XP1REC.XSUABRV = " "; /* Space out desc*/
    XP1REC.XSUDESC = " "; /* Space out desc*/
    return; /* Return to calling process*/
  end

  XP1REC.XP1ERRFL = " "; /* Reset error indicator*/



  XSABSSU();
                                   /* Standard XSU validation/pop-up module*/



  if (XP1REC.XP1ERRFL == "1") /* Erroneous data detected*/

    XP1REC.XSUCD = " "; /* Space out save field*/
    XP1REC.XSUABRV = " "; /* Space out desc*/
    AB0DM001.XSUABRV = " "; /* Space out desc*/
    set AB0DM001.XSUCD cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 31; /* Indicate error message*/
    ABWREC.ABWPRCSN = "52E "; /* Process number*/

  else

    AB0DM001.XSUABRV = XP1REC.XSUABRV; /* Move desc to map*/

    if (XP1REC.XXXSTAT == "I") /* Inactive data obtained*/

      XP1REC.XSUCD = " "; /* Space out save field*/
      XP1REC.XSUABRV = " "; /* Space out desc*/
      AB0DM001.XSUABRV = " "; /* Space out desc*/
      set AB0DM001.XSUABRV bold; /* Highlight field*/
      set AB0DM001.XSUCD cursor, bold; /* Highlight field*/
      XP1REC.XP1MNO = 35; /* Indicate error message*/
      ABWREC.ABWPRCSN = "52E "; /* Process number*/

    else

      AB0DM001.XSUCD = XP1REC.XSUCD; /* Move valid data to map*/

    end

  end



end // end AB0D036

// edit Gender/Age
Function AB0D037()

  if (XP1REC.XGACD == " ") /* XP1REC field eq spaces*/
    XP1REC.XGADESC = " "; /* Space out desc*/
    XP1REC.XGAABRV = " "; /* Space out desc*/
    AB0DM001.XGAABRV = " "; /* Space out desc*/
    return; /* Return to calling process*/
  end

  XP1REC.XP1ERRFL = " "; /* Reset error indicator*/



  XSABSGA(); /* Standard XGA pop-up module*/



  if (XP1REC.XP1ERRFL == "1") /* Invalid data detected*/

    XP1REC.XGACD = " "; /* Space out save area*/
    XP1REC.XGAABRV = " "; /* Space out desc*/
    AB0DM001.XGAABRV = " "; /* Space out desc*/
    set AB0DM001.XGACD cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 33; /* Indicate error message*/
    ABWREC.ABWPRCSN = "52F "; /* Process number*/

  else

    AB0DM001.XGAABRV = XP1REC.XGAABRV; /* Move desc to map*/

    if (XP1REC.XXXSTAT == "I") /* Inactive data obtained*/

      XP1REC.XGACD = " "; /* Space out save area*/
      XP1REC.XGAABRV = " "; /* Space out desc*/
      AB0DM001.XGAABRV = " "; /* Space out desc*/
      set AB0DM001.XGAABRV bold; /* Highlight field*/
      set AB0DM001.XGACD cursor, bold; /* Highlight field*/
      XP1REC.XP1MNO = 35; /* Indicate error message*/
      ABWREC.ABWPRCSN = "52F "; /* Process number*/

    else

      AB0DM001.XGACD = XP1REC.XGACD; /* Move valid code to map*/

    end

  end



end // end AB0D037

// edit Factory Code
Function AB0D038()
  if (XP1REC.FY1FCTYC == " ") /* XP1REC Field eq spaces*/
    AB0DM001.FY1FCTSN = " "; /* Move blank Factory cd*/
    return; /* Return to calling process*/
  end


  if (XP1REC.FY1FCTYC == "?") /* Pop-up window requested*/
    XP1REC.FY1FCTYC = " "; /* Move blank Factory cd*/
    AB0DM001.FY1FCTSN = " "; /* Move blank Factory cd*/
    set AB0DM001.FY1FCTYC cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 42; /* Indicate pop-up window not available*/
    ABWREC.ABWPRCSN = "52G "; /* Process number*/
    return; /* Return to calling process*/
  end


   /* ------------------------------------------------------------*/
   /* Verify if Factory cd entered is found in DFCTY.VFCTY001*/
   /* ------------------------------------------------------------*/

   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/

  set FY1REC empty; /* initialize db record*/
  FY1REC.XGPCD = XP1REC.XGPCD; /* gpc cd*/
  FY1REC.FY1FCTYC = XP1REC.FY1FCTYC; /* Fld office*/


   /* *=============================**/
   /* *  Access DFCTY.VFCTY001 DB   **/
   /* *=============================**/

  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      XP1REC.FY1FCTYC = " "; /* Move blank Factory cd*/
      AB0DM001.FY1FCTSN = " "; /* Move blank Factory cd*/
      set AB0DM001.FY1FCTYC cursor, bold; /* Highlight field*/
      XP1REC.XP1MNO = 41; /* Indicate error message*/
      ABWREC.ABWPRCSN = "52G "; /* Process number*/
      return; /* Return to calling process*/
    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "52G "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DFCTY.VFCTY001 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to redisplay map*/



end // end AB0D038

// edit product category
Function AB0D039()
  if (XP1REC.XPCCD == " ") /* XP1REC field eq spaces*/
    XP1REC.XPCABRV = " "; /* Space out desc*/
    AB0DM001.XPCABRV = " "; /* Space out desc*/
    return; /* Return to calling process*/
  end

  XP1REC.XP1ERRFL = " "; /* Reset error indicator*/



  XSABSPC(); /* Standard XPC pop-up module*/



  if (XP1REC.XP1ERRFL == "1") /* Invalid data detected*/

    XP1REC.XPCCD = " "; /* Space out save area*/
    XP1REC.XPCABRV = " "; /* Space out desc*/
    AB0DM001.XPCABRV = " "; /* Space out desc*/
    set AB0DM001.XPCCD cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 32; /* Indicate error message*/
    ABWREC.ABWPRCSN = "S06 "; /* Process number*/

  else

    AB0DM001.XPCABRV = XP1REC.XPCABRV; /* Move desc to map*/

    if (XP1REC.XXXSTAT == "I") /* Inactive code obtained*/

      XP1REC.XPCCD = " "; /* Space out save area*/
      XP1REC.XPCABRV = " "; /* Space out desc*/
      AB0DM001.XPCABRV = " "; /* Space out desc*/
      set AB0DM001.XPCABRV bold; /* Highlight field*/
      set AB0DM001.XPCCD cursor, bold; /* Highlight field*/
      XP1REC.XP1MNO = 35; /* Indicate error message*/
      ABWREC.ABWPRCSN = "S06 "; /* Process number*/
    else
      AB0DM001.XPCCD = XP1REC.XPCCD; /* Move valid code to map*/
    end
  end




end // end AB0D039

// edit XSECD/XSNTBL/BUY TABLE.
Function AB0D040()

  XP1REC.XP1ERRFL = " "; /* Reset error indicator*/

  XSABSMO(); /* EDIT Buy-Month/XSNYR/XSECD*/


   /* ***** if error was with XSECD ******/
  if (XP1REC.XP1ERRFL == "3") /* Invalid season code*/

    XP1REC.XSECD = " "; /* Space out save area*/
    set AB0DM001.XSECD cursor, bold; /* Highlight field*/
    /* ***** if code was inactive ******/
    if (XP1REC.XXXSTAT == "I") /* Inactive data obtained*/
      XP1REC.XP1MNO = 35; /* Indicate error message*/
    else
      XP1REC.XP1MNO = 16; /* Indicate error message*/
    end
    ABWREC.ABWPRCSN = "52H "; /* Process number*/

  else

    /* ***** if error was with XSNYR ******/
    if (XP1REC.XP1ERRFL == "2") /* Invalid season-year*/

      set AB0DM001.XSNYR cursor, bold; /* Highlight field*/
      XP1REC.XSNYR = 0; /* Space out save area*/
      XP1REC.XP1XSNYR = 0; /* Space out save area*/
      if (XP1REC.XXXSTAT == "I") /* Inactive data obtained*/
        XP1REC.XP1MNO = 35; /* Indicate error message*/
      else
        XP1REC.XP1MNO = 26; /* Indicate error message*/
      end
      ABWREC.ABWPRCSN = "52H "; /* Process number*/

    else

      if (XP1REC.XP1ERRFL == "1") /* Invalid BUY-MONTH*/

        set AB0DM001.AB3BUYMO cursor, bold; /* Highlight field*/
        XP1REC.AB3BUYMO = 0; /* Space out save area*/
        XP1REC.XP1BUYMO = 0; /* Space out save area*/
        XP1REC.XP1CBYMO = " "; /* Space out save area*/
        if (XP1REC.XXXSTAT == "I") /* Inactive data obtained*/
          XP1REC.XP1MNO = 35; /* Indicate error message*/
        else
          XP1REC.XP1MNO = 34; /* Indicate error message*/
        end
        ABWREC.ABWPRCSN = "52H "; /* Process number*/

      end
    end
  end

  if (XP1REC.XP1MNO > 0)
    if (XP1REC.XP1MNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(XP1REC.XP1MNO);
    end /* Indicate error message*/
  else
    XP1REC.AB3BUYMO = XP1REC.XP1BUYMO;
  end



end // end AB0D040

// edit Scheduler name
Function AB0D041()

  if (XP1REC.XXXUSER == "?") /* Pop-up window requested*/
    XP1REC.XXXUSER = " "; /* Space out save area*/
    set AB0DM001.XXXUSER cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 42; /* Indicate pop-up window not available*/
    ABWREC.ABWPRCSN = "52J "; /* Process number*/
    return; /* Return to calling process*/
  end



   /* *=====================================================**/
    /* Perform XPAB010 to retrieve row from DPRODG.VSUSER01*/
   /* *=====================================================**/


  XP1REC.XP1ERRFL = " "; /* Reset error indicator*/

  XPAB010(); /* Validate userid and get scheduler cd*/



   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/

  if (XP1REC.XP1ERRFL == "1") /* IF Row not found*/
                  /* (Field in Error)*/
    XP1REC.XXXUSER = " "; /* Space out save area*/
    XP1REC.XXXUSER = " "; /* Space out save area*/
    set AB0DM001.XXXUSER cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 21; /* Indicate error msg*/
    ABWREC.ABWPRCSN = "52J "; /* Process number*/

    return; /* Return to calling process*/

  else

    if (XP1REC.XP1ERRFL == "2") /* IF Resource not available*/

      converseLib.validationFailed(11); /* Indicate 'DATA BASE BUSY' error*/
      exit stack; /* Exit to redisplay map*/

    else

      if (XP1REC.XP1ERRFL == "3" /* Call not successful*/
       || XP1REC.XP1ERRFL == "4") /* or Unknown DB2 error found*/

        converseLib.validationFailed(10); /* Indicate unexpected error found*/
        exit stack; /* Exit to redisplay map*/

      else /* (ROW FOUND - OK)*/

        XPAB020(); /* Get new valid season/year/buy-month*/
                                 /* ;   for new scheduler*/
        /* ----- move new values to map -----*/
        AB0DM001.XSECD = XP1REC.XSECD;
        AB0DM001.XSNYR = XP1REC.XSNYR;
        AB0DM001.AB3BUYMO = XP1REC.XP1CBYMO;

      end

    end

  end



end // end AB0D041

// Verify any changed data
Function AB0D042()
   /* ------------------------------------------------------------*/
   /* Return to the previous process if no data was changed.*/
   /* Verify the data that was changed.*/
   /* ------------------------------------------------------------*/


  ABWREC.ABWSWR = "Y";
  ABWREC.ABWIXM = 1; /* Initialize line index*/
  ABWREC.ABWIDX1 = 1; /* Initialize line index*/
  AB0DW03.AB0DWTRQ = 0; /* Initialize wk tot qty*/

  while (ABWREC.ABWIXM <= AB0DW04.AB0DWMX4) /* Until end of lines*/

    if (AB0DW04.AB5ACTBY[ABWIDX1] != AB0DM001.AB0DMBQY[ABWIXM])
      ABWREC.ABWSWR = "N"; /* Do not obtain new data*/
    end

                    /* (Accumulate col totals)*/
    AB0DW03.AB0DWTRQ = AB0DW03.AB0DWTRQ + AB0DM001.AB0DMBQY[ABWIXM];

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
    ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Increment line index*/

  end

  AB0DM001.AB0DMTQY = AB0DW03.AB0DWTRQ;

   /* EZERTN                        ; Return to previous process*/



end // end AB0D042

// Process valid input request
Function AB0D043()
   /* ------------------------------------------------------------*/
   /* If a scroll request, adjust temporary storage page number.*/
   /* Update any changed data.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    ABWREC.ABWTSP = ABWREC.ABWTSP - 1; /* Decrement page number*/
    AB0DW04.AB0DWMX4 = 0;

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey is pf8) /* Scroll back requested*/

    ABWREC.ABWTSP = ABWREC.ABWTSP + 1; /* Decrement page number*/
    AB0DW04.AB0DWMX4 = 0;

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey is pf19) /* Scroll forward requested*/

    AB0DW03.AB0DWWXS = AB0DW03.AB0DWIX3; /* Save curr page number*/
    AB0DW03.AB0DWIX3 = AB0DW03.AB0DWIX3 - 1; /* Increment page number*/

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey is pf20) /* Scroll forward requested*/

    AB0DW03.AB0DWWXS = AB0DW03.AB0DWIX3; /* Save curr page number*/
    AB0DW03.AB0DWIX3 = AB0DW03.AB0DWIX3 + 1; /* Increment page number*/

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey is enter) /* Scroll forward requested*/

    AB0D044(); /* Update  data - dabuy.vbcolr01 table*/

    /* *** PERFORM AB0D048  ; obtain data - dabuy.vabsty01 table*/

    /* *** PERFORM AB0D049  ; Update data - dabuy.vabsty01 table*/

    ABWREC.ABWNMO = 045;
  end
end // end AB0D043

// update color table
Function AB0D044()

  ABWREC.ABWIXM = 1; /* Initialize line index*/
  ABWREC.ABWIDX1 = 1; /* Initialize line index*/

  while (ABWREC.ABWIXM <= AB0DW04.AB0DWMX4) /* Until end of lines*/
    if (AB0DW04.AB5ACTBY[ABWIDX1] != AB0DM001.AB0DMBQY[ABWIXM])
      AB0D045(); /* obtain unique record*/
      AB0D046(); /* change record*/
      AB0DW04.AB5ACTBY[ABWIDX1] = AB0DM001.AB0DMBQY[ABWIXM];
      AB0DW04.ZZZCHGCT[ABWIDX1] = AB5REC.ZZZCHGCT;
    end

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/
    ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Increment line index*/

  end

  AB0D047(); /* Update TSQ record.*/

   /* EZERTN                        ; Return to previous process*/



end // end AB0D044

// obtain unique color row
Function AB0D045()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  set AB5REC empty;
  AB5REC.SY1STNBR = AB0DW04.SY1STNBR[ABWIDX1]; /* style number*/
  AB5REC.SY2CLRID = AB0DW04.SY2CLRID[ABWIDX1]; /* color id*/
  AB5REC.XDMCD = AB0DW04.XDMCD[ABWIDX1]; /* dimension code*/
  AB5REC.XWHCD = AB0DW04.XWHCD[ABWIDX1]; /* warehouse code*/
  AB5REC.XDVCD = AB0DW04.XDVCD[ABWIDX1]; /* division code*/
  AB5REC.XSECD = AB0DW04.XSECD[ABWIDX1]; /* season code*/
  AB5REC.XSNYR = AB0DW04.XSNYR[ABWIDX1]; /* season year range*/
  AB5REC.FY1FCTYC = AB0DW04.FY1FCTYC[ABWIDX1]; /* factory code*/
  AB5REC.PC4ORTYP = AB0DW04.PC4ORTYP[ABWIDX1]; /* p.o. type*/
  AB5REC.PC2CUXID = AB0DW04.PC2CUXID[ABWIDX1]; /* cust x-ref code*/
  AB5REC.AB3BUYMO = AB0DW04.AB3BUYMO[ABWIDX1]; /* buy month, yymm*/

  try
    call "IO3580" ("S ", SQLCA, AB5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "162 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "OBTAIN UNIQUE OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VBCOLR01"; /* Table view name*/
    TA1REC.TA1TBLKE = AB5REC.AB5KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Return to previous process*/

  end


end // end AB0D045

// update color row
Function AB0D046()
   /* ------------------------------------------------------------*/
   /* Format the data from the internal array.*/
   /* ------------------------------------------------------------*/

  XX0XS01();
  XP1REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  XP1REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  AB5REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  AB5REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  AB5REC.ZZZCHGCT = AB0DW04.ZZZCHGCT[ABWIDX1];
  AB5REC.AB5ACTBY = AB0DM001.AB0DMBQY[ABWIXM];

   /* ------------------------------------------------------------*/
   /* update row in the table.*/
   /* ------------------------------------------------------------*/
   /* If any error, indicate a system error.*/
   /* Format the data in the internal  array display line.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3580" ("U ", SQLCA, AB5REC) {isNoRefresh = yes, isExternal = yes};
  end
   /* ****************************************************/

  if (sysVar.errorCode == "00000000") /* successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* no sql errors*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.commit(); /* ; commit*/
      return; /* return*/
    end
  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "163 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "OBTAIN UNIQUE ROW ";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBCOLR01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to display map*/

end // end AB0D046

// update page to temp. storage
Function AB0D047()
   /* ------------------------------------------------------------*/
   /* Update the page to temporary storage.*/
   /* ------------------------------------------------------------*/

  AB0DW04.AB0DWLEN = ABWREC.ABWTSL; /* Temporary storage length*/
  TA5REC.TA5APPID = ABWREC.ABWAPPL; /* Application identification*/
  TA5REC.TA5TSQIX = ABWREC.ABWTSP; /* Highest page number*/
  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (AB0DW04, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
                                    /* ;subroutine*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "166 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "UPDATE PAGE TO TEMPORARY STORAGE";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end

  set AB0DW04 empty; /* Clear temporary storage record*/


end // end AB0D047

// Close cursor for VABSTY01 - C6
Function AB0D050()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3560" ("C6", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "050 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VABSTY01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end


end // end AB0D050

// Check colors per style stored
Function AB0DS01()
   /* ------------------------------------------------------------*/
   /* Select set DABUY.VBCOLR01, keys= style stored.*/
   /* Fetch first row from the selected set.*/
   /* Indicate colors exist for the style if found.*/
   /* Close color cursor.*/
   /* ------------------------------------------------------------*/


  AB0DS02(); /* Select Set DABUY.VBCOLR01 data*/


  if (converseVar.validationMsgNum == 0) /* No errors found*/

    AB0DS03(); /* Process first size row*/

    if (converseVar.validationMsgNum == 0) /* No errors found*/
      AB0DS04(); /* Close color cursor*/
    end

  end


end // end AB0DS01

// Select set DABUY.VBCOLR01 rows
Function AB0DS02()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  set AB5REC empty;
  AB5REC.SY1STNBR = AB0DW03.SY1STNBR[ABWIDX2]; /* style number*/
  AB5REC.XDMCD = AB0DW03.XDMCD[ABWIDX2]; /* dimension code*/
  AB5REC.XWHCD = AB0DW03.XWHCD[ABWIDX2]; /* warehouse code*/
  AB5REC.XDVCD = AB0DW03.XDVCD[ABWIDX2]; /* division code*/
  AB5REC.XSECD = AB0DW03.XSECD[ABWIDX2]; /* season code*/
  AB5REC.XSNYR = AB0DW03.XSNYR[ABWIDX2]; /* season year range*/
  AB5REC.FY1FCTYC = AB0DW03.FY1FCTYC[ABWIDX2]; /* factory code*/
  AB5REC.PC4ORTYP = AB0DW03.PC4ORTYP[ABWIDX2]; /* p.o. type*/
  AB5REC.PC2CUXID = AB0DW03.PC2CUXID[ABWIDX2]; /* cust x-ref code*/
  AB5REC.AB3BUYMO = XP1REC.XP1BUYMO; /* cust x-ref code*/

  try
    call "IO3580" ("S1", SQLCA, AB5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "S02 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VBCOLR01"; /* Table view name*/
    TA1REC.TA1TBLKE = AB5REC.AB5KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    return; /* Return to previous process*/

  end


end // end AB0DS02

// Process first color row
Function AB0DS03()
   /* ------------------------------------------------------------*/
   /* Fetch the first row from the selected set of rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3580" ("N1", SQLCA, AB5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch the next row*/
   /* ****************************************************/

  if (SQLCA.VAGen_SQLCODE == 0) /* Color row found*/

    AB0DW03.AB0DWCLI[ABWIDX2] = "Y"; /* Indicate color found*/
    return; /* Return to calling process*/

  else

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      return; /* Return to calling process*/

    end

  end


  if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S03 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBCOLR01"; /* Table view name*/

  try
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
  end /* Error diag. routine*/

  AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  return; /* Return to previous process*/


end // end AB0DS03

// Close color set cursor
Function AB0DS04()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3580" ("C1", SQLCA, AB5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "S04 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VBCOLR01"; /* Table view name*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0DM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end


end // end AB0DS04

// Search for valid style
Function AB0DS05()
   /* ------------------------------------------------------------*/
   /* This process finds the next or previous valid style from*/
    /* the styles stored in AB0DW03 wk area. Search starts from*/
    /* the value of AB0DWIX3 (current style pointer) passed and*/
    /* continues on until a valid style is found or array limits*/
    /* are reached. The address of the valid style found is*/
    /* passed back to the calling process.*/
   /* ------------------------------------------------------------*/


  if (AB0DW00.AB0DWVSD == "F") /* Forward search specified*/

    while (ABWREC.ABWIDX2 <= AB0DW03.AB0DWMX3) /* Process rem styles*/

      if (AB0DW03.AB0DWCLI[ABWIDX2] == "Y") /* Style w/ colors*/
        return; /* Return to calling process*/
      end

      ABWREC.ABWIDX2 = ABWREC.ABWIDX2 + 1; /* Loop through*/

    end

    ABWREC.ABWIDX2 = 0; /* No valid styles found*/
    return; /* Return to calling process*/

  end


  if (AB0DW00.AB0DWVSD == "B") /* Backward search specified*/

    while (ABWREC.ABWIDX2 >= 1) /* Process rem styles*/

      if (AB0DW03.AB0DWCLI[ABWIDX2] == "Y") /* Style w/ colors*/
        return; /* Return to calling process*/
      end

      ABWREC.ABWIDX2 = ABWREC.ABWIDX2 - 1; /* Loop through*/

    end

    ABWREC.ABWIDX2 = 0; /* No valid styles found*/
    return; /* Return to calling process*/

  end


end // end AB0DS05

// Search for passed style
Function AB0DS06()
   /* ------------------------------------------------------------*/
   /* This process finds the style previously passed to ab0q*/
    /* the styles stored in AB0DW03 wk area. Search starts from*/
    /* the value of AB0DWIX3 (current style pointer) passed and*/
    /* continues on until correct style is found or array limits*/
    /* are reached. The address of the valid style found is*/
    /* passed back to the calling process.*/
   /* ------------------------------------------------------------*/


  while (ABWREC.ABWIDX2 <= AB0DW03.AB0DWMX3) /* Process rem styles*/

    if (AB0DW03.SY1STNBR[ABWIDX2] == AB0DW00.AB0DWSDQ
     && AB0DW03.AB0DWCLI[ABWIDX2] == "Y") /* Style w/ colors*/
      return; /* Return to calling process*/
    end

    ABWREC.ABWIDX2 = ABWREC.ABWIDX2 + 1; /* Loop through*/

  end

  ABWREC.ABWIDX2 = 0; /* No match found*/
  return; /* Return to calling process*/

end // end AB0DS06

//*** RECORD=AB0DW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record AB0DW00 type basicRecord
  10 AB0DWMFS AB0DWMFS ; 
  10 AB0DWAJQ AB0DWAJQ ; 
  10 AB0DWBEG AB0DWBEG ; 
  10 AB0DWMNO AB0DWMNO ; 
  10 AB0DWNOU AB0DWNOU ; 
  10 AB0DWNXT AB0DWNXT ; 
  10 AB0DWSZM AB0DWSZM ; 
  10 AB0DWSZT AB0DWSZT ; 
  10 AB0DWSZQ AB0DWSZQ ; 
  10 AB0DWSZ1 AB0DWSZ1 ; 
  10 AB0DWDT1 AB0DWDT1 ; 
    15 AB0DWCC1 AB0DWCC1 ; 
    15 AB0DWYY1 AB0DWYY1 ; 
    15 AB0DWMM1 AB0DWMM1 ; 
  10 AB0DWDT2 AB0DWDT2 ; 
    15 AB0DWCC2 AB0DWCC2 ; 
    15 AB0DWYY2 AB0DWYY2 ; 
  10 AB0DWDT3 AB0DWDT3 ; 
    15 AB0DWYY3 AB0DWYY3 ; 
    15 AB0DWMM3 AB0DWMM3 ; 
  10 AB0DWPN AB0DWPN ; 
  10 AB0DWSA AB0DWSA ; 
    15 AB0DWSS AB0DWSS ; 
    15 AB0DWYR AB0DWYR ; 
  10 AB0DWXSY AB0DWXSY ; 
  10 AB0DWVSD AB0DWVSD ; 
  10 SY1STNBR SY1STNBR ; 
  10 AB0DWSDQ AB0DWSDQ ; 
  10 AB3BUYMO AB3BUYMO ; 
end // end AB0DW00

//*** RECORD=AB0DW02 ****
// Temporary storage record for TSXX - Transportation Prototype
// ***********************
Record AB0DW02 type basicRecord
  10 ABWLEN ABWLEN ; 
  10 * char(4092) ; 
end // end AB0DW02

//*** RECORD=AB0DW03 ****
// ************************************************************
// Temporary storage record - for color breakout maintenance
// ************************************************************
// ***********************
Record AB0DW03 type basicRecord
  5 AB0DWGP3 AB0DWGP3 ; 
    10 AB0DWIX3 AB0DWIX3 ; 
    10 AB0DWWXS AB0DWWXS ; 
    10 AB0DWMX3 AB0DWMX3 ; 
    10 AB0DWTRQ AB0DWTRQ ; 
    10 AB0DWTTQ AB0DWTTQ ; 
    10 AB0DWLST AB0DWLST ; 
    10 AB0DWBLT AB0DWBLT ; 
    10 AB0DWNBT AB0DWNBT ; 
    10 AB0DWAY3 AB0DWAY3 [1000] ; 
      15 SY1STNBR SY1STNBR ; 
      15 AB3BUYST AB3BUYST ; 
      15 XDMCD XDMCD ; 
      15 XWHCD XWHCD ; 
      15 XDVCD XDVCD ; 
      15 XSECD XSECD ; 
      15 XSNYR XSNYR ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 PC4ORTYP PC4ORTYP ; 
      15 PC2CUXID PC2CUXID ; 
      15 ZZZCHGCT ZZZCHGCT ; 
      15 AB0DWCLI AB0DWCLI ; 
      15 AB6BKFNI AB6BKFNI ; 
end // end AB0DW03

//*** RECORD=AB0DW04 ****
// Temporary storage record for AB0D
// ***********************
Record AB0DW04 type basicRecord
  5 * char(762) ; 
    10 AB0DWLEN AB0DWLEN ; 
    10 AB0DWMX4 AB0DWMX4 ; 
    10 AB0DWMBY AB0DWMBY ; 
    10 AB0DWMFS AB0DWMFS ; 
    10 AB4SMBQT AB4SMBQT ; 
    10 * char(62) [12] ; 
      15 AB0DWKY4 AB0DWKY4 ; 
        20 AB3BUYMO AB3BUYMO ; 
        20 FY1FCTYC FY1FCTYC ; 
        20 PC2CUXID PC2CUXID ; 
        20 PC4ORTYP PC4ORTYP ; 
        20 SY1STNBR SY1STNBR ; 
        20 SY2CLRID SY2CLRID ; 
        20 XDMCD XDMCD ; 
        20 XDVCD XDVCD ; 
        20 XGPCD XGPCD ; 
        20 XSECD XSECD ; 
        20 XSNYR XSNYR ; 
        20 XWHCD XWHCD ; 
      15 AF5BLAQ AF5BLAQ ; 
      15 AF5LGSHQ AF5LGSHQ ; 
      15 AB5ACTBY AB5ACTBY ; 
      15 AB5BUYPC AB5BUYPC ; 
      15 SY1BSTNB SY1BSTNB ; 
      15 SY2BCLCD SY2BCLCD ; 
      15 ZZZCHGCT ZZZCHGCT ; 
end // end AB0DW04

//*** RECORD=AB0DW05 ****
// Temporary table record for AB0D - 2nd Half
// ***********************
Record AB0DW05 type basicRecord
  5 * char(4000) ; 
    10 AB4SMBQT AB4SMBQT [1000] ; 
end // end AB0DW05

// adjustment quantity
DataItem AB0DWAJQ smallint {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// array for temp. record
DataItem AB0DWAY3 char(32)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Beginning member in array
DataItem AB0DWBEG num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// total bla qty for style
DataItem AB0DWBLT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working century
DataItem AB0DWCC1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working century
DataItem AB0DWCC2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Color existence indicator
DataItem AB0DWCLI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working date - buy stat date
DataItem AB0DWDT1 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working date  - sesn yr range
DataItem AB0DWDT2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working date - buy month
DataItem AB0DWDT3 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temporary record
DataItem AB0DWGP3 char(32026)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index for this array
DataItem AB0DWIX3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AB0DWKY4 char(36)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Temporary storage length
DataItem AB0DWLEN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// total long/short qty for style
DataItem AB0DWLST int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Style/Month Buy Quantity
DataItem AB0DWMBY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// multiple factory style
DataItem AB0DWMFS num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working month
DataItem AB0DWMM1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working month
DataItem AB0DWMM3 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// message number
DataItem AB0DWMNO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// maximum array size
DataItem AB0DWMX3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// max. loaded into the array
DataItem AB0DWMX4 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// total next buy qty for style
DataItem AB0DWNBT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// no changes made
DataItem AB0DWNOU num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// next member in array
DataItem AB0DWNXT num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// Pop-up window processing ind
DataItem AB0DWPN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSN wk abrv
DataItem AB0DWSA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// style number from ab0q
DataItem AB0DWSDQ char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSN wk season cd
DataItem AB0DWSS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// size of aferec array
DataItem AB0DWSZ1 num(6)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// AB0D map array size
DataItem AB0DWSZM num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// TSQ record length
DataItem AB0DWSZQ num(6)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// array size of temp. record
DataItem AB0DWSZT num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// total running qty for this sty
DataItem AB0DWTRQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// total buy qty this style
DataItem AB0DWTTQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// style search indicator
DataItem AB0DWVSD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// saved index for this array
DataItem AB0DWWXS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// xsnyr work area
DataItem AB0DWXSY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XSN wk season yr
DataItem AB0DWYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working year
DataItem AB0DWYY1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working year
DataItem AB0DWYY2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working year
DataItem AB0DWYY3 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

