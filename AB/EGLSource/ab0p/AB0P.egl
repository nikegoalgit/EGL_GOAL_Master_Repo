package ab0p;
import ab.common.*;
import af.common.*;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import ku.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=AB0P ****
//  Pack Factor Maintenance process.
// 
//  DATE    USERID    COMMENT
// ------   ------    -----------------------------------------
// 11/95    KJ        New Application
// 12/97 nfield    Recompile for Y2K compliance
// *********************
Program AB0P type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AB0PW00 AB0PW00; // record
  AB0PW01 AB0PW01; // record
  AB0PW02 AB0PW02; // record
  AB0PW03 AB0PW03; // record
  AB2REC AB2REC; // record
  AB3REC AB3REC; // record
  AB4REC AB4REC; // record
  ABWREC ABWREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FY1REC FY1REC; // record
  FY4REC FY4REC; // record
  FY6REC FY6REC; // record
  PC2REC PC2REC; // record
  PC4REC PC4REC; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  SY4REC SY4REC; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VPKFTR01 VPKFTR01; // record
  XP1REC XP1REC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSETBL {deleteAfterUse = yes}; // table
  use AB0PM.AB0PM001,  // forms
      AB0PM.AB0PM002, 
      AB0PM.AB0PM003, 
      AB0PM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAB001: XPAB001();
    set AB0PW00 empty;
    set AB0PW01 empty;
    set AB0PW02 empty;
    set AB0PW03 empty;
    set ERRSQLCA empty;
    set XX0XW01 empty;
    set XX0XW02 empty;
    set ABWREC empty;
    set FY1REC empty;
    set FY4REC empty;
    set FY6REC empty;
    set PC2REC empty;
    set PC4REC empty;
    set PG2REC empty;
    set TAEREC empty;
    set TA1REC empty;
    set TA5REC empty;
    set AB0PM001 initial;
    set AB0PM002 initial;
    set AB0PM003 initial;

    ABWREC.ABWMAP = "1"; /* map number to process*/
    AB0PW00.AB0PW-PAGE-NUMBER = 1;

    AB0PM001.FY1FCTYC = XP1REC.FY1FCTYC;
    AB0PM001.AB0PM-SY-STY-NBR = XP1REC.SY1STNBR;

    XP1REC.FY1FCTYC = "*";
    XP1REC.SY1STNBR = "*";
    XP1REC.XGPCD = "03";

    ABWREC.ABWSWR = "N"; /* dont obtain data*/

    goto AB0P-0001; /* converse main process*/
    AB0P-0001: AB0P-0001();
    goto AB0P-0001;
  end // end main
end // end AB0P

// main process
Function AB0P-0001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display maps.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the first map.*/
      /* Otherwise, if specified, display the second map.*/
      /* Otherwise, if specified, display the third map.*/
      /* Otherwise, indicate error and exit to Master Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (ABWREC.ABWMAP == "1") /* Map 1 was requested*/
    ABWREC.XXXMAPNM = "AB0BM001"; /* Move map name to abwrec*/
    AB0P-1000(); /* process map 1*/
  else

    if (ABWREC.ABWMAP == "2") /* Map 2 was requested*/
      ABWREC.XXXMAPNM = "AB0BM002"; /* Move map name to abwrec*/
      AB0P-2000(); /* process map 2*/
    else

      if (ABWREC.ABWMAP == "3") /* Map 3 was requested*/
        ABWREC.XXXMAPNM = "AB0BM010"; /* Move map name to abwrec*/
        AB0P-3000(); /* Display map 3*/
      else
        TA1REC.TA1TYPE = "APPL"; /* Type of error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        ABWREC.ABWPRCSN = "001 "; /* Process number*/
        TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
        TA1REC.TA1LOC = "MAIN APPLICATION PROCESS";
        TA1REC.TA1MAP = ABWREC.ABWMAP; /* Map name*/
        SQLCA.SQLCAREC = "MAP NUMBER REQUESTED IS INVALID";
        call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
        XSPF4(); /* Exit to Master Menu*/
      end

    end

  end

end // end AB0P-0001

// process map 1 FCTY
Function AB0P-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* PROCESSING UNDER ERROR CONDITIONS.*/
   /* ------------------------------------------------------------*/

  AB0P-1100(); /* Obtain the data to display*/

  AB0P-1200(); /* Format and display the map*/

  AB0P-1300(); /* Check attention identifier*/

  AB0P-1400(); /* Reset fields to normal intensity*/

  AB0P-1500(); /* Verify the entered data*/

  AB0P-1600(); /* Process valid input request*/


end // end AB0P-1000

// Obtain data to display map 1
Function AB0P-1100()
   /* ------------------------------------------------------------*/
   /* If data was not requested, return to the previous process.*/
   /* At end of rows, close the selected set cursor,*/
   /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/

  if (ABWREC.ABWSWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* Or error has occured*/
    return; /* Return to previous process*/
  end

  set AB0PW01 empty;
  set AB0PW02 empty;
  set AB0PW03 empty;

  AB0PW00.AB0PW-PAGE-NUMBER = 1; /* start page*/
  AB0PW00.AB0PW-SCREEN-INDEX = 1; /* Screen index*/
  AB0PW00.AB0PW-FCTY-INDEX = 1;
  AB0PW00.AB0PW-EOC = "N";

  set VPKFTR01 empty;
  AB0P-1110(); /* declare pkftr cursor*/
  AB0P-1120(); /* fetch pkftr cursor*/

  while (AB0PW00.AB0PW-EOC == "N"
   && AB0PW-FCTY-INDEX <= 100)
    AB0P-1130(); /* save fcty data*/
    AB0P-1120(); /* fetch pkftr cursor*/
  end /* end while clause*/

  if (AB0PW00.AB0PW-EOC == "N"
   && AB0PW-FCTY-INDEX >= 10)
    ABWREC.XXXMSGNO = 70;
  end

  AB0P-1140(); /* close pkftr cursor*/
  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    ABWREC.ABWSWR = "N"; /* Request for data completed*/
  end

end // end AB0P-1100

// Decl Fcty PF Csr
Function AB0P-1110()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "3";
  VPKFTR01.FY1FCTYC = "*";
  VPKFTR01.SY-STY-NBR = "*";
  VPKFTR01.SY-SZ-ID = -1;


  try
    call "VPKFTR01" ("S1", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "1110"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
    TA1REC.TA1TBLKE = VPKFTR01.VPKFTR01-KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    AB0PM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Return to previous process*/

  end



end // end AB0P-1110

// Fetch Fcty PF Csr
Function AB0P-1120()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/

  set VPKFTR01 empty;

  try
    call "VPKFTR01" ("N1", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

    AB0PW00.AB0PW-EOC = "Y"; /* Indicate end of file*/

    return; /* Return to previous process*/

  end


  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "1120"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0PM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Return to previous process*/

  end

end // end AB0P-1120

// Save Fcty PK Ftr Data
Function AB0P-1130()

  AB0PW01.AB0PW-FY-FCTY-CD[AB0PW-FCTY-INDEX] = VPKFTR01.FY1FCTYC;

  if (VPKFTR01.FY1FCTYC > "  ") /* acces fcty table for description*/
    AB0PW00.AB0PW-CURR-FCTY = VPKFTR01.FY1FCTYC;
                                   /* Access Factory Code*/
    AB0P-S001(); /* Factory Abrv*/
    if (AB0PW00.AB0PW-VALID-FCTY == "Y")
      AB0PW01.AB0PW-FY-FCTY-DESC[AB0PW-FCTY-INDEX] = FY1REC.FY1FCTSN;
    else
      AB0PW01.AB0PW-FY-FCTY-DESC[AB0PW-FCTY-INDEX] = "INVALID FACTORY";
    end
  else
    AB0PW01.AB0PW-FY-FCTY-DESC[AB0PW-FCTY-INDEX] = "INVALID FACTORY";
  end

  AB0PW01.AB0PW-FCTY-DEFAULT[AB0PW-FCTY-INDEX] = VPKFTR01.SY-UNITS-PER-CASE;

  AB0PW01.ZZ-CHNG-CNT[AB0PW-FCTY-INDEX] = VPKFTR01.ZZ-CHNG-CNT;

  AB0PW01.AB0PW-DELETED-IND[AB0PW-FCTY-INDEX] = "N";

  AB0PW01.AB0PW-MAX-FCTY-LINES = AB0PW00.AB0PW-FCTY-INDEX;
  AB0PW00.AB0PW-FCTY-INDEX = AB0PW00.AB0PW-FCTY-INDEX + 1;

end // end AB0P-1130

// Close Fcty Cursor
Function AB0P-1140()
   /* close cursor*/
   /* ------------------------------------------------------------*/


  try
    call "VPKFTR01" ("C1", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "1140"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED CURSOR ";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0PM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Return to previous process*/

  end

end // end AB0P-1140

// format and display map 1
Function AB0P-1200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/


  if (converseVar.validationMsgNum == 0
   || ABWREC.ABWFIRST != "N") /* first time*/
    set AB0PM001 initial; /* Indicate sound alarm*/
    AB0P-1210(); /* format map*/
    ABWREC.ABWFIRST = "N";
  end

  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AB0PM001 alarm; /* Indicate sound alarm*/
    AB0P-1220(); /* format map for error*/
  end

  if (converseVar.validationMsgNum == 0)
    if (ABWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(ABWREC.XXXMSGNO);
    end
  end

  AB0PM001.XXXCURDT = VGVar.currentShortGregorianDate; /* date*/
  ABWREC.XXXMSGNO = 0;

  converseLib.clearScreen();

  converse AB0PM001 ;

end // end AB0P-1200

// format map 1 heading
Function AB0P-1210()
   /* -------------*/
   /* Format Map*/
   /* -------------*/

  AB0PM001.FY1FCTYC = AB0PW00.FY1FCTYC; /* Factory Code*/
  AB0PM001.FY1FCTNM = AB0PW00.FY1FCTNM; /* Factory Name*/
  AB0PM001.AB0PM-SY-STY-NBR = " ";
  AB0PM001.AB0PM-SY-STY-DESC = " ";

  AB0PW00.AB0PW-SCREEN-INDEX = 1;

  AB0PW00.AB0PW-FCTY-INDEX = ((AB0PW00.AB0PW-PAGE-NUMBER - 1) * 10)   + AB0PW00.AB0PW-SCREEN-INDEX;

  while (AB0PW00.AB0PW-SCREEN-INDEX <= 10)
    if (AB0PW01.AB0PW-FY-FCTY-CD[AB0PW-FCTY-INDEX] > "   ")
      AB0P-1211(); /* Move Fields*/
    else
      AB0P-1212(); /* Darken Fields*/
    end

    AB0PW00.AB0PW-SCREEN-INDEX = AB0PW00.AB0PW-SCREEN-INDEX + 1;
    AB0PW00.AB0PW-FCTY-INDEX = AB0PW00.AB0PW-FCTY-INDEX + 1;
  end

end // end AB0P-1210

// format map 1 detail lines
Function AB0P-1211()

   /* ------------------*/
   /* Format Map detail*/
   /* ------------------*/

  AB0PM001.AB0PM-FY-FCTY-CD[AB0PW-SCREEN-INDEX] = AB0PW01.AB0PW-FY-FCTY-CD[AB0PW-FCTY-INDEX];
  AB0PM001.AB0PM-FY-FCTY-DESC[AB0PW-SCREEN-INDEX] = AB0PW01.AB0PW-FY-FCTY-DESC[AB0PW-FCTY-INDEX];
  AB0PM001.AB0PM-FCTY-DEFAULT[AB0PW-SCREEN-INDEX] = AB0PW01.AB0PW-FCTY-DEFAULT[AB0PW-FCTY-INDEX];
  if (AB0PW01.AB0PW-FY-FCTY-CD[AB0PW-FCTY-INDEX] == "****")
    set AB0PM001.AB0PM-FCTY-DEFAULT[AB0PW-SCREEN-INDEX] skip;
  end
end // end AB0P-1211

// darken map 1 detail lines
Function AB0P-1212()
   /* ------------------*/
   /* darken Map detail*/
   /* ------------------*/

  set AB0PM001.AB0PM-FY-FCTY-CD[AB0PW-SCREEN-INDEX] skip, invisible;
  set AB0PM001.AB0PM-FY-FCTY-DESC[AB0PW-SCREEN-INDEX] skip, invisible;
  set AB0PM001.AB0PM-FCTY-DEFAULT[AB0PW-SCREEN-INDEX] skip, invisible;

end // end AB0P-1212

// set map for error
Function AB0P-1220()

  AB0PW00.AB0PW-SCREEN-INDEX = 1;

  AB0PW00.AB0PW-FCTY-INDEX = ((AB0PW00.AB0PW-PAGE-NUMBER - 1) * 10)   + AB0PW00.AB0PW-SCREEN-INDEX;

  while (AB0PW00.AB0PW-SCREEN-INDEX <= 10)
    if (AB0PW01.AB0PW-FY-FCTY-CD[AB0PW-FCTY-INDEX] <= " ")
      AB0P-1212(); /* Darken Fields*/
    end

    AB0PW00.AB0PW-SCREEN-INDEX = AB0PW00.AB0PW-SCREEN-INDEX + 1;
    AB0PW00.AB0PW-FCTY-INDEX = AB0PW00.AB0PW-FCTY-INDEX + 1;
  end

end // end AB0P-1220

// check attention identifier
Function AB0P-1300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set AB0PM001 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (AB0PM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = AB0PM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = AB0PM001.CAITEM; /* Application data*/
      XSABS01(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    set AB0PM001.CATOAP cursor, modified, bold; /* Highlight*/
    AB0PM001.XXXMODID = "1300"; /* Process number*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "AB0PM001"; /* Appl find code*/
    end
    XSABS01(); /* Exit to another application*/
    AB0PM001.XXXMODID = "1300"; /* Process number*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "AB0F";
    XSABS01(); /* Exit to another application*/
  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* scroll forward*/
   && converseVar.eventKey not pf8)  /* scroll backward*/
    AB0PM001.XXXMODID = "1300"; /* Process number*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    exit stack; /* Exit to redisplay map*/
  end

end // end AB0P-1300

// reset highlighted fields
Function AB0P-1400()

  set AB0PM001.FY1FCTYC initialAttributes;
  set AB0PM001.FY1FCTNM initialAttributes;
  set AB0PM001.AB0PM-SY-STY-NBR initialAttributes;
  set AB0PM001.AB0PM-SY-STY-DESC initialAttributes;

  ABWREC.ABWIXM = 1; /* first screen line*/

  while (ABWREC.ABWIXM <= 10) /* for each screen line*/
    set AB0PM001.AB0PM-FY-FCTY-CD[ABWIXM] initialAttributes;
    set AB0PM001.AB0PM-FY-FCTY-DESC[ABWIXM] initialAttributes;
    set AB0PM001.AB0PM-FCTY-DEFAULT[ABWIXM] initialAttributes;
    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* next screen line*/
  end

end // end AB0P-1400

// validate entered data
Function AB0P-1500()

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    AB0P-1510(); /* validate pf keys*/
  else

    AB0PW00.AB0PW-KEY-CHANGE = "N"; /* key changed*/

    if (AB0PM001.FY1FCTYC != XP1REC.FY1FCTYC
     || AB0PM001.AB0PM-SY-STY-NBR != XP1REC.SY1STNBR)
      AB0PW00.AB0PW-KEY-CHANGE = "Y"; /* key changed*/
      AB0P-1520(); /* validate new key*/

    else
      AB0P-1530(); /* validate line data*/
    end
  end

  if (converseVar.validationMsgNum > 0)
    exit stack;
  end

end // end AB0P-1500

// validate pf keys
Function AB0P-1510()
  if (converseVar.eventKey is pf8) /* scroll forward request*/

    AB0PW00.AB0PW-FCTY-INDEX = (AB0PW00.AB0PW-PAGE-NUMBER * 10) + 1;

    if (AB0PW00.AB0PW-FCTY-INDEX <= AB0PW01.AB0PW-MAX-FCTY-LINES)
      return;
    else
      converseLib.validationFailed(3); /* no more scrolling*/
      AB0PM001.XXXMODID = "1510"; /* process number*/
      exit stack; /* return to flow*/
    end

  else

    if (converseVar.eventKey is pf7) /* scroll backward request*/

      if (AB0PW00.AB0PW-PAGE-NUMBER <= 1) /* already on first page*/
        converseLib.validationFailed(2); /* top of data already*/
        AB0PM001.XXXMODID = "1510"; /* process number*/
        exit stack; /* return to flow*/
      else
        return;
      end

    end
  end

end // end AB0P-1510

// check if key or data changed
Function AB0P-1520()

  if (AB0PM001.AB0PM-SY-STY-NBR != XP1REC.SY1STNBR)
    if (AB0PM001.AB0PM-SY-STY-NBR != "  ")
      AB0PW00.AB0PW-CURR-STYLE = AB0PM001.AB0PM-SY-STY-NBR;
      AB0P-S002(); /* select style cursor*/
      AB0P-S003(); /* sleect style*/
      AB0P-S004(); /* close style*/
      if (AB0PW00.AB0PW-VALID-STYLE == "Y")
        AB0PW00.SY-STY-NBR = PG2REC.SY1STNBR;
        XP1REC.SY1STNBR = PG2REC.SY1STNBR;
        AB0PW00.SY1SSTNM = PG2REC.SY1SSTNM;
      else
        set AB0PM001.AB0PM-SY-STY-NBR cursor, bold; /* Highlight*/
        AB0PM001.AB0PM-SY-STY-DESC = " ";
        converseLib.validationFailed(41); /* Indicate error message*/
        AB0PM001.XXXMODID = "1520"; /* Process number*/
      end
    else
      AB0PW00.SY-STY-NBR = " ";
      AB0PW00.SY1SSTNM = " ";
      XP1REC.SY1STNBR = " ";
    end
  end

  if (AB0PM001.FY1FCTYC != XP1REC.FY1FCTYC)

    if (AB0PM001.FY1FCTYC != " ")
      AB0PW00.AB0PW-CURR-FCTY = AB0PM001.FY1FCTYC;
                                   /* Access Factory Code*/
      AB0P-S001(); /* Factory Abrv*/
      if (AB0PW00.AB0PW-VALID-FCTY == "Y")
        AB0PW00.FY1FCTNM = FY1REC.FY1FCTNM;
        XP1REC.FY1FCTYC = FY1REC.FY1FCTYC;
        AB0PW00.FY1FCTYC = FY1REC.FY1FCTYC;
      else
        set AB0PM001.FY1FCTYC cursor, bold; /* Highlight field*/
        AB0PM001.FY1FCTNM = " "; /* space screen description*/
        converseLib.validationFailed(41); /* Indicate error message*/
        AB0PM001.XXXMODID = "1520"; /* Process number*/
      end
    else
      AB0PW00.FY1FCTNM = " ";
      XP1REC.FY1FCTYC = " ";
      AB0PW00.FY1FCTYC = " ";
    end

  end

  if (converseVar.validationMsgNum == 0) /* no error occurred*/
    AB0P-S005();
  end
end // end AB0P-1520

// validate line Data
Function AB0P-1530()

  AB0PW00.AB0PW-DATA-CHANGE = "N";
  AB0PW00.AB0PW-SCREEN-INDEX = 1;

  AB0PW00.AB0PW-FCTY-INDEX = ((AB0PW00.AB0PW-PAGE-NUMBER - 1) * 10)   + AB0PW00.AB0PW-SCREEN-INDEX;

  while (AB0PW00.AB0PW-SCREEN-INDEX <= 10)
    AB0PW01.AB0PW-DELETED-IND[AB0PW-FCTY-INDEX] = "N";
    AB0PW01.AB0PW-ROW-UPDATED[AB0PW-FCTY-INDEX] = "N";
    if (AB0PM001.AB0PM-FCTY-DEFAULT[AB0PW-SCREEN-INDEX] != 
    AB0PW01.AB0PW-FCTY-DEFAULT[AB0PW-FCTY-INDEX])
      AB0PW01.AB0PW-NEW-DEFAULT[AB0PW-FCTY-INDEX] = AB0PM001.AB0PM-FCTY-DEFAULT[AB0PW-SCREEN-INDEX];
      if (AB0PW01.AB0PW-NEW-DEFAULT[AB0PW-FCTY-INDEX] == 0)
        AB0PW01.AB0PW-DELETED-IND[AB0PW-FCTY-INDEX] = "Y";
      end
      AB0PW01.AB0PW-ROW-UPDATED[AB0PW-FCTY-INDEX] = "Y";
      AB0PW00.AB0PW-DATA-CHANGE = "Y";
    end
    AB0PW00.AB0PW-SCREEN-INDEX = AB0PW00.AB0PW-SCREEN-INDEX + 1;
    AB0PW00.AB0PW-FCTY-INDEX = AB0PW00.AB0PW-FCTY-INDEX + 1;
  end

end // end AB0P-1530

// process valid request
Function AB0P-1600()
  if (converseVar.eventKey is pf7) /* scroll backward request*/
    AB0PW00.AB0PW-PAGE-NUMBER = AB0PW00.AB0PW-PAGE-NUMBER - 1; /* prev page*/
    ABWREC.ABWSWR = "N"; /* dont get data*/
    ABWREC.ABWIXM = 1;
    return;
  end

  if (converseVar.eventKey is pf8) /* scroll forward*/
    AB0PW00.AB0PW-PAGE-NUMBER = AB0PW00.AB0PW-PAGE-NUMBER + 1; /* NEXT page*/
    ABWREC.ABWSWR = "N"; /* dont get data*/
    ABWREC.ABWIXM = 1;
    return; /* return to calling process*/
  end

  if (converseVar.eventKey is pf13) /* display map 2*/
    AB0PW00.AB0PW-PF-DELETE = "Y"; /* format map*/
    ABWREC.ABWSWR = "N"; /* dont get data*/
    return;
  end

  if (AB0PW00.AB0PW-KEY-CHANGE == "Y") /* key changed*/
    ABWREC.ABWSWR = "Y"; /* request data*/
    ABWREC.ABWIXM = 1;
    return;
  end

  if (AB0PW00.AB0PW-DATA-CHANGE == "N") /* data didnt change*/
    ABWREC.ABWSWR = "N"; /* aint nothin happened*/
    return; /* dont do nothin (just refmt map)*/
  end

   /* ------------------------------------------------------------*/
   /* this is now the update pass.  The program only gets here if*/
   /* data was changed & the data bases need updating*/
   /* ------------------------------------------------------------*/

  XX0XS01(); /* get date and time*/

  AB0PW00.AB0PW-SCREEN-INDEX = 1;

  AB0PW00.AB0PW-FCTY-INDEX = ((AB0PW00.AB0PW-PAGE-NUMBER - 1) * 10)   + AB0PW00.AB0PW-SCREEN-INDEX;

  while (AB0PW00.AB0PW-SCREEN-INDEX <= 10)
    AB0PW-UPDATE-SUCCESSFUL = "N";
    if (AB0PW01.AB0PW-DELETED-IND[AB0PW-FCTY-INDEX] == "Y")
      AB0P-1610(); /* delete fcty record*/
    else
      if (AB0PW01.AB0PW-ROW-UPDATED[AB0PW-FCTY-INDEX] == "Y")
        AB0PW01.AB0PW-ROW-UPDATED[AB0PW-FCTY-INDEX] = "N";
        AB0P-1620(); /* update fcty defaults*/
        if (AB0PW-UPDATE-SUCCESSFUL == "Y")
          AB0PW01.AB0PW-FCTY-DEFAULT[AB0PW-FCTY-INDEX] = AB0PW01.AB0PW-NEW-DEFAULT[AB0PW-FCTY-INDEX];
          AB0PW01.AB0PW-NEW-DEFAULT[AB0PW-FCTY-INDEX] = 0;
          ABWREC.XXXMSGNO = 45;
        else
          set AB0PM001.AB0PM-FY-FCTY-CD[AB0PW-SCREEN-INDEX] bold;
          set AB0PM001.AB0PM-FCTY-DEFAULT[AB0PW-SCREEN-INDEX] cursor, bold;
          converseLib.validationFailed(13);
          exit stack;
        end
      end
    end
    AB0PW00.AB0PW-SCREEN-INDEX = AB0PW00.AB0PW-SCREEN-INDEX + 1;
    AB0PW00.AB0PW-FCTY-INDEX = AB0PW00.AB0PW-FCTY-INDEX + 1;
  end
end // end AB0P-1600

// Delete factory Row
Function AB0P-1610()
   /* ------------------------------------------------------------*/
   /* Delete the pack factor row*/
   /* ------------------------------------------------------------*/

  set VPKFTR01 empty;
  VPKFTR01.FY1FCTYC = AB0PW01.AB0PW-FY-FCTY-CD[AB0PW-FCTY-INDEX];
  VPKFTR01.ZZ-CHNG-CNT = AB0PW01.ZZ-CHNG-CNT[AB0PW-FCTY-INDEX];
  VPKFTR01.AB-TRN-TYP-CD = "3";

  try
    call "VPKFTR01" ("D ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* delete table*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0 /* no sql errors*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      AB0PW01.AB0PW-FY-FCTY-CD[AB0PW-FCTY-INDEX] = "****";
      AB0PW01.AB0PW-FY-FCTY-DESC[AB0PW-FCTY-INDEX] = "DELETED FACTORY";
      AB0PW01.AB0PW-FCTY-DEFAULT[AB0PW-FCTY-INDEX] = 0;

      AB0PM001.AB0PM-FY-FCTY-CD[AB0PW-SCREEN-INDEX] = "****";
      AB0PM001.AB0PM-FY-FCTY-DESC[AB0PW-SCREEN-INDEX] = "DELETED FACTORY";
      AB0PM001.AB0PM-FCTY-DEFAULT[AB0PW-SCREEN-INDEX] = 0;
      return;
    end
  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* post error and continue process*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* roll back any changes*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM001.XXXMODID = "1610"; /* Process number*/
  TA1REC.TA1PGMNM = "1610"; /* Error location*/
  TA1REC.TA1LOC = "DELETE A ABSTY ROW";
  TA1REC.TA1MAP = "AB0PM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPKFTR01.VPKFTR01-KEY; /* Table key*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* redisplay map*/

end // end AB0P-1610

// process line data
Function AB0P-1620()
   /* *************************************************************/
   /* *****  U P D A T E     D A C A S T . V P K F T R 0 1   ******/
   /* *****                                                  ******/
   /* ***** This statement group will update a row in the    ******/
   /* ***** DB2 table DABUY.VBPLAN01.                        ******/
   /* *************************************************************/

  VPKFTR01.FY1FCTYC = AB0PW01.AB0PW-FY-FCTY-CD[AB0PW-FCTY-INDEX];
  VPKFTR01.SY-UNITS-PER-CASE = AB0PW01.AB0PW-NEW-DEFAULT[AB0PW-FCTY-INDEX];
  VPKFTR01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* change date*/
  VPKFTR01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* change time*/
  VPKFTR01.ZZ-CHNG-CNT = AB0PW01.ZZ-CHNG-CNT[AB0PW-FCTY-INDEX];
  VPKFTR01.AB-TRN-TYP-CD = "3";

  try
    call "VPKFTR01" ("U ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* update row*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0 /* no sql errors*/
     || SQLCA.VAGen_SQLCODE == 100) /* no sql errors*/
      if (SQLCA.VAGen_SQLCODE == 0)
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "Y";
      else
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "N";
      end
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM001.XXXMODID = "1620"; /* Process number*/
  AB0PM002.XXXMODID = "1620"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-1620"; /* Error location*/
  TA1REC.TA1LOC = "UPDATE DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/

end // end AB0P-1620

// process map 2 FCTY/STYLE
Function AB0P-2000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* PROCESSING UNDER ERROR CONDITIONS.*/
   /* ------------------------------------------------------------*/

  AB0P-2100(); /* obtain data to display*/

  AB0P-2200(); /* Format and display the map*/

  AB0P-2300(); /* Check attention identifier*/

  AB0P-2400(); /* Reset fields to normal intensity*/

  AB0P-2500(); /* Verify the entered data*/

  AB0P-2600(); /* Process valid input request*/


end // end AB0P-2000

// Obtain Data to Display - Map 2
Function AB0P-2100()
   /* ------------------------------------------------------------*/
   /* If data was not requested, return to the previous process.*/
   /* At end of rows, close the selected set cursor,*/
   /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/

  if (ABWREC.ABWSWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* Or error has occured*/
    return; /* Return to previous process*/
  end

  set AB0PW01 empty;
  set AB0PW02 empty;
  set AB0PW03 empty;

  AB0PW00.AB0PW-PAGE-NUMBER = 1; /* start page*/
  AB0PW00.AB0PW-SCREEN-INDEX = 1; /* Screen index*/
  AB0PW00.AB0PW-STYLE-INDEX = 1;
  AB0PW00.AB0PW-EOC = "N";

  set VPKFTR01 empty;
  AB0P-2110(); /* declare pkftr cursor*/
  AB0P-2120(); /* fetch pkftr cursor*/

  while (AB0PW00.AB0PW-EOC == "N"
   && AB0PW-STYLE-INDEX <= 100)
    AB0P-2130(); /* save style data*/
    AB0P-2120(); /* fetch pkftr cursor*/
  end /* end while clause*/

  if (AB0PW00.AB0PW-EOC == "N"
   && AB0PW-STYLE-INDEX > 100)
    ABWREC.XXXMSGNO = 70;
  end /* end while clause*/

  AB0P-2140(); /* close style cursor*/

  AB0P-2150(); /* save fcty data*/

  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    ABWREC.ABWSWR = "N"; /* Request for data completed*/
  end


end // end AB0P-2100

// Declare pk ftr csr 2
Function AB0P-2110()

   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "2";

  if (AB0PW00.FY1FCTYC == "ALL")
    VPKFTR01.FY1FCTYC = "*";
  else
    VPKFTR01.FY1FCTYC = AB0PW00.FY1FCTYC;
  end

  if (AB0PW00.SY-STY-NBR != " ")
    VPKFTR01.SY-STY-NBR = AB0PW00.SY-STY-NBR;
  else
    VPKFTR01.SY-STY-NBR = "*";
  end

  VPKFTR01.SY-SZ-ID = 0;


  try
    call "VPKFTR01" ("S1", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "2110"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
    TA1REC.TA1TBLKE = VPKFTR01.VPKFTR01-KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    AB0PM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Return to previous process*/

  end

end // end AB0P-2110

// Select Nxt Style
Function AB0P-2120()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/

  set VPKFTR01 empty;

  try
    call "VPKFTR01" ("N1", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

    AB0PW00.AB0PW-EOC = "Y"; /* Indicate end of file*/

    return; /* Return to previous process*/

  end


  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "2120"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0PM002.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Return to previous process*/

  end

end // end AB0P-2120

// Save Style Data
Function AB0P-2130()

  AB0PW02.SY-STY-NBR[AB0PW-STYLE-INDEX] = VPKFTR01.SY-STY-NBR;

  if (VPKFTR01.SY-STY-NBR > "  ") /* get style descrption*/
    AB0PW00.AB0PW-CURR-STYLE = VPKFTR01.SY-STY-NBR;
    AB0P-S002(); /* select style cursor*/
    AB0P-S003(); /* sleect style*/
    AB0P-S004(); /* close style*/
    if (AB0PW00.AB0PW-VALID-STYLE == "Y")
      AB0PW02.SY1SSTNM[AB0PW-STYLE-INDEX] = PG2REC.SY1SSTNM;
    else
      AB0PW02.SY1SSTNM[AB0PW-STYLE-INDEX] = "INVALID STYLE";
    end
  end

  AB0PW02.AB0PW-STYLE-DEFAULT[AB0PW-STYLE-INDEX] = VPKFTR01.SY-UNITS-PER-CASE;

  AB0PW02.ZZ-CHNG-CNT[AB0PW-STYLE-INDEX] = VPKFTR01.ZZ-CHNG-CNT;

  AB0PW02.AB0PW-DELETED-IND[AB0PW-STYLE-INDEX] = "N";

  AB0PW02.AB0PW-LINE-FCTY-CD[AB0PW-STYLE-INDEX] = VPKFTR01.FY1FCTYC;

  AB0PW02.AB0PW-MAX-STYLE-LINES = AB0PW00.AB0PW-STYLE-INDEX;
  AB0PW00.AB0PW-STYLE-INDEX = AB0PW00.AB0PW-STYLE-INDEX + 1;

end // end AB0P-2130

// close csr
Function AB0P-2140()
   /* close cursor*/
   /* ------------------------------------------------------------*/


  try
    call "VPKFTR01" ("C1", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "2140"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED CURSOR ";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0PM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Return to previous process*/

  end

end // end AB0P-2140

// Get Fcty information
Function AB0P-2150()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "3";
  VPKFTR01.FY1FCTYC = AB0PW00.FY1FCTYC;
  VPKFTR01.SY-STY-NBR = " ";
  VPKFTR01.SY-SZ-ID = 0;


  try
    call "VPKFTR01" ("S ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table*/


  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)

    AB0PW02.AB0PW-FY-FCTY-CD = AB0PW00.FY1FCTYC;
    if (SQLCA.VAGen_SQLCODE == 0)
      AB0PW02.AB0PW-FCTY-DEFAULT = VPKFTR01.SY-UNITS-PER-CASE;
    end

    return; /* Return to previous process*/

  end

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "2140"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0PM002.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Return to previous process*/

  end


end // end AB0P-2150

// format and display map 2
Function AB0P-2200()

   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/


  if (converseVar.validationMsgNum == 0
   || ABWREC.ABWFIRST == "Y") /* map to be formatted*/
    set AB0PM002 initial;
    AB0P-2210(); /* format map*/
    ABWREC.ABWFIRST = "N";
  end

  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AB0PM002 alarm; /* Indicate sound alarm*/
    AB0P-2220(); /* format map*/
  end

  if (converseVar.validationMsgNum == 0)
    if (ABWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(ABWREC.XXXMSGNO);
    end
  end

  ABWREC.XXXMSGNO = 0;
  AB0PM002.XXXCURDT = VGVar.currentShortGregorianDate; /* date*/

  converseLib.clearScreen();


  converse AB0PM002 ;
end // end AB0P-2200

// format map 2 heading
Function AB0P-2210()
   /* -------------*/
   /* Format Map*/
   /* -------------*/

  AB0PM002.FY1FCTYC = AB0PW00.FY1FCTYC; /* Factory Code*/
  AB0PM002.FY1FCTNM = AB0PW00.FY1FCTNM; /* Factory Short Name*/
  AB0PM002.AB0PM-SELECT-STY-NBR = AB0PW00.SY-STY-NBR;
  AB0PM002.AB0PM-SELECT-STY-DESC = AB0PW00.SY1SSTNM;

  AB0PW00.AB0PW-SCREEN-INDEX = 1;

  AB0PW00.AB0PW-STYLE-INDEX = ((AB0PW00.AB0PW-PAGE-NUMBER - 1) * 10)   + AB0PW00.AB0PW-SCREEN-INDEX;

  if (AB0PW00.FY1FCTYC == "ALL")
    set AB0PM002.AB0PM-FCTY-FIELD initialAttributes;
    set AB0PM002.AB0PM-FY-FCTY-DEFAULT skip, invisible;
  else
    set AB0PM002.AB0PM-FCTY-FIELD skip, invisible;
    AB0PM002.AB0PM-FY-FCTY-CD = AB0PW02.AB0PW-FY-FCTY-CD;
    AB0PM002.AB0PM-FY-FCTY-DEFAULT = AB0PW02.AB0PW-FCTY-DEFAULT;
  end


  while (AB0PW00.AB0PW-SCREEN-INDEX <= 10)
    if (AB0PW02.SY-STY-NBR[AB0PW-STYLE-INDEX] > "    ")
      AB0P-2211(); /* Move Fields*/
    else
      AB0P-2212(); /* Darken Fields*/
    end

    AB0PW00.AB0PW-SCREEN-INDEX = AB0PW00.AB0PW-SCREEN-INDEX + 1;
    AB0PW00.AB0PW-STYLE-INDEX = AB0PW00.AB0PW-STYLE-INDEX + 1;
  end

end // end AB0P-2210

// Format map 2 detail
Function AB0P-2211()
   /* ------------------*/
   /* Format Map detail*/
   /* ------------------*/

  AB0PM002.AB0PM-SY-STY-NBR[AB0PW-SCREEN-INDEX] = AB0PW02.SY-STY-NBR[AB0PW-STYLE-INDEX];
  AB0PM002.AB0PM-SY-STY-DESC[AB0PW-SCREEN-INDEX] = AB0PW02.SY1SSTNM[AB0PW-STYLE-INDEX];
  AB0PM002.AB0PM-STYLE-DEFAULT[AB0PW-SCREEN-INDEX] = AB0PW02.AB0PW-STYLE-DEFAULT[AB0PW-STYLE-INDEX];
  if (AB0PW00.FY1FCTYC == "ALL")
    AB0PM002.AB0PM-FCTY-CD[AB0PW-SCREEN-INDEX] = AB0PW02.AB0PW-LINE-FCTY-CD[AB0PW-STYLE-INDEX];
  end

  if (AB0PW02.SY-STY-NBR[AB0PW-STYLE-INDEX] == "****")
    set AB0PM002.AB0PM-STYLE-DEFAULT[AB0PW-SCREEN-INDEX] skip;
  end
end // end AB0P-2211

// darken map 2 detail
Function AB0P-2212()
   /* ------------------*/
   /* darken Map detail*/
   /* ------------------*/

  set AB0PM002.AB0PM-SY-STY-NBR[AB0PW-SCREEN-INDEX] skip, invisible;
  set AB0PM002.AB0PM-SY-STY-DESC[AB0PW-SCREEN-INDEX] skip, invisible;
  set AB0PM002.AB0PM-STYLE-DEFAULT[AB0PW-SCREEN-INDEX] skip, invisible;
  set AB0PM002.AB0PM-FCTY-CD[AB0PW-SCREEN-INDEX] skip, invisible;

end // end AB0P-2212

// Set Map for Error
Function AB0P-2220()

  AB0PW00.AB0PW-SCREEN-INDEX = 1;

  AB0PW00.AB0PW-STYLE-INDEX = ((AB0PW00.AB0PW-PAGE-NUMBER - 1) * 10)   + AB0PW00.AB0PW-SCREEN-INDEX;

  if (AB0PW00.FY1FCTYC != "ALL")
    set AB0PM002.AB0PM-FCTY-FIELD skip, invisible;
  end

  while (AB0PW00.AB0PW-SCREEN-INDEX <= 10)
    if (AB0PW02.SY-STY-NBR[AB0PW-STYLE-INDEX] <= " ")
      AB0P-2212(); /* Darken Fields*/
    end

    AB0PW00.AB0PW-SCREEN-INDEX = AB0PW00.AB0PW-SCREEN-INDEX + 1;
    AB0PW00.AB0PW-STYLE-INDEX = AB0PW00.AB0PW-STYLE-INDEX + 1;
  end

end // end AB0P-2220

// check attention identifier
Function AB0P-2300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set AB0PM002 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (AB0PM002.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = AB0PM002.CATOAP; /* TO application*/
      COMMAREA.CAITEM = AB0PM002.CAITEM; /* Application data*/
      XSABS01(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    set AB0PM002.CATOAP cursor, modified, bold; /* Highlight*/
    AB0PM002.XXXMODID = "2300"; /* Process number*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "AB0PM002"; /* Appl find code*/
    end
    XSABS01(); /* Exit to another application*/
    AB0PM002.XXXMODID = "2300"; /* Process number*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "AB0F";
    XSABS01(); /* Exit to another application*/
  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* scroll forward*/
   && converseVar.eventKey not pf8)  /* scroll backward*/
    AB0PM002.XXXMODID = "2300"; /* Process number*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    exit stack; /* Exit to redisplay map*/
  end

end // end AB0P-2300

// reset highlighted fields
Function AB0P-2400()

  set AB0PM002.FY1FCTYC initialAttributes;
  set AB0PM002.FY1FCTNM initialAttributes;
  set AB0PM002.AB0PM-SY-STY-NBR initialAttributes;
  set AB0PM002.AB0PM-SY-STY-DESC initialAttributes;

  set AB0PM002.AB0PM-FCTY-FIELD initialAttributes;

  ABWREC.ABWIXM = 1; /* first screen line*/

  while (ABWREC.ABWIXM <= 10) /* for each screen line*/
    set AB0PM002.AB0PM-FCTY-CD[ABWIXM] initialAttributes;
    set AB0PM002.AB0PM-SY-STY-NBR[ABWIXM] initialAttributes;
    set AB0PM002.AB0PM-SY-STY-DESC[ABWIXM] initialAttributes;
    set AB0PM002.AB0PM-STYLE-DEFAULT[ABWIXM] initialAttributes;
    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* next screen line*/
  end

end // end AB0P-2400

// validate entered data
Function AB0P-2500()

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    AB0P-2510(); /* validate pf keys*/
  else
    AB0PW00.AB0PW-KEY-CHANGE = "N"; /* key changed*/

    if (AB0PM002.FY1FCTYC != XP1REC.FY1FCTYC
     || AB0PM002.AB0PM-SELECT-STY-NBR != XP1REC.SY1STNBR)
      AB0PW00.AB0PW-KEY-CHANGE = "Y"; /* key changed*/
      AB0P-2520(); /* validate new key*/

    else
      AB0P-2530(); /* validate line data*/
    end
  end

  if (converseVar.validationMsgNum > 0)
    exit stack;
  end

end // end AB0P-2500

// Validate Scroll Keys
Function AB0P-2510()
  if (converseVar.eventKey is pf8) /* scroll forward request*/

    AB0PW00.AB0PW-STYLE-INDEX = (AB0PW00.AB0PW-PAGE-NUMBER * 10) + 1;

    if (AB0PW00.AB0PW-STYLE-INDEX <= AB0PW02.AB0PW-MAX-STYLE-LINES)
      return;
    else
      converseLib.validationFailed(3); /* no more scrolling*/
      AB0PM002.XXXMODID = "2510"; /* process number*/
      exit stack; /* return to flow*/
    end

  else

    if (converseVar.eventKey is pf7) /* scroll backward request*/

      if (AB0PW00.AB0PW-PAGE-NUMBER <= 1) /* already on first page*/
        converseLib.validationFailed(2); /* top of data already*/
        AB0PM002.XXXMODID = "2510"; /* process number*/
        exit stack; /* return to flow*/
      else
        return;
      end

    end
  end

end // end AB0P-2510

// Validate Key Fields
Function AB0P-2520()

  if (AB0PM002.AB0PM-SELECT-STY-NBR != XP1REC.SY1STNBR)
    if (AB0PM002.AB0PM-SELECT-STY-NBR != "  ")
      AB0PW00.AB0PW-CURR-STYLE = AB0PM002.AB0PM-SELECT-STY-NBR;
      AB0P-S002(); /* select style cursor*/
      AB0P-S003(); /* sleect style*/
      AB0P-S004(); /* close style*/
      if (AB0PW00.AB0PW-VALID-STYLE == "Y")
        AB0PW00.SY-STY-NBR = PG2REC.SY1STNBR;
        XP1REC.SY1STNBR = PG2REC.SY1STNBR;
        AB0PW00.SY1SSTNM = PG2REC.SY1SSTNM;
      else
        set AB0PM002.AB0PM-SELECT-STY-NBR cursor, bold; /* Highlight*/
        AB0PM002.AB0PM-SELECT-STY-DESC = " ";
        converseLib.validationFailed(41); /* Indicate error message*/
        AB0PM002.XXXMODID = "2520"; /* Process number*/
      end
    else
      XP1REC.SY1STNBR = " ";
      AB0PW00.SY-STY-NBR = " ";
      AB0PW00.SY1SSTNM = " ";
    end
  end

  if (AB0PM002.FY1FCTYC != XP1REC.FY1FCTYC)

    if (AB0PM002.FY1FCTYC != " ")
      AB0PW00.AB0PW-CURR-FCTY = AB0PM002.FY1FCTYC;
                                   /* Access Factory Code*/
      AB0P-S001(); /* Factory Abrv*/
      if (AB0PW00.AB0PW-VALID-FCTY == "Y")
        XP1REC.FY1FCTYC = FY1REC.FY1FCTYC;
        AB0PW00.FY1FCTNM = FY1REC.FY1FCTNM;
        AB0PW00.FY1FCTYC = FY1REC.FY1FCTYC;
      else
        set AB0PM002.FY1FCTYC cursor, bold; /* Highlight field*/
        AB0PM002.FY1FCTNM = " "; /* space screen description*/
        converseLib.validationFailed(41); /* Indicate error message*/
        AB0PM002.XXXMODID = "2520"; /* Process number*/
      end
    else
      XP1REC.FY1FCTYC = " ";
      AB0PW00.FY1FCTNM = " ";
      AB0PW00.FY1FCTYC = " ";
    end

  end

  if (converseVar.validationMsgNum == 0) /* no error occurred*/
    AB0P-S005();
  end

end // end AB0P-2520

// Validate Detail Data
Function AB0P-2530()

  AB0PW00.AB0PW-DATA-CHANGE = "N";
  AB0PW00.AB0PW-SCREEN-INDEX = 1;

  AB0PW00.AB0PW-STYLE-INDEX = ((AB0PW00.AB0PW-PAGE-NUMBER - 1) * 10)   + AB0PW00.AB0PW-SCREEN-INDEX;

  while (AB0PW00.AB0PW-SCREEN-INDEX <= 10)
    AB0PW02.AB0PW-DELETED-IND[AB0PW-STYLE-INDEX] = "N";
    AB0PW02.AB0PW-ROW-UPDATED[AB0PW-STYLE-INDEX] = "N";
    if (AB0PM002.AB0PM-STYLE-DEFAULT[AB0PW-SCREEN-INDEX] != 
    AB0PW02.AB0PW-STYLE-DEFAULT[AB0PW-STYLE-INDEX])
      AB0PW02.AB0PW-NEW-STYLE-DFLT[AB0PW-STYLE-INDEX] = AB0PM002.AB0PM-STYLE-DEFAULT[AB0PW-SCREEN-INDEX];
      if (AB0PW02.AB0PW-NEW-STYLE-DFLT[AB0PW-STYLE-INDEX] == 0)
        AB0PW02.AB0PW-DELETED-IND[AB0PW-STYLE-INDEX] = "Y";
      end
      AB0PW02.AB0PW-ROW-UPDATED[AB0PW-STYLE-INDEX] = "Y";
      AB0PW00.AB0PW-DATA-CHANGE = "Y";
    end
    AB0PW00.AB0PW-SCREEN-INDEX = AB0PW00.AB0PW-SCREEN-INDEX + 1;
    AB0PW00.AB0PW-STYLE-INDEX = AB0PW00.AB0PW-STYLE-INDEX + 1;
  end

  if (AB0PM002.AB0PM-FY-FCTY-DEFAULT != AB0PW02.AB0PW-FCTY-DEFAULT)
    AB0PW02.AB0PW-NEW-FCTY-DFLT = AB0PM002.AB0PM-FY-FCTY-DEFAULT;
    AB0PW02.AB0PW-FCTY-UPDATED = "Y";
    AB0PW00.AB0PW-DATA-CHANGE = "Y";
  end

end // end AB0P-2530

// process valid request
Function AB0P-2600()

  if (converseVar.eventKey is pf7) /* scroll backward request*/
    AB0PW00.AB0PW-PAGE-NUMBER = AB0PW00.AB0PW-PAGE-NUMBER - 1; /* prev page*/
    ABWREC.ABWSWR = "N"; /* dont get data*/
    ABWREC.ABWIXM = 1;
    return;
  end

  if (converseVar.eventKey is pf8) /* scroll forward*/
    AB0PW00.AB0PW-PAGE-NUMBER = AB0PW00.AB0PW-PAGE-NUMBER + 1; /* prev page*/
    ABWREC.ABWSWR = "N"; /* dont get data*/
    ABWREC.ABWIXM = 1;
    return; /* return to calling process*/
  end

  if (converseVar.eventKey is pf13) /* display map 2*/
    AB0PW00.AB0PW-PF-DELETE = "Y"; /* format map*/
    ABWREC.ABWSWR = "N"; /* dont get data*/
    return;
  end

  if (AB0PW00.AB0PW-KEY-CHANGE == "Y") /* key changed*/
    ABWREC.ABWSWR = "Y"; /* request data*/
    ABWREC.ABWIXM = 1;
    return;
  end

  if (AB0PW00.AB0PW-DATA-CHANGE == "N") /* data didnt change*/
    ABWREC.ABWSWR = "N"; /* aint nothin happened*/
    return; /* dont do nothin (just refmt map)*/
  end

   /* ------------------------------------------------------------*/
   /* this is now the update pass.  The program only gets here if*/
   /* data was changed & the data bases need updating*/
   /* ------------------------------------------------------------*/

  XX0XS01(); /* get date and time*/

  AB0PW00.AB0PW-SCREEN-INDEX = 1;

  AB0PW00.AB0PW-STYLE-INDEX = ((AB0PW00.AB0PW-PAGE-NUMBER - 1) * 10)   + AB0PW00.AB0PW-SCREEN-INDEX;

  while (AB0PW00.AB0PW-SCREEN-INDEX <= 10)
    AB0PW-UPDATE-SUCCESSFUL = "N";
    if (AB0PW02.AB0PW-DELETED-IND[AB0PW-STYLE-INDEX] == "Y")
      AB0P-2610(); /* delete style record*/
    else
      if (AB0PW02.AB0PW-ROW-UPDATED[AB0PW-STYLE-INDEX] == "Y")
        AB0PW02.AB0PW-ROW-UPDATED[AB0PW-STYLE-INDEX] = "N";
        AB0P-2620(); /* update style defaults*/
        if (AB0PW-UPDATE-SUCCESSFUL == "Y")
          AB0PW02.AB0PW-STYLE-DEFAULT[AB0PW-STYLE-INDEX] = AB0PW02.AB0PW-NEW-STYLE-DFLT[AB0PW-STYLE-INDEX];
          AB0PW02.AB0PW-NEW-STYLE-DFLT[AB0PW-STYLE-INDEX] = 0;
          ABWREC.XXXMSGNO = 45;
        else
          set AB0PM002.AB0PM-SY-STY-NBR[AB0PW-SCREEN-INDEX] bold;
          set AB0PM002.AB0PM-STYLE-DEFAULT[AB0PW-SCREEN-INDEX] cursor, bold;
          converseLib.validationFailed(13);
          exit stack;
        end
      end
    end
    AB0PW00.AB0PW-SCREEN-INDEX = AB0PW00.AB0PW-SCREEN-INDEX + 1;
    AB0PW00.AB0PW-STYLE-INDEX = AB0PW00.AB0PW-STYLE-INDEX + 1;
  end

  if (AB0PW-FCTY-UPDATED == "Y")
    AB0PW-UPDATE-SUCCESSFUL = "N";
    AB0P-2630();
    if (AB0PW-UPDATE-SUCCESSFUL == "Y")
      AB0PW02.AB0PW-FCTY-DEFAULT = AB0PW02.AB0PW-NEW-FCTY-DFLT;
      AB0PW02.AB0PW-NEW-FCTY-DFLT = 0;
      ABWREC.XXXMSGNO = 45;
    else
      set AB0PM002.AB0PM-FY-FCTY-CD bold;
      set AB0PM002.AB0PM-FY-FCTY-DEFAULT cursor, bold;
      converseLib.validationFailed(13);
      exit stack;
    end
  end

end // end AB0P-2600

// Delete Style Record
Function AB0P-2610()
   /* ------------------------------------------------------------*/
   /* Delete the pack factor row*/
   /* ------------------------------------------------------------*/

  VPKFTR01.FY1FCTYC = AB0PW02.AB0PW-LINE-FCTY-CD[AB0PW-STYLE-INDEX];
  VPKFTR01.SY-STY-NBR = AB0PW02.SY-STY-NBR[AB0PW-STYLE-INDEX];
  VPKFTR01.AB-TRN-TYP-CD = "2";
  VPKFTR01.SY-SZ-ID = 0;

  try
    call "VPKFTR01" ("D ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* delete table*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0 /* no sql errors*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      AB0PW02.SY-STY-NBR[AB0PW-STYLE-INDEX] = "******";
      AB0PW02.SY1SSTNM[AB0PW-STYLE-INDEX] = "DELETED STYLE";
      AB0PW02.AB0PW-STYLE-DEFAULT[AB0PW-STYLE-INDEX] = 0;

      AB0PM002.AB0PM-SY-STY-NBR[AB0PW-SCREEN-INDEX] = "****";
      AB0PM002.AB0PM-SY-STY-DESC[AB0PW-SCREEN-INDEX] = "DELETED STYLE";
      AB0PM002.AB0PM-STYLE-DEFAULT[AB0PW-SCREEN-INDEX] = 0;
      return;
    end
  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* post error and continue process*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* roll back any changes*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM001.XXXMODID = "2610"; /* Process number*/
  TA1REC.TA1PGMNM = "2610"; /* Error location*/
  TA1REC.TA1LOC = "DELETE A ABSTY ROW";
  TA1REC.TA1MAP = "AB0PM002"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VPKFTR01.VPKFTR01-KEY; /* Table key*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* redisplay map*/

end // end AB0P-2610

// Update Style Record
Function AB0P-2620()
   /* *************************************************************/
   /* *****  U P D A T E     D A C A S T . V P K F T R 0 1   ******/
   /* *****                                                  ******/
   /* ***** This statement group will update a row in the    ******/
   /* ***** DB2 table DACAST.VPKFTR01                        ******/
   /* *************************************************************/

  VPKFTR01.FY1FCTYC = AB0PW02.AB0PW-LINE-FCTY-CD[AB0PW-STYLE-INDEX];
  VPKFTR01.SY-STY-NBR = AB0PW02.SY-STY-NBR[AB0PW-STYLE-INDEX];
  VPKFTR01.SY-SZ-ID = 0;
  VPKFTR01.AB-TRN-TYP-CD = "2";
  VPKFTR01.SY-UNITS-PER-CASE = AB0PW02.AB0PW-NEW-STYLE-DFLT[AB0PW-STYLE-INDEX];
  VPKFTR01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* change date*/
  VPKFTR01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* change time*/
  VPKFTR01.ZZ-CHNG-CNT = AB0PW02.ZZ-CHNG-CNT[AB0PW-STYLE-INDEX];

  try
    call "VPKFTR01" ("U ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* update*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0 /* no sql errors*/
     || SQLCA.VAGen_SQLCODE == 100) /* no sql errors*/
      if (SQLCA.VAGen_SQLCODE == 0)
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "Y";
      else
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "N";
      end
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM002.XXXMODID = "2620"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-2620"; /* Error location*/
  TA1REC.TA1LOC = "UPDATE DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM002"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/

end // end AB0P-2620

// Update Factory Record
Function AB0P-2630()


  if (AB0PW02.AB0PW-NEW-FCTY-DFLT > 0
  )
    AB0PW00.AB0PW-VALID-FCTY = "N";
    AB0P-2631(); /* check fcty existence*/

    if (AB0PW00.AB0PW-VALID-FCTY == "N")
      AB0P-2632(); /* Insert fcty*/
    else
      AB0P-2633(); /* Update fcty row;*/
    end
  else
    AB0P-2634(); /* Delete fcty row;*/
  end

end // end AB0P-2630

// Check Factory existence
Function AB0P-2631()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "3";
  VPKFTR01.FY1FCTYC = AB0PW02.AB0PW-FY-FCTY-CD;
  VPKFTR01.SY-STY-NBR = " ";
  VPKFTR01.SY-SZ-ID = 0;

  try
    call "VPKFTR01" ("S ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100)
      if (SQLCA.VAGen_SQLCODE == 0)
        AB0PW00.AB0PW-VALID-FCTY = "Y";
      else
        AB0PW00.AB0PW-VALID-FCTY = "N";
      end
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM002.XXXMODID = "2631"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-2631"; /* Error location*/
  TA1REC.TA1LOC = "SELECT DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM002"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/


end // end AB0P-2631

// Insert Fatory Record
Function AB0P-2632()
   /* ------------------------------------------------------------*/
   /* INSERT NEW FACTORY RECORD*/
   /* ------------------------------------------------------------*/
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "3";
  VPKFTR01.FY1FCTYC = AB0PW02.AB0PW-FY-FCTY-CD;
  VPKFTR01.SY-STY-NBR = " ";
  VPKFTR01.SY-SZ-ID = 0;
  VPKFTR01.SY-UNITS-PER-CASE = AB0PW02.AB0PW-NEW-FCTY-DFLT;
  VPKFTR01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* change date*/
  VPKFTR01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* change time*/

  try
    call "VPKFTR01" ("A ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* INSERT*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0 /* no sql errors*/
     || SQLCA.VAGen_SQLCODE == 100) /* no sql errors*/
      if (SQLCA.VAGen_SQLCODE == 0)
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "Y";
      else
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "N";
      end
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM002.XXXMODID = "2632"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-2632"; /* Error location*/
  TA1REC.TA1LOC = "UPDATE DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM002"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/

end // end AB0P-2632

// Update New Factory Record\
Function AB0P-2633()
   /* ------------------------------------------------------------*/
   /* UPDATE FACTORY RECORD*/
   /* ------------------------------------------------------------*/


  VPKFTR01.SY-UNITS-PER-CASE = AB0PW02.AB0PW-NEW-FCTY-DFLT;
  VPKFTR01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* change date*/
  VPKFTR01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* change time*/

  try
    call "VPKFTR01" ("U ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* INSERT*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0 /* no sql errors*/
     || SQLCA.VAGen_SQLCODE == 100) /* no sql errors*/
      if (SQLCA.VAGen_SQLCODE == 0)
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "Y";
      else
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "N";
      end
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM002.XXXMODID = "2633"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-2633"; /* Error location*/
  TA1REC.TA1LOC = "UPDATE DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM002"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/

end // end AB0P-2633

// Delete Fcty Record
Function AB0P-2634()
   /* ------------------------------------------------------------*/
   /* DELETE FACTORY RECORD*/
   /* ------------------------------------------------------------*/
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "3";
  VPKFTR01.FY1FCTYC = AB0PW02.AB0PW-FY-FCTY-CD;
  VPKFTR01.SY-STY-NBR = " ";
  VPKFTR01.SY-SZ-ID = 0;

  try
    call "VPKFTR01" ("D ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* INSERT*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0 /* no sql errors*/
     || SQLCA.VAGen_SQLCODE == 100) /* no sql errors*/
      AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "Y";
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM002.XXXMODID = "2634"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-2634"; /* Error location*/
  TA1REC.TA1LOC = "DELETE DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM002"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/

end // end AB0P-2634

// process map 3 STYLE/SIZE
Function AB0P-3000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* PROCESSING UNDER ERROR CONDITIONS.*/
   /* ------------------------------------------------------------*/

  AB0P-3100(); /* Obtain data to display*/

  AB0P-3200(); /* Format and display the map*/

  AB0P-3300(); /* Check attention identifier*/

  AB0P-3400(); /* Reset fields to normal intensity*/

  AB0P-3500(); /* Verify the entered data*/

  AB0P-3600(); /* Process valid input request*/


end // end AB0P-3000

// Obtain Data to display
Function AB0P-3100()
   /* ------------------------------------------------------------*/
   /* If data was not requested, return to the previous process.*/
   /* At end of rows, close the selected set cursor,*/
   /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/

  if (ABWREC.ABWSWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* Or error has occured*/
    return; /* Return to previous process*/
  end

  set AB0PW01 empty;
  set AB0PW02 empty;
  set AB0PW03 empty;

  move 0 to AB0PW00.SY-SZ-ID[1] for all;
  move 0 to AB0PW00.AB0PW-SIZE-DEFAULT[1] for all;
  move 0 to AB0PW00.ZZ-CHNG-CNT[1] for all;

  AB0PW00.AB0PW-PAGE-NUMBER = 1; /* start page*/
  AB0PW00.AB0PW-SCREEN-INDEX = 1; /* Screen index*/
  AB0PW00.AB0PW-FCTY-INDEX = 1;
  AB0PW00.AB0PW-EOC = "N";

  set VPKFTR01 empty;
  AB0P-3110(); /* declare pkftr cursor*/
  AB0P-3120(); /* fetch pkftr cursor*/

  while (AB0PW00.AB0PW-EOC == "N")
    AB0P-3130(); /* save fcty data*/
    AB0P-3120(); /* fetch pkftr cursor*/
  end /* end while clause*/

  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    ABWREC.ABWSWR = "N"; /* Request for data completed*/
  end

  AB0P-3160(); /* close csr*/

  AB0P-3140(); /* get style default*/

  AB0P-3150(); /* get style sizes*/

end // end AB0P-3100

// Declare Sz PK cursor
Function AB0P-3110()

   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "1";
  VPKFTR01.FY1FCTYC = AB0PW00.FY1FCTYC;
  VPKFTR01.SY-STY-NBR = AB0PW00.SY-STY-NBR;
  VPKFTR01.SY-SZ-ID = -1;


  try
    call "VPKFTR01" ("S1", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "3110"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
    TA1REC.TA1TBLKE = VPKFTR01.VPKFTR01-KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    AB0PM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Return to previous process*/

  end

end // end AB0P-3110

// Select Next Siz Recd
Function AB0P-3120()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/

  set VPKFTR01 empty;

  try
    call "VPKFTR01" ("N1", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

    AB0PW00.AB0PW-EOC = "Y"; /* Indicate end of file*/

    return; /* Return to previous process*/

  end


  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "3120"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0PM002.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Return to previous process*/

  end

end // end AB0P-3120

// Save Size Index
Function AB0P-3130()

  AB0PW00.AB0PW-SIZE-INDEX = VPKFTR01.SY-SZ-ID;

  AB0PW00.SY-SZ-ID[AB0PW-SIZE-INDEX] = VPKFTR01.SY-SZ-ID;

  AB0PW00.AB0PW-SIZE-DEFAULT[AB0PW-SIZE-INDEX] = VPKFTR01.SY-UNITS-PER-CASE;

  AB0PW00.ZZ-CHNG-CNT[AB0PW-SIZE-INDEX] = VPKFTR01.ZZ-CHNG-CNT;

end // end AB0P-3130

// Style dflt information
Function AB0P-3140()
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "2";
  VPKFTR01.FY1FCTYC = AB0PW00.FY1FCTYC;
  VPKFTR01.SY-STY-NBR = AB0PW00.SY-STY-NBR;
  VPKFTR01.SY-SZ-ID = 0;


  try
    call "VPKFTR01" ("S ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table*/


  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)

    AB0PW03.SY-STY-NBR = AB0PW00.SY-STY-NBR;
    if (SQLCA.VAGen_SQLCODE == 0)
      AB0PW03.AB0PW-STYLE-DEFAULT = VPKFTR01.SY-UNITS-PER-CASE;
    end

    return; /* Return to previous process*/

  end

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "3140"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0PM002.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Return to previous process*/

  end


end // end AB0P-3140

// Style Size gathering
Function AB0P-3150()

  AB0PW00.AB0PW-CURR-STYLE = AB0PW00.SY-STY-NBR;

  AB0P-S002(); /* select style cursor*/
  AB0P-S003(); /* sleect style*/

  while (AB0PW00.AB0PW-VALID-STYLE == "Y")

    AB0PW00.AB0PW-SIZE-INDEX = 1;

    while (AB0PW00.AB0PW-SIZE-INDEX <= 40)
      if (SY3FRGUT[AB0PW-SIZE-INDEX] > " ")
        AB0PW00.SY-SZ-ID[AB0PW-SIZE-INDEX] = AB0PW-SIZE-INDEX;

      end
      AB0PW00.AB0PW-SIZE-INDEX = AB0PW00.AB0PW-SIZE-INDEX + 1;
    end

    AB0P-S003(); /* sleect style*/

  end

  AB0P-S004(); /* close style*/

  AB0PW00.AB0PW-SIZE-INDEX = 1;
  AB0PW00.AB0PW-SIZE-INDEX2 = 1;

  while (AB0PW00.AB0PW-SIZE-INDEX <= 40)
    if (AB0PW00.SY-SZ-ID[AB0PW-SIZE-INDEX] > 0)
      AB0PW03.SY-SZ-ID[AB0PW-SIZE-INDEX2] = AB0PW00.SY-SZ-ID[AB0PW-SIZE-INDEX];
      AB0PW03.AB0PW-SIZE-DEFAULT[AB0PW-SIZE-INDEX2] = AB0PW00.AB0PW-SIZE-DEFAULT[AB0PW-SIZE-INDEX];
      AB0PW03.ZZ-CHNG-CNT[AB0PW-SIZE-INDEX2] = AB0PW00.ZZ-CHNG-CNT[AB0PW-SIZE-INDEX];
      AB0PW00.AB0PW-SIZE-INDEX2 = AB0PW00.AB0PW-SIZE-INDEX2 + 1;
    end
    AB0PW00.AB0PW-SIZE-INDEX = AB0PW00.AB0PW-SIZE-INDEX + 1;
  end

  AB0P-3151();

end // end AB0P-3150

// Gather Size Description
Function AB0P-3151()
   /* ------------------------------------------------------------*/
   /* build key*/
   /* ------------------------------------------------------------*/

  set SY4REC empty;
  SY4REC.SY4SZSCL = PG2REC.SY4SZSCL;

   /* ------------------------------------------------------------*/
   /* Select unique the Dprod.Vscale01 row*/
   /* ------------------------------------------------------------*/


  try
    call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE != 0)     

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end


   /* ------------------------------------------------------------*/
   /* If not successful, go to flow*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call successful*/
   || SQLCA.VAGen_SQLCODE != 0)      /* and normal return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "3151"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "FETCH SELECTED TABLE ROW";
    TA1REC.TA1MAP = "AB0PM003"; /* Map name*/
    TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSCALE01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    AB0PM003.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

   /* ------------------------------------------------------------*/
   /* Store all retrieved size descriptions.*/
   /* ------------------------------------------------------------*/

  ABWREC.ABWIDX4 = 1; /* Reset loop index*/
  move " " to AB0PW03.SY-SZ-ID-DESC[1] for all; /* Reset Size desc array*/

  while (ABWREC.ABWIDX4 <= 40) /* Find valid sizes*/
    ABWREC.ABWIDX5 = AB0PW03.SY-SZ-ID[ABWIDX4];
    if (ABWREC.ABWIDX5 != 0)
      AB0PW03.SY-SZ-ID-DESC[ABWIDX4] = SY4REC.SY4IDDSC[ABWIDX5];
    end
    ABWREC.ABWIDX4 = ABWREC.ABWIDX4 + 1; /* Loop through*/
  end

end // end AB0P-3151

// Close Pk Csr
Function AB0P-3160()
   /* close cursor*/
   /* ------------------------------------------------------------*/


  try
    call "VPKFTR01" ("C1", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "3160"; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED CURSOR ";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/

    try
      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag. routine*/

    AB0PM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Return to previous process*/

  end

end // end AB0P-3160

// Format map 3
Function AB0P-3200()

   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/


  if (converseVar.validationMsgNum == 0
   || ABWREC.ABWFIRST == "Y") /* map to be formatted*/
    set AB0PM003 initial;
    AB0P-3210(); /* format map*/
    ABWREC.ABWFIRST = "N";
  end

  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AB0PM003 alarm; /* Indicate sound alarm*/
    AB0P-3220(); /* format map*/
  end

  if (converseVar.validationMsgNum == 0)
    if (ABWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(ABWREC.XXXMSGNO);
    end
  end

  AB0PM003.XXXCURDT = VGVar.currentShortGregorianDate; /* date*/
  ABWREC.XXXMSGNO = 0;

  converseLib.clearScreen();


  converse AB0PM003 ;
end // end AB0P-3200

// Format map fields
Function AB0P-3210()
   /* -------------*/
   /* Format Map*/
   /* -------------*/

  AB0PM003.FY1FCTYC = AB0PW00.FY1FCTYC; /* Factory Code*/
  AB0PM003.FY1FCTNM = AB0PW00.FY1FCTNM; /* Factory Short Name*/
  AB0PM003.AB0PM-SELECT-STY-NBR = AB0PW00.SY-STY-NBR;
  AB0PM003.AB0PM-SELECT-STY-DESC = AB0PW00.SY1SSTNM;

  AB0PW00.AB0PW-SCREEN-INDEX = 1;

  AB0PM003.AB0PM-SY-STY-NBR = AB0PW03.SY-STY-NBR;
  AB0PM003.AB0PM-SY-STY-DEFAULT = AB0PW03.AB0PW-STYLE-DEFAULT;

  while (AB0PW00.AB0PW-SCREEN-INDEX <= 40)
    if (AB0PW03.SY-SZ-ID[AB0PW-SCREEN-INDEX] > 0)
      AB0PM003.AB0PM-SIZE-DESC[AB0PW-SCREEN-INDEX] = AB0PW03.SY-SZ-ID-DESC[AB0PW-SCREEN-INDEX];
      AB0PM003.AB0PM-SIZE-DEFAULT[AB0PW-SCREEN-INDEX] = AB0PW03.AB0PW-SIZE-DEFAULT[AB0PW-SCREEN-INDEX];
    else
      set AB0PM003.AB0PM-SIZE-DESC[AB0PW-SCREEN-INDEX] skip, invisible;
      set AB0PM003.AB0PM-SIZE-DEFAULT[AB0PW-SCREEN-INDEX] skip, invisible;
    end

    AB0PW00.AB0PW-SCREEN-INDEX = AB0PW00.AB0PW-SCREEN-INDEX + 1;
  end

end // end AB0P-3210

// Set map for error
Function AB0P-3220()

  AB0PW00.AB0PW-SCREEN-INDEX = 1;

  while (AB0PW00.AB0PW-SCREEN-INDEX <= 40)
    if (AB0PW03.SY-SZ-ID[AB0PW-SCREEN-INDEX] == 0)
      set AB0PM003.AB0PM-SIZE-DESC[AB0PW-SCREEN-INDEX] skip, invisible;
      set AB0PM003.AB0PM-SIZE-DEFAULT[AB0PW-SCREEN-INDEX] skip, invisible;
    end

    AB0PW00.AB0PW-SCREEN-INDEX = AB0PW00.AB0PW-SCREEN-INDEX + 1;
  end

end // end AB0P-3220

// validate pf keys
Function AB0P-3300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set AB0PM003 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (AB0PM003.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = AB0PM003.CATOAP; /* TO application*/
      COMMAREA.CAITEM = AB0PM003.CAITEM; /* Application data*/
      XSABS01(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    set AB0PM003.CATOAP cursor, modified, bold; /* Highlight*/
    AB0PM002.XXXMODID = "3300"; /* Process number*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "AB0PM003"; /* Appl find code*/
    end
    XSABS01(); /* Exit to another application*/
    AB0PM002.XXXMODID = "3300"; /* Process number*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "AB0F";
    XSABS01(); /* Exit to another application*/
  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    AB0PM002.XXXMODID = "3300"; /* Process number*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    exit stack; /* Exit to redisplay map*/
  end

end // end AB0P-3300

// reset highlighted fields
Function AB0P-3400()

  set AB0PM003.FY1FCTYC initialAttributes;
  set AB0PM003.FY1FCTNM initialAttributes;
  set AB0PM003.AB0PM-SELECT-STY-NBR initialAttributes;
  set AB0PM003.AB0PM-SELECT-STY-DESC initialAttributes;

  set AB0PM003.AB0PM-SY-STY-NBR initialAttributes;
  set AB0PM003.AB0PM-SY-STY-DEFAULT initialAttributes;

  ABWREC.ABWIXM = 1; /* first screen line*/

  while (ABWREC.ABWIXM <= 40) /* for each screen line*/
    set AB0PM003.AB0PM-SIZE-DESC[ABWIXM] initialAttributes;
    set AB0PM003.AB0PM-SIZE-DEFAULT[ABWIXM] initialAttributes;
    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* next screen line*/
  end

end // end AB0P-3400

// Validate Data
Function AB0P-3500()

  AB0PW00.AB0PW-KEY-CHANGE = "N"; /**/

  if (AB0PM003.FY1FCTYC != XP1REC.FY1FCTYC
   || AB0PM003.AB0PM-SELECT-STY-NBR != XP1REC.SY1STNBR)
    AB0PW00.AB0PW-KEY-CHANGE = "Y"; /* key changed*/
    AB0P-3510(); /* validate new key*/

  else
    AB0P-3520(); /* validate line data*/
  end

  if (converseVar.validationMsgNum > 0)
    exit stack;
  end

end // end AB0P-3500

// Validate Key Data
Function AB0P-3510()

  if (AB0PM003.AB0PM-SELECT-STY-NBR != XP1REC.SY1STNBR)
    if (AB0PM003.AB0PM-SELECT-STY-NBR != "  ")
      AB0PW00.AB0PW-CURR-STYLE = AB0PM003.AB0PM-SELECT-STY-NBR;
      AB0P-S002(); /* select style cursor*/
      AB0P-S003(); /* sleect style*/
      AB0P-S004(); /* close style*/
      if (AB0PW00.AB0PW-VALID-STYLE == "Y")
        AB0PW00.SY-STY-NBR = PG2REC.SY1STNBR;
        XP1REC.SY1STNBR = PG2REC.SY1STNBR;
        AB0PW00.SY1SSTNM = PG2REC.SY1SSTNM;
      else
        set AB0PM003.AB0PM-SELECT-STY-NBR cursor, bold; /* Highlight*/
        AB0PM003.AB0PM-SELECT-STY-DESC = " ";
        converseLib.validationFailed(41); /* Indicate error message*/
        AB0PM003.XXXMODID = "3510"; /* Process number*/
      end
    else
      AB0PW00.SY-STY-NBR = " ";
      XP1REC.SY1STNBR = " ";
      AB0PW00.SY1SSTNM = " ";
    end
  end

  if (AB0PM003.FY1FCTYC != XP1REC.FY1FCTYC)

    if (AB0PM003.FY1FCTYC != " ")
      AB0PW00.AB0PW-CURR-FCTY = AB0PM003.FY1FCTYC;
                                   /* Access Factory Code*/
      AB0P-S001(); /* Factory Abrv*/
      if (AB0PW00.AB0PW-VALID-FCTY == "Y")
        AB0PW00.FY1FCTNM = FY1REC.FY1FCTNM;
        XP1REC.FY1FCTYC = FY1REC.FY1FCTYC;
        AB0PW00.FY1FCTYC = FY1REC.FY1FCTYC;
      else
        set AB0PM003.FY1FCTYC cursor, bold; /* Highlight field*/
        AB0PM003.FY1FCTNM = " "; /* space screen description*/
        converseLib.validationFailed(41); /* Indicate error message*/
        AB0PM003.XXXMODID = "3510"; /* Process number*/
      end
    else
      AB0PW00.FY1FCTNM = " ";
      AB0PW00.FY1FCTYC = " ";
      XP1REC.FY1FCTYC = " ";
    end

  end

  if (converseVar.validationMsgNum == 0) /* no error occurred*/
    AB0P-S005();
  end

end // end AB0P-3510

// Validate Line Data
Function AB0P-3520()

  AB0PW00.AB0PW-DATA-CHANGE = "N";
  AB0PW00.AB0PW-SCREEN-INDEX = 1;

  while (AB0PW00.AB0PW-SCREEN-INDEX <= 40)
    AB0PW03.AB0PW-ROW-UPDATED[AB0PW-SCREEN-INDEX] = "N";
    if (AB0PM003.AB0PM-SIZE-DEFAULT[AB0PW-SCREEN-INDEX] != 
    AB0PW03.AB0PW-SIZE-DEFAULT[AB0PW-SCREEN-INDEX])
      AB0PW03.AB0PW-NEW-SIZE-DEFAULT[AB0PW-SCREEN-INDEX] = AB0PM003.AB0PM-SIZE-DEFAULT[AB0PW-SCREEN-INDEX];
      AB0PW03.AB0PW-ROW-UPDATED[AB0PW-SCREEN-INDEX] = "Y";
      AB0PW00.AB0PW-DATA-CHANGE = "Y";
    end
    AB0PW00.AB0PW-SCREEN-INDEX = AB0PW00.AB0PW-SCREEN-INDEX + 1;
  end

  if (AB0PM003.AB0PM-SY-STY-DEFAULT != AB0PW03.AB0PW-STYLE-DEFAULT)
    AB0PW03.AB0PW-NEW-STY-DFLT = AB0PM003.AB0PM-SY-STY-DEFAULT;
    AB0PW03.AB0PW-STYLE-UPDATED = "Y";
    AB0PW00.AB0PW-DATA-CHANGE = "Y";
  end

end // end AB0P-3520

// process valid request
Function AB0P-3600()

  if (AB0PW00.AB0PW-KEY-CHANGE == "Y") /* key changed*/
    ABWREC.ABWSWR = "Y"; /* request data*/
    ABWREC.ABWIXM = 1;
    return;
  end

  if (AB0PW00.AB0PW-DATA-CHANGE == "N") /* data didnt change*/
    ABWREC.ABWSWR = "N"; /* aint nothin happened*/
    return; /* dont do nothin (just refmt map)*/
  end

   /* ------------------------------------------------------------*/
   /* this is now the update pass.  The program only gets here if*/
   /* data was changed & the data bases need updating*/
   /* ------------------------------------------------------------*/

  XX0XS01(); /* get date and time*/

  AB0PW00.AB0PW-SCREEN-INDEX = 1;


  while (AB0PW00.AB0PW-SCREEN-INDEX <= 40)
    AB0PW-UPDATE-SUCCESSFUL = "N";
    if (AB0PW03.AB0PW-ROW-UPDATED[AB0PW-SCREEN-INDEX] == "Y")
      AB0PW03.AB0PW-ROW-UPDATED[AB0PW-SCREEN-INDEX] = "N";
      AB0P-3610(); /* update size  defaults*/
      if (AB0PW-UPDATE-SUCCESSFUL == "Y")
        AB0PW03.AB0PW-SIZE-DEFAULT[AB0PW-SCREEN-INDEX] = AB0PW03.AB0PW-NEW-SIZE-DEFAULT[AB0PW-SCREEN-INDEX];
        AB0PW03.AB0PW-NEW-SIZE-DEFAULT[AB0PW-SCREEN-INDEX] = 0;
        ABWREC.XXXMSGNO = 45;
      else
        set AB0PM003.AB0PM-SIZE-DESC[AB0PW-SCREEN-INDEX] bold;
        set AB0PM003.AB0PM-SIZE-DEFAULT[AB0PW-SCREEN-INDEX] cursor, bold;
        converseLib.validationFailed(13);
        exit stack;
      end
    end
    AB0PW00.AB0PW-SCREEN-INDEX = AB0PW00.AB0PW-SCREEN-INDEX + 1;
  end

  if (AB0PW-STYLE-UPDATED == "Y")
    AB0PW-UPDATE-SUCCESSFUL = "N";
    AB0P-3620();
    if (AB0PW-UPDATE-SUCCESSFUL == "Y")
      AB0PW03.AB0PW-STYLE-DEFAULT = AB0PW03.AB0PW-NEW-STY-DFLT;
      AB0PW03.AB0PW-NEW-STY-DFLT = 0;
      ABWREC.XXXMSGNO = 45;
    else
      set AB0PM003.AB0PM-SY-STY-NBR bold;
      set AB0PM003.AB0PM-SY-STY-DEFAULT cursor, bold;
      converseLib.validationFailed(13);
      exit stack;
    end
  end

end // end AB0P-3600

// Process Size Updates
Function AB0P-3610()


  if (AB0PW03.AB0PW-NEW-SIZE-DEFAULT[AB0PW-SCREEN-INDEX] > 0)

    AB0PW00.AB0PW-VALID-SIZE = "N";
    AB0P-3611(); /* check existence*/

    if (AB0PW00.AB0PW-VALID-SIZE == "N")
      AB0P-3612(); /* Insert row*/
    else
      AB0P-3613(); /* update new row;*/
    end

  else
    AB0P-3614(); /* delete existing row*/
  end

end // end AB0P-3610

// Check Size Existence
Function AB0P-3611()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "1";
  VPKFTR01.FY1FCTYC = AB0PW00.FY1FCTYC;
  VPKFTR01.SY-STY-NBR = AB0PW03.SY-STY-NBR;
  VPKFTR01.SY-SZ-ID = AB0PW03.SY-SZ-ID[AB0PW-SCREEN-INDEX];

  try
    call "VPKFTR01" ("S ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100)
      if (SQLCA.VAGen_SQLCODE == 0)
        AB0PW00.AB0PW-VALID-SIZE = "Y";
      else
        AB0PW00.AB0PW-VALID-SIZE = "N";
      end
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM002.XXXMODID = "3611"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-3611"; /* Error location*/
  TA1REC.TA1LOC = "SELECT DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM003"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/


end // end AB0P-3611

// Insert Size Row
Function AB0P-3612()
   /* ------------------------------------------------------------*/
   /* INSERT NEW Size RECORD*/
   /* ------------------------------------------------------------*/
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "1";
  VPKFTR01.FY1FCTYC = AB0PW00.FY1FCTYC;
  VPKFTR01.SY-STY-NBR = AB0PW03.SY-STY-NBR;
  VPKFTR01.SY-SZ-ID = AB0PW03.SY-SZ-ID[AB0PW-SCREEN-INDEX];
  VPKFTR01.SY-UNITS-PER-CASE = AB0PW03.AB0PW-NEW-SIZE-DEFAULT[AB0PW-SCREEN-INDEX];
  VPKFTR01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* change date*/
  VPKFTR01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* change time*/

  try
    call "VPKFTR01" ("A ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* INSERT*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0 /* no sql errors*/
     || SQLCA.VAGen_SQLCODE == 100) /* no sql errors*/
      if (SQLCA.VAGen_SQLCODE == 0)
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "Y";
      else
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "N";
      end
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM002.XXXMODID = "3612"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-3612"; /* Error location*/
  TA1REC.TA1LOC = "INSERT DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM003"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/

end // end AB0P-3612

// Update Size Row
Function AB0P-3613()
   /* ------------------------------------------------------------*/
   /* UPDATE SIZE RECORD*/
   /* ------------------------------------------------------------*/

  VPKFTR01.SY-UNITS-PER-CASE = AB0PW03.AB0PW-NEW-SIZE-DEFAULT[AB0PW-SCREEN-INDEX];
  VPKFTR01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* change date*/
  VPKFTR01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* change time*/

  try
    call "VPKFTR01" ("U ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* INSERT*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0 /* no sql errors*/
     || SQLCA.VAGen_SQLCODE == 100) /* no sql errors*/
      if (SQLCA.VAGen_SQLCODE == 0)
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "Y";
      else
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "N";
      end
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM002.XXXMODID = "3613"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-3613"; /* Error location*/
  TA1REC.TA1LOC = "UPDATE DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM003"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/

end // end AB0P-3613

// Delete Size Row
Function AB0P-3614()
   /* -------------------------*/
   /* Delete Size Record*/
   /* -------------------------*/
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "1";
  VPKFTR01.FY1FCTYC = AB0PW00.FY1FCTYC;
  VPKFTR01.SY-STY-NBR = AB0PW03.SY-STY-NBR;
  VPKFTR01.SY-SZ-ID = AB0PW03.SY-SZ-ID[AB0PW-SCREEN-INDEX];

  try
    call "VPKFTR01" ("D ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* INSERT*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0 /* no sql errors*/
     || SQLCA.VAGen_SQLCODE == 100) /* no sql errors*/
      AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "Y";
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM002.XXXMODID = "3614"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-3614"; /* Error location*/
  TA1REC.TA1LOC = "DELETE DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM003"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/

end // end AB0P-3614

// Process Style Updates
Function AB0P-3620()

  if (AB0PW03.AB0PW-NEW-STY-DFLT > 0)

    AB0PW00.AB0PW-VALID-STYLE = "N";

    AB0P-3621(); /* check style existence*/

    if (AB0PW00.AB0PW-VALID-STYLE == "N")
      AB0P-3622(); /* Insert row*/
    else
      AB0P-3623(); /* Update row;*/
    end
  else
    AB0P-3624(); /* Delete Style Row*/
  end

end // end AB0P-3620

// Check style existence
Function AB0P-3621()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "2";
  VPKFTR01.FY1FCTYC = AB0PW00.FY1FCTYC;
  VPKFTR01.SY-STY-NBR = AB0PW03.SY-STY-NBR;
  VPKFTR01.SY-SZ-ID = 0;

  try
    call "VPKFTR01" ("S ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100)
      if (SQLCA.VAGen_SQLCODE == 0)
        AB0PW00.AB0PW-VALID-STYLE = "Y";
      else
        AB0PW00.AB0PW-VALID-STYLE = "N";
      end
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM002.XXXMODID = "3621"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-3621"; /* Error location*/
  TA1REC.TA1LOC = "SELECT DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM003"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/


end // end AB0P-3621

// Insert Style Row
Function AB0P-3622()
  /* GET AB0P-3612*/
   /* ------------------------------------------------------------*/
   /* INSERT NEW FACTORY RECORD*/
   /* ------------------------------------------------------------*/
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "2";
  VPKFTR01.FY1FCTYC = AB0PW00.FY1FCTYC;
  VPKFTR01.SY-STY-NBR = AB0PW03.SY-STY-NBR;
  VPKFTR01.SY-SZ-ID = 0;
  VPKFTR01.SY-UNITS-PER-CASE = AB0PW03.AB0PW-NEW-STY-DFLT;
  VPKFTR01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* change date*/
  VPKFTR01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* change time*/

  try
    call "VPKFTR01" ("A ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* INSERT*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0 /* no sql errors*/
     || SQLCA.VAGen_SQLCODE == 100) /* no sql errors*/
      if (SQLCA.VAGen_SQLCODE == 0)
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "Y";
      else
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "N";
      end
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM002.XXXMODID = "3622"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-3622"; /* Error location*/
  TA1REC.TA1LOC = "INSERT DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM003"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/

end // end AB0P-3622

// Update Style Row
Function AB0P-3623()
   /* ------------------------------------------------------------*/
   /* UPDATE FACTORY RECORD*/
   /* ------------------------------------------------------------*/

  VPKFTR01.SY-UNITS-PER-CASE = AB0PW03.AB0PW-NEW-STY-DFLT;
  VPKFTR01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* change date*/
  VPKFTR01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* change time*/

  try
    call "VPKFTR01" ("U ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* INSERT*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0 /* no sql errors*/
     || SQLCA.VAGen_SQLCODE == 100) /* no sql errors*/
      if (SQLCA.VAGen_SQLCODE == 0)
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "Y";
      else
        AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "N";
      end
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM002.XXXMODID = "3623"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-3623"; /* Error location*/
  TA1REC.TA1LOC = "UPDATE DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM003"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/

end // end AB0P-3623

// Delete Style Row
Function AB0P-3624()
   /* ------------------------------------------------------------*/
   /* delete Style RECORD*/
   /* ------------------------------------------------------------*/
  set VPKFTR01 empty;

  VPKFTR01.AB-TRN-TYP-CD = "2";
  VPKFTR01.FY1FCTYC = AB0PW00.FY1FCTYC;
  VPKFTR01.SY-STY-NBR = AB0PW03.SY-STY-NBR;
  VPKFTR01.SY-SZ-ID = 0;

  try
    call "VPKFTR01" ("D ", SQLCA, VPKFTR01) {isNoRefresh = yes, isExternal = yes};
  end /* INSERT*/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0 /* no sql errors*/
     || SQLCA.VAGen_SQLCODE == 100) /* no sql errors*/
      AB0PW00.AB0PW-UPDATE-SUCCESSFUL = "Y";
      return;
    end

  end

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AB0PM002.XXXMODID = "3624"; /* Process number*/
  TA1REC.TA1PGMNM = "AB0P-3624"; /* Error location*/
  TA1REC.TA1LOC = "DELETE DACAST.VPKFTR01 TABLE ROW";
  TA1REC.TA1MAP = "AB0PM003"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPKFTR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Return to previous process*/

end // end AB0P-3624

// Get Fcty Information
Function AB0P-S001()

   /* ------------------------------------------------------------*/
   /* Verify if Factory cd is found in DFCTY.VFCTY001*/
   /* ------------------------------------------------------------*/

   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/

  set FY1REC empty; /* initialize db record*/

  if (AB0PW-CURR-FCTY == "ALL")
    AB0PW-VALID-FCTY = "Y";
    FY1REC.FY1FCTYC = "ALL";
    FY1REC.FY1FCTNM = "ALL FACTORIES";
    FY1REC.FY1FCTSN = "ALL FACTORIES";
    return; /* Return to calling process*/
  end

  set FY1REC empty; /* initialize db record*/
  FY1REC.XGPCD = XP1REC.XGPCD; /* gpc cd*/
  FY1REC.FY1FCTYC = AB0PW00.AB0PW-CURR-FCTY; /* factory code*/

   /* *=============================**/
   /* *  Access DFCTY.VFCTY001 DB   **/
   /* *=============================**/

  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      AB0PW-VALID-FCTY = "Y";
      return; /* Return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      AB0PW-VALID-FCTY = "N"; /* space screen description*/
      return; /* Return to calling process*/
    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      if (ABWREC.ABWMAP == "3")
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      else
        if (ABWREC.ABWMAP == "2")
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
        else
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
        end
      end
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  if (ABWREC.ABWMAP == "3")
    AB0PM003.XXXMODID = "S001"; /* Process number*/
  else
    if (ABWREC.ABWMAP == "2")
      AB0PM002.XXXMODID = "S001"; /* Process number*/
    else
      AB0PM001.XXXMODID = "S001"; /* Process number*/
    end
  end
  TA1REC.TA1PGMNM = "AB0P-S001"; /* Error location*/
  TA1REC.TA1LOC = "GET DFCTY.VFCTY001 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  exit stack; /* Exit to redisplay map*/

end // end AB0P-S001

// Select Style Cursor
Function AB0P-S002()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/

  set PG2REC empty; /* Reset rec work area*/
  PG2REC.XGPCD = XP1REC.XGPCD; /* GPC cd*/
  PG2REC.SY1STNBR = AB0PW00.AB0PW-CURR-STYLE; /* Style no.*/

   /* *===================================**/
   /* *  Select Set from DPRODG.VSYCLR01  **/
   /* *===================================**/

  try
    call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      if (ABWREC.ABWMAP == "3")
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      else
        if (ABWREC.ABWMAP == "2")
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
        else
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
        end
      end
    end

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "AB0P-S002"; /* Error location*/
  TA1REC.TA1LOC = "FETCH SELECTED TABLE ROW";
  if (ABWREC.ABWMAP == "3")
    TA1REC.TA1MAP = "AB0PM003"; /* Map name*/
    AB0PM003.XXXMODID = "S002"; /* Process number*/
  else
    if (ABWREC.ABWMAP == "2")
      AB0PM002.XXXMODID = "S002"; /* Process number*/
    else
      AB0PM001.XXXMODID = "S002"; /* Process number*/
    end
  end
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AB0P-S002

// Select Next Style
Function AB0P-S003()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call and validate.*/
   /* For validation purposes only one (1) valid row retrieved*/
     /* will be enough to satisfy the existence check.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/
      AB0PW00.AB0PW-VALID-STYLE = "Y";
      return; /* Return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      AB0PW00.AB0PW-VALID-STYLE = "N";
      return; /* Exit to calling rtn*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      if (ABWREC.ABWMAP == "3")
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      else
        if (ABWREC.ABWMAP == "2")
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
        else
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
        end
      end
    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "AB0P-S003"; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  if (ABWREC.ABWMAP == "3")
    TA1REC.TA1MAP = "AB0PM003"; /* MAP NAME*/
    AB0PM003.XXXMODID = "S003"; /* Process number*/
  else
    if (ABWREC.ABWMAP == "2")
      TA1REC.TA1MAP = "AB0PM002"; /* MAP NAME*/
      AB0PM002.XXXMODID = "S003"; /* Process number*/
    else
      TA1REC.TA1MAP = "AB0PM001"; /* MAP NAME*/
      AB0PM001.XXXMODID = "S003"; /* Process number*/
    end
  end
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/

end // end AB0P-S003

// Close Style Cursor
Function AB0P-S004()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("CS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close set*/

   /* ------------------------------------------------------------*/
   /* If successful, return to calling process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  if (ABWREC.ABWMAP == "3")
    AB0PM003.XXXMODID = "S004"; /* Process number*/
    TA1REC.TA1MAP = "AB0PM003"; /* Map name*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  else
    if (ABWREC.ABWMAP == "2")
      AB0PM002.XXXMODID = "S004"; /* Process number*/
      TA1REC.TA1MAP = "AB0PM002"; /* Map name*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    else
      AB0PM001.XXXMODID = "S004"; /* Process number*/
      TA1REC.TA1MAP = "AB0PM001"; /* Map name*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
  end
  TA1REC.TA1PGMNM = "AB0P-S004"; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  converseLib.validationFailed(10); /* Indicate system error*/
  exit stack;
end // end AB0P-S004

// Determine map
Function AB0P-S005()
   /* ******************/
   /* DETERMINE MAP  **/
   /* ******************/

  if (AB0PW00.SY-STY-NBR > " "
   && AB0PW00.FY1FCTYC != "ALL")
    ABWREC.ABWMAP = "3"; /* Map 1 was requested*/
  else
    if (AB0PW00.FY1FCTYC > " ")
      ABWREC.ABWMAP = "2"; /* Map 1 was requested*/
    else
      ABWREC.ABWMAP = "1"; /* Map 1 was requested*/
    end
  end

end // end AB0P-S005

Record AB0PW00 type basicRecord
  10 FY1FCTYC FY1FCTYC ; 
  10 FY1FCTNM FY1FCTNM ; 
  10 SY-STY-NBR SY-STY-NBR ; 
  10 SY1SSTNM SY1SSTNM ; 
  10 AB0PW-PF-BACK-IND AB0PW-PF-BACK-IND ; 
  10 AB0PW-PF-FWRD-IND AB0PW-PF-FWRD-IND ; 
  10 AB0PW-PAGE-NUMBER AB0PW-PAGE-NUMBER ; 
  10 AB0PW-SCREEN-INDEX AB0PW-SCREEN-INDEX ; 
  10 AB0PW-FCTY-INDEX AB0PW-FCTY-INDEX ; 
  10 AB0PW-STYLE-INDEX AB0PW-STYLE-INDEX ; 
  10 AB0PW-SIZE-INDEX AB0PW-SIZE-INDEX ; 
  10 AB0PW-SIZE-INDEX2 AB0PW-SIZE-INDEX2 ; 
  10 AB0PW-EOC AB0PW-EOC ; 
  10 AB0PW-VALID-FCTY AB0PW-VALID-FCTY ; 
  10 AB0PW-VALID-STYLE AB0PW-VALID-STYLE ; 
  10 AB0PW-VALID-SIZE AB0PW-VALID-SIZE ; 
  10 AB0PW-CURR-FCTY AB0PW-CURR-FCTY ; 
  10 AB0PW-CURR-STYLE AB0PW-CURR-STYLE ; 
  10 AB0PW-PF-DELETE AB0PW-PF-DELETE ; 
  10 AB0PW-KEY-CHANGE AB0PW-KEY-CHANGE ; 
  10 AB0PW-DATA-CHANGE AB0PW-DATA-CHANGE ; 
  10 AB0PW-UPDATE-SUCCESSFUL AB0PW-UPDATE-SUCCESSFUL ; 
  10 SY-SZ-ID SY-SZ-ID [40] ; 
  10 AB0PW-SIZE-DEFAULT AB0PW-SIZE-DEFAULT [40] ; 
  10 ZZ-CHNG-CNT ZZ-CHNG-CNT [40] ; 
end // end AB0PW00

Record AB0PW01 type basicRecord
  10 AB0PW-MAX-FCTY-LINES AB0PW-MAX-FCTY-LINES ; 
  10 AB0PW-FY-FCTY-CD AB0PW-FY-FCTY-CD [100] ; 
  10 AB0PW-FY-FCTY-DESC AB0PW-FY-FCTY-DESC [100] ; 
  10 AB0PW-FCTY-DEFAULT AB0PW-FCTY-DEFAULT [100] ; 
  10 AB0PW-NEW-DEFAULT AB0PW-NEW-DEFAULT [100] ; 
  10 ZZ-CHNG-CNT ZZ-CHNG-CNT [100] ; 
  10 AB0PW-DELETED-IND AB0PW-DELETED-IND [100] ; 
  10 AB0PW-ROW-UPDATED AB0PW-ROW-UPDATED [100] ; 
end // end AB0PW01

Record AB0PW02 type basicRecord
  10 AB0PW-MAX-STYLE-LINES AB0PW-MAX-STYLE-LINES ; 
  10 AB0PW-FY-FCTY-CD AB0PW-FY-FCTY-CD ; 
  10 AB0PW-FY-FCTY-DESC AB0PW-FY-FCTY-DESC ; 
  10 AB0PW-FCTY-DEFAULT AB0PW-FCTY-DEFAULT ; 
  10 AB0PW-NEW-FCTY-DFLT AB0PW-NEW-FCTY-DFLT ; 
  10 AB0PW-FCTY-UPDATED AB0PW-FCTY-UPDATED ; 
  10 AB0PW-LINE-FCTY-CD AB0PW-LINE-FCTY-CD [100] ; 
  10 SY-STY-NBR SY-STY-NBR [100] ; 
  10 SY1SSTNM SY1SSTNM [100] ; 
  10 AB0PW-STYLE-DEFAULT AB0PW-STYLE-DEFAULT [100] ; 
  10 AB0PW-NEW-STYLE-DFLT AB0PW-NEW-STYLE-DFLT [100] ; 
  10 ZZ-CHNG-CNT ZZ-CHNG-CNT [100] ; 
  10 AB0PW-DELETED-IND AB0PW-DELETED-IND [100] ; 
  10 AB0PW-ROW-UPDATED AB0PW-ROW-UPDATED [100] ; 
end // end AB0PW02

Record AB0PW03 type basicRecord
  10 SY-STY-NBR SY-STY-NBR ; 
  10 SY1SSTNM SY1SSTNM ; 
  10 AB0PW-STYLE-DEFAULT AB0PW-STYLE-DEFAULT ; 
  10 AB0PW-NEW-STY-DFLT AB0PW-NEW-STY-DFLT ; 
  10 AB0PW-STYLE-UPDATED AB0PW-STYLE-UPDATED [40] ; 
  10 SY-SZ-ID SY-SZ-ID [40] ; 
  10 SY-SZ-ID-DESC SY-SZ-ID-DESC [40] ; 
  10 AB0PW-SIZE-DEFAULT AB0PW-SIZE-DEFAULT [40] ; 
  10 AB0PW-NEW-SIZE-DEFAULT AB0PW-NEW-SIZE-DEFAULT [40] ; 
  10 AB0PW-ROW-UPDATED AB0PW-ROW-UPDATED [40] ; 
  10 ZZ-CHNG-CNT ZZ-CHNG-CNT [40] ; 
end // end AB0PW03

//*** RECORD=VPKFTR01 ****
// ******************** saved forecast ************************
// 
// DB2 TABLE:           DACAST.VTRDFC01
// 
// COPYLIB MEMBER:      dvtrdfc01
// 
// I/O MOD:             vtrdfc01
// 
// KEY TO DB2 TABLE:    sy_sty_mbr
//                      sy_colr_cd_id
//                      xdm_dim_cd
//                      xwh_whse_cd
//                      xdv_div_cd
//                      xse_sesn_cd
//                      xsn_sesn_yr_rng
//                      af_mo
//                      xxx_sum_xot_cd
//                      xow_own_grp_cd
// 
// DATE CREATED:        1995
// 
// MAINTENANCE LOG:
// 
//   DATE    USERID     COMMENT
// --------  ------     ---------------------------------------
// 07/20/95  KJ         INITIAL RECORD CREATION
// 
// ************************
Record VPKFTR01 type basicRecord
  5 VPKFTR01-GROUP VPKFTR01-GROUP ; 
    10 VPKFTR01-KEY VPKFTR01-KEY ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 SY-STY-NBR SY-STY-NBR ; 
      15 SY-SZ-ID SY-SZ-ID ; 
      15 AB-TRN-TYP-CD AB-TRN-TYP-CD ; 
    10 SY-UNITS-PER-CASE SY-UNITS-PER-CASE ; 
    10 XXX-USER-ID XXX-USER-ID ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VPKFTR01

// CURRENT FACTORY
DataItem AB0PW-CURR-FCTY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CURRENT style
DataItem AB0PW-CURR-STYLE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DATA CHANGE FLAG
DataItem AB0PW-DATA-CHANGE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DELETED INDICATOR
DataItem AB0PW-DELETED-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// END OF CURSOR
DataItem AB0PW-EOC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// AB0PW-FCTY-DEFAULT
DataItem AB0PW-FCTY-DEFAULT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FACTORY INDEX
DataItem AB0PW-FCTY-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Row Updated
DataItem AB0PW-FCTY-UPDATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FY_FCTY_CD
DataItem AB0PW-FY-FCTY-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FY_FCTY_NM
DataItem AB0PW-FY-FCTY-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// KEY CHANGE FLAG
DataItem AB0PW-KEY-CHANGE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FY_FCTY_CD
DataItem AB0PW-LINE-FCTY-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MAX FACTRY LINES
DataItem AB0PW-MAX-FCTY-LINES smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// max styles loaded
DataItem AB0PW-MAX-STYLE-LINES smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Updated default value
DataItem AB0PW-NEW-DEFAULT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB0PW-FCTY-DEFAULT
DataItem AB0PW-NEW-FCTY-DFLT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB0PW-FCTY-DEFAULT
DataItem AB0PW-NEW-SIZE-DEFAULT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB0PW-FCTY-DEFAULT
DataItem AB0PW-NEW-STY-DFLT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB0PW-FCTY-DEFAULT
DataItem AB0PW-NEW-STYLE-DFLT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CURRENT PAGE NUMBER
DataItem AB0PW-PAGE-NUMBER smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// BACKWARD POSIBLE
DataItem AB0PW-PF-BACK-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DELETE PF KEY SELECTED
DataItem AB0PW-PF-DELETE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FORWARD POSIBLE
DataItem AB0PW-PF-FWRD-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Row Updated
DataItem AB0PW-ROW-UPDATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SCREEN INDEX
DataItem AB0PW-SCREEN-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB0PW-FCTY-DEFAULT
DataItem AB0PW-SIZE-DEFAULT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SIZE INDEX
DataItem AB0PW-SIZE-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SIZE INDEX
DataItem AB0PW-SIZE-INDEX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB0PW-FCTY-DEFAULT
DataItem AB0PW-STYLE-DEFAULT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SIZE INDEX
DataItem AB0PW-STYLE-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Row Updated
DataItem AB0PW-STYLE-UPDATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ROW UPDATED OK FLAG
DataItem AB0PW-UPDATE-SUCCESSFUL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VALID FACTORY IND
DataItem AB0PW-VALID-FCTY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VALID size ind
DataItem AB0PW-VALID-SIZE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// VALID style ind
DataItem AB0PW-VALID-STYLE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group item for record level
DataItem VPKFTR01-GROUP char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group key
DataItem VPKFTR01-KEY char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

